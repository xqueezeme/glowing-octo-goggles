{
    "title": "A Welcome Home Surprise Pt. 02",
    "pages": [
        "Thank you for all the feedback on Part 1 ... here's a new story of David and Christy, for those who said they'd like to hear more!\n\n*****\n\nThe dishes in the sink aren't going to clean themselves, I think to myself with a sigh. \n\nDavid and I had had a group of friends over for dinner the night before. The talking and laughing - and wine drinking - had gone on so late, that I didn't have the energy to do a single thing after everyone left. I'd just stacked everything to the side of the sink, and carried myself off to bed. Poor David had indulged in a few too many glasses of wine and was torn between needing to sleep and wanting to make love to me. \n\nSleep won out. I didn't mind. We'd been having a pretty exciting time of it lately. After the \"welcome home\" surprise I'd given him after his last business trip a few weeks ago, we'd been pulling out the new toys every night or two. He was loving it and I was enthralled by his excitement and passion. \n\nI stand at the sink, slowly washing glasses and plates and cutlery, thinking back on particular moments and scenes from the last few times we'd enjoyed ourselves. If someone had asked me a month ago if the image of my husband on his knees in front of me, ass lubed up and ready for my strapon toy, would arouse me, I'd have laughed and thought they were joking. \n\nBut it did arouse me. A lot. As my hands dip in and out of the soapy dishwater, I can't stop thinking about how much pleasure I've given him lately - and how much pleasure it gave me to be able to do so. \n\nHe'd made a joke the day before, as we were getting ready for our guests, that maybe I should consider tying him up to make sure he did just what I wanted him to. I had grinned and quirked my eyebrows. \n\n\"Hmm. Something to consider,\" I replied. \n\nAnd that's where my mind was beginning to wander. What would it be like to tie his wrists to the corners of the bed posts? To spread his legs open with some soft silky rope tied around his ankles? \n\nIf he wasn't sleeping off the extra glasses of wine, I might just go in there and do it right now. At least he couldn't put up much of a fight in his current condition, I chuckle to myself. \n\nI'm so deeply in my own imagination that I don't hear David until he's right behind me and I suddenly feel his big warm hands cupping my ass. I'd like to say I'm wearing something wildly sexy but I've got on a big t-shirt, which hangs just past my ass, and plain white panties. Still, it doesn't seem to be bothering David. He always did enjoy simple things. \n\n\"Good morning, baby,\" he says, nuzzing in at my neck, and squeezing harder at my ass. \n\n\"I'm surprised you're up,\" I reply. \"I was going to let you sleep all day if you wanted to.\" \n\n\"How could I sleep all day, knowing you're in here half naked?\" he says with a laugh in his voice. \n\nI turn my head towards his, craning to see his face while keeping my wet hands in the sink. \n\n\"Well, you've got a point there. As it happens I was just pondering what I could do to you, totally naked in bed, in your weakened hangover state,\" I say and wink. \"Figured I could maybe ... have you tied to the bed posts before you even knew what I was up to.\" \n\nHis face freezes, but his eyes tell the truth - they light up like fires. When I feel his cock press into my rear, its hard length pressing along my ass crack, I know for sure he's excited by the idea. \n\nMy hands have stopped washing, one plate still half in and half out of the water, my head turning to the side. \n\nHe kisses me, hard, pressing again with his hips so I can feel him. \n\n\"Funny,\" he says as his lips come away from mine. \"It would seem you're the one in a slightly compromised position at the moment.\" \n\nHe nods towards my hands in the sink, noting the fact that I haven't been able to properly turn around or move my body. \n\nI hadn't expected a turn of events like this, but I suddenly feel a pulse between my legs, a deep low throbbing hum in my abdomen. \n\nI nod, slowly, eyes pinned on his. \n\n\"Yes,\" I say. \"I think I am. Compromised, that is.\" \n\n\"Christy,\" he says. \"You've been fucking the hell out of me for weeks. I need to have you, right now.\" \n\nI nod, like I'm hypnotized. I pull my hands out of the water, dry them on a nearby cloth, and he immediately takes me by the hand and pulls me down the hall back to our bedroom. \n\nOnce inside, he starts kissing me again, passionately, his tongue practically fucking my mouth the way he'd flick and press and thrust his tongue into my pussy. \n\nHe grabs at the hem of my t-shirt, and yanks it up, tossing it aside. Next my panties, fast and quick, are pulled down my legs. He stands back a moment, looking at me. I may not have the perfect body but I know what he's thinking: perfect. In an instant, he's all over me, frantic, lips kissing along my neck, to my nipples, down my tummy, pushing my thighs to make me step wide enough to allow his face between my legs. \n\nIn a minute, I'm cumming hard, his tongue lapping between my pussy lips, his nose pressing against my clit. He's not holding back at all. He's wound up like a man who's been starving for weeks, months, years. I love the feel of his head between my legs, his moans trembling out through my pussy. \n\n\"Jesus, David! Fuck! Fuck! FUCK!\" I'm bucking and pressing into him now, cumming hard and fast. I can feel my wetness, so much of it now that half is slipping past his open mouth and dribbling along the insides of my thighs, on his cheeks, and chin. \n\nSuddenly he's on his feet again and I can feel myself beginning to tremble, like my legs won't hold me for much longer. \n\n\"Get on the bed,\" he says. \"On your tummy. Now.\" \n\nI haven't heard his voice this dominant and intense in weeks. I'm so overwhelmed in my arousal that I don't even think twice about what he's said and immediately follow his instructions. \n\n\"So you thought about tieing me up?\" he says. \"You will, I need you to. But not right now. First I'm going to tie you up, so you know how it feels, what I want, what I need. I'm going to tie you up and I'm going to fuck your ass and I'm going to make you beg me to do it.\" \n\nThat freezes me for a second. Despite our recent forays into ass play with him, he's never tried to do the same to me, not in all the years we've been married. Sure, it came up as a topic a few times when we were younger but I'd always said no, I wasn't interested. I'd heard too many stories of how much it hurt from girlfriends, and couldn't even begin to imagine why anyone would want to. But now ... well, David enjoyed it a lot. More than I ever would have expected. If he did, wasn't there a good chance I would too? I am suddenly overwhelmed by the idea, so aroused I can feel my throbbing heart beat through my pussy. Involuntarily, my ass tightens up, my cheeks squeezing together. \n\nDavid notices it immediately. \n\n\"Oh you like that idea? Good.\" \n\nI don't respond. I am tongue-tied, suddenly desperate for him to start doing whatever he was going to do. I keep my eyes shut tight, and listen to him as he moves around the room. \n\nSuddenly I feel him take one wrist and I look up to see him with a long length of black silk. He knots it around my wrist, and then pulls it snug to the bed post on the same side. He circles around the bed and repeats it on the second side. \n\nThe ties are snug but not uncomfortable. There's certainly no way I can get out of them, and I have limited movement, even with my legs free. \n\nHe climbs up on the bed behind me, and I feel his hands grip at my hips and pull me upwards. \n\n\"On your knees,\" he says. \n\nMy head has to stay low, turned to one side, to accomdate the tied wrists. My tits are pressed to the bed too, and only my tummy and ass are lifted up at an angle behind me. \n\nI've been in this kind of position before, but not restrained. Suddenly I feel more exposed and naked than I ever have before. \n\nHe moves so that I can see him. \n\n\"Baby,\" he starts. \"Fucking hell, you look so good like this. I've wanted to do this for a really long time. And later, I want you to do it to me, ok?\" \n\nI nod, still hypnotized. \n\n\"Do you like this? Are you ok?\" he says, checking in. I can tell that my silence is suddenly disconcerting. \n\n\"I like it very much, David. Don't stop. Please.\" \n\nHe grins, nods, and reaches down to the side of the bed. \n\nHe pulls up a very tiny plug. I only know what it is because I'd looked at a variety of them when I went to the toy store during his business trip. \n\n\"We're going to do some anal training. It would be better to do this over a period of time, a few days or a couple weeks but ... fuck, I don't think I can wait now. But I'll get you ready for it before I fuck you, ok?\" \n\nHe shows me the small plug. Then brings out two more, each the same size and style but bigger and bigger. The last one looks about the width - though shorter - than his own cock. I can feel my ass tightening and clenching and my pussy getting wetter. I suddenly want this more than I'd ever thought I would. \n\n\"I'll start with this little one, then the medium one, then the large one. Then I'm going to slide my cock into you. Then I'm going to cum in your ass.\" \n\nMy eyes flutter, I feel so aroused I might pass out from it. \n\n\"You like that idea, don't you,\" he says. \n\nI can tell by the tone of his voice that he's getting incredibly worked up. As much as he loves it when I'm dominant over him, he clearly has his own dominant streak - and I'm loving both sides of this new adventure with him. \n\n\"Yes, David. I do. Please. Don't make me wait. Just ... please, please start.\" \n\nHe moves behind me, and for a few minutes I don't feel anything but his breath close to me. \n\nThe anticiptaion is making me drip, every muscle in my lower body tensed and waiting. \n\nFinally his tongue presses in at my clit, and I jump, howling and moaning. \n\n\"FUCK!!\" \n\nBefore I can get accustomed to it, though, he starts licking upwards, along my pussy lips, further and further up till he's just about at the spot where normally he'd stop. \n\nBut he doesn't stop. His tongue continues up, and flicks over my ass pucker. \n\nJesus Christ. I've never felt anything like it. \n\nHe puts his hands on either cheeks - I do have a rather large round ass after all - and pulls me open to get in further, his tongue now pressing right in, the tip firm and hot and wet against my little hole. \n\nBefore I know what's happening, I feel him slide two fingers inside my pussy, and start slowly pumping. His tongue matches the speed. It takes about 30 seconds and I'm cumming hard. \n\n\"DAVID!! FUCK, oh my god, baby, fuck, your tongue feels so good, don't stop, don't stop, don't stop, DON'T STOP!\" \n\nI'm wild now, I don't even know what I'm saying. \n\nI feel his tongue lift off for one second and I'm about to protest but I feel a sudden pressure at the spot where his tongue has left me wet. I realize he's got the first plug and he's slowly pushing it in. \n\n\"Baby, oh god,\" I say. \n\nHe's obviously lubed it up a little and it slips in quickly. \n\nIt feels strange, different, an odd fullness - but combined with his fingers in my pussy, I know I'm on the verge of cumming again. \n\nI latch on to something he said earlier, and get my brain organized enough to ask. \n\n\"Anal training? For a few weeks? But ... I didn't do anything like that to you? I just used the one plug and then ...that big toy? Was that wrong? Did I ... hurt you?\" I ask, suddenly afraid that I went too fast. \n\n\"No\" he replies, his voice heavy with lust. \"I had my own plugs I'd been using for a while, baby. I was already ready for you.\" \n\nThe idea of him playing on his own, masturbating with his ass filled and his hand on his own cock, sends me through the erotic roof and I suddenly cum hard, bucking again, my hips straining to push back against his hand. \n\n\"Really? Jesus, David. That's so ... hot, that's so exciting.\" \n\nHe chuckles, low and quietly, his fingers still pumping into me. \n\n\"I wasn't sure what you'd think of it so ... I never mentioned it. I'm so glad you found my porn history,\" he says. \"Shit, never thought I'd say those words.\" \n\nWhile he talks, he keeps fingering me, the plug in my ass, his other hand stroking over my ass cheek. \n\nSuddenly he says: Enough talking, baby. You need fucking. \n\nI arch and moan and his hand lifts up off my ass and comes down with a spank across my cheek. It stings but feels good, and the edge of his hand connects with the plug, making it move inside me and sending a jolt of electricity through me. \n\n\"Fuck, fuck, fuck, fuck. Oh god, oh god, oh god!\" I seem incapable of intelligent thought, and jsut keep up a steady stream of swearing, as he keeps fingering me. \n\n\"I'm going to jump ahead a little,\" he says. \"And use the big plug next. Let's see how you do.\" \n\n\"Yes, fuck, yes. Use it baby. Fuck, put it in my ass.\" \n\nI'm wanton and out of control. I want that plug badly, but even more, I want his cock. \n\nHe slides the small one out, and the feeling of it sliding out sends me into another orgasm. \n\n\"Oh oh oh oh oh ohhhhh ohhhhh oohhhhhhh, FUCK!\" \n\nBefore I can even come down from it, he's got the big plug - also lubed \u2014 sliding into my hole. \n\n\"Uhhhgggg, hmmm, unnnggggggg.\" I know the noises coming out of my mouth sound practically animal at this point, but I'm so lost to the sensation of it that I don't care. I'm pushing back against him, feeling myself stretched over the largest part of the plug. It feels amazing, and when it slides home, I think I'll go crazy with the feel of it. \n\n\"DAVID! Fuck, I need you. I need you. Fuck me please!!\" \n\nHe pulls his fingers out of my pussy, and I can feel is cock head lining up between my pussy lips. Without slowing, he plunges into my dripping pussy. I'm so wet there's no resistance. \n\nHe groans. \n\n\"Shit, Christy, you feel tighter with your ass plugged, fuck this is so good,\" he keeps pumping me, harder and harder, a loud smacking noise each time his hips connect with my ass cheeks. \n\nThe plug must be pushing down on his cock because every time he slides into me, it feels like he's rubbing harder against my gspot than he would normally in this position. I've had a few gspot orgasms, but not many ... still I recognize the feeling as it builds. \n\n\"David, fuck, fuck, fuck, keep going, harder, fuck me harder!\" \n\nSuddenly I feel a release, and my legs are shuddering under me, wetness pouring out of me. \n\n\"Fuck, Christy, fuck I think you just squirted all over me.\" \n\nI'm so lost in the sensations that I can barely feel the rush of wetness between us. It feels like a lot, pouring out of me as he keeps pumping with his cock. \n\n\"David, please, fuck, please. I need your cock in my ass now. NOW.\" \n\nHe doesn't need to be asked twice. \n\nHe pulls out of me, and grabs the end of the plug and slides it out. The lube from the plug makes me feel slick and I know his cock is coated in my pussy juice. \n\nHe lines his cock head up to my asshole and then puts one hand on each hip. \n\n\"You're ready?\" he asks. But it's more like a demand than a question and before I can say anything he starts pushing forward into me. \n\n\"Oh god oh god oooooohhhhhhhhh GOD!\" \n\nHe is much bigger than the big plug, bigger than he's ever felt in my pussy. I can feel my asshole stretching around his shaft, being filled up. He slides slowly all the way in, till the fronts of his hips are pressed tight to me. \n\nI'm shaking, vibrating, getting used to the feel of him. \n\n\"Do you love my cock in your sweet ass, baby? Do you? Tell me how much you love my big cock in your tight virgin ass? It feels so fucking good, so fucking goddamn good.\" \n\nI groan, I barely seem able to speak.\u2028\n\n\"Yes, yes, yes, yes, yes. I love it. Fuck me fuck me fuck me. Fuck my ass baby, fuck me!\" \n\nHe starts thrusting, pulling out halfway then sliding home again. I can feel an orgasm building again, different, uncontrollable. This feels so good, I feel so full, and ... naughty, too. It feels wild and naughty and erotic to have his thick cock inside my ass, so much better than I thought it would be. \n\n\"I'm going to cum, David, I'm going to cum, I'm going to ...\" \n\nAnd then it hits me, a huge orgasm shaking through me. At the same time, I feel his cock get a little harder, a little bigger, just like it does before he's going to cum and the idea of him cumming in my ass sends me higher still. \n\n\"FUCK!!\" \n\nWe're both swearing and screaming and groaning at the same time, him fucking into me, me pumping backwards onto his shaft, cumming hard together. \n\nIt takes another 30 seconds for him to finish completely, for his thrusts to slow. He leans over me, resting and I slowly let my knees slide backwards so I lower to the bed. He stays inside me, laying over me, kissing my back. \n\nAfter a minute or two of silence, I finally am able to speak. \n\n\"David. That was ... oh my god. That was incredible.\" \n\nI can feel him smiling against my back. \n\n\"Good. I plan to do it on a regular basis now,\" he says with a laugh. \n\nI laugh with him. \n\n\"That works out well. I was just thinking that I plan to ask for it on a regular basis now. You know, it felt great having your fingers in me and the plug, like being fucked in both at the same time. Too bad you don't have two cocks,\" I say with another laugh. \n\nHe's quiet for a minute. \n\n\"I don't have two cocks but ... it's not outside the realm of possibility to ... well ... find another willing cock.\" \n\nA spike of thrill and nerves shoot through me. \n\nI reply with a \"hmmmm\". \n\n\"That's not a no,\" he says. \n\n\"It's not exactly a yes, either,\" I reply. \"But ... it's an interesting idea. Maybe.\" \n\n\"Yes, maybe,\" he says. \"Listen, we'd better go get something to eat. I need your energy up if you're going to tie me up later and do to me what I just did to you.\" \n\n\"True. Get off me then,\" I say, and as I feel him slide out of me I think I could almost cum again if I wanted to. \"Jesus, David, that feels so good.\" \n\n\"I wonder if it tastes good, too,\" he says.\n\nAnd, still tied, now laying on my tummy, I feel his head dip down and lick across my tender ass. \n\n\"Tastes incredible,\" he says, low and lusty again. \"Breakfast can wait.\""
    ],
    "authorname": "CarsonM",
    "tags": [
        "anal",
        "wife",
        "plug",
        "strapon",
        "toys",
        "ass"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/a-welcome-home-surprise-pt-02"
}