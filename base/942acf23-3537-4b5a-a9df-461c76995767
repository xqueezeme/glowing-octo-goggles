{
    "title": "Yours Ch. 05",
    "pages": [
        "This has been my longest break between chapters. I've been getting a huge amount of messages about when this would finally update, and I haven't been able to reply to any of them because honestly I didn't know when I'd be able to finish this chapter. I won't bore you with the details, but I've been going through some personal, real-life stuff that's made it difficult for me to write at the same pace I usually do, and I'm not the fastest writer at the best of times. \n\nI'm trying to be better with it, but even if my updates take a long time I want to make it clear that it's unlikely I'll stop updating altogether, and if I'm ever considering ending the series I'll definitely let you all know, so don't worry. \n\nAs always, all characters involved are over 18 and fictional, and I'd very much like to hear what you think of this chapter. The comments of all the readers of this series, those that love it, hate it, and those who don't really care, are all very helpful to me. I'm always trying to improve how I write, and feedback from readers is a huge part of that. \n\nThanks for reading. \n\n* \n\nI was sitting at the desk in my room with a picture of Jessica on my laptop screen. \n\nIt was from her page on the school's news site. It had her listed as the founder, and the editor-in-chief. It went on to list about a dozen other groups she belonged to, including two book clubs, a chess club, and the Student's Political Union, whatever that was. It was no wonder she was stressed all the damn time. \n\nI'd decided to check out the site and a few of the articles she'd written. She was surprisingly eloquent, and her intelligence really showed in her writing style. I suppose you don't get to know that sort of thing about a person when the only communication you have for a decade is in the form of insults and threats. \n\nBut I didn't like this picture of her. \n\nI looked at it for a while, trying to decide why it bugged me. She looked as beautiful as always, smiling at the camera, her bright green eyes staring in to mine. \n\nThe smile, I realised. It was a fake smile. A common, plastered on, professional looking little smile. Believable, but fake. It wasn't her irritating smirk, or her wide, bright look of joy. It wasn't the sudden smile that comes from a surprise, that almost always starts a laugh. Her eyes weren't shining. \n\nI closed the page and started to idly wonder if she'd been in a bad mood the day it was taken. Or maybe she just couldn't smile easily. I know for me, I always needed to remember something funny to put me in the mood for a family picture, so it would look real. \n\nIf I was taking her picture, I probably would have made her laugh right before taking it. \n\nThen, suddenly, I remembered the pictures I had taken of her. \n\nI pulled out my desk drawer and took out my camera, right where I'd left it after snapping some shots of her. \n\nI quickly found the right cable for it in the tangled ball of wires in my other drawer and hooked it up to my laptop, opening the images in a folder. \n\nThe first one was of my family by the mantel. I shifted through a few more from that day, us laughing and smiling and playing around. Next were a few shots I took outside, to see how the pictures would look with more exposure. There a few more random pictures until I saw the first one of Jessica. \n\nNaked, blindfolded, and tied to my bed. It was quite an incredible picture, the lamp providing enough light to make out most of the detail of her body, but leaving enough darkness and shadow to leave some mystery. \n\nI made the image full screen, and stroked my growing cock in my jeans. I kept moving through the pictures, seeing the close-ups I'd taken on her face, on her pussy. She was incredible, so unbelievably beautiful. The camera really was great quality, and the pictures were of amazing definition. \n\nThe last picture actually made me gasp. I'd forgotten about this one. It turns out I did try to get her to smile, except I just ordered her to. \n\nShe looked panicked, afraid, yet she was blushing with clear arousal. A nice, big, fake smile on her lips, but terror in her eyes. \n\nFor some reason, it didn't bother me in this picture like it did with the other one. \n\nJust as I was enjoying my masterpiece, Rose flung open my door and stomped into my room. Luckily my screen wasn't facing the door, so I quickly clicked away from the pictures and brought up something innocuous. \n\n\"Hey little brother.\" she said. \n\n\"Hey little sister.\" I answered trying not to sound guilty. \"Ever heard of knocking?\" \n\n\"Sorry.\" she said absently, walking over and leaning on the edge of my desk. She glanced around my room, probably realising she hadn't been inside it for years. She looked at the books on my shelf, reading the spines. \n\n\"Uh... not that I don't love you visiting but... what's up?\" I asked. \n\n\"Oh, yeah.\" she said, remembering why she came in, \"We're going to Jessica's for lunch.\" \n\n\"Really?\" I asked. \n\nIt wasn't totally unusual, but we hardly ever went to Jessica's place, she always came here. And it was a Friday, which were usually nights she took for free time, but I hadn't talked to Jessica much since she got back from Paris, after that night. She'd spent every day studying her ass off for our January exams. But now we were finished with them, and just had this last weekend before school started again. \n\n\"Yep.\" she said, \"Aunt Alice and Uncle Bob are both out of the house, for work or something, so I invited us over.\" \n\n\"Aunt Alice doesn't have a job, so it's probably not for work...\" I said. \n\nWe weren't related to them, but Jessica's parents had been such a big part of our lives growing up that we always just referred to them as our aunt and uncle. I'd grown out of it at some point, preferring to just call them by their names, but Rose kept it up. \n\nShe knew I thought it was a little childish, so to prove me wrong she stuck out her tongue. \n\nI laughed at her, and she grinned. \n\nThings had never been better between me and Rose. To an outside observer, it would have been impossible to guess at the years of tension and difficulty between us that preceded these few months; things were now as simple and easy as when we were kids. \n\n\"Ok, so get ready.\" she said, standing up, \"We're leaving in like twenty minutes. Oh, and we'll probably be staying over. It's going to be so much fun, trust me.\" \n\nShe walked out, and I breathed a sigh of relief. It was unlikely she'd have seen them, but even having the photos open on my computer was making me tense. \n\nI copied the images off the camera's memory card and deleted the originals. I saved them in a well hidden, innocuously named folder, the same one I kept my porn in. \n\nAfter a second thought, I created a new folder and hid it even better. \n\nAfter a third thought, I used an old program to password protect and encrypt the folder. \n\nI used to be really interested in to computers; the security on my little laptop could probably rival that on whatever computers the FBI were using. I knew it was far more than I would ever realistically need, but for some reason it made me feel better. Apart from porn, these pictures were the only thing on it that I would even want to hide. \n\nI unplugged the camera, feeling better about having the photos secure. \n\nSo... I'd be spending the night at Jessica's, it seemed. I was a little annoyed at suddenly being forced in to this, but it occurred to me that Rose probably didn't even see it that way. She didn't ask me if I wanted to go, but at the same time she didn't really tell me to go either, not directly. She just let me know what was going to happen; that I was going to have lunch at Jessica's house, then sleep there. As simple as that. \n\nMy twin sister had a very strong personality. I smiled, wondering if she was even knew how controlling she was being. \n\n== \n\nWe took the short walk over to Jessica's, and made some sandwiches for lunch. \n\nWe watched TV and talked about nothing important for hours. Jessica seemed a lot more relaxed now that she'd allowed herself a whole weekend away from her textbooks, and unlike Rose and I, she didn't seem at all concerned about what the results of the tests would be. She'd ace every single one, as always. \n\nAround five we ordered ourselves a huge pizza, and Jessica brought in a bottle of beer for each of us that her dad had left. In all, it was a very enjoyable day. \n\n\"Well, this has been fun.\" said Rose suddenly, after wolfing down her last slice. \n\n\"Are we leaving?\" I asked as she stood up. \n\n\"Well I'm leaving.\" she answered, \"I've got plans. You know, things to do, people to see.\" \n\n\"Wait... are you serious?\" I asked, \"You were so excited for this, and now you're leaving?\" \n\n\"Oh relax!\" Rose said cheerfully, \"You'll have plenty of fun here with just the two of you, I'm sure.\" \n\nI was actually expecting something like this. I guessed she'd taken at least an hour to work up the courage to propose this to me. When I saw her hesitating about something, I thought that whatever she was going to be say would be a big ask, and I'd assumed I was wrong. After all, being here instead of our place was no problem at all. Now I saw her real plan. She wanted to leave the two of us together. \n\nAs far as she knew, Jessica and I had barely been in the same room together without her for more than a few minutes at a time. Of course, she didn't know what we'd normally be planning for a Friday night. \n\n\"When are you coming back?\" Jessica asked. \n\n\"Not sure.\" said Rose, putting her coat on, \"Just hang out here... I'll call you and let you know what's happening.\" \n\n\"Um, bye I guess.\" said Jessica. \n\n\"Have fun you two.\" said Rose, leaving the room. \n\nJessica and I sat in silence as we heard her leave the house, then she giggled nervously as we heard the car start up and drive away. Rose wouldn't be coming back. \n\nI sighed and stretched out along the couch. Rose's sudden departure had left a somewhat awkward atmosphere. Jessica was smiling at me. \n\nAnticipation, happiness, excitement. Nothing fake about this smile. \n\n\"So... I guess it's just the two of us.\" she said. \n\nI didn't answer her. I just sighed again and found the remote, then flicked on the TV. It was already dark outside, and we hadn't turned any lights on yet. Jessica stood up and started cleaning around us, lifting the empty pizza box and beer bottles. \n\nI was weirdly pissed off with Rose. \n\nShe wasn't even trying to be subtle anymore; she was trying to force Jessica and I to be friends by making us spend time alone. I smirked to myself at what she'd think about how we usually spent our alone time together. It was funny in an ironic kind of way, but Rose's attitude still made me angry. \n\nShe didn't even seem to care why things had changed between me and Jessica. She didn't ask me about it, or seem to want to know at all. She just went along with things, hoping that nothing would happen to shake it all up again. I could see it when the three of us were together, the way her eyes would dart between us, the way she'd try to fill the lulls and silences in our conversations. I ignored it, but there were all these little signs that she was still so nervous about us, even though it had been months since all this had started. \n\nI frowned, trying to ignore the anger rising in my chest. Jessica had bullied me for years, both openly and in private. Rose didn't know half the things that had been done to me by her best friend, and she didn't want to know. She stopped trying to comfort me or take my side some time around our 14<sup>th</sup> birthday, and now she was just clumsily and opportunistically trying to force a deeper relationship. \n\nJessica finished cleaning up pizza box and empty bottles and walked back into the living room. She flounced down beside me and smiled. There she was. My worst nightmare. My new best friend. \n\n\"So what do you wanna do, Sir?\" she said seductively. \n\n\"I wanna watch TV.\" I answered coldly. \n\n\"Oh... Ok.\" she said, disappointed. \n\nI surfed through the channels, ignoring her and not bothering to fill the silence. She didn't say anything either, but she obviously wanted to. She kept turning to look at me for a few seconds before glancing back at the screen. There wasn't anything good on, and I couldn't shake my sour mood. \n\nIt had come out of nowhere, this feeling, but it wouldn't fade. Did Rose really think this would be enough? Just get us more used to each other and forget it had all happened? Did she really not care about the truth? \n\n\"Do you still dream about me?\" I asked suddenly. \n\n\"Do I... what?\" she asked. \n\nI turned to look at her, keeping emotion from my face. \n\n\"You told me once that you had sex dreams about me. Does it still happen?\" I asked. \n\n\"Uh... yeah, sometimes.\"she said. \n\n\"Tell me about them.\" I ordered. \n\n\"Um... really?\" she said nervously. \n\nI tilted my head, but didn't reply. \n\nShe'd blurted out the stuff about the dreams before we'd even had sex, when I'd just given her a taste of the pleasure she was capable of then left her without it for a few weeks. I could tell she'd regretted it, but I wanted to hear more. I wanted to embarrass her again. \n\n\"Ok...\" she said quietly after a few seconds of silence. \"Well, the last one was a few weeks ago, when I was in Paris. I'd bought a... you know, some underwear to wear for you and... and...\" \n\nShe trailed off, looking away. \n\nI kept looking at her, but turned the TV down. She was blushing. \n\n\"Go on.\" \n\n\"When I went to sleep, I was thinking about what you'd think when you saw me in it. What you might... do to me.\" \n\nShe met my eye again. She swallowed nervously and let out a heavy breath. \n\n\"I don't remember much of the actual dream, but... when I woke up I was all...wet, and I... I missed you.\" \n\n\"What did you think I'd do?\" I asked. \n\nShe bit her lip and looked away again. This was turning her on, being forced to share her private, shameful thoughts with me. She tucked her legs under her and got onto her knees, curling up as if trying to hide. \n\n\"I thought you'd...\" \n\nShe stopped. \n\n\"Thought I would what?\" I said sternly. \n\n\"Grab me, and... and kiss me. Bite... bite my lip.\" she said, a seductive sigh in her voice. \n\nShe was already so wound up, so ready for me. Just a few seconds of conversation and she was willing and eager. What a beautiful slut, I thought. A slut that could scream obscenities at the top of her lungs while having sex, but blush just talking about it. \n\n\"Hm.\" I answered, turning back to the TV. I turned it up and started to flick through the channels again. \n\nShe started to say something, then stopped. Out of the corner of my eye I saw her lean towards me. She tentatively put her hand on my chest, and leaned in to kiss me. \n\n\"Stop it.\" I said, without looking at her. \n\nShe froze for a second, then quickly pulled away. \n\nAgain, I ignored her and stayed focused on the TV. She didn't wait too long before breaking the silence. \n\n\"Are we going to...?\" she asked quietly. \n\nI sighed, but didn't answer. \n\nI could see her start to fidget nervously. She moved around on the couch, trying to get comfortable. \n\n\"I...\" she said softly, but stopped herself again. \n\nI slowly turned to look at her. She was up on her knees, facing me, with her hands folded in her lap. She looked sad. Sad and... lost. \n\n\"You want me to tell you what to do.\" I realised aloud. \n\nShe nodded, her eyes wide. \n\nUsually when it came to sex, Jessica knew what she was doing at every point, because I told her. Leaving her like this was literally the opposite of what she'd confessed to liking about submitting to me, no instructions or commands, unsure of what she should do. \n\n\"Get me a drink.\" I said, once again turning away from her. \n\nShe quickly got up off the couch and walked into the kitchen. \n\nI didn't watch her go. \n\nShe walked back in a few minutes later and handed me an open beer, which I took without looking at her. \n\nShe moved to sit down, but I stopped her. \n\n\"No.\" I said calmly. \n\n\"What?\" she asked. \n\n\"Sit on the floor.\" I ordered. \n\nI was in a shitty mood, and I wanted to exert some control over her. \n\n\"Yes Sir.\" she purred. \n\nI was sitting on the right side of the couch in front of the TV, and she knelt on my right, looking up at me. \n\nI took a sip of beer and went back to channel surfing. I felt her slowly run her hand up my leg towards my knee. \n\n\"Stop it, we're not doing anything.\" I said. \n\n\"Uh, so why am I down here?\" she asked. \n\n\"Because I want you to sit on the floor.\" I said coldly. \n\n\"I... Are you serious?\" she asked after a few seconds. \n\nI ignored her. \n\n\"You seriously just want me to sit on the floor?\" she asked. \n\n\"Yes.\" \n\n\"Why?\" she asked, \"This is stupid.\" \n\n\"You said you would do what you're told.\" I said, keeping my voice calm. \n\n\"Well... yeah, I will.\" she said. \n\n\"So do this.\" I said, staring into her eyes. \n\nShe looked up at me for a few more seconds before pouting and turning away from me, towards the TV. She crossed her arms and angrily kicked her legs out from under her, choosing not to kneel. But this didn't bother me. She was sitting at my feet in her own home. She was humiliated. \n\nAfter a few minutes, she turned to me again. \n\n\"I'm not going to just sit here while we watch TV.\" she said angrily. \n\n\"Yes you are.\" I said simply. \n\n\"This... this is...\" she stuttered, \"You can't just...\" \n\n\"Jessica.\" I said sternly, \"This isn't a debate. This is where you're sitting tonight, because I want you to. That's it.\" \n\n\"That's just it, is it?\" she scoffed. \n\nI slowly sipped my beer. \n\n\"That's it.\" I said. \n\nShe glared at me, and for a second I was sure she was going to stand up and storm out. I wouldn't have minded, really. But something inside her seemed fold, and she let out a long, frustrated breath. She turned around and crossed her arms angrily, pushing her back against the couch. \n\nI finally found something on TV worth watching, but I kept glancing down at her. She seemed to slowly relax, and after a while even seemed comfortable down there, sitting at my feet. \n\nWhere she belongs, I thought with a smirk, trying not to laugh at how much like a cartoon villain that made me sound. \n\nAnd just like that, I was in a good mood again. Nothing like humiliating the source of your anger to help you get over it. \n\nI decided to reward her for her obedience. She stiffened at my touch, but all I had to do was run my hand through her hair and I could see her relax again. I kept stroking her, sometimes just sliding along her hair and sometimes gently massaging her scalp with my fingers. \n\nThe show I'd settled on was some sort of real life cop drama which I found interesting. I was stroking her for a while, just enjoying the feeling of dominance and watching the TV, when she let out a little moan of pleasure. \n\nI smirked, and swept her hair back forcefully before increasing the strength of my grip. Again, as I stroked her she sighed with pleasure and leaned her head against my leg. \n\n\"See?\" I said gently, \"Isn't it easier if you don't question what I want you to do?\" \n\nShe turned to look at me, frowning. \n\nI smiled. \n\n\"You can just do what you're told.\" I said, \"You don't have to think, or ask questions. Just do it.\" \n\nHer eyes widened slightly, and again I stroked her hair. \n\n\"I mean, that's what you want, isn't it?\" I asked. \"Not having to think, or make your own decisions. You just want some orders to follow.\" \n\nShe didn't respond, and she didn't turn away. She seemed surprised at what I was saying. \n\n\"If I want you to sit at my feet because that's where I feel you belong, you just do it.\" I said, \"Right?\" ",
        "She nodded, her eyes still wide. \n\nI ran my fingers down her face, and cupped her jaw. I pressed my thumb against her lips and she opened her mouth to gently lick the tip. I pushed it in and she immediately began to suck and lick it seductively. \n\nMy cock twitched at her total submission. I gently thrust my thumb in and out, sliding it along her tongue. She opened her mouth wide and swirled her tongue around it, as if to show me what my cock was missing. \n\n\"Clothes off.\" I said, trying to keep my voice steady. \n\nShe smiled and immediately yanked off her t-shirt, and she didn't even bother to stand up to yank off her jeans and panties. After that she whipped off her bra and knelt in front of me, her head between my legs. \n\nI slowly unzipped my pants and pulled out my semi-hard cock. Wasting no time, I grabbed her by the hair and yanked her forward. She moaned with lust as she took me into her mouth and started to pleasure me. \n\nI sighed loudly and leaned back, running my fingers through my hair. It was almost worth keeping her waiting just for the feeling of relief I got from finally letting her touch me, even without the added bonus of frustrating her. \n\nShe was on top form tonight, using every trick she knew to worship my rock hard cock, as well as a few new ones. Every now and again she would forcefully flick her tongue against the head of my cock, so hard it was almost painful, but them immediately give a long, slow lick before sliding me into her throat. She started to do this over and over, a quick routine that quickly became practised. The second I was getting used to the feeling, however, she slid my shaft out of her mouth and gripped the head hard, slowly jerking it while licking the base. \n\nWhere did she learn this stuff? Seriously, I'd watched porn specifically dedicated to impressive blowjob technique that didn't have stuff like this. I guess that's what happens with a creative, intelligent girl who genuinely wants to pleasure you. \n\nShe reached in and wrapped her soft fingers around my balls, and gently pulled them out of my underwear. She quickly pulled them into her mouth and licked them, and again my mind was overwhelmed with the sudden pleasure. \n\nI lay back and sighed again, but I jumped with surprised when my phone started to vibrate in my pocket. \n\nI frantically pulled it out while Jessica backed away from me. It was Rose. \n\nI thought for a brief second, then grabbed Jessica and led her back to my cock. \n\n\"I didn't tell you to stop.\" I grunted. \n\nShe looked at me, surprised, but she slowly smiled, and started to lick me again. \n\nI took a deep breath and answered the phone. \n\n\"Heeey little brother.\" Rose said loudly into my ear. \n\n\"Wow, hi.\" I said, stopping to clear my throat, \"Someone's been drinking.\" \n\n\"Ooh, wellll maybe a li'l bit.\" she said, a slight slur to her words. \"You two having fun without me?\" \n\n\"Oh yeah, plenty of fun.\" I said, \"You know, I think Jessica and I are really becoming close.\" \n\nI put my hand on Jessica's head and pushed down hard, forcing her to take me to the base. \n\n\"Really?\" asked Rose excitedly. \n\n\"Yeah, I really think so.\" I said, \"In fact, she's sucking my dick as we speak.\" \n\nJessica let out a yelp of surprise but Rose just laughed, thinking I was joking. \n\n\"Haha, oh yeah?\" she asked, \"Is she any good?\" \n\n\"Better than you'd think.\" I said, \"I'm balls deep in her throat right now; your friend can really hold her breath.\" \n\n\"Ew gross.\" Rose laughed. \n\nJessica moaned and tried to move back, but I held her in place. \n\n\"Can you put her on?\" Rose said. \n\nI stared into Jessica's eyes and smirked down at her. \n\n\"Yeah, I'll try to find her.\" I said. \n\nI quickly hit the mute button on my cell before yanking Jessica back by the hair, her tight throat sliding off my shaft. She inhaled deeply and coughed a few times, wiping the spit from around her mouth. \n\n\"Get your breath back first.\" I said, handing her the phone. \n\nShe took it and glanced at the screen to see that it was muted. She took a few deep breaths and started to gently stroke my cock with her other hand. She stared into my eyes, and occasionally licked the head. After about a minute she hit the mute button and said, \n\n\"Hello?\" \n\nHer hand stopped when Rose started speaking, so I took her wrist and encouraged her to continue. \n\n\"Yeah.\" she said to Rose, trying to keep her voice steady. \"Oh, really? That's cool.\" \n\nShe laughed at something Rose said, and I got the feeling this conversation was going to take a while. Part of me wanted to push for more pleasure, but I wasn't sure how Jessica would react to the added risk. I just lay my head back and closed my eyes, trying to enjoy the inconsistent, one-handed hand-job I was receiving. \n\nThey were chatting back and forth for a few seconds when I suddenly felt Jessica's tongue licking the head of my cock. I looked down at her, surprised that she was the one escalating things. \n\n\"Uh huh.\" she said to Rose, biting her lip and gripping my shaft harder. \n\nI grabbed her hand with mine and squeezed it hard, showing her how strong I wanted her grip to be. She took the hint and increased her speed too. I found myself hoping that the sounds of my spit-lubed cock being jacked like this wouldn't carry over to the phone. \n\nShe leaned away from me, as if reading my mind, but started to twist her wrist each time her fingers got to my swollen cock head. It felt incredible, and the fact that there was chance my sister would hear made it so much hotter. \n\n\"Yeah, I know.\" Jessica said to Rose, not breaking eye contact with me. \n\nI reached out and grabbed her hair, gently guiding her face back to my shaft. I was going to cum soon, and I didn't want to hold back. \n\n\"No, he's not here.\" Jessica said, \"He just handed me the phone and walked off.\" \n\nI smirked, even as I had to hold back a grunt of pleasure when she started jacking me even faster. \n\nI could hear Rose's voice over the phone, although I couldn't make out any words. I pulled Jessica's face closer and pressed my cock head against her cheek. \n\n\"Yeah.\" said Jessica, her voice tinged with lust. \n\nI held back another groan and twisted my grip on her hair. I was seconds away. I pulled her in front of me, my cock aimed right between her eyes. \n\n\"Yeah, yeah.\" Jessica moaned lustily, and I wasn't sure if she was talking entirely to Rose. \n\nI took a deep breath and allowed myself to cum. Jessica's eyes widened in shock as my cock painted her with ropes of my semen. The first two hit her forehead, then her left cheek. She kept stroking me, coaxing out more shots of cum which hit her chin, then she jerked my cock downwards, so the last few landed on her neck and tits. \n\nShe seemed stunned by this, unsure of how to react and unable to answer Rose, who was still talking on the other side of the phone. She just stared at me with her mouth open wide in shock, and her breathing heavy and lust filled. \n\n\"Yeah.\" she said suddenly, breaking eye contact and finally answering Rose. \"No, I'm fine. I know.\" \n\nShe looked up at me again and continued to stroke my cock, which had just begun to soften. \n\n\"Look, I know how much you want Stephen and I to be friends.\" Jessica said slowly, \"But it might still take some time. After everything...it's still hard.\" \n\nShe gripped my cock, which had already started to stiffen again. \n\n\"It's just... it's still really hard.\" she said, smiling up at me, my cum all over her face and tits. \n\nRose said something else, but Jessica was barely paying attention. \n\n\"Hm? Oh yeah, that's fine, he just walked in.\" she said, \"I'll put him on.\" \n\nShe handed me the phone. \n\n\"Hello?\" I said, putting it to my ear. \n\n\"Hey Stephen, look, I'm going to head home now, Ok? But I want you to stay there with Jessica and just... just spend the night, sleep in the guest room. I want you to get to know her better. Is that Ok?\" she said. \n\nThis time I was barely paying attention, because Jessica had begun to scoop my sperm off her face and suck it off her fingers. She let out a whimper of lust each time she tasted me, then suddenly pinched her nipples hard before cleaning her boobs the same way. \n\n\"Stephen, can you hear me?\" Rose asked in my ear, for what I realised was the third time without an answer. \n\n\"Yeah, Rose, I hear you.\" I answered, \"I don't know why you're trying to force us to be friends, but I'm Ok with spending the night as long as Jessica doesn't mind.\" \n\nJessica let out a quiet giggle and started to lick my cock again, shaking her head. \n\n\"She doesn't mind.\" Rose said. \n\n\"Obviously...\" I muttered, forgetting for a second that Rose didn't see her reaction. \n\n\"What?\" Rose asked. \n\n\"It's fine.\" I said, maybe a little too loud, \"Jessica says its fine, so I guess I'll talk to you tomorrow, Ok?\" \n\n\"Ok!\" Rose said happily, \"Ok, perfect. I'll talk to you tomorrow.\" \n\n\"Bye.\" I said, then hung up. \n\nJessica wrapped both of her hands around my shaft from the base, covering about two thirds of it. She pressed the head against her cheek, then turned to lick it. \n\n\"I can't believe you made me do that.\" she whimpered. \"She could have heard! And you just came all over me...\" \n\n\"It made you wet, didn't it?\" I said. \n\nShe didn't answer me, just closed her eyes and continued her worship of my cock head with her tongue. \n\n\"Answer me.\" I ordered softly. \n\n\"Yeah... it made me wet.\" she said with shame in her voice. \n\nShe lifted one leg and exposed her pussy to me. It was clearly slick with arousal, and the sight made me growl with lust. I wanted to pin her down and plunge my cock into her, but instead I just took a deep breath. I reminded myself how important my self control was, and looked down at her again. \n\n\"Do you want to keep sucking my cock?\" I asked her. \n\nShe smiled and pressed her tongue flat against my cock, then shook her head back and forth, answering me and pleasuring me at the same time. \n\n\"What do you want, then?\" I asked. \n\n\"I want it inside me.\" she whispered. \n\n\"Inside where?\" I prompted. \n\n\"Inside... inside my pussy.\" she said. \n\nPart of me loved how she still got shy sometimes when I asked her to be graphic. \n\n\"Tell me what you want, Jessica.\" I said, leaning forward to grip her chin. \n\n\"I want you to fuck me.\" she said quietly, trying to look away. \n\n\"Oh?\" I said, turning her face back towards mine. \n\n\"I... want you to fuck me with your big cock.\" she said, \"I want you to take this huge thing...\" \n\nShe squeezed my shaft with both hands to emphasise her point, \n\n\"And use it to stretch out my tight little... cunt.\" she finished. \n\n\"Is that right?\" I asked, \"You know what you have to do to get that?\" \n\nShe grimaced with embarrassment, \n\n\"Do I have to beg?\" she asked. \n\nThat made me smile. \n\n\"No, you don't have to beg.\" I said, \"But I don't have to fuck you, either.\" \n\nShe closed her eyes and took my cock back into her mouth. She swirled her tongue around the head, making me sigh with pleasure, then let it slide out. \n\n\"Please.\" she said, \"Please fuck me. Please Sir.\" \n\n\"Good girl.\" I said. \n\nI pushed her away from me and stood up. I pulled my jeans off completely, but kept my boxers on. I tucked my erection into them, not wanting to walk around naked like she was. \n\n\"Come on.\" I said, grabbing her by the wrist. \n\n\"Where are we going?\" she asked, jumping up to follow my grip. \n\n\"Well, we can't let your slutty cunt ruin your parent's nice couch, can we?\" I said, leading to the stairs, \"So we're going to ruin your bed instead.\" \n\nI kept a tight grip on her wrist as I lead her up the stairs and into her bedroom. I pushed her towards the bed and she dived at it, giggling. She pushed the covers off and lay back, spreading her legs and displaying her wet pussy to me. \n\n\"Are you gonna fuck me, Sir?\" she asked, gently thrusting her hips into the air. \"Are you going to stretch out my little cunt?\" \n\nShe seemed to really like that phrase. \n\nI slowly undressed and lay over her. My hard cock was pointing right at her, and she eyed it hungrily. \n\n\"You want this inside you?\" I asked, wanting to hear her beg. \n\n\"Pleeease.\" she whined, \"Please fuck me.\" \n\nI smiled, and slowly pushed myself into her, making her moan with satisfaction.. I started off faster than normal, finding a rapid rhythm with my hips. She stared into my eyes as I thrust into her over and over, before closing her eyes and digging into my arms with her fingertips while groaning with pleasure. \n\nI loved watching her face throughout this, knowing the pleasure I felt from her hot, silky pussy was matched, and probably exceeded by the pleasure she felt. Her legs found a home draped loosely over my hips, and she pulled me down into an aggressive kiss, which I responded to by biting down softly on her tongue. She moaned into my mouth and giggled deliciously as I fucked her harder. \n\nAfter only a few minutes, she was close to orgasm. \n\n\"Sir I'm going to cum.\" she whimpered. \n\n\"No you're not.\" I answered, slowing my pace. \n\n\"Oh God please, please let me...\" she moaned. \n\n\"No.\" I said. \n\nI was completely inside her, and I stopped moving. I then started to draw out slowly, listening to her whimper with pleasure. \n\n\"Hold it back, sweetheart.\" I said, gently cupping her chin. \"You're not allowed, understand?\" \n\nShe bit hard on her lip in frustration, but nodded quickly. \n\nI pushed back in incredibly slowly and she let out another long moan. \n\n\"Oooh my God, oh my God Sir!\" she whined, jerking up sharply. \n\n\"Not yet.\" I said, grabbing her hair and pulling her back to the bed. \n\nShe started taking deep breaths, trying to calm herself as my thick cock slowly drove her right to the edge of release. She let out a fevered whine as I bottomed out inside her. Her hands were gripping her sheet tight, and her jaw was clenched with effort. \n\nI started to slide out again and she exhaled forcefully. \n\n\"Please let me cum, Sir.\" she begged. \n\nI didn't acknowledge her, I just kept slowly pulling out of her until only the tip was left inside, then I quickly buried myself to the hilt again. She gasped and moaned with pleasure. \n\n\"Oh fuck, oh God!\" she cried. \n\n\"Don't you dare.\" I threatened, knowing she was right on the brink. \n\nShe shut her eyes tight and took a long, shuddering breath, holding herself back. I watched her flat, firm stomach roll with effort, and felt her legs dig into my hips as she panted with effort. I stayed inside her like that for more than a minute, just watching her try to keep herself from exploding. \n\nI desperately wanted to just take her fast and hard, but I got a huge amount of satisfaction from knowing that I could ignore my own need for pleasure, finding far more enjoyment in tormenting her than I would from merely blowing my load. \n\nThe minutes ticked on as I continued this slow torture, drawing out of her incredibly slowly then fucking her hard, just once before the last few inches were free, then pulling out again. She stared up at me with a look of lust and awe, silently begging me with her gaze to allow her the pleasure she craved. And then, before too long, she begged me aloud too, knowing that I would ignore her. \n\n\"Please...\" she groaned, \"Please, please, let me cum.\" \n\nI loved watching her like this, so completely out of control. She would get this panicked expression each time I started to push back inside, knowing she'd have to brace herself against the pleasure, and each time she succeeded in abstaining she'd let out this cat-like, purring whine. Her long, smooth legs pressed into my sides each time I started to pull out again, as if trying to stop me. Her pussy did the same thing, squeezing around my cock as I slid out, doing everything it could to hold me inside. She felt so good it was incredible. With each passing minute she seemed to get impossibly more wet, more hot, more tight around my invading shaft. \n\nI filled her hard and fast for maybe the thirtieth time, and slid my hand around her throat, moving close to her. She pressed her forehead against my cheek, exhausted. \n\n\"Please Sir.\" she whispered, panting with exertion. \"I can't hold on. I... oh God Sir, I need it.\" \n\nShe wrapped her arms around my head and brought her lips right up to my ear. \n\n\"Please.\" she whispered, so very softly, \"Please.\" \n\nI felt so close to her, our bodies pressed against one another, our breathing laboured and bodies sweating with effort. I grabbed her hair from behind and yanked her head down to the mattress. I hadn't said a word to her, but I knew just what she wanted to hear. \n\n\"Cum for me.\" I ordered. \n\nI didn't move an inch and neither did she, but staring into her vivid green eyes and giving her that command was enough to set her off. Her eyes rolled back and she let out a high gasp as her fingers dug hard into the back of my neck. She squealed with pleasure as her orgasm exploded, her pussy quivering along the entire length of my shaft. \n\nHer legs were crossed behind me, holding me in place, but I grabbed her hips and forced my way back, pulling out of her almost completely. I quickly slammed back in and started pounding in and out of her. She screamed again as her orgasm was reignited, the pleasure reaching new heights. She gasped and shook as I fucked her, and her tight pussy continued to shake and spasm around my cock. \n\nI suddenly ground my thumb into her exposed clit, wanting to see just how much pleasure she was capable of. At first she just let out a small grunt, but then she drew back to fill her lungs and emitted another piercing squeal of pleasure. Within seconds of attacking her clit, her pussy began to clench around me with a new intensity, and my shaft and balls were coated with a fresh layer of her squirting juices. \n\nThe pleasure eventually became too much for me, and I drove myself into her one final time to release my pent up seed into her. My orgasm was intense, as I'd been waiting just as long as her, and the pleasure drove the breath from my lungs in a fevered growl of satisfaction. I kept pumping into her as I my cock fired shot after shot of cum into her, and I felt her body shiver with one more burst of orgasmic pleasure. \n\nShe pulled herself towards me as our pleasure faded and my cock began to wilt. She buried her face in the crook of my neck and inhaled the scent of my sweat before kissing and licking along my throat and collar bone. I relaxed my body and took her by the chin, leading her lips to mine. She kissed me passionately, our lips and bodies pressing together. She slowly let the kiss end, then smiled and bit her lip. She pressed her forehead against my collar bone and sighed happily. \n\n\"I thought I was going to pass out again.\" she confessed, her breath warm against my chest. \n\nWe laughed together before I kissed her again. We lay there and kissed for a long time, just holding each other. We didn't talk, and she barely made a sound aside from the occasional whimper when I'd nibble on her lip. Every time we pulled apart she'd stare into my eyes, her expression so full of adoration. I started to feel it again, that incredible connection with her. Staring into her eyes like that, I felt like I could really understand her, see everything her soul was made of. \n\nBut I'd never been able to understand her. \n\nThe dark thought crossed my mind, and in seconds the feeling began to fade, replaced with that old familiar bitterness. I'd wished a thousand times that I understood her, that I knew why she'd always treated me like she had, but I still didn't. This wasn't a connection, it was just... a stupid feeling, a rush of endorphins after a good fuck. \n\nI sighed and rolled away from her onto my back. Why couldn't I just feel one thing for her? Just like her or hate her, or just stop caring altogether? I couldn't hold onto any solid emotion when it came to her. ",
        "She put her arm across my chest and kissed my shoulder, still feeling that loving rush. \n\nI sat up slowly, and got off the bed. \n\n\"Where are you going?\" she asked. \n\n\"I'll be right back.\" I muttered, pulling on my jeans. \n\nI left and walked downstairs. I turned off the TV, locked the front door, and turned off all the lights. I stood at the bottom of the stairs for a while, hating the creeping emptiness I felt in my chest. I sighed, not wanting to go back to the room. I didn't want to feel close to her. \n\nI went back up to room, opening the door and standing in the doorway. \n\n\"Night.\" I said. \n\n\"Wait, where are you going?\" she asked. \n\n\"The guest room. I can't sleep in here.\" I said. \n\n\"Can't you stay for a little while?\" she asked sadly. \n\nWith my earlier mistakes, I'd learned that when a submissive is heavily dominated or punished, they might need \"after care\", basically to be held and looked after, maybe given something to eat or drink. But right now she was fine; I hadn't really dominated her tonight. As I saw it, I had no obligation to be here if I didn't want to. \n\n\"The doors locked and every thing's switched off downstairs.\" I said, \"I'll see you tomorrow.\" \n\n\"Ok... goodnight!\" she called as I closed the door. \n\nI frowned and walked over to the guest room. \n\n\"I don't have to be there.\" I told myself aloud as I undressed. \n\nThe guest bed was comfortable and barely used, but it didn't remind me of Jessica. \n\n== \n\nThe next morning the bedroom door was thrown open, waking me with a start. \n\n\"Morning little brother.\" Rose said, leaning on the door frame. \n\nStill half asleep, I barely mumbled in response. \n\n\"Come on,\" she said, walking out. \"Jessica made breakfast.\" \n\nI got dressed and wandered downstairs to find that she had indeed made breakfast; bacon, eggs, and freshly made waffles. She set down a plate for Rose and I, but not for herself. \n\n\"Not hungry?\" I asked. \n\n\"Oh, she doesn't eat breakfast.\" Rose said, \"It makes her sick.\" \n\nI looked at Jessica curiously. \n\n\"Yeah, I can't really eat first thing in the morning.\" she explained, \"It always makes me nauseas unless I've been up for a few hours. This is all I need.\" \n\nShe held up her coffee cup. \n\n\"Hm.\" I said, picking up my fork. \n\n\"See, you guys are learning all kinds of stuff about each other.\" said Rose. \n\nI rolled my eyes at her, and she laughed. \n\nI ate my breakfast quickly, trying not to feel Jessica's eyes on me. I kept thinking about the last time she'd cooked for me, and how happy it seemed to make her. \n\n\"So are we going home then?\" I asked Rose. \n\n\"No, we're staying today too.\" she said. \"If you want.\" she added. \n\n\"Just the three of us?\" I asked. \n\n\"Yep, parents are gone for the whole weekend. They're both 'on business trips'.\" Jessica answered, her voice dripping with disdain, \"As if I don't know what they're really up to.\" \n\nI smiled at this. It was strangely comforting to hear that Bob and Alice were on some kind of romantic weekend together, which is what I assumed she meant. \n\nBut there was a sudden lull in the conversation, and Rose was looking at me strangely. She looked guilty. \n\n\"What are they really doing?\" I asked her, seeing she was hiding something. \n\nShe just shrugged, and looked away. What a bad liar. \n\n\"They're cheating on each other.\" Jessica said. \n\nI thought she was joking until Rose looked up sharply. She already knew, but I could tell she was surprised Jessica had told me. \n\n\"Are you serious?\" I said, \"No way.\" \n\nBob and Alice had been a part of my life since I was a kid; they were closer to me than most of my own family. But Jessica definitely wasn't joking. \n\n\"Yeah,\" Jessica continued casually, \"They think I don't know, but it's so obvious.\" \n\nI was stunned. I didn't know how to respond. \n\n\"We've suspected it for a few years.\" explained Rose, \"They're not even that subtle about it any more. I mean, what did you think Uncle Bob was up to while we were in Paris with Auntie Alice?\" \n\nI shook my head. \n\n\"Never really thought about it.\" I said, keeping my expression neutral. \n\n\"Wow, you're taking this a lot better than your sister did.\" Jessica said. \"She cried when she thought they were going to get a divorce.\" \n\n\"You think that's where it's going?\" I asked her, meeting her eye. \n\n\"I... I don't think so.\" she said. \"They hardly fight any more. They used to get in to huge arguments about it when I was a kid, but I think now they've just decided to lean in to it. They cheat on each other, and then they're happy when they're together. It works.\" \n\nShe shrugged, and went back to her food. My first instinct was to ask for some sort of proof, but I ignored it. Jessica was smarter than me, and they were her parents. If she was certain that this was happening, what choice did I have but to believe her? \n\n\"Shit.\" I said, still stunned. This was a lot to process. \n\n\"It's not that bad, really.\" Rose said, as if still trying to convince herself, \"I mean, they're both happy like this, right?\" \n\n\"Right.\" Jessica agreed, her tone sharp. \n\nThis bothered her, but this wasn't really the time and place to talk about it. Or was it? I found myself wishing Jessica and I were alone so I could ask her how she felt, but why would she have to hide that from Rose? She knew her better than I did, probably. \n\n\"Well, at least someone in the house is getting laid.\" Rose said, looking pointedly at Jessica. \n\nI laughed despite myself, and so did Jessica. Rose had a knack for diffusing tense situations that I'd often envied. She could make people feel so at ease, even with an atmosphere like this. \n\nAfter breakfast Rose decided that we were staying the whole day, and overnight again, and the two of us walked home so I could shower and get a change of clothes. \n\nOn the way back she steered the conversation back to me and Jessica, although I was still trying to process the bombshell that had just been dropped. \n\n\"So you had fun with Jessica, then?\" she asked, not too subtly. \n\nI sighed. \n\n\"Why does it matter so much to you?\" I asked. \n\n\"It... it just matters.\" she said. \"I want you two to be close.\" \n\n\"What, are you trying to set us up or something?\" I asked bitterly. \n\nShe laughed loudly. \n\n\"No, no. Jesus, don't be ridiculous.\" she said. \"I mean, you're not exactly her type.\" \n\nI let out a breath of relief. This thought had been swirling around for a while, but I wasn't sure how to ask her. I still wasn't close to ready for Rose to be involved with this, and her trying to secretly get us together would just complicate things. \n\n\"No, I just want you to be friends.\" she said, \"Not just my friends, you know? Like, friends with each other.\" \n\n\"I get it.\" I said. \n\n\"So,\" she continued, \"We'll hang out today, all of us, but I'm going to leave again, and you and Jessica can watch some movies or something, get some dinner. Just... just hang out with each other.\" \n\nWhat she was describing sounded a lot like a romantic night in, but I guess Jessica was so beautiful and I was so overwhelmingly plain that she couldn't even consider that something might happen between us. She was just too out of my league. \n\nI would have been really offended if it wasn't so accurate. Also all the sex we'd been having sort of took the sting out of it. \n\n\"Ok?\" she asked. \n\n\"Ok.\" I said, \"I'll do what I can.\" \n\n== \n\nThe rest of the day should have been easy. We just watched TV and talked, but I couldn't shake the tension I felt in my stomach. Rose was being even more obvious now, trying to encourage us to talk to each other and laughing a little too loudly at the jokes we made. Or maybe she'd always been doing this and I was just noticing it more. \n\nAt around 5, Jessica got up and left the living room with no explanation. She was gone for about 20 minutes when we smelled something delicious. \n\n\"Is Jessica... cooking?\" I asked. \n\nRose and I looked towards the hallway, in the direction of the kitchen. \n\n\"I don't know... I thought we were ordering pizza again...\" she said. \n\nWe shared a look of confusion before we got up to investigate. I followed Rose into the kitchen to find Jessica wearing an apron, chopping vegetables. \n\n\"Wow Jessie, I've never seen you looking so... domestic before.\" Rose laughed. \n\nJessica turned around, looking embarrassed. \n\n\"Well, I don't normally have guests...\" she said blushing. \n\n\"Smells good.\" I said, gesturing towards the oven. \n\nShe beamed at me. \n\n\"Another 45 minutes.\" she said, \"You two can go watch TV while I get everything ready.\" \n\nRose and I shared another look before heading back in to the living room. \n\n\"I didn't know Jessica could cook.\" I said as we sat back down. \n\n\"She can't really.\" Rose said, \"Well, she can make a few things, but she's not as good as me.\" \n\nShe said this without any trace of arrogance. She was just stating a fact. \n\n\"And you're not as good as me.\" I said, mimicking her deadpan tone. \n\nShe laughed, and didn't deny it. \n\n\"What happened with that?\" she asked, \"The cooking thing. You were getting really good!\" \n\nOur parents always made sure we knew how to cook a few decent meals, and had been teaching us since our early teens. I'd gotten a bit obsessed with it for a few months when I was around 16. I'd cooked every single meal we ate as a family for weeks on end, trying out a new cooking styles and perfecting my favourite meals. \n\nI shrugged. \n\n\"Just got bored with it.\" I said, \"I mean, once you've cooked the perfect steak, what else is there to learn?\" \n\n\"The perfect steak?\" she asked disbelievingly. \n\n\"Of course.\" I said, continuing my serious tone, \"I learned how to mix a steak sauce so delicious that if I ever bottled it, I would be a millionaire. Combined with your preferred preparation of meat, sides, and seasoning, it's simply impossible to beat.\" \n\nThis was almost the exact description on the website I'd gotten the sauce recipe from. It really was incredible, by the way, better than any of the many varieties I'd tried from the supermarket. I could never figure out why the cooking blog I'd found it on wasn't more popular. \n\n\"Oh wow,\" she said laughing, \"That sounds amazing!\" \n\n\"Yeah, it really is.\" I said, finally smiling. \n\n\"You should think about cooking again.\" she said, \"I miss trying out your more... experimental dishes.\" \n\n\"Maybe I will.\" I said. \n\n\"And... you used to play guitar too, what happened to that?\" she asked. \n\n\"Wow.\" I said, \"What brought that up?\" \n\nIt had been years since I'd even touched a guitar. \n\n\"I was just thinking about it.\" she said, \"You played, like, every single day for a while.\" \n\n\"I used to do a lot of things.\" I said, \"I just get bored, I guess.\" \n\n\"You were getting good.\" she said. \n\n\"Always getting good, never actually good.\" I joked lightly. \n\n\"You could play a whole bunch of songs...\" she continued absently. \n\nA memory twitched to the front of my mind from nowhere. I'd been into guitar when I was maybe 12 or 13. I had learned a lot of songs, but at some point Jessica had decided that she didn't like the sound of guitar. She'd scream at me when I tried to play, or sing over me in an off-key wail just to annoy me. It was when she started barging into my room to demand I stop, because she could apparently hear it from downstairs, that I gave up trying. \n\nI sighed, trying to suppress the long forgotten annoyance. My life was filled with things like that, a thousand little ways that Jessica would make my life just that tiny bit darker. \n\nBut to be fair to her, I was never going to be a rock star. Before guitar it was skateboarding, and afterwards I think it was the telescope and long nights trying to make out stars through the light pollution. I had a habit of getting really interested in something for a few months before dropping it. It was like I would find a point where I was decent, good enough to play a few songs perfectly or cook a few perfect meals, then just stop. The mid-point between being a complete novice and being an expert. The problem was that it wasn't hard to get good, but it took years of dedication to be amazing. And there was just always something more interesting to explore. \n\nI still had that habit. Even the camera I'd gotten as a gift for Christmas was because I'd had a few conversations with my aunt about photography, which I'd been interested in up until just before last Summer. \n\n\"Fuuuck!\" Rose shouted suddenly, \"Talking about that steak made me hungry! How long do you think she's going to be?\" \n\n\"Hopefully not too long.\" I said, realising that we'd only eaten a few snacks since breakfast. \n\nIt wasn't too long, and soon we were at the table with an aproned Jessica serving us our meal. The talking stopped abruptly as three hungry teenagers tore into their food. \n\n\"Meat's a little dry.\" said Rose off-handedly a few minutes in. \n\nJessica glanced at me, worried, as if she cared more about what I thought. It was a little dry, but I was trying to be polite. I just smiled at her and kept eating. \n\n\"You cook it next time, then.\" Jessica told Rose. \n\n\"I will.\" Rose answered \"And it'll be awesome. And then Steven can make his perfect steaks, right?\" \n\n\"Perfect steaks?\" asked Jessica, picking up the exaggerated tone. \n\nI just rolled my eyes at them. \n\n\"I'm not sure you could handle my steaks.\" I said, \"It would ruin all other meat for you.\" \n\nThey laughed, and kept eating. \n\nDinner was over quickly, and no sooner had Rose laid down her knife and fork than she jumped up and announced she was leaving. \n\n\"Got to go, losers.\" she said jokingly, walking into the hall. \n\n\"You're just running out again?\" Jessica called out to the hall, \"Not staying for dessert?\" \n\nRose, now wearing her jacket, stood in the doorway to the kitchen. \n\n\"Nope, I'm already late.\" she said, smiling. \n\n\"Good, 'cus there's actually no dessert.\" Jessica said. \n\nRose laughed, and blew Jessica a kiss. She winked at me, then walked out to the front door. Just like yesterday, Jessica and I sat in a silence punctuated only by the sound of Rose driving away. \n\n\"Wow, she got out of here in a hurry.\" Jessica said, standing up to clear the table. \n\n\"She's just nervous.\" I said, \"Hasn't quite mastered a subtle way to leave yet.\" \n\n\"Nervous?\" Jessica asked. \"About what?\" \n\n\"Yeah, she's obviously nervous. She blew you a kiss for God's sake, has she ever done that before?\" I said. \"She's not confident about this plan, leaving the two of us. She thinks there's a chance it could backfire, and we would end up at each other's throats again. She'd been considering just staying for a while, in fact I don't think she planned to stay for dinner...\" \n\nI was just thinking aloud, trying to work through the impressions she'd given me. \n\n\"Did she tell you that?\" Jessica asked. \n\n\"No, it's just... I don't know, a feeling. You didn't notice?\" I asked. \n\nJessica shrugged. She'd finished cleaning the dishes, and she'd moved to stand beside the table. I got the feeling she didn't want to talk about Rose any more. \n\n\"I'll be right back.\" she said. \n\n\"Ok.\" I said, standing up. \n\n\"No!\" she said, \"Just... wait right there. Wait right there.\" \n\n\"...Ok?\" I said. \n\nI sat back down and waited. She bolted upstairs and came back about ten minutes later. \n\nShe'd dressed up for me. \n\nShe was wearing something I'd never seen before, a yellow piece of lingerie that I would later learn is called a \"babydoll\", a thin gown that left virtually nothing to the imagination. It was similar to the black one she'd worn on our first night after New Year's, but this one was frillier, and obviously much brighter. She'd put on more make up too, her eye lightly shadowed with purple and her lips dark and full. She was wearing matching yellow panties, and her toenails were painted to match, as always. \n\n\"You look...nice.\" I said, understating just how rock hard I'd become in the few seconds I'd taken to study her. \n\n\"Thanks.\" she said. \n\n\"So I guess it's just the two of us.\" I said innocently. \"What do you think we should do?\" \n\n\"Whatever you want.\" she answered. \n\n\"Good answer.\" I smiled. \n\nShe took a step towards me, but I suddenly didn't feel like standing. \n\n\"Get on your knees.\" I ordered gently. \n\nShe obeyed right away, gracefully sinking to the floor. \n\n\"Come on.\" I said lightly, tapping my thigh. Calling her like she was a dog. \n\nShe looked embarrassed, but crawled under the table anyway. She got in front of me and just waited. \n\n\"Take it out.\" I said. \n\n\"Yes Sir.\" she said, and slid both hands up my inner thighs. \n\nShe unzipped me and pulled out my hard cock, holding it with both hands. It was a little strange, not being able to look down at her while she touched me, seeing only the table. Kind of a waste of the new outfit, I thought. \n\nI could feel her hot breath against my cock, but she didn't try to lick me. I realised she was waiting for me to order it, but was so eager to begin that her mouth was only an inch away from me. \n\n\"Suck it.\" \n\nI suddenly felt her tongue swirling around the head before she took it into her mouth. I sighed with pleasure, leaning back into my chair. She was limited by her position, and the fact that she couldn't access my balls from inside my jeans, but she still tried her best. \n\nI just sat there, enjoying her hot mouth around my cock and wondering, not for the first time, just how this had happened. To be pleasured like this by her, in her own kitchen, in the middle of the day. So erotic and exciting, and if I'd been told at the end of Summer that this was how I'd be spending my senior year, I never would have believed it. \n\nMy thoughtful silence was broken when I felt Jessica's teeth scrape against the head of my cock, causing me to grunt with displeasure. \n\n\"Watch it.\" I said. \n\nShe didn't respond, but slid my cock out of her mouth to kiss and lick along the shaft. \n\nI relaxed again, but a few minutes later I felt it again, this time in a slightly more painful bite. \n\n\"Hey!\" I said, reaching down to her hair to yank her away from me. \"Watch the teeth.\" \n\n\"Sorry.\" she said, and squeezed my shaft reassuringly. \n\nI was confused and slightly angry at her mistake. I hadn't felt her teeth on my shaft since the first time she'd tried to pleasure me. Well unless you count that time she nibbled my scrotum, which was actually kind of nice, if unexpected. \n\n\"Ow, fuck!\" I grunted as I felt her teeth again. This time it was definitely a bite, and was way more painful than uncomfortable. \n\nI slid my chair back and yanked her forward with me. \n\n\"What the fuck are you doing?\" I demanded. \n\nShe looked up at me with those wide green eyes, and I immediately saw what her game was. \n\n\"I'm sorry Sir.\" she lied. \n\nShe wanted to be punished. She wanted me to spank her, but didn't want to ask for it. She was hurting me on purpose, so I would punish her for the mistake. \n\nThe little bitch. \n\n\"You're doing this on purpose.\" I accused. \n\n\"No, I-\" she protested. \n\n\"Don't lie to me, slut.\" I said, \"You want me to punish you, don't you?\" \n\nShe hesitated, opening her mouth, and then closing it again. \n\n\"Get up.\" I said angrily. \n\nShe ducked quickly out to the side of the table and stood up. \n\n\"Are you going to-\" \n\n\"Shut up.\" I grunted standing up with her. \n\nI stood behind her and grabbed her hair, forcing her towards the table. She collided with it, and bent at the waist to press her face against the cool wood. I flipped up her skirt to reveal pale blue panties, which were already starting to get damp at the crotch. \n\n\"Naughty slut.\" I growled. \"Biting me because you want to be hurt. We can't have that, can we?\" ",
        "\"I'm sorry.\" She whimpered, but I didn't believe her. \n\n\"Shut up.\" I said. \"I'm going to have to really punish you now. Show you what your disobedience costs.\" \n\nI dug my fingers hard into her hips and pushed them down passed the hem of her skirt. I forcefully pushed it up over her hips, exposing her. \n\nShe yelped with excitement, giggling. \n\nI smirked. She had no idea how much pain she was about to be in. \n\nI rub her damp crotch with my fingers, making her gasp with pleasure. I hooked my finger tips into the sides of her panties and pulled them down around her knees. I liked the way they looked there. \n\nI quickly unbuckled my belt and slid it off, eager to punish her. I pulled my jeans off too, then my t-shirt. \n\n\"Beg.\" I ordered harshly, snapping the belt against my hand. She turned to look at me, biting her lip as she stared at the bulge at my crotch. \n\nI grabbed her roughly by the hair and forced her back to the table. \n\n\"Cheek against the table.\" I ordered. \n\nI pulled back and waited for her to follow my earlier command, but I was met only with her heavy breathing. \n\n\"Jessica.\" I said, \"Beg.\" \n\n\"Sir...\" she said, but nothing else. \n\nI frowned, and snapped the belt hard against the table, inches away from her. \n\nShe jumped, but still didn't speak. \n\n\"Jessica, you bit me.\" i said angrily. \"You hurt me deliberately because you wanted this, didn't you?\" \n\n\"I'm sorry.\" she said. \n\n\"No, sweetheart. Tell me what you did.\" \n\n\"I bit you.\" she said softly. \n\n\"Why?\" \n\n\"Because... because I wanted this.\" \n\n\"Wanted what?\" \n\n\"To be... punished.\" she said guiltily, \"I wanted to be punished.\" \n\n\"So fucking beg when I tell you to beg.\" \n\n\"Please-\" \n\nThe second the word left her lips I pulled my arm back and lashed out with the folded belt, cracking it against her ass. \n\nShe jumped and whimpered with pain. \n\n\"One...\" she said. \n\n\"Don't bother.\" I said. \n\nI hit her again, then again, loving the way she'd yelp with every snap, revelling in the chorus of her pain. She reached out and grabbed the other edge of the table until her knuckles turned white. I finished the remaining hits fast and hard. I got to ten, then turned away from her saying, \n\n\"Don't fucking move.\" \n\nShe was panting hard, but let out a sultry giggle as I walked to the sink. \n\n\"Mmm... Thank you, Sir.\" she said. \n\n\"Shut up.\" I answered. This wasn't even close to finished. \n\nI poured myself a glass of water and took a long, slow drink. I refilled the glass and walked back to the table. \n\n\"Stick your arms out.\" I said. \n\nShe obeyed, spreading her arms out to the side. I pressed the bottom of the glass against her hand. \n\n\"Hold.\" \n\nShe grabbed the glass and set it down. \n\n\"Up.\" \n\nShe raised the glass up and held it in the air. \n\nI walked back to the sink and filled up another glass, then put it in her other hand. \n\n\"Don't. Spill.\" I ordered. \n\nI walked behind her and just enjoyed the moment. I grabbed my hard cock through my boxers and slid my hand along it. Her ass was perfectly presented to me, her wet, pink pussy just waiting for me. I thought about making her strip out of the lingerie, but it was actually exciting with her still in it. Like this, it looked like I was really just taking her, not even bothering to undress her first. \n\n\"Jessica, in future when you want me to punish you, you just have to ask.\" I said, my tone light, \"Do you understand?\" \n\n\"Yes Sir.\" she said. \n\n\"But now...\" I said, \"We can't have you disobeying me, hurting me just for a little fun. You're about to see what a real punishment feels like.\" \n\nI dropped the belt on the floor and walked over to her. I ran my hands over the warm, soft skin of her ass, already pinkening from the first ten strokes. I slid my boxers off, standing naked with my hard cock pointing right towards her pussy. I spanked her once, not too hard. \n\n\"Don't spill.\" I said. \n\nI stepped between her feet and slowly slid her legs open, pushing her ankle out. She let out a sudden gasp of anticipation, followed by a drawn out whimper. \n\n\"And don't... cum.\" I said, thrusting my head of my cock against her soaking wet pussy lips. I entered her slowly, at the same time pulling back on her hair. \n\n\"Oooh, fuck Sir.\" she whimpered. \n\nI slapped my open hand down against her back, making her jump. The glass in her right hand spilled slightly, the water just about dripping down the side. \n\n\"Don't talk. And watch the water.\" I said. \n\nI gripped her hair tighter and pushed into her. She was so tight from this angle. I entered her quickly, pushing hard against the wet, hot grip of her pussy. \n\nShe moaned loudly as I pulled out and began slowly fucking her with about half of my length. Her hands were gripping the two glasses tightly, and her arms were already shaking. \n\nI enjoyed my slow pace while I watched her, minute by minute, as her arms got tired and her pleasure increased. Eventually I could feel her pussy gripping hard around my shaft, and I knew she was close to orgasm. \n\n\"Careful sweetheart.\" I said, thrusting harder, \"You don't have permission yet.\" \n\nShe inhaled sharply and let out a purring whine. \n\n\"Please...\" she whimpered. \n\n\"No talking.\" I said, thrusting even harder. \n\nWithin a minute it was too much for her, and her pussy was twitching around my cock. She gasped and moaned, and as the pleasure took her she let the glass in her right hand bang against the table, causing water to slosh over her hand. It seemed to be a small, gentle climax, but it still counted. \n\nI sighed with frustration and pulled out of her. I knew I had to punish her, but it took all of my willpower to actually stop. \n\nI leaned over and took the glasses out of her hands, moving them out of her reach. \n\n\"I'm sorry...\" she gasped, still shaking. \n\nWithout answering her, I grabbed the belt from the floor and lashed her ass hard. \n\n\"You talked twice, came once, and spilled the water.\" I told her. \"If my math is right then that's... twenty lashes.\" \n\n\"Twenty!?\" she gasped. \n\n\"Twenty-five now, and more if you keep talking.\" I said. \n\nShe whined, but didn't speak again. \n\n\"You don't have to count... but don't be afraid to make some noise if you have to.\" \n\nI wanted to enjoy this too, after all. \n\nI started slowly, leaving long pauses between each hit, but soon I sped up, each snap of the belt coming just a few seconds after the next. I felt my cock throb with every hit, but I didn't stop no matter how much I just wanted to forced myself back into her. \n\nI reached 25 surprisingly quickly, and I let my arm drop. It was very tiring, putting so much strength into each swing. I was so excited, but by mind felt strangely still, my thoughts calm. All day I'd been irritated by the behaviour of my sister, and haunted by the memories of Jessica's abuse. But now, watching her shaking with pain, listening to her gasp and pant, probably on the verge of tears... it just felt right. \n\nI took a deep breath and stepped forward. I slowly put each glass into her trembling hands and grabbed her hair again, lightly tugging on it. \n\n\"What are the rules, sweetheart?\" I asked. \n\nSilence. \n\n\"It's Ok, you're allowed to answer me. What are the rules?\" \n\n\"Don't... don't talk. Don't spill... don't-\" \n\nHer words were cut off by a sharp wail as I pushed my thick cock back into her tight, silky pussy. \n\n\"Don't what, sweetheart?\" I asked, filling her to the hilt. \n\n\"Uhhnnn... mmm...\" she moaned, \"Don't cum!\" \n\nI laughed and started to fuck her again, keeping my pace steady so she wouldn't spill any water. Her earlier orgasm didn't seem to have satisfied her at all, only serving to make her hotter and wetter. \n\nI increased my pace until I was fucking her hard, finally giving myself the pleasure I'd been holding back. I grunted with pleasure and suddenly felt the table lurch beneath us. I pushed down on her head and shifted my legs back, slamming into her as hard as I could. Within seconds, she was cumming again, helpless to resist the pleasure overwhelming her. \n\nI watched her hands, knowing what was about to happen. When Jessica really came hard, her hands would always twitch and shake. I always thought it was weirdly sexy, but now it was about to get her punished. \n\nHer right hand dropped first and the glass tipped, spilling water over the edge of the table. She frantically tried to grab it, but could barely move with my weight on her, and so only managed to push it, sending it spiralling off the table where it shattered on the floor. In her haste to save one glass, she dropped the other, sending water all over the wooden surface of the table. \n\nI laughed at her panicked whines, and fucked her like I was trying to break her, the table shifting away from me with every thrust. Her pussy was still quivering around my cock, and I let myself join in her pleasure, shooting my cum into her. My orgasm was quick, but intense. \n\nI laughed again, breathlessly, and slowly pulled out of her. \n\n\"Well, no talking this time, at least.\" I said, \"But let's do the math, two glasses and one orgasm, meaning-\" \n\n\"Two.\" she interrupted breathlessly. \n\n\"What?\" I asked. \n\n\"Two... I had two orgasms.\" she confessed. \n\n\"Well... thank you for being honest.\" I said, smiling. \"But I don't remember telling you to interrupt me.\" \n\nIf she hadn't corrected me, I never would have known. did that mean she wanted more punishment? Or maybe she was remembering my order to never lie to me, and felt not telling me would be dishonest. \n\nEither way, I loved that she'd done it. Although I didn't tell her she could speak... \n\n\"Two orgasms... two glasses... and talking without permission..\" I said. \n\nShe groaned at the last addition, but didn't respond. \n\n\"I believe that's... thirty-five lashes.\" \n\nShe gasped, and went stiff. \n\n\"Oh, the glasses were worth ten each, didn't I tell you that?\" \n\nI was distracted for a second when I realised we were now standing in a small puddle of water in our bare feet, and there was a broken glass nearby. I made a note to order Jessica to clean up the glass as soon as I was done. After all, she was the one that made the mess. \n\nI looked up and delivered the first blow, taking her by surprise again. I went about her punishment slowly, not allowing my anger to take control. The regular sounds of her pain were almost comforting, and the motion of whipping her already felt natural to me. My cock was rock hard again by the tenth swing, which was the same swing that made her break down in tears. \n\nOn and on I struck at her, blow after blow marking her perky pink ass. I lost myself in it, finding an easy rhythm, each violent crack bringing me almost as much joy and pleasure as it brought her pain. I felt right, like this. It felt natural, and good. It felt- \n\n\"STOP!\" she screamed suddenly, breaking my wonderful sadistic trance. \n\nI stopped, and let my arm fall limp, exhausted. \n\nThirty two lashes, I'd counted out so far. \n\n\"I can't take any more, pleassse stop.\" she whimpered, sobbing. \n\nIt seemed while I'd been further exploring my sadistic urges, she'd been approaching the limit of her tolerance for pain. \n\nI walked to the side of the table and looked at her. She was in agony, her legs were shaking and barely holding her up. Her face was red and wet with tears, and her eyes were bulging in pain. Her make up had smeared and run down under her eyes. The dishevelled look made me even harder, made her pain look so much more intense. \n\n'Jessica...' I said gently. \n\n'Please... no more, I can't do it... you said you'd stop...\" she whimpered, closing her eyes tight. \n\nA strange rush of pleasure flowed through me, seeing her like this. This was exactly the type of pain I'd always imagined her in, in my darkest moments, all those years. \n\nI had to stop now. \n\nBut at the same time, I couldn't... \n\n\"Jessica, there's just three more.\" I said, gently stroking her face, \"Just three more and it's over.\" \n\nShe looked up at me, blinking back her tears. \n\n\"I can't!\" she croaked, \"I can't do it.\" \n\n\"You can!\" I said, dropping the belt and holding her face with my other hand, \"You can do it, sweetheart. You've taken so much already! Just three more, and your punishment's over. Just three more!\" \n\nI leaned over the table and kissed her gently, tasting the salt of her tears on her lips. \n\n\"You can do this...\" I whispered, \"You can take it, I know you can.\" \n\nShe looked up at me, so utterly vulnerable and uncertain. \n\n\"Just... just three?\" she whispered. \n\n\"Three more, and we're finished.\" I said. \n\nShe closed her eyes, and let out one more sob. \n\n\"Ok...\" she whispered. \n\n\"What was that?\" I asked. \n\n\"Ok... ok, do it.\" she said, almost too quiet to hear. \n\n\"No Jessica.\" I said, \"Tell me what you want.\" \n\nShe opened her eyes again, and stared into mine. \n\n\"Please... please finish punishing me, Sir.\" she begged. \n\nI swear to God, I almost came again right then and there. This was it. The peak of my dominance and sadistic glee. Pushing her to her absolute limit, then literally making her beg for more. \n\nI kissed her hard, forcing my tongue into her mouth, tasting the salt of her tears on her lips. She responded desperately, whimpering submissively. I pulled away and kissed her once more on the head. \n\n\"Three more.\" I said, standing up. \n\nI grabbed the belt and took my position behind her. Her ass was badly bruised, and she was barely standing. \n\nThree more hits. \n\nThey would have to be good ones. \n\nI summoned all the remaining strength in my exhausted arm and struck down with everything I had. The crack of leather against skin echoed louder than any previous one had, and Jessica screamed in pain. She pushed herself up onto her toes, causing the table to slide forward. By this point it was almost at the wall. \n\nAgain, I reared back and struck out, using my whole body to deliver an incredible blow that made her whole body shake and quiver. From behind her I could see her open her mouth to scream, but only a few small whimpers escaped. She quickly lowered her head to the table and let out a long, moaning breath. \n\nFinally, I let out a my own loud grunt as I whipped her one final time. \n\nAnd suddenly she was silent. After a few seconds, she let out a small whimper, then a louder whine, and then her legs fell out from beneath her. \n\nI lunged forward to catch her as she fell, her weight taking me by surprise and knocking me to the floor underneath her. I sat up and held her in my arms. I looked at her, panicked, worrying I'd pushed her too far. But when I saw what was happening, I couldn't believe it. \n\nShe was cumming. \n\nHer whole body was trembling against me, and her hips were thrusting weakly forward. Her eyes were totally glazed, staring up at the ceiling but seeing nothing. Her orgasm seemed to last and last, as her body tensed and relaxed with the waves of pleasure. Tears were still streaming down her face, and she was gasping irregularly. \n\nI was fascinated by her. I gently cupped her face, and she buried herself into my body, whimpering. I slid my finger down her body and into her pussy, and suddenly another orgasm was upon her, so powerful she squirted all over my hand. \n\nThis was incredible. She really was a masochist, able to cum from nothing but extreme pain. She was so beautiful. \n\nEventually her shaking and twitching stopped, and her body went limp. \n\n\"Jessica.\" I said gently. \n\nShe reacted to my voice, but didn't speak. She turned to look at me, seeming to be possessed by some barely conscious level of instinct. She grabbed painfully onto my hair and pulled herself close to me, then pressed her head against my neck and breathed deeply, in and out. \n\n\"Jessica...\" I whispered. \n\nThis time she didn't move. She just clung to me, shaking. \n\nI'd read about this, so I wasn't too worried about her. I was actually excited. This was a level of submission and masochism that few people could reach, a complete emptiness of mind and body. From what I'd read, some people weren't even convinced it was possible, but here it was, right in front of me. \n\nI just held her, and watched her, gently stroking her hair from her face, until I realised I was sitting in a puddle of water and she should probably be in bed right now. \n\n\"Jessica, I need you to stand up.\" I said gently, trying to stand her. \n\nShe barely reacted, needing me to practically lift her onto her feet and hold her there. It was a few minutes before she seemed able to take her own weight, and still clung tightly to me even when she could. \n\n\"Just wait here for a second, sweetheart.\" I whispered in her ear. \"Just stand right here.\" \n\nI ran out of the kitchen and over to the bag I'd brought my clothes in, barely registering that I was now walking around naked in Jessica's house. I took my camera out of my bag and sprinted back to her. \n\nShe was exactly how I left her, standing unsteadily in the middle of the room. She'd spilled water on her thin yellow lingerie, which was now transparent enough to show her dark, hard nipples through it. Her yellow panties were still bunched around her knees, and her arms were crossed in front of her stomach defensively. \n\nBut it was her expression I was most interested in. The tears were streaming down her face had blurred her make up, but her eyes were wide and her lips parted. She had such a look of complete peace and bliss that it took my breath away. \n\nI snapped a few quick pictures of her in that state, then moved behind her to get a complete view of her abused ass, and her wet pussy which was dripping with my cum. \n\nI was fast with this; she needed to get to bed, that was obvious, but I couldn't not capture this moment. \n\nGetting her up the stairs was its own ordeal, as I had to guide her up each step. She was limping badly, and I knew it wasn't really from the physical damage. I'd seen women online take twice as many, on some occasions even ten times as many lashes with a variety of different tools. But the pain I had given her had been enough to make her like this, to clear her mind so completely... \n\nI finally got her into bed, only stopping to strip her. She lay down on her side, and curled up in a ball. I ran out to the bathroom and grabbed some lavender scented lotion that promised to be kind to sensitive skin, and a small pack of wipes that were on the sink. \n\nI sat down next to her, took her in my arms, and reached over to gently spread the lotion over her bruised cheeks, making her whimper and moan. As I finished, I squeezed her gently, almost playfully, and was surprised when she jerked forward and started to shake again. She was cumming again, this time from nothing more than a touch. She pushed her head against my shoulder as her orgasm took her, and I wrapped my arms around her. The sounds she was making sounded almost distressed. \n\n\"It's ok, sweetheart\" I said soothingly, \"It's ok.\" \n\nI didn't know how I was supposed to be treating her right now. I'd read about after care and things like that, but when I was faced with this almost catatonic, yet hyper-sensitive woman, I was somewhat lost. \n\nI gently wiped away the make up smeared on her face, then just cuddled her until she started to relax, counting down the minutes until she was asleep. When she when totally limp in my arms, I gently laid her to the side and went back downstairs. \n\nI picked my clothes up off the kitchen floor finding them damp. Maybe I should have used smaller glasses for my little game. I mopped up the puddle she made, then swept up the glass, putting it in the trash. Hopefully her parents wouldn't notice one missing. I made sure to tidy away any trace of your session, then locked the door and turned off all the lights. Just like the night before, I was faced with the choice of where to sleep, except this time it didn't feel right to leave her alone. ",
        "When I went back into her room she was still asleep, but seemed to be sobbing quietly to herself. I lay down beside her and took her into my arms again. I didn't know if she could even notice my presence in this state, but the very least I could do was to comfort her. \n\nI softly kissed her head a few times, then started to relax beside her. She gasped in her sleep and dug her fingers into my shoulders. Was she dreaming already? Or was she still just reacting to the pain? I had no idea. I just tucked the blankets in behind her and stroked her hair away from her face. \n\nI remembered, barely, to set an alarm for about 4 hours away. I wanted to talk to her before the morning, before the real world intruded. I just hoped she'd be somewhat recovered by then. \n\n- \n\nI woke up just a few minutes before the alarm, strangely. I switched it off and looked at the woman lying next to me. She seemed to have calmed down since earlier, and now was in a true, deep sleep. \n\nI caressed her cheek, and softly called her name. \n\nShe awoke slowly, moaning softly as she came back to life. Once she opened her eyes, however, she suddenly pulled away from me. \n\nShe glared at me almost angrily, and bunched up the covers in front of her, hiding herself. \n\n\"Are you Ok?\" I asked. \n\n\"Of course I'm not fucking Ok.\" she spat bitterly. \n\nI frowned at her. \n\n\"Hey.\" I said soothingly, \"What's wrong?\" \n\nShe watched me suspiciously for a few seconds before letting out a huge sigh. She closed her eyes and lay back on the bed. \n\n\"It doesn't matter.\" she said, \"Don't you have to run off now?\" \n\nI ignored her question. \n\n\"Tell me what's wrong.\" I said forcefully, slightly worried. \n\nShe looked at me strangely. Sadly. \n\n\"Nothing.\" she half whispered, turning away. \"Nothing. I'm just tired.\" \n\n\"Talk to me.\" I ordered. \n\n\"It's nothing, really.\" she said, a soothing lie in her voice. \n\nI stared into her eyes, trying to find the truth. Was this just because of the abuse she'd taken earlier? Was she just pissed at me for hurting her? Or maybe it was some sort of reaction from her earlier submissive daze, like coming down from a high. \n\n\"I guess...\" she started, seeing I wasn't going to back down, \"I guess I'm just remembering what a... disgusting slut I am.\" \n\n\"Jessica...\" I said, surprised at her. \n\n\"I know, it's not like it's news.\" she continued glibly, \"But sometimes my own sick, disgusting body takes me by surprise.\" \n\n\"You're not... sick, Jessica.\" I said slowly. \n\n\"I am.\" she said simply. \"I just don't know how... I don't know why I like it... It's so fucked up...\" \n\n\"Jesus...\" I whispered to myself. \n\nIt was finally time, I realised. \n\nI suddenly regretted waiting so long to have this conversation with her. \n\nI'd been struggling with the idea that I was an actual sadist, and what that meant about me as a person, but I'd never had a single conversation with Jessica about her being a masochist, or a sub. She was ashamed of herself for it, because she didn't understand it. She'd been doing all of this, submitting to me, without ever knowing what it really was. \n\nI'd fucked up. I'd let her go on hating herself for too long. \n\n\"Jessica, do you know what a submissive is?\" I asked. \n\n\"A submissive what?\" she asked. \n\nI sat up, and she sat up with me, curling her knees up to her chest and hugging them. \n\n\"Ok Jessica.\" I said slowly. \"We need to talk.\" \n\nShe frowned at me. \n\n\"Talk about what?\" \n\n\"About why you like... the things I do to you.\" I said slowly. \"Why I treat you the way I do.\" \n\nShe didn't answer. \n\n\"Jessica, do you know what BDSM is?\" I asked, looking at her. \n\n\"Uh... is that like, S&amp;M stuff?\" she asked. \n\n\"Yeah, kind of.\" I said, \"Do you know what S&amp;M stands for?\" \n\nShe shook her head. \n\n\"Well do you know what it is?\" I asked. \n\n\"Uh, like... whips and chains and stuff?\" she said. \n\nI waited for her to get the link to what I was saying, but for a girl so smart she was taking her time to understand this. \n\n\"Jessica, S&amp;M, or, you know, BDSM, is this. It's how you would describe our relationship, basically.\" I said. \n\n\"Um...Ok?\" she said. \n\nI took a step back, and realised I had to start from an even more basic point if I wanted her to understand. \n\nShe had only the most shallow understanding. I remembered how she'd told Rose about seeing my cock. She'd been embarrassed even saying that she'd accidentally seen it on the internet, and that was to her best friend. She was an incredibly intelligent woman, but everything she knew about sex was from what people told her, and thinking back, she'd probably had very few conversations about it before. \n\n\"Ok. How about this. Is our relationship... normal?\" I asked her, trying to find exactly where her misunderstanding started. \n\n\"Well... no, obviously.\" she said, a profound sadness in her voice. \n\n\"How is it different from normal?\" I asked. \n\n\"Well...for one thing, you hate me.\" she said, a touch of bitterness in her voice. \n\nThat made me pause for a second. \n\n\"Ignore how we feel about each other for a second.\" I said eventually, \"Focus on what we do. What do I do that isn't normal?\" \n\n\"Well... you hurt me.\" she said. \"And you... tie me up.\" \n\n\"Right, and what do you do?\" I asked. \n\n\"I... I don't know.\" she said. \n\nShe was getting confused, and I could see she was getting more and more uncomfortable. It was incredible how different she suddenly seemed to me. She was so lost, so strangely innocent and naive. \n\n\"How do I put this?\" I thought aloud, \"Our relationship... is based on control. Would you agree with that?\" \n\n\"Uh... yeah.\" she said, considering it, \"That sounds right.\" \n\n\"But most relationships aren't, at least not in the same way.\" I said, \"Most are based on the idea of equality, but not ours, right?\" \n\n\"Right.\" she said. \n\n\"Our relationship isn't unique.\" I said, doing my best to explain in a helpful way, \"A lot of people do the same kinds of things that we do. It doesn't mean we're sick or wrong, at least I don't think so. It just means... we want different things from most people. We have different urges.\" \n\n\"Ok...\" she said. \n\n\"For example, Jessica, you're a submissive.\" I said. \n\nShe laughed suddenly, before I could continue. \n\n\"Submissive? Me?\" she laughed harshly, \"I'm like the least submissive person I know!\" \n\nShe had a point. Normally Jessica was as confident and strong willed as anyone you could meet. \n\n\"True.\" I said, \"In everyday life, you don't seem to submit to anyone or anything. But you call me 'Sir'. You beg for your orgasms. You claim that I own your body.\" \n\n\"Yeah...\" she said uncertainly. \n\n\"That's called submission, sweetheart.\" I said, smiling, \"You submit to me, and you like it. You have these submissive traits that allow you to tolerate, and even enjoy all the things I do to you. In the BDSM community, you're known as a submissive, or a sub. Someone who finds pleasure and satisfaction in submitting to another.\" \n\nBy this point I was pretty much quoting a blog I'd read about \"The Lifestyle\" verbatim. It had been one of the more helpful things I'd read when I first discovered how satisfying it was to dominate Jessica. \n\nShe was looking down, considering my words. She looked placated for a second, but then frowned and shook her head. \n\n\"So, what's... BDSM?\" she asked. \n\n\"We'll... we'll get to that.\" I said, wanting to talk through each aspect first. \"I'm what's known as a Dominant, or Dom. Someone who gets pleasure from... well, the things I do. Basically from making you submit.\" \n\n\"I thought that was just because you hate me.\" she said quietly. \n\n\"My feelings for you... are complicated.\" I said, \"And not what we're talking about right now. I started to dominate you because I was angry with you, but then I realised that I liked it on a different level. On a few different levels, actually...\" \n\nI trailed off. \n\n\"So that's why I like being... hurt?\" she asked. \n\n\"Well, that's something slightly different.\" I said, \"I mean, you should know this. What's it called when someone enjoys pain?\" \n\n\"Um... being a freak?\" she said. \n\n\"Masochism.\" I said simply. \n\n\"Oh.\" she said, surprised. Then, as if finally understanding, \"Oh...\" \n\n\"Yeah.\" I said. \"Earlier today you had an orgasm from nothing but being whipped. You like pain. You're a masochist.\" \n\n\"I've never...I've never thought about it in those terms before... I thought...well, I don't know what I thought.\" she said. \"I thought I was just... fucked up. Or that I liked you so much that I even enjoyed you hurting me.\"  \n\nI gave her a few seconds to digest this information. She looked afraid of the implications of this news. \n\n\"So you're a sub, I'm a Dom.\" I said, \"And if you're a masochist, then I'm a...\" \n\nI trailed off, seeing if she'd answer. She didn't, but her eyes widened. \n\n\"A sadist.\" I finished. \n\nShe didn't move a muscle, but suddenly I could almost feel the fear coming off of her. I'd had much the same reaction when I'd first considered applying that label to myself. \n\nOutside of the BDSM community, the only people who were considered actual sadists were usually criminals, often the most violent and hated. It was pretty much synonymous with 'evil', or 'psycho'. At least, that had been my perception of the word. Learning that there were people who lived fairly normal, happy lives who would proudly give themselves that label had been an eye-opening discovery. \n\n\"Does that scare you?\" I asked in a teasing tone, \"To think that the man you love is a sadist.\" \n\nShe flinched when I said the word again. \n\nI suddenly felt totally vulnerable. \n\n\"It's not a surprise, is it?\" I asked, \"After all the times I've hurt you...\" \n\n\"I don't know.\" she almost whispered, \"I've just... I've never-\" \n\n\"Thought about it in those terms?\" I finished. \n\nShe nodded, still wide eyed. \n\n\"This doesn't change anything... not really...\" I said. \n\nI didn't know what else to say, so I decided to move on. I turned onto my back, looking up at the ceiling. \n\n\"The exact wording of BDSM can sometimes be interpreted a few different ways.\" I said, changing the subject, \"But it's actually six words arranged in three couplets.\" \n\n\"Oh.\" she said, \"You mean like, BD, DS, SM?\" \n\nI laughed. It took her so long to understand that she had submissive traits, but this she got instantly. \n\n\"Right.\" I said. \"BD is Bondage and Discipline. That's when I tie you up, and punish you. They're basically just tools for dominance, at least for me. Some people like them for different reasons. There's a lot of room for personal preference and interpretation in this kind of relationship, not everyone has the same way of doing things.\" \n\nIt felt good to talk about all of this, about what our relationship meant to me. I wanted to tell her about what it had felt like to discover all of this, but I didn't want to get distracted. \n\n\"D/s usually stands for Dominant and submissive.\" I said, \"Dominant is usually stylised with an upper case 'D', while submissive has a lower case 's', to highlight who's the more important one. I mean, obviously both are important, but it's another power thing. Sometimes it's interpreted as Dominant and slave, which is just another way of saying Dom and sub. I mean, some people think there's an important distinction, but I don't know...\" \n\nI knew I was rambling, but I was nervous about her reaction. This was another of those topics that I wasn't used to talking about, but had only ever discussed with people online, who were mostly just screen names to me. I'd never actually breathed a single word of this to anyone before. \n\nI hadn't looked at her yet. \n\n\"So...\" she said, surprising me, \"Then SM is... sadist and masochist.\" \n\n\"Right.\" I said. \"That's what 'S&amp;M' is too, by the way... Sadomasochism. Or, again, sometimes people will say that for them 'SM' means slave and Master, but...\" \n\nI trailed off, shrugging. I was really bad at this, I was starting to learn. When faced with this kind of difficult emotional conflict my first instinct was to retreat to logic. Facts and definitions, things I could argue and manipulate. This wasn't helping her, that was obvious. \n\n\"This is a lot to take in.\" she said. \n\n\"I know.\" I answered. \n\n\"So... so I'm really not.. normal?\" she asked, emotion creeping back into her tone. \n\n\"Well... I mean, it depends on-\" I started. \n\n\"God, so it's not enough that I'm a slut, now you're telling me that deep down I'm some kind of... masochistic freak?\" she accused, the anger in her voice rising. \"Like, that all I want deep down is to be someone else's bitch?\" \n\n\"I... I mean, that's one way of putting it-\" \n\n\"Fuck that, that's not... you don't fucking know me, you don't know how this feels.\" she said angrily. \"You can't just tell me I'm all fucked up and just expect me to accept it.\" \n\n\"I didn't say you were fucked up, I'm-\" \n\n\"But I don't want it to be like this.\" she said, interrupting me again, \"I want just want things to be normal.\" \n\nI laughed. How could anything between us ever be normal? \n\n\"Jessica... you wouldn't give a shit about me if I didn't treat you like this. You don't want normal.\" I said. \n\nShe flinched away from me, as if she'd been slapped. Her rage seemed to dissipate, only to be replaced by a cold, intense stare. \n\n\"That's fucked up.\" she said, \"You think I love you because you hurt me?\" \n\n\"All I've done is hurt you.\" I said calmly, \"You treated me like shit until I did the same to you, and then you fell in love with me.\" \n\nShe didn't respond. \n\n\"Think about it.\" I continued, \"You had a boyfriend already, you had a normal relationship with Mike and look how that ended.\" \n\n\"Mike had a tiny dick.\" she said defensively. \n\n\"Did he ever kiss you?\" I asked. \n\nShe furrowed her brow. \n\n\"Of course he kissed me, he was my boyfriend.\" she said. \n\n\"Did it feel the same as when I kiss you?\" I asked. \n\nShe paused. \n\n\"And I assume he played with your tits whenever he got the chance. Did it feel as good as when I do it?\" I asked. \n\n\"No! Ok? No, he never turned me on like you do, is that what you want to hear? Does that make you feel important?\" she shouted. \n\n\"This isn't about me!\" I raising my voice slightly, \"All I do is hurt you. When I kiss you, I either violate your mouth with my tongue, or I bite your lip so hard you almost bleed. You literally did bleed the first time! When I play with your nipples, I twist them until you scream. That's how you want it.\" \n\nShe flinched again at my harsh tone. \n\n\"That's... no, that's not right...\" she said. \n\nHow could she be in so much denial? After all the things we'd done together? \n\n\"You told me yourself, I remember what you said right before I fucked you for the first time, you said... 'I like it when you hurt me, it makes me feel like I'm yours.' You don't want a boyfriend, Jessica. You don't want me to get over my anger or to start treating you like an equal. You want to be used. To be fucked. To belong to me.\" \n\n\"Stop it.\" she said. \n\nShe'd said all this to me herself, why was she still fighting it? \n\n\"Jessica-\" \n\n\"No, stop! Just... just shut up!\" she shouted. \"Just shut the fuck up!\" \n\nFor a few seconds we just sat silently in the dark. \n\n\"It's been a while since you talked to me like that.\" I said eventually, smiling tiredly. \n\n\"Oh, what are you gonna do, whip me again?\" she hissed. \n\n\"Keep it up and I probably will, yeah.\" I said. \n\n\"What if I don't let you?\" she said. \"What if I don't just bend over and accept it?\" \n\n\"Then I won't do it.\" I said. \n\n\"So... so really, I can do whatever I want and you can't stop me.\" she said with a challenging tone. \n\n\"I can leave.\" I answered, meeting her eye. \n\nShe frowned, then sighed shakily. \n\n\"So that's it.\" she said, \"I let you treat me like a slut or I don't get you at all.\" \n\n\"That's it.\" I said. \n\nShe seemed to think on this for a second. In the low light it looked like she was just pouting at me, but then I saw a tear well up in her eye. She cried silently, tears running down her cheeks. She covered her eyes with her arm for a second, then wiped the tears away. \n\nI didn't know what to say to her. This wasn't how I'd thought this conversation would go. Well, maybe that was because I'd never seriously considered having this conversation with her. \n\n\"Is this really so bad, though?\" I asked, \"I mean, no one's getting hurt...\" \n\nI trailed off as she snorted with laughter, then wiped away another tear. \n\n\"Right, bad wording.\" I said, smiling, \"Well, no-one else is getting hurt, and when you do get hurt, it's always something you agree to...\" \n\nShe was quiet for a while, thinking about what I said. \n\n\"I want you to decide... if this is still what you want.\" I said. \n\nShe just looked at me, her expression unreadable. \n\n\"Decide if you still want to belong to me. To be mine. You need to think about what that means, and decide if it's a relationship that can make you happy.\" \n\nDespite everything, I half expected an immediate agreement, another confession of her undying love. \n\nBut she just nodded and looked away. \n\n\"I told you from the beginning that I didn't want a girlfriend.\" I said, \"I never misled you about anything. This is... this is how I need things to be.\" \n\n\"I get it.\" she said, a touch of bitterness in her voice. \n\nShe lay down on the bed and tried to relax, letting out a deep breath, but she still held her body too stiffly. \n\n\"We can keep talking about it, if you want.\" I said. \n\nShe didn't look at me. \n\n\"Actually...\" she said, \"I think... I need to be alone.\" \n\nI opened my mouth in surprise. That stung. \n\n\"Fine.\" I said, trying to sound neutral and calm. \n\nI got up and left without another word passing between us. \n\nI crossed the hallway to the the guest room, got in and lay down on the blanket without undressing. How long was I going to be in here? How long did she need to think? \n\nGod, why did it hurt so much to be asked to leave? Was it just a bruised ego, for once not having her fawn over me and worship me? Well, partly. \n\nBut mostly I was worried. Genuinely worried that she wouldn't want me again. Worried that by tormenting her instead of being honest with her from the start that I'd ruined everything for good. \n\nBut I didn't even like her at first, I reasoned. None of this would have happened if I hadn't wanted to hurt her in the first place. It was that original dark desire that lead to all my sexual self-discovery, there was no possible way I could have handled this properly. Responsibly, like I should have. \n\nI cringed as I remembered all that justification to myself, telling myself over and over that she wanted it and I didn't owe her any explanation. I'd been dragging her into this unknown world of pain and control, and she responded to it better than I'd ever hoped, but had no guidance or information to help her. \n\nI'd failed her. And worse, somewhere along the line I'd started to actually care about her. That thought irritated me. I started this all for revenge and I'd ended up getting too attached to her to even enjoy it. \n\nWell, that wasn't entirely true. I thought about her in there, alone, confused, and utterly vulnerable. Even as the guilt clutched at my stomach, I felt that same glow of sadistic satisfaction. I pictured her crying, begging me treat her better but knowing I never would. \n\nI could break her heart right now, if I hadn't already. Just by saying a few simple words... I could destroy her. \n",
        "And a part of me still wanted to. \n\nI hated myself for it. \n\n== \n\nI woke up to Jessica's voice softly calling my name. \n\n\"Steven.\" she said, her hand against my cheek. \n\nI sat up quickly, causing her to jump back in surprise. It was completely dark in the room. I was still lying on the bed, in my clothes. \n\n\"What?\" I asked groggily. \n\nShe didn't say anything, but just reached out to take my hand. I silently followed her lead. She pulled me off the bed and walked me out the door and back over to her room. \n\nAfter closing the door behind us, she turned to me and started taking off her t-shirt. She'd said my name earlier, I realised. And she wasn't waiting for permission to undress. \n\n\"I want you to... make love to me.\" she said softly. \"I want to know what it's like...\" \n\nShe kicked off her panties and stood naked in front of me. I was still dazed from just waking up, but there was something so surreal about all of this. This was Jessica, my childhood nemesis, the woman I thought I'd hate my entire life... and she was standing naked, pure, flawless skin glowing with moonlight, and with a strangely dreamlike and almost ethereal beauty. \n\nWhen I didn't respond, she broke another rule by stepping forward and pressing her lips against mine. The heat of her kiss brought my mind back to life, and I reacted with my usual instinct. I reached behind her and kissed her hard, pulling her body close to mine. \n\n\"No.\" she said, pushing herself away from me. \"Gently... please.\" \n\nI took a step back from her. \n\n\"I need to know what... what it would feel like if you cared about me.\" she said. \n\nShe looked up at me with such vulnerable, wide eyes that I felt my heart twist inside my chest. She looked like the world was about to end. \n\n\"Please,\" she whispered, stepping close to me again, \"Just... just pretend like you care.\" \n\nShe pressed her body against mine, and slowly kissed my closed lips. \n\nI wasn't sure how to respond to this. I didn't feel sure of myself. When I was dominating her, I could do anything I wanted... but now she needed something I wasn't sure I could give her. \n\nI gently returned her kiss, and put my arms around her, slowly pressing her warm, naked body to mine. I felt her fingers sliding under my t-shirt and she started to pull it up. I stood back and let her undress me. She dropped my t-shirt to the floor and pressed her hands against my bare chest. I kissed her again, trying to figure out how to be passionate without being forceful. \n\nShe whimpered into my mouth, and my body stiffened. I wanted to attack her, to dominate her. I slid my arms around her again, and held myself back. She broke the kiss and pressed her forehead against my shoulder, before looking up to kiss along my jaw. Again, my fingers were twitching with the desire to dig into her flesh, to hurt her and control her. \n\nBut I resisted. \n\nI slowly pulled off my jeans as she walked to her bed and slid under the covers. This time she didn't kick them off, didn't show herself off to me. I got into bed with her, and lay over her, and she stared silently up at me. \n\nI'd been in this position many times before, but now I wasn't sure what to do. She reached down and gently gripped my swollen cock with her soft, warm hand, and lined the head up with her hot pussy lips. \n\n\"Slowly.\" she whispered. \n\nI kissed her and pushed forward with my hips, gently entering her. She let out a whimper of anticipation, and again I had to stop myself from losing control. I loved the sounds she made, and each one just made me want to take her. \n\nWe kept our foreheads pressed together as I filled her, achingly slowly. She continued to let out gasping little moans as I filled her. Was I hurting her? Was I too big for this? I didn't know. It was too dark to see her face properly, and I wished I could see her eyes. \n\n\"That's it.\" she whispered, \"Just like that.\" \n\nI before entering her completely, I drew back again, then pushed forward, falling into a slow rhythm. \n\n\"Yesss...\" she sighed. \n\nI could do this. \n\nI remembered what she'd done the last time we were together, when I'd ordered her to ride me. She liked a few quick, short thrusts followed by one or two long strokes. I copied this technique, thrusting rapidly in and out before filling her completely. \n\nShe moaned with appreciation, her voice shaking. \n\nI growled with lust, but again held myself back from being too violent. I kept up the same technique, just watching her. Slowly, I felt the need to attack her fade away. I leaned forward and drew her into a deep and soulful kiss. \n\nShe pulled back and whispered into my ear. \n\n\"I'm going to cum.\" \n\nShe wasn't asking for permission, she wasn't panicked or afraid. She just whispered it to me softly, like sharing a secret. \n\nHer legs gripped tightly around my hips, and she buried her head into my shoulder. She barely made a sound, just breathed heavily as the pleasure shook her body. \n\nI slowed down, letting her rest. I wanted to keep going, to see her cum again and again. Did I really need more than this? More than her body, her love for me? Did I really need the pain, the domination? \n\nAfter a few minutes of slow, measured thrusting, I filled her again making her jump and gasp. Despite all we'd done so far, I was still pretty inexperienced with actual sex. I felt like I was learning new ways to move my hips, watching her reactions and trying to create the same sounds, the same expressions of ecstasy on her gorgeous, although barely visible face. \n\nI reached over and flicked on the lamp, wanting to see her better. She opened her eyes to stare up at me, and it seemed to take us both by surprise. She smiled at me, and I felt myself return it. We kissed each other, and I thrust into her more vigorously. \n\nIt was my turn to gasp when I felt her already tight channel grip and flex around my hard cock. She smiled at my reaction, then furrowed her brow in concentration as she did it again. I'd forgotten about this, her exercises that were supposed to keep her tight for me. I held her close to me as my hips guided her through another strong orgasm, her fingers shaking as they tried to grip against my shoulders. \n\nI laughed at the cute little quirk, remembering how I'd used it to punish her earlier. She smiled again, biting her lip. She slid her hands up behind my head and tugged lightly on my hair. \n\nI coaxed her through one more orgasm, and then she slowed things down. She gently pushed my chest, leading me off her. I thought she just wanted me to move, but she raised her legs up in front of her and pushed at my hips with her toes. I smiled at the oddly cute gesture, and got the hint. I pulled out of her, and waited. \n\nShe stared up at me, breathing heavily. She swept her hair back, and relaxed. \n\n\"Ok.\" she said, \"Now fuck me.\" \n\nI frowned. Now she wanted it rough? \n\n\"Jessica...\" I said. \n\n\"No.\" she interrupted. \"Don't talk. Just... use me.\" \n\nShe quickly rose up to her knees and hugged me, staring into my eyes. \n\n\"I want it to hurt.\" she said. \n\nI had literally just got used to being gentle with her, and now she wanted me to be violent again? She seemed to vulnerable for this. I kissed her, softly at first. \n\n\"No.\" she sighed, pulling away. \"Not like that.\" \n\nShe suddenly slapped me hard, the pain exploding across my cheek. I growled and reacted instinctively, lashing out and grabbing her by the throat. She grabbed my wrist with both hands and squeezed it hard, as if challenging me. \n\nI let her go, and took a deep, slow breath. In an instant, the warm glow of affection I'd felt darkened and turned back into malice. How dare she slap me. \n\nIf she wanted it rough, that's what she'd get. \n\n\"On your knees.\" I growled, barely holding back my anger. \n\nShe obeyed quickly, spinning around to face the head board, presenting her pussy to me. I grabbed her hair and forced her face into the pillows. I wasted no time sliding my thick cock into her, forcefully filling her to the hilt. She gasped with pleasure, and I slapped her bare back hard. \n\nHer ass was still bruised, and I wasn't sure if she could take more pain there, but my cheek twinged with the pain of her slap, and I reconsidered. I pinched her ass cheeks hard as I continued to thrust into her, fucking her fast and hard.  \n\nShe tried to speak, but I was barely listening. I pulled her head up by her hair. \n\n\"What.\" I said, without inflection. \n\n\"I need... I'm going to...\" she panted. \n\n\"Come if you want.\" I said. \n\nShe moaned with pleasure as I forced her back down, putting pressure against the side of her head to keep her pinned. After only a few seconds she came making wild, guttural grunts and groans. \n\n\"That's it, slut.\" I growled, \"Fucking cum for me.\" \n\nI lost myself in the rhythm of fucking her. This was what I'd wanted to do earlier, at the table, just pound into her all I wanted without having to worry about anything else. Just violently using her, knowing she was loving it as much as I was. \n\nI forced her through another two strong, screaming orgasms before I allowed myself to cum. \n\nI pulled my softening cock out of her, making her coo and whimper. I released her hair and lay down beside her. \n\nIt had been a long, confusing, tiring day. Allowing myself that final release calmed me down a little, but I still had to hear what she was thinking. What she would decide. \n\nShe immediately turned around and draped herself over my body, wrapping her arms around my neck. \n\n\"This is what I want.\" she whispered, clinging to me. \n\n\"It is?\" I answered gently. \n\n\"It feels right.\" she said, resting her cheek against my chest. \"Belonging to you. Being yours. It's better like this.\" \n\nI slid my hand up into her hair and held her close to me. \n\n\"I never wanted to be a slut.\" she whispered, tearing up. \"I remember my dad calling my mom a slut, and I never wanted that to be me.\" \n\nBob said that to Alice? The thought was so jarring. \n\n\"I was like 11.\" she confessed, quickly, desperately, \"I walked out to the stairs in the middle of the night and I could hear them arguing. I think it was because it was the first time she cheated on him. He called her a disgusting slut. I'd never heard him like that. So full of... hatred. So much contempt.\" \n\nI didn't want to interrupt her. She sounded like she needed to get this off her chest. \n\n\"They argued so much in the next few months. He cheated on her, for revenge I think, then it was her turn again. It was awful. I'd listen to them every time they argued, and cry myself to sleep afterwards, just preying they wouldn't get a divorce.\" \n\nShe paused to sob bitterly, and I instinctively pulled her closer to me, hugging her tight against my body. \n\n\"I remember talking to her.\" she said, \"My mom. She'd been drinking... not a lot. I never saw her really drunk, but she'd definitely had a glass or two. She pulled me on to her lap and told me I was so lucky, because I was such a pretty little thing. I was so beautiful, I'd grow up into a beautiful woman like her, and then all I'd have to do was find a nice handsome man with a good job to look after me. I just remembered thinking... that's exactly what she'd done. That's all my dad was to her; a nice face and a steady pay check. \n\nI promised myself I would never end up like her. I'd never end up just some slut for some random guy, just using him for money. That's when I decided to get a job I could be proud of. That's why I work so hard at school, why I want to be a lawyer... I don't want to end up like her.\" \n\nShe stopped to take a few breaths. I couldn't believe she was talking about the same two people that had practically helped raise me. They'd always seemed so in love with each other. But then, maybe they were. Love's anything but simple, I knew that even then. \n\n\"I avoided sex for so long.\" she continued, \"I didn't like talking about, thinking about it, I certainly never wanted to try it. While your sister and all my other friends were out kissing boys and having fun, I just stayed in and studied for tests. I hated being so pretty... but at the same time, I liked it. I never understood it... I hated the idea of anyone touching me, but all I wanted was for boys to look at me, to see how sexy I was. It's always been so confusing. \n\nMike was... just inevitable, I suppose. I was sick of being different, of being a freak. Jessica the prude, the cock tease, the \"go on three dates without even a kiss\" girl. I picked Mike because he was popular, and handsome, and all I wanted was to be normal. But I never felt anything from him. He didn't even turn me on. After my first time with him, I almost cried. I just thought... this is sex? This was what I'd been isolating myself from, and feeling like a freak because of? \n\nAnd then... someone told me that size might be the problem. That huge cocks feel the best. I saw yours, how different you were from Mike, and suddenly I was obsessed. That's it, I thought. That's what'll make me feel normal.\" \n\nShe looked up at me. \n\n\"But you're right!\" she breathed, \"I was interested in you because of your size, but it was the way you treated me that turned me on. The confidence that I thought you'd never have... the sheer nerve to turn away a girl as beautiful as me...\" \n\nShe laughed bitterly, as if at her own vanity. \n\n\"And then you called me a slut. I'd never really been aroused like that. I was so excited, I was finally feeling what all the other girls seemed to love so much... and then you called me a slut. The one thing I never wanted to be. So I accepted it.\" \n\nI remembered that, the big hazy smile that had spread over her face when she admitted it to me. \n\n\"It felt good... to finally not have to be afraid of it any more. I couldn't be normal without having sex, and I couldn't do what I was doing with you without being the kind of girl I never wanted to be. So I just accepted it. I would be your slut. If it meant I could finally have real sex, I'd do anything. And all the abuse, the insults, the pain... I thought I was just putting up with it, but... but...\" \n\nShe sobbed again, and squeezed her arms around me. \n\n\"But I liked it! I liked the way it made me feel, the... dirtiness, the nastiness... it excited me so much... Kept me up at night thinking about it. Dreaming about it. About you. And as much as I hated it, hated becoming the disgusting slut my mother was, I couldn't stop. I gave all of myself to you, begging for it, being punished without fighting back, even calling you Sir, all just so I could keep feeling that incredible thrill.\" \n\nShe sobbed loudly and desperately pressed herself against me. She pushed her forehead into my chest, but I ran my fingers through her hair and gently lifted her up to me. \n\n\"Hey.\" I whispered, \"Hey, it's ok, it's ok...\" \n\n\"I'm sorry...\" she whispered back, \"I'm sorry for being so disgusting...\" \n\n\"Don't say that.\" I told her, \"You're not disgusting...\" \n\n\"I am, I'm just-\" \n\n\"Stop it.\" I told her forcefully, \"Don't say it. You're not disgusting... not to me.\" \n\nI soothed her as she sobbed violently, clinging to me. This lasted a while, and I just kept holding her and talking gently to her. \n\nHow could I not have seen this? She'd been through so much pain, so much isolation. Just like me, I realised. She chose to hurt me all those years because she was in pain. If anyone should have noticed that, it was me. \n\nAnd that stuff with her parents... I'd had no idea about any of it. Suddenly her relentless drive and ambition made more sense to me. She was a beautiful girl from a reasonably well-off background; she probably wouldn't have to work for a living, if she didn't want to. But she chose to dedicate all her free time towards a challenging career just so she could be her own person, and not what she thought her mom ended up as. \n\nEventually she calmed down, and sagged exhaustedly against me. \n\n\"Sir.\" she said. I was about to answer, but she continued. \"Steven. Sir. Steven.\" \n\nShe sighed, as if frustrated. \n\nI lay back on the bed, about ready to collapse. Her body lay comfortably against mine, and she looked up at me in the low light. \n\n\"I'm so in love with you.\" she whispered. \"I think that's the hardest part. Despite everything... I love you so much.\" \n\nI kissed her gently. Everything between us was always so difficult, for the both of us. But it seemed we really wanted this. To be together like this. All the bitterness, the nastiness and anger we hid inside ourselves... we could show it to each other. We were the same. \n\nShe smiled as she pulled away, then shook her head, still wiping away tears. \n\n\"So... I guess I'm really yours now.\" she said. \n\nMy heart leapt, and I smiled widely. \n\n\"Is that right?\" I asked, teasingly. \"Are you mine?\" \n\n\"Yesss.\" she whispered, \"I belong to you.\" \n\nI kissed her on the forehead and lay back. I could've fallen asleep just like that, but there was still more to talk about. It seemed like there always was. \n\n\"We still have to talk.\" I sighed, sitting up again. \n\nShe nodded and pulled away. \n\n\"Right. This is like... a thing. A relationship.\" she said. \n\n\"We need to really talk about what it means, to belong to me.\" I said. \n\n\"Ok... where do we start?\" \n\n\"Anywhere you want. What are you thinking about? Or... worried about?\" \n\n\"Well...\" she said, \"Right now I guess I'm worried about... those pictures you've been taking...\" \n\n\"What about them?\" \n\n\"You said you were going to put them online, and...\" she trailed off. \n\n\"I said that was a joke.\" I reminded her, \"No one's going to see those.\" \n\n\"Really?\" she asked hopefully \n\nI sighed. I'd made yet another fucking mistake. \n\n\"Jessica, those pictures are private, and the only person other than me that will ever see them is you.\" I said firmly. \n\nShe seemed surprised. I had to explain this, it was important. \n\n\"This doesn't work unless it's what we both want it.\" I said. \"That means that I won't ever threaten you or blackmail you to get you to submit to me.\" \n\n\"But what about the punishments?\" she said. \n\n\"You can only be punished if you agree to be punished.\" I said. \n\n\"Oh, yeah.\" she said, as if she'd just remembered. \"I guess you do always make me ask for it first. I thought that was just a power thing...\" \n\n\"It's a consent thing.\" I said, frowning. \n\nShe didn't even understand the basics. My fault again. \n\n\"Listen, you obey me because you agreed to. You get punished because you agree to. If I started threatening to show off your pictures, or if I used violence to make you do something you didn't want to... well, it'd be a very different relationship, wouldn't it?\" I said. \n\nShe paused, thinking over what I'd said. \n\n\"Yeah.\" she said eventually, \"It would be different...\" \n\n\"Ok, so, you have to understand that nothing you can say or do will ever make me show those pictures to anyone. They're private, forever. You have to trust me.\" I said. \n\nShe smiled widely, so suddenly it was startling. \n\n\"I trust you.\" she said, \"That much I know. I trust you.\" \n\n\"Why?\" I blurted out. \"How can you trust me after...\" \n\n\"Because it could be worse.\" she said. \n\nI frowned. I opened my mouth to answer, but didn't. \n\n\"You could be worse.\" she said, smiling at my confusion. \"You think I don't notice how even when you slap me, you never leave a bruise? I had an argument once with Rose that got a bit heated. She slapped me, and it left a mark for two days!\" \n\nShe laughed, as if that were a happy memory. \n\n\"If I were in your position... If I had power over the person who... who treated me like I treated you... well, I was expecting you to be worse. I expected to wake up after losing my virginity with a black eye and a broken nose.\" ",
        "I frowned at the image, even as my sadistic side wanted me to smile. A more sentimental part of me noticed how she still considered me the one who took her virginity, even though she'd been with Mike. \n\n\"Sometimes you look at me like you want to rip me apart...\" she continued, \"But you hold yourself back, I see it. You take this big, deep breath and calm yourself down. After you fucked me, and I realised you weren't going to... I don't know, cripple me or something, it just made sense to trust you. I'd already given myself to you and turned out ok. If you really like hurting me... and if you really hate me... then even the fact that you haven't done anything to ruin my life is enough for me to trust you.\" \n\n\"That... actually makes sense.\" I said. \n\nI smiled realising that now I was the one that was confused. \n\n\"So you really think you're a... sadist?\" she asked suddenly. \n\nShe said the word with such disbelief. I felt so horribly exposed. \n\n\"Yeah.\" I said, rolling onto my back to look at the ceiling, \"I like hurting you. At first I thought it was just a revenge thing, getting you back for all the shit you put me through over the years...\" \n\n\"I thought you were just angry with me.\" she agreed. \"I mean... I know I deserve it-\" \n\n\"But even when I'm not angry I still enjoy it.\" I explained, cutting her off. \"Even when I'm calm, when I can ignore our...our whatever, our past... I still just like hurting you. Or humiliating you... making you cry.\" \n\n\"Why?\" she asked. \n\nI didn't have an answer for that. \n\n\"I don't know.\" I said, trying to keep my voice from shaking. \n\nI suddenly felt her hand on my cheek. I looked at her, and she moved into her favourite position, pressing her body against mine. She caressed me gently, and the look on her face made my heart pound. There was so much understanding in her eyes, like she knew how hard this was to admit. It shocked me. \n\nShe moved in to kiss me, and I let her. She was so gentle, moving so slowly. I pulled her tight against me and returned her kiss. \n\nShe wasn't rejecting me. I was being accepted by her. \n\nI hadn't realised how much this would mean to me, and I felt tears threatening to spring into my eyes. I could tell myself a hundred times that I was fine with being what I was, even that I could enjoy it, but I'd still been holding my breath about what she would think. \n\nThis was probably one of the reasons I'd put this conversation off for so long. Better to let her think I'm just an angry asshole than some sort of monster. I smiled, and kissed her again. I pulled away, and she rested her head back against my shoulder. It felt like a weight had been lifted from my chest. \n\n\"It's all kind of... kinky, isn't it.\" she said quietly. \n\nI laughed loudly, breaking the serious and quiet atmosphere. I was bearing my soul to this woman, talking about the most exciting and terrifying self discovery of my life, and hers too probably. Something that made us fundamentally different, different from other people and from who we thought we were. \n\nI hoped it all stacked up to being a little more than just kinky. \n\n\"I guess you could call it that, yeah.\" I said, still laughing. \n\nI started to stroke her hair again, and she purred with appreciation. She moved her body upwards, laying more of it against me. I was suddenly aware of the weight of her boobs pushing against my body, and tired cock twitched against her leg in response. \n\nShe felt it, and looked down with a smile. She reached down to stroke me with her talented fingers, coaxing me towards full erection. \n\n\"Now what do you want to do with this?\" she asked. \"Where's this big, angry cock going to go, Sir.\" \n\nWithout answering, I gently gripped her hips and led her upwards, while she quickly lined us up. She slid herself down onto my thick erection, gasping with pleasure. \n\nAfter only a minute or so, she was riding me fast. I pulled her into a fevered kiss, and she pushed her tongue into my mouth. I impulsively bit down on it, making her moan with pain. I pulled away from her and attacked her throat, kissing and licking along it. I slid my teeth around it, biting gently, and she squealed with excitement. \n\n\"Do you know why your cock makes me feels so good, Sir?\" she whispered, increasing her pace, \"Do you know why your big cock makes me cum so hard?\" \n\nI didn't answer her, I just spanked her badly bruised ass. \n\nShe yelped, then sighed with passion. \n\n\"Because you own me.\" she hissed, \"You own my body... my pussy... You make my cunt feel so good because you... you own it... AAH!\" \n\nShe gasped with pain as I bit down on her shoulder. The things she were saying were driving me insane. My orgasm was approaching surprisingly quickly, and I didn't want to hold it back. This wasn't the gentle lovemaking of earlier, nor the violent domination that followed it. This was just two horny teenagers trying to get off as quickly as possible, revelling in our youth and energy. \n\n\"Can I...?\" \n\n\"Yesss.\" I sighed, \"Cum for me, slut.\" \n\nShe obeyed, and I felt her nails dig painfully into my back as her hot channel gripped me tightly, shaking with her orgasm. I let myself join her, pumping my hips upwards as I came. \n\nWe held each other tightly as our pleasure shook us. \n\nShe made one final whimper of pleasure as my wilting shaft slid out of her. She hummed with satisfaction as she rested against my body. I lay back and relaxed. \n\n\"It was so... scary today.\" she confessed breathlessly. \n\n\"When I... punished you?\" I panted. \n\n\"Yeah.\" she said, \"All that pain. It just... took over my whole body. The orgasm, if that's even what it was, just seemed to go on and on. I couldn't think, or move. It was just everywhere. I think that's why I was so angry when I woke up so... afraid. It was so powerful. I'd been worried about everything for a while, but that was my limit, I guess.\" \n\n\"Some people call it going into 'sub-space'\". I told her quietly, \"Like, all the endorphins that come in reaction to the pain and submission... they make you high.\" \n\n\"That's kind of cool.\" she said, smiling. \"It sort of felt like I was floating.\" \n\n\"Really?\" I laughed. \n\nShe nodded. \n\n\"I dreamt about you teaching me to swim.\" she said in a sleepy voice. \n\nI laughed again. \n\n\"That's pretty random.\" I said. \n\n\"It's a good memory.\" she said. \n\n\"Memory?\" \n\n\"You don't remember?\" she asked. \n\nI frowned. \n\n\"Remember what?\" \n\n\"You taught me how to swim.\" she said, yawning. \"When we were kids.\" \n\n\"I... I did?\" \n\n\"You don't remember?\" she asked again. \"We were in a hotel with a pool, Rose, and you, and me. Rose made fun of me because you guys had swimming lessons but I couldn't swim, so you taught me.\" \n\nThe memory hit me like a ton of bricks. We couldn't have been more than seven or eight. Our families were on vacation together. The sun was so hot, the smell of chlorine... \n\n\"You held me on the surface of the water.\" she said, \"You showed me how to float on my back. You just kept saying, 'The water will hold you. You'll float. Don't be afraid. I've got you...'.\" \n\nShe yawned again and stretched slowly. \n\n\"That's what I dreamt about. Except it was you like you are now. Just holding me in the water, your voice telling me 'I've got you. Don't be afraid.'\" \n\nThe memory was suddenly so vivid. I could see her angry, panicked little face whenever she started to flail in the water. I held her in my arms, thinking she was like a pretty princess that I was carrying, glad that the cool, still water was making her so light. I showed her how the water would support her if she just relaxed. \n\nHow had I forgotten this? \n\nI felt her relaxing further and sliding her arms around my neck. She was about to fall asleep. \n\n\"It wasn't all bad before this.\" she said quietly, \"Between us, I mean. It wasn't all terrible.\" \n\nI didn't answer her, still shocked. It was like a piece of our history had just been blanked from my mind until right then. \n\nShe was soon asleep in my arms, and I was about to follow her. \n\nI smiled, reliving the memory again. \n\n\"I guess it wasn't.\" I said to myself. \n\n== \n\nA knock at the door woke me up. Probably Jessica coming over for another midnight session, I thought. \n\nExcept when I opened my eyes, I wasn't in my room. I was still in Jessica's. In her bed. And someone was at the door. \n\nI sat bolt upright, turning to look at Jessica lying naked behind me. She slowly opened her eyes, still relaxed and not sharing my panic. The door opened, and I turned to see Rose standing with a stunned look on her face. \n\nJessica sat up quickly, forgetting to cover herself and so revealing her naked chest in the process. I looked back at the door but Rose was already gone, sprinting off downstairs. \n\nI shared a blank look with Jessica, each of us just processing what had happened. She slowly smiled at me before clamping her hand over her mouth to stifle her laughter. \n\nShe fell back, giggling and twisting on the bed. \n\nI smiled at her reaction, despite the sudden sense of dread I was feeling. This was going to be tough to explain. \n\n\"I guess we've been caught!\" Jessica laughed, sitting up again. \n\n\"My fault.\" I sighed, \"Shouldn't have fallen asleep.\" \n\n\"Well, I forgive you.\" she laughed, jumping out of bed to get dressed. \n\nOf course, she'd wanted this all along. For Rose to be in on our secret. The one person I least wanted to find out. \n\nJessica dressed quickly, then turned to me. \n\n\"Alright, damage control.\" She said confidently, \"Since she knows now, we should go explain everything to her, right?\" \n\n\"Not everything.\" I said, standing up and putting on my clothes, \"As far as she knows, this is just sex, ok? No... no control or anything else. And no... love.\" \n\nShe frowned for a second before smiling again. \n\n\"Ok, that's fine.\" She said cheerfully, \"As long as she knows its happening, I don't really care.\" \n\nI finished dressing and we made our way downstairs. I was amazed by how carefree, even excited Jessica was acting. I felt like we were heading towards execution. It occurred to me how unfair I'd been in wanting to keep this a secret from Rose. She was really the only person Jessica had to talk to, and having to go through everything without her couldn't have been easy. \n\nYet another mistake I'd made. \n\nWe walked into the kitchen to find Rose still looking shocked in the centre of the room, almost on the verge of panic. \n\n\"What the fuck!?\" she screeched as soon as we entered. \n\n\"I know, right?\" Jessica laughed, still seeming completely unconcerned, \"Surprise!\" \n\n\"You fucked my brother!?\" She shouted \"What the fuck!\" \n\nJessica just laughed. \n\n\"Just calm down and we can talk about it.\" She said lightly. \n\n\"Talk about what!? How did this even happen?\" \n\n\"Well, it was a few months ago...\" Jessica started to explain. \n\n\"MONTHS!?\" Rose screeched \"What do you mean 'months'? You've been fucking my brother behind my back for months!?\" \n\n\"Oh, whoops.\" Jessica said, \"Yeah it's been a while I guess. Basically we-\" \n\n\"God, I don't want any details!\" she interrupted. \n\nJessica just laughed again. \n\nNeither girl had looked at me yet, and I was content to let them sort it out. I was still confused by Jessica's complete lack of concern at her best friends anger. \n\n\"I wasn't going to give you details.\" she said, \"I was just-\" \n\n\"How?\" Rose interrupted again, \"How is this even possible...? I mean... when? Your parents aren't gone that often!\" \n\n\"Fridays, usually. After you go to sleep.\" Jessica answered calmly. \n\n\"Oh, so what you... you wait for me to fall asleep beside you and then go across the hall to fuck my brother!\" she shouted, \"and then what... just slip back into bed with me?\" \n\n\"Well I always shower afterwards.\" Jessica said, managing to sound slightly offended. \n\n\"Fuck.\" Rose said, \"This is insane... And why are you smiling?\" \n\n\"I'm just waiting for you to stop freaking out so we can talk.\" she said. \n\n\"Why didn't you tell me?\" Rose demanded. \n\nJessica hesitated, and I finally said something. \n\n\"I asked her not to tell anyone.\" I said, and finally Rose turned to me \n\n\"You asked...? But why would you keep this from me?\" I watched as her anger quickly melted into sadness. \"I thought we were supposed to be friends again...\" \n\n\"Yeah well why do you think that is?\" I asked, \"I mean, we weren't friends when it started.\" \n\nRose frowned, but didn't answer. \n\n\"Why do you think we've been getting along so well lately?\" I continued, \"When it started... I didn't know what was going to change between you and me, if anything. It just seemed easier to keep it a secret. And then suddenly you're making me sit with your friends and inviting me to parties... It was easier to just to keep it private. I mean, God, who wants to have this conversation?\" \n\nRose thought about this, and slowly seemed to accept it. \n\n\"So this... you two being all friendly... it's because you were... involved?\" \n\nI nodded. \n\n\"So... what?\" She said, looking at us both, \"What... what the fuck is this?\" \n\n\"Its just sex.\" Jessica said, easily repeating the lie I'd told her to. \n\n\"Just sex?\" Rose said disbelievingly, \"Jesus Jessica, I never thought I'd hear that from you. I mean... you hate sex. You don't even masturbate!\" \n\n\"Yeah, I used to hate sex.\" She said. \"But... you know, it turns out it's pretty fun when you're doing it right.\" \n\nA hint of a smile appeared twitched at Rose's lips before she frowned, looking back at me. \n\n\"And you... both of you, I mean. I thought you hated each other...\" \n\nJessica shrugged. \n\n\"Its pretty hard to stay angry at your only source of orgasms.\" She said lightly. \n\nThat got her. Rose couldn't help but laugh a little, and then she seemed to finally relax. She let her shoulders drop, and sat down on top of the table. I tried not to think about what we'd been doing on that surface the day before. \n\n\"Jesus.\" She sighed, taking her head in her hands, \"This is so surreal. I mean, I've spent the last few months hoping you weren't about to suddenly turn on each other again, and now...\" \n\nJessica sat down next to her, barely flinching when her badly bruised ass took her weight, and I moved over to lean against the counter. Jessica hadn't stopped smiling the entire time. I guess she knew that Rose would eventually relax. \n\n\"Ok, so explain this to me.\" Rose said, lifting her head. \"I mean, why keep it a secret?\" \n\nShe looked at me when she said this. I knew from the way she'd reacted earlier that she was surprised I was the one who wanted privacy. It probably didn't make sense to her; a loser outcast like myself should probably have been screaming from the rooftops if I'd so much as kissed a girl like Jessica, whereas she would probably take a fair amount of criticism just by being associated with me. \n\nOr maybe not. Even as I thought about that reasoning, I couldn't be certain how accurate my assessment was. Would anyone really care who Jessica slept with? \n\nBut then I thought about how quickly my classmates had surrounded me after my confrontation with Mike. How at least half of all conversation between Rose, Lissie, and Becky during lunch was focused around who was fucking who, and how, and where. They were obsessed with other people's business. \n\n\"I'm just a private person.\" I said, \"It's no-one's business.\" \n\n\"Alright... I mean, most guys would want to spread something like that around but...\" she trailed off, and I smirked. \"God, and I've been pushing Becky on you this whole time, jeez...\" \n\n\"Oh I don't mind if he wants to hook up with someone else.\" Jessica cut in, \"It's none of my business.\" \n\nI flinched at this admission. This was a weird enough conversation without bringing that whole thing into it. \n\n\"Seriously?\" Rose said, turning sharply to face her, \"You don't care if your boyfriend sleeps around. You.\" \n\nI guessed this was related to what Jessica had revealed to me this weekend, about her parents being unfaithful. \n\n\"He's not my boyfriend.\" she answered simply. \"I don't own him.\" \n\nAgain I frowned at her, feeling like her might be getting close to dangerous territory. I felt exposed enough just talking about my sex life with Jessica in a general sense, I didn't want the dark details to even be touched on. Mentioning ownership at all was definitely a risky area. \n\nRose just shook her head, amazed. \n\n\"So... my best friend and my little brother have been fucking behind my back for... for months.\" she summarised, still sounding amazed. \"You know what? I think I can live with that.\" she smiled. \n\nJessica put her arm around her and hugged her close, and I felt a weight lift off my chest. this could have exploded in my face, ruining one of the best things to come out of this whole complicated mess. \n\n\"So... how did it start?\" Rose asked. \n\nJessica hesitated and glanced at me. \n\n\"It just sort of happened.\" she said. \"Around the time I broke up with Mike.\" \n\nRose looked at her, lifting her eyebrows. \n\nJessica's smile finally faltered, and she blushed slightly, looking away. \n\n\"Or maybe it was... a little bit... before I broke up with Mike?\" She said. \n\n\"You left Mike for my little brother?\" Rose asked. \n\n\"Pretty much.\" Jessica said, then suddenly grinned. \n\nRose looked at me, then leaned closer to Jessica. \n\n\"So I'm guessing he doesn't have the same... problem that Mike had?\" She asked, glancing towards my crotch. \n\nI felt myself blush, and suppressed the urge to cover myself. I didn't want my sister even thinking about my cock, never mind asking questions about it. \n\n\"Actually, pretty much the opposite problem.\" Jessica answered. \n\n\"Opposite?\" Rose asked, shocked. \n\n\"Well, let's just say you really shouldn't be calling him your 'little' brother.\" \n\n\"Oh!\" Rose said, looking at me again. \n\nShe smiled with an odd sense of approval, again glancing at my crotch. \n\n\"Good for you, bro.\" She said \n\n\"Alright, this is getting weird.\" I said standing up, \"I'm going to get a shower.\" \n\nBoth girls giggled at my reaction. \n\n\"Jessica, you're not going with him?\" Rose joked. \n\n\"Oh yeah, do you want some company baby?\" Jessica asked, laughing with her. \n\nI flipped them off over my shoulder as I walked out, causing them both to burst out laughing again. \n\nI got my clothes from my overnight bag and went to the bathroom. I glanced in the mirror, and I couldn't stop the wide grin that split my face. Rose knew, and it wasn't a disaster. I sighed yet another breath of relief, and got into the shower. The only concern now was making sure nothing more got out. No other sordid details. \n\nI got dressed and found the girls in the living room, sitting on the couch and talking closely. \n\n\"My turn for the shower.\" said Jessica, noticing me enter. \n\nShe jumped up and walked by me, winking as she did. I hadn't seen her this happy in forever. \n\n\"So.\" Rose said as I sat down, \"Not so little brother.\" \n\n\"So.\" I said. \n\nShe paused for a few seconds, just staring at me in disbelief. \n\n\"I can't believe you're fucking Jessica.\" she said, \"I mean, it defies all logic!\" \n\nI laughed. \n\n\"Yeah, I'm as surprised as you are.\" I said. \n\n\"I mean, not that you're not... attractive, or anything... but Jessica's like crazy hot!\" \n\n\"She is.\" I said. \n\n\"I mean, did you see her boobs this morning? I haven't seen them for a few years, they're amazing!\" \n\n\"Are you surprised or jealous?\" I asked, laughing. \n\nShe laughed with me. \n\n\"Well... my mind's still pretty blown, but I'm... I'm happy for you.\" she said, \"And her too, I guess. She's always been so weird about sex, you know? To see her actually be able to talk about it, to joke about it... it's good for her.\" ",
        "\"Glad I could help.\" I joked. \n\nShe smiled. \n\n\"Seriously though.\" she said, \"I think this could be a really good thing. As long as... as long as you don't hurt her.\" \n\nI noticed the sudden seriousness in her tone. \n\n\"I'll try not to.\" I said. \n\nShe nodded. \n\n\"Try hard.\" she said, \"I don't know about this whole \"just sex\" thing you have going on. I was sure Jessie would never be into that sort of thing no matter who the guy was. Just... promise me you won't hurt her.\" \n\n\"I promise.\" I lied. \n\nI frowned, thinking about what Rose was saying. \n\nAnd just like that, I was mad again. Jessica had been hurting me for years, and after finding out about she and I, Rose's first thought was about whether or not I would hurt her. \n\nForget the fact that this was my first relationship ever, that I was just as new to all this as Jessica was. Did it not even occur to her that I could get hurt? That I might be just as vulnerable as her friend? Maybe it was just because I was a man, and typically people are more worried about the woman getting hurt... \n\nAlso there was a little splash of guilt mixed in with that anger. Because of course, I was hurting Jessica. Consistently and deliberately. \n\nRose and I talked while Jessica was gone. She asked me a bunch of surprisingly invasive questions, which I mostly ignored or refused to answer, but in all it was a pretty light conversation. She didn't seem to mind that I'd been lying to her for months. Jessica hadn't been worried at all. I guess she knew her well enough to predict that she'd get over her anger pretty quickly. \n\nEventually Jessica joined us again. It wasn't as awkward as I thought it would be. After one or two jokes about the situation, Rose seemed once again to be completely at ease. We slid back into the same kind of dynamic we'd been developed in these recent months. If anything, it was even less tense because now I wasn't actively hiding something from Rose. \n\nWhen it was time to leave, Rose actually went out first to leave the two of us alone, winking and telling us not to take too long. \n\nIt blew my mind how quickly she'd become comfortable with this. \n\n\"So I guess that's it.\" Jessica said, smiling. \n\n\"Yeah.\" I said, \"The big secrets out.\" \n\nShe glanced over my shoulder towards the door, then stepped in to hug me. \n\n\"I'm so glad I can talk to her about it now.\" she sighed. \n\n\"Just... be careful.\" I warned, \"Don't tell her too much.\" \n\n\"Don't worry, I'll keep all the kinky stuff out of it.\" she laughed. \n\nI smiled at the phrase. \n\n\"Ok, good.\" I said. \"Oh, if you still need to talk about it... the kinky stuff, I mean, just tell me next time. In fact, I want you to do some research. I'll email you some stuff I want you to read about this kind of relationship.\" \n\nI started mentally cataloguing the most useful blogs and information resources I knew about BDSM. \n\n\"So there's really like... a whole community about this?\" she asked. \n\n\"Well, yeah.\" I said, \"It's a pretty big subculture. There are probably hundreds of thousands, maybe millions of people who do things like this. Some people dabble, maybe use handcuffs occasionally, and some people live their whole lives like this...\" \n\n\"It's pretty exciting, actually.\" she said, \"I don't know... it's like... different.\" \n\n\"I thought you didn't want to be different?\" \n\n\"Well I've always been different.\" she said, \"At least now I know how I'm different. And besides, you're different too.\" \n\nI smiled. \n\n\"Yeah I guess I am.\" \n\nShe leaned in to kiss me, but paused before our lips touched. She sighed slightly, then kissed my cheek. She pulled away, looking slightly disappointed. \n\nI smiled wider, then pulled her into a deep kiss. \n\n\"Alright.\" I said pulling away, \"Time to go.\" \n\n\"Bye Sir.\" she purred. \n\n\"Later, slut.\" I answered. \n\nI headed out to the car, and Rose took us the long two minute drive home. We didn't talk much more about it, except for me telling her that I wanted things to remain secret. She knew, but that's as far as I wanted it to go. She seemed confused, but agreed not to tell anyone else. Although I think that was more for Jessica's benefit than for mine. \n\nThat night I went to my bag of tricks and looked over my collection of toys and tools. I was even more excited to try some of this stuff now, now that Jessica knew what she was actually getting in to. \n\nI wanted to keep exploring the limits of our perversions. The limits of pain that her body could withstand and still find pleasurable. How much pain I could inflict and still enjoy. This wasn't going to be easy, and for me it would be a constant struggle against my own dormant anger, my own selfish desire to just rip her apart, I knew that. \n\nBut for now, she trusted me. \n\nLet's see how long this can last, I thought. \n\n*"
    ],
    "authorname": "BackyardBottomslash",
    "tags": [
        "spanking",
        "punishment",
        "big cock",
        "blowjob",
        "submissive",
        "dominant",
        "orgasm denial",
        "sub-space"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/yours-ch-05"
}