{
    "title": "Worth the Effort Ch. 09",
    "pages": [
        "Back in The Neutral Zone, Morgan felt happier than she had in a long time. She liked being back in her store, with her friends and customers and co-workers. It was an atmosphere she'd missed.\n\nThe plywood out front still tugged at her heart, but Casey had led the effort to paint it and put up posters and other decorations. Casey had even suggested a contest for a new logo and art for the store, and putting it on the plywood until the storefront was fixed. They would award the winner some merchandise from the store. Morgan had liked the idea, and they decided to work out the details.\n\nIt felt good to be doing something positive, she thought. Their little community had come together, and she was only sad that she'd missed most of it.\n\n\"Hi, Morgan.\" Vincent waved as he came in.\n\n\"Vincent, hi!\" She beamed. \"How are you? It feels like it's been forever since I've seen you!\"\n\n\"I'm good, and it's great to see you back at work.\" He leaned on the counter and grinned. \"Does Casey know you're here?\"\n\nMorgan rolled her eyes and made an exaggerated shushing motion. \"I snuck in. Don't tell her.\"\n\n\"I heard that.\" Casey peeked out of the office. \"You be good or I'll make you go home.\"\n\n\"Yes, ma'am.\" Morgan shared a laugh with Vincent as Casey went back to her paperwork.\n\n\"I'm sure you're sick of it, but I have to ask, how are you feeling?\" Vincent said.\n\n\"I'm a little tired of it, but at least you haven't asked me before,\" Morgan said. \"I'm all right. I still have some symptoms from time to time, but time is the only thing that will fix it, so I guess I'll just have to be patient.\"\n\n\"That sucks.\"\n\n\"It does, but I'll manage. I've started drawing and even writing a little again, and that helps.\"\n\n\"Excellent. We all await the sequel,\" Vincent said.\n\nThe door chimed and Morgan looked over.\n\n\"Well, fuck,\" she said quietly as two men entered the store.\n\n\"What is it?\" Vincent glanced over. \"Do you know them?\"\n\n\"I do.\" Morgan eyed them as they approached. \"This is Jim and Dave, who have a podcast and YouTube channel and offered to leave us off it.\"\n\n\"What's up? Who's this?\" Casey came out of the office.\n\n\"Jim and Dave?\" Vincent frowned as he thought, then turned to them. \"Jim and Dave with the Comics Confidential podcast?\"\n\n\"Yeah, that's us. I'm Jim.\" He nodded and held his hand out to Vincent.\n\n\"I'm Dave,\" said the other man, and also shook hands.\n\nMorgan was wary. They were not at all acting as they had on their first visit, but she didn't trust it.\n\n\"I'm Vincent. Nice to meet you,\" said Vincent. \"Just wanted to say I enjoy your podcast.\"\n\n\"Thanks, man,\" said Jim. \"Glad to hear it.\"\n\n\"I remember you,\" said Casey and her eyes narrowed. \"Morgan told me how you guys tried to test her or some shit, then threatened our reputation. What do you fucking want?\"\n\n\"Casey, take it easy,\" Morgan said.\n\n\"I am taking it fucking easy.\" Casey glared at the men.\n\n\"This is Casey Lu,\" said Morgan. \"She's my best friend and co-owner. It wasn't just my livelihood you tried messing with, it was hers too.\"\n\nJim and Dave exchanged guilty glances.\n\nVincent spoke up. \"I have to say, whether I keep listening is going to depend a lot on what happens here. Morgan and Casey are good friends of mine, and this store is one of my favorite places. If you're going to diss them or the store, I won't be listening anymore.\"\n\n\"Um, yeah. About that.\" Dave cleared his throat. \"We, ah, we wanted to apologize.\"\n\n\"Oh.\" Morgan was surprised. \"Thanks.\" She shook her head. \"I don't mean to be rude, but why?\" She put a hand on Casey's arm to keep her friend from going off.\n\n\"We were assholes,\" said Jim, \"and we shouldn't have been.\"\n\n\"Damn straight,\" muttered Casey, but said nothing else.\n\n\"My sister is a customer of yours,\" said Dave. \"We did talk a little about your store on our podcast--and I'm sorry about that too--and it turns out my sister heard us and ripped me a new one.\"\n\nVincent smiled, amused. \"I missed that episode. And good on your sister.\"\n\nDave huffed out a laugh. \"Yeah. Man, you don't want to get on her bad side. Anyway, after that episode, she kind of let us have it on social media. Not, I mean, in a bad way. Not even boycotting us or anything.\"\n\n\"Then what?\" asked Morgan, curious.\n\n\"She told her friends and then got them and some of your other customers to post on our sites, in our channel comments, things like that,\" said Jim. \"You have a very dedicated group of supporters.\"\n\n\"We do,\" said Morgan, \"and I'm always grateful for that.\"\n\n\"So there was a lot of support for you, and not so much for us,\" said Dave. \"We lost a lot of subscribers. Between that and my sister, we realized that, well, we'd been pretty awful.\"\n\n\"A few people did 'support' us,\" said Jim, using air quotes. \"But when we read their comments, we realized we didn't want people like that as fans. They said awful things. We blocked them as best we could, but there's always more.\"\n\n\"Oh, yeah,\" said Morgan. \"Our social media feeds would make your hair stand up.\"\n\n\"Then we heard about what happened here.\" Dave looked around. \"We are so sorry. I don't know if anything we did contributed to it, but we didn't mean for anything like that. I mean, god.\" He threw up his hands. \"We're just two guys shouting into the cyber void, you know? We didn't think people paid that much attention.\"\n\nMorgan's lips quirked into a small smile. \"Not even with all of your subscribers?\"\n\nDave reddened and cleared his throat. \"Well, our numbers--\"\n\n\"We were jerks,\" said Jim. \"That's all there is to it. And we're sorry.\"\n\n\"Thank you,\" said Morgan, sincerely. \"It means a lot. I appreciate it.\" She glanced at Casey, who gave a short nod of agreement.\n\n\"We know we can't do much to make up for it, but we'd like to try,\" said Dave. \"If you're interested, we'd like to dedicate an episode of our show to you, and your store.\"\n\n\"We read your book,\" said Jim. \"It's terrific. We'd like to talk to you about that, about how you started your store, whatever you want.\"\n\n\"Thank you,\" said Morgan. \"It's a nice offer. We'll think about it.\"\n\n\"I don't--\" began Casey, but Morgan patted her arm again.\n\n\"We'll just think about it,\" she said to Casey.\n\n\"I don't fucking trust them.\" Casey glared at the men.\n\n\"I get that,\" said Jim. \"I understand. We just wanted to apologize and make the offer. No hard feelings if you'd rather not.\"\n\n\"Absolutely.\" Dave nodded.\n\n\"We do appreciate the apology, it means a lot,\" said Morgan.\n\n\"You're welcome,\" said Dave. \"Before we go, could I ask a favor?\"\n\n\"What's that?\" Morgan asked, suddenly leery this had all been a practical joke.\n\nDave pulled a copy of her book out of his messenger bag. \"Could you sign this for my sister? Her name's Lisa.\" He put the book on the counter, along with a Sharpie.\n\n\"Sure.\" Relieved it hadn't been a setup, Morgan wrote a little note on the inside cover.\n\n\"Thanks, so much,\" said Dave. \"I need to apologize to her as well.\"\n\nAs they turned to leave, Jim glanced at Vincent. \"So, will you still be listening?\"\n\nVincent nodded. \"For the moment. I'll give you a chance and see if you mean what you said here.\"\n\n\"Thanks, we appreciate it,\" said Jim.\n\n\"Well, that was something,\" said Morgan after they left. \"I did not expect that. Ever.\"\n\n\"I'm still not sure,\" said Casey. She shook her head. \"I'm just not.\"\n\n\"I'm not either, Case, but remember what you told me? This is a judgment-free space. They came and apologized, and we can go online to check out their story. Let's think about it. It might be worth taking them at face value,\" said Morgan.\n\n\"Maybe,\" said Casey, but grudgingly. \"What do you think, Vincent?\"\n\nHe shrugged. \"It's worth considering, like Morgan said. You don't have to lock yourself into anything.\"\n\nMorgan pondered the whole thing on and off during the day, and told Shane about it that night.\n\n\"Vincent's right,\" she said. \"We don't need to commit to anything, we can just check it out. Still, I wonder if maybe we should.\"\n\nShane considered. \"I don't know, Morgan. Those guys were jerks, from what you told me. You could be taking a big chance.\"\n\n\"We could,\" she agreed. \"And I can't tell you I'm not nervous about that. Casey will probably want to have armed guards around if we agreed to the podcast and all.\"\n\n\"How about just me?\" he asked, and winked. \"I've been told I have an intimidating presence. Must be all that time at the gym.\"\n\nMorgan laughed and kissed him. \"You don't intimidate me.\"\n\n\"Damn. Guess my plans of being a strong, silent, alpha-type are all for naught.\"\n\nMorgan laughed harder. \"You never had plans like that.\" She shook her head. \"That's why I like you. All that alpha stuff, that's bullshit. You just need to be comfortable with yourself, then you won't need to worry about who's in charge.\"\n\nShane grinned and dropped a kiss on her forehead. \"Luckily, my backup plan was to be the laid-back beta.\"\n\n\"All right, you can stick around, in that case,\" Morgan teased.\n\n\"Was there a case you wouldn't want me to stick around?\" he asked.\n\nMorgan started to answer, but realized he was serious. I really have to stop joking around about this kind of thing, she thought.\n\n\"Of course not,\" she said. \"I was kidding, but serious at the same time. I like you--I like us. I don't want you going anywhere.\" She wasn't sure how much more to say, afraid that admitting she loved him would send him running.\n\n\"Okay.\" He nodded.\n\n\"Did I say something wrong?\" she asked. \"I'm sorry if I did. I, well, I was just joking.\"\n\n\"No, no.\" He shook his head. \"You didn't say anything wrong. It's all me. I know, I still--\" He sighed and paced his living room. \"I know that I am not my parents, that I'm not destined to repeat anything they've done. But I can't help it, whenever long-term comes up, part of me panics.\"\n\n\"Can I help you not panic?\" asked Morgan. \"I'm probably being too direct again, but I don't want to feel like I'm watching what I say all the time. If we could work this out somehow, it'd be better for both of us.\"\n\nx-x-x-x-x-x\n\nNot panic? Shane thought. How do I not panic about that?\n\nMorgan's green eyes focused on him, and she seemed curious more than anything else. But he'd known her long enough to sense the tension underneath.\n\nHe'd found himself thinking about their relationship a lot, and wondering if he should end it.\n\nThey were coming to a place he'd experienced before, where a woman told him she cared for him, maybe even said she loved him, and wanted to know what the next step was. In the past, he'd played for time before breaking things off.\n\nIt was the only thing that made sense, he'd told himself, and them. He wasn't interested in a long-term commitment--didn't think he was capable of it--and if a woman wanted that, she should be free to find it with someone else. It wasn't fair for them to wait around when the answer wasn't going to change.\n\nIt was different with Morgan, and he didn't know what to do.\n\nShe hadn't said anything about loving him, or moving to the next step; not seriously, anyway. She had tossed out thoughts, and mused on things, and while that had made him nervous, she hadn't gone any further.\n\nThat should have made him feel better, Shane thought, but the catch was that now he was the one who felt attached. He loved her, he was sure of it. The idea of breaking up with Morgan made him feel a little sick, a reaction he'd never had in the past. Against all his instincts and better judgement, he found he wanted to make some kind of a commitment to her.\n\nBut how long would it last? As he'd told Evan, it was better to get out of a bad relationship than a bad marriage. What if his relationship with Morgan was good for a while, and then it wasn't? What if they got married, and things fell apart? The idea of following in his parents' footsteps and getting a divorce was terrifying, but--what else could one do when a relationship ran its course?\n\nMorgan cleared her throat and he jerked his head up.\n\n\"Sorry,\" he said. \"Just lost in thought for a minute.\"\n\n\"Glad you're back,\" she said with a smile, but it was tinged with sadness. \"Look, I'm going to go, okay? I feel like we got into some uncharted waters here, and you need to get your bearings.\"\n\n\"No, you don't have to.\" He shook his head. \"I'm sorry, I just wasn't ready for this kind of conversation, I guess.\"\n\n\"It's okay.\" Morgan took his hand. \"I wasn't either, but it really looks like you need to sort some things out here. I'm sure I'll make remarks about the future again, and I don't want you to be upset every time it happens. And I know I'll be a mess if I try to make sure I don't ever say anything wrong.\"\n\n\"Wait, though.\" Shane put his hands on her shoulders. \"I don't want you to leave.\" He cut himself off before he could say \"leave me.\" He definitely wasn't ready for where that might go.\n\n\"I'm not leaving,\" said Morgan, and he saw that she'd understood. \"I just think you need some time to sort things out. Talk to someone, to Evan or maybe even your therapist if that's best.\"\n\n\"Yeah. Okay, maybe.\" He was at a loss.\n\nMorgan bit her lip, and he recognized the expression she had when she was trying to organize her thoughts. He wanted to say something, anything, to fix whatever might have gone wrong, but kept quiet.\n\n\"Look, Shane, I care about you a lot,\" she began.\n\n\"I care about you, too,\" he said.\n\n\"I know, but that wasn't why I said it.\"\n\nShane steeled himself against what he was sure would come next.\n\n\"I didn't say it to put any pressure on you, or to have you say it back to me,\" Morgan said. \"I just wanted to be clear about it. We have had kind of a--\" she gave a short laugh \"--kind of a crazy ride so far. I don't want you to be with me, or stay with me because you feel pressured or obligated. I want you to be with me because you want to.\"\n\n\"I do want --\"\n\nShe put a finger over his lips. \"No, you need to think about it. I told you, if this was going to work, we both needed to be all in. Then whatever happens, happens, and that's okay. But if you are always wondering if things are real, or second-guessing things, then you're not all in, and it won't work.\"\n\nShane draped his arms around her waist and rested his forehead against hers. \"I want it to work. I really do. I'm just scared.\"\n\n\"That's okay. These things can be scary,\" she said. \"But you can't be scared all the time and you can't use it as an excuse.\"\n\n\"I'm not,\" he said and stepped away from her. \"Can't I just be, I don't know, apprehensive about where things might go? Or might not?\"\n\n\"Sure.\" She nodded and put her hands in her pockets. He recognized the slightly defensive move. \"I am, too,\" she continued. \"I just know it's easy to get into a holding pattern because you're afraid of moving forward. I don't want us to stay in a holding pattern.\"\n\n\"So you want us to move forward?\" he asked, his stomach churning.\n\n\"Ideally, yes, but it doesn't have to be this second,\" Morgan said.\n\n\"Then when would it be?\" Shane knew he was handling this all wrong, but couldn't stop himself.\n\nMorgan frowned. \"It would be when we can have a conversation about it without you acting like I'm trying to corner you.\"\n\n\"See, this is what I hate,\" said Shane, once more knowing he was making a mistake. \"I hate when things get to this point. What's wrong with a holding pattern? For a while, anyway? Why can't we enjoy what we have?\"\n\n\"I can't enjoy it if I know it's not going to change,\" said Morgan.\n\n\"Pressuring me isn't going to make me want to change anything.\"\n\nMorgan's lips pressed into a thin line and she left without another word.\n\nPart of him wanted to chase her and beg forgiveness, but he didn't.\n\nAfter a restless night, he tried throwing himself into working on the house. If he focused intently on the task at hand, he managed to not think about Morgan for a few minutes at a time. By the time Evan came around later in the day, Shane had injured his hand twice and was in a sour mood.\n\n\"What's the matter?\" asked Evan. He shrugged off his jacket. \"You look like hell.\"\n\n\"Thanks.\"\n\n\"Seriously, what's wrong?\" Evan put a hand on Shane's arm. \"Are you okay? Something happen to your family?\"\n\n\"I'm fine, and no. Well, not that I know of. God knows something could happen and it's not like my parents would fucking tell me.\"\n\n\"I'll take that.\" Evan snagged a hammer out of Shane's hand. \"Whatever's wrong with you, you shouldn't be handling implements of destruction.\"\n\nShane rolled his eyes. \"It's a hammer.\"\n\n\"Right,\" Evan said with a nod, \"and I'm sure you'd like to hit your hand with it again, yeah?\" He gestured at Shane's left hand, which had a long cut and a bruise at the base of his fingers.\n\n\"Hand, head, whatever.\" Shane threw his arms up and then dropped onto the couch.\n\n\"If you're okay, which you don't seem to be, and there's nothing wrong with your family, then what is going on? Because you are in a shitty mood, man.\"\n\nShane glared, and sighed, and then told Evan about Morgan and the night before.\n\nEvan winced. \"Sorry, man. That sucks.\"\n\n\"She told me to talk to you about it,\" Shane said. \"So, O wise one, advise and counsel me. It appears I've fucked this up, and I'd like to undo that.\"\n\n\"I don't know.\" Evan shook his head. \"Not sure there's anything I can say that you don't already know yourself.\"\n\n\"Are you trying to make me spend more money on therapy?\"\n\n\"That's up to you. I'm just saying I think you know what's going on, you're just, I don't know--\"\n\n\"Scared,\" Shane filled in.\n\n\"Okay, if you say so.\"\n\n\"I didn't say so. You were about to say so.\"\n\n\"I'm going to let some of this slide,\" said Evan after a minute, \"because this obviously has you shaken up. But you don't get to act like an asshole.\"\n\n\"I'm sorry.\" Shane scrubbed a hand over his face. \"I am. I just don't know what to do. I've never been in this situation before.\"\n\n\"What situation?\"\n\n\"The one where I want the relationship to continue, and maybe even move up a level. This is usually the point where I extricate myself.\"\n\nEvan blinked. \"You break up when things are going well?\"\n\n\"Well, if you say it that way it sounds pretty dumb, but yeah.\" Shane crossed his arms and slouched in his seat.\n\n\"I think I'm out of my league here,\" said Evan.\n\nShane sighed. \"Yeah. Damn, she's good. 'Talk to Evan,' she said. 'Talk to your therapist,' she said. She knows how I think.\"\n\n\"Do you know how she thinks?\" asked Evan. \"Maybe you should talk to Jenna, or Brianna, or even Casey.\"\n\nShane's eyes snapped open. \"Casey? Are you kidding? She'd kill me if she thought I hurt Morgan.'\n\n\"You're exaggerating,\" said Evan, then considered as Shane raised an eyebrow. \"Maybe not. You're right. Let's move Casey further down the list. I do think it might be good to talk to Jenna or Brianna, though.\"\n\n\"I don't know if I want to air all this with either of her sisters, or even if I should,\" said Shane. \"This is between Morgan and me. We need to find a way to work it out.\"\n\n\"Yeah, but it sounds like you need another angle or perspective,\" said Evan. \"Maybe you should talk to your therapist.\"\n\nShane brooded on the thought after Evan had gone. He probably should talk to his therapist, but he didn't want to, partly because he could imagine how the conversation would go. Ultimately, it would come down to him making a decision: go the usual route, or take a chance.\n\nHe wanted to take that chance, but the implications of it seemed endless and mostly negative.\n\n\"You're being an idiot,\" said Chloe as they sat in a restaurant the next day.\n\n\"Thanks for the pep talk, sis,\" said Shane.\n\n\"Shane, you're overthinking this.\" Chloe leaned forward. \"I know that taking a relationship to another level can be a kind of scary, but people do it all the time. They even look forward to it. You don't have to be scared.\"\n\nHe gave her a dry look. \"Suppose not, but it's the natural reaction for someone who--\"",
        "\"Oh, don't give me that.\" Chloe sat back and glared at him. \"I don't want to hear about how you had it so hard growing up. Like I didn't? Or Mark?\"\n\n\"I don't see either of you involved with someone, let alone engaged or whatever,\" Shane pointed out.\n\nChloe toyed with her napkin. \"I almost got engaged, while I was away.\" She looked up with a sad smile. \"We were this close. It was going to be so romantic. Then I walked in on him and some woman, a waitress from a caf\u00e9 we went to I think.\"\n\nShane felt like a complete jerk. \"Chloe, I'm sorry. I didn't know.\"\n\nShe shook her head and blinked away a few tears, then dabbed at her eyes with a napkin. \"It's okay. It's not like I told you, or anyone.\"\n\n\"Want me to get Mark to go beat him up?\"\n\nChloe snorted out a laugh that she tried to hide behind her hand. \"You're not offering yourself?\"\n\n\"Mark likes that kind of thing more than I do, but I can if he's not available.\"\n\n\"You're terrible.\" Chloe shook her head but couldn't hide a smile. \"Anyway, yes, it sucked, but the point is I took a chance. I'll take another at some point. Mom's a mess, and you got the one-two punch with her and your dad, but I refuse to let her history dictate how I lead my life.\"\n\n\"Is that why you came back from Europe?\"\n\n\"Yeah.\" She nodded and sighed. \"I would have had to come back anyway, but I left sooner than I'd originally planned. After that I wanted to be with people I could trust, like you and Mark.\"\n\n\"I wish you'd told us.\" Shane squeezed her hand. \"We could have helped.\"\n\n\"You did,\" said Chloe, \"you just didn't know it. Now I guess I'm here to help you.\"\n\n\"I'm not sure you can, but I appreciate it,\" said Shane.\n\n\"I can make the effort,\" she said.\n\nHe chuckled. \"Morgan told me a couple of times that I was worth the effort, but now I'm not so sure.\"\n\n\"She's right,\" said Chloe. \"You just need to believe that you are, and that the two of you together are.\"\n\n\"I'm trying, Chloe. I am. She's absolutely worth it, I'm just not sure I am.\"\n\nShe smiled. \"I know. But you are. Look, Shane, you have something great with Morgan. Like I had, or thought I did, with that guy. It sucked when it ended, it really did, but before that, it was great, and someday I'll find someone who won't cheat on me, and all the crap will be worth it.\"\n\n\"You're insanely optimistic,\" he said.\n\n\"Maybe, but you're just insane. You have what I want right in front of you and you keep looking for ways to run away from it. Come on, Shane, run towards it instead. You may not think so, but you deserve someone like Morgan, someone who makes you happy.\"\n\n\"All right, let's say you're on to something,\" said Shane. His sister's enthusiasm was contagious but he was still wary. \"I don't know what to do. I mean, I apologize, yeah, but then what next?\"\n\n\"I'm not exactly sure,\" said Chloe. \"But it seems to me you need to show her you're ready to take a chance and go to the next level, whatever that is.\"\n\nx-x-x-x-x-x\n\n\"Hey, what's wrong?\" Casey asked Morgan.\n\n\"What? Nothing.\" Morgan shook her head and tapped on the keyboard as she reviewed some files.\n\nCasey scoffed. \"Right. Nothing. I have to ask you fucking everything twice, and you look like someone kicked your pet alien puppy.\"\n\n\"No puppies, alien or otherwise. My building doesn't allow pets,\" Morgan said, keeping her eyes on the screen.\n\nCasey was right, and they both knew it, but Morgan wasn't sure she could afford to break down.\n\n\"Shouldn't you be out front?\" asked Morgan, tapping some more keys. \"Wouldn't want someone to come in and walk off with our inventory.\"\n\n\"It's fine. Morgan. What. Is. Wrong.\" Casey tilted her head. \"It's Shane, isn't it? I haven't seen him here in a while. You haven't mentioned him. Shit, did you guys break up?\"\n\n\"No, we didn't.\" Morgan sighed and pushed back from the desk. \"I don't think. We just--he just needed time to think about things and I didn't want to add any pressure.\"\n\n\"What things?\" demanded Casey. \"What pressure?\"\n\n\"Case, I appreciate your concern, but I really don't want to get into it right now.\"\n\n\"You're damn well going to get into it sometime, because I need to know if I have to go and whack him upside the head.\"\n\n\"Ah, yes. Casey's patented method of knocking sense into people.\"\n\n\"When necessary, fuck yes.\"\n\n\"Again, the thought is nice, but it won't help. He's got to figure this out for himself,\" said Morgan. She just hoped he figured out that he wanted to stay with her.\n\nIn the end, and it didn't take long, Morgan caved and told Casey what had happened. To her surprise, Casey laughed and leaned back in her seat.\n\n\"I didn't think it was funny,\" said Morgan, \"but okay.\"\n\n\"No, it's not that. It's not funny. I'm just glad it's no worse than that. I'm really sorry, it sucks to be in that phase of things, where you don't know where it's going.\n\n\"Don't know, and can't control it,\" said Morgan. \"Yeah, it's not fun. I don't like waiting but it's all I can do.\"\n\n\"What do you want?\" asked Casey.\n\n\"Romantic that I am, I want him to decide he loves me and all that jazz,\" said Morgan. \"Then we can figure out what's next, and I think that will be the harder part.\"\n\n\"Yeah, it usually is.\"\n\n\"But I can't do the hard part myself,\" said Morgan.\n\n\"Have you told Sexy Shane that you love him?\" Casey grinned at Morgan's glare.\n\n\"No,\" said Morgan, and it was a decision she'd started to regret. It felt like she hadn't been entirely honest with him. \"I didn't want to pressure him.\"\n\n\"The truth is not pressure,\" said Casey. \"You should tell him.\"\n\n\"Maybe. I want to give him a little time, but yeah, maybe I need to move things along.\"\n\nIt had been several days since she'd walked away from what had felt like a pointless conversation. She wondered whether it was her fault it had been pointless. She didn't want to pressure Shane, that was true, but now she regretted not telling him. If he couldn't handle it, it would have been better to know at the time.\n\nInstead, she was worried, she was having stilted conversations with Shane instead of the easy, warm talks they usually had, and worst of all, she felt like she was losing him and didn't know how to stop it.\n\n\"It is funny how the two of you are so good together, but can't figure this out,\" said Casey, \"but I'm also confident you'll work it out.\"\n\n\"Where would I be without you?\" Morgan said, smiling at her friend.\n\n\"Single, obviously,\" said Casey. \"Come on, come out and talk to people and you'll figure out what to do. You'll just wallow back here.\"\n\n\"God forbid I should wallow,\" said Morgan, but got up to follow Casey out to the store.\n\nShe forced herself to put everything with Shane aside, figuring a solution would occur to her if she just let the situation sit in her subconscious. It was what she often did when she was blocked on a story or picture, and she hoped it would work now.\n\nIt took some effort, but by forcing herself into work, Morgan managed to divert her thoughts. She chatted with customers, took some orders and recommended some books. A group of four kids, two boys and two girls, came in after school and she took the time to teach them how to play Magic.\n\nThe last made her feel better than she had in days, reminding her of how it felt when she'd found the game, and how it had led to her friendship with Casey and eventually the store. Morgan had always been open about her love of science fiction and fantasy, and that, she thought, was why she and Casey been successful. Honesty, openness and not just a little willingness to take risks.\n\nThat's what I need to do with Shane, she realized. I need to be honest, to be open and give him the chance to do the same.\n\n\"You look like you have a plan,\" Casey said.\n\n\"I think so,\" said Morgan.\n\nIt was a slow point in the day, later evening but a couple of hours until the store closed. She usually enjoyed this time, to chat with Casey or page through new releases, but today she wished she could leave early and see Shane. However, she had no intention of leaving Casey alone in the store. Her plan was to text Shane and see if they could meet, and then she'd lay it out.\n\n\"Going to let me in on it?\" asked Casey.\n\n\"I will talk to Shane. That's the plan.\"\n\n\"Good plan, and you got it ready just in time.\" Casey nodded towards the door. \"Look who's here.\"\n\nMorgan turned and saw Shane and her plans and resolve fled. Her stomach filled with butterflies and her throat went dry.\n\n\"Hey,\" said Shane. \"Hi, Casey.\"\n\n\"Hi.\" Casey nudged Morgan.\n\n\"Hi.\" Morgan cleared her throat. \"I didn't expect to see you. I was about to text you. Or call maybe. I--\" She stopped herself. She hadn't been this nervous since her book signing.\n\n\"Is this a good time to talk?\" asked Shane. \"I know it's a usually a little slow this time of day, so I hoped it would be okay.\"\n\nMorgan could see he was nervous, too. He had one hand in a pocket, fingers drumming on his leg. That made her feel a little better.\n\n\"Yeah, it's fine.\" Morgan nodded. \"Do you want to go back to--\"\n\n\"Marry me,\" Shane said.\n\nMorgan stared at him. Whatever she'd expected him to say, this was not it. Casey was stunned, too. \"I--I--what?\" Morgan managed.\n\n\"Sorry. I know it's not very romantic or anything, I just--\" Shane huffed out a breath. \"Remember I'm not so great with words, okay?\"\n\nShe nodded.\n\n\"Okay.\" Shane closed his eyes, waited a moment, then fixed them on hers. \"When we first met, I didn't think we'd be any kind of a match. I thought we were too different, but my brother told me I might be wrong, and I should take a chance. So I did.\n\n\"I miss you. I'm sorry about our fight, or whatever it was. You were right, I have been letting things get in the way of me, of us, moving forward. So I thought and decided, the hell with my instincts, the hell with my better judgment. I love you, and I don't want to lose you, so I'm willing to get married. Big ceremony, small, whatever you want, I'll do it.\"\n\nMorgan put a hand on the counter to steady herself as a storm of emotions rose up. She tried to parse what he said, to count to ten before responding, to try to make some sense of it.\n\n\"You're 'willing to get married?'\" she repeated. \"Even though it goes against your instincts and better judgment? Even though it took your brother to, what, challenge you to take me on a date? Was it a double-dog dare?\"\n\nShane started to speak but Morgan saw Casey's small head shake advising him not to. He remained silent.\n\nMorgan was so angry she felt hot. She wanted to yell at Shane, but also run in the back room and cry. She hated feeling so confused.\n\n\"You know,\" said Morgan in a tight voice, \"I really was about to call you. I wanted to talk to you and get all the cards on the table. I wanted to tell you that I love you, because I was afraid to before. I didn't want you to think I was pressuring you, but I thought we'd never get anywhere if we weren't honest.\"\n\n\"You're right,\" Shane said. \"We do need to be honest, I needed to be honest and--\"\n\n\"If you're being honest, then you're saying that you were reluctant to go out with me, reluctant to get involved, reluctant to love me, and now reluctant to get married. Gosh, I can't imagine why I'm not jumping at the chance.\"\n\n\"Morgan, that's not what I meant,\" said Shane.\n\nMorgan knew she didn't have much time before she fell apart, and turned to Casey. \"I'm sorry, I have to go. I don't like to leave you alone, so close up early.\" Before anyone could say anything else, she grabbed her things from the office and left through the back door.\n\nx-x-x-x-x-x\n\nCasey broke a long silence. \"You're right, you know. You are shit with words,\" she said.\n\n\"I don't understand,\" said Shane. He stared at the back of the store as though he expected Morgan to come back in so they could start again. \"I thought that's what she'd want.\"\n\n\"You thought she would want what you don't?\" asked Casey. \"Hoo boy, Shane. You are fucking messed up.\" She sighed. \"Go sit in the game room. I'll close up and be there in a minute.\"\n\nOn autopilot, Shane did as Casey told him. He wandered into the game room and dropped into a chair.\n\nIt had seemed like such a great idea after talking to Chloe. He loved Morgan, and when people were in love, they got married.\n\nIt didn't always work out--didn't he know that first-hand--but it was what people did. Some people didn't, he knew. More people these days didn't get married, or didn't right away, and just made a commitment to each other, he knew that. He felt like a marriage added weight to that commitment, made it more serious.\n\nHe'd thought Morgan would want that, and that he'd show he was serious about her by offering to get married. It looked like he'd thought wrong.\n\n\"What the fuck was that?\" Casey slid into a chair across from him. \"You've been seeing Morgan for months. Do you not know her at all?\"\n\n\"I guess not.\" He slumped in the chair \"Like I said, I thought it was what she'd want.\"\n\n\"I repeat, what makes you think she would want something that you don't?\" Casey said.\n\n\"It's not that I don't want it. Exactly. Sort of.\" Shane squirmed in his seat. \"I love her, Casey. I want to be with her.\"\n\n\"So, be with her,\" said Casey. \"It's not that hard.\"\n\n\"It looks like it is. She doesn't seem to want to be with me.\"\n\n\"Shane, you just told her that you want to be with her despite every fiber of your being saying it's a bad idea. Surely you can see why that wouldn't go over as well as you thought.\"\n\nShane thought, then narrowed his eyes at Casey. \"Why aren't you cursing?\"\n\n\"What?\"\n\n\"You curse all the time. I figured you'd be furious at me, and calling me every name in the book. But you've hardly done it at all.\"\n\n\"Odd as it may sound, this doesn't feel like the time,\" said Casey. \"If Morgan's mad at you, no need for me to pile on.\"\n\n\"I'd think that as her best friend, piling on would be required by a code or something.\"\n\n\"At times, sure,\" Casey allowed, \"but this isn't one of those times. You didn't aim to hurt Morgan intentionally. If you had, I might have to brick you up alive in the storeroom or something. You just fucked up.\"\n\nShane gave her a wry grin. \"There, you cursed. Now I feel better.\"\n\n\"Good. Now, do you see why she might have taken your offer--ugh--the wrong way?\" Casey gave an exaggerated shudder.\n\n\"It came out all wrong. I am shit with words, like you said.\"\n\n\"What were you trying to say?\" Casey asked with a sincerity and concern he hadn't been expecting.\n\nHe tried to organize his thoughts. \"I was trying to say that I love her, that I want her in my life, and I was willing--\"\n\n\"Wait, stop, stop right there.\" Casey held up a hand. \"You're willing to do something? Or you want to?\"\n\n\"Isn't it the same?\"\n\n\"No.\" She shook her head. \"I am willing to take Astrid to a club to see some random alt-country performer. I don't want to, but I'm willing because I love her and I can use it for future leverage. I want to marry her, I want to promise to be there for her through the ups and downs because she means everything to me and I am worse off without her in my life.\"\n\n\"Wow,\" said Shane. Casey was surprising him left and right tonight.\n\n\"Shit.\" Casey looked at him. \"I really ought to tell Astrid that, huh?\"\n\nHe chuckled. \"Yeah, you should. That's a no-brainer even for me.\"\n\n\"Your turn,\" said Casey. \"I'm being all emotionally open here, and damned if I'll be the only one.\"\n\n\"I am petrified that if Morgan and I make some kind of commitment, it will fall apart later and I will lose her,\" Shane said in a rush.\n\n\"Is that all?\" asked Casey.\n\n\"I thought it was kind of a lot. I don't hear you voicing those kind of doubts with Astrid.\"\n\n\"Because everybody has them and I thought they went without saying.\"\n\nShane sighed. \"Casey, I have watched both of my parents fall madly in love, get married in ceremonies that would embarrass a Kardashian, and then burn it all down the minute something goes wrong. And then, in a move that blows my mind to this day, do it all again. They never learn.\"\n\n\"Learn what?\"\n\n\"That it takes work, I guess. That there's more to it than Vera Wang dresses and Armani tuxes and six white puppies pulling the rings down the aisle in a cart.\" He raised a hand as Casey's jaw dropped. \"Swear to god. I have pictures. Anyway, all I see is them ignoring the doubts, covering them with frosting, and then falling victim to them. I don't want that to happen to me. Or to Morgan. I hate the idea of hurting her.\"\n\n\"Then don't,\" said Casey. \"I know you can't promise you never will, no one can, but you'll try not to, I know that. That's the important part, that's what takes the effort. Knowing things can go wrong and making the effort to fix them when they do.\"\n\n\"What if I can't?\"\n\n\"Then you can't, which sucks. But you won't know if you can't until it comes up, and why would you cut yourself off before anything bad happens? Because the flip side is, it might never happen.\"\n\n\"But--\"\n\n\"Fuck that,\" said Casey. \"Look, is your life better with or without Morgan in it?\"\n\n\"With,\" he said with no hesitation.\n\n\"Do you want her in it? You're willing to take the risks because you want to take the risks? Because you think she's worth it?\"\n\n\"Yes.\"\n\n\"Then go fix it and tell her, dumbass,\" said Casey. \"Honest to god, you people would be so fucking lost without me.\"\n\nShane laughed as he hugged her before he left. She was right.\n\nx-x-x-x-x-x\n\n\"Shoo, sweetie.\" Brianna kissed Evan on the cheek. \"We're having a girls' night. Go see what's-his-name.\"\n\n\"You can say his name,\" said Morgan.\n\n\"I am very confused,\" said Evan. \"But I'll go.\"\n\n\"Good, maybe you can talk some sense into him,\" said Brianna.\n\n\"Who wants hot chocolate?\" asked Jenna as they moved into the kitchen.\n\nMorgan laughed. \"Shouldn't that be later? We've been here for what, half an hour?\"\n\n\"It's never too late or too early for hot chocolate,\" said Jenna.\n\n\"Go for it, Jenna,\" said Brianna. \"There are marshmallows in the cabinet over there.\"\n\n\"Awesome.\" Jenna went to the stove after retrieving the marshmallows.\n\n\"Look at us,\" said Morgan. \"I can't remember the last time the three of us did anything like this.\"\n\nBoth of her sisters had stepped up to support her after the mess with Shane. Morgan didn't even know what to call it, and \"mess\" seemed most accurate. She alternated between missing him and being angry at him, and occasionally was both at the same time.\n\n\"Me either,\" said Brianna. \"Guess we'd better start recording. Pics or it didn't happen, right?\"\n\nMorgan laughed. Where had this sense of humor been? \"I think I'll just go with the memories.\"\n\nJenna brought over three mugs of hot chocolate. Or at least Morgan assumed there was hot chocolate under all the marshmallows. Not that she was complaining.\n\n\"So what's the status of the wedding?\" asked Jenna.\n\n\"We're changing up.\" Brianna bit her lip and glanced from Morgan to Jenna.\n\nMorgan tensed. Brianna had been different lately, but she wasn't sure how deep it went, or how far to trust her sister.\n\n\"What's the change?\" asked Jenna.\n\n\"Well, we're locked into Fiji, although they've let us move the date. But we've decided that will be our honeymoon, and the wedding will be closer to home.\" Brianna gave a tentative smile. \"We haven't picked a date yet for the wedding, and I guess we may even do the honeymoon first. But I was hoping to talk to you guys and find a date that works for everyone. Or at least for as many people as possible.\n\n\"That's wonderful.\" Jenna beamed. \"Thanks so much, Brianna.\"\n\n\"It's great,\" Morgan agreed. \"I appreciate it. I know it must be a hassle to rearrange all of this.\"\n\n\"It is, kind of, but I admit I brought it on myself,\" Brianna said. \"I went a little crazy, for all kinds of stupid reasons. Which brings me to the other reason we're here. I wanted to apologize to both of you, for everything.\" She glanced at the others, then studied her hot chocolate.",
        "Morgan and Jenna looked at each other, then Morgan put a hand on Brianna's arm.\n\n\"Thank you, Brianna,\" said Morgan. \"I'm serious. It means a lot.\"\n\n\"To me, too,\" said Jenna. She squeezed Brianna's shoulder.\n\nBrianna nodded and dabbed at her eyes before responding. \"I really came close to losing everything, guys. Katelyn told me I was acting like a total bitch. Even Liv told me off, and you know how shy she is. But the worst was Evan. I love him so much, and when he told me that he wasn't sure about things, about me--\" She shook her head. \"I felt like someone had punched me.\"\n\n\"It's tough,\" agreed Morgan. She'd felt just as blindsided after Shane's odd combination of confession and marriage proposal.\n\n\"I didn't realize I'd been so awful, dumb as it sounds,\" said Brianna. \"In my head, I was just trying to outdo the two of you, I guess. I don't know why. Insecurity, I guess.\"\n\n\"You don't ever have to outdo anyone, Brianna,\" said Jenna. \"Certainly not us.\"\n\n\"I know, thanks, Jen.\" Brianna nodded. \"I'm trying. Evan and I are going to counseling, for both of us, because we want this to work. And I want it to work with you guys, too. I don't know if we need counseling for that, but I'm willing if you think so.\"\n\nMorgan smiled and covered Brianna's hands with her own. \"That is an amazing offer, but I think we're on the right track. Let's just keep that as an option for now, but I think if we keep being honest with each other, we'll be okay.\"\n\n\"All right.\" Brianna held up her mug and all three women clinked theirs in a toast. \"Now that we have me all settled, let's figure out your problems, Morgan.\"\n\n\"Oh, I'm good. I don't really have any problems.\" Morgan almost believed it.\n\nBrianna and Jenna exchanged skeptical looks.\n\n\"Right,\" said Brianna. \"Like you aren't heartbroken because Sexy Shane said all the wrong things.\" She winked at Jenna, who didn't even bother to cover a grin.\n\nMorgan jerked her head up. \"Sexy Shane? Who told you that?\"\n\nBrianna snickered. \"Found out through the grapevine. That's a great nickname, though. Does he know about it?\"\n\n\"Knowing Casey, probably.\" Morgan gave in and smiled. \"She's not wrong.\"\n\n\"No, she is not,\" said Jenna. \"So, let's fix this.\"\n\n\"I don't think there's anything I can fix,\" said Morgan.\n\n\"But you could talk to him,\" said Jenna.\n\n\"I don't know what to say.\"\n\n\"Tell him you love him,\" said Brianna.\n\n\"I already did.\"\n\n\"No, not directly,\" said Brianna. \"You said you were going to tell him, or something like that, but you didn't actually tell him in those words.\"\n\n\"And then what?\" asked Morgan.\n\n\"Well, then, if he's not a complete idiot, he'll say he loves you, too,\" said Jenna.\n\n\"I'm not sure that matters,\" said Morgan, and then slouched when her sisters both gave her baleful looks. \"I mean, of course it matters, but if he has to get over the fact that he loves me, then I don't know what to do.\"\n\n\"He does love you, though,\" said Brianna. \"That's a good start.\"\n\nJenna nodded in agreement.\n\n\"It is,\" said Morgan. \"But he said--\" she had to clear her throat to continue \"--he said it was against his instincts and better judgment. Like he's not supposed to like me, let alone love me. What am I supposed to do with that?\"\n\n\"Was it loving you that was against his instincts?\" asked Brianna. \"Or the getting married thing?\"\n\nMorgan started to answer but paused. \"I don't know. Is it important?\"\n\n\"I think so,\" said Jenna. \"You've told us that he's, um, apprehensive about getting married, right?\"\n\n\"Oh, yes,\" said Morgan.\n\n\"Then I'd lay odds that's what got him upset,\" said Brianna.\n\n\"Maybe.\" Morgan shrugged. \"Maybe it's for the best that it ends now.\"\n\nBrianna shook her head. \"You don't mean that. It may be hard to believe, but I saw you guys together and even when I was being a bitch, I knew it was a good thing. Maybe some of it is opposites attract, but whatever it was, you two were good together.\"\n\n\"You have to give him a chance,\" said Jenna. \"Just one more chance, to explain. If you love him, Morgan, it's worth that much, isn't it?\"\n\n\"Yes, it is.\" Morgan nodded, then let out a rough laugh. \"Maybe this time he was actually as bad with words as he always claims he is.\"\n\n\"All right, I think that's about as fixed as this can get for tonight,\" said Jenna. \"I say we watch a movie.\"\n\n\"That's fine,\" said Brianna, \"although I had another idea if you want.\"\n\n\"Sure, what?\" asked Jenna.\n\nMorgan smiled. Jenna was always up for something new, always enthusiastic.\n\n\"I thought maybe, if you want, you could do our hair and makeup,\" said Brianna, then ducked her head. \"Just for fun, and not if you don't want to. I'd understand if you're tired of it.\"\n\n\"Really?\" Jenna clasped her hands. \"You mean it, Bri?\"\n\n\"I do.\" Brianna nodded and ran a hand through her hair. \"Go for it. I need a change anyway.\"\n\nMorgan felt a warmth in her chest as Jenna bounced up to hug Brianna. It was good to have her sisters back.\n\nx-x-x-x-x-x\n\nA few days later, Shane stood around the corner from The Neutral Zone. He told himself he should just go in, but sent a text instead. It would be easier to take rejection from Morgan if he couldn't see her.\n\nThey'd exchanged a few texts over the last week or so but neither of them had done much towards talking in person. Shane knew for his part he was both busy and nervous; he assumed she was too. He'd also spent a lot of time thinking of how he could show Morgan he wanted her in his life because she made it better, not because he was afraid of losing her. He thought he'd figured it out, but he wouldn't know for sure until he told her.\n\nTime to take the plunge, he thought.\n\n\"Is it okay if I come to the store?\" he texted her. He paced while he wanted for a response.\n\nSure, she replied. Anytime. It's a slow day.\n\n\"Cool. Be there soon,\" he sent back. Before he could change his mind, he walked around the corner and into the store.\n\nMorgan looked up when the door chimed and visibly jumped.\n\n\"Hey,\" he said. Shane took her in: blond hair with blue and purple stripes, wide green eyes, a t-shirt with an anime character on it, the tattoos down her arms. He realized she was entirely his type, and had never been so glad to see her.\n\n\"How long have you been out there?\" Morgan asked.\n\n\"Long enough, I hope, to have worked up some courage,\" he said.\n\n\"We have whiskey in the back,\" Casey said. \"Liquid courage is better than none.\"\n\nShane chuckled. \"Thanks, but I think I'm good.\"\n\nCasey shrugged. \"Suit yourself.\" She walked over to the game room, giving them some space.\n\n\"Am I that scary?\" asked Morgan.\n\n\"No.\" Shane shook his head. \"I'm not afraid of you. I was afraid I'd lost you, but I hope I haven't.\"\n\nMorgan averted her eyes. \"I don't want you to stay with me because you're afraid of things.\"\n\n\"No, that's not it.\" He gave her a rueful grin. \"There's me, bad with the words again. Before I say anything else potentially wrong, could you come back to my place with me?\"\n\n\"Now? I don't know.\" Morgan bit her lip and he resisted the urge to kiss away her uncertainty. \"I don't want to leave Casey alone, and it's too early for her to close up.\"\n\n\"Which is why Josh is coming,\" said Casey, poking her head out from the other room. \"I just called him.\"\n\n\"Did you work this out ahead of time?\" Morgan asked Shane.\n\n\"I wish I could say yes, that I was that clever, but no. I should have thought about that,\" he said.\n\n\"Don't worry about it.\" Casey waved a hand. \"Go on, the two of you. Beat it.\"\n\nShane waited while Morgan gathered her things from the back.\n\nCasey narrowed her eyes at him. \"Don't fuck it up.\"\n\n\"The plan is to not do that,\" he assured her.\n\nThe ride back to his house was slightly awkward and a little tense, but he had expected as much. The conversation was short and stilted as they traded news about family and friends. Shane was just glad Morgan was talking to him and took it as a positive sign.\n\n\"Wow, you've done a lot,\" said Morgan as she stepped out of the car. \"It looks great.\"\n\n\"Thanks.\" Shane took a moment to look over the house. \"Evan and Chloe and even Mark helped me with the front porch,\" he said. \"Chloe's got a gift for finding things at yard and estate sales, and found that swing and chair. I let Mark paint things, I figured he couldn't mess that up too much.\"\n\nMorgan laughed. \"I guess he's not the handy type then?\"\n\n\"No, or at least he won't admit it. But come in, please? I wanted to show you something.\"\n\n\"All right.\" Morgan followed him inside.\n\nShane led her through the living room and kitchen, where he'd also done more work. It was looking pretty good, he thought, although there were still plenty of things to do.\n\n\"Here,\" he said, opening the door to a room off the kitchen. He studied her as she looked around the room.\n\nHer eyes widened as she took it in. Sheer curtains softened the light that poured into the room. There was a writing desk against one wall and a drawing table against another. A shelf unit held pads of paper and various art supplies. Small framed prints of iconic spaceships hung around the room. It was, he hoped, a room conducive to writing stories.\n\n\"What--what is all this?\" Morgan asked.\n\n\"Do you like it?\" He leaned against the doorjamb.\n\n\"I--yes, it's amazing. But I don't understand.\"\n\nShane took her hands in his. \"I thought about us, and I ran the numbers.\"\n\nMorgan's mouth quirked up at the corner. \"The numbers?\"\n\n\"Yes. I'm bad with words so I thought I'd try numbers. Can you give me a chance to explain?\"\n\n\"Okay.\" She nodded.\n\n\"I have been scared of commitment for, like, ninety percent of my life,\" he said. \"My parents batted zero when it came to love and relationships, and once I was old enough to understand that, I didn't want it to happen to me. So I held back, even with friends. Probably barely gave fifty percent most of the time. Then I met you, and you just give one hundred percent to everything. It's impressive and a little intimidating.\"\n\nHe paused for a breath, hoping Morgan was still with him. She squeezed his hands in encouragement.\n\n\"I'm tired of a fifty-percent life,\" he said. \"My life is one hundred percent better with you in it, and I want you to stay in it. I love you.\"\n\n\"I love you, too,\" said Morgan, and he felt a weight roll off his shoulders. \"But--\"\n\nHe shook his head and put a finger over her lips. \"I am so sorry about what I said, and how I said it. I was trying to tell you how much I wanted you in my life, and I did it in what might have been the worst way possible.\"\n\nMorgan laughed a little. \"It wasn't great, that's true.\"\n\n\"I want to be with you, Morgan. I know there are risks, there are ups and downs, and I'm still nervous about things, but I want to be with you. Not just 'be with you anyway.' I want to be with you because my life is better with you in it, and I need and want to take a chance on that.\"\n\n\"Okay.\" Morgan smiled. \"Me too.\"\n\n\"Oh, thank god.\" Shane wrapped his arms around her and held her close, then kissed her. He hadn't realized how much he'd missed her until he sank into the kiss.\n\n\"Did you really do all this for me?\" Morgan asked. She walked around the room, touching the desk, the table, the pictures as though she wasn't sure they were real.\n\n\"I did.\" Shane nodded. \"I wanted you to want to be here, too, and I figured you'd need space to write. I admit I was trying to sweeten the deal a little.\" He sighed. \"That sounds awful.\"\n\nShe circled back to him. \"The room is wonderful, but that's not why I want to be here.\"\n\n\"I figured the new coffee machine would up my chances, too.\"\n\nMorgan laughed and shook her head. \"You really were trying to stack the odds in your favor, weren't you?\"\n\n\"Yeah.\" He shrugged. \"I couldn't help it. When you left after we had that argument, or whatever it was, it really, finally hit me that I was alone. For a long time I told myself I was good with that; less risk, less hurt.\" He shook his head. \"But I was wrong, and it took coming close to losing you for me to realize it.\"\n\n\"At least you did,\" she said, and took his hand.\n\nShane tugged her close and rested his forehead against hers. \"Sorry it took so long. I know I'm a lot of effort.\"\n\nShe smiled. \"I told you, you're worth all the effort.\"\n\n\"I am so glad you think so.\"\n\nEpilogue\n\nMorgan looked in the mirror and tugged at her dress to straighten it.\n\n\"You look fine,\" said Jenna. \"Stop that, you're going to rip a seam.\"\n\n\"Do I look okay, really?\" She was wearing the bridesmaid dress she'd bought for Brianna's wedding. It left her arms bare, and she was having second thoughts. Maybe she should have gotten a jacket or shawl.\n\n\"Morgan, no one here cares about your tattoos,\" said Brianna. \"And I'm sorry I was such a bitch about them.\"\n\n\"Thanks, Bri. But that's over and done.\" Morgan smiled.\n\n\"You look great,\" said Jenna. \"Green is a great color on you.\"\n\n\"Thanks.\"\n\n\"Okay, I'm going to go check on the food,\" said Brianna. \"Jenna, can you check on Astrid?\"\n\n\"I'll go check on Casey,\" said Morgan.\n\nShe found her friend in the breakroom, which they'd converted to a dressing room for the day.\n\n\"How are you doing?\" Morgan asked.\n\n\"I'm going to fucking puke,\" said Casey. \"I can't believe I'm this nervous. Shit.\"\n\n\"Relax,\" said Morgan. \"You'll be fine. You look terrific.\"\n\n\"I don't know. Maybe I should have worn a dress.\" Casey wore a red pantsuit with a floral design that her mother had made. It was based on a traditional Chinese dress, but Casey hated dresses, so her mother had adapted it.\n\n\"No,\" said Morgan. \"You always said dresses were a tool of the devil.\"\n\n\"Well, they are, but if Astrid liked that better I'd--\"\n\n\"Casey,\" said Morgan firmly, putting her hands on her friend's shoulders. \"Stop it. Astrid would love you if you didn't wear anything--no, stop--and she'll love you in a pantsuit. She knows you hate dresses.\"\n\nCasey gave Morgan a hopeful look. \"But if everyone's naked, we'd be reenacting that scene from Next Gen. It'd be, like, minimalist cosplay.\"\n\n\"Too late, we're all here and dressed,\" said Morgan.\n\n\"Damn.\"\n\n\"Case, it's going to be fine. Twenty minutes from now it'll be over. You'll be married and we'll be eating the food.\"\n\n\"Jesus, don't say food.\" Casey closed her eyes. \"Or I really will puke.\"\n\nJenna knocked on the door and poked her head in. \"It's time. You look awesome, Casey.\"\n\nCasey cleared her throat. \"Of course, I do. Thanks, Jen.\"\n\nJenna grinned and left.\n\nMorgan took Casey's hands. \"You do look awesome, and you'll be fine. Just remember, in twenty minutes you'll be married to Astrid. That's what it's all about.\"\n\n\"Right. Right.\"\n\n\"Plus, you are Casey Lu, and you don't get fucking scared of anything.\"\n\n\"Damn straight.\" Casey took a deep breath. \"Let's get this show on the road.\"\n\nMorgan opened the door and stepped out with Casey following.\n\nThey'd closed the store for the day. Casey's half of the bridal party gathered by the counter while the guests were seated in the game room, which had been rearranged for the wedding. Astrid and her half were in the game room behind a changing screen as both brides had wanted to avoid seeing each other before the ceremony.\n\n\"All right, let's go,\" said Casey.\n\nMorgan signaled Vincent, who started the music. She waited a moment, then stepped in and walked to the front of the store where the minister waited.\n\nShe smiled as Astrid walked to meet Casey, her baby bump more prominent than it had been a month before. Astrid and Casey met and held hands, and Morgan stepped aside to join the others on Casey's side. The ceremony was brief, but Morgan had time to wipe her eyes discreetly.\n\n\"That was nice,\" Shane said afterwards. He slid an arm around Morgan's waist and snugged her up against him as they sat at one of the tables that had been set up after the ceremony.\n\n\"Thanks for all your help.\" She leaned her head on his shoulder.\n\n\"No problem.\" He dropped a kiss on her head. \"After all the help Astrid gave me at the house it was the least I could do.\"\n\n\"I'm pleased for them,\" said Morgan. \"They look so happy.\"\n\n\"And you look beautiful,\" he said.\n\n\"You don't have to flatter me,\" she said, \"I already love you.\"\n\nHe laughed. \"Lucky me.\"\n\n\"Damn straight, as Casey would say.\"\n\n\"Will you stay with me, so my luck doesn't run out?\" he asked.\n\n\"Stay with you?\" Morgan sat up, puzzled. \"I wasn't planning on--\" Her eyes widened at the small box he held out to her. \"Shane, are you asking--\"\n\nHe glanced around and kept his voice low. \"Sorry, I just couldn't wait any longer. I am asking you to stay with me. I'm not really sure what that means, exactly, except I love you and want you in my life. I would be happy to keep living together, as we are. But if you want to get married, I will happily marry you.\"\n\nMorgan wiped her eyes as she managed a laugh at the same time. \"And you won't panic?\"\n\n\"I would only panic if you said no.\"\n\nShe held out her hand and he slid the ring on. \"Well, I wouldn't want you to panic,\" she said with a smile."
    ],
    "authorname": "PennLady",
    "tags": [
        "funny",
        "geek",
        "love story",
        "romance novel",
        "drama",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/worth-the-effort-ch-09"
}