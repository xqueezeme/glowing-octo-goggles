{
    "title": "Brad's Road Trip Ch. 17",
    "pages": [
        "Ok, after nine months, here it is... the long-awaited Chapter 17 -- and 18? \n\nYes, and 18. I've never done this before, but I decided to split this day into two chapters. It was going to be 7 or even 8 pages in Lit, and that's a bit too long for a chaptered story. Both are written though, so hopefully they'll post on consecutive days. This one is light on actual sex, but the next one makes up for it in a big way.\n\nOn a suggestion from my editor, here's a small warning: there are some mild non-consent/reluctance themes in this part. They're not even as strong as the ones in Chapter 7, but they come out of nowhere and might catch you a little off-guard.\n\nAs always, thanks to my editor, AnInsatiableReader, for helping me clean this thing up. When I send it to her, it looks nothing like the finished product you're about to read.\n\nDay 16\n\nFriday, June 27, 2007\n\nGrand Junction, CO\n\nI woke up the next morning stiff as a board -- in more ways than one.\n\nSleeping in a tent had never bothered me. Hell, I'd spent more than a few nights in the Marines sleeping on the cold, hard ground, and at least now I had a sleeping bag between me and the floor of the tent. Still, my back was barking at me this morning, and I figured it had something to do with last night's adventures with Janine. I'd bent myself into some positions that would make a yoga instructor blanch, all in the name of showing her a good time. It had worked, but I was paying for it now.\n\nThat wasn't the stiffness I was most interested in, though. I'd been having a steamy dream about Kelly. As with most dreams, my brain had already forgotten most of the details, but my cock hadn't. I'd managed to toss and turn my way out of the sleeping bag sometime during the night, and my cock was pointing to the sky in the chilly morning air.\n\nAt least, I thought it was morning. Internally, I knew it had to be after sunrise by now. Even though my back was a little sore, I didn't usually sleep less than 8 hours without help from an alarm clock. But as I opened my eyes, it wasn't exactly bright outside.\n\nI reached up to rub my eyes and felt hair there, effectively blocking my vision. At the same time, I realized there was a weight on my chest that stretched down my side, past my hip and down my right leg. When I'd hung up with Kelly last night, I was definitely alone. That was no longer the case.\n\nI knew it wasn't Janine. She might have been laying half on top of someone at my campsite, but it wasn't me. Chad had taken a liking to her, and she'd been focused on him from the moment he walked into the bedroom as part of my surprise. She might have woken up and convinced him that leaving the RV before morning was a good call -- ya know, so Gunny Granger didn't come back and commit Marine genocide when he saw his bed -- but they would have just gone to his tent. \n\nSara and Liz were possibilities, but they weren't exactly the types to throw themselves at men. I knew for a fact Sara didn't have to chase, and Liz had a similar personality. I had no doubt I could have brought Sara in here with me last night, and I had a feeling Liz would be interested as well. Neither was the type to come in unsolicited, though.\n\nEither way, it was time to unwrap my present. I pushed the hair out of my eyes. It was brown, curly and attached to a lithe, athletic body that wore a maroon Mesa State soccer tank top, barely-there gray shorts and little else. \n\nAnd, yes, I knew who she was.\n\n\"Lindsay,\" I said, gently shaking her shoulders. \"It's time to wake up.\" \n\nI hadn't even considered her. Sure, she'd flirted with me when I met her yesterday, but I had judged her as painfully shy -- way too shy to do something like this. Maybe she did it after everyone left. I didn't know where she would fit into my weekend, but it was time to find out. \n\nShe stirred very slowly. The sun wasn't quite blinding, but it was bright enough to be a nuisance, and she brought one hand up to shield her eyes from it. She slowly realized she was in an unfamiliar place and started looking around. When her eyes finally settled on mine, the look on her face was textbook deer-in-the-headlights.\n\n\"Oh, wow,\" was all she said. It took maybe three seconds for her entire face to turn the same color as her shirt.\n\n\"Good morning,\" I said. I gently stroked her hair as she got used to her surroundings.\n\n\"Yeah, hi,\" she said. She turned her head away and laid it back on my chest, looking down my body. It didn't take long before she gasped. \"Is that because of me?\"\n\n\"Well, I woke up with it,\" I said. There was no point in telling her about my dream. \"And you're lying half on top of me. So, yeah, I guess so.\"\n\n\"That's hot,\" she said. \"That's the first time I've ever turned a guy on.\"\n\nI couldn't help but laugh. \"I can pretty much guarantee it's not. You're a sexy girl, Lindsay. Unless every guy you've met is blind, they've noticed.\"\n\n\"Well, this is the first one I've ever seen in person,\" she said, surprising me again. \"So I'm gonna keep looking, if you don't mind.\"\n\n\"Be my guest,\" I said. She moved her head down onto my stomach, putting her face no more than half a foot away.\n\n\"Can I touch it?\" she asked, tentatively.\n\n\"Sure,\" I said. \"We can't go any farther than that, though.\"\n\nI felt her fingers wrap around the base of my cock and squeeze gently. \n\n\"Why not?\"\n\nMy reasons hadn't changed from last week in Indy, when some girls had wanted me to pop their friend's cherry. Even if it was just a one-time thing, losing your virginity was a big, emotional deal, and I didn't want to have any kind of deep emotional experiences with anyone but Kelly. I didn't feel like explaining all of that right now, but what I came up with was true, too.\n\n\"I'm just passing through your town for a couple days, Lindsay,\" I said. \"Odds are you never see me again after this weekend. You should save your virginity for someone special, or at least, someone who's going to be here two days from now.\"\n\n\"Who says I'm a virgin?\" she asked.\n\n\"Well, you said you'd never seen a cock in person before,\" I said. \"So either you've been having sex in the dark, or...\"\n\nShe slapped herself in the forehead with her free hand.\n\n\"Besides, I sort of reserved today for someone else.\"\n\n\"That girl Sara, right? Liz's friend?\" she asked.\n\n\"Yeah,\" I confirmed. \"She and I have some unfinished business from back in Texas.\"\n\n\"I figured,\" she said. \"Her and Liz were talking about you off and on all night. Right after you went in here, we left and went over to the party side so we could get a little loud. More than an hour later, we came back, and those two were still talking about you.\"\n\n\"Oh?\" I asked. \"Anything I should know about?\"\n\n\"I should probably let you figure that out on your own.\"\n\n\"Fair enough,\" I agreed. \"What led to you sleeping in my tent?\"\n\n\"I can't hold my alcohol,\" she said. \"I had two beers and was way too drunk to make it back to our campsite.\"\n\n\"Wait,\" I said. \"Two beers?\"\n\n\"I know,\" she said. \"I've lived a sheltered life, what can I say? Same reason I've never had sex. My parents are very, very religious, and while I love them, they never let me have a normal childhood. Everything was about school, church or soccer. So, I had a 4.0 GPA, I'd never missed a Sunday until I started school last fall, and I managed to earn a scholarship to play soccer. In exchange, I went to exactly zero parties in high school, I can count on one hand the number of times I've had alcohol, and this is the closest I've been to having sex.\"\n\nShe squeezed my cock again for emphasis.\n\n\"Anyway, one of the other girls dared me to come in here and sleep with you, so I did,\" she said. \"Though, I'm pretty sure just sleeping wasn't what she had in mind. You were passed out when I came in, it was cold, and I'm not wearing much. So I laid down as close to you as I could and fell asleep.\"\n\nShe stroked me a couple times, then let go as she sat up. I could tell she was woozy, and she put her palms against her temples.\n\n\"Wow,\" I said, recognizing the signs. \"Hung over after two beers. I wish I could do that. I could buy a brand new car with all the money I'd save.\"\n\nShe chuckled, her voice showing more humor than I'm sure she felt. I quickly pulled on my boxers and a pair of shorts, then stood up and took her hand.\n\n\"Let's get you some water.\" We walked out into an empty campsite. The familiar aromas of bacon, sausage and coffee drifted in from other groups, but our little campsite was a ghost town. Everyone was either up and already gone, still passed out, or had never made it back; I was guessing mostly the last two. I went to an ice chest sitting on the tarp next to the big tent and grabbed a bottle of water for Lindsay.\n\n\"I'm gonna head back to my own tent,\" she said after taking a few sips.\n\n\"You sure?\" I asked. \"You can stay here, if you want.\"\n\n\"I know, but right now, I'm really embarrassed.\"\n\n\"Aw, there's no need for that,\" I said. \"It's not every day I wake up to a pretty girl laying against me. Even if you were just there on a drunk dare, I enjoyed the company.\"\n\n\"Thanks,\" she said, \"but I'm gonna go.\"\n\n\"Okay,\" I said. \"Don't be a stranger, though.\"\n\nShe smiled. \"I'm sure I'll see you later today.\"\n\nAfter she was out of sight, I grabbed my phone and found that it was a lot later than I thought -- damn near 10 in the morning. My splash screen, a picture of Kelly's spread pussy lips that she'd sent me a week or so ago, greeted me as I unlocked the phone, and I couldn't help but smile as memories of last night flooded in. \n\nOur sessions had been getting hotter and hotter lately, and last night's was no exception. Don't get me wrong -- phone sex with Kelly had been fantastic the very first time, and it had never been anything less than great. But starting after the orgy I'd organized last week in Indianapolis, our little chats had consistently blown my mind. That was the halfway point of the trip, and the anticipation of our meeting the day after tomorrow was pushing our talks higher and higher.\n\nThe day after tomorrow...\n\nThat was a sobering thought. All the fantasies, all the expectations, all the what-might-bes -- they would all turn into reality on Sunday night. In my mind, it was a foregone conclusion that real life would blow fantasy land out of the water, but really, there were no guarantees. We'd certainly set ourselves up for one hell of a massive tumble if it didn't.\n\nI wanted to talk to her again, even though we'd just hung up a few hours ago. She'd sent me one text, about 30 minutes ago.\n\n\"Wake her up with a massage. Get her close, leave her hanging. Tease her about coming after her today.\"\n\nAh, yes. Kelly had been excited about my plan to seduce Sara today, almost giddy to know she'd get to contribute to today's story time, at least indirectly. She said she'd think on it and try to at least come up with an idea to get me started. It appeared she'd done just that. \n\nI walked over to the girls' tent and unzipped it as quietly as I could. I wasn't sure what I would find -- if one or both of them had brought someone back, this might end up being extremely awkward. If they had, though, he was already gone. There were just two sleeping bags, set up lengthwise in the tent with their feet near the door and their heads near the back wall, and only one body in each of them.\n\nLiz was on the right, bundled up so tightly in her gray mummy bag that all I could see was her blonde hair and the upper half of her left cheek. Sara had apparently gotten too warm overnight, because she lay on top of her purple sleeping bag. Her curly red hair was still pulled up in the ponytail she wore yesterday. She wore nothing but a pair of blue shorts, but she was sleeping on her stomach, so nothing was on display.\n\nI briefly wondered if I was invading their privacy, but I decided it would be ok. For one, I could barely see any of Liz in her sleeping bag. Sure, Sara was topless, but she was face-down, so all I could see was her back. Even if she had been face up, hell, it was nothing I hadn't seen before, right?\n\nBefore I talked myself out of it, I sat down between them, facing Sara's half-naked, prone body. I rubbed my hands together vigorously for a few seconds to get rid of any lingering chill, then gently touched her right arm. She didn't stir as I softly rubbed from her shoulder down to her elbow, so the next time I got to her shoulder, I continued over it and down to the small of her back. Still no reaction.\n\nI got on my knees so I could have access to both sides of her and started a gentle, sensual massage. I'd taken a sports medicine course at a local college in San Antonio, and I'd done a couple of deep-tissue massages, but this was different. It wasn't designed to rub out cramps, and if she had any soreness or built-up lactic acid in her muscles, this wasn't going to help. It was just a light, casual rubdown of her neck, shoulders and back, designed to both stimulate her nerve endings and relax her muscles. \n\nA couple of minutes in, she started to respond. Her eyes didn't open, but several soft, tiny moans escaped from her lips. She was either awake and trying to hide it, or her subconscious was trying to signal its approval. I rubbed her neck gently, then slowly moved across her traps until I reached her shoulders. I worked down her back, starting on either side of her spine and pushing outward toward her sides.\n\nSara really did have a nice body. She was slightly on the thin side, but it wasn't the anorexic, sickly thin that comes from eating like a rabbit. On the contrary, Sara ate as bad as or worse than any Marine I knew. No, Sara's thin was of the lithe, athletic variety, born out of running like a rabbit -- she ran at least one marathon every other month. Freckles ran rampant all over her upper body, spilling over onto her shoulders and upper back. Even after they faded out, her skin was still white and milky like you might expect from a true redhead.\n\nI decided to push things forward a little and straddled her lower back, placing one knee on either side of her and sitting back on her ass. It was a far better angle of attack than sitting off to one side, but of course, it also placed some of my body weight directly on her. I knew it wouldn't take long for her to wake up this way, and she didn't disappoint.\n\n\"Mmmm,\" she moaned as my thumbs worked their way up her back, just centimeters from her spine. \"Feels...\"\n\nAs she slowly woke, she first gave in to what she was feeling, but she quickly realized something was up. I felt her tense up immediately.\n\n\"What the fuck?\" she half-shouted.\n\n\"Relax,\" I whispered. \"You're safe. It's just me.\"\n\n\"Brad?\" she asked, her voice softer now. Her muscles loosened some, but not completely.\n\n\"Yeah,\" I whispered again. \"Keep your voice down or you'll wake Liz.\"\n\n\"What the fuck are you doing?\" Her voice was a whisper now, too, but while mine was soft and relaxed, hers was clipped and choppy, as if she was spitting between each word.\n\n\"Giving you a wake-up call,\" I explained. \"Just a little massage to start your day off right.\"\n\n\"But\u2014\"\n\n\"But nothing, Sara,\" I said. \"I can tell you're enjoying it, so just hush. It's a lot easier to do this when you're not interrupting me.\"\n\nMy tone of voice was playful, but I never stopped what I was doing, and after a few moments, I guess she decided I was harmless. She relaxed fully, and I felt her muscles respond accordingly.\n\n\"Much better,\" I said. I leaned down and planted a kiss just behind her ear. Her breath caught in her throat as she inhaled sharply.\n\n\"What was that?\" she asked.\n\n\"A little reward,\" I said. \"For calming down and letting me make you feel good.\"\n\nI continued the massage, my fingers dancing all over her back and shoulders. I never stayed in one place too long -- I'd rub her shoulders before moving down to her sides, then shift back up to her neck before gently running a palm down her spine. When I moved back so that I was straddling her thighs, I added her lower back and the tops of her ass cheeks to the rotation.\n\n\"Jesus, Brad, that feels amazing,\" she sighed, still sounding half-asleep. I trailed my fingers from her hips upward across her rib cage, stopping to lightly knead the outsides of her breasts before moving up to her armpits. I thought for sure she'd say something when I touched her tits, but she just let out another contented sigh.\n\n\"Time for your legs now,\" I said. I turned around and knelt over her lower back, granting me unlimited access to her legs and feet. Her shorts were the only obstacle between me and her ass. Using the \"better to ask forgiveness than permission\" principle, I jumped right in on her asscheeks, kneading them both vigorously. My fingers brushed across her inner thighs, but I wasn't ready to go there just yet. \n\nShe had yet to say anything, but I didn't think she was quite ready for my grand finale. I worked my way down her legs, which were as toned and athletic as any pair I'd gotten my hands on during this trip. I knew Sara kept herself in great shape, so I tried to pay her body the respect it deserved.\n\nI moved past her knees and grabbed her left ankle, bringing her foot up to my face. I massaged the heel and paid some attention to her toes, then placed a few tongue-filled kisses on her arch before grabbing the other foot and repeating the process.\n\n\"Oooh,\" she whispered when I sucked the little toe on her right foot into my mouth. \"That's kinky.\"\n\n\"Maybe,\" I agreed. \"I don't hear you complaining.\"\n\n\"I didn't say I wanted you to stop.\"\n\nI set her legs back down on the sleeping bag and went back to rubbing them, starting at her ankles, moving up past her knees and on to her thighs. I flattened my palms on the junctions where her legs and ass met, circling my thumbs toward her inner thighs. As my hands moved closer together, my thumbs inched ever closer to her pussy. \n\nI kept that motion up for another five minutes, taking my time getting where I wanted to go and hopefully ratcheting up the torture for Sara. When my thumbs finally made contact with her lips, she whimpered and bent her knees, drawing her feet towards her ass. I could feel the dampness on her shorts and the heat radiating from her crotch.\n\n\"What are you\u2014\"\n\n\"Shh.\" I pulled my left hand up and used it to squeeze her right cheek, while my right hand stayed between her legs. I was being very deliberate now, rubbing two fingers up and down her slit, drawing more of her juices out against the cotton of her shorts. \n\nMy cock had been raging since I'd first touched Sara, and my loose gym shorts were doing nothing to restrain it. Needless to say, being close to her like this was turning me on, and it was time to show her that.\n\nI rotated my body around until I was facing her head again. She whined slightly when my fingers left her pussy, but she stopped when she realized what I was doing. I flattened my body against Sara's, pressing my legs against hers, with the tops of my feet pressed against her soles. I hadn't bothered with a shirt, so she could feel my chiseled pecs brushing against her bare back. My hands shot out and rubbed up and down her arms, lying in front of her. My lips kissed across her shoulders, up her neck and over her jawline.\n\nThe most acute physical contact, of course, was between our hips. My cock pressed wantonly against her ass. It had broken free from my boxers, so only our shorts and her panties stopped it from making direct contact with her most private of places. She was moaning softly now, trying not to wake up her friend but unable to hide her desire from me. She arched her back as well as she could with my weight on top of her, attempting to push her ass into my cock. \n\nI slid backwards until my cock dipped between her legs, then pressed forward. There was too much fabric to be sure, but I was hoping my cock was right up against her pussy, so that if we could magically will our clothes away, there'd be nothing stopping me from plunging forward into her tight depths. Her breathing was ragged and her back was rapidly rising and falling as her heart beat faster.",
        "And then, it was over. I rolled my body off hers, and after placing a quick kiss on the back of her neck, I stood up.\n\n\"What the...\" she trailed off, confused. \"What the fuck?\"\n\n\"I have to go for now,\" I explained, my fingers on the tent zipper.\n\n\"You're just going to leave me like this?\" She was keeping her voice as low as possible, but I was fairly certain Liz was awake anyway. \"All wound up, without finishing me off?\"\n\n\"Oh, I'll finish you off, all right,\" I said. \"We're not done, Sara. We're just done for now. I told you I would deal with you today, and there's a lot of today left.\"\n\nBefore she could answer further, I unzipped the tent and left.\n\n************************\n\n\"It sounds like you were perfect,\" Kelly said a couple of hours later. I'd gone back to my tent and caught another hour of sleep, then went out in search of sustenance. I bought some kind of unhealthy fair-type food -- deep fried and guaranteed to trim days off my life, but oddly satisfying. Now I was wandering the grounds and engaging in what had turned into my favorite pastime over the past two-plus weeks.\n\n\"It was all your idea,\" I said. \n\n\"Yeah, but they weren't my fingers,\" she said. \"You just about made her cum by pressing your cock against her, and I don't have one of those.\"\n\n\"Well, thank God for that,\" I replied with a chuckle. She was laughing on the other end, too. \"But I left just in time. Any longer, and I think she'd have fucked me right there, with her friend watching and everything. She's probably a little mad at me right now, but I've set the table pretty nicely for later.\"\n\n\"What's next?\" she asked.\n\n\"I'm not sure,\" I said. \"We'll see how the day goes. I'd like to sneak up on her at some point today and take advantage of her when she's not expecting it. She's always been pretty observant at work, one of those really annoying people who don't get surprised by anything, so if I could catch her off-guard, that would be pretty excellent. Of course, I have to find a way to do that that doesn't border on stalker-ish rapist.\"\n\nKelly laughed again, and it was a spectacular sound. \"I'm sure you'll figure it out.\"\n\n\"You're sure you're okay with this?\"\n\n\"Brad, what is this, the 15th time you've hooked up with a girl since we've been talking?\" she asked. \n\n\"I don't think there's a scoreboard,\" I said. \"But this is the first one I have history with, and really, she's the first one I've actively pursued.\"\n\n\"She's the only girl with sexual knowledge of you who doesn't think you're God's gift to women,\" Kelly laughed. \"You'd be doing her a disservice if you didn't try to correct her.\"\n\n\"You know, if I didn't need them both, I might try to roll one of my eyes out the back of my head right now.\"\n\n\"You'd look a little weird, but you'd still be hot,\" she said. \"Brad, I told you last weekend, I get a little queasy every time you tell me about another girl. But I get over it.\"\n\n\"I guess I just don't understand how,\" I said. \"Maybe I shouldn't ask.\"\n\n\"No, you probably should just shut up and be thankful that you have such an awesome girlfriend,\" she said. \"But it's an easy explanation. From all accounts, you're a great lover -- the more I hear, the more excited I am to experience you in person. You're an even better storyteller, though. I can't believe how hot you get me every time we talk. But there's an even bigger reason.\"\n\n\"Oh?\" I asked. \"And what's that?\"\n\n\"I only have to do it for another two days,\" she said. \"I agreed that I wouldn't get jealous when you started this trip. Once you started calling me your girlfriend, I promised I would still share my boyfriend with whoever you met along the way. But after tomorrow, I don't have to anymore. I finally get you to myself.\"\n\n\"I agree completely,\" I said. \"You have no idea how often I've been doing something with someone, and I wish like hell it was you instead.\"\n\n\"So, just do it again. Don't hold back today,\" she said. \"I'll be okay.\"\n\n\"Deal,\" I said. \"While I'm trying to correct the failures of my past, what will you be doing?\"\n\n\"Hooray for family outings,\" she said. \"I'm driving to Craters of the Moon right now. We're going to do all the cave-exploring stuff, which I'm so looking forward to, and then there's a big family picnic tonight. Thank God I have to work tomorrow, or it would be more of the same.\"\n\n\"You'd prefer to stay indoors, huh?\" I asked.\n\n\"Oh, hell no,\" she said. \"I'm actually a little jealous of you; not because of all the women, but because you get to camp. I'm glad we're going to be outdoors today, but I'm not a fan of the typical tourist stuff, like Craters, and to be honest, my family can be a little bit much sometimes.\"\n\n\"So do I see camping trips in our future, then?\"\n\n\"You damn well better take me camping,\" she said emphatically. \"I've grown up with it. In fact, I guess that can be my personal thing for the day. I've been camping ever since I can remember. I get a lot of things from my mom -- the cooking and temper, for example -- but this one, I got from my dad. He took me out once a month when I was a kid, then I'd go out with my friends as I got older. I've taken Tyler four or five times. It'd be more, but I have to find someone to take with me, because a baby can be a handful when you're in a house, much less when you're out in nature.\"\n\n\"Your mom doesn't camp?\"\n\n\"My mom loves camping, as long as it comes with an air conditioner, indoor plumbing and preferably a hotel room key,\" she said with a laugh. \"She'll do a cabin or an RV if she has to, but my mom would rather die than sleep in a sleeping bag.\"\n\n\"That's a shame,\" I said.\n\n\"It is,\" she agreed. \"You know what I've actually never done, though?\"\n\n\"What's that?\"\n\n\"I've never had sex while camping.\"\n\n\"Really?\"\n\n\"It's not like I have a ton of experience, Brad,\" she said. \"I've been with a total of three guys. Tyler's sperm donor, that guy Aaron from the dance club the other night, and then I had a boyfriend for a little while a few months after Tyler was born. That's it.\"\n\n\"And none of them ever wanted to get you naked in the great outdoors?\" I asked.\n\n\"They never had the chance,\" she said. \"I dated Tyler's father for almost a year, but the sex was a one-time thing. You already know about Aaron.\"\n\n\"What about the boyfriend?\"\n\n\"Ex-boyfriend,\" she emphasized. \"He was a pretty boring guy, really. Not adventurous in or out of bed. And even if he had been, we were together mostly during January and February of last year. Those aren't exactly prime months for getting naked in nature.\"\n\n\"Yeah, frostbite does horrible things to sex organs, or so I've heard,\" I joked.\n\n\"Exactly,\" she said. \"So, yeah. It might not be quite as big of a fantasy for me as the baseball field is for you, but I'd love to have sex under the stars.\"\n\n\"That would be pretty amazing,\" I agreed.\n\n\"Like you haven't already done it,\" she scoffed.\n\n\"I've never done it with you,\" I responded. \"Kelly, I'm getting the impression that no matter what I've done, whenever I do it with you, it's going to feel like the first time all over again.\"\n\nShe didn't reply for a long moment.\n\n\"Wow,\" was all she said when she finally did.\n\n\"Are you okay?\" I asked.\n\n\"That's actually one of the things I've been worried about,\" she said. \"You have all this experience. You've done so many things I've never even thought of. I'm an open-minded girl, and I warmed up to you pretty quickly, but like I just said, I'm really inexperienced with this stuff.\"\n\n\"That doesn't matter, Kelly,\" I said. \"We'll learn together.\"\n\n\"You don't have much to learn,\" she said. \"Or at least, that's what I thought. Hearing you say it'll feel like the first time all over again... I don't know. It just made me feel a little better, that's all.\"\n\n\"I've had a lot of sex,\" I agreed. \"But I've never...\"\n\nI trailed off, not able to keep my mouth moving.\n\n\"You've never what?\" she asked.\n\nI took a deep breath.\n\n\"There's a phrase I want to use with you, Kelly, but I'm nervous,\" I said. \"Not because I'm afraid of feeling this way, or because I don't know how to say it. I'm nervous because I don't want to scare you off, and I don't want to break the eggs before I get them in my basket, so to speak.\"\n\nI paused to breathe again, and she didn't fill in the gap.\n\n\"Sex is one thing, honey,\" I said. \"But with you... ah, to hell with it. I've never\u2014\"\n\n\"I understand, Brad,\" she said. \"Me either. Let's not say it now. Let's wait until we meet.\"\n\n\"Probably a good idea,\" I said. \"Anyway, I've never done that. Sex with you, out in nature, under the stars... I bet that would be fucking incredible.\"\n\n\"I've fantasized about it for a long, long time,\" she said. \"Before, it was always with a random, nameless person. It's been kind of nice to put a face and a name with the fantasy the past couple of weeks.\"\n\n\"You understand, I'm not talking about in a tent,\" I said. \"I don't mean around a campfire, or in the back of a truck, or even at a concert with people around. You and me, all alone in the middle of nowhere. Maybe up in the Tetons, or somewhere out in the Sawtooths, along the Snake River, maybe. Just a cool, clear night, nothing around but the moon and stars for miles and miles. I'd take an hour just to undress you, then I'd lay you down in the grass and... own you. Possess you. Claim you.\"\n\n\"Oh, God, Brad,\" she muttered.\n\n\"It would take all night, Kelly,\" I said. \"We'd still be going at it when the sun came up. Who in their right mind would want to sleep with a beautiful woman like you right there next to him?\"\n\n\"I need to pull over,\" she panted. \"You're making me so wet.\"\n\n\"Does the thought of that get you hot, baby?\" I asked, knowing the answer. \"Laying on the ground, staring up at me while I grind against you? There'll be no pounding, no slamming, no pulling your hair or smacking your ass. Just rhythmic motion, my cock sliding back and forth, back and forth, in and out, all the way out then all the way back inside.\"\n\n\"Fuck, Brad,\" she stammered. \"I need to cum.\"\n\n\"Your legs wrapped around my waist, your heels drawing me in deeper and deeper with each stroke,\" I continued. \"Pressing against your breasts, feeling your nipples digging into my skin as our hearts try to beat out of our chests. Our lips locked together and our eyes boring into one another. Staring deep into your soul, begging you to give in, to surrender to me, to cum for me, but only with my eyes...\"\n\n\"Oh, baby, yesssssss,\" she moaned as her orgasm washed over her. She said nothing else, but I could hear her breathing into the phone. I listened, mesmerized with the sound of her breath. I was listening so closely that I could hear the little hitch in her breath.\n\n\"Kelly?\" I said.\n\n\"Hmm?\"\n\n\"Thank you.\"\n\n\"For what?\"\n\n\"For being you,\" I said. \"And for being mine.\"\n\nThat did it. The little hitch turned into full-blown tears. Making a woman cry was never something I enjoyed, but I was pretty sure these tears were a good thing.\n\n\"Are you okay, Kelly?\"\n\n\"I'm great,\" she said. \"That was just... intense.\"\n\n\"I know,\" I said. \"I hope you managed to pull over. I wanted to slow down for you, but the images just kept rolling out, and I had to tell you.\"\n\n\"I'm glad,\" she said. \"And I did. I took the next exit and pulled onto a side road. Good thing, too, because if I'd had that orgasm while driving, I'm pretty sure I wouldn't be driving anymore.\"\n\nI chuckled. \n\n\"Thank you, Brad,\" she said. \"You really know how to make me feel special.\"\n\n\"You are special,\" I answered. \"I'm just smart enough to state obvious facts.\"\n\n\"Whatever,\" she said. \"Anyway, I think the exit for Craters of the Moon is just a few more miles, so I guess I should let you go. The cell signal out there is probably pretty awful, so I'm not sure how much I'll be able to text or talk to you.\"\n\n\"Aww, poor Kelly,\" I said. \"You went to all that trouble to help me get Sara into bed, and now you won't even get to read the play-by-play.\"\n\n\"I will eventually,\" she said. \"You better text me all day and let me know how it goes.\"\n\n\"I will,\" I promised. \"Talk to you soon.\"\n\nI hung up and looked around, having no idea where I was or who, if anyone, was nearby. That was another byproduct of our phone conversations -- when we got good and locked in, I tended to forget everything else. Usually I was in bed or driving down a long, boring interstate with cruise control on, so there wasn't anything to see, but out here in public, I could wander into traffic and not realize it.\n\nI'd ended up walking circles around the fair booths, and if anyone had heard the details of our raunchy conversation, they weren't around now. Of course, I hadn't been able to get off with people around, so the hard-on raging in my shorts was going to have to wait.\n\nI spotted the Marine booth ahead, so I headed that way. I thought maybe I'd see Janine, but she wasn't there. Gunny Granger was at one table talking to a prospective recruit, and Sgt. Callahan, the guy I'd met last night, was sitting at the other table.\n\n\"Morning,\" I said. \"Remember me?\"\n\n\"Yeah,\" he said, getting up to shake my hand. \"Sgt. Carver, right?\"\n\n\"Yeah, but I'm a civilian now, so call me Brad.\"\n\n\"Tom,\" he agreed, shaking hands with me again. \"Andrews looked pretty happy this morning when we came to give them a break. So I guess you guys had a good night.\"\n\n\"We did,\" I said. I didn't offer details, and he didn't expect them. \"She back at the RV now?\"\n\n\"Probably,\" he said.\n\n\"I'll stop back by and see her later. You guys work together here in Grand Junction?\"\n\n\"Yeah, and she seems pretty cool, from what little I know,\" he said. \"I've only been here a few weeks, and I leave again on Wednesday for another week.\"\n\n\"More recruiter training?\" I asked.\n\n\"Nah, I'm done with all that,\" he said. \"I actually play for the Marine Corps soccer team. We have a tournament in DC next weekend.\"\n\n\"We have a soccer team?\" I asked, bewildered. \"I had no idea.\"\n\n\"Most people don't,\" he said. \"We go different places a few times a year and play tournaments against the services. Sometimes the service academies' teams are in them, if it's the offseason. It's pretty fun, even though I took a ton of shit from the guys back at Pendleton about being a soccer player.\" \n\n\"You won't get any from me,\" I said. \"I don't understand soccer that well, and to be honest, it's pretty boring to watch, too. But you're representing the Corps on a national level, in anything. That's pretty cool.\"\n\n\"Thanks.\"\n\n\"I guess you're pretty good, huh?\"\n\n\"It's all I did growing up,\" he said. \"I played other sports, too, but around seventh grade I stopped all the others and focused on soccer. Once I picked a sport, my parents got totally into it. Travel teams, summer camps, club squads, and then when I got into high school, the school team, too. It was fun, but it was hard to lead a normal childhood.\"\n\nHis statement struck me as odd. Hadn't I heard that exact statement recently...?\n\nIndeed, I had. And now, I had an idea.\n\n\"Hey, I know you skipped last night because it was country music, but what about tonight?\"\n\n\"Hell, tonight's Lynyrd Skynyrd,\" he said. \"That's not country. That's southern rock. I'm definitely going to be there.\"\n\n\"Cool,\" I said. \"We'll be sitting up near the front, on the side by the merchandise table. Come find us if you want to hang out a little bit.\"\n\n\"Will Andrews be there, too?\"\n\n\"Probably,\" I said. She probably won't be sitting on my lap this time, I didn't add.\n\n\"All right man,\" he said. \"I'll try to find you guys.\"\n\nA few other people had stopped at the booth, so I left him to his job. It was still early, so I figured I'd head back to the campsite and see what everyone else was up to. I was halfway there when I got a text.\n\nI saw you this morning. \n\nLiz.\n\nMe: Oh yeah? And where was I? \n\nLiz: In my tent. Doing naughty things to my best friend. \n\nI was right. She had been awake, for at least some of it --\n\nMe: Yeah, that might have been me. \n\nLiz: I was awake when you came in. I saw everything. \n\n-- or for all of it. I took a second to figure out what to say next. She was obviously texting me for a reason. At first I thought she wanted to yell at me for invading their privacy, but if she'd seen everything, she could have stopped me the moment I came in. \n\nThat left... flirting, maybe? \n\nMe: Jealous? \n\nLiz: You have no fucking idea. \n\nBingo. \n\nMe: Please accept my deepest apologies. Can I make it up to you tomorrow? \n\nLiz: I'd like that, but I won't be here tomorrow. I have a family reunion. Sunday?\" \n\nMe: I'm leaving Sunday morning. \n\nThe festival was four days long, but I was leaving after the third. The last day's lineup was underwhelming, but even if it had been spectacular, I wanted to get home in a hurry.\n\nLiz: Well, shit. That just leaves today, and I know what your plans are today. Or should I say, who they are. \n\nMe: Yeah. I owe her in more ways than one. \n\nLiz: So I've heard. Been hearing about your little encounter for three years now. \n\nMe: More than that. She got a little mouthy last night, too. \n\nLiz: Yes, she did. She was pretty drunk, but I couldn't believe she said that in front of everybody. Sometimes she can be a bitch. \n\nMe:  So can payback. I'm gonna make today an all-day mindfuck. \n\nI hit send, but then I had a crazy thought, so I sent another one right behind it. \n\nMe: Wanna help? \n\nUntil now, her replies had been almost instant, but this one wasn't. Really, I didn't know how she would take that. On one hand, she and Sara were best friends, and I was just some guy here for the weekend, so why would Liz help me mess with Sara? But on the other hand, it seemed like Liz was on my side and agreed that Sara had it coming.\n\nFinally, the little chime went off. Her reply was simple. \n\nLiz: How? \n\nMe: Want to keep her off-balance. Show up where she's not expecting me. \n\nLiz: We're almost at the showers now. Pretty sure she won't be expecting you there. \n\nDamn, she was good.\n\nMe: Excellent. Be there in five minutes. \n\nLiz: You want to surprise her after? \n\nMe: During.\n\nHer reply was just an emoticon with raised eyebrows, indicating her surprise. I pocketed the phone and took off on a dead run back to the campsite. I grabbed some soap, a towel and a change of clothes, and then took off for the showers. \n\nAt these things, people usually showered either right after they woke up or right before the last couple of shows started, to get ready for the party. Right now was just about smack in the middle between those two times, so the area was pretty dead. I found Liz waiting just outside the women's area. She was dressed, but it was clear she'd just finished in the shower. Her hair was dripping onto the concrete, and her ample breasts pressed invitingly against a too-small white tank top, with her nipples in plain view. I didn't even try to hide my staring.\n\n\"You like what you see?\" she asked with a smirk on her face. Her bright green eyes were dancing as she watched me stare.\n\n\"I do,\" I said. \"I'd like what I can't see better.\"\n\nShe didn't even look down. \"I can feel 'em, so I know you can sure as hell see 'em.\"\n\n\"Fair point,\" I agreed. \"But I'd still like to get that shirt out of the way.\"\n\n\"Uh uh,\" she scoffed. \"There's no room for me on your little agenda, remember?\" \n\nShe sounded almost offended, and I briefly considered blowing off my plans and just making a move on Liz. I had nothing to prove to her. \n\nBefore I could change my mind, though, Liz pressed forward. \"She's in the last stall on the left. She takes long, lazy showers, but she's been in there a while, so you might want to hurry.\"\n\n\"I'll try to tear my eyes away,\" I said. I took another second or two to enjoy the view, then made eye contact with her again. \"Anyone else in there?\"",
        "\"Two others,\" she said. \"Both on the right side, near the door. So be quiet.\" \n\nI snapped off a mock salute, and Liz rolled her eyes as I walked through the doorway. There was a row of five showers on each side of the room, and a row of benches right down the center. The girls in the first two stalls were talking to each other through the drawn curtains, and their words drowned out any noise I might have made as I walked by. \n\nWhen I reached Sara's stall, I stripped off my clothes and set them next to her things on the bench. I pulled her curtain back a few inches, and saw her sleek, toned back and amazingly sexy freckled shoulders staring back at me. Perfect.\n\nI slipped into her stall and pulled the curtain back into place. Before she realized I was there, I pressed my body against her back and slid my hand over her mouth from behind.\n\n\"Relax,\" I whispered into her ear as she screamed into my palm. \"It's me. It's Brad again.\"\n\nShe broke free from my grasp and turned toward me. I was momentarily taken by how sexy she looked with her face flushed red in anger as the water pelted her left cheek. She snapped me out of it when she balled her hands into fists and started pounding my chest. I put a finger up to my mouth in the classic \"shh\" gesture.\n\n\"You scared the shit out of me,\" she whispered. If she'd been using her voice, she'd have been screaming loud enough to attract the festival's police. \"What the fuck are you doing here?\"\n\n\"That's the second time you've asked me that today, Ms. Winters,\" I said, gently turning her around and pulling her back against my chest. We stood with our backs to the curtain, the water falling between her back and my right shoulder. \"I told you I wasn't done with you yet.\"\n\nMy hands slid up and cupped her breasts, immediately finding her nipples and squeezing. She inhaled sharply and tilted her head back, and I gently bit down on her neck. We both knew it would leave a mark, and for some reason, that made me smile. \n\nI lathered up with a handful of her soap and spent several minutes feeling her up, letting my hands roam all over her body. I spent plenty of time on her breasts, but also paid tribute to her flat stomach, her shoulders and her thighs. I moved my hands between us and rubbed the backs of my hands over her tight ass.\n\n\"You have a fucking incredible body, Sara,\" I whispered over the spray. \"I hope you know that.\"\n\nShe nodded. \"Thanks. You're not so bad yourself.\" Her hands moved over my thighs, until one tucked itself between our bodies and grabbed my cock. \"One part in particular, I'm a big fan of.\"\n\n\"Is that so?\"\n\n\"I had an issue with how you used it,\" she said, a smile playing on her thin lips. \"But I never, ever complained about the equipment.\"\n\nI'd had enough of that. I turned her around and clamped my mouth over hers and attacked her tongue with mine. She whimpered slightly, and when I finally slid my fingers down her body and onto her clit, it turned into a moan.\n\n\"Fuck, Brad,\" she stammered. \"Please don't leave me hanging this time.\"\n\nI said nothing; I just started kissing her again. I dipped my right index finger down and teased her pussy lips for the second time today. She was extremely wet, and it wasn't just the shower water.\n\n\"Let's see if I know how to use it any better now, huh?\" I asked, pushing her forward until her hands pressed against the tile. She looked back over her shoulder and smiled widely, letting me know that whatever I had in mind, she was down for it.\n\nI gripped her hips and slid my cock between her thighs, grinding my cock the length of her slit without ever entering her. When I felt the head of my cock brushing her clit, I pulled back.\n\n\"Nooo..\" she moaned, but I wasn't finished yet. I repeated the motion a half-dozen more times, each with slow, languid strokes designed to heighten her pleasure without pushing her over the edge. I moved my hands from her hips to her breasts, grasping them as they hung below her. I was gentle yet firm with her nipples, increasing the pressure until she squealed.\n\nFinally, it was time, so I pulled my cock back across her lips until the head was lined up perfectly with her pussy. I released one of her tits, using that hand to rub up and down her smooth, toned, sculpted back. I pressed forward slightly, allowing maybe half the head to sink into her pussy.\n\n\"Fuuuuck,\" she hissed. I moved both hands back to her ass now, knowing I'd need them both to hold her in place. Sure enough, she tried to push back and get more of me inside of her, but I managed to hold her off. \n\n\"So impatient,\" I said softly. I squeezed and kneaded her ass cheeks, trying to generate as much friction inside her pussy as I could without actually moving my cock. I had two reasons for that. The first was that I was right on the edge of exploding.\n\n\"Impatient?\" she stammered. \"You know how long I've been waiting for you to fuck me and blow my mind?\"\n\n\"I do know,\" I said, sliding in another half-inch further. My entire head was sheathed in her tight, velvety pussy, and I was using every bit of willpower and stamina the Marines had drilled into me not to lose it. \n\nThe second reason? I didn't want to cum if I wasn't going to get her off, too... and I had no such plans at the moment.\n\n\"So after three years, what's the big deal about waiting a little bit longer?\" I released her hips and backed away, brushing my ass against the shower curtain.\n\n\"Are you fucking kidding me?\" she said, louder than anything else we'd said to each other since I'd come in. If the girls up front were still there, they definitely heard it.\n\n\"I always keep my promises, Sara,\" I said, leaving the stall altogether and wrapping a towel around my waist. \"And I promise I'll see you later.\"\n\nI tried not to laugh as I grabbed my things and turned to leave. Her face was redder than a tomato.\n\n\"I'M GOING TO FUCKING KILL YOU, CARVER!\"\n\nThe girls must have been gone, because no heads peeked out from behind the curtains as I made a quick exit. Liz was still standing by the door, her hair a little bit drier but still looking downright fuckable. She was laughing as I approached.\n\n\"Happy to see me, solider?\" she asked, motioning toward the obscene bulge under my towel.\n\n\"It's Marine,\" I said. \"And yeah. You're fucking beautiful. Why wouldn't I be happy to see you?\"\n\nThat stopped her for a second. She hadn't expected that reply, so it took her a moment to come up with something to say.\n\n\"Thanks,\" she said, looking at the ground. \"I see you didn't get yours, either.\"\n\n\"Course not,\" I said. \"She's pissed at me for leaving her on the edge, but I've done it to myself twice, too. It wouldn't be fair to make her wait but let myself get off.\"\n\n\"No,\" she agreed. \"Besides, you're already one-up in the orgasm column, remember?\" she added, sticking her tongue out between her perfect teeth.\n\n\"Watch it, lady,\" I said. I reached around her and swatted her lovely ass, and got a small moan in return. \"Besides, you and I are in this together now.\"\n\n\"How so?\"\n\n\"Sara's a smart girl,\" I said. \"I guarantee you she doesn't think I just happened to be here the same time as you guys were. She's gonna know you helped me.\"\n\nHer eyebrows shot up, and I tossed her a wink as I went around the corner for my own shower.\n\n***********\n\nI thought about going back to the tent and pounding one out, to try and relieve a little tension before I hooked up with Sara later. After the morning and early afternoon I'd had, I was ready to explode, but I hadn't jerked off alone on this whole road trip, and I'd be damned if I was going to start now.\n\nIf I'd been able to reach Kelly, I'm sure she'd have been more than happy to help me take the edge off. Alas, my girlfriend hadn't answered either of the texts I'd sent to tell her what happened in the shower, so I figured she must be in a cave somewhere and well out of cell phone range. \n\nOh well. Keeping myself together long enough to ensure Sara enjoyed herself would be tough, but then again, I wasn't the same guy I was three years ago. I'd figure it out.\n\nThe campsite was nearly deserted when I got there. I heard noises coming from the big tent, noises which I quickly identified as Janine and Chad reliving the highlights of last night. As I got closer, I noticed the tent flap was half open, so I knelt down and closed it without attracting attention. \n\nHitting it with the same girl two days in a row? Yeah, Chad definitely had a thing for her.\n\nI needed to find something to keep me distracted until my next encounter with Sara -- whenever that might be. At first, I wanted to plan everything out, but the shower thing fell into my lap without even trying, so I decided to just go with the flow. I wanted one more hit-and-run encounter with her prior to the main event, but I knew inspiration would come to me when I least expected it. \n\nAs for the main event? I'd been waiting for this for three years, so I wasn't leaving that to chance. I'd gotten an idea during my earlier walk around the concert grounds, but I needed one more thing to pull my plan together. With that in mind, I got dressed for the evening and headed back to the concert area. \n\nI passed the Marine booth, but they looked pretty busy, so I just waved at Gunny Granger and walked toward the stage, near where we'd be sitting tonight. One of the no-name, local acts was still on, so there wasn't much of a crowd. The only significant gathering of people near me was at the merchandise booths. All the artists performing today had someone hawking their gear, but the Lynyrd Skynyrd setup was the most elaborate. They had four tables and were selling everything from T-shirts and sweatshirts to bumper stickers, CDs, coffee mugs and posters. There were maybe 10 people in line right now, but as the sun sank lower and things cooled off, they'd get busy.\n\nI waited my turn, and maybe 10 minutes later, I struck up an enlightening conversation with one of the sellers. His name was Jason, and he looked to be in his late 30s or early 40s, with a salt-and-pepper beard hanging down to his sternum. He was willing to help me out, and five minutes and a $50 handshake later, we had an agreement, and I had a gargantuan smile on my face. \n\nThere were still a few hours before any of that happened, though, so I left. I looked around for Sara or anyone else I recognized, but I didn't see anyone. It was oppressively hot, so it was time to hit the beer tent. I bought two Coors Lights -- not my preferred choice, but what else was I going to find in the Rockies? -- and sat at a picnic table. \n\nI texted my mom to tell her I loved her, and I texted Tommy, one of my best friends from high school, to let him know I'd be back in town on Sunday. As I was sending those out, Hannah sent something about how sore she still was, three days after our meeting in Illinois. I was about to reply when a pair of arms wrapped around my shoulders and chest.\n\n\"I wish you didn't plan so far in advance,\" Liz whispered in my ear. \n\n\"Oh?\" I asked, rubbing my hands over her forearms.\n\n\"I know you have something planned for my best friend tonight,\" she said, continuing to whisper. \"And I wish you were gonna do it to me instead.\"\n\nShe sat down next to me on the bench, wearing the same clothes as earlier. Her nipples weren't trying to slice through the thin fabric this time, but for some reason, I still couldn't stop staring at her chest.\n\n\"I wish you weren't leaving tomorrow,\" I replied. \"Because I'd like to do it to you, too.\"\n\n\"Oh well,\" she said. \"Idaho isn't too far, right?\"\n\nI laughed, deciding not to mention Kelly right now. I wasn't ashamed, of course -- I had no reason to be. It just wasn't something I wanted to explain to Liz, and I knew she'd go tell Sara, possibly ruining my plans for the evening.\n\n\"Just up the road,\" I said. \"So, where is your best friend?\"\n\nShe shrugged. I'd managed to pull my eyes up to her face, but they snapped right back when her boobs bounced inside her tank top. I figured that was her intent.\n\n\"She ditched me right after the showers,\" she said. \"Wherever she is, she's pissed at me.\"\n\n\"I told you,\" I said. \"Sorry I got you on her bad side, though.\"\n\n\"No worries,\" she said. \"She had it coming. Anyway, she can be pretty petulant. She gets mad about the dumbest shit, but she gets over it pretty quickly, too.\"\n\n\"No arguments there,\" I said. \"We've been working together off and on for three years. She gets mad more easily, but I stay mad longer.\"\n\n\"I'll remember that,\" she replied. \"I'm sure we'll see her soon.\"\n\nBehind us, whatever band was playing started a new song.\n\n\"You wanna go watch for a bit?\" I asked, extending my hand to her. She took it with a big smile.\n\n\"Sure.\" We walked hand-in-hand toward the main stage, just making small talk. We hadn't quite made it yet when sure enough, we spotted Sara walking toward the food booths. She was with Lindsay and a few other people. \n\nAs I figured I would, I got a wicked idea.\n\n\"Uh oh,\" Liz said, just noticing Sara was nearby. \"There's Sara.\" She tried to let go of my hand, but I squeezed it tight until she stopped.\n\n\"Wanna have some more fun?\" I asked.\n\nShe grinned. \"I'm already in her doghouse, so why the hell not?\"\n\n\"Let's make sure she notices us holding hands,\" I said. We veered off course to get closer to her, and she spotted us when we were about 50 feet away.\n\n\"Brad!\" she shouted, and both Liz and I looked in her direction.\n\n\"Hey, Sara,\" I said. We kept walking, and it wasn't more than a few seconds before Sara realized we were holding hands.\n\n\"What the hell, Liz?\" she asked. Liz started to answer, but I cut her off.\n\n\"She said you were mad at her about the showers,\" I replied. \"And if you're gonna get mad about something so trivial, I'm not sure I want to put any more effort into you. So, I figured I'd spend some time with Liz instead.\"\n\nI pulled on Liz's arm, and we kept walking. Sara's jaw dropped open, as did Lindsay's, but no one said anything. \n\n\"You're terrible!\" Liz said when we were out of sight, dropping my hand and slapping me on the shoulder.\n\n\"Yeah, that was maybe a little much,\" I agreed. I led her back into the beer tent, and peeked through one of the openings in the canvas canopy. \"She won't have to think about it long, though.\"\n\nI found Sara's group, still walking toward the food booths.\n\n\"Let's go.\" I took her hand again and we made our way toward Sara, staying far enough back to not get noticed. I divided my attention between following them and finding a secluded place to hatch my plan.\n\n\"You gonna clue me in on what we're doing?\" Liz asked.\n\nI finally spotted the perfect place. The line of food booths wrapped around a horseshoe-shaped path, but at the deepest part of the curve, there was a customer service booth and a first aid tent. Behind those were three small metal sheds. Sara and her group were about halfway down the line of booths, and I was praying they wouldn't find something they liked before the curve. \n\n\"Sure,\" I said, pulling her behind the food booths and picking up my pace. \"Hopefully they get to the end of this little path, and before they curve back around and make their way up the other side, I'm gonna pull her out of the group and drag her behind those metal sheds.\"\n\n\"Oooh,\" Liz said. \"More torture?\"\n\n\"I'm gonna let her off the hook, at least a little bit,\" I said. \"Just a tiny orgasm. Enough to hold her until later.\"\n\n\"Won't the others realize she's gone?\" Liz asked.\n\n\"Maybe,\" I said. \"But you'll be there to distract them. Most of them are your college friends, anyway, right?\"\n\nShe smiled. \"They are. I like it.\"\n\nWe sprinted past the opening between the two food booths where Sara was walking, and we made it without her seeing us. When we reached the end, I hid behind the information booth as Liz walked back into the masses.\n\nI peeked out and watched as the group approached us. Liz approached them and started talking to Lindsay, ignoring the dagger-filled glare she was getting from Sara. I waited until they passed my hiding spot and fell in behind them. Liz looked over her shoulder, met my eye and gave me a wink as I approached.\n\nThe other four girls in the group were a few feet ahead of Sara, whose face was beet red from some combination of anger, heat and alcohol. My timing couldn't have been better. I grabbed her left wrist and pulled her away, taking her between the information booth and the first aid tent. She shrieked, but it was more in surprise than an attempt to alert anyone that she was in danger. Before she could let out a real scream, she realized who was holding her arm.\n\n\"Brad?!\" she blurted out. \"What the fuck? Let me go!\"\n\nI turned back to her and placed a finger over my mouth. \"Shh.\" I quickly dragged her around the corner of the middle shed before she could say anything else. Her breathing was ragged from how quickly we'd been walking, and she hadn't yet caught her breath when I pushed her against the metal siding and forced my mouth onto hers.\n\nShe was still clearly pissed about my mini-kidnapping, as well as what I'd said a few minutes ago, but she was too turned on not to kiss me back. I flattened her hands against the building with one of my own, pressing them over her head. I used my free hand to roughly paw her breasts through her T-shirt.\n\n\"C'mon, Sara,\" I said, half-whispering, half-rasping when I came up for air. My tongue and teeth attacked her neck. \"You didn't really think I was going to abandon you, did you?\"\n\nShe whimpered in response. I moved my fingers south, slipping inside her shorts and panties. This was the first time I'd come at her pussy from the front, and I was pleased not to encounter any hair as I made way down. When I finally touched her, she was dripping. We'd only been going at it for a minute or two, but she was already soaked.\n\n\"It's called fucking with you,\" I said. \"You've done it enough with me over the past few years, so you should recognize it immediately. But that's all it is. I'm gonna take care of you.\"\n\nI rubbed her clit furiously for a few seconds before pushing one finger into her dripping pussy.\n\n\"You better let Liz off the hook, though,\" I said, nipping at her neck between words. \"She's just helping you enjoy this even more.\"\n\n\"But...\" she stammered, stopping to inhale quickly as I shoved a second finger up into her. \"She's my friend. Not yours.\"\n\n\"Oh, I think she and I are friends now, too,\" I said. \"Besides, friend or not, she knew you were being a bitch to me last night.\"\n\nI let her hands go and used my other hand to pull her hair back, tilting her neck up and exposing her throat. As I continued, I noticed some movement out of the corner of my eye. We had an audience, and I was pretty sure I knew who it was.\n\n\"That's how you were acting, Sara,\" I said. I licked from the top of her T-shirt up to her chin. \"You were a little bitch in heat. I think you decided weeks ago you were going to fuck me again. You were going to give me another chance to prove I'm the man I said I was. You've heard all the rumors going around the building about how I can lay the pipe now, and you wanted to see if they were true. And you didn't want to wait; you were going to get exactly what you wanted, the moment you got here. After all, that's you -- Sara Winters, the hot little redheaded bitch who always gets exactly what she wants.\"\n\nI yanked on her hair again for emphasis and gently bit her windpipe. I was rubbing her clit with the knuckle of my thumb while I finger fucked her. Her face was flushed, and if I could see underneath her shirt, I was guessing I'd find that her whole upper body was red, too. \n\n\"But that's not how this is going to go, Sara,\" I muttered. \"You're mine now. For the rest of the day, I do to you what I want, when I want, and how I want. If I want to break into your tent and rub your sexy body while you sleep, then I will. If I want to molest you in the shower, get you right up on the edge of cumming then walk away, I will. And if I want to pull you off to the side, shove you up against a wall and finger your sweet little pussy until you cum all over my hand...\"",
        "Her eyes were closed, but she opened them when she heard that last bit.\n\n\"...then I will.\"\n\nI dipped down, thrusting my shoulder under her arm so she could wrap her arm around my neck. She lifted her right leg up and wrapped it around my waist, too, so that her weight -- all 100 or so pounds of it -- was being supported by either me or her left leg. \n\nFinally, after all the teasing, I was ready to make her cum for me. I glanced to my right to make sure I had our spectator's undivided attention, then I went for broke.\n\n\"And that's what I want, Sara,\" I said, attacking her clit and sucking on her earlobe as I talked. \"I'm not going to leave you hanging this time. Your dripping little pussy wants to cum for me, and I'm going to let it. Cum for me, you sexy little slut. Cum on my finger, right fucking now.\"\n\nI didn't need to add the last sentence -- she was already there. Her juices flooded my fingers, no doubt soaking her panties and shorts in the process. She clung to my neck as she cried out into my shoulder, using a language the most traveled linguistic scholars have never heard. I kept fingering her through the orgasm, only stopping when I felt her squirming away.\n\nI let her hang on me for another minute, then I gently laid her against the wall. I noticed we'd lost our audience as I pressed my body against Sara's, pushing my steel-like cock against her lower stomach.\n\n\"We're even now, Sara,\" I said. \"Three years ago, I had one and you didn't get any. Now, you've had one, and I'm not getting any.\"\n\nShe started to say something, but I forced my tongue into her mouth so she couldn't speak.\n\n\"Later,\" I said, knowing what she was going to say. \"Later, I'll take care of you again, and you'll take care of me. And I promise, by the time we finish, we won't be even. You'll be way, way ahead.\"\n\nI left her standing against the wall and walked away. I found Liz waiting in front of the first aid tent.\n\n\"Give her a minute,\" I said, \"then go get her and help her back to camp. I took a lot out of her, and she's gonna need to change her shorts, too.\"\n\nLiz just nodded. Her entire upper body was deeply flushed, and she was breathing pretty heavily.\n\n\"Did you enjoy the show?\" I asked her.\n\n\"Come here,\" she said. \"Let me show you.\"\n\nI walked up to her, and she slid two fingers of her right hand into my mouth. I carefully licked and sucked each of them, until they were as clean as if she'd just washed them.\n\n\"You taste fucking amazing, Liz,\" I said. She stepped up and replaced her fingers with her mouth, and I kissed her back for most of a minute before I pulled away.\n\nI realized as I walked away that I was damn near ready to explode, so I quickly headed toward the woods behind the quiet zone campground. There was a little stream back there that I could sit beside, and it was far enough away that I could barely hear the music. \n\nI'd been on edge all damn day, and these two latest incidents with Sara and Liz had just ratcheted up the intensity. The main concerts were starting in about an hour, and I knew the girls would be there shortly thereafter. If I was this keyed up when they sat down, it wouldn't take more than a stiff breeze to make me cum in my shorts and ruin the whole night.\n\nAnd this was going to be one fucking epic night...\n\nTo be continued...\n\n**********************\n\n As I said, this is just the first part of the day. The setup, if you will; the next chapter will be the payoff for it. Thanks for being patient. Hopefully it posts the day after this one does. "
    ],
    "authorname": "SpotInTheSand",
    "tags": [
        "sara",
        "brad",
        "kelly",
        "liz",
        "camping",
        "festival",
        "road trip",
        "shower",
        "massage"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/brads-road-trip-ch-17"
}