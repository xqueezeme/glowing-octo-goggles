{
    "title": "Endangered Ch. 04",
    "pages": [
        " Chapter 4 \u2013 LTPC\n\nHi everyone,\n\nOur adventure starts to unfold a little more.\n\nHowever, this chapter does contains soft-core incest. I understand that this is distasteful to some people so either stop reading right here or cover your eyes with your hand and say \"LALA LA LA LA LA!\" while scrolling down the page when the action starts. This relationship will be a recurring theme, but certainly not the focus of the story.\n\nSorry about the wait on this one, I have a new editor for this chapter, Etaski. I cannot stress enough how amazing Etaski's support in my time of editorial crisis has been. Thank you.\n\nStay tuned and I hope you enjoy.\n\nLTPC\n\n***\n\nChris pondered the recent changes to his not-all-that human body as he operated the stovetop espresso machine he'd found in the kitchen. During his shower with Annabel, he'd decided to re-establish his ritual of morning coffee delivery to Susan, now he was just brooding as he waited for it to boil up. \n\nHe might look human, but he barely felt it. He'd gone for a razor only to find his face absolutely smooth, not a trace of prickly stubble. Annabel hadn't minded, teasing him for having a baby face till he kissed her into submission. It also still looked like he'd just had a fresh Hollywood wax, no navel or armpit hair either. On close inspection even the tiny hairs all over his body where absent.\n\nWhen he'd gotten back into their bedroom and decided to do his morning exercises, starting with push ups he discovered that they were just a joke. For the first time in his life, he'd managed the fabled one arm push up, then asked Annabel to push down on his shoulders as he tried again. It barely required any effort.\n\nHis smell and hearing were still enhanced, but his vision was back to human standards. It was all a bit disconcerting, to be walking around in a body he thought he knew, at least when in his half form he had constant reminders not to break things, like the unfortunate mug he'd first gotten out of the cupboard.\n\nThe rumbling stovetop got his mind back on track, he poured, adding both milk and sugar, stirring with a spoon that felt like it came from a kid's tea set. Slipping into Susan's room silently and closing the door, he put it down on the bedside table before sitting next to his mother on the bed.\n\nSusan's raven hair was spread across the pillows and around her face. Her slightly more pronounced upper lip meant her mouth was always just a little open when she was relaxed, he thought it was beautiful. It struck Chris, as he watched her peaceful features, that this woman had devoted her entire life to him. He owed her so much and promised himself he would repay her, make a life for her where she could be happy now that he didn't need her to be his protector any longer.\n\nAs if feeling his promise, indeed, between Beings such charged feelings can often be detected, Susan's eyes opened and flicked to him and she found herself being watched by a very serious looking Chris. \n\n\"Good morning, honey,\" Susan croaked. \"You're okay after last night? You had me worried.\" She sniffed the air and saw the cup on the bedside stand. \"Mmmhh... is that my coffee? I'd really hoped you'd keep pampering me.\"\n\nShe sat up and took a sip but something was wrong. He didn't reply, just kept holding their blue-eyed gaze. It was very intense, made her tummy flutter a little. Susan couldn't stand it.\n\n\"What is it Chris? What's up?\" she asked, settling on her knees next to him.\n\n\"Mom...\" he started. \"Susan. I owe you so much I can't even comp..\"\n\n\"Sweetie, you don't owe me anything. I love you.\" Susan was a little exasperated. Already his sweet odor was exciting her, helping her wake up better than the coffee could.\n\n\"Let me finish. Please?\" \n\n\"Okay.\" She yawned, wiping some sleep away and stretching her arms up, giving him a little teasing look at her nipples pressed against cloth.\n\nWatching her in her old t-shirt and flannel bottoms, Chris was momentarily distracted by her little show and some midriff before he got back on topic.\n\n\"I...\" he sighed. \"Susan, you were only twenty-three when my parents died. You didn't have to care for me yourself, heck, you could probably have sold me for a fortune. But you didn't. You became my mother and raised me in isolation. It must have been so hard at times and I'm sorry you had to do it alone.\"\n\nSusan held his eyes for as long as she could before her own started brimming with tears; she turned away.\n\nWhy am I so emotional around him these days? she thought, trying to get herself back under control. He wasn't wrong, it had been hard, but seeing him now growing into a man made it all worth it. Now her body was telling her to pluck the fruits of her labour, her mind seemed incapable of mounting any real resistance.\n\nChris pulled her gently into a sitting hug, automatically rubbing her back. \"Sorry, Mom, don't cry.\"\n\n\"Okay.\" Susan sniffed into his neck. \"I'm a mess, huh?\"\n\nThere was his tantalising smell again, tickling her nostrils, insidiously working onto her lungs. Her emotions raged against each other; she wanted so badly to just kiss his skin but would it be wrong? They were all each other had for so long, loved each other so deeply. Susan wanted more from him, to remain part of his new life rather than fade into the background as he went out and experienced it.\n\n\"You're fine,\" Chris soothed. \"I guess what I was trying to say is that you devoted fifteen years of your life to me, but now that I've awakened I want you to do whatever you want. You can go back to your family, open your own plant nursery or herbarium, anything. We'll make it happen; you don't have to live your life around me anymore.\"\n\nSusan listened but couldn't bare it any longer. She turned her head and feathered her lips on the top of his shoulder, hoping he wouldn't notice what she was doing. It only made the desire worse and by the time Chris finished speaking she had reached his neck and was pressing more firmly.\n\nChris froze as she started kissing up his neck, towards his ear. It felt great but so dangerous at the same time. So forbidden.\n\n\"Mom?\" he breathed as she started across his jaw, and her goal became clear.\n\n\"Shhhh,\" Susan soothed between her little kisses. At the edge of his mouth she paused, breathing deeply, her body shuddered a little. \"You said I can do anything, did you mean it?\"\n\n\"Yes, but...\"\n\nHer lips intercepted his. It was such a gentle, exploratory kiss, clumsy even, but it took both of their breaths away instantly. Susan opened her eyes as she teased his lower lip between her two; he was watching her, eyes open as love and anxiety played across his face. She broke away just an inch, the hand that had worked its way into his short, blond hair came down to cup his cheek.\n\n\"Let me stay with you, like this,\" she pleaded, desperate for their love to survive this metamorphosis. He had been her life for so long; this would only intertwine them further.\n\nHer lips had set his body tingling, so soft and loving. Her beautiful, tear-streaked face told him this was what she truly wanted. He realized he could easily love her this way too.\n\n\"Mom, I...\"\n\n\"Susan.\"\n\n\"Susan.\" Chris sighed, watching her eyes intently. They seemed hopeful yet sad and oh-so-vulnerable. \"I do love you, maybe even a little like this already.\"\n\nHe accentuated his point by stroking her flank up to the underside of her full, unsupported breast. Pausing to watch her, his thumb played lovingly across her tatty old t-shirt just below her left boob.\n\n\"But?\" Susan asked forlornly. She loved his hand on her like that but it was a cruel tease if he wouldn't let her be with him.\n\n\"Annabel. I can't cheat on her, Mom. Then there's the fact that this feels like a whisper away from incest.\"\"Chris, please, you're a dragon now. I want to be part of that. And, there's no legal way it could be incest. Couldn't we just talk about it with Annabel?\"\n\n\"I don't know if I'm ready for this, Susan, my dragon really wants to but it's a big step for me. It's not that I don't want to, Lord knows I've fantasised about it sometimes.\" He blushed at that confession, especially when her eyes brightened. \"But people talk, I'm not comfortable enough with myself or where I stand in this world to deal with people judging me for incest.\" \n\n\"I'm not your mother,\" Susan said a little bitterly. \"I may as well be stranger you met on the street yesterday, that's how related we are.\"\n\n\"It's not that, you'll always be my mother.\"\n\nBut he couldn't stand the hurt look she gave him so he relented, pulling her back to his lips.\n\nIt was most definitely the wrong thing to do.\n\nSusan was more forceful this time, taking advantage of his invitation; her tongue slipped into his mouth after a few seconds of resistance. She moaned when she got a real taste of him, spicy and a little sweet, heady with magic.\n\nSoon Chris couldn't help but reciprocate as his own beautiful mother plundered his mouth. He felt a little insecure that it was all just the effects of being a dragon, but then he remembered that it couldn't create feelings out of nothing; it could only enhance them. Besides, he knew Susan loved him, although this was certainly an unexpected aspect of her love. So instead of doubting this and pulling back, he flicked his tongue languidly against hers before taking control of their kiss and exploring her mouth, loving her groan of approval.\n\nA few minutes later, Chris found himself kissing down Susan's neck and nuzzling into her long, rich, black hair. She always smelled floral, using whatever she grew in her own perfumes or soaps. At the moment it was a light jasmine, exquisitely combined with her natural body odor and thick arousal. She was cooing as he kissed her, flushed across her neck and breasts. Chris's one-track mind flashed ahead to imagine what delightful sounds she would make while he teased her slick womanhood. He almost reached down to find out but reason and whatever remained of his human decency stopped him.\n\n\"Susan,\" he panted, sitting up so his forehead was against hers.\n\n\"What?\" she asked, a little frustrated that he'd stopped.\n\n\"If we do this, I gotta' take it slow. And we have to talk to Annabel, like, right now.\"\n\nSusan opened hopeful eyes to find him watching her yet again. \"We're doing it, though, right?\" \n\n\"Oh, yea.\" Chris smiled back; he was beyond the point of no return.\n\nSusan just tackled him back onto the bed with a girlish squeal, laying her chest down on top of him and kissing all around his mouth. \"Thank you, Chris!\" she tittered. \"I was so worried you wouldn't let me.\"\n\nChris rolled her off him, lying on his back and staring up into the ceiling. What have I done? My own mother, I 'm seducing my own goddamn mother, he thought.\n\nYou love it, teased the dragon weakly.\n\nShut up! Chris shot back but right then his erection twitched. He looked down to find his sweatpants tented and a slight wet patch where the head pressed up into the grey material and his precum had leaked.\n\nSusan watched him, knew that some part of him was struggling.\n\n\"Hey,\" she assured. \"It's going to be fine, Chris. I don't think I've told you this before but do you remember the two Werecat women who came to your parents' house all the time? You loved to play with them, I think you even pulled one of their tails once. There was a young vampire, too. Anyway, they were your father's partners.\"\n\n\"Sarah and Margret??!\" Chris couldn't believe it.\n\n\"Oh, yeah.\" Susan giggled, \"You could hear them going at it out in the guest house, especially when the girls were in heat.\"\n\n\"She was the one who took the vampire in the first place. She'd been abused but ended up falling in love with your father.\"\n\n\"No way. And Marie, my mother knew?\" It was such a foreign concept, being raised as a human had ingrained him with social mores not befitting his species.\n\n\"You didn't ever..?\" Chris asked tentatively.\n\n\"No,\" Susan assured. \"I mean, your father was very attractive but I was there to look after you. Besides, he had is plate full and I was intimidated by him. I was only 21 when I started working for them, you were just two and a half.\"\n\n\"Wow.\" Chris sighed, the vision of his mother and father's relationship somewhat in tatters. \"I guess I'll go get Annabel so we can talk. This is going to go down a treat.\"\n\n\"I think she'll be fine, Chris.\" Susan sat up as he got to his feet.\n\n\"Oh, hey, Dee,\" Chris practiced in a sarcastic singsong voice, \"Mom and I were just making out a bit in her room, you're all good with that right?\" \n\nSusan couldn't help but laugh.\n\n\"Fuck my life,\" he mumbled as he started boldly for the door.\n\n***\n\nHe ended up just peeking his head out of Susan's room, hiding his flagging erection behind the door. Annabel was in the kitchen with Lillian, about to start making breakfast for them.\n\n\"Annabel,\" Chris called weakly. \"Can you come in here for a bit?\"\n\n\"Sure, babe, I was just about to start on breakfast. Is Susan up?\"\n\n\"Yeah,\" Chris mumbled. \n\nAs Annabel entered the room she could tell something was off. For one, Chris kept his distance and didn't touch her like he might usually. Secondly, neither of them would look her in the eye. Then she realized Susan was decidedly flushed and in a strange place on the bed. Her eyes flashed back to her boyfriend and she spotted the little wet patch by on his pants and a very guilty look on his face. It all clicked.\n\n\"Already, Chris? We had sex like... like an hour ago!\" Annabel huffed. She was jealous but, to her own surprise, not furious. Annoyed would better describe how she felt.\n\n\"I'm sorry, Annabel, it... I didn't mean... Look, it just happened, alright? I love you both and I stopped so we could all talk about it before it went any further.\" Chris moved closer to Annabel, hoping she wouldn't pull away.\n\n\"I started it, Annabel. I kissed him,\" Susan said from the bed. \"I begged for him to let us be lovers. Don't be mad at him.\"\n\n\"No, Susan, that's no excuse. I wanted it too,\" Chris confessed.\n\n\"I'm not that mad.\" Annabel said a little more calmly. \"Look, it's a bit of a shock. I can't say I'm happy about it at the moment but we talked about this the other night. You're a dragon and you are supposed to have a 'brood,' I just didn't expect it to happen so quickly. It's like you're interrupting my honeymoon.\"\n\n\"You're not...?\" Chris began incredulously. He was either the luckiest guy on the planet or she was plotting an overly elaborate revenge. \"You don't care that it's incest?\"\n\n\"It's not really incest,\" Susan and Annabel said in unison, then couldn't help but burst into laughter.\n\n\"Jinx,\" Annabel joked but Susan shut up right away. Perhaps witches had some greater respect for the word. \"I guess I'm a bit disappointed but you still love me, right? You still want to be with me?\"\n\n\"Always. That's a promise.\"\n\n\"Then it's... okay. No matter what else happens. I said that, didn't I?\" Annabel answered, swallowing visibly, still a bit miffed. \"I also remember something about bridges.\" She closed the gap and wrapped her arms around Chris. \"Well, here's me crossing it.\"\n\nHe was in shock.\n\n\"You're incredible,\" he mumbled into her hair, kissing the top of her head.\n\nHe was in absolute awe of his girlfriend, who was clearly more adaptable than he was. It seemed so farfetched, so inconceivable, there had to be something else going on; it was almost magical.\n\n\"I'm so sorry you even need to be exposed to this.\"\n\n\"Well, if it's part of the package, I'll deal with it. Besides if there's anyone who deserves your love even close to as much as I do, it's her,\" Annabel reasoned, trying to let the angst flow out of her. \n\nSusan sat mute on the bed, unable to make a single sound. She opened her mouth like a fish, tried to talk but nothing worked.\n\n\"Just let's talk about it all before you do anything too serious,\" Annabel continued.\n\n\"Absolutely, I want to take it slow,\" Chris assured. \"It's a big change for us to make. We were only kissing.\" He paused.\"Well, to be honest it got pretty heavy and it could have easily gone further.\"\"That's okay. I think. Look, just don't have sex without asking me alright?\"\n\nChris just hugged her tighter, so grateful she was this forgiving.\n\n\"This might be weird,\" Annabel murmured, hugging him back, \"but do you think I could be there when you guys make out? I mean, I want to see if I'm actually okay with it rather than the idea of it. Does that make any sense?\"\n\n\"Yea, I think that might be a good idea. We can go at a pace everyone's comfortable with... Thank you so much, Annabel. I couldn't stand to lose you.\" A massive weight seemed to lift from his shoulders. She was going to be okay.\n\n\"Susan?\" Annabel asked. \"Are you okay with that?\"\n\nGetting no reply, they turned to look at Susan, who was gesticulating a little too urgently that she couldn't speak.\n\n\"Jeez, Susan, it was just a joke. I release you,\" Annabel said teasingly.\n\n\"How did you do that!?\" Susan gasped, clutching her throat.\n\n\"What?\" \n\n\"That spell, how did you stop me talking?!\" Susan rushed off the bed, pulling Annabel out of Chris's arms and shaking her a little.\n\n\"A spell? I didn't... I just said jinx. It's a joke,\" Annabel replied, frightened at Susan's harsh reaction.\n\nAnnabel's skin started to feel dangerously warm to Susan. She quickly took a step back, holding her arms up in a peaceful gesture, trying to placate the hidden little dragon which clearly saw her as a threat. Thankfully, she'd understood its warning, making Annabel's skin hot, before it did anything to her like it had to Lillian.\n\n\"I'm sorry Annabel, I didn't mean to scare you but it was quite disconcerting to be silenced. My god, it's actually using magic on your behalf...\"\n\n\"What's going on?\" Chris was very confused.\n\n\"When she said jinx, I really couldn't make a sound. Her tattoo, it's powerful and complex.\" Susan looked at Annabel, musing. \"Somehow you must have thought that I couldn't talk and the dragon just did what you wanted it to.\"\n\n\"What?!\" Annabel exclaimed. \"But I didn't feel anything, it was just a joke.\"\n\n\"That's cool,\" commented Chris, sweeping Annabel back into an embrace. Bartholomew poked his head from under her sleeve, then trotted down to her wrist. \n\n\"Did you do that?\" Annabel asked, a little scared of the unpredictable enchantment.\n\nThe dragon puffed some purple smoke out nose in the affirmative.\n\n\"Please, Bartholomew, Susan is a friend, I only want you to help her or protect her. The same goes for Lillian, the vampire. Okay?\" Annabel begged the tiny tattoo.\n\n\"It might not be as simple as that,\" Susan considered. \"He's a living spell, intelligent, and clearly able to go well beyond simply protecting Annabel. I hate to say this but we should show him to Lady Narlakis sometime today, she's probably the most powerful spellweaver in the Americas and she's got millennia of experience.\"\n\n\"Wait. Can I do magic now?\" Annabel asked excitedly.\n\n\"I don't know, Annabel, you certainly did something to stop me talking. If you can learn to control and work with the spell, maybe. That's just speculation though, don't try at the moment.\"\n\nOn the one hand, it could be very dangerous to attempt magic without understanding the fundamentals. On the other hand, Susan wasn't sure the fundamentals even applied to Annabel. She was using the dragon's magic rather than her own.\n\n\"I promise not to try but I honestly didn't mean to silence you, Susan, it was out of my control.\" Annabel was worried but so excited at the same time. \"Thank you, Chris! You don't know how much Bartholomew means to me, I won't just be a human familiar if I can do some magic or have a protective enchantment. I'll be relevant, right, Susan?\"\n\n\"Well, you'll certainly be unique, a bit of a shock to the system so to speak.\" Susan watched a little hopefully as Chris embraced Annabel, wanting to be close to him too. She honestly had no idea where Annabel would fit in now. A human infused with a living spell which appeared to be somewhat under her control... it was unheard of.",
        "Chris beckoned Susan closer till he could wrap her under an arm. The two women assessed each other with their heads resting inches apart on either side of his broad chest as they hugged him back. Looking down at the slightly shorter woman, Annabel saw the happiness in her blue eyes as Susan accepted his embrace, rubbing her cheek into his pectoral and pushing her entire body against him.\n\nShe knew that heady feeling and gave Susan a little nod of approval. She would share him, share the happiness he could bring. It would be cruel to deny her that happiness when it was so clearly what she needed.\n\n\"Thank you,\" Susan whispered; her eyes brimmed with happy tears. \"I'll take it as slow as you want and you can be there if that's what you need.\"\n\nChris nuzzled the top of his girlfriends' head first, kissing her scalp before moving to the raven hair of his mother and repeating the process. His dragon gave a weak purr of happiness in his mind as they turned their faces up in unison. Annabel came first, receiving a few seconds of gentle kissing. Neither of them pushed their tongues further than the others lips but it was very loving, intimate, a reassurance of their feelings.\n\nOnce they parted Chris leaned down to Susan who, was patiently waiting her turn and pushed up on her toes to meet him. Their kiss was slow but more passionate, their tongues dancing softly against each other, an expression of their newly acknowledged desires.\n\n\"Oh, I could get used to that,\" Susan breathed as Chris broke their kiss.\n\n\"You haven't seen anything yet,\" Annabel warned happily.\n\nIt had been something else to watch them kiss. Weird, but also hot. Their obvious loving desire only cemented that she was doing the right thing, maybe not by the human world's standards but they weren't in the human world. Perhaps it was just another magical side effect of his proximity and his recent, very satisfying bedding, but she was starting to almost feel good about this.\n\n\"I love you both so much,\" Chris murmured, squeezing their soft bodies closer for a second.\n\n\"I love you, too,\" came a disjoined, mixed reply from both women.\n\n\"No jinx,\" Annabel qualified, they both giggled a little uncertainly.\n\n\"Okay, what are we going to do today?\" Chris asked.\n\n\"I need clothes,\" Annabel said. \"These ones are smelly and I don't have any changes.\"\n\n\"We should go see Lady Narlakis,\" Susan said. \"She might even know by now when we'll go to see Lord Guthrie.\"\n\n\"I wanted to go see the magic district and set up my new gadgets. We can do all that today can't we?\" Chris asked.\n\n\"Yeah, and let's set aside about hrrrm... two hours of dedicated petting time.\" Susan laughed.\n\n\"Deal,\" Annabel confirmed.\n\n\"I'm in trouble aren't I?\" Chris asked with fake worry, guiding them both out towards the living room, one beautiful, loving woman held close in each arm.\n\n\"Absolutely,\" Annabel replied.\n\n***\n\nLillian was about when they emerged. Susan inwardly cursed herself; the vampire had probably heard everything they'd just discussed. She blushed a little before remembering that the entire apartment was bugged, Lady Narlakis already knew about her planned conquest of Chris. She supposed there wasn't a way of hiding it, really, and she wanted an open, public relationship with him anyway, but had hoped to keep it discreet for a while.\n\nDeciding to throw caution to the wind, Susan sat next to Chris at the kitchen bar and pulled him into a brief, rather un-motherly kiss before scooting closer and cuddling up, even giving the watchful vampire a little nod. Annabel, who'd just started on making them all omelettes, smiled ruefully.\n\nLillian had heard their discussion and saw Susan's kiss for what it was: an announcement. That wasn't a problem for her, outside of a harshly quashed twinge of jealousy, but she looked to the human girl to see her reaction.\n\nAnnabel seemed to be okay with it. Interesting. Lillian had heard tell male dragons were notorious for developing cherished \"broods\" of willing females. They somehow always seemed to get along without any major catfights despite the strong, powerful women involved. There must be something magical at work. Lillian couldn't fathom sharing a man like that; her vampiric nature was too possessive and greedy.\n\nAnnabel interrupted the vampire's thoughts. \"Can we open the blinds, Lillian? It would be nice to see some sunlight in here... sorry.\"\n\n\"That's fine Annabel, just give me a second.\"\n\nLillian closed her eyes and muttered a well practiced incantation, one of the only ones most vampires ever bothered with. Over the next few seconds her tall body faded from view, jeans, black long sleeve, jacket, boots, and all.\n\n\"Okay, you can open the blinds now, it's the big switch over by the window,\" came the vampire's disembodied voice.\n\nAnnabel watched in disbelief and no one moved to open the blinds. A big sigh came from the direction of the vampire.\n\n\"Well, how else am I supposed to go out in the sunlight? Lillian asked as she walked over to slap the switch herself. \"This way it all just passes straight through me. I wouldn't be very good at my job if I could only come out at night.\"\n\nThe blinds opened slowly, revealing busy morning streets and letting the bright sunlight stream in.\n\n\"Can all vampires do that?\" Annabel asked, terrified by the thought of invisible blood-suckers lurking everywhere around her. She had no clue where Lillian was other than when she spoke, realising how reliant humans were on their vision.\n\n\"Most do, eventually.\" Lillian said, enjoying Annabel's distress a little. \"It usually takes around two hundred years for young vampires to grow powerful enough to pull it off, though, it's the biggest milestone in a vampire's life.\"\n\n\"How old are you?\" Annabel asked.\n\n\"Tut tut, Annabel,\" Lillian whispered from behind her. \"That's a bit rude\" \n\nAnnabel squealed, bolting around the counter into Chris's embrace.\n\n\"That's enough, Lillian,\" Chris said firmly, addressing the presence he felt leaning against the stove.\n\n\"You can see her?\" Annabel asked tentatively, peaking towards where he was looking but seeing nothing.\n\n\"No, but I can feel her presence, as well as hear and smell her.\"\n\n\"So can I,\" said Susan. \"But it's not very exact for me. If you were a Were, I think you could still smell and hear her, although she's pretty quiet.\"\n\n\"Don't tease Annabel, Lillian. It's dangerous now, she already burned you and silenced Susan this morning.\" He knew the vampire was just having a little fun but it set his tired dragon on edge to have his First feel threatened in any way. \n\n\"Don't remind me.\" Lillian grimaced, testing her re-grown hand. It was pretty much back to its original state, but perhaps she would feed tonight. \"I'm sorry to scare you, it was just a little fun and I couldn't help myself.\"\n\n\"That's ok,\" Annabel cautiously returned to the heating pan. \"Just try not to scare me too much. I asked Bartholomew not to hurt you but he seems to do his own thing.\" She began preparing the omelettes again but suddenly hesitated. \"I'm not going to bump into you am I.\"\n\n\"I'll get out of the way,\" Lillian chuckled. \"I'm almost five hundred by the way. We grow more powerful as we age, and I have my telekinesis, but we always struggle with magic.\"\n\n***\n\nThey ended up agreeing to get some clothes for Annabel first. She'd insisted on it, given it was the start of day three for her underwear. \n\nAn invisible Lillian made a phone call to Oslo, a very large, shaggy man who would be their visible protection while they were out. Oslo was a Werebear, a grizzly. Lillian always liked him because he was quiet, observant, and generally didn't seem to give a shit. That, and he was never sniffing around her proverbial skirts like some of the other men she worked with. Adversaries sometimes mistook him to be dim, but that was their undoing.\n\nHe'd knocked on their door about half an hour later and Lillian introduced him. Chris had returned his crushing handshake with equal force as they sized each other up, acknowledging strength when they saw it.\n\nAnnabel was intimidated but Chris persuaded her to shake his hand, too. Oslo noticed the protectiveness and care the dragon had for her; as a family man, he respected that. He decided that he already liked the dragon.\n\nTheir mismatched party walked down the streets of the magic district, Chris and Annabel marvelling that Beings could live and work their secret lives right next to humans. It wasn't obvious but now that he knew, some things stood out a little. There were no chain or franchise stores and there seemed to be an overabundance of slightly ... quirky shops.\n\nPeople, both human and Being, identified by their auras, seemed busy and happy as they walked by. Some of the Beings sported slightly out-of-place clothing too, but it was only noticeable to the initiated. Overall it seemed vibrant, a little town nestled away inside a city, and there was literally magic in the air.\n\nInvisible, Lillian lead them to a nearby cluster of independent stores. She explained that none of them were Being-only stores, they maintained a standard floor stock but that they would have some enchanted clothing out back. Annabel thrilled at the idea of enchanted clothes but realized she had no way of paying, only about $400 was in her account. The rest was in savings to pay for her life next year at school.\n\n\"I can help,\" Chris offered. \"I brought plenty with me.\"\n\n\"Oh, but Chris, you need it--\"\n\n\"It's okay, Annabel, we'll get what you need. Besides, you're my familiar now, I get to do what I want with you, don't I?\" he whispered the last part directly in her ear, sending lustful, loving feelings down their magical bond.\n\nShe blushed, and it was surprisingly dark.\n\n\"What I mean is,\" he said aloud for everyone to hear, \"I can cover the essentials for the next few days, until you can collect whatever you need back home.\"\n\n\"Alright. Thank you.\" She nodded, recovering from her flush as he held the door to the shop for her \n\nWhen they saw the prices on the items, however, they almost just walked out.\n\n\"Hey, come on, these are good prices.\" Lillian seemed to block the door with her voice. \"And you will be expected to maintain an image among other Beings, Chris, whether you like it or not.\"\n\n\"You'd also be supporting local business,\" Susan added helpfully, smiling and patting Chris's shoulder as if to smooth over Lillian's gruffness. \"That's also kind of expected among your own kind.\"\n\n\"You've got to be kidding.\" Chris kept his voice low so as not to be blaring across the shop. \"That's ridiculous, I'm not going to pay three times as much for regular clothes just because someone's feelings might be hurt if I don't dress as they expect me to!\"\n\nOslo's chuckle was about the deepest bass that any of them had ever heard, practically rumbling through the floor beneath their feet.\n\n\"But, Chris, honey,\" Susan began, and Lillian seemed to elbow her to get her attention.\n\nThey all looked to see Annabel fawning over a pair of jeans she obviously loved, the enthusiastic assistant having already snared her and happy to fuss over her figure until the sun set behind the mountains.\n\n\"Ah, shit,\" Chris muttered, as Susan and Lillian drifted over to provide support for the spree.\n\nIn the end, he and Oslo muttered condolences to each other by the door until it was time to ring it all up: two t-shirts, a mid-length black skirt, a blue tank, windbreaker, a long-sleeved, grey pullover, and three panty-bra sets. Just under a thousand dollars.\n\n\"Uh-oh,\" Annabel said, eyeballing the pieces as if trying to decide what to put back. The problem was that they were all the basics she would need.\n\n\"I got it, love,\" Chris murmured, paying the assistant before she could stop him.\n\nShe hugged him fervently as they left the store. \"Thank you, these truly are the nicest clothes I've ever owned. They're made so well. But you shouldn't have spent so much.\"\n\n\"You're welcome, and it's fine,\" he assured her. \"I know they'll look great on you. I'll be able to make money once I start accepting contracts through Maginet.\"\n\nLillian suggested they go find Annabel an evening dress and some shoes but that was vetoed, and they'd ended up going back to the hotel/apartment so Annabel could change and Chris could collect the small, heavy black toiletries bag containing the last of his cash and all of his gold. When he asked about a gold exchange, Lillian explained that gold was more valuable than the human currency he could get exchanging it. Besides the shops they were going to would accept gold anyway.\n\nAnnabel chose the black skirt, the blue tank, and the grey pullover, which all looked nice with her sandals. Chris lost all regrets for his money when he laid eyes on her. She was absolutely stunning, her long legs looked even creamier against the black skirt, showing a little of her sleek thighs. She'd pinned her hair so the soft, loose curls cascaded down her back. The pullover was clingy, conforming perfectly to her slim waist and slightly bulged chest, the blue tank-top just peeked out from underneath. He couldn't help but hug her when she presented herself and whisper in her ear.\n\n\"You look lovely.\"\n\nThey'd walked back into the district, heading toward one of Lillian's favorite stores. She always had liked to shop, even if it wasn't for herself. Buying beautiful things with someone else's money was fun, a pleasurable relic of her pampered human life so long ago. They looked for a dress first. The owner of one shop, a young witch named Mary, even looked after them herself once Lillian made herself known. Lillian was important, beautiful, and a loyal customer after all. \n\nThe transparent vampire explained they were looking for a dress, something Annabel could wear to dinner with Lady Narlakis but also to a club with her boyfriend, pointing out Chris by the door.\n\n\"Well, what's he going to wear?\" asked Mary, wondering which of her customers was wearing the delightful perfume. It was a nice, manly smell so perhaps it was of the men off to the side.\n\n\"Oh, probably just something like he is now,\" Annabel explained. \"He loves his jeans and you'd never get him into a suit or anything like that.\"\n\n\"Let's find you something to force him out of the jeans, huh?\" Mary chuckled.\n\n\"Good luck with that,\" Susan laughed.\n\n\"Okay,\" Annabel said meekly, she was completely out of her league in a shop like this. Sure, she looked at nice clothes in shops at home or on the internet but didn't know anything about choosing a fancy evening dress.\n\nMary led them into the back, and began showing off her best wares including the various enchanted clothing she'd worked on herself. Lillian made herself visible again to help Annabel choose something, as the back room was completely sunproof. \n\nChris had noticed they were going out back and followed curiously, finding the women gushing over variously colored stylish numbers. Annabel was explaining that she wanted something which could be multipurpose because they could only afford one. None of the dresses even had price tags; that must be a bad sign.\n\n\"I think I have just the thing for you,\" Mary mused. She didn't know who Annabel was but if Lillian was with her, she must be pretty important. \"This one is one of my favourites, it's silk but I've enchanted it to be durable and stain resistant. I'd still recommend you only hand-wash it but I think you'd look lovely in it, Annabel, and black is always sexy. We'll shame him into wearing something nicer.\"\n\nShe smiled over at Chris as she said that.\n\n\"What's wrong with this?\" Chris asked, a little defensive.\n\nJeans, boots and a nice t-shirt or button up were his tried and true. If there was an occasion and Susan or Annabel forced him, he'd switch out the t-shirt for a nicer long-sleeve but he usually ended up rolling up the sleeves anyway. In summer he might even wear shorts if it got really hot. To be fair, he was small town, through and through.\n\n\"Oh, nothing really, but she'll look like a princess in this. You should try to look your best for her, too.\" Mary handed the black silk to Annabel. \"Go try it on, dear, no bra though.\"\n\nThe silk flowed over her hand like water as she walked in to the little back-back room to change. She'd never worn anything like this, it was so shapeless she could barely figure out how it went on. She stripped out of her newly bought clothes, removed her bra, and let the silk flow down over her body. It felt delightfully cool to the touch. She looked in the mirror and gasped.\n\nSlinky. That was the best she could come up with.\n\nIt might be a bit too lose around her chest, but it conformed to her waist and hips without clinging to them, until the hem fluttered at the middle of her thigh. It was partially backless, exposing her registration with thin shoulder straps crossing just below her shoulder blades to meet the other side of the dress below her breasts. Between the crossing straps on her back was a massive valley of exposed pale skin, travelling almost to the thinnest part of her waist. It felt like she was naked. She barely had the confidence to show the others, let alone wear it in public.\n\nShe looked for Chris as she tentatively emerged; he was already striding forwards, reaching for her with lust in his eyes. He saw she was nervous and stroked her cheek a little before leaning down for a relatively chaste kiss.\n\n\"You're ridiculously gorgeous, Dee,\" Chris whispered against her cheek as he stroked the bared skin of her lower back. Then he turned to Mary. \"We'll take it.\"\n\nHe didn't care how much it cost at that point.\n\n\"Well, let me have a look at her first.\" Mary moving forward. \"Yes, you're stunning in this, hon. Hmm, we might resize it in the chest a little, no offence. Now turn around for me.\"\n\nAnnabel did so slowly, exposing her back.\n\n\"You're a familiar,\" Mary commented as she checked the fit around Annabel's flanks. \"But who's your-?\"\n\nBartholomew took the opportunity to introduce himself then. Having previously wrapped himself around her bellybutton, he waltzed up her back to lay on her other tattoo again.\n\nMary jumped back quickly. \"What the hell is that? A dragon? But..\"\n\nHer voice died and she wheeled on Chris.\n\n\"Guilty,\" he chuckled.\n\n\"Lillian, you bitch, you brought him in here and didn't tell me?!\" Mary exclaimed. \"Oh my god, I can't believe he's in my shop! Everyone was talking about it yesterday.\"\n\n\"It's not a big deal,\" Chris tried.\n\nLillian laughed at that.\n\n\"Uh, yeah, it is,\" Marry replied, forgetting to not be argumentative.\n\n\"Whatever, can we please get the dress?\"\n\n\"Yes. Sorry. Oh, Annabel, you lucky girl, oh my god. Okay, let's pull the chest in a bit.\"\n\nMary slipped a finger under the sides and up against the surface of Annabel's breasts, muttering as the cloth shrank a little. It was still loose enough to fall away in front between where the thin straps attached, showing the soft skin between her breasts. If she'd had more there, the cleavage might have been ridiculous, but as it was it was a tantalising display of her small, well formed assets.\n\n\"Alright, let's bag that up for you.\"\n\nAnnabel emerged from changing back into her previous clothes a few minutes later to find Chris being persuaded into buying a pair of black slacks and a very nice light blue shirt. They eventually went to the counter to pay, and Annabel noticed Mary added a length of frilly ribbon the same colour as his new shirt but dreaded what the damage might be.\n\n\"How would you like to pay for the dress? I'd like to throw in the pants and shirt as a gift.\" Mary was trying her best.\n\n\"That really isn't necessary,\" Chris replied. It made him nervous to have the stranger doting on him like this.\n\n\"I insist, I can't part with the dress for free though, I've spent quite a while working on it.\"\n\n\"How about gold?\" asked Chris.",
        "\"Wouldn't you like to hold onto that? If I had you alone for a few nights, we could umm... you could help me perform some, interesting magic. It would be more than enough to...\"\n\nA few nights of spell casting with the dragon would be more than lucrative, extremely pleasurable, too, from what she'd heard. Dragons had an almost cult reputation among female Beings, which was only given more fuel by the complete lack of reliable firsthand accounts.\n\n\"I'm flattered, but no. Sorry.\"\n\nChris apologized surprisingly gracefully while Annabel was a little flustered. If she understood correctly, the woman had propositioned her own boyfriend to prostitute himself while she stood right next to him.\n\n\"Very well, how does two and a half ounces sound?\" Mary said, trying to hide her disappointment as she pulled out a digital scale from under the counter, zeroing it.\n\n\"About three grand? Extortionate,\" Chris replied with a little smile. \"But it's a very nice dress.\"\n\nHe got out two pre-weighed bags of dust and another of assorted nuggets which could be split more easily. \n\nMary picked up a bag to examine it, using her magical senses as well to examine the metal. She saw something there that she'd only ever heard about, a warm glow and a sense of movement, like the dust in the bag was actually molten. \"You've given me the wrong bag. This is dragon-gold, isn't it?\"\n\nLillian inhaled sharply. Susan had been waiting to call out the witch, waiting to see if she was actually honest once she discovered what Chris had to offer. \n\n\"Yes, it is,\" Susan said matter-of-factly.\n\n\"What's that?\" Chris asked. \n\n\"He doesn't know?!\" Lillian exclaimed. \"Jesus Christ!\" She narrowed her eyes at the young man. \"I'm going to have to watch you closely, dragon.\"\n\n\"I wouldn't have let him give it away,\" Susan said.\n\n\"You could have told me. How much do you have? It should be in the Compound vault.\" Lillian pushed forward to look into the small case. He must have at least thirty of the little plastic bags, mostly dust and tiny nuggets in the little toiletries bag. She hefted it delicately after extracting it from Chris's hand. \"The surprises never stop with you, do they?\"\n\n\"Can someone please tell me what the fuck dragon-gold is?\" Chris asked, getting fed up with people ignoring him.\n\n\"It's gold collected from the earth and hoarded by a dragon,\" Mary explained. \"It's magically imbued with the dragon's power and greed. Placed next to other precious metals it slowly makes them grow. That's why in all the legends the dragons are lying on massive piles of treasure. It literally grows around them when they care for it, even more if they take it from the earth themselves.\" Mary marvelled at the value of the single ounce bag she held in her hand. \"Dragon-gold is also used instead of regular gold as part of a spell or potion. It makes the effects far more powerful or long lasting.\"\n\n\"Yeah, so what's the big deal? If it grows then--\" Chris clearly still didn't understand.\n\n\"Chris.\" Lillian caught his attention, her expression intense. \"It loses its power as soon as the dragon it belonged to dies. People usually drain its power into other gold to increase their holdings or use it up in powerful spells. Ever since dragons started being hunted, before I was even made vampire, it's been very rare. The dragon has to 'lovingly take it from the earth,' with their bare hands, no magic, only a few ever bothered because it's such hard work. Besides, dragons are notoriously miserly. Now that dragons themselves are so rare as well... I doubt there's been dragon-gold on the market for a hundred years.\"\n\nChris took a moment to process this information. It seemed he was constantly bombarded with new aspects of his own nature. Sure, he had enjoyed the excitement of searching for hidden treasure in the silts of a cold mountain creek. He'd loved being outdoors and splashing around in the water and sunshine and he did get a comforting feeling from keeping the gold he collected close by. Miserly though? He didn't think he was miserly, and he never could have guessed that he was investing magical value to his small bag of treasure. He turned to Susan with a question in his eyes. \n\n\"Why didn't you tell me, Mom?\"\n\n\"I didn't want it to ruin what you enjoyed,\" she said. \"You were always so happy going off on your little expeditions, I didn't want that to change. I would have stopped you if you'd tried to exchange it but I didn't want to worry you that people would come hunting for your gold as well as for you.\"\n\n\"So how much is it worth?\" he queried, giving his mother's hand a reassuring squeeze.\n\n\"I'd be very happy with one tenth of an ounce for the dress,\" Mary said tentatively.\n\n\"You'd be happy with one fiftieth!\" spat Lillian, suddenly defensive. \"It's practically priceless.\"\n\n\"Sorry, I don't mean to cheat him Lillian,\" Mary apologized hastily at the vampire's anger. \"I don't know what it's worth.\" \n\nChris was startled, it was finally sinking in just how valuable his little hoard was. The problem was, he'd been prepared to part with two and a half ounces. It didn't feel right to give Mary so much less now, after she'd been the one to point out its true worth. His gold didn't feel that special to him, perhaps he'd never really been exposed to anything other than dragon-gold. He made a snap decision when he remembered what Lillian had said. If dragons were so miserly, today he was going to be generous.\n\n\"What if I gave you one ounce as thanks for being helpful and honest?\"\n\n\"It's too much.\" Mary glanced at Lillian.\n\n\"It's my gold, isn't it?\" Chris asked.\n\n\"Yes but..\" Mary started.\n\n\"Okay so, please take it, it's yours.\" Chris closed her hand around the small bag she still clutched. \"I hope it serves you well, Mary.\"\n\n\"Th..thank you,\" she stuttered, putting the bag in a pouch at her neck before bagging up their purchases. \n\nAnnabel was stunned; the gold she'd previously thought must be a small fortune was worth over fifty times its face value, if a value could even be assigned.\n\nLillian held back a little as the others began to leave.\n\n\"I hope you realize how generous that was. That he gave it to you freely makes it even more potent, you know,\" she hissed. \"Thank you for being honest but I can't let you sell that. It would be too obvious where you got it and he's already in enough danger. You'd be putting both him and yourself at risk if you even tell anyone about it. It's worth far more than fifty times its weight to some, there are spells which haven't been wrought for years...\"\n\n\"I didn't want to sell it,\" Mary assured. \"I just don't know what to do. Maybe I could use it in my ever-clean potion spray but that seems like a waste.\"\n\n\"It would be, clothes don't need to be clean for ten thousand fucking years.\" Lillian paused to think. \"I'll ask Lady Narlakis if she'll pay a renting fee for having it sit in her treasury.\"\n\nLillian thought the drow would probably go for it, if she didn't try to snare the rest of Chris's stash as soon as she found out.\n\n\"Thank you, Lillian.\"\n\nMary breathed a sigh and a shudder as the vampire made herself invisible again before following the dragon. Vampires, always so friendly and charming... until they aren't. She'd been going to call her friends, gloat that the rumours of a dragon were true and that he'd been shopping in her store.\n\nNow she felt the weight of the gold, heavy beyond its true weight with magic. It pulled at her neck but felt warm nestled between her breasts. Realising her friends would know something was up if they ever found out from anyone else, she sent out a message through Maginet, not feeling the sense of giddy excitement she tried to express in the email.\n\nOutside, Lillian called in her latest discovery to Reyla. She had to really.\n\n\"What?! Lillian, put him on the phone right now.\"\n\nLillian rolled her eyes but handed the phone to the dragon. \"She wants to talk to you.\"\n\n\"Hello,\" Chris greeted her as he put the phone to his ear.\n\n\"Chris, is what she just told me true?\"\n\n\"Well...yeah.\"\n\n\"How did you get it? From trade?\"\n\n\"No. I read about the gold rushes when I was younger and wanted to see what it would be like. I got lucky that first time and kept going back every few weekends because I enjoyed it.\"\n\nThe drow sounded like she might've been having some serious trouble breathing evenly. She spoke only once she was more calm. \"And you are walking out on the street with it? Chris, dear, can I persuade you to secure it somewhere where others will not be tempted?\"\n\n\"Like where?\"\n\n\"It should be in a vault, as any gold is nowadays. I have a vault at the Compound that has never been broken into. It will be safe, I would be happy to store it for you.\"\n\n\"No, thanks, Reyla. It's mine, and I think I'd like to keep it nearby.\"\n\nThe next pause was filled with Lillian wondering whether Reyla could hold herself back or if she'd push too hard again. The drow surprised her by conceding. For now.\n\n\"Very well, Chris. I look forward to seeing you this afternoon.\"\n\nThey ended up finding Annabel a set of sneakers, some nice flats, and a pair of black heels to go with her dress. Chris also got some shoes to go with his new pants. This time, Susan paid cash.\n\n***\n\nAround mid-afternoon they wound back through the underground passageways to see Reyla. She had them seated in her dark office this time, lounging on low couches near an open fire. Chris thought the fire was a bit over the top, but to each their own. He was, however, impressed by the high shelves of tomes and scrolls. Reyla had clearly amassed an impressive collection of magical knowledge to match her powerful and wise aura. Looking around he realized this was the stuff she wanted people to see; she no doubt had many secrets vaulted away as well.\n\nWhen Reyla approached them, she first examined Annabel carefully. The drow probed gently so as not to have the feisty little enchantment lash out at her. She'd even shielded herself before launching a gout of flame just past Annabel to the right. It'd bounced right back at the elf with the bright flare of a purple barrier, and she'd caught it quickly.\n\n\"Shit,\" Chris whispered to himself, trying to calm his anxious inner dragon.\n\nAnnabel had been even more terrified, then excited as the spell rebounded. The calculating look on the beautiful drow's face told her she was no longer insignificant to these people.\n\nLady Narlakis, forever dressed in some sort of beautiful gown, didn't dare try any of her more powerful or insidious attacks, intelligently fearing for herself if they also rebounded, or for Annabel's safety if they didn't... and her own yet again as the real dragon would no doubt retaliate. The more she was close to Chris, the more she realized that he was almost her equal. Frightening because she'd worked thousands of years to grow her immense power.\n\nReyla watched Annabel interact with the little tattoo dragon, seeing how it listened and responded to her, wondering how it had muted Susan that morning. It was indeed a living spell, unheard of in that it was cast on a human. Livings enchantments were rare and unique, it was impossible to say what they could or couldn't do. They were living so they could change and evolve, as could the owner of the enchantment.\n\n\"I agree that Annabel is well protected for the moment,\" Reyla finally said after long moments of contemplation. \"She should get some education in the basic exchanges of magic and energy. We will have the tattoo--\"\n\n\"Bartholomew,\" Annabel said, and the drow nearly grimaced.\n\n\"Yes, we will have 'Bartholomew' registered in your section on Chris's profile.\"\n\nWhen conversation returned to Chris's small stockpile of gold, Reyla urged him that if word of it ever got out, it was almost an attractive target as he was.\n\n\"And who exactly is going to steal or kidnap in your community, Lady Narlakis?\" Chris asked reasonably.\n\n\"Well, I admit there are some less...desirable elements living amongst us,\" Reyla replied. \"Beings who still maintain the Secret, but barely live inside the council's other guidelines.\"\n\n\"There are even those who have rejected the council's authority altogether,\" Susan added. \"They live in hiding away from the central hubs of each territory.\"\n\nThe drow arched an eyebrow at the witch but nodded in agreement. \"There are only around half a million Beings in the world, so it is easy to lose yourself in the sea of humans, if that's how you wanted to hide. These are the types who steal and kidnap, those who value personal gain above any sense of loyalty or community to Beings as a whole. They live darker lives beneath the face they show the world.\"\n\nChris mulled that over. \"So...do you know how much my gold is really worth? The witch at the store didn't know.\"\n\nReyla sighed again at that unfortunate indiscretion. \"I estimate that you could name your own price in any barter. But please, Chris, if you need to purchase something, exchange your gold with me for some other form of currency. It would not do to have dragon-gold on the open market during these tentative times for your species.\"\n\nThey talked amiably about Reyla's territory for a while, the midwestern territory. Fairly different from the human's political borders, the midwest area included the Great Plains and the Rockies, from Canada to Mexico. Despite it being the largest area under one Being's oversight, it had the smallest population of the four territories in the States, but was also the easiest to manage when compared to the complex, central hubs located in many of the largest human cities on the east and west coasts. As with most all territories, Weres and magical humans were the most numerous. It was nature's way of balancing she'd explained, there were far fewer of the older, more individually powerful Beings such as elves and elementals because they reproduced much more slowly even if they did live for thousands of years.\n\nReyla's territory was especially hassle free, much of the great tracts of land under her control were only frequented by Were packs. They naturally preferred the access to wilderness rather than living in cities and their pack structure made them almost completely self-governed. Reyla generally left them alone if they didn't cause trouble, and that was the way they liked it.\n\nChris had some questions about dragons but Reyla begged off, asking him to wait until he went to see Lord Guthrie in four days time.\n\n\"I have sent a message to my bastard cousin as well,\" she said with a smile. \"He's an Ether mage of somewhat dodgy repute, but I've asked him to come and tutor a 'promising young candidate' in the secrets of the Ether. Once you are settled in, we will discuss your education and employment further. I already have several options in mind that you might enjoy.\"\n\nWhen they left, Susan was feeling better about their entire situation in Denver. Reyla seemed to be honestly providing sound, if somewhat self-centered advice to Chris, even putting in the extra effort to examine Annabel and get a tutor in for Chris's Ether magic.\n\n***\n\nAnnabel called her parents that evening. Jim and Barbra Sommerset were less than impressed.\n\n\"You get your ass back home, now!\"\n\n\"That's not really possible.\"\n\n\"I'll report a kidnapping, or a missing person.\"\n\n\"Dad, the first thing the police will do is call my cell and I can tell them myself that I'm fine. I'm just moving out a bit early and I'm going to move in with Chris. I'll be back in a few days to collect my stuff.\"\n\nHer father proceeded to call Chris all sorts of unchristian names. \"I want to speak with that boy!\"\n\nAnnabel could only stifle a laugh as she looked to the couch where Susan was snuggled up next to him while they kissed gently, tongues only just meeting between their partially opened lips. \n\n\"He's indisposed. I love you, gotta go!\"\n\nAnnabel hung up before joining the two lovebirds on the couch, determined to maintain her fair share of kisses in this relationship.\n\n***\n\nThe next few days passed in a blur.\n\nLillian showed Chris to the security team's workout facility. There were resistance machines designed for Beings so he actually got to give himself a decent workout. Lillian offered to teach him how to fight and they met on the sparing mat.\n\nShe'd kicked his inexperienced ass all around the floor. Oslo howled with laughter as she simply threw him over and over again. Once, she'd let him get close to see what he could do. She soon found herself on the floor, arms behind her back with his satisfying weight pinning her. The sensation had almost made her wriggle back into him but she couldn't; it would have been sexual and her blood pact prevented it. For the first time in years, she was a little thankful for its presence.\n\n\"You're strong, but you could stand to work on the speed a little,\" the vampire appraised as she had many a beginner, brushing off her hands as she gained her feet. \"Get beyond the grabbing and punching like an amateur and you'll be a force to reckon with.\"\n\nNow, if he learned to phase, he'd be a terror. She wondered if he'd be a more difficult opponent in his half form, but the dragon remained hidden as it recuperated from its exertion to protect Annabel.\n\nChris had slipped back into the Ether one night but didn't leave his bed, not wanting to be caught out in unfamiliar, populated territory. When he'd woken up, his dragon was almost back to its annoying, opinionated self. It seemed the dragon could somehow draw energy from the Ether.\n\nChris delivered coffee to Susan every morning and slept with Annabel every night. Their lovemaking mellowed a bit as they learned to take their time with each other. They would enjoy slowly thrusting together for what seemed like hours before they fucked like frantic bunnies towards the end. He loved that he could get her off a couple times if he was patient and had time to excite her entire body.\n\nAnnabel enjoyed how her body was adjusting to him; she was almost constantly ready for him now, a few words or a meaningful look could have her nethers slick and dewy. It was hell on her underwear. He always made her feel so completed, whether he fucked her lazily from behind, watching his penetration distend and drag her labia backwards, gripping tightly to his cock.\n\nOr, if he kissed her neck as his body arched into hers with her legs locked around him, she never failed to find absolute bliss. It often triggered or was followed by a second orgasm as he spilt his magic seed deep in her with forceful, hot, jets. She would lie there for minutes afterwards, enjoying the gooey, tingly, warmth inside her womb as he held her close. \n\nShe didn't realise it bit every time he come inside her, a little more of his magic would soak in, healing any small imperfections both inside and out and priming her with energy. She took on a healthy, beautiful glow as he imbued her, it would be weeks before she noticed. Their inexperience quickly evaporated as they spent their nights learning just how to set each other off. Meanwhile Bartholomew slowly profited from their efforts, growing in minuscule ways each time they expressed their love.\n\nSusan was becoming friskier, too, a little frustrated that she and Chris were stalled at kissing and some rather heavy petting. Though really wanting to go further and cement their new relationship, she didn't push the issue too much, just frigged herself silly in the shower. She was taking a lot of showers recently as her neglected sexuality was rekindled by the dragon's kisses. Annabel was becoming more comfortable with their new relationship, too. She'd discovered that if she ever felt jealous watching them kiss, she could interrupt and demand some for herself. However, turnabout was fair play and Annabel quickly learned that being interrupted wasn't fun. They gradually worked out a system that seemed to work. It mostly involved being patient and generous, but above all else, not hogging the dragon.",
        "Lillian sometimes found herself frustrated with all the sexy noises and smells around her but Reyla's order not to touch him made it a little easier. She still convinced herself that he was too young and timid for her, that she didn't want him. Besides, his spicy, pheromone-laden scent was becoming more bearable as she learnt to ignore its almost constant presence.\n\nDuring the days, they explored the magic district together, discussed plans for the future, or their new world in general. Susan even managed to line up a wonderful job opportunity for herself at the apothecary she had previously supplied.\n\nThe old wizard who owned the place had known Susan fondly for years. Now that she was back in the magical world for good, he offered her a partnership in his business. She would grow for them full time, helping in the store with brewing when she wasn't busy with the plants. It was always her dream to take her love for magical plants and their concoctions further so she pounced on the opportunity. She'd already given her notice to the university, sighting a family emergency and taking her weeks of accumulated leave, so she was excited to start as soon as Chris's situation settled down.\n\nTo start with, she spent a few hours each day in the store, formalizing their agreement and learning the ropes. Rowan, the owner, was an accomplished apothecary and she learned several new tricks in the brief hours they spent together. She was actually a little worried about her plants back at home but called Jethry to make sure he knew how to look after them properly until she could get back. The Werecat was happy to hear things were going well in the 'big city.'\n\nChris's public Maginet profile went live on the second day, his name, species, class, and territory available to the entire Being world. Annabel had a little section too as his familiar, noting her name, registration date, and that she had an epsilon class protective enchantment. \n\n\"Every profile you see is real,\" Lillian explained. \"The Maginet system is specifically not anonymous like the internet. Profiles are verified by technicians such as Tosh, and are magically resistant to tampering or interception. We don't want ways to trick people or engage in unlawful activities under false names. You might imagine it's vital to the Being contract system.\"\n\nChris and Annabel started at tablet, scrolling and navigating through their profile with their fingers.\n\n\"Wow,\" was all Annabel could really say. It seemed just like a regular piece of technology. \"So...how does it work?\"\n\nThe vampire had long accepted being these two kids' personal tome of knowledge. A good thing she liked them. \"The entire global system is powered magically, using untraceable energies to communicate between each device. It is silent to humans and their devices.\" She gestured to the unfinished part of the profile. \"You want to include photo images of yourselves?\"\n\nTogether, Chris and Annabel looked at each other and shook their heads.\n\n\"Not now,\" Chris said.\n\nWithin hours Chris had several contract offers and a flood of happy greeting messages.\n\n\"Holy shit!\" Annabel exclaimed, and Chris's mouth was gaping a little bit. He'd never been popular in high school.\n\n\"You forgot to set your profile to state that you're not accepting contracts,\" Lillian told him with a barely retained chuckle.\n\nAt that stage, Annabel kind of took over managing his profile, the Maginet system was apparently foolproof, every message or change carried a magical trace of the individual and each person's devices were unusable by anyone without privileges. Once Annabel had these though, Chris's tablet happily fired up whenever she touched it, he was glad to let her manage it, never a big fan of social media.\n\nShe sent out apologies and thanks to the various hopefuls as she gawked at the multi-figure offers for blood, protection, sex, or help creating enchantments. There was even an offer to deflower some old witch's nice as her 21st birthday present.\n\nOne evening Chris and Annabel worked up the courage to go to a local establishment known as The Cauldron. They couldn't reveal their true forms but it was a Being club, under the cover of heavy involvement with sci-fi role playing. This way, any humans who showed up weren't freaked out when they overheard a self-professed vampire talking to a witch about blood magic or the like.\n\nIt seemed a little weak to Chris, until Lillian spoke up.\n\n\"There's also an enchantment that makes humans dismiss anything they hear or see that truly offends their sensibilities. However, given the club's reputation, it attracts a human element who are hard to offend.\"\n\n\"But,\" he replied, \"wont that foster an unhealthy, almost obsessive culture...?\"\n\nLillian just laughed.\n\nThe decor was upbeat gothic, still dark, but with colourful depictions of various \"mythological\" creatures along the walls. Some of the staff appeared to be in \"costume\" and there was a blue \"painted\" woman dancing in a cage over by the DJ. By the bar was an all too lifelike stone gargoyle, frozen in a state of arousal as human woman laughed and dared each other to touch the raunchy statue.\n\nThe club had a reputation around town as a place to have a wild, uninhibited night where almost anything goes, but somewhere you wouldn't necessarily want to be a regular. \n\nLillian had wrangled them up a small booth where they ended up sitting around not knowing what to do with themselves. Chris and Annabel were experiencing the club atmosphere for the first time: dim lighting, an otherworldly light show, loud electronic genre music, few clothes and lots of sweaty bodies.\n\nLillian shrugged at their timidity. \"I have to agree that it didn't have much appeal to me outside of snaring a hapless or... even willing humans for feeding, it's perfect for that.\"\n\nTonight the vampire had worn black heels, a pleated red miniskirt, and one of her trademark, clingy turtlenecks; black this time. Chris stole glances at her surreptitiously every now and then, especially her long, toned, absolutely pale legs. They were so beautifully pale he thought he could see small bluish veins lattice up near the hem of her skirt.\n\nHe'd never been close to such a beautiful woman who was almost his height, only an inch shorter than his six-foot-three. He had gained two inches to his human form after his transformation; yet another addition to the list of things to get used to. At least he still cleared most doorways, just.\n\nRegardless, Lillian's large body excited him and especially his dragon to no end. It had the promise of being something to fight for and conquer. He knew how it felt up close, too, having been dominated by it that morning at the gym. Deliciously soft yet devastatingly powerful.\n\nAnnabel was proving quite the distraction herself. She'd worn her new dress and let her hair fall around her back but held from her face with the ribbon which matched his new shirt. The outfit was indeed slinky and sexy. He'd stuck with his jeans and almost regretted it now. \n\nChris thought she looked perfect, her slight nervousness and big, brown eyes again gave an innocent air which delightfully contradicted the seductive dress, the soft curves of her fantastic ass, and the display of so much smooth leg. He'd held her close as they entered the club, protective, feeling on edge with so many people around them.\n\nThe club owner, a vampire named Rufus Veldeer, apparently didn't care that they were underage. He delivered some champagne that Lillian ordered personally to the small booth. \n\n\"Lillian, darling, it's so good to see you again. Champagne?\" Rufus spoke in dulcet tones.\n\n\"Yes, thank you, Rufus. This is my charge, Christopher Baryst, and his familiar, Annabel.\"\n\nThe vampire's face seemed to split into a Cheshire grin as Chris rose to shake his hand.\n\n\"It's very nice to meet you, Christopher, and may I just say that you have some very lovely company tonight. Hello, Annabel. You look gorgeous, I wondered if you were his familiar when I first saw you two in the court.\" \n\nAnnabel blushed and ducked into her seat behind Chris a little \n\n\"Thank you, Rufus, I didn't realize you were at my introduction. You have a very interesting place here. I was sceptical when Lillian described it to me but now that I'm here, it works.\" \n\nRufus laughed heartily. \"Yes, yes. It is a little over the top, but I revel in that. As for you though, young dragon, the town has practically been abuzz with talk. Rumours, titterings, lies. I, of course, as a first hand witness, have spread all sorts of fanciful tales about you.\"\n\n\"About me? Why?\"\n\n\"My boy, we live for centuries and some of us become rather bored,\" Rufus explained. \"A male dragon coming in from the cold is the news of the year, if not the decade.\"\n\n\"Beings are the worst gossipers you're likely to find, Rufus here is notorious,\" Lillian explained even more succinctly.\n\n\"My dear, beautiful vampire, you wound me,\" Rufus exclaimed with mock hurt. He put an arm around Chris's shoulder almost conspiratorially as he continued. \"I apologize for her rudeness, Chris, Annabel. I must warn you, I may be a terrible gossip but Lillian here, despite her loveliness, is a grouch of unprecedented renown. Always ruining my fun.\"\n\nLillian simply let out a quiet hiss in his general direction and Annabel couldn't contain a hushed giggle.\n\n\"See! She's unstoppable,\" Rufus continued. \"Having you two around will be the best thing that's ever happened to her. Now, speaking of fun, I have an interesting proposal for you, Christopher.\"\n\nChris didn't like the sound of that, or the grin on the vampire's face.\n\n\"You may be aware that you smell divine, and I'd bet you taste even better. Therefore I propose a potentially very lucrative arrangement. A special drink, the chance to taste a dragon. It would contain a measure of chilled vodka, a half of Sambuca, a half of Grand Marnier, and of course, a few drops of your own delectable blood. I call it the Buffy, for it will surely slay vampires by the dozen!\"\n\nChris didn't know what to make of it, on one hand the idea was hilarious, something he would probably agree to if he was tipsy. Rufus's sales pitch was indeed overly dramatic, but it seemed to suit what he'd seen of him so far. On the other hand he was a little offended he'd once again been propositioned and was concerned what the outcome of offering the drink might be.\n\n\"Would you drink it, Lillian?\" he asked.\n\nShe was somewhat taken aback; the question hadn't struck her in the way he had intended. \"Mm,\" she shrugged, attempting to maintain nonchalant, \"I'd probably try it sometime, but I'm not allowed to drink on the job.\"\n\nChris's eyes flicked to the glass of bubbly in her hand then looked back at Rufus. \"No, thank you, Mr. Veldeer. Perhaps we could do it as a special one night after I'm more settled.\"\n\n\"Of course,\" Rufus, ever the host, accepted graciously. \"I'll leave you to yourselves for now, but please return at anytime. You're always welcome here, Chris, and I'll be honest, you're great for business. Please excuse me.\"\n\nThey'd ended up sipping champagne for a while before Annabel dragged him onto the dance floor. They lasted a few songs, Chris holding her waist or ass with her arms around his neck, writhing their bodies together to whatever spastic beats the DJ wove together. It seemed to be what everyone else was doing.\n\nThe crowd of bodies didn't really appeal to them; they were interested in each other so strangers bumping them was just a distraction. By the fourth song, Chris noticed there was a curious young woman dancing behind him. He'd felt her bump him a few times and when he turned, he found her only about an inch from the back of his neck, enjoying his smell.\n\nThat was it. They went back to the booth and Annabel sat in his lap as they finished the bottle.\n\nThey were about to leave when Amanda, the vampire who'd lost control and attacked Chris on their first day, appeared and asked if she could sit with them for a minute. Chris had somewhat nervously agreed while Lillian never took her eyes off the younger vampire.\n\n\"I just wanted a chance to say how sorry I am about what I did to you,\" Amanda started once she was sitting. \"It was unacceptable. I'm young but I've worked hard to control my urges and get a position with Compound security. I can't come out during the day yet, you see, so having a mostly underground job is nice. Look, I'm sorry, I was hungry and you were there smelling so good, it just happened before I could even think to know it was wrong....and thanks for not killing me by the way.\"\n\nChris didn't know what to say but forged ahead to accept her apology. \"You're Amanda, right?\"\n\nShe nodded, looking chagrined that she hadn't introduced herself first. Chris didn't seem to notice.\n\n\"Well, Amanda, I'm new at this whole thing too so thanks for apologizing and I guess no hard feelings, certainly no harm done. I'm sorry I had that kind of effect on you without any warning.\"\n\n\"Thank you,\" Amanda said warmly.\n\nShe'd resolved to come apologize when she saw them enter the club but over the last few days she'd given up her vampiric schemes to get more of his blood. She didn't have anything to offer in return and he would probably want nothing to do with her.\n\nBesides, it would only lead her further and further down that path. Already from that one taste, she found other blood less satisfying, couldn't get him out of her mind, especially when she slept. It was hard sitting close to him now but she brutally forced her vampire deep down inside herself so she could talk. It meant a lot that he seemed happy to forgive her.\n\n\"You haven't...?\" Amanda trailed off turning to Lillian.\n\n\"Haven't what?\" Chris asked curiously.\n\n\"No,\" Lillian said bluntly.\n\n\"Don't,\" Amanda warned.\n\n\"Don't what?\" Chris asked again.\n\nAmanda sighed. \"I'm trying to warn her not to taste your blood, Chris.\"\n\n\"Oh.\" Chris was confused, Susan had said vampires would want to drink his blood, because it tasted good to them and offered so much sustenance being infused with magic.\n\n\"It's too good, Chris, I only tasted a few drops and it's all I can think about,\" the young vampire confessed. \"It's addictive. I can barely stomach human blood anymore.\"\n\n\"I'm sorry,\" Chris said. \"Is there anything I can do?\"\n\n\"Probably not. Just don't let vampires bite you unless you plan to feed them for the rest of your life.\"\n\nAmanda got up to leave, feeling better and worse at the same time. She'd been feeling almost depressed ever since she'd had her unsatisfying taste. Walking away was hard but apologizing was good.\n\n\"Is she okay?\" Annabel asked. She'd remained quiet, just watching the new vampire.\n\n\"She will be, I think,\" Lillian replied. However she was worried. Amanda seemed to have lost some of the sparkle to her eyes, the bounce in her step.\n\n\"So the Buffy drink is a bad idea then,\" Chris stated.\n\n\"Very bad,\" agreed Lillian.\n\n***\n\nChris's body was pressed back into the leather seat and a few short seconds later the jet was airborne, wheels up. Susan sat next to him and an invisible Lillian was across the aisle. Apart from the bubbly Werecat hostess and the pilot, her familiar, the small jet was empty.\n\nIt was wasteful to send a jet for three people but, at the same time, it kind of awesome that he was apparently that important. His thoughts went to Annabel, who was probably back in Laramie by now. He didn't want to leave her behind but it was the perfect opportunity for her to get her affairs in order, placate her parents, and move some stuff down to Denver. Besides, Oslo had agreed to go with her and she had Bartholomew to keep her safe as well.\n\nThe flight ended up being smooth, relaxing, and uneventful; the hallmark of an excellent private charter. Once they landed at City Airport, a wizard customs officer boarded the jet and stamped all their passports despite not being able to see Lillian. It was important to conform to human laws and regulations in order to keep their potential footprint as small as possible.\n\nFor instance, if they were pulled over by police it was easier to simply have your papers in order rather than to resist or kidnap them until you could get their memories taken, while a nationwide manhunt started for the missing officers. Maintaining the Secret was primarily about blending in unless absolutely necessary; taking memories was no simple business and could leave its own trail of partial images. If done poorly or too long after the event, it could even damage the human.\n\nOn the tarmac were three impressive looking black SUVs with serious guards arrayed around. The new arrivals were loaded up rather unceremoniously and the convoy moved off to deliver them to the local Lord.\n\nChris watched early morning London rolling by with interest through the tinted windows. The skyline was truly impressive, he'd always had dreams of doing a little traveling and now, before he really realised it was happening, he was in another country. He even spotted the face of Big Ben for a few seconds as they drove past Westminster Bridge. It would have been nice to stop and see the sights, Annabel would have loved it, but they had appointments to keep.\n\nLord Harcot's headquarters was separate from the various territorial hubs, an imposing mansion on what looked to be a contestant for the most affluent street in London. Their convoy rolled into a circular drop off with a large fountain in the middle. It was impressive but the opulence didn't really appeal to Chris. His door was opened by a suited wizard and they were led inside, Lillian and Susan close beside him.\n\nLord Harcot was shorter than Chris had expected, but had an air or self-assured power that left no doubt he was a Class 1 vampire, well over one thousand years old.\n\n\"Ahh. Greetings, Christopher, Lillian,\" Harcot said, walking over to shake their hands. His accent was thickly British and Chris liked the way words seemed to just roll smoothly off his tongue. \"And who is this lovely witch?\"\n\n\"I'm Susan Baryst, I raised Christopher,\" Susan responded.\n\n\"Indeed. Well, I must congratulate you Susan , you've raised an impressive specimen.\"\n\n\"Thank you,\" Susan replied.\n\nHarcot looked Chris up and down. \"I admit I was a sceptical when the council order crossed my desk. A class 1 male dragon hidden away in plain sight all these years, awakened only a week ago. Yet, here you are in the flesh.\"\n\nChris felt a bit uncomfortable under the vampire's assessing eye but resisted the urge to fidget; it seemed like he was always the subject of discussion. He hoped the novelty would wear off quickly.\n\nHarcot turned and smiled at the other vampire in the room. \"And Lillian, beautiful as ever I see. I couldn't convince you to kidnap the dragon and come work for me? No?\"\n\n\"Thank you, no. I'm happy in my current position, Lord Harcot.\"\n\n\"Always so serious dear, Lillian,\" Harcot smiled. \"How about you Christopher?\"\n\n\"Just Chris is fine,\" Chris corrected.\n\n\"Thank you, Chris, and you may call me Michael. I can't tempt you to relocate to the United Kingdom?\" \n\n\"Sorry, I've been propositioned so much in the last week I can barely keep up. Lady Narlakis has been generous, I'll stay with her for the foreseeable future, at least until I get my feet firmly underneath me.\"\n\nMichael Harcot chuckled, listening to young man, he sounded a little like some of the actors he saw on TV crossed with a cowboy from one of the older westerns \"Yes, I imagine you've fielded a few interesting offers. But I see you're a pragmatist, it was worth a try.\"\n\nThe dragon could indeed be a valuable ally; he could feel the magic saturating the air around him. It was always like this with dragons, especially the males. They were like deep springs of overflowing magic, so intimately linked to their aspects that every part of them was imbued and it leaked into their surroundings.",
        "This one seemed to be particularly potent though, dragons were usually Class 2, especially the young ones. Perhaps it was his unique aspect? Michael could feel his saliva thicken in instinctual anticipation; just the smell of the dragon was a test. He usually didn't feed from men, it was an intimate act after all, but he knew he'd make this exception in the blink of an eye.\n\n\"Well,\" Michael continued, thinking to end the meeting before he became too infatuated. \"This is mostly just a formality. I understand you have an appointment in Scotland with Lord Guthrie. I have a car fuelled and waiting for you. I can understand there are always some security concerns around dragons these days, would you like an escort?\"\n\n\"No, thank you,\" Lillian said. \"I feel anonymity is our best protection at the moment.\"\n\n\"Very well. Then it was a delight to meet you, Christopher, Susan. Lillian, you'll call me if there's anything you need.\"\n\nHarcot noted that Lillian didn't trust him enough to accept his help. It was probably prudent, he had no doubt she had her job cut out for her trying to protect the dragon. There were plenty who would pay fortunes to have a captive male. It seemed almost foolhardy that she alone had been entrusted the task.\n\n\"It was nice to meet you,\" Chris said with decent American politeness. \"If I ever need a change of scenery, I'll remember your offer.\"\n\n\"Delighted.\" Harcot's smile showed even more of his fangs this time. \"Now, you'd better be off, it's at least a seven hour drive to Crieff.\"\n\nMichael was almost anxious to have them leave now. Once they were out of the room he flashed over to his desk and dialled in a blur.\n\n\"Yes,\" he said down the line. \"Get Mary over here. No. Right now!\"\n\nHe hung up and slumped into his chair a little. His favorite familiar would arrive shortly to assuage his thirst.\n\n***\n\nSitting in what his body felt should be the driver's seat, Chris was unsettled to begin with. That and they were on the wrong side of the road! However, once he saw how narrow the streets Lillian seemed to glide the late model BMW through with ease were, he was glad he was just along for the ride.\n\nFor a while, he stared out the UV shielded window, watching one of the world's great cites flow by. However, after they got onto the highway, he and Susan began reminiscing about car trips they'd taken when he was younger. Soon enough, they broke into their favorite driving game, twenty questions. Lillian even joined in sometimes, usually poaching the answer right out from under Chris's nose with a fiendish giggle. Chris was suitably indignant, but the vampire had such a beautiful smile and seemed to genuinely be having fun; it was too disarming.\n\nThe drive so far had been uneventful, but Lillian was alert and anxious. Now they were barely half an hour from their destination, speeding through the deserted Scottish countryside. The car had long ago grown quiet, as the hours passed. Something felt off, like they were being tracked somehow. \n\nIt was overcast, thinking about raining, and they hadn't seen another car since turning onto the single-lane road. Lillian realized her mistake as a blue car came speeding into view behind them over a small rise, she should have stayed on the main roads in the public eye.\n\n\"We're about to get hit.\" She slammed her foot on the gas, making the powerful engine roar and startling Chris from his daydream.\n\n\"What?! Are you sure?\" Chris exclaimed, turning to see the car gaining quickly. \"What do we do?\"\n\n\"We keep driving.\"\n\nLillian tried to remain calm. Looking in the mirror she could see at least three people in the car. She didn't know if she could safely target the car with her telekinetic powers; it was large and had so much momentum.\n\n\"There's someone trying to kill the engine!\" Susan said from the back, feeling the foreign magic around them. \"I'll try to distract him.\"\n\nShe focused her own energy around the car, erecting a weak barrier. This really wasn't her thing and she soon realized she couldn't hold out for long. The wizard she was up against was far more powerful. \n\nJust then gunfire raked the back windshield, showering glass over Susan as bullets whizzed through the cabin and out through the front. Susan screamed, loosing hold of her concentration and Lillian felt the car gradually start losing power.\n\n\"Stay down!\" Chris shouted as Susan started to sit up again, scratched from the shower of glass but mostly just shaken.\n\nFlaming adrenaline blasted through his arteries as his dragon roared in absolute rage. He could already feel his wings growing, his scales rapidly snaking down his back and across his chest, his muscles bulging slightly. Looking back he saw a man readying another volley of gunfire from the backseat window.\n\n\"Fuck that!\" he shouted before his dragon took over, instinct guiding him to rip and tear his enemies.\n\nFrom the driver's seat, trying to keep the dying car on the road whilst watching their pursuers in the rear view, Lillian heard him shout just before he vanished into thin air.\n\n\"Chris, get back here!\"\n\nIn the Ether, Chris flapped his untried wings with all his strength, jumping up off the floor as he thrust down. His body phased straight through the roof, rising a few meters into the shadowy purple world before he flapped again, gaining more height. He didn't even think about his actions, just let the rage guide him. They were attacking him, putting Susan and Lillian in danger. They would die for it.\n\nAs he rose into the Ether, he slowed, the pursuing car was almost underneath him so with an inhuman shriek, he merged back into the Norm; tucking his wings in, he dove straight for its roof, impacting it a crash as it dented and the back windshield shattered in return. \n\nGlancing at the mirror, Lillian saw the trailing car swerve sharply before regaining control.\n\n\"Holy shit,\" she managed, as she caught glimpses the devastation being unleashed by the vengeful dragon on top of the hapless car.\n\n\"Chris? Where's Chris?!\" Susan panicked from the back as she noticed her son was missing.\n\n\"He's about to kill them.\"\n\nLillian tried to drive and watch the action behind as well. There were flashes from inside the car, gunfire through the roof. Susan turned her body, clutching the headrest, to see Chris recoil, a bullet grazing off the tiny scales on his arm and travelling up through his right wing's flight membrane. The purple figure reared back, his furious howl reaching their ears. Suddenly a bright purple orb grew in his hand, spluttering and casting the roadside trees in otherworldly shadow as they sped past. Susan watched in awe as he slammed the blinding purple ball down through the roof, melting a hole.\n\nChris pushed off the car, once again taking flight to soar a little behind the erratic chase vehicle. His injured wing pained him, the wind stretching the punctured membrane, but he paid it no mind, he was unstoppable. Inside there was a brief panic as the orb hovered for a second, pulsing ominously. The mage managed to erect a barrier before the blast hit, shredding the three other occupants with magical shrapnel. Without a living driver, the car quickly left the road, plowing through the low vegetation until it impacted a larger tree with a satisfying crunch, followed by the ticking of cooling metal.\n\n\"Stop! Stop! Go back,\" Susan urged, seeing the brilliant flash of purple light, shards of purple exploding outwards, splintering into the air and vanishing as the car swerved off the road.\n\nLillian, in complete control of the car again quickly slowed, skidding onto the slick verge as she made herself invisible and leapt from the car into the light rain, sprinting back up the road. Susan brushed glass off herself quickly and ran after her, desperate to make sure Chris was okay. \n\nLillian arrived to see the dragon ripping the passenger door off, yanking a barely conscious mage out as he tore through the seatbelt. His shield hadn't saved him entirely; having been disintegrated in the blast, he'd felt the full impact of the crash.\n\n\"Who sent you!\" the dragon yelled, barely an inch away from the man he held so easily by the neck.\n\nThe man mumbled something unintelligible before trying again. It almost sounded like he said \"no choice.\"\n\n\"What was that?!\" the dragon bellowed, loosening his hold.\n\n\"I said fuck yourself,\" the mage gurgled.\n\nBefore he knew he'd done it, the man's neck broke with a sickening crack. He let the body fall, slumping limply into mud by the wrecked car.\n\nLillian's invisible face broke into a wry smile, it seemed the dragon had plenty of backbone when he needed it.\n\nSusan panted as she arrived, watching the body fall and Chris take a startled step back, realising what he'd just done.\n\nLillian rushed forward to examine the car and its dead occupants as Chris took in his surroundings. The inside was a mess, blood mist still thick in the air where the shrapnel had hit the three men's bodies. She sniffed, smelling the mage and a Werewolf, but surprisingly two humans as well.\n\nIgnoring the blood - she didn't want to drink from these degenerates anyway - she rummaged their ripped corpses, pulling out IDs. Checking for familiar tattoos on the humans, she found none. She even stripped one naked, slicing through his clothes with her extended black claws, but found nothing other than an armed forces tattoo at his shoulder.\n\nSomething was wrong. They had government ID booklets, as well as military issue pistols, not to mention the sub machinegun lying spent in the back. These men weren't registered familiars; they were humans, government humans. So what the Hell were they doing attacking a dragon with a mage and a werewolf driver? Was someone using unregistered familiars inside the government as their own personal army?\n\nShe quickly got out her phone and started videoing everything: the car, the men, the ID's, the weapons, reciting her observations as she went. She even went over to video Chris, taking in his bruised bullet graze and wing puncture. His blood was hard to resist out in the open but the light rain helped and she was focused on her job. Besides, they needed to get out of here fast.\n\n\"Are you ok?\" Susan asked tentatively, reaching out but afraid to actually touch her son. If she was honest, after witnessing what he was capable of, she was terrified.\n\nHe turned and saw how worried she was, shivering there in her t-shirt as a light drizzle fell.\n\n\"I'm fine, Mom.\" Chris assured her, collecting her in his arms he held her close as Lillian wrapped up her examination.\n\nSusan, still shivering, clung to his warmth as her adrenaline high died, leaving her feeling weak and tired and a little sick. He extended his wings again, wincing a little as the bullet hole was stretched. But then he wrapped them down and around, making a little shield for her. The droplets of water pattered against it lightly.\n\n\"Who were they?\" Chris asked.\n\nLillian spoke as she worked to get various close ups of the men's marred faces. \"These humans may be unregistered familiars, but are definitely government security. MI6 or whatever backroom agency they come up with every other month. The Werewolf I have no idea, and we'll never get anything out of the mage now.\"\n\n\"Sorry,\" Chris said gravely. \"Perhaps I shouldn't have killed him. I didn't mean to really.\"\n\n\"No, we don't have time to drag him along. The humans are the important part anyway, I can't think of any reason they would be here. It's really illegal to have unregistered familiars and these guys were obviously aware of us.\"\n\nLillian rolled one of them over onto his back to video him. Half of his face was missing, shaved clean off by several shards of Ether. \"You certainly did a number on them.\"\n\nEven Lillian was astounded at the gruesome destruction in front of her. The car hadn't fared any better than the men, peppered with jagged tears and holes, metal hadn't been a barrier to the purple shards.\n\n\"I kind of went nuts, huh? Fuck, I don't even understand half of the shit I did.\"\n\nChris was worried that he seemed to have a complete lack of empathy towards the men. He'd just killed four people and at the moment it seemed to matter less than the fact that Susan was cold and shivering. Perhaps he was a sociopath, or maybe he was just in shock.\n\n\"You did well, Chris.\" Lillian stopped to reassure him. \"You defended yourself and us, possibly even saved our lives.\"\n\n\"I killed four men, Lillian.\" Chris's voice raised more than he intended. \"And I'm finding it hard to care. That's not normal!\"\n\n\"Why should you care?\" Lillian snapped back, frustrated with the dragon's instincts constantly at odds with the kid's perception of his world. \"We don't have time for a little meltdown. This is the ugly side of our world, the kill or be killed side. You can come to terms with that when we aren't still in danger out in the open!\"\n\nThe expression on his face made her regret the harsh outburst. It really was a pity he couldn't remain as he'd started: normal and nice and innocent.\n\nShe softened her voice, but maintained her point firmly. \"You were attacked. It's their fault they underestimated you, not yours. Would it make you feel better if they'd succeeded? If Susan or I was killed?\"\n\n\"No,\" he mumbled.\n\n\"That's what I thought. Now, get your mother back in the car, we need to go.\"\n\nLillian was almost done, just doing a final check to make sure there was no obvious evidence of magic on the bodies. \n\nChris steered Susan back down the road, holding her close with his uninjured left arm. Thankfully no other cars passed by, or they would have seen a large, purple dragon-man tenderly guiding an attractive woman into the back of a shot-up car. He laid himself on the back seat, hopefully out of sight, and had Susan lie on top of him, safe from the broken glass underneath him before shutting the door. It was cramped and awkward for his large body but they didn't have far to go. \n\n\"Don't you ever do that again,\" Susan said from her perch on his chest, looking down into his reptilian eyes and thumping him weakly with her fist. Her clothes were wet and cold but his body was warm against hers and he held her tightly despite her scolding. \"You had no idea who was in that car or what they were capable of. Lillian's here for a reason, that's her job.\"\n\n\"They were about to shoot at us again Mom, I couldn't risk that.\" Chris ran his hands up and down her back soothingly. \"I'll always defend us, it's my nature to protect.\"\n\n\"That's stupid,\" Susan sniffed. \"You could have died!\"\n\n\"Shhhh, we're fine,\" he consoled, leaning up to kiss her lightly. She eventually calmed, snuggling into his cream coloured neck as she shook quietly, outraged at the world for being so violent.\n\nLillian was soon back in the car and they sped off. To anyone who looked twice, the bullet-ridden car had no occupants whatsoever. She dialled as she drove, only waiting a few seconds before the drow answered her emergency number.\n\n\"We've been attacked on our way to the dragons,\" Lillian began without preamble. \"A wizard and a werewolf as well as what I'm assuming were two unregistered familiars.\"\n\n\"You, neutralized them?\" Reyla said calmly, although her heart raced slightly. She assumed correctly that she wouldn't be receiving the phone call if the situation wasn't resolved.\n\n\"He did,\" Lillian looked back towards the dragon, comforting his mother in the back seat. \"It was all over in just a few seconds.\"\n\n\"How?\"\n\n\"The dragon surfaced and he phased and flew onto the car chasing us, then let off some sort of explosion inside it. It was magnificent.\"\n\nReyla mulled this information over for a few seconds. So he was an instinctual fighter, she'd suspected as much. Again, she considered her luck to have him land so fortuitously in her lap.\n\n\"If you're in the clear for now, try to make it to the dragons. They'll provide safe haven overnight but I want you back here tomorrow. Try to be unpredictable in your movements. Unregistered familiars, the Synod is going to have a field day. This stinks of bounty hunters, I never should have let him leave my territory.\"\n\n\"Okay, I'll send you the evidence I collected soon. Get someone to start looking into the humans.\"\n\n\"Keep him safe, Lillian.\" Reyla's voice had a sharp edge that even managed to be transmit across thousands of miles.\n\nLillian hung up, knowing nothing more needed to be said for the moment. She would protect the dragon, with her life if necessary, she didn't need to be told that.\n\nShe began uploading the video and photos to Reyla, her inhuman speed and dexterity came in handy now as she multitasked, speeding down the wet, narrow roads.\n\nLord Harcot seemed genuinely surprised by the attack when she called him. Lillian was inclined to think he wasn't behind it however, you could never quite tell over the phone. Harcot would arrange for a cleanup, it would be hours until the crew arrived so they would have to work to mislead whatever investigation the human authorities started. She kept the evidence she'd collected to herself, their IDs, a small sample of each of their blood, the memory of their scent, and the video recording. She would get to the bottom of this herself if needs be. \n\nExamining the scene in her mind again, it was impossible to place the two humans. There was absolutely no way they could be there. They must have known the Secret, yet they weren't familiars, not registered at least. It didn't make sense, the play was especially foul. The vampire also realized she might have been in trouble if the dragon hadn't stepped in. The mage was quite powerful, had been carrying vials of death's bane potion, and the Werewolf had a wooden stake strapped to his thigh. They'd been prepared to fight a vampire. In combination with automatic gunfire from the humans, it would have been an interesting fight.\n\nSpeaking of fights, there was no doubt in her mind now that the dragon could. Perhaps he lacked a little finesse but he certainly made up for it with style and brute force, not to mention that fucking Ether grenade he'd set off. She'd never heard of anything like that before.\n\nThey drove as fast as safely possible. It was more important now to distance themselves and reach the safety of Lord Guthrie's property than to not be noticed. Susan was very cold in the back as freezing air streamed through the broken windows. Chris tried to keep her warm, holding her between the back of the seat and his body but she shivered miserably in her damp clothes.\n\nSoon enough they pulled up to the wrought iron gates and Lillian got out to use the intercom. \n\n\"Lord Guthrie, this is Lillian Kozlov, we've been attacked on our way here. Please let us in immediately.\" She looked around nervously but didn't have to wait long for a reply.\n\n\"Good heavens! Of course,\" the gates clicked and began rolling open. \"Drive all the way to the end of the road, you'll be safe here.\"\n\nAnother five minute drive through low woodland had them outside a large, surprisingly modern house. A middle aged man and woman came rushing out, and another woman waited by the door. Extracting himself from the car, Chris sensed the two dragons for what they were: kin. The female took her mate's hand and beckoned Chris forward reassuringly. Standing up to his full height, he strode forward with Susan still under his arm as the light rain continued.\n\nTheir meeting was somewhat tense, the young dragon and the older couple examining each other for a few moments. Lord Guthrie could tell the youngling was on edge. From the state of the car and the healing bullet hole in his wing, their attack had been quite traumatic. His half-form was magnificent, however; the epitome of a dragon male and his coloring was indeed that of the Ether.\n\n\"Hello, Christopher, I'm John Guthrie.\" He spoke with a thick Scottish brogue and carried himself as a Lord might, even as he had to tilt his chin up to meet Chris's eyes. He was short, wiry, and tough looking but his peppered brown hair gave him an air of sophisticated middle-age even though Chris knew he was ancient. His blue gaze felt piercing and yet somehow calming, it felt like he was meeting long lost family.",
        "\"This is my mate, Elizabeth.\"\n\n\"It's nice to finally meet you Christopher,\" Elizabeth added. \"I've been excited all week.\"\n\nThe female was beautiful, blond and full-bodied, her clean scent tantalizing him. Her accent wasn't the same as John's, rather a more mingled combination of several European regions with French slightly dominating.\n\nChris felt his dragon sizing up the smaller male. There was an urge to bluster and fight but there was also a sense of deep respect for his age and knowledge. The mated pair shared a look, a feel of being completely in tune with each other.\n\n\"Hello,\" Chris said a little lamely. \"It's nice to meet some other dragons. Um... could we please go inside, my mother is very cold.\"\n\n\"Yes, yes, of course. I'm sorry. \" Elizabeth turned and called to the woman by the door. \"Catherine, get some blankets, please.\"\n\n\"Thank you. I'm Susan,\" she introduced herself, teeth chattering. \"The vampire with the bags is Lillian, Chris's bodyguard.\"\n\n\"Welcome,\" Lord Guthrie said warmly. \"Rest easy now, you're safe here.\"\n\nThe Guthrie's house was warm; they were guided into a living area and with a modern fireplace. The floors were a light colored hardwood with rugs strategically placed under the couches and furniture. Dim natural light flooded through skylights and the numerous long windows against the two exterior walls, which appeared to be plaster over stonework. The light, open-modern theme seemed out of place to Chris; he would have expected dragons to live in an underground lair.\n\nTheir hosts guided them to couches near the fireplace, and Susan decided to stand in front of it rather than sit. Chris, clothes slightly tattered around his half form with his wings poking out through the back of his shirt, slumped into the offered couch, resting his head in his hands, his elbows on his knees. His body was still calming down after the attack, leaving him a slightly drained and tired, a little like Susan. \n\nJohn and Elizabeth watched the young dragon with interest as they questioned Lillian about the attack. The invisible vampire explained how they had been shot at while their car's engine lost power until Chris phased onto the back of the car and destroyed it.\n\n\"May I see the video, Lillian?\" John asked, and by the way he approached her, the request was more a formality. Chris tensed at his tone and John noticed, perhaps smelling something in the air he turned to reassure the boy. \"I am a member of the Synod, Christopher, and a fellow dragon. It is an obligation to get to the bottom of this, as well as a personal concern.\" \n\nLillian relinquished her phone, showing him the video and John was impressed with her assessment. The two humans were the key to finding out what was going on. \"I promise you my backing if you need it, Lillian, and I will start my own investigation forthwith. We can't have unregistered humans attempting kidnapping. It's a huge breach of the Secret.\"\n\n\"Thank you, Lord Guthrie,\" Lillian realised how helpful Synod backing might be. \"Unfortunately, after the attack, both Lady Narlakis and I think it's important to return to Denver as soon as possible. We'll be leaving tomorrow morning, perhaps we can return when things settle down a bit. Or you could visit Chris if your business takes you to the States.\"\n\nCatherine, a Being Chris couldn't place, came back with some thick wool blankets for Susan who stripped unceremoniously down to her underwear and wrapped up tight.\n\nFor a moment she had considered if it was appropriate but decided she didn't care; she shuffled over to the couch and snuggled up next to Chris. He made her feel good, comforted her, which was exactly what she needed right now. He wrapped an arm around her and as she warmed, she began to doze off, attempting a few times to keep up with the conversation but finding it futile. The vibrations of his deep voice sent her right to sleep.\n\n\"Your mother must have been quite terrified,\" Elizabeth commented. \"It's good you comfort her like that.\"\n\n\"Yes.\" John agreed. \"Witches and wizards may have quite admirable control over magic, but they do lack the constitution of the more physical races.\"\n\nAs if knowing she was the subject, Susan wriggled closer to him in her sleep, burying her face under his arm and attempting to put a leg on top of his. Chris looked around the room nervously, the act was a little too intimate for the company.\n\n\"You don't need to feel awkward, Christopher,\" Elizabeth added with a cheeky smile. \"Your relationship with her has changed. We understand.\"\n\n\"You know? How?\"\n\n\"The way she smells of you and the way she went straight to you,\" Elizabeth explained soothingly. \"There's no shame in that, it's natural.\"\n\n\"Yes, indeed,\" John reminisced. \"A young dragon like you needs a good brood. I remember before Elizabeth and I settled down I had six beautiful women. Loved them all dearly, too.\"\n\n\"It just seems wrong,\" Chris almost muttered. \"I've been raised as a human my entire life except some memories I can barely recall of my mother and father.\" \n\n\"Yes, but that's why you're here,\" said the older dragon. \"I'm very sorry about David and Marie. I begged your father to go through official channels to get justice for your mother's death, but he asked me what kind of man would sit by as his mate's murderer walked free. He was grief-stricken, I can understand that.\"\n\nChris was saddened to hear of his parent's deaths but perhaps, in the future, Lord Guthrie could help him get to know them a little better than what he remembered in his young, foggy memories.\n\nLord Guthrie continued. \"We'd thought you were dead all these years too. Now we want to help you. We had planned for you to be here at least a week, to teach you about dragons, about yourself. We have this evening at least.\"\n\n\"Even a little now would be great,\" Chris sighed. \"These things keep happening to me that I have little control over or seem so foreign. It's like my dragon is a separate entity inside my mind with his own ideas and thoughts.\"\n\n\"Yes, that's an unfortunate effect of being awakened suddenly,\" Elizabeth said, tucking a lock of blond hair behind her ear. \"It usually it happens over several years in our children when they're about six or seven. The two minds have time to blend and become seamless. It will take a while for you.\" She shook her head, looking concerned. \"You poor boy. You must have gone through so much this last week.\" \n\n\"You'll need to get used to the effects of our physical changes, too,\" John said. \"You're stronger, faster, much more durable, and you'll heal faster than you're used to. Not to mention your senses are well above human level.\"\n\n\"Yeah, I've figured all that out. The pheromones were a bit of a shock, though.\" Chris chuckled.\n\n\"I imagine so.\" Elizabeth returned a smile. \"Yours are particularly pleasant, Chris, very spicy and masculine.\"\n\n\"...Thanks?\" Chris looked nervously towards John as his wife pecked his ear and whispered something even he couldn't hear before she got up and approached him. John winked at him, making Chris even more nervous, as Elizabeth ended up kneeling on the couch at his side not occupied by Susan, her knees touching him.\n\n\"Relax, it's okay, Chris.\" Elizabeth soothed. \"I'm just getting to know you a little better. I think you'd be perfect for a frustrated young woman I know, maybe even her mother, too.\"\n\n\"Wh...Who's that?\" Chris stuttered.\n\nHe was entranced as he experienced his first physical contact with his own species. She leaned in to sniff delicately at his neck. He automatically cocked his head to allow her better access, and she gently kissed his creamy throat. \n\n\"Females have our own pheromones, too, you know. They indicate we're receptive. Would you like to smell them?\" Elizabeth cooed.\n\nShe could easily get a little caught up in her examination. She was trying to gauge his strength, his vitality, his temperament from the way he smelled and tasted. She wasn't disappointed. Slowly, she released her pheromones as she kissed up his neck, determined to also have his lips.\n\nChris leaned back and let it happen, she felt great kissing up his throat, soft and yet confident in her actions. He brought a hand up to stroke her side through her blouse, just below her full breast. He smelled her simple, clean scent become warmer, earthy, heavier. Instantly his dragon knew what it meant and purred happily, the female wanted to mate with them.\n\nThen he realized he was actually purring somehow, a low kind of growl coming from his chest. It stopped as soon as he thought about it.\n\n\"That's the smell of a ready female. Remember it when you meet others. It's an invitation, but it might be the only warning you get.\"\n\nElizabeth took his face in her hands to look deeply in his eyes. She enjoyed his gentle touching for a few moments but noticed he seemed concerned, confused, maybe.\n\n\"Your colouring is very attractive and you're strong but also gentle. Yes, I think you'll be perfect.\"\n\n\"What's your colouring?\" Chris murmured, captivated by her green eyes. \"And what am I perfect for?\"\n\n\"I'm a blue, a water dragon. John's a brown, earth. I go nearby to Loch Turret to recharge, John melted a hole deep into the earth for himself to be close to his aspect. You're an anomaly though, unique, and we don't actually know what to do with you other than let nature run its course. Hmm... does your dragon take you to the Ether?\"\n\n\"Yes, I go there when I sleep sometimes.\" Chris sighed, the earlier mention of John had him look briefly towards the other male, who was watching intently but seemed perfectly confident that his wife was teasing another male. Elizabeth brought his attention back by brushing his cheek.\n\n\"Why won't you tell me who you meant?\" he asked.\n\n\"Because I haven't finished yet.\"\n\nElizabeth leaned down to place her full lips softly on top of his. She moved them experimentally for a few seconds before he responded naturally. Soon their tongues met tentatively, just a flick between their lips but their mouths opened to accept each other and they slid together slowly. They each savored the essence of the other; to him she was wisdom and beauty, tasting slightly sweet and pure like a spring; to her, he was youthful, exotic power, unsure of himself but capable of so much. He tasted spicy and also slightly smoky. She could tell he would make an excellent mate if she wasn't already spoken for. \n\nBreaking the kiss somewhat hesitantly Elizabeth was almost certain now. \"You'll make the perfect mate for Clair Godran.\"\n\n\"Who's she? \" Chris asked, catching his breath slightly after their long, drugging kiss.\n\n\"She's the next youngest after you, a female red. She's met all six of the other males but doesn't want them. I'm sure she'll like you though, you're strong enough to handle her temperament but you'll be tender. She needs that, too, because she's inexperienced.\"\n\n\"You're setting me up? Don't I get any say?\" \n\n\"What's there to say?\" Elizabeth asked, patting his chest. \"She's beautiful and fiery, a challenge for you. She's given up hope of having a mate in her lifetime, which is such a sad fate for one so young. She and her mother can teach you about being a dragon.\"\n\nChris didn't know what to say as Elizabeth extracted herself from him.\n\n\"Thank you Chris, that was lovely.\"\n\nBlinking, the younger male looked at the senior, wondering why he had remained silent during all that. \n\n\"Don't worry, Christopher,\" John started as his wife came to sit by him again and took his hand, smelling of another male. \"We don't force matings but Elizabeth usually has a good sense of these things. It's important we find you mates as soon as possible. You're the seventh male dragon we know of. There are twenty-two females but less of them are breeding. Conception is so hard for us.\"\n\n\"Why's that?\"\n\n\"We're at the top of the food chain, Chris, and almost immortal so the balance of nature insures we bear few children. There have always been more female dragons, too, some artefact of our reptilian essence and our polygamy. The problem is, it sometimes takes decades or centuries for females to become pregnant, even with regular coupling and itch injection.\"\n\n\"Itch injection?\" Chris queried.\n\nThe older male looked bemused. \"Itch is what we call the male's second venom. All dragons have a deadly poison we can inject through our fangs but males also have itch. It induces fertility, engorging the female's womb with magic for our seed to take hold. It... ahem... also makes them more tractable and insures they stay around long enough to become pregnant. It's somewhat addictive.\" \n\n\"You mean it turns me into your mewling, little sex doll, husband?\" Elizabeth tittered teasingly.\n\n\"Well, if that's how you want to word it.\" John blushed at her intensity, then returned the playful, almost randy look, as if he was accepting a challenge. \"It also makes sure only one male can impregnate the female while they're working at it.\"\n\nElizabeth puffed up a little. \"Yes, I'd word it like that, you snarly, old brute. It makes me so hot and needy. I love it!\"\n\nJohn actually growled in response, despite trying to act the polite Lord of the Manor. It looked like they might attack each other and rip their clothes off for a second.\n\n\"Wait, uh,\" Chris almost was almost desperate to interrupt what felt like foreplay between the two. \"How addictive is the itch? Is it permanent?\"\n\nElizabeth turned to Chris and shook her head, her face still a little flushed. \"It's not permanent. If I were to be separated from John and far away from him for a month or so, then the itch would wear off and I would in theory be receptive to another male.\" She looked at her mate with a very warm smile. \"I do not see that happening, however.\"\n\nThe young dragon pondered that over as the older dragons cooled off. He needed more answers however, and cleared his throat to continue.\n\n\"My dragon told me some of that stuff when my girlfriend asked if we needed to use protection. He seemed to think that as long as I don't bite her, she'll never get pregnant by me.\"\n\n\"Yes, male dragons can't impregnate females unless they bite them with itch a couple times first,\" Elizabeth laughed, seeming especially giddy with the topic. \"Doesn't stop them trying though.\"\n\n\"I took my girlfriend as my familiar, ended up casting a living spell on her actually... don't ask me how. Can we even have children at all? What will they be?\" asked Chris.\n\n\"A living spell?\" John queried, distracted from his actual questions. \"I remember the shockwave the other day but none of the reports mentioned it was a living spell. This is very interesting, Chris, could you tell me about it?\"\n\nChris tucked aside his questions about children for the moment, explaining what happened and how Bartholomew appeared to be there to protect Annabel but also gave her some magical influence on her surroundings.\n\nLord Guthrie grunted in thought, nodding to himself for a few moments. \"This is very impressive, I can feel that you've got a lot of raw power but livings spells are rare. And to cast one without even trying to? You have potential to achieve greatness among us.\"\n\n\"I don't want greatness, why does everyone seem to think that?\" Chris muttered.\n\n\"Well, you're a Class One Being and a dragon. Greatness is expected.\"\n\nThe young dragon frowned in though before reminding him. \"What about children with Annabel?\"\n\n\"Hm? Oh, yes, you do need to know what you're doing, don't you.\" He chuckled and nodded. \"You can indeed have children with your human familiar. All beings except vampires and other undead can bear children. Sorry, dear.\" John looked apologetically at Lillian.\n\n\"Pffft, no apology needed.\" Lillian brushed it off with apparent honesty. \"The idea didn't appeal to me much when I was human. Now it's an impossibility.\"\n\n\"Indeed. Anyway, if two different species mate - a male dragon and a lycan female, for example - the children will be either one or the other. Werewolf pups or dragon whelps. Our world doesn't work in hybrids and half-breeds. What determines which species the children will be is again up to nature's balance and therefore, in this situation, Werewolves would almost always be born. The pups would no doubt be healthy and powerful from such a strong father but they would be completely wolf. Their offspring, too.\"\n\n\"So Annabel and I can have children but they'll be human, not dragon?\" Chris clarified.\n\n\"Exactly,\" Elizabeth chimed in. \"They would probably make competent wizards or witches but the chances of a dragon child would be astronomical.\"\n\n\"Okay, but why would they be magical humans? Shouldn't they be normal humans?\" He was a little confused with the somewhat illogical Being breeding system.\n\n\"Dragons overflow with magic, direct conduits for their aspects,\" the female dragon picked up where her mate left off. \"Your children with a human would receive some magic and be able to control it, making them a witch or wizard. This is the same reason we're endangered, other Beings want to use this magic themselves. It's why you're the best a woman can expect to ever have outside of another species' mating bond, it's why your vampire friend can barely stop herself from sinking her fangs into your neck.\"\n\nElizabeth didn't stop as Chris's head snapped to look at Lillian. \"Indeed, successfully impregnating a female dragon is all about building up enough magic inside her to overcome the barriers nature has in place to limit such individually powerful Beings breeding rampantly. Now that we're so few, it will be our downfall.\" \n\n\"Lillian?\" Chris asked, reminded of how difficult it must be for her, especially with his dry blood around his healing wounds.\n\n\"I'm fine, Chris,\" She said firmly, maintaining her professionalism in the wake of Elizabeth outing her like that.\n\nThey talked a while more as the afternoon light faded into evening. Chris had a bit more explained to him about dragon aspects and how every so often, dragons should go back to their element, recharging their magical potential. John said that because the Ether usually drained Beings who entered, being recharged by it would make him unique among Ether users.\n\nHe also encouraged Chris to pursue his education in both Ether and traditional magic. It was often difficult for dragons to master specific incantations or spells like humans easily could. They were more instinctual, relying on their aspects. However, if he could also perform magic outside of his aspect it would greatly increase his versatility and surprise any enemies who prepared specifically to fight an Ether user.\n\nWhen Chris asked about his true dragon form, Elizabeth explained how it was a process of asking the dragon forward, ceding more control to that part of himself. \n\n\"However, I discourage you from trying it too soon,\" she said. \"It would be best if you became more comfortable with your dragon first.\"\n\nWhen a slight lull occurred in the conversation, Elizabeth looked at the clock, making a quick calculation before pulling out her Maginet phone and dialling. Chris watched with interest, thinking he should call Annabel also, but deciding to wait until bedtime. John and Lillian seemed to be discussing some Synod politics about \"turning\" restrictions when someone answered Elizabeth's call. Chris listened intently to one side of the conversation.\n\n\"Hello, Petra. Yes. Yes, it has been too long. I know. Look I doubt it's common knowledge yet but we've discovered a new male. Yes, he's listening to me right now.\" Elizabeth smiled over at Chris. \"No, he's young. He's unique, Petra, his aspect's the Ether. He's delightful, a bit young but huge potential. He's gentle, too.\n\nChris squirmed under the older dragon's praise, feeling a growing sense of pride. He tried distracting himself by repositioning some of Susan's lovely dark hair while she slept, but made sure to keep his ears trained on the conversation."
    ],
    "authorname": "ltpc",
    "tags": [
        "fantasy",
        "non-human",
        "dragon",
        "magic",
        "incest",
        "romance",
        "blowjob",
        "vampire",
        "sex"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/endangered-ch-04"
}