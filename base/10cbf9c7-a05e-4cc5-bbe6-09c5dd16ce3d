{
    "title": "The Boys Next Door Ch. 05",
    "pages": [
        "Bright hot lights dazzled Diana as she slowly walked across the stage, her toes clenched inside her red peep-toe pumps. The only sound in the stadium was the click of her high heels. From below the stage, her graduating class watched her silently, rows upon rows of blue gowns and decorated caps. Behind them, barely visible in the yawning blackness, parents and family and friends packed the seats. \n\nIt was the kind of vision that had woken her before in a cold sweat, her heart racing and her mind catching up to the fact that it had just been a dream. But this was very real. As she stepped to the podium, adjusted the mic with a creak, and cleared her throat, she felt a flutter of anticipation along with the nervousness. \n\n\"Good evening, parents, faculty, and graduates.\"\n\nAfter Ian had left her room that morning, while her mother called a cheery goodbye to \"Brendan,\" Diana had skimmed her original speech, her heart still pounding from the close call. The whole thing was based on literary quotes about the great beyond. It sounded the way a valedictory speech should sound. It was safe. And after she'd read it twice, she'd ripped it to bits, flushed them in a rush down the toilet, and written a new one in fifteen minutes flat. She didn't need to hide behind someone else's words. She had a few things of her own to say.\n\n\"Sometimes, things find you that you don't expect. That you never could have planned. That you're tempted to turn your back on and say, 'That's just not me.' But those are the things that can change your life.\"\n\nShe could hear Ian's voice whispering in her ear that she was a dirty girl, feel Brendan's sure hands on her breasts underneath her graduation gown, smell both the twins' male sweat and musk. Right there on stage, she tasted their salty skin and their warm cream on her tongue, saw their hazel eyes devouring her soft curves. Her body remembered waking up in Ian's arms less than twelve hours ago. Her pussy remembered the way he'd fucked her.\n\nShe was so distracted by the images and sensations of the twins, and the rush of knowing no one in the two thousand-person audience would guess the secret behind her words, that she only slowly became aware, as she continued talking about taking risks and challenging yourself, that she was speaking naturally. Her voice sounded poised and confident. She had a broad smile on her face. In a stadium packed with people, all eyes on her, she was enjoying every second of her speech.\n\n\"Some of us have planned each step of our lives for the past four years. Others couldn't have cared less. And many of us are somewhere in between. But I would guess that we all have our ideas about who we are. They come from what other people expect of us, and they come from what we expect of ourselves \u2014 or don't. We have our ideas about other people, too: the roles they play, the roles we think they're supposed to play. But we can do -- and be -- so much more. So as we leave high school and go out into the world, I just want to say: surprise yourself. Let yourself surprise others. Embrace the unexpected. Try something that's 'just not you.' If there's any time to do it, the time is now. Thank you.\"\n\nThe sudden crack of applause that split the silent stadium air almost knocked her over. For the first time, she felt the sweat trickling down her back. She smiled into the blinding lights, turned, and made it back to her seat with a steady pace. Each tap of her heels sounded triumphant now.\n\nThe rest of graduation was a blur. Music, cheering, diplomas handed out, one last speech, caps thrown in the air. Before she knew it, the processional had taken everyone outside and she was standing in front of the stadium, surrounded by her friends, hugging and taking pictures and scanning the masses of people for her parents.\n\nDiana had never been especially huggy in high school \u2014 shyness had always gotten in the way, even with her friends. But if there was any night to grab people by the shoulders and jostle together for photos, tonight was that night. So when a strong pair of arms folded her in a big hug, pulling her close, she didn't immediately react.\n\nBut the chest she was pressed against felt \u2014 and smelled \u2014 decidedly masculine. A shirt collar brushed her forehead. A broad shoulder bumped her graduation cap. What? Guys didn't just come up and hug her. She wasn't that kind of girl. When the hugger pulled back, his arms still wrapped around her, she blinked up into a pair of bright hazel eyes that sent a shockwave down her body.\n\n\"Uh -- Brendan?\"\n\n\"You were great.\" He actually leaned down to give her a kiss on the cheek, and her whole body tightened. Even if it was just her cheek, his lips were soft and warm, his firm hug felt anything but brotherly, and of course he had to smell good on top of it \u2014 like he'd just stepped out of the shower. \"We heard you were giving a speech, so we had to come see you.\" The wink he gave her looked so much like Ian's imitation of it that morning, she found herself checking the cleft in his chin.\n\n\"We?\"\n\nBrendan let go \u2014 finally. If he'd held onto her for a second longer, she would have collapsed into a puddle. As it was, her skin prickled, and she desperately wanted to tear off her graduation gown and fan herself. Her friends were gawking, phones dangling from their hands, turning from her to Brendan with expressions of amazement.\n\nAs soon as she looked over her shoulder, another male body crowded her. A casual arm dropped onto her shoulders. \"What, you weren't going to tell us?\" Ian looked down at her with a lopsided smile, and her stomach turned a somersault. She caught a faint glimpse of the hickey she'd left on his neck the night before. \n\n\"I figured you guys like surprises,\" she managed to say. Now her face had to be as red as her shoes, and her friends' jaws were practically unhinged. Any minute now, she was going to have to mop Janelle off the floor. Ian only made it worse by leaning closer.\n\n\"Love the fuck-me pumps,\" he said in a low voice under the music blaring from the outdoor speakers. His breath brushed her ear. \"Nice speech too.\" \n\n\"Take a picture of us?\" Brendan's arm was around her too now, and he held out his phone to Marissa, who blinked and took it. He'd made the right choice, Diana thought; Janelle would have fallen apart completely.\n\nGod, she was about to explode, wedged tightly between the twins. People were staring at them now \u2014 not just her friends. If anyone guessed the truth... But right then, she didn't even care. Her face already ached from smiling, but she was too happy not to grin from ear to ear. Marissa seemed to be taking a lot of pictures, her finger permanently pressed to the screen while her eyes moved over the twins' handsome faces and bronzed physiques. Diana couldn't blame her. Meanwhile, Brendan's warm hand squeezed her waist, and a pinch on her ass made her cheeks clench \u2014 definitely Ian. She prayed no one behind them had noticed, or saw her own hand sneak back for an answering pinch. Her panties were moist. Her pussy ached, sandwiched as she was between their muscular bodies. In the midst of all the craziness, she wondered if Brendan knew about Ian's visit to her room last night.\n\n\"We both really liked your speech, Di. We need to celebrate,\" Brendan announced, taking his phone back from Marissa.\n\n\"We do?\" Janelle looked at him hopefully.\n\nBrendan gave her an indulgent smile and turned back to Diana. \"We're taking you out. Right, Ian?\" Ian just pinched her again \u2014 on her hip this time. Diana realized he still had his arm around her. \"Saturday night? This weekend? A surprise.\"\n\nOh boy, she would never hear the end of this from her friends. They'd demand a full report. Out with the twins \u2014 she couldn't even imagine where they'd go or how she'd handle herself. She nodded quickly. \n\n\"Diana! Congratulations, honey! You were wonderful!\" Her mother bustled up to her, her father in tow \u2014 and Mr. and Mrs. O'Brian with them. The twins stepped aside as her mother hugged her. Diana didn't think the sudden entrance was an accident. She'd seen the way her parents had glanced nervously at Ian's arm around her, while Mr. and Mrs. O'Brian looked pleased.\n\n\"Wasn't she great?\" Brendan smiled broadly, as if he were personally responsible for Diana's speech. He wasn't far wrong, she thought, her skin tingling under her gown.\n\nA welcome breeze blew across the lawn. Teachers were coming up to her now. As she talked with them, posed for pictures, and tried to hold down five different conversations at once, she noticed the faculty noticing the twins. \n\nEveryone recognized them, of course. They'd graduated two years ago, but it would be a long time before her high school forgot the O'Brian brothers. And there was no doubt right now which one was which. Brendan was busy shaking all the teacher's hands, chatting them up and sharing friendly reminiscences. Meanwhile, Ian had been grabbed in a bear hug by a rangy guy Diana figured was the basketball coach \u2014 she'd never bothered to keep track of sports the past four years \u2014 while the rest of the faculty gave him a wide, disapproving berth, like they expected him to set off a stink bomb in the stadium.\n\n\"We came to see Diana.\" Brendan's voice caught her attention. He and Ian pointed at her with identical dimpled grins, and Mr. Bertell, her calc teacher, eyed the three of them with a confused expression, like something didn't add up. \n\nMeanwhile, more people were elbowing their way through the crowd to greet the twins, slap high fives, say hello \u2014 older brothers and sisters of the graduates, plus the few athletes and beautiful people in her grade who'd been cool enough to rub shoulders with the twins in high school. This was familiar. Diana was used to seeing Brendan and Ian at the center of things. But now she was at the center, too. People she'd never spoken two words to were shaking her hand, congratulating her, telling her how much they'd liked her speech. \n\nDizzy, she found herself on the receiving end of another hug \u2014 Ms. Wood, her AP English teacher, faculty advisor for the literary magazine, and the person who'd whipped her writing into shape more than anyone else the past four years.\n\n\"Diana, this school is going to miss you so much. I'm going to miss you so much. Yale's about to learn how lucky they are to have you. All those late nights you put in for the literary magazine...the work of art you turned in for your final paper...\"\n\n\"Those times you studied all alone in your room...the way you never had any fun...\" said a familiar teasing voice.\n\nMs. Wood pursed her lips. Diana suddenly became aware of warm pressure on her shoulders. Ian had come up next to her, draping an arm around her again. \"The two of you are friends?\"\n\n\"Neighbors,\" Diana said quickly. \"Friend\" wasn't an accurate word for Ian, and she didn't want to think too hard about what word might be. \"I grew up with him and Brendan.\"\n\n\"Do you miss me, Ms. Wood?\" Ian flashed white teeth. \"'Cause I miss you.\"\n\nMs. Wood raised her eyebrows. \"I'm sure you do miss my class. Just like you did twenty-nine times in one semester. As I recall, your coach got you out of that one. And no, Mr. O'Brian, I don't miss your absences. Or you coming in late, smelling like pot, or your smart-aleck comments, or the incomprehensible scribbles you turned in and called papers.\" Her eyes flicked to his sweatshirt. \"I hope you're attending the occasional class at UConn.\"\n\nIan just laughed. \"Gonna go cry in the corner now. Unless you want to spank me first.\" Red crept to Diana's cheeks \u2014 she couldn't look Ian's way, or Ms. Wood's \u2014 but she also had to bite her lip to stop a laugh of her own. \"Catch you later, Diana.\"\n\nAs he sauntered off, Diana realized a second too late that she was staring at his broad shoulders and narrow hips, remembering how that muscular ass had felt under her hands the night before. A voice over the blasting music pulled her attention back. \n\n\"Diana.\" Ms. Wood had looked exasperated before; now she looked worried. \"I know Ian O'Brian holds attraction for a lot of girls. But please, don't spend any time or energy on him. It would be an incredible waste.\"\n\nDiana blinked, too stunned to answer. Quickly, she looked over her shoulder again, fighting embarrassment and hoping Ian hadn't heard. Hazel eyes met hers. He'd heard. Before she could laugh it off, he turned away.\n\n*******\n\nAt one in the morning, Diana tiptoed into her room, carrying her red peep-toe pumps. Her cap and gown hung over her arm. She was officially exhausted. Graduation parties, laughter, more people and chatter in one night than she was used to in a week. Her cheeks hurt from grinning. Her feet and calves ached from prancing around in three-inch heels. But she wouldn't have traded any of it. She'd dreaded this day even as she'd crossed off the calendar dates in anticipation, but now that it was over, she had to admit: she'd loved it.\n\nSighing with relief, she set her cap and gown on her armchair, wiggled her bare toes in the carpet, and reached back to unzip her tight dress. The navy blue fabric dropped to the floor. It felt so good to free her heavy breasts from their lacy black cups \u2014 the same bra she'd been wearing when her eyes met Brendan's while she enviously spied on the twins' party next door. Had that really happened less than two weeks ago? \n\nShe glanced at the window. The O'Brians' house was dark, the twins' Jeep missing from the driveway. They must be out for the night. Probably with some of the people who'd been so ecstatic to see them after graduation. That was fine, she told herself, trying to ignore her twinge of disappointment. The excitement of the evening had already worn her out. \n\nAfter a moment's pause, she hooked her thumbs into her black thong, eased the scanty material over her hips, and stepped out of that, too. Posing naked in front of her closet, she gave herself permission, for the first time, to really admire the voluptuous girl in the mirror. The full swells of her breasts didn't embarrass her anymore; instead, they tingled under her gaze, knowing how good it felt to be licked and squeezed. Her large rosy nipples contracted in the cool night breeze from the open window. The exaggerated curves of her hips and ass \u2014 curves she'd always considered way over the top \u2014 seemed just right. And whatever Ian said, her glasses were sexy. The black frames \u2014 along with her dark hair, puckered crimson nipples, and the soft triangle between her legs \u2014 punctuated her pale skin.\n\nShe fluffed up her hair, looking at herself from one side, then the other. Then, giggling, she lit some candles, turned out the light, and flopped into bed.\n\nJust a quiet night now. She deserved it. A couple of sweet-smelling candles that would burn down soon, a book that wouldn't keep her awake too long, and no nightgown at all, just the relaxing feeling of fresh sheets on her naked skin. Yawning, she stretched under the covers.\n\nA light tap made her jump. Rolling over, she saw a male face in the window, framed with shadows. Her stomach flipped.\n\n\"Ian?\" she whispered, sitting up.\n\nHe raised an eyebrow at her. \"Brendan.\"\n\n\"Knew that.\" Diana flushed. Of course it was Brendan. Ian wouldn't have bothered to knock. Now that he was smiling, the cleft in his chin made it clear. \"I, uh, I'm not really dressed.\" She held the covers to her chest, aware that her nipples were starting to harden under the cool sheets. \n\nBrendan's smile broadened. \"That's it. I'm leaving.\" He started to turn around, branches rustling below him. Diana began to laugh. It was a little ridiculous, she had to admit.\n\n\"Don't leave,\" she called softly.\n\nSwinging easily through the window, Brendan landed on the floor and walked right over to her bed. Diana realized she was gawking at him, no better than her open-mouthed friends at graduation. His easy grace, his total confidence, the way his tank top and boxers clung to his muscled body.\n\n\"Just came to say congrats. With a little more privacy. You were amazing tonight.\"\n\n\"Thanks.\" Blushing, she nodded, self-conscious now as Brendan sat down on her bed. The mattress sank under his weight. Diana noticed a brown paper bag in his hand. Her skin began to tingle, aware of his long body close to hers. He put his hand on her knee, and the tingles turned into prickles. \n\n\"Good book?\"\n\nDiana glanced down at the open book still in her hand. \"I couldn't really tell you. I'm just too excited to sleep,\" she confessed.\n\n\"Yeah?\"\n\nBrendan was rubbing her knee gently through the covers. Heat poured outward from his touch. \n\n\"You know.\" Her voice caught. \"It's been such a busy night. A lot of people and attention and now\u2014 I guess I don't know what to do with myself.\" \n\nBrendan squeezed her knee. \"I heard I was here this morning,\" he said softly. \"Figured I should make it true.\"\n\nSo Ian had given him the rundown. Diana wondered just how much he'd shared. Of course, he'd told her at the beginning that he and his brother didn't have any secrets from each other. She shook her head. \"My mom wanted you to stay for breakfast. She was probably hoping to talk your ear off.\"\n\n\"Any time.\" Brendan leaned in, the paper bag crackling, and tipped up her chin. Startled, she opened her lips to his. He'd caught her off-guard, but his warm mouth felt so good that she couldn't think any further. \n\n\"Brendan, I\u2014 oh.\" She broke off when his tongue slipped into her mouth. She could taste the faint overlay of beer on his breath. He'd definitely been out. And what about Ian? Deftly, Brendan took the book out of her hand, unhooked her glasses and set them on her desk without breaking the kiss. One large hand massaged its way over her bare shoulders. Of their own accord, her hands wandered to his hair.\n\n\"You taste good, Di,\" he murmured.\n\n\"So do you.\" Flustered, she pulled back and glanced down at the bed. The covers were sliding down her breasts, but there wasn't much point in pulling them back up in front of Brendan. \"What's in the bag?\"\n\n\"Your graduation present. From both of us.\"\n\n\"You shouldn't have.\" Now she was really feeling hot. \"I thought you guys were going to take me out.\"\n\n\"That's the second part.\" He grinned at her. \"This is the first part.\" Her skin popped into goosebumps from the cool night air and the suggestion in his smile. When his eyes traveled down her body appreciatively, she realized that the covers were slipping further over the swells of her round globes. She stared at the brown paper bag in his hand, looking so innocent and making her so nervous about what might be inside. \"Now close your eyes and open your hand.\"\n\nGood thing this was Brendan, because she'd never risk doing that with Ian. Who wasn't here. \n\nSlowly, she closed her eyes. She opened her hand. \n\nSomething smooth and narrow pressed into her palm. Her fingers closed over a firm, slender shape: bulging in the middle, tapered at one end, flared at the other. \n\n\"What is this?\" Her eyes popped open.\n\nBrendan started to laugh. \"Something you'll like.\" He began rubbing her leg again, sending a shiver through her.\n\nDiana turned the shiny pink silicone over in her hand, perplexed. She recognized the material, at least. \"A weird, less-satisfying dildo?\"\n\n\"Try again. I don't think it'll be less satisfying.\" A teasing smile played over his face. And Diana couldn't believe she'd gotten to the point with Brendan where she could talk about these things with him.\n\nShe peered at the toy again \u2014 it had to be some kind of toy \u2014 feeling very naive. It didn't look completely unfamiliar. Yes...she had seen a shape like this when she bought her dildo online, scrolling through the website with her fantasies spiraling out of control \u2014 in the dead of night, of course, while procrastinating on a paper. Suddenly, she knew.\n\n\"Oh my God. Brendan\u2014\"\n\nThey'd bought her a butt plug. Why did they\u2014 How could they\u2014 She forced herself to stare right at Brendan's amused hazel eyes, embarrassment and excitement running down her body. \"I don't believe you guys. Is this a joke?\"",
        "\"Completely serious, Di. Ian told me how much you liked having your ass played with.\"\n\n\"That was private,\" Diana blurted, her cheeks even warmer.\n\n\"It was?\" Brendan paused his hand on her thigh, his eyebrows raised. He didn't look bothered; just surprised.\n\nDiana ran a hand through her messy hair, staring at the toy in her hand. Ian obviously hadn't considered it private. Why should she care? \n\n\"Where is he, anyway?\"\n\n\"Out. Do you want him here too?\" Brendan was already reaching into his pocket, pulling out his phone. \n\n\"Not necessary,\" Diana said quickly. \"Don't bother.\" Her head spun. She shouldn't have thought Ian's visit meant anything. They'd talked, he'd spent the night. So what? And her body ached with Brendan sitting close by on her mattress, confusing her thoughts. That wasn't just amusement in his half-lidded eyes, traveling over her exposed shoulders and creamy cleavage; lust smoked from his gaze. She was starting to wonder if she was in over her head. Out of her depth with the twins. But when hadn't she been? She could handle this. She was determined to. \n\n\"Whatever you want, sweetness.\" The slight smile on Brendan's face sent a sudden rush of need between her legs. What she wanted right now was his hand, gently squeezing her thigh through the covers, to find her bare skin and go straight to her hot center. But he didn't seem to be in any hurry. \"You're really cute, Di, you know that?\"\n\n\"Uh \u2014 so are you.\" And everything she'd already done with Brendan \u2014 and Ian \u2014 didn't make it any easier for her to form words right now. Shyly, she reached out to squeeze his knee in return. Like it was a signal he'd been waiting for, Brendan's warm hands on her shoulders eased her back onto the bed. Climbing over her, he straddled her hips. His dimpled grin sent pulses of excitement down her body. Diana moaned softly when he peeled back the covers and cupped her full breasts, arching her back towards his touch.\n\n\"So sexy,\" he whispered. \"You've needed this all night, haven't you?\"\n\n\"Yes,\" she whispered back, whimpering a little when he easily rolled her rosy nipples between his fingers.\n\n\"Did it feel good to be in front of everyone, Di?\"\n\nShe flushed. It was such a personal question. Brendan was massaging her breasts now, his large palms taking possession of her full globes.\n\n\"Scary,\" she said honestly. Her breath caught when he gently pinched her nipples. \"But yeah, really good.\"\n\n\"It was such a turn-on to see you up there.\" One warm hand slid from her heavy breast to her smooth belly, cupping the slight softness right below her navel. She flushed, from the pleasure of his touch and a little self-consciousness about her soft flesh so close to his hard body. Brendan seemed to notice and squeezed her belly more firmly. \"Ian and I both thought so.\"\n\n\"Really?\" Diana tried to give him a skeptical look, but it wasn't easy to do while melting under his hands. \"In my cap and gown that covered everything?\"\n\n\"Oh yeah.\" Bending over her, he kissed her neck. \"Talking about the three of us. That's what it was, right, baby?\"\n\n\"Yes,\" she whimpered. Brendan's warm tongue was teasing her ear now.\n\n\"Good. 'Cause we've just gotten started. We have so much more to show you.\"\n\n\"Like \u2014 a butt plug?\" Just saying the words sent a hot flush of embarrassment and arousal down her body, but she couldn't help laughing at the same time.\n\n\"Mm-hm. Ian wants to fuck your ass, Di.\"\n\nFor a second, she was speechless. \"Ian isn't here,\" she whispered once she got her voice back. \"Is it your job to talk for him?\"\n\nBrendan chuckled softly. \"Sometimes.\" \n\nBefore she could ask, the covers fell to the floor, pulled or kicked off, leaving all her soft curves on display. Brendan was stretching out on her narrow mattress, pulling her close, and all she wanted now was to feel his warm palms everywhere. Her hands found his thick hair, tugging. As he massaged her naked curves, easing apart her quivering thighs, heat flooded her skin.\n\nShe cried out when Brendan's hand slipped between her legs, stroking her warm valley. His face lit up when his fingers found her creamy heat. As he explored, fingertips gently spread her wet lips, opening her pussy to his touch.\n\n\"Oh God,\" she moaned softly as his finger sank into her tight cunt. \"Brendan\u2014\"\n\n\"Just like that, Di,\" he said reassuringly. More fullness stretched her opening. He must have added a second finger. Lust washed over her body in waves. She didn't want him to stop, couldn't let him stop. When he pulled his fingers out of her juicy pussy, she grabbed his wrist. Then she gasped when something slender and firm slid without warning into her cunt. \n\n\"You're dripping wet, baby,\" Brendan whispered soothingly. Before she could protest \u2014 though she wasn't sure she wanted to protest \u2014 assured fingers closed over her clit, teasing the hard pearl as he coated the plug in her hot juices. God, she was completely naked and exposed to Brendan, pressing her forehead against his cotton-covered chest, shivering as his boxers rubbed her bare legs.\n\n\"Do you want this, Di? Do you want me to fill your sexy ass?\"\n\n\"Yes,\" she breathed, clutching his tank top. Yes was all she could think right now. Yes to Brendan's sensuous hand between her legs, yes to his deep voice whispering in her ear, yes to her tingling ass being filled, and yes to Brendan's hard body getting naked as soon as possible. When her hands found the heavy bulge in his boxers, tugging at his waistband while she squeezed and fondled his erection, he sighed with pleasure. His mouth moved to her neck, nibbling the tender skin. Diana shuddered, bucking against his patient fingers on her clit and the unyielding toy in her pussy.\n\n\"Ian left these last night, didn't he?\" he murmured, nudging her hickeys with his tongue. Heat bloomed all the way down her body. She wrapped an arm around his back, biting down a moan.\n\n\"Who else?\" she managed to whisper.\n\nBrendan groaned softly into her neck, nuzzling the smooth skin. \"Hot. He told me how good you felt, Di.\"\n\n\"He did?\" she whispered. God, the thought of Ian going over last night's details with his brother pissed her off...it should have pissed her off...but right now, it only turned her on. No doubt Brendan would tell Ian everything that was happening right now... Jesus, this was crazy... She moaned in protest when Brendan gave her tingling pussy a final squeeze and eased the plug from her soaked cunt. \n\nWarm hands turned her onto her stomach, rubbing the goosebumps away from her skin. By the time Brendan's palms worked their way down over the generous curve of her hips, her ass arched towards him of its own accord. Fingers squeezed her creamy thighs, then spread her cheeks open, exposing all her intimate parts.\n\n\"Brendan...\" she whispered.\n\n\"Are you embarrassed, Di?\" he murmured, rubbing her full cheeks.\n\nShe didn't want to admit it. She wouldn't admit it. They'd already done so much, and her pussy was dripping onto her sheets, hot and needy, and she didn't want him to stop\u2014\n\n\"Yeah,\" she breathed, pressing her face into the covers. \"I kind of am.\"\n\nBrendan let go of her ass. There was a long pause. Diana was just getting up the courage to roll her face away from her pillow when a sudden smack on one cheek made her jump, her ass quivering and her body tightening in shock. \n\n\"Brendan?\" She peered over her shoulder to make sure this wasn't actually Ian. He spanked her other cheek, and to her amazement, she relaxed.\n\n\"Good girl,\" he said softly. \"This will help. Relax into it.\"\n\nDiana couldn't believe it, but as Brendan kept spanking her firmly, it did help. It was crazy, and hot, and kind of hilarious. And it felt so good to give in and let him do it. She couldn't keep her giggles back. Brendan pinned her firmly in place, his free arm on her waist, as she squirmed and shook with laughter. His own soft chuckles met her ears.\n\n\"Ssshhh, baby,\" he murmured. Her ass was getting warmer and warmer as his palm alternated between her creamy round cheeks. \"You don't want to wake your parents.\"\n\nBefore she could pant out an answer, something firm and slim pressed inexorably into her rosebud. Brendan was still spanking her, and she didn't any choice but to accept the intrusion. Her ass squeezed down on the plug, slick with her own juices and sliding smoothly into her velvety tightness, deeper than Ian's finger had been and getting wider and wider as Brendan slowly penetrated her sensitive ass. It felt so wrong, and so right, and so wrong again, and oh...it was all the way in. Assured hands were easing her onto her back, finding the heat and wetness between her legs, even as she squirmed against the mix of pleasure and discomfort. \n\nAnd gasped as warm skin pressed against hers. Brendan was naked now. He must have taken his clothes off before he started spanking her. She could just see the planes of his shoulders, the swells of his arms, in the faint light from the guttering candles. His tank top and boxers lay on her desk. More lust washed over her from the weight of his sleek body.\n\n\"It's too much,\" she whispered. But her cunt was thrusting toward his hand, soaked with need and begging for his touch. She buried her face in the bulk of his shoulder.\n\n\"Give it a minute, Di,\" Brendan whispered reassuringly. \"Open your pussy to me.\"\n\nOh God, he was rubbing her clit firmly in circles, taking possession of her swollen lips. Her ass tingled and quivered around the solid plug. Craving built deep inside her, the slight burning in her ass turning to fiery pleasure. \n\n\"Brendan...Ian,\" she moaned, in a daze. \"I want Ian too.\"\n\n\"Then I'll get him, baby,\" Brendan whispered. One hand left her soft curves, reaching toward the floor. He moved against her, massaging her dripping pussy, as he retrieved his phone. A bright screen shone through the dimness. Diana caught the words: shes asking for you\n\nThen she cried out as the phone dropped to the floor and lips closed over one puckered nipple, sucking the tender bud so sweetly that she could barely believe the same twin had filled her tight ass with the plug she now clenched and fluttered around. As she arched her back toward Brendan's mouth, a finger slid into her soaked cunt.\n\n\"Your little pussy's so tight and hot, Di,\" he murmured into her breast, licking all over the voluptuous globe in a way that made her pant and grab his hair. \"You're going to feel incredible on my cock.\"\n\n\"Brendan, please...\" She didn't mind begging with Brendan. His smiles and soft touches coaxed it out of her. He kissed her between her breasts. His fingertip teased her moist opening, and she shuddered.\n\n\"More?\"\n\n\"Yes...please...\"\n\nAnother finger entered her pussy. Oooohhh...so good...but not enough. \n\n\"More,\" she whispered. Brendan engulfed her other nipple with his warm mouth. She almost jumped at the sharpness of a third large finger stretching her tight pussy. Sometimes, unsure in the dark and excitement, she'd wondered how many fingers one twin or the other had inside of her, but her incredibly full cunt didn't leave any doubt: this was the first time she'd taken three. \n\n\"Ooh...\" she whimpered.\n\n\"Relax, Di,\" Brendan murmured. \"You asked for more because you needed more. You can handle this.\"\n\nSlowly, she relaxed around Brendan's fingers, her satiny pussy flexing and quivering around him. And oh God, feeling the plug in her ass at the same time... He was right. She'd been longing for this, waiting for it, needing it. \n\nShe sighed at the satisfyingly full feeling. Brendan lifted his head from her breasts and smiled up at her. \"Good?\"\n\n\"Yes.\"\n\nHis thumb wandered over her slick valley, caressing her lips lightly, now and then brushing her clit. Sparks of fire shot through Diana's crotch. She rubbed against Brendan's hand, her ass flexing around the plug, reaching for release. A strong hand on her hip cut her movements short.\n\n\"Don't you want to save it for Ian? You wanted him here too.\"\n\n\"Dammit, Brendan...\" She tried to thrust her swollen cunt against his fingers, but he held her firmly in place.\n\n\"I know you can wait, sweetness. He's going to want to feel you come when he fucks your ass.\"\n\nOh my God. Who was really in charge here? \n\n\"Please let me come, Brendan.\" Juices trickled from her pussy. He hadn't stopped lightly stroking her wet and aroused flesh.\n\n\"Soon.\"\n\n\"What about you? Can you wait too?\" she whispered. \n\nShe regretted saying it as soon as she saw the mischievous smile flash across Brendan's face. For a second, he looked so exactly like his brother, it was disorienting. Then warm lips captured her mouth as his fingers slid from her soaked cunt. One muscular leg parted hers. Before she knew it, her pussy was slowly opening under the insistent pressure of his rounded head. No way could he fit right now \u2014 Diana gasped into his kiss as his thick cock sank into her pussy.\n\n\"Guess I can't.\" He kissed her neck.\n\nDiana moaned softly. If she'd felt full before, this was another level altogether. She could just barely handle the sensations of Brendan's cock, plumbing her pussy slow but deep, and the firm plug nestled in her ass. Gripping his shoulders, she shifted under his weight, trying to angle her hips so it wouldn't be so intense, but Brendan just kissed her again and cupped her round ass, squeezing the creamy skin as he pulled her even closer. Diana's cunt spasmed with need, and oh God, fiery ripples in her ass. It was all blending together. Hot pulses of pleasure threatened to overtake her as she wriggled against Brendan's hard body, doing her best to thrust back. Brendan held her firmly while he fucked her, his soft sounds of pleasure buzzing against her ear. Her cunt rippled around his cock, spasming again when he changed his angle, and he let out a grunt of enjoyment.\n\nWhimpers left her mouth, flowing together in a long sob of desire. She was moving with him now, and it was all feeling better...and better... \"Brendan, I'm so close,\" she moaned.\n\nImmediately, he pulled out of her slickness, arching his body back and swiftly climbing over her. \n\n\"What?\" Diana gasped. \"What are you\u2014\"\n\nWarm flesh rubbed against her lips. Brendan had straddled her so fast she hadn't realized what was happening. Tossed on waves of pure lust, Diana could only open her mouth to take in his hot cock. Oh yes. He tasted delicious. Her whole body was buzzing. Eagerly, she lapped her own cream off his thick, veined shaft, wrapping her fingers around the base. Brendan was moaning now too, thrusting his hips toward her face and gasping when her excited tongue found the sensitive spot on the underside of his head.\n\n\"Oh, sweet baby,\" he groaned. Diana shuddered with need. \"You're such a good little cocksucker.\"\n\nShock and arousal washed over her body. Ian had called her a slut plenty of times, even a hot bitch, but Brendan had never gotten that dirty. His words tightened her nipples. God, her full breasts, her dripping pussy, her tingling ass, her whole body, everything was crying out for attention. But she was so focused on the cock in her hands and mouth, she couldn't bear to pull one hand away to touch herself. Instead, she sucked harder, opening her soft lips to take in more of Brendan's shaft.\n\n\"Oh yeah, beautiful. That's it. Take me deep.\"\n\nOh God, he was filling her mouth, it was too much, but she licked his velvety rod as fast as she could, responding to his pants and cries. She had to admit, it was beyond sexy the way Brendan crumbled when she sucked his cock. His silken balls filled her hand with warm weight, his pulsing shaft was thick and satisfying in her mouth. Suddenly, hot fluid bathed her cheeks and flooded her tongue. Brendan kept thrusting, moaning, until with one final twitch he withdrew his cock from her mouth and smiled down at her. Diana sighed with relief as his large hands cradled her face, massaging her aching jaw. \n\n\"So good, Di,\" he murmured. \n\n\"Brendan, please...\" she whispered, arching her back toward him.\n\nThankfully, he stretched out next to her again, pulling her close. A cry left her mouth when his fingers met her needy cunt. Her ass quivered around the plug.\n\n\"How do you feel, baby?\" His lips brushed hers.\n\n\"I need to come,\" she gritted. \n\n\"When Ian gets here. You asked for him.\"\n\nBrendan's self-satisfied grin, dimples marking both his cheeks, just stoked her furious need. How dare he tease her like this after he'd come deep in her mouth? Panting, she dug her nails into his broad back and scratched, hard. \n\nBrendan's eyebrows shot up. \"Easy, Di.\"\n\nBefore she knew it, he'd captured both her wrists in one hand and pinned them above her head, against the wall by her pillow. She tugged, but she couldn't free herself. Brendan's other hand roamed over her body, cupping one heavy breast soothingly. God, she was so alive to every touch from him, and it was just like Brendan to have to run the show, and this was beyond unfair and unbelievably hot at the same time. When she tried to thrust against his hand, sure fingers pinched her nipple, crushing the tight bud.\n\n\"Brendan!\" she gasped. \"Why are you being so mean?\"\n\n\"Be patient, baby.\" He tickled her flushed skin, and she moaned.\n\n\"You're worse than Ian.\"\n\n\"Maybe.\" \n\n\"Brendan, I need you now,\" she pleaded.\n\n\"You're gorgeous like this, Di.\" His warm palm roamed to her other breast, knowingly caressing her sensitive flesh. Heat suffused her body, from her face to her feet. She whimpered, tugging again against his restraining hand, but he held firm. Lips met hers in a comforting kiss, and her buzzing crotch clenched, her pussy around nothing and her ass around the plug. \"So ready to be fucked. So ready to 'surprise yourself.'\" Diana shivered at the quote from her own graduation speech. \"So ready to take everything me and Ian can give you.\"\n\nAs Brendan buried her whine in another kiss, branches creaked outside. Diana stiffened, pulling her wrists against his hand again, but Brendan just deepened the kiss. Finally, as the scraping sounds got louder, closer, at her window now, he released her.\n\nA body crouched in the window frame. Ian dropped to the floor like a cat. Diana expected him to tease her about lying naked in his brother's arms, panting and flushed and on the brink of coming, but his eyes just raked over her. His shirt flew onto her desk. His shorts and boxers shot to the floor. Shoes thudded against the carpet. Diana moaned at the sight of his bunched muscles, tensed and ready to pounce.\n\n\"Brendan hasn't let you come yet, has he?\" His voice was low and intent.\n\nDiana didn't bother answering. Her quivering body was enough of a response. She just looked up into his eyes, slitted with lust, and made a silent plea.\n\nLeaping onto the bed, he dove between Diana's legs. A hot demanding tongue crashed into her clit. Diana's head whipped to the side, and she stifled a cry of shock and pleasure in Brendan's shoulder. There was nothing gentle about the way Ian was licking her pussy. His tongue lashed her clit again and again. Total overload...she'd thought the people and noise and excitement tonight were overwhelming, but they were nothing compared to the desperate, almost painful pleasure building between her legs. When he stopped licking for half a second, she didn't know whether to thank him or kill him. Then firm lips closed around her engorged clit, sucking so hard the bed dropped out from under her.\n\n\"Ian! Jesus!\" she gasped. \n\nAs her thighs clasped Ian's head, Brendan's hands closed over her breasts. His solid body pressed against her curves, her own hand clutching his hot cock for dear life, her other hand pulling Ian's hair, hard. Her mattress creaked and rocked as she bucked her hips against Ian's tongue. God, any minute now they were all going to tumble onto the floor, but the twins anchored her in place, and just when she was on the brink, gasping, her pussy oozing hot cream onto her sheets, Ian's mouth eased up. His tongue roamed over her swollen lips, exploring them so intimately that Diana felt completely open and exposed to him. Dammit, she was so close to coming, she couldn't take it, and when she tried to urge Ian's head back towards her clit, he just grunted and probed her tight opening with his tongue. Diana's whole body tensed up at the way the thick muscle tugged at her sensitive entrance, pushing against her moist flesh. Insistent hands squeezed her ass cheeks, forcing the soft globes apart. When his fingers found the flared end of the plug nestled in her ass, he growled into her cunt. ",
        "Pulling back, he climbed over her. Palms spread her soft thighs. His cock sank into her sopping cunt in one long thrust. Yes\u2014 no\u2014 feeling him in there right above the firm cylinder filling her ass\u2014 it was just this side of too much. When she let out a sharp cry, he kissed her, hard.\n\n\"Ian \u2014 Ian \u2014 oh God \u2014\"\n\n\"What do you want, little girl?\" His voice was thick with lust. \"Why'd you call me here tonight?\"\n\nJesus, what could she say? Ian had to be loving every minute of this. He'd never let her hear the end of it. So she might as well go for broke.\n\n\"Because I want you to fuck my ass.\" She'd wanted to sound confident, but it came out a bare whisper.\n\nFor a second, no one spoke. Diana's thighs trembled from the effort of holding them open. Brendan gently squeezed her breast, his thumb pressing into the round curve. Ian just stared at her. His mouth was half open, panting. Then he turned to glance at his brother. Some silent communication passed between them. \n\nWithout a word, Ian flexed his hips backward, withdrawing his cock from her clasping pussy. Diana wanted so badly for him to fill her again...to be filled...\n\nShe reached for him, but he unfolded his body from the bed and braced his hands on her desk, his chest heaving. Then he crossed the room and knelt in front of her record player. The candles had burned down. A faint wash of moonlight showed Ian crouched low in the dark, flipping through the LPs he'd teased her about last week. Diana couldn't stop staring at his flushed body, his meaty cock slick with her juices, his hanging balls. And God, she was so close to coming, and Brendan was pinching her tight nipples more and more firmly, squeezing her heavy breasts until she whimpered and tried to pull him on top of her, but he didn't budge. \n\nIan may have made fun of her record player, but he knew how to use it. The needle settled down. Warm slow music, the volume turned low, filled the room. Two guitars and a voice like a whisper for more. \n\n\"Get on top of Brendan, Diana,\" Ian said gruffly in her ear. Dazed, her skin sparking from every touch, she let Brendan guide her on top of him, centering her crotch firmly over his cock. Her creamy legs were braced on either side of his hips. Her breasts begged to be squeezed as they swung over him. She gasped when he spread her soaked lips open and settled his thick shaft along her quivering pussy. \n\n\"Please,\" she whispered. She'd never been so aroused and desperate to come. Brendan just tangled his fingers in her hair and pulled her down for a soft kiss. She shuddered when he massaged his way down her back. Then large hands cupped her cheeks from below, squeezing and pinching her flesh until she stopped pleading and just moaned, giving in to Ian's touch. Fingers eased the plug from her ass, and she clenched up tight. \n\nBehind her, she heard the rustle of the paper bag. Cool liquid suddenly drizzled over her rosebud, dripping down her cleft. A finger rubbed it into her sensitive opening. When she twisted around to look over her shoulder, she was just in time to see Ian rubbing more lube onto his cock, fisting his shaft until it glistened. His half-lidded gaze roved over the curves of her ass and up her arched back.\n\nThen her hips were being gripped. Hot skin nudged her rosebud, pushing with steady pressure. Her cheeks parted as the head of Ian's cock sank in.\n\n\"Wait,\" Diana yelped, instinctively pulling away. God, she wanted to do this, but it was so uncomfortable. Her cry turned into a low moan when Brendan's fingers surrounded her clit.\n\n\"Diana,\" Ian said quietly. \"Relax.\"\n\nHer ass clenched on his cock again, and she stifled a cry in Brendan's shoulder. Ian stopped and held still.\n\n\"I can't,\" she whispered. \n\nIan leaned close. God, she wanted to see his face, look into his eyes, but all she felt was his warm breath on her ear and the heat from his chest, beating onto her bare back.\n\n\"You're beautiful, Diana.\" His voice was soft. Low. Her whole body flushed at the compliment. Ian had never told her she was beautiful. Her narrow channel, fluttering around his thick cock, suddenly eased up a little. She gasped when he sank in further. \"I want all of you.\"\n\n\"I want all of you too,\" she whispered. In the darkness, her eyes met Brendan's. He just squeezed her hip reassuringly. His fingers stirred the pool of juices gathering in her pussy, playing around her sensitive entrance.\n\n\"Let Ian take you, Di,\" he whispered. \"You both want it. And I know you can do it.\"\n\nShe groaned softly, burying her face in Brendan's neck as her ass squeezed the head of Ian's cock. It felt enormous. She couldn't possibly take any more... \n\nThen she felt Ian's lips on her shoulder. He was kissing her. She relaxed another fraction, then another.\n\n\"You're perfect,\" Ian breathed in her ear.\n\nOh God, she was far from perfect, but his words had a magical effect. Her whole body relaxed, opening to him.\n\n\"Yes,\" Ian whispered. \"That's it. That's right.\"\n\nSensations beyond anything she'd imagined were beginning to flood her body. Brendan's patient fingers stroked her clit, his other hand warm and secure on her soft thigh. Ian's palm cupped the back of her neck, squeezing the bare skin. Her tight entrance felt every twitch of his hot cock. She was pinned in place, open to both the twins. There wasn't anywhere for her to go. Any way for her to hide. \n\nA drop of liquid hit her back. Then another. Confused, she twisted around to look up at Ian. He held himself still, muscles straining, his cock half-buried in her ass. His face was set with concentration and need. Perspiration ran down his forehead and chest. Sweat, Diana realized. That's what she'd felt. He was trying as hard as he could to hold back, when all he truly wanted was to fuck her ass.\n\nHer whole body trembled with arousal. Jolts of intensity ran from where Ian penetrated her to her swollen clit, which Brendan was caressing more purposefully, her tingling thighs, her aching nipples, her everything.\n\n\"I'm ready,\" she whispered. And as she said it, her ass opened, welcoming Ian's cock. He let out a hissing groan, sinking into her tight warmth.\n\n\"Oh my God,\" she gasped. Warm droplets trickled down her cheeks. She thought she was sweating too at first, but no, they were tears, squeezed from her eyes even though she wasn't crying, because it was all so incredibly hot and intense and overwhelming. And Brendan was still stroking her clit, his fingers probing her pussy while he kissed her neck, and jesus, she didn't know it was possible to feel so full, and everything was suddenly bright and fuzzy in front of her eyes as she convulsed with total pleasure.\n\nShe barely knew what was happening outside the slow intense pulses rippling outward from Ian's cock and Brendan's fingers through her whole body. A voice above her, Ian's, whispering, \"Fuck, oh fuck, jesus christ, Diana,\" as her ass clenched on his shaft again and again. Brendan's lips on her ear and his hand in her hair. Her own gasps and pleas for \u2014 more. Yes. That was her voice asking for more. And Ian was...moving? God, yes, she felt his impossibly meaty erection slowly easing back, then penetrating her ass even further. Another, deeper orgasm washed over her. The noises she was making\u2014 yes, she was actually crying now, whimpering with need as hot tears bathed her cheeks. She could only crouch over Brendan, meet his tonguing kisses, suck hard on his neck to stifle her cries, open her legs more to his sure fingers while Ian flexed his hips behind her, massaging her cheeks and keeping them spread to his slow thrusts.\n\nIt didn't feel right not to look into Ian's eyes as he slowly fucked her ass. As similar as Brendan looked, and as comforting as his steady gaze was, steamed over with lust, it wasn't the same thing. But they both felt so good, and it was all so intense, and as more waves pulsed over her and she bent to kiss Brendan again, Ian grasped her hips, pulling her upward with him. Bluntness pressed against her soaking cunt.\n\n\"Brendan?\" she whispered. \"Ohhh...\" His thick head was opening her pussy. \"Oh God...\"\n\nBrendan just stroked her cheek with his thumb, turning her face to give her another juicy kiss as he slowly penetrated her swollen cunt. Ian was easing out of her ass, then back into the snug warmth. \n\n\"You can't both fit\u2014\" Diana gasped. \"I'm already so full of Ian.\"\n\n\"You can do this, Di.\" Brendan's kisses were so coaxing. One hand found her the curve of her breast. His cock didn't stop moving upward, spearing her tingling cunt with firm and steady pressure. Her juices trickled down his hard rod. \"I've wanted this for us since I kissed you here in your room.\" \n\nShock arrowed through her flushed body. Her first kiss, and Brendan had been thinking about taking her pussy while Ian fucked her ass. Of course, she'd been damp between her legs, desperate for his touch, fantasizing about the three of them as soon as he left... At the sound of her moan, Ian's thick cock jerked between her cheeks, driving a louder moan from her mouth. And oh God, with that moan she sank all the way down onto Brendan, his cock deeply buried in her tight juicy pussy.\n\nThey'd done this before, Diana thought dimly through the fog of helpless excitement. They knew exactly how to time their movements. Which was a good thing, right? She moaned again softly, stunned this was really happening, as her creamy pussy and quivering ass hugged both their cocks. \n\n\"Sweetness,\" Brendan murmured. \"This is so right.\"\n\n\"Ian,\" she panted. \"Brendan.\"\n\n\"Let it go, Diana.\" Ian, in her ear. \"Let it all go.\"\n\nJesus, two bulky bodies were crowding her with heat, sandwiching her with muscle, filling her beyond full. Taking up her bed, taking her over. She was out of control, had no control at all, no choice but to give in to the sensations of the twins inside her. Fucking her, together. \n\nArousal and hard need rushed over her body when Ian lengthened his strokes. Her ass relaxed to take his slippery cock, unbelievably hot and silky, then squeezed sharply as he pulled out. Her thighs shook with excitement, spread wide on top of Brendan. As she clutched Brendan's broad shoulders, her knees pressing against the rumpled sheets, she tried to move with Ian, but between his firm thrusts, his hand gripping her soft cheek, and Brendan's cock deep inside her, she could only give in to his strong body driving against hers. She was dimly aware of Brendan fondling her hanging breasts, pinching her ripe nipples and whispering reassurances in her ear as Ian began to fuck her in earnest. And when Brendan started to move too, thrusting upward with his hips when Ian moved backward, every movement rippling through her full crotch \u2014 she'd never imagined this. She'd never imagined it could be like this.\n\nSparks of pleasure shot outward from her bursting pussy. A large hand squeezed her mound, fingers caressing her exposed clit. Ian, from behind. His muscular arm pressed again her hip, his hand cupping her cunt just above his brother's cock piercing her soaked core. \n\n\"Enough...\" she moaned, barely aware. \"I can't \u2014 I don't\u2014 so much\u2014\"\n\nBut there was nothing she could do. Nothing, except sob with need as, oh God, her pussy and ass clamped down on the twins' cocks. \n\n\"Fuck, yeah,\" Ian grunted. He pressed more firmly on her clit. \"Come on, Diana. Do it. Fucking come right now.\"\n\n\"Come for us, Di,\" Brendan murmured. His lust-heavy eyes moved over her naked curves on top of him. \"Come hard. You've needed this from the beginning.\"\n\nShe had no choice. Their cocks just kept moving and moving and moving, nudging up a tidal wave that spilled over when Ian pinched her clit. \n\n\"God, oh God, oh God...\" She was crying helplessly now because there was no way she could handle the intense pleasure that rocked her body and pitched her over the edge. Her heated cunt rippled around Brendan's cock, her sensitive ass gripped Ian's cock. Her whole crotch was hot and slick and creamy as she shook through an orgasm that didn't end. \n\nAnimal growls from above, groans of pleasure from below, met her ears. Was Ian really pulling almost all the way out, her ass clinging tightly to his slippery shaft, and slowly but firmly pushing back in? Yes. He was. And Brendan was squeezing her hip with one hand and cupping her breast with the other, fucking her pussy just as deeply. More tears washed over her face as she came again. \n\nIan's cock twitched against her tight ring of muscles. His hand tightened on her mound, fingers slipping over her juicy lips. Between his rough gasps, she heard him pant, \"Diana...\" \n\n\"Ian,\" she whispered. She focused on receiving him. Opening to him. Letting him in. Hot cum spurted into her ass, and jesus, she could feel every splash of his cream as she took Ian deep inside her. As she breathed with him, held in place, Brendan grasped both her hips firmly, thrusting long and hard into her tight satiny pussy until his deep sounds of fulfillment washed over her.\n\nArms surrounded Diana as she collapsed on the bed, tangled up with warm male flesh. A soft wet tongue grazed her face. Ian was licking the tears off her cheeks. She lay exhausted, wedged between the twins, while the needle went around and around at the end of the record."
    ],
    "authorname": "SilverMuse",
    "tags": [
        "mfm",
        "twins",
        "brothers",
        "threesome",
        "two men one woman",
        "double penetration",
        "anal",
        "first time anal",
        "butt plug",
        "graduation"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-boys-next-door-ch-05"
}