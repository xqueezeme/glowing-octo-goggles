{
    "title": "The Theft of Our Lives 05",
    "pages": [
        "The Theft of Our Lives 05\n\nBy Tug Coxwell\n\nDisclaimer: This is a multi-chapter story that reads more as a series of vignettes connected by an underlying thread for continuity. It's my attempt at the well-traveled premise of a boss exploiting a family. While not present in every chapter, the story contains various sex acts between adults, including but not limited to adultery, incest, cuckolding, interracial, lesbian, and non-consensual sex in the form of blackmail and coercion. The story and all characters are fictional. Any resemblance to businesses or persons, living or dead, is purely coincidental. In real life, all non-consensual sex is immoral, illegal and not condoned by the author. All characters are 18-years-old or older. All rights reserved.\n\nI've received many comments from readers about where to take this story. The comments are appreciated, but the story is already written. With that said, no matter what I write, someone is going be happy, while others will be disappointed. I can't help that, so simply wrote the story as I see fit. The reader is welcome to take or leave it at their own discretion. Thank you.\n\nAFTERNOON POOL PARTY\n\nKerri was now on board in word, but Hank needed to close the deal in deed, so the next morning, before we had time to even think about options, he called Emma.\n\n\"I'm coming to your house this afternoon. Ray is working on an assignment and won't be home until late. Send Kellen somewhere. I don't care where, just get him out of the house, but be sure Kerri is home,\" he instructed adamantly.\n\nEmma immediately made the arrangements for Kellen to spend the night at her sister's house. Betsy lived in the next town, so that was easy as she told her younger sibling some made-up tale about how she needed him out for the night, then called Kerri to be sure she was coming straight home from class.\n\nAt 2:00 p.m., Hank showed up at the door with Ted Jenkins, the client from the yacht trip, and Ike Jones-Dixon, the sixty-something black SVP Emma had worked so strenuously satisfying throughout that licentious excursion. The Allenby executives were clearly hoping to romance another deal out of Ted.\n\n\"Oh, Hank, I didn't realize you were bringing guests,\" Emma said with surprise, intuitively knowing that wasn't good for her or our inexperienced daughter.\n\n\"Hi Ted, Ike, please come in,\" my homespun wife greeted, modestly dressed in her usual attire and pretending she was so happy to see them again at our home.\n\nIt was the first time she'd seen either since the yacht trip, and a fleeting memory of the size of Ike's erect cock flashed through her mind sending a chill of fear for Kerri's welfare under its dominion running up her spine.\n\nThe three men welcomed themselves into the foyer, with Ted patting Emma familiarly on the ass as if he'd known her all his life.\n\nEmma knew Kerri was expected, but she hadn't returned home just yet. There was no volleyball practice since they had a game the night before, so wasn't surprised when Kerri waltzed through the door, greeted by her mother and the men.\n\nKerri hadn't played well last night and slept even worse with all she had learned about her parents and her role in saving their family. Still, she was young and resilient, bouncing back to her cheery self quickly the next day.\n\nOur young woman was dressed in sandals, jeans, and a light top leaving just a bit of her tummy exposed -- not at all inappropriate for a college coed in these times. She was surprised seeing Hank so soon after yesterday's events, along with the strangers he brought as guests, and Emma was quick to make introductions.\n\n\"Hi sweetie, I'm glad you're home. Mr. Allenby is here, and he brought some friends,\" Emma heralded graciously.\n\n\"Hello, young lady,\" Hank offered. \"Aren't you the picture of boundless energy?\"\n\n\"This is Ted Jenkins,\" my wife introduced, acquainting her with the distinguished gentleman well into his sixties.\n\n\"It's my pleasure, dear. You're every bit the image of your mother,\" Ted complimented charmingly, clearly intrigued by the prospects presented by our youthful lass.\n\nKerri was flattered as might be expected, although after yesterday was suspicious and nervous.\n\n\"This is Isaac Jones-Dixon, a top executive at Allenby,\" her mother continued uncomfortably as the imposing black man extended his meaty palm, enveloping Kerri's slender hand and shaking it vigorously causing our intimidated beauty to gulp visibly.\n\n\"It's a tremendous joy meeting such a wholesome young lady. I so appreciate your presence and the hospitality of your home\" Mr. Jones-Dixon applauded, the words dripping as honey from a jar edged with only a tinge of sincerity.\n\n\"Since we'll be good friends, you can call me Ike,\" he offered with an ominous portent of things to come.\n\n\"Ted is a very important client to our company. Your father and mother helped sell him on doing business with us,\" Hank introduced, jumping into the conversation and only alluding to the sordid story of the disreputable sales pitch.\n\n\"Ike and I are working on the mechanics of bringing Ted's other business interests to Allenby. It's a huge win for your father if we're successful, particularly under the present circumstances,\" Hank openly implied, his mention a gentle reminder of my precarious status setting the groundwork for the 'hospitality' he expected the ladies to provide that day.\n\n\"It's such a warm spring day Kerri, your mother kindly invited us over to partake of the cool water of your swimming pool, and I'd love it if you would join us,\" Hank requested saccharinely.\n\nKerri wasn't as sophisticated as her mother and didn't initially recognize Hank's request as an order, but Emma quickly corrected that misapprehension.\n\n\"Why don't you go up to your room, sweetheart, and hop into that new bikini we bought you the other day,\" she suggested falsely, purposely sounding innocent and unassuming.\n\nNow, Kerri got the idea, realizing her conservative mother normally insisted our developing daughter wear a less-revealing one-piece around guests, particularly 'old men' guests. The new bikini was designed to attract younger guys -- guys her own age and was very flattering.\n\nKerri had practically begged her mother to let her buy it, arguing she was now 19 and an adult, and reluctantly, Emma ultimately caved, not wanting to inhibit our growing daughter's maturation and growing independence.\n\nNow, both women regretted the purchase.\n\n\"Okay, mom,\" Kerri answered respectfully, but she was uncomfortable, understanding completely the effect her body had in the bikini.\n\nHeck, that's why she wanted it, after all, but for a decidedly different audience. She didn't expect to be wearing it in front of three leering old men, with the trio instinctively smiling at the prospect of our teenage beauty in a bikini.\n\n\"How about you put on your bikini too, Emma?\" Hank proposed speciously. \"You know what I mean, the one you wore on the yacht?\"\n\n\"Oh, really? That one? Um, okay,\" Emma hesitated before relenting, fully aware of what she looked like in the bikini, especially wet, and mortified by the prospect of wearing it in front of our wide-eyed daughter.\n\nStill, she knew that's what Hank wanted and why they were at our home, and it wasn't like Ted and Ike hadn't already seen the goods. Her concerns were focused more on Kerri and the sexy bikini our coed daughter wore.\n\nWarily, Kerri trudged upstairs and changed. As a young woman interested in dating and meeting young college men, she planned to wear the bikini to the beach this summer, hoping to catch the eye of some hot guy. Her enthusiasm for donning it before this group of old men held less appeal.\n\nTypically, as an insecure young adult, Kerri looked in the mirror before heading down. Even as an unpretentious beauty, she had to admit she looked good, with her long, willowy legs reaching gloriously to her sandals below a body leaving any human male breathlessly on weak knees.\n\nThe bikini was straight black, playing well against her alabaster skin, with the panties a French cut barely held up by her slim, developing hips. The front panel covered everything discreetly such that she didn't even need a bikini trim, and there's a small amount of her narrow white butt exposed in the back, but it wasn't too revealing.\n\nThe top was as modest as the bottoms in the amount of fabric, with a simple tie-up behind the neck and in the back. The strips up front were in a halter cut with sufficient cloth covering the better part of her generous, pale breasts but with no padding and, rather than hiding the size and shape of her breasts, they only accentuated them.\n\nThere was simply no keeping her burgeoning bosom in obscurity.\n\nIn truth, Kerri is a 33D, but she doesn't emphasize her spectacular breasts, wearing sturdy foundational bras designed more for support in her active lifestyle than appeal, hoping to minimize the lustful stares of men and jealous appraisals of women. More impressively, they are perky and firm with youth.\n\nEven our na\u00efve daughter knew this suit drove men of any age to distraction, which was kind of the point, although in this instance for an unintendedly mature audience.\n\nBefore she ran downstairs, Kerri clipped her short auburn hair in the back with an elastic band keeping it out of her face, letting her cute bangs fall straight and midway across her brow. When she emerged through the sliding back door her mother was nowhere in sight, but the three older men were already in their bathing suits.\n\n\"Whoa,\" they collectively sighed, stunned by the sheer sexiness of our otherwise unsuspecting daughter, with her firm breasts bouncing naturally in time to each apprehensive step towards the gawking men.\n\nKerri looked incredible carrying only a towel and wearing sunglasses matching the hot bikini. Thankfully, the men wore sunglasses too, concealing their hungry eyes boring into our delightful youngster's exposed flesh, or she'd have grown uncomfortable by the way they stared openly at her gorgeous form.\n\nHank, Ted, and Ike all admired Kerri in her bikini, remembering their own long-ago youth when such pretty young things were readily available and thanked their lucky stars for the opportunity once more.\n\nOur athletic coed is lean and lithe, with her slender hips just enough to hold up the bikini panties. Kerri's breasts are truly unbelievable -- large and firm with soft, supple skin and a dotting of freckles. The gossamer strips of cloth didn't possess quite enough weight to prevent the tips of her pointed nipples from poking through.\n\nWhile her mother's tits are impressive, especially for her age and maturity, Kerri had the best of Emma's attributes combined with the priceless benefit of youth. One imagined they didn't require the support of the thin fabric of the halter top to keep them aloft.\n\nWithout much body fat from her sports activities, her taut tummy muscles rippled, and her torso flexed brilliantly, while her long, powerful legs set below narrowly maturing hips swayed with unintended seduction, creating a picture of developing beauty in the shape of a young woman.\n\nHank felt a telling stir in his groin at what the nefarious events of the afternoon held in store.\n\n'I'm definitely going to be the first to sink my cock into that sweet piece of ass. I mean, there's gotta to be some perks to being the boss,' he thought lewdly about our only daughter.\n\n\"Have a drink,\" Ted offered Kerri from a pitcher of what looked like lemonade but was spiked with vodka, as Hank figured our unsophisticated daughter didn't know the difference and it would loosen her up, even if unknowingly.\n\n\"Very pretty. What a beauty. Unbelievable!\" the trio complimented our proud daughter in turn, while staring at her lecherously.\n\nKerri drank it up -- both the vodka and the compliments. All young ladies appreciate a compliment, even those in the most precarious of positions, and our introverted daughter was no different. Innocently sipping her drink and noticing a funny taste, her attention was soon turned to her mother as Emma breezed through the back door.\n\nKerri was shocked.\n\nThe practically non-existent white bikini her usually prudish mother wore made her look absolutely the slut she'd claimed just the day before Hank was training her to be. She'd never seen anything like it anywhere, and most certainly, not on her mother.\n\nThe men noticed the suit as well, grateful for its reappearance after unhappily modeling it on the yacht.\n\nEmma's body is more voluptuous, although not as tight as our daughter's. The white flesh the suit exposed, which was most of it, wiggled and rolled enticingly sashaying toward the group, feeling ridiculous with her suit making Kerri's sexy bikini look like coveralls by comparison.\n\nEmbarrassed and ashamed at parading in the scandalous bikini in front of the men with our daughter as witness, Emma thought full nudity might be better than wearing this pretend get-up barely containing her heaving breasts and not covering her wobbling ass cheeks at all.\n\n\"I'll take one of those,\" she said, distinctly pointing to the pitcher of drinks, suspecting Hank had spiked the drink and feeling the need for alcohol blurring the regrettable task she was about to undertake in corrupting our young damsel.\n\n\"At your service,\" Ted replied, pouring a particularly large glassful, which Emma was not slow to consume, noticing Kerri had a glass as well.\n\nUnder 'normal circumstances' my responsible wife objected to our daughter drinking alcohol at home. At 19, Kerri was an adult, but she was still under 21. These weren't 'normal circumstances' however, so instead she surprisingly encouraged Kerri to have a second glass.\n\n\"It's really warm today for this early in the spring,\" Hank opined after pouring himself another glass too. \"Why don't we have a quick swim before we relax by the pool?\"\n\n\"Sure Hank, why not?\" Emma agreed, recognizing what the water did to her bikini but already developing a happy glow from the vodka lemonade and becoming more accommodating to suggestion.\n\n\"A swim would feel good, don't you think Kerri?\" she asked, feeling a little giggly and girlish, then giving a light nudge to our unaware daughter with her broad hip pushing Kerri into the pool with a splash.\n\n\"Mom!\" our startled lass exclaimed once rising to the surface, but Emma didn't hear as Ted took his cue and pushed her in right behind.\n\nMy full-bodied wife's splash was much larger, forcing her skimpy top to shift and expose her right nipple, frolicking in the water for a moment before noticing and slipping the fabric back over her tit as the men quickly followed into the pool, anxious to join the scantily-clad mother and daughter playing in the water.\n\nActing like college frat boys, the trio circled the giggling women, playing a game of touch and deflect by pushing away the old men's pawing hands seeking to rough-house in the guise of really just copping a feel. Quickly, it became more aggressive, with open grasps of Emma's nearly uncovered tits and playful lifts of Kerri as Ike tossed her through the air, indiscreetly grabbing a good handful of our coed's slim ass and hips.\n\n\"Why do you even wear that thing, Emma? It doesn't cover any of your gorgeous body,\" Ted teased, good-naturedly tugging at Emma's tiny bikini.\n\nAnother twenty minutes of this lighthearted flirtation left everyone ready for another drink and a sit by the pool in the sun. Drenched from head to toe, while climbing out and heading towards the pitcher and towels, Kerri's attention was suddenly captured by her mother's bikini.\n\n\"Holy shit, mom!\" our All-American coed exclaimed with a rarely used curse word. \"What the hell happened to your bathing suit?\"\n\nAs on the yacht, the dip in the water caused Emma's suit to become virtually transparent, exposing in the most intimate detail every facet of her anatomy as if she wasn't wearing anything. This time was no different, and my large breasted wife's dusky rose-pink nipples showed through the top clear as day.\n\nIt was Hank who noticed the most obvious and distressing visual detail and didn't hesitate in pointing it out.\n\n\"Well, Emma, I see you're keeping that dense brown bush cleaned up and tidy,\" he said laughing.\n\nSure enough, Emma's see-through bottoms revealed a clean, completely shaved pussy. The wet panty pulled snuggly against every crease and fold of her vagina, and the resulting cameltoe left nothing to the imagination.\n\n\"Oh, my goodness,\" Emma blushed with embarrassment, remembering well her experience on the yacht and saddened to appear so indecently before our startled daughter, but doing nothing to cover herself.\n\nRed-faced but with nothing else to do, my sheepish wife quickly found the pitcher to pour herself another drink, hoping the alcohol eased her suffering while the warm sun dried her revealing bikini.\n\n\"I like that suit Emma. It really emphasizes your best assets,\" Ted remarked unabashedly, bolstered by the cocktails and feeling frisky.\n\nKerri was not spared from the leering gazes and lurid comments either, particularly the way our wholesome daughter's hardened nipples pressed against the fabric of her top, with the wet material outlining the tear-drop shape of her spectacular jugs.\n\n\"Well, her mother sure has caught Kerri's attention, at least, her nipples attention. Hell, they look like they can carve right through that top,\" Hank added salaciously, increasingly comfortable using the 'descriptive' language in reference to our comely coed.\n\nKerri flushed with youthful embarrassment at the mention of her nipples, and how the men all looked at her steely nubs projecting through her suit, while Emma was brought back to earth momentarily by the comment.\n\nIt was the first time she'd ever heard anyone reference our sweet daughter in such an overtly sexual manner.\n\n\"Come on, Emma, quit kidding yourself. That little bikini isn't hiding anything,\" Hank scoffed deliberately. \"Why don't you just take it off already, so you can really get some sun?\"\n\nAs usual, Hank's question wasn't a question, and Emma knew from his demanding tone it was really an order.\n\n\"You're probably right Hank, what's the point?\" she concurred reticently, trying to remain casual hoping to not unnecessarily alarm Kerri.\n\nWith that Emma simply reached behind her neck, undid the string, and allowed the thin strips of fabric to fall from her breasts. Our bewildered daughter stared in disbelief, glass in hand, as her confounding mother then pulled the string in the back and the top was gone.\n\nKerri is inexperienced but she isn't stupid. After yesterday's sordid exhibition at Hank's office and watching dumbfounded as Emma disgraced herself to preserve the family, she understood where this afternoon was headed the moment her mother suggested she wear her sexy new bikini.\n\nEven then, seeing her reserved, proper mother standing topless before the smirking men in our backyard brought the reality of the situation directly to the fore. Before Kerri even finished taking in the bizarre sight, Emma quickly untied the strings at each hip holding up her tiny bottoms and pulled that off too.\n\n\"Mother!\" our flummoxed 19-year-old coed gasped as her uneasy mother now stood completely naked surrounded by three leering older men and our bikini-clad daughter.\n\nDespite her discomfiture at her nudity before our oldest child, Emma did nothing to cover herself. Her neatly-shorn pussy was fully visible to the congregants to the point where even her ruffled labia were present, and her drawn-up nipples were inch-long eraser tips on her large shimmying melons.\n\n\"Is this what you had in mind, Hank?\" Emma demurely inquired, placing her hands on her hips in a show of false bravado, while inside she was horrified at the humbling example of subservience she set for Kerri.",
        "\"You know me well, Emma, real well, I'd say,\" Hank smiled a toothy grin. \"I'm sure your guests appreciate it too, judging from the way they're poles are saluting.\"\n\nSure enough, a quick look at each man's wet bathing suit, Hank's included, displayed in high-detail a tremendous erection at the sight of the naked mother. Each of the men was well-endowed, and Kerri gazed wide-eyed at the size of the extraordinary staffs outlined in bold relief.\n\nPrior to Rick yesterday, Kerri had never seen an erect penis in her life, other than in pictures online. Still, despite her traditional, suburban upbringing, our lovely daughter is not a virgin. Emma knows this and, as a result, I do too.\n\nApparently, Kerri experienced one awkward sexual moment with a guy she had a crush on after turning eighteen before starting college. The fumbling event in the dark hadn't revealed his hard-on, but simply feel it artlessly break her maidenhead, taking her cherry in a very brief, uncomfortable encounter and was done, with the pair never dating again.\n\nKerri, who tells Emma everything, informed her compassionate mother about the experience the very next day.\n\nMy wife is conservative, but not terribly religious, and she doesn't have her head in the sand. She knows all too well exactly how men think, now more than ever. Realizing this wouldn't be the last time a horny guy tried getting into our rapidly developing daughter's panties, she took Kerri to get a prescription for birth control that very same day.\n\nNow, our desirable and barely-experienced coed was staring at three men in their 50's and 60's sporting big wood at the sight of her naked mother standing before them in broad daylight in our backyard.\n\nI don't think Kerri truly understood until that moment just how big grown men could get, and even seeing Rick's giant prick the day before hadn't truly prepared her for their size up close.\n\nAlthough unnecessary considering the power he held over our family, Hank's original plan to get Kerri out of her bikini and onto her back was using a tried-and-true suntan lotion massage ruse as a subterfuge, stripping her to join her mother and get his intended sex party rolling.\n\nSeeing the wondrous look in Kerri's pretty green eyes unable to peel away from the men's crotches gave him the idea to move things along at a faster pace instead.\n\n'She's clearly curious,' he thought, wanting to take advantage of that curiosity and congratulating himself on his initiative and adaptability. 'Nimbleness on your feet is the sign of a good businessman.'\n\nHank decided it was time to satisfy our daughter's inquisitive nature and likely spur her arousal at the same time. Unaccustomed to the alcohol flowing through her veins, he cleverly leveraged Kerri's blurred mind using her compromised mother as an unwilling accomplice, facilitating her nudity and her descent into sexual servitude.\n\nMy astute boss figured Kerri was just about ripe for the picking, planning to use his knowledge, experience, and gift for treachery, plus any young adult's natural need for acceptance, as the tools bringing about her ultimate demise.\n\n\"Come over here, Emma, and let's have a closer look at you,\" Hank intoned with prevaricated interest.\n\nWhen Emma stood before him, he casually grasped her large left tit, lifting the spongy globe at the base gauging its weight, and then rolling his thumb over the erect nipple.\n\n\"Shit, you truly are a full-bodied gal,\" he remarked crudely but with sincere appreciation. \"Honestly, I can't ever get enough of your incredible set of tits.\"\n\nInspecting my humbled wife in front of our daughter was humiliating, but no worse than her \"Present\" pose of yesterday, so Emma looked on stoically as he reacquainted himself with her body, all the while checking Kerri's reaction to his groping her sainted mother.\n\n\"I can see someday you'll have a big set of knockers like your mom. Hell, your nearly there already,\" the deviant older man declared, intentionally direct and using the vile language to make Kerri uncomfortable.\n\nReturning his attention to Emma, Hank lowered his hand to her smooth pubic mound.\n\n\"How'd you do down here?\" he asked impertinently, presumptuously rubbing his inquiring fingers along the baby-soft curve of her supple pubis causing my chastened wife to cringe, but otherwise let him have his way.\n\n\"Present,\" Hank ordered summarily in a voice loud enough for Kerri to hear his casual control and familiarity with her subjugated mother.\n\nThere was the awful order again. Doing everything she could to hold back tears and biting her trembling lip at the degrading treatment in front of our daughter, Emma meekly assumed her presentation position, spreading her feet granting Hank full access to the sacred place between her legs and draping her hands behind her neck.\n\nSelf-confidently slipping his middle finger along the cleft of her sealed pussy, my dominating boss parted the fleshy lips, blazing a trail to her perineum and across the narrow surface until nestling his finger into the crack of her ass and resting the tip upon her tightened sphincter.\n\n\"I wanted to be sure you remembered to go all the way to your anus,\" he acknowledged indecently. \"Nicely done, Emma. I don't feel a follicle.\"\n\nHank's words were designed to demean my wife right before our impressionable daughter's eyes so she could once more demonstrably witness how much power he held over her mother, and subsequently, over her as well.\n\nThey were very effective, and Kerri stood slack-jawed but actively engaged, embarrassed for her mother and the disrespectful treatment at the hands of this older man in our own backyard yet unavoidably influenced by his command and temerity.\n\nQuietly, our susceptible coed noticed a slight tingle between her legs -- the same sensation she felt dreamily playing with herself thinking about some jock at college or the latest pop band.\n\nInstinctively Kerri tried to shunt the feeling aside by discreetly rubbing her thighs together, hoping to focus only on the plight of her loving mother, but that only seemed to make it worse. So did the presence of the men's erect penises, covered but ever present in her line of vision.\n\n\"Okay, you can relax now,\" Hank said almost as an afterthought, and Emma instantly returned to her previous posture without any protest as if a marionette on a string.\n\nHer controlled mother's unprotesting compliance didn't escape Kerri's discerning notice.\n\n\"Well, now that we have that established, I think I'm going to join you Emma. Why don't you help me out of this wet bathing suit? It's really uncomfortable,\" our arrogant master instructed, anxious for Kerri to see her mother as servant, as well as his hard cock unencumbered.\n\nAccepting the order with trepidation but no objection, Emma tugged the drawstring of Hank's bathing suit, undoing the bow knot and loosening the waistband. Kerri held her breath watching, awestruck and still disbelieving this was really happening.\n\nWhen her obliging mother slowly lowered the pants over Hank's erection, briefly hooking the band on the raised tip before dragging it completely over the fat knob and dropping the suit to his ankles, Hank's stiff wood sprang to attention, bouncing once or twice and then settling to become a meaty column projecting straight from his pelvis.\n\n'There it is -- his, um, penis,' our flustered coed marveled inside in an almost juvenile manner.\n\nKerri's awed gaze grew transfixed on the thick tool surrounded by gray pubic hair, with Hank's heavy balls dangling below ensconced in their hairy sack. It wasn't quite as large as what she saw from Rick in the office yesterday, but it was still plenty big and frighteningly rock solid. Regardless, it was certainly bigger than that guy taking her virginity.\n\n\"How about you guys, aren't those suits uncomfortable? I'm sure the ladies can assist you in removing them,\" Hank advised, volunteering my reluctant wife and bedazzled daughter.\n\nAfter a pause to gain the men's positive response, Hank put force behind his suggestion.\n\n\"Emma be a good hostess and help Ted off with his suit, and Kerri, you can do the same for Ike,\" he order quite seriously.\n\nNow, Hank had Emma's and Kerri's attention, with the instructions the first true order involving our daughter. Despite her best instincts to the contrary, the mother in Emma couldn't help but try to protect our innocent coed.\n\n\"Oh, I'll be happy to do that for you Ike, right after I get Ted's,\" she offered in a helpful tone.\n\n\"NO! Emma, I said Kerri can assist Ike,\" Hank reiterated his command with certainty. \"It's time she takes some responsibility to service your guests just as you do.\"\n\nHank's use of the word 'service' was not an accident, but rather an indication of just what he expected from our daughter going forward. It was clear she was to share her mother's burden equally and provide every bit of the same level of 'care' provided by Emma.\n\nTorn from her reverie by Hank's harsh tone, Kerri reluctantly stepped before the imposing black man, with Ike's massive pole pressing tightly against his pants at the sight of the beautiful white coed in a slinky black bikini compliantly doing his beneficent employer's bidding.\n\n\"Huh, huh,\" Kerri's breathing was hard and difficult to control as her mother drew up next to her in front of Ted.\n\nTry as she might and understanding the odious circumstances they faced as mother and daughter, Kerri still needed to adjust to seeing her mother stark naked in front of these associates of her father.\n\n\"It'll be okay, darling. Just follow my lead,\" Emma whispered, tenuously pulling on Ted's drawstring.\n\nIsaac's suit had a button and zipper instead of a drawstring, but Kerri got the idea. Afraid of accidently touching the immense bulge in his shorts, but insatiably curious as to their contents, her shaking hand reached the top button and unsnapped it cautiously.\n\nWhen Emma lowered Ted's shorts over his raging hard-on, springing it from its enclosure and dropping his shorts to the ground, Kerri paused, glancing restively at Ted's erect cock and suddenly fearful of proceeding with her own task.\n\nTed's erection was much like Hank's, maybe a touch longer and a little bit thicker. It was topped with an angry purple knob and featured bulging veins along the shaft, surrounded by coarse salt and pepper hair. Ted's nut sack looked every bit as big and full as Hank's.\n\n\"Go on, Kerri. Just pull down the zipper,\" Emma urged our dumbstruck daughter before she got caught-up by the sight of the older man's sizable cock.\n\nTaking the pull between her fingers, Kerri did just that, slowly tugging down as the flaring tip of Ike's fat cockhead was exposed but only making it halfway when the full length of his dense stalk plopped out excitedly, happy to be free of the restrictive clothing and on open display before the astounded eyes of our pretty lass as his suit dropped to his feet.\n\nAs impressive as Hank's and Ted's cocks are at full mast, they don't come close to Ike's black beast, still only about three-quarters erect. It isn't so much longer at a little over 9\" but is certainly thicker than either of the other men, and possibly Rick as well.\n\nPulsing with life, the tool is also black as coal with a smooth dark crown bobbing semi-hard before Kerri's saucer-like green eyes, and his giant balls are two large eggs suspended in their scrotum from their nest of dark curly hair.\n\n\"Oh wow,\" Kerri exclaimed reflexively, the words of wonder leaving her thin lips before she knew it, and certainly never seeing anything like it.\n\nEven her jaded mother couldn't look away, finding it difficult to believe she had fit the thick pole inside her pussy that night on the yacht as I listened next door, while also marveling at the immense shaft with the experience of a woman.\n\n'I can't imagine how Kerri's going to handle that monster,' Emma soberly considered with concern, knowing our daughter's likely destiny.\n\nThe three men enjoyed displaying their impressive manhood's to the amazed women, especially Kerri, whose look of fascination was impossible to hide, with the trio of hard cocks both captivating and frightening to her as a budding young woman.\n\nIntuitively, our impressionable beauty knew they had the power to bend her to their will and break her resistance to the shameful life of sexual servitude she was about to enter.\n\n'I'm turning my baby into a slut,' Emma bemoaned inside, understanding the awful future thrust upon Kerri as a company sex toy, but realizing it had to be, as the alternative of breaking up our family was unthinkable.\n\nAt a guttural level even she didn't want to acknowledge, Emma recognized the contradiction of their situation -- the incredible sensations of lust and euphoria the hard cocks generated and the dizzying gratification they imparted, weighed against the soul-crushing degradation a woman endured servicing them to satisfy their owners.\n\nFrom her own struggle to accept a life of supplication and servitude, my sorrowful wife knew our daughter would experience that paradox as well, but not allowing our tipsy coed the opportunity to consider her actions too deeply, Hank pushed Kerri to the next step.\n\n\"Pretty remarkable, huh, Kerri?\" he asked solicitously. \"I bet you've never seen anything like 'em. I'm sure that's what your mother thought when she first saw us on the yacht.\"\n\n\"Then again, she managed to ride Ike's thick shaft all the same, and judging by the way she orgasmed, I think she enjoyed the ride too, right Emma?\" Hank inquired, intending to shame Emma before our daughter.\n\nMy chagrined wife only managed a weak smile at the revelation she had fucked the big black cock to a resounding climax as merely further exposure of her slutty behavior on the yacht trip.\n\n'She must think the worst things in the world about me after today,' Emma feared, not appreciating the degree of understanding our caring angel had of her mother's unusual immorality, even while grasping its reality.\n\nKerri knew it wasn't Emma's fault but was nonetheless surprised learning her mother had disgracefully turned into an unwilling cock hound at the hands of Hank Allenby. In the end, it didn't matter, and she couldn't focus on that now anyway, as her attention was drawn elsewhere.\n\n\"Go ahead, Kerri, touch it. Touch Ike's big black cock,\" Hank encouraged our wary coed scurrilously. \"You know you want to and it's okay, you won't hurt it. To the contrary, I'm sure you'll make him happy. \"Isn't that right, Emma?\"\n\nEmma stood frozen, unable to respond and paralyzed by the enormity of what he was asking, or actually demanding.\n\n\"Tell her it's okay, Emma. Tell your sweet, innocent daughter it's okay to touch Ike's big, fat cock,\" he pressed, nudging my unprepared wife.\n\n'This is all going much quicker than I expected,' my mortified wife realized incredulously, with the ruthless bastard was forcing the ultimate humiliation -- pressuring her to convince our unready 19-year-old daughter to touch the firm cock of a mid-60's black business executive from her father's company, pretending it was normal, and even gratifying.\n\nHank remembered Emma grew up in the South and her instinctively uncomfortable reaction the first time she serviced Ike that night on the yacht after dinner. He realized then she was something of a passive racist and openly leveraged her doubts for his gratuitous pleasure.\n\nAs difficult to as it was to admit the truth, Emma couldn't deny that Ike had really worked over her cunt with his enormous black shaft to her undeniable satisfaction. Despite her misgivings about forcing such a fate on Kerri, my submissive wife knew she'd obey his charge.\n\n\"Kerri, honey, it's okay. Go ahead and touch it, um, his cock,\" she nodded, squirming as the words left her lips, finding it difficult to sell our unsophisticated coed on the notion her mother somehow approved of the lurid request.\n\n\"Really, you should hold it, sweetheart. Feel its weight. It's a powerful tool, and you may never see another one quite like it again,\" Emma urged with false cheer but genuine admiration for his manhood, knowing the last sentence was almost certainly a lie considering Hank's plan for her future use.\n\nNonetheless, Emma hoped the lewd sight of a suburban mother persuading her teenage daughter to hold the fearsome cock of a black man old enough to be her grandfather satisfied my depraved employer's perverse mind.\n\nHeeding her mother's call and filled with a curiosity all her own, Kerri's delicate fingers tentatively grazed the dark skin of Ike's awakening shaft as Hank watched her take the bait. The vision of our young coed's pale fingers on his black staff thrilled the black executive immensely, sending his dense monster jumping impulsively.\n\n\"Ohhh,\" Kerri peeped, pulling back in surprise before returning to Ike's broad lance at the continuing encouragement of her mother.\n\n\"That's alright, Kerri. It just means he likes it, isn't that right, Ike?\" Emma asked, not waiting for the obvious response to her rhetorical question and instead pushing onward.\n\n\"Take it in your hand and grip it so it won't get away,\" she reassured disconsolately with the tone of a mother instructing her maturing daughter to handle the large prick as if it was a pet animal.\n\n\"Feel how thick it is sweetheart, and how heavy. It really is an impressive piece of meat, and it's not even completely hard yet,\" my wife stated obscenely, wincing at what she was telling our daunted young lady.\n\nTo Hank's delight, and certainly Ike's, Kerri took her mom's advice and grasped the fat cock gently in her right hand, with her long fingers only just encircling its girth. Hank, Ted, Ike, and even her mother's eyes were locked on the spectacle of the inquisitive coed handling her first really large and coincidentally really black cock.\n\n\"Oh, my!\" Kerri gasped under her shallow breath, with her astonished eyes locked on the hardening tool.\n\nOur awed daughter's frozen gaze set on the snaking veins along the flexing shaft, while at the same time considering the bulbous dark purple knob with some trepidation. Gripping the dense pole the best she could, gauging the width, Kerri then held it in the flat of her palm with her fingers extended in measurement.\n\nOur captivated daughter was taken aback by the unusual turn of events, not exactly sure what to think of the huge, swelling cock pressing against her tender hand as it tensed in a reflexive signal of Ike's contentment with our college girl's inquiring grip.\n\n'It's like a thick tube of warm clay,' she thought of the throbbing length of inflamed flesh, surging with blood flowing to the growing shaft in response to her touch as the spongy, squeezable pole became an iron bar of rock-hard fuck meat.\n\n\"Unnhhhh,\" Ike groaned softly seeing the beguiling coed's fragile hand so slim against his thick shaft and fat cockhead.\n\n'Oh, dear, what am I doing? This is so wrong,\" Emma panicked inside, crushed by Kerri's impending downfall and her unconscionable assistance in making it happen.\n\nThe sight of her only daughter touching any man's cock is disturbing for a mother. The sight of our nubile darling's long alabaster fingers wrapped around the massive dark shaft of an older black man was particularly so for Emma, and my afflicted wife did her best to work past the unpleasant imagery.\n\nBefore Kerri went further, Hank broke up our curious coed's first experiment in handling a big cock, wanting events to move at his pace. There'd be plenty of time for Kerri to become more acquainted with the huge ebony tool, and with all three men's hard cocks for that matter, before the night was over.\n\nRight now, it was time for Hank to unwrap his prize, but he needed to be sure she was ready, so Hank called her back to the world by obsequiously congratulating Kerri.\n\n\"Isn't it amazing? You're really very lucky, young lady. How about we take a break and have another drink to celebrate your good fortune,\" Hank proposed somewhat preposterously, resourcefully keeping our dazed beauty tipsy and making her feel special too. \"I mean, not every college girl gets to handle a well-hung man like Ike. It's almost a privilege, wouldn't you agree, Emma?\"",
        "'NO! NO! NO! IT'S NOT OKAY FOR MY SWEET DAUGHTER TO PLAY WITH AN OLD MAN'S BIG COCK!' Emma silently screamed her pain, nodding with a false smile pasted on her face, but internally in turmoil, with her 'cheerful' eyes hiding her lament at the horrible fate imposed on our sweet lass.\n\n\"Besides, you're going to make Ted and me jealous if Ike gets all your attention,\" Hank finished with a wink.\n\nRespectfully, Kerri backed away from Ike, surrendering his thick stalk and sauntering to the table in a bit of a haze. The alcohol had worn off just a little and Hank didn't want that, not yet anyway, so Ted poured large drinks for everyone.\n\n\"It's only 4:00 o'clock, and the party's just getting started,\" Hank remarked mindfully, anticipating more to come.\n\n**********************************\n\nAfter a few minutes of talking and allowing the drinks to kick in, my slick boss moved towards his goal.\n\n\"Everyone, take a seat. Let's enjoy the sunshine,\" Hank suggested, reclining in the poolside lounge chairs and relaxing for a moment before suddenly bolting upward.\n\n\"Hey, wait a minute. We're all naked, enjoying the sunshine, except you Kerri,\" he remarked with a feigned expression of dismay, knowing exactly what he was doing.\n\n\"Even your mother is naked,\" Hank added deceitfully. \"It doesn't seem fair we should all be naked when you're not. We're getting great overall tans and you're going to get stuck with tan lines.\"\n\nMy inveigling boss was laying it on a bit thick but pushed on anyway.\n\n\"We're all friends, Kerri. You've seen us naked. Why heck, you even handled Ike's big cock. It doesn't seem right you shouldn't be naked too,\" he argued, scurrilously playing on her desire to fit in with the grown-ups.\n\nWithout another word, Hank looked at my hapless wife, who didn't need to be told to encourage our befuddled daughter to take off her bikini in front of the leering eyes of the three lecherous old men.\n\nKerri hadn't yet even sat down when Emma reluctantly joined in Hank's chorus.\n\n\"He's right, you know, honey, you really should take off your bathing suit,\" Emma said in an approving tone, fomenting the lie Hank wished her to espouse making the unseemly act acceptable, and even desirable.\n\n\"We know everyone here and we're in the privacy of our backyard. No one will see but us,\" Emma cajoled teasingly. \"As Hank said, 'we're all friends here.'\"\n\n'This is all so weird,' Kerri marveled at the uncharacteristic entreaty, hesitation filling her furtive green eyes as the alcohol buzzed in her head and confused her thoughts.\n\n\"I did it, after all, and we're all naked. You should be naked too,\" her duplicitous mother added as the finishing touch.\n\n\"Sure, I guess it's only fair,\" Kerri rationalized after a moment's thought, understanding she really didn't have a choice, and smiling a pretty, freckled grin baring her gleaming white teeth.\n\nEmma could hardly bear the thought of watching Kerri strip in front of three old men she'd only met a few hours earlier, but knew it was required by my boss. Inwardly distressed at her easy victory, she remained outwardly pleased for Hank's benefit at convincing our lovely college daughter to cross another line in her ultimate servitude.\n\nAs Kerri stood before the men, Emma cautiously took a seat between Ted and Hank, sipping from glass for strength.\n\nThis was the exhibition the men had not-so-secretly waited for the entire afternoon -- not that there was anything wrong with my mature wife stretched out on the lounge chair without a stitch of clothing, boldly displaying her large, firm melons sloping easily to the sides of her chest, along with her pristine, hairless pussy.\n\nKerri losing her bikini was the main event, however, as even before arriving earlier, Hank had promised Ted the sight of our college daughter naked was to be a highlight of the afternoon and, true to his word, he was about to deliver.\n\nHank was finally going to get to unwrap his prize, and while the trio's stiff wood had softened while they lounged, they now stirred to life again at the prospect of their reserved hostess's adorable 19-year-old daughter stripping as bare as her mother right before their eyes.\n\nShe was the indisputable center of attention, but Kerri was oblivious to the stares from the group, assuming she was simply removing her bathing suit the same as the rest of them. Our na\u00efve young lady obtusely didn't realize she was putting on a show or that she was the star attraction.\n\nReaching to her back, Kerri grabbed the string of her top and pulled, loosening the pieces of cloth covering her breasts, but not removing them entirely. The promise of Kerri's youthful bosom was abundantly clear to the men as loosening the cloth holding her lovely tits didn't cause the firm breasts to droop or change their shape and form at all.\n\nEven then, the cloth still covered her promising mounds, delaying the men's gratification momentarily with the top held on only by the tie behind her neck and the rigidity of her pointed nipples, with the trio's cocks fully erect in anticipation of what came next.\n\nWithout realizing the effect, Kerri reached behind her neck and pulled that string as well, but this time there was nothing left holding the fabric onto her fabulous breasts and the top fluttered to the ground.\n\n\"Awwwhhhhh,\" the men collectively gasped in righteous awe, receiving confirmation of their lofty expectations that Kerri's tits are truly spectacular.\n\nOf course, as her father, I've never seen the exceptional pair, but I don't need to see them naked to know it's true, and even Emma had to admit with a mother's pride evident in her eyes that our developing daughter's chest is extraordinary.\n\nKerri's fabulous breasts are everything old men dream of thinking about their youth -- full, firm, and pointed. On her lithe body they look even bigger than their D-cup size, and that's plenty big. They carry a gentle tear-drop slope, but just a hint and largely from their sheer weight, before rising again at the tip of her pink nipples with her youth.\n\nUnlike the tan on her face and arms, her wonderful boobs are alabaster white. Clearly Kerri didn't sneak in a nude sunbath when no one was home, and her tan lines marked her athletic outfits rather than her bikini.\n\nKerri's nipples are smaller than her mother's, and a lighter shade of pink than the deeper rose Emma exhibits with her maturity -- a dusky rose growing deeper by the second on my blushing wife's chest at the sight of our maturing daughter removing her top for these perverted old men.\n\nWith eyes fixed on Kerri, my boss discreetly took Emma's hand and placed it on his sturdy erection.\n\nInstinctively, she knew what to do and lightly stroked the hard member, careful not to do too good a job for risk of making Hank blow his wad before he wanted. Regretfully, Emma had a good idea of where Hank wanted to deposit his first load that evening, and while it was a depressing thought, she didn't dare ruin it for him.\n\nMimicking Hank, Ted did the same with her other hand, so now my numb wife was in our backyard completely naked stroking the hard cocks of two older men as they gleefully enjoyed our innocent coed unsuspectingly put on a striptease performance for their pleasure.\n\nAs sick as it sounds, I secretly wished I could have been there to watch, instead of hearing it all secondhand from Emma the next day.\n\nNot pausing for effect, mostly because she was blind to it, Kerri moved along to her bottoms.\n\nAs a French cut, the panty reached high on the hip, but was held up by elastic rather than ties as on her mother's scant bikini. Not thinking twice, our tall, willowy daughter hooked her thumbs into the waistband to slide the panties down over her delightful ass, currently only available for a side view.\n\nThe distracted men held their collective breaths as Kerri dropped at the waist, slipping the bottoms past her calves to her ankles and gracefully stepping out one foot at a time, with the cones of her delightful breasts hanging languidly from her bent torso.\n\nWith a last unknowing tease, the hunched angle of her disrobing left our daughter's treasured vagina momentarily obscured from view. Fortunately, the men didn't wait long as quickly Kerri rose to her full 5'9\" height, shunting the damp panties aside with her lovely tits bouncing merrily before settling into position on her ample chest.\n\nUnsurprisingly, Kerri's pussy is every bit as awe-inspiring as her tits.\n\nAs with her head, the hair on her mound is a shade of auburn lighter than that of her mother's chestnut brown, at least when Emma had pussy hair. It's sparse and curly too but provides good coverage for her vagina with only a hint of her delicate pink labia hiding beneath.\n\nDespite her displeasure at the current events, my doleful wife is undeniably proud of our daughter's beauty and the affect it had on men, at least judging from the painfully stiff erections she held in each hand and under no pretense it was from her efforts rather than our daughter's greatly appreciated nudity.\n\nKerri posed a moment in all her glory, a demure smile enticing the leering men with its innocence.\n\n\"There, happy now?\" she playfully intoned, accompanied by a coquettish batting of her sparkling green eyes in a teasing manner she didn't even realize she possessed.\n\nTo say the men were happy is the understatement of the year.\n\nReady for another drink, Kerri sashayed her way to the table with unknowing sexiness, her long legs looking even longer naked, while her rippling abs and narrow ass displayed a captivating vivaciousness.\n\nKerri's auburn locks remained clipped behind her head, drying from the swim with the bangs flat against her brow, and her large, pointed tits were impossible to dismiss. Jiggling lightly as she walked, the delightful pair expressed a springy vitality matching each step before returning gamely into place on her upright chest.\n\nReturning to the lounge chairs, our self-absorbed coed finally noticed her mother gently stroking the erect cocks of Hank and Ted. Emma obediently hadn't stopped at the end of Kerri's striptease, in large part because Hank hadn't told her to stop, but that didn't mean she wasn't mortified getting caught in the act by our surprised daughter.\n\n\"Jeez, mom, really?\" Kerri exclaimed distastefully in her immature way of expressing disapproval.\n\nEmma felt awful -- a married woman, naked and stroking two men's hard cocks simultaneously in her backyard, and neither was her husband. That was bad enough, but to do so while those men watched our gorgeous daughter remove her bikini before their eyes was simply unimaginable.\n\nStill, there she was, and Emma continued even as the shame of Kerri as witness to her misdeed flooded her emotions, aided in large part by our judgmental daughter's insensitive detraction.\n\nAll the while, Kerri stared, privately enthralled by the sight of her mother's hands plying the stiff poles and remembering the feel of Ike's monstrous black cock in her own palm. Even the indecent sight of Emma's wedding ring wrapped around Hank's rigid girth was breathtaking, mostly because it was so shameful and forbidden.\n\nOf course, Kerri already saw me in Hank's office when Rick fucked her mother yesterday, with me doing nothing, but the symbol was a stark reminder of who we are, what we're doing, and why it's so degrading to her and our family.\n\nMy devoted wife is a proud woman, wounded by the unrestrained comment and taking offense at our unforgiving daughter's disparagement. Emma hoped Kerri knew she didn't want to do these awful things -- breaking her marriage vows and suffering the demeaning treatment, and that she did what Hank said because she had to save our family.\n\n\"Oh, so what do you know about stroking cocks, young lady? You're just a college girl,\" Emma retorted dismissively in a tone striking at the core of our daughter's pride in her newfound maturity.\n\nMy emotionally injured wife fought back irrationally, intending to undermine Kerri's presumptuous attitude by making her feel like an inexperienced child. As a worldly mother, wise to the thinking of young women, Emma knew our collegiate daughter hated that treatment. Remorsefully, she also knew it was a useful tool in securing Kerri's downfall.\n\nEmma expected Hank to be pleased with her use of the dirty imagery, appealing to his perverse nature by willingly taking the initiative without his prodding. My perturbed wife wanted to put our precocious angel in her place, so Kerri knew she was still her mother and that she knew what was best.\n\n\"Maybe she should try it for herself?\" Ted added, before offering himself as the lucky test subject. \"You're welcome to take over here for your mother, Kerri, or Ike looks like he could use a hand.\"\n\n\"I'd say he looks a little deflated from the lack of attention,\" Hank quipped with a grin referring to Ike's softening tool, with all the men chuckling at the joke.\n\nCaught off-guard by her mother's strident reaction, our thoughtful coed paused a moment, noticing how the men looked at her standing stark naked, thinking maybe she'd let the leers and alcohol go to her head. Nonetheless, full of moxie as a petulant college girl, Kerri wasn't backing down from the challenge presented by her chastising mother, and in doing so pleased Hank to no end.\n\n\"I do know what it feels like, mom. I held Mr. Jones-Dixon's, um, cock!\" Kerri's plaintive rejoinder was intentionally snide, while oddly humorous in her use of Ike's surname considering her recent familiarity with the licentious man's notable manhood.\n\nImmaturely, Kerri hoped the disturbing image of Ike's heavy black cock in her hand might hurt her mother, but Emma was undeterred.\n\n\"Yes. Well, you handled it anyway, but that's not really the same as stroking it, now is it?\" my salty wife rebuffed our pretentious daughter, baiting her while knowing how loathsome she felt doing so.\n\n\"Well then mama, it's time she tried it herself now,\" Ike finally spoke after observing the back and forth between mother and daughter. \"Come here then, young lady, and help a black man out.\"\n\nThe crafty old businessman purposefully talked to our young suburban girl with an urban 'tude,' knowing the white suburban kids loved pretending to be hip to the rap from the 'hood.'\n\nThe offer was unexpected, and once again, Kerri was momentarily paralyzed with the realization of what came next and suddenly very aware of her tantalizing nudity, with the backyard where she grew up becoming very small and foreign.\n\nIntellectually Kerri knew the deal and had a nominal understanding of her role, albeit predicated only on her limited sexual knowledge and growing awareness of our family's indenture. Emotionally, however, she was ambivalent in working through her natural fears and juvenile insecurities.\n\nGlancing at her mother, still casually stroking the hard cocks of the two older white men, Kerri knew she'd find no help from Emma, and finally moved towards Ike, unable and unwilling to suffer the humiliation of backing down from the challenge and looking the weak.\n\nThere were no more lounge chairs, so Kerri gracefully kneeled at the side of Ike's chair between he and Ted. The two men were more than happy for the cute, naked coed to move in close, as Kerri studied the hulking man's giant phallus from her position merely a foot away, with Ike's huge cock looking as big and intimidating as before when she held it.\n\n\"Go on then, doll, give Ike a tug,\" he encouraged our cautious young lady.\n\nWithout further delay, Kerri touched her trembling hand to the semi-erect meat draped on his round abdomen pointing towards his chest, cautiously running her fingertips along the length at the underside of the shaft. As it had before, Ike's cock twitched and stirred to life, lifting slightly into the palm of Kerri's hand forcing her to reflexively encircle her slim fingers around its girth.\n\n'If only his friends from the Projects saw him now,' Ike thought, grinning broadly at the sight. 'A pretty, suburban white college girl's hand wrapped around his massive black cock while her naked mama watched powerlessly nearby.'\n\nHank and Ted followed our young beauty's discovery as well, while Emma continued playing with the men's hard staffs, staring blurry-eyed with sorrow at the increasing pace of our ill-fated daughter's downward spiral.\n\nSeeping tiny amounts of pre-cum by this point, and my obliging wife was careful to occasionally roll her thumbs over the men's spongy cockheads on the upstroke, smearing the lubricating emollient across the soft crowns, much to their obvious delight.\n\n\"Good girl, Emma,\" Hank complimented her consideration, pleased with her passive acceptance of performing the objectionable task, especially after such a brief period under his domination and servitude.\n\nLifting Ike's hardening cock, Kerri got her first true sense of its vast size and weight. While she didn't have much experience with sex, she couldn't imagine a woman taking such an immense cock into her body, or her mouth.\n\nWith the thick tool fully in hand, mimicking her mother, our awed daughter tentatively slid her soft palm along the undercarriage of the tensing shaft from the base to the fat tip. Her long fingers looked small and delicate in comparison, traversing its imposing length and unaware of her audience watching as her entire focus stayed on the magnificent beast she now controlled.\n\n\"Whew, huhh, that's the way, missy,\" Ike breathed heavily in response, and Kerri gripped a little more firmly as she developed a rhythm stroking his increasingly stiff pole.\n\nBreaking her hypnotized gaze as her slender hand worked the sizable shaft, as if looking for instructions on what to do next, our learning coed looked at her mother, then back at Ike. Receiving no input, she slipped her gentle grip all the way up to the dark knob of the gratified old executive's cockhead and instinctively rolled her supple palm over and around the sensitive crown.\n\n\"Unnhhhhh,\" the unexpected pleasure thrilled Ike, releasing a low groan.\n\nKerri was pleased with herself, intuitively realizing it felt good to please a man, and subconsciously exhilarated as if it was what she was meant to do, feeling a subliminal power and repeating the act once or twice to Ike's vocal satisfaction.\n\n\"Oh yeah, doll, just like that,\" Ike encouraged under his deep breath, unable to help himself from using the suggestive name for our fledgling daughter.\n\nEmma watched helplessly as our stunning college freshman, naked as the day she was born, stroked and teased the older man's large black cock only feet away, with the taut muscles in Kerri's trim, defined arms flexing from her effort. Even then, she obediently pushed forward, assisting in our enraptured daughter's demise.\n\n\"Honey, I bet he'd like it if you felt his balls too. Most men like that, isn't that right fellas?\" she suggested scandalously, immediately shifting her hands to Hank and Ted's hairy scrotums, weighing and squeezing their tender packages.\n\n\"Just not too hard,\" Emma preemptively advised, fearing Kerri's inexperienced hands might unknowingly inflict undesirable pain to Ike's sensitive testicles.\n\nKerri instantly took up her shameless mother, sliding her hand down Ike's now-rampant tool to the large leathery pouch holding his egg-sized spheres. She could hardly get the whole thing in her hand, lifting it from beneath and playing with the loose sack, balancing first one and then the other heavy ball in her soft palm.\n\n\"Use both hands, Kerri,\" my reassuring wife prodded, giving lessons to our impressionable daughter and indoctrinating her in the proper handjob technique. \"Stroke the shaft and play with his balls at the same time. He'll love that.\"\n\n\"Unngggh,\" Ike grunted his agreement, entranced by Kerri's alabaster fingers plying his ebony flesh, deferentially doing as told by her knowledgeable mother, and keeping her palm on Ike's nut sack while stroking the dense column with her other hand.",
        "When Emma related the entire sordid event to me later, in my degenerate mind I imagined our athletic, freckle-faced college girl, naked on her knees barely able to wrap her long, slim fingers around Ike's immense black cock and bobbling his heavy balls.\n\nI couldn't stop myself thinking of Kerri's fluid arm movements enticing her big, firm tits to dance in time, energized by her primal discovery of the feminine joys of satisfying Ike's innate male sexual desires, and even more amazingly before an audience of Emma, Hank, and his valued guest, Ted Jenkins.\n\nI'm sure it was an incredibly lurid spectacle and highly erotic sight, and one I'm sorry I missed in shamefully satisfying my own perverse fantasies, even if I am her father.\n\nKerri was turned on by the experience too, with a wetness between her legs arising as the tingly sensation in her pussy returned. Even her jaded mother was inappropriately stimulated by the sight. As demented as the scene was before her very eyes, Emma told me later she nonetheless sensed the warmth of her own arousal spread.\n\n\"Uuhhh, umm,\" Ike groaned again, reflexively jerking his hips in time with our excited daughter's strokes, involuntarily pushing against the velvety hands caressing his cock and massaging his nuts.\n\nRather than interrupt, Hank decided to let the scene play out, knowing the ultimate result.\n\nIke didn't mind, and it was a good opportunity to expose the young woman to some success in placating a man's prodigious carnal needs. Hank knew Ike well-enough to know he was willing to wait for what were certain to be future opportunities to get our beguiling coed into bed.\n\nKerri's arms were getting tired, but she was accustomed to working through physical duress from her sports activities, so settled into a good stroke of Ike's meaty pole while teasing his balls in time with her rhythm. Predictably, pre-cum oozed from the open mouth of his cock, and imitating her mother, Kerri occasionally swirled her hand over the knob rubbing the lubricant around the increasingly agitated crown.\n\n\"Ohhh, un-huh, uh,\" Ike panted with regularity now as his giant cock throbbed vitally in her palm, and no one said a word, staring transfixed as our daughter's untried hands worked the black man's solid cock with impressive dexterity.\n\nIke rocked his hips more urgently, lifting his ass off the lounger in sync to our young coed's strokes, while Kerri perspired from the strain with her straight auburn bangs plastered to her forehead, but diligently stayed with it, intuitively sensing she was close to a result but not entirely certain what to expect.\n\nOur quick-study daughter was doing a surprisingly decent job, not that it mattered to Ike, because the thrill of the innocent white college freshman's hand jerking him off was more than enough to bring him over the top, which was the faltering SVP's next stop on the path to ecstasy.\n\nAfter Kerri ran her hand once more over his quivering knob, swirling her palm across the exquisitely keen glans with a rapidly developing expertise and then returning to grip the pulsing stalk firmly, Ike ejected a long, thick rope of white cum from the tip of his swollen cockhead.\n\n\"AAARRGGGGHHH!\" he bellowed in a deep baritone as stream after stream of hot jism rocketed into the air a foot high like water spitting from a fountain.\n\nIt was a tremendous quantity of pearly white spunk splattering his hairy chest and stomach in brilliant contrast with his dark skin as it dibbled along the curvature of his big belly.\n\n\"Ohhh,\" Kerri gasped in awe, dazzled by the sheer power and volume of Ike's orgasm.\n\nTruthfully, as with most college girls these days, our intelligent and respectable daughter had seen a cum shot once in a dirty movie with some girlfriends at a dorm room slumber party, but it was nothing like this one. Secretly, she was elated she had caused the gusher and was unable to repress a telling smile.\n\nNot knowing what to do, Kerri correctly continued stroking up and down the convulsing man's spewing cock shaft, using the warm cream covering her hand as a lubricant while Ike spastically twitched in his chair, until gradually the spurts of viscid semen dissipated and finally stopped.\n\nSensing the moment had passed, Kerri deftly relinquished the pulsing shaft and let it slip from her fingers. Amazed by her feat, she studied her hands, examining the stringy stuff coating her fingers and running down to her wrists, before grabbing a towel to dutifully wipe the goo away before Hank could suggest a more salacious way to clean herself of the intriguing mess.\n\nAs a conscientious young lady and in a naturally subservient act Ike appreciated and didn't escape our perverted new master's notice, Kerri cleaned the pools of cum off the enervated businessman's chest, belly, cock and balls, innocently thinking it was the nice thing to do.\n\nHank had hoped she'd lick up the noxious cum and preferred that method from his newly bonded female acquisitions, but such an impolite act was probably too disturbing for our unworldly daughter to conceive, so he let that wait for another occasion.\n\nNonetheless, Kerri's unsolicited act of cleaning her 'lover' was a positive development in her future subjugation.\n\n**********************************\n\nThe sun was still in the sky as the five o'clock hour approached, but everyone was in the shade now and the evening was just getting started when Kerri finished off Ike. Her achievement made her thirsty, so she took a drink while still remaining on her knees.\n\nIke lay in his lounger and basked in the afterglow of a good orgasm provided by a neophyte company fuck toy, our innocent daughter, Kerri. He was pleased Hank granted him the privilege of taking her 'handjob cherry,' already knowing Hank had reserved first use of her precious snatch for himself. Ike appreciated his boss letting him take some form of her virginity.\n\nThe rest of the group, however, was more excited than ever and yet to be satisfied. It was time for Hank to take control, pushing our vulnerable young lady onward to her new role as a faithful and submissive sex servant, just like her mother.\n\n\"Nicely done, Kerri! I mean, you really stroked his cock like a pro and worked a heavy load from Ike's balls. Looks like maybe you've given a few handjobs before?\" Hank complimented our enthralled daughter, impugning her self-conception as a 'good girl' as he did.\n\n\"N-no,\" Kerri answered sheepishly at the unseemly thought.\n\n\"Seriously? No backseat tussles with a cute guy jerking him off to keep him at bay?\" he taunted, believing her but enjoying her discomfort at the notion.\n\n\"No, really, I never, well, until now,\" she insisted defensively, deeply feeling the jab at her character.\n\n\"Well, it was very impressive, indeed. You should be pleased with your daughter, Emma, she really knows how to toss a man off,\" my boss showered sincere but indecent praise on Kerri's accomplishment.\n\n\"Nice job, sweetheart,\" my discouraged wife offered with feigned enthusiasm, smiling weakly with approval.\n\n\"That really was a turn on. It left me hard as a rock. How about you, Ted?\" Hank continued, signaling my anxious wife to once more assist our unsophisticated daughter in her debasement.\n\n\"I'm so hard I'm aching,\" Ted agreed.\n\n\"I think you'd better stop stroking now, Emma, before I blow,\" Hank advised with a satisfied grin.\n\n\"Your mother knows a better way to take care of a horny man's needs, isn't that right, Emma?\" Hank followed, turning towards Kerri, still finishing her drink and cooling down somewhat from her endeavor.\n\nEmma slumped at the words, so disgusted with herself for what Hank was making her do. The depravity of forcing a mother to do this to her own daughter was too awful. Too shameful. Still, my forlorn wife sat naked between Hank and Ted, and dutifully stopped using her hands on their overly-aroused staffs.\n\nHank loved the torment he was putting Emma through. He saw it in her eyes, and the way her body tensed with despair. It wasn't by mistake our beloved daughter started her path to descent with a black man, knowing Emma's upbringing and subliminal aversion to African-American men.\n\n'This truly is fun,' he congratulated himself, recognizing a woman's emotional trauma got him off as much, if not more, than the actual sex itself.\n\nMy wife is a lovely, sexy woman filled with confidence and feminine strength. Breaking her to these acts of debauchery, particularly involving our only daughter, was worth any risk he had taken. Hank expected even more fun with his new mother-daughter sex team than when he made Emma submit to adulterous sex with him, and anyone he chose.\n\n\"Come on, Emma. Show your lovely young beauty how to really please a man. Get down here and put that luscious mouth to use,\" Hank plainly commanded.\n\nNo longer making suggestions, cajoling, or using innuendo, my boss, our new master, cut to the chase by ordering my chastened wife to suck his cock in our own backyard, and right in front of our sweet, compromised daughter.\n\n\"Be sure to do a good job, remember, your impressionable daughter is watching,\" Hank snarked just for emphasis, as if she could have possibly forgotten.\n\nNow the tears welled in Emma's eyes, no longer acting the willing participant to our daughter's corruption, but rather as Hank's subservient sex toy. My heartless boss intended to further degrade her virtuous image before our befuddled youngster, and Emma knew he would ultimately do the same to Kerri too.\n\nUnhappily, my curvaceous wife rolled off her lounge chair onto her hands and knees next to my boss. I know Hank loves her in this position. It's so demeaning and submissive. Plus, he can't get enough of seeing Emma's big jugs hanging low as my dear wife and mother of our two fantastic children took his hard cock into her mouth.\n\nEmma's broad white ass pointed towards Ike, and by his side, Kerri couldn't miss the pink gash splitting her bald cunt flashing at them. Her humiliated mother knew of the provocatively lewd display but did nothing to prevent it. Kerri stared in stunned silence as her mother's dignity slipped away before her very eyes.\n\nAt the same time, Hank watched Kerri closely, observing as our ingenuous daughter's face turned to one of sorrow, concern, and trepidation.\n\n\"Good,\" he commented, relaxing as my servile wife applied her vastly improved cocksucking talents to his strident pillar of tensing flesh, running the flat of her tongue from the base of Hank's firm shaft along the underside up to the tip.\n\nEmma knew what Hank liked and how he liked it, completing the awful trip several times, slathering his broad tool with her saliva, and never once using her hands for anything except to brace herself against his leg.\n\nWhen she reached his nut sack, she delicately ran her tongue over the wrinkled skin, and then popped his big right testicle into her mouth, swirling her tongue around and around the sphere before spitting it out and repeating the process with his left testicle.\n\nAll the while, she kept her eyes open even through her tears, focused on Hank's gleaming orbs, horribly aware of how a submissive cocksucking slut gave head and regretfully imparting that message to our persuadable coed.\n\nHank loved how great my wife had become at sucking cock since the first time he filled her mouth. Emma knew what men liked, and Hank wanted her to teach that knowledge to our acolyte daughter, so he implored Kerri to pay attention.\n\n\"Are you seeing this, Kerri?\" he inquired between deep breaths, extolling her embarrassed mother's oral skills appreciatively. \"Your mother has learned to suck cock like a pro. Every guy she's blown says the same thing.\"\n\nHank made a point of denigrating Emma as much as possible in front of our daughter, even to the point of suggesting her mother had sucked off more than a few men.\n\n\"You could learn a few things from her about sucking a hard cock,\" he counseled ominously.\n\nIf she didn't understand it before, Kerri certainly knew Hank's intentions now, watching her mother suckle, lick, tease, and tantalize the mid-50's CEO's turgid staff. Once Emma sucked on his balls a few times, she returned to the shaft, pursing her lips up the length, then licking around the tender crown while slurping the pre-cum into her mouth.\n\nWith Kerri's green eyes wide with awe, my judicious wife shockingly swallowed the entire span of Hank's cock whole, taking inch after inch into her mouth and then remarkably, into her throat, straining her lips in accepting its thickness.\n\n\"Unnck, gugk,\" Emma's gentle gags were the only sound in the backyard as his spongy cockhead filled her throat.\n\nHank knew the effect Emma's blowjob prowess had on him, so before he became lost between her suctioning lips, he barked out one more order confirming his designs for our angelic daughter's destruction.\n\n\"Kerri don't just sit there. You've seen your mother. You know what to do. Ted's looking terribly stressed, and as your guest he needs to be serviced too,\" my designing boss advised transparently.\n\nEmma's ears perked up, but Kerri sat there dumbfounded, until Hank spoke more commandingly.\n\n\"Kerri, suck Ted's cock, just like your mother is sucking mine. It's time you learned your new role in paying your family's debt!\" he stated imperiously, adding the odious instruction with enough force to be sure his meaning was clear.\n\nHank wasn't asking. Hank wasn't suggesting. As he had with her mother, Hank was telling our wavering daughter what to do, and in no uncertain terms. Everything he had done so far was building to this moment. He'd brought her along slowly, but now was the time to shift from leading her with insinuations to making her accept commands.\n\nAs with anyone else in his unforgiving grip, my demanding boss expected Kerri to obey.\n\nAdvising Ted before they arrived that as the company president he intended to be first in taking the treasure of Kerri's pristine pussy as the one perk he was unwilling to forgo, as a concession to his good friend and valued client, as well as to grease the wheels of commerce with his company, Hank granted Ted the honor of our newly-conscripted daughter's oral virginity.\n\nWhile disappointed he wouldn't be banging our sweet coed that afternoon, once he saw Kerri's pretty face Ted was more than satisfied with Hank's prized offer, excited at the prospect of our radiant college girl's slim lips wrapped around his hard cock.\n\nKerri was terribly confused by Hank's suddenly strident tone and profoundly shaken by the authority of his voice. I know from experience Hank is an imposing presence when he takes that tone. Raised not to question her elders as a deferential daughter, her immediate impulse was to do as she was told, although I certainly never told her to do anything of this nature.\n\nLooking to her hardworking mother busily slurping and sucking on Hank's rigid pole, Kerri quickly surmised she'd find no salvation from Emma to avoid the unusual deed.\n\nWhile my wife was well-aware of our unschooled daughter's imminent downfall at the order of her newly-introduced 'master' and was most assuredly shattered by her role in bringing it about, she never once looked away from Hank's eyes in the manner of the 'great cocksucker' she'd learned to be.\n\n\"Don't make me tell you twice, young lady!\" Hank snapped, assuming a harsh parental attitude, and our naked daughter suddenly looked so young and frail.\n\nKerri's broad shoulders trembled nervously with the chastisement, giving her dense tits a delightful shimmy with a frightened expression overcoming her face warily eyeing Ted's lap.\n\nUnlike Ike, Ted's cock was already stiff as an iron rod in anticipation of Kerri's soft mouth. Like Ike, it pointed straight up towards his chest, and while it wasn't the black man's intimidating width, it was still a large cock -- probably 8\" in length and actually thicker than Hank's equally long staff.\n\nOn her knees, Kerri moved tentatively to Ted, knowing the expectation and seeing no option for respite from the previously untried chore.\n\n\"That's it, Kerri, be a good girl,\" Hank gloated victoriously as our kittenish youngster lowered her face closer to Ted's splendid tool, inspecting it closely before proceeding with her task.\n\nKerri's exquisite nipples were diamond-points brushing against Ted's thigh when she placed her hands at his waist as she had seen her mother do with Hank. The older businessman's cock quivered in anticipation, and his heart palpitated wildly as our pretty coed examined his impressive meat, pulsing reflexively against his lower abdomen. Perplexed, she appeared uncertain how to begin.\n\n\"Just touch his cock with your tongue, young lady,\" Hank suggested, setting her on her way, and after a solitary moment digesting the intolerable instruction, our college beauty snuck her slippery tongue from between thin lips in contacting the throbbing hardness of Ted's cock.\n\n\"Uhhhhh,\" Ted sighed openly, and might have lost it right there with that touch alone, but he dearly wanted this extraordinary experience to last.\n\nWorldly and experienced, even the wizened old businessman was not often granted the pleasure of receiving a young woman's first ever blowjob, especially one as wholesomely appealing and fresh-faced as our hard-bodied daughter.\n\nHank's attention was squarely focused on Kerri, fascinated by her deliberate approach to taking on the handsome, gray-haired man's tumescent staff. All the while, her determined mother continued sucking his own fleshy staff into her accommodating mouth as if it was her whole world.\n\nOnce the barrier was broken between Ted's warm flesh and her moist tongue, Kerri guided the tip along the length of his straining erection, with the playful prick dancing away in a game of 'catch me if you can' as her hands remained anchored at the hairy base of Ted's pubis, just as she'd seen Emma do.\n\nEven then, Kerri managed to keep up with her dodging target, and the mere sight of our lovely auburn-haired lass, so youthful and pure, but also so sexy in her striking nudity, with her delicate pink tongue trailing along his hard cock, was too incredible for Ted to contemplate as the 60-something man stared in awe at his good fortune as if in a dream.\n\nHappily, Hank suspected he'd get all of Ted's vast business activity in the future.\n\nWhen Kerri reached his cockhead, she ran the tip of her exploring tongue around the smooth surface, testing its spongy texture and letting the velvety soft appendage slather the bulbous crown with her saliva, before licking her way back down the shaft.\n\n\"Eyes, Kerri!\" Hank called out his lone corrective admonition, although generally pleased with her performance so far.\n\nOur fast-learning coed immediately picked up the message and quickly trained her emerald green eyes on Ted's keen weathered countenance, with her cute bangs draped across her freckled forehead, while his piercing, brown-eyed gaze stared back in absolute lust and admiration.\n\nFrom that moment on, our dutiful daughter did not take her eyes off Ted's, undertaking the art of pleasing the older man's supremely engorged tool with her virgin mouth as if she'd sucked cock all her life. Hank soon returned his attention to his own pleasure in the mouth of the cute novice cocksucker's diligent mother.\n\nThroughout Kerri's exploration of her first phallus, Emma never let up working her magic on Hank's stiff pole, alternating between varying techniques on his cock and balls -- swirling, licking, sucking, and nibbling -- all with the single goal of enhancing his pleasure, and ultimately, making him cum.\n\n\"My big-titted fuck pet has really become a talented cocksucker,\" he appraised loudly enough for everyone to hear, genuinely appreciative Emma's capable skills, much to her red-faced shame.\n\nHank didn't resist my wife determined efforts, deciding to cum soon while Kerri witnessed her esteemed mother gulping down his reservoir of illicit semen. As an added benefit, doing so freed Emma from her shameful task in time to watch our studious daughter's oral ministrations of Ted's fervent cock.",
        "Unfortunately for my toiling wife, her newfound ability granted her that inglorious opportunity, unwanted to be sure, letting Emma behold our unpracticed daughter swallowing her first dose of cum from a man forty years her senior, pumping his elderly load into Kerri's delightful mouth.\n\nTo Hank's pleasant surprise, by now Kerri took to licking Ted's heavy balls, dragging her tongue over the hairy sack and doing her best in mimicking how her role-model mother had taken Hank's nuts into her mouth.\n\n\"Awwouucch,\" Ted winced once when our inexpert coed suckled a little too hard but was otherwise in heaven as she learned a new craft using his tool set.\n\nKerri astutely noted Ted's sharp gasp, settling into a pattern of softer licking and teasing his cum-filled balls after that, running the flat of her tongue over the wrinkled surface of his scrotum, and then gliding the moist appendage around his large testicles.\n\nCarefully, she lifted each irregular orb to weigh on her curved tongue, and even applied the tip to the very delicate skin where the sack connected at the perineum.\n\n\"Uuunnnnh,\" Ted moaned in response, thrilled with her lavish initiative.\n\nWhen Kerri worked her lips back up the side of Ted's long staff once more, she decided to try to take the round knob into her mouth as her mother had done, opening her jaw around the flared tip and engulfing its fat rim.\n\n\"Ahhhhh,\" he peeped to his utter delight as she easily encompassed the purple head, stretching her thin lips around its circumference better than he expected from such a young lass.\n\nOnce the bulbous crown was past her oval lips, Kerri bravely pushed downward, consuming his hard shaft while accepting as much of his inflamed stanchion as possible.\n\n\"Ggguk, gck, ugg,\" she gurgled audibly, only making it about halfway down the length before gagging in what was otherwise an impressive first effort at swallowing cock.\n\nFor the moment, that was more than enough for the rakish businessman, and apparently, it was more than enough for Hank too.\n\nSettling his eyes upon my relentless wife with his swollen tool sliding in and out between her circled mouth straining to take the thick shaft down to the base, my faltering boss marveled at the flurry of erotic sensations Emma generated in his quivering loins.\n\nNearby, Kerri's lips stretched tautly around Ted's meaty cock, now slowly disappearing into her welcoming mouth, and upon witnessing our self-possessed coed engulf inch after inch of his substantial girth between her expansive jaws, Hank was done.\n\n\"Aarrgghhh, ohhh fuck!\" he groaned enthusiastically and came, gripping the arm handles of the chair for leverage and rearing up in releasing a mighty blast of thick jism forcefully into my unprepared wife's mouth.\n\n\"Ahck, ahuh,\" Emma coughed a dribble of Hank's spewing seed out the side of her lips but adjusted quickly to expertly take his river of warm cum directly from the spurting mouth of his cockhead down her throat to her waiting stomach.\n\n\"Uunnhhh,\" Hank groaned once again, softly this time, and it took several moments to feed their entire contents of his full balls into my cooperative wife's busily gulping mouth.\n\nCollapsing into the chair and realizing how much he enjoyed cumming in lovely, big-titted Mrs. Tyler's mouth, he had intended to pump his first load of the night into Kerri's pussy, but Emma's velvety soft mouth and superb cocksucking technique won the day and felt so good he simply couldn't resist.\n\nBesides, Hank knew he'd have no problem getting it up later, and this way he'd last longer when he finally fucked our mostly unsullied daughter.\n\nThroughout, Ike watched with a bemused smile at the visage before him, still recuperating from his own climax literally at the hands of our lovely daughter, and content to take in the perverse show.\n\nQuite a show it was becoming too, as set before the aging black executive were two alluring, completely naked white women -- a conservative mother and her appealing college coed, available to service the men's most perverse sexual needs and fantasies.\n\nBetter still, they were the late-30's wife and 19-year-old oldest daughter of an Allenby senior manager.\n\nOn their knees, the lovely duo toiled side-by-side in the backyard of their own home, hunched over resolutely sucking the rigid cocks of two older men well into their 50's and 60's -- the president and the most valued client of their respective husband and father's employer.\n\nReluctantly but with determined energy, the subservient women did their very best to suck off their man, working hard draining his balls and drinking his noxious cum down their luscious throats. All for the satisfaction of Hank. All for the benefit of the company.\n\nThe fact that Kerri's cute, girlish ass with her glistening pink snatch peeking from between her muscular thighs taunting his big black cock waved directly at Ike only reaffirmed his decision to work for Hank Allenby all those years ago.\n\n'Shit, I admire the hell out of the guy for what he's accomplished with these uptight white bitches, and of course, for sharing. I mean, seriously, a suburban mother and her wholesome daughter?' Ike concluded approvingly.\n\nWhile Emma devoted herself to cleaning the residue of Hank's cum from his softening cock and balls with her tongue, Kerri learned to properly attend to Ted's thick tool.\n\nShamefully proud of her first effort, our perfectionist daughter was nonetheless dissatisfied with only getting halfway down his long pole after seeing her mother swallow Hank's equally long cock whole. A natural competitor, Kerri determined she must successfully conquer Ted's impressive staff too, remaining persistent and ready to try again.\n\nUp and down, up and down, never using her hands and each time taking a little more, another inch -- our daughter worked on Ted's stiff cock until she finally felt the pulsing knob push into the entrance of her throat and the wiry brush of his salt and pepper pubic hair tickle her upper lip.\n\n\"Gulph, muulmph, uphmm,\" Kerri instinctively sucked in air through her nostrils upon realizing the amazed man's cockhead blocked her windpipe, but she handled it remarkably well.\n\nEveryone was now watching, including her mortified mother, as our college girl swallowed nearly the entire length of the old businessman's engorged meat, pushing the crown past the narrow gateway creating an erotically visible bulge in her slender neck.\n\nEmma cringed at the image of our young coed with an old man's cock stretching her pretty pink lips, but also was impressed by Kerri's natural prowess in throating the gratified executive.\n\nAshamed but perversely proud, she studied Kerri's slim cheeks hollow when applying suction to the shaft, with her cute bangs hanging straight down and breathing raggedly through her nose, while struggling valiantly holding Ted's generous cock in her mouth.\n\nOur apparently-gifted daughter didn't quite hit her lips to the base of his pubic bone, but no one would complain about her stupendous effort. Certainly, not Ted.\n\nWhatever demented pride she felt in Kerri's disturbing accomplishment, Emma nonetheless looked on with dismay, devastated by what lay in our guileless daughter's future and acknowledging her traumatic role in bringing it to reality.\n\n'I'm helping Hank turn our sweet young daughter into a talented cocksucker,' she lamented, while Hank made sure she witnessed every moment of Kerri's growing expertise in servicing a man's constant erection.\n\nPleased with her achievement, and with just the slightest grin on her face, Kerri retreated to the sensitive head, swirling her tongue around its ductile surface with an impish gleam in her emerald eyes, and then did something of her own initiative that nearly brought Ted out of his chair.\n\nLooking the stupefied businessman dead in the eye with a raised eyebrow, our precocious daughter drew her lips off the bulging helmet of his cock and gently scraped her teeth along the tense surface, starting from the rim, up and off the tip, and then back down to the rim again, but she didn't stop there.\n\nWith lips still drawn, teeth lightly holding the edge of his tumescent crown, and green eyes focused on Ted's, Kerri snaked her tongue into the eye of the serpent and licked the pool of pre-cum from the opening, pulling the pungent fluid with her tongue into her mouth.\n\nFor all her acquired cocksucking skills, Emma had never done that before. Neither had Hank or any of the others ever seen it. My transfixed boss surely believed he had a natural-born cocksucker in our daughter, and he was right.\n\n\"Ohhhhh, awwhhh shit,\" Ted moaned continuously as Kerri cut loose after her devilish tease of his sensitive cockhead.\n\nWrapping her thin lips around his wildly inflamed shaft, our committed daughter zealously worked over the laboring older man's rock-solid pole with wanton abandon. Sucking the entire length into her mouth, each inch gloriously disappeared in her mouth.\n\nSetting her tongue flat against the underside of Ted's rampant cock and enveloping its rigid form within its moist grip until nearly reaching the base again, the scratchy pubic hair grazing her upper lip causing a ticklish sensation sending her wriggling delightfully so that her beautiful breasts jostled with life.\n\n\"Unnnnnhhh, ohhhhh,\" Ted wavered and his thigh's trembled under the stress of the arousal building between his legs.\n\nUp and down, four or five more times with a fluid motion more common to a mature, experienced woman and Kerri had Ted on the edge, with the overpowering stimulation too much for our affected client.\n\n\"Uummmm, mmm, mmmmmh,\" his faltering groans tinged his half-tormented, half-blissful state, with the huffing gasps repeating as our exceptional coed sucked his cock with every natural skill she possessed.\n\nTed rolled his hips under the sensation of Kerri's feverish efforts for the next three minutes, a rapturous expression of torment and pleasure gripping his face at the marvelous image of our pretty college girl's auburn-topped head bobbing in his lap, artfully sucking his cock.\n\nIt was nearly unbearable for the rapidly succumbing man, and Ted did everything in his power to hold out, hoping to enjoy her warm mouth and swirling tongue for as long as possible.\n\nAll such thoughts were soon extinguished under the compelling onslaught, and his most ardent and only desire was now simply shooting his cum down Kerri's virgin throat. With that result in mind, placing his hand on the back of her head without applying undue pressure, Ted came, and he came really hard.\n\n\"AAAGGHHHHH!\" the elated client grunted loudly, spewing forth his first powerful jet of warm, thick cum flooding our unprepared daughter's suctioning mouth.\n\nWhatever her natural talents at coaxing the nasty load from his cum-laden balls, Kerri was untrained and unready to handle his copious outpouring. Uncertain whether to swallow or what, she did nothing, letting it fill her cheeks and panicking when suddenly the next blast hit, adding more viscous seed to her rapidly expanding mouthful.\n\n\"Ohhh, dear god, swallow me, little lady,\" Ted deliriously cried his ardor to anyone and everyone as a third burst of his virile cream spilled into her overflowing oral chamber.\n\n\"Mmmphh, mmmp,\" Kerri's muffled whimper of alarm and confusion drew a concerned look from Emma, as our unnerved daughter's eyes watered, and she choked a little.\n\nStartled and inexperienced, even if Kerri had known it was coming, she couldn't have handled the bountiful mouthful Ted's teeming balls pumped out. Emma watched anxiously as thick white ribbons of cum ran from the corners of our struggling daughter's mouth in stringy rivulets, dripping down her chin into his pubic hair.\n\nTroubled by the awful vision, Emma saw Kerri's absolute distress and indecision, so despite the shocking profanity of the sordid act, she assumed her natural role as caring mother by uttering outlandish words of instruction she'd never imagined passing her lips.\n\n\"Swallow it, Kerri. Just relax and swallow his cum. Let it run down your throat, so you won't choke,\" my concerned wife indecently advised our daughter, dispensing for the moment imparting Hank's admonition that his women never spill a drop of a man's precious seed.\n\nThankfully, the reassuring voice of her mother calmed Kerri before she completely freaked out under the continuous flow of foul jism pouring into her overfilled mouth, composing herself enough to gulp down the gooey mouthful built up from Ted's eruption.\n\nSensing the crisis averted as the glob of fertile jism slithered to her stomach, Kerri took Ted's glutinous semen down her throat more easily, one swallow after another. The salty fluid tasted funky at first, but that just made her try harder to swallow it quickly in working her throat double-time.\n\nEventually the flood of foul goo became exhausted, and with his large deposit now filling her tummy, Kerri dropped Ted's seeping tool, resting on her haunches gathering herself and catching her breath. Sublimely, her large, pointed tits rose and fell on her flushed chest, and the translucent strands of pearly cum overflowing her soiled mouth mixed with her saliva, draping her chin as a glistening coat of nasty fluids.\n\nOne look at our athletic daughter's sweet, freckled face and the unsightly male ejaculate gracing it, and I've no doubt a more perfect picture of half-saint, half-whore duality was never composed.\n\n\"Shit, Emma, your daughter's a natural. I mean, she really knows how to suck cock, especially for a rookie,\" a clearly winded Ted euphorically exclaimed in foul words no mother wants to hear about their adored daughter.\n\nKerri inappropriately blushed with pride at the much-traveled, sophisticated older man's praise, but Emma visibly blanched at the comment, and only weakly nodded her head in acknowledgement.\n\nIt was such an awful thing to say, as undoubtedly, a grown man telling a mother her precious college girl is naturally-gifted at cocksucking isn't exactly the life skill she wished to imbue on the verdant young lady embarking on the path to full womanhood.\n\nTed was certainly pleased with Kerri's performance, so Hank, perhaps feeling a sense of misplaced paternal pride, was also generally happy, giving our enervated daughter a moment to catch her breath before reminding her to finish the job.\n\n\"Kerri, sweetheart, a respectful cocksucker always cleans up when she's finished,\" he advised, but not too harshly, as it was a natural mistake for a novice young woman making her first attempt at giving head.\n\nStill, Hank enjoyed using the dirty name for what she'd just done while giving her the correction, as it also served a purpose, with my manipulative boss wanting our virtuous daughter thinking of herself as a cocksucker, especially since that was her immediate destiny, and there was so much more to come.\n\nEmma watched sorrowfully as our compliant coed extended her tongue and docilely licked the remainder of Ted's seed from her lips and chin, using her finger to scoop the little she couldn't reach and place it into her mouth as well. Then, Kerri subserviently used her tongue, mouth, and lips deferentially cleaning the drying semen from Ted's hairy stomach and pubic hair.\n\nThe distasteful act caused her to turn up her nose in a manner that could only be called 'cute,' but she soon dutifully returned to attend to his deflated cock and sagging scrotum, swallowing the remnants of congealed cum to join with the rest of his seed in her belly.\n\nHank knew it was time for praise, wanting to positively reinforce her lesson while cementing in her psyche her disgraceful new role and her acceptance of his orders.\n\n\"That was excellent, Kerri. Better than the first time your mother sucked me off,\" he added scandalously and quite unnecessarily, but he never stopped insulting the dignity of my wife, whether it was true or not -- particularly if it was useful in building Kerri's confidence in her abilities as a blossoming sex toy.\n\n\"You need to remember the eyes and the clean-up, but I loved that you didn't use your hands, and without even being told,\" he noted. \"A great cocksucker knows her hands are only for massaging a man's balls in milking his cum. That adds to the total experience.\"\n\nEvening was coming and Emma reflected on the events of the afternoon. Just yesterday Kerri was a bright, vivacious, forward-looking athlete and scholar in her freshman year of college -- learning interesting ideas and knowledge, meeting new friends, and generally dipping her toe into the vibrant water of young adulthood.\n\nBarely 24 hours later, my debased wife and our stunning coed were stripped naked in our own backyard for the entertainment of three dirty old men.\n\nWorse, our cheerful and apparently naturally submissive young daughter had taken her first step towards becoming 'a great cocksucker,' at least in Hank's considerable estimation, and Emma had unthinkably aided her descent into sexual servitude as a company fuck toy to my boss and Allenby Consolidation.\n\n'I'm doing it for our family,' my solemn wife repeated to herself with all the conviction she possessed.\n\nFor his part, Hank thought things were going well. Emma was firmly in the fold, our darling daughter was not far behind, and the company president had an evening of depraved activities planned.\n\n\"It's getting dark,\" he pointed out to everyone's acknowledgement. \"Let's go inside and get a bite to eat before returning to our evening's entertainment.\"\n\n**********************************\n\nHank had time on his hands and didn't want the evening to peak too early, not wanting to throw off his schedule of plans for his newly-acquired mother-daughter sex team. There was room for improvisation, but not too much, and he still had much work to do with Kerri to turn her into the obedient coed fuck doll he envisioned.\n\n'No harm in keeping young Kerri and her mother a little tipsy,' Hank figured, fixing cocktails once inside but staying careful not to let them become sloppy drunks.\n\nMy clear-thinking boss wanted them to lose enough inhibition to participate in the night's events without too vehement of opposition, but also not be oblivious to their subservience. They needed to know the demoralizing effect of his intentions and feel completely the humiliation of becoming unquestioning fuck toys.\n\nSeeing no need to put clothes on, Hank ordered Emma to prepare sandwiches in the buff for the group as a light dinner in the family den in what was merely one more weird experience for our famished daughter in a very unusual day. Kerri sat uncomfortably naked on the love seat next to Hank, while Ted, Ike, and Emma sat on the sofa with my curvaceous wife naturally wedged in the middle.\n\nThe food quickly consumed and the cocktails flowing, Hank returned the conversation to his favorite topic -- sex.\n\nThe men brazenly talked about women they'd fucked, how good their secretaries were at giving head, and even a story from Ike about a very religious, very white, and very married marketing rep he screwed 20 years ago at a conference on his climb up the corporate ladder.\n\nAs he related the story, the 34-year-old mother of three wasn't able to resist his big black cock any more than many single women less devoted to a husband and family.\n\nEmma was also a subject, with Hank improperly revealing more about Kerri's mother than a young lass should know, such that our poor damsel's ears were buzzing. My heartless boss regaled the group with stories of her on her knees in his office tending to a client, and also disgracefully getting double-teamed on the infamous yacht trip.\n\nMy blushing wife could have crawled under the sofa with embarrassment, and Hank didn't hesitate using crude and foul language in describing her adulterous acts, or mention how loudly Emma orgasmed whenever Hank, a stranger, or a client fucked Kerri's forlorn mother.",
        "The worst though, was Hank telling the story of how our neighbor Don Stanley shaved her mother's pussy while I watched meekly nearby and did nothing.\n\n\"Oh, mom! Mr. Stanley? I don't understand, um, he's always so nice,\" Kerri exclaimed with shock, as the Stanley's were good family friends she had known nearly all her life.\n\n\"I mean, seriously, he shaved your pussy? Right in front of dad? Did he have sex with you too? Does Mrs. Stanley know?\" Kerri asked a million unanswered questions.\n\n'Why did Hank have to tell Kerri about Don?' Emma thought, beside herself with contempt and dishonor.\n\nAs if to illustrate his stories of Emma's descent to the status of Allenby fuck doll, Hank pulled out a packet of 8\" x 10\" glossy color photographs from the cruise on the yacht. Discreetly, he sidled up next to our nude daughter, pressing his hip and thigh against her hip and thigh, and draping his arm around her shoulder to be sure she got a good look at his flaccid cock.\n\nKerri squirmed, but correctly allowed the inappropriate move by my boss.\n\n\"Let's look through the family photo album,\" the company president joked, proceeding to show Kerri several photos of her mother on the yacht -- in her scandalous bikini, the disgraceful dinner outfit, and sunning nude on the deck.\n\nMostly, he showed her fucking or sucking cock, including the egregious triple header by the gangway before we left the yacht at the end of the weekend, with her mouth wickedly alternating between Hank, Ike, and Ted. I was in over half of the photos, one or two in my cock cage, leaving Kerri stunned seeing me naked and perplexed by the device and not understanding its purpose.\n\nAll in all, the pictures did nothing to dissuade our impressionable daughter of the belief her father got off watching his beloved wife satisfying the cocks of other men. Sadly, it was a belief closer to the truth than she knew.\n\nThe goal of the stories and photos was to keep Kerri sexually aroused by tales of debauchery about her mother, leading her to believe her role as a submissive sex toy for men was acceptable, and even enjoyable. It also furthered Emma's moral derogation and humiliation in the eyes of our susceptible daughter.\n\nOf course, sitting naked in the family den with her mother and three nude men did nothing to detract from that perception, especially when Ted and Ike scooted closer to Emma on either side and made no secret of feeling up her inviting body.\n\nOn the right, Ted's hand absent-mindedly played with my pliant wife's sensitive nipple, lightly pulling, twisting, and teasing the wide bud, and then alternating to her big left breast to squeeze and lift the heavy melon. From the other side, Ike slipped his hand to Emma's mid-thigh, not staying long before letting his wandering fingers journey up the inside, and then openly pull her legs apart preparing to dive into her already warming cunt.\n\nEmma offered no protest, understanding there was no point in trying to stop these men from feeling her up in front of our daughter.\n\nIn fact, when Ike finally did slide his meaty palm to the top of Emma's hairless mound before slowly descending into the pink cleft and separate the awakening petals with a thick black finger the size of a small penis, her only response was to lift her leg up and over his knee granting the 60-something black executive full access to her moistening slit.\n\nPleased by her acquiescence, Ike slid his finger along the slickening breach, dipping into the dampening channel intermittently. Emma was embarrassed to be so tractable in the presence of our bedazzled daughter, but saw no use in resisting, despite the shame of Kerri seeing her mother meekly surrender to the demanding hands of the duo.\n\nSuccessful in thoroughly undermining Emma's dignity and virtue in Kerri's eyes, Hank now made the conversation about our captivated coed. Praising her newly-discovered talents, he subsequently encouraged her to be more accommodating like her mother, as a euphemism for submissive and subservient.\n\nAlthough not vain by nature, Kerri is still unsophisticated in such wiles and easily manipulated, pleased with the plaudits and attention, while Emma simply ignored the back-handed compliment as her two companions explored her body, but soon, the talk grew more intrusive and personal.\n\n\"Do you have a boyfriend, Kerri?\" Hank asked directly.\n\n\"No,\" our bashful daughter replied with a nervous giggle at the change in focus, oddly discomfited by the query considering she was totally naked in this group of old men and her mother.\n\n\"Oh, I'm sorry. I don't want to be politically incorrect. Do you prefer girls?\" he asked disingenuously, not truly caring since it didn't impact his plans for her future whatsoever but wanting Kerri on her heels with the forward question.\n\n\"No!\" Kerri snapped with a surprised yet certain response.\n\n\"Sorry, didn't want to offend. Well then, are you a virgin?\" Hank queried, cutting to the chase in his inimitable style, also to keep her off-balance.\n\n\"No,\" Kerri answered more contritely, confessing the truth hoping not to look the immature and inexperienced.\n\nThis time Hank was a little surprised -- not because he didn't think any guy, or gal for that matter, and some of her professors too, didn't want to tap Kerri's tight little pussy or play with her enticing chest. It was just that she appeared innocent in so many other ways, and he assumed that was one of them.\n\n\"More than one? Have a few guys nailed you?\" Hank probed crudely, falsely chiding her but truly just interested in her level of experience.\n\n\"No! Just Eddie, I dated him after I graduated,\" Kerri stated emphatically, before finishing.\n\nAs teenagers do, even at 19, our daughter sat slump shouldered in the sofa as Hank leaned in, quizzing Kerri as he casually placed his hand on her right thigh above the knee.\n\nOur wary daughter paused for a long moment, a questioning look filling her curious green eyes, but then allowed this move too, which was frankly quite tame compared to the two-pronged assault Ted and Ike were making on her mother on the sofa across the room.\n\nTed pulled Emma's other leg over his knee matching her left, giving Ike free reign over her bald twat.\n\nCompletely vulnerable to his explorations, the black executive wasted no time easily sliding his fat digit along her wet, widespread cunt lips, or dragging the finger upwards before digging the tip into her hardening clit making its first appearance from under its protective hood.\n\n\"Ummmmm,\" Emma sighed audibly, lolling on the sofa issuing a continuous breathy hum from her heightening state of arousal at the teasing of her body by the aggressive men.\n\nSurprisingly and against all the alarms of her usually protective maternal nature, my wavering wife listened to our daughter answer Hank's questions and only getting hornier, despite the information of the type a mother generally doesn't want to know.\n\nIt was a disturbing thought to be aroused by our na\u00efve young coed's sex life, but sex pervaded the air and talk of sex only fed her growing lust. Through dreamy green eyes, Emma watched Hank slowly working his ingratiating charms on Kerri, with the clear goal of feeling her up in a way most of her college classmates no doubt dreamed about.\n\n\"Do you play with yourself, Kerri? You know, masturbate?\" Hank asked indecently.\n\nKerri giggled again, then shyly nodded her head in affirmation of the embarrassing revelation.\n\n\"Do you like doing it? Do you do it a lot?\" he pushed, purposely making her squirm, and as he did, he calmly turned his body towards Kerri allowing his hand to slide farther up her thigh, with Kerri so flustered by the intimate question she hardly noticed.\n\n\"Yes, um, to both questions,\" she murmured her answer to the deeply personal inquiry after some gentle coaxing by her interrogator, flashing a mischievous grin.\n\n\"Do you think about guys when you masturbate?\" Hank pried further.\n\n\"Yes!\" our affronted daughter answered quickly, apparently wanting to reaffirm her heterosexuality.\n\n\"Anyone in particular?\" he pressed relentlessly, the private nature of the questions so invasive and indelicate they left her befuddled and uncertain.\n\nThese were a college girl's most intimate thoughts hidden deep in her inner sanctum, but Hank knew it was necessary in breaking down her barriers, and that once those were shattered, manipulating Kerri into her growing subservience would be exponentially easier.\n\n\"Scotty XL,\" she replied sheepishly, naming a hot young singer exploding on the music scene and the next boy toy flavor of the month in an unsurprising choice for a 19-year-old young lady.\n\n\"Do it now, Kerri, play with yourself right now, right here. Show us how you touch yourself,\" Hank said plainly, switching to his authoritative tone, with the pump now primed gaining her obeisance even at the expense of her dignity.\n\n\"I, uh, I can't do that here!\" our shocked daughter gasped aloud, vehement in her refusal to the stunning demand.\n\n\"Oh, c'mon Kerri, look at your mother. Ted and Ike are playing with her right in front of you, and I don't think she minds at all,\" Hank directed Kerri to her fallen mother slipping quickly into a world of euphoric sensuality.\n\n\"Mmmmm, unn, oooh,\" Emma cooed, writhing on the sofa as the two men taunted and teased her highly-stimulated erogenous zones.\n\nTed tweaked Emma's nipples harder, pulling and twisting the excited nubs harshly, and inflaming the pointed buds to extreme arousal responding to the exquisite pain of his pinching fingers. As he did, Ike focused his thumb on her wildly distended clitoris, while repeatedly plunging his middle finger deep into her eager fuck hole, effectively screwing her with his prick-like digit.\n\n\"Ummhh, uhhhhh,\" my wife mewled continuously, rotating her hips in a gentle roll immersed in her growing sexual fervor and subconsciously fucking the invading finger-cock, with her glazed emerald eyes fluttering at half-mast and her expression of unremitting lust unmistakable.\n\nIn this condition, Hank knew she'd do just about anything.\n\n\"Tell her, Emma. Tell Kerri to play with herself for us,\" he charged my wife, breaking her carnal trance just enough to fulfill the unmotherly task of telling our bashful daughter to masturbate in front of the group of attentive older men.\n\n\"Huh-huh, it's o-okay, honey. It'll be fun. Ummm, just show Hank how you play with your, uhh, your pussy,\" Emma invited deplorably between panting breaths, broken from her besotted reverie by his commanding voice, then easily slipping into her excited fog with the job complete.\n\nBy now, Hank's road to depravity for our imperiled beauty was sadly not the most important thing on Emma's mind, but with an anxious look in her eye, Kerri clearly wasn't sold on the idea.\n\nFirm and unrelenting, Hank insistently pulled at her inner thigh, separating the knees a foot and a half. Weakened by her self-doubt and embarrassment, Kerri didn't fight hard, even though her superior leg strength as an accomplished athlete could easily hold him at bay.\n\nExercising only a little restraint against the move, she ultimately surrendered, just as her mother had to Ted's prying hands in the spa on the yacht, exposing her feminine gateway between her wiry legs. For the first-time, my excited boss got a truly close-up look at our 19-year-old teen's marvelous, nearly virginal pussy slit.\n\nKerri's vagina was the most perfect exemplar of womanhood he'd ever seen, with the curve of her mound covered by light, downy auburn curls, and the light pink labia knit delicately together in a tight seam. To the jaded old pervert, Kerri's little snatch was a pristine peach that could only be called dainty.\n\n\"Oohhh, unnnhh,\" Emma droned on in erotic bliss, overtaken with sexual excitement and lost to the skillful hands of Ted and Ike on her pussy and tits.\n\n'This is all so strange. How did everything I know about mom change so radically? And so quickly?' our puzzled coed questioned, fascinated and also unnerved by her mother's rapture.\n\nOne thing was certain to our intelligent coed -- she was on her own, sitting naked in our family den next to a man old enough to be her grandfather copping a feel of her bare thigh and telling her to masturbate for the entertainment of himself and his two recently introduced companions, each sporting semi-hard erections.\n\nUnder this onslaught of sex and surrender, Kerri slowly slipped her hand over her flat, six-pack tummy to the top of her fuzzy mound, entangling her slender fingers in the soft auburn hairs, before extending her middle finger to glide lightly over the closed entrance to her cunt.\n\nSuch a display before others was extremely difficult for any insecure young woman, and our shy daughter was no different, with only the alcohol and Hank's pressure guiding her hand.\n\nClosing her eyes and shutting out the world, Kerri imagined Scotty XL sneaking into her bedroom late at night, romantically seducing her and making her fantasies come true, while silently drawing the slender digit gingerly up and down the exterior of her vaginal opening, with her lithe legs spread wide for her beaming audience to gaze upon our delightful coed at play.\n\n\"Mmmmm, ooohh,\" her eroticized mother's murmurs in the background were impossible to remove completely, slowly turning to throaty moans with the gentle rolling of Emma's broad hips in sync with Ike's finger-fucking, and gradually changing to subtle jerking motions.\n\nA minute or so of light stroking left Kerri feeling the first twinge of excitement in her pelvis, recognizing the initial signs of her arousal and separating the glued petals, parting the dewy pussy lips with her finger to languidly run the tip along the ruffled edges.\n\nHank stared without blinking as our daughter's pink interior became available to his wondrous eyes, but Kerri blocked the leering man from her mind as best she could, focused only on her own stimulation.\n\nKnowing what she liked and how to get it, our gradually entranced coed continually worked her finger up and down the expanding chasm, employing a second digit to push the two swelling lips apart and delicately dip her middle finger into the breach, moistening it with the slowly increasing fluids building there.\n\nBy now Hank's cock was fully hard, and he felt certain Kerri was far enough along to advance his plan. Unable to wait any longer, he discreetly placed his palm on her firm right tit, catching his breath momentarily at the pleasure of groping her lovely breast.\n\n\"This will help,\" he whispered confidently with gentle assurances rolling off his silken tongue honed from years of business dealings, hoping not to frighten her as he correctly suspected she'd never had her boob touched before, except once over her sweater by Eddie.\n\nKerri's jello-y tit felt amazing, its surface baby soft with the tender skin developing conspicuous goosebumps across its pale surface instantly as he came into contact. Hank's intuition was right, and Kerri didn't react to the man touching her naked breast.\n\nEncircling his fingers around her light rose areola, Hank settled on the tip of her nipple itself, with the bud already excited and hard, and repeated the move with her left tit, also set equally firm and aroused.\n\nThroughout, Kerri played between her splayed cunt lips, now engorged and in full bloom, drifting deliberately upward to find the hooded cover of her clitoris. As she did, Hank's toying with her marvelous tits grew more aggressive and familiar, reaching beneath her big right breast and lifting from the base, supremely enjoying its generous size and weight.\n\nHank was undeniably in heaven, as our youthful college girl's large tits felt every bit as good as they looked, and while the compact pair weren't quite as big as her mother's huge jugs, they were incredibly buoyant and heavy in his palm.\n\nExperienced with the varying shapes, sizes, and consistency of women's breasts from years of dominating the unfortunate wives and female employees falling under his control, Hank intuitively sensed the difference between the fatty tissue of Emma's giant melons, and the pure gland of our daughter's wondrously dense globes.\n\nWatching Kerri spread her sinewy stems on the love seat exposing her luscious pussy spurred Ted to seek his own release. So, tired of simply playing with Emma's remarkable breasts, as spectacular as they are, the old businessman raised himself on the sofa to level his steel hard cock with my submissive wife's mouth.\n\n\"C'mon, doll, show your sweet daughter a thing or two about giving sucking cock,\" Ted beckoned shamefully, drawing Emma's head to his stalwart pole, who was too far gone to do anything but part her lush red lips and willingly accept Ted's long staff inside the soft orifice.\n\nDisturbingly, growing accustomed to taking on large cocks with each new insult to her decency, Ted's impressive shaft slipped easily to the hilt between Emma's stretched jaws.\n\n\"Muolk, ugk,\" she gurgled reflexively when the flared head popped into her throat with only surprisingly modest effort as her plush lips wrapped around the thick stalk.\n\nThe powerful businessman and influential client began a smooth rhythmic fucking of Emma's pleasurable mouth with deep, even strokes as his hand loosely gripped her ever-present ponytail as a rein. As he did, Ike wormed his finger deeper into her wet channel, occasionally poking and teasing her swollen clitoris then returning to her soaking fuck hole.\n\n\"Mummm, mmmh,\" Emma hummed around the pillar of white cock meat sawing her mouth as her black lover actively drove her arousal skyward with his talented fingers in an interracial trifecta no doubt startling to our sheltered daughter, at least had her eyes been open.\n\nKerri's eyes were still closed, however, and by this point she'd drawn out her own precious hidden gem, swirling her fingertip exclusively on the energized little bud sparking it life and using her increasing juices in lubricating the sensitive sex button.\n\n\"Huh, whew, hmmm,\" Kerri's breathing grew deeper and came more quickly, with Hank zealously aiding her efforts, squeezing and kneading her malleable tits as if bread dough in the hands of a baker, and then attacking her inflamed nipples until she was panting and her pelvis squirming erotically on the seat cushion.\n\n\"Huh, huh, uh,\" our intoxicated coed grew more susceptible to her own ministrations, sliding her slim butt further down the love seat and spreading her legs wide for better access presenting an enticing picture of indecent lust.\n\nLosing herself in her erotic state, Kerri grew wanton and carnal, so unlike the sweet daughter we know and love, apparently no longer concerned about the leering eyes of my boss, his associates, or even her mother.\n\nThe wiry strength of Kerri's athletic legs was on vivid display, her tendons pulled taut with her tanned thighs widely parted as she fingered her tumescent clit with abandon. Our faltering daughter's breathing was hard and pronounced, and her hips gyrated to the growing stimulation generated in her progressively heated cunt.\n\nGradually, Kerri built herself to her inevitable climax with dreams in her impassioned mind of Scotty XL doing who knows what to her body.\n\n\"Hmmmmm,\" she sighed, her pre-orgasmic haze the sign Hank needed to make his next move.\n\nI know Hank pretty well, and even better in the weeks since my wife's sexual submission to his every lewd command. I'm certain he wanted to feel our 19-year-old teen's wet snatch squishing around his cock so badly the prospect was nearly irresistible.\n\nInstead, my judicious boss decided to wait, opting to taste the fragrant pussy juice generously flowing from the blossoming folds of Kerri's fuzzy pink peach, feeling certain she was too far along to resist anything he tried to do with her body. With his goal set, the smiling sonofabitch dropped off the couch to his knees before her spread thighs.",
        "Kerri didn't even notice, and Hank gleefully enjoyed watching her vigorously work her excited pussy for several moments from mere inches away, stretching the swollen lips of her puffy labia and sliding her fingertips feverishly over the elongated bud of her clitoris.\n\n\"Ohhh, ohhh, unnh,\" our 'lost in a fantasy' coed moaned aloud, obliviously driving herself towards an escalating peak.\n\nHesitating no further, my anxious boss placed a hand on the inside of our succumbing daughter's quivering knees and parted her toned thighs further. Her eyelids were closed but her green eyes beneath flicked dream-like with her imaginary lover, immersed in her own pleasure and barely noticing Hank's absence from her tantalized breasts.\n\nKerri rubbed her rigid clitoris vigorously, and Hank gazed hungrily at the inflamed pink pussy before him, now slick with her wetness and surrounded by soft, thin auburn hair.\n\nThen, he waited no longer, flicking his tongue lightly on the fat juicy labia lips, open in unknowing invitation. Teasing the slickened flaps lightly with just the tip, Hank inhaled gratefully the enticingly fresh aroma of her arousal, savoring the salty sweet essence generated between her legs, but Kerri still didn't appear to notice.\n\nAt least, not until my emboldened boss licked fully across the flared petals with the flat of his tongue, slurping up the dew collecting in greater amounts on its glistening surface.\n\n\"Awwhhhhh!\" she exclaimed as her emerald-green eyes shot open to utter the audible gasp and attempting to pull her legs back together out of instinct.\n\nHank's upper body was firmly lodged between and wouldn't budge. Insistently, he planted another swipe across the entrance to her pussy, dipping his tongue shallowly into the opening to draw more flowing juice into his mouth.\n\n\"Ohhh, Mr. Allenby! Ohhhhh!\" Kerri yelped with confusion to the introduction of Hank's tongue into her prized feminine gateway, not surprisingly, never experiencing the remarkable sensation of a tactile, active tongue exploring her tender vaginal entryway, and especially the divining tongue of an older man.\n\nEven in her lust-induced fog, the sudden high-pitched exclamation got Emma's attention. Drawing her mouth momentarily off Ted's hard cock, my unsettled wife watched helplessly as Kerri's fifty-something tormentor buried his face between our traumatized coed's lewdly splayed thighs.\n\nSitting on the sofa armrest, Ted quickly returned Emma's mouth to gamely sucking his solid staff. As he did and taking advantage of her inebriated distraction, Ike, raised my compliant wife into a suitable doggy-style position for penetration by his large black cock, gazing with fascination as Hank gave Kerri's precious cunt its inaugural tongue bath.\n\n\"Mummph, mmp, munnh,\" Emma mumbled around the meaty girth of Ted's cock while accepting Ike's thick lance deep into her fuck sleeve in one smooth, piercing motion.\n\nHank was now in control of our young daughter, removing Kerri's fingers from her feverish clit leaving the tender morsel undefended against the probing tip of his beguiling tongue. He had a goal in mind, intending for our sweet teen to orgasm magnificently in a way her fingers could never accomplish.\n\nApparently, Hank always enjoyed eating pussy and prided himself on his ability. He loved how a woman willingly presented her most treasured gift to the manipulations of a talented tongue -- man or woman's, as the sensations created overwhelmed any residual moral reluctance.\n\nMy lascivious boss wanted to take our daughter to that place -- to where she would happily spread her lithe legs surrendering her most cherished possession to the ravishment of her lover's tongue and ardently seek the sexual release she desperately needed.\n\nSpying Kerri's clit poking from its hidden den anxiously awaiting the return of the stimulus he'd removed, Hank touched his tongue gingerly to the susceptible bud, swirling and twirling around her hardened clitoris while applying just the right amount of pressure sending Kerri a signal of his intentions.\n\n\"Ooooohhh!\" she jumped and sighed, reflexively driving her hips against Hank's mouth, never before feeling anything quite like it.\n\nHank's tongue was soft and wet and warm -- nothing like the sensation of her fingers. Squirming and wiggling and teasing her exquisitely sensitive little flesh pearl in a manner she'd never imagined, the assertive company president remained reliably constant, pushing against the nub until our young coed issued a carnal, high-pitched plea.\n\n\"OOOHHHHH, MR. ALLENBY!\" she squealed, almost hurting his ears.\n\nIt was almost too much, and Kerri weakly pushed on Hank's shoulders, unable to endure the overpowering sensations provoked in her antagonized clitoris, and also unable to dislodge his burrowing tongue. A wave rolled over her frantic nerve-endings, and she greatly needed the stimulus to stop before her worked up mind became overwrought.\n\n\"It's too much, ahh, stop! It's too strong,\" our flustered daughter protested insincerely, secretly relishing the antagonizing contact despite herself.\n\nExpert that he is, Hank read our young lady's reaction perfectly, only encouraging his efforts. Slipping his tongue into the yawning furnace of her steaming pussy, my libidinous employer affirmatively ventured into the deep recesses of her incensed twat, launching a vigorous pumping of his tongue into Kerri's spastic cunt hole and practically fucking her with the curled appendage.\n\n\"Aahhh, aahhh, ohhh,\" she moaned in panting breaths, feebly working to keep him at bay by pushing his shoulders without effect, fruitlessly hoping to maintain some sense of composure in a battle she was rapidly losing under the assault of the older man.\n\nHank quickly returned his attention to Kerri's neglected clit, swabbing it with his tongue and driving her to heights she'd never known existed.\n\n\"Uunnh, ohh, please, nooo more,\" she begged unconvincingly, her toned body convulsing with the orgasm building between her legs.\n\nHank's dancing tongue was electrifying, sparking her nerves to nearly unbearable peaks. Kerri wiggled and rolled her hips under his unstoppable onslaught, desperately striving to get away from the attack on her agitated flesh before she completely collapsed emotionally.\n\n\"AAAHHH, OHHHHH, PLEASE STOP! IT'S TOO MUCH!!\" she cried louder, as Hank doubled-down on his clearly-effective technique, driving hard at Kerri's palpitating clit.\n\nUncaring about appearances, our consumed daughter lifted her torso reflexively, arching her back and squeezing her strong thighs around his head while Hank licked, nibbled, tweaked, and sucked her reactive sex button with everything he had. Even as his tongue grew sore and his breathing difficult, he remained constant, unconcerned by the stranglehold she employed holding him in place.\n\nKerri's face flushed and her body sweated profusely, eyes mad with desire as her mouth locked into a permanent 'O' moaning continuously with each flick of Hank's tongue. Finally, the dam burst, and she vigorously bucked her hips against Hank's mouth, contracting her butt muscles fiercely and ramming her aching clit against the source of her defilement.\n\n\"AAAAAWWWWGGHH! OOOOHHHH, OOOOHHHH, OOHHHH MMMYYYYY!!!\" she bellowed in an animalistic tone no one knew she was capable and came hard, leaving her throbbing clit pressed firmly against the tongue of my boss in as obscene an image as one might ever hope to witness.\n\nLoud and unrestrained, Kerri's climax filled the room with her passion and once again drew the attention of Ted and Ike as they double-teamed my wife on the couch. Emma managed to turn her worried eyes towards Hank and Kerri, even while still working feverishly on Ted's raging pole, but managed no other response.\n\nA river of fresh cunt juice flowed into Hank's mouth, but he remained steadfast, relishing her youthful taste in an opportunity rare even for him. Teasing her over-stimulated clit persistently and divinely taunting the sensitized nub throughout, Hank initiated wave upon wave of stimulus coursing through her spastic body, intent on keeping her at her peak as long as possible.\n\n\"Uuunnnhh, hunh, awwgghhh!\" Kerri gushed, her orgasm rocking her fit body head to toe from its source in her clitoris to her legs, torso, nipples, and fingertips.\n\nThe power of the eruption swamped her mind with erotic stimulus, enticingly sending our quaking daughter's big jello-y tits undulating violently across her chest with splendid appeal.\n\nUnsatisfied, Hank wanted Kerri to have not just one mighty orgasm, but several, with each powerful enough to blow out anything she'd previously experienced. Cunningly, his plan was for our susceptible college girl to love cumming on the tongue of an experienced man, or woman too.\n\nHe wanted to break down another barrier to her ultimate descent into sexual servitude, developing within Kerry a growing love of sex and the pleasures it brought as an excellent tool to that end. Judging from our euphoric 19-year-old's high-pitched squeals, it was working, and our family had taken another step towards its complete debasement and total downfall.\n\n\"Uhhmmm, mmm,\" she mewled her contentment a moment later as eventually the orgasm dissipated and her breathing slowed to a heavy pant, with her head lolling about and her moans echoing in the room.\n\nKerri's enchanting green eyes were set watery and at half-mast, staring bleary-eyed at the top of Hank's bald head between her trembling thighs, until gradually, he eased off her saturated pussy, lightly licking the petals with directed flicks of his tongue tip calming her down.\n\nStill, he wasn't done, and on the contrary, had our exhausted youngster just where he wanted.\n\nDazed and frazzled, Kerri slowly came down from the most unbelievable climax she had ever experienced. Our depleted coed's ripe body rested limp and covered in sweat, with her nipples hard with excitement while her fingers and toes clenched from the residual buzzing of the event.\n\nConveniently, Kerri's tight ass slipped off the edge of the sofa during her rapture, spreading her slack thighs indecently and wavering weakly with feet planted on the floor as he pulled from between her legs. Now was the time he waited for to pounce.\n\nIt was true that under the terms of our deal Hank could just take our daughter, coercing her as he had her mother -- blackmailed into sex in his office weeks ago. He astutely recognized in her current condition Kerri was debilitated and unable, or perhaps unwilling, to put up much of a fight should she decide to renege on her participation in our family's lamentable arrangement to stay together.\n\nEven then, my highly-particular boss wanted to use seduction in breaking Kerri to his will and her service, knowing from experience pleasure accomplished that task better than brute force. He intended for our daughter to enjoy sex, and even crave it, despite any guilt or embarrassment she felt as he stripped away her veneer of propriety by demanding more and more from her mind, body, and soul, just as he had her mother.\n\nUltimately, he wanted Kerri to need, and even thrive, on the lust and humiliation of submission and servitude, and readily accept her sexual use by strangers and friends alike, men and women, while subservient to Hank's commands.\n\nKerri's nubile body, firm tits, soft skin, and tender pink pussy, were completely vulnerable and available, stirring Hank's cock to life after the marvelous blowjob by Emma in the backyard. He was hard as a rock and didn't want to waste time or opportunity.\n\nBefore collecting herself and her modesty; before regaining her awareness of lying naked in the family den; before the embarrassment of cumming with abandon in a room of virtual strangers set in; and before she truly fathomed seeing her mother sucking and fucking the cocks of those same strangers only feet away; Hank slipped between Kerri's spread legs intent on claiming his prize.\n\nWaist high with stiff cock in hand, the anxious businessman placed the broad tip of his flaring crown against the gaping portal to Kerri's slick, vulnerable pink gash. Grasping her slender hips with a firm grip, 55-year-old Hank Allenby powered the length of his long shaft deep into our 19-year-old beauty's steaming fuck hole.\n\n\"Uuunnnggh, wh-whaaat?!!!\" Kerri exclaimed, leaping from her reverie -- shocked and caught completely off-guard, with her vibrant green eyes popping wide with alarm and her torso pulling from the couch.\n\nInadvertently, but Hank's marveling gratitude, her startled reaction sent her big jugs dancing wildly across her chest, granting a delightful vision he instinctively knew would never grow old.\n\nThe engorged shaft filled her to the limit and opened her wide between her legs, but it wasn't just the surprise of his assault, but also that our once-tried daughter had never felt anything so long and thick in her pussy in her life. It certainly didn't feel this way when Eddie took her virginity, of course, he wasn't sporting a solid 8\" of rock-hard cock.\n\nFor the first time in her life, Kerri's underused cunt was stuffed full and split asunder.\n\n\"Ohhh, please! Uhhh, Mr. Allenby, I, uh, I can't!\" she implored without thinking.\n\nKerri's smart, and while inexperienced at sex, she isn't that na\u00efve. Intuitively, she understood this sordid act was coming from the moment her mother told her to wear her sexy black bikini earlier in the day. Still, her natural response was an ingrained need to protest, with the reflex lingering in her psyche from her traditional moral upbringing.\n\n\"Ohhh, yes, that's a nice tight snatch,\" Hank crowed his satisfaction as his sturdy cock stayed planted in our panicked daughter's narrow channel, pleasantly surprised finding her pussy even tighter than he expected.\n\nTruthfully, it was only the residual arousal from Kerri's earlier orgasm permitting him to glide so fully into her warm sheath in one fluid stroke. Now, the soft folds of her inner walls enveloped his shaft, indescribably hugging his cock as his perceptive crown blazed a trail into the undiscovered country of her dark fortress deeper than Eddie ever ventured.\n\nAlways thinking of the best way to conquer a woman, and as good and as snug as Kerri's exceptional cunt felt with his shaft buried to the hilt, Hank resolved overwhelming our unworldly lass from the inception with several forceful strokes was the best way to break her to the will-shattering might of his cock.\n\nOnly after that did he plan on easing into a more rhythmic fucking of our adorable daughter.\n\nBamboozled by the suddenness of his move, Kerri struggled comprehending what was happening, flailing her head in response while unable to dislodge the thick staff filling her vagina as he firmly held her hips.\n\nStrenuously withdrawing his long shaft to the rim of his swollen cockhead, Hank unceremoniously plowed all the way into her unresisting depths again, gaining the hysterical reaction he desired so thoroughly in taking Kerri for the first of what in intended to be many times in the future.\n\n\"Uunngghhh!\" another gasp flew from our wavering coed's distorted lips.\n\nPleased with her demonstrative if not entirely accepting response, Hank thrust again, and again, and again in rapid succession, each staccato drive eliciting a similar excited and confused utterance.\n\n\"Hhhuuuhh, aaawwggh, ohhhhhhh!\" Kerri groaned passionately for all to hear, immobilized under Hank's slight body with her arms braced on her elbows holding her torso aloft while her unbelievable tits rolled about her flushed chest in time with each stroke of the man's truly big and truly hard cock.\n\nBy the fifth plunge of his rigid shaft entirely into our yielding college girl's slickly gushing pussy, Kerri's arms gave out and her body crashed onto the cushion. Hank's wiry grayish hair intermingled in tangled confusion with her own downy soft auburn pussy curls, smashing his pubic bone against her own.\n\n\"Ohhhhh, mmmh,\" she sighed in surrender, her body sapped from the powerful orgasm she'd already experienced from Hank's skilled tongue.\n\nEven as an accomplished athlete, Kerri simply didn't have enough fight to resist the serious pounding my steadfast boss imparted in the opening salvo of his assault on her virtue. The generous length and girth of Hank's burrowing shaft was unlike anything she experienced with Eddie, sparking nerve endings deep in her interior she hadn't known existed.\n\nThe erotic sensations enveloped her young body, igniting lights and triggering synapses in her head with pangs of pleasure and throes of lust so superb she wasn't emotionally prepared to handle them. In combination with the embarrassing sight of her compromised mother and her two laboring partners was simply too much.\n\nSeizing the moment, Hank slipped a forearm beneath each of Kerri's muscular butt cheeks and in one strenuous motion lifted our robust daughter's lower frame fully onto the couch, shifting her body to lay length-wise in a classic missionary position with Hank on top.\n\nImpressively, his hard cock never left the snug sheath of her slowly accommodating fuck channel.\n\nNow, set with hands extended on either side of our recumbent daughter, Hank soaked in the fresh, freckled face of our splendid coed -- appreciating her youth, beauty, and innocence as her darting, emerald eyes stared back questioningly.\n\nKerri's magnificent chest rose and fell with each breath, and her girlish bangs set pasted wet with sweat to her forehead as she nervously wondered what this old man would do next.\n\nWith my mid-50's boss and our sweet angel face-to-face, Hank caught her frightened eyes momentarily before lowering his mouth to her lips forcing a kiss.\n\nUnprepared, she abruptly turned her head to the side but was pulled back by his strong hand on her trembling chin and pressuring her jaw muscles in demonstration of his power, Hank dipped, once more slipping his probing tongue into her unwilling mouth.\n\nWith little resistance, but also without reciprocating, Kerri reluctantly allowed his tongue to roam freely, even letting him dart and tango with her tongue without response. Satisfied with her tolerance, Hank dropped onto our cowed daughter, resting on his elbows and pressing his hairy chest against her upright tits, drilling her diamond point nipples into his skin.\n\nHank was now in total control, and in a much more effective and comfortable position to finish off our tenuous but relenting darling, completing her final submission to his shameful demands on her way to assuming her place as the accommodating coed slut he expected for his and the company's benefit.\n\nKeeping the initiative, Hank again withdrew the length of his long shaft from Kerri's slippery tunnel with her delicate pussy lips clinging ardently to the glistening skin of his cock with each inch. Calculatingly, with a practiced motion he smoothly sliced the entire length of his spear back into her waiting cunt.\n\n\"Huhh, uuuuuhhh,\" Kerri inhaled harshly, catching her breath and releasing a low, involuntary whimper as inch after inch of her mature lover's impressive cock filled her once more.\n\nEmma heard Kerri's sigh, noting her pink painted toes curl and wiggle just a little, knowing from experience what our daughter was feeling. She understood that Hank is a bastard -- heartless and depraved. She also realized his supreme ability to fuck a woman into submission, riding her until breaking down her barriers with his insistent cock.\n\nMy sympathetic wife recognized from her reaction our young Kerri was no different, and that experienced or not, she'd reach ecstatic heights she never before attained as he hammered her senseless until her body inexorably surrendered to the unrelenting pleasure, regardless of how hard her mind and soul resisted.\n\n'My baby girl,' she cried a silent tear at our adult daughter's coming destruction, even as Ike gave her own cunt a solid pummeling, with her lips tirelessly affixed to Ted's insistent cock sawing regularly into her velvety mouth.",
        "Her lust-driven delirium aside, Emma disconsolately accepted that Kerri was on the path to depravity and servitude, soon to join her mother as a corporate fuck toy to Hank and his demented desires. Even then, after everything she'd experienced herself, as yet my jaded wife had no idea of the depths of Hank's perverse dementia.\n\nHank now wanted to close the deal, gripping Kerri's broad shoulders for leverage initiating a regular, steady pace, pushing into her narrow, glove-like channel and sinking the full span of his stiff pole into her the sweltering cauldron of her boiling hot pussy.\n\n\"Unngh, jeez Kerri, you're a sweet fuck,\" he crudely remarked, marveling at the sumptuous feel of her inner walls grasping involuntarily at his rigid shaft with each retreat, trying desperately to hold on to his overpowering tool.\n\nHank kept this pace and motion going for an impressively long time for an old guy, all the while gazing directly into Kerri's wondrous green eyes staring back mesmerized, as if the rhythm of his fucking was a hypnotic timepiece.\n\n\"Your cunt is unbelievably tight,\" he praised thoughtlessly and uncaring for her feelings, enjoying the snug fit as it enveloped his lengthy staff.\n\nSince Emma swallowed his first load just a few hours earlier, Hank was confident he could control himself long enough to bring Kerri off at least a couple times, regardless of how incredibly turned on the act of screwing such a beautiful and appealing young woman made him.\n\n\"I never imagined the Tyler's pretty daughter was such a fantastic ride. Damn, you're going to be a helluva deal closer,\" he joyously derided to her face, especially aroused knowing her besieged mother was nearby as a helpless and hapless witness to her oldest child's defilement.\n\n\"Huff, huhh, hehhh,\" Kerri huffed deeply when Hank bottomed out, touching her cervix and grinding his pubis against her own, then issuing a soft moan with each frustrating withdrawal.\n\nAs Hank invariably picked-up his pace, Kerri's breathing increased with it, growing heavier and more pronounced.\n\n\"Unnhhhhh, ohhhhh, awwwhh!\" her ragged panting grew heavy and pronounced with the accompanying moans deeper, longer, and more frequent.\n\nThe sound was a constant companion to the mismatched pair's increasingly vigorous fucking, and the rocking motion of Hank's strenuous thrusts were met by the recoiling of our daughter's muscular pelvis absorbing the weight of his hips, rolling and lifting, pushing herself onto him as he retreated.\n\nEmma had her own cocks to service, so it became necessary to put Kerri's ravishment in the background and return her attention to Ted's hard lance spearing her overstretched lips, matched by the drumbeat of Ike repetitively skewering his fat black shaft into her other set of overstretched lips.\n\n\"Unngghhhhh,\" Ted grunted at my wife's oral efforts.\n\nKerri's moans rang in her ears as Emma sadly looked up at the gray-haired Allenby client, his own focus on the May-December lovers on the couch and barely paying my lovely wife heed as she diligently worked his tensing pole.\n\nUnremittingly, Emma took the entire length of Ted's thick tool into her mouth pressing to the entry of her throat, forcing a groan from deep in his diaphragm. Her maternal sorrow aside, she was on the verge of an orgasm herself as Ike's piercing tool did its work.\n\nAlthough familiar with Ike's big cock from our trip on the yacht, Emma spent the first ten minutes of his fucking simply adjusting to the unbelievable girth of his large tool. It took everything she could muster accommodating it, and even then, she was stretched to the limit and unable to handle the entire length.\n\nTed's veined staff slid in and out of Emma's circled mouth at a regular pace, with my wife determined to make him cum sooner rather than later, swirling her tongue around his spongy cockhead whenever he pull back, slathering the sensitive crown and applying additional suction with her trailing lips along the engorged shaft.\n\nIt was difficult for Emma to stay focused on the cock in her mouth with the distraction of Ike's huge dong plundering the depths of her pussy, but soon her efforts had the necessary effect on Ted, excited watching his benefactor Hank pound the upturned cunt of our beautiful 19-year-old daughter writhing and moaning beneath him.\n\nIke was equally turned on by the sight of our mutual boss and his friend screwing our sensuous coed, doubling his efforts in her mother's elastic fuck hole and gripping Emma's broad hips within his strong hands, hammering her from behind with greater urgency.\n\n\"Unng, unhh, arggh,\" Ike grunted loudly with carnal fervor as each thrust landed with a decided slap against Emma's plush ass cheeks and reverberating melodically throughout the den.\n\nAfter a few more minutes sliding between the cock in her mouth and the powerful fuck tool slamming into her pussy, as the sofa creaked and Emma's giant melons swung violently beneath her chest, Ted finally came with a howl.\n\n\"OHHHHH, FUUUCCCKKKKK!\" the ecstatic mid-sixties executive cried his passion the moment my unprepared wife unfortunately pulled away from his cock, shooting a thick rope of creamy white cum squarely onto her nose, lips, and chin.\n\nSurprised but nimble, Emma recovered quickly and soon had the spurting head of the older man's prick reattached to her lush lips, receiving his frothy load directly into her mouth and letting the salty goo slide down her throat with each pulsing jet.\n\n\"Mmmupphhh, muunggh,\" she gurgled audibly, gamely accepting Ted's abundant spunk into her mouth and draining it to her waiting stomach.\n\nNow, it was Emma's turn to cum, as Ike abused her sopping cunt from behind, driving his shaft deep into her distended sleeve with rapid, powerful strokes sending her tremoring into a mighty climax spreading from the innermost reaches of her pussy throughout her torso.\n\nIt was an impressive feat that she continued swallowing Ted's flowing cum while shuddering through her own orgasm, with her luscious lips tightly sealed around his spewing cockhead.\n\n'Mmmrrggh, muunnpphh,\" she mumbled around the tight seal of his flared rim as the waves of orgasm rolled through her convulsing body and the bursts of jism poured into her mouth, but all the while keeping her sultry green eyes on Ted's in the manner of 'a great cocksucker,' as Hank appreciated.\n\nSeeing the mature housewife and mother gyrating in ecstasy before him while still accepting the batch of viscous jism from Ted's cock into her belly was all it took to propel Ike to his own crescendo. Planting his thick black staff deeply into Emma's gripping fuck tunnel, he burrowed deeply until the tip pressed against her cervix and erupted with a fountain of virile seed drenching her cavernous pussy chamber.\n\n\"AARRRGGHHHH!\" Ike bellowed mightily, his characteristic deep grunt taking over the room as sweat poured from his brow and muscular body.\n\nThe girth of Ike's shaft sealed Emma's elastic labia like a drum, enveloping the invading shaft allowing none of the black man's vital semen to escape as he remained in place, mashed against my enervated wife's meaty ass pumping burst upon burst of warm, fertile cum into her vagina.\n\n\"Ahhhhh, annhh, ahhh,\" Kerri's squeaking yips of eroticism chirped throughout the orgiastic crest by her mother and the two satiated men across the room, with Hank riding our ecstatic daughter with increasing vigor.\n\nMy much older boss strained maintaining a solid rhythm ramming his full eight inches of steely cock meat into the innermost reaches of her pussy, while our resilient daughter's rapacious maw rose furiously, consuming his hard tool with each downward plunge.\n\n\"Nuuggghh, uuugh, oh, oh, ohhh,\" Kerri panted harshly as Hank nailed her to the couch, their bodies shining with sweat from the mutual effort of their fucking, wantonly wrapping her muscular legs around his flexing hips, purposefully seeking a better angle for even deeper access to the hidden folds of her hungry pussy.\n\n\"Unngggh, ummggh, aggh,\" her lewd groans turned to bestial grunts snorted through her flaring nostrils, using her superior athleticism in keeping up with Hank's voracious appetite as he pursued his demonic goal of breaking her will and capturing her ripe body.\n\nRelieved of their own need and regaining some clarity of mind after their triple orgasms, the adulterous trio of Ted, Ike, and my wife on the sofa now turned to our young coed and the older man on the couch, with the three holding frozen in their positions of sexual denouement.\n\nNaked on the sofa of our family den on all fours, my late-30's suburban wife, her heavy jugs swaying obscenely beneath her panting torso, held the shrinking black cock of the most senior executive at Allenby Consolidation buried deep in her pussy.\n\nIke's deflating shaft created a gap such that the pearly white cum he'd just deposited spilled from around his meaty stanchion, flowing from her swollen cunt lips, saturating the cushion below.\n\nEmma's green eyes stared in marvel at the couch, where my 50-something boss screwed our angelic daughter ferociously, while Allenby's best client, 60-something Ted Jenkins' softening cock fell from her lips leaving a stringy strand of glutinous cum dripping disgracefully from her lips and chin.\n\nWhite-knuckled, my vanquished wife's fingers fiercely gripped the edge of the sofa, setting her gold wedding band on ever-present display as illicit white ooze drained from her pussy puddling beneath her indecently splayed thighs in a bizarre mother-daughter moment rarely experienced by most families.\n\nWith a mix of perverse fascination and heartbreaking sorrow, Emma gazed remorsefully as our lively, hopeful 19-year-old coed lay on her back with legs mightily gripping her lover's waist getting thoroughly fucked by my hardworking, degenerate employer.\n\nKerri's legs embracing Hank's mid-section granted Emma an unhindered view of my laboring boss vigorously fucking our college girl, frightfully beholding the junction where Hank's sturdy shaft met Kerri's sloppy wet pussy and witnessing up close the older man feeding his hard cock into her voracious snatch again and again.\n\nGreedily, our coed's steamy maw engulfed each inch of his elongated tool until it disappeared completely, only to reappear dragging her engorged cunt lips in its wake, grasping the glistening, juice-soaked shaft.\n\n\"Awwnnnhh, ohhhhh, ungghhh,\" Kerri's fervent moans rang painfully in Emma's ears, overtaking the room in lewd accompaniment to the mating duo's urgent need as the sexual friction between Kerri and Hank reached its apex.\n\nTiring and dripping sweat, Hank was working as hard as he could and might have had a heart attack if he wasn't so determined to finish the job. Kerri's arms now draped around his neck with her ankles hooked around his back straining to hold on.\n\n'WAP, WAP, WAP' the slapping of skin was deafening as Hank's hips smacked Kerri's upturned ass cheeks with a fury reverberating in her mother's ears.\n\n\"Uuunnch, uuhhh, aaaggh!\" our wavering daughter's orations repeated, augmented by Hank's wheezing breath, and the room around them disappeared, along with the audience of his business associates and her mother.\n\nAll that mattered now was Hank's cock driving hard into our frantic daughter's cunt. Something had to give soon, and it did, with my dazed wife an unwilling witness to our sweet young teen's subjugation to her sexual need, my boss' persistent cock, and ultimately, her servitude to Allenby Consolidation.\n\n\"OOOHHHHH, OHH, MY G-GOOODNESSS! MR. ALLENBY, GIVE IT, OHH, YOUR COCK. PLEASE, GIVE ME YOUR COCK! FUCK ME HARD!\" Kerri roared her passion and desire in street language she rarely used making her despoiled mother blush, with her impetuous words of surrender difficult to hear and shocking to Emma.\n\nIt wasn't just because Kerri never swore, but also from the sheer emotional stridency of her frenzied need for release.\n\nOur adorable, respectful daughter was now an adult, and a young woman seeking resolution of her pent-up sexual arousal. Quite simply, she was desperately desirous of the physical satisfaction promised by my pleased boss' will-crushing 8\" rock hard cock.\n\nEmma sat slack-jawed with Ted's cum dripping from her chin as Kerri rocketed through the upward trajectory of her orgasm, each thrust of Hank's pounding shaft bottoming out in her welcoming cunt for the umpteenth time.\n\nIt was funny, in a perverse way, how our deferential coed referred to the older man by his surname -- so formal at the height of passion even as he literally fucked her breathless, especially considering how familiar he now was with her lithe, appealing body, and regretfully, she with his hard-charging cock.\n\nKerri's imploring cries were all Hank needed to hear, strenuously grasping Kerri's shoulders and slamming the entire length of his raging spear once more into the breach of her white-hot fuck tunnel.\n\n\"OHHH FUCK, YESSSSS, MY LITTLE, UNGHH, FUCK DOLL!!!\" he bellowed, rearing his head and releasing a torrent of warm jism flooding the deepest recesses of our quaking daughter's cum chamber with his essence, ecstatically filling every void of her ravenous snatch as her greedy pussy drank down his sticky spunk.\n\n\"AAAHHH! AAAHHHHH!! OHHHHH, YESSS!!!\" Kerri wailed her own climax, with her entire body shaking feverishly and her hips grinding against his pelvis, unintentionally rubbing her distended clit against his scratchy pubic hair in her boundless desire to prolong her climax.\n\n\"OHH, OHHH YESSS! OHH, FUCK YESSSSS, MR. ALLENBY, PLEASE, FUCK ME!!\" our caterwauling daughter shouted wantonly, in the throes of her passion as Hank's cockhead spewed jets of aged seed into her overflowing cunt.\n\nAfter a seeming lifetime of riding Kerri through the peak of her orgasm, Hank finally collapsed in exhaustion on top of her heaving chest, leaving my awestruck wife dumbfounded by what she just witnessed.\n\nEmma kneeled silently on all fours, one man's cum dripping off her face while another's drained from her gaping fuck hole, staring unwaveringly after our cherished beauty experienced what was surely a tremendous orgasm on the virile cock of a man old enough to be her grandfather.\n\nSadly, Emma knew the feeling, intimately knowledgeable of how incredible Hank made a woman feel with his sturdy tool, and keenly aware Kerri just had the most explosive orgasm of her young life under Hank's assault. Still, she couldn't get past the demoralizing recognition that she, Kerri's own mother, caused it to happen and was responsible for our sweet college girl's moral debasement and sexual demise.\n\nWhile Emma understood Kerri would suffer shame, humiliation, and regret once she came down, she also suspected our energetic, spirited lass would harbor a secret desire for more of what Hank had to offer. In turn, Kerri would demean herself satisfying his perverse demands for the promise of his 'gift' of degrading sexual fulfillment.\n\nWhen the illicit pair calmed, Hank slipped his deflating cock from Kerri's well-used cunt, and rivulets of his runny white cum followed, flowing easily from her open slit.\n\nEmma winced seeing the gooey mess between our ruined daughter's spread thighs dribble from her vacated pussy in a languid stream down the crack of her sweaty ass, before Ted returned my servile wife's head to his flaccid cock, guiding her mouth to finish cleaning the jism from his shaft and cockhead as expected of a 'great cocksucker.'\n\nEveryone was exhausted and spent from a day of utter debauchery. As the three men dressed, Emma and Kerri lingered naked on their backs, the men's semen overflowing their pussies and lacking the energy necessary to get up and clean themselves.\n\nGradually returning to normal, Kerri grew increasingly apprehensive and embarrassed by what she had done -- stripping naked before the group of men, sucking Ted's big cock, having her pussy eaten, and fucking the older man.\n\nWorst of all, our bashful only daughter was ashamed of cumming so hard on Hank's relentless cock in front of her mother and three virtual strangers, curling up shyly on the couch like the young woman she truly is and covering her nudity with a blanket to whimper solemnly.\n\nEach man had gotten plenty from Hank's new sex toys, with Ike receiving a nice handjob from a lovely white college coed, Kerri's first, and then thrown my suburban wife for a vigorous and satisfying fuck.\n\nFor his part, Ted, while not screwing either women, enjoyed the sumptuous mouths of a big-titted wife and mother, along with her equally well-built daughter, also Kerri's first. In a single day, the lecherous businessman had entrusted a good-sized load of his treasured spunk into the stomachs of the Emma Tyler and her 19-year-old daughter, Kerri.\n\nFortunately for my boss, since he'd nailed Emma in reverse fashion with Ike on the yacht the night of the dinner, he was content, particularly sensing he'd get more opportunities at both my wife and daughter's silken pussies over the course of our indenture.\n\nMore than anything, Hank got what he wanted most -- starting our youthful, hard-bodied daughter on the road to servitude to him, and even better, doing so before the tearful eyes and with the 'willing' assistance of her submissive mother. While he had wanted Kerri to cum on his cock at least twice, he was confident he'd given her an orgasm of the kind she'd never known before, and one that 'rocked her world.'\n\nMost importantly, he suspected our rapidly-degenerating daughter was now prey for more, certain she'd also perform the same humiliating acts her mother now performed regularly and without complaint. A true degenerate to his core, Hank had many such acts in mind for our enchanting young lady.\n\nAs he headed for the door, Hank whispered something to Emma, remaining nonresponsive other than to nod her head.\n\n\"You can call me Hank from now on, honey,\" my boss offered solicitously to Kerri as the men left, basking in the glow of the evening.\n\nEND CHAPTER"
    ],
    "authorname": "Tug_Coxwell",
    "tags": [
        "blackmail",
        "coercion",
        "interracial",
        "blowjob",
        "young",
        "teen",
        "handjob"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-theft-of-our-lives-05"
}