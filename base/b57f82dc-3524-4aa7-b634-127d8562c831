{
    "title": "Rag Doll Ch. 05",
    "pages": [
        "First and foremost, my thanks go to Bonnie Hurd for poking, prodding and prying at this story to help me make it intelligible, so many, many thanks, Princess, and to OldKing Clancy for sanity checking at the 11th hour and introducing some logical and much needed changes!\n\nThis story follows on almost immediately after the events in Ch. 4, and draws together some of the loose ends from the original series.\n\nA word of caution; it's a long one, for which I apologise, there isn't really any point in the narrative where I could draw a line and cut it into two halves to make two chapters, there is a lot of scene-setting and new character introduction going on, so please bear with me, the next part won't be anything like as long as this, I promise!\n\nAs before, please note this is my world, a reasonable copy of the real world, not a real-life situation in the real world, it's just a story, in a make-believe world, where these things get to happen.\n\nThere's no salutary lesson to be learned here, no priggish moralising (at least, I hope not!), no message, just hopefully an enjoyable read, so go ahead, dip a toe into my world and have a swim in the dark reaches and echoing spaces of my mind!\n\nI do appreciate all comment, even the nasty, scary ones, and I'm saving the truly barking mad ones for publication one day, otherwise, if you have a comment or a point to make, please do be my guest, I'll try and accommodate, where possible, all suggestions, except the anatomically impossible ones...\n\nPlease do vote if you like it, or let me know if you don't!\n\nbeachbum1958\n\nPS. This is a special mention for Leann, who always asked for \"MAAWH\", so read and enjoy, darlin'!\n\n________________________________\n\nMy name is Robert Davies, and this is the story of how I learned to stop being an obnoxious prick and actually made someone happy at last.\n\n*\n\nI have one older brother, Nicky, but more about him later, and a younger brother, Richard, Rick, who's a year younger than me. We live in Carlisle, on the Scottish borders, in a great big, gloomy barn of a house my father had inherited from some relative or the other. When I was 17, Nicky did a bunk, I don't know where he went, for all I knew he dropped off the face of the earth, but that was just about when all our troubles began, the catalyst, as it were.\n\nThe day after he fucked off, his mother, Barbara went and hanged herself in the old Butler's Pantry, cue police, coroners, and all kinds of disruption while the rest of us tried to live our lives around it. At the time I thought it was the most inconsiderate thing I had ever heard of; why couldn't she go and do it in the public lavatory in town, or the ladies Restroom in McDonalds? Then at least we wouldn't have the Old Bill wandering through the house like they owned the place, something that particularly pissed-off my old man.\n\nYes, I know, I sounded like a heartless, self-involved prick just then. Well, back then, before so much changed for me, that's about all I was.\n\nSo Nicky was gone, and all was quiet for a few weeks, and then it all started to go pear-shaped; the Americans were trying to yank dad over there on what he said were trumped-up charges that he had violated one of their embargoes; this nonsense went on, and on, and on; dad spent a fortune on legal brains to clear this mess up, and when the last Extradition request was thrown out, as it should have been, we all breathed a sigh of relief; then the bloody Appeal Court got in on the act, allowed the appeal, and suddenly my dad is on a plane to stand trial in America, for doing business in Europe, with countries that had no connection to America; how did that happen?\n\nAnyway, to cut a long story short, he was convicted of crimes against America, and sentenced to 40 years in jail with no hope of parole; basically, he was going to die in jail, they just extended the death sentence by 40 years. So now the witch-hunt started here, too.\n\nAll my dad's businesses, all his bank accounts, all his property, everything he owned, everything we owned was seized by the Serious Organised Crime Agency, leaving just this house; they even took the furniture, the TV's, and most of the crockery and silverware, because they claimed they were bought with the proceeds of crime; they'd be auctioned-off at some time in the future, but I didn't know where or when, and I didn't have the money to buy them back anyway.\n\nI was 19, Richard was 18, and suddenly all we had was a mostly empty house, no money, and no furniture except a few battered pieces we found in the attics and basements. For various reasons we weren't entitled to any benefits; we had no income, but we owned an asset, a very valuable asset, apparently, so the only answer I got from the Benefits Agency when I asked for assistance was pretty straightforward; if you need money, sell your house; two teenage boys don't need to live in a six-bedroom mansion...\n\nThere was no way I was going to allow the house to be sold; it was my dad's and it was all we had, so I found a job with the City Council, mostly driving the mowing machines that cut the grass verges and public green spaces. It was long hours, at minimum wage, but I jumped at it; I wasn't actually trained to do anything, I'd always believed in my dad's money, and this was where it had brought us...\n\nI should have followed Nick's example; he'd always wanted to be a mechanic, even though dad was dead against him being any kind of manual worker, but Nick persevered, and actually qualified, in spite of dad and his objections. Richard and I however, had no marketable skills, we'd always thought dad was going to hand his businesses to us one day, so here I was, driving the mowing machine, spending all day cutting grass verges, getting sprayed with grass clippings, dogshit, and all the other nasty debris inconsiderate slobs drop on the verges.\n\nWhen the grass stopped growing as the year turned, they moved me to pushing a street sweeping machine, which was even worse; I had to buy my own masks, as the ones supplied were worse than useless, and again, the days were long, cold, smelly, and poorly paid.\n\nRichard couldn't find a job for love nor money, so he used to spend his days either watching the small second-hand TV I'd bought or going through dad's papers, the stuff that had been returned as being 'of no evidential value', and seemed to have found something of interest in there; he tried to tell me about it, but I was usually too buggered after a long day being back-sprayed with filth from the street-sweeper to pay any real attention, or even care, so I guess after a while he gave up trying.\n\nAnd then one day, just after his 19th birthday, he was gone. I had a tin under my bed with an emergency fund, almost \u00a3200, and that was gone as well. There was nothing I could do about it; he had no mobile phone, we couldn't afford them, and so I just had to accept that he was gone, and my bill-paying fund was gone with him.\n\nSo there I was; haunting an empty house, earning just enough to keep me off the breadline, but not enough to actually make a difference or make life any easier, with no friends, no-one to turn to, as dad, in his wisdom, had kept us apart from other kids when we were small, even down to having us home-schooled; at least Nick got to go to secondary school, and then college, his mother made sure of that, but she never lifted a finger for Rick and me; I guess her own son came first, no surprises there, from what dad had told us about her.\n\nFunny thing is, I never really questioned how, if Nicky was older than us, and if Barbara was his mother, how did we come along? When did our mother come on the scene, and where did she go? Somehow, dad managed to always deflect that question when it arose, and Rick and I never really thought about it; if we had, then maybe things might have been so different...\n\nMy job sucked, but I stuck with it; millions of people had no job; at least I had daily employment and a payslip at the end of the week, and with Rick gone, there was enough money for the occasional treat. I remember the first time I bought a real pizza, from the Domino's in town, I was actually drooling by the time I got home, it had been so long since I'd had one; my occasional treat was the 'Saver' version from the local supermarket own-brand range, and the taste of the real thing was out of this world; I had to discipline myself to just eat a couple of slices and save some to last for the next few days; that week was bills week, so no treats until the following month. After putting aside enough to pay the gas bill, the electric bill, and the Council Tax, there was precious little for food, so I quickly had to learn how to eke out what food I could afford as best I could.\n\nAnd so it went on; work, no real prospects, no friends or confidantes, loneliness and anger; at dad, for letting them railroad him and stripping us of everything, at Nick and his mother for abandoning us, at Rick for leaving me alone, and at myself for landing myself square in the poverty trap. I wanted out of here, I wanted my life back, I wanted my dad back, and I wanted to see that smug scumbag Nicky strapped to the railway lines for what I was sure he'd done; I'd come to believe that Nick had somehow set in motion everything that had happened since he left, and I wanted my hands around his neck so I could choke the life out of him for being what he was; the sly, spoiled little bastard who destroyed my life.\n\nRick had been gone for almost two years, and I'd become so used to being alone that I hardly ever even thought about him anymore, when that all changed. I came home from work on a cold and windy November evening, badly in need of a shower, as usual, to find the front door open; I was immediately on my guard; there was nothing here worth stealing, the Crime Agency had already stripped us of everything of any value, but there were always junkies who'd steal anything they could sell for a fix, and vagrants looking for a warm squat to doss in, so I quietly eased the door open and slipped inside.\n\nI immediately smelled something cooking, something spicy, warm, inviting, and my stomach rumbled; it was late in the week, and my budget was stretched to breaking point, so I had baked beans on toast planned for dinner; this smelled a lot better. I heard voices, and realised it was Rick. Rick! After two years, what was he doing here, and what gave him the right to just waltz back in after taking all the money I had and doing a disappearing act?\n\nI pushed the door open, and there he was, looking the same, reading something and talking over his shoulder to someone in the kitchen, someone female, by the sound of it, a voice with a distinct London accent; so, he'd waltzed back in here and brought his girlfriend too, had he? I'd soon put him straight about that! You leave, you're gone, it's as simple as that; sneaking-off like that had taken away any right he had to be here, as far as I was concerned.\n\n\"What the hell are you doing here?\" I demanded, watching in satisfaction as he jumped, spinning round, to smile at me, a big, wide, cheesy, 'Hi, howya doing!' kind of smile, but I wasn't having any of it; he'd stolen my money, what little I had, disappeared, and never so much a note in almost two years to say where he was, to say sorry, nothing.\n\n\"Bobby, God, it's good to see you!\" he exclaimed, and I had to grin at the sheer barefaced gall he had to think I was going to welcome him back, just like that...\n\n\"Where the hell have you been, and who said you could come in here? This is my home now, you left, so get out, and take whoever the hell that is with you! Get out, both of you, before I throw you both out by the scruff of your necks!\"\n\nThe girl in the kitchen had come to the doorway, and stood staring at me in what looked like fascination, no trace of fear or apprehension on her face, just interest. I glanced at her, and then took a second, longer look. Whatever my problem with him, I had to admit Rick had good taste; she was exquisite! Tall, slender, possibly late teens or early twenties, olive-skinned, with long, glossy, mahogany-red hair, startling green-hazel eyes, and full red lips that seemed naturally red, rather than through any cosmetic help. She was dressed in a tight Tee-shirt that outlined and emphasised her small, firm breasts rather well, and skinny jeans that she managed to fill most enticingly; she was completely stunning, and I found my gaze being drawn to her even as my anger at Rick bubbled up.\n\n\"What do you want here? You take all my money, you disappear for damn near two years, and then you just roll in here expecting a warm welcome? Get out, now, and take her with you!\"\n\nI turned away in disgust, weary, angry, hungry, and just too worn-out to say any more. I'd rehearsed this meeting in my mind many times, and all the biting things I'd wanted to say hovered below the surface of my mind, but I just couldn't say them; all I wanted was him gone, and his girlfriend with him.\n\n\"Bobby, we need to talk, all of us, now...\" said Rick, and I turned to him, anger threatening to spill over into something physical; couldn't he understand plain English? Why would I want to stand here and bandy words with him; I thought I'd made myself perfectly clear.\n\n\"Get out Rick, I told you twice now, are you deaf? Go, before I hurt you!\"\n\n\"And will you hurt your little sister too?\" he asked me, and my head snapped around.\n\n\"What did you say?\" I croaked, and he nodded slowly.\n\n\"Bobby, this is Yasmin, Yaz for short; she's our younger sister, and that's her big sister, our big sister, Shereen over there.\"\n\nI looked around in a kind of daze, and there was another girl, almost the double of Yasmin, but even prettier, if that were possible. This girl had paler, creamier skin, and dove-grey eyes, but the same rich mahogany hair, and she was maybe a couple of years older than Yasmin, maybe my age, but the same height as Yasmin, a similar slender, willowy build, and a figure just as tight and alluring as her sister.\n\n\"Hi Bobby, I've heard a lot about you...\" she smiled, and I sat down before I fell down.\n\n\"How...when...did...when...? I managed, and both girls grinned at me.\n\n\"Don't worry, Bobby, when Rick turned up at our doorstep, we had pretty much the same reaction.\" smiled Yasmin.\n\nMy head was spinning; these two gorgeous girls were my sisters? How? When did this all happen?\n\nShereen patted my knee.\n\n\"Go and have a shower and get changed, and we'll talk after dinner; hurry up, Bobby, dinner's almost ready.\"\n\nI suddenly realised what I must look and smell like, and hurriedly excused myself, taking the stairs two at a time in my haste to get cleaned up and get back to that wonderful smelling food and those beautiful girls! I had a hot shower; I normally had cold showers, to minimise my use of gas; I needed that for when winter really began to bite, when I had no option but to heat the room I lived in, and having a hot shower was a luxury in my circumstances, but I thought the fact that I had company justified it, just this once.\n\nDinner was incredible; the girls were amazing cooks, and they'd put together a wonderful Madras chicken curry, tangy, hot, and spicy, fragrant basmati rice, sweet and fruity Peshwari naan breads stuffed with almond paste, coconut, sultanas and honey, and flavoured with cardamoms and other, more exotic spices, and a cool cucumber, sour cream and onion raita. For someone whose meals usually consisted of soup, and beans on toast, it was a banquet I never seriously thought I'd ever get to eat, and I pitched in happily. Conversation was limited as we ate, Rick and the girls watching me as I stuffed my face. I stopped when I saw them eyeing me, and Shereen reached out to put her hand on mine.\n\n\"Eat as much as you want, Bobby; we saw what's in the pantry. Poor you, I don't know how you survive on so little; I never knew things were so tough for you, none of us did, or we'd have been here sooner. You eat all you want, there's plenty for you, there always will be, I promise.\"\n\nHer eyes were brimming with tears, and I bridled; who the hell was she to come in here and start pitying me? I'd managed okay so far, and I didn't need some stranger patronising me! That was my father talking, of course, and even as the resentment flared inside me, I realised how barren it was, how that kind of thinking had left me here to slowly dwindle away. I told you, I was an uptight prick, and never more so in that instant, when I hotly, foolishly, resented the simple act of another human being reaching out to me.\n\nI looked away in embarrassment, knowing that she'd somehow read every mean and angry nuance of my reaction to her, the embarrassment growing to encompass the knowledge that they knew I was so hard-up I was reduced to living on baked beans on toast and tomato soup. Shereen put her hand on my chin and turned me to face her.\n\n\"Bobby, you're my brother, you're Rick's big brother, and I won't ever leave you hungry or cold; when Rick brought us here it broke our hearts to see how little you have and how you have to live, alone and with no-one to care about you. We won't let that happen again; that's a promise, okay? You'll never be alone again, cross my heart.\"\n\nI was trying to take this all in; this girl, my...sister, was promising to take care of me, and all I could do was wonder why; I didn't know her, I had no connection to her, and I couldn't understand the deep connection she seemed to feel with me; was I so disconnected from people, so wrapped-up in my own struggle that I'd forgotten how to relate to others, how to be grateful? Had I ever really learned how to do that? With a rush of shame, I suddenly realised I'd never felt gratitude to another living soul, only an almost overpowering sense of entitlement. I'd never related to other people in any meaningful way because I knew I was better than them. Was that really the legacy my father had left me? To be a complete and total ass?\n\nRick leaned over and slapped me on the shoulder.\n\n\"Take it easy Bobby; it'll take a while to sink in, but it will, believe me, you just have to let it happen. It took me a while, but you're smarter than me, you should be able to figure it out in jig-time. Just take my word for it, it's worth it, honest. Now eat up, we have a lot to tell you, and you're not going to like any of it, but you have to hear it; then perhaps you'll understand better what and who we are, and why everything happened the way it did.\"\n\nWhen we'd finished, Rick and Yasmin cleared the table while Shereen led me into the sitting room, and I have to be honest, I was captivated by the sight of her bouncy little bottom twinkling in her skinny jeans as she walked ahead of me. I only had the ratty old couch and a battered prolapsed armchair I'd salvaged from a house being demolished, so I motioned her to the couch and pulled the chair a little closer so we could have that talk Rick had mentioned.\n\nRick and Yasmin came in just then, and plumped down on the couch, Rick in the middle of those two beautiful, exotic-looking girls. Rick was definitely uncomfortable, but he obviously wanted to tell me whatever it was that was so important, so I waited patiently.\n\n\"Bobby, you're not going to like this; I didn't, it still tears me up inside, and there's so much of it, so here goes; first off, Bobby, about Nicky...\"\n\nI rolled my eyes; the last thing I wanted to know about was that spoiled little mummy's boy. Rick looked annoyed at my impatience.\n\n\"No, Bobby, you've got it wrong about Nicky; we were both wrong, no Bobby!\" as I tried to interject, \"Just be quiet and listen, for once, just listen, please!\"\n\nI was the verge of walking out, but something stopped me; perhaps it was the look on his face, or the note in his voice...\n\n\"Bobby,\" he began, \"We were wrong about Nicky, so wrong, just listen to me; he didn't desert us, or leave us in the lurch; dad beat him half to death, and Barbara got him out of here to save his life!\"",
        "I stared open-mouthed in shock; I was disinclined to believe him, then all those evasions and refusals by dad to give any real answers about where Nicky was, or why he'd left so suddenly re-surfaced; all dad had ever said was that he was a namby-pamby little mummy's boy, and good riddance; now perhaps I was about to get some answers.\n\n\"Nicky tried to stop dad beating Barbara up, and dad hurt him; he hurt him really badly. He boasted that Nicky was going to carry those scars 'til the day he died, that every day, when he saw those scars, he was going to remember who put them there; according to him, that was a father's true, lasting legacy; the last time dad saw him, Nicky was just a blood-soaked wreck, and he was proud of what he'd done to him; Nicky didn't run; dad almost killed him, and left him nowhere to go; Barbara helped him escape before dad killed him, and he would have, God, he would have...\"\n\nHe swallowed, then continued.\n\n\"You remember how dad always used to lay into Barbara, we'd listen, and just shut the door and ignore it? How we always said it was nothing to do with us? We should have tried, Bobby, maybe if we'd tried, maybe she'd still be here, maybe Nicky wouldn't have gotten so badly hurt! Just once would have been enough, Bobby, just once could have saved her, now it's too late, it's all too late... \"\n\nMy head was spinning with this, and something he'd said came back into focus.\n\n\"Who did he boast this to; who was he telling all this to?\"\n\nNow Shereen spoke.\n\n\"He was telling this to mummy. We were there, he was drinking and pawing at mummy, and telling her all this stuff, boasting about it, like it was something to be proud of! We were there, but that didn't stop him groping and mauling her. He told her so much more; Rick?\"\n\nRick took up the story once more.\n\n\"Bobby, I don't know how to tell you this; I wish to fuck I'd never found out, now I'm going out of my mind, and I don't know who can help me, or you!\" He paused for so long I thought he'd said all he was going to say, but then I saw the tears start.\n\n\"Nicky wasn't Barbara's son, Bobby; dad snatched him from his first wife in America when he was a toddler and brought him here. He's not Barbara's son; I am, and so are you; she was our mother, Bobby, Barbara was our mum, and he never told us, and he wouldn't let her tell us either. That son of a bitch stole us from our mother, and lied about her to us all our lives, he made us hate her, he made us into things that sat there and grinned while he beat her and hurt her, and I still don't know why, and now I know why she died; Shereen's mother told me the truth; he killed her, Bobby, he killed her just because she went through his papers, he thought she was trying to find something to give to the police, something to get him put away, so he strung her up and watched her die, and now he's never going to pay. What are we going to do, Bobby? I can't...\"\n\nHe stopped, tears running down his face, and I couldn't do a thing about it; I was literally frozen in place as the whole, terrible, evil story unfolded. Yasmin was holding Rick as he cried like a small child, but all I could feel was cold rage that my whole life was being turned into a sham, a web of lies spun by a man I'd idolised. All I could do was shake my head in denial; this was a lie, it had to be, it was some weird nightmare, and any moment now I was going to wake up and it would be time to go back to my shit job for shit money and live out the shitty remains of my shitty life.\n\n\"Bobby...!\"\n\nI looked up to see Shereen standing next to me. She knelt down and leaned on the arm of the chair.\n\n\"Bobby, it's all true. Our father was a vile man, who did vile things because he could; he thought his money made him invulnerable; he hurt mummy so many times, and he'd just laugh and say that's what chilli-cracker whores were for. My mother was a brilliant businesswoman, a London Metropolitan University graduate in business and finance. She owned properties all over London, Robert Davies wanted those businesses and properties, so he sabotaged her arranged marriage to shake her loose from her family, and suddenly he's in her bed, and all her properties, all her businesses, all now belonged to him.\"\n\nShe was looking away into the distance now, seeing something I couldn't, her expression set and her voice flat.\n\n\"He'd turn up out of the blue, drink Scotch until he was in the mood, then drag her off to bed, and in the morning she'd be covered in bruises, cuts and scratches, and usually a black eye or two. Sometimes he'd beat her up in front of us; we were small and he was our father but that never stopped him hurting her in front of us.\"\n\nShe stopped speaking to wipe her eyes with the heels of her hands,\n\n\"He used to tell us that when we were old enough, he had some friends who wanted to play with us, he used to call us little chilli-cracker sluts, half-breed whores, vile names from a vile man, our own father; he was a racist, but he saw nothing wrong in forcing an Indian woman into his bed, and promising the children he fathered on her to his friends, for a price. Our own father was going to whore us out to his friends, Bobby, he thought it was funny! can you even imagine what it feels like for your own father to tell you his friends were waiting to do to you what he did all the time to mummy? That's what he made us live with, that's the kind of man he is, Bobby, that's why I hate him!\"\n\nTears were running down her cheeks again, but she made no move to wipe them away this time.\n\n\"He used us to control her, he'd tell her what he'd do to us if she ever went to the police, and she knew he wasn't bluffing; he took everything she'd built Bobby, and left her with nothing except her house, and only because it was in a trust and he couldn't touch it, the clothes on her back, and us; he's hurt so many people, ruined so many lives, told so many lies, but I wouldn't lie to you.\"\n\n\"Our father nearly destroyed all of us, but at least where he is now he can't hurt anyone ever again; he did everything he was jailed for, believe me, and more, so maybe now he's being made to pay for what he did, maybe now he's learning what it's like to be powerless and at the mercy of people who don't give a fuck about you. Ricky told me you thought he'd been railroaded, but the system here never caught up to him; at least the Americans saw him for what he was, and stuffed him in a cage and threw away the key; now maybe he's getting some justice handed to him!\"\n\nI listened in horror; what Rick had told me was bad enough, and now this; my father was a psychopath, he had to be, to inflict such suffering with no flicker of remorse; we were his children, and he'd lied to, hurt us and stolen from us all our lives. And now I was remembering how Nicky had hinted time and again to us about Barbara; he must have known all along that she was our mother, and he'd tried to let us know, and we'd just snubbed and ignored him, and tattled on him to dad, and sniggered like half-wits as dad beat the pulp out of him...\n\nMaybe Barbara (and even now, after everything I'd been told, I still couldn't call her 'mum'!) was so beaten down, cowed and frightened she made him promise not to tell us; it made sense; the way Nicky was attached to her, he'd have done anything for her. I felt a deep stabbing pang of remorse and guilt for all the things I'd said or thought about both of them, and suddenly I missed my big brother like i never thought I would. I wanted to see him again, and to beg his forgiveness for all those bitter, thoughtless words, all the unfounded hate and anger. He'd been alone, only his Barbara was there for him, and he'd been pulverised by my father, and she'd been killed; they weren't even allowed to have each other when they needed each other most of all. Suddenly I needed to know if he was alright, if he'd even survived that beating, if he'd managed to find his way back to his mother, wherever she was, if he had a family who took better care of him than we had, and if his life had somehow worked out. I wanted it, but the sick truth was, Nicky was probably dead too, beaten and killed by my father for no other reason than he could, just the way he'd killed my mother.\n\nThere was one other thing I had to know, a glaring omission in Shereen's story.\n\n\"Shereen, where's your mother? Why didn't she come with you?\"\n\nShereen looked at me levelly, fresh tears welling up in her beautiful eyes and spilling down her ivory cheek.\n\n\"She died, Bobby, three months ago. She had a massive brain haemorrhage, she just...went, like that; she didn't suffer, she didn't feel a thing; the coroner thought it was possibly connected to all the violence she'd been subjected to, but she'd taken so much punishment there was no one thing to blame her death on. Ricky helped us get past it; mummy loved and trusted him, she told him most of what you just heard, and made him promise to look after us if anything happened to her; it was almost like she knew what was coming...\"\n\nRick was still crying softly and Yasmin was cradling him, but she had tears in her eyes too. I looked at my brother, my sisters, and all I could feel was a kind of hopeless, empty dread. Even now, with him in prison so far away, my father was still here, in this room, lying coiled up inside me; he'd made me what I was, and all I'd learned came from him; one day he was going to come out of me, and I couldn't allow that, not now, not after what I'd learned about him, and us. What use was I ever going to be, with that monstrous scab caked on my soul?\n\nAnd the worst part was, there was nothing I could do to fix it; our father had put so many sharp bends in me, instilled so many hatreds, so many wrong ideas, it was all I knew, all that I was, so how could I ever hope to be normal?\n\nThe answer, of course, was staring me in the face; I couldn't; I was badly damaged goods. Maybe our mother had wanted him to catch her and do that to her, maybe she knew that there was no way to fix what Robert Davies had done, to her, to us, to all his children, and she'd used him to put her out of her misery. Was that how it was? Had she sacrificed herself for us, even though we felt nothing for her, had she sacrificed herself in the hope her death would set in motion the destruction of her husband and free his children?\n\nThat one question hammered at me, but it was too dreadful to contemplate, that someone could be so desperate that they could be driven to that, and now the full horror of what I was, what he'd made me into, hit hard; all I could ever do would be to follow in his footsteps, plough my way through other people like they were chaff in a field, because that was what he'd made me, and the only thing he'd ever taught me, the only thing I knew.\n\nI couldn't change, I knew that; I was condemned to follow in his wake, and destroy everyone in my path; he'd seen to that.\n\nSuddenly, it came to me with shocking clarity just how simple it really was; there was a way out for me, one that solved everything for everyone and shut this nightmare off for me forever.\n\nRick was still adaptable enough to change, the evidence was right there in front of me, the same for the girls; my father had somehow been unable to worm his way inside them, but me, I knew how damaged I was, how immersed I was in the ways and values of Robert Davies.\n\nI'd felt at times that the only real cure for what ailed me, the only way out of this fucked-up travesty I called a life, was a bullet in the brain; perhaps that really was my best and most realistic way out of this hopeless nightmare. This whole series of revelations had shown me just how deeply Robert Davies had reached down into me, and what it had shown me with shocking clarity was that there was nothing inside me worth the having, nothing to save and no soul to speak of, just a whole lot of me, and it was fouled and slimed with him and his values, an irretrievably lost cause; all I'd ever accomplish would be to infect, damage, and destroy those around me.\n\nEveryone at some time in their life has stood on a high place and felt those conflicting twin compulsions, the urge to jump and simultaneously the fear of what that brought; now I knew, for me the time to make that jump had suddenly arrived, the fear of what came next was gone, in the first full moment of clarity I'd ever experienced. Authors and philosophers talk about a life worth living, how about a life so fouled and polluted that it should be discarded, for the good of those around you?\n\nI had to go somewhere quiet, I had to think about what I'd just discovered about me, who and what I was, and where I belonged in this 'family' that had suddenly descended on me. I got up out of the chair and made for the door, Shereen watching me closely. As I reached for the door handle, she called out my name.\n\nI turned to see her looking at me oddly.\n\n\"Bobby, where are you going?\" she asked me.\n\n\"I have something I have to do,\" I answered truthfully, \"Goodnight Shereen, I think Rick needs you; keep an eye on him please.\"\n\nI closed the door firmly and walked up the stairs. Once in the bathroom, after locking the door, I picked up dad's old straight razor and sat down on the edge of the bathtub, idly watching the light play on the blade of the old razor, suddenly fascinated by the tiny points of light along the edge, the sign of a well-sharpened blade.\n\nAs I watched the light ripple on the old steel, I thought about what Ricky and Shereen had told me; my father was a murderer, he'd killed my mother, maybe he'd killed Nicky too, and I was just like him, I was a chip off the old block in almost every way. If I stayed with those people downstairs, and somehow I still couldn't bring myself to think of them as 'family', because they weren't, somehow, in some way, I would be responsible for bringing them down, because that was my nature; that was how I was bred.\n\nI realised my first impulse was the right one; the blade was my way of protecting them from me, the one thing I could do for them that would keep whatever was still coiled-up inside me, the sickness and depraved inhumanity of Robert Davies, away from them forever; this blade was their guarantee of a life free of my father and his influence.\n\nShereen must have seen something of my inner turmoil in my eyes, because just as I had decided to make that final, sweeping cut across my throat with that slender, lethal piece of steel and end this whole miserable existence for me, the door burst open and suddenly Rick was holding my hand away from me in a grip I just couldn't break free of.\n\n\"Bobby, what the fuck are you doing, just give...me...that...!\" I let the razor go as my hand opened involuntarily, and out of the corner of my eye I saw Shereen kick it out of reach under the bathtub.\n\n\"Bobby, what in the name of God are you doing, why would you want to...to...?\" she asked, her eyes wide and frightened.\n\nI was having trouble speaking, as Rick currently had his forearm in my throat as he held me flat against the wall.\n\n\"Why, Bobby?\" she whispered, and I answered her as best I could while struggling to escape from Rick's hold on me.\n\n\"Don't you know what I am? I'm him, or I will be! I can't be one of you! I'll break it all up, I know I will, and you all deserve better than that! Please, please, if you really think anything of me, just turn around, close the door, let me finish this my way!\" I pleaded with her, my heart sinking as she slowly shook her head, then glanced at Rick and nodded slightly.\n\n\"Sorry Bobby, no can do!\" said Rick, \"Sorry about this...!\"\n\nHis fist slammed against my jaw, I saw stars, and then blackness and silence.\n\n*\n\nI awoke in darkness, wondering for a second where I was, then stiffened as the sound of someone stirring came clearly to me. I tensed, ready to jump out of bed at whoever was in the room with me.\n\n\"Shhh, Bobby, calm down, it's only me!\" came a soft voice, and I relaxed; Shereen; it was all real then, not some weird dream.\n\nI fumbled for the lamp, and she switched it on. She was sitting in the carver chair I had found in the basement, which constituted the sole piece of furniture in my bedroom other than the narrow single bed with the bricks at one end in place of legs, and the battered night-stand next to the bed.\n\n\"How are you feeling, Bobby?\" she asked, sitting on the edge of the bed.\n\nMy jaw ached where Rick had cracked me, and Shereen saw me wince as I opened my mouth to speak.\n\n\"No, it's okay, don't speak if it hurts. Sorry about that Bobby, Rick was scared of what you might do, he didn't want you hurting yourself; please don't be mad at him.\"\n\nI had to grin at her defending him; but then, she probably knew more about him than I did; the Rick I'd seen earlier was nothing like the Richard I'd grown up with; he was almost like a different person, a much friendlier, more together person than I'd ever known. Before Rick left, he'd been morose, sullen, bitter, hostile and angry; just like me in fact. Now it was like he'd had a personality transplant; his smile had been open, friendly, and approachable, as had his whole demeanour, not cynical and devious; something radical had happened to change him, and I was intrigued, in spite of everything else that was crowding inside me just then; had it been these two girls? How?\n\n\"Would you like a hot drink?\" she asked, and I smiled ruefully.\n\n\"I haven't got anything, only water; don't worry, I'll get a glass myself.\" I said, and she cocked her head as she smiled at me.\n\n\"You didn't, but Ricky and Yaz did some shopping earlier, and we have coffee, tea and juice, and a couple of beers if you want something a little more interesting than tap water...\"\n\nIt was my turn to look curiously at her.\n\n\"I know I asked you this before, but why are you doing this for me? It seems to me you could have a much better life in London, far away from all this. Why are you so intent on making me a part of your life? I mean, I'm no-one to you; don't get me wrong, I'm not complaining, especially after that meal, it just seems...strange, is all I'm saying...\"\n\nHer hand came up to gently touch the side of my jaw, right where it hurt the most, and I winced.\n\n\"Sorry, I just wanted to check for myself nothing was broken.\" she murmured, \"It all seems okay, you'll live, sweetie. In answer to your question, I'm a few months older than you, so that makes me your big sister. Big sisters are supposed to look out for their little brothers, and that includes not turning their backs while their little brothers make huge, stupid mistakes.\"\n\nShe shifted her weight, sliding closer to me.\n\n\"Bobby, I saw how you've had to live, I know how hard you work and how little you get for it, Ricky told us everything, and I can see for myself how little proper food you get; baked beans and tomato soup; you can't live like that, it may be hot and filling, but it's not nourishing; you need protein, a proper balanced diet, not just empty calories; look at you, you're all skin and bones. You poor baby; you look famished! I'm your big sister and I won't let you live like that again; Yaz, Rick, and me, we're your family, and family sticks together, so come and be part of your family. Please? For me?\"\n\nShe smoothed the hair back out of my eyes.\n\n\"Rick came to us just when we needed him the most, and now we're here because you're family, and you need us, and we need you; Yaz is your little sister too, she needs both her brothers, especially with what she's had to live with for so long, so let's make a deal; you look after your sisters, and your sisters promise to look after you; deal?\"\n\nDespite my own damnably suspicious nature, I saw and heard nothing here to put me on my guard; on the contrary, what was radiating from her in waves was just honest sincerity. I smiled at her, probably the first real smile since before Dad had been taken away to appear in court all that long while ago now.",
        "\"Okay, it's a deal! Big sister, huh?\" and she smiled back.\n\n\"Everyone I know calls me \"Shari\", you could make a start by calling me that too,\" she grinned, and I grinned back.\n\n\"Okay, \"Shari\" it is, and welcome to the family!\"\n\nShe smiled at me, and I had to ask.\n\n\"So, really, you're older than me? How much?\"\n\nShereen twinkled at me.\n\n\"Oh, a few months, Bobby, enough to make you my \"little\" brother, anyway; Yaz is nineteen going on twenty, so she's about a year younger than Ricky, so I guess that makes me the oldest, so you better get used to taking orders!\"\n\nShe smiled as she said it, to show she was joking, and I couldn't help but smile back; she had such a beautiful smile, too!\n\n\"Right, Bobby, let's go and make a nice cup of tea, I could do with something hot right about now.\"\n\nWe came back downstairs to find Rick and Yaz sitting in the kitchen drinking mugs of coffee. The scent of the fresh coffee nearly made me swoon; I hate tea, and coffee was so expensive I'd given up on ever buying any ever again on my severely limited budget. Yaz saw my expression and silently handed me her mug with a shy smile. I took it gratefully, sipping slowly while savouring the rich bitterness and caffeine bite. I sat at the table while Shari busied herself making tea for herself and another coffee for Yaz. Rick seemed uncomfortable, until I grinned at him.\n\n\"That's a sweet left hook you've got there, Ricky!\"\n\nHe grinned back, the tension draining out of him when he realised I wasn't going to return the favour and bop him one. Yaz gently turned my head to look at the right side of my jaw.\n\n\"There's a bruise coming up, Bobby; would you like some ice on that?\" she asked me softly, and I shook my head.\n\n\"Thank you, no, it'll be okay in a couple of days.\" I replied, still processing the fact of these girls, the horrifying story they'd told me, the truths revealed about my mother and what my father had done to her, their mother and what he'd done to her, what he'd done to us, and uppermost in my mind, what he'd done to our big brother.\n\nYaz saw my eyes filling as I thought about how I'd treated Barbara, about how she must have felt for her sons to so utterly reject her for no reason, and most of all how she must have felt the loss of Nicky, the only one of us who'd loved and honoured her; she wasn't even his mother, she was mine; she was my mother and I'd done nothing, said nothing, felt nothing when my father had brutalised and finally destroyed her. The tears ran down my cheeks as they finally spilled from me, and suddenly Yaz was there, holding me as I cried for her at last, for never knowing her, for letting her go so easily, and for Nicky, for being the one thing she'd been allowed to keep and love in this entire family, and for how easily I'd let him go.\n\nYaz led me away from the table, and sat me on the couch in the sitting room, sitting next to me so she could hold me, much as she'd held Rick earlier. She never said a word; what could she say that wouldn't sound false, and trite, and banal? Instead she held me close, giving me comfort with her presence while I cried, probably for the first time in my life.\n\nAt last I stopped crying; the guilt and sorrow had passed for now, leaving me feeling empty and depressed; what did we do now? This house was a mausoleum, we could all live here, but it was almost completely unfurnished; I couldn't even work out where the girls were going to sleep; most of the beds had been taken away long ago to be sold at auction, and those that were left had been unused for nearly two years now; damp and rot would have claimed them by now, and there were precious few bedclothes and linens left, barely enough for my ramshackle single bed. I didn't have an iron or an ironing table, any pillows or cushions, nothing.\n\nRick obviously knew what I was thinking, as he tipped his coffee at me.\n\n\"Don't worry, Bobby, we've sorted out sleeping arrangements. We did some exploring while you were conked-out and found some single mattresses in the attic; they're old, but clean; someone wrapped and stored them properly, so they're nice and dry. We moved a couple of the single-bed frames into the master bedroom, the girls will stay there. As for bedding, why don't you help me bring it in?\"\n\nI looked confused.\n\n\"Bring it from where?\"\n\nNick smiled at me\n\n\"From the car, Bobby. We stopped off on the way here and bought sleeping bags and pillows, because I knew the girls would need them; come on, they need to get some sleep.\"\n\nI could only stare stupidly.\n\n\"You have a car?\" I asked, and Rick grinned.\n\n\"Well of course we have one; how did you think we got all the way here from London, hitchhiking?\"\n\nHe drained his mug and stood up, nodding at me to follow him. Their car, a grey Mitsubishi Shogun I'd noticed but not really registered when I first came in, was parked just a little way away, the luggage compartment and most of the back seat crammed with bags and boxes. Rick told me to wait while he got in and reversed the car into the driveway so we didn't have to traipse back and forth while we unloaded it.\n\nThe girls came to help as we emptied the car, and with all four of us working it was just a couple of minutes before all the stuff from the car was piled up in the sitting room, with Rick and Yaz sorting through it all.\n\nI noticed that Yaz seemed to be more than usually attached to Rick; at first I assumed it was because they were the younger ones, seeking support from their peers, but then I began to understand it was a lot more complex than that; they were obviously connecting at some deeper level as well, and, strangely, I was glad about it; Rick and I had never had any friends growing up; dad had seen to that. Nicky had gone to school when he was younger, but then dad had decided that we should all be home-schooled, so we never had the opportunity to mix and mingle with other people when we were young, and after Nick was sent to secondary school, Rick and I remained at home with our tutor.\n\nWhen I'd started work, I had no real idea how to communicate or relate to the people around me; I think my colleagues thought I had some kind of mental impairment, as I never spoke to any of them, but the truth was I had nothing in common with them, no shared background, interests, experiences, nothing; when they'd laugh and talk about girls, I just used to stare blankly; I really had no idea what they were talking about, but I did eventually come to understand that revealing to them that I was still a virgin at almost twety-two was probably not a smart move.\n\nI'd not met any girls yet; pushing a street-sweeper and smelling like a midden are not the most aphrodisiac combination, so meeting girls on the job just never happened, as a result of which, I really had few insights and little to no intuition when it came to understanding the fairer sex. I knew about the mechanics of sex, of course; I could read, and I had the usual collection of girlie mags any single man my age could be depended-on to possess, but no actual experience, not even anything that could be called a conversation with a member of the opposite sex.\n\nAs I watched Rick and Yaz unpack, exchanging light touches, pats on arm, or shoulder, or knee, and glances I couldn't understand, smoothing errant strands of hair from each other's eyes, or a lightly touching fingertip to the tips of noses, or chins, gentle horseplay, Shari slid next to me, her arm around mine as she pressed herself against me, resting her head against my shoulder.\n\n\"They're such good friends, and good for each other; look at them! Ricky and Yasmin hit it off from Day One; they've hardly spent a minute apart since Ricky first came to us. I think it's a good thing; they both needed someone, she found Ricky, and he found her. Mummy was pleased; she trusted Ricky to take care of his little sister, and Yaz needed a protector, someone to look up to and feel safe with after being frightened for so long of what our father said he was going to do with her.\"\n\nAs Shari leaned against me, the scent of her hair teased and tickled my nostrils, and underneath that the smell of her; soap, clean and astringent, and even more subtly, the scent of her skin; I began to harden; it was purely involuntary; I had no thoughts or intentions towards her, good or bad, it was just her femininity, her warmth and humanity, and the fact that she wasn't shying away from me, as girls tended to do.\n\nI knew what arousal was, and most aspects of sex, or I thought I did, but only from reading the girlie mags under my bed; I'd never even talked to a girl before today, and now I was stirring as my newly-discovered 'older' sister hugged herself close to me.\n\nWe continued to watch as Rick and Yaz pulled four bundles out of the pile of stuff we'd brought indoors, four sleeping bags still in their wrappers, and a pile of pillows. We carried them up to the master bedroom where the twin beds had been pushed together to make one large bed. We'd also brought some sheets from the pile of things they'd bought, and we quickly made up the bed for the two girls, sleeping bags laid onto the clean sheets, brand new pillows and pillowcases all ready for them. Rick had reclaimed his old room, so he dumped his sleeping bag and pillows on the little single bed in there, even though the frame was in as bad a shape as mine.\n\n\"Tomorrow, Bobby, we need to do something about the bedrooms; Shari wants you to go and do some shopping with her, we need more bedding, crockery, silverware, everything really; four people can't live properly on what we have here, so as you two are the oldest, you get the short straws!\"\n\nMore bedding made sense to me; I had few spare blankets, not even enough for me, really; winter was always a tough time, and in the past I'd had to resort to covering my feet with old coats on top of the thin blankets I had, and in the depths of Winter I'd had to resort to the old vagrant's trick, interleaving sheets of newsprint between my blankets to try and stave off the brutal Borderlands winter chill; the house was freezing and I couldn't afford to turn the central heating on; it was either heating, or hot water, and not much of either at that.\n\nThe following day was Saturday, so I had no work, but I was a little worried about how we were going to pay for all the stuff we needed to make this place habitable; I had no savings other than what I'd set aside to pay the bills, and I said as much to Rick, who just grinned happily.\n\n\"Come with me, Bobby, let's have a little chat with the girls...\"\n\nMystified, I followed him to the girls' room, knocked, and waited for them to make themselves presentable. Shari answered the door, wearing a short bathrobe that showed off her long, long creamy legs, and twin peaks in front where I swear her nipples were almost poking through. I blushed, but she seemed quite unconcerned about seeing me while dressed in just a flimsy, short bathrobe. Yaz was dressed almost exactly the same, and I noticed Rick studiously avoiding looking at either her or Shari.\n\n\"Shari,\" I began, \"We have to talk about how we're going to live here; I only have a little money saved, and I don't earn enough to support four people, I don't know how to stretch what I earn four ways. How are we going to make this work?\"\n\nAs I spoke, she began to smile, then shook her head.\n\n\"Bobby, it's okay; we have money; a lot of money, more than enough to keep us going for a long, long while yet. Sit down, please; I want to tell you something.\"\n\nShe led me into the room, and sat down on the bed, patting the mattress beside her. Yaz sat on the other side of the bed, with Rick next to her.\n\n\"Bobby, remember when I said that all mummy had left was her house by the time that...man was extradited? In the two years following that, she managed to build a successful property development company using the house and the trust it was held in as security to acquire a portfolio of quite valuable rental properties scattered around East London. Not too many, just enough for her to manage, with Yaz and I working for her. Ricky had been with us for a while, and worked for mummy too, he worked hard, renovating the properties, doing repairs, keeping them in a fit state for the tenants, and when she died, we learned that mummy had left the business to all three of us.\"\n\nShe looked sadly at Rick, at Yaz, then looked back at me.\n\n\"We decided to sell everything and come away to find you; none of us wanted to stay in London anymore; too many of Robert Davies' old cronies were around, and Ricky was worried about our safety, so we decided to make a clean start a long way away from London. I guess what I'm trying to say is that we have more than enough money, quite a lot, in fact, and we want to stay here, with you. All the family should be in one place, and even if we're not really a family yet, I think we can learn to be one; Ricky learned how to be part of our family, now Yaz and I want to be part of yours, if you'll let us.\"\n\nI was trying to take this all in, but those long, smooth legs and intriguing little points on the front of her robe were giving me serious distraction issues. Shari seemed to realise the direction of my attention, and I swear her back arched a little more to thrust them even further against the already tightly wrapped front of her robe, and the whisper of skin against skin as she crossed and re-crossed her long, smooth legs were almost deafening.\n\nI caught myself at this point. What the hell was I thinking? This was my sister, for Chrissake! I had no business being so interested in her legs, or her chest, or her clear, satin skin, or her deep-coral, bee-stung lips...just stop it right there!\n\nShari smiled at me, a warm, understanding smile.\n\n\"Thank you for thinking of us, Bobby, but you can stop worrying. We even have all the furniture from the house; when we sold up it was all put in storage, and there's plenty of it to fill up this place; that is, if you don't object?\"\n\nShe waited apprehensively, biting her lip in a way I found totally distracting and absurdly attractive.\n\n\"How can I object when you put it so nicely!\" I smiled back, liking the feeling, and Shari hugged me, those intriguing points on her robe pressing into my chest like two little fingertips, and once again I felt the stirrings of interest; sister or no, it felt good, and I had to catch myself; nice as it was, this couldn't be a good thing...\n\n\"I was hoping you'd say yes, Bobby! And no more silliness like this evening, yes? You've got us, now, we've got you, and no-one will ever be left out again, deal?\"\n\n\"Deal!\" I murmured in her ear, enjoying the feel of this beautiful young woman in my arms, a first for me, and a wonderful feeling.\n\nIn the morning, Shari woke me with a cup of coffee. She was dressed in skinny jeans and a sweatshirt, furry Ugg boots and a warm jacket, all topped off with a Von Dutch baseball cap; she looked cute, sexy and playful, and once again I had to remind myself that she was my sister.\n\n\"Come on Bobby, we need to do some shopping; I spoke to the storage place early this morning and they're arranging to have all our stuff shipped up here overnight for delivery tomorrow morning, so we need to get this place ready, and we need a whole bunch of stuff, so you and I get to go shopping! Come on, it'll be fun!\"\n\nI grinned as I drank my coffee; having a beautiful girl invite me out to have fun shopping was such a new experience I had no pre-programmed response except to nod foolishly and grin like an idiot! Shari ruffled my hair and turned to leave.\n\n\"Ten minutes, Bobby, we have to leave in ten minutes, so chop-chop, Big Sister's given you an order!\"\n\nI grinned as she threw the \"Big Sister\" at me yet again, leaving me thinking she may be my big sister, but she sure didn't feel like it! I watched as she walked out of the room, captivated once again by the sight of her tight little bottom bobbing inside her tight jeans, with yet another moment of guilt for finding her bottom so cute, then jumped out of bed and ran into the shower. I took a cold shower out of habit, even though something told me hot showers were no longer going to be a luxury, and got dressed in double quick time.\n\nShari was waiting for me downstairs as I tried to get ready to go out with her without showing any unseemly haste; however, I'm not very good at either communicating with girls, never having actually spoken to one before, or understanding their expectations in even the most superficial way, so I think I came off looking more than a little pathetically eager to please her, judging by the small smile on her face. However, she was kind enough to not comment, and even helped me put my old jacket on properly, her eyes clouding when she saw how short the sleeves were; I'd had it since I was 17, and there'd been a couple of growth spurts since then, but it was all I had.\n\n\"We'll do something about that soon, Bobby!\" she whispered, then straightened my collar and patted my chest in approval.\n\n\"Right, Bobby, now you look 100% adorable, let's show you to the world at large!\"\n\nAdorable? That word bemused me so much I just followed her out to the car, trying to work out where she was coming from; Shari and Yaz had happened to me so quickly I was still trying to carve out a 'sister' niche in my head to fit them into.\n\nRick seemed to have managed it quite well, his ease and easy manner with them proved that; he was obviously completely comfortable with suddenly having two sisters out of the blue; maybe he was just more adaptable than me.\n\nI knew I had a lot to unlearn, and there was still a lot I was just unwilling to let go of just yet; it was still too soon, despite what the girls had said. Shari's touchy-feely attitude to me was still more than a little disconcerting; it was like she was trying to be my best friend, although her hugging me last night had been more than a little ambiguous, and certainly not what I thought was the way best friends behaved; no, I was troubled by all these sudden changes and revelations, and still a little wary when it came to other people.\n\nShari scrabbled around on her phone for a while, one of those Galaxy things, then tapped in a postcode on the Sat-Nav and started the engine. I asked her where we were going.\n\n\"Bobby, we agreed last night we needed more bed linen, plates, cups, cutlery, everything, so we're going to the Dunelm store on Castle Street to get some basic housewares; Ricky and Yaz are going to start getting the place ready; by this time tomorrow we'll all have some proper beds, chairs, blankets and duvets, home comforts. It's all the stuff out of our old house.\"\n\nShe stopped the engine and looked shrewdly at me.\n\n\"Bobby, I know you're still not feeling the love when it comes to Yasmin and me, but we really are your sisters, and we're not going to hurt you, I promise. Ricky wanted to come home, and we love Ricky, so we came with him; he offered us somewhere we could be safe, and be a family, his family, and yours too. I don't want you to feel like we're pushing our way into your home and your life, but the simple fact is, we feel safer with both our brothers than without them. I want to have my brothers around, I want to get to know them, and I want them to want me around, but if you can't do that, we'll go, and I mean that, truly; just say the word and we'll find somewhere else. I don't want to push you out of your home...\"\n\nHer eyes filled with tears as she spoke, filled and then spilled down her cheeks. I was mortified; my mean suspicious nature had made this lovely girl cry, who'd done nothing to me except treat me kindly and try to make me part of a family again, to include me in her family. Without thinking I reached up to rub her tears away, wondering at the way she flinched as I touched her. Shari smiled tremulously at me as more tears spilled down her cheeks, and I suddenly realised she was terrified of me; she was probably waiting to see if I was my father's son, if I was going to get violent, and then I suddenly understood why she'd brought me out with her; it was to decoy me away from Yasmin in case I did become violent.",
        "I couldn't really blame her; all she really knew of me was that I wasn't Rick, but that I was Robert Davies Junior, son of my father, the man who'd threatened to sell her and had beaten and battered her mother repeatedly, sowing the seeds of her death. All the \"little brother\" business had just been banter, she'd been scared of me the whole time, afraid I was the kind of man my father was. It horrified me to think that someone would or could expect that from me; I'd never carried out a violent deed in my life.\n\nBut there was no escaping that one fact; I was the son of a man who'd done those things as a matter of course, because it was part of his nature. Shari didn't know how much of him was lurking inside me, and so she had every reason in the world to be afraid of me. And now I understood; all the touchy-feelie had been to show me that she and Yasmin were no threat, and to defuse and deflect me, just in case I was readying myself to go off.\n\nI opened the door and slid out, to lean against the icy metal of the car body; I felt sick; sick that someone could be that afraid of me, sick with the knowledge of what she thought I was, and finally I believed what she and Rick had told me last night; the fear in her eyes right now, fear of me, was all the confirmation I needed. What kind of monster did she think I was, and more to the point, how right was she?\n\nI tried to think straight, but all I could see was the fear in her eyes when she looked at me; she saw me as some kind of monster, how could I possibly convince her I wasn't? Short answer; I couldn't, because one day my ground-in, rubbed through the fabric nature was going to undo me, and take everyone with me...\n\n\"Bobby...?\" a soft voice startled me out of my reverie, and I turned to see Shari standing a few paces away, just out of reach, I noted; probably a wise move from her point of view.\n\n\"Bobby, can we talk?\" she asked me apprehensively, and I shrugged, still preoccupied with my own moment of self-realisation.\n\n\"Sure, if you think there's anything to say,\" I managed. \"I know how you must see me, I just got it; I wish you were wrong, but I think you're probably right about me; I'm not Rick, I'm probably too much like our father to change, there's too much inside me that's bent the wrong way, my father saw to that; everything he couldn't put into Nicky, or Rick, he shoehorned into me, until all that's left is someone who can only make the same choices he did. I have to leave, I can never be part of your family, and you really don't want to be part of mine. Keep the house; it belongs to all his children, I suppose, so it's as much yours as it is mine, I'll get my stuff and be gone. You don't need to know where, just forget me, you'll be safer if you do.\"\n\nShari stared at me with eyes like saucers.\n\n\"Don't go, Bobby, please. I was scared of you, but I'm not now, just very worried about you; you almost fell last night, but we caught you; if you go away who's going to be there to catch you next time? Your place is with your family, with us. You've convinced yourself that you're the bad seed, the one that's going to turn into a carbon copy of your father one day, but if you can think like that it shows you know the difference between right and wrong. Robert Davies was a violent psychopath, but you're Bobby, scared, isolated, lonely and alone, but still just Bobby, not some axe-wielding lunatic, and you're not Robert Davies, murderer and amoral sociopath. Be part of your family, Bobby, we need you, and you need us.\"\n\nShe stepped closer, coming within reach of me, but not tense and frightened now, concern and kindness in her eyes.\n\n\"Bobby, please don't go; I'm sorry for thinking what I did, but I had to know; Ricky told us how angry and bitter you were, he was sure you'd have let it go, or at least was capable of hearing the truth and be ready to accept your family, but I had to find out for myself; I've had to be the strong one for Yasmin, I was her only protection for so long, but she's been frightened all her life, and she needs her brothers, both of them, to stand over her and step in front of her. And so do I, Bobby. I've been scared as long as she has, but I couldn't let her know that; I had to be the strong one for both of us, but now I need my brothers too, I want so much to feel safe too...!\"\n\nShe reached out hesitantly and stroked my cheek, her touch almost seeming to burn me, her fingers still trembling. I admired her bravery; she'd been frightened of me, literally quaking in her boots, and yet she'd still decoyed me away from her younger sister, making herself a target should I turn out to be what she most afraid of. Her courage more than anything was what drove me to finally believe in her, her resolute bravery in facing me alone even though she was sure I would turn on her.\n\nI'd never come across anything like that, and it shamed and humbled me that I'd never been called on to show that kind of inner steel, that I didn't even know how. I had nothing and no-one to defend like that, had never even had any reason to feel like that, but now, now I felt it for my sister, knowing somehow that when I needed it, she would defend me like that if I let her; and right now that's just what I wanted...\n\nI reached up and took her hand as gently as I could, and kissed the back of it. Shari smiled, blinking the tears out of her eyes, and an abstract part of me wondered at how the tiny droplets glinted and sparkled in her long, sooty eyelashes even as I began at last to connect, really connect, with my (slightly) older half-sister. Shari came closer, and finally hugged me; there was no artifice or testing this time, all she was doing was hugging her brother and welcoming him back. I held her close, enjoying the feel of her, understanding at last what being part of a family, a real family, could mean.\n\nAfter what seemed like an eternity, Shari pulled away to look up at me, wiping her eyes with the backs of her hands as she smiled.\n\n\"So, Bobby, are you coming shopping with your big sister?\"\n\nI smiled back, surprised at how easily it came after the talk we'd just had, but her quick gesture as she brushed an errant lock of hair out of my eyes told me she wasn't afraid of me or what I might do; now she believed in me the way I believed in her.\n\nWe spent most of the morning buying basic crockery, silverware, a new kettle, and a complete set of saucepans; I only had a couple, and they were old and battered, but more than adequate to heat soup or baked beans.\n\nWhen we got back to the house, Rick had tinkered with the boiler and managed to turn the heating back on, and the place was warm for the first time since the end of summer; at first I was inclined to protest; how did he expect me to pay for it? Then Shari caught my eye and I subsided; of course, we could afford to heat the place now...\n\nRick and Yasmin had been busy, clearing the rooms ready for the arrival of the furniture on Sunday, although clearing really meant picking up the random litter of two years of neglect, the kind of detritus that accumulates when a place lies empty for so long, and giving the place a good dusting.\n\nWe'd stopped off at the local fried chicken place and bought a bucket of chicken and sides, again, something I never realistically expected to eat anytime soon, and we had an impromptu picnic sitting on the newly-swept floor of what had been the sitting room when we'd had something in there to sit on.\n\nOnce again I noticed Rick and Yasmin's closeness, the way he picked out for her the pieces he thought she'd like, or picked the juiciest pieces from his own portion and gave them to her, split his French fries with her, and teasingly spooned Coleslaw salad into her upturned mouth, laughing as he dabbed her chin where some of the mayonnaise had dripped.\n\nI noticed they sat close together, cross-legged on the floor, with their hips touching, seeming more like boyfriend and girlfriend than brother and sister. Shari seemed not to notice; her attention seemed to be concentrated on drawing me out, chattering about London, about working with her mother and Rick over the last two years or so, asking me about my job, girls, probing, but done skilfully.\n\nWhen I told her I'd never had a girlfriend, nor kissed a girl, she seemed taken aback, given my age. When I confessed that she was actually the first girl I'd ever had a conversation with, she looked sad, her hand immediately coming up to cup my chin then stroke my cheek.\n\n\"We'll have to see about changing that, won't we, Bobby,\" she smiled, her eyes appraising me as I blushed in embarrassment.\n\nWe spent the rest of the day cleaning and dusting, the girls exploring the house as we worked our way from room to room. They were fascinated, and not a little saddened, that I'd lived alone in this empty, echoing barn for almost two years. I'd done what little maintenance I was capable of, mainly checking the windows were tight, the attics were dry, and the roof wasn't leaking, but for the most part I'd done nothing except close all the doors and lock most of the shutters to prevent the sun fading the fine Burmese teak floorboards, something my father had been almost fixated about.\n\nAll the downstairs doors had fairly new locks, courtesy of Nicky, who'd been forced to replace them all one summer, so the house was as secure as I could make it. My own room used to be a lady's dressing room back when the house was built in the early nineteenth century, an adjunct to one of the bedroom suites, and I used it because it was right in the middle of the house and only had a small window, so draughts were minimal, and it was small enough to keep warm fairly easily. The main bedrooms were huge, draughty caverns, with tall windows and high ceilings, not the kind of place I relished spending a cold winter night in.\n\nAs we worked from room to room, I once again noticed Rick and Yasmin; something about their behaviour didn't seem quite right, not a usual brother/sister thing, but with my limited knowledge of how things worked or were supposed to be, I couldn't put my finger on it, or understand the things they weren't saying, but they were definitely acting 'off', but not in a hostile way at all; quite the opposite, in fact, and that just made no sense...\n\nWhat I could see, however, and understand quite clearly, was the two of them almost completely wrapped-up in each other, and I began to resent that; why should he have something that was so far out of my ken, but which he could be so at ease with. Shari eventually noticed my building resentment, and pulled me unobtrusively to one side to talk to me.\n\n\"Let it go Bobby; Yaz needs Ricky, he's good for her, and she needs him; he was her big brother before you came along, just give her time; she'll soon be able to be as close to you as she is to Ricky. It's good to see her trusting someone other than me, please don't do anything to hurt that, Bobby, please?\"\n\nI hung my head in abashed shame at that; she was my younger sister, he was my younger brother, if they were close it must be a good thing; at least they had each other, Hell they probably needed each other right now, all these changes must have taken their toll on both of them, and here I was, letting my father do my thinking and resenting for me all over again.\n\nI looked at Shari in apology, and she smiled as she smoothed my hair back out of my eye.\n\n\"Don't take it to heart, Bobby,\" she murmured, \"I felt exactly the same when I first realised just how they were so close, but I soon realised she needed him just as much as she needed me, but in a different way. She'll soon think of you the same way. She already admires you tremendously, you know, Bobby.\"\n\nI must have looked more than a little sceptical, as Shari smiled at me and smoothed my hair back once again.\n\n\"Oh yes, Bobby; you lived here all alone in this great, empty, creepy place, working your heart out for a pittance, struggling to keep a roof over your head, and succeeding, eking out a living by eating barely enough to keep yourself alive, no-one to care for you or care about you, lonely and alone, but never giving up or giving in; oh yes, she admires you, her brave, handsome, hard-working big brother! So do I, Bobby, you're kind of special, did you know that?\"\"\n\nI smiled in embarrassment at that, and Shari grinned back at me, again flipping that pesky lock of hair out of my eye.\n\n\"I need a haircut!\" I grinned, glad of the opportunity to change the subject.\n\n\"No, don't do that, I like doing this...\" she smiled, once more sleeking my hair back into place, making me smile once again.\n\n\"You really should smile more, Bobby,\" she said seriously, \"You really are gorgeous when you smile, much better looking than Ricky!\"\n\nGorgeous? I'd been called a few things in my life, especially by school kids as I shovelled up the filth out of the gutters and off the pavements, but 'gorgeous' wasn't one of them, and I could feel my cheeks burning as I flushed. Shari reached over and patted my knee.\n\n\"Maybe after tomorrow you'll have more to smile about, eh? Don't worry Bobby, things have a way of working themselves out, you'll see; until then, you have me, and Ricky, and Yasmin. She'll start talking to you soon, she knows you've changed, she just has a little more to be wary of, so give her time.\"\n\nMy ears pricked up at that, and my curiosity was piqued. What was she wary of? I had to know.\n\n\"Shari, what do you mean, why is she more wary? I know you both had to watch what my father did, what happened to her that made it so different?\"\n\nShari leaned in and whispered in my ear, and what she told me nearly made me vomit as the full sick impact of it burned into my brain; my father had tried to rape her, he'd actually tried to rape his own youngest daughter while he was drunk, to 'break her in' as he put it, so his friends could enjoy her, and it was only through sheer luck she'd managed to get away. Shari had gotten her away from him, and the pair of them had had to hide from him until he'd eventually passed out. How could he do that? Truly he was a psychopath, or a sociopath, or a fucking demon, or something equally non-human, because no normal man would even contemplate that, let alone threaten it, and to try to do that to his own daughter...\n\nShari nodded at the pair of them as they sparred and laughed together, oblivious to our conversation.\n\n\"Now do you understand why she needs Ricky? He's her safe place, her safety and protection, things she needed to feel just as he came along. You'll come to mean that to her too, I promise; like I said, she likes and admires you, she just has to learn how to trust you, just as she did with Ricky.\"\n\nI let it go; Yaz wasn't snubbing me, she had serious trust issues, and I couldn't blame her one iota, not after what I'd just heard. It occurred to me that I'd have to work to gain her trust; Shari would have to help me there. I grinned as I heard myself finally admitting that I needed the help of another person; perhaps I really was changing after all!\n\nWhen we decided to go to bed, Rick and I walked the girls to their room, ensuring they knew where our rooms were in case they needed us at all, and nothing would do but that I must check all their windows again thoroughly, just to make sure they were fully secure; after what I'd heard earlier, all kinds of protective instincts were bubbling up inside me, and that puzzled me, but in a good way.\n\nI realised that I was beginning to care about someone else other than myself, and it didn't help that Shari's face intruded into my thoughts increasingly often; as I lay in bed that night, every time I paused to think about what we'd discussed, my thoughts wandered to images of her face, her eyes, her lips, the way she tossed her hair back over her shoulder, and the scent of her, that light, flowery fragrance that trailed her everywhere. It confused me that I couldn't shake the increasingly intrusive images of her from my thoughts, nor did I want to. I eventually fell asleep in the wee hours, too exhausted to think about her any longer.\n\nThe following day was organised chaos as the huge moving vans arrived early from London and disgorged all of the stuff Yaz and Shari had put into storage; beds, carpets and rugs, dressers, chairs, tables, wardrobes, couches, and armchairs, as well as crates of bed linens, blankets, quilts, curtains, the contents of what must have been a substantial house poured out of the vans, and the movers lugged it all around according to some pre-conceived plan that Shari and Yasmin had.\n\nRick and I made ourselves useful, but the real taskmaster was Shari, and she was obviously enjoying herself immensely as she directed the burly movers to put the furniture where she'd decided it was supposed to be. At last, by the end of the day, we had a furnished house again, and the place was looking almost as it had before everything was confiscated. There was enough to equip every bedroom with a bed, a dresser, a full set of bed linens, a rug, and a wardrobe, and the movers even took away the battered old beds Ricky and I were using when they put the new ones in our rooms. I'd elected to retain my little dressing room bedroom; it suited me and I was comfortable in there. The girls decided to unpack all their clothes and re-populate the wardrobes another day; we were exhausted, so after an order-in pizza dinner, we made for our respective bedrooms.\n\nI was awakened in the early hours by Shari. I came awake as soon as she lightly tapped my shoulder, noting in passing that she was wearing just a short tee-shirt and light sleep shorts. Even in the dim light from my old lamp, her legs were flawless, long and perfect, and seriously distracting.\n\n\"Bobby, Yaz is missing, I can't find her anywhere. I woke up and she was gone, Bobby, help me find her, please, I don't where to start looking in this place, it's still so confusing in the dark!\"\n\nOf course I jumped out of bed to help, how could I not? I knew this place intimately; I knew I'd find her in double quick time, always supposing she was still in the house.\n\nI picked up a torch and led the way; most of the light bulbs had blown over time and been scavenged from around the house, and we'd not replaced them yet, so most of the house was in complete darkness. With Shari holding my arm we began at the top of the house, opening door after door, flashing the beam around inside, then going on to the next.\n\nThere were a lot of rooms, spread over 3 floors; the family who'd originally built this place way back when must have been very wealthy, and had created a series of suites, presumably one for each member of the family and a guest suite, so there were six bedroom suites, as well as the attic rooms, which had originally been servant's quarters. Each bedroom had a private bathroom and a dressing room; as we searched from room to room, all I could think was it must have been hell for the servants to turn down and clean every day.\n\nFinally we came to the first floor above the ground level, and started at the back of the house, where Rick had his bedroom. As we approached his room I could see soft golden light around his door, which I thought was odd; it was the middle of the night, so all should have been in darkness. As we approached the door we heard voices; Yaz and Rick, talking softly. I was about to knock when Shari put her hand on my arm and motioned me to silence; she appeared to be listening intently, then gasped softly and pressed closer to the door. As she touched the door it swung open silently just a couple of inches, but it was enough to see the occupants clearly. \n\nAt first I couldn't make sense of what I was seeing, then suddenly it all swam into focus.\n\nYaz was on her knees, naked, her body bathed in the golden light of half a dozen flickering candles. Rick was lying on his back, and Yaz was sliding her lips over his thick erect penis, fondling his scrotum as she avidly sucked his cock. Rick in turn had his hand between her thighs, rubbing her and making her moan around the cock she had in her mouth. As I watched, they came to some sort of mutual agreement, and Yaz pulled him out of her mouth, smiling and sighing as Rick pulled her closer to dip his head down and suck her erect nipples. From their familiarity with each other's bodies, their murmured words and fond caresses, I knew this wasn't the first time they'd done this, and as Rick sucked her nipples, Yaz sat astride him, holding his face between her two hands,",
        "\"You know what I like, Ricky, do it now, baby!\" she muttered, as Rick's hands slid around her waist to drop down and pull her buttocks apart. As Yaz slowly impaled herself on his cock with a groaning sigh, I saw Rick slide a finger into her tight, pink little anus. As I watched, Yaz leaned back, resting her hands on Rick's thighs and forcing his finger deeper inside herself as she pumped and ground against him, her eyes squeezed tight shut as she approached her orgasm.\n\nWhen it came, she shuddered and quivered on top of him, Rick squeezing her breasts and pinching her nipples as Yaz ground against him. Eventually she slumped forward onto him, kissing him wildly, then pulling back to grin at him.\n\n\"Your turn, baby!\" \n\nShe slid off him and knelt on the bed. Rick knelt behind her, his hands slipping around her torso to hold and squeeze her lovely, brown-tipped little breasts, kissing her shoulders before he thrust into her, and again, his lean muscular body rippling with every thrust. Yaz exhaled sharply in time to his thrusts into her, all the time murmuring to him, words of love, of encouragement, telling him how much she loved him, how much she loved what he was doing to her.\n\nShari stood transfixed as her younger sister and brother fucked each other, their bodies slapping together as they pumped and pounded, now giving little cries as they moved together in perfect synchronisation.\n\nShari's eyes were fixed on the drama being enacted in front of her, as were mine, my thoughts full of how beautiful Yasmin was, how perfectly my younger siblings' bodies matched each other in their intensity and complete immersion in what they were doing. I was so transfixed, like Shari, that I didn't even notice when she moved up against me, never taking her eyes off Rick and Yaz as they fucked, completely oblivious to their surroundings and to their audience, until I realised she'd backed into me, and that I was solidly, painfully erect, my straining cock like a lead bar in the confines of my shorts.\n\nShari began slowly undulating against me, never once taking her eyes off the two younger siblings as they pounded away together. I thought she was unaware what she was doing until her hand slipped down to slowly trace the outline of my erection with her fingertips, feeling my size as she rubbed slowly, agonisingly against me. Her other hand slipped down to the waistband of her sleep shorts, then inside to begin rubbing herself as she watched her sister. Her movements were trance-like, almost done without conscious volition, an automatic and instinctive reaction to what was unfolding not ten feet in front of us, her bottom lip caught between her teeth as she stared in rapt fascination.\n\nIn as much a trance state as her, my own hands came up and around her, to cup her breasts and feel the taut nubs of her stiff nipples as they strained against the material of her tee. As Rick and Yaz pounded, grunted, slapped and sighed together, Shari and I rubbed, squeezed and pressed, our hands moving automatically as our bodies responded to what was happening in front of us.\n\nRick began groaning as Yaz gave a high-pitched, sighing moan, and we watched in awestruck fascination as his flanks flexed and tightened as he emptied himself into her, his hands squeezing her nipples as he climaxed in response to her own orgasm. Shari in turn suddenly turned and pressed herself against me, her arms around me and the curve of her pubis pressed against my solid erection as she rubbed herself against me for all she was worth.\n\nMy hands dropped down to instinctively clutch and squeeze her soft, firm little buttocks, pulling her crotch tight against mine as our lips crushed together, and as we kissed so ravenously she climaxed, her body shaking and her breath softly hissing as she continued to rub and undulate against me, the hard little fingertip of her erect clitoris rubbing directly against my cock through the material of our sleep shorts. I couldn't help myself, it was too much for me, and I came like a geyser, spunk bursting out of my over-stimulated cock to drench the insides of my shorts, more than I think I had ever managed before when I'd masturbated. The force of my ejaculation was almost painful in its intensity, and I really think I would have buckled and fallen if Shari wasn't pressed against me, still shuddering in the throes of her own orgasm.\n\nAt long last my head stopped spinning, and I was able to breathe again, a long, shallow intake of breath that alerted Shari that I was back in control of myself again. She stepped away from me and took my hand, motioning me to silence as we softly padded away down the corridor and back to my room. As I opened the door to go in and clean myself up, a slight pressure on my arm made me turn back to her. As I did, she stretched up and kissed me once, softly, gently, on the corner of my mouth.\n\n\"Good night Bobby...and thank you,\" she whispered, and then she was gone, back to her room to wait for Yaz, I supposed. I went into my room and cleaned myself up as best I could before flopping into bed; this had been one weird night, and I still wasn't sure I believed any of it, or understood what had just happened, but now I was too tired to care, and I had to get up in the morning for work.\n\nI was up and out of the house before anyone else was stirring; I had to be at work for 7 a. m., so I had to leave before 6, as it was a long walk to the Street Sanitation depot where I was based. All day as I worked cleaning the streets of Carlisle I thought about the strange, almost surreal episode with Shari last night; I was having trouble defining what exactly we'd done, and why, and if it would happen again; had I had sex and not realised it, or was it just a...a...thing, something to pass over and forget, to get past and never think or talk about ever again?\n\nI was like a zombie as these thoughts occupied my mind all day, my work routine almost completely mechanical, ingrained patterns and habits piloting me through the day while my mind was somewhere else entirely. As the day progressed I realised I wasn't exactly straining at the leash to get back and have to look Shari in the face again, or Rick and Yasmin, come to that; I had a suspicion, bordering on near certainty, that they'd take one look at my face and know that I'd been watching while they did something so very personal and private.\n\nAt last, I could stretch out my day no longer, and I had to go home; fortunately I had an hour's walk, so with any luck I'd be able to slip in while they were having dinner and go and have a shower before I could think of facing them; I didn't want them to see me anyway, I knew I must smell as bad as I looked and I really didn't need an audience.\n\nLuckily I had some change on me, so I was able to buy a Cornish Pasty for my dinner, I'd eat in my room while I thought about how I was going to deal with what I'd seen, and what I'd done, and where I was supposed to fit Shari and Yaz into my world after what Rick and I had done with them; I may not have known much about life, but I did know that definitely wasn't the sort of thing you were supposed to get up to with your sisters!\n\nBy the time I got home I was just too dog-tired to really care anymore; I could hear the others talking in the dining room, so I went up and locked myself in the bathroom while I indulged in a long, hot, utterly luxurious shower, revelling in the feel of the hot water as it relaxed and calmed me. To lie on my bed afterwards and not have to think about or interact with the others for a while was as restful as it was going to get, but I knew I couldn't avoid them forever.\n\nI think what was most confusing to me was where I fitted in all this; Shari had Yasmin, Yasmin had Rick, but I had no-one; I wasn't part of that particular equation, I was the nettle in their bunch of roses, and I felt like I had no place in their family dynamic. I sighed as I thought about how they'd become a family before they ever came here, and it was too late for me to fit into whatever they had going on here; I'd been alone for so long it had become my way of life, and I couldn't fit into theirs, I was sure of it; family really meant nothing to me anymore. Whatever had happened between Shari and me the previous night was almost certainly a one-off, there was no way it was going to happen again, and that thought inexplicably saddened me.\n\nI was awakened by someone gently shaking my shoulder. As I came awake I saw it was Shari, and my first muzzy thought was that she wanted me to help her find Yaz again, before I came fully awake.\n\n\"What, what's the matter, is something wrong...?\" I began, but she shook her head.\n\n\"Bobby, why didn't you come and eat with us tonight?\" she asked softly, and I looked away. She looked at the nightstand and picked up the remnants of my pasty.\n\n\"Bobby, what's wrong, we cooked a nice dinner, all the family ate together, everyone except you. Why didn't you join us? Please tell me, we missed you, I missed you...\"\n\nI sighed and sat up, and Shari immediately brushed my hair back out of my eyes. I gently shook her off; this was going to be hard enough without her touching me as well. Her eyes widened as she pulled her hand back, the look of concern in her eyes replaced by one of apprehension. I didn't beat about the bush.\n\n\"Shari...Shereen, I'm never going to be part of this family, not in the way you keep trying to make me. You, Yaz, Ricky, you were a family before you ever came here, and you can't shoe-horn me in somewhere and pretend we're a single unit, because it wouldn't be true. I don't belong with the three of you, and I don't know how I can ever be one of you. I don't have a role anywhere in this...this new family you keep telling me I'm part of. Yaz has her older brother and her older sister, both of you protect her, and she looks up to both of you, so you don't need me; all I'd ever be is an outsider, looking in and never really being a part of anything. What I said before still feels true to me; I have to go and find something of my own, what you've got now doesn't leave any room for me, and pushing my way into your family will eventually make you hate or resent me. I'm sorry, Shereen, you really have only one brother, and it's Ricky. Now please, I'm really tired and I have to be at work in a few hours...\"\n\nShari looked at me with huge eyes, her lip quivering.\n\n\"But Bobby, last night...\" she began, but I cut her short.\n\n\"Last night was a mistake, can't you see that? You keep pushing this 'brother' thing on me, but brothers don't do that with their sisters, and if I'm not your brother it had even less meaning; it was just because I was there, not because it was me; it may mean nothing to you, but if I'm really your brother, then we did a really wrong thing and it can't happen again; that's why I have to leave.\"\n\nShari looked at me as two tears ran down her cheeks.\n\n\"Oh Bobby, last night was wonderful, and it was because of you! Don't leave us, you're our brother, you're my brother, and this is your home, we're your family and you're supposed to be with us, where you're safe. Until we came here, part of us was missing; that was you, we needed you to make us complete. Ricky told us all about you, how hard you worked, for so little, but still you never gave up, and Yaz and me, we both knew we needed to have you with us; even if we never really spoke of it, we need your strength to hold us together, I need you with me, I can't do it all by myself!\"\n\nShe dashed away the tears that sprang in her eyes. \n\n\"We didn't come here to show you how close Yaz and Ricky and I were; we came here to find our brother and put him back where he belongs; in the middle of his family, all of us together, strong and together, not the three of us and you! We love you Bobby, your sisters love you, when you can believe that, you'll find a place waiting for you, believe me! You've been alone and in need for too long Bobby, now you have all of us, and we have you. Don't leave us Bobby, we need you!\"\n\nShe leaned over and hugged me, her cheek soft against mine, and her breath soft and warm in my ear. When she pulled away I felt the dampness on my cheek from her tears, and smiled at her as she wiped her eyes with the heels of her hands, then looked at me quizzically.\n\n\"What we did last night, didn't you like it, Bobby?\" she asked me softly, catching me off-guard.\n\nI had enjoyed it; it was the first encounter I'd ever had with a girl; the only thing that soured it for me was that the girl in question was my sister; other than that, it was just perfect. I looked away, unable to meet her gaze.\n\n\"Shari, I'd be lying if I said no, but you're my sister; brothers don't do things like that with their sisters...!\"\n\nShari smiled at me.\n\n\"So what about Ricky and Yaz, then? What about what they were doing? Bobby, if you were hurting me, or I was hurting you, or one of us was forcing the other, then it would be wrong; but no-one did, we did what we did because it was what we wanted, and it felt good!\"\n\nShari sat down next to me and slid her arm around my waist so she could rest her head on my chest. My arm came up instinctively around her shoulder, holding her against me. When she spoke again, it was softly, like she was saying something that she only wanted me to hear.\n\n\"Bobby, I liked having you make me feel good, I want you to keep making me feel good, and I'll make you feel the same. Why can't we keep making the people we love feel good? Yaz needs Ricky, and she needs me, but I need to have you there too; I felt it the very first time I saw you. I meant it when I said you were my brother, and I mean it now. Please don't leave me, not when I need you. Yaz was frightened, but she had me, and I made it alright for her, but I was frightened too, Bobby, I was frightened the whole time, and I had no-one; I need someone to make it alright for me; I need my big little brother to care about me and stop me being frightened too!\"\n\nI realised she was crying, and without thinking I hugged her, letting her cry against my chest, her tears wetting my tee-shirt as she cried silently. Eventually she stopped, my hand slowly rubbing her back as I tried my best to soothe her, to take the fear and sorrow away. Finally she sighed and sat up, looking me in the eyes as she spoke softly, earnestly to me.\n\n\"Our father did a lot of harm to us, to all of us; he really was an evil man, but you're not him, you're nothing like him, no matter what you believe he's done to you. You think he's made you into an outsider, well you're wrong; there's a whole lot of things waiting inside for you, Bobby, all you have to do is want them; we want you to come in and be warm, be the part of us that's missing! We all have a past we'd rather forget, but we can't do that; it's part of us, but that doesn't mean it has to tell us who we are for the rest of our lives. Bobby, we can have a future, all of us, as a family. Let the past go so you can have a future with us, with your family!\"\n\nHer words were spinning and echoing inside me, and I could feel the truth of them, and her sincerity; she really did need me, and it was a strange and not unpleasant feeling; to be needed, to have another soul actually need me to care about them. My fears and feelings of isolation and rejection simply melted away as this wonderful girl spread her soul out for me and invited me to wrap it about myself. The realisation that I could be part of something as simple, as profound, and as warm as a family suddenly filled me. Shari was my sister, and I realised I loved her, her appeal to me for protection and support had kick-starting something inside me, those protective instincts I had just discovered reared-up again and made me determined to keep my sisters, my family, safe from harm at all costs.\n\nShari watched as my inner turmoil resolved itself, finally smiling as I smiled at her.\n\n\"Okay, you've convinced me! I'm sorry if I hurt your feelings, I didn't mean to, this is all...so new to me; Rick comes home, and he brings my sisters with him, sisters I never knew I had, and I find out things about my family that I wish I'd never heard, but most of all, I find my sisters are smart, brave, loving, and truly, truly beautiful; at least my father got one thing right in his whole poisonous life!\"\n\nShari blushed and hugged me again, laying her cheek against my chest.\n\n\"Hold me, Bobby, please...\" she sighed, and of course I did, lying back down so she could lie next to me, spooned against me with my arm around her. I had no ulterior motive for holding her like this; I had to get up for a long day's work in a few hours, and this was the most restful way. Shari obviously realised she was safe with me, pulling my arm further around herself into a more comfortable position. Her warmth, the restful position we were lying in, I was starting to drift away when she suddenly turned to face me so she could hug me closer.\n\n\"I meant what I said yesterday, Bobby!\" she whispered; \"I'm still your big sister, and big sisters look after their little brothers! Now go to sleep, you've had a long day; don't worry about anything; I'll watch over you.\"\n\nI grinned to myself at her words, but I have to be honest; it felt so nice to be held and lulled to sleep, so comforting, something I had no memory of ever being done to me before, and I fell asleep with the sound of her breathing and her hand on my waist, her warm body pressed against mine, no sexual overtures or seductiveness, just simple warmth and comfort radiating from her.\n\nI woke just ahead of my alarm, as I had always done, to find I'd rolled over in my sleep and was now lying spooned against her. Shari was fast asleep, still fully dressed but with a corner of my covers pulled over herself and her arm still thrown protectively around my waist. I slid out of bed as stealthily as I could so as not to disturb her, and pulled the covers up over her.\n\n\"...get up in a minute, mummy...\" she muttered, then sank back into deep sleep again. I silently collected my clothes and slipped into the bathroom to wash, shave and brush my teeth. Once finished, I dressed in there so as not to disturb anyone, but I guess I wasn't quiet enough; as I came out, the girls' bedroom door opened and Yaz peered out.\n\n\"Shari...?\" she whispered.\n\n\"No, it's me, Shari's still asleep.\" I whispered back, noting the look on her face. \"Don't worry, she's fine; she fell asleep watching me, she must have been really tired, so I left her there; you can check on her if you like, just don't disturb her...\"\n\nYaz made to go to my room, but stopped when I spoke to her again, never raising my voice above a soft whisper.\n\n\"Yaz, I just want to say sorry for scaring you or making you feel like I didn't want you here, or for anything else I might have done. I'm sorry, I didn't understand, but I do now; Shari explained it all to me, and I'm sorry I didn't say this before, but I want to, now; I'm glad you came here, I'm glad my sisters are here, and I promise I'll always look out for them. I'm sorry I made you afraid of me, I didn't do it on purpose, and I'll never do it again. Can you forgive me?\"\n\nYaz grinned as she stretched up on tip-toes to kiss my cheek.\n\n\"Shari said you'd be as sweet as Ricky, you just had to work some things out for yourself first, and she was right. I think I'm going to like having big brothers as sweet as you two!\"\n\nA huge weight seemed to lift off my chest, and I realised I'd almost stopped breathing as I waited for her answer. More than anything in the world right now I needed the good opinion of this beautiful girl, my baby sister, and I felt almost light-headed with relief when she smiled and actually spoke directly to me for almost the first time, no longer wary of me.\n\n\"I wish you didn't have to go to work today, Bobby!\" she whispered, \"you look so tired all the time, you need some proper rest and proper food; you didn't have any dinner last night, and now you've got to go and work all day long; Shari's worried about you, and so am I; stay home, Bobby, please, let us look after you; at least you'll get something hot to eat...\"",
        "I was strongly tempted to go along with her, but I'd already committed to working that day, so I had to regretfully decline her request. Yaz looked sad, then once again stretched up and planted a kiss on my cheek.\n\n\"There'll be a proper dinner waiting for you tonight, so you be back in time to eat, okay? The least Shari and I can do for you is make sure you get some proper nourishment after what you've been living on, so be here for dinner, Bobby, that's an order!\"\n\nI spent that day in a haze; all the unpleasantness that usually accompanied the work seemed to pass me by, and the day seemed to fly by; before I knew it, it was knocking-off time; this time, instead of dawdling along, taking my time cleaning and storing the sweeping machine I gave it a quick once-over, threw my coverall in the laundry chute and hurried home.\n\nYaz hadn't been lying when she said there would be proper dinner waiting for me; she and Shari had produced a meal fit for a king; roast beef, melting Yorkshire puddings, golden, crisp roast potatoes, steamed cabbage, roasted carrots and parsnips, thick, unctuous, red-wine gravy, and a home-made apple and blackberry pie for dessert. Dad had never laid on such a spread for us; he'd always believed that excess was a sinful waste of finite resources, and that enough was as good as a feast; at least, that's what he told us as we ate cheap food, and not too much of that, either; it's only with hindsight I can see now that he was a tight-fisted cheapskate who begrudged spending any money on quality foodstuffs, preferring instead to buy the very cheapest cuts of meat and finding ways for us to eke it out from meal to meal; he was a very rich man, he could have indulged us, but he never did.\n\nI will admit here that I gorged myself; the more I ate, the more a smiling Shari or Yaz piled on my plate, and I was in heaven. Every so often I'd look up and see Rick smiling at me, realising with a small shock just how handsome he really was; no wonder Yaz was in love with him. As I looked at Ricky I realised something else; apart from his dark hair and grey eyes, he had a strong resemblance to Nicky, that same grin, that same quizzical lift of his eyebrow, the same habit of raking his hair back with his fingers.\n\nI was suddenly almost overcome with remorse for the way I'd always been with my big brother, the feeling hand in hand with the need to see my big brother again, to see him and speak to him again, to hear his voice, to know if he was even alive, but most of all, to tell him just how sorry I was. Shari noticed the change in me, her glance taking in my watching Rick as he talked, laughed and sparred with Yaz, and her own lifted eyebrow as she silently asked me what was wrong. I shook my head slightly, not wanting to disturb Rick and Yaz as they talked and flirted, and Shari nodded slightly, acknowledging that we'd speak later.\n\nAfter dinner, Shari volunteered me to help her clear up. Rick and Yaz grinned as they dodged that particular bullet and hurried away to stretch out and watch TV in the family room before they got volunteered anyway.\n\n\"What's the matter, Bobby?\" she asked me as we washed and racked the dishes and silverware, \"what happened in there? You suddenly looked like you'd seen a ghost, what happened?\"\n\nI looked away, unable to face her.\n\n\"I suddenly realised just how much Rick looks and sounds like Nicky; and when I realised that, I knew I wanted my big brother back, even if just for a minute or so, just long enough to tell him how sorry I was for being such a prick; we made it easy for Nicky to leave; we made him an outcast in his own home, just as much as dad did; Nicky was one of the good guys, in hindsight I know now he tried to connect with us, and we snubbed him every time, we pushed him away, and we watched while our mother took him because we didn't want him and we didn't want her. It's no wonder they were so close; he needed her, she needed us, but we didn't need her, so she and Nicky became outcasts together. I'm so, so sorry, Shari, I fucked-up so bad with Nicky, and I know people don't get second chances, but I'd really like to have one with Nicky, because I really need him right now, I really need to know he's okay, that dad didn't...that he's still alive somewhere, that he's safe and maybe he found his real family, because that's not us, it never was, but I wish we had been!\"\n\nMy words felt like stones in my throat, and my heart was like a lump of lead; Yaz and Shari had taken away the anger and the bitterness inside me, but that had left room for the guilt and sorrow to flow in; guilt over what we'd stood by and let our father do to our mother, guilt over the way we'd snubbed, alienated, and pushed away our big brother, and now loss and sorrow for both of them, that they were both gone forever, and we were largely responsible for that.\n\nI felt more than heard Shari step up behind me, and then her arms were around my waist as she hugged me and pressed her cheek against my back.\n\n\"Bobby, tell me about Nicky; I want to know about my big brother. Tell me what he looked like, what he sounded like, what he liked, what he did. Nicky is my brother too, and I want to know about him. Talk to me, Bobby, but not here.\"\n\nI turned around and she took my hand and led me back into the sitting room, Yaz and Rick huddled together on the couch watching TV, or so they'd have us believe; their flushed faces and bright eyes told another story completely, and Shari looked at me, again with the raised eyebrow, and I shrugged; I didn't see any need for them to sneak around, we already knew what was going on.\n\nShari pulled a hassock in front of both of them and sat on it, looking at both of them, a hand on each of their knees. Both of them looked apprehensively at her, and I think they guessed what was coming.\n\n\"Yaz, Ricky, it's OK, Bobby and I, we...know, about the two of you, about how you feel about each other...and what you've been doing. Before you say anything, let me have my say. First off, Ricky, do you love my sister, and remember, she's your little sister too, so what do you say?\"\n\nRick looked at me, at Shari, then Yaz, staring intently into her eyes.\n\n\"Yes, God, yes, more than anything! I love you Yaz, and one day I want to marry you! Is that enough for you, Shari?\"\n\nShari looked at Yaz, and again quirked her eyebrow.\n\n\"And what about you, baby, what do you have to say?\"\n\nYaz looked at Shari for a long moment, then slipped her hand into Rick's and turned to him.\n\n\"Ricky, I love you, and I always will; I loved you the first time I saw you, and all the time we've been together since I only ever thought of you. Shari, I love Ricky, and he loves me, and we want to be together; mummy knew, I'm sure, that's why she asked Ricky to promise he'd always look after me, but I always knew he would anyway. I love my Ricky, and if we have to leave, we will, but we're staying together!\"\n\nAs she spoke, Rick's arm slipped around her shoulder and pulled her close to him, while Yaz looked at me to see what I was going to say. Shari also looked at me, again with a slight lift of her eyebrow, obviously feeling that it was time their big brother spoke to both of them. I sat down and grinned at them, watching the tension drain as I did.\n\n\"Rick, Yasmin, you're both adults, you're both over eighteen, so what you want to do is entirely up to you. Shari and me, we're not your parents, just your older brother and sister, and you don't need our approval or permission, or anything like that. Speaking as your big brother I have to say I don't have any objections to you being together; actually it's none of my business, this is your home, and I don't want you to leave; I only just got you! We saw you...together, the other night, by accident, we weren't snooping or anything, and what I saw was a young couple who looked and sounded like they were in love. Rick, what Shari says goes for me, too; Yaz is still your little sister, and mine too, so don't mess up! And while I'm on the subject, I have to say, I do admire your taste!\"\n\nYaz dimpled at me, and Rick looked relieved, grinning that grin at me, the one that Yaz obviously found irresistible, and, I realised, suddenly looking uncannily like Nicky, just how I remembered him from the very last time I saw him. I had to grin back as I continued.\n\n\"If you want to be in love, that's none of my business either, but this is your home, why not be in love here. I think Shari feels the same. Anyway, you don't have to go anywhere, this place is big enough for the two of you to have your own space and we still get to keep this family together; I think we all need each other right now, we need to stick together, so what do you think?\"\n\nRick nodded at me, his eyes fixed on mine, while Yaz climbed off the sofa and came over to hug me and kiss me on the top of my head.\n\n\"Thank you for understanding, Bobby!\" she whispered, then rubbed noses cheekily with me and giggled before flopping back down next to Rick. Shari smiled and winked at me, telling me I'd handled it correctly, then got up off her hassock and came to sit on the arm of my chair, leaning against me with her head resting on her hand along the back of the chair. She looked over at Rick and Yaz, who were deeply involved in a whispered conversation, and cleared her throat meaningfully.\n\n\"Before we came in here, Bobby and I were talking about someone who should be here with us; Bobby was going to tell me about Nicky, our older brother, I think you two should hear this too. Bobby?\"\n\nSlowly, reluctantly at first, but encouraged by the occasional gentle pat or rub on my arm, I began talking about the best one of us, our brother Nick. I spoke about how we'd never wasted an opportunity to make life difficult for him, tattling to our father, making-up stuff about him, grinning between us like idiots when our father beat him or punished him, making sure that he got the tail-end of everything, making demands on our father's strict budgets that left nothing spare for him. We always had good clothes, but now, when I told it, I realised that Barbara had had to scrimp and save to stop him walking around in the same threadbare clothes year after year.\n\nAnd yet he'd tried to get through to us; as I told the tale, instance after instance where he'd reached out to us suddenly flashed into view, recognised by hindsight, but rejected out of hand at the time by the selfish, bratty, piggy little weasels we'd been. It was a searing story for me to tell, because now I recognised what a misery we'd helped to make of that boy's life, and yet he never lost his sense of humour, he never forgot how to laugh and joke, even if we didn't get him half the time; Barbara did, and the sound of the two of them laughing about something in the kitchen always infuriated us, because it meant he still had something we hadn't taken away from him yet.\n\nBy the time I was finished, Yaz was looking at me with a shocked expression on her face, and Rick had his face buried in the crook of her neck, his own shoulders shaking. I was wrung out by the whole thing, but it had been cathartic, I felt cleaned out for the first time. I slumped back in the chair, emotionally drained, shocked and ashamed of myself. Finally, I had learned what happens when you look the Gorgon in the face; I'd dug deep down inside myself and pulled out all the stuff that had accumulated, the parts of me that should never have been, and showed it all to the light, and while I felt deeply soiled by what I'd finally admitted to, paradoxically I also, finally, felt clean for the first time ever.\n\nYaz pulled Rick closer, smoothing his hair as she whispered to him, soothing him while Shari and I watched as my brother paid his own price for what we'd allowed to happen to Nicky. I felt a soft hand on my forehead as Shari curled her arm around me and pulled me close to her.\n\n\"Poor baby, carrying that around, no wonder you feel so isolated. You can let all that go now, Bobby, you shared it and it's gone now. From what you say about Nicky, I think he's forgiven you, he seems like he wouldn't have carried any of this around with him. One day we'll find him, or he'll come home, you'll see. Have you any pictures of him? I'd really like to see what my big brother looks like.\"\n\nI shook my head, but Rick looked up, his eyes wide and sat bolt upright, like he'd just had a severe shock. He got up and almost ran out of the room, and I heard him run upstairs, all the way up to the attics. I wondered where he'd gone, and why, when we heard him running down the stairs again. He burst into the room, and dumped a pile of photograph albums on the coffee table.\n\n\"These were packed away in Barbara's...our mother's stuff; there are pictures of Nicky in there!\"\n\nShari picked up one of the albums and began leafing through it. I looked over her shoulder and immediately felt my eyes pricking; there she was, Barbara, our mother, my mother. She looked so young, so beautiful, picture after picture of her, some alone, but mostly shots of her with a sweet, cherubic little blonde-haired boy.\n\n\"Nicky?\" asked Shari gently, and I nodded, not trusting myself to speak. Rick was also leafing through an album, tears on his cheeks as he took in picture after picture of our mother, laughing, smiling, holding Nicky close to her, his face open and trusting, holding hands with his mum, OUR mum. I leafed through another album, again, pictures of our mother, of Nicky, laughing, studying, playing, and running, but no pictures of us, not one.\n\nI looked again at Shari, my own eyes filling as I realised my mother had taken no pictures of Rick or me, how could she have, she'd been bullied and terrorised, cowed and beaten down, and hadn't even been allowed to tell us she was our mother. One look at her face in those myriad pictures told me how much she'd loved and cared for Nicky, and the knowledge that I could have had that as well burned like acid in me. Shari reached over and gently thumbed my eyes, her own eyes two wells of sorrow and compassion. She nodded at Rick, slumped back in his seat, his eyes closed as tears wet his cheeks, while Yaz leaned against him, rubbing his chest, whispering urgently to him, and motioned to me to follow her into the sitting room.\n\nOnce in the sitting room she sat me down and sat next to me, pulling me round until I faced her.\n\n\"Bobby, everything you said earlier, did you mean it? About finding Nicky, I mean?\"\n\nI just nodded, still mentally reeling from the confession I'd made, and Shari smiled at me.\n\n\"Good; let's do that then, let's go find our brother! Let's find him, and bring him home, and put our family back together!\"\n\nI looked at her in astonishment. I really had no idea how we'd accomplish that, where we'd even start; the trail was four-years cold, and getting colder by the day, but something about her made me feel sure she'd find a way; already I was beginning to accept Shari as the head of the family, and her confidence and cool competence was going to be a major asset to this family now. I grinned back at her, and she looked closely at me.\n\n\"You know, Bobby, when you smile like that, you look an awful lot like Nicky too; different hair, paler eyes, but still almost a dead-spit of him; he was gorgeous, and so are you!\"\n\nI had to laugh at that, this was the second time she'd called me gorgeous, and it was still funny, but she wasn't laughing.\n\n\"I meant it, Robert Davies; you are truly handsome, you should smile more often, it suits you,\" she murmured, \"I used to think Ricky was handsome, and so he is, but you're the one with the looks in this family, you better believe it...\"\n\nNow that I was cringing with embarrassment, she stood up and opened the door into the family room, and pulled up with a soft gasp; intrigued, I stepped up and looked over her shoulder, to see Yaz sitting astride Rick, his hands tightly clenched around her pert little bum in her stretch jeans, her arms around his neck as they enthusiastically 'sucked face' as the phrase puts it. Yaz was grinding her crotch against Rick, their lips glued together, and both of them were oblivious to the rest of the world. Shari looked up at me, then slowly shut the door again.\n\n\"Wow, they didn't waste any time did they?\" she grinned, \"looks like I'll be alone in that big room tonight, unless...!\" she grinned up at me again and pushed the door open, Yasmin and Rick both jerking around guiltily.\n\n\"Shari, I'm...we... we were...!\" she stammered, Shari just grinning at her until she ground to a halt and looked at me in mute appeal. I just shrugged, and sat down, deliberately taking no notice, letting her know that I didn't think she was doing anything wrong, and letting Shari field this one.\n\n\"Yaz, we told you, this is your home, and if you and Rick are serious about each other, well, Bobby and I have nothing to say in the matter; your choices, babies!\"\n\nYaz looked stunned, and Rick looked directly at me.\n\n\"So, Bobby, if Yaz and me want to...be together, tonight, you're gonna do, what, nothing, is that right?\"\n\nI looked him right in the eye.\n\n\"Got it in one, Rick; I told you; you and Yaz are adults, what you do is your business, this is your home, both of you, and if you want to be together tonight, or any other night, you certainly don't need my permission or my approval!\"\n\nRick and Yaz exchanged glances, then stood up, much stretching and phoney yawns suddenly in evidence. I had to grin, there was no need for all that pantomime; they could just as easily have said \"well folks, we're off to go fuck now, don't wait up!\" and neither Shari nor I would have batted an eyelid...\n\nAs they were trooping out, Shari called out to them, a wicked grin on her face.\n\n\"Use our room, Yaz, Ricky's only got a twin in his room, the Queen-size is much bigger!\"\n\nEven I saw the backs of their necks flush at that one, and the grin on Shari's face was worth a million bucks. Of course, that meant she had nowhere to sleep, and I asked her where she planned on sleeping.\n\n\"Don't worry, Bobby, I have a plan...\" she twinkled back at me, making me feel very uncomfortable for a second or two.\n\nI pottered around, picking up and straightening up, until Shari slapped me lightly on the backside with a rolled-up magazine.\n\n\"Go to bed, Bobby, you've had a long day! Just one thing; take the day off tomorrow, we need to talk and make some plans, and we need you here for that; trust me, you're going to like it. Goodnight, baby brother!\"\n\nSomewhat bemused at being sent to bed, I thought about the evening, and what we'd achieved, and where were going, and was just about to turn off the lamp and go to sleep when there was a light knock on my door. Before I could answer, it opened and there was Shari, once again wearing that ridiculously short bathrobe, long, endless legs very much on display.\n\n\"Is there something wrong...?\" I began, but she shook her head.\n\n\"No, everything's fine, it's just...I can't sleep, not alone in that big room upstairs; it's so creepy up there all alone! Shove over, Bobby, you've got a room-mate tonight...if you don't mind?\"\n\nYes I minded, not when she looked so completely desirable, and I really didn't think she should be climbing into bed with me, not when she was a sneeze away from being naked, but all my objections died in the back of my throat when she dropped her robe; underneath she had on the shortest cut-off tee-shirt and tiny, sprayed-on boy shorts, and all I could do was gawp at how beautiful she was, how lithe and willowy, how outrageously sexy she looked right now.\n\n\"Move along Bobby!\" she smiled, and I scooted over, mouth still hanging open at this vision who wanted to climb into bed with me, actually wanted to; I wanted to pinch myself to check I wasn't dreaming, that she'd somehow invaded my mind and this was just an erotic dream, but then she slid into bed next to me and she really was there, warm, and soft, and smelling divine.",
        "\"That's much less scary than being all alone up there!\" she murmured as she huddled up against me, spooning against me and shoving her delectable rear into my lap, which wasn't a good idea; I'd had the makings of a respectable erection from the moment she'd first slipped into my room, and now, with all the added stimulation, I rose fully to the occasion. Shari seemed not to notice, but then she began pushing herself against me, slowly at first, and at first I thought it was just her getting comfortable in her half awake state, but then things changed -- radically.\n\nI was just getting used to the feel of her peach bottom jammed against my solid cock when she turned around and pulled herself against me, her arm around my waist and her lips an eyelash away from mine.\n\n\"That's better, Bobby, don't you think this is more comfortable?\" she murmured, her mons pressed right up against my erection. I didn't trust myself to speak, as I was still trying to make sense of what she was doing; she must have been able to feel me in my current state, Christ, it was nearly poking me in the chin, but all she did was wiggle slightly against me, a soft groan escaping from me as she did that.\n\n\"Bobby, relax, you're all knotted up, and so tense...!\" as she said that, her hand slid down and brushed against me, making me groan again. I still wasn't sure what she was doing, but whatever it was, it was basting me slowly but surely in my own juices. I was in a haze of arousal tinged with guilt, and then I felt her hand on me again, her fingers curling around me as she held me through the material of my shorts.\n\n\"You really are so tense, Bobby, you need some help here...\" she murmured, her hand squeezing rhythmically as she breathed softly against my lips, her breath sweet and fresh, and then her tongue flicked out to lightly lick my lips, one quick flick followed by a small peck of a kiss full on my lips. My mouth sagged open as I realised she was trying to seduce me, and if the state of my cock was anything to go by, she was succeeding! My hand slipped around her waist of its own volition, then slid down to cup her tight little bottom, squeezing gently as I explored the tight, firm little bum I'd admired just a couple of days ago. It felt like she'd been teasing and taunting me forever, could I really only have met her three days ago? \n\nI pulled her closer, her lips now almost against mine, and Shari smiled, and took that last step, pressing her lips against mine as her tongue insinuated itself between my lips to rub lightly against my own. I was astounded; this was my first real kiss, and it felt amazing, wonderful, incredible, like nothing I could ever have imagined or dreamed of, and I pressed forward, wanting to keep doing this with this lovely girl. No more feelings of guilt troubled me; I was in bed with a gorgeous girl, who apparently wanted me, all I wanted to do was whatever she wanted to do, anything to relieve the ache in my solidly erect cock.\n\nShari broke our kiss, to kiss my neck, my throat, the hollow of my neck, while I slid my hand up the back of her tee-shirt to feel the warmth of her silky back, then back down to cup and squeeze her marvellous little buttocks again. Shari tugged at my own tee-shirt, and I realised she wanted me to take it off, so I did, and she immediately attacked my chest, kissing me in a line from the hollow of my throat to my navel and back up again, before once more kissing my lips. I tugged in turn at her Tee-shirt, and I could feel her smile against my lips as she leaned away from me.\n\n\"You're learning, baby!\" she smiled, whipping her top off and giving me my first view of her small, beautiful breasts, round and firm, topped by delicate brown nipples at least half an inch long and looking deliciously tempting. I don't know how long I stared at those beauties, undecided as to what to do, so Shari made my mind up for me.\n\n\"Suck them Bobby, lick and bite them, I like that, do it for me Bobby!\" she smiled, shaking her shoulders, making her delectable nipples dance in front of me. I reached for her and she pushed her breasts into my outstretched hands, her nipples hard and rubbery against my palms. As I rubbed those firm, rubbery little points she sighed in pleasure, arching her back to push them even more into my hands. Instinct took over, and I began to squeeze and lightly pinch those solid peaks, making her sigh and wriggle even more.\n\n\"Bite them, Bobby, suck them, please!\" she begged, and I obliged, leaning down to take one in my mouth, enjoying the feel of the hard rubbery nub against my tongue. I rasped it with my tongue and felt Shari shudder, gasping as she did so, so I did it again, harder, feeling an even bigger shudder, and a muted \" Ooohh!\" from her, so obviously she was enjoying what I was doing to her. I took the other nipple in my mouth, did the same thing, and the same response from her, but I really rang the bell when I sucked hard on the nipple, as she'd asked.\n\n\"Ooohh God, yes, like that, Bobby, keep doing that, oh it feels...\" she groaned, arching her back to push her nipple even harder into my mouth.\n\nI was in heaven; I'd never seriously expected to ever be in this situation; I'd resigned myself to the fact that girls probably weren't going to view a minimum-wage street-sweeper as boyfriend material, so a future alone and a sex-life comprised of my right hand was what was in store for me, and the girls and situations in the girlie mags were only ever going to be wank-fantasy material, and to now find myself in bed, mostly naked, with an exotically beautiful girl who acted like she wanted me, well, it didn't get any better than that...\n\nAnd then it did. Shari pulled away from me, smiling at my confused look to lie down and hook her thumbs in the waistband of those tight little shorts, and in one swift glide slid them off and dropped them on the floor, giving me my first view of her smooth pubic area, her labia puffy and pink, the tip of her clitoris just beginning to peek through from under its hood, and the clean, fresh, sweet smell of her arousal all reached down inside me and clicked my limbic system into high-gear, making me want her more with every passing second. My cock was like stone, painfully erect, something she noticed right away.\n\n\"Take your shorts off, Bobby, I want to see this!\" she murmured, and I was so in thrall to her I obeyed, even though I'd never been naked in front of anyone before in my entire life. I knelt up on the bed and fumbled with my shorts, suddenly modest, but Shari solved that by just pulling them down, her eyes widening as my cock swung free, only about seven inches and quite thick, but nothing like the columns of man-beef I had seen in porn mags. Shari, however, seemed more than satisfied with it, to judge by her sparkly-eyed comment.\n\n\"Oh Bobby, that's beautiful, I can't wait...!\"\n\nWith that, she bore me over backwards, her lips glued to mine as her hand squeezed and fondled me, until she settle into a gently rhythmic pumping motion, lightly stroking me as she kissed me. When she thought I'd had enough, and had fired me up enough, she threw her leg over me to straddle me.\n\n\"We'll go this way Bobby, better for you, for your first time!\" she smiled as she leaned down to lightly kiss me, just a brush of her lips against mine, while my eyes widened as I realised she was talking about having sex with me. At first I was almost paralyzed with apprehension; what did I do, how did I do it, supposing I got it wrong, supposing it hurt me, or hurt her, all these thoughts scurried through my mind, and I could feel the panic building, my chest tightening as my breath came in short gasps. Shari obviously picked this up, and leaned down once again to look me in the eyes, her own eyes huge and luminous.\n\n\"Hey Bobby, it's OK sweetie, don't worry about, just relax baby, you'll like it, I promise, there's nothing to worry about baby, just trust me!\"\n\nSo saying, she kissed me again, a longer, more satisfying kiss, and once again, more or less under their own volition, my hands clasped and held her firm, bouncy little buttocks, each one a marvel and a joy to hold as she kissed me so wonderfully. As we kissed, I felt her hand on me, holding me, and then the sensation of wet warmth against the head of my cock, more heat, and then the sudden clasping tightness as she took me into herself. The feeling was so incredible, so outside of anything I'd ever experienced, or imagined, or even thought possible, that I groaned out loud in my extreme pleasure.\n\n\"Ooohh God, that's so good!\" muttered Shari, raising herself up to slide all the way down on me, her breath hissing as she worked herself up and down on me. I was so mind-blown that it took me a few seconds for it to sink in; I wasn't a virgin anymore! So this was what it felt like, it was just so...so...incredible! Now I felt what Shari was doing, and that too was a revelation. Her hands were resting on my chest, and she was slowly pumping herself up and down on me as she swivelled her hips, like a rodeo rider, the combined motions alternately squeezing and caressing me, and I felt myself begun to come to the boil. Shari must have felt it too, because she leaned back and nipped the base of my cock with her fingernails, the sensation immediately backing me down.\n\nI slid my hands down and along her long, smooth, satiny thighs, engaging myself in the feel of her, her warmth, the sensations she was giving me, and when I reached up to cup her breasts and tweak her nipples, she placed her hands over mine, pushing them against her breasts as she swivelled and gyrated above me. I rubbed and squeezed her breasts even more, as she obviously liked it, and I was rewarded with her speeding up her movements and squeezing my cock with her inner muscles.\n\nI couldn't hold back much longer; we'd probably only been doing this for a couple of minutes, but it felt like a whole lifetime had passed, and all that existed for me was this beautiful girl and what she was doing with me. As I watched her, I could see a flush spreading down her neck and slim throat, to blush her chest and shoulders, and her movements became firmer, faster, more sure; she was building toward something, and so was I; that gathering feeling in the place behind the base of my cock was telling me that I was near, and I began moving with her, pushing up against her as she ground against me, instinct finally taking me in hand and showing me what to do.\n\n\"Yesss, ooohhh yesss, yess, like that baby, yesss, yesss, YESSS!\" she screamed, her pussy clamping tightly around me as she orgasmed. This was too much for me, and I came explosively, spunk bursting out of me in hot jets deep inside her, pulse after pulse, as Shari shook and trembled above me, her hands clamped onto mine as I grasped her breasts tightly, still rubbing my palms against her stiff nipples.\n\nAt last she stopped shuddering, slumping down on me, our mixed heartbeats thundering together at the force and depth of the orgasm we'd just shared. Eventually Shari recovered enough to lean up and kiss me softly, gently, sweetly.\n\n\"You're mine now, Bobby Davies!\" she grinned, \"If you think I'm letting you go after that you're sadly mistaken! You were wonderful, baby, thank you!\"\n\nI kissed her back, and wrapped my arms around her, holding her tightly against me.\n\n\"Thank you, Shari!\" I grinned, \"thank you for showing me, and for being so wonderful, I'm not letting you go either, you're mine now, too!\"\n\nShari twinkled at me, and kissed me again on the lips, then once on the end of my nose.\n\n\"Well, now that's finally settled, tomorrow we need to either get a bigger bed in here, or move rooms!\"\n\nI woke in daylight, and immediately panicked; I was supposed to be at work! Then a soft sigh made me stiffen, and memory flooded back as a warm, soft hand slipped around my waist. I turned around gently to see Shari asleep next to me, her face calm and relaxed, and utterly, stunningly beautiful; with her dark Titian hair spread in a mass of tumbled waves against the crisp white of the pillowcase, and her long, sooty eyelashes contrasting against the creamy whiteness of her cheek, she looked like a painting by one of the pre-Raphaelite masters, serene, beautiful, almost ethereal in her repose. I wondered that someone as special, as lovely, as truly wonderful as she was could feel anything for someone like me, especially after such a short time, but she seemed sure in what she wanted, and, much to my eternal astonishment, that was me.\n\nShe seemed to sense my scrutiny, after just a moment her eyes flickered open, and she smiled sleepily at me.\n\n\"Hello baby!\" she murmured, her hand sliding up my chest to cup my chin and brush my lips with her fingertips. I responded by sliding back down into the bed and hugging her to me, feeling her warmth as she draped her leg over my hip and rubbed her foot up and down my leg.\n\n\"Mmm, this feels nice!\" she smiled, \"You're so nice and warm, Bobby, I could lie here like this all day! Come closer baby, warm me up some more!\"\n\nShe turned and spooned against me, while my arm went around her to cup her soft, firm stomach, holding her gently as she snuggled back against me. It felt so wonderful to lie there like that, no pressure, no need to do anything except enjoy the comforting warmth and drift slowly into a light, relaxed, almost trance state, truly at peace for perhaps the first time in my life.\n\nShari's breathing slowed and deepened, telling me she was asleep again, and I smiled happily as I reflected on how much she'd turned my life around, in just a few days yanking me back from that edge I had been looking over and waiting for the right time to jump, and transforming me from a bitter, uncaring loner to someone who was, at last, more concerned about other people than himself. She'd saved me from myself, a clich\u00e9, I know, but true all the same.\n\nI must have finally fallen asleep again, only waking up when my erection finally prodded me awake, the urge to wake Shari and explore some more fighting with the need to relieve a bladder that felt swollen beyond belief; the call of nature won, and I slid carefully out of bed and into the small bathroom in the main bedroom via the connecting door.\n\nWhen I returned, Shari was awake, her eyes still blurred with sleep, but her smile sweet and welcoming.\n\n\"Come back to bed, Bobby, you're lovely and warm, much better than a hot-water bottle, and I don't want to get up just yet!\" she grinned, and I smiled back, sliding in next to her. As I did, her arms wrapped around me, warm and inviting, warming me up from my brief exposure to the morning chill. Once again, she snuggled up against me, her lips soft on my neck and the base of my throat. I was still having trouble taking in what had happened; three days ago I'd never seen or heard of this girl, then all of a sudden she's my sister, and now she's my bed-mate, and it made no sense; but then, I didn't care; she was frankly gorgeous, she was obviously into me, and she actually seemed to like me for myself, as though she could see or sense a part of me that made her feel I was worth her time and effort, a part of me that was still locked away from me.\n\nWhile I was thinking about her, a detached part of me had been running its hands over her smooth, soft skin and revelling in the feel of her warm femininity, the rustle of her hair, the warmth of her breath, and the feel of her smooth stomach pressed against mine as she hugged me close. I could feel myself getting hard again, obviously she could as well, as she gave a little wriggle, rubbing her damp labia against me, her nipples stiffening as they poked into my bare chest like two little baby fingertips.\n\n\"Bobby...!\" she murmured, and as I wrenched myself back to reality, her lips found mine, and we stayed that way for what felt like hours, her lips moving with mine as our tongues rubbed, fenced and tasted each other. As we kissed her hands began to work on me, just the touch of her fingers enough to draw me up to full mast, aching, pulsing with the need for her.\n\n\"Make love to me, baby, let me hold you this time!\" she whispered.\n\nShe lay back and pulled me to her, her lips drawing me in, and before I knew it, I was kissing her while I squeezed and massaged her breasts, enjoying the feel of her nipples between my fingertips, and the way her hand squeezed and pumped me. With a little assistance from her, I managed to find and lightly rub her clitoris, feeling the little pearl grow and stiffen as I, somewhat hesitantly, frigged her, enjoying the little sounds she made as I did something she especially liked.\n\nWe kept on like this for a while, both of us exploring and learning what the other liked, until Shari let go of me and pulled me completely on top of her. As I did so, she opened her legs so I was lying between her thighs, our kiss unbroken. Instinct now took over, with me raising up on my elbows as Shari reached under to take hold of me and rub my sensitive head a few times against her wet gash, making me groan with the feel of her wetness and heat against my already overheated cock-head.\n\n\"Now, Bobby, please...!\" she murmured, her eyes closed and her lovely rosebud lips parted as I slowly pushed forward, instinct again showing me what to do. Shari hissed in satisfaction as I slid into her, the sensation of her hot tightness surrounding me almost knocking me out as my brain tried to overload.\n\n\"That's it Bobby, yesss, like that, ooohhh, yesss!\" she breathed lifting up her hips as I slid back out then pushed into her again, instinct pushing and priming me, showing me what to do. The sensations I was getting were out of this world, plus the visual stimulus of Shari, her beautiful eyes fixed on me as she urged me on, her parted lips an incitement to kiss and taste, her breasts dancing as I thrust into her with ever-increasing force as my confidence in what I was doing grew. Added to this the feeling as Shari rhythmically clenched and relaxed her pussy as I thrust into her, alternately squeezing and releasing me, and I was fast approaching orgasm.\n\nShari could feel it too, and her thrusting against me became firmer, faster, her pussy tightening more and more around me, and her eyes shutting as she clamped her lip between her teeth. We continued like this, pumping together faster and faster, my head nearly exploding with all the new and wonderful things I was feeling, until at last I couldn't take any more.\n\n\"Shari...I'm...Oh God!\" I gasped as I came, spunk hosing out of me in what felt like an endless torrent, long pulses that went on and on. Shari screamed into my shoulder, her pussy clamping down tightly on me, causing me to ejaculate even more as I realised that she was orgasming too, that I'd made her come. We strained against each other as our mutual orgasms flared and peaked, then slowly died back, finally slumping down to lie together, drained, sweaty, but very, very happy!\n\nShari finally stirred, kissing the base of my throat and then reaching up to pull me down for a very hot, sexy, and invigorating kiss.\n\n\"Thank you, Bobby, that was incredible, that's why I'm keeping you!\" she smiled, stroking my hair as my hands once more explored and touched her, enjoying all over again the silky, satiny feel of her skin, her warmth, and the firm plumpness of her sexy little bottom, each cheek a perfect handful for me.\n\n\"Like those, don't you!\" she grinned, \"All in good time, baby, all in good time!\" a statement that puzzled me somewhat, meaning nothing to me just then, but I ignored it as I concentrated on fondling, squeezing and touching this beautiful, exotic, ivory-skinned goddess who'd decided to share my bed.\n\nShari was doing a little exploring of her own, her hands coming back to my cock and balls again and again, holding, gently rubbing, squeezing lightly, all the while kissing me.",
        "Of course, with all this stimulation, the inevitable happened; I grew hard again, Shari wrapping her hand around me and pumping gently while she kissed me hotly, then moving down my neck to my chest, then kissing further down my stomach until her lips brushed the head of my cock. I stared in disbelief; was she really going to...?\n\nShari kissed up and down my by now pounding erection, then looked directly at me, and, with a slinky, cat-like smile, slid her lips over the end of my throbbing cock. I groaned as the sensation of her hot wet mouth and her probing tongue once again nearly overwhelmed me, my eyes squeezed tight shut in ecstasy as she licked and sucked me, everything she was doing rushing me to orgasm again; I gritted my teeth and held back as best I could; I wanted to enjoy this! Shari obviously sensed, or felt, some of the struggle in me, and began to suck in earnest, her cheeks hollowing as she suctioned me, but when she squeezed my balls and jammed her tongue into the furrow in the tip of my cock, I lost it completely, once again a torrent of spunk bursting out of me and into her avidly sucking mouth. Shari swallowed every drop, sucking as I filled her mouth with pulse after pulse of spunk, draining me, until I had no more left. She sucked the last drops out of me, then polished the tip with her tongue, cleaning off every last trace of the deluge of sperm I'd pumped into her mouth, before finally licking her lips and smiling at me.\n\n\"That was lovely, Bobby, you taste delicious; I'm definitely doing that again soon!\" she smiled, sliding back up to hug me, her lithe, warm body once more plastered against mine. I was starting to blur-out; two intense orgasms had wiped me out, but there was something I had to know.\n\n\"Shari, that was...incredible, I never thought I'd...thank you, that was just amazing!\"\n\nShe grinned at me.\n\n\"Anything for my Bobby, anything at all, and I mean that!\"\n\nWith that, she draped her leg over me, holding herself closely against me as she rubbed my chest lightly, a soothing, calming feeling.\n\n\"Shari, do you love me? Like Yaz loves Rick?\" I asked her, and Shari looked up at me again, a mischievous little smile on her lips.\n\n\"Now how could I, Bobby, you're my brother, the very idea!\" she smiled, and my heart sank a little, but rose again when she leaned up and nipped me gently on the lip.\n\n\"My Bobby!\" she whispered with a little smile, licked my lips, then cuddled back down against me, her arm curled possessively around me. I pulled the bedclothes back up over us, and the last thing I remember before I fell asleep again was her voice whispering in my ear.\n\n\"You're mine, Bobby, only mine, and I'm yours!\"\n\n*\n\nWhen I awoke, a couple of hours had gone by. Shari was still cuddled up tightly against me, and I was holding one of her lovely springy little buttocks in each hand. Shari stirred and her eyes flicked open, her tongue immediately flicking out to lick my lips again before she smiled at me.\n\n\"Hello baby, had a nice snooze? It's mid-morning, and I'm hungry, would you like some breakfast?\"\n\nI nodded, too wrapped-up in her eyes, and the feel of her bottom to even think about conversing with her; all I wanted to do was drink her in and fondle her!\n\n\"You really like them, don't you!\" she grinned, \"we shall have to do something about that!\" she grinned, once again whatever she was saying going completely over my head.\n\n\"You go and have a shower, baby, I'll start breakfast; bacon and eggs OK? When you get out, give Ricky and Yaz a call as well, they must be famished too after last night!\"\n\nWhen I came out from my shower, the house smelled absolutely delicious, and my stomach rumbled painfully. I threw my clothes on and knocked on Yaz' door.\n\n\"Yaz, Rick, breakfast!\" and grinned at the flurry of sounds coming from inside; apparently my younger brother and sister had seized the opportunity for a little lie-in as well...\n\nI'd just sat at the kitchen table when Yaz and Ricky clattered in and sat down, looking bright-eyed and tousled, and Shari started dishing-up breakfast; she'd made grilled bacon, poached eggs, mushrooms, grilled tomatoes, hash-browns and fried bread, and made a pot of coffee. When she passed me, she trailed her fingers across my cheek, and I couldn't help myself; I caught her hand and kissed her palm. She giggled and smoothed my hair back out of my eyes, and I looked up to see Yaz and Rick staring at us. Shari burst out laughing, kissed the top of my head and went to get some milk from the fridge, while Yaz smiled knowingly at me and Rick winked and gave me a thumbs-up.\n\nOnce we'd finished, we all cleared up, and then Shari asked us all to sit back down, as we had some decisions to make. Rick and Yaz seemed to know exactly what she meant, but I was completely in the dark, so I just took a seat. Shari started the ball rolling.\n\n\"Bobby, as you know, when mummy died, she left her business, all her assets, and her house, to Yaz, Ricky and me. We sold everything, you know we had to leave London, so we got rid of everything. What we ended up with is a lot of money, a very large amount of money, and now we had the problem of what to do with it. On the way up here, Ricky, Yaz and I discussed what we'd eventually do, and we've been talking about it since we got here, and we've come to a decision; Yaz and I know the property world well; we worked with mummy, we know what to look for, and Yaz is really good at assessing markets, while I'm more experienced in assessing properties, whether as living accommodation or commercial premises. Ricky's a talented handyman, a very talented one, he understands all about renovations and upgrading, and spent an awful long time arguing with Borough Surveyors and Planning people at the council offices, he did all that for mummy, and he did it really well, so we decided to go back into that world again, only up here this time, a long way away from London and Robert's old cronies.\"\n\nShe paused to take my hand between hers.\n\n\"Bobby, this is going to be a family business, and all the family should be a part of it, so we want you to quit your job with the Council and come work with us, doing whatever part of it appeals to you most. You can work with Yaz, I know she'd love to show you all she knows, or Ricky, he could always use the help, or with me, I'd love to show you the ropes...\"\n\nRick snickered at that, then jumped as Yaz kicked him on the ankle. Shari just looked at him until he grinned apologetically, then continued speaking.\n\n\"Bobby, we want you to be part of this; you're our brother, and seeing you slowly wearing yourself away at that job is heartbreaking; please say you'll join us, I know you'll be happier working with us!\"\n\nRick grinned and piped up.\n\n\"What say, Bobby, you wanna work with me? There's always room for someone with a strong back and a weak mind!\"\n\nYaz stood up and walked around the table to me, punching Rick on the arm as she passed him. When she came to me, she put her arms around mine and kissed the top of my head.\n\n\"Ignore him, baby! I'd love you to work with me, or Shari, or even Ricky, just so long as you come in with us; I really want my big brother to share something with me, with all of us, how about it Bobby, are you in?\"\n\nI looked at Shari, who smiled and nodded almost imperceptibly, so I grinned and reached behind me to pull Yaz into my side.\n\n\"When you ask so nicely, baby-sister, how can I refuse? Yes, I'm in!\"\n\nShari stood up and also came over to hug me, nibbling my neck as she whispered \"later!\" into my ear. In response I slipped my hand down to cup her delectable little bottom and give it a squeeze to let her know I was up for it.\n\nShari sat down and waited for the conversation to slow a little before bringing up something else.\n\n\"Bobby, Ricky, I know how much you've been hurt by our father, how betrayed you feel, but there's someone else who needs you, and perhaps you need to speak to her too. Ricky told me your mother, Barbara, is buried not far from here; I think you need to go and clear the air with her, and maybe tell her a few things, am I right?\"\n\nI caught Rick's eye, and he stared at me for a long moment, then slowly nodded, Yaz's hand sliding over his where it lay on the table. I looked at Shari, seeing only sympathy in her eyes, and nodded too. I had to think for a moment before I spoke.\n\n\"We've never been back there since...since the burial; the local church wouldn't even let her have a funeral because she was a...a suicide, we had to get a Baptist minister to say the words at the graveside...\"\n\nThis was hard for me to go back to, even harder to say; during the short graveside service, Rick and I had spent most of the time grinning at each other, making faces, and just generally being grossly disrespectful, and of course our father had done nothing to stop it; as far as he was concerned he'd followed form, she was being properly buried, end of story; that it was Barbara made no real difference to us, it wasn't like she was anything to do with us...\n\nThe cemetery was only a short way away from the house, Stanwix, a communal cemetery rather than a denominational one, and I tried to remember where the grave was; all I could remember was that it had a large, black granite headstone carved with ornate scrolls and cherubs, with an inscription carved in Serif and filled in gold, a long flowery inscription that I could remember grinning at while thinking \"Yeah, right!\", all about how much he loved her etc. etc.\n\nWe hunted high and low for the headstone, but nothing, and had just about given up when Shari called me over, pointing at a small, new-looking, white marble headstone. Cut into it was \"Barbara Davies, beloved mother, taken too soon. I love you, Mum\". I was astonished; I didn't recognise this at all, neither did Rick, then suddenly it hit me. Nicky! Nicky had been here, sometime in the last four years, quite recently, judging by the headstone, he'd replaced that lying black monstrosity with one that meant something to him; he was alive!\n\nIt took me a few moments to remember why I was there, the sudden jolt of guilt at the realisation my big brother was still out there somewhere tempered by the remorse and sorrow that welled up as I finally spoke to my mother. Shari stood with me, her hand in mine as she stood close to me to shelter from the frigid wind. Rick stood with his head bowed as his lips moved, Yaz periodically thumbing his eyes and wiping off his cheeks as he too talked to our mother. I don't know what he said, but I asked her to consider forgiving me one day, I told her that I hadn't earned her forgiveness yet, but that I would try, and I apologised for being what I'd always been. When I finished Shari hugged me, wiping her own eyes against the front of my jacket.\n\n\"I'll bring some flowers up here tomorrow, Bobby, there's a holder there, someone must have...\" she trailed off as she bent down and picked up one of the flowers from the little vase, a pretty blue flower with petals already turning brown and curled.\n\n\"Look Bobby, someone put flowers here...\" she murmured\n\nShe bent the stem, but instead of snapping, it was pliable, still fresh inside. Her eyes darted to mine as she saw that.\n\n\"Bobby, these were only put here a few days ago, maybe a week; Nicky was here, he was here just a few days ago; he was here, he's still alive!\""
    ],
    "authorname": "beachbum1958",
    "tags": [
        "brothers",
        "sisters",
        "half-asian",
        "asian half-sisters",
        "incest romance",
        "siblings",
        "romance"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/rag-doll-ch-05"
}