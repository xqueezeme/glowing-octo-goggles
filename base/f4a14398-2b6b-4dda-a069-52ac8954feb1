{
    "title": "Heavy Traffic Ch. 20",
    "pages": [
        "The following chapter is the final installment for \"Heavy Traffic\". I truly appreciate everyone's support and patience as I submitted chapter after chapter. I learned several valuable lessons about the story submission process on Literotica along the way. I'm not sure if I will go with the chapter-by-chapter submissions in the future or revert back to posting a story in its entirety. Thanks again.\n\n*****\n\nChapter Twenty\n\nThe fog that preceded full consciousness was filled with pain. The pain didn't subside as DeMarcus' wakefulness increased; it only became more intense and widespread. The brightness on the other side of his eyelids implied light, but DeMarcus was hesitant to subject his eye to it just yet. The voice suddenly speaking convinced him to open his eyes.\n\n\"We have eye movement. Tell the doctor that the patient may be regaining consciousness.\"\n\nDeMarcus opened one eye to see the back of a person leaving the room before this was blocked by another person stepping in between him and the view he had. Fingers were placed on his eyelids to hold his eye open as a penlight was shone into first one, and then the other.\n\nFinally the person spoke, \"Good afternoon, it's good to have you back with us. Do you remember your name?\"\n\nDeMarcus tried to speak, but his mouth and throat were so dry that he couldn't form words.\n\n\"Oh, I'm sorry. Here, let me wet your whistle some. That should make you feel better.\"\n\nDeMarcus saw that the person was a female nurse - a sister, in her forties from what he could see of her. She left the room and returned with a cup in her hand and what looked like a doctor in her wake. Extracting a stick from the cup with some sort of foam sponge on the end, the nurse preceded to use it to moisten DeMarcus' lips, tongue and inside of his mouth. She returned it to the cup of water several times to reapply more moisture until she saw saliva being formed on its own.\n\nAs soon as she had extracted the sponge, DeMarcus tried to speak again. He looked to the doctor, who stood behind the nurse reviewing a chart of some sort. \n\n\"Where da fuck am I?\"\n\nThe nurse stepped back to allow the doctor access to the patient. As he stepped up to the bed to examine DeMarcus he said, \"You are at Grady Medical Center. You have been unconscious since you arrived a little over two weeks ago. Can you tell us your name?\"\n\n\"My name is DeMarcus Steele. How da fuck did I end up in dis hos spit toll?\"\n\n\"We were hoping you could tell us, Mr. Steele. You apparently experienced a serious industrial accident of some sort. Whoever provided the initial medical treatment definitely saved your life. Do you remember the accident?\"\n\n\"What accident? What chew talkin bout? All I know is I wakes up here, hurtin like a fucker and can't move my arms or legs. You gots me tied down or sumtin?\"\n\n\"Mr. Steel, if you don't remember the accident, then I have the sad duty of informing you that you lost both arms, both legs, and your genitalia somehow. As I mentioned, you had received emergency medical care of the highest quality before you were brought here by two men who claimed to have found you in this condition. You were unconscious upon your arrival, due apparently to the concussion you suffered during the accident, which also explains why you may not remember it.\"\n\n\"You shittin me,\" said DeMarcus, but as he started focusing on the areas of pain all over his body, he became frightened that the reality of his situation might just be as this doctor described it. \n\nHis head hurt worst than he had ever experienced. The pain in his shoulders didn't extend down any further, and as he turned his head to look at each shoulder, he gasped when he saw nothing attached to either, not even the barest stump of an arm existed beneath the bandages. \n\nThe position in which he was laying prevented him from seeing farther than his stomach area, so he asked to be raised. The nurse walked around to the other side of the bed and used the controls to raise the head of the bed several inches.\n\nHis lower body was covered in a sheet. \"Can you pull da sheet down?\" he asked.\n\nThe nurse glanced to the doctor who nodded. She then carefully began folding the sheet down the bed until what remained of DeMarcus Steel's body was fully exposed to him. As his glance moved down his body, he saw only a clear tube with what looked like piss in it extending from the bandages between where his legs used to be. The hose ran to a plastic bag attached to the side of the bed. As with his arms, there was no trace of even a portion of his legs remaining, almost as if they had been severed at the hip itself. \n\n\"Dat bitch!\" screamed DeMarcus.\n\nThe nurse and doctor stumbled back at the sound of rage from the patient even though they both knew that they had nothing to fear from this man. No one would ever fear this man again.\n\n***\n\nThe nurses drew straws to see who got the unenviable task of dealing with DeMarcus Steele every time he required attention of any sort. Meals were the worst because his mouth still worked and he frequently used it to spit some or all of his food at the nurse trying to feed him. Even when bathing him, the nurses learned to avoid getting too close to his mouth, because this patient was a real 'biter' if given the opportunity. There was unanimous agreement that the nurses liked this patient much better when he was unconscious, and they jokingly asked the doctors to put him into a medically induced coma every chance they had.\n\nDeMarcus Steele had been awake two days before he received his first visitor. Spenser Brown walked into the room just as \"Good Morning America\" was signing off for the day, pulling a chair behind him. He had obviously been informed that there were no chairs in the room for visitors, so had come prepared.\n\n\"Bout time some un come visit me,\" DeMarcus said to his lawyer.\n\nBrown pushed a button on the remote control to mute the television. \"No one is allowed to visit you DeMarcus. Didn't they tell you that you are under police protection? I wouldn't be here myself if a Federal judge hadn't appointed me your attorney of record. You know I don't take Pro Bono cases.\"\n\n\"What da fuck you talkin bout, 'Pro Bono'? I pays you damn good to represent me when I needs you.\"\n\n\"Any retainer you paid was used up trying to fight the seizure of your assets by the Feds. When those actions failed, you became legally and officially indigent. If I hadn't been forced to take you on by the Federal judge, you would be meeting with a Public Defender right now.\"\n\n\"Maybe you better splain things,\" said DeMarcus. \"Start wif dis seizure bullshit.\"\n\nBrown pulled out a folder and reviewed it before speaking, \"You were delivered here to the hospital by Herman 'Splint' Caster and Gordon 'Q-Tip' White in a car driven by Jefferson 'Blaze' Ashe. Immediately after depositing your body in the entrance to the emergency room, these three men drove to the Federal Building in downtown Atlanta and sought a meeting with the U.S. Attorney. They were requesting immunity from prosecution for testimony against you related to an organized crime organization that they allege you head, including proof that you personally ordered the rape, torture and murder of a Federal law enforcement officer.\"\n\nDeMarcus growled deep in his throat, but no intelligible words were emitted, so Spenser Brown continued, \"Two days later the U.S. Attorney had convened a Federal Grand Jury, seeking indictments against you under the Racketeer Influence Criminal Organization Act, or 'RICO' Act as it is more commonly known, and a first degree murder indictment for the death of Special Agent Michelle Anderson. A Federal judge had already issued a search warrant for your home where evidence was collected for presentation to the Grand Jury. The indictments were returned in less than three hours. The Feds then immediately began seizing all your property and assets as having been derived from the criminal activity. I tried to get stays to these proceedings, but with the Grand Jury indictments already in place, there was little I could do.\"\n\nBefore DeMarcus could respond, two more men and a woman entered his room. The men were in suits, and the woman wore a business-style dress that made her look more male than female. The men took positions on either side of his bed while the woman stood at the foot. All of them nodded to Spenser Brown, and then stared at DeMarcus as if waiting for him to introduce them to each other.\n\n\"I assume you're all here for some reason,\" DeMarcus said.\n\nThe man closest to the window spoke first, \"DeMarcus Steele?\"\n\n\"What's left of him,\" DeMarcus answered.\n\nThe woman spoke next, \"Mr. Steele, I am Detective Romo with the Atlanta Police Department Crimes Against Persons Division.\" She held up her badge and identification for him to view. \"Have you been able to remember what caused the injuries that brought you here?\"\n\n\"The last thing I remember is starting down to the basement of my house...\"\n\n\"Were you alone at the time?\" the Detective asked?\n\nDeMarcus knew better than to reveal who had been with him and the circumstances at the time. He glanced towards his attorney before answering, \"Some of my associates were in the house.\"\n\nChecking her notes, Detective Romo read, \"Would that be a Mr. Jefferson Ashe, a Mr. Gordon White and a Mr. Herman Caster?\"\n\nDeMarcus nodded, \"Blaze, Q-Tip and Splint.\"\n\n\"Those three men disavow any knowledge of how you received you injuries and claim to have found you in your current condition.\"\n\n\"Let me talk to dem. I think dale member diffint.\"\n\nThe man closest to the window spoke again, \"You may not speak to these men. They are Federal witnesses in the criminal indictment I have prepared against you Mr. Steele. My name is Scott LaBlanc, Assistant United States Attorney. Has your attorney explained your rights to you, Mr. Steele?\"\n\nDeMarcus looked at the man with a combination of confusion and contempt. Scott LaBlanc might still have a thirty three inch waist, but it was placed below at least a fifty inch stomach. Compared to the other man, who remained silent on the opposite side of the room, LaBlanc was a sad physical representation of a man.\n\n\"Why you chargin me wif anything? I'm da victum here.\"\n\n\"Do you understand your rights Mr. Steele?\"\n\n\"Yes I fukin unnerstan em,\" screamed Steele. \"Whys you hassling me?\"\n\n\"So you do remember what happened?\" Detective Romo asked.\n\n\"I don't need to member nuttin but me layin here wif no fuckin arms an legs to knows I was da victim. You think I did dis to myself?\"\n\nLaBlanc interrupted before Romo could respond, \"DeMarcus Lamont Steele, you are charged with the kidnapping, rape and murder of a Federal officer. Do you recognize these items?\"\n\nLaBlanc held up two clear plastic evidence bags for DeMarcus to examine. One held an automatic pistol. The other held a badge wallet. He recognized both, but didn't need the advice of his lawyer to know that he should say nothing.\n\n\"After you were dropped here by your associates, they came directly to my office to confess a whole range of sins and legal transgressions by you in exchange for clemency. All three were interviewed separately, and all three named you as the person who instigated the actions against Agent Michelle Anderson which led to her death. The testimony of these three men was sufficient for me to obtain Federal Grand Jury indictments against you and a search warrant for your house. These items were discovered during the course of this search, so I'll ask you again; Do you recognize these items?\"\n\nDeMarcus glanced towards Brown before answering, \"No.\"\n\n\"Do you have an explanation for your fingerprints being on both items found in your personal office at your house Mr. Steele?\"\n\nOnce more, a quick glance towards his lawyer before answering, \"No.\"\n\n\"Do you know why trace amounts of blood, identified through DNA tests as belonging to Federal Agent Anderson were found in the basement of your home?\"\n\n\"No.\"\n\n\"Do you know the current whereabouts of one Tom Folsom?\" asked Detective Romo?\n\n\"No.\"\n\n\"The Bibb County Sheriff's office will want to discuss his location with you once their divers pull his remains from the location your associates provided for where you disposed of him at Lake Tobeskofkee, The bullet that allegedly killed him has already been recovered from a house in Bibb County, and a ballistic test confirms it was fired from Agent Anderson's service weapon, which was found in your house with your prints on it.\"\n\nLaBlanc took over again, \"I wouldn't worry yourself, or what's left of yourself about a state murder charge. \"I'm going to make certain that your helpless body spends the rest of its worthless life in a maximum security prison. The President has taken a special interest in your case, even demanding that the Attorney General request a specific Federal judge to preside over your case.\"\n\n\"And I'm going to make sure you spend your time face down so your ass is exposed to every other scumbag in there with you.\" These words were spoken by the other man across the room.\n\n\"Folks, I must object to this harassment of my client,\" interjected Spenser Brown.\n\nDeMarcus turned to face the man who had spoken for the first time. \"Who da fuck are you?\"\n\n\"I'm with the Department of Homeland Security. My name is Kirby. Kirby Wallace.\" \n\n***\n\n\"Don't you got nuttin I can put in my mouth or sumtin to at lease allow me to push da buttins on da remote?\" DeMarcus asked one of the nurses. \"You bitches always putting on some soap ahprah shit den turnin da volume up so loud I can't even sleep thru da borin shit.\"\n\nIt had been one month and six days since DeMarcus had regained consciousness in the hospital. Once the doctors were sure that there were no infections, he had surgery performed to suture the skin over the wounds in his shoulders and hips. DeMarcus didn't consider it surgery since they had refused to give him any anesthesia and he had to endure every puncture of the needles wide awake. That had been minor torture compared to how the nurses continued to treat him.\n\nThe nurse surfed through the available channels until she found a French cooking show, then turned the volume up and set the remote back on the table next to the bed. \n\n\"Unless the court authorizes physical therapy for you, we cannot provide any assistive devices or aids for your physical limitations. Sorry Mr. Steele, but if it's any consolation, your wounds have healed to the point where I believe the doctors will be issuing your discharge papers within a day or two.\"\n\n\"Where da fuck dey gonna discharge me to?\" screamed DeMarcus.\n\nThe nurse finished tending to his urine bag and other necessities as she calmly responded, \"To the prison hospital at the U.S. Penitentiary Atlanta, I imagine. You were convicted last week after all.\"\n\nDeMarcus remembered all too well. He hadn't been allowed to be in the courtroom, but had been presented to the court and the jurors through a video feed that showed only his head and face. The prosecuting attorney had argued, and the fucking judge had agreed that showing his dismembered body to the jurors would be prejudicial. \n\nDeMarcus had been muted in the courtroom, so no one got to hear his shouts of outrage as Splint, Blaze and Q-Tip testified about his operation and what he himself had done to that Anderson bitch in an attempt to get her to reveal the whereabouts of twenty five young girls that he had arranged to have brought to this country illegally.\n\nThe images of the courtroom that were shown to DeMarcus didn't allow him to see all the people present, but he did get to see enough to know that Amanda Wallace didn't appear to be present. After DeMarcus had explained to Spenser Brown about having Amanda Wallace in his house the night he was injured, they had discusses why her abduction and the trafficking of the girls weren't included in the charges against him. He thought that she would at least show up in the courtroom, maybe even with that pussy Sean Wallace but he never saw her.\n\nThe only visitor that DeMarcus had seen since he was advised of the indictment against him had been Spenser Brown. The lawyer and client were both amazed at how fast the case against him was brought to trial, and while Brown had tried every strategy he knew of, the Federal judge assigned to the case rejected all arguments for a postponement of the trial. Brown would challenge the haste of the proceedings in his appeals of the conviction, but he was not keen on presenting his own inability to prepare a timely defense as justification for a reversal of the conviction. The prosecutor had been diligent in making certain that all evidence and transcripts of depositions were provided as soon as they were processed, so Brown had no one to blame but himself for not having the time required to prepare for trial.\n\nNot that it would have made much difference. Splint, Q-Tip and Blaze had been irrefutable in their testimony, and the facts that they each relayed were substantiated not only with physical evidence but also by the testimony of each other. DeMarcus kept trying to get Brown to arrange a deposition with any or all of these men that he could participate in, but his physical limitations and recovery prevented his transportation out of the hospital and the judge refused to order that the Federally protected witnesses be placed at risk by requiring their depositions be taken anywhere other than at the Federal courthouse under protection of U.S. Marshals.\n\nSpenser Brown could not provide DeMarcus with the reasons why three of his most trusted associates were turning against him so severely. Questions related to the motivation for their confessions were objected to by the prosecutor and upheld by the judge. DeMarcus believed that the three men were being coerced, threatened, or influenced by something, or more likely someone and he strongly suspected that it involved Amanda Wallace in some way.\n\nTry as he might, DeMarcus could not remember what had happened to him after he had entered the doorway to his basement, which was another reason that he wanted to speak to Splint, Blaze and Q-Tip. DeMarcus really wanted to know who Amanda Wallace had help her and how whoever it was knew where to find her. He didn't delude himself into believing he would be able to do anything about it now. He was nothing but a brain and the necessary internal organs to keep it alive, but that brain could still think, scheme, and hate.\n\n***\n\nDeMarcus was awakened by the sound of his television being turned off. He had eventually learned to sleep with the thing on, but his sleep patterns were erratic. \n\nIf the nurses thought they were taunting him by leaving the crappiest shows they could find playing twenty four hours a day, then they hadn't yet grasped how fitful his sleep was due to the dreams.\n\nThe beast in his dreams was real - DeMarcus had no doubt of that. However, it never had a face and moved like smoke in a strong wind; shapeless, silent, strong and swift. As his senses returned from his latest version of the dream, he realized that he was not alone in the room. \n\nWith the television off, the only light was through the small viewing window in the doorway. The hallway was bright with light, and DeMarcus took comfort from seeing one of the policemen who had been guarding his room since he had arrived. He usually resented the cops being there, but right now, he welcomed them.\n\nA man stood on the opposite side of the room, in front of the shade darkened window. DeMarcus couldn't make out his features, yet he knew that the man was studying him closely.\n\n\"Who da fuck are you?\" DeMarcus demanded, but there was no answer.\n\n\"How'd you get pass da cops?\" Still no answer.\n\n\"Listen cocksucker, either you tell who you are an whatchu wan, or I'll call the cops to come slam you ass.\" ",
        "\"Mr. Steele, my wife will be joining us in a few minutes and if I hear one word out of your mouth in her presence that doesn't reflect gentlemanly respect for a lady, then your tongue will join the rest of your appendages in the sewers of Atlanta. Do we understand each other?\"\n\nThe voice was calm, and while not exactly cold, it held firmness that DeMarcus had never heard another man use in speaking to him. Bravado failed DeMarcus Steele. Adrenalin fueled fear could manifest itself only in his voice, \"If you come near me, I'll call the poleese outside.\"\n\n\"They won't come,\" the man replied in the same calm, even tone. \"They work for me. I have paid off-duty police officers to guard your room since you arrived here. I have also been paying for your room and medical care, which will cease tomorrow when you receive your medical release. Then my taxes will be paying to keep you alive in prison.\"\n\nDeMarcus had to call this dude's bluff, \"Help! Police! Help me!\" he screamed as loudly as he could. He could see one of the policemen step up to the doorway window and glance inside, then laugh and turn away. He was about to yell again when another shape appeared at the doorway window, opened the door and entered.\n\nAs the overhead lights came on, DeMarcus blinked at the sudden brightness, but more so at the person who had turned them on. A smiling Amanda Wallace closed the door and walked towards the man near the window, addressing DeMarcus as she passed the foot of his bed.\n\n\"DeMarcus, why all the fuss? I was just checking with your nurses on your condition before visiting with you.\" Reaching the strange man, she kissed him and said, \"You two get introduced yet?\"\n\n\"Not formally,\" Sean said. \"The last time we met, Mr. Steele was in no condition for formal introductions.\"\n\n\"Well then, allow me. Sean I would like to introduce my friend DeMarcus Steele. DeMarcus, I would like to introduce my husband, Sean Wallace.\"\n\n\"You,\" whispered DeMarcus. \"It was you dat did dis to me wassint it?\"\n\n\"No,\" replied Sean, \"I did not do this to you.\"\n\n\"He didn't, DeMarcus,\" Amanda said. \"Sean wanted to kill you and make it look like an accident. He's very good at that you know. However, I told Sean that I considered you entertaining, and your associates needed an incentive to change their own wicked ways, so Sean agreed to spare your life.\"\n\nSeeing the confused expression on the face of DeMarcus Steele, Amanda took Sean by the hand and led him to the foot of the bed to stand beside her. \n\n\"I suppose you don't remember much of our evening together DeMarcus, so let me bring you up-to-date...\"\n\nDeMarcus glanced from Amanda's eyes to Sean's and knew at once that this man was not the pussy everyone had told him he was. If DeMarcus had arms and hands, he would have pulled the covers up over his head to hide from the sight of this man's piercing eyes. Unfortunately, he was forced to bear the look of the beast from his dreams.\n\n\"I assume you remember picking me up at the airport and the drive to your house?\" asked Amanda. \n\nWhen DeMarcus just nodded, she continued, \"What you didn't know DeMarcus is that I had this with me during the entire drive.\" Amanda removed her nine millimeter automatic from her purse and held it for DeMarcus to see. \"I could have shot you at any time prior to leaving the car at your house.\"\n\n\"Why didn't you?\"\n\n\"Because she was saving you for me,\" answered Sean. \n\nAmanda kissed Sean on the cheek before returning the pistol to her purse and addressing DeMarcus again, \"I told you that Sean was already pretty mad at you, yet you never gave humiliating me a second thought. You never considered how seeing me being treated like a dog would affect Sean. In fact, you never expected to see Sean because you thought him a coward. Isn't that right DeMarcus?\"\n\n\"You were supposed to be the bait that lured him to me,\" said DeMarcus. \"I expected to see him eventually. How did you find us so fast?\"\n\n\"I won't go into detail on the technology,\" said Sean, \"but suffice it to say that Amanda was tracked at all times. Stephan Mota also assisted me with the location of your house.\"\n\n\"Mota?\" Did he have an accident too?\n\n\"Not yet,\" said Sean. \"Mr. Mota suspected what I was doing and made a deal to save his life. He has abandoned his operations here in Georgia and retired to an undisclosed location for health reasons.\"\n\n\"Anyway,\" said Amanda, \"where was I? Oh I remember... You made Sean madder than I had ever seen him. I was afraid the kick to your head he delivered had killed you, but fortunately I could still feel a pulse from your unconscious body.\"\n\n\"You kicked me in the head?\" DeMarcus asked Sean. \"The doctor said that the blow that caused my concussion was probably due to me being hit by a car or some other large machine-powered device, like a robotic arm in a manufacturing facility.\"\n\n\"I won't take credit for it beyond this room, but yes I kicked you unconscious,\" admitted Sean.\n\n\"Now I can finally tell the police who did this to me,\" said DeMarcus. \"Let's see how you like being in jail...\"\n\n\"That's not going to happen, Mr. Steele.\" Sean stuck out his tongue, pointed at it, and then pointed at DeMarcus. He could see that the message was received. Amanda saw it too.\n\n\"Oh DeMarcus, don't let that happen. A severed tongue is such a messy thing to bandage,\" she said with a smile.\n\nSean removed his cell phone from his pocket and said, \"Then there's this video showing what happened to you and who did it.\" \n\nHe started the video playing and positioned it so that DeMarcus could clearly see the screen. It was a heavily edited version of the film that Sean had made, using the same video equipment that DeMarcus had arranged to video tape his planned treatment of Amanda. It showed only the relevant sections of the event he had wanted to capture. There was no sound of the event, with a music track overlaid onto the video. \n\nAfter five minutes, the video had ended and DeMarcus was at least five shades lighter than he had been when the video had started.\n\n\"All of them?\" he asked. \"Why would they do that to me?\"\n\n\"They understood it was you or them,\" said Sean. \"This video is also the reason that your three associates disavowed any knowledge of what happened to you, and so willingly testified against you in court. First, the video shows them dismembering your body, which would land each of them in prison for the rest of their lives. Then there is the image of what was left of you to remind them that the same is still possible in their own futures if they ever cross me again. Finally, if you still think you can blame me, there are the numerous Secret Service logs that will show that Sean and Amanda Wallace were having dinner with the President of the United States the evening that your injuries occurred.\"\n\n\"What happened to the sound?\" asked DeMarcus. \"That song sounded familiar, but there weren't any words.\"\n\nAmanda giggled, \"I'm sorry, that was my little attempt at humor. It's an instrumental version of a song I thought that you would appreciate considering the events. Do you remember a song by a girl group in the Sixties called \"My Boyfriend's Back?\"\n\nRecognition of the song came to DeMarcus and he couldn't hold back a smile of admiration for Amanda Wallace. Damn, she really did have balls! \n\nHe turned his attention back to Sean Wallace, \"So you never touched me after you had kicked me in the head?\"\n\n\"For the most part,\" said Sean. \"I performed the cauterization as each limb was removed. The process is a bit more involved with dismemberment than with simple surgical amputation, so I didn't want to trust it to your associates.\"\n\n\"Don't tell me that you're some kind of doctor or something,\" DeMarcus said.\n\n\"As a Force Recon Marine, I received Navy Corpsman training. I still carry a Corpsman's medic satchel with me when I go hunting. I've helped several hunters who have either shot themselves or been victim of a stray bullet while hunting. Everything I needed to care for your wounds was in that satchel.\"\n\nDeMarcus remembered the scenes from the video, showing his arms being removed whole from the shoulder sockets and his legs from the hip sockets. No bones had been cut, but the limbs had been totally separated from the joints, with the tendons, ligaments, cartilage, muscles, arteries and veins being cut as required for the limb to be removed whole. That's why there were no stumps left.\n\n\"I applied the sterile bandages once Sean had stopped the bleeding,\" admitted Amanda. \"While my preferred specialty was as a Pediatric nurse, I did have an extended rotation in the surgical unit, so I insisted on helping with the bandages and Sean allowed me to. You may not appreciate it, but Sean's approach probably saved you a great deal more pain. For example, he left enough skin to cover the wounds but didn't suture the skin so the hospital would be able to monitor for infection.\"\n\n\"Not that it mattered,\" spat DeMarcus. \"The doctors told me that my medical plan didn't cover pain medication so all they would give me since I woke up was aspirin.\"\n\n\"I was your medical plan, Mr. Steele, and the doctors never told me that they were giving you aspirin,\" said Sean. DeMarcus saw the disappointed look and took comfort from it. Sean Wallace had obviously wanted him to experience the full pain of his injuries, but the doctors had gotten around their instructions.\n\n\"Okay,\" said DeMarcus, \"I know how I ended up in this condition, but I would still like to know why? Why not just kill me like the Ellis's and Kim?\"\n\nAmanda looked to Sean, who simply stared down at DeMarcus Steele for a full minute before answering. \"First, of course was the fact that Amanda asked me not to kill you,\" said Sean.\n\n\"That left me with finding a way to accomplish my objective with you still alive. You see, I couldn't leave you in a condition to ever pose a threat to Amanda or any other person ever again. I considered blinding you, but there are too many ways that a blind person can still function, so I dismissed that option. I considered ways to destroy most of your cognitive abilities so you would not be mentally capable of posing a threat, but short of a traumatic brain injury - which posed unacceptable risks to the life I had agreed to spare, the alternatives would have taken too long.\"\n\n\"I can see your dilemma,\" DeMarcus said sarcastically, \"but why castrate me too?\"\n\nSean stared at DeMarcus in confusion for only a few seconds before the tensing of Amanda next to him caught his attention. He could feel a radiated heat from her as she turned red with embarrassment.\n\n\"Sean, I am so sorry,\" she said as she turned to face him. \"I meant to tell you, but when you came back from retrieving the car, we became so focused on getting to Samuel and Lily Baldwin that I never had the chance...\"\n\nSean smiled at her reassuringly, \"It's okay, now's your chance. What happened?\"\n\nAmanda glanced briefly at DeMarcus before providing her explanation to Sean. DeMarcus could listen, but her tale was for Sean's benefit, not DeMarcus'.\n\n\"I was still bandaging his right hip socket when you decided to go get the car from where you had parked it. His associates were secured in the sitting positions on the floor where you had placed them watching me. As I was wrapping the bandages, I kept brushing against his scrotum, which drew my attention to the rest of his genitalia. I thought about what he had planned for me, but even more about what he had done to Mickey, and all the equipment was still there...\"\n\nSean pulled Amanda into his arms and hugged her as he said, \"Prevention. I understand.\"\n\nAmanda pulled back and looked up at Sean. \"I wish I could say in my heart that I was motivated only by wanting to prevent him from ever raping another woman, but I knew that he was already denied that possibility by the condition he was in. I hated what he had used his sex organs for, and wanted him to know that they were despised objects. My motivation was not as pure as yours Sean. I'm sorry.\"\n\nSean pulled her back into his arms and they held each other at the foot of the bed as DeMarcus just stared at them. There was a knock at the door that drew Sean's attention. Seeing the face in the window, he held up one finger indicating he wanted the person to give him a minute.\n\n\"I'll be right back,\" Sean said as he released Amanda from his embrace and walked to the door. He opened it only a crack and spoke briefly with the man on the other side before closing it and returning to Amanda at the foot of the bed.\n\nDeMarcus addressed Sean, \"Do you know what Jun Kim did with Kimberly? I wouldn't want her to see me in this condition, but I'd like to know if she was okay.\"\n\nSean considered the question before answering. Steele might not like the answer, but he was the one who asked the question.\n\n\"Jun Kim sent Kimberly to work at a whorehouse in South Korea. When I learned of this I requested that the U.S. Embassy attempt to get her sent back. Embassy personnel picked her up and interviewed her at a consulate office. She was free and under no duress during this time. The report I was provided indicated that she wanted to remain there. She stated that she is being treated like royalty and believes that she has found her calling in life. She is studying to learn both the Korean and Japanese languages and is apparently in very high demand among several prominent customers of the whorehouse.\"\n\nDeMarcus merely nodded in acknowledgement of what he had been told.\n\n\"We need to get going pretty soon,\" Sean told Amanda. He turned his attention back to DeMarcus as Amanda wrapped her fingers into his.\n\n\"Mr. Steele, as I mentioned earlier, you will be released from the hospital tomorrow. Now is the time for us to discuss the final reason why I spared your life.\"\n\n\"I got the message. You wanted to prevent me from ever being a threat to another person and you wanted me to suffer...\"\n\nSean interrupted him, \"Prevention definitely, suffering was a side effect of that. No, Mr. Steele, the final reason is to allow you to make amends for what you have done.\"\n\nThe confused expression on DeMarcus' face was comical, but Sean and Amanda avoided laughing at him.\n\nMr. Steele, you have hopefully learned that no matter how smart, powerful, rich, or mean you may be, there will always be someone who is stronger, more powerful, richer and meaner than you. I'm not talking about me besting you, although that is a worldly example that you probably understand, I am talking about the omnipotence of God.\"\n\nDeMarcus seemed to be considering Sean's words, but the light was still out where full understanding was concerned.\n\n\"I would never imply that I received some divine message where stopping you was concerned, but I do believe that God has used select men to exact his judgment upon those He found offensive for whatever reason. The Bible is full of examples of God often selecting the most unlikely men and women to take his battle to the oppressors, sinners, or opponents of his chosen people. I have no way of knowing if God will decide to work through you in some fashion, but I do know that He would need you alive if He was to choose to do so. The only decision you need to make Mr. Steele, is whether you want the opportunity to be chosen?\"\n\n\"I don't understand,\" whispered DeMarcus.\n\n\"Let me try to make things clearer for you. If you are transferred tomorrow to the U.S. Penitentiary, you will be defenseless. Your chance of survival will be slim to none, and the time you are alive there will be filled with abuse at the hands of other prisoners. You know this.\"\n\n\"My lawyer will get me some protection...\"\n\n\"Don't be na\u00efve, DeMarcus,\" said Amanda. \"You must know by now that Sean and I have influenced everything from your medical treatment to the selection of the Federal judge who presided over your trial. Do you really think that your attorney would be able to protect your life in a Federal prison if we didn't want it to happen?\"\n\nDeMarcus didn't say anything. He just stared at Amanda Wallace, seeing once again the vindictive side of this beautiful woman. He wished he could have met her under different circumstances where they would not have become enemies. Sean Wallace was one lucky dude.\n\n\"You have another option,\" continued Sean. \"Outside your room right now is my friend and the Pastor of my church, Bernie Calaway. He is prepared to sit with you, for the rest of the day if necessary, listening to you seek absolution and forgiveness. If you convince Bernie that your faith in God is stronger than your hate of your fellow man I will make certain that instead of the prison tomorrow you will be transferred to a half-way house where you will be housed for the rest of your life. You will be protected and cared for, but more importantly, after theological counseling you will be allowed to participate in the Prison Ministry. This will allow you to share your experiences with others, helping them to learn the lessons you have learned.\"\n\n\"My momma used to take me to church,\" said DeMarcus, almost as if trying to convince himself of a decision already made.\n\n\"Regardless of the decision you make, Mr. Steele, know that I will always be monitoring you. Sparing your life will not dissuade me from making you suffer further if you cause concern to me, Amanda, or anyone else. Whether you respect me or not, believe me or not, fear me or not - you need to have faith in something. I encourage you to select the Lord for your faith. It will grant you more peace than having faith in what I can and will do if you force me to.\"\n\nSensing correctly that the conversation between Sean and DeMarcus was over, Amanda said, \"Goodbye DeMarcus. I can't envision any circumstances where I will speak with you again, so I truly hope you find peace in the Lord as Sean has suggested. Pastor Calaway is a wonderful man, and I'm sure he will assist you with a journey of faith if you give him the chance. Sean and I have to leave you now. We have a plane to catch. We were married on Saturday two days ago, but we postponed leaving on our Honeymoon until we had a chance to meet with you.\"\n\nSean put his arm around Amanda's waist and began to lead her from the room. DeMarcus seemed to come to his senses when he asked, \"What do you mean you just got married? I thought you two were already married?\"\n\nAmanda paused, causing Sean to also pause as he was steering her towards the door. She turned to DeMarcus and said, \"But DeMarcus, I told you several times that Sean wasn't really a husband to me. Don't you remember?\"\n\n\"I thought you meant...\"\n\nAmanda didn't wait for DeMarcus to finish as she turned and left the room arm in arm with Sean. \n\n***\n\n\"So how many children do you think we should have?\"\n\nSean didn't hesitate. He had been anticipating this question from Amanda since their wedding, \"More than one, but less than twenty five.\"\n\nAmanda laughed so hard that she couldn't hold her drink steady and had to set it down before spilling it. Fortunately she hadn't had any of it in her mouth or it likely would have come out her nose.\n\nThey were on the balcony of their suite in the Four Seasons Lodge at Koele on the island of Lanai, overlooking the reflecting pool and Pagoda. They could catch glimpses of people playing Croquet on one of the lawns in the distance, but the Banyan trees provided them with enough seclusion for their purposes, which at this moment involved drinking Mai Tai's and relaxing before dinner.\n\n\"Why limit the number to twenty five?\" teased Amanda. \"Why not fifty or one hundred?\"\n\nSean reached across the space between them and brushed a strand of hair behind her ear, letting his finger linger on her ear lobe for a few seconds. \n\n\"Because we only have twenty five girls to act as babysitters,\" he replied.\n\n\"If you're basing the size of our family on the number of potential babysitters, then you need to also consider Beth, Carol, Wendy and possibly Nina, Emily and even Jeannie.\"",
        "Sean considered this, pretending to count on his fingers. \"Okay, more than one and less than thirty.\"\n\nAmanda gave up and decided to change the conversation, \"If I could have used my pistol, I know I would have beaten you. Who uses a shotgun to shot birds anyway? How unsporting.\"\n\nShe had tried every argument she could think of to get the staff to allow her to use her pistol instead of a shotgun while shooting clay. At each of the fourteen stations the hotel property offered, she would argue her Olympic training requirements and every other reason she could imagine to convince them that an exception to the rules should be made for her. Being denied each time, she still lost the daily match to Sean by missing only two of the sporting clays. Of course, Sean hadn't missed any.\n\n\"Even with your pistol, Mrs. Wallace, the best you could have done would have been to tie me.\"\n\nAmanda's response was halted by the ringing of the room phone. One of the reasons they had selected this hotel for the first leg of their Honeymoon was the very limited cell phone service if afforded. Land line phones still worked however, and Sean rose to go answer the one ringing behind them.\n\nRemaining seated and returning to her drink, Amanda listened to Sean's side of a brief conversation. This was only the fifth or sixth call they had received since arriving at the hotel a week ago. They had one more week reserved here before continuing their Honeymoon journey to Australia. Their plans called for them to spend three weeks on the Wallace farm, letting Sean see Amanda's childhood home before they would head to Sydney for Sean to be introduced to the personnel at the former Wallace Holdings headquarters - now a subsidiary of Wallace Worldwide Enterprises.\n\nSean was back beside her, sipping his own drink again within a minute.\n\n\"Grandma Beth just wanted to let us know that the lawyers have completed all the paperwork. The name is now officially 'The Michelle Anderson Foundation for Human Rescue'. She said that the press release will be issued tomorrow, but inquiries are already starting to come in about the ability for the foundation to accept human trafficking victims identified by various agencies in the State of Georgia and elsewhere.\"\n\nAmanda nodded but didn't respond for several minutes. She stared off across the hotel property deep in thought. Finally, she turned to Sean, \"Do you think the publicity about the Foundation will prompt the U.S. Attorney to change his mind about his strategy?\"\n\n\"He might be tempted,\" replied Sean. \"It probably wouldn't hurt for me to send a brief message to his boss' boss. As long as DeMarcus Steele is continuing to cooperate with the prosecutions, there should be absolutely no need to bring the girls into the process.\"\n\nDeMarcus Steele had been transferred to the half-way house as Sean had promised and within a day of arriving, asked to meet with the team investigating his human trafficking operation. Even though the U.S. Attorney had declined to prosecute Steele since the RICO and murder convictions had already put him in prison for life, the others involved in assisting Steele were still targets for prosecution. DeMarcus volunteered names of individuals that he had either paid or intimidated into assisting his operation, including two senior Customs officials at the Port of Columbus and three middle managers within the Georgia Department of Transportation. Trials for these individuals were scheduled to begin within the month and with DeMarcus' testimony, the need to have any of the girls appear as witnesses was suppose to be unnecessary. The U.S. Attorney already had Amanda's sworn deposition as well as her promise to return within two days if her own testimony was required.\n\nAmanda finished her drink and took a bite of the pineapple wedge from the rim of the glass. She stood and took Sean's hand, pulling slightly to make her desire for him to stand obvious.\n\n\"You can send a message later Mr. Wallace. Right now, you need to start working on this heap of children you desire. Remember, you're the one who promised both your grandmothers that you would have me pregnant by the time this Honeymoon was over.\"\n\nSean stood and swept Amanda off her feet and into his arms. As he carried her to the bed he asked, \"What about dinner?\"\n\n\"Room service is scheduled to deliver our dinner in two hours. You're not the only Wallace who can plan a mission. Now, at the risk of offending your Marine Corps pride, do as they say in the submarine service and 'go silent Mr. Wallace, and definitely go deep.\" \n\n~~~"
    ],
    "authorname": "BobbyBrandt",
    "tags": [
        "mystery",
        "adventure",
        "romance"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/heavy-traffic-ch-20"
}