{
    "title": "Jill's World Ch. 02",
    "pages": [
        "Chapter 2\n\nIntroduction to the real Jill's world\n\n*\n\nI did as Kelly had suggested. Not a bad idea at all. A smile and a 'hi Dad' and up the stairs to a nice hot bath in my very own jacuzzi tub. She was right, it felt awesome.\n\nIt was nice to relax. It was still early really. It was only around 10:00. A nice hour here and a quick check of my phone and I could sleep very soundly. Maybe even with a smile on my face. I fought the urge, and it was an overpowering one, to just go to sleep in the tub and went downstairs in a towel to kiss my dad goodnight.\n\nAnd I gave Kelly a big hug and a thank you for taking me shopping and went up to bed.\n\nMy phone was charged to full. I turned it on and cringed at what I saw. It was as bad as Julie had told me. If I thought Saturday was bad, apparently Sunday Farin really went off on me, then apologized, then begged, then cursed me. I understood the emotional roller coaster, I'd been on one for too long and was happy to ... maybe, be getting off it for a while.\n\nI guess tomorrow would tell.\n\nIntermingled in the one hundred and fifty-seven messages from Farin, were a few others.\n\nJILL: 11:00: IF YOUR PHONE IS STILL ON, TEXT ME RIGHT AWAY\n\nJULIE: 9:17: HEY CARRIE, I'M GOING TO BED, GOODNIGHT SEE YOU TOMORROW \n\nAnd one from Sue referring to how hot my daddy's girlfriend is, but ugh. I should have known it would get back to them. I decided to go ahead and reply.\n\nTo Julie just GOODNIGHT JULES CALL ME IN THE AM IF YOU WANT A RIDE\n\nAnd to Jill, I JUST TURNED MY PHONE ON MISTRESS \n\nAnd then, because it's who I am, HOW MAY I BE OF SERVICE?\n\nAnd I knew I was being a smart ass. It wasn't mean spirited in any way. But, I knew she would know I was being a smart ass.\n\nJILL: SHOULDN'T YOU BE IN BED? I WILL TALK TO YOU TOMORROW\n\nJILL: LET ME KNOW IF FARIN GIVES YOU TOO MUCH TROUBLE IN SCHOOL\n\nCARRIE: GOODNIGHT MISTRESS I WILL MISTRESS\n\nAnd sleep came very fast and easy. And it was a sound sleep.\n\nThe next morning, I didn't bother to shower. I had taken a long enough bath last night to be clean, so I just had to fuss with my hair for a while and decide what to wear. I really needed to unpack some more boxes. Maybe I would have some time tonight.\n\nSo, I grabbed ... yep, a pair of SHORTS and ... oh no, didn't put them on until I reached in my bag that Kelly had left by the bed, and put on a pair of white bikini panties. And oh my god!\n\nMy vagina was singing praises to me. It said, thank you Carrie for covering me up. But it said it in song.\n\n(Just in case you are too literal, my vagina did not actually sing)\n\nAnd then, before I pulled on my Inigo Montoyo T shirt \"You keep using that word.... I do not think it means what you think it means\" I put on a bra. And my tits were all pumped up and thrilled about it. I knew it was coming off at school, but for the moment... yeah, my shit was wrapped up in underwear!\n\nAnd I was in underwear heaven!\n\nIt was even just simple, plain, sensible underwear. Nothing even sexy about it. But ... well, go without for a week and see how much you miss it. I went two weeks.\n\nAnd with a pair of socks and my Converse tenners, I was bouncing downstairs, without a care in the world.\n\nDad was already gone to beat traffic. Kelly was sipping coffee and wearing pjs and a robe. I joined her with a glass of OJ and a slice of unbuttered toast. Yeah, I skipped the butter even though I wasn't on the squad and wouldn't have to hear Rebecca bitching about my flabby belly anymore. Which, believe me, wasn't like I was sporting a muffin top, I just didn't work out like they did, so I wasn't all toned.\n\nShe asked how I slept. We didn't mention my accident at the mall. And I gave her a kiss on the cheek on my way out the door, with my bookbag over my shoulder.\n\nAnd then, as the front door closed behind me, I shook my head. I kissed her. Weird. Never would have seen that coming. I'd try to make sure it didn't happen again.\n\nI checked my phone. Farin, Farin, Farin, Farin, Farin...\n\nAhh Julie! JULIE: CHAD'S PICKING ME UP SEE YOU THERE\n\nCARRIE: K\n\nChad.\n\nAnd there it was.\n\nThe ... what do older people say? The green monster?\n\nI blew it off, but the pang of jealousy was there. That was my Julie to take to school, not his. But, she wasn't.\n\nRadio... on.... Loud...\n\nAnd I was singing along with every song I knew and absolutely LOVING my car. I felt like a new person. Maybe it was the orgasm. Maybe it was that DARLA wasn't written in the crack of my ass. Maybe it was that I hadn't masturbated shy of an orgasm five times, or given myself an enema, or even checked my pubic hair in days. Yes, more than one day had passed since I'd done all that!\n\nBut, I was in an awesome mood. I pulled into school, kind of early because traffic hadn't been terribly hateful and I had left in time to pick up Julie. And I cranked up the volume as high as it would go and damn if my old posse didn't show up!\n\nSarah, Gina, Cat and Jen all came over to see me. I felt instantly guilty because I had been blowing them off so much with my other commitments. And I apologized and hugged them all and swore that now that I got kicked off the cheerleading team, things would be better.\n\nWe had chatted a little, it's not like there was animosity. It was just me distancing myself from people I liked so I didn't have to explain all the things that were happening to me. They all jumped in, Cat in front, and I made the car chirp and jump and then burned a little rubber in the parking lot. And that was when Mr. Brine, the principal, started walking over to my car with a frown. And I shut it off.\n\n\"Sorry Mr. Brine, it won't happen again.\" I called out through the window.\n\nHe shook his head and went back to the school. We rocked out in the car for another song and went inside. On the way to class, I excused myself to the bathroom, remembering that I had to take my bra off. I went to a different bathroom than the one I used to meet Farin in just in case.\n\nI went in the stall and reached back to unhook it, took it off through my T shirt arm and stuck it in my bag. Then I headed into Miss Galler's class.\n\nJulie was there, talking to Chad and he kissed her goodbye just about when I was walking up.\n\n\"Hey Chad.\" I greeted him.\n\n\"Oh, hey Carrie.\" He waved, and grabbed another quick kiss on his way down the hall.\n\n\"So who's doing the PDA now?\" I asked her as we walked into the classroom.\n\nAnd my heart sank as we walked in the door. Farin was a wreck. Rebecca was talking to her in a hushed but apparently upset whisper. She looked like hell. Like someone who hadn't seen a hair brush in a couple of days, or showered, or washed a single tear from their face. She moved towards me when I walked in and Rebecca pushed her back forcefully.\n\n\"No...\"Rebecca whispered, though I could hear her. \"You are not going to do this Farin. If you need a day off, let's go ditch school. I will go with you.\"\n\nShe was crying. I looked at her and quickly tore my eyes away before she could rope me in. Julie moved into my line of sight so I couldn't see her, nor her me.\n\n\"Carrie... please!\" Farin screamed at the top of her voice.\n\n\"Fucking awesome!\" Rebecca yelled. And tried to push her outside.\n\n\"I should talk to her.\" I looked at Julie, my happy morning blown to shit. I was feeling those tear ducts again.\n\nJulie grabbed my hand and squeezed it hard. \"No! You should not talk to her. There is nothing you two need to say to each other right now. It needs to calm down.\" And she said it loud enough for Farin to hear it too.\n\n\"Carrie, you know this is wrong!\" Farin yelled and pushed at Rebecca, but Rebecca, I got to say, is a pretty strong bitch.\n\nAnd then Courtney jumped in. \"Oh boy! What fun!\" She laughed and smiled at me as she headed back to help Rebecca control Farin. Courtney wasn't even in this class, so I guess Rebecca called for back up.\n\n\"What are you in love with Julie now?!\" Farin screamed at me. \"Just throw me away like garbage?!\"\n\n\"Farin, come on sweetie, this is not the right place.\" Courtney tried to calm her down.\n\n\"LOOK AT ME YOU BITCH!\" Farin screamed at the top of her voice and the whole classroom looked at her. And then they looked at me.\n\n\"Farin, please stop.\" I begged her. \"Please stop this.\"\n\nJulie held my hand tight, not letting me get up.\n\nAnd that was when Miss Galler walked in. She looked at the mess that was her classroom and spoke above the din. \"Farin, please come out in the hall with me.\" She said as she walked back out the door.\n\nFarin, went though everyone could hear her sobbing.\n\n\"Well, that was entertaining huh?\" Courtney chirped after Farin left. \"Now, everyone turn back around, stop ogling Carrie and pay attention to your own life and maybe, just maybe, some day you will have that much passion in a relationship of your own.\"\n\nSome laughed, most turned around. And she stared down anyone who looked back at me, but with a smile on her face.\n\n\"See you at lunch Carrie.\" She smiled... \"Well and next period too.\"\n\n\"Good morning Julie!\" She greeted and then wiggled her cute little ass out the door.\n\nI had to laugh. She had a presence.\n\nThe bell rang and Miss Galler wasn't back yet.\n\nFive minutes later she was at the classroom door with Principal Brine. Well fuck. Yep, they were there for me. Julie squeezed my hand as I got up to leave.\n\nMr Brine pulled me outside and closed the door.\n\n\"Are you okay Carrie?\" He asked. \"Would you like to go to the nurse or to see Mrs Lane? I know you will see her after school, but if you wish to go talk to her now, you can.\"\n\n\"No, I'm fine Mr. Brine.\" And I giggled because that rhymed. But I wasn't really, and I'm sure it showed.\n\n\"Okay Carrie. If you need to be excused from any classes today to see her, just let your teacher know. It will be okay.\" And he walked away, his duty to ... whatever it is, being complete.\n\nI went back inside.\n\n\"Welcome back Miss Fitch.\" Miss Galler smiled piteously at me.\n\nI sat down and got my book back out.\n\n\"Nice shirt by the way. An English teacher's favorite.\" Miss Galler added.\n\nI had to look down to remember what I was wearing and I laughed.\n\n\"So, papers are coming up soon. And I believe Miss Fitch and Miss Petrili, that you are the only two who are delinquent in providing me with an outline.\" Miss Galler looked at us.\n\n\"Well, Miss Galler, I have decided to write a paper about the dichotomy of friendship, how it can be the most powerful love a girl ever has. I am going to cite both fictional and non-fictional characters and establish a pattern that some of the best relationships were not between lovers, but between friends.\" Julie proudly spoke first.\n\n\"Impressive Miss Petrili, I look forward to reading it.\" Miss Galler applauded her. \"Outline on my desk by Friday, no more extensions.\"\n\n\"I'm ...\" I looked at Julie. I had no fucking clue what I was going to do. \"Going to write a paper to oppose my distinguished colleagues view.\" I giggled. \"I believe that the best relationships are between lovers.\"\n\nJulie kicked me. \"How original.\" She laughed.\n\n\"Very well, I expect an honest effort from both of you.\" Miss Galler smiled. \"Outline by Friday Miss Fitch\"\n\n\"This month, we will be reading ...\"\n\nAnd hey, it's English class. Who needs more dialogue than that?\n\nJulie is incredible. She kept watching me and distracting me every time I teared up.\n\n\"Do you think she left for the day?\" I whispered, knowing that next period could be really ugly.\n\n\"Let's hope so.\" Julie whispered back, \"But you have bigger things to worry about with Jill, that's what I'd be nervous about if I were you.\"\n\n\"Thanks for reminding me.\" I laughed uncomfortably.\n\n\"That's what friends are for, you know I will be there as soon as I can. Don't do anything ... stupid.\"\n\nI'd try. I had gotten pretty good at doing stupid stuff. And there was the bell. I grabbed Julie's hand. \"Please walk with me to class?\" I asked, perhaps too paranoid.\n\nShe laughed. \"Of course I will.\"\n\nAnd she went out of her way for me, so we had to go kind of quickly through the sea of people in the halls. As we got to the door of my math class, Julie peeked in with me. Farin wasn't there, at least not yet.\n\n\"She still might come.\" Julie said.\n\n\"Yeah, but thanks for that anyway.\" I smiled at her.\n\n\"See you in 3<sup>rd</sup>.\" She smiled and walked off.\n\nI walked in and sat down next to the empty seat where Farin usually sat. Courtney took the seat instead. \"I'll move if she comes. I doubt she will though.\" She smiled at me.\n\nI smiled back. \"So, where do you want me to meet you for lunch?\"\n\nCourtney giggled. \"How about the weight room?\"\n\nI stammered, \"umm ... okay....\"\n\n\"I'm fucking with you. We need to talk, I'll meet you in the cafeteria goof.\" Courtney laughed. \"You should have seen your face.\"\n\nI blushed. \"How's Farin?\" I asked.\n\n\"I'm pretty sure she went home for the day. What a scene huh?\" Courtney smiled at me. Then noticing my expression, she changed her own and looked confused. \"You still love her?\"\n\n\"Wow, I mean, I knew you were 'in love' with her for a while, but I thought that had all blown over even before you went to Jill's house. I thought you'd be glad to be rid of her.\" Courtney continued. \"But, yeah, you are sad I see that. Well, clearly you can get her back if you want her. That isn't going to be hard at all. I kind of thought you were going for a tougher target though. But, what do I know right?\"\n\n\"Woah, what the fuck Courtney?\" I asked. \"What target? You?!\"\n\nCourtney laughed so hard she squealed. \"ME!?!\" She laughed. \"WOW! Now that is aiming high! Holy crap girl, you get one pussy dripping and you think you are God's gift to women huh?\"\n\nI couldn't help myself, she was laughing too loud, I laughed with her.\n\n\"Oh baby, don't think I haven't thought of it.\" Courtney giggled pinching my cheek. \"But, you would have no chance of getting me, it would be me deciding I wanted you. And yes, there is a big difference.\"\n\n\"You don't have to be a bitch about it.\" I pouted.\n\n\"Oh stop Carrie, you're gonna make me cry.\" Courtney laughed. \"But here, give me a kiss.\" She puckered up and moved her head towards me.\n\n\"No thanks.\" I held my hand up.\n\nCourtney took my wrist in her hand and looked me in the eyes. \"Give me a kiss Carrie.\" She was smiling, but no longer laughing. Her beautiful blue eyes were staring into my ugly brown eyes. Her will was matching against my own. \"I'm quite serious Carrie, don't make me ask for tongue.\" She practically sang it.\n\nSo, I leaned forward and kissed her. And when her other hand went around my head and held it there, I kept the kiss going. Lips dancing with lips. And the bell rang and she released me a few seconds later.\n\n\"You are so cheap.\" Rebecca muttered.\n\nThen Courtney scooted in and shifted her legs to face me and slightly parted her lips and guided my hand between her thighs. She whispered, \"Just gentle, I don't want to get off, just teased.\" And she kissed me on my nose and turned her attention to the teacher.\n\nIt was never going to change. At least not with Courtney. I sighed, no point arguing, maybe it would put her in a better mood by lunch and we could have a decent conversation instead of her ignoring everything I said or wanted and getting her own way.\n\nSo, constricting the view as much as possible, I slid my hand up between Courtney's thighs and touched the gusset of her panties with my fingertips. She moaned in a whisper and spread her legs a little farther apart. I inched my fingers to the side of her panty and slid the entire front to the left side of her pussy too give my fingers skin to skin access.\n\nAnd I played with her. It wasn't terrible, I'd done it before after all. It was a nice distraction from the droning voice of Mr. Thatch. I didn't penetrate her at all, at least not in the cuntal tunnel. I did slip my fingers between her outer labia and occasionally the inner labia, but for the next forty-five minutes, I basically kept no steady rhythm nor did I build the excitement level. A few times, I just held my fingers still for a while, paying attention to Mr. Thatch, but she would squeeze her thighs around my hand to get my attention and I would return to sliding my fingers up and down and basically kind of exploring her vagina.\n\nFor Courtney's part, and to her credit, she pretended I wasn't even touching her. Though she would clear her throat when she squeezed her thighs around my hand to signify her displeasure with my momentary pauses in petting her kitty. She did get wet. There was no doubt that the moisture between the folds of her lips was expanding as the minutes ticked by, but the thing that surprised me most was the state of my own panty.\n\nI was saturating the gusset of my panty, I could feel it to the point I was afraid I would leave a wet spot in the crotch of my shorts. And I couldn't understand why. Because I enjoyed touching Courtney's quim? Maybe. Or was it the way she treated me, like I was there to serve her needs. I wasn't sure, but something about all this was definitely heating my little suzy up and flowing her right along.\n\nI didn't rub my thighs, though I had to consciously not do it a few times. I didn't squirm or wiggle my ass. I was not providing any physical stimulation whatsoever. And yet, I was at least as wet, probably more so, than Courtney, who's vagina I had massaged for nearly half an hour.\n\nWith fifteen minutes left of class, I bumped up the pressure a little, but not too much. Certainly not enough to make her orgasm. She did look over at me and smile then and nodded that it was a good pressure and rhythm, or that is what I took the nod to mean. It could have meant she liked my perfume for all I really knew.\n\nAnd so it was that as the bell rang, both my panty and my fingers were soaking wet. Courtney's panties were soaked too, so that was kind of cool. I withdrew my hand and she turned to get up from her seat and then she whispered to me to follow her quickly. I was neither surprised nor pleased to find myself kneeling in the handicapped stall of the girls' room within seconds. Five minutes, that was all the time between classes.\n\nI pushed her skirt up and pulled her panties to the side again and devoured her cunt. I would of course never call it a cunt out loud in Courtney's presence. She did not allow such a reference to her sweet kitty. But at this moment, the cunt was dripping like a faucet and ripe to be eaten. And I wasted no time devouring her sweetness, because I did not want to be late for Social Studies again. I just hoped she wouldn't squirt and leave me stinking of her juices all day.\n\nAlas, for the smell of pussy on my breath and face, it was quite pungent. My tongue delved well into the hole of her kitty and found the copious juices that had been stored there, simmering as I fingered along her slit. They erupted into my mouth with an explosion of fragrant waters. She moaned too loud for my comfort. There were the sounds of others using the rest room for its intended purpose and not as a place to indulge in debauchery.\n\n\"Oh you heavenly little slut.\" Courtney whispered. \"I adore this. Swallow it all you little whore.\"\n\nAnd she rammed her pussy into my face as she came with a mild squirt compared to what I had witnessed and been sprayed by in previous encounters with her. I sucked and gulped for all I was worth to keep it from oozing down my chin. And when she was finally done, she sighed deeply.\n\n\"See you at lunch lover.\" She giggled. And barely giving me a moment to look respectable, pulled her panties back over her pussy, pulled down her skirt and exited the stall.\n\nI leapt to my feet, hoping to not find an audience outside, and I was at least partially satisfied, that there were only two girls giggling at the sink as Courtney strode past them to the door. I went to a sink and washed my face, blushing heavily as the two girls giggled louder, knowing precisely why I needed to wash my face.",
        "I didn't have time to acknowledge them or deny the reality that was so obvious and clear. I dried with some paper towels and strode rapidly down the hall to my third period class. Jules was in her chair already and I eased into the door just as the bell rang.\n\n\"Miss Fitch, just on time.\" Miss Simms warned, but at least it wasn't a tardy. I settled into my seat. Julie looking at me curiously, a little upset maybe, I thought.\n\n\"What?\" I asked her.\n\nJulie just shook her head and whispered, \"forget it. Courtney?\"\n\nI giggled. \"Jealous? Shall I be all yours now?\" I leaned in on her shoulder and batted my eyes at her.\n\nShe looked at me for a while, studying me. Like really trying to stare through the skin and into my soul, or that is what it felt like. \"Maybe.\" She laughed, pushing me away.\n\nMy grades were suffering, so believe it or not, I was paying better attention in classes than I had for the previous couple of weeks. Julie and I barely whispered to each other the whole time and didn't pass a single note. When the bell rang, she grabbed my hand to keep me from running off.\n\n\"I want to spend the night or you to spend the night at my place maybe Wednesday?\" she asked. \"I'd rather use your jacuzzi of course, but you can sleep over at my place if you'd rather.\"\n\nI thought we were putting things on a back burner. \"Okay. I'll ask my dad tonight.\"\n\n\"Great.\" She smiled. And we got up to walk to biology together.\n\nKaren from the cheer squad was walking the opposite direction in the hall and waved to us. \"Hey Carrie, Hey Julie.\"\n\n\"Hi Karen, see you at practice later.\" Julie greeted, thinking she was just waving and walking by in the halls.\n\n\"Well, yeah, of course Julie.\" She smiled. Then turned to me and we all three were stopped then in the middle of the hall with kids walking all around us. \"So, you and Farin broke up huh?\"\n\nI guess a part of me was still in denial that anyone ever knew we were together. It embarrassed me a bit. \"I... yeah... um... we are taking a break.\" I stammered, clearly rattled by the question.\n\n\"Well, um...\" Karen began, then looked at Julie and stopped. \"Maybe, could I call you some time, I have a few questions about umm some things...\"\n\nI must have looked as puzzled as I felt. \"Sure... do you have my new number?\" I asked. I knew she didn't have my new number, but I felt weird giving it to her.\n\n\"No, I don't think so.\" Karen blushed. \"When did you get a new number?\"\n\n\"Just a few days ago. Umm. I'll just call you later, I got your number off the contact list.\" I offered, not feeling like digging out a piece of paper to write down my number.\n\n\"Okay, call me tonight.\" Karen smiled, and she walked back off into the crowd.\n\nJulie started laughing.\n\n\"What?\" I asked as we began walking back down the hall again.\n\n\"She is going to ask you out.\" Julie laughed. \"My little Carrie is getting very popular.\"\n\nI elbowed her in the ribs. \"She is NOT going to ask me out.\"\n\n\"Oh, yeah she is.\" Julie stated in a tone that said 'you can count on it.'\n\nAwkward.\n\nWe arrived at Biology class without anyone else bothering us in the halls and sat in our normal seats, with a minute or two to spare. \"If you have time after talking to Courtney, come finish lunch with me.\" Julie suggested.\n\nI raised an eyebrow at her. She is so sexy. I mean, not slutty sexy, just beautiful sexy. Like not trying to be sexy, she just is sexy. Ugh... even in my own head it makes no sense. \"Of course I will.\" I smiled.\n\nBiology. Studying all kinds of great things about how the body works and then dissecting things to see what made them tick. Well, that's the five second synopsis. Today, we were learning about insects and thoraxes and other gross things about bugs.\n\nI was looking forward to talking to Courtney, but was also quite apprehensive. Jill did say she would not interfere, whatever we decided to do was between the two of us. So, I had to negotiate the best deal I could. Ideally, what would I give her? I wasn't even sure. Her nose was better and she was going to get the surgery she wanted to make her nose even better than before. And apparently the insurance would offset a good bit of the cost, or so Courtney told me.\n\nAnd I had already done quite a bit for her. The day at her house was ... miserable, to put it mildly. And even just now I had given her oral in the bathroom at school. So how much was going to be enough? Didn't I do enough already? After all, it was her taunting, well, on top of everything else, that pushed me over the edge.\n\nWell, at least at the moment, here in biology class, looking at a dead bug, I didn't think I owed her anything else and since I really had no idea what Jill was going to be like, I would just have to put her off. And I let Julie make the first incision into the juicy thorax of the insect on our plate. And it juiced and it was gross.\n\nAfter carving up the bug, we cleaned up and washed our hands thoroughly and the bell rang. Julie gave me a hug. \"See you later.\" She smiled.\n\nAnd I went off to meet Courtney. I didn't get lunch yet, when I walked into the cafeteria, because I wasn't sure whether Courtney had hers or wanted to talk before we got our food. She was easy to find. Waving at me so widely that the entire school gave her a moment of attention. I smiled and walked towards her and felt like everyone in school knew why I was heading over there.\n\n\"Hey Carrie.\" Courtney smiled. \"I really miss you being on the squad. You were the most fun by far.\"\n\n\"Thanks. You want to get food first?\" I asked. Eager to get past my current state of ... well, I guess a panic attack would be the appropriate term.\n\n\"No, I have some.\" She held up a bag and smiled. \"I'll give you half a sandwich if we take too long for you to get something. Have a seat.\"\n\nI sat down opposite her. We were towards the back of the cafeteria, where there were smaller tables. There weren't many of them, so if you wanted an intimate lunch like we were having, you had to get there early.\n\n\"Okay, umm...\" I was blowing it... umm? Umm? Jeez. \"So, what do you want?\" smooth Carrie, very smooth.\n\nShe giggled. \"Are you going to give me anything I want Carrie?\"\n\n\"I ... no. I doubt it, unless you didn't want much.\" I laughed uncomfortably.\n\n\"Well, make me an offer then and I will tell you if I think it is acceptable. You know my nose is still in pain. It's great that Daddy is going to fix it the way I want it, but that means they will break it all over again. And I'm not a wimp Carrie, I can handle the pain, but my appearance is far beneath my high standards. Now, I'm sure I could get almost any guy in the school to take me out and even pity fuck me, but we both know I am nobody's pity fuck don't we?\" Courtney began.\n\n\"No, of course not Courtney. You are gorgeous, you know that.\" I answered.\n\n\"Yes I know.\" She smiled. \"So, you are off the hook. I don't want you to do this because of guilt. I forgive you for punching me in the nose and trying to kill me.\"\n\nI felt my mouth hanging open, but I couldn't close it.\n\nCourtney giggled. \"Close your mouth Carrie.\"\n\nI did.\n\n\"I don't want you to play with me because of guilt, I didn't say I don't want you to play with me.\" Courtney interjected. \"The truth is, you opened up something new and interesting for me and I want to explore it as much as I can. I know you have to answer to Jill first. And I know she isn't going to use me like Darla did to play games with you. But, she won't be the boss of you forever. And maybe, when she is done with you, you will still want someone you can trust to play with you and keep you in touch with your perversions.\"\n\n\"So, I'd like us to play together at school. It will be fun. Don't you think? Nothing too crazy. No lesbian gangbangs or cheer squad spanking sessions.\" Courtney giggled. \"Although we both know how much fun you had.\"\n\n\"Umm, listen Courtney, it wasn't exactly fun.\" I answered. \"I..\"\n\nShe put her finger to my lips. \"Shhh. Okay, maybe not fun, but you were definitely turned on by it. Just like I will bet you were at least as wet as I was when you got on your knees in the bathroom eating at my Y this morning.\"\n\n\"Yeah,\" I replied, \"I'm ... you know ... weird like that. But, I don't really think I need that in my life.\"\n\n\"Oh Carrie, that IS your life.\" Courtney smiled. \"So, let's go for a walk.\"\n\n\"Look, Courtney, I really think we need to end this.\" I interrupted.\n\nShe looked me in the eyes. \"Stand still.\" She said with a smile and reached forward and slid my shorts down a couple of inches so they were resting on my hips and would go no farther down without unbuttoning them. I began to reach for her hands when they approached the button and she swatted my hands away. She giggled. \"Be still I said.\"\n\n\"No Courtney are you insane?\" I whispered. \"You can not undress me in the middle of the cafeteria.\"\n\nShe laughed. \"I'm not going to undress you Carrie.\" She unbuttoned the top of my shorts. \"Now, would you like to go for a walk or should I lower the zipper an inch?\"\n\n\"Fuck. Where to? Lead the way.\" I muttered.\n\n\"Follow me Carrie.\" Courtney sang.\n\nI walked behind her as she sauntered through the cafeteria and out into the hallway. Her nose slightly deformed still, yet she held her chin high and wiggled and waggled her gorgeous little ass as if she were still as perfect as she was a couple of weeks prior. We walked down the hall and into an empty classroom. She walked up to the teacher's desk and I followed behind her. She plopped down into the empty chair behind the desk as if she owned it and proceeded to open her bag.\n\n\"Carrie, I want you to take off all your clothes and lay down on the desk and then I will give you half my sandwich to eat while lying naked on the desk.\" Courtney smiled at me. \"Are you allowed to cum?\"\n\nI looked at her with my mouth open and shook my head no.\n\n\"Oh, that's too bad. Well, maybe after we meet Jill today, she won't be such a bitch like Darla was and she'll let you enjoy this the way your body wants to.\" Courtney giggled.\n\n\"I don't want to do this Courtney. I'm sorry, I know my body would get all stupid from doing it, but I just don't want to anymore. I'm very sorry I broke your nose, but I'm not going to be in your debt for the rest of my life over that. You need to be much more finite.\" I exhaled it all in one breath and was completely winded by the time I finished.\n\nAnd a very rare thing happened, Courtney frowned. She was usually smiling and singing some of her words and giggling like the world was always amusing to her, not matter what. But, there was no mistaking the frown. And as quick as it came to her face, it vanished into a smile again.\n\n\"Okay Carrie,\" she said. \"Go finish lunch with Julie then. I guess we are finished for now. But, I want you to really consider this tonight and give me an honest answer tomorrow. I think you not only love this, but you need it. Maybe I'm wrong. Maybe tonight, in your bed, when you are all alone, you will start thinking about what it would have been like to be laying here on this desk in front of me, legs spread wide so your gooey little cum box could drip all over the desk while I ate my lunch off your naked body.\"\n\n\"Maybe you will picture your nipples straining and pointing straight up at the ceiling while you ate half of my sandwich trembling with fear and excitement that someone could walk in at any moment and discover you. Maybe you will let your fingers walk down your body and touch your clit thinking about how you would have cried of embarrassment if someone had caught you like that and you had to scramble under the desk to hide and wait for your clothes.\"\n\nShe said it all in such a sultry way, like she was reading a perverted romance novel. I shivered and she smiled like a cat that had cornered a mouse.\n\n\"Or maybe I'm wrong. Let me know tomorrow in second period. I will see you at Jill's later I'm sure.\" Courtney chirped, back to her regular care free voice.\n\nI didn't trust myself to speak. I knew it would come out as a squeak and I didn't want her to hear how much she got to me. I nearly ran down the halls, the slapping sound of my shoes on the tiles echoing through the empty halls as I returned to the cafeteria to salvage what was left of my lunch break. It wasn't much, ten minutes before the bell would ring. I grabbed an apple, a bottle of water and a small salad and went to join Julie.\n\nShe smiled at me as I sat down, though her eyebrow was raised in question. She was there with the cheerleaders, and I noticed a couple of frowns that I was sitting with them when I had been evicted from the team, but the majority were sympathetic. I ate quickly, since there wasn't a lot of time.\n\n\"So, you think they will let you back on the squad?\" Karen asked with a big smile on her face.\n\nI was looking at Julie, kind of wishing I could communicate telepathically, but not succeeding at all. I didn't even hear her the first time, but a kick from Julie under the table accompanied by her eyes pointing to her left got my attention.\n\n\"Sorry, what was that?\" I asked Karen.\n\nKaren giggled, \"Distracted much? I said do you think they will let you back on the squad soon?\"\n\n\"No, I think I'm done. I wasn't that good anyway.\" I looked up to see Rebecca smirk, whisper to Britney and they giggled together.\n\n\"Oh, well that's okay.\" Karen smiled. \"You will always be welcome to hang out with us.\"\n\nRebecca had to speak up. \"Really Karen? Are you deciding for all of us now?\"\n\nKaren looked over at her a bit shocked. \"No, I just thought it would be okay with everyone.\"\n\n\"Hmm.\" Rebecca feigned pensiveness. \"Maybe we should vote on it.\"\n\n\"Don't do it Rebecca.\" Julie scowled at her.\n\nRebecca turned her wrath on Julie then. \"Oh, the nube has some input on the matter.\" She said sarcastically. \"Are you running the squad now Julie?\"\n\n\"Rebecca, please just let's finish this last five minutes and I won't sit here anymore.\" I interjected.\n\n\"Oh? You are such a wonderful little compliant peacemaker Carrie.\" She mocked me. \"So subservient to the will of others. Don't you have any pride anymore? You used to be so tough, but it was a bunch of talk wasn't it? Deep down, you are just a cowardly pussy aren't you?\"\n\nI counted to three. I probably should have counted to ten, but my little angry red warrior was rising to the top and I had to let him out a little bit. \"Rebecca, I'm not afraid of you. I simply don't need to sit at a particular table to know who I am.\" And I got up and dumped what was left on my tray in the trash.\n\n\"Really nice Rebecca.\" Julie growled. \"Just can't leave it alone can you?\" And she got up and followed me.\n\n\"Whatever dikes.\" Rebecca laughed cruelly.\n\nJulie caught up to me and we sat down near the doors to the hallway, waiting for the last couple of minutes to tick away before next period. \"So, how was your meeting?\" She asked cryptically, to throw off the potential eavesdroppers at the table.\n\nI thought back to Courtney smiling so smugly at me from behind the desk. \"It was good I guess. At least nothing happened.\"\n\n\"Well, that's good.\" Julie smiled and took my hand and gave it a light squeeze.\n\n\"I'm mostly nervous about this afternoon.\" I said, almost in a whisper.\n\n\"Me too.\" Julie said with a look of concern across her face.\n\nThe bell rang and we walked to our lockers and then to Spanish class together. We traded notes and spoke a lot of Spanish and then walked to gym together. My anxiety was building, but I think I was pretty good at not showing it. It was a nice day for the season, so we got to go for a run outside. I wasn't much of a runner, and Julie held back with me so we could talk while jogging at a light pace around the grounds. A mile later, I was tired, and Julie was still ready to go another mile.\n\nInside, we hit the gymnastics equipment for the last half of class. Julie was, of course, amazing and graceful. I was ... not so much that at all.\n\nBut, I did work up a sweat and felt like I stunk too much to go see Jill without a shower, so I joined the bulk of the girls in the communal shower room. I hadn't done that much lately because of the henna tats, and it was still as uncomfortable as ever, fighting the urge to compare my body to everyone else's.\n\nI dried up and dressed and gave Julie a hug goodbye at the locker room doors. I wouldn't see her again until she came to Jill's house later. I wasn't even sure how she was going to get there. She didn't have a car. But, that wasn't really my concern.\n\nIn my favorite class, I drew a warrior princess. I made the eyes too big intentionally, as I liked to do in many of my drawings. Miss King congratulated the effort, but frowned as she did so, saying I should work on it some more tomorrow and put a bit of myself into it.\n\nI didn't disagree. It looked okay, but was far from passionate work. I left it for tomorrow.\n\nI dropped my books off in my locker before heading to see Mrs Lane. She was waiting in her office when I walked in. She smiled and greeted me. \"Hello Carrie, how was your weekend?\"\n\nI laughed. 'Well, gee Mrs Lane, other than blowing a dozen guys, getting caught giving head to my girlfriend in a limousine, then being treated like a dessert dish, giving a blowjob to some judge I don't know and a few other old dudes and then getting the shit beat out of me, all while managing to lose my girlfriend, it was a pretty fantastic weekend.'\n\nBut, I just said it was fine.\n\n\"How is everything at home?\" She asked, apparently accepting the word 'fine' as answer to her previous question.\n\n\"Great.\" I smiled.\n\n\"Short and to the point again I see.\" Mrs Lane smiled at me. \"Okay, let's talk about Farin.\"\n\nI coughed. \"What about Farin?\" I asked, suddenly very uncomfortable.\n\n\"Well, the rumor is that you two were a couple until this weekend and she made quite a scene in first period today. They brought her in to see me and while I cannot divulge anything that we discussed, it was made quite clear publicly that she was upset about you breaking up with her this weekend. So, why did the two of you break up? In your opinion?\" She asked.\n\nMy head was racing. Of course they would have brought Farin to talk to the counselor after that scene. What had she said? I started fidgeting, rubbing my thumb over my fingernail. \"I don't know.\" I whispered to break the silence. \"I guess she was just too public for me.\"\n\nMrs. Lane's face went a bit flat. \"So, you wanted to keep your relationship private and she was proud of you?\" She asked.\n\n\"No!\" I shouted louder than I had intended. \"You make me sound horrible!\"\n\n\"Carrie, I'm not trying to make anyone sound horrible. I'm simply guiding my questions based upon your answers. And what Farin told me, but this is about you, not her. So, what was the problem with being public?\" Mrs Lane pressed.\n\n\"I'm just not a fan of the PDA.\" I answered. \"And I guess I didn't want everyone talking about me being a lesbian. It was bad enough with what did get out without me publicly announcing our relationship.\"\n\n\"I see. Was she not willing to keep it quiet at school?\" she followed.\n\n\"She did for awhile. Friday was bad though. She humiliated me. I mean, not that I'm embarrassed of Farin. She's so beautiful and really was nice to me. It's just she kept pushing the sexual stuff in front of people and I didn't want that. It wasn't her, I wouldn't want that with anyone.\"\n\n\"So, is that why you two broke up this weekend?\" Mrs Lane asked.\n\n\"I guess. Well, it was a lot of things that I don't really want to get into, but that was a big part of it. Anyway, I'm okay if that is what you really want to know. I mean, this morning was rough, but I'm sure we will be okay tomorrow after she has cooled down a bit.\" I certainly hoped so.\n\n\"Is anyone making you do things that you don't want to do?\" Mrs. Lane leaned a bit closer.\n\nI instinctively leaned back away from her. What did Farin say? This could be very bad indeed. \"What do you mean?\" I asked, deflecting her request for information for a moment at least. Plus, I needed to get an idea of what she knew.",
        "\"Sometimes we find ourselves in a position where we accidentally or unintentionally or contrary to our own best interests, put someone in an authoritative position over us. Like an abusive parent would be your parent regardless. Perhaps a friend has asserted some control over you? Made you do things that you did not want to do. Like Farin trying to force you to come out in public at school. Is anyone actively pressuring you to do anything that you do not want to do?\"\n\n\"No.\" I answered. \"No Mrs. Lane, nothing like that. What did Farin say?\" I knew it was a bad idea to ask that as the words left my lips.\n\n\"Carrie, you know I can't tell you anything about my conversation with Farin. But, why do you ask? Is there something that Farin knows that you aren't telling me? What is happening? If someone is coercing you to do things you don't want to do that is illegal Carrie. It isn't your fault. You are a victim and need protection and they, if they are adults, need to be punished and taught that it is not okay or they will continue to do this to other young girls.\"\n\n\"Mrs. Lane, I have no idea what you think I have been doing, but there is nothing to tell. I don't know what misinformation you have been given, but it is wrong. I just broke up with Farin. It isn't some conspiracy of grand scales.\" I was quite irritated and I'm sure it showed.\n\n\"Okay Carrie.\" She answered. \"You don't have to tell me. Everything we discuss is confidential though. I hope you know that I would never allow our conversations to harm you.\"\n\n\"Great.\" I muttered. \"Look, honestly Mrs. Lane, I think this is a waste of both our time. I am really doing great living with my dad. We were talking about colleges this weekend and I hadn't even given that much thought before. I truly feel like things are pulling together. I got a job now and I don't have a girlfriend constantly trying to get me to kiss her and hold her hand in the hallway. I really don't think you will hear anything bad about me anymore. So, you let me know what I need to do to stop these meetings from happening.\"\n\n\"Carrie, you know some people pay to have someone listen to their problems. You get this opportunity for free. But, you want to know what it will take to stop having to see me after school every day? I need you to talk to me, to open up and tell me what was going on that was interfering with your life. Simple as that. So, tell me something that happened, just one thing, that distracted you in school.\"\n\nShe was never going to let me go. I would be here after school for the rest of the year. \"What if I just take a nap after school and we pretend we talked?\" I asked.\n\n\"Nice try Carrie, but I get paid regardless, so we may as well make it worth your time.\" She chuckled.\n\nI groaned in frustration. \"Fine. Farin was always trying to force me to hold her hand and kiss her in public. In the halls. In the classrooms. At lunch. At cheerleading. It didn't matter, she wanted everyone to see us together. She wanted to be a public couple and the talk of the school. And you know what? It finally worked because Friday the entire school was talking about Carrie the lesbo switching over to team Farin. And it was extremely uncomfortable and embarrassing for me. I did not want that attention and even over the weekend she still wanted more and more. And I couldn't take it anymore so I broke up with her. You want to know who tried to make me do things I didn't want to do? It was Farin. And I loved her, I did, I just did not want the notoriety.\"\n\n\"So, how was that? Enough for today?\" I asked angrily. Everything I had just said came flowing out of my mouth like a dam breaking. Of course I could never tell her the truth. But as those words came out, I realized how true it was and it broke my heart a little. Because I really did love Farin, her ruse had worked. But I did not want to cry in front of the shrink.\n\n\"Yes Carrie, I think that is a great start. I will see you tomorrow and we will talk about why you don't like to be the center of attention.\" Mrs Lane stood and opened the door for me.\n\n\"See you tomorrow.\" I mumbled on my way out. I went to my car and drove to Jill's house without a glance backwards. I blared the music to drown out my self-pity.\n\nWhen I finally got to Jill's house at 4:00, I only barely remembered to slide my panties off and hang them on the rear view mirror. That of course meant pulling my shorts off and then putting them back on. Perhaps there was an advantage to skirts after all. I blushed thinking of Julie seeing that later. This was really going to be uncomfortable having her see me running around like a slut.\n\nBut, there was nothing for it right now, I had to see what was in store for me. I locked my door and headed to Jill's front door.\n\nSue answered it and smiled at me as she let me inside. She was dressed in nothing but a flowery kimono. \"Just go ahead and take your clothes off here at the door every day.\" Sue told me. \"Fold them up neatly and set everything but your shoes on the arm of that chair.\" She pointed at a leather lounge chair to the right side of the front door. I guess I should have figured that I would be naked a lot, but I still wasn't prepared for it and fumbled a bit getting out of my clothes.\n\n\"Sweetie, you know I love you, but you really need to move a bit faster. Jill is not going to be lenient with you. You know what she expects. Don't question her like you did Darla, she is fair but firm.\"\n\nI finished quickly and folded my clothes roughly and placed them on the arm of the chair.\n\n\"Okay, we are going to go into the basement. Follow me.\" Sue smiled.\n\nShe led the way downstairs and the room was prepared with a television on a cart. Frozen on the screen was a picture of me, quite naked, on my knees in this very room about to confront a standing Jill. I remembered it quite vividly.\n\nI looked around, the room was mostly open and clear. The mattresses had been removed but there were a couple of exercise mats on the floor. Then, I saw her. Jill was gorgeous, devastatingly, dangerously gorgeous. Her long black hair was drawn up and braided in a circle around her head. It was very nostalgic and regal.\n\nUpon her head, entwined within the braids of her raven colored hair, was a silver circlet. Flowing across her body like a layer of skin was a blue gown of silk, the sides slit all the way to her hips. As she walked towards me I could tell she wore no bra as her breasts moved independently, swaying side to side with each step. Her hips swayed so enticingly, the naked skin from her hip to her ankle showing with each movement of her legs, left, right, left, right. And the silk clung to her, so she looked nearly naked, each curve of her body shown so perfectly.\n\nI exhaled loudly as she approached. She was just so... beautiful.\n\nJill smiled at me. \"You are on time. That is good. I wouldn't want to have to add any more punishments, you already have quite a few.\" She was so close I could smell her perfume now. She reached out and pinched my right nipple in her fingertips. I gasped and my body shuddered.\n\nShe laughed. \"You had an orgasm last night didn't you?\"\n\nI looked down at her feet. \"Yes Mistress.\" I whispered, and I let out a sob that she knew, and not only that she knew, but that it embarrassed me to have done so.\n\n\"Oh Carrie, that is not good.\" She purred and gave my nipple a hard twist. I yelped.\n\n\"Tsk Tsk Tsk. Such a naughty girl.\" Jill whispered in my ear. \"Naughty girls must be punished don't you think Carrie?\"\n\n\"Y-yes Mistress.\" I sobbed.\n\n\"How many punishments did you have before you betrayed me with your greedy little cunt?\" Jill asked.\n\n\"Eight Mistress.\" I answered.\n\n\"Is she right Sue?\" Jill asked. I had forgotten all about Sue when Jill came into view.\n\n\"Yes Mistress, slutball is correct.\" Sue smiled.\n\nJill giggled. \"Slutball, how appropriate.\" She had walked completely around me while talking to me and to Sue and now she stood in front of me again and pinched my left nipple and gave it a small twist. I moaned.\n\n\"So, let's start with some warm ups. Body, mind and spirit. The body is the easiest and yet this country is so full of fat people. Go to the exercise mat and give me thirty sit ups, Sue will hold your feet down.\"\n\nI was surprised to put it mildly. This was far from what I was expecting. I walked over to the exercise mats waiting for the other foot to drop, but it never did. Sue held my feet and I did twenty sit-ups without resting. The next five were a struggle. The last five were excruciating and nearly brought me to tears of exhaustion.\n\n\"Twenty push ups.\" Was all she said. I rolled over and with my knees on the floor began. Jill laughed and said, \"No, real push ups.\" I straightened my legs and started again.\n\nI made it without stopping, though the last few were perhaps wobbly. In the end I collapsed onto my belly, breathing heavily.\n\n\"What do you girls do in gym class these days?\" She asked.\n\n\"We are doing gymnastics and ran a mile today.\" I panted. \"Mistress.\"\n\n\"How fast was your mile?\" She asked me.\n\n\"It was under eight minutes Mistress.\" I answered.\n\n\"Unacceptable. The next time you run, you will run, not jog. It must be under seven minutes or you will be punished.\" Jill scolded me for meeting the school's requirements.\n\n\"Fifty.\" She said as Sue handed me a jump rope.\n\nI started skipping rope and she laughed. \"No. Jump don't skip\".\n\nI stopped and looked puzzled. Sue took the rope and demonstrated. \"Like this slutball.\" She smiled and started jumping with her feet together. She was really fast, like a boxer.\n\nSue stopped and handed me the rope again. I couldn't get the rhythm and kept hitting my feet every few jumps. \"You are using up my valuable time Carrie. Do better.\" Jill admonished.\n\nI got marginally better, but it was clearly still a work in progress when I finished fifty jumps. I was absolutely exhausted or so I thought.\n\n\"Twenty-five squats.\" Jill told me as I wanted nothing more than to relax.\n\nI looked at her pleadingly, but her eyes were even and unrelenting. I started doing squats, hating the feeling of my sex and ass opening to the air as I descended each time. This normally would not have been an issue, doing squats that is, but I was already so physically tired it was causing me some difficulty.\n\nWhen I finished, I fell forward flat on my face.\n\n\"Pathetic. Get up.\" Jill admonished me.\n\nI pushed myself to my feet and panted, my breathing was so fast and heart beat so hard, I was hoping that she was done.\n\n\"It's in your head Carrie.\" Jill told me as she poked her finger into my forehead roughly. \"You are not that out of shape. You just think you are. Let's move to the next thing, I think you will enjoy it.\" She grabbed me by my nipple and led me over to the television screen where I saw myself frozen on the matted floor in front of her from two days ago.\n\n\"Kneel down.\" She told me and I did as she instructed. She then guided my hands and feet and knees and head around, moving every bit of my body with verbal instructions and physical manipulation until I was kneeling, my right ankle over my left, body perpendicular to the floor. My knees were wide apart, far beyond shoulder width, exposing my hairless vagina to whoever was in front of me. My shoulders were back, thrusting my breasts out as if in offering. My hands were behind my neck with my fingers interwoven.\n\n\"This is presentation position two. Remember it forever. When I tell you to go to presentation position two, this is how I expect you to position yourself, immediately.\" Jill instructed.\n\n\"Now, move your right foot off your left and with your knees as they are now, separate your feet slightly, about four inches apart and lean back resting your hands on your ankles and lock your elbows to keep your body at a roughly thirty degree angle from perpendicular.\"\n\nI did what she instructed but Sue moved me a little here and there to get me where Jill expected me to be. \"This is service position two. Don't forget it.\"\n\nI was already confused, but started repeating the names in my head so I could keep track.\n\n\"Stand up facing me.\" I did so immediately.\n\n\"Feet just beyond shoulder width apart, hands behind your neck. Very good. Presentation position one.\" She patted my ass as if to reward a dog for sitting.\n\n\"Now turn around, spread your feet double what they are apart now and place your hands flat on the floor.\" She waited and I complied after Sue moved my feet to the right distance apart and pushed my chin up so I was looking straight ahead. \"Service position one. That is all for now. Stand up.\" She told me.\n\nI stood and she said \"Presentation Position Two facing the television.\"\n\nI moved to my knees, and after a few adjustments from Sue, was in the right position.\n\n\"While I was breaking you down Saturday, a very interesting thing happened.\" Jill began. She took the remote control off the cart and started to play, then fast forwarded through our fight. I glanced up at her and saw that she still had a black eye from the punch I launched at her face. I think she felt me staring and turned towards me and I quickly returned my attention to the screen.\n\nThere I was being tied up and then my tits beaten. She hit play and I heard myself screaming as they took turns beating my body. I couldn't help but blink away a tear remembering what she had done to me. \"Now, watch this closely, it's coming up soon.\" Jill told me and a few seconds later she whipped her flogger down and hit my pussy. I remembered this, it was when I lost control of my bladder and pissed on her precious mat. Jill paused the screen as the flood burst, arcing out of my pussy.\n\n\"That is not what you think it is Carrie, that is an orgasm, not piss.\" Jill told me and I dropped my lower jaw and shook my head 'no'.\n\n\"Yes, it is pretty incredible. So, the question I now have is whether you get off on pain as well as humiliation or if that orgasm was just triggered by the humiliation of being spanked on your cunt.\" Jill pontificated aloud. \"So, we are going to find out, it would be a good thing for you to know in the future.\"\n\n\"May I speak Mistress?\" I asked.\n\n\"You just did.\" Jill replied. \"Not right now slutball, I will tell you when I want your feedback.\"\n\nI cringed when she called me 'slutball', it was like her and Sue had given me that as a nickname now, they kept using it.\n\n\"Watch this slutball.\" Jill smiled and fast forwarded to when I was bent over the horse. They were beating my ass and legs now. She fast forwarded to the part where they had started introducing me to her toys by name. I noticed something odd, but couldn't place it. Then, when they had finished, I heard Sue exclaim \"Oh my God!\" on the television. Jill paused the picture and zoomed in between my legs.\n\n\"This is what Sue saw when she cried out.\" Jill said, pointing to the thick river of goo dripping straight down from my pussy to the floor. \"Now, Sue is not a pain slut. She will take anything I give her, but she doesn't orgasm from pain. I know very few pain sluts in my circle. They are usually, well, let me be polite because all women are beautiful in their own way, but let's just say, not as thin as you. Better padded to take damage.\"\n\n\"Now, don't confuse pain slut with women enjoying pain. I've yet to meet a woman who didn't like her butt smacked or her nipple pinched in the right setting. I mean women who genuinely peak, not at the sex that follows a spanking or other foreplay, but from the actual pain inflicted. But, again, I have to wonder if maybe this was your humiliation fetish kicking in because you were embarrassed to be naked and spanked in front of me and a strange, attractive man.\"\n\n\"So, Sue and I are going to experiment on you this week and try to isolate pain from humiliation and see if you are both. It could be an interesting case study if you want to write about it, since you like English so much.\" Jill laughed softly. \"I wouldn't turn it in at high school though, maybe save it for college.\"\n\n\"Now, since Julie and Courtney aren't here yet, let's talk about the two weeks that you were with Darla. You have permission to speak freely about it. Do you have any questions?\" Sue brought a chair and an oversized pillow into the room and sat them facing me. Jill took the chair and Sue knelt on the pillow, her head on Jill's lap.\n\n\"How...\" I began, but wasn't sure where to begin. \"How did Farin manipulate all of us?\"\n\nJill laughed, but it was not unkind. \"Let me ask you something before I answer you Carrie, how does it make you feel that this whole thing was concocted by Farin?\"\n\nI exhaled and blushed, a little embarrassed at the answer that I knew readily because I had thought about it quite a bit since Julie told me. \"I'm angry at her. I feel betrayed. My heart pains. And then, sometimes, I am overwhelmed that she did so much ... it's a little flattering beneath the hurt.\"\n\nSue wiped a tear from her eye and smiled at me.\n\n\"That is very intuitive of you Carrie. Okay, so it wasn't that the whole thing was Farin's idea. Darla wanted my approval to join a very exclusive group to which I belong. It's nothing for you to be interested in or question, trust me, that rabbit hole is not for you now and may never be. But, in generality, it is a group of dominants and we have some amazing trips and adventures together, perhaps I will divulge more another day. So, to do so, she had to convert a straight person, could have been a boy or girl, into a submissive. She asked Farin who was the toughest girl in her school and she said your name, I think before she ever even thought about manipulating this into realizing her girl crush on you.\"\n\n\"There were many problems with her choice. First, she assumed that youth and innocence would translate into ease and we clearly know that is not the case. If anything, with the world at your fingertips and the options you have, youth is the last thing she should have pursued.\"\n\n\"Then, there is the fact that she is far more heterosexual than bisexual. While a Dominant-submissive relationship isn't entirely about sex, it certainly should have a sexual center to build upon. I am not a full out lesbian, but Sue is. Yet, we both have had and continue to have sex with men from time to time. I do, however, prefer a female's touch to that of a man. So, Sue and I are very good for one another.\"\n\n\"Finally, you are strong willed. Why she wanted such a difficult challenge is beyond me. The more she pushed, the more you fought. Even when you gave into her will, you didn't completely lose yourself. You came close. The Courtney event should have never happened, she should have read you better. Anyway, she failed horribly and many lives were injured because of it.\"\n\n\"She is deeply regretful, to you more than anyone. I know you likely don't care about her feelings, but she is genuinely sorry and I can assure you that what she is going through now, is sufficient punishment for what you probably feel you owe her.\"\n\n\"Back to your original question though, it wasn't until recently that I figured out Farin's conniving and scheming in the events. I caught her giving Darla ideas about how to drive you into submission. Her end goal was to have you trained as a submissive so that she could take over as your dominant when Darla moved on. It wasn't a terrible plan, she just never counted on a couple of things.\"\n\n\"She never thought you would beat her sister. And she never thought that you would fall in love with her. That had her so fucked up in the head she was losing it and I had to intervene a few times. Does that sufficiently answer your question?\" Jill asked.\n\nI gulped, taking all of that in. \"Yes Mistress.\" I whispered.\n\n\"Are there any other questions?\" Jill asked.\n\n\"How long will this continue? I mean, if I do what you want?\" I asked.\n\n\"Are there any other questions about your time with Darla?\" Jill asked, ignoring my question.",
        "I sighed. The open-endedness of this was frustrating me. At lease with Darla, there was an end in sight. I had no idea when or how this would end with Jill. \"Did you get everything from her as picture and video evidence goes and has it been or will it be destroyed?\"\n\n\"Yes, I have everything and when we are through, it will all be yours to do with as you please. I may keep a few things for my personal scrapbook and I hope that you and I will be friends when this is over and you will allow me a keepsake or two. But it will not be anything that could embarrass you without your consent.\"\n\n\"Besides you and Sue, is everyone that she involved removed from my life?\"\n\nJill laughed. \"You are pressing it. And you didn't say Mistress, how many times Sue?\"\n\n\"Three Mistress.\" Sue smiled at her and then mouthed 'sorry' to me.\n\n\"That is eleven plus the orgasm to atone for, is my math correct slutball?\" Jill asked.\n\n\"Yes Mistress.\" I sighed.\n\n\"Service Position One.\" Jill commanded and walked to the wall that had all of her evil tools on it. I moved into the position, legs spread wide and hands bracing myself flat on the floor in front of me. She was behind me, so I did not get a chance to see what she had in her hands. \"I believe in progression.\" Jill said. \"One.\" She said and I heard a loud swishing sound behind me.\n\nThere was a loud cracking sound, like someone stepping on an old tree branch perhaps, but magnified a dozen times. And the scream that left my lungs when the fire drove into my ass cheeks, was deafening. I knew, in my mind, that I was supposed to hold this position. But, there was no reason left in me, for the pain was unlike anything that I had ever felt in my life. I leapt forward and ran towards the steps, screaming in agony.\n\nSue stopped me. She grabbed me and held me as I thrashed wildly trying to escape the fire that burned in my ass. All intelligent thought had left me as I dug my way into her, frantically looking behind me to make sure that Jill wasn't following me with that giant stick in her hand.\n\n\"Stop now.\" Sue hushed me and kept hugging me as I tried to get away. \"Easy slutball.\" She cooed to me, whispering.\n\n\"No No No No No.\" I shouted.\n\n\"That, slutball, is a cane. I used it first, because the first punishment is one strike. The cane is indeed one of the most painful tools at my disposal. It will leave a deep red mark across your buttocks for several days and the light bruising will last longer. But, we have two problems. You did not hold your position and you did not count it. You will have to do it again. Hold the position and when the cane strikes your ass, you say 'One Mistress'. Then we will move on to the second punishment.\" Jill said.\n\n\"No Mistress. Please no.\" I begged and I crawled behind Sue when I untangled from her. \"No Mistress, I can't.\"\n\n\"Shh. Easy slutball.\" Sue pet my head. \"You must do this. You can do this. Just hold the position and count it off.\" She kept smoothing my cheeks trying to calm me.\n\n\"My patience is wearing thin Carrie.\" Jill said. \"You know we can tie you up and do this. It will be much easier on you if you hold the position yourself, but I need you back here right now.\"\n\n\"Oh God! Why Mistress?!\" I cried and started crawling towards her. I was shaking uncontrollably. I sobbed as I got back in position. My ass was absolutely on fire. It felt like someone had literally branded me with a hot poker from a fireplace... not that I had ever felt that, but comparing something to nothing you have ever felt before requires a bit of imagination.\n\nThe tears ran freely down my cheeks to the floor as I assumed the position once again. And once again, I heard the loud swish, more terrifying than the first time, because I knew what was coming next. And the crack was no less earth shattering in sound or in pain. My ass erupted into a world of red energy and I was sure that she had sliced my ass cheeks in two. My scream was no less excruciating than the last and it took everything in my power to not run away. The tears dripped and dropped onto the floor and I sobbed a barely audible whisper \"One Mistress.\"\n\nI tried wagging my ass to make the pain go away, but it did nothing to relieve the burning sensation.\n\n\"Okay Carrie, I'm putting my hand on your back, just relax and breathe.\" Jill said softly as she touched my lower back. I was trying to breathe. Instead I was panting and completely out of breath. But when she swiped her finger up my slit, I gasped.\n\n\"Wet.\" Jill announced. \"But, it could have been that way before the cane. Sue dry her up for me.\" Then she walked around and pushed her fingers to my lips and I sobbed as I sucked them clean.\n\nI held the position sobbing quietly as Sue dabbed my crotch dry with a soft towel. Then she sat in front of me and smiled sympathetically at me.\n\nI heard the swish, but it was not as loud or distinct as the cane. I wasn't really expecting it to come at that moment though. Somehow, I thought there would be a verbal warning. But, no, I felt a single hit to my right cheek, on the lower part of it, where it started to cup inward towards my thigh. It was not even in the ballpark of the pain of the cane, but it stung quite a bit and I gasped rather than cried out. \"One Mistress.\" I assumed I was supposed to start at one with the new implement of torture.\n\nApparently, I had been right as the second swish led to a small focused sting at about the same place on my left cheek. \"Two Mistress\" I counted.\n\n\"That was a riding crop slutball.\" Jill told me, she cupped my sex and I shivered.\n\nI heard her walk away and then a melodic tinkle of bells. \"That must be Julie or Courtney.\" Sue smiled at me. \"Stay as you are slutball.\" She giggled.\n\nSue went upstairs and Jill came back. Since she was behind me, I had no idea what was coming, where or when until I heard the swish of her hand. This was a lot more painful than the crop as it was a wider instrument, but nowhere near as bad as the cane. My left cheek seemed to flatten all at once as the thick paddle smashed into my skin with a loud slap of noise. I whimpered, but did not scream.\n\nAnother loud smash to my right cheek followed by a second to the left and I counted them off to \"Three Mistress.\"\n\nOn the final smack, I heard footsteps descending the stairs. \"Glad you could make it Julie and Courtney, make yourselves comfortable with whatever view best suits your interests.\" Jill invited them. I looked up, saw the wide smile on Courtney's face punctuated by a slight lick of her lips. Julie looked different, a mixture of surprise and lust painted her face. I wasn't sure if she was surprised at seeing me naked in this position or surprised that she would find it erotic, but I could definitely see the signs of excitement in her as her nostrils flared to take in more oxygen.\n\nNeither of them had changed from their practice clothes, so they were both wearing very tight and sweaty looking clothing. Their hair hung slightly wet, not enough to have showered, clearly from the sweat of what must have been a vigorous work out.\n\n\"Hi Jill, wouldn't have missed it for the world.\" Courtney winked at me. \"Hi Carrie.\"\n\nJulie smiled at me as if to offer her support for my predicament. Then her eyes went behind me and opened wider. I heard the swish before the cracking sound on my ass. Then I felt the solid burn that was about four inches thick and went across my right ass cheek. I yelped slightly, it was a very sharp stinging sensation. \"One Mistress.\" I breathed out.\n\n\"This is a slapper slutball, I have four different slappers, varying in rigidity and width and length. This one is the lowest impact, having a great deal of flexibility so it will partially wrap on your ass cheek upon contact.\" Jill told me and soon I was feeling this slapper on my left cheek. \"Two Mistress.\" I cried out through gritted teeth.\n\nJulie and Courtney walked wide around me to give Jill room to work and get behind me to see my ass.\n\nI heard them both gasp when they saw my ass. I could feel Julie biting her lip not to say anything.\n\nAfter a thirty second break between each slap, we reached \"Four Mistress.\"\n\n\"Sue bring me the suede flogger without knots.\" Jill said and handed her the slapper.\n\nJill touched the welt that I felt across my ass. \"This was from a cane.\" She told Julie and Courtney. \"It is as painful as it looks. That is why I only gave her one. Well, two actually, but that was her fault for not holding her form. But, the more important thing to see here is this.\"\n\nI felt like something was lifted between my legs, then felt Jill's fingers slide up the length of my slit. She then wiped a huge dollop of my girl goo off just above my ass cheeks on my lower back. \"She seems to be aroused by pain. I only say seems to be, because it could be part of her humiliation fetish. I have seen a lot in my years, but her affinity for humiliation, her sexual awakening by it, is beyond anything I have ever witnessed, so it is a possibility that being naked and bent over and spanked is so embarrassing to her that it makes her slutty little cunt leak like a faucet. That is what Sue and I are hoping to determine this week.\"\n\nApparently Sue returned with the flogger, I was prepared to feel it on my ass next, but what Jill did next, I was not expecting at all.\n\n\"Now, see how I am holding it, firmly, but not squeezing it. It's the swing of the arm, similar to golf, you follow through upon impact. When you get used to it, try flicking your wrist right at the moment of impact and it will add some volume to the sound, as well as impact to the sting on flesh.\" She was instructing Julie and Courtney how to beat me with a flogger.\n\n\"No....\" I muttered. I didn't even really mean it. It was a whisper, I was surprised she even heard it, but she did.\n\n\"Excuse me slutball? Did you say something?\" Jill asked.\n\n\"N-No Mistress\" I stammered.\n\n\"That's what I thought you said. Sue fetch me another flogger for Julie.\"\n\nI cringed and sobbed, but didn't say anything. The next half hour was horrible. It wasn't the pain. Actually, the floggers did not hurt much really. My ass was red and stung, but compared to some other things, it was possibly the least unpleasant of them all. It was my ass being used as a prop for Courtney and my best friend Julie to learn to swing them properly.\n\nSince it wasn't her doing the swinging, I wasn't required to call out the number of swings, but I almost wish I had. By the time they had perfected their swing in Jill's opinion, they must have hit me about fifty times each. They would switch sides, try forehand and backhand. From Jill's instruction you would think they were at a tennis lesson. But my ass knew far differently.\n\nWhen it was over, my muscles were so cramped I thought I would fall on my face. My legs started shaking uncontrollably. \"Okay slutball, I see you.\" Jill acknowledged. \"Presentation position two.\" She said. I practically fell to my knees and got into the position to the best of my recollection. Sue fixed my shortcomings and I was soon in this embarrassing position on my knees, ankle over ankle behind me.\n\n\"Now, let's make you useful. There is a cookbook upstairs turned to the page of what you are to make. All of the ingredients are in the cupboards or the refrigerator. I am going to give you an extra ten minutes to familiarize yourself with the kitchen since it is new to you. That is a one time gift. From tomorrow forward, you will have thirty minutes to place whatever dish you are to make in the oven.\"\n\nI stood, silently listening to her speaking and waiting for something about this to make sense.\n\n\"What are you waiting for slutball?\" Jill asked, clearly aggravated.\n\n\"Sorry Mistress.\" I answered quietly and walked upstairs, still quite naked.\n\nThe cookbook was there, as she told me it would be. Okay, I knew how to boil water and start an oven, but I wasn't really a good cook. So, following instructions was going to be a very tedious and exact part of this process for me. Today, I would be making Chicken Piccata today. Yay me.\n\nSo, first things first, I went through all the cabinets in search of the cookware and utensils and seasonings and dry goods, then into the refrigerator and pulled what I needed from there. It's not a really sexy or fun thing, and being naked wasn't helping me to focus. Once I got everything that I thought I would need together, I started following the instructions.\n\nBy the time I got grease pop burns on my breasts, and well pretty much everywhere, I was smudged in flour and splatters of egg and seasonings. I had not been watching the time at all. I was surprised that nobody was there to monitor me. But, was happy not to be observed. Once the chicken breasts were fried properly, I put the chicken aside and made the sauce and drizzled it on the chicken as instructed.\n\nI then set the table for five, not certain who would be eating. I was still surprised that nobody had come upstairs to even tell me the time. I was feeling more and more subconscious and a little angry that Julie was down there talking about me. I mean, what else would they be doing all this time?\n\nI set the food on the table and went downstairs. I heard them before I saw them.\n\n\"It's entirely up to you. I can only promise you that she may hate it, but at the same time, she loves it. But, we've said that a dozen times already and you are still asking the same questions.\" Jill's voice slowly got louder as I quietly descended the stairs. \"And if she is intentionally tip toeing down the steps to eavesdrop, she is going to get her next punishment before dinner.\" Jill added, apparently having heard my descent.\n\nI came down quickly and louder then and when I could see her, I said, \"Dinner is ready Mistress.\"\n\n\"Did you get it into the pan on time?\" Jill asked.\n\n\"I... I am not sure Mistress.\" I answered.\n\n\"Add a punishment. How many are we up to, cumulatively?\" Jill asked.\n\n\"Twelve Mistress, plus an unpermitted orgasm Mistress.\" I whimpered.\n\n\"And how many have you taken thus far?\" Jill added.\n\n\"Four Mistress, five or more including the floggers Mistress.\" I answered.\n\n\"Why didn't you do as Courtney instructed you today at school slutball?\" Jill asked.\n\nI noticed Julie frown at this question, but she remained quiet. \"I... you said I didn't have to listen to anyone but you Mistress?\" It sounded pathetic, like a question, but I was worried I was going to get more punishment and felt a need to defend my position.\n\n\"That is not an answer. That is a reason not to be punished for it.\" Jill replied.\n\n\"I didn't want to Mistress.\" I answered.\n\n\"You ate her maid out for Christ's sake Carrie. Now you have self-respect? I don't believe it.\" Jill added. \"Get on your knees and eat her pussy now.\"\n\nI felt like I had been slapped in the face. So, I was a little slow to react. Was this some kind of test? Well, I knew from experience that I could not hesitate, so I thought on my way to my knees and crawling towards a very satisfied looking Courtney. Julie was frowning and turned away. Sue smiled at me with that happy lust in her eyes. Jill just looked even, like Jill.\n\nI reached up to the waist band of her workout pants, my hands were shaking. I looked up at her, big mistake, her smirking smile sent a tear to my eye duct. I felt my way to her shorts and pulled them with her panties down over her ass in the back, then down to mid thigh in the front and then down to her feet. \"Please lift your left foot Courtney.\" I whispered, my voice threatening to crack if I spoke out loud. She did so and I took the shorts and panties off her left foot. She lifted her right foot without my request to do so.\n\nI placed her shorts and panties to the side and then pushed her shirt up to bare her pussy. \"Please, spread your legs Courtney.\" I whispered, placing a hand on either of her thighs.\n\n\"Anything for you Carrie.\" Courtney giggled, spreading her feet wide apart to give me open access to her quim.\n\nI placed my hands high on her thighs, thumbs in the middle and leaned in to lick her pussy from bottom to top.\n\n\"Ohh Carrie, this is what you are meant to do. Why do you keep fighting it?\" Courtney giggled. \"Get your tongue in there slutball.\" She grabbed my hair in two bunches and thrust my face deeper into her pelvis.\n\nI shoved my tongue in as deep as I could and she basically rode my face, being very rude about it and getting her glistening wetness all over my face. I fought back the urge to cry out or bite her, but just barely.\n\n\"I'm so glad you joined the squad Carrie.\" Courtney said while shoving my nose up her cunthole. She started fucking herself on my nose and her juices flowed into my nostrils, it was kind of gross.\n\n\"I'm so glad you joined the squad Carrie.\" She said a little louder and started sliding her slit up and down my face.\n\nIt seemed apparent what was going on. She was trying to make me angry, to get the outburst from the time that sent her to the hospital. It was quite irritating, but knowing why she was doing it, it didn't bother me as much as it would have had I actually been a member of the squad.\n\nShe repeated it louder and louder as she fucked my face harder and I could feel her wetness dripping down my cheeks. I wasn't even able to do a very good job at eating her she was just set on abusing my face. And for her purposes it was working, up to a climax that I could feel coming through her body.\n\n\"I'm so glad you are a submissive little lesbian slut Carrie!!!!!!\" She screamed as she grabbed my head and came all over my face. She continued to moan in a very loud orgasm, her juices rubbing all over my face, up my nose, down my throat. I could even feel the wetness in my closed eyes. I gasped for air, as she rode her orgasm out on my face. When she finally came down from her climactic high, she patted me on the head.\n\n\"You know, you really were made for this Carrie. I'm not sure I can ever give this up.\" Courtney giggled.\n\nI coughed as the breath oozed her juices into my lungs. But it wasn't as violent a coughing fit as it could have been.\n\n\"Courtney, go clean up and get dressed, Sue will show you the way.\" Jill instructed her and I was surprised not to hear a word from Courtney, who always seemed thrilled to show how superior she was to anyone.\n\n\"Carrie, what is in your head right now?\" Jill asked me softly.\n\n\"I feel ... used Mistress.\" I answered in a whisper.\n\n\"Yes, I imagine you do. How about physically? Are you sexually turned on right now? If I gave you permission, would you make yourself cum right here in front of Julie and I in a matter of seconds?\" Jill asked.\n\nI sobbed softly. \"Yes Mistress...I'm sorry Mistress. I'm so sorry Julie.\"\n\n\"Don't be.\" Julie whispered.\n\n\"She's right Carrie. I know it conflicts you. Your mind wanting one thing, your body another, but truly, we all care about you and love that you are getting what you want, even if you don't think you want it. It's truly a thrill for all of us to witness your sexual energy Carrie. It's beautiful, truly beautiful. Would you like to be used some more?\" Jill pressed.\n\nI sobbed and hung my head in shame. Clearly, it would be Julie or Jill. I would love to make love to either of them. But like this? So raw and devoid of love or affection? I wanted it so bad and yet I forced my head to shake out a no.\n\nI heard Julie exhale perhaps a little too loudly. Relief or frustration I couldn't tell.\n\n\"Wipe your eyes so you can see and join us upstairs for dinner.\" Jill commanded. And I heard the two of them ascend the steps, leaving me alone, kneeling on the floor, my face glazed in Courtney's cum.\n\nI sat on my heels for a few minutes, wiping the juices from my eyes and fluttering them open. The cum made them burn just a little, but I had extracted the bulk away before opening them.\n\nI held my head in my hands, trying to clear the depravity of my being from my mind. Why did this horrible treatment turn me on so much? Could I embrace it as Jill seemed to think I should? Could I ever embrace it? Perhaps the could was a bigger question than the should.",
        "But these were questions for another time. I stood and felt the string of goo slap my inner thigh and break free from my vaginal opening. I whimpered that I was indeed such a slut, getting off on being used like a toy. I took my hand and wiped my pussy gently and the touch sent an agonizingly wonderful shudder through my entire body. I wiped it off on my thigh and ascended the stairs, terribly aware of my nudity and my arousal.\n\nAs I entered the dining room, they were all seated and enjoying the meal I had prepared and chatting as if Courtney hadn't just used my face like a vibrator in front of them all. I approached the table, intent upon sitting next to Julie, the path of least resistance, but noticed that my place setting had been removed altogether. There was no plate, silverware, glass, nothing for me. I looked up to Jill for direction.\n\n\"Your plate is on the floor in the kitchen Carrie. You will be dining in there. Your food has been cut sufficiently, you will need no utensils nor will you use your hands. At my house, until you are caught up with your punishments, this is how you will eat.\" Jill instructed.\n\nI felt a tear fall and quickly turned away and knelt at the mentioned bowls on the floor. One had a small share of the meal I had prepared, cut and mixed together. The other was full of water. Exhaustion, hunger and mostly thirst overcame humiliation and I lapped desperately at the water.\n\nI felt, I suppose as intended, like a pet, like a dog, like I was not wanted at the table with my superiors. And it made me quite sad. My knees ached from the hard floor, but my hunger and thirst kept me there. When I had lapped up enough water to dent my extreme thirst, I leaned down and ate out of the bowl. It was terribly humiliating. By the time I had finished half the food, my face had sauce to accompany Courtney's cunt juice, covering me like I had been glazed.\n\n\"Well, I kind of wish you'd just make her do it.\" I heard Courtney giggling, \"But she so obviously enjoys it, look at her.\"\n\nI blushed and felt my body shivered in shame. I wasn't facing directly away from the dining room, so it wasn't like my vagina was being displayed directly to them, but I was sure they had a nice angled profile of my naked body, ass in the air as I leaned down to eat like a fucking dog. The humiliation, especially with Julie watching, was devastating. I knew I would have to ask her not to come again, how could we be friends after she witnessed this debauchery?\n\n\"That's our little slutball.\" Sue giggled.\n\n\"I promised her Courtney, it's entirely up to you. I only ask that you request permission from me before pressing her to orgasm.\" Jill answered.\n\n\"You are awful quiet.\" Jill added.\n\n\"It's a little different, actually seeing it and seeing her doing it.\" Julie replied just above a whisper, but loud enough for me to hear.\n\n\"Yes, I suppose it comes as a bit of a shock.\" Jill said. \"It's hard, seeing how much her face anguishes at the reactions of her body. But, then I suppose if she were truly happy about it, she wouldn't get the humiliation trigger and wouldn't enjoy it so much. Quite the dichotomy.\"\n\n\"May I Mistress?\" Sue asked, though I had no idea what she was asking, I assume it was something gestured that I could not see.\n\n\"No time like the present.\" Jill answered evenly.\n\nI froze when I heard a chair move and a body walking towards me. I was certain it was Sue, but had no idea what she was up to. \"Hey slutball.\" Sue said quietly after she knelt down beside me and lowered her head so she could look me in the eyes. \"Oh you are a messy little puppy aren't you?\" She giggled.\n\nI could feel the food all over my face and was deeply ashamed of having her see me in such a state. I looked into her eyes and hoped she could see how miserable I was at that moment. She smiled kindly in return. \"I'll tell you what, you let me do what I need to do without any fuss and I will clean that messy face up before your friend Julie sees it okay slutball?\" Sue asked me.\n\nI clinched my eyes shut hoping it would all go away. But it was as real as I was and I shook my head softly in the affirmative.\n\n\"Good girl.\" Sue giggled and she started moving my body gently. She spread my knees wider than my shoulders and it seemed she was now aiming my ass straight towards the dining room. It was so humiliating, being posed like this to show that I am an even bigger slut than I felt like I was already. But she didn't stop there. Oh no, then she procured a small bowl from the cabinets and put it under... well, my pussy.\n\nI understood right away. Sue whispered, \"Keep your ass right there for me slutball.\" The instruction was completely unnecessary. Like the cup in the car, she wanted to gather my cunt drool again. It was so vile. I was so vile. And in spite of myself, I sobbed silently as I felt the growing drop of goo dangle, then separate to fall, then plop against the bottom of the bowl.\n\n\"Go ahead and finish your dinner slutball.\" Sue giggled. She gently patted my ass and I shivered at her touch and went back to eating.\n\nThough mentally, I was revolted by what I was doing, my body was so weakened by everything that had happened, I felt absolutely famished and I didn't stop eating until the bowl was quite clean of food.\n\nAll the while, Jill, Sue and Courtney talked about me. I heard them, but I blocked a good deal out. I suppose the one saving grace was that Julie remained mostly quiet. I'm not sure I could have handled her joining the fray at that moment.\n\nAnd so I ignored them, even when I heard my name. I shivered in humiliation every time I heard a drop of my juices break free from my vagina and plop into the bowl. And my juices flowed more with every moment that I bent down to eat, my naughtiest parts exposed.\n\n\"I can't!\" I heard Julie's voice whisper too loud, peaking my interest back in the conversation at the table.\n\n\"I would never coerce you to do anything Julie, it was merely a question.\" Jill responded.\n\n\"She's really good at it Julie.\" Giggled Courtney. \"I mean, if you are going to do it anyway, why not join the fray now? She won't say no to you, and once she says yes once, well, she's not that difficult to encourage. Jill's right, I mean, she went down on my maid just because my maid told her to and she barely speaks English. So it isn't like there was a great deal of coercion required.\"\n\n\"I haven't had the pleasure nearly as often as Courtney,\" Sue added, \"But I have to admit, slutball is a very talented pussy licker.\"\n\nI bit my lip to stop from moaning, but I couldn't stop the plopping sound as another drop of my ooze dripped into the bowl.\n\n\"Well, leaving these two horny girls aside.\" Jill laughed kindly. \"I think you are absolutely right Julie and it will be worth the wait for the moment you want to share. If you can hold out that long. If you can't, well, look at her, she's quite difficult to resist. I wouldn't think any less of you.\"\n\n\"It's just, so difficult, trying to reconcile all this with the Carrie I've known since we were little girls.\" Julie told them. \"I mean, I know it, I've seen it, hell, I've even felt it when I didn't know it was her. And yet, I'm still trying to accept that it's really my best friend there, eating like a dog and ... well... getting off on it all. It's just so different from the Carrie I knew a few weeks ago.\"\n\n\"Yes, I'm sure it is. And as hard as it is for you to reconcile, think of how much harder it is for her.\" Jill replied. \"She's very lucky to have you Julie, and I don't mean that idly. Most people awakening to this have only their dominant to discuss it with and that is a very uneven relationship.\"\n\n\"I suppose that ...\" Julie began and broke off her thought.\n\n\"What is it Julie?\" Jill asked her, encouraging her to finish her thought.\n\n\"Well, it's not like I don't have an urge to just...\" Julie started and stopped again, then whispered so softly I could barely hear it. \"use her.\"\n\nI shook so hard I couldn't help but whimper as a loud plop of juice hit the bowl. I knew it was audible when I heard Courtney giggle.\n\n\"I think she likes the idea.\" Courtney chirped.\n\n\"You aren't making this easy.\" Julie admonished... whether she was admonishing me or Courtney, I wasn't sure.\n\nSue laughed, I could definitely pick her high pitched giggle above the others.\n\n\"Finish your dinner slutball.\" Jill instructed. \"Stop dragging out the attention.\"\n\nWas I? I had been eating slower since I started paying attention to what they were saying. I devoured the last bites of the food from the bowl quickly, blocking out the sounds again, besides the plop of my goo, which seemed to echo throughout the house.\n\nSue came up to me shortly after I had finished with a hand towel and wiped off my face. \"There you are slutball, all cleaned up and presentable. Now, stay put until your Mistress calls for you. You can get up off your elbows though, unless you enjoy us getting a great view of your drooling cum box.\" She giggled and left and I jumped up with my elbows locked to push my ass downwards at the realization that I had been providing quite the view.\n\n\"Well slutball, it's getting late. I'm sure Julie and Courtney have homework, as I am sure you do as well. So, let's get your productive portion of the evening completed so you can get to that.\" Jill spoke above the quiet conversation at the dinner table. \"Courtney and Julie, you are welcome to stay if you wish, Carrie will be painting one of my rooms for the next hour. Not exciting to watch, but not terribly boring since she will be naked.\"\n\n\"Oh, if she is naked and blushing, I'm in.\" Courtney giggled.\n\n\"I'd like a ride home from Carrie, if that is okay.\" Julie said. \"I ... think we will need to talk after today.\"\n\nJill laughed gently. \"Yes, I suppose you will.\" Then to me. \"Okay slutball, pay attention and do nothing until I am finished speaking. You will wipe the goo from your box into the bowl. You will then pour the contents into a measuring cup and memorize how much is there. Do not forget that number. You will need to record it on your phone calendar every day. You will drink the contents today.\"\n\n\"Then you will clean up your bowls and all the dishes from the table. Put away any food that is to be saved, wash the dishes by hand and dry them and put them away. Wipe down the table and floor. When everything is put away in as good as or better condition than when you got here, you will go to the third door on the left. Inside you will find a roll of plastic and painter's tape. You will cover the carpet with plastic and tape it evenly at the base board. If there is time after that, you will come to me for further instruction. If you hear the timer that you will set on the oven for one hour before that is done, you will be punished. I will be in my bedroom, which is the double doors at the end of the hall.\"\n\n\"You may begin.\" She instructed and I got up and set the timer on the oven to one hour as soon as I had sobbed softly at the loud plop of lubricant that I pushed from my cunt. After that, I was rushing. It seemed like quite a lot to get done in an hour. I had to find a measuring cup. It wasn't like there was a full bowl. In fact, it was only \u00bd cup, far less than it had sounded like dripped from me during dinner.\n\nBut, as I moved quickly, the tasks flew by in less time than I thought they would take and in less than a half hour I was finished wiping off the table and floor and heading to the room that I would be painting. During my task, Courtney and Julie watched for a while, but Courtney lost interest and went down the hall where Jill and Sue had left almost as soon as I started. I didn't see her again while I was in the kitchen. Julie started to talk... but I looked at her with my eyes threatening to burst into tears and she stopped.\n\nShe got up, hugged me softly and whispered, \"We will talk in the car.\" She kissed my cheek softly and went down the hall where Courtney had gone.\n\nThere was a solace, a peace to being alone. At least it was just work now, not a show. I don't think Julie noticed me noticing her check in on me from the hall twice, but I did. And she was sitting outside Jill's door doing homework in the hall when I walked towards the room. She looked up with a supportive smile and I did my best to not look humiliated by being naked in front of my best friend. Behind her, the door was closed, but I could hear music coming from inside the room.\n\nI went inside and got to work quickly. I didn't know how long it would take, but I figured a half hour was cutting it close. I rolled the plastic out and found the scissors and tape and went about the task. It wasn't hard to lay the plastic out, but taping just to the edge of the border was very exact and time consuming. I was laying on my naked belly, being as precise as possible when Julie peeked in. She laughed softly.\n\nI looked over my shoulder and tried to look as miserable as possible.\n\n\"Carrie, just tape it and go behind and cut the edge by running the sharp part into the corner then peel it off, you are making it a lot harder than it needs to be.\" She said.\n\nI felt like an idiot at once. \"Thanks Jules.\" I smiled and finished the other three walls in half the time it took me to do the first one. I went to Jill's door. Julie wasn't outside anymore, I guess she had finished whatever homework she had been doing there. I knocked softly, then louder when the first knock received no response.\n\n\"Just a moment.\" I heard Jill's voice.\n\nI heard bodies moving behind the door for a minute before Sue opened it. I blinked hard. My eyes instantly drifted down her body, I couldn't help it, Sue was completely naked. True, I'd seen her in this state before, but I wasn't expecting it with Courtney and Julie in the bedroom with her. I blushed when she stood smiling at me. \"Close your mouth slutball. But you can look all you want, best get Mistress's permission to touch though.\" She winked at me.\n\n\"Sorry\" I stammered. So... freaking... stupid.\n\n\"Oh, I don't mind. I look at yours all the time, it's only fair.\" She laughed.\n\n\"That's enough Sue.\" Jill's voice came from inside the room and Sue stepped aside to let me in the room. There I saw Jill, dressed only in a robe which was loosely belted at the waist. Her gorgeous raven hair was drifting across her exposed collar bone and her bared skin dived between her plentiful cleavage. I could see a good amount of her breasts from the inside of the robe. It was... unexpected.\n\nBelow the cinched belt, the robe fell apart again, and I could swear I saw the bottom of her pussy, before she caught me staring and pulled the robe to adjust it, blocking my view. \"That is not for you to see yet.\" Jill stated, but her voice was not cruel.\n\nWhat I saw when I diverted my eyes from Jill, well, that was a real kick in the gut. Courtney, I didn't really mind seeing standing there as naked as Sue. Her beautiful high breasts were pushed out to expose two extremely erect nipples. Her beautiful lightly tanned skin was wet with a gentle sheen of sweat. I could almost smell her excitement from across the room. But, Courtney was not what made me feel suddenly ill. No, it was Julie. She was in Sue's kimono and clearly nothing else. And it looked like she had thrown it on in a rush as it wasn't very evenly wrapped around her body. She smiled at me from the side of the bed where Courtney stood next to her.\n\nAnd ... I thought I would truly vomit. My lip trembled and my eyes welled up with ... \"I can't\" I cried, and turned to run out of the room, but Sue had the door shut behind me and stood there in my way.\n\n\"Stop.\" Sue whispered, \"It's not what you think, stop before you do something you will regret.\"\n\n\"Carrie, presentation position two now.\" Jill stated quite loudly and clearly.\n\nEvery impulse wanted to push Sue out of the way and get out of there, but she was looking at me with a serious face, shaking her head no, as if she could read my mind. She motioned towards Jill with her eyes. And I squeezed and wiped the tear from mine before turning around and sinking to my knees and assuming the requested position.\n\nI stared at the floor, fighting the urge to look up at my betraying best friend. So many unpleasant emotions ran through by body. Anger, sadness, disgust, hate, it was all there.\n\n\"You are so ...\" Jill began, pausing to choose her word. \"hypocritical.\" She selected her word and I looked up at her, surprised by her choice.\n\n\"So basically it's okay for you to fall in love with Farin and go down on half the school, but Julie has to just sit around and wait for you to be done slutting around so you can have your turn with her?\" Jill asked, but I don't think she really expected an answer. \"You apologize right now, you made Julie uncomfortable.\"\n\nI looked up at Julie. She wasn't smiling anymore. She looked kind of sad in fact. Jill was right, of course, there was no fairness in my expectations, whatever they were. \"I'm sorry Julie. Mistress is right, I am being selfish. Please forgive me. I want you to enjoy yourself, I truly do.\" I said in a cracking voice that embarrassed me.\n\n\"It's okay Carrie, really.\" Julie smiled weakly. She looked over at Jill and shrugged. \"I'm, uh, going to get dressed I think.\" Julie said to Jill and went to retrieve her clothes from a chair in the corner of the room.\n\n\"Will you indulge me a moment more Julie?\" Jill asked her.\n\nI looked to Jill, but quickly averted my eyes when they glared back into mine. Julie hesitated and walked over next to Jill, apparently willing to indulge her. I watched her intently, my heart pounding in my chest. When Julie was standing in front of me, Jill stepped behind her and wrapping her arms around her, took Julie's breasts in her hands. \"Look at her.\" Jill instructed me.\n\nI looked up at Jill playing with Julie's breasts. Julie looked at me with sadness and excitement. I could see her nipples pressing against the thin robe as Jill manipulated them gently. Julie looked at me and moaned softly. Jill whispered into her ear so quietly I couldn't hear her. Julie shook her head no. Jill continued to whisper and Julie moaned louder and said \"Yes!\" As Jill tugged her nipples outward.\n\nThey walked towards me together, gracefully, Jill's hands never leaving Julie's breasts. Step by step closer and closer to my kneeling form.\n\n\"Service position two slutball.\" Jill said and Julie gasped louder as I moved, separating my ankles and leaning back into the bent position. This caused me to look up instead of forward, so I missed the approaching couple as they closed the distance between us. But seconds later, I was looking up under the robe at Julie's beautiful pussy.\n\nShe stretched her legs wide to get over me and then closed her thighs on my cheeks, her pussy resting on my face. Julie's body was trembling and I was breathing solely through my nose, inhaling the scent of her excitement. She was there, all I had to do was extend my tongue and I would be tasting her. I wanted this so bad. I was salivating heavily, having to swallow my spit to keep from choking.\n\n\"It is your decision.\" Jill told Julie. \"She will do anything you want, but you knew that before you got here today.\"\n\nI sobbed, because I knew she was right.\n\n\"One lick Carrie, you get one lick and only one lick. You have ten seconds to finish it starting now.\" That was Julie's voice.\n\nI sobbed as my tongue stretched as deep as it would go and touched her anus before sliding over her taint and then delving into her pussy before moving up her slit. I counted and paced each second, moving my tongue ever so slowly with every second trying to time the last touch, the last two precious seconds upon her clitoris. I heard her sighing loudly as my tongue made its journey along her slit.\n\nShe shook almost violently as my tongue did finally touch her clitoris and as I pulled away on the final second, I felt the tip of my tongue rub it and intentionally pushed it hard.",
        "\"Fuck that was good.\" Julie gasped and stepped away. \"You will earn that next time slutball.\" Julie added after regaining her breath.\n\nJill giggled. \"Oh Carrie, you may be in worse shape than you thought.\"\n\n\"Close your eyes slutball.\" Jill ordered and I did. I felt her walk forward over my face. I could feel the heat from her thighs and then her actual thighs as they closed on my cheeks. \"Inhale. Keep your slutty tongue in your mouth, just smell.\"\n\nI breathed in through my nose and sobbed in desire.\n\nAfter an eternity in which I was breathing her cunt scent so fast it seemed I was hyperventilating, she stepped away. \"She's constantly in heat.\" Jill laughed to Julie.\n\n\"Stay there with your eyes closed until I tell you otherwise slutball.\" Jill instructed.\n\nAnd I heard moaning and kissing all around me. I shuddered and wept with need as I sat there, legs spread wide, listening to the sounds of pleasure that I longed to make or cause, but I just sat there, doing nothing. I tried to zone in on what was happening, who was moaning, who was making smacking sounds with their lips. Who was pleasuring who?\n\nWas my Julie being pleased by another? Was she eating her first pussy and it wasn't mine? Who and what was Courtney doing? Was Sue going down on my Mistress? What was going on and why was I being forced to kneel here, legs spread, eyes closed, listening to it. Surely, I was being punished. For what? Was this my punishment for masturbating in the changing room last night?\n\nI felt it then, before I heard the whisper, a closeness, breath, hot and moist against my ear. Someone was paying attention to me. \"Keep your eyes closed and don't move.\" It was Julie's voice, whispering right there by my ear. \"I know this is driving you crazy right now, you can't imagine how much I want to use you right now.\"\n\nI whimpered out loud and could feel my legs shaking with desire. Behind her I could hear moans of pleasure and I longed to be a part of it, and yet, as long as my Julie was not a part of it, I felt so much better for it. \"Please Jules, you ...\"\n\nAnd I was about to tell her she could use me. She could have me. She could do anything she wanted to me or with me. But she pressed her finger to my lips.\n\n\"Hush, I know I can. Just because I can and I want to doesn't mean I should though.\" Julie whispered.\n\nI sobbed aloud. I so wanted it right now, but I knew she was right. This was lust, and she and I might invite lust into our relationship, but ours was well beyond simple lust. Lust was Farin. Lust was Courtney. Julie and I, we were love. We would always be love. Even if it never surpassed friendship, it would always, always be love.\n\nI felt her lips move away and fought the urge to open my eyes. Surely one of them was watching me, waiting to inform Jill that I disobeyed.\n\nI clinched my jaw and squinched my eyes tightly trying to block out the sounds of sex in the air around me. A few moments later, my earlobe was enveloped between a pair of lips and a tongue flicked it softly. I moaned louder than anyone in the room at this unexpected touch. I didn't even know who it was but it was driving me insane. They sucked and licked and the eroticism shocked my body like a bolt of electricity.\n\n\"Oh please!\" I begged. Again, I was unsure if I wanted it to continue or stop because it was a foreplay, a precursor to something that I wanted but somehow knew I would not receive today. In my mind I knew this was a merciless tease. In my pussy I knew this was going to end in an orgasm.\n\n\"Think about me tonight and maybe tomorrow we can play.\" Courtney whispered into my ear after sucking it hard and stretching the lobe until it popped out of her mouth.\n\nI was shaking all over. The moaning sounds were getting louder. I pictured the four of them in an orgy of some sort. How would they all fit together, I wondered. Would Jill interact with Courtney and Julie? I couldn't picture Julie with anyone. Why was that thought upsetting me so much?\n\nI was interrupted from my thoughts by a body pressing against mine. This time someone was straddling my thighs, right in front of me. She grabbed my breasts and leaned forward as I gasped aloud and shoved her tongue into my mouth. I moaned loudly as I returned the kiss.\n\nI kept my eyes closed tightly, but I knew almost instantly that this wasn't Julie. The feeling wasn't quite right and the kiss was definitely not in the same school as the mind blowing one we had shared a couple nights ago. It was a good kiss. Don't mistake me. In fact it was pretty incredible. One of her hands left my tit to hold my head and god damn if her tongue wasn't raping the fuck out of my mouth.\n\nI was gasping and my hips were humping at the open air. I was so wet, I could feel it dripping. I moaned into her mouth and sucked feverishly on the thick tongue that invaded me so freely. Finally, after an exceptional eternity of kissing, she broke off and giggled. It was definitely Sue.\n\nShe leaned in and whispered, \"I've wanted to do that for a while. It's almost over slutball.\" Then she pecked me on the lips again and climbed off me.\n\nWould Jill kiss me? I was shaking again. The sounds were louder and more... urgent now. Someone or someones were going to climax soon. At least that was the sense I had from the sounds in the room.\n\n\"You look as adorable as ever.\" Jill said softly. She was on my side, close to my ear, but not whispering quite as quietly. \"I need you to keep your eyes closed, but I am going to help you stand up and lead you out of the room. Lean up so your back is straight. I am going to stand up and take your hands.\"\n\nThe moaning was so loud now. Someone, I think it was Courtney, was definitely going to cum soon.\n\n\"Reach your hands forward.\" Jill instructed. I did and she took them in her own hands and pulled me to my feet. She put an arm around my waist and led me blindly out of the room. When the door closed behind us, the sounds of sex were muted. \"You may open your eyes now.\"\n\nIt took a minute to adjust to the light. Then we were walking down the hallway. Jill had pulled a robe over her body, it was quite transparent.\n\n\"You will not be allowed to cum until all your punishments are caught up, so I would highly suggest not getting any more.\" Jill told me as she led the way. \"I am going to step in front of you now. When you are following me, you will be just a step behind me and half your body to the left. You must watch my every move and mimic it as closely as possible. Your hips are to sway with each step.\"\n\nShe stepped in front of me and I followed her as closely as I dared so that I could stop if she decided to stop.\n\n\"As I was saying, no orgasms for you until your punishments are caught up. Then the matter may be discussed. As you have no doubt figured out with your smart little head, the lesson for Julie and Courtney today will only count as one punishment, leaving you at six of twelve when we begin tomorrow.\"\n\n\"Now, it is just you and I for a little while. This is sort of a debriefing of the days' events. Do you have any questions in regards to today's activities?\" Jill asked.\n\n\"Yes Mistress.\" I answered.\n\n\"You may have three questions, proceed.\" She permitted.\n\n\"If the physical punishments are determined not to be producing ... um... that is to say, if you and Sue determine that the humiliation is why I am so ... wet... will you stop doing that? I mean, assuming I do nothing wrong to deserve any more after these twelve Mistress?\"\n\n\"Good question Carrie. And no. If you do not get aroused by pain, pain will be solely used for punishment.\" Jill answered.\n\n\"I know I don't have to, but I can't help but wonder... Do you want me to submit to Courtney in school Mistress?\" That was bothering me still that she made me do that in the basement. Speaking of basements, we passed the steps down to hers so we were not heading back there apparently.\n\n\"I have no opinion either way Carrie. That was a wasted opportunity for information. I have told you that answer before.\" Jill replied. \"But, let me enlighten you a little and perhaps it will help. I made you eat her pussy because I can. Whether that makes an impression upon Courtney or not will be up to her. Do I believe you want to serve her might have been a better question. I do believe that. However, I have no desire to get involved in that decision at all. I think you want to serve Julie as well. Probably even Farin. You are feeling like a subservient slut. It's normal. It will change as you grow.\"\n\nI sighed. That was actually helpful, to understand what she was doing, I suppose it was a gift that she answered a question I didn't ask. \"Thank you Mistress.\"\n\n\"You are welcome Carrie. One more question.\" She replied.\n\n\"What would your advice be to me on dealing with Julie? I'm very conflicted and I would greatly appreciate your insight.\" I asked.\n\nJill laughed, not unkindly. \"Oh Carrie, if I had met you six months from now, I think you would be sleeping next to Sue every night.\" She smiled at me, stopping for the first time to turn and face me. \"I can't give you specific advice Carrie, she is your closest friend. That gives you a great deal of leniency as she will forgive more than a lover. But, it also provides a difficulty, that you two may cross a line at some point that will either become love or hate. Friendship is rare, lovers are easy to find. So, my advice is to take your time, talk a lot before you do anything. And follow your instincts when you are not a horny little girl. You can not make a sound decision when you are thinking of sex.\"\n\n\"And here we are.\" She opened a door to a bathroom. \"Towels are under the sink. Take a nice cold shower as opposed to a hot one. It will help with your conversation when you drive Julie home. When you are finished, come out and get dressed and we will finish up for the day.\" And she turned and walked back down the hall, towards the orgy in her bedroom.\n\nI watched her ass wiggling down the hallway, unable to turn away. Jill truly has a magnificent body. It's quite sculpted, not overt muscles, but extremely toned. Anyway, she has a great ass and I wished mine were as nice as hers. And once she went into the bedroom, I turned on the light in the bathroom and stuck my ass out to the side and tightened the muscles. It wasn't a bad ass, a very nice one in fact I thought, but it wasn't Jill's ass.\n\nCold showers. It is true, they will calm your sexual heat down. They are not pleasant. I actually loved a nice hot shower. But, it did wake me up. It also helped me clean up fast and get out and dry in record time. And a bonus, the mirror wasn't fogged up. So I could see how bad my face looked without make up.\n\nNothing for it now. I went into the living room in the towel and retrieved my clothes from the chair that I had folded them on when I entered. It didn't take long to put on the little that was there and so I decided I should knock on the door to let Jill know I was ready. I walked down the hallway, listening for sounds from beyond the door, but it was quite quiet. Whether the room was just that sound proof or they were done doing what they were doing, I couldn't tell.\n\nI knocked and it sounded like an echoing bass drum to me. Very loud.\n\nA moment later, the door cracked open, blocked by Sue who was quite naked. I gasped upon seeing her nude body and she intentionally opened the door just enough that it was all I could see. No matter how I might have struggled, I was not able to see behind her, so I didn't try, after a second.\n\n\"Hey slutball, nice and clean I see. Go kneel by the front door, facing the room and Mistress will be out to see you shortly.\" And she leaned in and kissed me on my lips and giggled. She closed the door and I knew I was dismissed.\n\nI didn't waste time, but I didn't run either. I got to the appointed position in the appointed place and awaited Mistress... err... Jill's presence. I surprised myself that I actually called her Mistress in my thoughts. So, I waited. Surely, Jill wouldn't keep me waiting too long. Then again, I had showered quickly, perhaps she was still undressed. I took note of the room. I had been here before, far different circumstances of course.\n\nFinally, after some undefined number of minutes, Mistress... Jill... entered the room. She was dressed in something besides a robe, a pair of yoga pants and a very tight shirt that left her breast curvature defined. She smiled at me and sat down in a chair opposite me.\n\n\"Not bad for your first day Carrie. You did add four punishments, but that is to be expected. I will stretch them out so your ass doesn't become a vile mess of bruised flesh, so keep any desires for an orgasm down deep this week, I don't see it happening.\"\n\n\"There is the issue of your orgasm at the mall. That was most egregious. I have to be able to trust you Carrie. You have to follow my directions or the punishments will have to be more severe. I have given this a great deal of thought and spoken to Julie and Courtney about it. Julie, of course, wanted to let you off the hook.\" Jill laughed softly. \"Of course, that is not going to happen. It will be a surprise. Saturday. Ask your father if Julie and Courtney can spend the night on Friday. Be convincing. I'm not sure how things set there at your house, so I won't tell you that you must get his permission, but I do expect a very strong effort.\"\n\n\"You may wear a bra to school from now on. When you get here, panties and bra will be hung from your rear view mirror before you enter the house. It is up to you if you wish to put them back on when you leave. As to the job you have here, for conversation with your father, I am an artist and you are assisting me by cleaning brushes, painting, carving wood and sculpting. It is dirty work, so you will often change clothes when you arrive and shower before you leave so as not to get paint and dust on your clothes and in your car.\"\n\n\"Eventually, he will ask where you work. The address is on this card I will give you. It is a warehouse with all the equipment to do the things I mentioned. We will be there some days, but not this week. Let him know that we often run errands to pick up supplies and deliver pieces in case he decides to drop in uninvited when we are not there. Sometimes there are people there, sometimes not. They will all be instructed to cover our story.\"\n\n\"I understand you are undergoing counseling with Mrs. Lane at your high school. Is this causing you any difficulty?\" Jill asked.\n\n\"She kinda broke me into talking a little bit today Mistress, but normally no, I just answer her vaguely. I have to lie too much to go into details.\" I answered.\n\n\"I see.\" Jill said, pondering something for a moment. \"Clearly, I would prefer you not tell her about me or Darla or well, pretty much any of us. I'm not so worried, you are eighteen. Nothing we did is illegal, nobody would go to jail over it. But judges and juries have made bad decisions before, particularly when it comes to a teenage girl and sex, it scares them because they all want to do it so badly. I am sorry this comes on your shoulders, having to lie to someone who really does want to help you. Did she give you a way out?\"\n\n\"Kind of Mistress. She said if I cooperate with her and she felt I was better, but she also wants me to go to some kind of lesbian group therapy treatment.\" I answered.\n\n\"Lesbian group therapy.\" Jill laughed. She then said, thoughtfully. \"Why don't you if it gets you out of this quicker? Are you afraid of what you will find there?\"\n\n\"I don't know Mistress. It's more time. I didn't really have the option before anyway. And I guess it scares me a little, who would be at such a therapy session.\" I replied.\n\n\"It is making me quite curious.\" Jill laughed pleasantly. \"Ask her tomorrow if you can try one session out without committing to it. I am quite intrigued as to what would go on in such a meeting.\"\n\n\"Yes Mistress.\" I affirmed.\n\n\"Okay slutball.\" Jill smiled at me. \"Take this card and run along now and I will send Julie out in a minute.\"\n\nI stood up, looking at her, expecting something more, but she just smiled at me. I took the offered card. \"Thank you Mistress.\" I said and turned and showed myself out the door.\n\nOutside, I went to my car and pulled my panties off the rear view. I didn't really feel like pulling my shorts off to put them back on, so I tucked them into my pocket. I started up the heat to fight off the slight chill in the air. I turned on the radio to block out my thoughts, which started crashing all around me.\n\nJulie came out with Courtney and they went to Courtney's car to get Julie's books. I had my windows up so I couldn't hear anything, but they hugged and smiled and were chatting quite a bit before she finally left and Courtney got in her car and drove away. Then Julie opened the passenger door, through her bag in the back seat and strapped herself in.\n\n\"Wow!\" Julie exclaimed as she sat down. \"That was a lot different than anything I expected.\" She was chirping.\n\nI growled, but quietly, turning my face away. I don't know why I was feeling this jealousy suddenly, but it had been attacking my mind since she and Courtney started talking while striping my ass with floggers. I bit back the bile in my throat and pasted on a smile before turning back towards her.\n\n\"What?\" Julie asked as I looked at her. She knew me too well.\n\nShe laughed loud. \"I didn't go down on anyone okay? Is that what you are worried about?\"\n\nI frowned and turned to look in the rear view so I could back up safely.\n\nJulie turned the radio off. \"No, oh no, you do not get to do this to me Carrie Fitch.\" She slapped my hand. \"Park it now.\"\n\nI pulled on the emergency brake and put the car in neutral.\n\n\"Look at me.\" She instructed. I did.\n\n\"I am coming every day, so you better get used to it. Yes, Sue went down on me today and Courtney did too for a little while. I did not cum, not that I am holding off for some higher purpose. We are not dating. You do not get to act like we are. If I decide to go down on Courtney or Sue or Jill before you, you have to be okay with that. You do not get a choice.\"\n\nI frowned and turned away. Julie grabbed my chin and turned me back to look at her.\n\n\"Carrie, I want to wait, I do. I plan to wait. But if something happens you have to be okay with it.\" She kissed me softly on the lips. \"Now, take me home, we both have homework to do.\"\n\n\"Okay Julie, you are right of course. I'm sorry I acted that way. Thanks so much, I mean it. It bothers me having you see me like this, but I do appreciate that you are doing it.\" I answered as graciously as I could.\n\n\"You are so stupid.\" Julie laughed. \"I know you don't talk like that, save that crap for Jill.\"\n\nI laughed for a moment too. I grabbed her hand and squeezed it hard. \"I really truly want this to be over, I hope you know that. I know my body doesn't seem like it, but honestly Jules, I can't wait to be free of this.\"\n\nJulie smiled. \"Keep telling yourself that. I think you love it.\" She squeezed my hand back and told me to drive.\n\n\"I hate it Julie. I hate that my body does what it does.\" I protested.\n\n\"Oh, I believe that. But deep down, I think you love it.\" Julie laughed. \"Just drive, I will tell you a little about what I learned today.\"\n\nI backed out and got us headed towards Julie's house.\n\n\"So, Jill is really pretty incredible, but I'm sure you already know that. She's being all noble and stuff, but honestly, I think she likes playing with you. Her and Sue both, they think the world of you.\" Julie began.\n\n\"Anywho, she is going to teach me and Courtney about the life style while she is teaching you. Slightly different perspective, the handle vs the other end, but it's educational. Amazing what she knows about psychology and philosophy. I mean, you know I want to go into psychology in college, so we had a really interesting talk about it.\"",
        "\"And about you.\" Julie laughed. \"You might be a good subject for abnormal psychology.\"\n\nI punched her in the arm. \"Hey!\" I laughed.\n\n\"Well, you have to admit, you are a bit odd.\" Julie laughed.\n\n\"Well you're my best friend, so that doesn't say a lot for you.\" I shot back.\n\n\"Yeah, I suppose not. I guess we will be stuck with each other.\" Julie laughed and the suddenly, it wasn't funny anymore.\n\nI reached over and squeezed her hand. \"I could think of a million worse things.\"\n\n\"Me too Care Bear.\" She squeezed back.\n\n\"Wait until Saturday.\" Julie added. \"Jill is going to blow your fucking mind.\"\n\n\"Huh? What happens Saturday?\" I asked.\n\n\"The warehouse, she said she was going to tell you about it. It's right up your alley artistic one.\" She replied.\n\n\"Oh, yeah, she did mention it.\" I remembered the card she gave me.\n\n\"So, you going to submit to Courtney in school?\" Julie asked after a few seconds of quiet.\n\n\"Woah, where did that come from?\" I asked.\n\n\"You know full well she is going to keep after you. Are you going to do it? No judgments from me. I'd just like a heads up if you do, I think it best to keep everything in the open between us from now on.\" Julie answered.\n\n\"I ... no.\" I exhaled loudly. \"I know what it must look like. And yeah, I would get really turned on doing it. But, I think it best I stay away from anything like that at school, especially with all the trouble I'm in right now.\"\n\n\"Oh yeah, I guess you have to be careful.\" Julie replied. \"If I...\" She started then stopped.\n\n\"You know I would. I trust you.\" I answered the unasked question.\n\n\"You don't trust Courtney?\" Julie countered.\n\n\"I trust her, I just don't think she lives in the same world as the rest of us. If she got caught, her Dad fixes it with a check. If I get caught, my Dad fixes it with a punishment.\"\n\n\"Hmm.\" Julie sounded thoughtfully. \"Yes, I suppose that is true. What if she and I were together?\"\n\nI breathed loudly again. \"I would.\"\n\n\"Okay. That's good to know Carrie.\" Julie smiled and squeezed my hand as it rested on the gear shift. \"Tonight, before bed, I want you to strip naked and text me a naked selfie.\"\n\nWe were at her house and I pulled in.\n\n\"Thanks for the ride. I will see you tomorrow at school.\" Julie smiled. \"Today was, enlightening. Slutball.\" She laughed loudly.\n\nI choked on a laugh. \"I have other words for it, but I suppose that one is acceptable as well.\"\n\nAnd Julie was gone and I was driving home.\n\nI played the radio. I wasn't going to talk on the phone in the car, though it was linked and I could have. And soon, I was pulling my bag over my shoulder and heading to the front door.\n\nInside, my Dad and Kelly were sitting in the living room, watching the news. \"Hey, there's the bread earner now.\" My dad said, getting up from his chair. Kelly got up with him.\n\n\"Hey Dad, Hi Kelly.\" I greeted them with a smile.\n\n\"So, tell us all about it, how was your first day of employment? What are you going to be doing?\" My dad asked.\n\n\"Well, it was fun, I guess I will learn a lot. She is teaching me to do wood working, eventually, today was more like cooking and cleaning and some painting.\" I began, trying to convert as much reality into the story as I could to make it repeatable and feasible.\n\n\"What is this job again?\" My dad asked sounding confused. After all, Julie had told him it was an internship.\n\n\"Oh, she has a warehouse where she does art work. Like special order stuff. It isn't her only business, but because I love art so much... it seemed a good fit I guess.\" I wasn't half bad at this.\n\nDad looked disappointed though. He didn't see art as a living, more as a hobby. This was hurting his case for my collegiate future. I almost laughed, but contained it.\n\n\"Well, that sounds like a good way to make some money until college starts.\" He said.\n\n\"Yeah, and she is teaching me to cook too!\" I smiled. \"I made chicken piccata tonight. And it was pretty good.\"\n\n\"That sounds great.\" Kelly offered, my dad frowning even worse than before. \"I wish I could get paid to learn to cook.\" She elbowed my dad in the ribs, I saw it.\n\n\"Oh, umm yeah, that is really good honey.\" He finally said. \"So, will you be eating there every night then?\"\n\n\"Yeah, she's going to have me cooking every night I think Dad. I mean, it's not my favorite thing in the world, but at least it's a skill.\" I laughed.\n\nMy dad looked at me like it was insulting to have his daughter making someone dinner. Kelly laughed with me. \"Well, you get to make dinner Saturday night then. Make me a list tomorrow and I will get the groceries.\"\n\nI smiled even though I wanted to knock her cute little teeth out. But, she did cover my ass when I masturbated in the changing room. \"Okay.\" I answered. \"I have homework to do, I was going to do it upstairs if that is okay?\" I asked.\n\n\"Um sure.\" My dad answered, still quite put off by the whole thing. \"Or you can do it down here if you'd rather the company.\"\n\n\"Thanks dad, but the tv is distracting. I'll come down when I'm done.\" I smiled.\n\nI gave him a kiss on the cheek and then accidentally gave Kelly a kiss on the cheek before running upstairs.\n\nWell, there was my phone. I hadn't been looking at it much. What was the point really? But, I figured I had a text to send later, may as well check it now.\n\nFarin had gone all day without sending a text and then sent a video about an hour ago. I couldn't.\n\nKAREN: I hope you don't mind Carrie, I got your number from Courtney. Was wondering if you had any plans Friday night? There is this movie I really want to see and my other friends saw it already and I need to see it before they start talking about it and I don't want to go see it alone. So, you have my number, I know, so, 9:00 Friday? You can pick me up at my house, 4783 Tipton Circle\n\nSo, Julie was right. This was so weird. Karen is... well, let's face it they are all gorgeous. But, what did she even know about me? Just that I was dating Farin. I guess that was enough. I was going to tell her she should date Farin instead, but I didn't. But, I didn't really do anything, I'd deal with it tomoroow.\n\nI broke out my homework and got to studying. I even put a dent in my paper for English class. The friendship vs lover one that was to oppose Julie's paper. I laughed a bit as I wrote it. And, finally, I hit the play on the attachment because I love torturing myself so much.\n\nIt was a self-video of Farin. She looked like hell. Not only was her face a mess from smeared and cried out make up, but her hair was a mess and she had a black eye and a busted lip. I gasped when I saw her and instantly felt horrible. I had the volume turned low, just in case, I wish I had fetched my earphones, but I was too lazy to climb out of bed to get them.\n\n\"I got in a fight, I guess you can see that.\" Farin looked into the camera with a pained smile. Her eye looked horrible. \"You should see the other three girls though.\" She laughed. \"They said you weren't worth it, but you are Carrie. You are to me.\"\n\n\"I know you have to do what you have to do right now. And if you want to tell or have to tell Jill, I understand. Just don't forget what we had Carrie. I swear I never ever loved anyone like I love you. I can't ever see me loving anyone like I do you. Please, just let me be your friend while you get through this thing with Jill. I promise, I won't make it more difficult for you.\"\n\n\"I guess they told you that I arranged the whole thing. That's not true Carrie. I mean, I knew and I wish I hadn't ... God, I know I fucked up. I had no idea that you would be like you are! I mean, I crushed on you, but I never thought in a million years you would ever love me back.\"\n\n\"Listen, I'm going to be a good girl at school from now on. I swear. Just, don't ignore me please? I can't stand you ignoring me. It's killing me baby. I know what I did was bad. I know you probably hate me right now. But we can fix this. I can make this up to you I swear. It can be better, so much better.\"\n\nI was shaking and had to wipe the tears from my eyes. She was so broken.\n\n\"So, see you in school tomorrow.\" She forced a smile. And then it was over.\n\nI couldn't deal with this. I went into the bathroom to wash my face and went downstairs to see what my dad and Kelly were up to. \"Hey.\" I smiled when I was halfway down. \"Whatcha watching?\" I jumped into the couch opposite the one they were snuggled on and looked at the television. It was some documentary, looked boring as hell.\n\n\"Oh, some story about cattle farmers in Wyoming.\" Kelly answered.\n\nI looked at her puzzled and she just shrugged. I guessed it was my dad's interest.\n\n\"Okay, well I'm gonna go to sleep.\" I said and went over to give them both a hug goodnight. I kissed my dad and remembered not to kiss Kelly, though she gave me a kiss on the cheek.\n\nI went upstairs and stripped naked. I looked in the mirror at the marks on my ass. It was pretty bad. Oh well, that wasn't the goal anyway. I got my phone and posed in the mirror until I found a somewhat flattering pose given my less than perfect body. I snapped a pic and sent it to Julie and went to bed.\n\nI never imagined how much shit I was about to be in by not being more diligent with my phone."
    ],
    "authorname": "Panthergirl",
    "tags": [
        "18 year old",
        "authoritarian",
        "bdsm",
        "d/s",
        "dominance",
        "humiliation",
        "lesbian",
        "oral",
        "orgasm denial",
        "teen"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/jills-world-ch-02"
}