{
    "title": "Hero Worship Pt. 04",
    "pages": [
        "So here is part four of eight. If you haven't read the first three parts you'll be lost. All characters involved in explicit scenes are over eighteen. Enjoy, and please rate and comment.\n\n- Aly -\n\nI'd love to say I woke up still in Taylor's arms, but we'd separated during the night. I reached out and slid my hand over her firm, flat stomach, and she rolled towards me. Moments later she'd gathered me back into her embrace, and I shuddered as her warmth infused me. Her leg slid over mine, my head resting on her arm. I breathed deeply, luxuriating in her scent. There might have been a residual note of her cologne, but mostly it was just her skin, with stale sweat and sex in the background. It was wonderful.\n\nI fell back asleep. And this time, when I woke up, I was still where I wanted to be. I stirred, and she kissed me gently on my forehead, making me sigh.\n\n\"Good morning, baby.\"\n\nMmm, baby. I was her baby. I can't tell you how that made me feel. The world was a scary place, and it had gotten a lot more so since I realized I was gay. But here, in Taylor's arms, I was safe, and loved, and so, so happy.\n\nI looked up into her beautiful blue eyes. \"Good morning, My Lady.\"\n\nShe pulled me tight and I snuggled in deeper. \"Did my baby enjoy last night?\"\n\n\"Oh, yes, so much.\"\n\n\"I'm glad.\" Taylor kissed me, gently but with such passion. I didn't know that was possible. I loved her. And I'd told her last night. And she said it back. And it hadn't been flippant, an auto response, or anything. She'd really meant it. And the way she was kissing me now. I could feel the truth. Oh, god, maybe that was totally na\u00efve, but this felt so good I didn't care.\n\n\"When do you have to be back at school?\"\n\n\"Nine-thirty.\"\n\n\"We have a little time then.\"\n\nI ran a finger down her side. \"Yeah.\"\n\n\"Go start the shower, clean up, and then I'll join you, and you can wash and pleasure me.\" I felt my whole body shiver with happiness at the order. Well, it wasn't quite an order; there was still a little questioning in Taylor's voice. But I was going to treat it as one.\n\n\"Yes, My Lady.\" I slipped out from between the sheets and walked naked towards the bathroom, letting my ass swing behind me, my hands folded demurely in front. I could feel her eyes on me as I went, which was awesome.\n\nI washed quickly, as I wanted to get to the good part as quickly as possible. As soon as I was done I stood to the side, hands behind my back, and called out. \"My Lady, your shower is prepared.\"\n\nI felt myself shiver as Taylor entered the bathroom. She was magnificent, tall and lean, with amazing shoulders, a flat, toned stomach, and powerful legs. I wanted, needed to touch her, to worship her. She stepped into the shower, and it took everything I had not to put my hands on her immediately.\n\n\"You may begin.\"\n\nWow, that had been an order, and it made me tingle all over. I loaded the shower sponge with body wash and slowly touched her skin. I could barely breathe. God, who was I? I was a together girl, always top grades, president or vice president of stuff. I made the decisions. But around Taylor all that went away. I just wanted to bask in her. The weird thing was that she didn't make me feel weak. Being around her made me feel strong and confident, like I could do anything, because she loved me. And right now, I just wanted to wash her. So that's what I did. A simple act of devotion and service for My Lady, and it filled my soul. Hair, shoulders, arms, torso, legs, feet, I worshipped everything.\n\nI could feel her relax as I continued, and she slowly gave herself over to my care. Once I'd finished I rinsed her, taking the liberty to run my hands over her smooth, perfect body. I kissed her gently on the shoulder, making her sigh. Her fingers wove into my wet hair, and she gently guided my head to her breast, which I greedily sucked into my mouth.\n\nTaylor pulled in a deep breath and sighed as I did, my tongue massaging her before I nibbled a little. Her other arm wrapped around me and held me to her. I did the same, encircling her waist and losing myself in the touch of her skin, the feel of her nipple in my mouth. She pulled my head away, and I reluctantly let her breast pop free. My mind was just registering the loss when she put my mouth to the other side and I happily continued.\n\nWhen she finally tilted my head up, she was looking down at me with her beautiful eyes. They were shining with love and happiness, and I melted inside. Her kiss was magic, and I reveled in it. Her fingers twined through my hair as she broke away, and I stared up at her. She stroked the side of my face once, and then her hands rested on my shoulders, pushing me gently down as I sank to my knees before her, never looking away from her glorious eyes.\n\nShe placed her foot on the tile shelf, giving me better access to her sex, and I took full advantage, leaning forward and burying my mouth in her delicious folds. My arms wrapped around her thighs. This was perfect, it was right, on my knees worshipping and pleasuring My Lady. I reveled in every moan, sigh, and gasp, every little sign that told me My Lady was pleased with what I was doing.\n\nAnd she was, I could tell as she shuddered against me. I needed her pleasure to go on and on, so I refrained from increasing the stimulation, even though I could tell that's what she wanted. Longer and longer I held her at bay before she whispered into the mist. \"Please, baby.\"\n\nThe begging in My Lady's voice was too much, and I pulled her clit into my mouth and wrapped it in my tongue as she came apart. I held the contact as she screamed her ecstasy into the air. There was fire in her eyes as she stared down at me, and she lifted me to my feet. Her hand rested on my shoulders for a moment before she turned me around so my back was pressed up against her.\n\nI could feel her hard nipples against my back as My Lady's hands played over my skin. She cupped my breast, and began working the tip between her fingers, making me gasp and lean my head back into her. She kissed my temple and began to whisper in my ear.\n\n\"Baby, do you have any idea how wonderful you are? How much I love to touch you? You make me feel like I could fly, baby, and I'm never letting you go. You're all mine, my baby, my one and only.\"\n\nTears rolled down my cheeks as she continued to whisper sweet nothings into my ear. It's strange people call them that, 'nothings,' because they meant everything. My mind was reeling at how badly I needed to be hers, to make her happy, my body humming at the contact of her body and hands. My soul, in contrast, was absolutely at peace, safe in My Lady's arms. Her hand slid over my belly as the steady stream of beautiful words poured from her mouth, and when it dipped between my legs my whole body melted into her.\n\nMy breath was coming in jerky, ragged gasps and I was being fully supported by my lover. My body was moving in rhythm with those beautiful fingers when they dipped inside me, My Lady's thumb massaging my nub.\n\n\"Come for me, baby. I want to feel you pulse in my arms. Nothing makes me happier.\"\n\nWith those words I lost the last of my resistance and dissolved into orgasmic bliss.\n\nWhen I finished Taylor was still holding me, her kiss the sweetest thing I'd ever tasted. She washed and rinsed me gently before we stepped out of the shower and dried each other. After we finished the little things, like brushing teeth and such, I still needed to dry my hair, where Taylor could get by with a simple towel dry.\n\nAs I plugged in the hair dryer she hugged me from behind. \"I'll work on breakfast. I love you.\"\n\nI cooed at those words. \"Ooh, love you too.\"\n\nShe left and I stared at myself in the mirror, noting the flush in my skin and the sparkle in my eyes. Once my hair was dried I got dressed and made my way out to the kitchen, where Taylor was waiting with eggs and sausage.\n\n\"Do you have a bunch of classes today?\"\n\n\"Yeah, three. I've got four total, plus my senior project. First meeting for that is Thursday afternoon. I'm a little nervous about it. Next semester will be better. \"\n\n\"Do you get to choose what you're going to do? I mean, for your project?\"\n\n\"Yeah, and I have an idea. Hopefully he'll approve it.\"\n\n\"What is it?\"\n\n\"I'll tell you if he agrees. I'll need your help.\"\n\n\"Well, I'm sure it'll be amazing.\"\n\n\"Thanks, sweetie.\"\n\nMy drive back to campus seemed to take no time at all. The bad part is that Rush started this weekend, so we had events Friday and Saturday nights for the next three weekends, plus selection and initiation after that. After September, things should start to quiet down, but I was going to keep my Tuesday afternoons open if I had to kill people to do it.\n\nBy Thursday afternoon I was pretty nervous, sitting outside Professor Del Vecchio's office waiting for my initial meeting. He called me in precisely at two o'clock.\n\n\"Miss Winterberg. Please have a seat.\" I did so, not letting myself break eye contact. \"So, by contract I only have to take a senior design student every other year. Last year I had Nathan Blaire, so I did not have to agree to this. However I was very impressed by your performance in my design class last year, so I decided to take a chance. I trust I won't regret it.\"\n\n\"No, Professor.\"\n\n\"So, I imagine you've given some thought to what you would like to take on for your senior project? Just be aware that this will probably be the last thing you get to design for years, as new graduates have a long road before they get their own projects in the real world. Many never do. So make it good.\"\n\n\"Yes, sir. My girlfriend is a lifeguard up on Tagalong beach in North Vista, and she was saying that they could really use a new HQ. So I came up with this.\" I handed him a hardcopy of the CAD drawing I'd been working on.\n\nIf he was thrown at all by the word 'girlfriend' he didn't show it. He looked over what I'd given him for what seemed like hours before he said anything.\n\n\"This is a very ambitious project, young lady. More so than I think you realize.\" He gave me an appraising look. \"I expect excellence in my students, and I don't settle for less. Get started. First steps?\"\n\nWe talked for another hour, laying out the groundwork of what needed to be done. The first step, of course, was to interview the client, so I needed to talk to Taylor's boss, and to Taylor herself. As I left the Professor's office, I couldn't wait to tell Taylor about my idea.\n\nI went ahead and sent her a text, even though I knew she wouldn't see it until after six.\n\nAly -- Call me when you can.  Something exciting to tell you.\n\nI headed back to the house and went up to my room, grabbing an apple and flopping down on my bed. It was just a little after four, and Sadie wouldn't get back until six, so I'd put off dinner until then. I pulled up my statics homework, trying to get a jump on it, which would make for a far more enjoyable evening. I got about half done before I lost focus and started flitting around the internet.\n\nWhat I landed on was some BDSM websites. I was amazed how much I loved serving Taylor, feeling owned by her. Thinking back it made perfect sense. I'd always gotten a thrill out of serving the girls on the sports teams I'd been on. I'd do anything they asked me too. So I definitely saw myself in some of the stories I read, but not everything. I was so not into pain. I still cried when I had to get a flu shot. Not as much as I did when I was eight, but yeah. And the public humiliation stuff was not even mildly interesting.\n\nBut the idea of being owned, totally submitting to the will of another, that made me all gooey inside. Especially if that person were Taylor. I was casually thumbing through the world of virtual kink, totally lost in my own little universe when the door suddenly opened. It took me a moment to realize what was happening as Sadie walked in, and she got an eyeful before I had the good sense to slam my computer shut.\n\n\"What the hell were you looking at?\"\n\n\"Nothing. So how was Advanced Crazy People? Good class?\" My heart was thumping.\n\n\"Sure. Don't change the subject. You were looking at porn.\"\n\n\"No I wasn't.\" I stared down at my feet. \"It was research.\"\n\n\"Porn research?\"\n\nI wasn't sure what exact shade of scarlet my face was turning, but I could feel the heat rising fast. I wasn't getting away with anything,\n\n\"Aly, I saw the leather. So, is Taylor making you call her mistress and leaving you tied up for hours?\"\n\nI tried to look hurt. \"How do you know I don't make her call me mistress?\" Sadie just smirked at me for that comment. \"Yeah, okay. But I don't call her mistress.\"\n\n\"What do you call her?\"\n\nThe heat in my cheeks kicked up another notch. \"My Lady. And she calls me her baby. And, god, when she does I'd do anything for her.\"\n\n\"Anything?\"\n\n\"Well, almost. But she'd never ask me to do anything I didn't want to do. That's the weird, wonderful thing. I'm completely in her control, and I've literally never felt so safe and free. She loves me.\" I was hugging my knees to my chest, imagining Taylor's arms around me.\n\nSadie jumped onto her bed, legs akimbo and her eyes wide with curiosity. \"What does she make you do?\"\n\nI couldn't help the smile pulling across my face. \"Stuff. Like washing her in the shower.\"\n\n\"Wow. That's sexy.\"\n\n\"Oh, it's so amazing.\"\n\n\"Do you like, go down on her?\"\n\n\"When she tells me to.\" Sadie's mouth opened, and I knew I'd blown her mind a little. I'd given Taylor oral a bunch of times now, but the ones where she'd told me to, mmm. I mean, I'd enjoyed it every time, but those were just better somehow. \"Why? Don't you do that for Noah?\"\n\n\"Um, yeah, sure, but not when he tells me too.\"\n\n\"I like it when she tells me to do things.\"\n\n\"So you're like a sub then?\"\n\nI nodded. \"I think so.\"\n\n\"Does that mean I can get you to do my laundry?\"\n\nWe both laughed as I answered in an emphatic negative. Sadie crossed the room and jumped onto my bed and opened my laptop. \"So what exactly were you researching?\" We spent the next thirty minutes looking at various pictures and reading articles, which is what we were doing when my phone rang.\n\n\"Hey, sweetheart. How was your day?\" I rolled off the bed and sat in my desk chair as I listened to Taylor's lovely alto voice. I told her about the meeting with Prof. Del Vecchio. \"So you remember that thing we talked about, the nature center slash command post slash community center? That's what I'm going to do for a senior project. I'm going to design it.\"\n\n\"That's great, baby. Really.\"\n\n\"I mean, it's not like I'm actually going to get to build it, but still. It'll be fun. And I want you to help me with it. And I'll need to talk to Jennifer, so I know what's needed and stuff.\" I was getting more and more excited as I talked about it, and I realized why. I was doing this for her, wanting to make her idea, her vision a reality.\n\nI listened to her tell a funny story about something that had happened at the beach today, and completely lost the fact that Sadie was in the room with me. That is until she hopped up and sat on my desk, trying to hijack my conversation.\n\n\"Hi, Taylor!\"\n\n\"Who's that?\"\n\n\"That is my annoying roommate.\"\n\n\"You should see what I caught Aly looking at on the computer!\"\n\nI made a mean face at her. \"Would you stop!\"\n\nShe stuck out her tongue and I went back to my bed.\n\n\"Did you tell her about me, about, um ...\"\n\n\"That you're a she and not a he? Yes I did. I'm sorry I forgot to let you know, but you're distracting.\"\n\n\"So what were you looking up on the computer?\"\n\n\"Oh, nothing.\"\n\n\"Baby, don't lie to me.\" Her voice was playful, but there was an edge of command in it that made me tingle deep inside.\n\n\"I was looking up stuff about BDSM.\"\n\n\"Really, see anything you like?\"\n\n\"Yeah, and a few things I didn't. I'd like to talk about it sometime.\"\n\nUnfortunately Rush made the weekend a bust, but Tuesday afternoon was still open for both of us, and we made plans.\n\n- Taylor -\n\n\"Hey, Can I talk to you guys tonight?\"\n\nI heard Jen asking Vicky before she responded. \"Sure, Taylor, we were just finishing dinner. Come down?\"\n\n\"Yeah, okay.\" I'd planned on heading out to the warehouse, but after talking with Aly, well it turned my head around a little. BDSM? What exactly did she mean? I mean, I know what that is, but I'd never done anything like that. I don't exactly see myself walking around in black leather slapping a riding crop against my palm. What if she wanted me to hurt her? I don't think I could do that.\n\nBut I have to admit, the way she looked at me, the adoration, it felt great. It might be the only part of my life I was in control of, but I liked it. I loved taking care of her, too, giving her pleasure. The way she just cuddled into me, the total surrender in her eyes when we made love, they were beyond intoxicating. And it wasn't like Aly was some spineless little girl crawling around at my feet. She was tough, and could totally could hold her own, like what she did at that party. I mean, she'd gotten me to try shrimp, and that was saying something.\n\nI couldn't really imagine her crawling after me on all fours on a leash. Did people even do that? Basically I was freaked out as to what she might want, and if I could do it. Was I really going to talk about all this to Jen and Vicky?\n\nAs it turns out, the answer was yes.\n\n\"This doesn't surprise me, really, Taylor.\" Jen set her coffee down. \"You're always wanting to take care of people. It's important to you. And you have an edge of command about you. It's why you're such a damn good lifeguard.\"\n\n\"And that makes me a dominatrix?\" I couldn't believe what I was hearing.\n\n\"I didn't say that. And from what you're telling me, I don't think that's what Aly is asking for.\"\n\nVicky leaned forward. \"Jen's right. And think about it. Would you be happy in a relationship where your partner didn't need you to take care of her? Or didn't want you to?\"\n\n\"But it's a relationship. Shouldn't we be taking care of each other?\"\n\nJen smirked at me. \"Aly doesn't take care of you?\"\n\nI grimaced. Oh, god, she so did. She'd scold me when I lost myself in my art and forgot to eat, or remind me to put on sunblock when we were out.\n\nMore than that though, she made me feel like no one ever had. The way she looked at me, it made me feel like I could fly. I wanted to be her everything, protector, lover, friend. I wanted to teach her about art, and let her infect me with that innocent enthusiasm of hers. She makes me smile, and that's been so rare recently.\n\n\"Ok, yeah, but I don't know how to do this! I don't know what she wants.\"\n\nVicky gave me a smug smile. \"There's a simple way to fix that, my love.\"\n\n\"Yeah, yeah.\" I made a face back at her. \"Besides, I'm not sure she even knows what she wants. It doesn't strike me that she's done this before.\"\n\n\"Well, then you figure it out together.\" I really wish Vicky'd stop smiling at me like that. \"That's a lot of the fun.\"\n\nShe slid her hand into Jen's and squeezed.\n\nJen looked back at me. \"When do you see her again?\"\n\n\"Tuesday.\"\n\n\"Okay, well you have a few days to think about it.\"\n\nAnd I thought about it. A lot. One of the good or bad things about being a lifeguard is that you have a lot of time to think. Aly had rush parties to coordinate, so I doubted I'd hear from her from the next few days, so I headed straight out to the warehouse after work. Aly's sculpture was coming together quicker than I'd thought possible, probably due to the fact that her face was so etched into my brain that I never had to stop to refer to my sketches.\n\nSeptember was quickly flowing away, and the second Saturday in October was the North Vista Art Fair, which is what I'd been gearing up for all year. Mr. Beville was one of the sponsors, and the work displayed there went a long way to determine to which up and coming artists would get a showing at his gallery. So I had to start spending some time on my smaller sculptures, which is what I made myself do. The weird thing is that now even they were different. I'd stopped referring to my original sketches on several of them; they just felt wrong somehow.",
        "My mind was always just a whirl of activity every day, and by the end I was desperate to get out to my work. Friday and Saturday nights I didn't get a chance to even talk to Aly, but it seemed like every time I checked my phone there was some little 'thinking of you' texts from her, which would give me a fresh burst of energy. Maybe she really was a muse.\n\nMonday night I worked until three AM, but finished with a two-foot model of the sketch I'd shown to Aly, the one with the woman floating in the air, arms thrown back. It felt incredible holding it in my hands. Another was an abstract of a cliff face battered by a pounding tsunami. It had occurred to me as a dark clash of nature, Earth vs. Water, but now, somehow it had changed from a war to a celebration of nature's power and majesty. It was so subtle, and maybe even all in my head, but it was still profound to me.\n\nI thought about sleeping for a few hours on one of the cots out at the warehouse, but after being late last week I didn't want to take the chance of it happening again, so I made the drive home. I realized after about ten minutes that I had no business being on the road as tired as I was, especially on a motorcycle, but I was committed, and somehow I made it back safely, stripping off my top and jeans before collapsing into bed.\n\n***\n\nIt was so warm, like I'd been wrapped in a blanket. A sigh escaped my lips as I rolled over, my arms encircling something as I did. Not sure what it was, but it felt so nice. Something moved gently against me, and I pulled it close. Then it giggled, which brought me back to consciousness.\n\nI opened my eyes, and found them staring into Aly's soft brown irises. I had no idea how she was there, but I felt my cheeks stretch into a smile.\n\n\"Hi, sleepyhead.\" Aly kissed me gently on the shoulder.\n\nI slid my hand over her bare back and down past the skin of her bottom. \"This is a dream.\" My fingers traveled over a smooth leg, which was lying on top of my hip. \"A wonderful, impossible dream.\" How could Aly be naked in my bed?\n\nShe gently nestled in, lifting my chin with her head and her soft lips giving gentle suction to my neck, making me sigh. I didn't think you could feel things in dreams.\n\nI ran my fingers through Aly's soft hair as I began to come around, letting myself enjoy her soft kisses for a moment before pulling away so I could kiss her forehead. \"How are you here?\"\n\n\"You left the door open. When I got here you were sound asleep. So I just climbed in next to you. It was nice.\"\n\n\"But I set my alarm.\" I looked over and pressed the button on my digital clock radio. Ten PM. Oh, man.\n\n\"See, if you used your phone for an alarm like a normal person this wouldn't happen.\"\n\n\"I like waking up to the radio. And it worked out. This isn't too bad.\" I pulled her close to me as she laughed. \"Besides, this has to be the fastest I've ever gotten a girl naked on a date.\"\n\n\"Ooh, do I win a prize?\"\n\n\"Yes, you do.\" I captured her mouth with mine and rolled her onto her back. I worked down over her jaw and found the soft spots on her neck that she loved.\n\n\"Ohh, My Lady.\"\n\nThe purr of pleasure in her voice made my head swim. I still didn't know what it was, but nothing on earth was as magical as hearing Aly moan in ecstasy. The only thing that came close was her incredible flavor. Or maybe the feel of her skin against mine. Or maybe it was the way she cuddled against me after sex. Oh, shit, who cares? One thing my head could agree on was that it had been far too long since I'd touched her, and I was going to rectify that right now.\n\nI spent a few delicious moments worshipping her lovely, soft breasts, before heading south to my ultimate destination, where I lost myself in her nectar. Soon Aly was bucking and wailing under my ministrations as I brought her to bliss.\n\nI kissed my way back up her body as she recovered. \"Did you enjoy your prize?\"\n\n\"Oh, yes, My Lady. Thank you.\"\n\nI stroked her hair. \"That's good, because I very much enjoyed giving it to you. And I don't want to lose that, to be able to pleasure you whenever I want.\"\n\nAly's face changed. \"Of course, My Lady. I want you to do whatever you want.\"\n\nI rolled on top of her and pinned her to the mattress. \"And I want you to be mine. Completely and only mine. Is that what you want?\"\n\nAly's eyes were wide with wonder and desire. \"Oh, yes. So much.\"\n\n\"Ok. So first thing. What are the boundaries? What do you know you don't want? Have you thought about that?\"\n\nAly nodded. \"Yes, My Lady, I have, some. A lot, really.\"\n\n\"And?\" She looked so vulnerable, I could see it in her every movement. She was laying her heart bare for me. It was the ultimate act of submission.\n\n\"Pain. I don't want you to ever hurt me. I mean....\" She bit her lip adorably. \"Maybe a little playful spanking, but no real pain. I don't think I'd like that.\"\n\nI hid the huge sigh of relief I was feeling. The biggest thing I'd seen in my research that scared me was gone, and that felt great. Aly, she was the most precious thing in the world, and I didn't think I could ever hurt my baby. But it did leave a question unanswered. \"What if you've been bad, and I need to punish you?\"\n\nHer face split into a wicked grin. \"You'll just have to be creative.\"\n\nThe thing is, several possibilities did immediately spring to mind, and the thought of them made me shiver with anticipation. \"I'll take that under advisement. Anything else?\" I tried to put a little husk in my voice, leaning forward a little and fixing her with my best 'I want you now' gleam. Her eyes went wide as I did.\n\nI could tell that she had to work to organize her thoughts. I loved the feeling of power it gave me. God, maybe I really was a Dom. I knew I was loving this.\n\nShe finally found her voice. \"A few more obvious things. Um...I want it to be just you and me, no one else. You can't share me. And I don't like the idea of public humiliation, that doesn't excite me. Anything else, anything you want, we can discuss.\"\n\n\"OK. I thought we already discussed that first bit, but....\"\n\n\"I know, I just....\"\n\n\"Shhhh.\" I put my finger over her lips, and she stopped talking. I ran my fingers down her arm, taking her hand and placing her palm on my chest. \"Can you feel my heartbeat, baby?\"\n\n\"Yes, My Lady.\"\n\nI covered her hand with mine. \"This heart and this body are yours, and only yours. No one else's, ever.\" Then I covered her chest with my palm, which could feel her tripping pulse, going way faster than normal. \"And this heart and this body. To whom do they belong?\" My eyes bored into hers, and I could feel her trembling beneath me. I was soaking wet, and It wasn't going to be long before I couldn't control myself any more, and I would need to take this incredible young woman.\n\n\"They belong to you, and only you, My Lady.\"\n\nI ran a finger over her lower lip, which made her gasp. \"And this mouth, what is its primary purpose?\"\n\n\"Ohhh, God. To pleasure My Lady.\"\n\nI stroked her hair, and she leaned into the contact. \"That's correct. I think it should get started, don't you?\"\n\n\"Oh, yes, My Lady.\" I put my hand behind her head and pulled it up, burying her mouth in my neck, where she began nibbling and sucking and kissing, and the world sort of fuzzed out. She stopped only long enough to peel off my shirt and sports bra, and then she was back to it.\n\nI let her roll me onto my back, and I held her tight as she suckled on my pulse point, luxuriating in the feel of her skin against mine. And as magical as it was, I wanted that tongue wrapped around my clit.\n\nI gently nudged her head away, looking into her eyes. \"Baby, you know what I like?\" I slipped my little finger into her mouth, which she began sucking on immediately. \"What I want this amazing tongue to do?\"\n\nShe wrapped her tongue around my pinkie as best she could, eyes still locked on mine.\n\n\"That's right. Get to it.\"\n\nShe began kissing down my body, over my sternum and between my breasts, while she massaged them gently. Over my stomach she went, until she reached my underwear. \"Oh, My Lady smells amazing.\"\n\n\"I'm glad you like it, baby, it's all for you.\"\n\nOff my boy shorts went, and Aly eased my legs apart while I relaxed into my pillow preparing for the heaven to come. My baby knew me well, that my nub couldn't take the direct contact quite yet, so she began to worship my sex, licking and sucking on my lips, penetrating my opening, caressing my hood. I looked down at her. Her eyes were closed, a look of serene happiness on her face, almost like she was enjoying this as much as I was. I couldn't get over that.\n\nGenerally the girls I'd been with had been so different. I'd seen looks of shame, of distaste, of fear, but never this, this total engrossment in my pleasure, not even from Gillian. It was the most beautiful thing I'd ever seen.\n\nMy breathing was coming in shallow gasps, and a few minutes later I knew I was ready. So did she, it seemed, and she pulled my clit into her mouth, wrapped it in her tongue and my world exploded in bliss.\n\n- Aly - \n\nOh, God, I loved this. Just immersing myself in Taylor's flavor, feeling her body moving against me, knowing I was giving My Lady, the most incredible woman on Earth, such pleasure made me almost giddy. I was worshipping my hero, and she deserved every ounce of joy, every measure of devotion I had.\n\nI don't know how many orgasms I gave her, but eventually she pulled me up into her arms, whispering how wonderful I'd been, how much she'd loved it, how happy I made her. I'm not sure which felt better, the loving words or the fingers stroking my clit, but either way I shuddered into a beautiful orgasm that was as much soul as body.\n\nTaylor held me to her, and her tummy gave a little rumble. \"Oh, is My Lady hungry?\"\n\n\"I haven't eaten since yesterday.\"\n\n\"Yesterday dinner? Or yesterday lunch?\"\n\nShe looked away. \"I don't want to talk about it.\"\n\nI glared at her. \"Taylor, sweetheart, you have to eat.\"\n\n\"Alright, fine, where do you want to go?\"\n\nWhy did this feel so good, holding each other, being close, without any boundaries? We talked it over, and I subtly tried to draw out what she wanted. This was going to take a little practice. I wanted her to be making the decisions, and I know she did too, deep down. But my handsome, powerful, magnificent butch was still a conservative girl from Idaho, where she'd been taught since childhood nice girls didn't make demands. Nice girls were deferential and accommodating, and, as far away from home as she'd run, things like that ran deep.\n\nWe ended up at a nearby New York style deli that I'd finally gotten Taylor to recommend. We were standing in line, our fingers interlaced, my other hand on her elbow. \"So what's good here, sweetie?\"\n\n\"I've never had anything bad. Do you like pastrami?\"\n\nI gave her a wide smile and nodded. It actually wasn't my favorite, although it was fine, but I really wanted her to order for me.\n\nShe looked down at me. \"How do you like it?\"\n\n\"Whatever way you think's best. I'm in your hands.\" I gave her an adoring smile. I could tell she wasn't exactly comfortable for a second, but eventually the corners of her mouth lifted and she nodded.\n\n\"Ok, you asked for it.\" One more customer and we were at the counter.\n\n\"How can I help you?\" The girl, who was wearing a nametag that said 'Katrina', looked at us, and I just grinned up at Taylor, who stepped up to the occasion.\n\n\"I'd like a turkey club on white, grilled, and a cup of beef and barley soup please, and she'll have a pastrami on rye with only spicy mustard, with a cup of the tomato bisque. Two drinks.\" We took a plastic number and went to find a seat. I took the cups.\n\n\"What do you want to drink, sweetie?\"\n\n\"Oh, um, Sprite, please.\"\n\nI filled the cups with ice and the lemon-lime soda. I set one in front of Taylor.\n\n\"Thank you, baby.\"\n\nI let my hand trail over her shoulder as I sat next to her. \"My pleasure.\" I flashed my eyes at her and dropped my voice. \"And thanks for ordering for me, My Lady.\"\n\nI sat down and ran my leg up hers, smiling widely. Taylor returned my grin and shook her head. \"You enjoyed that, huh?\" I nodded, which made her chuckle. \"And don't think I didn't notice how you got me to choose the restaurant, baby.\"\n\nMy smile widened as my cheeks heated up. \"So, I do have something I have to talk to you about. Remember how we were talking about my senior project? I want to ask you about it. I did a computer drawing, let me show you.\"\n\nI pulled my tablet out of my backpack and opened it to the images I'd shown the professor \"What do you think?\"\n\n\"Wow, Aly, this is amazing.\"\n\n\"See, I thought this could be the event room, here with all the windows, great view of the beach and water. Can you imagine a whole bunch of fancy dressed people, music playing, happy bride and groom, or bride and bride, whatever?\" I was grinning now. I really wanted her to be impressed, but I could see the wheels in her head turning. \"What are you thinking?\"\n\n\"You know what would be interesting? See how you curved this out?\" She pointed to the huge expanse of windows that ran around the third floor overlooking the ocean and beach. \"What if instead it were shaped like the bow of a ship, like it was ready to sail right off the coast and into the bay.\"\n\nMy eyes widened as I saw it. \"Yeah.\" I grabbed the stylus and started making notes right on the screen. \"And the top could be like a deck, with seating and tables.\"\n\n\"Sure, and a food court shaped like a cabin.\"\n\n\"Can you imagine the photos?\"\n\n\"It would be amazing.\"\n\nWe kept going, barely noticing when our food arrived. I did pause long enough to take a bite of my pastrami on rye, which was really good. Maybe the pastrami I'd had before had been second rate, or maybe it was because My Lady had ordered it for me.\n\nAs for the beach center, a lot of the technical things, like how much square footage would be needed for the command center, how big Jennifer's office should be, would be for another night. Now we were just doing the fun, creative stuff.\n\nAnd it was lovely. Taylor's mind was so quick, and she could look at a picture and almost see it moving. I knew she was imaging herself at the apex of the bow, riding the waves as the sea breeze whipped around her. She looked really good doing that in my head.\n\n\"Hey? Where'd you go?\"\n\n\"Hm? Oh, sorry, daydreaming.\"\n\n\"Not paying attention when I'm speaking? You want a punishment already?\"\n\nI pouted a little. \"I don't even get a few hours grace period?\"\n\nTaylor's eyes flashed and I hastily dropped my eyes. \"I'm sorry, My Lady.\" An excited thrill ran down my spine. And I shyly raised my eyes back to hers, watching her stern face morph into a wide grin. She put her hand behind my neck and pulled me into a kiss, one that I felt all the way down to my toes.\n\nAfter a moment she looked deep into my eyes. \"I forgive you, this time.\" She kissed me again and I couldn't help but giggle as the thrill of her proximity echoed through my body. We ate our lunch and talked about my project. My body never stopped humming from being next to her, which seemed to send my brain into overdrive. The exchange of ideas was incredibly natural, easy and productive. We spent about an hour after finishing our soup and sandwiches just going back and forth, and by the end I could really see it, the whole thing in my head.\n\nTaylor sat back and shook her head. \"Okay, no more work.\"\n\n\"That's fine. I've got it from here I think. Except I'll need to talk to Jennifer.\"\n\n\"We can call her tonight.\"\n\nWe went for a walk in a local park, our hands joining naturally as we did. Taylor casually mentioned she had to go grocery shopping at some point tomorrow.\n\n\"We can do that now, if you want.\"\n\n\"You want to spend our time at a store?\"\n\nI swung her hand back and forth. \"We can get something for dinner tonight, make it together. It'd be fun. There's a Trader Joe's just over there.\"\n\nTaylor grimaced. \"I'm more of an Aldi's girl. Lifeguarding, not as lucrative as you'd think.\"\n\n\"My treat, come on.\"\n\nAs we walked into the store, still hand in hand, I grabbed her arm and looked up at her. \"So what was your favorite meal as a kid? What did your mom make that you miss? You said she was a good cook.\"\n\n\"I don't like to think about it.\"\n\nI cocked my head to the side and gave her my best coquettish expression. \"But, we could start making some good memories.\"\n\n\"Fine. Beef stroganoff over mashed potatoes. Most people serve it over noodles, but when you're from Idaho, well, dad preferred potatoes.\"\n\n\"Do you have a recipe?\"\n\n\"Not really. I've never made it. Vicky makes it for me sometimes.\"\n\n\"Okay, well let's see.\" I pulled out my phone and did a quick search. \"How about this one?\"\n\n\"Sure, looks right.\"\n\nWe made a quick list based on what Taylor said she had in her kitchen, as well as picking up some potatoes. Meat, mushrooms, beef stock, a few seasonings and sour cream, and we headed back to Taylor's apartment.\n\nTaylor looked over at me as I drove. \"So do you cook at all, or do you leave that to the servants?\"\n\n\"We do not have servants, silly. We're not that rich.\"\n\n\"So your mother cleans her own house, your dad mows the yard?\"\n\nI gritted my teeth. No, that didn't happen. \"Okay, but we don't have a maid, it's a cleaning service.\" My blush deepened. \"And a landscaping service. But no one full time.\"\n\nTaylor gave me a 'See what I mean?' look.\n\n\"I'm sorry. Does that make me a bad person?\" I pouted a little.\n\n\"Oh, yes, and one that needs to be punished tonight.\"\n\nI stuck my lip out further. \"Really?\"\n\n\"Besides, I've been thinking about all kinds of delicious things to do to you.\"\n\nThat sent a shiver down my spine. I imagined myself helpless as she pinned me down making me pleasure her, her hands running over my body and ...\n\n\"Hey, hey, road, road!\"\n\nI snapped back to reality and realized I'd been drifting onto the shoulder. I gave a sheepish grin. \"Sorry.\" I made myself concentrate, but it wasn't easy with the area between my legs still tingling, and I breathed a sigh of relief when we pulled into Taylor's drive.\n\nWe carried in our groceries and put them away.\n\n\"So, Aly, you never did answer my question. You don't know how to cook, do you??\"\n\n\"Um.\" I twiddled my foot. \"Not really? I mean, I can do the basics, I know how to boil pasta and scramble eggs and stuff.\" I pulled out my phone and brought up the recipe. \"I mean, it can't be that hard. See, it's just sprinkling and coating. And saut\u00e9ing. We can saut\u00e9 things, right?\"\n\nTaylor laughed and shook her head. \"Yes, we can saut\u00e9 things. One of us actually can cook some. Why don't you get started peeling the potatoes while I prep the meat?\"\n\n\"Sure thing. Um, how exactly do I do that?\"\n\nIt was stupidly embarrassing, but after she showed me how to use the potato peeler I got the hang of it eventually. After a lot of mistakes and laughter, and a few eye rolls from Taylor at my pathetic cooking skills, we managed to get dinner made. It was the most fun I'd had all week, sharing stories from school and the beach as we ate. As we cleaned up, I let myself imagine what it would be like to come home to this every night. I was humming to myself, dreaming a little about warm June days and white dresses as I finished loading the dishwasher. Two strong arms wrapped around my waist.\n\n\"Hey, baby, was that good?\"\n\nI leaned back against her. \"Yeah. So what now?\"\n\n\"I'd say we need to digest some. Snuggle on the couch until I decide I'm ready to take you to bed.\"\n\n\"Yes, My Lady.\"\n\nShe slipped her arm around my waist and led me over to the sofa, where she sat down and pulled me into her lap. I laid my head on her chest as her arms went around me.\n\n\"Baby, what are you in the mood for?\"\n\n\"Something romantic. Something that's going to make me want to do fun things with you later.\" I kissed her on the cheek. \"You know, put me in the mood.\"",
        "\"So, I have to seduce you now? I thought you were already mine, whenever I want it.\"\n\nOops. \"I'm sorry, My Lady.\" A little nervous tingle ran down my spine.\n\n\"That's okay, baby.\" She kissed my forehead. \"We'll have some re-education later.\"\n\nYou have no idea how much I wanted to ask what exactly she meant by that, but I didn't. Instead I just said \"Yes, My Lady\" and snuggled in closer as the anticipation sent shivers down my spine. I didn't let myself look at the TV screen, instead planting a series of little kisses on Taylor's neck.\n\nTaylor purred. \"You're welcome to keep doing that, but it isn't going to change anything.\"\n\n\"Just pleasuring you while you choose a movie, My Lady.\" She chuckled, which made me do the same.\n\n\"Alright, this.\" She picked Crazy Rich Asians, which turned out to be a great show. I settled in between her legs and leaned back. As the movie progressed her hands started to wander just a little more and more. Eventually they slid underneath my tight T-shirt. I kept still, refusing to put any barrier between her hands and my skin. She ranged higher, and I leaned back into her.\n\n\"Raise your arms, baby.\"\n\nI obeyed immediately, and she lifted the garment up and off. She told me to lean forward, which I did, and she quickly unsnapped my bra and tossed it on the floor.\n\nTaylor pulled a blanket around us. \"Keep your hands on my legs, baby. I'm going to just enjoy you while we watch, understood?\"\n\nI gasped out a \"Yes, My Lady\" while she pulled a blanket around us and began fondling me.\n\n\"Are you liking the movie, baby?\"\n\nI shuddered as both of her hands massaged my breast. \"Yes, My Lady. It's funny.\" I tried and failed to keep my voice even.\n\n\"You sound distracted, baby. Maybe we should stop this and come back to it later, when you can concentrate.\"\n\nShe pinched both my nipples and I moaned. \"Whatever, oh god, whatever My Lady wishes.\"\n\n\"Yes, I think I want you now. And we have the little matter of your correction.\" Her hand came up to my neck and pulled my head back. My Lady's tongue traced along my ear, making me whimper. \"I don't want any interruptions, so go use the bathroom, then remove the rest of your clothing. Lie on your back in the middle of the bed, hands over your head, feet together and extended. Understood?\"\n\nShe hadn't stopped caressing my breasts, but I managed to nod and squeak out an affirmative.\n\nSuddenly she let me go, and I stood and dropped the blanket. I tried to control my breathing as I made my way to the bathroom, stumbling a little in my arousal. My panties were already soaked and they peeled away from my skin as I pulled off them and my jeans. After finishing with the toilet I went back to the door and stood there for a moment.\n\nThis was it. I'd done what I could to give myself to Taylor before, but this was going to be different. I was going to put myself in her hands, and accept whatever she wanted to do to me. I absolutely trusted her to adhere to the things we talked about, but still, it was scary. I took a deep breath and exited.\n\nTaylor was standing at the edge of the bed, wearing only her panties. She looked magnificent, making my mouth water, but I dared not meet her eye. I kept my hands folded in front of me and I walked slowly to the bed. I climbed on the mattress and took the position that Taylor had ordered, folding one hand into the other near the metal-worked headboard.\n\nI looked up at the ceiling, my heart trying to pound out of my chest. I sensed Taylor get on the bed, but I continued to not look at her. She went to the headboard, took one of my wrists and latched the padded handcuffs we'd bought at the adult toy store around it. The chain ran around one of the metal bars and she attached the other side to my other wrist.\n\nA quick check told me I couldn't lift or retract my hands. Taylor seemed satisfied. She ran her fingers down my arm and over my cheek, continuing to my neck and between my breasts. \"Okay?\"\n\nI nodded, my eyes finally meeting hers, which made me suck in a breath. She was looking at me with a hunger I'd never seen. Her fingers traced around my pussy without actually touching it, and she straddled my legs, her butt resting just above my knees. I couldn't move at all. She reached out and caressed my body from shoulders to hips and I moaned out loud.\n\n\"Now, do you remember why we're doing this, baby?\"\n\n\"Yes, My Lady.\"\n\n\"Good.\" She reached over and picked up something off the nightstand. \"Lift your head.\"\n\nI did as I was told, and Taylor slipped a padded blindfold over my eyes. \"Now tell me why.\"\n\n\"I did not pay attention to My Lady when she was speaking to me.\"\n\n\"That was a small thing. There was another, far more important issue.\" Her hand caressed my cheek, running gently down over my neck and between my breasts. I shuddered from head to toe.\n\nI forced myself to speak. \"I implied that My Lady had to seduce me.\"\n\nShe softly worried one nipple between her thumb and finger. I bit my lip to keep from crying out in pleasure. \"That's right. Do I have to seduce you, baby?\"\n\n\"No, My Lady.\"\n\n\"That's right.\" She slipped a finger into my sex, sliding it over my swollen clit. \"So as punishment, I will be doing anything and everything I want to you, but you aren't going to cum until I say you can.\" She increased the pace on my nub, and I began to shake. Every inch of my body felt electric, and I had no idea how I was going to hold back an orgasm for even five minutes.\n\n\"Oh, yes, My Lady. Ah-ha-ah!\" Just as I approached the tipping point she pulled her hand away.\n\n\"You're so wet, baby. But it's going to have to wait. I have a toy I want to try out.\" She ran her hand up my side and over my underarm. I squealed and tried to pull away to no avail. I felt her shift on the bed, and I remembered our trip to the adult toy store and that feathered wand. Oh, crap.\n\nIt first touched me under my left arm, the softest whisper of contact, making me shiver. My breath came in gasps as it moved slowly down my side, giggles turning into squeals as I futilely tried to kick my legs and move away, but her weight on my thighs and the shackles holding me to the bed meant I could do nothing but endure the sweet torture My Lady was inflicting on me. Over my stomach, across each breast and up the other side it went, tears forming in my eyes as I laughed and screamed. At least I could shield my neck when the blessed, bloody thing approached, clamping my chin down to my shoulder.\n\n\"No, no, baby. Lift your chin.\"\n\nI gave a most pathetic whimper, but My Lady was unmoved.\n\n\"Now, baby.\" Two fingers gently hooked underneath and a tear rolled down my face as I exposed my neck, my body trembling violently, teeth clenched and covered eyes closed tight.\n\nThe feathers tickled over my shoulder and across my chest before reaching my neck, and not covering up was the hardest thing I'd ever done. I don't think I could have done it without Taylor's gentle hand holding me, but somehow I endured.\n\nShe leaned down, her heat filling me as I screamed and kicked and suddenly, just as I felt I was going to break the feathers were replaced by My Lady's perfect lips.\n\nEvery inch of skin felt alive, crackling with the need to be touched and soothed. My squeals turned instantly to moans of pleasure. The cuffs continued to hold my wrists, and I wasn't able to touch her and hold her, which was making me crazy. Her lips moved slowly down my body, taking one of my breasts between them. My Lady's tongue and teeth swirled and nipped, my wanton coos urging her on. She switched from one to the other as I strained against the chain holding me, the most exquisite pleasure pulsing from my nipples down into my soaking sex.\n\nFinally My Lady's mouth moved to the valley between my breasts and started working down over the soft skin of my belly. Suddenly free, my legs spread and encircled her just below her behind, which slid under my heels, as did the smooth skin of her back as she went lower.\n\nShe kissed the inside of each of my thighs, and then just outside of each outer lip. Her breath teased my sex for a moment before a finger trailed over my clit and down into my soaking wet cleft.\n\n\"Now, baby, I'm doing this because I love the way you taste. This is about my enjoyment of your flavor. You are not to come. Do you understand?\"\n\nHoly shit, I didn't know if I could do that. My entire body was humming and she'd barely even touched me yet. But what else could I say?\n\n\"Y-Yes, My Lady.\"\n\nI laid my head back on the pillow, trying to relax and control my breathing. Taylor's lips hovered above my sex for a heart stopping moment before her tongue parted me and swirled over my clit, pulling a long, desperate moan from deep inside me. This was going to be the hardest thing I'd ever done.\n\nI tried to push the feelings back, but I would not move my body away from that wonderful tongue. I had to continue to offer myself to My Lady. Her pleasure, not mine.\n\nShe swirled and danced through my soaking wet folds, sliding down to my core, where she rimmed the entrance to my vagina, just the way she knew I loved. My whole body was trembling, and I heard her sigh as she pushed her tongue as far as possible into my tunnel.\n\nMy eyes were open wide, staring desperately, sightlessly into my blindfold as wave after wave of pleasure coursed through my body. I felt every lick and swirl all the way into my fingers and toes, but I did not come. I knew I wouldn't, as long as she contented herself with my opening. My clit was another story, and as she started back up my cleft I knew I was in trouble. My hands held the metal bars of the headboard in a death grip, my body screaming for release as Taylor pulled my clit into her mouth.\n\nGently she suckled and caressed my nub, and moment-by-moment I tried to hold back my climax, but despite my efforts it crept closer and closer. A tear slipped free from my eye. \"My Lady, I can't stop it, I'm going to co...oh...ohh!\" And just as I began to break she pulled away. My body screamed in protest at the loss of stimulation as my breath tried to catch up, the tension of my near climax draining away, leaving literal, aching need in its place.\n\nMy voice was a pathetic whine. \"Oh, God, please, My Lady.\"\n\n\"Please what, baby?\" She reached up and stripped off my blindfold, her lovely face hovering just above mine, the most beautiful thing I'd ever seen.\n\nSomehow the rational part of my brain got through to my overwhelmed body, and remembered I was not supposed to orgasm. \"Please, did you enjoy yourself?\" It was not convincing, but it made Taylor smile.\n\n\"Yes, I did. And it looked like you enjoyed yourself more than you should have. Did you come?\"\n\nI shook my head. \"No, My Lady, I didn't. I promise.\"\n\nShe stroked my cheek, making me sigh and lean into her hand. \"That's good, that's as it should be. Why?\"\n\n\"Because My Lady's pleasure comes first.\"\n\n\"That's right. I'm going to uncuff you, and I'm giving you permission to pleasure me. And I expect you to take your time and do a thorough job, understood?\"\n\nI nodded quickly. \"Yes, My Lady. I'll do a very good job, I promise. I love you.\"\n\nMy Lady's face softened, and she gazed at me with such tenderness it almost broke my heart. God I'd do anything for her, absolutely anything just to get another moment where she looked at me like that. \"Oh, baby, I love you, too. So much.\" She leaned down and kissed me as I whimpered in joy at the contact. As her lips moved against mine her hand slid up my arm. She broke away, undoing my cuffs. \"You may begin, baby.\"\n\nMy mouth was watering and my eyes wide as I drank her in. I wrapped my newly freed arms around her strong body and buried my face into Taylor's neck. Her whole body shuddered as my lips began to suckle at her soft flesh. Taylor's fingers twined through my hair, holding me to her as her other arm slid around my back.\n\nShe rolled onto her back, bringing me with her. She was moaning softly, and I knew she was loving this, so I took my time, refusing to speed things along. I moved slowly around to the other side, giving little pecks and licks along the way.\n\nWhen I settled in Taylor gave a lusty moan as she realized I was going to give the same service to this new area. After only a minute or two her whole body was trembling beneath me, and I knew My Lady was completely lost in the pleasure I was giving her.\n\n\"Oh, god, baby, please, I need more, please.\"\n\n\"Yes, My Lady.\" I didn't care that she'd let her Dom persona slip a little. I just wanted to make her happy. I kissed lower, past her collarbone and across her strong chest, up and over where her breasts began to rise. Her head lolled back and she pushed her chest up as I captured one of her nipples. I spent a long time working them with my tongue and gently with my teeth, just the way I knew she loved. Slowly, back and forth I went as she lovingly stroked my hair. Finally after some length of time, I was so lost in her I had no idea how long, she placed her palm on top of my head and gently pushed it down.\n\nI gave a shudder in anticipation. I was finally heading to the place I wanted to be. Still I took my time, worshipping every inch of My Lady's firm stomach, rimming her navel, making her laugh and squirm. I licked along the crease where her leg met her torso before kissing up the sensitive skin of her inner thigh. The aroma emanating from her sex was making me crazy. I needed to taste her, but somehow I held off as I moved up her other leg.\n\nFinally I headed back down towards my real goal, wrapping my arms around her powerful thighs and centering myself for the job at hand. Nectar was running out of her opening and down over her cheek and leg, and her clit and lips were swollen with need. I ran a finger slowly down her sex, making her suck in a breath.\n\nTwo fingers caressed either side of her hood, earning me another shudder, and I looked up at My Lady's face. Her eyes were closed, mouth opened in ecstasy as her face shone with pleasure. I grinned and leaned forward, pushing my tongue deep into my lover's core. My eyes rolled back as her flavor cascaded over my senses, and I was in heaven. My lady moved gently beneath my touch, and I came closer and closer to her sensitive clit.\n\nOne of Taylor's hands reached around and held my head to her. My tongue stroked around her hood, feeling the small, erect shaft underneath. I gave the protruding nub a little flick, making her jerk, but still pull me in closer. She was ready, and I wrapped my tongue around her clit, and My Lady began to cry out and jerk against me.\n\nI held on for all I was worth as she shuddered and bucked for several minutes before she exploded into orgasm. When she came down I kept going. She'd tell me when she'd had enough, and I had every intention to continue until that time.\n\nShe came several more times, how many I wasn't sure, I too lost in what I was doing to count. After her most recent trembling passed she finally pulled away, breathing heavily. Her fingers hooked under my chin and pulled my face, coated in her juices, up for a kiss that left me as breathless as she was.\n\nTaylor could only keep it going for a moment before her head flopped back into her pillow. I buried my face in her neck and suckled gently as she held me close.\n\nAfter a few blissful moments she started stroking my hair. \"Baby, look at me.\"\n\nI lifted my eyes to hers. \"Did I please you, My Lady?\"\n\nShe smiled that special smile, my smile. \"Oh, yes. You were wonderful. You're always wonderful.\" She ran her hand down my side and over my hip, circling around my thigh and opening my legs. \"Have you learned your lesson, baby?\"\n\nHer fingers slowly traced further up towards my sex, which almost instantly remembered its earlier, aching, unsatisfied need. I started to shake. \"Yes, My Lady.\"\n\n\"Good.\" Her thumb traced my outer lips, making me gasp. \"What have you learned, baby?\"\n\n\"That My Lady's pleasure is hers to command, and my privilege to provide.\"\n\nHer finger slipped into my cleft, gliding along my slick inner labia. \"Very good. And?\"\n\nI desperately tried to speak through the pleasure coursing through my body. I looked into her eyes. \"Her baby's pleasure is My Lady's to give, when and only when she wishes. And I will receive it gratefully. Ohh!\" My head lolled back as I tried to push away the feelings racing through me.\n\nTaylor's hand cupped the back of my head and pulled me back. \"Don't look away.\" I nodded my assent, somehow finding the strength to stare into My Lady's heartbreakingly blue eyes. \"Would you like your pleasure now, baby?\"\n\nHer finger slid into me, and a tear rolled down my cheek. \"Only if My Lady wishes.\"\n\n\"I do. I do wish it. Come for me, baby. I love you.\" My Lady added a second finger, stroking my G-spot while the heel of her hand rubbed over my clit. I'd expected to immediately burst into orgasm, but that wasn't what happened. It took almost a minute for me to release the control I'd been keeping on my pleasure. And there was the fact that what was building inside me was so intense I was almost afraid to give myself over to it.\n\nBut eventually it came and I screamed my bliss out into the night. Pulse after pulse, I couldn't think, couldn't breathe; I could only exist in a world of pure ecstasy. Spots danced in front of my eyes as it continued, and if it had lasted a moment longer I think I'd have passed out.\n\nTaylor held me to her as I recovered, tears running down my face from the intensity of the feelings. Aftershocks shook my body every time I moved. \"Sh, sh, sh, baby, I've got you. Are you okay?\"\n\n\"Just hold me.\" Taylor pulled me tight and I began to relax into the touch of her skin. I took a deep steadying breath while she stroked my hair.\n\nA gentle kiss on my forehead, making me purr. \"Aly?\"\n\nI looked up at her, a serene smile on my face. \"Hmm?\"\n\n\"Will it ruin the mood if I ask you a question?\"\n\nI giggled and pecked her on the chin. \"No, sweetheart.\"\n\n\"How did I do? You know, with the whole being in charge thing? I was really trying.\"\n\nThe innocence and earnestness in her voice made me laugh. \"You were perfect. I was excited and scared, all in just the right way. But I could always tell that you cared.\" I'd started to get emotional as I spoke, and a sob broke free from my chest as I finished. \"That you loved me.\"\n\nI saw Taylor's face shine with joy for a second before she pulled me close. Our lips found each other and I melted into her kiss. Finally I broke away, looking into her eyes as I stroked her short, blonde hair.\n\n\"Did you have a good time, Taylor?\"\n\nA dazzling smile spilt her face. God, she was so gorgeous. \"Oh, yeah, that was amazing. Having you all helpless, the way your eyes were begging me, I can barely describe it.\"\n\n\"That makes me really happy.\"\n\nI giggled as she kissed my nose. \"I, um, I was nervous about it, if I could be what you wanted. I even talked to Jen and Vicky. But that was so easy, like breathing. Why is it so easy to be me around you?\"\n\nShe kept talking, telling me about the things she'd been thinking about, what had worried her going into tonight. I just stared at her. Her face was so different. I'd never seen her so relaxed and engaged. Walls I hadn't even realized she'd been holding were down. It was beautiful to see.\n\nEventually she stopped speaking and looked at me as I gazed adoringly into her eyes. \"What? Why are you looking at me like that?\"\n\n\"Because you're beautiful, and I can't believe I'm here with you, that I get to be this lucky.\"\n\n\"We both got lucky.\" Taylor laughed. \"That's cheesy, isn't it?\"\n\nShe was still wearing that smile. \"I don't care. Cheesy's fine.\" I snuggled closer. It's more than fine. It was then, in her arms, that I knew Taylor Knox loved me with all her heart. I loved her, I had for a while, but a part of me had always assumed she meant more to me than the reverse. Maybe because she'd known she was gay for longer, had been with more women, or was just older and wiser. Maybe it was just that I couldn't imagine a silly, sheltered college girl could mean anything to a world wise woman like Taylor.",
        "But I did. She loved me. The realization made tears roll out of my eyes. I had to assure her there was nothing wrong, even as my mind was reeling, trying to comprehend how I could be worthy of the goddess embracing me. But she said I was worthy. She chose me. A month ago I had no idea she existed. Now she was the center of my world.\n\n- Taylor -\n\nMy hand shot out, grabbing the safety rail in my shower, thanking whatever foresighted soul had decided they needed to be there. My head was thrown back, the warm water sluicing down my body as the gorgeous young woman who'd shared my bed last night knelt in front of me, her talented tongue dancing around my clit and soft, perfect brown eyes stared up at me.\n\nI pulled in a long shuddering breath. My hand rested on Aly's wet hair, and as my orgasm approached I fantasized about what it would be like to have her every morning with me, every night warm against my body. I slept better when she was here, I woke up smiling and happy, a rarity for me, I assure you. A few moments later the first strong pulse of my orgasm wiped all conscious thought away while I moaned lustily into the spray of the shower. When I'd finished Aly stood, kissing her way up my body before grabbing the shower sponge and beginning to wash me. I let my already tingling skin enjoy every touch of my lover.\n\nI stirred the eggs in the pan while the whir of the hair dryer sounded from the bathroom. I caught myself humming as I did, making myself stop. I hadn't done that in years. I remember mornings at my grandmother's house, how she would sing as she made breakfast, or do her knitting. I loved listening to her sing. My father would stop me cold if I tried to imitate her.\n\n\"You are a girl, not a canary.\" He rarely stood for anything that brought us joy, to his daughters in particular. Joy in my house was scarce growing up, but I felt it now. When Aly came into the kitchen I couldn't help the smile that it caused, and I felt the kiss we shared right down into my toes. But all too soon it was time for her to head back to school again. I waved as she drove away.\n\nThe darkness threatened to close in, but I just remembered Aly's face, the way she'd looked at me when she'd woken up in my arms, or how it had felt to dominate her last night. I shuddered at the thought of it; how I'd had her cuffed to the bed, blindfolded, totally mine.\n\nI laughed out loud, long and from the diaphragm. I needed to create. I suddenly wanted to get to the warehouse so badly I almost didn't make it back up the stairs. But I really should take a lunch. Aly would scold me if I went without eating all afternoon again. I may be Her Lady in bed, but I don't think she'd stand for anything she felt wasn't healthy for me. It was weird to be cared about like that again.\n\nI stored a sandwich, chips and a few pieces of fruit into my side compartments and headed off through the Southern California sunshine. When I arrived I glanced down at my phone, where there was a text from Aly\n\nAly -- I miss you\n\nA kissing emoji and several hearts followed it. If anyone had told me two months ago that I'd be playing kissy face over text with a college girl I would have laughed at them. Or maybe punched them in the mouth, depending on who it was. Now I was blushing at just the thought of her. I never thought I'd feel like this again. Oh, what the hell.\n\nMe - Miss you too.  Remember, no pleasuring yourself without my permission.  I'll know.  I added a stern emoji.\n\nAly -- Yes, My Lady. \n\nShe added a submissive emoji, one with downcast eyes, which made me chuckle.\n\n\"What are you grinning at, Knox?\"\n\n\"None of your damn business, Bishop.\"\n\n\"It's that girl, isn't it? The one you're sculpting inside. You going soft?\"\n\n\"It's called dating. You should try it sometime, if there's a woman on the planet that'd put up with your arrogant ass for a few hours. Without monetary compensation, that is.\"\n\n\"No really, it's not a bad idea for you. Getting your heart broke. It's good for your art.\"\n\nI gave him my best dirty look and went into the warehouse, heading straight for my work area. I started fusing with the things on my workbench, trying to ignore what Bishop had said. Aly wasn't going to break my heart. She loved me. I pulled the tarp off from Aly's sculpture.\n\nI heard a dry laugh behind me. \"Still working on that, huh. Too bad you weren't around yesterday when Beville was here. Hope your roll in the hay was worth it. He even asked about you.\"\n\nI turned around slowly. \"He was here asking about me?\"\n\n\"Yep, but I told him you'd been slacking, not working as hard. Got some new tart in your life, off living it up instead of working.\" He gave a sidelong grin. \"He was impressed with my stuff though. Toodles.\" Bishop walked away, still wearing that self-satisfied smirk.\n\nI briefly considered going over and breaking his nose him for calling Aly a tart, but I decided that it wasn't worth losing my workspace over his stupid mouth. I went over to the little lounge area and put my lunch in the fridge, before heading over to my workbench. Maximillian Beville had come out to see me. Well, I'm sure he looked at a lot of the worked being done here, but still.\n\nHad he really asked about me? Or was Bishop just pulling my leg to get a rise? Ah, who cares? I needed to finish my pieces. I sat down heavily, pulling one of my sculptures over to me. I glanced down the line of them, noticing a small, light green piece of paper sticking out from under 'Pacifica,' the one of a woman floating on an unseen breeze.\n\nI pushed my wheeled stool down to that end and pulled it out from under the sculpture. It was personalized stationery from one Maximillian Beville with a handwritten note.\n\nMiss. Knox,\n\n \n\nI'm sorry I missed you today; your work here is very impressive.  It is far superior to much of what I've seen from you in the past.  As tempted as I was, I did not look under your tarp, but given what I did see, I'm excited to see it revealed.  If you will allow a suggestion, please enter this piece into the competition at the October Fair.  It is sublime.\n\n \n\nSincerely,\n\nM. Beville. \n\nMy mouth was hanging open by the time I'd finished reading it. I looked at the peace. The faceless woman seemed to be flying, arms thrown back, completely supported by the wind, robe rippling behind her. But when I saw her, she wasn't faceless. It was Aly flying, her countenance one of serene surrender, the same look that was developing on the large sculpture under the tarp.\n\nI grabbed out my phone and hit Aly's icon almost without thinking. I was just realizing that she was probably in class when she answered.\n\n\"Hey, sweetheart. What's up?\"\n\n\"You're not in class?\"\n\n\"Starts in five minutes, so talk fast.\"\n\nI could hear that she was grinning. How was that possible? I quickly told her what I'd found and read her the note. She told me how proud she was of me, which made my insides swell up with pride. Unfortunately we could only talk for a moment, and soon I was just staring at the piece. It needed a face. I reached under to my refuse bin and pulled out a scrap of ultra thin copper, fixing it with some clips. I grabbed my finest shaping tools and set to work.\n\nI worked for over six hours, going through 5 different attempts before I was happy with what I had done, but there it was. Aly, flying through the air, riding on a current of wind. Her eyes were closed, mouth slightly opened as she drew in a breath of sea air, chin lifted in pleasure.\n\nIt's what has been missing from my work, from my life. Aly. I pulled over a second sculpture. This one was a rock face, being violently struck by an ocean wave. It needed a figure on it, to give it perspective. That was going to be tricky. I never did remember to eat my lunch.\n\n- Aly -\n\nSeveral weeks later it was Tuesday morning again, and I took care to put on some lacy undies and a matching bra that Taylor would like, along with a pair of nice, tight jeans and a semi translucent top. I twirled in the mirror. Yeah, very good.\n\nI heard the door open and Sadie walked into the room in her bathrobe, setting her toiletries down on the dresser. \"So, I won't see you again until tomorrow, huh?\" It had quickly become my pattern to disappear immediately after my Tuesday morning class. It hadn't gone unnoticed and everyone, especially Macie and Evelyn, were highly curious as to where I was going.\n\nI was excited that this was the finally the second week of October, and Rush and initiation were over, which meant I wasn't beholden to any official weekend functions until the Christmas Ball, which meant I might get to see Taylor more often than just Tuesdays.\n\nI was really looking forward to next week, which was our fall break. It corresponded with the art fair that Taylor had been looking forward to, and I was going to get to help with Taylor's booth. I hadn't been back out to the warehouse, but I knew that Taylor was pretty happy about how things were coming, and she'd been out there every night for the last several weeks, except for my Tuesday afternoons\n\nSadie sat down on her bed. \"You know, all the girls are speculating on your paramour. It's driving Macie absolutely batty.\"\n\n\"Well they can just keep guessing. I think I'll be keeping it to myself.\" Sadie opened her mouth to protest, but I cut her. \"I know I shouldn't have to. Is it that bad?\"\n\n\"Are you ashamed of it?\"\n\nI grimaced a little. \"No, but I'm a little scared. I mean you saw how Macie reacted. I think I'd get a lot of fake smiles and behind the scenes distancing.\"\n\nSadie nodded. \"Yeah, I can see that.\"\n\n\"The sad thing is, I'm not any different. I always knew that in my head, y'know, that gay people weren't any different, but now I really understand it. The only thing different about me is that I'm in a great relationship and I'm really happy.\" I sat down on my bed. \"But I'm also nervous all the time and I have to walk on eggshells around here or when I talk to my family. That's the part that really sucks.\"\n\n\"You know, there's only one way to fix it.\"\n\n\"Yeah, yeah.\"\n\n\"I'd start with your parents. If you don't want to come out here, you don't have to, and after we graduate you probably won't see most of these people ever again. But your family's different. I think you'd feel so much better if they knew. And they're cool; they're not going to give you a hard time about this. And there is that trump card, y'know? About Taylor being the person who saved Kelsey's life?\"\n\nI grinned. \"That's true.\" Glancing at my phone told me I needed to head out. I had a hard time concentrating on my professor, but I think I got the gist of what she was talking about in my notes.\n\nJust a few hours later I was lying in Taylor's bed, reveling in her strong arms, which were holding me after the very thorough fucking I'd just received. When I'd arrived she'd been wearing only a pair of panties and The Captain, and she'd immediately ordered me strip and get on all fours on the bed. I was a little disappointed, because the panties meant she was on her monthly, and how she let me service her was going to be significantly curtailed today.\n\nBut lying here as she stroked my hair and held me close, it was nice. I did need to tell my family, though, and I would, right after the art fair. I'd schedule something, a dinner maybe, to introduce everyone. I had a vision of Taylor at Thanksgiving, our feet gently touching under the table as she talked with Kelsey or my dad, or me cuddled up with her around the tree at Christmas as we all exchanged gifts.\n\nJust thinking about it made me tear up a little.\n\n\"You okay, baby?\"\n\n\"Oh, yeah, just thinking about stuff. Are you hungry?\"\n\n\"Naturally.\"\n\nSoon we were sitting outside a little mom and pop diner. Taylor was attacking a greasy burger and fries, which I admit looked a lot better than my chicken salad sandwich. I snitched one of the crispy potatoes off of her plate with a coquettish smile. She gave me a stern look, which made me shiver inside.\n\nI chewed the fry, my smile widening.\n\n\"You are cruising, you know, baby.\"\n\n\"Promises, promises.\"\n\n\"Ohh, we'll deal with that later.\"\n\n\"Yes, My Lady. So are you ready for next week?\"\n\nTaylor's face morphed instantly from the stern look of My Lady to the far more unsure one of the artist inside. \"Yeah, I think so. I'm just doing finishing touches on everything now. I could set it out tomorrow if I had to.\"\n\n\"Are you happy with it?\"\n\nTaylor made a face and shook her head. \"No, and yes, sometimes.\" She gave herself a shake. \"Every once in a while I look at some of the pieces and I think they're good, maybe really good. And then sometimes all I see are the flaws and I wonder why I even try.\"\n\n\"No artist is ever happy with their own work? Is that it?\"\n\nTaylor looked sheepish. \"Maybe. Clich\u00e9d, huh?\"\n\n\"I think you're amazing. The most talented artist in the world.\" The side of her mouth quirked up, eyes laughing at my hyperbole. \"You think I'm kidding? I don't kid about things like that.\" I went around the table and climbed into her lap.\n\n\"Aly, what are you doing?\"\n\n\"Trying to explain how amazing you are.\" With that I kissed her deep and long. Taylor was tight for a moment, before relaxing into our embrace. In a tribute to the liberality of LA, no one even looked disapprovingly at us, and I had my love grinning at me as I broke away. \"Now, you should take me to see all this amazing work you've been doing before you bring me back to your apartment and ravish me.\"\n\n\"Your wish is my command, baby.\"\n\n***\n\nTaylor was lying on her back, her arm stretched over to my side of the bed as I rested my head on her shoulder. She was asleep, and so beautiful. I just couldn't help staring. My legs shifted slightly under the covers, feeling the pleasant soreness between my thighs. Taylor had been a woman on a mission when she'd gotten me home. She'd made it very clear that it was all about me tonight, and that she expected me to fully enjoy it. And once I'd relaxed I so had.\n\nI gazed at Taylor's face, sliding my hand over her middle. The things she'd shown me at the warehouse were amazing. The metal seemed alive in a way that it hadn't quite before, and I'd been duly impressed, cooing over almost every piece. And no part of my praise had been feigned.\n\nAs I'd been admiring one particular piece she'd slipped her arms around me and breathed a kiss onto my neck. \"You're my muse, you know. I can only do this because of you. I love you.\"\n\nMy emotions had overwhelmed me for a moment, and my eyes had burned with tears. And now lying here in her arms I felt ashamed and unworthy. I had the most amazing of women in my life, but I didn't have the courage to tell anyone about her. I mean Sadie knew, but no one else. I hadn't had the courage to tell my family or my sister at the house. I told myself as soon as the art fair was over I was going to introduce them. I was, even if it filled me with bone deep terror.\n\nWhen Taylor woke up I pulled her into a deep kiss before snuggling as deeply as possible into her embrace. \"Wednesday mornings are the best.\"\n\n\"Mmm, no arguments, here, baby. I hate waking up without you.\"\n\nI looked up at her. \"Really?\"\n\n\"Yeah.\" She stroked my hair, making my eyes close as I sighed and leaned into her hand. \"My baby makes everything better when she's here.\"\n\n\"I exist to please My Lady.\" Reading it back now it sounds corny, but in that moment I spoke with absolute sincerity, and watching her face melt into an expression of pure love and adoration was the most glorious thing I'd ever witnessed. She rolled me onto my back, her kiss deep and passionate, and slowly she worked down my body. She pleasured me slowly, sensually, and by the time my body seized in orgasm I was completely lost in the wonder of her.\n\nUnfortunately I did have to shower, and I knew Taylor would not let me bath her while she was still bleeding. I would have done it, of course, but she was shy. My big, tough butch, embarrassed about a silly thing like that. She was adorable.\n\nAs we sat for breakfast I decided to bring it up. \"Taylor?\"\n\n\"Mmm?\" She sipped her cup of coffee.\n\n\"Can, uh, I'd, um, I want to introduce you to my family.\"\n\nHer expression was uncertain. \"Are you sure?\"\n\n\"Yeah, absolutely. I mean, I want this to last. Don't you?\"\n\nHer eyes widened. \"God, yes. That's not, I mean, I just, I want you to be ready.\"\n\n\"I am. I'm ready. I love you.\"\n\n\"Okay.\" Another casual sip of java.\n\n\"Okay?\"\n\n\"Yeah. Let's do it.\"\n\nWe agreed that after the fair I'd set up a dinner, and she would see about getting away from work early on a weekend.\n\nEventually, though, I had to leave Taylor's arms and kisses behind and head back toward my real pretend world of college. My phone binged a couple of times while I was driving, but I was good and didn't check them until I parked on campus. I was a little early, so I headed into the classroom and sat before pulling out my phone. There was one from Taylor, which made me blush and giggle, one from Sadie saying she was meeting with a study group during lunch, and one from my mom, asking me to call.\n\nMy class was good, but I was famished by the end of it. Taylor had really worked me over last night, after all. I was also remembering the greasy burger she'd had for lunch yesterday, so I headed for a little campus diner for one of those. After ordering and sitting down I decided to try mom. Her schedule was so unpredictable that any time could be good or bad. But this time she picked up after the first ring.\n\n\"Hey sweetie.\"\n\n\"Hi mom, what's up?\"\n\n\"It'll be quick. Kelsey's finally talked your dad into that pool party. Is there any chance you're free Saturday afternoon? I could really use an extra set of hands.\"\n\nI did a mental check of my schedule. \"Yeah, what time do you want me?\"\n\n\"Well, the party starts at three, so, maybe noonish? I'll feed you.\"\n\nI laughed. \"Sure, mom, I'll see you then.\" OK, good, this was perfect. I'll talk to them this weekend.\n\n***\n\nBy four o'clock Saturday my parent's house was completely overrun by teenagers. Kelsey was wearing the orange bikini I'd bought her on that fateful day, and she was splashing around in the pool. I wonder how exactly that conversation had gone down.\n\nBut it was good to see my sister having fun. I know the parental units had her seeing a counselor to make sure there were no after effects from her near death experience, but she seemed to be doing fine. She was in the water, playing with her friends. Our backyard pool wasn't exactly the Pacific Ocean, but I'd honestly wondered if she'd want to get into any body of water bigger than a bathtub ever again.\n\n\"Sweetie, can you go help your dad?\"\n\n\"Sure, mom.\"\n\nWe'd been going non-stop since I'd gotten here, so I hadn't had a chance to talk mom or dad about Taylor. Not that I was terribly eager once it came to it. Whenever I even thought about it my heart would race and I would happily tackle the next task, even if doing so made me curse the fact my mother refused to hire a party company for setup and catering like a normal person. My dad was just excited to be able to grill large quantities of meat.\n\nI headed out to the garage, where dad was digging something out of the chest freezer. \"Hey, sweetie, could you grab that empty box?\"\n\n\"Yeah, dad.\" He began loading in frozen burgers, brats, and hot dogs, and I had to shift my arms to hold on.\n\n\"Too heavy?\"\n\n\"No, I got it.\"\n\n\"Ok, that's all of them. Let me take that, sweetheart. Can you get the buns?\" He nodded toward several milk crates filled with bread. I gathered them up and followed him out to the back patio, where the sound of teenagers shouting and laughing, along with the pulse of the latest bubblegum pop, assaulted my ears. Too bad my sister didn't have my much more refined, collegiate tastes in music.",
        "I ran errands back and forth to the kitchen, getting clean platters, condiments, utensils and other sundries as needed. Mom mostly sat near the pool, making sure nothing got out of hand.\n\nAs I came out with the relish from the fridge Kelsey came running up. \"Aly!\"\n\n\"Hey, sis, having fun?\"\n\n\"Yeah, it's great.\" She looked back over at the pool and twisted her foot. \"Just, um...\"\n\nI smiled at her. \"Which one is he?\"\n\nShe grinned shyly and pointed to a young man playing water basketball with several others. \"Devin, there.\"\n\nThe brown-haired head went up strong and dunked the ball through the little plastic rim, revealing a lean, reasonably muscled torso. He raised his arms in triumph as he came down, letting out a whoop as his friends splashed him for good measure. My sister actually sighed, which made me giggle.\n\nI put on an affected air. \"Wow, he is dreamy.\" Kelsey gave me a pained look, so I shook my head. \"What's the problem?\"\n\n\"I've been trying to get him to notice me.\"\n\n\"Just give him a walk by.\"\n\n\"A walk by. Walk past him look back over your shoulder and say 'Hi, Devin'. Then keep going. Give her a good look at the bottom half of your swimsuit.\"\n\nShe nodded and ran back off toward the pool to talk to one of her friends. I went back over to my dad.\n\n\"What was that about?\"\n\n\"Your worst nightmare.\"\n\n\"A boy?\"\n\n\"Bingo.\" I pulled a Diet Coke out of the cooler and popped it open.\n\nLooking back at the pool I watched, completely amused, as Kelsey performed a perfect walk by flirtation. Poor Devin looked like someone had hit him over the head with a rubber mallet as he watched my sister stroll casually past. Damn, she was a natural.\n\n\"You never gave me problems like this at her age.\" My dad flipped over a row of burgers. \"Can you season the next batch, Aly?\"\n\nI took the Montreal Steak Seasoning and started sprinkling it over the meat. \"What do you mean? I had boyfriends.\"\n\n\"Yeah, but you never mooned over them. They didn't seem to consume you like they do your sister.\" He leaned close to me. \"You have no idea what she's been like the last few years. It's all she can talk about.\" I smiled at him. \"But you have a new beau now, I hear. Still dating the lifeguard?\"\n\nHeat rose in my cheeks as I nodded.\n\n\"Your mother wants to meet this new flame, you know.\"\n\nOK, deep breath. \"Yeah, I know. Maybe for dinner? It's just tough 'cause Taylor works weekends.\" My heart was pounding in my chest.\n\n\"How about this Saturday, after he gets off?\"\n\nI had a legitimate excuse for that one at least. \"This weekend's bad. We have the North Vista Art Fair. Taylor has a booth there. Tell you what, I'll check with Taylor and see if sh-ahh-there's another weekend he can get off. I'll call you about it.\"\n\nI tried to be cool, and if my dad noticed my little slip of the tongue I couldn't tell.\n\nThe house didn't clear until close to nine. I'd watched Devin sit down next to Kelsey with a plate of food, and he even ran over to get her a soda once. By the time he left, my sister was floating around the house. She kept me up until after eleven talking, and I got a crash course in all things Devin, as well as the other assorted love triangles which seem to run rampant in the twelfth grade.\n\nI finally got her to leave me alone and go to her own room, and I pulled out my phone as I rested on my childhood bed sending out a text to Taylor.\n\nMe -- Hi.  You home?\n\nI waited a few minutes but got no response. I was just about to give up when the responding bubble appeared.\n\nTaylor -- Hey, baby.  Just pulled in, I was out at the warehouse.  You OK?\n\nMe -- Yeah, just tired.  Want to talk?\n\nTaylor -- Sure, let me get upstairs.\n\nI stripped off my clothes and pulled on a cami and shorts before climbing under the covers. Just as I got comfy my phone buzzed.\n\n\"Hi.\"\n\n\"Hey, baby. What's up? Big party?\"\n\n\"Actually, yeah, but not what you think. I'm out at the homestead. Kelsey had a bash I was helping with.\"\n\n\"Aww, you're such a good sister, baby.\"\n\n\"Thanks. So, just wanted to let you know I talked to my parents, and they want to have you over for dinner. You just have to pick a day.\"\n\n\"Really? Do they know who you're bringing home?\"\n\n\"Um, no, not exactly.\"\n\n\"You gonna tell them, or is it going to be a surprise?\" Her voice wasn't happy. I was blowing this.\n\n\"What do you think I should do?\" My voice was pleading.\n\nTaylor breathed deeply. \"I don't know, baby. My coming out didn't go well, so I really can't give advice. But I'll do whatever you want. I love you.\"\n\n\"I love you, too. Good night, My Lady.\" I hugged the phone close as it disconnected. I imagined what it would be like to have Taylor here, next to me. Maybe after an evening with my family, nothing to hide, her strong arms around me. It was a wonderful thought, and I slipped away into sleep.\n\n***\n\nTaylor and I spent most of Tuesday afternoon packing up the pieces she was taking to the fair. Some were good sized and had to be disassembled before they would fit on the pickup she was going to be renting Thursday. I had no classes Thursday and Friday, and I decided to blow off my Wednesday classes, too, so I could spend basically the whole week with Taylor. Normally Sadie and I spent fall break in my parent's pool, but she was going up to Napa to visit Noah's family, which meant I was free to spend the whole time with Taylor.\n\nWhen I got to Taylor's place after my class on Tuesday she was sitting on the couch with a bunch of papers on the coffee table. I kicked off my shoes and set my bag down by the door. She looked up at me with tired eyes.\n\n\"Hey, baby.\"\n\n\"Hi. Whatcha doing?\"\n\n\"Paperwork for the fair. I've been working on it for two days.\"\n\n\"Oh, you poor thing.\" I climbed into her lap, straddling her legs and nibbling on her ear. \"Does My Lady need a break?\"\n\n\"That'd be wonderful, baby.\" She ran her fingers through my hair and looked me in the eyes. \"What did I ever do to deserve you?\"\n\nI leaned forward and pressed my lips to hers her. \"There's that, the most amazing kisses ever, or the fact that the world seems so much brighter when I'm with you, or that you make me feel safe and loved and cherished. There's also the fact that you're my hero, saving lives and all that.\" I pressed my mouth to her neck, earning a sigh as she lifted her chin and settled back into the cushions. She made little cooing noises as I suckled her tender flesh. \"Or that you taste so wonderful.\"\n\nWith that I slid off her lap to my knees before her, my hands going to her fly button and undoing it. She lifted her hips as I pulled down the zipper and grasped the waistband, pulling both her jeans and panties off in one smooth motion. Taylor's hips glided forward to the edge of the sofa, eyes closing as she gave herself over to my touch.\n\nI pushed her knees apart, showing me her bare sex, just starting to moisten. I pressed my cheek against her inner thigh before rolling into a kiss on the tender flesh there. Taylor gave a contented little sigh as I moved closer to her core. God, I lived for those sounds. I pressed a kiss onto her outer lips before skipping over her sex and doing the same to the other leg.\n\n\"Baby, that's so good.\" The aroma of her arousal was building fast, and I couldn't wait to taste her. I couldn't believe how much I'd missed performing this simple act for My Lady last week. My palms ran around My Lady's thighs and over her abs. I'd never felt her so tense, and it broke my heart. Let's see what we could do about that.\n\nI pushed my tongue inside her before drawing it up through her sex in a long, slow, broad stroke.\n\n\"Ohh, yes.\" One of My Lady's hands curled around the back of my head and held me to her as I continued to work up and down, swirling around the swollen nub at the top whenever I reached it. My palm caressed up towards her breast, and she found me there, our fingers entwining together as she pressed herself against me. I didn't rush things, as I wanted her to relax completely before I brought her to her full.\n\nI could feel the tension flowing out of her as I continued to work, which was wonderful. She slowly gave herself over to her pleasure, pushing herself against me as she started to crest, and my mouth was flooded with her incredible flavor.\n\nI kept her going for a moment before wrapping my tongue around her clit and burying myself in her. \"Oh, damn, baby, that's so good. Don't stop, please, just a little more, ahh.\" Taylor began to shake, and moments later a second, powerful orgasm rolled through her.\n\nLooking up from between her legs I watched My Lady's beautiful face morph from a look of total pleasure to one of blissful happiness. She opened her eyes, her mouth stretching into a contented smile as she looked down at me.\n\n\"Come, here, baby.\"\n\nMy own cheeks spread into a wide grin as I climbed back into her arms, sitting in her lap as she held me close.\n\n\"Is My Lady more relaxed now?\" My voice was a breathy whisper, and I finished with a kiss on her neck.\n\n\"Oh, yeah.\" She put her arms around me and nuzzled in close, which made me giggle, as I was completely in my larger and stronger girlfriend's power. \"But I still don't want to do any more paperwork.\"\n\nI rested my head on her shoulder, luxuriating in her warmth. \"You know, you could, if you wanted to, I mean, take your baby back to bed, and do delicious fun things to her.\"\n\n\"Oh, I could, huh? Does my baby want that?\"\n\nI made my eyes wide and innocent as possible as I looked up at her and nodded shyly. \"But only if it pleases My Lady.\"\n\n\"You know, I believe it would.\" She kissed me, one I could feel in my toes. \"But there's one small problem, baby. You're wearing all these clothes.\"\n\n\"I'm sorry my lady.\"\n\n\"Don't be sorry, baby. It just means I get to watch you take them off. Stand up for me.\"\n\nI did as I was told, my whole body quivering in anticipation. I stepped to the other side of the coffee table and turned around, giving Taylor my best bedroom eyes. She picked up her phone and tapped at it for a few seconds before a slow, sensuous jazz beat began to play through her wireless speakers. \"Dance for me, baby.\"\n\nI started to sway my hips to the rhythm, putting my pinkie into my mouth for a moment, never taking my eyes of My Lady. I let the music slowly fill me, adding more and more to my constant movement. My lids closed, and I arced my neck and gathered my hair up in what I hoped were sexy bunches. When I glanced back to the couch the hunger in Taylor's face was evident. That was all I needed to keep going.\n\nI turned around and reached down, slowly pulling up the ruffled blouse I was wearing. When I was standing it covered my behind, so I really was revealing that too, so I gave it a little wiggle as I did.\n\nI tossed my top on the floor, looking back over my shoulder as I embraced myself around the waist. Taylor leaned forward in appreciation, and I gave her a seductive smile as my ass swayed in time to the music. I turned back towards her, pushing my chest out as I reached back and unsnapped my bra.\n\n\"Baby, you are so beautiful. Damn.\"\n\nAs my brassiere hit the floor I crossed my arms under my breasts, lifting as I pouted above them. Taylor shook her head with a laugh before taking a deep breath and running her fingers through her hair. I knew she was fighting just coming to get me.\n\nI wanted to finish the job, so I turned back around, keeping my knees straight. I pushed both my leggings and my thong down. Now completely nude I gave myself over to the rhythm, weaving and swaying my hips, waist, shoulders, everything. After a minute I walked back past the couch, ass wiggling all the way to the bed.\n\nI climbed onto the mattress on all fours, thighs together, making my outer lips puff out between them. I looked over my shoulder, watching Taylor grin ear to ear and shake her head. I matched her expression as I wiggled my tush back and forth, a thrill racing through my body as she stood and came towards the bed.\n\nMy eyes turned back towards the headboard, and I made myself not acknowledge Taylor coming towards me. I took a few deep breaths, trying to relax my humming body. But I still gasped as she climbed onto the mattress. She knelt behind me, leaning forward and wrapping her arms around my waist and pressing herself against my back. She's stripped of her shirt on her way, and I could feel the warmth of her skin on mine.\n\nA hand slid underneath me, caressing me from my shoulder down and cupping my breast, then to my side, over my hip and between my legs, making me gasp.\n\n\"Baby, you're so wet.\"\n\n\"Just ready to serve you, My Lady.\"\n\n\"Yeah?\" She slid two fingers inside me, making me let out a low, breathy coo. \"\"So you're not enjoying this?\" Two quick more strokes made my brain start to fuzz out, and I had to make myself focus to answer.\n\n\"Yes, My Lady, so much, as long as it makes you happy.\"\n\nShe leaned down, her breath a throaty whisper next to my ear. \"You know what makes me happy, baby?\" Her fingers slipped out of my vagina and stroked my clit as I whimpered. \"Making you come and come. Are you ready?\"\n\n\"Oh, yes, My Lady.\"\n\n\"Good. Stay like that.\" She stopped touching me, and I gave a little moan of disappointment. She climbed off the bed, and I could hear her fiddle with the strap on. The vibrator came on as she centered herself behind me. That made me happy, she was using the double ender, so she was going to enjoy this too, which let me relax. I took several deep breaths as she used my copious juices to lube the phallus. Moments later I felt it press against my opening, and I grasped the metal bars of the headboard and prepared for heaven to fill me.\n\n***\n\nJust under an hour later I was lying in Taylor's arms, my skin still humming in the afterglow of our lovemaking. My Lady's fingers moved lovingly through my hair, one of her legs thrown over mine and my face nestled between her skin and the pillow.\n\nI turned my mouth up and kissed her on the neck, earning a contented sigh. \"Is My Lady relaxed now?\"\n\n\"Mmm, yeah, baby. You were wonderful.\" She kissed me on the forehead. \"How are you feeling?\"\n\n\"Blissful. Unfortunately, you're still going to have to fill out that paperwork.\"\n\n\"See, now the anxiety's coming back. What am I going to do about that?\"\n\n\"You're in luck. I'm not going back to school until Monday. So you have access to your own personal stress reliever all weekend long, anytime you want.\"\n\n\"Yippee.\" Taylor's grin could have lit up a room. \"Oh, that reminds me. I've got a surprise for you.\"\n\n\"Really? What?\"\n\n\"It's out on the counter.\"\n\nI pulled away slightly. \"Can I go get it?\"\n\nShe nodded, so we climbed out of bed and walked, both completely naked and holding hands, to the kitchen. It was so easy being intimate with her. Before I'd met her, the idea of being casually naked with anyone had been almost unthinkable. Now, as long as it was Taylor, it didn't bother me in the slightest.\n\n\"Here.\" Taylor picked up something small and metal off the counter.\n\n\"Is that a key to your apartment?\"\n\n\"Yup. I want you to be able to come and go, so if you spend a Friday night you won't have to rush off when I have to go to work.\" Taylor got a wicked gleam in her eye. \"And maybe you're even still here when I get back. You know, stuff like that.\"\n\nI couldn't help the tear that burned in my eye. I held the silver metal in my hand for a moment before wrapping my lover in a hug. Feeling her skin against mine, I wondered if I could ever be happier.\n\n- Taylor -\n\nI hadn't really expected this emotional of a reaction, but I didn't mind, not in the slightest. I remembered holding the key at Lowes after I'd had it made the other day. I'd been surprised how much it meant to me. I was letting Aly in, both literally and figuratively. She'd have access to my home when I wasn't there. I mean, I wasn't concerned about her carrying off my things. She could probably buy everything in my apartment in a single Amazon shopping cart without her daddy even noticing. But that didn't matter. Mostly, at least. He could have all the money in the world, but Aly, she was all mine.\n\nI'd only let one other get this close, and I'd sworn that it would never happen again. Was I setting myself up for another disaster? Probably, but I'd talked it over with Jen and Vicky a bunch of times, and they kept bringing up how if I never let anyone in, I'd die miserable and alone. I'd decided they were right, hence the key.\n\nBut I also was nervous about the whole thing, right up until the moment Aly hugged me. She couldn't do me like Gillian. I wouldn't be able to handle that.\n\nAly separated from me slightly and looked up with those beautiful brown eyes of hers. \"Taylor, are you okay?\"\n\nI forced a smile onto my face. \"Sure, why?\"\n\n\"You look sad. Are you sure about this, sweetheart?\" She held the key out in her palm, reluctantly offering it back.\n\nI blinked away a tear, silently hoping she hadn't seen it. \"No, I'm very sure.\" I closed her fingers over it. \"I want you to have it.\" She clearly wasn't convinced. \"Baby, can I talk to you?\"\n\nAly nodded, concern evident in her eyes.\n\n\"Let's go sit down.\" I led her over to the couch and she sat with her back to me. I wrapped my arms around her. Not looking in her eyes made this easier. \"You know I've had a serious girlfriend before.\"\n\n\"I know, and that it didn't end well. She hurt you somehow.\"\n\n\"Her name was Gillian. She was a year ahead of me in school.\" I took a deep breath. If I was going to tell the story I might as well do it. \"When I finally worked up the nerve to go to the LGBT meetings, she was there. We became friends, and then we were more than friends. We dated all through my sophomore year. She was the first girl I kissed, the first I, um, yeah, so, anyway.\" I could feel my cheeks heating up. Why was it so hard to talk about this?\n\n\"So what happened, sweetheart?\" Aly ran her fingers over my arms.\n\n\"I opened up. I lived out and proud. I was swimming, and doing my art, wearing clothes that were more me, and I was in love with a beautiful girlfriend, who I thought adored me. It was wonderful.\"\n\n\"Is that when you cut your hair?\"\n\nI grinned at the memory. \"Yeah. It was even shorter than it is now. Buzzed on the sides and everything.\"\n\n\"I like it how it is, all messy and stuff.\" She reached and tousled my hair.\n\nI laughed. \"Thanks, baby. But, anyway, my junior year and her senior year we decided to share an apartment. Her dad had money and she got him to pay for it somehow. We were moving in together, and my na\u00efve, twenty-year-old brain thought we were going to be together forever. I visited home that summer and got in a big fight with my dad, so I told him I was gay, mostly to hurt him, I think, and I came back pseudo-disowned.\"\n\n\"Pseudo?\"\n\n\"My dad won't talk to me. Mom will, as long as she gets to use her disappointed voice. My sibs are a mixed lot, but...\" I heaved a sigh and got back to the point. \"But I figured I didn't need them. I had Gillian, and she was going to be my everything. She was my family now, right? I didn't need anybody else.\"\n\n\"So what happened?\"\n\n\"Nothing. That year was great. We shared everything, and it was just like I'd imagined. She was graduating and I thought she'd get a job while I finished school and then, whatever. But the day before her parents arrived for graduation she told me she was moving back home to work at her father's business, and that we couldn't be together anymore.\"\n\n\"Wow. Just like that?\"\n\n\"Yeah. I felt like she'd hit me in the stomach with a sledgehammer. All the air in my body disappeared. I just stared at her as she left.\"\n\n\"I'm so sorry, Taylor.\"\n\n\"Looking back there were clues. She never posted pictures of us, never changed her status, always very reluctant with PDA's. I ignored them. I was in love. Or at least I thought I was.\"",
        "\"Did you ever see her again?\"\n\nI shook my head. \"No. When I'd get low sometimes I'd cyber stalk her a little. She's married now, and she and her husband have a baby. She'd lied to me, the whole time.\"\n\n\"Or she's lying to herself.\"\n\n\"Maybe. But she still left. It sucked, and I didn't go back to school. There was a job available at the beach, so I took it. And that's where you found me.\"\n\n\"And you haven't dated anyone since?\"\n\n\"Not really. I guess that's why this is scary.\" I tapped Aly's hand holding the key.\n\n\"Thank you for trusting me. I love you.\"\n\nI nodded, My heart was beating fast, and I blinked away a tear. Concern was evident in her eyes, and she climbed into my lap. God, the feel of her skin on mine was sublime. She laid her head on my shoulder and I wrapped my arms around her waist, just holding her close to me. I stroked her hair, feeling her warmth, praying this wasn't going to hurt.\n\nWe made love that night, gentle and wonderful, and not as baby and Her Lady, just as Taylor and Aly. Aly snuggled against me in the afterglow, her heart beating fast from the orgasm I'd just given her.\n\nA happy little sigh escaped her lips, which made me smile and pull her in tighter. She was mine, my love, and I was never letting go. This feeling was worth the risk. It had to be.\n\n***\n\nWe loaded up the truck I'd rented on Thursday morning. The art fair was open to the public Friday through Sunday, but there would be gallery owners and VIP guests on Thursday afternoon, as well as the judging for the various awards and stuff. I'd always pretended that I didn't give a damn about such things. All self-respecting artists did, after all. But it was also a lie. Every artist wants recognition, don't be fooled, especially when they're denying it.\n\nI'd earned an honorable mention ribbon two years ago, and I still had it in my closet. I'd never be so gauche as to display it, but I knew exactly where it was. In the past I'd always entered what I thought was my most technically accomplished piece, but not this time. I was going to enter the sculpt Mr. Beville had suggested, even though it was simpler than many of my others. I agreed it was beautiful, but I almost felt wrong displaying it, given how intensely personal it was. It was Aly, after all, flying free on the ocean breeze.\n\nSpeaking of which, I'd been amazed how willing Aly had been to get her hands dirty lifting and carrying the heavy things. We found our booth space easily, the same as I had last year. The organizers had left out the tables and a canopy I'd requested at our location, and we had them set up by noon, and were able to start transferring my works onto the tables and several standing displays I'd brought.\n\nI left a spot for Katrina, with whom I shared the booth. She made handmade jewelry, so she didn't need anything like the space I did, but she'd sell a lot more pieces than I would, especially since hers cost less. She was working today, so she wouldn't be here until after five.\n\nAs soon as we had the basics up we began to unload my pieces.\n\n\"Taylor, these really are good. I predict every one is going to sell.\"\n\nShe said it with obviously affected na\u00efvet\u00e9, but I tried to keep my face stern. \"That's based on your years of expertise in art sales, young lady?\"\n\nShe never stopped grinning, hooking her fingers into my denim waistband and pulling me close. She tilted her chin up, those incredible brown eyes flashing in the sun. \"I just have an immense amount of faith in you.\"\n\nI couldn't help but smile back at her, with just a little chuckle. The purity of that look slayed me, and I kissed her.\n\n\"Are we done here? Go back to your apartment?\"\n\nI kissed her forehead. \"Not quite, baby. We need to get the signs up, and then I have to take Pacifica down to the judges area.\"\n\n\"Oh, right. And then we go get it in the morning. And the blue ribbon attached.\"\n\nI shook my head. \"I love you.\"\n\nWe hung the two banners, one advertising Knox Sculptures and the other Kat's Eye Jewelry. Then we arrived at the judging area and dropped off my entry. I spoke with the head judge while Aly held my hand. I introduced her to several of the officials, and she was unerringly charming, wearing that adorable smile, grasping my arm and gazing up at me adoringly. If I'd seen any other couple doing this it would have probably made me sick, but being with Aly just filled me with confidence, and by the time we left I almost believed her that this was going to be a life changing fair.\n\n***\n\n\"You're so tense, My Lady.\"\n\nI was. Truly. I closed my eyes and let the warm water of the shower run over me as Aly washed my back. Last night had been amazing, my baby had made me feel amazing, and I believed I'd returned the favor. But this morning I'd woken up to all my old anxieties. My dreams had been all over the place, and I'd woken up in a cold sweat.\n\nAly had shushed me back to sleep, or at least calmed me down enough that I could breathe normally again. Her arms around me were soothing, just like they always are, but I was still a little shaky when Aly went in and started the shower. I'd sat on the edge of the bed and listened to the water run, breathing deeply.\n\nAnd now I was holding onto the safety bars as Aly washed me, my heart beating fast.\n\nAly's hands went up to my shoulder and began to rub as she kissed my back. \"Just nervous about today, My Lady?\"\n\n\"Yeah, I think so.\"\n\n\"Does this feel nice?\" She ran her hands up and down my back, caressing my muscles, her fingers applying delicious pressure to my neck and spine.\n\n\"Oh, yeah, baby. Thank you.\" She continued until I could feel the knots in my back start to release.\n\nI let out a long sigh, which Aly matched with a moan of her own. \"Mmm, that's right, My Lady, let your baby take care of you.\"\n\nI reached back so I could touch her and she squeezed my hand. I turned to face her and held the back of her head as I kissed her. Her mouth dropped to my neck, then breastbone, then my stomach as she went to her knees before me. My palm still rested against her wet hair as I guided her to my sex, eyes closing as her lips and tongue began their glorious work. I drew in deep breaths, relaxing into my baby's worship. My inevitable orgasm washed over me. I pulled Aly to her feet and kissed her long and deep and pure. My muse was right. She was always right. Today was going to be wonderful.\n\n- Aly -\n\nI wrapped my arms around Taylor's waist as she started up her motorcycle, looking over her shoulder as we pulled away. We'd dropped off the rented pickup, since we wouldn't need it again until Sunday, if at all. I'd driven it over while she'd followed. It'd be a lot easier to park the bike at the crowded fair.\n\nWe puttered up behind the booth, and I pulled off my helmet and shook my hair out as Taylor killed the engine. There was already a silver sedan parked there. I'd read in Taylor's material that there was normally a single vehicle allowed per booth, but I doubted they'd raise a stink about the extra motorcycle. I'd seen several flatbeds that were larger than both our vehicles combined.\n\nTaylor pulled her own helmet off, which was sexy as hell, her short blonde hair all messed up, and we went inside. There was a middle-aged woman with long silver hair sitting in a chair reading a book. She looked up and smiled as we entered.\n\n\"Taylor! It's good to see you.\"\n\nTaylor stepped forward and gave the older woman a hug and kiss on the cheek. \"Kat, hey, how've you been?\"\n\n\"I've been very well.\" She spoke with a slow, deliberate cadence, very in tune with the whole Earth mother, hippy vibe she was giving off with her peasant blouse and flowing cotton skirts. \"I see you haven't been doing so bad yourself. These pieces are beautiful. As is your friend.\"\n\nI could see the color rise in Taylor's tanned cheeks. \"Thanks. Kat this is my Aly. Aly, this is Katrina Harrison, she makes jewelry.\" I stepped forward and shook Katrina's hand. My head was still buzzing after Taylor had called me 'my Aly.' I was her Aly! My heart was soaring. I was so distracted I almost missed what happened next.\n\nTaylor set her bag down. \"It's good to see you Kat, but I gotta run up to HQ to get my entry. You need anything?\"\n\n\"Actually, Taylor, I don't think you do. She's right there.\" Kat nodded to the front table, where sure enough, Pacifica was sitting on the table. Taylor went stiff as a board.\n\n\"Sweetheart? Are you okay?\"\n\nHer mouth was hanging open and she walked around the tables and out into the walkway. I followed after her, my mind racing to figure out what was wrong. When she was directly in front of the booth Taylor stopped. I reached her side a moment later, taking her hand and looking up at her still shocked face.\n\n\"Hey, what's the ... ooh.\" My hand went up and covered my mouth as I saw what Taylor was staring at. Sitting next to Taylor's sculpture was a huge, multi-colored ribbon. She reached out and touched it with a reverent finger, running the tip along the silky material.\n\n\"I ... I don't believe it.\" Taylor's voice was awestruck.\n\n\"You should. As I said before, that piece is sublime.\" Maximillian Beville walked towards us with a slow, confident gate, the barest hint of a smile playing over his face. \"It was rated first by all five judges, something I haven't seen in years.\"\n\nTaylor gathered herself and turned, standing a little taller when she realized who was speaking to her. \"Thank you, sir.\"\n\nI slipped my hand into hers, and she looked down at me, her face suddenly radiant.\n\nMr. Beville nodded. \"You deserve it, Miss Knox. This is the work I always thought you capable of. Be sure to continue.\" Then he fixed his kind eyes on me. \"And you, young lady, whatever you're doing, keep it up.\" He gave me a wink, which made me giggle. \"Oh, and one other thing. I believe this is yours.\"\n\nHe reached into the bag he was holding and pulled out a white envelope. He glanced at it to be sure it was the correct one before handing it over. Taylor took it, and Mr. Beville turned smartly and strode away, calling back. \"Don't forget to hang that sign!\"\n\nI looked over at the sculpture, and sure enough there was a folded banner next to it. I let go of Taylor's hand and unfolded it. 'Grand Champion' was written in large, colorful letters.\n\n\"Taylor, look.\" I held the banner out for her to see.\n\n\"I can't believe it.\"\n\n\"I do. What's in there?\" I pointed at the envelope in her right hand. Taylor opened it and handed it over. It was a check for $1,500. \"Sweetheart, that's amazing! I'm so proud of you.\"\n\nTaylor looked dumbstruck. She shook her head once in disbelief, a stunned smile slowly creeping over features.\n\nI laughed at her and tugged at her hand. \"C'mon, we have to get this put up.\"\n\n***\n\nBooths opened at noon, and we were busy almost immediately. A good number of fellow artists stopped by beforehand to congratulate Taylor, many of which recommended strongly that she raise the prices on her displayed works. I finally convinced her she should, and it was good that I did.\n\nBy the time six o'clock rolled around and the crowds started to pick up she'd already sold four pieces, including Pacifica herself. The buyer let us hold onto the physical piece until the end of the weekend so we could continue to show it off. By the time the fair closed at eight, almost half of Taylor's inventory was gone or spoken for.\n\nWe hadn't stopped to eat since lunch, so we headed to a local taco stand and scarfed down some supper before heading back to Taylor's apartment. As soon as she locked the door behind us she scooped me up and carried me back to the bed, laying me down gently on the covers.\n\nShe caressed my cheek. \"Strip, baby.\"\n\nI sucked in a breath. \"Yes, My Lady.\" I got up on my knees and pulled my top off over my head. My bra followed, and thirty seconds later I was naked, lying on my back as My Lady divested herself of the rest of her clothing. My pulse was racing as she climbed onto the mattress and took my lips with hers. God, there was a fire in her tonight.\n\nShe rolled onto her back, pulling me on top of her. Her lips moved up my jaw to my ear where she nibbled a moment, making me gasp. She slid a finger into my mouth, which I immediately started sucking on.\n\n\"I want this tongue on me,\" her finger caressed her object, \"and I don't want you to stop until I say so.\"\n\nHer voice was a forced whisper in my ear, and I felt it all the way down into my toes. \"Yes, My Lady.\" I went straight for her neck, which I knew was so sensitive. Her finger ran through my hair, holding me to her.\n\n\"Damn, baby, that's nice, mmm.\" After a minute or so her palm moved to the top of my head and gently pushed me south, where I obediently went. I worshipped her lovely breasts for a moment, but that wasn't where my attentions were truly desired, so I kept moving down, until I was situated between her legs, which opened wide for me.\n\nShe was already soaked, her excitement running down from her vagina and over her skin. I scooped the slick liquid up with my finger and tasted it, savoring the deliciousness of My Lady's flavor. I wrapped my arms around her powerful thighs, and buried myself in her.\n\nI knew how sensitive her clit would be, so I avoided it at first, circling and diving in and out of her entrance, with only occasional licks up and over her nub and its hood. I listened to My Lady's sounds, feeling her body move under me, gauging exactly when her clit could take some more direct stimulation. I'd learned her well, and when I finally wrapped her pearl in my tongue and sucked, her hips almost levitated off the bed.\n\n\"Ohh, God, YES!\"\n\nMy heart swelled at the ecstasy in her voice. She continued to moan and speak, telling me to never stop, calling me her precious baby. Her words were like a warm blanket over my soul, and I was able to wrap myself up in them and completely give myself over to what I was doing.\n\nI don't know how long I continued before she began to shake, and I took her right through her first powerful orgasm. She'd told me not to stop, so I didn't, although I backed the intensity way down for a minute. I didn't have to stay in low gear for long, and we were quickly up and running towards her next.\n\nI'd never seen My Lady so relaxed, so completely given over the pleasure I was giving her, and that made me so happy, and I never wanted to stop. Each of her orgasms seemed to roll seamlessly into the next, and by the time she reached down and hooked my chin with her fingers, pulling me up to her, I'd totally lost count.\n\nMy face was coated with her nectar, but she didn't, kissing me all the same. The power behind it took my breath away.\n\n\"My turn.\" Taylor pushed me over onto my back and sucked my nipple into her mouth, bathing it with her tongue as my fingers played with her short hair until she moved down over my ribcage and stomach. My entire body trembled at the pleasure I knew was coming. \"Spread for me, baby.\"\n\nI reached down and grabbed my knees, pulling them as far apart as far as they would go. My little clit was hard as a rock, pushing my hood up and away from the rest of my sex. Taylor's eyes were focused on exactly that, and she wrapped them both in her soft lips, applying the most delicious, gentle suction.\n\nMy eyes rolled back as a throaty moan escaped my lips, while My Lady's loving fingers glided over the skin of my inner thighs. She released my clit, her tongue gliding through my folds as my body jerked and writhed underneath. It took only a few minutes before I found myself pleading with her.\n\n\"May I come, My Lady?\"\n\n\"No, baby, you're going to wait.\"\n\n\"Yes, My Lady.\"\n\nI'm not sure how I got the words out in any intelligible fashion, but as soon as I did she upped the game by sliding two fingers into me and beginning to caress my G-spot, and it took every ounce of control I had in my small body not to blast off right then. She didn't put her mouth back on me right away, instead using her other hand to roll my outer lips around my hood and the nub inside.\n\nIf I thought the change in sensation would allow me to get a hold of myself I was wrong, because any momentary reprieve was replaced by the intensity of the now two-fold stimulation. My teeth clenched together, eyes screwed shut as I tried to force back the desire to give my body over to its desperately desired release.\n\n\"Oh, My Lady, PLEASE, may I come?\"\n\n\"Not yet. Don't ask again.\"\n\nA sob broke free from my chest and I felt a tear run down my cheek. My Lady's tongue pressed against my sex, and now every time my hood appeared from between it was met with a gentle lick. I was on the verge of collapse, weeping openly as the intense pleasure began to become almost painful when I finally heard those glorious words.\n\n\"Come for me, baby.\"\n\nI tried to draw a breath to thank her, but I couldn't get the words out before my orgasm slammed into me, overwhelming every other sense in my body. I couldn't breathe as wave after wave coursed through me, and I felt like my fingers and toes might explode from the energy. At the epicenter my Kegel's were attempting to pull Taylor's two digits off her hand as they continued to stroke my insides. It just went on and on, my whole body shaking for almost a minute before it finally began to subside.\n\nI was sucking in great lungfuls of air, my vision starting to clear as Taylor kissed her way back up my body. She pressed her lips to both my cheeks, where the tear stains were evident.\n\n\"You were crying.\" She stroked my hair. \"Did I go too far, baby?\"\n\nI shook my head, my voice shaking. \"No, My Lady. It was just very intense.\"\n\nShe kissed me so tenderly before looking into my eyes. \"Can you handle a little more?\"\n\n\"Does My Lady want more?\"\n\n\"Yeah, baby, she does.\"\n\n\"Then I can handle it. I belong to you, My Lady.\"\n\nTaylor smiled at me. Her real, joyful smile, the one I think only I got to see.\n\nShe brought her hips in line with mine, pulling my right leg up to her chest. I could feel her wetness on my thigh as it moved to cover my sex. The sensation of her silky moist lips against mine was amazing, and she began to grind into me with slow, smooth circles. I gasped when her clit slipped between my lips, brushing against my own. I started to match her rhythm, and soon pleasure was starting to build fast.\n\nWithout breaking rhythm My Lady bent over me, so her eyes were inches from mine, and I stared into their bright blue depths. Her lips found mine as she rode me, our bodies melding together in perfect union. Another orgasm began to build inside me.\n\nShe pressed her lips to mine as she continued to move on top, and then she broke away and looked deep into me. \"Don't close your eyes. I want to see them when you come.\"\n\nI nodded, losing myself in her gaze as I gave myself over the feelings coursing through my body. I want to tell you what it felt like, and I wish I had the words to do so, but I don't think it's possible. I honestly don't know which was more perfect, the orgasm or her eyes. All I know is that when it stopped she was holding me so close I never wanted to move.\n\nIf you told me I was going to try to blow it all up less than twenty-four hours later, I'd have said you were crazy. But I would have been wrong.\n\n***\n\nWe made it back to the fair clutching a bag from McDonald's, along with two of their big coffees. We'd spent a little too long in the shower and hadn't had time to make breakfast.\n\nTaylor had told me that today would be the busiest day by far, and she hadn't been kidding. A reporter doing a human-interest story on the fair came by and interviewed Taylor just before everything started, and I stood by in awe. She was a rock star, and I was so proud of her. Throughout the morning she was always being pulled aside and chatted up by various people, and I knew it was starting to wear on her a little.\n\nAll of the interviews, professional or otherwise seemed to follow the same pattern, and Taylor had pretty good stock answers to 'Where do you get your ideas?' or 'Who are your inspirations?'. Occasionally someone would hit her with something a little harder, like what schools of art she identified with, what type of artist she considered herself. Most were sincere, but a few were just trying to impress their date and show off the 'History of Modern Art' class they'd taken in college.",
        "The question that made Taylor the most uncomfortable was education. \"Where did you study?\" It was a simple, natural thing to ask, and she would answer Pepperdine, but there was shame in her voice. But if they followed up with 'When did you graduate?' she'd hem and haw and change the subject. I don't think I'd ever realized how much not finishing college really bothered her.\n\nBy four o'clock Taylor had only two pieces left from the two dozen or so we'd arrived with. Most were still in the booth with 'SOLD' tags on them, and people would be coming by on Sunday to pick them up.\n\nKatrina had gone home a little after one with a headache, and I was sitting by her stuff just in case. She was making out pretty well, too, on account of all the extra traffic at the booth. Taylor was in the back talking to someone about a possible commission. I answered a question regarding one of Taylor's pieces for a passerby and the man with Taylor shook her hand and left, a large smile on his face. Taylor flopped down on her folding chair and shook her head.\n\n\"He wants me to do a waterfall sculpture for his backyard.\"\n\n\"Awesome.\"\n\n\"Six feet tall, and he's going to pay three grand for it. Plus materials\"\n\nI put my hand over my mouth. \"Oh, my god! That's awesome!\"\n\nTaylor shook her head. \"I'm starving. You want something from the trucks?\"\n\n\"Sure. What were you thinking?\"\n\n\"The curry truck?\"\n\n\"That sounds great, sweetie.\" She didn't ask what I wanted. She was getting really good at ordering for me and picking out things I really liked. And she'd also made me try things occasionally I probably never would have without her. I loved that, even with the occasional miss.\n\nShe left out the side of the booth and headed off to the right, and I watched her backside sway in those tight jeans she was wearing. Her gait was easy and free. Just by the way she moved I could see how relaxed and happy she was. And god, she was gorgeous.\n\nThings were finally starting to slow down some as more people were heading for food, and the heat of the day was at its zenith. Fifteen minutes later I sold a necklace for Katrina, having the lady purchasing it sign on a tablet with her finger after swiping her card. I slipped Katrina's iPad back into its pocket below the table before turning back to the walkway.\n\nMy heart froze in my chest as I saw my parents walking towards the booth. They hadn't seen me yet, and for an insane moment I considered diving under the table and hiding behind the ground length tablecloth. In retrospect that might have actually been the smart play. Instead I stood there like a cow staring at an oncoming train as they approached.\n\nMy mom's face broke into a wide smile when she saw me, and she waved. A stunned smile crawled across my face, and I frantically glanced down the street to see if Taylor was coming back. I didn't see her, but I knew she wouldn't be gone much longer.\n\n\"Hi, honey. This is really something.\"\n\n\"Hi! What, um, what are you doing here?\" My voice came out high, squeaky and way too fast, and I could feel my heart suddenly pounding against my ribcage.\n\n\"You mentioned it, and it sounded like fun. This place really is something.\" My dad reached out to pick up one of Taylor's smaller pieces. \"And it gives your mom a chance to catch a glimpse of this new beau of yours.\"\n\nI opened my mouth to protest, but my mom held up her hand to stop.\n\n\"Don't worry, honey, we won't embarrass you. We'll just say 'Hi' and go.\"\n\n\"Mom, I mean, this, I just hate springing it on him.\" A spike of shame and guilt passed through me at my choice of pronoun. I glanced around looking to see if Taylor was coming. I was craning my neck to see further down the street when I heard her behind me, and I nearly jumped out of my skin.\n\n\"Hey, Aly, I got you some Vindaloo chicken curry. You OK?\"\n\nTaylor set two plastic containers down on the rear table. I wanted to cry. She saw the pain in my eyes and her face morphed into a look of concern. Looking past me, she saw the couple standing just behind.\n\n\"Can I help you?\"\n\nThere was a note of challenge in her voice, like they'd been harassing me or something, so I cut in.\n\n\"No, these are my parents. Mom, dad, this is Ruth, she's a friend of Taylor's, too.\" The change in Taylor's physiognomy was like a knife in my heart. It wasn't hurt, or anger or even pain. There was nothing but acceptance of my betrayal, and it took everything in me not to collapse right on the spot.\n\n\"So, are you an artist, too, Ruth?\"\n\n\"Yeah. I sculpt in metals, too.\" She stepped forward, but kept several feet of distance between us. Her voice was calm and even. I don't know if I was just imagining the hurt just under the surface, but I thought I could hear it.\n\n\"So, are all of these Taylor's?\"\n\n\"All but the jewelry.\"\n\n\"This one was a winner, I see.\" Dad patted Pacifica, which was still sitting in a place of honor at the front of the booth.\n\nThey chatted for a few minutes more, while I stood back and wished that the ground would swallow me whole. Why was I being such a coward? All I had to do was stand forward and open my mouth. It'd be okay, I knew it, but I just couldn't move.\n\n\"So, Ruth, if we hang around, what're our chances of catching a glimpse of the elusive Taylor?\" My mom glanced over at me, but luckily she mistook my abject misery for simple nervousness. \"I've almost given up on that one ever introducing us.\"\n\nI tried to make myself smile at her. Taylor glanced back at me before answering.\n\n\"I don't think Taylor will be back for awhile. There's a dinner for some of the contest winners. It usually goes pretty late..\"\n\n'Oh, well.\" My dad looked around at the metal sculptures again. \"These are beautiful pieces, but your dinner's getting cold sweetheart, and so is Ruth's, so we'll leave you to it.\"\n\n\"Bye, sweetheart.\" Mom waved and they were gone into the crowd.\n\nTaylor turned around, not looking at me, and sat in her chair. She was so quiet. I just stood there for what felt like several minutes before she finally spoke.\n\n\"Your food is getting cold.\"\n\n\"Taylor, I...\" But I didn't get any farther before she turned away. \"I'm sorry.\" My voice was a hushed whisper as I fought back tears.\n\n\"It's fine.\" It was so not fine, and the hurt in her voice cut my heart open. She sounded like this was normal, like she'd known this would happen, expected it, even. She was angry, but it was directed inward. She wasn't mad at me. God, I wished she were, that she'd yell, or cry, or curse at me, anything short of actual violence.\n\nBut she didn't. In an instant she'd become that same woman I'd first seen on the lifeguard tower again, full of resigned misery and painful loneliness. And I'd just caused a fresh new wound.\n\n\"Do you want me to go?\"\n\n\"It doesn't matter, Aly.\" She mumbled something else, but I didn't hear it over the halting breath I was trying to draw. I warred inside myself for a painfully long moment. I wanted to throw myself at her feet and beg her forgiveness, but the possibility of rejection was so high, and it would hurt so much, I couldn't make myself do it.\n\nI remembered all the times Taylor had told me how brave I was. But I wasn't. Not when it counted. I was a coward. And cowards run. So I did.\n\nI slipped out the back of the booth and started walking away. I wasn't crying, I was still too numb, but that was coming. My car was at Taylor's apartment, so that's where I'd have to go. It was strange to think my parents were likely still on site, but calling them wasn't remotely possible. No way I'd be able to hold it together without letting them know what happened, or them just working it out themselves.\n\nI moved through the people in a daze, heading in the general direction of the park entrance. It's hard to keep your bearings in a crowd where everyone is taller than you are, but eventually I found my way to the exit. I looked over my shoulder, desperately hoping a short haired, blonde lifeguard would be chasing after me. But she wasn't. I didn't blame her.\n\nThere was a bench by the access road separating the parking lot, so I sat down. Couples and families were walking past me, laughing and happy. I was just numb. I pulled out my phone and ordered an Uber, and less than five minutes later it was there. I stood up and walked over in a trance, climbing inside the backseat.\n\nThe sound of the door shutting shook me awake, and as we pulled away I started to cry. Great, wracking, sobs shook free from my chest. Dear God, what had I done? My driver was an older man with a grey beard, but he looked up kindly and passed back a box of tissues. I managed to mumble out a thank you, blowing my nose as he drove.\n\nI thought about what Taylor had told me about her last girlfriend. How instead of coming out, she'd broken up with her and moved back with her parents. Taylor had been devastated. In her heart, Taylor was a trusting soul, who saw so much beauty in this miserable world. But she'd been failed. Failed by her family, her past loves, and now by me.\n\nShe'd opened up to me so much over the past two months. We'd explored new parts of ourselves. Her art had even changed. Even my untrained eye could see it. She'd risked her own life to rescue my sister from the ocean, and risked her damaged heart on a silly college girl who wasn't even brave enough to acknowledge the truth to her family.\n\nWith every thought my shame grew deeper and more soul wrenching. By the time my driver dropped me off at Taylor's place I'd cried myself out. I could just get in my car and go. Drive away and never stop. I shook the thought out of my head. No. No compounding this with more bad decisions. If I'd really just destroyed the only real relationship I'd ever had, I needed to take it like an adult.\n\nI walked up the stairs, pulling my key out and unlocking the door. My key, that Taylor had given me because she trusted me. That brought a fresh wave of tears. I walked back to the bed and crawled up on the mattress, laying my head on my pillow. I looked at Taylor's side of the bed. So many nights here, my lover holding me close. I let the grief wash and shame wash over me and I cried myself to sleep.\n\nIt wasn't restful, and I was immediately pulled into horrible dreams, which woke me in a cold sweat. It was just after ten, darkness had fallen fully outside. The fair had been over for the day hours ago, but Taylor hadn't come home. Or maybe she had seen my car and left.\n\nWhatever the case, she clearly didn't want to be where I was. And this was her apartment. I had no right to be here. I should go.\n\nI took half an hour to pack up my stuff, zipping closed my little carry-on sized suitcase I'd brought over for the week. I was going to leave a note with my key, telling her how sorry I was, so I set my bag by the couch and went to find some paper and a pen.\n\nGod, how do you start something like this?\n\nTaylor\n\n I am so sorry for what happened today.  You deserve so much better.  I never wanted to hurt you, and I told myself I never would.  I love you.  I always will, but if this is over I understand.  That's not what I want, but if it is, know that you taught me more about myself and who and what I want in life in two months than I'd learned in twenty-one years.  You'll always be my hero.\n\n \n\nLove, Aly\n\n Tears were rolling down my face as I signed my name. Several landed on the paper itself. I wondered if she'd recognize what the marks were from. I set my key on the note like a paperweight and looked around. I picked up one of the throw cushions and hugged it to my chest. I needed to get up and go. But when I did it would be over, really over, so I decided to just sit here a minute. Just one more minute, here in this place where I'd been so happy. Just one more minute, then I'll go.\n\n*******\n\nThanks for reading, rating and commenting. I know the D/s aspect of this story isn't everyone's cup of tea. I didn't actually set out to write a D/s story, if you can believe that. Aly just kept surprising me with how submissive she was, and how that submission made her stronger, not weaker. I'll understand anyone who doesn't want to continue. But for anyone who does feel that way I just want to let you know that neither of the stories I'm working on now have any BDSM sides at all, so don't give up on me. \n\n \n"
    ],
    "authorname": "JCMcNeilly",
    "tags": [
        "lesbian",
        "romance"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/hero-worship-pt-04"
}