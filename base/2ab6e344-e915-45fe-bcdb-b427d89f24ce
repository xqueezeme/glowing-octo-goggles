{
    "title": "Possessing Bella Ch. 24",
    "pages": [
        " Authors Note: Due to the timing of the completion of this series, this chapter has not, as yet, been through the careful hands of my wonderful proof-reader and friend AisieLynn. I will endeavour to replace it as she has time to work on it for me. I hope you will forgive my eagerness to bring you the conclusion to this long running series and bear with the few bumps in the writing. ~ellie. \n\n Possessing Bella Ch. 24\n\n Rob had gone up to check on Bella late on Sunday night and found her asleep on the couch in front of the television that was replaying the start sequence of an old movie over again. She woke as he turned off the television and he smiled.\n\n \"You had a good time I trust,\" he said coming to sit beside her and she snuggled into his side.\n\n \"Mmhmm,\" she murmured sleepily. \"It was exciting and very umm, satisfying but I am still trying to work out exactly how I feel about the whole scene. It was different,\" she said thoughtfully becoming more awake as she thought about it. \"Thank you, Master,\" she said remembering why she had been with Josie and Gian in the first place.\n\n \"How you feel about what exactly?\" Rob repeated her words with a frown.\n\n \"I got the feeling she was more interested in what she had heard about me than she was in the real me,\" Bella said her thoughts rolling around the scene in her sleepy mind. \"It wasn't what I expected, not that I knew what to expect but,\" she paused trying to frame her thoughts.\n\n \"Can you tell me about it?\" Rob asked and after looking at him for a long moment told him about the scene, skimming over some parts and giving details in others. As she spoke, it became clearer in her mind that Josie was more interested in her reputation and the cache she would feel at having used the girl who was intimate with the most powerful of men in their elitist world.\n\n \"She wasn't cruel,\" Bella said quickly realising how she must sound. \"She was perfectly lovely,\" she smiled using Josie's favoured word when describing her, \"It was just, different. Like it was a test of what she had heard about me, at least in the beginning, maybe, in the end, it was more about showing me what she enjoyed.\"\n\n \"It's understandable,\" Rob mused. \"Given all that has occurred in the last year if you tried to write it into a book it would seem incredulous to anyone who lives this lifestyle.\" He pulled her onto his lap. \"I think even I have fallen into the misperception of the girl who can do everything.\" He wrapped his arms around her.\n\n Bella chewed her lip and looked up at him. She felt a shift in his mood to one of regret and she felt guilty of having made him feel that way. She wasn't sure what to say, so she snuggled into his chest and listened to the strong heartbeat of the man who loved her and cared for her so well.\n\n \"It was unfair of me to disregard how much your business means to you. My expectations and needs could never be met by a girl with such a demanding career,\" Bella gasped and looked up at him. She opened her mouth to apologise, but he put a finger to her lips. \"I love you, and that will never change, but we both need more in a relationship. We barely see each other for more than breakfast and dinner.\" He smiled sadly \"You need a man who will is there when you wake with night terrors and will soothe you back to sleep.\"\n\n \"It's rare these days that I wake like that,\" Bella protested.\n\n \"The club is my life,\" Rob continued brushing aside her comment, \"I work all night and sleep most days, I need a girl who can keep those hours and can be there with me, warm my bed and serve me when I need not when it is convenient for us both.\"\n\n \"Am I such a spoilt brat?\" Bella asked tears forming in her eyes.\n\n \"Yes,\" Rob chuckled. \"but I love you little brat, there is no other like you, and you bring me great joy, but if you are honest with yourself, you need more too. You need someone tall, dark and brooding, who will watch over you while giving you the freedom to be the corporate giant you are becoming. There is another man meeting that description that you once considered begging the collar of,\" he said meaningfully.\n\n Bella knew what he was saying, but she felt so conflicted when it came to Stephen now. He confused her with his attention and statements that he still loved her while keeping a distance between them. She wasn't sure if she could commit to him yet. She worried about being caged and kept away from the people she loved. He had been adamant about not sharing her once she took his collar.\n\n \"I think after the opening Kurt, and I will free you to date whom you like,\" Rob watched her as she stared at him teary eyed taking in his words. \"We will always be here for you. We are now and will always be your guardians regardless of the collar you may take. We are a family of sorts, and we know you have the skills necessary to choose your own path. There will be many like Josie, who wish to test your legend as the girl who survived,\" he warned. \"Trust those close to you already, Stephen is a good man, and he loves you deeply despite his mood this last month.\"\n\n \"He would keep me caged,\" Bella said quietly. \"I am not sure I could give up the few freedoms I have.\" \n\n \"I think you might be exaggerating that slightly,\" Rob chuckled. \"Be honest with him and you will find things are not always as they seem.\"\n\n Bella said nothing else as Rob picked her up and carried her to her bedroom. \"Get ready for bed, I will trust you from now on to look after yourself properly. If I find you have lapsed in any routine we will have to start the process all over again,\" he kissed her forehead and smiled. \"Sleep well little brat.\"\n\n Bella went to bed feeling saddened by her conversation with Rob. She had learned so much and gained confidence in her choices and abilities under his and Kurt's guiding hands. She knew that without them she would probably be in one of Binatang's cages hoping for rescue. She knew he was right in what he said but she was disappointed that she didn't try harder to make him happy, there must have been something else she could have done to make it work. Her thoughts tangled in her mind making sleep elusive for her. Eventually, she got up and wrote in her journal.\n\n *****\n\n Dorothea walked into the Marcol Building and rode the elevator up intent on being there for Bella during this week when she was anxious about the opening. She wandered through the newly appointed offices of Bella's team enjoying the splashes of colour she had Natalie had implemented. This was division was definitely run by a woman, Dorothea grinned. A year ago she would have laughed if someone had told her that this bastion of Male dominance could have been infiltrated by a woman and a submissive woman at that.\n\n She'd taken her medications and was feeling good, a few hours of light work would be good for her despite her doctor's orders to rest more. She smiled at Chelsea as she walked past her desk not stopping to interrupt the phone call that kept her from greeting the old woman.\n\n \"Dorothea!\" Bella exclaimed delightedly looking up from her desk as she entered the office. \"I'm so glad you're here today. We are going over to the store to see how the refit is coming along. Owen says the alarm system should be finished today, and we can start moving the display stock in.\"\n\n \"That sounds exciting,\" Dorothea moved forward to hug Bella, who had come out from behind her desk as she spoke. \"I can't wait to see how it all looks, knowing Natalie it is perfection.\"\n\n \"She's just been fabulous,\" Bella said, \"I don't know what I will do without her when the outlet is finished.\" \n\n \"So keep her on. You will need her expertise again for the next outlet,\" Dorothea said nonchalantly and took a seat in a bright floral chair.\n\n \"Gosh, do you think I could? What if it's not the success we all hope it will be?\" Bella said considering what sort of a position could be created for Natalie. \"My team is already much bigger than I expected and while Kurt hasn't said anything, I think he might if I kept Natalie on full time when a second outlet is still a dream.\"\n\n The new team she had here at the company were wonderful. Owen had suggested strongly two young men from his former department who had good knowledge of the trade and were more than eager to take the up the opportunity to work in the new division. Getting in on the ground floor meant that they would be on the fast track to promotions as the division grew and they were working as hard as everyone else to make sure it was a success. She had also hired six girls to work in the outlet and in addition to Owen she had hired two other jewellers. It was a large staff for one outlet, but she hoped it wouldn't stop at just one.\n\n \"In that case, you could keep her on a retainer and lend her to me for a project I am working on at the moment,\" Dorothea said. \"That could work out quite nicely. I'll talk to Kurt about it, leave that to me.\"\n\n \"Lucas and Boyd are here,\" Chelsea announced entering the open door of the office. \n\n \"Good, we'll be going then, tell Lucas and Boyd to meet us there,\" Bella said coming to her feet. \"You'll come with us this time, just in case, there are any last-minute issues.\" Bella went to her desk and gathered her briefcase throwing in her tablet and a few documents. \n\n When they got to the garage, Lincoln was waiting, and they made the journey to the store rapidly arriving before Lucas and Boyd, who had had to find parking. Dorothea was content to following at the rear of the team watching and taking in everything as they toured the new outlet that would open in just a few days. She was so proud of what Bella had achieved in such a short time. She often kidded herself that Bella was the daughter she had never been able to have but, in reality, Mel, Rob and Kurt were more like her pseudo sons and Bella the age of a granddaughter if she ever had one. \n\n Dorothea watched Bella with glistening eyes as she went through the outlet inspecting every element with a fine tooth comb. Each of the team hung on Bella's every word, and she felt her failing heart swell with pride. She had come such a long way since those first days with Mel. Such a scared little rabbit she had been, running off every time the big bad wolf raised its head and howled at her.\n\n Dorothea sat on one of the Roman stools and watched the team, Owen had stepped up in this new environment. The man who just cruised through life in the company going through the motions of the day to day work seemed to be bursting with creative energy. Bella's gift was listening to her team, she spoke little and chewed her lip thoughtfully as she took in everything everyone said to her and in some cases what they didn't say directly. She had realised that this man thrived on holding the pieces in his hands, working with the gems and precious metals and despite so many misgivings she had been right. The Bella of a year ago or even six months ago would never have stood her ground against Kurt and Rhys like to push through his promotion here and Dorothea was proud of the young woman she had become.\n\n \"Let's start stocking the displays,\" Bella said excitedly. \"I have come up with a detailed map of the spaces and where I would like displayed in each one. The mainstream pieces along the street aspect and the fetish pieces along the club foyer side.\" Bella had initially been horrified when Rob had evicted more than just one small business from the premises to give her more space, but he had taken her to see the mall in which they had their stores, and she was pleased that they were happy with their new locations. It had allowed her to expand the small onsite workshop for immediate repairs and resizing as well as space out the counters. The large marble furnishings would have looked too bulky in a small space, and now that the renovations were complete she was thrilled with how it all looked and the impact it would have at the opening.\n\n Dorothea smiled as Bella walked toward her trying to look brighter than she felt. \"I have some special pieces upstairs that I would like displayed on opening night, and now that the alarm system is in place, I can bring them down,\" Bella said helping Dorothea to her feet. \"Why don't you come for a walk with me and I can get your opinion before I bring them down.\"\n\n The women walked from the store and rode the lift up talking about the big night coming up. Once they got into the apartment, Bella led Dorothea into the comfortable study and sat in an armchair to lift one of the small boxes on the small occasional table and open it running a finger lovingly over the collar it contained. Mel's collar. \n\n \"I don't want to create a shrine to him or anything,\" Bella began to explain as Dorothea also took a seat, but I want him to be part of it all even if only in a small way. There is a special display cabinet where I would like to house this,\" she turned to show Dorothea what she held, \"and this.\" She touched the pendant of her guardians still hanging from the collar about her neck. \"I will wear a golden apple on the night,\" she said and opened a second box turning it on the small table between them to show her the beautifully crafted golden apple.\n\n \"It's beautiful, but I would have thought that you would want the protection of your Masters,\" Dorothea said dubiously having heard about Binatang's attempted abduction at the ball.\n\n \"Those that matter know I have the protection of Rob and Kurt. Those that don't would not respect the collar regardless of my wearing it,\" Bella said not needing to explain that further to this woman. \"Rob and Kurt are releasing me this weekend from that collar, so it's as good a time as any to choose one that suits my circumstances. This is meant to show that while I will be available that I am committed to my business. Not all Masters like their subs to have careers of their own,\" she said sadly.\n\n \"That is true for the majority I would think,\" Dorothea laughed lightly and began to cough. \n\n \"That's the other reason I wanted to talk to you before the weekend,\" Bella began and chewed her lip. \"You're not well. You tire too easily, Sera hovers around you anxiously and well, the brooches last weekend,\" she paused for a moment and took a deep breath. \"If something is wrong again I don't want to be the last to know like last time. I'm not the fragile little doll everyone thinks I am. I won't fall apart if... well if it is anything serious.\"\n\n \"The pacemaker isn't doing as well as predicted,\" Dorothea said without preamble. \"My heart is failing, and I don't want any more surgery. I am an old woman, I have lived a full and wonderful life, I don't want the time I have left to be spent in hospital rooms when surgery could just as easily shorten my life as prolong it.\"\n\n Bella's eyes welled with unshed tears, and she swallowed in a noisy gulp. \"So Sera and Charles know this?\" she asked in a small voice trying to hold back her sadness and despair at losing her truest friend and ally.\n\n \"Yes, as do Mike and Nyx,\" Dorothea said calmly. \"They have been helping me put my affairs in order. I do not want you to lie for me but if you could hold off on telling your Master's please I would appreciate it. They would try and force their will on me and make me have the risky surgery.\" She shook her head. \"I want to do this my way and my doctor says with enough rest and if I am careful I could have another year or two up my sleeve.\" She grinned trying to take the pain away from the news she was delivering.\n\n \"Will you let me help you too?\" Bella said visibly pulling herself together and dashing an errant tear from her cheek. \n\n \"I would like that,\" Dorothea agreed, \"but after the opening when things start to settle down a bit for you.\" Dorothea stood then and embraced Bella, \"Speaking of which we should be down there making sure everything is perfect, and these pieces have pride of place.\"\n\n *****\n\n Stephen stood in the small corner created by the doorway and the first of the display cabinets. He watched the sea of people ebb and flow as those who did not get personal invitations tried to see what the fuss was about as they made their way to the club for dinner. He smiled as Bella came into view again. She glowed with a pale pink blush created by the constant compliments she received on various items and the store itself.\n\n She looked stunning in the dress he had given her as she hurried between friends and acquaintances thanking everyone for coming to the opening of her first store. Rob appeared beside him leaning on the door frame. \n\n \"She is certainly a girl to be proud of,\" Rob said casually. \"Look at the respect and admiration she commands, even from the hard-asses in the crowd,\" Rob chuckled. \"The man who owns her collar when she is ready could not possibly hope to keep to her to himself, her legend grows daily and quite soon will eclipse even the great Dorothea Brown.\"\n\n \"James managed to keep her love and devotion despite that legend,\" Stephen added knowing well how devoted the men that James mentored were to his submissive wife. \n\n \"Therein lay their true strength. He could share her with those he trusted and know that he would retain her heart and devotion. He never showed or voiced his jealousy though no doubt it rose on occasion. How could it not when you have a love that great.\" Rob said looking directly at Stephen. \"The dress was perfect for this opening. The gifts show how well you know her, and love her.\"\n\n \"I do,\" Stephen admitted watching as Bella opened a case to show one of glass pieces Pete had made for her. Her face took on a soft look as she handled it with care. \n\n \"Then my friend you need to come to terms with who she is, instead of who you want her to be. She won't willing submit to a caged existence. She may love a range of people on different levels, but she will be as devoted to any collar she chooses for herself as Dorothea ever was,\" Rob clapped him on the shoulder and moved into the crowd before Stephen could argue the point.\n\n Over the last month, Rob had compromised a lot to accommodate Bella's life alongside his own. He believed that she knew as well as he did that their love for each other was not the stuff of legend. He needed his girl to mould to his life, not the other way around. He wanted someone who was available to him when he needed her not when she could fit him into her busy schedule. He did not begrudge Bella her career, in fact, he was proud of all she had accomplished, he though needed more than she could give him and still maintain the life she wanted. \n\n They had spoken a great deal during the week, and he was confident that she understood now the benefits of a proper diet and exercise. He knew that she had a good understanding of what the various sectors of the lifestyle offered her and she had a keen insight into what she was asking of any Master from whom she might choose to beg a collar. Not many men even those that loved her would compromise as he had for her. She understood that he had found her dedication to the company and Kurt's demands difficult. \n\n After tonight they would allow her to start dating if she wished, Rob hoped that Stephen would step up. He was working less at the club as his own business was taking off alongside the charity organisation he ran. Though he had not spoken about it often, through Bella he and Kurt had become aware of just what he had built for himself after Mel's death. Through the company, they had set up a trust for the charity to inject funds in Mel's names annually. With the charity receiving several anonymous donations, as shown in the previous year's annual report, Stephen had been able to put his funds and energies into his own business, and it was taking more of his time away from the club. Together he and Bella would be a formidable force in the business world as well as the lifestyle. \n\n Rob approach Belinda, who wore the black cocktail dress with a golden apple over her heart that Bella had chosen for the shop employees. He had been enjoying her company on occasion since the time she had stayed with him during the days when Lewis Arfor targeted the club and its employees. While she worked in the club, she chose tasks where she didn't have to be on display and available to the members. Rob was pleased when Bella gave her the job here in the store, keeping her close enough to be available to him. She did not like the intense pain in the submission that Bella did, but she did have the patience and appreciation for Nawashi, which pleased Rob.",
        "\"It's quite a turnout,\" he smiled at her.\n\n \"It's wonderful,\" she gushed, \"I'm so excited for Bella. I think many will return when we officially open for business on Monday.\"\n\n \"I have no doubt of that,\" Rob chuckled. \"It was wise not to do sales or take orders tonight. It leaves the stock for all to see. I have no doubt she could have sold out of some of the more specialised items.\" He leaned into her ear and murmured, \"Come down and see me when it's over and you can tell me all about it,\" he stepped back and gave her a sly smile, and she nodded with an answering smile. \n\n \"\"I would like that, Master,\" she said quietly. She had missed his company over the last few weeks. He made her feel safe and cared for and loved not for what she could give him but for what he could give her.\n\n Rob interrupted Bella as she spoke to a couple and kissed her forehead, \"I'm going down to the club now. Congratulations little one this was spectacular. Stephen is by the door should you need any help.\" He indicated the large looming figure near the door. \n\n \"Thank you, Master,\" Bella said excitedly and gave him a wide smile.\n\n Rob went to the door and stopped beside Stephen, \"Bring Bella and Belinda down to the office when it's done, we'll toast tonight's success.\" Stephen nodded saying nothing and watched as Rob left. \n\n Stephen continued to watch Bella as both dominant and submissive alike fought for her attention. Rob's words continued to roll around in his mind, and he searched the crowd for Dorothea but frowned when he couldn't see her. In fact, many of the stakeholder and their girls had begun to move down to the club to make room for others who waited outside without invitations for the opportunity to have a sneak peek at the new store.\n\n \"Isn't it all wonderful!\" Stephen was brought back from his thoughts by Tali, who bounced up to him excitedly. \"Master said we could come back Monday and get something pretty for me,\" she said in a high excited voice. So many lovely things I don't know what to choose!\"\n\n \"You found the precious pet range, I take it?\" Stephen chuckled.\n\n \"Yes! I want them all, but Master said no, I can choose just one,\" Tali almost pouted but grinned again, \"My birthday isn't too far away, though.\" \n\n \"That is lucky then,\" Stephen laughed and commiserated with Mark, who groaned and rolled his eyes, knowing he would spend a great deal of money in this store. \"I don't suppose you saw Dorothea leave did you?\" he asked.\n\n \"She went home with Sera earlier, I think Charles is still here, down in the club,\" he said with a shrug. \n\n \"She's been spending a lot of time with Sera lately,\" Tali commented, \"Maybe we should invite her over for dinner too. Can I, can I, please, please?\" She turned to her Master and bounced excitedly. \n\n \"I better get this girl home, it's been a bit too much excitement for her I think,\" Mark chuckled and led Tali out of the store and toward the front entrance of the building. The store remained full right up until the finishing time of midnight. It took Stephen lifting Bella to a seat in her tight skirt and standing beside her threateningly while she made the closing announcement.\n\n \"Thank you, so much for coming to this preview this evening. The store will be open for business on Monday. I look forward to seeing many of you return next week,\" she smiled as there was a polite smattering of applause and people slowly made their way toward the door. The two security guards that were regulars from the Club entrance held the door for people to leave without letting any further curious visitors into the store. The staff cleaned up the glasses and champagne bottles loading then into crates and taking through the back of the store to the service elevator and down to the club kitchen.\n\n Bella locked the front doors and turned off the lights setting the alarms system before following Stephen and Belinda through the back to the service elevator and down to the club. It was almost one thirty by the time she stepped into the kitchen and the welcoming embrace of Jake.\n\n \"Congratulations! I snuck up earlier, and the place was packed,\" Jake said wrapping his arms around her.\n\n \"Thanks it was great, better than I could have dreamed,\" Bella smiled.\n\n \"Rob and Kurt are waiting for you,\" he let her go but take this you could probably use it,\" Jake grinned and handed her a platter of hand wrapped spring rolls, and prawn toast. He gave Belinda a cheese and fruit board to carry and followed them in with an antipasto platter. All of her favourite things.\n\n \"This is wonderful thank you,\" Bella gushed suddenly feeling very hungry.\n\n \"I wish I could take all of the credit, but he ordered it.\" Jake indicated Stephen. \"Still I managed to pull it together in record time.\"\n\n \"Ah good, we can call off that search party,\" Kurt said easily as the small party walked through the door of the office.\n\n \"Familiar story around here, no one wanted to leave,\" Stephen chuckled.\n\n \"It went well then?\" Kurt said. \n\n \"We possibly could have sold out of some things on the first night, if we hadn't decided to go with just the teaser, sneak peek,\" Bella said. \"We'll see how many people come back when they are available for sale.\n\n \"They will come back,\" Belinda said confidently, \"At least the people I spoke to will for sure. They were all very excited by the range you had available for on the spot purchase and your willingness to take personalised orders. That's where the real drawcard is. Dom's like to put their initials on everything thy own including their girls,\" she giggled. \"I saw so many tattoo's tonight it was incredible and in places I would rather not have been shown,\" she let out a soft melodious laugh. \n\n The small group laughed and chatted easily dissecting the night and eating the finger food provided so thoughtfully by Jake and Stephen.\n\n Kurt stood with his glass in hand and raised it to Bella, \"Congratulations on your successful opening and here's to many more.\" The others raised their glasses and murmured their agreement as Bella beamed under their praise.\n\n \"I know there is a story to the name, but I've never heard it,\" Jake said as everyone drank to her continued success. \"Why did you call it The Golden Apple?\"\n\n Bella took a breath and explained, \"There is a myth I studied or heard at high school where the spiteful goddess of discord, threw a golden apple into a banquet on Mt Olympus that she had been excluded from, on it were the words \"For the fairest of them all.\" Three goddesses claimed the apple as their own and a mortal, Paris was asked to judge who the apple should belong to. Each goddess tried to bribe him with their gifts, Hera offered to make him king of Europe and Asia, Athena offered wisdom and skill in war, and Aphrodite, offered the world's most beautiful woman. Paris traded the apple for Helen, and we all know how that story went.\"\n\n \"Every woman wants the golden apple, and every man wants a woman like Helen,\" Jake mused\n\n \"Beauty is in the eye of the beholder my friend,\" Rob said with a chuckle\n\n Bella felt her high begin to wear off. She had worked hard and slept little in the past week putting all the final touches on the store she had dreamed of for so long. \"This has been a big day, and I hope you don't mind if I go up to bed, it's almost three O'clock,\" she began to stand awkwardly hampered by the tight skirt.\n\n \"I'll take both you and Belinda up. It's too late for her to be travelling home alone tonight,\" Rob stood as Stephen helped Bella to her feet. \"That means I leave with the golden apple and Helen,\" he laughed loudly following the girls from the room as the other men groaned.\n\n \"Let's get a drink and see who the stragglers are tonight,\" Kurt suggested as Jake piled up the remains of the platters and put them near the door for the kitchen staff to carry back in.\n\n \"Sure,\" Stephen said easily.\n\n \"I think I will go and make sure they are shutting down the kitchen properly and getting the prep done for Sunday breakfast,\" Jake stretched, \"I'll take a raincheck for next time.\" \n\n \"Suit yourself,\" Kurt shrugged, \"Just remember even God rested on the seventh day.\"\n\n \"Pot, kettle, black,\" Jake called over his shoulder as he walked into the restaurant.\n\n \"Have you talked to Dorothea lately?\" Stephen asked Kurt as they sat in the comfortable leather armchairs of the saloon bar watching the slow parade of the late night members.\n\n \"I assume she has been helping Bella with the opening from home or here,\" Kurt said unconcernedly. \"She hasn't been in at the company much this week, but that is not unusual. Is there something to worry about?\"\n\n \"I just have a feeling. I'll check it out tomorrow,\" Stephen said with a shrug. \"It's probably nothing.\"\n\n \"Keep me in the loop,\" Kurt said, \"There isn't much I wouldn't do for that little lady,\" he said with feeling. Dorothea had rescued both he and his mother from a violent home situation and had shadowed his young life, making sure he had the best opportunities possible. He worked his way through college on a half scholarship and her husband James, impressed with is hard work, had got him a job in a newly formed company. A company he now ran as part of a three-way partnership. He hadn't realised his mother was a submissive until that point in time, and that was how he and his mother had come under the watchful eye of Mrs Dorothea Brown.\n\n He knew many of his friends and acquaintances had similar stories gratitude and affection for James and Dorothea. They were well regarded even by the younger new generation coming through the club. At James funeral people the great cathedral overflowed with mourners he dreaded the day Dorothea followed him to his final resting place.\n\n \"Speaking of little ladies, shouldn't you be getting home to yours?\" Stephen asked.\n\n \"Since becoming pregnant she sleeps like a rock, and tomorrow is the seventh day,\" Kurt said with a grin. \"I'll be home for breakfast in bed.\"\n\n \"It's a good life for some,\" Stephen chuckled.\n\n \"Bella loses her restrictions and collar this weekend,\" Kurt said pointedly. \"She can date reasonably freely for once.\"\n\n \"That would explain the conversation I had with Rob earlier,\" Stephen scratched the side of his face, feeling more than just a five o'clock shadow on his face.\n\n \"We're her guardians, it's only natural that we have a vested interest in who she dates and the collars she might consider,\" Kurt said. \"She over thinks things when left to her own diversions, and I expect she won't exchange one perceived cage with a slightly open door for one threatens to take away the freedoms she currently enjoys.\"\n\n \"I hear you,\" Stephen said somewhat abruptly, \"I heard when Rob gave me the same speech.\" His tone was of a man who didn't want to discuss the subject, yet he knew that to own Bella would mean always being answerable to these men in some way. It irked him, yet he loved her and still wanted her like he had not wanted any other woman in his life. Tonight he realised that he would need to put firm boundaries in place when it came to her guardians once he had collared her.\n\n He had no intention of taking away the freedom she had to work or see her friends. In truth, he hadn't minded her interlude with Josie last weekend either. It was her devotion to another man's collar he couldn't abide and since they had begun to tentatively explore their burgeoning relationship she seemed to constantly wear another man's collar. He had been content to give her time given that the training was over, and he would not have to see her kneel at another's feet again until her guardians stepped in and collared her again. He had not been impressed and had raged in his private moments over the events that seemed to forever put distance between them. To him being a second, even to Rob, had been hard to bear.\n\n The question of caging her confused him, and he wasn't sure where it had come from, but he would find out when he saw her for lunch. If as Rob and Kurt had intimated, she was to be uncollared again. Then it was time that they spoke seriously about the future again.\n\n *****\n\n \"Hello Stephen,\" Dorothea answered her phone with a smile in her voice. \"To what do I owe this early morning pleasure?\" She asked.\n\n \"Can I not just call to see how you are?\" Stephen chuckled.\n\n \"I'm doing well thank you very much. I haven't changed since you saw me last night. Would you like to tell me the real reason you have called so early?\" Dorothea challenged him.\n\n \"You may have seen me last night, but I don't recall seeing you there. I think you have been conspicuously absent from all our lives lately including Bella's,\" he challenged her in return. \"Also, you seem to be spending a great deal of time with Sera, and I am concerned about you.\"\n\n \"Oh, you are so sweet worrying about an old woman like me. I am just working on a few projects of my own and Sera's enthusiasm is so motivating, so I have asked her to help me,\" Dorothea said easily. \n\n \"Would you like to have lunch with us today? I am planning on taking Bella out to the cove. You have always liked it out there on the cliffs,\" Stephen invited.\n\n \"Oh I would love to, but I already have plans with Mike and Nyx today,\" she replied with a cheery voice. \"Maybe next weekend if you both have some free time,\" she suggested. \n\n \"It's a date,\" Stephen chuckled, \"If you're sure you can fit us into your busy social life.\"\n\n \"I will always make time for the ones I love,\" she laughed and hung up the phone before she began coughing again.\n\n Stephen looked at his phone after it went dead. There was something not quite right with Dorothea, but he had done what he could for now. He gathered his few things together and went to get Bella. He knew that despite the late night she would be awake as always at a reasonable hour. \n\n After knocking he was surprised to find her still in her robe which looked like it had been hastily wrapped around her. Recovering his shock, he followed her into the apartment.\n\n \"Good morning, little one,\" Stephen said softly, \"Did you sleep at all?\"\n\n \"A little,\" she said wanly. \"Good morning, Sir Stephen.\" She smiled and went to the kitchen. \"Can I get you coffee or anything, I'm afraid I have gotten off to a slow start this morning.\" She poured herself a glass of juice as she spoke.\n\n \"How about you go and shower, and I make you breakfast for a change?\" he suggested seeing just how fatigued she was.\n\n \"You don't have to cook for me,\" she gasped livening up slightly. \"I will be fine in just a few minutes I promise then I can make us both something.\"\n\n \"Go and shower little one. You will feel better for it,\" he ordered advancing on her as she sipped the juice. \"Take the juice with you, the sugar will give you a little energy until you eat.\" He steered her in the direction of the bedroom and kissed her forehead. \"Do as I ask,\" he turned and walked away from her back into the kitchen.\n\n Stephen was disappointed with what was available to him in Bella's kitchen. He knew Rob had put her on a healthier eating regime but the lack of even bread to make toast with had surprised him. He found fresh fruit and natural yoghurt and muesli and while it was not his choice of breakfast food it would do until he could have something sent up from the early staff in the club kitchen. He believed in moderation in all things but as he inspected the juice she had been drinking he shook his head. Rob had not let her indulge in any of her preferred food over the last month by the look of it.\n\n He had to admit, as she came out of the bedroom and walked toward him that she looked wonderful. She had regained all of the weight she had lost and had become toned and supple in the process. She took a seat on one of the high stools and crossed her legs as he watched on appreciatively. He pushed a small bowl toward her and smiled.\n\n \"Are you feeling a little better now?\" he asked softly.\n\n \"I am, thank you, Sir Stephen,\" she said taking up the spoon and beginning to eat the yoghurt and muesli combination he had prepared. There was a soft knock on the door, and she swung her head toward it with a frown. She had not been expecting anyone else.\n\n Stephen went to the door and ushered in Jake, who smiled widely and presented breakfast for three. Moving to the dining room table, Bella was delighted to find her favourites underneath the clotches.\n\n \"Gosh thank you this is exactly what I needed,\" she said biting into a still warm, thick piece of cinnamon toast.\n\n \"I managed to get to the opening last night, but you were so busy I didn't get to tell you how fabulous it was,\" Jake enthused. \"I am going to make an appointment with the guy who was talking about designing emblems to match a man's ideas. That's an awesome service.\" \n\n \"Owen is so creative, he would be the best one to sit down and discuss it with,\" Bella nodded excitedly enlivened by Jake's enthusiasm, \"he's the workshop manager so he will be available in store by appointment.\" She added in case Jake didn't realise that Owen wouldn't be in the store full time.\n\n \"Yeah he said, but I think it will be good to create one, we don't all have a family coat of arms to fall back on like the big man here,\" he chuckled. \"While we are on the subject of fallbacks, though, and before you fall back into spending so much time with Stephen now that you are uncollared again, how about that date I mentioned?\"\n\n \"I wouldn't call him a fallback,\" Bella laughed lightly diffusing the look of consternation that had come over Stephen's face. \"I enjoy the time I spend with Sir Stephen.\" She paused for a moment and rushed on. \"The problem with dating you is that it would be hard to find the time. I work all day, and I am exhausted during the week and your biggest days at work are the weekends. I'm not like most submissives, and I can't just blow off work or be like a zombie during the day because I went out the night before.\"\n\n \"The store is open now, and you have stolen some of our best girls to work in it so you can afford to take it easy there now,\" Jake shrugged showing that he had no real idea of what she did at the company.\n\n \"You've been such a good friend to me, and it saddens me to say no, but I have to,\" Bella said with feeling. \"I just know it wouldn't be right for either of us.\"\n\n \"Well if you change your mind it could be a lot of fun, you don't have to consider the collar of every man you spend time with,\" he said knowing what she was getting at. \"Just think about it, you know where to find me.\" He turned to Stephen then and chuckled, \"One less shark in the pond for you to worry about I suppose.\"\n\n \"Suits me,\" Stephen smirked and helped himself to more bacon from the platter. He had been dreading her new dating status and her response to the first invitation she had received pleasantly surprised him especially given Jakes closeness to her.\n\n \"It's Mel's Birthday and a year since we lost him at the end of next month,\" Bella said softly. \"If I am honest I don't think I will be dating anyone just now,\" she looked up at Stephen as she said it and then looked down at her food again wishing she hadn't said that in such an abrupt way but unable to take it back. Since learning of Dorothea's illness, the anniversary of that day that Mel was shot had been coming into her mind more often. \n\n With time to process it, she had been able to accept Dorothea's decision to live her life as she wanted. To die in the way she wanted and she had come to terms with the fact that everyone dies one day. Dorothea's day was closer than most people knew about their demise and in some ways it was good that she knew so she could get her house in order, unlike Mel who had put many things in place without seeing the long term results of those decisions. She hoped he would have been proud of her and what she had done with all that he had given her. She was done playing games and flitting about in both the lifestyle and work. She knew what she wanted or, at least, she thought she did, but she needed to get past this one last obstacle. Then she hoped to be free to make some choices about her future.",
        "\"I've been away from the kitchen too long, and I am thinking you two might need to talk this one through without me,\" he grinned. \"Just leave the plates in the kitchen I will get the girls to come and get them later,\" he suggested.\n\n \"Thanks,\" Stephen said he eyes never leaving Bella.\n\n \"Yes, Thank you so much for breakfast, Sir Jake. It was just what I needed,\" Bella said quietly. \"I am sorry about the date. It just isn't a good idea right now.\"\n\n \"Don't worry about it, you obviously have a lot on your mind,\" Jake said easily and left them to talk.\n\n \"Nobody expects you to live like a nun while you are uncollared,\" Stephen said, shocked by what Bella had said more because of the cold, hard tone in which she said it rather than the words themselves.\n\n \"I imagine you are right,\" Bella smiled trying to take the coldness out of her voice. \"I also think that to be seen to be dating a kaleidoscope of masters would be frowned upon. So you see, the choice is mine to make, if I date Jake, and not Arek, both men I know and love in some way, how can I justify getting to know one and not the other better. Where does that sort of thinking stop when I have met so many good men and women,\" she said without emotion despite the smile on her face.\n\n Stephen said nothing as she spoke. In truth he was quite pleased with her choice for his own reasons but keeping her at arm's length for another month to six weeks would just about drive him crazy. \n\n \"It took Master Rob only a few weeks to work out that a sub with a demanding career was an unappealing proposition. He uncollared me last week rather than put up with the lack of time and control he likes. He seeing Belinda again,\" Bella admitted not realising how much this had upset her until she saw them together last night as he walked them both up to bed. She to his bed.\n\n \"I see now why you were so quick to refuse Jake's invitation,\" Stephen nodded. Believing that while she was being so honest about what she was thinking, it was the best time to talk to her about his concerns. \n\n \"Yes,\" she said quietly. \"He keeps the same odd hours as Master Rob. It could never work even if we wanted it to.\" She looked up at him then, and he saw the flicker of doubt cross her mind as she regarded him.\n\n \"You think the same about me now too?\" he asked. \"This is why you have told Rob and Kurt I will try and cage you?\"\n\n \"I didn't mean...\" she gasped and stopped talking to take a breath and steady herself. She knew this conversation would come sooner or later. Sooner it was, she decided and framed her thoughts as he gazed her giving her time to think. \"That isn't what I mean at the time, no,\" she said slowly.\n\n \"You have always made time for me, and I can see now how hard that must have been at times to manage, and I am grateful to you for it, more than you possibly know. I have been a spoilt brat over the last six months, and I have only realised in the last week or two how awful I have been to everyone especially, those I love.\" She blushed and looked up at him from beneath her lashes. \n\n \"That didn't answer my question,\" Stephen said stunned by her confession and thinking it was not true, but he stayed silent waiting as she gathered her thoughts again.\n\n \"On the last night at the ranch and a few previous occasions you said once I was yours, took your collar I mean, that you wouldn't share me,\" she said. \"It made everything seem so final. That once I wore your collar that I would have no more choices or exploring or work even, I would just be your submissive. Then as work became so busy and with Kurt and Rob stepping in and I saw you less and less I thought that maybe you had moved on too,\" she admitted. \"Until last weekend when you spoke about that complete commitment and refusal to share with anyone or anything.\"\n\n \"Firstly, collar or no collar I would never seek to stop you from furthering your career. I have only ever tried to help you there, with introducing you to Louise and showing you Pete's creations,\" Stephen said clearing up each misapprehension as he went. \"Secondly collar or no collar, everything you do is your choice, taking a collar merely means that I have a strong influence on those choices and that there would be consequences for not heeding my wishes. The choice though as always remains with you. I would not stop you exploring the lifestyle if you so wished but if you wore my collar, it would be my choice with whom and when you may do that exploring confident in the fact that you would be safe, and they would honour the collar you wear.\" It was his turn to take a breath. \n\n \"I will not share your collar, though, nor will I share the power to influence your choices that having you wear my collar would give me. I will not be second to Rob and have him continue to countermand my instructions nor will I be second to Kurt, though I will bend to his expertise when it comes to your career.\" Stephen's voice has darkened into a low rumble. \"Furthermore, I have been building my own business and spending less time at the club, so your concerns about managing a submissive with a career are forfeited.\"\n\n Bella chewed her lip taking in his words and thinking that they all made perfect sense but unable to find the words she needed to say so as his voice grew to more of an angry rumble with each sentence. His last point made her eyes well with tears as he explained that he had rearranged his life around her choices. The fact that he was handing over much of the responsibility he had at the club to Theo for a while now was not lost on her and had begun as a result of his time supervising her training schedule. Still he seemed content to be working more on his own business now, and she was glad about that because of it's charitable arm and the good work they did as well as the business venture itself which was taking off.\n\n He came around the table then and picked her up from her chair wrapping his arms around her and kissing her deeply, passionately and walking with her to the living room. He sat in the large armchair and pulled hr down into his lap kissing her again.\n\n \"I will not push you as I once did. I heard what you said about Mel's birthday, and memorial, and I agree that it is a time to remember him. I have an alternative for you to think about though if you are willing,\" Stephen said.\n\n Bella leaned into his chest enjoying the thrill his kisses gave her once again and enjoying the intimacy of their closeness. She had missed this all because she had misunderstood his words. Still she knew that the time spent with Rob and Kurt had been a necessary part of her development both here and at work. While she had been toying with the knowledge that she might beg his collar he had voiced her concerns about the memorial.\n\n \"Bella do you love me as you once did?\" Stephen asked in a soft, tentative voice as if unsure if he wanted to hear the answer.\n\n \"I feel like I have loved you for the longest time, Sir Stephen,\" she smiled. \"That hasn't changed.\" She reached up and stroked his cheek and was rewarded with a tender kiss.\n\n \"Now that you know I had no intention of caging you I would like for us to give our relationship some proper consideration. I will not push you to beg my collar before the memorial, but unofficially I would like us to be together, here during the week and at the cove on weekends,\" he said surprising her. \"As you said it took you and Rob several weeks to realise just how difficult sharing a life could be. It is only fair that we give the same time to our relationship before you start looking for another by dating.\" \n\n \"Unofficially?\" she asked a little confused as to what that would mean exactly. \n\n \"I will give you no collar not even a temporary one. I will trust you to honour an agreement made between us without the physical reminders until after the memorial,\" he said evenly. \"No one has to know but us what we are doing and in this way, we invite no commentary from the people who care about us. You can, of course, tell them if you wish but that choice is yours, and the consequences will be to invite them to comment or criticise your choices.\" \n\n \"No one will fault us for spending time together, we always have,\" Bella said thoughtfully. \"If questions come up about a collar I will answer truthfully that I am waiting until after the memorial to make any decisions.\"\n\n \"You agree to this arrangement then?\" Stephen asked making sure he had her full consent before saying or doing anything else.\n\n \"I do, Sir Stephen,\" Bella smiled feeling good about the choice he had given her. Within the next six weeks, she would find out how true he was to his words today or whether his jealous streak ran deeper than just not wanting to share her collar.\n\n \"Thank you,\" he said in a low murmur and kissed her passionately the hunger of his kisses returning and making her tingle. \"It's Sunday, and we will go to the cove, go and get your phone and shoes,\" he instructed smacking her ass as she got to her feet making her squeal delightfully.\n\n *****\n\n Bella was happy despite her misgivings about his jealousy when she was at the ranch. His explanation about not wanting to share her had seemed reasonable when the spoke to her about it and while the agreement they had now seemed duplicitous, it would, at least, allow her to find the answers to any unresolved questions she had about their relationship without having to commit to his collar immediately. His hand rested on her thigh as they drove and she smiled at the intimacy of his touch that she had missed over the last month.\n\n \"I feel like I haven't been here for such a long time,\" Bella said softly into the silence of the car as the abbey came into view looking more like a castle than ever.\n\n \"\"Just over a month I guess,\" Stephen acknowledged her thought. \"There have been quite a few changes in that time,\" He added as the car crunched down the gravel drive and pulled up in a new flagstone forecourt. \"Let me show you around,\" he said eager to show her how his business had begun to grow.\n\n The door she noted had been newly stained and polished to perfection, and as he opened half of it, she realised it was split at the centre to allow a wider procession of people to enter. The entrance room had also been split, and she stood in a large foyer now rather than the huge hall that once greeted her when she arrived. \n\n \"The front part of the Abbey is being restored back further than its original stonework to mimic medieval times. It turns out there is a big market for this type of a venue beyond the Brotherhood of the Cove and their re-enactments. One of the women who came to the last battle is an event coordinator. She said there would be a great deal of interest in having a venue like this so close to the city,\" Stephen said as she looked about in amazement, it seemed like a construction site when she had thought the great room was complete. \n\n \"I looked into it a bit more with her help and hired an engineering and architectural firm to draw up some new plans for the interior. I'd only ever concentrated on the living space while we were getting the exterior finished and waterproofed. It's a work in progress, but we are getting there,\" he said proudly. \n\n \"Is the great room is still behind there?\" Bella asked pointing at the wall that now stood in front of her. \n\n \"It's a temporary wall,\" he admitted, \"Have a look but you will need to have a bit of imagination still.\" He placed his hand on the back of her neck and guided her through a makeshift door beyond the temporary wall. The enormous room was still intact but at the end of it now lay a partially built grand staircase leading up to the second level. \n\n \"It will be breath-taking when it's complete,\" Bella said almost reverently looking up to the great cathedral ceilings in this part of the Abbey. Still looking at everything despite the dust and grime of construction Bella was impressed with how much work had been accomplished in such a short space of time.\n\n \"We're going to restore the smaller chapel, through there and on that side create a banquet hall and professional kitchen,\" He said guiding her carefully toward the back of the abbey where his residence lay. \"It will take the rest of this year I expect to get most of the plans done but with some steady donations into the Rehousing and Retraining Foundation work we have going on here we have quite a lot of semi-skilled labour at our fingertips for the builders to work with. It's a win-win for the men and women the foundation assists. They get the helping hand to get back on their feet, and I get the labour I need to complete the project faster.\"\n\n \"What will they do when the Abbey is fully restored?\" Bella asked curiously. \n\n \"There are years of work on the grounds and then we will always need staff for events that are held here,\" he said as if he had answered the question many times.\n\n \"It's amazing,\" Bella said as the entered the kitchen at the rear of the house.\n\n \"Hello again,\" a strangely family female voice said making Bella turn quickly to find the source.\n\n \"Bella you remember Anissa, you met her at Master Kolton's home during the gathering,\" Stephen smiled at the woman.\n\n \"Anissa! Yes, gosh how are you?\" Bella grinned and went to greet the woman who held her arms out to her. \"I'm so surprised to see you here.\" \n\n \"Anisa and her Master are here as the caretakers while Jared and Sophie tour the world with Pete,\" Stephen said conversationally. \"Where is Thomas?\" Stephen looked round. \n\n \"Where do you think? Talking someone's ear of about the builder caste of Gor,\" she rolled her eyes heavenward.\n\n \"He's a good man that tells a good tale,\" Stephen said with a smirk.\n\n \"I have your basket ready, and I believe most of your men have arrived and are down at the new battleground looking for a reason to draw their swords and play war,\" she said with a grin. \"Thomas couldn't wait to show them all the plans for the land.\"\n\n \"You're a bit cheeky when not under the Gorean rule, I might have to talk to Thomas about that,\" Stephen's voice lowered.\n\n \"Thomas would be more than happy to enact that rule here but I am not sure your workers would enjoy it, or the sight of me in a casmisk,\" she chortled.\"\n\n \"True,\" he agreed, \"but make no mistake about who is Master of this Home,\" he said rumbling his deep bass voice at her and she quickly lowered her eyes and placed her hands behind her back. \"I do not expect the protocols of Gor to be observed here, and we are friends Anissa but do not mistake that informality for a lack of concern for the respect due to a Master.\"\n\n \"Yes Master,\" she answered demurely, and Stephen guided Bella into his tower. \n\n They walked down through the dungeon and Bella breathed in all the scents she associated with sex, leather and furniture polish and something undefinable but present in the air that made a small shiver run up her spine. They passed through the space however and exited into the walled garden. A month had given the new plants time to settle into their new beds, and they thrived here. Even at this time of year, they seemed to be lush and green with several smaller shrubs still flowering in the warm days.\n\n Stephen spread out a blanket and invited her to sit with him. Unpacking the basket slowly he commented on the food. Neither of them was particularly hungry after the late breakfast, so the nibbled at the delicious lunch Anissa had packed for them, and Stephen spoke about his expectations of their new agreement.\n\n \"I have no wish to interfere with your career or work at the company,\" he reassured her. \"As always Kurt is the best man to guide you there and have no issue with him maintaining that role in your life. Likewise, you should maintain a presence in the club and know the members, so working with Rob two nights a week should not be too onerous and allow you to maintain the close relationship you have with him.\" Stephen was very business-like as he detailed his thoughts and expectations. \"I've noticed that you tend not to use the office space in your apartment much,\" he said in an inquiring voice.\n\n \"I prefer my laptop, and I like sitting in either the living room or dining room when I have time, not that I have had much time to do any work from home recently,\" she explained.\n\n \"I would like to use that space then when we are there during the week, my office in the club is not always conducive to concentrating on other business matters,\" Stephen said.\n\n \"Of course,\" Bella agreed easily, \"I may have to purchase a different chair for you, but the desk is large.\"\n\n \"I'm sure I can manage any changes I need, thank you,\" he smiled widely. \"I will keep any changes to your apartment to a minimum until such a time as we formalise as we formalise our relationship.\" He knew he had said he would not press her to beg his collar, but he could not help but mention it at moments like this, he did not entertain the idea that it would not continue beyond the memorial.\n\n \"You will move into my apartment?\" she asked trying to work through all he had said in her mind.\n\n \"Not entirely just yet, my belongings can stay in the small apartment next to yours for the time being, aside of a few items, like a toothbrush perhaps,\" he chuckled easing her concerns. \"I don't want you to feel trapped or caged by this. I want you to have the freedom to make choices while exploring how good we could be together. What I want more than anything else is for your consideration and at times, consultation in making those choices.\"\n\n \"If I had accepted Jakes offer of a movie date?\" Bella asked carefully.\n\n \"I imagine there will be many offers for you to choose from,\" Stephen chuckled. \"I would like you to ask my opinion about them, but I would not stop you from accepting because of our informal agreement. There are others I can enjoy the company of if you choose to go out on a date.\" He continued to chuckle as a surprised expression briefly fluttered over her face. \"I am not saying I would be pleased if you chose to date only that I allow you that freedom of choice as you would understand that I would be free to enjoy similar diversions.\"\n\n \"That would only be fair,\" she finally said quietly. The thought of Stephen considering other girls and dating them unsettled her, but she could see his point, and it would be truly selfish of her to expect otherwise. She had just never considered that side of it before, and his response came as a surprise.\n\n \"I will compromise on many things for you Bella, but as I said to Anissa earlier, do not mistake that for weakness or lack of concern on my behalf. I will be your Master in every sense of the word though you will still address me as Sir until things are more formalised,\" Stephen's voice had deepened taking on a very serious tone.\n\n \"Yes Sir Stephen,\" she whispered quietly his words rolling over in her mind. \n\n \"Do you still agree to this arrangement, at least until the memorial?\" Stephen asked tilting her face up to his in the hopes of reading her expressive eyes.\n\n \"I do, Sir Stephen,\" Bella said quietly but confidently. Everything he had said since breakfast had made her realise that the cage she thought he offered her was of her own making. He leaned over and kissed her deeply pulling her to him and holding the kiss for a long time. She felt the familiar thrills run up her spine as his passion for her came through the kiss.\n\n Stephen groaned and pulled Bella to her feet pushing her back toward the dungeon door. He guided her down the steep steps carefully before flinging open the dungeon door and pushing her roughly through. The door slammed, and Bella turned quickly to find him advancing on her, the smile he wore did not match the growl of his voice as he ordered her to display.\n\n \"You will stand perfectly still,\" he commanded as she laced her hands behind her neck.\n\n Yes, Sir,\" she said softly watching him warily unsure of the rapid change in his demeanour. ",
        "His hand wrapped around her high ponytail and reefed her head back before lowering his to kiss her hard bruising her lips in the process. His free hand ran down over her breasts and stomach dipping under her dress to find her G-string panties. He growled unhappily into the kiss and bunched then in his hand pulling up high making her gasp in pain as he yanked several times until the came away from her body and she whimpered into his kisses.\n\n \"It has been difficult to keep you at arms-length these past weeks,\" Stephen said as he stepped back unbuttoning his shirt and pulling it from his black jeans. \"I realise that situation was not entirely of your making and as you have said it did have its merit but my discomfort during that time requires compensation.\" He shrugged the shirt down his arms and threw it into a chair in the corner.\n\n \"I am sorry, Sir Stephen,\" Bella said softly.\n\n \"You will be,\" he informed her. \"While Rob and Kurt have offered me a conciliatory pat on the back, you, my sweet little slut need to compensate me in an entirely different way. He went to a corner and picked up a short flexible whip. He flicked it at her testing its reach, and it bit into the exposed side of her breast and back making her yelp. \"Lovely,\" he murmured and approached her undoing the clasp on the halter top of the dress and letting it hang down over the wide belt to expose her breasts.\n\n Bella quivered as he circled her feeling the coarseness of the plaited leather whip caress her skin. He stepped back and the whip struck her again on the other side of her body, the tail wrapping around and created a livid red welt across her breasts. She bit her lip in an effort not to cry out and whimpered loudly.\n\n \"You have five seconds to remove what remains of the dress or risk it being damaged,\" Stephen's deep bass warned, and he watched as she scrambled to comply stepping out of the dress and kicking it away before resuming her stance.\n\n \"Not content with having two masters to instruct you, you also sought out a Mistress,\" the whip cracked against her ass and curled around her hip. \"Such a needy slut, two Masters and two mistresses,\" he said with a knowing smirk. Gian had been bubbling with excitement when they had come back to the club that evening to relax after their tryst with Bella.\n\n Bella gasped, he knew that she had served both Josie and Gian? It wasn't common knowledge that she had done that, she didn't think it was anyway. Her mind whirled as the whip landed on her ass again, making her stagger a little in her stance. Stephen stepped forward and caught her pressing up against her back.\n\n \"I told you to remain still, whips can be dangerous on moving targets,\" he murmured in her ear. \"If you cannot remain still on your own I will help you,\" he growled and discarded the whip forcing Bella to a sawhorse and pushing her down along its length. He quickly cuffed and secured her wrists and ankles slapping her ass between each one leaving large red handprints with the force of each slap. He spanked her several times as he circled her ensuring she was secure and dipped his hand between her open legs feeling her hot, wet cunt. \n\n \"So my needy little slut, I haven't heard a thank you out of you yet,\" he slapped her red ass again.\n\n \"Thank you, Master,\" Bella said without thinking earning her another slap harder than the last.\n\n \"Have you had so many masters you forget who you are with?\" His bass rumbled over her.\n\n \"I am so sorry Sir, please forgive me,\" Bella pleaded in a voice that cracked with disappointment.\n\n \"Bella,\" Stephen squatted down beside her to look into her eyes, \"I love you, and I can forgive you anything, but there will always be consequences,\" his smirk told her this would be a long painfully pleasurable afternoon. He stood then knowing her face was at his waist and undid his belt. He smiled as he drew his cock out before her eyes holding mere inches from her face.\n\n \"Contrary to what you believed I am not adverse to you exploring your interests,\" he said as he fisted his cock stroking it slowly just out of her reach. \"The idea of seeing you dominated by a Mistress is appealing on some levels. It is difficult to see what you want just out of your reach but when you claim it as your own it's so satisfying,\" he let go of his cock, letting it dance before her eyes as he pulled his belt through the loops of his pants.\n\n Staying where he was his hand travelled down her back and dipped between her legs again teasing at her cunt and forcing her to rub against the small wooden beam of the saw horse that split her body in two. He delighted in her whimpering as she squirmed below him and craned her neck to get closer to his cock. He continued to tease her pushing two fingers into her and finger fucking her until her body shook with her impending orgasm, and then he stopped.\n\n \"Almost painful isn't it, to get so close to what you desperately need and then have it taken away,\" Stephen growled and squatted down beside her again. He was pleased when she whimpered and looked up at him. \n\n \"Yes, Sir,\" her voice was high and trembled with her need as he stroked her hair from her face.\n\n \"I don't just want you, Bella, I love you and have needed you painfully over the last month, but I had to wait for you to come to me, I need to know you want and need me in the same way,\" his voice was thick with emotion. \"I want you to know what it is like to almost have it all and have it dangled just out of reach.\"\n\n \"I know,\" she said tears forming in her eyes. \"I have hated the distance you put between us when we saw each other over the last weeks. I felt that more so than any punishment you could devise down here in this dungeon.\" She admitted sadly. \"When you told me last weekend that we would remain just friends, my heart ached like I have never felt before,\" she began to cry softly. \"I know and understand the punishment.\"\n\n Taken aback by her confession Stephen quickly unbound her and pulled her into his arms kissing her deeply. He rolled her to the floor and entered her then without preamble the teasing having affected him as much as her. He drove into her in a furious need to possess every inch of her.\n\n Bella wrapped her arms and limbs around Stephen as he took her hard, and fast she felt her climax wash over her suddenly, and she arched up against him her cunt wringing out his orgasm as it clenched and pulsed around his cock. He hadn't bothered to try and hold back his cum, and he howled out as he came feeling the emotions they had been toying with heightened at that moment. He gathered her into his arms and lay on the floor with her held tightly against his chest, while they both considered what had just occurred and unwilling to break the silence.\n\n Only when the cold of the stone floor began to seep into him did Stephen roll away from Bella and stand helping her to her feet. He kissed her tenderly and smiled brushing an errant curl from her face. \"Get dressed, little one, it's cool down here in the dungeon, and I don't want to be the cause of you being unwell.\"\n\n \"Thank you,\" Bella said simply. Then she reached up to touch his cheek softly, \"I needed to hear all of that,\" she explained. \"I needed you to tell me.\" She blushed and went to pick up her dress from where it lay discarded on the floor as he watched with a bemused look. \n\n \"Are you okay?\" he asked softly as they mounted the stairs after dressing quickly.\n\n \"I feel better than I have in some time,\" she smiled up at him and seeing his look of concern laughed lightly. \"I love you,\" she stood on her toes and reached a hand up to his cheek to guide his head down to kiss her. His low rumble almost seemed to purr as he lowered his head to kiss her. \n\n He put his hand on the door and whispered, \"Before we go out there, and you meet my men who will more than likely be waiting for me you should know I am the Lord of this land and the Brotherhood of the Cove.\" He said with a little edge to his voice. \"The king of this castle so to speak and they will refer to me as such.\"\n\n \"Yes, Sir Stephen,\" Bella said tilting her head in confusion as to why this would bother him so much as to warn for of it. \n\n \"They are not all into the lifestyle, but they hold to the knights code which is important to me, to us as a group,\" he tried to explain but decided not to explain further. He opened the door guiding her out into the brightly lit living area where six men stood up immediately and looked at them expectantly.\n\n \"Greetings my Lord,\" the nearest of the men said coming forward to grip Stephens' arm in a warrior's greeting. \"We stayed hoping to talk to you about the battlefield if you have time.\"\n\n \"They stayed to meet the Lady Bella,\" Thomas chuckled from behind them coming to his feet. \"The battlefield is going to be perfect. Arek has done a good job of the plans I hope he can pull it off.\"\n\n \"True enough,\" another man said also gripping Stephens arm in friendship and smiling at Bella. He took her hand in his and held it to his lips brushing them lightly over the surface. \"Greetings my Lady, I am Sir Tristan, but most people just call me Tris,\" he said with an infectious grin. \n\n \"Put her hand down Tris,\" Stephen said good-naturedly. \"She is way out of your league. Everyone this is Bella, and this is, Tris, Lance, Gerry, Boris, William and Ed.\" He went through the names quickly waving a hand at each man as he said their name. She smiled as each dipped their head in acknowledge of the introduction.\n\n \"Why don't you go and see if Anissa needs any help in the kitchen while I talk to the men for a minute,\" Stephen suggested. \n\n Bella knew it was a command from his tone and unable to resist even though she knew it may cost her some form of punishment she dipped into a small curtsey and smiled sweetly as she said, \"Yes my Lord.\" Then she hurried off to the kitchen.\n\n Bella found Anissa taking inventory in the large pantry and though Anissa refused any help she was happy to have the company and answered all of Bella's questions about the renovations to the Abbey and its surrounding grounds. There was an old farm house on the new block of land bordering this one that Stephen had bought. It was being demolished and rebuild in a similar stone to the abbey, and she and Thomas would move in there and run a small hobby farm to help supply the abbey with its needs. It would also mean continued work for the men and women who relied on this place to get back on their feet.\n\n \"Thomas has fallen in love with the whole idea of this place. The knights code and helping those less fortunate while indulging full time in a life very similar to that of the Goreans and their homes,\" Anissa said. \"You work hard for the good of your city and caste. He is getting a bit old for the builders game nowadays, but the farming appeals to him especially if he can have his own forge and horses.\"\n\n \"Is it like Gor for the women too?\" Bella asked.\n\n \"Well it won't be for you, my Lady,\" Anissa grinned. \"You will be treated like a delicate flower and be expected to behave like a sweet and innocent young woman. The serving girls, on the other hand, may wear more clothes than the slaves of Gor, but they can be bawdy or flirty and can expect to be groped and propositioned often.\"\n\n \"You should look at the plans for the grounds, they are quite extensive, and I believe that Arek has brought a neighbouring property so he can be close by during all the landscaping work he has set out. I wouldn't be surprised if this Brotherhood Stephen has begun here with his friends doesn't become big enough to rival the gatherings of Gor,\" she said. \"Perhaps with the interest of both Arek and Thomas, there will be more than a bit of an overlap.\"\n\n \"I'm not so sure about that. The whole Gorean notion of survival of the fittest and enslaving the weak doesn't quite fit with the charitable side of the Brotherhood here,\" Bella said thoughtfully.\n\n \"If you try to see it regarding Lords and peasants rather than Masters and slaves it's not so hard to find the common ground,\" she explained her thinking in more direct terms.\n\n \"I guess,\" Bella said unconvinced. She yawned, \"I am so tired it seems like forever since I have slept properly.\"\n\n \"Would you like some coffee?\" Anissa offered looking at her critically.\n\n \"No thank you, I never developed a taste for it,\" she admitted. \"I'll be fine. I will sleep on the drive home.\"\n\n \"They will be ages yet if recent conversations are anything to go by,\" Anissa smiled. \"The is a small couch under the covered walkway on that side of the house,\" she pointed toward a large doorway. \"Go and lie down for a bit it will make you feel better, it looks like you may need the rest.\" Her finger ran along the red strip visible on Bella's back and side disappearing beneath the halter top of her dress.\n\n \"You might be right,\" Bella said sliding from the stool with a blush, \"Wake me when they're done.\" She walked in the direction Anissa had pointed and found the small couch. It was more comfortable than it looked and she easily dozed off in the warmth of the afternoon.\n\n Bella wasn't sure how long she had been asleep but her arms tangled around Stephen's neck as he lifted her from the couch and carried her through the living area and up the stairs of his tower. She nuzzled into his neck as he held her close and she was reward by him pulling her closer and holding her tightly.\n\n He placed her on her feet and stood behind her as she took in the three hundred and sixty degrees view the top of his tower afforded them of the sunset. The inky black night sky rose up out of the dark waters of the cove and pushed the sun towards the hills of the surrounding hinterland. \n\n \"It's beautiful,\" she whispered daring to disturb the silence of the moment.\n\n \"Did you enjoy your rest?\" He asked equally as quietly.\n\n \"I feel very refreshed,\" she smiled. \"I didn't realise how tired I was until I sat talking with Anissa for a while.\"\n\n \"Good, I thought we might stop on the way home to eat. If you are up to it,\" he said in a questioning tone.\n\n \"I'm not dressed to go out anywhere elegant, but a caf\u00e9 maybe,\" Bella said softly looking down at her short dress that was looking the worse for sleeping in it.\n\n \"I have something you can wear,\" he murmured into her ear, \"but I would be just as happy if you wore nothing at all.\" He smiled seeing her blush and giggle self-consciously in the darkening evening light. As the last of the light died from the sky, he guided her down into his bedroom. \n\n \"This,\" he said removing a large box from a chest, \"was originally what I had planned to give you for Valentine's Day so you could have it for the grand opening.\" He placed it on the bed near where she stood. \n\n \"The dress you gave me was exquisite and more than generous considering,\" she gasped lifting the lid from the box. A long black cigarette holder and a three strand pearl necklace sat on top of the tissue paper covering the dress. \"Breakfast at Tiffany's!\" she picked up the two items and peeled back the tissue revealing the slinky black dress. It was beyond thoughtful that he had remembered one of her favourite old movies they had once watched together and its appropriateness for the launch of her new jewellery outlet. She put down the pearls and holder and picked up the dress hugging it against her body. \n\n \"Thank you,\" she whispered putting it back down and throwing her arms around him. His height made it impossible for her to kiss him spontaneously, so she buried her face into his chest. \"Thank you so much.\"\n\n \"Happy uncollaring day,\" Stephen said uncertainly and picked her up to kiss her rather than bending down to her height, loving the feel of her small frame in his arms. \n\n \"May I shower quickly please,\" she asked.\n\n \"Yes, I will shower while you dress because if I come in with you, it will be anything but quick,\" he chuckled putting her back on her feet. He continued to chuckle as she quickly undid her dress and stepped out of it on her way into the bathroom. \n\n Half an hour later they left the Abbey and rode to the restaurant where they had shared their first kiss. Bella smiled at the memory despite the emergency dash to the hospital to see Dorothea at the end of the meal. Her mind clouded as she thought about her dearest friend and the knowledge that her days were numbered.\n\n \"What's wrong,\" Stephen asked helping her from the car. \n\n \"I just remembered the first time we were here,\" she smiled up at him, and he nodded letting it pass assuming she had remembered the end of the evening. Stephen was greeted like an old friend and shown to a table near the dance floor. He and Bella ate a perfect meal and drank a beautiful wine with it. She seemed more thoughtful than usual, and he worried that the memory of Dorothea this place had evoked had stayed with her.\n\n Pulling her onto the dance floor he wrapped his arm around her waist and pulled her close lowering his head to whisper, \"Stop worrying and enjoy the music.\" His lips brushed softly over hers, and they danced until desert arrived. \n\n \"I will have to do extra time in the gym this week after today,\" Bella laughed lightly as she ran the spoon around the plate picking up the last morsels of Pavlova. \"I wanted to finish work early, at least one day this week to go and see Dorothea, but I am not sure I can skip gym now.\"\n\n \"Why can't you see her at work?\" Stephen put down his spoon and looked at Bella critically as she froze with her spoon in her mouth. He could almost see her berating herself in her expression as she slowly lowered the spoon. \n\n \"She resigned to work on some personal projects,\" Bella said trying to keep her voice light. \"She still pops in from time to time but I miss her, and I know she will want to hear about our agreement. You did say I could tell someone if I wanted.\" She hastily added trying to steer the conversation back to them.\n\n \"I think that is an excellent idea,\" Stephen could see the anxiousness in Bella as she spoke about Dorothea and he was more certain than he was that morning that something was going on with Dorothea. \"We should have her over for dinner tomorrow night, and we can both tell her,\" he suggested testing her reaction.\n\n \"Oh umm, Monday's aren't always the best days. I'll call her tomorrow and see when she can make it,\" Bella offered to try and hold off the inevitable conversation. Dorothea had not asked her to lie for her, but she had pressed upon Bella that she didn't want her Masters to know of her ill health yet.\n\n \"I see,\" Stephen murmured not pushing her and thinking about how to approach this subject differently. It was obvious that something was going on, and he wanted to know what it was. He let Bella change the subject to her early morning start and taking the hint that she wanted to leave he paid the bill, and they left heading back into the city. They were both relatively quiet listening to the soft music as they drove and contemplating their individual thoughts regarding Dorothea.\n\n \"Sir Stephen,\" Bella said quietly into the darkness of the car as they reached the city limits and she knew they would be home soon. \"In all these months that I have been learning about the lifestyle and the company there are two things I know absolutely,\" she took a deep breath. \"Love can make you endure unbearable things,\" she turned to look at his profile knowing she had made him wait longer than he should have for her to come to him ad agree to be his. \"The other is that love is nothing without trust and honesty to back it up.\"\n\n \"I agree with that,\" Stephen said unsure of why she had begun to speak in this way.\n\n \"The problem is that keeping secrets can warp those truths a little at times. I don't want anything to warp or strain the relationship we are beginning to explore properly,\" she said it in a rush having made up her mind to tell him about Dorothea and praying that he wouldn't push her to do anything she didn't want to do.",
        "\"You weren't honest with me tonight were you,\" he asked not wanting to entertain the idea that it had been anything that had occurred between them earlier in the day that had brought this thoughtful confession out.\n\n \"I was honest in what I said but,\" she fought to find the words. \"There is more in what I didn't say,\" she admitted.\n\n \"I will miss her when she is gone,\" Bella said in a small voice and Stephen felt a knot tighten in the pit of his stomach. He fought back the impulse to rage at Bella and make her tell him everything right then and there. His jaw clenched, and he gripped the steering wheel tightly letting her talk. \n\n \"She came in to do the showroom inspection with us on Wednesday, but she looked pale, and she got tired so quickly, so I took her up to my apartment to get a few pieces and confronted her. Her heart is failing, and the pacemaker is not doing the job as well as we all had hoped it would. She doesn't want more surgery, and she is terrified that you and Rob and I think mostly Kurt will try to force to have it. She is putting her affairs in order and spending time with the ones she loves. The doctors say if she looks after herself she could live another year or more. She doesn't want to spend that time in a hospital, so she asked me not to tell anyone else yet. I agreed to let her tell people in her own time,\" Bella let a tear roll down her cheek, after holding that in for days she finally let herself contemplate a future without Dorothea in it, and she placed her hand over the hand Stephen had dropped to her thigh as her voice quavered.\n\n Stephen understood now why the old woman was keeping her distance while showing up at the big events on the calendar. He also understood now why she had been spending so much time with Charles and Sera, who had been protecting her and cared for her. Despite her little girl persona, Stephen knew first hand that Sera was a trained emergency nurse who could handle any crisis with professionalism and efficiency.\n\n Pulling into the car park and turning off the engine he sat back in his seat. \"Thank you for trusting me and being so honest. You are right secrets can warp and twist even with the best of intentions. I won't betray that trust,\" he said stiffly. \"I want to but I won't,\" He reassured Bella. \"Come little one, it's been a long day, and you need some rest.\" His plans of having her kneel at his feet and questioning her about Dorothea having evaporated with her confession. Now he just wanted to hold her and tell her everything was going to be alright except he knew, in this case, it wasn't. \n\n They went up to her apartment, and he smiled as she undressed hanging the gown in her closet and storing the pearls in the lacquered box on her dresser. Unbuttoning his shirt and shrugging it off he followed her into the bathroom and took a new toothbrush from the draw joining her at the twin basins. Bella watched him in the mirror thinking it was so strange to be doing these normal things with a Master. She couldn't think of another time one had stood with her like this preparing for bed.\n\n Climbing into bed, Stephen pulled her toward him and kissed her. He rarely slept more than an hour or two each night, but he had no intention of letting Bella go yet. He kissed her running a hand down the length of her body before sliding it around her hip to cup her ass. \n\n She smiled into his kisses and squirmed against him enjoying the softer side of him. She nuzzled into his neck and whispered, \"How may I serve you tonight, my Lord?\" her hand trailed down his torso to his cock and she felt it twitch under her hand.\n\n \"Cheeky little wench,\" he growled smacking her ass. \"I was in two minds as whether to punish you or reward you so I will do both,\" he threw off the covers and rolled to his back taking her with him. He pushed her up to sit on his cock, and she ground her cunt down onto him. He smirked slapping her ass again, then lifting her hips and positioning his cock so she could grind down onto it properly. \"Fuck me,\" he commanded and slapped her ass hard making her squeal delightfully and begin to move over him. With some encouragement from his smacks to her ass, she got into a steady rhythm, and he moved his hands to her breasts alternately slapping them and pinching and twisting her nipples as he pulled them out from her body to make her whimper loudly. \n\n Bella felt the thrill of being allowed to fuck him even as each slap to her ass reminded her of his dominance. The warmth of the pleasurable pain filled not only her ass but her cunt as well as she rode his sizable cock. When his hands transferred their attentions to her breasts, she felt the butterflies in her stomach, and her limbs begin to quiver as she drove higher towards her climax. Here in her soft bed without any of the torturous equipment of his dungeon or the playroom, she was rapidly scaling the heady heights of her need for release and her need for him. \n\n Her rhythm faltered, and she felt him take hold of her hips and buck up into her hard until she began to come letting her grind down over him and massage her clit against the hard muscles of his pelvis.\n\n He gritted his teeth trying to hold back his climax staying perfectly still below her and watching the beautiful sight of the woman he loved trembling in ecstasy at the end of his cock. He gave her a moment more then picked her up using her hips as leverage and pushed her down the bed widening his legs to accommodate her. \n\n \"Clean your mess needy slut,\" he growled wrapping a hand into her hair and guiding her head to his groin. She began lapping at his thighs and then his balls driving him nearly crazy with desire by the time she put her lips to the head of his cock and began to suck him slowly rolling and fluttering her tongue to tease him all the more. Unable to remain passive any longer he tightened his grip on her hair and began to force her mouth up and down his cock as a faster pace. Feeling her swallow around his deep thrusts, he began to buck his hips, and he pushed her head down over him. \n\n \"Swallow. It. All.\" He growled on each thrust as he filled her mouth with cum and groaned loudly as she sucked him dry and continued to suck long after he had stopped coming making it almost painful to keep his cock lodged in her mouth. Pulling her mouth from his cock with a satisfying pop he dragged her up the bed and rolled her to her back pinning her down with her arms above her head and gazed at her with hard eyes. \n\n \"There are things I have been longing to do with you, my little fuck toy that only a true pain whore would enjoy,\" he growled, transferring her hands to hone of his larger ones and raking his nails down the side of her throat and over her breast squeezing it to elicit a whimper. \"It is difficult not to indulge in them all right now, but you must sleep, or you will be no good to me at all,\" he smirked and flicked her nipple before releasing her and pulling her into his body to spoon. \n\n \"Thank you, my Lord,\" she smiled and squirmed happily into the curve of his much larger body.\n\n \"If you think being cheeky will get you another spanking tonight you are wrong,\" he murmured into her ear and kissed her shoulder. \"I will save up all these moments during the week and punish you in the dungeon for each one.\"\n\n \"As you wish,\" she paused before adding, \"My Lord.\"\n\n \"Pain whore,\" he chuckled\n\n \"Yes, my Lord,\" she agreed and content in the arms of Stephen she drifted off to sleep."
    ],
    "authorname": "xelliebabex",
    "tags": [
        "dominant/submissive",
        "choices",
        "agreements"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/possessing-bella-ch-24"
}