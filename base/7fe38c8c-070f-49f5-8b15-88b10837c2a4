{
    "title": "Road Trip Pt. 06",
    "pages": [
        "... continuing from the previous chapters ...\n\n<p align=\"center\">Chapter 27\n\nRoad Trip - Idaho</p>\n\nMy Army buddy, Craig Olson, welcomed me to his home in Coeur d'Alene with a big hug and much backslapping. I had contacted him weeks earlier about visiting and emailed him with updates about my travel and arrival dates. I called ahead from Montana to let him know I'd be arriving around seven in the evening after riding hard all day from Montana.\n\nCraig helped me unload my motorcycle and move my things into his guest room. He had a town house in a nice area of town; later I'd learn that all the areas of town were nice. I scrubbed up, and we went out for dinner.\n\nLike some of my other Army contemporaries, he mustered out about the same time I did. He'd had three tours of duty as a Green Beret. My last tour got cut short a few months due by to a knee injury. Over dinner, we caught up with a decade's worth of experiences since we'd last seen each other face-to-face. Craig had moved to Idaho, married, divorced, and worked in the offices of a mining company. He'd been single the past four years, and in high demand on the local social circuit - what there was of it, as he put it. He'd been an outdoorsman growing up, so the area was ideal for his hobbies.\n\nCraig stood six feet four, and had a demeanor that commanded respect. That said, he had a 'Gentle Ben' air about him that had always appealed to women. In the Army, he'd acquired the nickname 'Boom' - he was our explosives expert, and that was one reason the mining company had hired him; he was exceptionally creative in using explosives and managed to do things with them few others could. Although he had an office job, he consulted to the field a lot as a sideline to his normal job.\n\nI took a little longer to update Craig. Most of the ten years I'd been doing the same thing, year after year: computer systems development and web site design. He knew Karen has died, and commiserated with me. He also knew about my burgeoning music career and my motorcycle road trip. Craig looked impressed, as I told him about being a celebrity. I shifted and told him about one downside of being a celebrity - being stalked by the paparazzi. I told him briefly about Bart Kenesis, the Branson photos, being stalked, vandalized, and shot at, and giving the paparazzo the slip in Montana. Craig listened with concern.\n\nAfter I told Craig the gist of the Kenesis story, he helped me by asking some insightful questions. I told him about Tama - the shaman, and her visions, and how she 'saw' Kenesis as a physical threat to me. I told him about hiring a private detective to research the man, and find out how to get under his skin if I had to. After I had finished, Craig affirmed he was sure I'd have further confrontations with Kenesis. The lone bullet that hit a wall near where I stood in Utah worried him a great deal. He said, \"You can count on me if you need help with this snake. I'll go anywhere to back you up if you decide to go head to head with this guy.\" \n\nI knew Craig was sincere, as would be George and a couple of dozen others who had been 'brothers' in the same Army Special Operations unit. We went through a lot together in strange lands, and we stopped many senseless killings and genocides, and saved the free world more than once. Most of us got too old to continue in that line of work, so we mustered out and wisely left the tougher missions to 'kids' a decade or more younger, more skilled, and in better shape than we were. \n\nCraig thought for a minute and suggested an idea that would grow in my mind; \"Jim, you might think of putting yourself back out there in public again so that Kenesis can get on your tail again. This time, however, I'll bring a few of the old unit along to set the guy straight - to get him out of your hair once and for all.\" I told him I would consider that seriously.\n\nWe called it a night after dinner. Craig had to work the following day, and I wanted to write some long emails and planned to make some telephone calls the next day. I missed Crystal and wanted to check in with her and make sure she was OK.\n\nJust before he disappeared into his bedroom for the night, Craig got a humorous look on his face; he said, \"By the way, tomorrow afternoon and evening I may have a little surprise for you.\" He turned and shut his door. I was left to wonder what kind of surprise he'd put together.\n\n<p align=\"center\">* * * * *</p>\n\nIn the morning, I took a long run that took me to the City Park and Beach. I'd brought with me a small envelope of Karen's ashes. The beach was deserted, no doubt because of the freezing temperature. I allowed Karen's ashes to fly in a small dust cloud across the large lake. Even in the city, mountains surrounded the entire area and made the spot picturesque. Karen had liked mountains and small cities. If she'd lived, we probably might have moved to somewhere like this once we had children. Tears came to my eyes this time when I thought of her and the children we might have had together; I hadn't cried about her for several weeks. After the sadness passed, I sat at the edge of the water and meditated until sitting still in the cold became a distraction. \n\nBack at Craig's home, I dashed off some emails, including one to Mils Cartwright, my private detective friend, giving her an update on Bart Kenesis and how we'd sent him in the wrong direction in Montana after we talked to her about what to do about the tracking device. I'd seen no sign of him since Livingston, Montana. I told Mils I'd telephone her after lunch.\n\nThen, I called Crystal to update her on Bart Kenesis. I still worried deeply about having been shot at, and I'd have put money on the fact that the shot came from the perverted photographer. I told how I'd discovered the tracking device on the motorcycle, and how we'd sent the device one way while I went another. I warned her that since he no longer knew where I was, he might return to Nashville and start stalking her again.\n\nCrystal and I talked about my impromptu visit to a Montana ranch in a snowstorm where I met Jillian and her three daughters. Crystal was one of five women who loved to hear about my sexual exploits, and obtained a lot of sexual gratification from thinking about them and egging me on. They were all as horny as I was. When I sent them lurid emails, I'd often get replies suggesting new things to try the 'next time' or asking for more details. In my calls to Lauren and Crystal, I elaborated on meeting three other motorcyclists in Wyoming, spending a few days in their lodge, and attending the Erotic Halloween Costume Party. I described the costumes, and lack thereof, in detail, described the open and permissive atmosphere as the night went on, and told of how creative Todd, Eve, Lil, and I had been about delivering sexual pleasure to one another as well as sharing ourselves at the party.\n\nAnna now routinely received my explicit X-rated emails. I couldn't be sure, but I'd sent her enough of my erotic 'progress reports' that I was sure I would have received a rebuke from her if she wanted them to stop. The emails I did get from Anna never mentioned my exploits or my emails, only updated me on her life and for a few weeks some questions about selling our parent's home. From a statement here and there, it was clear that she'd read them; she just didn't comment on them. More likely, as emails about my sexual situations got more graphic, I assumed her silence was her tacit approval and that she wanted to hear exactly what I was doing. Thus, I became more graphic and detailed. Because of the Halloween party, this email might be over the top; well, except maybe for sharing with her my exploits in Oklahoma.\n\nI had a growing desire to see Anna, and end my road trip. What I missed most of all was a sense of home. I'd given up the Cambridge apartment that Karen and I had lived in. After living in it a few months, I'd put my parent's home on the real estate market and the house sold a couple of months later. I didn't have a home except maybe for the tent on the back of my motorcycle. That was both good and bad - I liked having no burdens but was concerned about my lack of roots and permanency. I'd become a vagabond with no compelling idea on what I'd do after my trip ended. I'd started to think about that. The logical thing to do would be to follow the country music career and see where that took me. I'd had enough time on the road that traveling didn't hold the fascination for me that it once had. I was in my mid to late thirties, and it was time to decide what to do with the rest of my life - my new life.\n\n<p align=\"center\">* * * * *</p>\n\nI called Mils Cartwright, my detective friend in the early afternoon. She quickly told me about what she'd turned up in her research about Bart Kenesis: \"He's fifty years old, alcoholic - been in and out of AA programs for decades, lives in a rundown apartment in East LA, and travels widely as a freelancer. He gets to fly for free - get this, his sister is a flight attendant for United and her nearest kin can go for free if there's room on the flight, so your paparazzo can scoot around the country pretty much at will. His sister lives in Chicago. He's got two brothers: one outside Atlanta, and the other in Virginia, outside DC. I'll email you the addresses.\"\n\n\"Is he close to his sibs?\"\n\n\"Apparently. I'm told they let him come and mooch off them frequently. Oh, more about him: he never finished college, did a little over two years at U. of Illinois studying, of all things, art and photography. He's actually a good photographer - has won awards, but not recently probably because of the booze. He became a photo-journalist about fifteen years ago for the Chicago Tribune, but he got canned about seven years ago for letting his alcoholism interfere with his work. They let him be a freelancer, and helped him expand his contacts into Hollywood and Nashville celebs, so he's still got an 'in' with them.\"\n\n\"Do we know what scares him or motivates him?\"\n\n\"Not really; money I suppose. He was married for about ten years, but is long divorced. He lives modestly. Trying to figure out his fears and hopes is harder to do ... but, I'm on it. Just remember, fear and greed are the basic motivators of men like this. You got him on the money angle, now try 'fear.'\"\n\nWe chatted some more, and Mils promised to email all that she'd just told me about Kenesis. Mils liked to talk dirty, and she gave me a hard-on before I suggested we save her choice words for another time and place when we could do something about them. She agreed but seemed disappointed, so we ended the call.\n\nThe rest of the afternoon I worked on my journal on my laptop. I had many life situations and friendships I didn't want to forget. I thought at the end of my trip I might publish a book. I backed up my files on a secure CD, and mailed it to myself at my sister's home.\n\nCraig arrived home at four-thirty. He hustled into the house, and told me my surprise had arrived, but that I had to play a little game before I got to fully enjoy my present. He had a lecherous grin on his face. \n\nHe had me sit in a dining room chair, and then he blindfolded me, making sure I could not see out of the double-wrapped scarf at all. He promised me I'd like my surprise, but he said I had to sit there and not use my hands or any part of my body unless he told me to. I heard the front door open again, and some whispering. I discerned the other person was female; however, I couldn't begin to guess her identity from the undertones.\n\nI sensed Craig and the other person drawing near. A female tongue touched my neck and ran up the side of my face to the edge of the blindfold. The tongue then seductively darted into my ear in a highly seductive and erotic gesture, and then she kissed me. Whoever this was, she had my full attention.\n\nCraig said, \"Lean forward a little and stick your tongue out, and keep your hands at your sides - no hands! Even sit on them, so you're not tempted.\"\n\nI did as instructed, and my tongue came in contact with a full-size, bare breast - in the first few seconds, I could sense the curve of her breast and recognize a generous helping of luscious flesh. I also felt a nipple that got increasingly excited as I licked and sucked on the one tit I'd been offered. I hummed and gently bit the nipple, I even heard a low moan from the female to whom the equipment belonged. I kept trying to guess who my 'surprise' might be, but all I could do based on size and texture was eliminate Crystal, Ellen, and Lauren, and I suppose a few others.\n\nCraig prompted me, \"Come, Jim, you know these breasts. I'll give you a hint - you discovered these beauties back a few states.\"\n\nI started to go through each woman I'd been intimate with state-by-state going backwards by the women I'd encountered: Jillian, Jesse, Jean, Josie, Eve, Lil, Ann, Dorrie, the other women at the Halloween party, Tama, Tina, Ellen, Crystal, Heather ... maybe some of her friends or debutantes from Oklahoma? I'd think of a woman and try to remember what tasting her breasts had felt like. The problem was that using only my lips and tongue gave me limited information to work with, and, of course, there had been over seventy women since I'd started my road trip.!\n\nCraig said, \"OK, Jim, hold up one hand near your face and you'll get to feel our mystery woman.\" After a pause, he added, \"Man, you sure know some hot women! This pretty woman is getting to me really fast.\" I could hear him panting. I could imagine a female friend half-naked in front of this ladies man, as she teased me blindfolded, she must have known she was also teasing Craig in the process. Something told me they hadn't met until a few minutes earlier.\n\nI held a hand up, and a few seconds later a whole breast nestled into my palm and defied me to guess who the naked tit belonged to. I had to admit the heft and feel of the female breast felt delicious, and had started to give me an erection. I kneaded the mound and held the nipple between two of my fingers as I twisted and turned the nub like a radio dial. That move elicited another low moan.\n\nThe breast pushed back to my mouth, and I could knead the full mound with my one hand and attend to every facet of it with my lips and tongue. In a minute, my 'surprise' allowed me to fondle and kiss her other breast. Whoever it was had removed their shirt and bra. I felt certain the sexual temperature of the room was approaching the boiling point.\n\nCraig was laughing amid some more whispering, but I couldn't identify the voice or even the accent from the whispers. He told me, \"Jim, keep your hand out in front of you but a little lower; we'll let you feel something else.\"\n\nI heard the rustling of clothes, and then felt a woman's hand guide my hand to her pussy. The pussy was naked beneath a woolen skirt of some kind. I was guessing that Craig couldn't see the details of what was going on, but then I heard Craig say, \"Damn and fuck. This is one of the hottest things I've ever seen. Lady, you sure do understand foreplay.\"\n\nI heard a little hum of acknowledgement from our female friend. I could imagine Craig and the girl smiling at each other as I rubbed the bare flesh.\n\nIn the spirit of the evening, I only moved my hand a small amount as I tried to guess my mystery friend. The area between her legs had been shaved; I sensed a slight stubble betraying a trim only a day or so before. Along her pubes, I felt a small tuft of hair; first I thought it was a shapeless mass of pubic hair, but as I traced the outline, I realized the outline formed a heart.\n\nI ran my middle finger into her slit, finding a more than willing female. I commented, \"Oh, you are so wet. You've evidently been thinking of sex for more than just a few minutes today. I know you're my kind of woman.\"\n\nMy female 'surprise' wiggled her hips, made a little moan to acknowledge my comment, and shifted to emphasize my finger's contact with her sex. I gently sank one knuckle and then another of my middle finger into the lady's moist vagina. I could hear her sharp intake of breath, but by her body language I could tell this was what she wanted.\n\nA few feet away, Craig said, \"You two are so fucking hot; I'm going to have to go take care of myself after you guess who this is.\"\n\nI felt my unknown sex partner sway in Craig's direction, and pull him closer. I sensed the two of them were kissing, no doubt at my lover's behest. I could imagine whomever this was holding his shirt and pulling him in for a French kiss. I could imagine Craig's hands suddenly latching onto those magnificent breasts I'd been kissing a moment or two earlier.\n\nCraig's voice whispered to her, \"Babe, you are something special. When you're through with him I hope you stay around.\" I heard more kissing.\n\nI brought my finger from the damp pussy to my nostrils and inhaled the aroma of pure, unadulterated, lustful sex. I knew this aroma. I tasted my finger, allowing the feminine musk to coat my tongue and reach my taste buds at the same time the aroma floated rich in my face. The next I knew, I felt my confederate unzip my jeans and unfasten my belt. With my help by boosting my ass off the chair, she pulled them off my hips and down to my knees. My briefs were the next to go. I felt two chilly hands fondle my penis and ball sack. Since I'd started on an erection, my unknown friend found a more than willing partner preparing for her latest tease.\n\nMy companion gave me a credible hand job, bringing my dick to full attention. I wondered if Craig were embarrassed by what had turned into an overtly sex-filled cocktail hour. I listened carefully as well as sensed the peripheral movements of the woman and Craig, knowing for certain that the two were making out and he was molesting her breasts. I wondered what else was going on that I couldn't see.\n\nA pair of female lips wrapped themselves around my erect cock, and with her hands started a talented blowjob. Her tongue went wild when most of me got exposed to the air. She demonstrated her talent for deep throating my cock and that narrowed the field some.\n\nCraig whispered in a hoarse tone, \"Come on, Jimbo, guess who our friend is. Think, man, think!\"\n\nI went back further to the women I'd been with in the central part of the country: Midge, Connie, Mils, Shaye, Brite, Ashley, Sally, Gail, Lena, and Tori. I got back to Illinois and still didn't have any epiphany of recognition.\n\nOne of my partner's hands left my groin area and shifted to Craig's crotch if I weren't mistaken. Craig gasped, \"Jim, you've got to guess this one. She's a winner.\"\n\nI went back further in my travels: Tina, Pam, Daisy, Julia, Summer ... \n\n\"WAIT,\" I practically shouted. \"I have a guess, but you have to promise if I get it wrong that you won't be mad or anything.\"\n\nI blurted out, \"Julia! You're Julia!\"\n\nIn answer to my comment, my entire cock disappeared down the woman's throat, and I heard a little affirming sound from Julia.\n\n<p align=\"center\">* * * * *</p>\n\nI felt my fellatrix rise, and then we went into a French kiss that probably set the house on fire. As we parted, Julia's fingers came up to my face and peeled the blindfold from my head, tossing the cloth onto the coffee table.\n\nJulia stood before me nude from the waist up. Her full breasts shimmied as she moved one hand back to my erection. She wore a short tan woolen skirt, which had been tucked in her belt. Her bare crotch was visible to me, and most likely to Craig. I saw her clothing on another nearby chair.\n\nI glanced at Craig. Julia had unzipped his pants and had her other hand inside his pants, no doubt fondling his dick as well. Craig shot me a look that tried to communicate that he was just an innocent in what had happened. I noticed he had no intention of stopping her.\n\nI'd met Julia in Michigan on Mackinac Island. She'd been my waitress, and an aspiring actress, and daughter of a wealthy socialite who had sent her off on her own so she'd get serious about life. While in Michigan, she was one of the women that I spent some intimate time, probably more with her than all the others there put together. ",
        "Julia was a beauty - stacked, mid-twenties with long lithe legs that I recalled I loved to have wrapped around me as we fucked. Her trademark consisted of large hoop earrings that gave her a really sexy look. The last time I'd seen her body, she'd handed me a Sharpie and had me write 'Jim' on her right breast, and 'Mellon' on her left breast just before I left the Michigan resort where she worked. We'd spent the prior night together.\n\nJulia smiled and leaned in and kissed me again. As we pulled apart, she said, \"Hi, Jim. Miss me?\"\n\n\"Of course, but how'd you get here? How'd you find me? How do you know Craig?\"\n\nShe laughed and looked at Craig. I could tell his cock had swollen significantly in his pants because of her pawing around inside them, and no doubt from the sight-picture of me getting a beautiful sloppy blowjob. She gestured, and Craig leaned in and kissed her.\n\nShe said, \"I'd never met Craig, until a half-hour ago - but he's as sexy as you are. We talked a dozen times on the phone, keeping up with your travels as best we could.\" Julia moved forward, straddling my chair, and lowered her pussy down to my erection. I took the base of my cock and aimed it into the folds of her cunt, and then Julia dropped and I sank deep inside her. Both of us closed our eyes in appreciation of the ecstasy we felt in those seconds.\n\nTalk about compartmentalization, as she started to move up and down on my shaft, she continued as though our fucking had nothing to do with the discussion. \"Remember I worked for Pete Krakowski at his inn. He knew you from college, and so did Craig; Pete said you'd all been in ROTC together and lived in the same dorm. After you left the island, I kept pumping Pete for more information on you, who your friends had been, and where you might go next. I wanted to see you again. You were my best lay ever, plus I still hope you'll introduce me to some key people in Hollywood, particularly after I read that you might make a movie.\"\n\n\"The rumor magazines keep a good estimate of your journey on a day-to-day basis. When I could see you heading into Montana area near where I'd lived, I asked Pete whom you knew up here, and Craig's name came up. He put us in touch. I grew up only a few hours back down your route in Montana, so I drove up to connect with you.\" She looked down at where my cock slowly moved back and forth into her body, and added, \"And connected we are!\"\n\nJulia unbuckled and dropped Craig's pants, pushing them off his hips to the floor. Now, as the two of us fucked, she leaned sideways and inhaled Craig's cock, sharing the same talents of fellatio that she'd demonstrated to me a few minutes earlier. I got harder than ever.\n\nI turned to Craig, \"What say, we take this threesome into your bedroom, or somewhere more comfortable and less exposed than your living room with people walking by outside the window?\"\n\nHe agreed.\n\nJulia rose from my dick, allowing the sticky wet shaft to air dry. Craig pulled up his pants and led our threesome into his bedroom. Once there, he stripped off his clothes. I helped Julia undress the rest of the way, a job that only took a few seconds since she'd been left with only a skirt on her hips. I was naked in another thirty seconds. \n\nI gestured to Craig that he should move into position to fuck Julia; he did, and the pair coupled in seconds after she lay back on the bed. Now, I was the one getting the blowjob as he fucked her. Craig and I switched back and forth several times.\n\nAt one point, Julia said, \"I've never been DP'd, but I'd sure like to try.\" She turned to Craig and asked, \"Do you have any lube?\"\n\nHe produced a tube of Astroglide, and we slathered up Julia's ass. She came over me cowgirl style, and we started fucking in a more traditional way - woman on top. I caressed Julia, as Craig came knocking on her backdoor. He was gentle, and didn't rush entry, so, Julia enjoyed the double penetration as we both sank deep into her body and all three of us started our gyrations of pleasure. Based on Julia's shrieks, I expected the neighbors might have thought some kind of rescue was needed at Craig's residence; however, no one showed up. \n\nCraig didn't last long at that point. We'd turned Julia around, so she still had his prick up her ass, but she lay back against his chest. I knelt between their legs and reentered her vagina. We got a few minutes into that posture, and Craig blasted his cum into her chute with a steady stream of comments about how great this was.\n\nWe broke the threesome apart after his orgasm. I mounted Julia again, and resolved to deliver some pleasure to her before I came. With some attention to her clit by my hand, I helped Julia to two orgasms, before we agreed to crest together for her third and my first. I filled her pussy with my man-juice as that heavenly feeling swept over me; and she had those long, lithe legs wrapped around me at that instant.\n\n<p align=\"center\">* * * * *</p>\n\nThe three of us went out for dinner after cleaning up from our sex play. Julia walked kind of bowlegged, but had a smile from ear to ear. She kept kissing the two of us rather passionately, a point not lost on a few of the other patrons in the restaurant. Craig was near speechless over Julia's 'Hello and Welcome' performance at his town house. He confessed he'd never had a threesome, and so the day had accomplished something on his 'Bucket List.' Whenever there was any reference to the hour or so we'd spent earlier, all he could do was shake his head in disbelief and say \"Wow!\"\n\nJulia brought me up-to-date on her travels since Mackinac Island closed for the season two months earlier. She also got me talking about my side of some of the things she'd read about: the concert in Texas, and my shifting relationship with Crystal, including why she'd started dating one of the other country music stars that had a 'ladies man' reputation.\n\nI explained that Crystal and I were still an item to each other, and that we'd probably spend more time together once my trip ended. I commented to Julia about not being exclusive, and how that let me see her and that let Crystal see other people.\n\nJulia said, \"Well, mother wanted me to remember her to you.\" She laughed aloud; \"I guess I did that pretty well, huh? She told me to fuck your brains out. Did I do a good job?\" She laughed.\n\nI conceded that she was doing all right so far, but she had to work a little harder to achieve her mother's goal. Julia and Craig both looked pleased with the prospect of continued sex.\n\nJulia went on about her mother, \"Yes, mother prefers not to admit that she has a daughter my age. I arrived when she was only seventeen. I've got a couple of sibs a decade younger, but I was unplanned, and out of wedlock.\" She paused and said, \"Anyway, she wanted me to put the arm on you to appear at one of her telethons to raise money. It's in a few weeks in Reno. She figures that might work into your travel schedule.\"\n\nI asked her to tell me more. She gave me the condensed version of what she knew about the Children's Fund, rattled off a list of 'stars' that Daisy was attempting to line up, and emphasized that I needed to ask Crystal Lee to see whether she'd join me. She knew more details than I'd expected. As she talked I only half listened to the words, logging the important items, and letting the rest slide by. My mind went back about three months to when I'd met Daisy. I'd been impressed when she walked into the spa where I was giving massages to people who signed up. Daisy was my third appointment of the afternoon, and as I recalled I'd already had sex with my two previous clients.\n\nDaisy was a frosted blonde that stood about five-foot-five, had a flawless complexion, and an enhanced chest that she wanted massaged. In fact, as I recalled, she wanted to be massaged 'all over' - emphasizing that I shouldn't miss any place, even those that might be considered inappropriate to touch in a normal massage.\n\nThe first few minutes of Daisy's massage were pretty typical: shoulder and neck, legs, feet, arms, and hands. Daisy took one of my hands and placed it on her tits; \"Don't forget these!\" I didn't after that. I took the warmed aromatic oils and deep rubbed then into her breasts and nipples, paying careful attention until I think I brought her to a small climax just from the attention I gave her breasts. \n\nDaisy encouraged me to move to her nether region, so I took some of the oils and rubbed them into her pussy, individually massaging each of her engorged labial lips, and then doing both together. I recall I allowed a finger to occasionally slip into Daisy's cunt or brush into her slit. She smelled divine. When I shifted my attention to Daisy's clitoris, a well-defined nub of skin that appeared amid the puffy and wrinkled lips that surrounded her stimulus center, I thought Daisy would go into orbit. She didn't let me last long doing that. She had my cock in her hand in seconds, and in minutes had me buried in her sweet pussy. We went for a long time, partly because I'd already been fucked out, and partly because I really enjoyed being with Daisy. We pushed each other's buttons really well. I thought about the feelings ...\n\n\"Jim? Jim? Earth to Jim; are you in there?\" Julia's hand waved up and down in front of my face. I snapped out of my reverie.\n\nJulia asked, \"What were you thinking about? You really drifted off there.\"\n\nI chuckled; \"Your mother, to tell the truth.\"\n\n\"I bet. She said you were a great lay. She was glad you and I connected too. She got a kick that you were fucking both mother and daughter and didn't know it. I bet you hadn't done that before.\"\n\n\"Well, actually I had ... I'd been in that situation in Louisiana. Maybe I'll tell you about it someday.\"\n\nJulia poked me in the ribs.\n\nCraig said, \"Jim, you're my new idol, and I don't mean because you're a country music singer.\"\n\n<p align=\"center\">* * * * *</p>\n\nJulia and I slept together that night, but not before Julia expressed her gratitude to our host for his hospitality. The word 'slept' is a bit of misnomer too. We fucked and sexed each other for hours before exhaustion overtook our overexcited libidos.\n\nCraig left the two of us alone while he went to work the next morning. We continued our two-person orgy around his town house. Julia was insatiable. I told her about Heather, the nymphomaniac. Julia liked the comparison and the label, and I could tell she had a new adjective to describe herself.\n\nThings took a different turn in late morning when my cell phone rang. Caller ID showed me it was Crystal. \"Hi Lover. I'm scared again, and I've got four security guys guarding the house and property now, and the local police put an extra patrol on my neighborhood.\"\n\n\"Why? What happened? Talk to me, please.\" My voice suddenly took on a concerned tone. Even Julia turned from the magazine she'd been reading while we were on 'break,' to see what was going on, as though watching me on my cell would reveal all to her; she looked sexy with her long legs curled up under her wearing only a man's shirt.\n\nCrystal went on, \"In the middle of the night, someone hurled a brick through my living room window - the big plate glass opposite the fireplace. There was a note attached to it: 'Tell your boyfriend I'm going to get even.' He scared me - I mean, I assume it's this Bart Kenesis character. We had just talked yesterday. He must have been racing back to Nashville and figuring out how to terrorize me while you were telling me about his shooting at you and following you.\"\n\n\"Look, you did the right thing by calling in the security forces. The other thing you could do is sneak out of there and go elsewhere - a safe house, or even fly out here, although if he figures out where I am that might not be a good idea.\"\n\nWe chatted about possibilities, and different ways she could improve her personal security. Julia turned on the sofa listening with rapt attention, her long legs and a flash sometimes of her pussy a distraction. Crystal liked the idea of leaving her home secretly but continuing the security guards there, so it looked as though she was still in residence. In the meanwhile, she'd take up residence with a couple of security personnel at one of the upscale hotels in downtown Nashville. I suggested she make sure they had plenty of security cameras, and that she have one of her security people look over the shoulders of the hotel security staff to ensure her safety.\n\nCrystal changed subjects and asked whom I'd spent the previous night with, although I could tell she was still nervous from the breach of her home. I started to tell her about Julia, smiling at Julia as I did. Julia's mouth dropped open, particularly as I went into some detail about the sexual teasing I'd gotten the previous afternoon, and how it had turned into a beautiful and erotic time when both Craig and I pleased Julia. Crystal got into the change of subject and asked me some questions about Julia and what we did. Crystal asked to talk to Julia, so I had the two women chat to each other for a few minutes, obviously about my lovemaking prowess and the hope that Julia would come and join us 'to play' sometime soon. \n\nJulia mentioned the Reno telethon to Crystal, and asked whether she'd want to participate. Crystal got excited and assured us that she'd try to clear the dates around that November weekend so she could fly out and join us, particularly if Julia would be 'available.' \n\nCrystal said she had to run, at least from the landline she'd called me on. Her limo had arrived to take her to a lunch with Terry, and Jake Reynolds - a songwriter. I told her I loved her, to be careful, and to call me immediately if she felt threatened again. We ended the call.\n\nJulia asked, \"Who's the threat?\"\n\nI explained about Kenesis, starting from the very beginning when I saw him at the edge of the darkness taking pictures of a foursome we were engaged in on the back of boat in Branson right up to Crystal telling me about the brick through her window. As I ended, I told her about getting shot at in Utah, and then discovering I was being tracked, doing a diversion tactic with the tracking device he'd put on my motorcycle, and slipping out of his reach by racing to Coeur d'Alene. By my calculation, as soon as he figured out I'd slipped away from him, he must have gotten on a flight and gotten back to Nashville to intimidate Crystal.\n\nAfter we'd discussed the man stalking me, Julia said, \"I have another question.\" She suddenly looked discomposed, so I guessed her question had to do with sex. I nodded for her to continue. She said, \"You were so open with Crystal about having sex with me ... fucking me, and with Craig. Does that bother her? What if she told you all the details about some liaison she had?\"\n\nI started my answer by saying, \"She has. She's had a couple of dates with a popular singer in Nashville, and he really got her cranked up - horny. They had fun and fucked each other until they couldn't move; she gave me a stroke-by-stroke account the day after. We've talked about some other hookups she's had, and she's been with me for some group sex events.\" I paused, \"I gather you're open with your mother about sexual encounters; didn't she tell you about her massage?\"\n\n\"Yes.\"\n\n\"Well, it's not much different. She told you because she loves you and wanted to share with you because it was erotic.\"\n\n\"She encouraged me to have sex with you.\"\n\n\"I kind of figured that out later. She wanted something she thought was good to happen to you too. She wasn't jealous, only loving and caring. That's the way Crystal and I are. We want each other to feel the rush of a fabulous orgasm, and to share the experience with the other in some way. Neither of us is possessive; I think if I got possessive, I'd lose her.\"\n\nJulia studied me for a minute; \"You are fucking amazing. We can screw around, fuck all night and part of the next day, and I know you care about me, and I know you care deeply for Crystal, and I don't want to jeopardize that relationship for you.\"\n\nI said, \"If Crystal were here, we'd have a threesome. If Crystal and Craig were here, she would swap around too. There's no need to worry.\"\n\n\"And you trust her?\"\n\n\"Whoa. That question opens up the option that she could do something that would make me judge her as untrustworthy. I love her, and she loves me. I can easily see her sharing her love with someone else, and we already know I do. I know we'd always be friends - close friends - if either of us wanted to drift in someone else's direction. I don't own her; she doesn't own me. I want her happiness. So, yes, I trust her, but I can't think of anything she could do to break that trust.\"\n\n\"Have you two talked about stuff like this?\"\n\nI answered, \"Yes, often and we're consistent in our views. There are all sorts of relationship agreements and boundaries we could build for each other, particularly if we get insecure about the other having an outside relationship - you can sleep with someone else under these conditions; they can stay overnight on another set of conditions; or here's the frequency with which you could see someone else, what kind of sex acts that are acceptable or not, or what kind of protection you have to use - on and on. We've kicked all this stuff around. The best agreements, and the ones easiest to keep, are no agreements or boundaries; so we told each other to follow our bliss, particularly when it came to being with others. I know how we've felt about each other, and how we feel right now. If that changed this instant, I would always have those great memories to fall back on.\"\n\n\"But don't you think you two are soul mates?\"\n\nI chuckled; \"Maybe and maybe not; the term soul mates connotes fate and uniqueness. I know there are hundreds of men who could make Crystal happy, just as I know there are an equal number of women that I could love deeply forever. I already do love some of them. Heck, you may be one of them. Society has this weird paradigm that we can only really love one other person at a time; I don't know where it came from, but it's a pretty restrictive rule.\"\n\nJulia shrugged, \"So people have affairs.\"\n\n\"Yes that, or they have serial polygamy - they marry, divorce, find a new spouse, marry, divorce, and so forth, doing it over and over again, often proclaiming how friendly and loving they are to their ex's. To my way of thinking, those approaches are more destructive of relationships than allowing polyamory - our ability to simultaneously love more than one person, with full benefits, of course.\"\n\n\"Could you love me and Crystal at the same time?\"\n\n\"Darling, I already care a lot about you. You and I mesh well sexually, but there are many other areas in our relationship we haven't even begun to explore. I won't lead you on about how deeply I feel about you, but know that my door is open to a longer and deeper relationship with you. Let's see what happens over time.\" I smiled warmly at Julia.\n\nJulia came over beside me on the sofa and kissed me deeply. She whispered, \"Well, you stir all the right places inside me every minute of the day, so I'd like to become part of your close circle of friends and lovers. Let's see how this plays out.\"\n\nJulia wore one of Craig's business shirts with one button done. I undid the button, and soon we were working at pleasuring each other again\n\n<p align=\"center\">* * * * *</p>\n\nJulia was sitting nude on a credenza just inside the front door when Craig got home. She pulled her legs up, spread them, and hooked her feet over the edge of the credenza top. Julia's breasts hung between her arms, which in turn held her knees. Julia's gorgeous pussy was on full display, the slightly swollen lips of her labia calling attention to a small dark hole that started her vagina. The result to anyone walking in the front door was a horny, desirable, and very available woman who wanted immediate fulfillment.",
        "As Craig opened the door and took in the sight, he froze in position; the door open behind him.\n\nJulia told him in a little girl whiney tone, \"Jim's all tired out for the present, and I need some serious lovin' before dinner time. I wondered if you'd like to ... well, you know, help a needy girl out of her troublesome predicament.\"\n\nCraig allowed the door to swing shut behind him. He stuttered, \"Yes, oh, most definitely yes,\" as he shed his coat and dropped it on the floor. \n\nJulia held her arms out to him, and he came to her and they kissed. I was doing more emails in the living room, and enjoying the blatant seduction taking place only a few feet away. I'd been at it all day with Julia, so I didn't think I was missing anything that I hadn't already enjoyed to the fullest.\n\nJulia put her legs down temporarily, and started to strip Craig. He scrambled to keep up with her. She helped him shed his shirt and then helped push down his pants. She grabbed a hold of his penis, a shaft that lengthened and hardened by the second. After a few strokes with her hands, she pulled her legs back up and thrust her pussy forward while still atop the credenza. Craig sank his cock into her body, and the pair began a rather energetic fuck that resulted in the credenza pounding against the wall and alerting every other person in the row of townhouses what was happening. They didn't care.\n\nThe pair made noises appropriate to their exquisite fuck that I wished I'd recorded so we could have enjoyed the soundtrack later. Julia was moaning and voicing her pleasure, even calling out 'harder and faster' instructions when she wasn't using 'dirty talk' to further excite Craig and me. Craig told her how she felt, and replied with his own brand of dirty talk as they fucked. I didn't think to time them; however, five minutes would have been a long time, but in those five they covered what a normal couple might take twenty minutes to do. Craig exploded into Julia's pussy, and she climaxed simultaneously, her wail of pleasure ending the pounding the credenza made against the wall. Still connected to each other, Craig picked up Julia and duck walked over to the sofa, his stride limited by the pants around his ankles. The pair sank to the sofa and made out for a while. I could see they really liked each other - an understatement at best.\n\n<p align=\"center\">* * * * *</p>\n\nWhen Craig and Julia finally separated, they went down the hall to his bedroom to shower before dinner. The entire townhouse smelled of sex, but then Julia and I had made significant contributions to the way the place smelled all day long.\n\nCraig came out of his bedroom a few minutes later. He looked at me and shook his head: \"Man, you know some really great women. If you want to leave this one behind, it'd be all right with me.\"\n\nI laughed and pointed out that it was up to Julia. I also warned him that she had aspirations about acting in Hollywood, so he might want to be sure what he was getting into before she disappeared on him.\n\nWe bantered for a couple of minutes, and then a light bulb went behind Craig's eyes: \"Oh, I have something to show you; I almost forgot with that wonderful welcome home. I stopped for more wine on the way home, and thought you like to see what I found in the checkout aisle.\" He rummaged in his briefcase, and then tossed me two magazines, just as Julia emerged from the bedroom looking quite chic for northern Idaho. I could tell even from the distance between us that the magazines were supermarket tabloids. The Weekly Star and the Nation's Entertainment News landed in my lap.\n\nOn the cover of both rags was a photograph of me riding on a horse next to Jesse Emerson, the pretty horsewoman who rescued me and my motorcycle from a snowstorm in Montana. We were talking, and surrounded by snow-covered trees. I knew instantly when the picture had been taken; we were riding the fence line. Seconds after the long lens had captured our looking tenderly at each other, I'd spotted the black car that Bart Kenesis, freelance paparazzo photographer, had been using and with binoculars had even seen him in it. \n\nThe headlines on one magazine read \"Cheating on Crystal?\" and on the other \"Crystal Lee's Competition?\" The headlines, smaller print, and the short stories inside the editions traded on sensationalism and scandal, and lacked any knowledge of what had really been going on - fortunately. In the first, I was guilty of breaking Crystal's heart. In the other magazine, Crystal and the 'mystery woman' were fighting for my affection and I was torn in the middle, hiding my affair on one hand yet longing for a more permanent relationship with Crystal who, factually, had been consoling herself on a few dates with Kenny Wilson. I laughed aloud at the fabrications.\n\nI picked up the cell phone and called Crystal. Fortunately, I got her on her cell just as she was heading out to dinner with Ellen. I read her the relevant parts of both magazines, and suggested that there might be other magazines and maybe video of the horseback ride. I thanked my lucky stars that Jesse and I hadn't done 'anything' outdoors, although we'd both surely had been inclined that way. Crystal rang off to call Terry, and get his counsel on how to respond when someone pushed a microphone in front of her and quoted these scandal sheets seeking validation.\n\nNext, I called Jesse. Josie, the youngest of the daughters answered the phone, and we had a brief conversation. I think she was a little miffed that I needed to talk to her older sister, but I assured her than Jesse would explain all to her in good time. Jesse came on, and I explained about the paparazzi, scandal sheets, and that she and I were on the covers of two of them. \n\nOn the other end of the phone line, I heard a little, \"Wow! Really? I'm on the cover of a magazine?\"\n\nI read Jesse the headlines and articles, and suggested she rehearse a set of benign statements she could make to the press that would deflate their sails, tell the truth, and, in a few days, give her back her privacy: statements like, \"Yes, Mr. Mellon and I are friends, and my family and I enjoyed his visit at our ranch as well as the trail ride we took the morning of the photographs when we were checking the fences. The stories in the tabloids portray a nonexistent relationship; in fact, we talked at length about his relationship with Crystal. So, I'm afraid I can't corroborate even a single sentence of what was written in either the Weekly Star or the Nation's Entertainment News. From what I can see, the stories are trash, lies, and outrageous innuendo. You can verify this with Mr. Mellon or Miss Lee. No further comment is needed.\" \n\nI asked for Jesse to keep in touch, at a minimum emailing or texting me the name and company of anyone who contacted her later and how aggressive they'd been in trying to get 'her story.' I explained that they'd offer some 'big bucks' to sell her exclusive story to them - fact or fiction, assuring her it would end up as mostly fiction. I could tell she found that idea revolting. I thanked her again for the days I spent with them, asking her to give my love to everyone.\n\nAs I'd been on the phone, Julia and Craig had been passing the magazines back and forth when I wasn't using one of them in my conversations. \n\n\"Wow,\" Julia said, \"They really trashed you. Was this the doings of the photographer you told me about?\"\n\n\"I'm certain of it, at least for the photograph. He may have also fed the editors some possible storylines, and they took it from there. I'm rapidly developing some thick skin about this kind of stuff. I never realized how badly the tabloids could do in someone.\"\n\n<p align=\"center\">* * * * *</p>\n\nThe next day was Friday, and Julia and I hung around Craig's townhouse getting to know each other better. I doubt there was a square inch of her skin that I didn't massage, lick, and have sex with, and Julia could have made the same statement about me.\n\nCraig made up for lost time when he got home on Friday afternoon. Julia told us she really loved having sex with two men. We discussed the ability of men and women to have multiple simultaneous partners in sex during one of our breaks. Julia rightfully pointed out that women were made to have sex with more than one man at a time. To summarize her comments, she said women have multiple orifices that enable them to pleasure at least three men, they can have orgasm after orgasm without a recovery time between, and they understand how to share themselves with others without getting their nose bent out of shape. Craig and I conceded the point.\n\nCraig and I got some time to talk starting in the late morning on Saturday. The weather had changed to rain, so staying indoors proved to be a good idea. The two of us had worn Julia out, and she'd fallen asleep in the middle of his bed with a smile on her face. We caught up some more, visited old times, and renewed our commitment to always be there for each other. We also talked about some ideas to resolve the Kenesis problem. Based on timing and my travels, it looked like an ideal time to face Kenesis would be when Crystal and I would be in Reno with Julia's mother doing a telethon.\n\nSunday morning, I packed up my motorcycle with the help of Craig and Julia. Julia had decided to hang around a few more days with Craig, a decision that made Craig beam from ear to ear. I hoped he'd survive being alone with her for an entire day. He already planned to take Monday and Tuesday off work.\n\nJulia gave me a long simmering kiss to say goodbye. I promised I'd keep in touch and that I'd do something about her wish to get her into films once I got to southern California. I also urged her to come to Reno when we'd be at the Children's Fund Telethon with her mother. \n\nI rode out of Coeur d'Alene on back roads, keeping as close to the Spokane River as I could. The rain had left, leaving a crystal clear day. Crystal clear. I thought of Crystal a lot and wondered what our future together would be like.\n\nTo be continued\n\n<p align=\"center\">Chapter 28\n\nWashington-Oregon</p>\n\nTime stopped. I watched in horror as a maroon sedan in front of me drifted onto the shoulder of the highway, suddenly and violently dug the right front tire into the soft dirt, and abruptly slewed the back end of the car around until the car was broadside to the road. I could see a blonde female inside frantically trying to regain control over the careening vehicle, but I knew it was too late. At seventy-five or eighty miles per hour, the car started to roll over onto the passenger side, and then the car flew through the air.\n\nThe woman disappeared, carried upward as the entire car left the ground after a quarter-turn in the roll. In that flash of time, I could see that the car's roof didn't even make contact with the ground as the car flipped over, angling off the road into a fallow field. After hitting the ground again and kicking up a shower of dirt, the car barely brushed the ground as the car completed its first complete rollover, and kept rolling.\n\nOn the car's second roll, the rear of the car dug into the potato field ensuring that the car would rotate again. This time the roof of the car slammed into the ground obliterating the passenger side roof of the vehicle. The right front tire tore away from the car and adopted its own strange trajectory up and away from the car. The windshield shattered into a thousand pieces of glass as if someone threw a shower of glistening raindrops into the air. \n\nOn the third and fourth rolls, the front of the car rose in the air in a complex twist, left the ground again, plunging back to earth on the nose as the wheels spun eerily without anything to touch other than air. In the fifth roll; the remaining kinetic energy dissipated as the car slid two hundred feet backwards on the crushed roof before rocking to a stop well off the roadway. \n\nI pulled onto the shoulder opposite the vehicle, parked in a millisecond, and raced to see whether the driver had survived the horrendous crash. I shed my helmet as I ran, and tossed it aside. Other cars had stopped behind me, and other people were running to the disabled car. The three wheels on the car were still spinning when I reached the car. I could smell gasoline. I threw myself onto the ground and peered into the upside down car through the shattered driver's side window. An unconscious woman hung suspended in her seatbelt. Her head rested against the crushed in roof, but I saw no blood.\n\nInstincts drilled into me as a Green Beret came back - training I'd had as a backup medic: assess for life, assess for injury, assess for extraction, assess for transport, and so forth. I wiggled partway into the car on my back so I could look up at the woman, thankful that I wore a thick leather jacket so the ragged glass edges didn't injure me. I found a pulse on the woman at her carotid artery. Only the seat belt held her body. Amazingly, the empty passenger compartment had taken the brunt of the various impacts as the car flipped; had anyone been there, they would be dead. \n\nI ran my hands down the woman's arms; one caught in the seatbelt and the other limply hanging to the roof of the upside down car. I used both hands and carefully moved her head around feeling for a neck injury. I ran a hand down her spine, not an easy task given the angle of the vehicle and her seat. I felt ribs and chest, ignoring the intimacy that might have been implied. I felt thighs and lower legs as they angled out from under the shattered dashboard.\n\nShe seemed whole and unbroken, but I wrapped a jacket that was lying beside her head around her neck to immobilize it in case she had suffered neck injuries. I couldn't imagine how she could have escaped injury. I released the seatbelt with one hand and cushioned her drop with my own body. The smell of gasoline became stronger. I backed myself out of the car, maneuvering the woman with me. Another pair of hands tried to reach in to help pull her out.\n\nAs I got myself nearly clear of the car, I heard a 'wooft' from under the car's hood. Fire! I rolled onto my stomach, reached inside the car, and hooked my hands under the woman's armpits and pulled, making sure her head and body didn't drag across the jagged glass where the side window had broken. Other rescuers had vanished when the engine fire erupted. The heat from the fire singed one side of my face. A quick glance confirmed we were in grave danger. I doubted the gas tank had remained undamaged and the odor of gasoline still filled the air. \n\nI looked for other help, but there was none nearby. Just as the blonde's body cleared the car, flames erupted inside the car, consuming the interior in seconds. Blinded from the acrid smoke, I picked up the woman's body and ran, tripping over the uneven ground but not falling.\n\nTwo men intercepted my path and helped me lay the woman on the ground on a blanket a safe distance from the vehicle that had rapidly become completely engulfed in flames. A thunderous 'whoompf' made us all duck momentarily; fire had breached the gasoline tank. An immense orange ball of flame rose skyward amid the existing plume of black smoke. The heat from the explosion touched everyone.\n\nVoices yelled from a vehicle on the road that 911 had been called. I took off my chaps, rolled then up into a makeshift pillow, and put them behind the woman's head. I removed my leather jacket and wrapped her upper body under the fleece lining. I felt the blonde's pulse race as her body dealt with shock and the surges of adrenalin discharged into her system. I did another brief external examination, seeking broken bones, blood, bruises, and other signs of trauma. All I found was an enlarging lump on her head and a superficial scratch.\n\nA gray-haired woman knelt by the head of my unconscious ward. She stroked the young woman's forehead as only a grandmother could. I had learned in my medical training that unconscious people, even people in a coma, can 'hear' what's going on around them. They processed these 'subliminal' messages, sometimes evaluating whether to die or live. I leaned in close and talked calmly to the pretty woman, assuring her that she was in good hands, in the arms of people that would protect her and take care of her, and who would let no further harm come to her. The grandmother-type also talked to her in positive words too. I explained to the unconscious girl that she was healthy and fit with no signs of serious injury.\n\nI talked in low, soothing tones to her for five minutes before she stirred slightly, her body shuddering once as the first signs of consciousness reappeared. A gasp of relief went through the small crowd that had now gathered. I glanced up to see the highway lined for a great distance in either direction with stopped cars and trucks. Flames and acrid smoke still leapt skyward from her car. The woman's eyes flew open, and I saw at once the fear she felt. Grandmother and I both kept speaking words of calm. She gasped in a panicked voice, \"What happened? Where ... Oh ... my car ... couldn't steer.\"\n\nI said calmly, \"You've had an accident, and I think you're all right - a little shaken up, but OK. You've got a bump on your head that probably put you 'out' for a few minutes. Help is on the way.\" I could see her trying to focus on my face as I talked. She tried to sit up, but I urged her to just lie still until her body had a chance to recover from the stress of the accident. I gently pushed her shoulders back to the blanket.\n\n\"How did I get out of the car?\" she asked in a worried voice.\n\nGrandmother spoke nodding in my direction, \"This young man pulled you out of your car. You are lucky you found a hero like him. He saved your life.\"\n\nThe blonde digested that information. \n\nI asked gently, \"Is there someone close to you that we should call - that you'd like to have know about your accident and where you are?\"\n\nShe shook her head slightly, and then spoke, \"No. No one near here. No one now.\" After a long pause, she added, \"I'm from Oregon. I was heading home from a bad experience.\" \n\n\"What's your name?\"\n\n\"I'm Elizabeth Catriona, and everyone calls me Liz.\" I introduced myself to her as 'Jim' now that she was conscious. I got a polite smile from her.\n\nIn the distance I could hear the wailing of the emergency sirens heading in our direction, probably from Pasco. I held Liz's hand, and told her help was seconds away. In a pleading voice, she locked eyes with me and said in a near state of panic, \"Please don't leave me. Stay with me - hold my hand - even when they take me to the hospital.\" This wasn't a question; it was a plea I couldn't turn down. When a pretty woman in trouble begs, I give in.\n\nA fire truck pulled up opposite the burning car, still aflame with dark smoke pouring from the hulk. A large ambulance arrived nearby. Two EMTs rushed to Liz's side with their gear. On the highway, two highway patrol cars screamed onto the scene with sirens and lights flashing; one officer came to work the gathering crowd around us, and the other took control of the traffic.\n\nOne EMT examined Liz carefully, checking her neck, throat, eyes, nose, and ears. As he worked, I introduced myself and explained getting her from the car and my initial check of her health. The EMT asked who had wrapped Liz's neck and I told him that I had incase she had a neck injury. The EMT praised my work. He wired Liz up and did an EKG, transmitting the information to a nearby hospital. Eventually, they retrieved a gurney, and with my help put Liz in the ambulance. I retrieved my helmet, chaps, and jacket, when an EMT shouted from beside the ambulance: \"Jim, can you come see us for a moment.\"\n\nI jogged over to the flashing ambulance. Inside I could hear Liz screaming. The EMT shook his head, \"She's hysterical because you're not in the van with her. Can you leave you car ... err, your motorcycle, and come with us to County Medical? Talk to her. Calm her down. She's hysterical.\"",
        "I got in the large ambulance and told Liz I had to arrange transport for my bike, but that I'd be right back. She relaxed slightly. At the moment, most of what I owned was tied to the bike in some way. The EMT read my concern and said, \"I'll have someone take your bike to the hospital.\" He hailed a man in a blue jumpsuit - a wrecking truck driver who'd arrived on the scene. We arranged for him to transport my Harley. He quickly lowered the ramp to his truck, and with the EMT's help, we rolled the Harley onto the flatbed and anchored it in place with multiple lines. I gave him my cell phone number and noted the name of his company.\n\nI got in the ambulance, and sat next to Liz. She put her hand out and commanded in a sweet voice, \"Jim, please hold my hand - hold my hand tight and please don't let go.\" She broke into tears for minute. I held onto her as I buckled into the jump seat. The ambulance started up with siren wailing and the wrecking truck behind us, until we pulled away at high speed. Liz closed her eyes on the way to the hospital, but opened them every minute or two to be sure I remained at her side. She had the prettiest blue eyes.\n\n<p align=\"center\">* * * * *</p>\n\nLiz got cleared out of the emergency room three hours later. I hadn't left her side, except to help unload my motorcycle from the wrecker, and for one moment to talk to an older ER doctor. He said, \"Your girlfriend had quite a scare. Physically she's in amazing shape given the nature of the accident. Usually, when we get someone like this, they're in small pieces. Also, the shock symptoms are dissipating, but mentally, she'll be in shock a little longer. This explains her neediness and dependence on you. She needs some TLC, and someone who'll help keep her grounded in reality until her mind can process what happened, and until she knows that it's past, and that she came through it all right. One minute she'll think she's about to die in her car, and the next she'll feel safe. She needs you to help her through it. It might take a day or two, or maybe just overnight. Call me if it's any longer than that.\"\n\nA receptionist at the hospital's front desk helped us arrange for a small suite at the Cedars Inn in Kennewick, just across the Columbia River from Pasco. She also arranged for a taxi. Liz didn't want me to leave her side. I negotiated that I would ride my motorcycle right behind the taxi all the way to the inn, and that she could see me and know that I hadn't left her. I worried a little about the dependence she showed, but once we got her situated in the taxi, she calmed enough for the taxi ride, although she watched me out the back window the whole trip.\n\nI checked us in, and helped Liz get situated in the suite I'd rented. She immediately lay down on the bed, but watched me as I shuttled the gear from my motorcycle into the room, clearly worried that I wouldn't return from some exit to get my stuff. After one trip outside, I came back and found her holding onto my leather jacket like a security blanket. I went and smoothed her shoulder to show her I knew she was working over what had happened.\n\nWe talked for a bit, particularly about her belongings. She told me everything she'd had with her burned in the car fire, including her wallet. I asked whether she wanted me to go somewhere and get her a few belongings, but she panicked about my leaving her alone for more than a minute.\n\nI called the front desk and after explaining the situation I arranged for a friend of the young desk clerk to make a shopping trip for Liz. A half-hour later a teenage girl about eighteen knocked on the door; she introduced herself as Marci. With Liz's help, I'd written out a shopping list for clothing and sizes - even colors, and cosmetics and feminine products. I suggested a large purse and suitcase too. Marci took the list and four hundred dollars I gave her. \n\nTwo hours later, Marci returned with a suitcase and eight large bags from Wal-Mart. She'd made good selections. Liz and Marci bonded, so well that I left them to the purchases and went into the other room to do emails. I'd no sooner sat down, than Liz appeared in the doorway biting her lower lip. In a little girl voice she asked, \"Jim, could you sit in the other chair? If you sit there I can see you from in here.\" I changed seats, sympathetic about Liz' security needs.\n\nMarci got Liz to laugh at some of the things she told her about teen life in Kennewick. She had a natural compassion for Liz' situation, particularly her loss of her car and everything she'd been traveling with. When Marci left, I paid her a hundred dollars for her time and effort, and she gave me a large smile and promised to help again if we needed her. I could tell it wasn't the money that motivated her, but her compassion and desire to help someone in need.\n\nAfter a trip to the bathroom to change into her pajamas, Liz begged me to sit on the bed with her. Marci had bought Liz a semi-shear nightgown with a scoop neck. The nightie hung to Liz' thighs, but through the material I could make out the matching bikini panties and Liz' pretty body without using any imagination. As Liz moved about on the bed, her clothing increasingly revealed more and more about her pretty body. \n\nI brought my laptop into the room and stretched out next to Liz to do emails and my journal as she napped. She liked that arrangement, I guess because she could remain in constant touch with someone after her harrowing experience. Several times, Liz jerked awake and looking around the room in an agitated way. I'd patted her shoulder or rubbed her back until she quieted down and went back to sleep. At one point, she wrapped her arms around me, a situation that made it impossible to use my laptop. I held her arms in place, hugged her, and just allowed myself to doze off as well.\n\n<p align=\"center\">* * * * *</p>\n\nLiz woke up hungry for dinner at nine-thirty that evening. We ordered in some Chinese food based on a recommendation from the inn's front desk. After the delivery, Liz and I sat at a table in the room and ate, and talked about her accident and introduced ourselves a little more completely. I tried to focus on the food and Liz' face, instead of the revealing clothing she wore. Eventually, I turned on the TV. She'd asked how I got her from the car, and I gave her an abbreviated version, not mentioning the hazards. She asked my background, and I'd told her I was a musician kicking around the country on the way to my sister's home in San Diego. Liz told me she worked in radio and TV in Portland,\n\nThe local news on KNDK-TV came on at ten o'clock, and to my surprise the accident, Liz, and I were the top news items. I hadn't even noticed a camera or reporter at the accident scene, but they had vivid pictures of the burning car, Liz, and me in the field as the EMT personnel administered to her, and a shot of the ambulance leaving the scene followed by my motorcycle on the back of the truck. \n\nThe announcer's voice over said,  \"Country singer Jim Mellon rescued a woman from her single car crash on the highway north of Pasco this afternoon. Jim braved the damaged car, a close fire, and the threat of exploding gasoline to pull the woman from the car. The woman has been identified as Liz Catriona, a television personality from Portland. Mellon is on a personal sojourn across the country on his motorcycle. The car exploded in an immense fireball only seconds after Mellon pulled Catriona from her car, picked her up, and ran with her to safety just before the car exploded in what could have been a deadly experience for both Mellon and Catriona. Units from Pasco Fire Station Eight and Washington Highway Patrol responded to the crash. Catriona was transported to County Medical, where amazingly she was found to be in good shape with only minor bruises. She has since been released. Links to several videos that show more details about the accident, the fire, and rescue have been posted on the KNDU website.\" \n\nThe TV shots continued to pan around the accident scene, mostly focusing on the burning car after we'd left the scene, and then the next news item came on. Liz stared at me in silence. I put my computer on the dinner table and in a minute I'd found the videos. The first was entitled  'Celebrity Jim Mellon Rescues TV Star From Burning Car.'  The video ran a little over eight minutes, and must have been taken by someone with a cell phone that had been nearby the entire time I'd helped rescue Liz. The video started as I ran to Liz's upside down crushed car, and showed the narrow escape we both had from the fire and explosion. A second video showed the same scene from a different point of view; however, the camera angle revealed the fire as closer and more threatening to us. In both videos, I could be seen close-up once I'd started to ensure Liz hadn't been injured. The grandmotherly lady who had helped me also appeared in the video. In both videos, I'd been identified as 'Jim Mellon, a hero.'\n\nLiz jabbed me in the chest with one finger partly in anger but she had tears in her eyes. Her voice croaked, \"You almost died saving me. We were seconds from being engulfed in flames, and you stayed ... and saved me ... and you're some kind of famous person?\" Liz's voice started to choke up and she cried. She hadn't realized until those videos how close to death she had come.\n\nSlightly embarrassed by the news coverage, I shrugged. \"Yes on all counts, and I told you I was a musician part of the time.\"\n\nDespite her teary eyes, Liz rolled her eyes in an unforgiving manner. She kept touching me, not at all in an annoying way, but so that she could be 'in touch' as often and for as long as possible. Given her trauma and her emerging personality, I found her need sweet and not alarming.\n\n\"So, what do you sing?\"\n\nI offered, \"I'll show you.\" I walked to my pile of luggage in a corner of the suite and got my small travel guitar. I walked back to the sofa and sat beside Liz, tuned the instrument, and then sang  'Texas Dawn' to her in a soft voice. As I got halfway through, she started singing along in a low tentative voice.\n\nWhen I ended, she reflected, \"So, you're that country singer. You sing with Crystal Lee.\"\n\nI nodded and sang her two more songs, and then put the guitar aside. She watched with rapt attention, as though she'd set out to memorize every word I said or sang, and every move I made. We chatted a little about singing and my getting into the music business. Eventually, she yawned a couple of times, and I suggested she go to sleep. I explained that I'd take the couch in the adjacent room, so she could have the large bed.\n\nLiz shook her head, \"Oh, no. I want you right next to me. Please! And leave a light on in the other room - please don't make it dark!\" She pulled me to the bed. She got in under the covers. I was allowed a trip to the bathroom before I lay down beside her atop the blanket in my running shorts. My chivalry seemed to be acceptable to her. She snuggled up against me and drifted asleep in a few minutes. I followed close behind. This had been a long and exciting day.\n\n<p align=\"center\">* * * * *</p>\n\nI had some wild dreams before I finally settled into a deep sleep. I replayed the car flipping over and over through the air, and then the fire. I thought about what would have happened if I hadn't been willing to get in the car and work to get Liz extracted, or if the gas tank had exploded fifteen seconds earlier. Finally, it seemed, I could put the accident I'd witnessed to rest so it didn't continue to haunt my dreams.\n\nIn its place, a sexual dream materialized. I could feel the warmth of a female body against me - a naked body. A bare breast and erect nipple went by my cheek - even stroked my cheek. The woman to whom they belonged fondled me, and then started to fellate me. I felt waves of pleasure coursing through my body as she worked on my cock. My dream woman knew what she was doing. The touching, stroking, sucking, tonguing were all so real ...\n\nMy eyes flickered open. I guessed the time to be around four or five in the morning. Liz moved beside me, her naked body so seductive in the light from the other room. Her energies were entirely focused on my erection. I whispered cautiously, \"Liz, don't do that? I don't want you to do this as some kind of return payment for what happened yesterday.\"\n\nLiz hummed a 'Yes' and a string of hums that defied translation, but made some kind of comment about the last part of my statement. She kept fellating me - a great blowjob actually.\n\nI pulled Liz up to me, \"Liz, come here. Let's talk.\" She threw her body on top of mine, making sure that my erection frequently rubbed against the exterior of her naked sex.\n\nI started, \"If you do this, I feel you're trying to repay a kindness. We've never even kissed.\"\n\nLiz's face appeared in front of mine instantly, and a tender and loving kiss resulted. We kissed some more, our kisses rapidly becoming more passionate and wet. I couldn't recall having a first kiss with someone, as they lay nude against my body. What a nice way to start a relationship. Liz nibbled on my ear and ran her tongue inside; \"I need a few orgasms to help me get over the accident. You're the person I elected - by unanimous vote - to provide this valuable service to me the rest of the night.\" \n\nLiz lay on me and squeezed her legs together, trapping my erection against her labia. She thrust her hips a few times in simulated intercourse. She went on, \"This is not repayment sex, although that idea did cross my mind. It's not sympathy sex; I've given and received that, and that's not good for either party. No, this is just man-woman, boy-girl, lusty, likeable, physical, erotic, enjoyable fucking that will make us both feel good. I want this.  'I' need this.\"\n\nI remember thinking hours earlier, 'When a pretty woman in trouble begs, I give in.' We melded together perfectly and the sex was wonderful and went on a long time with many orgasms.\n\nI lay awake in the morning as Liz's nude body slept peacefully with her head against my chest. The twitches and groans she'd emitted early in the night's sleep seemed to have given way to a more restful slumber, except for our middle-of-the-night sex. Although we had the curtains on the windows closed, I could hear rain beating against the side of the building and the glass. The morning was not good for travel; all good motorcycle riders should find a nice warm, sexy, and naked body to snuggle up with.\n\nLiz stirred, and I let her rouse herself from her sleep. Her beautiful blue eyes opened and looked at me, studied me, and then I got a loving smile. I kissed her forehead and started to stroke her back to express my appreciation about her closeness. Liz purred and snuggled her naked body more closely to mine.\n\nI said, \"Last night, I had this beautiful dream. This gorgeous, young blonde woman about five-foot-five with blue eyes came onto my side of the bed, and she did ... well, sexual things to me.\"\n\nLiz said in humorous mock surprise, \"Oooouuh? Sexual things?\"\n\nI reached out and ran my fingers across the area immediately around her exposed breasts, feeling the curve and heft of her well-shaped bosom. My mind paused; 'bosom' is a word you don't hear too often these days. My mother and grandmother used to use that term. I liked it; it's softer and more gentile than 'tits,' or 'boobs.'\n\nLiz said, \"If you do that you'll get me all horny.\"\n\nI said just before I kissed her, \"I detect that you're horny already?\"\n\nAfter a silence, Liz acknowledged, \"Yes, I discovered that last night too. Would you like to make love with me again? I'd really like you to.\"\n\n\"I'd be delighted.\"\n\n<p align=\"center\">* * * * *</p>\n\nLiz dressed in some of the clothes that Marci had bought, and we took a taxi to a nearby restaurant that served brunch. I noted that the weather had already started to clear from the morning shower. By way of starting our conversation over breakfast, Liz told me about her work. She had a three-hour weekday afternoon television talk show on Portland's KPLD-TV with a wide range of guests: dogs up for adoption, health care, women's issues, clothes, weather, insights into current scandals, a light touch of local politics, and even outdoor and recreation features - almost anything. At a young age, she had started up the media ladder, ultimately hoping for a permanent network job at a 'big' station in California. I thought she had the poise and assertiveness to accomplish her goal, although she admitted that Portland was a really pleasant place to live and that now she wasn't sure whether California was still her goal.\n\nLiz lit up at one point when an idea occurred to her: \"Jim, will you come to Portland with me and be on my show. It's about four hours that way,\" she pointed, \"and I'd be forever grateful. You can stay with me ... and I promise to be the 'perfect' hostess and extend to you every 'courtesy' of the house.\" Her emphasis on a few words left no doubt about the sexual nature of my stay with her.\n\nI'm a sucker for begging, I said with a smirk, \"Yes, of course.\"\n\nAfter ordering, I asked Liz, \"OK, we know we're compatible on one front, but short of a few facts about you. Tell me about yourself other than your work; for instance, yesterday you said something about coming from a bad experience - is that anything you want to share?\"\n\nLiz squirmed a little, and I could tell the question made her uncomfortable. I wondered why I'd pushed into that personal area; I guess I could be nosey at times. She said, \"I'm running away ... running away from an unfaithful husband who I caught fucking my best friend.\"\n\n\"Where were you going yesterday?\"\n\n\"Actually, back home. John, my husband, is probably still at our vacation home near Mount Rainer with Ellie, my ex-best friend. I caught them in flagrante delicto; I ran away and started driving full of anger and didn't care what direction I went - at the time east seemed good. Eventually, I stopped overnight up by Moses Lake, and this morning decided to go home.\"\n\n\"I'm so sorry you had to go through that ... I didn't know ...\"\n\nLiz interrupted, \"I was to drive up and meet John after I finished yesterday. I would have gotten up there about midnight, but I got a good replacement for my time slot at the TV station, had the entire afternoon free, so I started driving to our cabin for some unexpected R&R time about seven hours ahead of schedule. When I arrived, Ellie's car was at our cabin along with John's. I walked in and found them in bed fucking ... my husband and my best fucking friend from Portland!\" Her voice had an angry edge.\n\n\"So you ran?\"\n\n\"While they were still fucking - hot at it, a few seconds before they saw me, I walked right through the bedroom - right past the bed, took his car and house keys off the dresser, turned around and walked out. My girlfriend dashed from the bed to hide in the bathroom - what the fuck was she doing two hundred miles from home fucking my husband? My husband jerked on his underwear and started following me out of the cabin in his boxers, apologizing and blubbering 'I'm sorry'. I took Ellie's car keys too - they were next to her purse on the kitchen counter. I got in my car and started driving. Ugh! I got a motel room last night, but I didn't sleep much.\" I sympathized with her problem.\n\nLiz nodded and launched into another rant, talking about how liberal she thought she was, even sexually, until she found the pair screwing. She said, \"John and I had never been swingers or anything like that, but we shared our fantasies and some of those went in the direction of involving others. If either of us had wanted to do that, the other of us would have probably gone along, if nothing more than out of curiosity if we'd talked about it ahead of time.\" After pausing, she asked, \"Have you ever been a swinger or done anything like that?\"",
        "I candidly told her, \"Yes, I have; I've had the pleasure many times of making love to more than one woman at a time, if that's what you mean.\"\n\n\"What was it like? Weren't you ... overtaxed?\" Her genuine curiosity showed as she leaned towards me over the table.\n\nI laughed, \"Yes, sometimes. It always proved enjoyable, loving, and full of care for everyone involved. I think that's the best way to have it work well, making sure everyone is on an even footing, no one is being taken advantage of, and that people care for each in addition to the sex.\"\n\n\"Wasn't it kind of ... raw?\"\n\n\"No, although that probably depends on your point of view and how free-thinking you are. I've been in some creative situations with women and men, although I'm not gay and don't even lean in that direction. As consenting adults, you can mutually agree to almost anything.\"\n\nLiz asked about whether I felt jealous and betrayed, admitting that seeing John with her friend had provoked that response, and that in turn had led to her 'flight' response.\n\nI gave the short version of my jealousy philosophy. I told Liz, \"We get so that we think jealousy and rage are the only responses to a situation like you encountered, but there are others.\"\n\n\"Like what?\" I heard genuine curiosity in Liz's voice.\n\n\"What if you'd gone and kissed the two of them, and genuinely told them you were so glad they'd come up to the cabin and were sharing themselves with each other? What if you'd stripped off your clothes and joined in, sucking, licking, and fucking the two of them with all the lust you could summon? What if you'd waited for them to finish, so you didn't interrupt their pleasure, and then you all sat and talked about how they should have talked to you beforehand? You could probably come up with more options or scenarios.\"\n\n\"You think I should be more forgiving - to just forget about it?\" Liz' tone of voice signaled to me that she had started to seriously think about less severe reactions than the ones she'd had the day before - divorce, murder, inflicting pain.\n\n\"I don't think you should forget about it. Not so long ago, I would have responded as you did. Now, I understand there are more options. I've found a sexual side of me that enjoys 'open' relationships; I appreciate that other people may do this too - with others. I'm serious about Crystal Lee, and we both think openly about our relationship even though we're in love. We each know we care for each other, and while we're apart we see others without fear or guilt. Responding with shock and anger just doesn't seem like the right thing to do with anyone you care about.\"\n\nI changed tack suddenly, \"What would your husband say if you told him about the night you've spent with me?\"\n\nLiz stammered, \"I ... I didn't think ...\"\n\n\"So, I'm a revenge fuck?\" I was on the verge of laughing. She was so easy to tease.\n\n\"Oh, no. Well, yes, but ... I didn't mean ... you weren't ...\"\n\n\"Liz. It's all right. I figured it out. This relationship thing is all about communications - open and honest communication. Now that you know I know the whole situation, and you know you have many more options than you first thought, you have to decide what to do next. I'm open to just about anything to help you through this crisis in your life.\" I held her hand.\n\nLiz got silent for a long time as she thought about her options. We ate our food with only a few words spoken, and none about the accident, or her husband and friend. She asked me about Crystal some more, and somehow that led me to tell her about our Branson foursome, the photos, Bart Kenesis, being stalked and shot at, and my quandary about how to get rid of the man. I think Liz read between the lines that I probably had something to do with the disappearance of the photos. She wisely didn't ask.\n\n<p align=\"center\">* * * * *</p>\n\nAs we left the restaurant, I spotted a local newspaper. Three photographs stood out across the front page: Liz, now identified as the moderator of The Daily Show on KPLD-TV; a photograph of the car upside and burning as firemen sprayed foam on the hulk; and a PR picture of me that I knew Sony Music had distributed. The headline read, 'Country Music Star Rescues TV Star After Deadly Car Crash.'  I paid for the paper and took home a souvenir of the previous day. As I scanned the story, I saw that Reuters had picked up the story; that meant it would enjoy worldwide circulation, thus ensuring that Kenesis would find me again. The text mentioned my association with Liz from Portland, and the recently announced, but unpublicized, appearance I would be making in Reno the end of the month for the Children's Telethon. \n\nCraig had encouraged me to reengage the enemy, and confront Kenesis once and for all. I could see that moment moving closer, and I wondered if I would survive ... or if he would survive the encounter. I shook my head, and put thoughts of Kenesis out of my head for at least another day.\n\nAfter buying the paper, I called the taxi company for a cab to take us back to the inn, but then I had an idea. I asked Liz, \"That was a Toyota you were driving, right?\" She nodded. \"Did you like it enough to replace it if you could, maybe with some better model?\" She nodded again.\n\nAfter our taxi arrived, I had the driver take us to the nearest Toyota dealer instead of back to the inn. During our ride, I asked Liz questions to narrow down the type of car she might like. Ninety minutes later, over Liz's protestations, I'd bought her a new Prius hybrid from the local dealer. Liz jumped around like a kid at Christmas, and promised to pay me back. She explained, \"I make good money; I'd be embarrassed under other circumstances. With no ID, cash, checkbook, or anything, I am eternally grateful for your doing this.\"\n\nWe drove back to the inn in the new car in bright sunshine, and Liz pulled me upstairs and proceeded to express her gratitude for my generosity in sexual terms. She assured me she'd be doing the same thing whether or not I'd helped her get the car or whether we'd had the discussion over brunch; the car just made her need to express herself all that more compelling.\n\nAfter our tryst, while Liz showered and packed, I jogged a few blocks from the inn to a park on the banks of the Columbia River. As I had done in each state I'd been through, I opened and allowed the wind to carry a bit of Karen's ashes into a pretty setting, in this case the majestic river. I'd loved Karen, and acknowledged how disconsolate her dying had made me. \n\nIn retrospect over the months since her death, I could see the trajectory of my own healing, not to forget her, but to remember the joys and experiences we shared together without remorse or crying. I closed my thoughts with happiness and gratitude, and jogged back to the inn. I'd explained to Liz the ritual I did in each state. As an empathetic person, she understood.\n\nA check of the weather indicated good riding all the way to Portland. We loaded Liz's things and my gear into the back of her new car, I dressed in my leathers, and we left the inn for Portland.\n\nAt one of the rest stops, I called Terry and asked him about making a TV appearance on Liz's show. He enthused over the idea, and reminded me to tout my new album. I also called Crystal and had a brief chat about the accident, rescue, and Liz. Liz listened to my side of the call fascinated with the fact I shared so openly the details of our lovemaking and relationship.\n\n<p align=\"center\">* * * * *</p>\n\nAt Liz's home, she found a hidden key so we could get into the house. After unloading, she said, \"We'll go out for dinner; I need to talk again. On the drive here, I thought about all the things you've said about jealousy, and alternative responses to what I found John and Ellie doing at our cabin. You really jarred my thinking; I'm feeling like a new person and need to talk about it.\"\n\nWe freshened up. I put on some Dockers and a better shirt, and we went to an intimate Italian restaurant. We ordered our wine and dinner, and then leaned across the table. Liz started in a hushed voice, \"When I found John and Ellie fucking, I went into shock. My reaction was betrayal, rage, hate, and revenge - yet I'd loved both of them for years until that instant. I never gave them a chance to explain, although John tried. I just bolted out of the place. They both called - many times, but I never listened to their messages I was so mad and my phone burned up in the car.\"\n\nI nodded, encouraging her to talk through this ordeal in her life.\n\nLiz reached across the table and patted my hand, \"You're a man full of great wisdom. I was ready to divorce John and never speak to Ellie, but you taught me that there are many shades of gray, and many options for how to respond besides my 'worst case.' Now, I have other plans.\"\n\n\"Other plans?\" I could tell by her voice that she'd softened on the pair. The vitriol that had been there this morning was gone, replaced with the hint of a smile.\n\n\"Yes. Much as I was shocked by what the two of them were doing, it was something I would have loved to have us do - if only we'd talked about it beforehand. Now, I'll listen to them, and I'm ready to forgive them; however, I'm not sure where we go from here.\"\n\n\"Do you trust them?\" I figured that would be a core issue for her.\n\n\"Not right now; I think they were secretive, and in my book that turned out badly for all of us. If the two of them are willing to be open, we can try to rebuild that trust and our relationships.\"\n\n\"And, what about you? Are you willing to be open?\"\n\n\"Yes. As you figured out when I told you about John and Ellie, you turned out to be a revenge fuck, but you're also an angel and a sage. I will share with them our relationship, unless you'd rather I do something else, ... but I also hope to share you with them - with Ellie.\" She had a gleam in her eye that signaled some kind of sexual sharing.\n\nI laughed; \"I hope they're ready for the new you.\"\n\nI handed her my phone and when she hesitated, I urged, \"Call John. See where he's at, and tell him to come home and that you want to talk to him. Oh, and have him bring Ellie too.\" Liz thought for a moment about my suggestion as we drank our wine. We were on the late side, and many of the other patrons who had been near us in the restaurant had left. Liz dialed the number and waited.\n\nI could hear her side of the conversation. \"John, this is Liz.\" \"Yes, I'm all right; a bump and a scratch, that's all. I was lucky that Jim Mellon came along when he did ... we've been spending a lot of time together. He's going to be on my show on Wednesday. About the day before yesterday, is Ellie still up there?\" \"Have you unlocked you car yet?\" \"Oh\" \"Sorry, but I reacted with anger.\" \"No, I actually do want you to come home - with Ellie. We three need to talk about the future - I think you'll find my thinking on that subject ... interesting.\" \"Jim is still here - across the table from me; I took him to Salvucci's for dinner, and he encouraged me to call you.\" \n\nBy watching and listening to Liz, I could tell she was building up to telling John something major - probably about us. Sure enough, she dropped the bomb on him: \"John, in my anger I did just what you did, and I am embarrassed by the way I reacted. Before I explained the situation to him, Jim and I were intimate. In the meantime, know that he's taught me a lot about relationships, different ways I could look at what happened between you and Ellie, and how I could respond rather than with hate and lawyers. I'm working through this, but we need to talk.\"\n\nI wondered what John's reaction had been. I suspected it was tempered since he was the protagonist in the precipitating drama. I went on listening to Liz's side of the conversation. \"No, I initially saw what you two did in black and white terms. I couldn't believe that you and Ellie were sneaking around and betraying me. Jim reminded me about shades of gray. I'd seen only one option with you - divorce, and one with Ellie - to never see her again. Up until that instant, I loved the two of you more than life itself; Jim brought me back to the point of love so that I now can see options and other possibilities. - that's where I am now, and that's where I want you and Ellie to be - and what I want us to talk about.\"\n\nI wondered what directions John's questioning would take. After a short pause, Liz said, \"I know he'd like to meet you too.\" After a pause, \"Look if the locksmith won't get there until the morning, you won't get back here until tomorrow at dinner. Why don't you and Ellie spend the night together again - without any bitter recriminations from me?\" \"No, I really mean it.\" \"We'll talk tomorrow night, however.\" \"I probably will too.\" \"Yes, he's super nice; you'll like him and so will Ellie.\" \"We try to keep that part of things low key; he's not at all pretentious.\"\n\nThe waiter brought our meals. Liz winked at me and gestured for me to start without her. She wrapped up her call with John; \"John, our dinners just came. You, Ellie, and I have lots of things to discuss about the past, present, and future; hold your list until we're together. Enjoy each other tonight. Drive safely. Don't do what I did. By the way, Jim bought me a new car - a Prius.\" \"No, I'll pay him back; you'll like it.\" \"Yes. I do love you too - and Ellie. See you at dinner tomorrow.\" She hit the 'End Call' button and handed the phone back to me.\n\nI said, \"Listening to one side of your call, I'd say things went well?\"\n\n\"It did; he says he feel like shit and expected justifiable anger from me. When I mentioned you, I could tell I had just messed his head - plus I told him to sleep with Ellie again and told him I'd probably make love with you again. He's no doubt wondering what happened to the Old Liz.\" She pulled her chair back from the table, walked to my side, and kissed me. \"Thank you. Now, hurry and eat. I want us to go home and make love again.\"\n\nI called Crystal after we got back to Liz' home, and before we got into the evening's sexual tryst. She told me how the YouTube videos of me rescuing Liz had been on all the gossip TV shows; the longer one had amassed thirty-six million views in he past twenty-four hours. She told me that Ellen and Terry were at her house now, and she had what she called 'pornographic plans' for the rest of the evening with them. She made some lewd suggestions about how I should please Liz, and then we rang off. I loved the way my girlfriend thought.\n\n<p align=\"center\">* * * * *</p>\n\nIn the morning, I went with Liz to her TV station for the afternoon show. I met her staff and followed her through a frantic and stress-filled day, right up until the start of the live show. After the show started, Liz did her opening monolog: talking about the accident, how so many people showed heroism and aid on her behalf, and the great treatment she'd received from everyone around Pasco, Washington. She then stood and came down off the stage towards me, talking about heroism above and beyond the call of duty as she did.\n\nWhen Liz reached me, she gestured for me to rise, and Liz introduced me to the audience, who for the first time suddenly realized who I was. The place broke into pandemonium of cheers, shouting, and applause that went on for several minutes. Liz and I hugged.\n\nAs the acclaim died down, Liz thrust a hand mic into my face. She said, \"Jim, publicly and personally, I want to thank you for rescuing me. You are my own hero.\"\n\nI was supposed to say something. My mind went blank, and so I started to say the first thing that came into my head. \"I think everyone of us has the same kind of courage and fearlessness in them that I tapped into when I saw your car flip over.\" I gestured to the studio audience, \"There isn't a person here that couldn't have done what I did, and, after the fact, I am pleased that I rescued someone so pretty and as talented as you are.\" \n\nEveryone in the audience laughed and applauded some more. Liz and I bussed a kiss, and I sat down. Liz went back to her chair, as she walked she talked; \"Jim is our featured guest tomorrow, and we even have a surprise for him then. So, be sure and join us for tomorrow's show.\"\n\nAs Liz talked, I imagined Bart Kenesis walking through the concourse of the Portland International Airport, having just gotten off his flights from Nashville. He'd pause and be drawn to the TV monitors in the airport because of all the commotion the audience made over some guest, and then he'd see that I was the guest. He'd smile and snort to himself, that now he again had me in his sights. He could just slide in behind me again, and be on my trail.\n\n<p align=\"center\">* * * * *</p>\n\nWe left the station after the show and got back to Liz's home at six o'clock. Two cars were in the driveway, Ellie and John's. We both took deep breaths and walked inside. John was a tall man with angular facial features that resembled photographs of pioneers I'd seen in history books. I'd learned from Liz that he was a partner in a law firm. Ellie was a pleasant looking woman about forty, who seemed so nervous I thought she'd jump out of her skin. As introductions were made, Ellie blushed about the impossible situation we were in. Liz hugged John and Ellie, patting them on the back in a soothing gesture. Their anxiety was palpable.\n\nJohn turned to me before another word was spoken, \"Jim, I don't know how thank you enough for saving Liz's life.\" He choked up a little. \"I watched those YouTube videos over and over - so did Ellie - and we cried about what almost happened. Thank you. Thank you. Thank you.\"\n\nLiz took the initiative to orchestrate our meeting. \"John, go get everyone a glass of wine. Jim likes a Chardonnay with ice.\" While John got the wine, Ellie fidgeted. Liz pulled four comfortable upholstered chairs into a circle in the living room. When her husband returned, we each took our glass and sat.\n\nLiz turned to John and Ellie, who sat opposite her, and asked in a friendly tone, \"Do I want to know how long what I saw up north had been going or how it happened\"\n\nJohn spoke clearly although his words sounded slightly rehearsed and definitely defensive, \"There's some background, as you know, but I assure you what you saw was the first time we'd had sex or even seriously kissed. You know I'd thought about sex with Ellie for years. Heck, we'd both pretend she was in bed with us when we wanted to spice things up. We were pretty explicit, and that's been going on for a few years.\" After a pause, John asserted, \"Ellie and I never meant to hurt you. If we thought at all, it wasn't past that moment of passion.\"\n\nEllie raised a hand slightly out of her lap asking permission to speak. \"I had this fantasy of making love with John ... and you, but he was your husband and you are my best friend. I didn't want to do anything to hurt either of you, and nothing to damage your marriage. I love you two. I'm so sorry; it just happened - unplanned.\" She blushed again and tear ran down her cheek.\n\nLiz absorbed those pieces of information and asked, \"Ellie, why were you at our camp two hundred miles from home?\"\n\nEllie and John grimaced. John said, \"Your birthday was yesterday, and we wanted to fete our favorite person. Knowing how close you two are, I invited Ellie up to help us celebrate. There was no other agenda.\"\n\nIn tears, Ellie added, \"I even brought up a birthday cake I baked. It's in the freezer at your camp now - untouched.\" I could tell she thought of the cake as some sort of peace offering.\n\nLiz looked chagrined. \"I didn't even think anything about it - my birthday, I mean.\"\n\nJohn continued, \"I'd been fantasizing about Ellie; she'd been fantasizing about me - us. When she arrived, we kissed ... and we kissed again ... and again ... and one thing led to another, and then there you were walking through the bedroom with my car keys - you'd walked right by us as we were ... making love.\"",
        "Liz said in a brusque manner, \"Now, just answer a couple of questions and we'll take this discussion in an interesting direction.\" Ellie and John nodded somewhat begrudgingly. \"Do you love each other? Did you two make love after I left and last night?\" \n\nBoth of them looked chagrined and avoided eye contact with her. Finally, Ellie's near inaudible voice said, \"Yes, and it was beautiful.\" John nodded.\n\nLiz glanced at me and said, \"Jim and I did too - and I thought our fuck was beautiful too.\" She emphasized the 'f' word to needle her husband, then paused and let that sink in. \n\nJohn winced. I had the feeling that for the first time, he felt the gut-wrenching feelings that Liz had felt when she found him in bed with Ellie. I felt uncomfortable being 'the other man.' John did look at me and then at Liz puzzled at where she intended to lead us in this discussion.\n\nLiz reached over and took John's hand, \"No, don't get jealous on me, after all you started all this.\" She kissed him. \"Here's a 'Truth' with a capital 'T' - I love you, and I want us to be together and to be in love forever.\" Liz turned to Ellie and held her hand too, \"And, you! You're still my best friend, although my nose did get out of joint about things. I don't want to lose you either. I love you too. However, it is essential that we be open, honest, and trust each other. Without that we will not be able to have a lasting relationship.\" Liz turned to me, \"And, Jim, I'm still feeling highly affectionate and attracted to you - so don't you go away.\"\n\nLiz said, \"After my shock at finding you two fucking and my accident, I needed someone to comfort me, and at that moment you two weren't on my favorites' list, so Jim became that person because he gave of himself in a caring way. He's a compassionate person: he talked to me about upbeat things, rode with me in the ambulance, held my hand at the hospital, got us a good room when I'd been released, got me a car, and held me when I needed to be held. I'd been scared shitless about the accident and my marriage. He didn't hit on me once. He was a perfect gentleman.\"\n\nShe paused and added, \"BUT, I came onto him, not because he rescued me - although that might have played a role, not because I'd found you fucking each other - although that too may have also played a role, and not because he's a popular singer, but because of his sensitive caring nature. We clicked. We connected. There was immediate chemistry, so I followed through and tried to fuck his brains out. I then discovered what a great lover he is too.\"\n\nLiz stood, and walked into the center of our circle; we were all seated around her. \"We are going to redesign our relationships, right here and right now. No one leaves until we have agreement, whatever that means. All right?\"\n\nI nodded automatically, and I think Ellie and John did too.\n\nLiz continued, \"This weekend you two unexpectedly created an 'open marriage' for us. We were close, and John and I had even talked about the sexual part of such a relationship in order to arouse each other, but we never talked about how to make it happen or the specifics of one. So, here goes ... I'll start with a principle about how we'll live, and then we discuss it. And Jim, you've been in some of these situations, so I'm hoping you'll be sure we cover all the bases.\"\n\nAfter widespread nodding in agreement, Liz stated, \"First principle, we can have sex with whomever we want provided that we talk about it ahead of time. The second principle is that any of us can make love any time we want to with anyone else in this circle - a 'free pass'.\" Liz made a gesture of a circle that included the four of us in the room.\n\nEllie looked surprised. John looked stunned at the implications of her statement. He glanced at Ellie to judge her reaction. Ellie said shyly, \"I like those rules ... and I'm honored to be included in your circle.\" Then Ellie looked at me and said, \"I'm attracted to Jim; I can feel his chemistry and I know what you felt. What if I want to sleep with him too?\"\n\nLiz grinned, \"You have my blessing. He's very good, and you'll love him!\" I laughed.\n\nJohn said after reflecting, \"I guess those rules are more than all right with me too. Are you sure?\"\n\nI posited, \"What if one of you wants group sex, a threesome or foursome or moresome?\"\n\nLiz smiled and addressed both questions: John, yes, I'm sure. As for group sex, that's the best suggestion I've heard all day. Ellie, I put you on notice that I'm going to hit on you, and we are going to have some serious sapphic loving.\" Liz had just appealed to Ellie's prurient interests.\n\nJohn's eyes got big as he took in his wife's last statement.\n\nWe looked at Ellie. She blushed, and said in a hushed but excited voice, \"I'd love to try group sex ... I can't wait ... and I'd love to be with you Liz. I've dreamed about it.\"\n\nThe discussion of further principles got temporarily postponed as the four of us moved onto other, more sensual activities.\n\n<p align=\"center\">* * * * *</p>\n\nLiz led us to the master bedroom and the king-size bed. Liz asked me to 'orchestrate' the event so everyone got maximum benefit of each other. I could tell she wanted time with me and John. I slowly disrobed Liz and Ellie, carefully removing each piece of her clothing. I kissed and romanced each woman with lots of attention. When the girls were nude, they stripped me, and then did John. I found Ellie's erogenous zones by experimenting, while John made out with his wife. I had us change partners and repeat our kisses and strokes. I went down on Liz, suggesting that John mirror our ardor with Ellie. We then changed partners again.\n\nEllie enjoyed the first orgasm, and then a second, before Liz joined her. We switched a few times to everyone's pleasure. Eventually, Ellie said to me, \"God, please fuck me. Put that cock deep inside me ... and cum in me too.\"\n\nWith those words, I started to slowly enter her body, rocking my hips to only advance my penetration of her quim a fraction of an inch or less on each forward thrust. Ellie came before I got totally embedded in her pussy. I reached between us and rubbed Ellie's clit. She came again just as I bottomed out in her cunt, emitting a long, low moan of pleasure.\n\nJohn and Liz coupled, and he plowed into her cunt with great abandon. Ellie and I both heard the happy exchange of crude names and pleas between them. They talked about the two of us, and our erotic performance. I called for a switch, and I jerked my cock from Ellie's hole, almost with a champagne pop. John slowly withdrew from Liz. The two women lay side by side as John and I switched places. In unison, and to the tune of the simultaneous sighs and moans from both women, John and I slowly sank our rods into our new fuck partners.\n\nI watched Liz watching her husband penetrate her best friend. I asked in a near whisper, \"What do you think about that?\"\n\nLiz watched until John bottomed out in Ellie's cunt, and said to me, \"That is positively the hottest thing I have ever seen. I can't believe how hot I am watching my husband fuck my best friend.\"\n\nAfter five minutes, John came, bringing Ellie with him. I'd moved Liz to that place where the stimulation we shared kept triggering orgasms in her. After a few minutes in more or less the missionary position, I asked Liz if she wanted to switch or have me doggy her from behind.\n\nLiz said in a husky voice, \"Neither. I want Ellie to sit on my face.\" Ellie looked surprised at the request, but moved to comply with a grin. As I continued to fuck Liz, Ellie straddled Liz's head, and Liz began to eat out her best friend, no doubt searching for her husband's residual cum. Occasionally, as the women writhed and moved in front of me. I could see Liz's tongue flailing with great delight in her best friend's slit. I reached down and added a helping finger against Ellie's clit. \n\nI had the women switch several times, rotating between my cock and each other's tongues. We went on for over half an hour, working up a sweat, and amusing John who lay spent beside us, but fondling his cock and often sharing in the kisses from the women. \n\nEllie came. Liz came. I came too, but only after assuring everyone else had reached some state of bliss far beyond normal lovemaking. I wanted both women to feel the edge of a spiritual sexual experience.\n\n<p align=\"center\">* * * * *</p>\n\nThe next morning when I went outside to check on the motorcycle I'd parked beside Liz's home so she could put her new car in the garage. Someone had put a bullet through the front tire from side to side, the slug leaving a small crater in the adjacent concrete of the home's foundation. Kenesis had found me, and he had a gun. I stomped around the yard cursing as I thought about what to do now. I now felt that I had a flashing target painted on my back.\n\nWe were rushed to leave the home for Liz's office, so on the way I called a local Harley dealer, explained the problem and asked for them to pick up the bike, replace the tire - again, and return the bike. I gave him my credit card information too. The guy I talked to knew about my road trip and loved country music, so he was more than happy to help out. I also called Mils and explained that the threat I felt had ratcheted up a notch overnight. Liz gave me a worried look at the end of my calls.\n\nMy sitting in on the pre-show briefing intrigued Liz's aides. She'd never done this before, and so I was a big bonus for the show. Liz anointed me her 'Co-host For the Day.' An aide gave a set of questions for Liz to use when she interviewed me, and when I scanned the questions I found all within my sense of propriety: how I got started in music, what I thought of my newfound fame, what Crystal was like, and what music I'd done and expected to do in the future.\n\nI'd also volunteered to sing two songs on her show:  'Texas Dawn' and  'The Wolf on Lone Wolf Mountain.'  The first was a big hit, and the second had made the top ten. I got a 'chance before the show to rehearse each song once with the studio band, a group that had been augmented with a western guitar to complement my singing.\n\nThe show started with Liz coming out to gales of applause from the audience of about two hundred that sat in tiered rows in front of the stage. Liz announced me as her special Co-host for the Day, and I came out to a standing ovation. Liz and I kissed, and I decided to ham it up, so as we went to buss, I hugged her, and did a dip with her, giving her a serious kiss in the process. The audience went wild and 'ooued' and 'aaahed.' \n\nLiz laughed, and after we sat down, she noted that she hadn't been kissed like that in quite a while. I recalled waking up with her that morning and sharing a similar kiss, except we didn't have any clothes on. A nude Ellie also received a similar kiss. We bantered back and forth, in part talking about Liz's accident, current events, and in part talking around some of the questions I'd been primed for. After a commercial break, I sang my first song with the studio band. Liz then started a dialog with me about relationships, explaining to her viewers that I'd been married, had lost my wife eight months earlier, and had 'just started dating' after rebuilding my life. I didn't correct her error about my dating.\n\nLiz asked, \"Jim, what do you see now that you're back on the dating circuit? What kind of relationship are you looking for?\" The question was a natural now that I was a hunky, country western singer.\n\nI thought for a moment then responded, \"For me, there are two extremes in relationships, and many shades in between. In the first group, people hold rigid views about relationships, views they get from their culture, family, or religion. Sex is for procreation, and perhaps for a little satisfaction. Relationships are man-woman only, and must last a lifetime with unquestioned fidelity and no experimentation. These are often male dominated, lack true partnership, involve little flexibility in marital roles, and often exemplify jealousy and lack of trust in one another. They are static and unchanging, because change is feared by the partners.\"\n\nAs I talked I noted that a hush had come over the studio audience.\n\nI went on, \"At the other end of the spectrum, individuals are apt to find they can love and be loved by more than one person. They enjoy equality in their relationships, fluidity in roles, open and honest communication, trust, a strong sense of personal identity, and a world of near unlimited possibilities. They feel fortunate and creative. These relationships involve interesting combinations of people in loving relationships that often transcend a 'normal' 'man-woman and two-point-three children.' They transcend jealousy, and instead thrive on the happiness, joy, and bliss for their partners. This is the kind of relationship I seek.\"\n\nLiz bore in; \"What about sex in the second group?\"\n\n\"For me, it's an integral part of any deep relationship, and to your question about my dating preferences, I want women that think more like the second group of people. I like smart, creative, talented, pretty women with a sense of humor and a tolerance for someone like me and my crazy views on the world.\"\n\nLiz laughed and said, \"Why that describes me perfectly.\" The audience roared with laughter. As the show went on, Liz got me in an apron cooking a fancy omelet for the cooking segment with a pretty chef from a nearby restaurant. Later, I had to do some stretching exercises with a yoga instructor. She had a sommelier on the show talking about wines made from grapes grown in Oregon, so we sampled some different vintages and commented on them.\n\nIn another show segment, Liz told the audience that we'd been talking before the show, and that I'd mentioned the interplay between sex and spirituality. She turned to me, \"So, could you elaborate on how you see these two themes in your life, or in the lives of others?\"\n\nI answered, \"Wow! A tall order, unless you have all day. I'll try. Great sex - sex beyond the normal 'let's get together' - can be a unity of mind, body, and spirit for the lovers. Sure, lust can be there too, but beneath the sweat and passion is this underlying trinity. It's best when the loving parties share this philosophy because it sets the stage for great lovemaking and it kicks the relationship to a much higher, more romantic, and more satisfying level. Sometimes, I know I'm the one with that philosophy, and I allow it to spread into my partner until I know they can feel it too. You take sex and love to this new level when you achieve this state of thinking. It allows a man to last indefinitely and control his orgasms in a way so he gives many more than he gets.\"\n\nAs I spoke I could see a slight smile on Liz's face. I imagined she was recalling one of our one or two hour lovemaking sessions. She asked, \"You mean you can make love without stopping or ending the session after only a few minutes.\" Everyone in the audience leaned forward to hear my reply.\n\n\"Exactly. I think any man could learn to do this, and ... errr, deliver an unbelievable number of orgasms to his partner in the process before he has to finish.\"\n\nWith a laugh and look of amazement, Liz turned to the audience of mostly women, \"Does Jim's philosophy and capability appeal to any of you out there?\" The studio audience cheered, some women even standing and shouting out 'Call me!' and yelling out their phone numbers. The moment made the entire studio audience and staff laugh too. \n\nAfter a commercial break, Liz said she had a surprise for me, but asked me to first sing 'Texas Dawn' for them. I'd borrowed a guitar from one of the band members, and I went to a smaller stage to the side of Liz's studio desk. I ignored a large video screen in a corner of the set, figuring it had been left in that position to lend an air of informality to the studio set.\n\nAs I sang the first couple of lines of the song, the screen lit up suddenly and Crystal appeared with her guitar in a TV studio back in Tennessee. She sang the next line of the song, and I had a grin on my face from ear to ear as we blended our voices together. We did the whole song with an extra chorus, and then ended to a big round of applause.\n\nAs the applause died down, Crystal smiled and said, \"Hi Darling. I miss you.\"\n\nI responded, \"Hi Love. You are a delight and a sight for sore eyes. This is a surprise. I miss you too.\" We bantered a little. Liz came and joined me on stage to thank Crystal for being part of my surprise. As we ended the segment, I knew we had to say goodbye to Crystal. We'd talked after dinner the night before, and I knew she had a mall appearance that evening in Memphis. \n\nCrystal's parting words were, \"Now, you be extra nice to Liz and everyone there. See you in Reno.\" I hoped that Liz and I were the only ones that recognized the sexual innuendo of her comment, but given what had been written about us in the tabloids I doubted my assumption.\n\n<p align=\"center\">* * * * *</p>\n\nLiz and I arrived home just as the Harley dealer delivered my motorcycle from the repair of the tire and few other minor things. I parked it in Liz's garage overnight, hoping that Kenesis wouldn't vandalize her new Prius in the driveway. In the morning, the Prius was fine, but I still checked over my motorcycle so I knew for sure no one had tampered with it or put a tracking device on it. I'd started to evolve a plan about how to solve the situation with this man. \n\nI left Portland very early after only few hours sleep thanks to Liz, Ellie and John. I left early so that Kenesis wouldn't have a chance to start following me, and took back roads south to Eugene and then east towards Boise. \n\nAt a magnificent gorge with a raging river cascading through it I stopped and meditated, letting the roaring sound of the water absorb my focus. After my time of silence, I took one of the last envelopes of Karen's ashes from my saddlebag and sprinkled the dust into the misty swirls rising from the deep water-carved canyon. Karen had loved waterfalls, and when we drove somewhere, she'd always have done her homework and knew where they were located near our route; we'd have to stop so she could see the cascade, even if she'd seen the same one a dozen times before. I missed Karen.\n\n<p align=\"center\">Chapter 29\n\nArizona</p>\n\nI took five days to travel from Liz's home outside Portland to Sedona, Arizona. The weather cooperated and I camped out two of those nights without terribly cold temperatures. When I'd left New Mexico, I'd promised Tama I'd meet her in Sedona. She'd explained to me about the vortices of Sedona, and how they imbue people with unusual strength, guidance, and protection - qualities I'd need for the rest of my life. Tama also had shamanic skills that she promised to unleash on me in Sedona, adding to the transformation she promised during my visit there.\n\nI had several phone calls with Tama synchronizing our arrival times and hotel, and also getting Crystal to join us. Tama was over the moon that she'd get to meet Crystal and that we could share some intimate time together. \n\nCrystal was excited at the prospect of the mystical experiences that Tama promised. Crystal also was excited about meeting 'my Indian lady friend' and she promised to make our time together interesting. I suspected that Crystal would be the one surprised by events in Sedona. \n\nI asked Crystal if she'd ride the motorcycle with me from Sedona to Reno where we would be doing the Children's Fund Telethon. She came back laughing, \"YES. I want to be with you on the ride to Reno providing you drive me through the Las Vegas strip at night on the motorcycle. I've never been to Vegas, and I've always wanted to see it at night with all the lights.\"\n\nCrystal then said something that ultimately shocked me. \"By the way, Terry knew we were going to talk, and he gave me a message for you.\" Terry was more than just our agent; he'd become a close and trusted friend."
    ],
    "authorname": "TLCgiver",
    "tags": [
        "romance",
        "incest",
        "group",
        "threesome",
        "polyamory",
        "love",
        "motorcycle trip",
        "harley",
        "revenge",
        "sister"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/road-trip-pt-06"
}