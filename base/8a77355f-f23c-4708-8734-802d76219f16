{
    "title": "Panthera Spelaea Ch. 71-80",
    "pages": [
        "Zach answered after a few rings. \"You all right?\"\n\n\"We're inbound on a helicopter, ten minutes out. Are you still in port?\"\n\n\"We're just clearing the breakwater at Sibenik now, heading your way.\"\n\nI had a quick conversation with the pilot, who assured me he could drop us off on the landing pad on a moving superyacht. It was common for a charter pilot to do this with all the rich people vacationing in the Adriatic. Landing on the Elements, even at night, was within the capabilities of him and his machine. \"Did you take care of that problem in time?\"\n\n\"Yes. I'll talk more in person. I'll have the Captain ready the helo deck.\"\n\nHe hung up, and I put the phone in one of my cargo pockets. We were flying at an altitude of three hundred meters over the dark sea.\n\nI felt a thump from behind me. Turning in my seat, I saw Svetlana out of her seat, kneeling on the floor, while Anna pulled the wrapping off her arm. I turned my headset to the internal intercom with them. \"What happened?\"\n\n\"Your sister woke up,\" Anna said. The two girls worked together to pull Melanie into a seat. It wasn't easy for them to handle the deadweight of her human form in the tight quarters, but they did it. Anna pulled the T-shirt that had blinded her Eagle onto her body. It was enough to cover her for now.\n\n\"Is she injured?\"\n\n\"She looks fine,\" Anna said. \"Not even a scar on her neck.\"\n\nThe girls barely got buckled in before we were circling the Elements on our final approach. I got on the intercom with the pilot. \"When we exit, shut the engines down and wait for instructions. Cooperate and keep quiet, and we'll double your pay for the charter.\"\n\n\"Whatever you want, I'll do. Discretion is an expectation for me,\" the pilot said. \"You wouldn't believe some of the things I've seen.\" He did his job well, hovering just off the starboard bow to get the wind, then moving over and setting down on the middle of the helicopter pad. He was shutting down the engines as crew members rushed forward to tie the helicopter to the deck.\n\nI waited until the girls were out; one of the crew was carrying Melanie. \"Give me your phone,\" I told him. He picked it up off the floor below his legs. \"Someone will be out soon to give you instructions.\" With that, I opened the door and exited the helicopter.\n\nZach was waiting for me by the entrance to Art's office. \"The girls and Melanie went straight to Medical. We'll have Doc Margaret check her out while the rest of us talk.\"\n\n\"We need to do more than talk,\" I said. I was pissed off, and my Lion wanted blood. I'd hurt Mikhail badly, but it was Svetlana who filled him with lead. Vasili shot my sister, but the Liger had done most of the damage. By the time my lion ripped his head off, he wasn't feeling a thing. There was only one person left alive who was responsible, and my Lion wanted to make him suffer. We'd take him near to death, let him heal, then do it again and again.\n\n\"You need to get looked at first. Did you take those bullets as a human or lion?\"\n\nI'd hardly notice the gunshot wounds, and the bleeding had stopped shortly after my switch. One was a few inches below my left collarbone, while the other had grazed a rib on my left side. \"Lion. They didn't do much damage.\" I could feel the bullet was still there in my chest, but it hadn't punctured a lung. I loved my Switcher healing.\n\n\"Come on. Everything else will wait.\" He walked me along the starboard side towards the staircase leading down to Medical.\n\n\"What is going on with your men?\"\n\n\"We found them; it will take a few hours for the sedatives to wear off, but they will be fine. Our patrol boat is returning to the island to start the cleanup.\"\n\nI thought of something. \"The Liger is still there.\"\n\n\"We know. Tell me what kind of mess you made.\" I told Zach about the Liger and my Cave Lion ripping Vasili apart, me biting Mikhail's shoulder, and Svetlana shooting Mikhail multiple times. \"So it won't be an open casket funeral.\"\n\n\"Nope.\"\n\n\"And Mikhail arranged the charter?\"\n\nI nodded. \"I have an idea. Get cleaned up and talk to the others. I'll grab some things and go clean up your mess for you.\" He left me at the door to the ship's clinic.\n\nWhen I walked in, the girls were sitting by Melanie. She was covered up and sleeping on the exam table. \"How is she?\"\n\n\"Fine,\" Doctor Margaret said as she walked into the room from her small office. \"She's alive because you acted quickly. From what Anna described, she would have been dead in seconds if you hadn't made her touch the Eagle. For some reason, the initial Switch allows for instantaneous healing of the body.\"\n\n\"There's no shotgun damage?\"\n\n\"None that I can detect. You took bullets, and one is still in there. Strip and get on the table in the operating theater. Anna, scrub in while Svetlana preps him for surgery.\"\n\nI looked at Svetlana, but she was in Nurse mode again. I pulled off my gear and walked to the next room. The wounds had scabbed over, so Anna had me shower first to get the blood and dirt off. I ended up lying on my right side as Svetlana spread Betadine around the wounded areas. \"I don't know why you bother. It's not like I'll die from an infection.\"\n\nShe didn't stop rubbing as she smacked my ass. \"Don't tell me how to do my job, mister. If you didn't get shot, we wouldn't have to pull bullets out of you! And just because you will heal doesn't mean we shouldn't follow medical practices to prevent infection.\"\n\nDoc came in and numbed up the area, then dug out the bullet from my chest. They also removed the scab and cleaned out the bullet wound on my rib. She used superglue to hold the edges tight until my healing could fix it. I sat up with their help. \"Wear this until the scars disappear,\" Doc said as she put my left arm in a sling.\n\nI wanted to roll my eyes, but Anna had that look. That \"you better do what she says if you know what is good for you\" look. It had been a trying day, and discretion is the better part of valor. \"Yes, Doctor.\"\n\nSvetlana came in with some clean clothes for me; she'd showered and changed back in our room. \"I trashed the other stuff and returned your gear,\" she told me. \"Art wants to see us in his office.\"\n\n\"I'll finish cleaning up here and join you later,\" Anna said. \"Go. They need you.\"\n\nI kissed her goodbye, then took Svetlana's hand in my good one and headed out. A steward was waiting for us outside Art's office. \"Would you care for anything to eat? The kitchen remains open for you.\"\n\nMy stomach growled in response. \"Thank you. I'll take whatever you are serving in a triple portion.\"\n\nSvetlana giggled. \"Double portion for me, and pie for dessert.\"\n\n\"I'll return shortly,\" she said.\n\n\"Come on, let's see what the others say about what happened,\" I said as we turned back to the doors. I knocked, then opened it up. Art was behind his desk, the monitors around the room full of information and video. Duncan and Olivia were on the love seat to his right.\n\nAnd Edward was in the chair to the left.\n\nCh. 72\n\nEveryone looked at me as I walked in. I froze, trying to figure out what Edward was doing here. Didn't Zach pass along the warning? How could Art let him get so close when he was worth another nine-hundred-and-fifty million dead? Was he waiting until he had a better opportunity?\n\nAnd why would Edward be hanging around when he could disappear into Sibenik? Did he find out Mikhail was dead, so there was no point in killing Art? Did he think we didn't know about his fifty million dollar payoff to set me up? I shook myself out of my haze and decided to go with the good news. \"Melanie is going to be fine,\" I told them. \"The beast joining her healed her body while she was on the other side or something.\"\n\n\"That's good to know,\" Art said. \"None of us got our beasts while we were injured. How is she handling the change?\"\n\n\"She hasn't woken up to talk about it yet,\" I said. \"Her Eagle was calm and at peace around us. I think it knew and trusted us from her previous host.\"\n\n\"That's probably it,\" Duncan said. \"When Todd killed Ekatarina, the eagle took off, but it came down from the sky to protect you. In St. Petersburg, it was war, and the eagle had no one left.\"\n\n\"I guess,\" I said as I sat on the empty chair next to Art's desk. Thank God it was on the other side of the room from Edward. I might kill him soon. \"How are your men?\"\n\n\"They will be fine,\" Art said. I heard the helicopter startup and watched as Zach boarded with a duffel bag. \"My people will return to the island by boat and clean up. We've managed to keep the police out of this so far, but that won't last forever.\"\n\nEven inside the office, the sound of the helicopter taking off made conversation difficult, so we waited until it was gone. Edward finally spoke up. \"We need to figure out how to let the world find out about the deaths of Vasili and Mikhail. The last thing we need is for the authorities to tie it back to the island. We don't need our names coming up, and your friend doesn't need the headache.\"\n\nThat settled one thing; Edward knew Mikhail was dead.\n\nIt raised another, more troubling thought. Art was sitting in his office without a hint of danger. The only one in the room giving off any scent of fear was ME, and the other switchers noticed it. Why wouldn't Art be nervous now? Maybe Zach never told him. My blood ran cold at that thought; he was the only one I told about Mikhail's death. It was Zach's idea to put me with the Liger on the island as bait. Zach made all the arrangements for security and patrols. Zach's people were responsible for getting Melanie from the airport in Split to the Elements. And Zach took off in the helicopter with a bag.\n\nSure, Vasili said Edward was the man, but could I believe him? Did he do it to fuck with my head about how trustworthy my fellow Switchers were? Or were Zach and Edward in on it from the start?\n\nThere were a billion reasons for Edward to bring Zach in on the plot.\n\n\"Art? Can I speak to you outside for a moment? It's important.\" I had to get him away from the rest of the group; I didn't know who else I could trust right now. We walked out on the bow, heading forward until we ran out of deck space. I made sure no one else was around before I stood at the rail and started talking. \"I don't know who to trust anymore,\" I confessed.\n\n\"Why?\"\n\nI told him about Vasili's bragging about turning Edward against us and how a billion dollars waited for him if he killed Art. His reaction wasn't what I expected.\n\nHe laughed. \"When Edward approached me with this idea, I thought it would NEVER work. I mean, who asks for a BILLION dollars?\" He extended a pinkie to the corner of his mouth and spoke in a bad Doctor Evil voice. \"One BILLION dollars!\"\n\nMy jaw dropped. \"You knew?\"\n\n\"Of course I knew. Zach was right; Mikhail would not trust anything from the IT 'breach' after my people picked up Todd's sister. The disappearances plus the gaps in connection would make it obvious my computer people had found the taps. The concept was good, but we needed a better hook. A traitor in my family tried and failed; Edward thought a direct appeal from a jealous switcher would work. It went perfectly, or so we thought.\"\n\n\"What did you do? And why didn't you tell me?\"\n\n\"Edward made contact with Mikhail over the satellite phone. He gave his reasons; of the five switchers in the world, all were wealthy except him. He blamed me, of course. I didn't open up my company's resources or help him with new identities. He pulled a Fredo, wanting a piece of the action he could call his own.\"\n\nFredo was the worst character in the greatest movies ever made. He turned on Michael because he wanted what he couldn't have. Respect. \"Still, how do you get a billion when the last guy took the job for ten million?\"\n\n\"He sweetened the pot by warning Mikhail of some upcoming moves I'd be making against his company. I've already cut the value of his company by a third, and I have the resources to crush him. A billion dollars to stop the bleeding would be worth every penny, much less becoming a switcher. Remember, he was dying, and he knew it. What good are his billions now?\"\n\nIt made sense. \"So Edward tells him I'm going to be running around this uninhabited island alone while the rest of you hit Sibenik. Zach sets it up with a decoy Liger and a bunch of guys to protect me, and we're in business until Mikhail shows up with MY SISTER.\"\n\n\"Yeah, that's the part we didn't expect. Zach thinks Mikhail got greedy when he found out we were interviewing for the Eagle spot. He figured out a way to get your mates and the carcass out there. We put you in a hell of a spot, John, and I'm sorry. I'm glad you came through it relatively unscathed.\"\n\n\"My sister got kidnapped, he threatened to rape the girls, and Vasili blew half of Melanie's throat away. I wouldn't call that relatively unscathed.\" My Lion was rumbling in anger at the thought.\n\n\"It turned out well. You'll have to take the lead in training Melanie.\"\n\n\"Even though I can't fly.\"\n\nArt laughed. \"None of us can. Duncan and Olivia offered to host you both back in the States. We can't stay on my ship forever, and you both need room to learn.\"\n\nI gripped the rail and nodded. I'd enjoyed my time on the Elements, but I was more at home in the woods and mountains. \"What happened with the rest of Edward's payment? I sent text messages to Mikhail's accountant to move forward.\"\n\nThat got Art smiling. \"The money is in Edward's account, and the stocks transferred already. You took a big chunk out of Mikhail's estate with your quick thinking.\"\n\n\"What is happening with it?\"\n\n\"My people are moving it around between banks. We'll make it impossible to trace. We should discuss what to do with it.\"\n\nThere were a lot of things I could do with a billion dollars. \"Melanie deserves some of it. She went through hell.\"\n\n\"So do you, John.\" He looked back at his office. \"Can we go back inside now? And can you quit looking at Edward like he's dinner?\"\n\nI chuckled at that. \"I guess so. I wish you'd told me.\"\n\n\"We couldn't, John. I'm sorry things went bad on you.\" We turned back towards his office as the superyacht headed back out to sea.\n\nCh. 73\n\nDuncan, Olivia, and Edward turned to us as we entered the office from the yacht's bow. Svetlana was eating her late dinner; she raised an eyebrow as I walked in. Edward stood up, nervously looking at me. \"Are we good?\"\n\nI didn't know what to say. \"I understand why you worked with Mikhail and placed me in danger. I can forgive you for that. What I don't forgive is involving my family. You told Mikhail about the people coming in to interview, including my sister?\"\n\n\"He would have known something was up from the email and phone traffic we let them intercept. I'm sure his people were watching the airports and had a flag on your family, just in case they came over to meet you,\" he explained. \"We didn't expect him to act against her.\"\n\n\"Mikhail killed one of my men in the kidnapping,\" Art said. \"We didn't hand her over, no matter how it looked to you on the island.\"\n\nI let out a breath. Svetlana didn't seem surprised, so I bet Edward told her while Art and I were talking. Recriminations would do nothing at this point, but my trust level in Art and Edward had gone down. \"It ended well,\" I replied as I embraced him. I then sat next to Svetlana, with my piled-high dinner plate in front of me. \"What matters now is what we do next.\"\n\n\"I agree,\" Art said as he sat at his desk. \"We need to dispose of the bodies, clean up the island, and complete the takeover of Mikhail's company.\"\n\n\"And Melanie,\" Olivia added. \"She needs to learn about her Switcher nature and meld with her in safety.\"\n\nDuncan nodded. \"And we need to deal with all the people we brought here to interview for the spot that no longer exists.\" He looked at me. \"The others arrived before we departed Sibenik. Some believe they are here for job interviews, others for charitable grants.\"\n\nArt waved his hand at that. \"My agents will take care of our problems, and my staff will take care of the interviews. The Captain is heading north now, towards the fishing village of Rovinj. We will dock early in the morning. Given what will be happening tomorrow, you need an ironclad alibi. Take the girls sightseeing; it's a beautiful place with lots of tourists. If the paparazzi spot you in public, so much the better.\"\n\nI was game as long as Melanie was awake and safe. Svetlana picked up on the other problem. \"What do we do with the seven people all day? You can't interview them all at once.\"\n\nArt agreed. \"We'll start with the older ones in the morning; we hear about their endeavors, hand over a check, and send them on their way. We can schedule them an hour apart. The younger ones can go in the afternoon.\"\n\n\"I'll take them along,\" I said. \"Better for my alibi if there are unrelated people along, and we are safer in a bigger group.\"\n\nDuncan nodded. \"Good idea. Olivia and I have to stay out of sight since we have a son and daughter on board who both believe us to be deceased. I assume you'll be sending security along?\"\n\nArt nodded. \"Absolutely. Just because Mikhail is dead doesn't mean the danger is over. We don't know what orders he left regarding us.\"\n\nSvetlana finished her meal and stood. \"I need to check on Melanie, and then I'm going to bed. Don't stay up late,\" she told me before she kissed me goodnight.\n\n\"I'll be along soon.\"\n\nThe sway of her ass as she walked out the door told me two things; she knew I was watching, and she wanted me to watch. \"Why don't you go over your plans for Mikhail's company and the money while I eat.\"\n\nArt pulled up some graphs showing trading on the steel company. \"The equity stake was Edward's idea. However, you were the one we put in danger, and your quick thinking on the text messages got the transaction done.\"\n\n\"I'm proposing we split the stock between the two of us,\" Edward said.\n\n\"What about the fifty million?\"\n\n\"Half goes to you, the other half to Melanie with my apologies,\" Edward replied. \"Think of it as your Switcher Starter Funds. You'll need to buy enough property for your beasts to roam without being in danger.\"\n\nI looked over at Duncan. \"You don't want any of this? Art, what about you?\"\n\n\"We'll be fine,\" Duncan said. \"We'll make our money by investing.\"\n\nArt was kind enough to explain. \"The stock value has taken a pummeling since we started going after it. When news of Mikhail's death hits the markets, it will tank. That's when I swoop in, with Duncan as another investor, and Karpen Investments takes a controlling stake in the company. We open up the supply lines again, get the government off our back, and in a year, we triple our money.\"\n\n\"Damn. I suppose I should hold my stake for a while?\"\n\n\"You'll be a rich man if you do,\" Art said. \"You give Karpen a proxy vote for your shares, and I'll buy them from you in a year.\"\n\nI'd never expected to be a poor man; my parents gave me a generous allowance while pursuing my academic dreams, and Dad's company would fall to the three of us when they were gone. I'd learned how important money was to Switchers. We needed to disappear and create a new identity every twenty years, and I had two pregnant mates to support now.\n\nThey kept going over things as I ate, and I was getting sleepier by the minute. I finished the pie and stood up. \"I can't keep my eyes open,\" I said. \"Goodnight.\"\n\nDuncan laughed. \"I'm shocked you didn't follow your mate out of here.\"\n\n\"We'll talk more in the morning,\" Art said.\n\nI walked out and down the stairs to my cabin. It was dark, but my cat eyes had no trouble making out what was going on. Three girls were under the covers, and all were sleeping soundly. I went into the bathroom to shower and get ready for bed. I put on shorts and climbed into the open spot on the king-sized bed. Anna was on the far side, cuddled into Melanie, while Svetlana was on her back close to me. She turned and snuggled into my side as I lay on my back, and I soon joined them in sleeping.",
        "I woke to panicked movements. \"WHERE AM I,\" Melanie yelled.\n\n\"You're safe,\" I told my sister. Anna turned on the bedside light, letting her see the room and her bedmates. \"We're on a friend's boat. Anna and Svetlana brought you here after you passed out.\"\n\nMelanie groaned in pain as she looked around. \"He shot me!\" She felt her neck, seeking the wound that was no longer there and gasping as the memories came back to her.\n\nI pulled her into my arms. \"How do you feel?\"\n\n\"I must be dead,\" she concluded. \"It hurt so bad! My neck was gone, and I couldn't breathe. I saw you looking at me on the ground. I felt your hands trying to stop the bleeding, and then everything went dark!\"\n\n\"You are here with me, and you are fine now,\" I told her as she sobbed onto my chest. \"How it all happened is a long story for another time. How do you feel?\" I looked over at the clock; it was just past four in the morning.\n\n\"I'm cold, and everything hurts. It's like I got run over by a truck, then it backed up and made sure,\" Melanie told me.\n\n\"I'll get her a swimsuit,\" Svetlana said. \"She's close enough to my size. The hot tub will do her a world of good.\"\n\n\"Good idea.\" I grabbed my trunks and went into the bathroom to change while the girls helped my sister out. I came back out to three smoking-hot babes in bikinis. \"Come on. Karpen Investments owns this yacht, and it's amazing.\"\n\n\"I want to know what happened,\" she said.\n\n\"Trust me when I tell you that you aren't ready to hear what happened yet. Right now, we need to help your body heal up. A good soak will help,\" I said. Melanie could only stand with assistance, so I carried her out the door and up the stairs. We went out on the aft sun-deck, past the bar to the lounge and hot-tub area. We weren't alone. \"Good morning,\" I said as I smiled at the guy already in the tub. \"Mind if we join you?\"\n\n\"Not at all,\" he said. I carefully made my way in while holding Melanie. She moaned as she sank into the warm water. She moved to get a jet running over her back. I'd been sore for a week, so I knew how she felt. \"Colonel Hunter West.\"\n\n\"John Cantwell,\" I said as I reached forward to shake his hand. \"My sister Melanie, my fianc\u00e9 Svetlana, and my friend Anna.\"\n\nHunter slid closer to Melanie, who struggled to raise her hand to shake his. \"I'm sorry, everything hurts right now,\" she said.\n\n\"Quite all right. Are you ladies joining us?\"\n\n\"We're good,\" Svetlana said. \"Pregnant women aren't supposed to be in hot tubs.\"\n\n\"Congratulations,\" he said.\n\nLike magic, a ship's steward showed up and took drink orders. We watched the islands go by in the early light of dawn. Colonel West and Melanie had started talking early on and hit it off, so I felt like a third wheel in the conversation. When Hunter began massaging her shoulders, I joined the girls on the sun lounge with my glass of juice. It was a little cool in the wind, so my wandering hands stayed hidden by the thick blanket the steward brought us. Melanie didn't care; she was deep in conversation with a man twenty years older than her. I knew it wouldn't matter if they were mates, and I knew Hunter was a good man. Stranger things had happened.\n\nBreakfast arrived with the sunrise, and the steward brought robes for us to wear to the table. Hunter carried my sister over to the table. Edward joined us, and we ate and talked as we pulled into the harbor at Rovinj. It was a beautiful town, with a large church at the top of the hill, surrounded by winding streets and homes down to the water's edge. \"Anyone up for some exploring today,\" I asked.\n\nMy mates were up for it, but Melanie looked sad. \"I don't know if I can stand, much less shop,\" she said.\n\n\"I'm sure we can get a driver and a wheelchair for you,\" I said.\n\n\"I'd be happy to take you around, at least until I have my interview,\" Hunter said.\n\n\"Your interview is not scheduled until four, Colonel. You have plenty of time,\" Edward said.\n\n\"Okay,\" Melanie said with a smile. \"I'd like that.\"\n\n\"We're going to have so much fun,\" Anna said. \"You can tell us all the secrets about your brother.\"\n\nNot all of them. Some things would have to wait.\n\nCh. 74\n\nWhen we talked to our steward about getting a wheelchair, she did us one better. Art's people set Melanie up not just with a powered wheelchair but a wheelchair-capable mini-tour bus and a guide! It was waiting for us after the Elements finished tying up stern-to to the dock. Melanie needed a medical check before we went, so I took her to see Doc Margaret while the others got ready for a day on the town.\n\nMargaret told her to rest and use the wheelchair, and her fatigue and soreness would go away over the next week. When Melanie asked WHY she was sore and what happened to the shotgun wound that blew away half her neck, Doc just looked at me. \"I said I'd explain everything later when there is time,\" I tried to deflect.\n\nHave you ever tried to tell a woman that she didn't need to know everything? I was amazed it went this far. I hadn't expected her curiosity to hold out longer than the hot tub, but the Colonel provided a distraction there. \"I want to know NOW,\" Melanie said. \"What happened to me?\"\n\n\"Fine. Reader's Digest version, and you can ask all your questions tonight,\" I said. \"You did get shot, and you would have died if not for what Svetlana had in the backpack.\"\n\n\"Medical supplies?\"\n\n\"No. It was the carcass of a Golden Eagle, but not just ANY eagle. It was the animal form of what we call a Switcher. For millennia, all the way back to the Pleistocene Era, this Eagle attached itself to a human. We call people like them Switchers because they can switch instantly from human to animal form and back.\"\n\nMelanie's mouth dropped open. \"You're delusional. Do you mean werewolves are real? That is fantasy-land stuff!\" She looked between Doc and me, waiting for us to admit the joke, and we didn't.\n\n\"From what we know, the Eagle is immortal, and the human they bond with is a false immortal. They don't age, and they heal rapidly from wounds. The human lives until something damages it beyond its healing powers. When I met the Eagle switcher in Moscow, Ekatarina looked to be in her early twenties, but she gained the Eagle during the Russian Revolution. A man killed Ekatarina a few days ago. He was motivated by greed and the promise of immortality. Like a coward, he took the Eagle by shooting our friend in the back of the head. The Eagle rejected him, killing itself the next day to save my life. You were the first human to touch it, and the Eagle joined with you. When it did, the Eagle healed your neck wound and saved your life.\"\n\nI held my sister's hand, letting the information I'd given her settle in. \"I'm immortal?\"\n\n\"You will not age, and you won't get sick. You are the youngest of our small group, and I am the second youngest. The oldest has been a switcher for five and a half centuries.\"\n\n\"You have an eagle as well? Can I see?\"\n\n\"Each of us has a different animal, all from the same prehistoric era. Your Pleistocene Era Eagle is bigger than the modern birds but looks very similar. I switch into a Cave Lion. The others are a Cave Bear, a Dire Wolf, and a Scimitar Cat.\"\n\nShe could tell I wasn't lying, but she was having a hard time believing me. \"I remember seeing a big lion out of the corner of my eye. I heard him attacking the old guy.\"\n\n\"That was me,\" I said.\n\n\"Can I see my Eagle?\"\n\n\"Not yet. Your body is sore from the first Switch, and I'll have to teach you how to share your mind and body with your animal. I can show you my Lion if that would help.\"\n\n\"Please.\"\n\nI moved to an open spot in the treatment room and pulled off my swimsuit and robe. Doc sat with Melanie on the exam table, holding her just in case. I called my cat forward, and an instant later, a 900-pound Cave Lion stood where I had been. Melanie screamed, but Doc held her in place. I sat on the floor looking at her until she calmed down. \"John?\" I nodded my head, then slowly moved until I was sniffing her legs. \"That tickles,\" she said as my whiskers ran along her skin. With Doc's encouragement, she reached down and touched my head. I let out a low rumble of pleasure as she scratched the skin near my ears. \"You're incredible.\"\n\nI moved back and shifted to my human form, putting on the robe again. \"We call the animal we share our lives with the Gift. The men who kidnapped you wanted both animals, but they are dead, and your Eagle saved your life. You can't tell anyone about it, Melanie. It's too dangerous for our kind to have our nature known.\"\n\nThere was a knock on the door. \"Tour bus leaves in fifteen minutes,\" the steward said.\n\n\"We better get you changed and ready to go,\" I told Melanie as I picked her up. \"Try not to overthink things right now. You're safe and healthy, and that's enough. We'll talk more tonight.\"\n\nI carried her up to our stateroom, and the girls got her dressed and ready while I took a quick shower and changed. I told my mates that she knew about her nature and had seen my Lion, but we would not talk about it until tonight when we were alone again. My sister was smart as hell, and I was sure she'd have a LOT of questions ready for me tonight.\n\nColonel West was waiting at the gangplank, wearing a collared shirt, khaki shorts, and aviator glasses. Melanie smiled when she saw him and reached out, so I handed her off to her friend. He carried her into the waiting tour bus, and they sat in the front next to the wheelchair. \"How are you feeling?\"\n\n\"I'm still sore, but the Doctor said it will get better in the next week. There's no permanent damage.\"\n\nI sat behind the new couple with Svetlana and Anna. Two of Art's security people came in, one sitting in front, the other in the back. Both wore light jackets to cover up their pistols and earpieces for their radios.\n\nWe started the tour with a drive through the Old Town, seeing the architecture and beauty of the city. We stopped at town walls and gates dating to the seventh century AD and checked out the tiny shops and cafes surrounding town squares. We visited the Batana House Museum, dedicated to the traditional flat-bottom wooden fishing boat built for centuries in Rovinj shipyards. We visited the hilltop Church of St. Euphemia, where Hunter carried Melanie up many flights of stairs to see the views from the tower. Lunch was at the La Puntalina Restaurant, overlooking the water. It wasn't out on a terrace; no, this place put tables on every flat section of rock from the Old Town wall down to just above the water's edge. Our table was only a few feet from where the waves crashed against the rock. It was spectacular scenery, the seafood was fresh off the boats and perfectly prepared, and the company was great.\n\nThe food and wine, plus the sea air, was too much for Melanie to overcome. Shortly after lunch, she fell asleep on Hunter's shoulder. We headed back to the Elements, and the girls put her to bed. \"We're going to take a nap with her,\" Anna said.\n\nI walked Hunter to his guest room. I wonder what he would think if he knew his parents were both onboard? I was hoping Melanie's attraction to him was based in part on her Eagle. If they were mates, Hunter would be read into the Switcher group and could see them again.\n\nI wasn't involved in the interviews. I'd nominated two people, and Melanie got the Eagle. My other nominee was Doc Margaret, who would never know her name was in the hat. None of the nominees would know the true purpose of coming here today, but they would leave happy. They would depart with generous checks for their charities or vouchers for free European vacations.\n\nArt was in his office with the blinds drawn. Edward, Duncan, and Olivia were with him, and they were all watching the news. \"RUSSIAN STEEL OLIGARCH FEARED DEAD IN HELICOPTER CRASH,\" the crawl at the bottom of the screen said. A helicopter was circling a debris field in the water, with a dozen boats searching for survivors and evidence. I sat down and listened to the broadcast. \"Russian billionaire Mikhail Abrahmov, his eldest son Vasili, and charter pilot Davor Modric are feared dead after an explosion destroyed their helicopter as it returned to Split, Croatia. The fiery explosion, which occurred just before noon local time, was visible over twenty kilometers away. Police sources confirm that both Mikhail and Vasili's cellphones pinged towers over the island of Vis, and Vasilit sent multiple text messages from the helicopter before the explosion. The pilot's flight plan and charter contract listed both men as passengers. Investigators are treating this as a murder investigation. Sources within the Croatian National Police expect the investigation will take time due to the complexity of the recovery efforts and the depth of the water. The debris field is extensive, and much of the evidence recovered is small.\"\n\nHoly crap! \"Was that Zach?\"\n\nArt nodded, then we went back to the television. The announcers went over to the business desk. \"The death of Mikhail Abrahmov is another blow to his steel empire, already reeling from allegations of corruption. Stock prices are currently trading at twenty-two percent of the closing price from only a week ago. Takeover rumors are flying, with Karpen Investments rumored to be buying up shares.\"\n\nThe announcer interrupted. \"If Mikhail and his sons are dead, who has control of the company now?\"\n\n\"Although details of Mikhail's will are not known, it is expected majority control of the Abrahmov Steel empire will pass to his granddaughter, Alexandra. She is single and attending the University of Moscow, where she is studying Business Management.\"\n\n\"And now could be one of the richest women in Russia. After the break, the weather forecast, and sports.\"\n\nArt muted the news feed. \"Now you see why you had to be seen out in town today, and the Elements had to be far north of Split.\"\n\nIt was a sobering thought. \"Is Zach all right?\"\n\n\"He's with our team, removing all evidence of us from the island. The bomb he used was plenty big; they'll be able to identify the three with DNA, but not enough to determine their true cause of death.\"\n\nI thought about the next move from a business standpoint. \"Will Alexandra be forced to sell her shares to pay inheritance taxes?\"\n\nArt shook his head, no. \"Russia doesn't do that. Alexandra is guaranteed at least half his estate, even if his will directs it elsewhere. I suspect the estate will end up in court for a few months, and then I'll approach her with a takeover offer. Your shares will be worth a fortune next year.\"\n\nGood. I hoped I could trust Art in business matters, but I'd be asking my Dad to protect our interests. How I was going to explain two wives, $25 million in offshore cash, and a large stake in a Russian steel company I did not know yet. \"I should be getting home,\" I said.\n\n\"We are returning to the States on our private plane tomorrow,\" Duncan said. \"I'll get a good run in at the nature preserve tonight and be ready to fly in the morning.\" I was glad I didn't have his Dire Wolf's fear of enclosed spaces.\n\n\"I'd like that,\" I said. I trusted Duncan more than Edward and Art, after all.\n\nThere was some work I had to do; Art's lawyer came in, and I had to sign a mountain of paperwork. Limited power of attorney, financial disclosure statements, equity transfer documents, banking forms, and other stuff. I left with what I needed to access my fortune and advice on how to bring it into the United States with minimal tax consequences. \"If you can bring Melanie up here before dinner, I'll get her set up the same way,\" the lawyer said.\n\n\"Give her another hour to sleep, and then I'll bring her here.\" I left the room for my own. The girls were sleeping on the bed, so I sat in the chair and watched them sleep. My Lion was anxious about the future and wanted out. I set the alarm on my phone for fifty minutes. I pulled off my clothes and shifted, moving over until I was lying on the floor between the door and the bed.\n\nWhen I woke to the alarm, Anna had draped her body across me with her head tucked to my shoulder. I dressed and woke Melanie up, taking her to Art's office while the girls dressed for our last dinner on the superyacht.\n\nWe had a pleasant dinner, and then I made love to the girls all night long.\n\nMelanie had left for the hot tub with Hunter and never returned. She spent the night in her new boyfriend's cabin. I was hopeful that my sister found her mate, but it was still early. She had a tearful goodbye with Hunter before he headed to the airport for his commercial flight home. He had to return to his duties at the Cherry Point Marine Corps Air Station, and she promised to visit soon.\n\nDuncan and Olivia continued to Montana after their pilots had their rest time. Melanie and I flew home to Houston.\n\nWe had a lot of things to discuss.\n\nCh. 75\n\nI'd put a lot into Melanie's head on the flights home, so I wasn't surprised when she went silent halfway through the flight to the airport in Houston. I'd had a lot longer to get used to the idea of a lion, and it was still a shock. Thank God I had the girls to help me through it until I could meet the others.\n\n\"She's going to need coaching from us,\" Svetlana said as she tucked her head into my shoulder. Anna and Melanie had fallen asleep in the executive chairs behind us. Duncan had been kind enough to arrange a charter jet without a flight attendant for us, which allowed us to talk freely during the flight. \"Perhaps we should take Duncan up on his offer?\"\n\nDuncan and Olivia invited us to stay with them on their remote Montana ranch. It would give both of us a safe place to change into our animals. \"It's not a bad idea. I trust them more than Art and Edward, but not completely.\"\n\n\"They were all too willing to use us as pawns,\" my blonde Russian observed. \"Just because it worked out doesn't mean I have to like it. Still, Olivia told me she didn't know. Edward and Art hatched the plan on their own.\"\n\n\"We don't need to make a decision for a few days. I don't think Melanie's Eagle will force herself out, and we need to have a long talk with my family.\" I wasn't looking forward to that. We'd talked about how to handle our parents and brother. Both of us were young enough that the lack of aging could be hidden for a decade or more. I wasn't willing to fake our deaths and take away two of Mom's three children. We also didn't have the will Duncan had to orphan his children and relocate every twenty years.\n\nThe only option left for us was brutal honesty and family loyalty. It was going to take time and effort to keep our secrets. We'd lay it all on the table, and get their help in hiding the truth from the world. In the end, we'd have to establish a trust-based system like Art did.\n\n\"What do you think will shock them more? The two of you being Switchers, or you marrying two knocked-up Russian nurses?\"\n\nGood question. \"Are they smoking-hot Russian nurses?\" She smacked my chest. \"The switchers, because Mom will be thrilled to have grandchildren on the way.\"\n\nThe pilot informed us over the intercom that we were thirty minutes out. \"Perfect,\" Svetlana said. \"That's enough time for a top-off before we meet your parents.\" The armrest was already out of the way as she kissed me deeply. She moved her left hand down my chest to my slacks, pulling the zipper down and reaching in for my bait and tackle.\n\n\"My sister is right behind us,\" I said nervously.\n\n\"Then you better be quiet.\" She leaned over and took my rapidly hardening tool into her warm mouth, licking and sucking it to maximum hardness.\n\nI closed my eyes, my right hand gripping the armrest by the window while my left fingers caressed her hair and neck. She alternated licking around the head to taking it fully into her throat, making little 'gack' sounds every time I penetrated her willing throat. I hoped like hell Melanie couldn't hear them over the aircraft engines; hearing your older brother getting a sloppy blowjob in flight was probably not something she'd appreciate.",
        "Svetlana had become quite good at this, and I was powerless to resist her ministrations a few minutes later. \"I'm close,\" I whispered to my fellatrix. She smiled as she swallowed my shaft, reaching out with her tongue to lick my balls. That was too much for me, and I lifted my hips as I started to shoot my seed deep into her throat.\n\nMy mate backed off, catching the potent elixir in her mouth and swallowing it down. She barely kept up, but none escaped. She cleaned off my cock and sat back up with a smile. \"Tasty good,\" she told me.\n\n\"My turn when we get home,\" Anna said from behind me.\n\n\"I can't believe you guys have to give him blowjobs to stay young and healthy,\" Melanie said. \"Whoever started this switcher thing was OBVIOUSLY a guy.\"\n\nThe girls snorted as I zipped up my pants. \"We think you'll have to mate with a cunning linguist if he wants to stay young,\" Anna replied. \"Of course, Ekatarina never found her mate, so we don't know for sure. You'll have to experiment.\"\n\n\"I have to find him first,\" Melanie said in a huff.\n\nThere was the obvious. \"What about Hunter? You two seemed to get along well.\"\n\n\"He's a great guy, but he's forty-three and widowed. I can't help but think I'm just a vacation fling for him.\"\n\n\"What does your heart say,\" Anna asked.\n\n\"I miss him already.\" She looked out the window at the city; as the sun dipped below the horizon, the lights of the buildings shone brightly. \"Is he my mate?\"\n\n\"He might be, or not,\" I said. \"My feelings for Svetlana, and later Anna, built with time. It wasn't until I opened my mind to my Lion that I felt his acceptance of them as his mates. Becoming one with your Eagle is the most important thing for you now. Only with that relationship can you control your switches and experience what she does.\"\n\n\"I'm nervous,\" she said.\n\n\"You'll be fine,\" I said. \"I wouldn't have nominated you if I didn't think you had the right makeup to handle an Eagle. I'm a little jealous, I'll have you know.\"\n\n\"You? Jealous of ME? You can switch into a nine-hundred damn pound LION!\"\n\n\"Yes, but I can't do it just anywhere; it's too dangerous. Other than being larger than other Golden Eagles, you can pass for a wild bird. As long as you switch out of sight, you can fly around all you want. Flying is MUCH cooler than running around on four legs.\" I had a thought. \"Stay clear of wind farms. I don't want you taken out by a birdshredder.\"\n\n\"Flying will be cool,\" she admitted. \"Still, you get to hunt deer and antelope and tasty things. What do I get? Rabbits, voles, and mice. Yuch.\"\n\nWe didn't talk more as the jet went on final approach. As soon as we taxied off the runway, I turned my phone on. It blew up with messages and emails.\n\nI found one from Marina, my lawyer back in Moscow, and opened it up. \"You need to see this,\" she said. The link was to an English-language Russian news broadcast. \"KILLER LION GUNNED DOWN IN MOSCOW STREETS,\" the crawl read.\n\nHoly crap! \"Listen to this,\" I told everyone as I turned the volume up and hit play on the link.\n\n\"Officers of the Moscow Police, assisted by military units, responded to reports of a lion wandering near a pond at the Mitino Landscape Park. The first officers to arrive discovered and fired upon a large male Liger, or lion/tiger hybrid, when it charged their patrol cars. 'It was scary,' one officer said. 'Pistol bullets just pissed it off. It jumped on our car, then ran off into the park.\"\n\nSvetlana got pale. \"Liger?\"\n\n\"Additional units with rifles were able to surround the dangerous animal, eventually killing it to protect the public. The Police Chief praised his people's response but blasted the unknown owners. 'Letting a large, dangerous animal like this loose in a major city is reckless in the extreme,' he said. 'This animal killed more than a dozen people months ago and could have done the same if we hadn't stopped it in time. We are going to find the owners and put them in jail for a LONG time,' he promised.\"\n\n\"Police hope they can find new evidence in last night's incident that can lead them to the people responsible. For Moscow News Morning, this is Irini Svenchenko.\"\n\nThe girls looked at me with tears in their eyes. \"Was that the same Liger that saved me,\" Melanie asked.\n\n\"I'm sure it was,\" I said with a sigh. \"Art's people bought it because its size, coloring, and short mane looked similar enough to my Cave Lion to be a substitute. Zach must have had it shipped to Russia and let loose in the park.\"\n\n\"Why? They MURDERED that animal!\" Melanie was getting emotional, and I couldn't blame her. I owed the Liger a debt, and this wasn't a reward.\n\nI let out a breath. \"Art did this because it closes the chapter on my sightings in Moscow. No one will believe two different lions are wandering around in the park. The Liger is dead. The police will look for the owners and eventually close that part of the investigation. As smart as Zach is, I bet he's left bread crumbs leading them to a black-market big cat ring or something.\"\n\n\"They could have let it live! Find a place in an animal preserve or something!\"\n\nI looked at my sister with sadness in my eyes. \"That was never going to happen,\" I told her. \"Zach told me a drug dealer used to terrify his enemies by having the Liger rip people apart. He's killed more people than Vasili, many more, and that made him unadoptable. What legitimate shelter could accept a known maneater?\"\n\nMelanie thought about that as we coasted to a stop outside the small terminal of the commuter airport. \"I don't like it.\"\n\n\"I know. There's a lot of things that have happened I don't like. I accept them because the animal's sacrifice clears me as a suspect in the first attacks. I wasn't even on the continent when this happened, and I can prove it. The Liger got to be free for a day, and he helps me stay free. Maybe someday, we can return to Russia again,\" I said.\n\nWe had to stop talking as the engines shut down and the cockpit door opened. \"Welcome to Houston,\" the co-pilot said as he started opening the door.\n\n\"Thanks for a smooth flight,\" I told him. We exited the plane as the limo driver parked near the base of the stairs. Two minutes later, we were on the road home.\n\nCh. 76\n\n\"Are you sure it was the right call not letting Mom and Dad know we were coming?\" The limo had turned off the main highway, and we were only a few miles from home now.\n\n\"If we called, Mom would have been at the airport. You know her interrogation wouldn't stop until she knows it all. Dad would have been too busy with work to come with, so we'd have to tell him the whole story. If we decide to tell Patrick, that's one more time when he comes home from MIT on Christmas break. I'd rather not go through this more times than we have to.\"\n\n\"Mom's going to freak out when we show up. I never told her I was heading to Europe.\" I raised an eyebrow at this confession. \"What? They told me the trip was for a job interview with Karpen Investments! I needed leverage to get Dad to kick up my salary, plus it was on his yacht in the Aegean. How could I turn it down?\"\n\n\"Telling you to pack a swimsuit was my idea,\" Anna said with a grin. \"I looked up the weather forecast for Philadelphia during the trip. Mid-thirties for highs with snow flurries? Sibenik was an easy call.\"\n\n\"I got my assignments done on the flight over, so I don't need to attend classes. My finals start in six days. I have to be back at Wharton the day before,\" Melanie said.\n\nThe privacy glass was up, so we could still talk. \"We should stay with Melanie while she's at school,\" Svetlana said. \"You can continue to train her, and we can keep an eye on her in case her eagle starts to cause problems.\"\n\nI agreed. \"Whether we do it here or up in Montana, I'd like to get her eagle out a few times so she can learn some control. You remember how my Lion was when he got cooped up too long.\"\n\n\"Agreed,\" Anna said.\n\n\"I have a one-bedroom apartment near campus,\" Melanie complained.\n\n\"We'll get a hotel suite,\" I said. \"God knows we can afford it now.\" Dad was paying for her apartment and tuition at the Wharton School, a top business university.\n\nMelanie looked worried about something. \"Can I still go to school with this whole Switcher thing?\"\n\n\"I don't see why not. Few people know you have an Eagle, and the other Switchers I know have lived without detection for decades, even centuries. Once you and your raptor are sharing your mind and you have control over your switching, it should be fine,\" I said. \"The more time you spend with feathers, the better. Regular trips to the country and some flying time should keep your raptor happy.\"\n\nMelanie was looking at the sprawling ranch-style mansion we called home. Most of the home was dark except Dad's office lights and some in the kitchen. The driveway lights came on automatically as the limo stopped near the front entryway, and Consuela burst out the door when she saw us. \"Master John! Mistress Melanie! What a surprise!\" Our head housekeeper and cook was in her fifties, a Mexican grandmother who had been with us my entire life. She greeted us with hugs and kisses. \"And who did you bring with you?\"\n\n\"My fianc\u00e9, Svetlana, and my good friend Anna,\" I told her. I wouldn't tell anyone of our real relationship until I'd confessed to my parents.\n\n\"Welcome, welcome. If you need anything at all, ask me,\" Consuelua said as she embraced them like family. \"This is so exciting! I can't believe John is finally bringing a girl home, and such a beautiful one!\"\n\n\"Which is harder to believe, Consuela? That I brought a girl home, or that she is beautiful?\"\n\nShe didn't get to answer before Mom burst out the door. \"JOHN! MELANIE!\" She ran out and crashed into my arms, hugging me like I was about to fly away or something. I chuckled, thinking I was the wrong one of her children to do that. \"I've been so worried!\"\n\n\"We're fine, Mom. We had to get out of Russia in a hurry, and some friends helped us stay out of sight. I did pick up a passenger on the way home, though.\"\n\n\"I thought you were in school!\" Mom moved over to embrace Melanie.\n\n\"I took some time for an adventure,\" my sister replied.\n\n\"Well, grab your things and come inside! I can't wait to hear about it!\"\n\n\"Mom, it's going to take a while, and Dad needs to be in the discussion. Can you make a big pot of coffee and meet us in his office? I'll help the girls settle in.\" She agreed, and we brought our things into the house. I set all of our luggage inside my room, then gave my mates a quick tour while Consuela went to the kitchen to begin cooking up a storm.\n\nWe ended up at my Dad's office, where Melanie was waiting to knock. \"Come in,\" Dad said. We entered the room, and his eyes lit up as he saw me. \"Son, it's good to have you back,\" Lewis said. Dad looked young for his age, his silver hair still full, and his body still looking like the athlete he'd been. He embraced me before I introduced the girls to him.\n\nMom arrived with the coffee, and we all sat down in his sitting area. \"Is everything over in Russia now?\"\n\n\"If you don't mind, I'd like to start at the beginning. It might take a few hours to get through everything.\"\n\n\"If you think that is best,\" Mom said. The part about the Cave Lion carcass, my time in the Russian hospital, and meeting Svetlana and Anna went smoothly because Mom already knew most of it. After that, things got more interesting.\n\nI told them about how I started noticing my senses getting more acute, plus having strength and speed I'd never had before. Mom didn't know what to say, and Dad was openly dismissive. \"A quick demonstration,\" I said. \"Mom, go over to Dad's bookcase and pull out a random book to a random page.\" I moved to the other side of his large office, putting me more than thirty feet away.\n\nI read the book without difficulty. Then I had my mates lock hands over my right fist, and I lifted them both above my head. Pushing them straight up would have been too easy, so I used only a straight right arm. \"Dad, I can't exercise in a hotel gym anymore because the weights don't challenge me, and the treadmills don't go fast enough. All of this happened in a few weeks after Siberia.\"\n\n\"It's impossible! Humans can't change that way!\"\n\n\"Hold that thought,\" I said. I had Svetlana and Anna adding to the story as I talked about switching into a Cave Lion, then waking up nude on their balcony. \"That picture of the lion in the streets of Moscow months ago? That was me. The Cave Lion wasn't your ordinary carcass. There was something magical about it, and when I touched it? I changed forever.\"\n\nAnna saw my parent's look of disbelief. \"You may as well show them,\" she told me.\n\nI took off my shoes and started stripping down. \"What are you doing,\" Mom exclaimed.\n\n\"I'm showing you what I am,\" I told them. I stepped behind a high-backed chair to hide my nudity, placing my clothing on the back of it. \"Don't scream. I don't need Consuela seeing this, and it's perfectly safe. It's still me, just a different me.\"\n\nJust to be safe, Melanie moved behind her parents on the love seat they shared and put her hands on their shoulders. \"Don't take your eyes off him,\" she whispered.\n\nI got down on my hands and knees, legs sticking out one side and shoulders out the other, then I called forward my Lion. The shift was instantaneous, while the reaction to me took a few seconds. It's like the shock from when you get kicked in the nuts, and your brain takes a moment to realize you're in agony.\n\n\"OH my GOD!\" Mom was staring at me, bug-eyed.\n\nDad pulled Mom behind him. \"What the FUCK?\"\n\nI stretched out, my big paws in front of me as I arched my back. Shaking my head, I looked at my parents through my Lion's eyes. I could scent their fear, and we didn't like it. I laid on my stomach, licking at a paw while I waited for them to calm down. \"Isn't he beautiful,\" Svetlana said as she knelt next to my head. \"So warm and soft.\"\n\nDad was relaxing a bit, seeing I wasn't attacking. \"He's HUGE!\"\n\n\"I think I peed myself,\" Mom said. I raised my nose and sniffed. Yep, just a little.\n\nAnna held out a hand to my Mom. \"Come pet him. He loves getting scratches.\"\n\nShe looked at Dad, then shakily got to her feet. \"He always did want attention.\" Melanie took Dad's hand, and together they came closer. I sniffed their hands as they held out their fists like greeting a strange dog. Deep, satisfying rumbles came from my chest as I soon had five people petting and scratching me at once. They had to accept what I was because there was no other explanation. \"How is this possible?\"\n\nMelanie was the one who explained what we knew of Switchers and how they worked. \"John is one of only five known switchers in the world. He is the only Cave Lion. The people we stayed with in Europe included the other four. There is a Cave Bear, a Dire Wolf, a Scimitar Cat, and a Golden Eagle.\"\n\n\"All of them are species that went extinct over ten thousand years ago, but whatever magic went into the original animals continues to this day,\" Anna said. \"The animal pairs with a single human and remains with it until death. When the person dies, the animal goes into the next human who touches the body.\"\n\nDad figured it out. \"So this carcass you found buried in the permafrost was a Switcher?\" I nodded my big lion head. \"How were you the first to touch it?\"\n\n\"They wore lots of protective gear during excavation, but John took off his glove and touched the fur once they had it in the boat,\" Anna replied. \"He doesn't remember anything after that until he woke up in the Moscow hospital. Later, we found out that the transfer was like an electric shock, and he would have shifted to the Cave Lion right there. It takes time to get the Lion and the Human to share thoughts. We'll never know what happened to the others in the boat.\"\n\nMom looked up in shock. \"You killed those people?\"\n\n\"He doesn't know,\" Svetlana said. \"We think two drowned after bailing out of the boat while the other probably tried fighting him.\"\n\n\"And that lion that killed those gang members and the cop in Moscow? That was John too?\"\n\n\"Those men were trying to kill John and rape us. John protected us. The police officer was shooting at him, so the lion fought back. John wasn't in control, but his cat was acting to protect his mates.\"\n\nMom was having trouble figuring it out. I licked her arm, making her jump. I then bumped her with the top of my head before tucking my nose in by her side. \"This lion is a killer,\" she said as she started to back away.\n\n\"He's a big, fuzzy love-love,\" Anna said as she climbed onto my back and buried her face in my short mane. \"Fierce? Protective? Loving? He's all that and more. He'd die for us.\"\n\nMom had gone to Dad's side, and he pulled her close as he thought about it. Something Svetlana said finally registered. \"Mates? Both of you?\"\n\nSvetlana nodded. \"I loved John from the first time I saw him. Anna felt the same, but I'd gotten him first. It turned out that John and his Lion could love both of us the same way. Switchers have a mate, chosen by their animal side and accepted by the human. Since Lions have a Pride, he's the only Switcher with more than one mate.\"\n\nAnna got off me, and I switched back while they all sat back down. \"I know it's a shock to you. Imagine how I felt when it was happening to me. Until our minds merged, I'd be blacking out and waking up naked on their deck at four in the morning.\" I sat on the couch, this time with Anna and Svetlana holding my hands openly. \"We know this isn't a normal relationship, but I love them both, and we'll make it work.\"\n\nDad looked between us. \"How? Polygamy isn't allowed in Texas!\"\n\n\"I know. Svetlana and I are engaged; she will be my legal and public wife, but Anna will be just as much my wife in private. Anna will be our live-in nanny.\"\n\nNow Mom's eyes got wide. \"Nanny?\"\n\nIt was the girl's chance to shock the parents. \"We're pregnant,\" they said together.\n\nNo one said anything for a moment. My parents were sorting through things, probably realizing that there was no way of talking me out of our triune relationship. Melanie started laughing. \"Good job, bro. That's twice now you've shut them up.\"\n\n\"You'll get your chance,\" I said.\n\nMom finally spoke. \"How?\"\n\nSvetlana blushed. \"The usual way. He's a fantastic lover, by the way. We were both taking contraceptives, so we didn't expect this. There are side effects of being the mate of a Switcher. Our bodies heal incredibly fast, and we remain at our peak age and health. Fertility is one of those conditions.\"\n\n\"We're due next summer,\" Anna added.\n\nMom realized a few things. She had a wedding to plan, and she had her first grandchildren on the way. Tears flowed down her face, and she raced over to hug her future daughters-in-law. \"Are you going to have babies or cubs,\" she asked.\n\n\"Babies. The Switcher doesn't change John's DNA, and he can't pass it down to his children unless he dies and they touch him first.\"\n\nBy the time we got done revealing that the girls and I would live until killed, never aging or getting sick, Mom had a headache. Imagine if I told them HOW the girls stayed young and healthy! \"I don't know if I can take any more tonight,\" she said.\n\n\"We can pick this up in the morning,\" I told them.\n\n\"Good. I need a drink.\" He poured himself a Scotch from the small bar next to the bookshelves. \"How much more is there to go?\" Dad looked like he'd been through the wringer.\n\n\"We're about halfway.\"\n\n\"Jesus Christ. Yeah, give us until after breakfast before you tell us more.\"\n\nWe said goodnight after I assured my Mom I was still her boy. I looked at the girls after they left. \"Well, that went better than I expected.\"\n\n\"It ain't over yet,\" Melanie said. \"Come on. I bet Consuela has some dinner ready for us.\"\n\n\"I hope she made a LOT,\" I said. \"You'll notice you'll be eating more now, and you won't gain weight.\"",
        "Consuela ran out of food shortly before midnight. She vowed not to let that happen at breakfast.\n\nCh. 77\n\nI woke up at four in the morning. I tried to go back to sleep, unsuccessfully, as my sleep schedule is shit from the naps and travel.\n\nThe girls didn't wake as I slid out over Anna to the side of my bed. I grabbed clothes out of my dresser as quietly as I could. By the time I reached my bathroom, Anna had rolled into the warm spot and had an arm over Svetlana's waist.\n\nI took a shower, something we should have done after last night's debauchery. There was something about having wild sex in your parent's house that was deliciously naughty. The girls obliterated any memories I had of other women in my room, and we'd finally fallen asleep about one in the morning in a sticky, sweaty mess. I finished up and got dressed, leaving a note that I was going out for a run.\n\nMy father purchased the Quiet Waters Ranch outside of Danbury, Texas, in 1985. The three hundred and twenty-seven-acre property started as a private hunting and fishing property. Located equally south of Houston and west of Galveston, it wasn't far from the office or the field.\n\nBy the time I was born, an existing 126-acre lake stocked with Florida-strain largemouth bass regularly gave up ten-pound plus lunkers. Four smaller lakes and ponds got added as I grew up, focusing on forage fish, fishing for kids, or duck hunting. It became an executive retreat for his company, with RV hookups and a small cabin allowing overnight stays. Lewis Cantwell closed many a business deal from the back of his bass boat over the years. Technology and growth eventually let him work from home instead of his downtown Houston office, and he built their dream home on this property when I was eight.\n\nI stretched against the pool house and set off into the expansive property. I no longer jogged because I wouldn't break a sweat. Instead, I ran at full speed for miles and miles. What used to take me an hour to run was over in twenty-six minutes, so I did another circuit. The darkness didn't bother me, as my lion vision could see perfectly in the soft moonlight. I passed the pole barns and RV park, then curved left along the ATV trail at the edge of the property. I had to hold my Lion back from taking off after a wild boar; that could happen later. It probably wouldn't be best to return to the house covered in the blood of a fresh kill, and even Consuela might not appreciate the bacon delivery.\n\nWhen I got back, I scented Melanie outside. I found her in the hot tub, staring out over the yard towards the ducks in a nearby pond. \"How was the run?\"\n\n\"Short,\" I said. \"You should test yourself over the next few weeks. Your body will become stronger and faster. If you aren't used to it, you might accidentally damage things.\" I pulled off everything but my nylon shorts and started a quick outdoor shower.\n\n\"I will once I'm not so damn sore,\" she replied as she moved the water jet to another spot on her back. \"I get your strength and speed; I mean, it's a huge damn lion. Anna said my bird is four feet top to bottom and forty or so pounds. How will that work for me?\"\n\nI slid into the hot water across from her. \"Birds have an insane muscle-power-to-weight ratio, and nothing will shock me. Your endurance should be off the charts too. I wish I knew more, but I had little time with Ekatarina before her death.\" I told her Ekatarina's story and the betrayal that ended her life. \"I have to believe she's happy her Eagle found a good host. It sure as hell didn't like being a Todd.\"\n\nShe put her hand over her chest. \"I feel funny,\" she told me.\n\n\"Like what?\"\n\n\"Like something is pushing its way out. PLEASE tell me this isn't some ALIEN-type crap where it tears its way out of my chest.\"\n\n\"I think your Eagle wants to talk. Remember when I taught you to meditate?\" She nodded. \"Close your eyes and focus on your breathing. Clear your mind, and don't be afraid. The Eagle is part of you now. It's your other half, and it won't hurt you.\"\n\nI watched as she did her breathing exercises and her body finally relaxed. This push was good news for her; the faster the two melded minds, the better. She didn't do anything for almost fifteen minutes, then her eyes opened. \"Wow.\"\n\n\"Did you have a nice talk?\"\n\n\"Not so much a talk as a sharing of emotions,\" Melanie said. \"I can sense her excitement at being free again.\"\n\nThe sun was about to rise into a sky painted with reds and yellows. Consuela was up, but she would be busy preparing breakfast. \"Let her out,\" I told her. \"Climb out and take off your suit; you don't want it tangled.\"\n\nHer eyes got wide. \"I can't go naked out here!\"\n\nI laughed. \"Wrap your towel around you. It will fall off when you switch.\" She got out and wrapped herself in a beach towel, tossing her wet suit into the chair. \"The first time hurt because you were scared. It's nothing to be afraid of. Welcome her forward, and see the world through her eyes.\"\n\nMelanie closed her eyes and relaxed. A moment later, the wet towel fell to the patio stone. In her place stood a Golden Eagle, and she was looking at me. \"Nice job,\" I said. \"Relax and get used to her body.\"\n\nI wrapped the towel around my forearm and placed it in front of her; she hopped up, her claws holding on without hurting me. I stood and walked away from the pool to the open grass yard leading down to the ponds. I held my arm high, and she flapped her wings nervously. \"You're a bird. Your Eagle has been doing this for more than ten thousand years. Let her do her thing while you enjoy the ride.\"\n\nMelanie's beak seemed to nod, and her legs pushed off my arm as her wings extended to their nine-foot span. Powerful beats sent her forward, gaining altitude as she passed over the water's edge. She circled me a few times, climbing hundreds of feet in the air.\n\nI heard the patio door open, and Svetlana and Anna came out wearing bright sundresses and sandals. \"Consuela said you and Melanie were in the hot tub,\" Anna said.\n\n\"We were. Melanie and her Eagle had a good talk, and now she's up there.\" They followed my eyes to where the big raptor was soaring above the lake.\n\n\"She's handling this so much better than you did,\" Svetlana said as she wrapped a towel around me. \"Are you sure this is a good idea? I'd hate to see her fly off and get lost.\"\n\n\"I think we'll be fine.\"\n\n\"We'll watch her. You should go change for breakfast.\"\n\nI finished drying off and tossed the wet towel in the hamper. Grabbing my clothes, I headed back and took a quick shower. I changed into shorts, a Hawaiian shirt, and boat shoes. I stopped by Melanie's room and grabbed a dress and underwear for her. By the time I got back out to my mates, Melanie had been gone for twenty minutes. \"Where is she?\"\n\nSvetlana pointed to the south. \"She's been having some fun up there. She's diving, soaring, turning, and I think I even saw a barrel roll a few minutes ago.\"\n\nI held up the dress towards her, then set it over a chair. Melanie must have gotten the idea across to her Eagle because it let out a scream and went into a dive. She pulled out over the lake and flew towards us only a few feet in the air, flaring out and landing on a poolside table. She looked at us and let out a piercing scream, then switched back to her human form and collapsed.\n\nI heard another scream from inside, followed by a thump as something hit the floor. \"Help Melanie,\" I said before I ran to the patio door. Mom was moaning and rubbing the side of her head when I got to her. \"Are you all right?\"\n\n\"Help me up,\" she said. I got her to sit up, then helped her to a chair. \"What was that?\"\n\n\"One of our surprises for this morning, but we hadn't planned for you to find out like this. Melanie is a switcher as well. She is the only surviving Aquila Chrysaetos Simurgh, the Ice-Age era Golden Eagle known to us from fossils found in Crete. Beautiful, wasn't she?\"\n\n\"Amazing,\" Mom said in a daze. When the door opened, she looked up to see Melanie and the girls. \"My baby!\"\n\n\"I'm fine, Mom,\" Melanie said as she raced to her side. \"I'm better than fine.\"\n\n\"How?\" Mom looked from her daughter to her son, both of whom had changed in ways she'd only read in fictional books.\n\n\"I think we need to do this after breakfast,\" I said. \"I'm starving.\"\n\nCh. 78\n\nBreakfast was a relatively quiet affair; we couldn't speak openly with Consuela and the other maid around, and Mom was still getting over the shock of finding out her daughter turned into an Eagle. Consuela made my favorite breakfast burritos, and I showed the girls how to dip them in fresh Texas salsa. Svetlana took a bite, and her eyes got wide. She swallowed it quickly, then drank half a glass of milk. \"That stuff is HOT!\"\n\n\"No, this is the hot stuff,\" I said as I pointed out the green salsa. \"I figured you could work up to it.\"\n\n\"Where is the mild,\" Anna asked after tasting a tiny bit.\n\n\"Wimp,\" I told her as I passed a different bowl over.\n\n\"John Jacob Cantwell, you quit teasing the girls,\" Mom said. She used my full name, so she wasn't kidding. The next step was the wooden spoon.\n\n\"But Mom! They made me eat all the Russian foods, so it's only fair I introduce them to proper Tex-Mex!\"\n\n\"Don't take any crap from him,\" Mom told my mates. \"He pranked his sisters all the time. It takes some time to get used to the genuinely hot foods, and he knows it.\"\n\n\"Busted,\" Melanie said as she reached for another burrito. We went back to eating, and I know Mom and Dad were shocked by the amount of food their children were putting away. \"There's nothing like Consuela's cooking,\" Melanie said when asked about it.\n\nWe finished up and followed my father into his study. \"I doubt anything will shock me after last night,\" he said as he sat with Mom.\n\n\"Stand by,\" Mom whispered.\n\nMelanie went to sit on Dad's other side, the three of them squeezing into the love seat. It turned out to be a good call; as I went through my tales about Russia, she helped keep Dad calmed down. Even Mom, who had been there with me, was shocked at what I'd been going through without her. \"You could have told me!\"\n\n\"The Russian security services had me under constant surveillance,\" I said. \"I had the girls, and we managed.\"\n\n\"I had no idea how close I was to losing you,\" Dad said. \"I always believed there was no evidence, and they would clear you.\"\n\n\"Eventually, I was, but there was more behind my treatment than a search for justice.\" That would have to wait as I started to explain how the relationships developed between me, my lion, and my two mates. \"It's more than love; it's a deep attachment I share with my Cave Lion with them.\"\n\nMom was crying, soon rushing over and hugging Anna. We'd confessed to our triune relationship and dual pregnancies last night, but hearing about her son's love for the girls had her verklempt. She was happy to hear about Svetlana's parents and their acceptance of it. She'd get the marriage ceremony here in Texas since we couldn't go back to Russia and the legal status. Anna was an orphan and would be live as a concubine, not a wife. \"It's not fair,\" she said as she wiped her tears. \"You should get a special day as well.\"\n\n\"It's all right,\" Anna said as she hugged her back. \"I have John and Lana, and the rest doesn't matter.\"\n\n\"Still, I want to do something special for you after the wedding.\" She reached across me to touch Svetlana's hand. \"I'd like to speak to your parents. I'm sure your Mom isn't happy about a wedding halfway around the world, and we have a lot of planning to do together. I assume you want to get married in the next month or two?\"\n\nI could see the gears going around. Mom knew we'd want to get married quickly before Svetlana's pregnancy became obvious. Svetlana agreed. \"We can see if my parents, or at least Mom, can visit us here. Could we do things over the phone for a few weeks so we can get settled?\"\n\n\"The sooner, the better. Do you have any idea how much work goes into a wedding? Nadezna and I will need to spend a lot of time with the girls getting everything done.\"\n\n\"I don't think it will be THAT bad,\" Svetlana replied. \"I don't want a huge production of a wedding. The press is still after us, plus all the people who still think John is a killer. It wasn't long ago that we were hiding out in the woods from everyone. I'd prefer something small and private, with family and close friends. Perhaps we could do it here? Maybe in the back?\"\n\nMom's head was spinning with ideas. It provided a good distraction while I continued with the story, culminating in the court hearing and the dinner with Sergei and Nadezna in Moscow. \"After dinner, we returned to our room to find a woman waiting for us. It was Ekatarina, the Winter Palace Eagle.\" Mom's eyes bugged out as I gave them the short version of her story. \"Ekatarina was the first Switcher we met, but the surveillance on us spotted her. My lawyer, Marina, told us of the danger and got us out of town before the police could get to us.\"\n\n\"I thought the police had nothing on you,\" Dad said. \"The Judge released you!\"\n\n\"The Lead Investigator was also working for someone else. Mikhail Abrahmov's grandmother was there in the Winter Palace when Ekatarina got her Eagle. He knows about switchers, and he suspected I was one. He was willing to kill me to get it.\"\n\n\"Abrahmov's dead,\" Dad said. \"I read about it a few days ago. His helicopter exploded in midair.\"\n\n\"He was dying of cancer, Dad. When a Switcher comes into you, your body heals. Keep that in mind as I tell you what happened in Europe.\" I told them about our flight to Sardinia, then our welcome aboard the Elements. \"Art Karpen is the Cave Bear switcher, Dad. He's been alive for five and a half centuries and still looks my age.\"\n\nMelanie giggled about ten seconds later. \"Third time we've shut them up,\" she said.\n\n\"Art Karpen? Art Karpen of Karpen Investments? The recluse who never leaves his boat?\"\n\n\"That's him. The whole 'hiding from the world' thing is a ruse; it's a way to keep the world from noticing he never ages. His senior executives and crew are all trusted family members, either his sons, daughters, or children of previous ones over the years. He's got hundreds of relatives working directly for him or working in key real-world positions and reporting back to him. Judges, politicians, law enforcement, he's got tentacles in it all. Marina is Art's great-granddaughter. Art arranged for Mom to hire her because he suspected I was a Switcher.\"\n\nI kept the tale going, with the other Switchers arriving and some of the things I learned about our kind from them. I'd talked with the girls about names; we only used Duncan's and Edward's first names since they weren't famous. There were stories about Art in the news, so we didn't hide his identity.\n\nMelanie had to calm her parents down when we told the story of the mercenary attack and again with Todd and his ten-million-dollar betrayal. \"Your Gift is worth that much?\"\n\n\"Entire expeditions launched and died seeking the Fountain of Youth,\" I said. \"The Gift is all that plus immortality. I can't get sick, I heal from injuries quickly, and I never age.\"\n\nThe implication hit Mom. \"What about the girls? What good is immortality if you watch them grow old and die?\"\n\nAnna took this one. \"The true mate of a Switcher gains some of his Gift,\" she said. \"As long as we are with John, we'll stay at peak health and never age. Our children, our friends, and our family will not. They will grow old and die while we don't.\"\n\n\"You'll watch your babies die?\"\n\n\"It's the way it works,\" I said. \"Duncan fakes their deaths when his children are old enough, leaving them an inheritance. They disappear and start living under new identities somewhere far away, repeating the cycle every twenty-five years or so. Art hides from the world, and only trusted family members know his secret.\"\n\n\"What did Edward and Ekatarina do?\"\n\n\"They didn't find mates. Edward is still looking for his.\" I continued the story with my near-death at the hands of Mikhail's son. \"The Eagle didn't like Todd and wanted another human.\"\n\n\"Who?\"\n\n\"We decided as a group to put up candidates and decide who would get Eagle Gift,\" I replied.\n\nMelanie held her father's hand tightly for this part. \"That's why I flew off to Europe. John nominated me, and Art's people told me it was an internship opportunity. I didn't expect I'd be kidnapped shortly after arriving in Split, Croatia.\"\n\nDad was pissed, but Mom calmed him down. \"She's fine now, dear. Let them tell the story.\" I told them about our plan to draw Mikhail to the island and how Mikhail taking Melanie flipped that around. It was tense at the part about Melanie held at gunpoint, and I could see the white knuckles when I described the showdown with Mikhail and his son.\n\n\"John and the Liger killed Vasili, but he killed me first,\" Melanie said. \"The shotgun blast took out half my throat. I could feel my blood pouring out and the blackness coming for me. I couldn't even say goodbye.\"\n\n\"We had the Eagle carcass, and I shoved her hand into the feathers. Instantly, she switched into the Eagle, and the Gift healed her from the fatal wound. She's a Switcher now. This morning, she had her first flight.\"\n\nMom reached her hand over. \"And scared the crap out of Mom when she landed and switched back!\"\n\n\"I did,\" Melanie said with a laugh. \"Being an Eagle, it's indescribable. I felt so free up there!\"\n\n\"Like I feel when I'm running through the woods,\" I agreed.\n\n\"Or we feel when we're riding on his lion's back,\" Svetlana said.\n\nI finished up the morning by talking about what happened after Mikhail died. \"It turned out that Art and Edward were more devious than we thought. Mikhail knew Melanie was coming from the communications he intercepted. It was Edward, at Art's direction, that went to Mikhail with a deal. For fifty million cash and a billion in stock in his company, Edward promised to deliver the Cave Lion switcher to him.\"\n\n\"HE GAVE YOU UP?\" Dad was pissed.\n\n\"He did, but the plan was to use the Liger as a diversion and kill Mikhail when he landed. Mikhail was too smart to fall for the trap, and Melanie was leverage to get Svetlana and Anna to the island with the Eagle carcass. He planned to take my Lion, then give the Eagle to his only remaining son.\"\n\nSvetlana continued. \"We used his phone to direct Edward's payoff, then Art's people cleaned it all up by sending Mikhail and Vasili to the bottom of the Adriatic. The Liger went to Moscow to close the loop on John's appearances there.\"\n\nDad thought about it for a while. \"Who has control of the money now? And what about Mikhail's company?\"\n\n\"Melanie and I each got twenty-five million; the money is in Swiss numbered accounts. The stocks went into my name; I now own almost ten percent of the company since Art was battering the stock price down before the deal. It's worth six hundred some million now, as the stock declined big-time after Mikhail's death. Art and the others are buying up the depressed stock now, and we should have enough to take control after Mikhail's estate transfers.\"\n\nDad thought about it for a moment. \"This could have significant tax consequences for you.\"\n\n\"I know, Dad. I need your help in this, plus I'll need a good lawyer.\"\n\n\"Or five,\" he told me. \"You have to protect yourself. A man like Art Karpen doesn't give money away like this for no reason. There will be a lot of scrutiny of that steel company, and he's put you right in the crosshairs of it. AGAIN!\"\n\nI hadn't thought of it that way, but he was right. Melanie and I were the only ones exposed from Mikhail's side; Art and the others were attempting a hostile takeover. There was nothing illegal about pouncing on a wounded oligarchy. \"Maybe more than five.\"\n\n\"Realizing that Art's interests are not your own is the first step,\" Dad said. \"I know you haven't cared about business, but you need to learn now. Your stake in that company is worth more than my entire company if you manage it well. It also could collapse into bankruptcy, leaving you nothing while Art picks over the carcass. I don't trust Art Karpen as far as I can throw him, John. You have to protect your interests and your family above any relationship with him.\"",
        "\"I will, but I have to be careful. Karpen Investments could crush us both like insects if we cross them,\" I said. There wasn't much left to shock them with. We all agreed that Melanie needed to go back to school. She would be inheriting Dad's company eventually and needed the education. Dad would sign a lease on a larger apartment near campus with better security. It would be big enough for the girls and me to stay while doing switcher training. Melanie would pay him back after the lawyers figured out the best way to bring the money stateside.\n\n\"I'd like to see your Eagle unless you two have more bombshells to set off,\" Dad said.\n\n\"Maybe after dinner,\" Melanie agreed. \"We all have a lot to do.\"\n\nMom practically jumped out of her seat. \"It's late afternoon in Moscow, so we still have time to talk to Svetlana's parents! Come on, girls!\" I didn't even get a chance to kiss them before she pulled them out of the room.\n\n\"I'm going to search for apartments,\" Melanie said.\n\n\"And I'll get the financial documents and come back here.\" It had gone better than I expected, and I had my parents solidly behind me. It was time to plan OUR lives instead of reacting to what others wanted.\n\nCh. 79\n\n\"Nervous?\"\n\nI looked over at my younger brother Patrick as he took his place next to me in his tuxedo. \"Why would I be?\"\n\n\"I don't know, bro. Two hundred people looking at you and your pregnant girlfriend inside with her father?\"\n\nI just grinned. \"I can't wait. Someday, you'll know the feeling.\" I looked across the small podium in our backyard to where Anna stood in her bridesmaid dress and smiled apologetically. We'd kept the wedding party small, with just a Best Man and Maid of Honor. Anna deserved a day like this but would never get it. Anna smiled as the organist stopped, then everyone stood as the Bridal March started.\n\nI started to grin. \"Look, I paid good money for Svetlana. She's mine now.\" It was a fun Russian tradition for the groom to 'rescue' his bride on their wedding day. This morning, I'd gone to the hotel where she was staying with her parents. They had 'hidden' Svetlana in a closet in the bedroom, with luggage and furniture piled in front of it to keep me away. I had to buy my bride's freedom with a bottle of champagne, a big box of chocolate, tickets to the Houston Ballet, and cash for spending money. As we left, her friends showered us with seeds, coins, and candies for luck.\n\nThere were a few other traditions at play today. Sergei and Nadezna's closest friends were the \u0441\u0442\u0430\u0440\u0435\u0439\u0448\u0438\u043d\u044b (elders) for the ceremony. Her parents arranged for a Korovai, the traditional Ukrainian wedding bread, to be baked and brought over. A Korovai wasn't the kind of loaf you'd buy at the market; it was intricately decorated and lovingly crafted. Superstition held that the Korovai bakers passed along the fate of their marriages through the bread. Therefore, only married women and their children participate. The baking starts with prayer, uses holy water, and is a labor of love. The elders brought the Korovai in and would hold it during the ceremony. It was beautiful; two birds on the top symbolizing us, the rest decorated with flowers, pine cones, grapes, and vines.\n\nThe back doors opened, and Svetlana stepped out with Sergei into the bright Houston sunshine. My bride looked radiant. Her blonde hair pulled back in complicated braiding, a veil below a silver tiara obscuring her face. The sleeveless white wedding gown clung to her athletic curves, offering hints as to the treasures I knew were beneath it. The train followed behind her, sliding over the white material leading out to the altar.\n\nThe guests gazing at her knew what I did; I was the luckiest man in the universe. I saw the love in her eyes as she reached us, and her father placed her hand in mine. \"\u043f\u043e\u0437\u0430\u0431\u043e\u0442\u044c\u0441\u044f \u043e \u043c\u043e\u0435\u043c \u0440\u0435\u0431\u0435\u043d\u043a\u0435, (Take care of my baby),\" Sergei said in Russian.\n\n\"\u043e\u043d\u0430 \u043c\u043e\u0435 \u0441\u043e\u043a\u0440\u043e\u0432\u0438\u0449\u0435, (She is my treasure),\" I replied. My father-in-law shook my hand and took his seat in front next to Nadezna. The two of us turned to face the Russian Orthodox priest. The priest was Svetlana's spiritual guide from baptism through high school. Svetlana kept in touch after his transfer to another parish. He flew here with her parents and a dozen friends of my girls from school and work. My pastor stood next to him; he would be the 'official' officiant under Texas law and share the ceremonial duties.\n\nI didn't even notice the crowd, and the service itself was a blur. We repeated the vows, exchanged rings, and got crowned in the traditional Russian Orthodox manner. We finally kissed for the first time as husband and wife. The crowd cheered, and I saw how thrilled Anna was for us. We turned to face the guests as she took my arm.\n\nBoth Moms were crying, and our fathers were not unaffected. Melanie sat next to my Mom, with Colonel West in his Marine dress blues by her side. She was crying and leaning into his side as we passed. Melanie had been nervous about him when we returned to school, but he was smitten. Neither cared about the age difference between them, and they talked every night during our visit. Mom and Dad met him last night, and he'd met whatever tests they had for him. I was happy for them and hopeful he was her mate.\n\nI smiled at the other guests as we slowly returned to the house. The other Switchers were here, all sitting on the bride's side. I'd convinced my childhood and college friends to sit on Svetlana's side as well, and a few of the single ones had found seats next to the hot Russian nurses who came over. My side was older, with friends and business associates of my parents dominating the crowd.\n\nThe wedding party went to Dad's office to sign the paperwork, then the girls and I retired to the sitting room for more pictures. While we did that, caterers finished setting up the pool area for the party to follow.\n\nThe reception was in the Russian tradition as well. Svetlana's cousin, Todor, was the \"Tamada,\" what we called the Master of Ceremonies. Todor set up a receiving line at the entrance to the big pool/patio area. Patrick was first, with me next, then Svetlana. Anna and our parents followed. Anna used a table behind us for gifts, including our Russian friends' traditional salt and bread.\n\nAs people made it to the tables, wine bottles got opened, and glasses charged. Todor announced the first toast, explaining the tradition to the Americans as he went. He held the glass up. \"\u0434\u043b\u044f \u043c\u043e\u043b\u043e\u0434\u043e\u0436\u0435\u043d\u043e\u0432, (For the newlyweds)!\"\n\nThe guests shouted back the toast, then drank. One of my college buddies, obviously prompted by the cute Russian brunette at his side, called back, \"\u0413\u043e\u0440\u044c\u043a\u0438\u0439 (bitter)!\"\n\n\"Oh, the wine is bitter? There's only one way to sweeten it up! The longest kiss!\"\n\nSvetlana grinned as I took her into my arms and kissed her deeply. The longer the kiss, the sweeter the wine, and I didn't mind a bit as the crowd counted the seconds. At just over two minutes into some serious tonsil hockey, Todor tapped my shoulder. \"Come on, we're getting hungry,\" he whispered.\n\nI ended the kiss, and another gave a toast. This time, another guest complained the wine was bitter, so we did it again. It took six tries, but eventually, we got it right.\n\nMom was surprised at Svetlana's decisions on the reception menu, but it was inspired. She'd chosen authentic Texas barbecue from our favorite local restaurant, and the smell of the food cooking had been a distraction all day. \"I'm not a formal dinner person,\" Svetlana explained. \"I love the flavors of your food, and I want my guests to share in that.\"\n\nInstead of formal seating, there were four buffet lines set up. We piled our plates with brisket, chicken, ribs, cornbread, potato wedges, and coleslaw before taking our spots at the head table. It didn't take long before we were tucking into the food, and the first clinking of glasses sounded. You see, Americans have traditions too! I leaned over, licked the bit of barbecue sauce from Svetlana's lips, then kissed her deeply as the crowd cheered.\n\nTodor kept the party going during the meal, interspersing jokes and poems among multiple toasts. Anna told funny stories about us in Russia, and Patrick gave his Best Man speech. Many bottles of wine were gone by the time we got to my bridal toast, but it all went off as planned.\n\nSvetlana was cleaning her fingers on a wet towel before patting the food belly she'd created. \"That was great,\" she said as she relaxed.\n\n\"\u043e\u0447\u0435\u043d\u044c \u0445\u043e\u0440\u043e\u0448\u0430\u044f \u0435\u0434\u0430, (Very good food),\" her father agreed. Caterers cleared the dinner tables as we headed for the wedding cake. The three-tiered cake had a white and raspberry cake base, a banana-custard-flavored middle layer, and an authentic Russian honey cake on top. We made the traditional first cuts, fed each other a taste without incident, and turned it over to the professionals to distribute.\n\n\"You didn't shove it in her face!\" Patrick sounded disappointed.\n\n\"Not all traditions are good ones,\" I countered.\n\nAs the night went on, Todor kept the fun going. Russian wedding receptions were full of games and contests, the most dangerous being 'find your bride.' I was blindfolded and sent along a line of women who might offer a hand, leg, or body part for me to touch, and I was to find Svetlana or face punishment. My nose made this easy, and she gasped when I pulled her into my body for a kiss as the crowd cheered.\n\nThe dancing and partying went on into the night. Our guests needed to start heading home, so we made the round of goodbyes. On the way out, we cut the Korovai bread and ate some, while the elders would make sure all the guests got a piece as they departed. Anna went with us to our room, and we changed into our getaway clothes. One last goodbye to our parents, and we headed to the limo for the airport.\n\nAnna was crying as we pulled away from my parent's home. \"I'm sorry,\" I said as I pulled her into my lap.\n\n\"The ceremony was beautiful, and I had the BEST time,\" Anna replied. \"It was everything I could have dreamed of.\"\n\n\"And I can't give that to you,\" I said as I tucked their heads into my chest. \"We'll make it up to you, somehow.\"\n\n\"Anything,\" Svetlana added.\n\n\"I want him first tonight,\" she finally said. \"I want to make love to him and feel him fill me with his seed.\" She was wiggling on my leg, and I was responding. I was only human.\n\n\"We've got twenty minutes to the airport,\" I replied. Anna didn't need any other permission; she slipped off my lap, and the girls removed my pants and shirt in seconds. Anna pulled her skirt up and straddled me in reverse, letting my big cock slide deep inside her velvet sleeve. \"Oh, GOD! You feel so good,\" I told her.\n\nAnna closed her eyes and started to move her hips, and she stifled a scream when she felt a tongue on her clit. Svetlana was leaning over, teasing her sister-wife as she started lifting herself and dropping back down. We gave her three orgasms in ten minutes, the last one ending with me pounding up into her and depositing a full load. \"I get my reward for sharing now,\" Svetlana said as I laid Anna across the seat. She dove in and cleaned the gooey load, gulping down the magic jizz while giving Anna one last orgasm.\n\nI was so lucky the girls didn't get jealous of each other.\n\nWe cleaned up just in time. The private jet was waiting for us, and the copilot took our bags as we boarded. We were heading to a friend's place for two weeks, a place that was a lot warmer than our other offer in Montana. Our host joined us a few minutes later, and we were off.\n\nWe flew to Los Angeles, and since the jet had a bedroom, Svetlana got her first lovemaking session as a married woman. We then flew first-class to Sydney before catching a smaller plane to Tasmania. A car was waiting at the airport for us, and a young woman got out as we taxied to a stop. Edward was off the plane first, and the beautiful girl ran into his arms. \"John, Svetlana, and Anna, may I introduce you to Alexandra Abrahmov.\"\n\nI froze as what he said registered. \"Alexandra? As in Mikhail's granddaughter and heir?\"\n\nThe two smiled widely. \"Yes,\" Edward said. \"Alexandra is my mate, and she has a few things to tell you.\"\n\nCh. 80\n\nIt took me a moment to recover from this. \"Your mate? How?\"\n\n\"We have a long drive to my place so we can talk on the way,\" Edward said. The copilot transferred our luggage to the back of his Land Rover, then the three of us got in the back with me in the middle. Edward held the door open for Alexandra to get in, then went around to the driver's side. As we drove off, he turned to look at us quickly. \"Our story will take a while, but I want to ask you two a few things first. Why are you here?\"\n\nI shrugged. \"Our honeymoon? The girls liked the beaches in Italy, but we wanted to get away from Europe and all the press. Tasmania is about as far away as we can get.\"\n\nHe nodded at that but kept pressing. \"You know I'm happy to host, but I was shocked when you asked to visit. I thought we were friends, but you had reasons to be hesitant. I did set you up in Croatia.\"\n\nI hadn't forgotten that. Edward had been the one to contact Mikhail and tell him of my location on the uninhabited island, plus he leaked the word about the Eagle carcass. \"You played your part well, Edward. We'd always intended to lure Mikhail there, but no one expected him to kidnap Melanie. Art's people let that information leak out, and Mikhail exploited it. Thanks to you, we're rich now. It all turned out for the better.\" I looked in the front seat. \"Except for Alexandra. I'm sorry, this talk is insensitive. The money we had would have been yours.\"\n\n\"I'm fully aware of what you did with my grandfather's company,\" the Russian beauty said. She was tall and thin, her straight raven-black hair going midway down her back. She had high cheekbones, perfect white teeth, and a classic face with subtle made up. Her clothes were designer, expensive and flattering. In her early twenties, she was a woman of power and money. She outshone her mate, who dressed more like a working man. \"I'm still dealing with the mess you left me.\"\n\n\"We'll get back to that,\" Edward said. \"You three have had some time to process everything that went on since Russia. What things have you been unable to understand or still bother you?\"\n\n\"I'd rather find out what you know, Edward.\"\n\n\"Humor me. I need to see if your suspicions matched mine.\"\n\nFine. The girls and I had talked about a few things. \"I guess we could start with Senior Investigator Kaprisov. When we left the hotel in the middle of the night, Marina said it was because he had a judge willing to put me back in jail. That never happened; the Russian government never tried to stop me or extradite me from Italy, Croatia, or the United States. I'm wondering if it was all part of Art's ruse to get me on his yacht.\"\n\n\"You weren't the only one. Art called me as soon as the judge in Russia freed you; he said he was bringing a new one of us in, and we needed to meet you. Duncan got a call about the same time; I asked him. For both of us, it took a while to arrange travel to Europe.\"\n\nThat brought up a question. \"That's the second thing that doesn't make sense. I know this was the first time all the Switchers had gathered together, but why? Isn't it risky to be in one place, especially if the authorities may be watching?\" I squeezed the hands of my mates. \"I know we all got together again at my wedding, but that was as private as I could make it. Even then, Art's people were all around.\"\n\n\"Why do you think Art gathered us if it was so dangerous?\"\n\n\"He said he wanted to judge if I was worthy of being a Switcher, and if not, he'd have killed me. Why tell me that? He already had been following me, he had Marina in my inner circle, and Ekatarina had talked to us at the hotel. You'd think he had enough information to go on, but that's not what he said. It would have been safer for me to meet other Switchers individually over a few months. Gathering us made us vulnerable to attack.\"\n\nEdward nodded as he navigated the roads. \"What about the attack made you suspicious?\"\n\n\"Zach was right; you don't just throw something like that together in a day. Mikhail had to hire mercenaries, equip them, train them, and moved them into place. It could take weeks, but I'd only been on the yacht for a short time.\"\n\n\"Art is a liar and a cheat,\" Alexandra finally said. \"You were brought together so Art could keep you away from Mikhail. Art set you up. He might STILL be setting you up.\"\n\nThis threat got Svetlana's attention. \"How do you know?\"\n\n\"I know because I was Grandfather's eyes and ears in Moscow. He was obsessed with the Palace Eagle, more so as his cancer advanced. He saw it as his only chance to beat cancer.\" She paused and looked out the window at the ocean. \"Art Karpen contacted my father, not the other way around.\"\n\n\"When was this?\"\n\n\"My grandfather's people were following up on information about the Cave Lion sightings in Moscow. Mikhail knew that one prehistoric eagle still lived as a Switcher, so why not another animal? There was no other explanation for Siberia and Moscow. My grandfather's big plan was to have you moved to a remote facility in Siberia. He would then arrange for your death and the transfer of the Cave Lion. Grandfather was very close to making this happen, and then you were released and disappeared. He wasn't happy about that. Soon after, he got a call from Art Karpen.\"\n\n\"What did Art say?\"\n\n\"Art offered to deliver you up in exchange for a forty-percent stake in his steel company.\"\n\nHoly shit! I did some quick math; Abrahmov's company had assets of over twenty-eight billion, so a forty-percent stake would be worth something north of twelve billion dollars. \"Could your grandfather even keep his business that way?\"\n\n\"Probably not,\" Alexandra replied. \"It was more than half of his holdings, the rest owned by his fellow investors. It would have made Art Karpen the most significant single shareholder. He could easily take control of the company my grandfather built over his lifetime.\"\n\n\"I can't imagine your grandfather took that well,\" Anna said.\n\n\"He was FURIOUS,\" Alexandra replied. \"Grandfather told Art he was out of his mind; if he couldn't have the Cave Lion, he'd find the Eagle. Art laughed and said Mikhail would never find Ekatarina because every Switcher in the world was under his control. If Mikhail didn't take the deal, he'd move on. 'There are plenty of dying rich people who would gladly pay my price. What good is your money when you are dead?' Art told him to call back when he was ready to deal. My Grandfather is a stubborn man, and he wasn't going to let Art Karpen take his company. We started making other plans.\"\n\n\"Like what,\" I said.\n\n\"Finding out everything we could about Karpen Investments,\" she replied. \"We knew he was cruising the Med in his superyacht. We'd flipped some family members on the Elements with offers of cash, and we were monitoring his electronic communications. Grandfather knew his planned movements, but he didn't know about the size of his defense force or the arms locker he hid onboard. He figured the guys would kill everyone, and pirates would take the blame for the attack. It was a simple, direct, and much cheaper solution to his problem. All he had to do was wait until you or Ekatarina were on board. You and the girls disappeared from Moscow and showed up in Italy. Our agents saw you boarding the helicopter and flying out. Art was kind enough to provide the proof of your Switcher nature.\"\n\n\"What proof?\"\n\n\"Drone video from the beach the next day, showing you shifting into your Cave Lion and hunting. Art edited it so we couldn't tell who the bear or cat shifter was, but Grandfather knew there were at least three switchers on the yacht. He ordered his men to attack and kill you all. My grandfather, father, and uncle would board later and start touching dead people until all three of them were Switchers.\"",
        "I felt like Don Corleone in 'The Godfather' when he realized it had been Barzini all along. The betrayal hurt because he'd done it and THEN played like he was my friend and protector. His first instinct was to use me to further his interests, not to help me out. The girls could tell I was upset as I processed the information. Anna was the one who finally broke me out of my anger. \"I can't believe I'm a sister-wife to a man worth BILLIONS,\" she said with a giggle.\n\n\"Nobody else can have him,\" Svetlana replied.\n\n\"I'll never see that money. My girls are priceless, though.\" They got me calmed down again, and we were able to continue talking. \"What happened with Ekatarina?\"\n\n\"We think Todd went rogue on that one,\" Edward said. \"With the attack a failure, he had to know we'd find the mole.\"\n\nI nodded. \"And the island?\"\n\n\"When Edward called, it sounded like the perfect opportunity. Grandfather didn't blink at the cost; he'd lost more money than that already fighting off Art's attacks. He was mad about my Uncle's death at your hands. Taking the Eagle and the Lion was worth any cost.\"\n\nI just shook my head. \"And now they are all dead, and you're left picking up the pieces. Then you find out you're a billion dollars short, and some guy in Tasmania is now a major stakeholder in YOUR company.\"\n\nAlexandra nodded. \"I was pissed off. In my mind, Edward had double-crossed my father and failed to deliver. It took me some time to push the estate through and assert control of the company, plus I'm still dealing with Karpen Investments and their takeover effort. I needed to rally other stakeholders to stick it out with me, which meant I had to see Edward. If he voted his shares with Art, I'd be hard-pressed to hold the Chief Executive position. I got on a plane and headed for Tasmania.\"\n\n\"What were you going to do?\"\n\n\"Kill him for his betrayal,\" she said before looking at him dreamily. \"Then we met, and it was love at first sight. That night I tried to fuck him to death, but the man's immortal.\"\n\nWe all laughed at that comment. \"And now you are the immortal mate of the Scimitar Cat.\"\n\n\"I know,\" she said as she shot a look at the girls. \"Am I going to have to share him like you two?\"\n\n\"I have no idea,\" I said. \"I'm kind of new at this.\"\n\nEdward moved the discussion back on topic. \"That's why I'm glad you are here. I'm voting my shares with my mate; you control another ten percent. If you vote with us, Alexandra can keep control of her family business no matter what Art does.\"\n\n\"But if I do?\"\n\n\"Art will see that as us betraying him personally. He may come after the two of us, and you know what kind of reach he has.\"\n\n\"Fuck.\" I leaned my head back and closed my eyes, trying to see a way out of this mess. \"No wonder you didn't bring Alexandra to the wedding.\"\n\n\"If Art finds out, he'll figure out what's been going on. I'm keeping our relationship secret as long as I can.\"\n\nThe secret wouldn't last forever, and I'd have to vote my stock sometime. I needed to talk to Dad before I did anything else.\n\nI looked out at the rocky shoreline, where Australian Fur Seals lay sunning themselves. I suddenly felt like a seal swimming among Great White Sharks. They had those here in the Great Southern Ocean.\n\nBig ones."
    ],
    "authorname": "partwolf",
    "tags": [
        "werewolf",
        "werecat",
        "shifter",
        "mates",
        "action"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/panthera-spelaea-ch-71-80"
}