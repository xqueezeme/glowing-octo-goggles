{
    "title": "Three Square Meals Ch. 062",
    "pages": [
        "The entire crew was in the Medical Bay, except for Faye, who wanted to be there, but was dutifully monitoring the long-range scans as they approached the Dragon March. They had gathered around the cryostasis pod that contained the ninja who'd attacked them, and the girls' faces were bleak as they stared at the captive woman. Her face was a shattered ruin, the sallow skin bruised and battered from nearly being beaten to death by Alyssa.\n\n\"What happened to her?\" Calara asked, wide-eyed at seeing the terrible beating the assassin had taken.\n\nJohn glanced at her as he said, \"She maimed you and killed Jade. Alyssa wasn't going to let that go unpunished.\"\n\n\"He made me stop,\" Alyssa said in a cold voice, not taking her piercing gaze off the assassin as she put her arm around Calara. \"If I'd had more time, I'd have been a lot more creative.\"\n\nThey went silent at her chilling words, staring at the smashed face of their prisoner. Eventually Dana looked across the cryo-pod at Rachel, and asked quietly, \"What's up with her skin? She looks awful.\"\n\nThe tawny-haired brunette was busy looking at a holographical panel projected from the cryostasis pod, which listed detailed biometrics of the person in stasis. \"Hmm?\" she hummed absent-mindedly, absorbed as she was in the data. Blinking, she looked up, and said, \"Oh sorry! I got a bit distracted there, she's a fascinating subject.\"\n\n\"This 'fascinating subject' nearly killed us all, babes,\" Dana gently reminded the brunette. The redhead nodded towards the ninja, and repeating her question, she asked, \"Why does her skin look so fucking hideous?\"\n\nRachel gave them all an apologetic smile, then replied, \"She's suffering from a severe vitamin D deficiency due to a total lack of sun exposure, compounded by what seems to be an extreme form of cryo-induced frostbite.\"\n\n\"Frostbite?\" John asked in confusion. \"I've been in cryostasis before, I thought it was perfectly safe?\"\n\nRachel turned to look at the woman in the cryo-pod, and replied, \"Normal use of a cryo-pod is safe, but for the first few seconds when cryostasis is induced, the temperature is lowered considerably to put a person into hibernation.\" She was lost in thought for a moment before she continued, \"The only way you could inflict that kind of damage to someone's skin, is if they were put into cryostasis repeatedly, without allowing enough time for them to recover. When I say repeatedly, I'm talking about hundreds of times.\"\n\n\"I thought there were safety guidelines to prevent that?\" John asked. \"When I went into cryo, the medics insisted we wait a few days before going under again.\"\n\nRachel gazed at the immobilised assassin, and said, \"She seems to have ignored that advice.\" \n\nTurning back to the holographic panel, she pressed a button, causing a projected image of the assassin's body to appear in front of them. The three-dimensional representation was small at first, appearing as an image twelve inches across. Rachel swiped her finger across a sliding bar on the panel, and the magnification increased, until a lifesize image of the cyborg appeared before them. With the press of a button, the image revealed further results of the scan, depicting the woman without clothing. Her pallid skin looked extremely unhealthy and was crisscrossed by a patchwork of neat, raised lines.\n\n\"What are all those lines across her body?\" Jade asked softly, staring at the deadly ninja who had killed her with a single sword thrust to the heart.\n\n\"Surgical scars,\" Rachel replied with a brief glance at the Nymph, \"She's had dozens of cybernetic implants installed.\"\n\nTurning to the panel again, she pressed another button, and the scan results went deeper, revealing the implants hidden inside the woman's flesh. Her whole body was interlaced with cybernetics, appearing as cold blue shapes in the orange hued image.\n\n\"Do you know what all that shit does?\" Dana asked, staring at the cybernetics in fascination.\n\n\"Some of it,\" Rachel replied, nodding confidently. \"I'd have to conduct a physical examination of her body to be able to ascertain the purpose of some of the other devices.\"\n\n\"She replaced her eyes,\" Calara blurted out, looking sickened. \n\nRachel glanced at the Latina, then nodded as she replied, \"Yes, she's equipped with two bionic eyes, although I'm not sure what enhancements they possess without examining them. She also has subdermal armour plating, synthetic kidneys, data jacks in her wrists, filters in her nose, an adrenal booster which is linked to all her major muscle groups, an artifi-.\"\n\nJohn interrupted her listing of the implants, and said, \"When I fought her, she made a weird humming noise, then moved incredibly fast. I've never seen anyone move that quickly before.\"\n\n\"That sounds like the adrenal booster kicking in. It's linked to a reflex booster, which would enhance the effect,\" Rachel confirmed for him. When he simply nodded in return, she continued, \"She also has an artificial lung, deactivatable pain receptors, and a synth-.\"\n\n\"What's that in her head?\" Calara asked, interrupting Rachel again, and looking ill at the sight of the cold metal object inside the assassin's skull.\n\nRachel gazed at the holographic image, and replied, \"I was just getting to that. Her brain is part-synthetic. The artificial part also seems to have some kind of data chip port installed.\"\n\nThe Latina looked appalled, and asked, \"Why would anyone do that?\"\n\nIrillith had been listening attentively, and she spoke up, \"If the data chip being inserted contains detailed enough information on say... mathematics for example, you would instantly become a genius mathematician. The level of expertise depends on the skill of the programmer who coded the chip, along with the content of the chip itself, but you could suddenly become an expert on whatever subject you liked.\"\n\n\"She used several completely different fighting styles against me, and was extremely adept with all them,\" John replied, recalling the one-sided fight. He turned to look at Irillith, and added perceptively, \"It sounds like you've heard of this kind of tech before.\"\n\nShe nodded, and replied, \"There was a brief flurry of interest in this kind of cybernetic enhancement amongst the Maliri, but it was too open to abuse. Matriarchs were sending crazed cyborgs after each other, so to stop it getting completely out of hand, the practice was outlawed a few centuries ago.\"\n\n\"So this might be some black-market Maliri tech?\" he asked her curiously.\n\n\"I suspect so, yes,\" Irillith agreed.\n\nJohn's eyes narrowed as he thought about the Master Assassin who had fled from the interrogation room, and he asked, \"Could we trace the tech back to the sellers, and maybe find out more about the buyer?\"\n\nIrillith thought about it for a moment, and replied, \"The Maliri black market is extremely secretive, but it's definitely a possibility.\" She gave him a meaningful look, and added, \"Especially with the new abilities at my disposal.\"\n\n\"So we've got a backup option if we don't get anywhere with an interrogation,\" he said with grim satisfaction. Looking at Rachel, he asked, \"Was that everything, Doctor?\"\n\n\"Aside from ceramic compound fingernails which can be extended into claws, yes that's everything,\" she replied, glancing at the holographic display to double-check.\n\nJohn turned to Alyssa next, and he was about to speak, when she just looked at him and nodded.\n\n\"Yeah, I'll break into her mind. It's bound to be much more effective than trying to convince her to talk,\" she said confidently.\n\nHe reached out to take her hand, and simply said, \"Good luck.\"\n\nAlyssa closed her eyes and focused her willpower inwards, embracing the tugging sensation in her chest. She stepped lightly out of her body, and her transition to her spirit-form seemed almost effortless, her ability to project herself getting stronger every time. Glancing around her, she saw her companions seemingly frozen solid, their eyes all fixed on her physical form. Turning to look at her own body, she saw the snaking astral cord that linked her to it, the silvery cable anchoring her securely to the material plane. Athena was nowhere to be seen, and Alyssa sighed with frustration at not being able to talk to her directly.\n\nFacing the mysterious black clad assailant who was currently slumbering in the cryo-pod, she stalked over to her, leaning in so she could take a closer look through the clear window. The battered ninja was completely unaware of Alyssa's malevolent gaze, but she would have been deathly afraid if she could have seen her eyes, which were as hard as flint. Reaching out with her hands, those ghostly fingers passed through the cryo-pod and touched the assassin's head, probing for any kind of mental defences.\n\nWhat Alyssa found there was quite disconcerting; the assassin's mind seemed to be shielded by a kind of wire mesh. It wasn't an active defence as such, but the unnatural state of the cyborg's mind made psychic intrusion difficult. Taking a big breath, Alyssa concentrated harder, driving her will into that unyielding barrier. It bent and twisted under that ferocious pressure until it seemed to abruptly rip away, letting her into her quarry's mind.\n\nThe assassins mind-space opened up before her, but Alyssa had no time to get her bearings, as a horrifying wail of anguish assaulted her senses. She grabbed at her ears, trying to block out the hideous tortured cry, but the sound was deafening, pounding into her from everywhere at once. Stumbling to her knees, she groaned in pain, desperately trying to dampen the drawn out scream of abject misery.\n\nWith a sudden start, Alyssa remembered hearing this sound before, moments before the bomb had been detonated in the Officers' Lounge. The memory enraged her, especially the thought of her beautiful Calara lying twisted and maimed on the floor. Holding tight to that fury, she used it to strengthen her resolve, and she staggered to her feet in an impressive display of willpower. She felt an instinctive urge to hold out her hands defensively, although to do so would have meant unclasping her hands from her ears.\n\nTrusting her instincts, she yanked her hands away from her head, grimacing as the terrifying scream intensified. She thrust out her hands, fingers splayed wide open, and a white nimbus of light enveloped her fingertips. It spread out into a clear dome of pink-hued hexagons, individual tiles appearing one after the other to build the shield. The sound began to quieten as the wall rapidly formed around her, and the moment the final hexagon slotted into place, the terrible lament was silenced.\n\nBreathing a huge sigh of relief, Alyssa straightened and looked about her, but she was startled to see that her surroundings were nothing like the other minds she'd visited before. She recalled how she had probed Edraele's mind after Progenitor-John had wiped out her personality, finding that it had been made up of thousands of individual memories, but they were missing the emotional pathways that linked them all together. Lynette Devereux's mind had shown her what a person's memory-map should normally look like, with memories linked by colour coded pathways, showing the emotions a person had been feeling when experiencing that event. \n\nThe memories in both women's minds had been insubstantial clouds of thought, centred on a key, clearly defined memory, and surrounded by somewhat hazy recollections of peripheral events. At first glance, these memories seemed to be grouped haphazardly into random clusters, but the collections actually became meaningful upon closer study. Individual memories were arranged onto branches, like those of a tree, grouped together by locations, or sometimes by the participants involved. The pathways linking them all had been made up of various pastel shades, with red for anger, green for jealousy, yellow for fear; the spectrum of colours and corresponding emotions was subtle and extensive.\n\nHowever, the assassin's mind was something entirely different. It was cold, ugly and unnatural, with row after row of neat, orderly rectangles stretching off into the distance, linked together by black, emotionless pathways. Each hard-edged memory showed a precise playback of events, as if watching a high resolution video clip. Every rectangle was neatly tagged with a datestamp and filename, but the datestamps must have been incorrect, as they listed dates going back over sixty years. The filenames sounded most unpleasant, with listings such as: Senator Gareth Richmond - torture and execution, Doctor Adam Marven - assassination, and Janet Collins - poisoning. The list of horrible crimes numbered in the hundreds.\n\nStopping in front of one of the memory monoliths, she saw that it was labelled '12 October 2732, Sergeant Alex Dearing - murder'. The video footage started to play back, and Alyssa watched enthralled as the events from forty-seven years ago began to unfold before her eyes.\n\n***\n\nThe recording began with the assassin waking up, and climbing out of some kind of mist-shrouded sarcophagus. She received a briefing from an Asian man, who called her 'Shinatobe', which detailed the target and location of the strike. The assassin then exited a small shuttle and found herself on a rooftop landing pad overlooking a cityscape in the dead of night. She rappelled down the side of the thirty-storey building, then launched a grappling hook to swing onto the roof of a four-story building that formed part of the high street. \n\nMoving swiftly and silently along the darkened rooftops, the assassin rapidly closed in on her target. According to the briefing details, Sergeant Dearing was on shore leave, and visiting a strip club with some friends from his unit. Crouching on the rooftop of the apartment building overlooking the pink neon entrance to 'Areola 51', Shinatobe waited patiently for an hour, scanning the clientele leaving the club until her facial recognition software suddenly identified her target. He was drunk, and staggered along the street, heading back to his hotel which her HUD informed her was three blocks away.\n\nThis was a secluded, seedy part of town, so the assassin dropped to the floor in an alleyway, then activated her adrenal booster in the shadows. She darted across the road in a blur, avoiding detection by moving so incredibly fast, then charged at her target, closing the distance just as he drew level with an alleyway. She drew her swords from their sheaths as she sprinted towards him, and stabbed him in the back with both blades, one plunging through his heart, while the other neatly severed his windpipe. As he began to topple over with a barely audible gurgle, Shinatobe sheathed her swords, then hauled his corpse into the alley, dragging him behind a dumpster.\n\nThe video of the killing ended just as quickly as it had begun. It finished with the assassin rolling over her victim, so that she could get a final snapshot of his shocked face. That grisly image froze in place, confirming the kill for her client.\n\n***\n\nShaking her head with revulsion, Alyssa looked up the rows, and saw that all the memory monoliths were playing through the last moments of each of the assassin's victims. Alyssa began to wander through the neatly catalogued but dreadfully morbid showcase of Shinatobe's prey, until she suddenly caught a brief flash of movement out of the corner of her eye. Whirling in place, she narrowed her eyes as she searched for whoever or whatever had drawn her attention. Another dark flicker drew her focus again, but some way off in the distance this time, so she sprinted after it, weaving through the rectangular memories. The figure was smaller than her, and flitted tantalisingly out of her direct line of sight, offering only brief glimpses as she pursued it.\n\nThe fleeing shadow darted this way and that, leading her through the deep maze of gruesome memory monoliths. It was like running through a graveyard, but with every tombstone showing the terrible way the owner had met their fate. After what seemed like forever, Alyssa burst out of the macabre rows of ghastly trophies.\n\nShe was surprised to see that beyond the plain of rigidly arranged memory blocks, the assassin's mind seemed to be normal. At least inasmuch as the memories here were the same cloud shaped formations that she had observed in Edraele and Lynette Devereux's minds. She caught another glimpse of her elusive guide off to her right, and she whipped her head around to look at the dark figure before it could flit away once more.\n\nTo her surprise, the figure stopped for moment, revealing itself to be a young, pale, black-haired woman. They made eye-contact for a split second, and then the girl was off again, darting away through the memories. Alyssa ran after her, determined to find out what this mysterious spirit was up to. She was led on a merry dance through the memories, weaving in and out of nebulous memory clouds, as they plunged ever deeper into the assassin's subconscious. Running around a cluster of memories, Alyssa came to an abrupt halt, as she nearly ran into the black-haired girl standing next to a cloudy memory. \n\nThe girl was Asian, with long black hair, and a gaunt, grief-stricken face. She looked up at the shield surrounding Alyssa, and held out her hands, opening them as one would mime opening a book. It took a moment for Alyssa to realise what she was asking, and a shiver ran down her spine at the thought of being exposed to the haunting wail of torment once more. She stared at the tragic figure before her, and something within her felt like she could trust the apparition.\n\nHolding her breath in anticipation, she glanced at her shield, and carefully pried out one of the Hexagons. There was no otherworldly cry of anguish this time, only the quiet of the grave. She dispelled the rest of the shield, and was met with nothing but deathly silence, which was even more eerie than the screams that had echoed through this mind beforehand.\n\nTurning towards the memory, the shade gestured towards it with a hand, her thin fingers pointing insistently. The path to this collection of thoughts was a warm orange that indicated it was a happy memory. Alyssa stared at it curiously, and it began to expand, swirling around her, until the memory began to unfold.\n\n***\n\nThe edges to the memory were vague and indistinct, but Alyssa could feel how happy the girl was as she rushed to get ready. The young woman grabbed her backpack from the bed in her well-furnished room, and rushed downstairs. After studying late into the night, she'd overslept that morning, and now she was going to be late.\n\n\"Goodbye, Sakura! Let me know if you meet any cute boys,\" the middle-aged woman standing in the homely kitchen teased her, as the girl ran past the kitchen door.\n\nSakura was in a hurry to get to University, but she stopped in the hallway, and backtracked so she could poke her head around the door. An attractive, raven-haired Asian woman with kind eyes and a warm smile, was looking up at her from where she sat at the kitchen table, drinking a steaming cup of coffee.\n\nSakura laughed as she said, \"Don't let Dad hear you say that, Mom! I'll get a lecture about how much the fees are costing him, and that I'm not there to be 'chasing boys about'.\" The last she said in a gruff baritone that made her mother smile.\n\n\"You're far too beautiful to be doing the chasing, my little angel,\" her mother said lovingly. She stood up, and walked over to her daughter, wrapping her in her arms, as she said, \"We're both very proud of you, Sakura. You show those professors how bright you are!\"\n\n\"Love you, Mom, but I'm gonna be late!\" Sakura protested, but she leaned in and kissed her mother on her cheek before she rushed out into the hallway.\n\nShe ran down the hall, turning right into the east wing of the house. There was a bowl on a tall table by the door to the garage, and she scooped up the keys for her hoverbike from the various sets that had been thrown in there. Flinging open the door to the garage exuberantly, she winced as it crashed into the wall. ",
        "\"Sakura! Are you wrecking my garage again?\" her father called to her from his study. She heard his desk-chair rolling back, and he appeared in the door, sitting on his chair with a stern look on his face.\n\n\"No, Daddy,\" she replied, rolling her eyes. \n\nShe was never going to make it to her first lecture this morning, and Professor Stevens didn't take kindly to students skipping classes. Rushing over to her father, she leaned over to give him a quick hug, and a peck on the cheek. Sakura ran back to the door into the garage, glancing over her shoulder at her father before diving through. His stern expression had softened, and he was smiling at her proudly as he watched her leave.\n\n\"Love you, Dad!\" she called out to him, as she disappeared into the garage.\n\nHer red and white Matsubara 1200 was her pride and joy, a present from her parents when she'd been accepted to Devonshire University to study Law. The prestigious bastion of higher learning was renowned for its legal department, producing some of the finest legal minds in the Terran Federation. She stuck her hand in the pocket of her leather jacket, fumbled for the remote for a second, then pressed the button to open the garage door. \n\nAs the door began to smoothly lift into the roof, she strode past her mother's luxury saloon, and her father's sporty red supercar, or the 'mid-life crisis mobile' as her mother called it. She jumped onto the back of the Matsubara, then started the engine of her hoverbike, and grinned as it came to life with a throaty rumble. The anti-grav cyclics began to whir as they came online, and Sakura picked up the helmet from the back of the bike and pulled it on. She revved the throttle and released the brake, launching the hoverbike out of the garage. \n\nThere was a big steel-grey hovervan parked just down the street from her parents' house, and she swung around it so that she could centre herself in the road. Resisting the urge to whoop out loud from the thrill of the ferocious acceleration, she soared up into the practically empty skylane, and raced for Elizabethtown in southern New Eden. \n\nIt was an absolutely beautiful morning, with only a few white fluffy clouds in the beautiful clear blue sky. The sun was warm and bright, and Sakura felt gloriously happy to be alive. \n\n***\n\nAlyssa felt the memory fading around her, and she felt a little disorientated at first, until it had completely receded. Turning to look at the ghostly apparition in confusion, she was surprised to see that it had moved on, and was now standing by another memory further up the branches of this cluster. The path that led there was a murky brown, which Alyssa knew meant disgust and horror.\n\nShe approached the next memory warily, and stopped in front of it, before turning to look at the emaciated wraith. The shade had an agonised expression on her face as she turned to point at the next memory, and the look of abject misery made Alyssa's heart ache. She knew this was going to be bad, and she braced herself for what the next memory had in store for the cheerful young woman named Sakura.\n\n***\n\nThe cloudy memory swept out, enveloping Alyssa in its ephemeral grasp, and she felt herself becoming deeply immersed in it, just like the last one.\n\nSakura shot through the air on the back of her hoverbike, hunching down low to go even faster. She glanced in her wing-mirror before pulling out to overtake a slow moving freight-hauler, and was surprised to see the big steel-grey hovervan again in her mirror. It was some distance behind her, but it must have been in a real hurry to get somewhere if it was going as fast as she was! She smiled to herself, and wondered if the driver of the van was worried about upsetting Professor Stevens as well.\n\nTearing along the deserted skylane, she had a beautiful view over the lush green fields and forests of New Eden. She knew she was lucky to be living on such a gorgeous planet, and the classification of 'Paradise World' was well earned. Her father was certainly wealthy enough to live here, being a successful Executive at Lombardo Enterprises, one of the mega-corporations that made up the Fortune 500. Still, compared to the obscenely wealthy billionaires that lived here, her father was a small fish in a big pond.\n\nA trail of smoke up ahead drew her attention, and she narrowed her eyes to see if she could make out what had happened. Accidents with hover vehicles were fortunately very rare, but blowing a couple of anti-grav cyclics at the same time could mean a very nasty crash, especially considering the sky-lanes started at two-hundred-feet above ground.\n\nShe slowed down as she drew closer, eventually getting a clearer look at the source of all the smoke, and Sakura breathed a huge sigh of relief. The greasy black smoke wasn't coming from the shattered remnants of a crashed vehicle. Instead, smoke was pouring from the engine of an otherwise intact blue hovercar, and a man was standing beside it waving at her frantically.\n\nFiguring she had no chance of making Professor Stevens' lecture now anyway, she decelerated further, and gently descended on her bike. It didn't take her long to drop down to ground level, and she landed a few feet away from the stranded man and his smoking hovercar.\n\n\"Hey, are you alright?\" Sakura asked him with a worried frown. She pulled off her helmet and shook her hair free.\n\nThe man was in his early thirties with a neatly trimmed goatee, and he looked greatly relieved to see her. He smiled as he said, \"My engine ruptured its coolant system I think, but I've lost all power, so I can't call it in to my breakdown service.\" He looked around him at the lush green fields as far as the eye could see, and added, \"It's probably miles to the nearest home, so thanks for stopping, I didn't fancy walking for help!\"\n\nSakura laughed, and said, \"Don't worry, I can call it in for you. What's the number for your breakdown company?\"\n\n\"I've got it here in my wallet,\" he said as he walked over to her, reaching into his coat. \n\nThe sound of anti-grav cyclics from a descending vehicle made Sakura turn around curiously, and she saw the same steel-grey hovervan gliding down to join them. \"That was nice of them to stop,\" she said over her shoulder to the man. \"They looked like they were in a hurry.\"\n\n\"Bzzzttt,\" went the stun-prod as the man jabbed her in the back with it.\n\nShe toppled off her bike, falling in a boneless heap on the grass. Being shocked by the stun-prod had hurt like hell, but Sakura was still conscious as she lay on the ground. She could see her assailant now, standing over her with the debilitating weapon in his hand, the metal prongs still sparking with electricity. Once the shock had worn off, she tried to crawl away, but her body wasn't responding to her desperate efforts to move.\n\nFootsteps approached from behind her, and she heard the man she'd tried to help say, \"Nice timing. Let's get her in the van.\"\n\nA feeling of cold dread settled on her chest as she realised this had all been planned, and she had fallen right into their trap. She tried to wriggle free as two of the men scooped her up in their arms, but all she could manage was a weak moan, as they carefully carried her to the big grey van. A sliding door panel was swung open, and the two men placed her on the floor as the other one produced a pair of hand restraints that he locked into place around her wrists.\n\n\"Fuck, she's gorgeous...\" one of the men muttered, his creepy voice filled with longing, as his hand lingered on her calf and slid slowly up her leg.\n\n\"Don't get any dumb ideas,\" the first man snapped. \"He picked her out specifically, and we're getting paid a lot of money for this.\"\n\nSakura wasn't sure if she should be relieved or even more worried when she heard that. The van door slid closed, shutting out the bright morning sun, and casting her into darkness. A few seconds later she heard anti-grav cyclics kicking in, and the van lifted off the ground.\n\nThe third man spoke up for the first time, a sinister catch to his voice as he said, \"If we're careful with her, and clean her up afterwards, he'd never know.\"\n\n\"I've never fucked an Oriental before,\" the creepy man said eagerly. \"Come on! She's smoking hot, you can't pass this up!\"\n\nThe man she'd tried to help mulled it over for a while, and Sakura lay there, her heart gripped with fear as he decided her fate. \n\n\"Alright, but I go first,\" he finally decided, and she could hear the unsavoury hunger in his voice.\n\nShe wanted to scream in horror, but the stun-prod had done its work, and all she could do was lie helplessly on the floor.\n\n\"Fine by me,\" the sinister man agreed. \"I want to break in that tight little ass...\"\n\nA single tear welled up in Sakura's right eye, then rolled down her cheek as the creepy man began tugging down her biker leathers.\n\n***\n\nAlyssa forcibly yanked herself out of the memory with a powerful surge of willpower. She knew that terrible memory wasn't going to end anytime soon, and while her heart was full of pity for the poor girl, she had no desire to experience a gang rape. It was all a little too close for comfort with her own sordid experiences back on Karron.\n\nWhen the cloudy memory had receded, she looked around for Sakura's ghost, but she'd already moved further up the branch and was standing by another memory. The path to this memory was stained with a deep purple, which Alyssa somehow knew represented a soul-crushing feeling of grief and loss. \n\nIgnoring the memory for a moment, Alyssa turned towards the spirit, and said quietly, \"What happened to you was truly awful, and I'm so sorry that you experienced that. It still doesn't excuse what you did to us, or all the terrible murders you've committed.\"\n\nThe ethereal guide stared at her for a long moment, then turned towards the memory, pointing towards it with a gaunt finger. Alyssa studied the deathly pale figure, but it made no effort to look back at her again; instead Sakura's spirit was transfixed by the next memory, staring at it intently.\n\nWith a sigh, Alyssa girded herself, and stepped up to the next memory, expecting some more horrific recollections. The swirling memory reached out to embrace her, and events began to play back as Alyssa watched, feeling everything that the girl had felt.\n\n***\n\nSakura groaned in pain, unable to move because of the restraints, and she shivered on the cold, hard surface she was lying on. The gang rape in the van hadn't been the only time her captors had abused her, and twice more she'd been subjected to the three men's attention. Her body felt sore, completely unused to being taken like that in either way, and she whimpered dejectedly as she tried to shut out the horrible memories.\n\nThe abuse had stopped earlier that morning, and they'd cleaned her up in the shower, preparing her for the handover to their client. She overheard one of the men saying that they'd nearly arrived at the transfer point, and that they'd be handing her over later that afternoon, which was how she found herself strapped to this cold metal table.\n\nShe'd been left there for nearly an hour, and she was terrified at the thought of what might await her now. One of the men had said that this 'client' had picked her out specifically, and after what she'd just been through, she could only imagine one reason why that would be. Tears rolled down her cheeks as she began to cry, devastated by the horrid fate that had befallen her. She'd always imagined she would meet a kind, handsome boy, and her first time would be loving and gentle, just as her best friend Tina had described her first experience. Not in the back of a van, gang raped by depraved criminals.\n\nA sudden noise on the other side of the room stopped her muted sobs, and new pangs of fear clutched at her heart as she realised the door had opened. Light footsteps echoed around the room, bringing her captor ever closer. Her fear mounted with every step, and she craned her neck, desperate to see the man who'd ordered her capture. There were spotlights in the room, and they made it difficult to make out the features of the man standing at her side. \n\nShe had no trouble hearing him though as he murmured, \"Just as I'd always imagined. Absolutely perfect...\"\n\nSummoning every scrap of courage she had, Sakura managed to gasp, \"Please let me go! I promise I won't say anything!\"\n\nThe man didn't reply for a long moment, but he glided around the table, leaning in close towards her face and blocking out the spotlight behind him. \"You won't be going anywhere, Shinatobe, you are mine now,\" he said in a chilling voice, which was made all the more sinister by the undercurrent of excitement.\n\n\"My name's Sakura, not Shinatobe!\" she blurted out. \"Please, I'll do anything you want, just let me go back home!\"\n\nHe leaned closer, and she could see him clearly now. The man was Asian like her, and handsome, with his clean shaven face and short black hair. She stared into his brown eyes, searching for a spark of humanity that she could connect with, looking for some hint of compassion she could reach out to. \n\nAlthough his eyes were a lovely rich dark-brown, now that he was close enough for her to get a good look at his face, she shuddered as she gazed at those uncaring orbs. There was no mercy to be found in his unwavering gaze, or any other sign of humanity for that matter. She had to look away, no longer able to bear that dreadful sight any longer.\n\n\"You are home...\" he whispered to her, before standing up straight and snapping his fingers. \n\nTwo orderlies moved around the table, and began to push it out of the room, suddenly alerting Sakura to the fact that she was on a wheeled table of some kind. Strapped down to the table as she was, the girl could only stare up at the ceiling lights as they flashed by overhead, her mind filled with an ominous sense of foreboding. \n\nHer nerves were fraught when they finally wheeled her into another room, and she grew deathly afraid when she realised she was in some kind of operating theatre. Twisting her head to one side, she saw rows of sinister metal operating instruments on a table, and sitting on a sterilised surgical tray, two human eyeballs stared back at her. \n\nShe only stopped screaming in terror when the doctor gave her a powerful sedative to knock her out.\n\n***\n\nAlyssa jerked out of the memory, shuddering with fear as the emotions she'd experienced slowly washed off her. Her heart was hammering in her chest, and she bent over as she drew several deep breaths, before she remembered she was in the Astral Plane, and the physical needs of her body didn't apply here. Straightening up, she calmed herself, then looked around for her ghostly companion. The spirit of Sakura had moved on, and was standing by one final memory, the pathway to which was a cold, bleak, black. \n\nAlyssa walked over to the final memory, and staring at the drawn, grief-stricken figure who was standing beside it. Her tone was full of sympathy as she simply said, \"I'm sorry.\"\n\nThe mournful spectre nodded once, then pointed at the last memory on this branch. Shivering involuntarily, Alyssa turned to the final memory, and didn't shrink back as it slowly enveloped her.\n\n***\n\nSakura let out a low groan as the shadowy haze from the anaesthetic faded from her. Her entire body was a mask of pain, and she wanted to scream out in agony, but even drawing the breath to do so would have been too hard. She opened her eyes and then immediately regretted it, blinking in the harsh glare from the spotlights. \n\n\"Rise, Shinatobe,\" a cold voice said, and she immediately recognised it as belonging to her captor.\n\nAll she wanted to do was curl up in a ball and die, but she found herself sitting up, then turning to dangle her legs over the edge of the hospital bed she was sitting on. Sakura was drowsy and distracted by the pain, but she knew that something was dreadfully wrong when she hopped off the bed without consciously willing her body to do so.\n\n\"Very good. Now come to me,\" the man said, and she felt herself gliding over to him.\n\nSakura felt a chilling surge of horror threaten to overwhelm her as she realised she was no longer in control of her body. She actively railed against following his command now, desperately trying to turn around and flee from the man. However it made no difference, and she found herself marching over to him obediently, rushing to follow his commands like a lemming eager to throw itself off a cliff.\n\n\"All the augmentations for phase one have been installed,\" a man in surgical scrubs announced clinically, as he walked over to join her captor.\n\nHer captor smiled wickedly, and said, \"We must begin phase two immediately. I don't wish to waste any time!\"\n\nThe doctor looked like he was going to object, but he nodded deferentially instead, and said, \"Hai, Idaina-sha.\"\n\nHer captor greeted her with a gloating smile that didn't reach his eyes, and said, \"My name is Amatsu Mikaboshi, but you may address me as Idaina-sha, which means 'Great One', my glorious Shinatobe.\"\n\nSakura wanted to fervently object to the name he insisted on calling her, but she was unable to do anything except stand there mutely and stare at him. It therefore came as a terrible shock when she heard herself murmur with respect, \"Hai, Idaina-sha.\"\n\n\"Come and look at your magnificent new physique,\" he said, encouraging her to join him with an insistent wave of his right hand.\n\nShe padded towards him, and he stepped to the side, revealing a long mirror behind him. What she saw there chilled her to the bone, and she began to scream, or at least she tried to, but her mind was now a powerless captive in a prison of flesh and metal. \n\n***\n\nAlyssa lurched out of the dream, and snapped herself out of Sakura's mind, too disturbed by what she'd seen to stay in that horrifying place a moment longer. She rushed back to her body, slamming her ethereal form back into her physical one. It was a blessed relief to be back in her own body again, and she drew in a big lungful of wonderfully fresh air before opening her eyes. \n\n\"What happened?!\" John asked in alarm, seeing the look of shock on Alyssa's face.\n\nThe blonde girl stared at the assassin for a long moment, before her horrified gaze finally settled on John. \"We have to help her...\" she pleaded with him, her voice throbbing with emotion.\n\nAfter the initial surprise had worn off, Dana snorted in anger, \"You've got to be fucking kidding! That thing broke my ankle, hurt Rachel and Irillith, sliced up John, blew up Calara's hand, and -killed- Jade! No fucking chance!\"\n\nLetting out a troubled sigh, Alyssa replied, \"She didn't choose any of this, it was all done to her. Sakura's a victim of the Master Assassin, and she's been suffering for decades.\"\n\nJohn put his arm around her, comforting the unsettled young woman, and said quietly, \"You better tell us who this Sakura is, and what you found out in there.\"\n\nAlyssa nodded, then began to recount everything she'd learned from the tragic woman's mind, giving them every horrific detail. By the time she was done, her audience was as badly shaken as she was.\n\n\"She's been enslaved, just like I was,\" Jade said softly, her expression full of compassion.\n\nIrillith nodded, and said, \"This all sounds exactly like the Maliri tech I mentioned earlier. I'm sure you can see why creating unquestioning cyborg assassins appealed to unscrupulous Matriarchs.\"\n\nCalara was standing there quietly, and she murmured, \"I thought I'd had it bad being captured by those pirates, but the things this girl has endured... How can people be so cruel?\"\n\nDana had unfolded her defiantly crossed arms, and she sighed before looking at John, then said in a sombre voice, \"Forget what I said earlier. I agree with Alyssa, I think we should help her.\"\n\nJohn locked eyes with Rachel, and asked, \"Can we help her? Are you able to get all that shit out of her body?\"",
        "The brunette broke eye contact with him, and looked up at the scan image, which highlighted the dozens of cybernetics interwoven within the cyborg's flesh. She studied the holograph intently, her mind working through the complicated and invasive surgical procedures she needed to complete to remove each cybernetic implant. Eventually she met his gaze once more and nodded.\n\n\"I should be able to remove everything, but it's not going to be easy, and I'm going to need help,\" she replied, looking around at the group.\n\nJohn stared at the battered cyborg in the cryo-stasis pod, and asked, \"What's involved, exactly?\"\n\nRachel glanced at Irillith and Dana, and added, \"I'll need a few hours of prep time to perform additional analysis on those implants, and I could use your assistance.\"\n\n\"You know I'll help with whatever you need,\" Dana agreed with a shrug. \n\nIrillith smiled, and said, \"I'd be glad to assist.\"\n\n\"Taking out all the implants will cause significant trauma to her body,\" Rachel continued. \"If I was relying on conventional medicine alone, I'd recommend spacing out the surgeries over several weeks, if not months, to allow her body time to heal and recover.\"\n\nJohn had been listening carefully, and realising what she was implying he said, \"I'm happy to provide the healing, but I want to get her permission before we start loading her up. She's had enough decisions forced on her for one lifetime.\" Turning to look at Alyssa, he continued, \"If you go back into her mind, can you reach her subconscious? Find out if she even wants this?\"\n\nAlyssa looked apprehensive about returning to that tormented place, haunted as it was by the mournful shade of Sakura. She nodded though, and said, \"She seemed to understand me before, I'll try and make her understand what we're planning to do.\"\n\n\"Thank you,\" he said, squeezing her shoulder gently. He spoke to Rachel next, asking, \"How long will the surgery take?\"\n\n\"I'd estimate approximately eleven hours of nano-surgery to remove all of those devices,\" Rachel replied confidently.\n\nAlyssa thought about how John's cum had affected each of the girls around her for the first time, and she looked up at him as she said, \"She'll be slow to absorb your cum to start with, her body won't be used to it. You'll probably need to top her up half-way through though, to make sure she's carrying enough so that you can still keep healing her.\"\n\n\"Whatever happens, let's try and avoid a third,\" John said pointedly. He turned to Jade next, and added, \"I'm sure Rachel can improvise some kind of feeding system if you're unwilling to be involved. I know what she did to you, and this must be difficult.\"\n\n\"I'd be glad to help,\" the Nymph said earnestly. \"I want to free her as much as all of you.\"\n\nHe smiled at her affectionately and beckoned her over for a hug with his right arm, as Alyssa was already tucked under his left. When they finally parted, he looked down at the blonde girl beside him, and said, \"I guess it's down to you now, beautiful. Does Sakura actually want us to help like this?\"\n\nAlyssa shivered, but she had a look of firm resolve on her face, and she squared her shoulders, then stepped into the spirit-world once again. Ignoring her friends, who were all gathered around with looks of concern on their frozen faces, she approached the pod, then leaned in to place her fingers on the cyborg's head. Unfortunately the metal lattice was back, and it was just as unyielding as before. She realised it must represent the unnatural synthetic brain disrupting the girl's mind, so she gathered her will and pounded into the barrier once again.\n\nBreaking through for a second time was easier now she knew what to expect, and Sakura's mind map unfurled for her, letting her peer into the girl's subconscious. This time there was no howling cries of anguish echoing around the memory monoliths, and the ghostly shade of Sakura was waiting for her patiently.\n\nAlyssa studied the pale, gaunt figure for a moment, then said softly, \"I'm sorry I ran away like that. Seeing everything that happened to you was horrifying, and I needed some time to recover.\"\n\nThe ghost remained silent, but it slowly nodded as it stared at her unblinking.\n\nWhen she realised that no response was going to be forthcoming, Alyssa went on, \"My friends think they can help you. We can free your mind, and take out all these implants, but only if that's what you want us to do?\"\n\nSakura's shade gaped at her in amazement, its eyes widening in disbelief. \"P.. l.. e.. a.. s.. e..\" it whispered, the sound eerie and discordant, but the unmistakeable ring of desperation echoed with every syllable.\n\nAlyssa nodded, and said, \"Alright, we'll help you.\" She hesitated for a moment, then continued, \"The way we'll be keeping you alive through the surgery is... unorthodox. John wants your permission before we proceed.\"\n\nThe ghostly spectre looked at her curiously, tilting its head slightly to one side in confusion.\n\n\"Alright, let me try to explain...\" Alyssa said with a sigh, then began to clarify exactly who John was, and what they intended to do.\n\n***\n\nIt only seemed like Alyssa had been gone for a minute or two, when she took a big intake of breath, alerting them that her mind was back in her body.\n\n\"What's the verdict?\" John asked the blonde as she slowly opened her eyes.\n\nAlyssa had a look of deep sadness on her face as she said, \"She's so desperate to be free, I think she'd agree to anything. She begged me to help her.\"\n\n\"Alright, let's get started,\" John said decisively. He turned towards Rachel, and continued, \"Can I leave you here to look into your prep work? I'd stay too, but I need to get up to the Bridge. We'll be on top of the Dragon March picket forces soon.\"\n\n\"Of course,\" Rachel agreed, darting glances at Dana and Irillith who both nodded.\n\nLeaving them to begin their analysis of the cyborg's implants, John led Alyssa, Calara, and Jade out of the Medical Bay, and towards the grav-tube at the end of the corridor. They were quiet as they walked along in a group, all equally disturbed by the unsettling revelations about everything the female assassin had been through.\n\nFaye looked up in surprise when they stepped out of the grav-tube and onto the Bridge. \"That was good timing!\" she exclaimed. \"I've started picking up what looks like a big fleet of ships on the extreme edge of our sensors. I was just about to call you and let you know.\"\n\n\"Thanks, Faye,\" John said gratefully as he strode up the illuminated steps of the Command Podium with Alyssa at his side.\n\nShe fluttered up to sit on his Command Console, and said quietly, \"I watched what happened on the Medical Bay cameras. I think you're doing a good thing helping her.\"\n\nJohn smiled at her as he sat down, and said, \"It's lucky you didn't light her up with the Gatling Lasers after all.\"\n\nFaye looked thoughtful, and replied, \"You're right, I hadn't thought about it like that. Maybe something positive can come out of everything that happened.\"\n\nAs everyone quickly took their seats, Calara looked down at her gloved hand with a worried expression on her face. She turned her Tactical chair so she could make eye contact with John, and she looked grim as she said, \"I'm still crippled, I won't be much use to you in a fight.\"\n\nHe snorted, and said, \"Nonsense, Commander. Even one-handed, you're a better gunner than anyone in the Terran Federation.\" Giving her a comforting smile, he added, \"You'll be back to normal again very soon. In the meantime, I promise I'll try to not get into a shootout with the T-Fed picket forces.\"\n\nShe smiled at him, and said, \"I'd appreciate that, thanks.\" When she turned her chair around again, she looked a little less tense.\n\nAlyssa had been watching the Latina with concern, and John shared a quick look with her before he asked, \"How long until we're in their sensor range?\"\n\n\"Just over five minutes,\" the blonde girl replied. \"Do you want to hail them pre-emptively?\"\n\nShaking his head, John replied, \"There's no need to let them know how strong our sensors are.\" Facing the Nymph in the Pilot's chair, he continued, \"Jade, Keep on course towards Port Medea, and let's wait for them to contact us.\"\n\n\"Yep, no problem,\" the green-skinned girl agreed, her attention focused on the sensor contacts they were seeing at the edge of the long range sensor sweeps.\n\n\"I can see the Medusa,\" Calara informed him, not taking her eyes off the Sector Map. \"It looks like the picket forces have been reinforced. They've added four modern cruisers and a battlecruiser to the supporting ships.\"\n\nJohn stared at the big holographic map in the centre of the Bridge, and just as Calara had described, the size of the picket group had been increased. Centred in the fleet was the Heavy Carrier, and it was surrounded by three heavy cruisers, several light carriers and dozens of destroyers. The addition of the modern cruisers and the battlecruiser made this a substantial battlegroup indeed. The Invictus swept forward, travelling at an incredible speed as it soared across the heavens, and inevitably they drew close enough to be picked up by the Terran Federation forces.\n\n\"We're being hailed,\" Alyssa noted, seeing the flashing red warning light on her console. \n\nWhen she pressed the button to accept the call, the view-screen crackled to life on the Bridge, and the face of a stern man in a Terran Federation Navy uniform filled the image. \n\n\"Commander Blake...\" Captain Maddox said, his eyes narrowing with distaste. \"The Dragon March is strictly off-limits. You will reverse course immediately, or expect to be interdicted and fired upon.\"\n\nJohn didn't appreciate the man's tone, and he replied gruffly, \"I don't know what kind of shoddy outfit you're running here, Captain, but I expect junior officers to salute a member of the Admiralty.\"\n\n\"Point one of them out to me, and I'll be happy to do just that,\" Maddox sneered. He eyed John with contempt, and demanded, \"What're you doing here, Commander?\"\n\nLeaning forward in his Command Chair, John's eyes narrowed as he said, \"It's Rear Admiral Blake to you, Captain.\"\n\nCaptain Maddox's face wrinkled in confused annoyance, and in the background on the Medusa's Bridge, John could hear furtive whispering. One of the Bridge crew suddenly appeared on screen, then leaned in to urgently whisper something into Maddox's ear. It was actually quite funny to see how white the obstinate Captain turned, as all the blood drained from his face.\n\n\"B-b-but how?!\" he stammered, his quailing voice betraying his absolute shock. \"You were only Commander rank a few months ago!\"\n\n\"I've been busy,\" John replied a little smugly. He narrowed his eyes, and said, \"Now stand down, Captain Maddox, I have urgent business in the Dragon March.\"\n\nMaddox glanced to one side, his expression fearful, before he replied, \"I'm supposed to restrict all access into the sector, Sir. I can't let you or anyone else in, under orders of Admiral Lynton!\"\n\nEdraele had been listening intently to the conversation, and she sounded confident as she contacted John telepathically, *Bluff him. The man sounds like a rank-obsessed weasel, and now he knows you outrank him, I doubt he'll have the courage to stand against you directly.*\n\nJohn stared at the man, and said, \"Switch to a secure channel, Captain, what I'm about to tell you is for your ears only.\"\n\nLooking worried, Maddox pressed a button on his console as he rose from the Command Chair on the Bridge of the Medusa. Less than a minute later he reappeared in a plush leather chair in a much darker room, and it looked like he'd moved to his Ready Room, as his face was no longer illuminated by the glow of the Sector Map.\n\n\"Alright, it's only me here, Admiral,\" Maddox said impatiently.\n\n\"I'm following an executive order from Admiral Devereux,\" John said, his voice low and secretive. \"With the big push against the Kintark, and my combat experience against the Empire, I've been asked to lead a task force there. I must reach Fleet Admiral Buckingham to report for active duty.\"\n\nMaddox looked shocked, and gasped enviously, \"You're leading a task force in the invasion!\" He managed to get himself under control, and looked thoughtful for a moment before he mused, \"I suppose this does supersede Admiral Lynton's orders, but you'll still have to rendezvous with her in Iota-Leonis.\"\n\nJohn frowned and asked, \"Why? I need to report in with Buckingham, not Lynton.\"\n\nThe carrier Captain looked chagrined as he admitted, \"Information on the invasion is strictly on a need to know basis. I don't actually know where the Fleet Admiral is at the moment, but Lynton will, she's got operational command over the Dragon March.\"\n\nStraightening up, John nodded, and said, \"Thank you, Captain, we'll proceed directly to the Iota-Leonis system.\" He paused, and added, \"Unless you still plan on firing at us?\"\n\n\"No, Sir,\" Captain Maddox replied, flushing with embarrassment. He gave John a respectful salute, and said, \"You may proceed at your leisure, Rear Admiral Blake.\"\n\nJohn saluted him back, and said, \"Very good, Captain. Carry on.\" He glanced at Alyssa, and she closed the comm channel.\n\n\"Very nice,\" she said with a sly grin.\n\n*That was excellent advice, thank you,* John thought to Edraele while he smiled at Alyssa.\n\nHe could feel her amusement over their telepathic bond as she said, *I've dealt with petty dignitaries like that for most of my life. Fortunately they've been bowing and scraping, rather than attempting to lord it over me, but I know his type very well.*\n\nLooking up at the Sector Map, the Invictus sailed unopposed past the picket forces, and they proceeded on towards Iota-Leonis. It made sense to John that Admiral Lynton would be based there, as that was the location of Port Medea, the biggest Terran Federation starbase in the sector. It was there that he and the girls had foiled an attack by the Kintark Empire, and after their heroics, he'd been promoted and Devereux had dubbed him the Lion of the Federation.\n\nJust as Captain Maddox said, all that happened only a few months ago, but the amount they had been through since then had been staggering. The Maliri, the Armoured Cobras, the Trankarans, Nexus, the assassins; he'd seen more conflict in a couple of months, than in his entire career as a marine in the Terran Federation military.\n\n*We met in that time too,* Edraele teased him. *Hopefully you aren't including me in your list of troubles.*\n\nHe chuckled, and replied, *Of course not. You and Irillith have been beautiful silver linings in some very dark clouds.*\n\nEdraele's wry amusement come through clearly over their bond as she said, *You know we need to have a conversation about that at some point?*\n\n*About what?* he replied, deliberately being obtuse.\n\n*The intricacies of you having a relationship with both me and my daughter, of course. You seem to have been studiously avoiding it,* she said playfully.\n\nJohn felt himself getting hot under the collar, but he wasn't entirely sure if it was due to embarrassment. He replied, *I figured that with you trying to rebuild your relationship with Irillith, I'd try and keep things as uncomplicated as possible.*\n\nShe was quiet for a moment, then said, *That was very thoughtful, thank you.*\n\n*It's the least I could do,* he replied. *I can see how much it's meant to both of you, building up that mother-daughter bond again.*\n\nEdraele was quiet again, but when she finally spoke, her voice was filled with longing as she said, *I wish you were here with me right now.*\n\n*It won't be long, I'll be there soon,* he said soothingly, but he could feel how much she was missing him.\n\nThe Maliri Matriarch went quiet in his mind, and he roused himself from his introspection to find Alyssa staring at him with an intrigued look in her eyes. *You -have- to tell me what the other half of that conversation was all about!* she pleaded with him.\n\n*Later,* he promised. Sitting up in his chair, he asked her out loud, \"How long until we reach Iota-Leonis?\"\n\n\"Just over five hours,\" she replied, not needing to check the flight path. \n\nJohn smiled at her in gratitude for her quick reply, then looked down at Calara, studying her curiously. He saw she was cradling her gloved right arm against her stomach, unwilling to attempt to use it on her Tactical console as she tapped away with just her left hand. He was curious how the healing was progressing, and up until then he'd always figured that he had no way of knowing, having to rely on the girls themselves, or more recently Rachel, to give him a status update.\n\nAlyssa glanced his way, looking at him speculatively as she thought, *That's a really good point. Your mind is guiding your psychic ability to heal her, so you must subconsciously know when she's fully healed.*\n\nReaching out to both his Matriarchs, he asked, *Any suggestions how I can keep track of healing?*\n\n*Well, you fully healed Irillith and didn't need to be in the same room as her,* Alyssa mused. \n\nAs he recalled healing the grievous wound the Maliri girl had received from the Trankaran thermal shotgun, Edraele spoke up, *If you were healing her remotely, then you don't need line of sight, and spirit-walking is unnecessary as you've only just learned how to do it.*\n\nAlyssa turned to him, looking excited, and thought, *Hold on! I just thought of something! Remember when I was maintaining that null-zone on Ashana? I didn't realise I was doing it until Councillor Talari pointed out that I was keeping it going inside one of my mind compartments. Maybe that's the case for you too?*\n\nJohn raised an eyebrow and nodded thoughtfully as he thought about what she was saying. It certainly made logical sense, as much as any of this psychic stuff did. He closed his eyes and thought about Calara, focusing on her physical condition. To his astonishment, it was like a black curtain was suddenly lifted back, and a shroud pulled away from a section in his mind. He looked on in stunned disbelief, as a huge section of what had appeared to be a featureless void was suddenly filled with row upon row of compartments. \n\nIt instantly reminded him of one of those organisation charts that senior officers in the Terran Federation military had always seemed to be so obsessed by. There at the top, clearly set apart from the others were his Matriarchs, Alyssa and Edraele. Beneath Alyssa were all the girls on the Invictus, starting with Calara on the left, then Dana, Jade, Rachel, and finally Irillith. Each girl was linked by thick, powerful lines to Alyssa, which he instinctively knew represented the strength of their connections with the beautiful blonde girl.\n\nUnderneath Edraele was a first tier made up of three Maliri girls, and he instantly recognised Luna, Almari, and Ilyana. Beneath them were the eighty engineers he'd linked to her back on Genthalas station, as well as Makaela the shipyard Commander. He glanced through row after row of the girls linked to Edraele, and he was amazed that he could remember every single one of their names, even if he'd only spoken to some of them for less than a minute. \n\nThe connection lines between the assassins and the House Valaden leader were considerably stronger than those from the engineers, which seemed very faint indeed. There were a few exceptions however, primarily Ioelena, the girl who'd fallen off the Invictus hull and who'd been saved by Jade. He also noticed that the four girls he'd spent most of his time chatting to from the weapons team seemed to take slightly higher prominence over the rest of the Maliri engineers.\n\nIt was fascinating to see all the girls linked in his mind, and all told, he counted a total of ninety-one mental compartments to house them all. He started to feel a bit better about only having six active compartments to work with, when it was now apparent that a huge section of his mental capacity was devoted to maintaining links with all these women.",
        "As his mind's eye flickered over each of the girls, he paused on Calara, a soft glow from her drawing his attention. His curiosity peaked, he looked closer, and saw that the glow was emanating from her belly. He realised it must correspond to her still carrying his cum in her stomach, and something clicked into place in his mind. He instantly realised that he had an active connection with the gorgeous Latina, and while that was in place, he'd be able to focus his will, healing her of any ailments. \n\nThat moment of clarity had told him everything he needed to know, and he abruptly rose to his feet, \"Commander,\" he said to her in a firm tone, \"we've got plenty of time before we reach Iota-Leonis, and I want to burn off some steam. I think we're overdue a sparring match.\"\n\nCalara was surprised to say the least, and turned her chair so that she could face him. She opened her mouth to protest, raising her gloved hand, but she saw by the set of his jaw that he wasn't in a mood to be argued with. She stood meekly, and walked up the ramp to join him, lacking her usual fiery exuberance at the prospect of a martial arts session with him.\n\n\"I'll stay here, and keep an eye on things,\" Alyssa said to him, as she watched the Latina head up to the grav-tube. She glanced John's way and gave him a loving smile as Calara walked by, and added telepathically, *Thank you.*\n\nJohn winked at her playfully, then darted down the steps to match step with Calara, accompanying her down to Deck Two in the grav-tube. The Latina wasn't in a talkative mood, so he took the opportunity to say to Alyssa and Edraele, *Thanks for your advice, that was really helpful. I guess I had an epiphany of some sort, and some things suddenly became a lot clearer in my mind.*\n\nHe quickly explained what had happened, leaving Calara to go into her room to change while he walked into the Commander's Quarters to put on his own sparring gear. Alyssa and Edraele were both intrigued by this revelation, and Edraele seemed especially interested in the connections she had with the Maliri girls she was linked to. By the time he'd finished explained his startling discovery, he'd managed to get changed and was out in the corridor again, where he waited patiently for a couple of minutes for Calara to arrive. \n\nShe appeared a few moments later, her right arm still wearing the glove, and carrying it awkwardly tucked in against her body as though it were broken. He smiled warmly at her, and she returned it bravely, but he could tell she was worried and trying to hide it.\n\nThey walked down the corridor then re-entered the grav-tube, dropping down in the crimson glow until they reached Deck Seven. Calara seemed increasingly apprehensive as they walked along the corridor past the Pharmacy, the Firing Range, and Medical, until finally arriving at the Gym. John pressed the button, and waved her through courteously, waiting for her to enter the room before following in after her. He'd had just about enough of seeing her looking so subdued, so when they squared off against each other on the mat, instead of adopting a fighting stance, he strolled right up to her.\n\n\"Your arm please, Commander,\" he requested firmly.\n\nCalara raised her right arm for him, conditioned as she was to instantly obey her commanding officer. She stared at her arm, worry creasing her eyes as she looked at the recently crippled limb. \n\nStepping close to her, he raised his hand, but instead of taking her arm, he brushed his fingers through her thick, lustrous dark-hair. She looked up at him quizzically, and he said, \"This isn't like you, you normally trust me implicitly. You know I'm healing your arm, so what's wrong?\"\n\nShe faltered, unable to look into his eyes, as she admitted in a quiet voice, \"I'm scared. The idea of being crippled in combat has always terrified me; the idea that I'd suddenly be unable to serve, and forced to retire.\"\n\nHe smiled at her affectionately as he said, \"It looks like you picked the right boyfriend then.\"\n\nThe Latina laughed, but he could tell she was still worried. Gently taking hold of her arm, he peeled back the long opera glove, exposing the fresh, unblemished skin on her forearm. Tugging it carefully, he pulled it all the way from her hand, revealing her lovely slender fingers to their gaze.\n\n\"As good as new,\" he said, his voice calm and reassuring.\n\nShe stared in wonder at her fully regenerated arm, wiggling her fingers cautiously as she experimented with her motor control. John could see she was still wary, and finding it hard to believe he'd fully restored her limb, so he stepped back a couple of paces, squaring off against her.\n\n\"Time to test your new hand,\" he said, watching the girl closely. \"Hit me as hard as you can.\"\n\nShe looked about to protest, but when he raised an eyebrow, she fell into a combat stance against him. He could immediately tell she was still hesitant, as she really pulled the blow she aimed at his torso. Effortlessly catching her fist in his open palm, he pulled her towards him, wrapping his arms around her as she moved into his embrace without resistance.\n\n\"Something else is upsetting you,\" he said quietly as he stroked her back. \"What is it?\"\n\nHe could feel her start to tremble in his arms, and she whimpered, \"I thought I was done being the damsel in distress, but I'm still just as helpless as ever.\"\n\nPulling back slightly he gently lifted her chin so she was forced to look up at him. His tone was tender, but firm as he said, \"You had no chance of doing anything to prevent that explosion, or avoiding the blast. No matter what training I'd give you, the results would still have been the same.\"\n\n\"I... saw it... the bomb I mean, before it went off,\" she replied in a tremulous voice. She laughed self-deprecatingly as she added, \"I thought someone had got a present for Jade.\"\n\n\"How long before?\" he asked her, not backing down for a moment.\n\nShe stared into his eyes, and asked, \"What do you mean?\"\n\n\"How long was it before the bomb went off after you'd seen it?\" he clarified for her.\n\nShe faltered, then replied, \"About three seconds, I guess?\"\n\nHe chuckled, and said, \"Come on, honey, don't be silly. What could you have possibly done in three seconds to change what happened?\"\n\nShe looked sheepish, and conceded, \"Nothing.\"\n\n\"That's right,\" he said, nodding encouragingly. \"It wasn't your fault, and you couldn't have done anything to prevent it. You being caught in that explosion had absolutely nothing to do with how capable you are at defending yourself.\"\n\nA smile formed on her face, and she looked like a weight had been lifted off her shoulders. \"Thank you,\" she said to him simply, her earnest expression conveying the strength of her gratitude.\n\nHe returned her smile, but then it slowly fell from his face as he frowned in disapproval and said, \"Now, that punch you threw at me was another matter entirely. That was an insult to all the effort I just put into healing you. Do you really think I'd give you a defective arm?\"\n\nCalara was shocked by his words, and she shook her head frantically. \"No, of course not!\" she protested. \"I was just-\"\n\n\"No excuses. Show me what you've got,\" he stated firmly, narrowing his eyes as he stared at her.\n\nHe stepped back from her, putting some distance between them to give her plenty of room. Calara took a deep breath, closing her eyes for a few moments to centre herself. When her long lashes lifted, he could see the fierce determination in those lovely dark eyes. She lunged towards him, winding up a massive blow that would have felled a lesser man in one punch. He managed to catch it with his palm, and the sound of that impact echoed like a thunderclap around the gym.\n\n\"That's more like it,\" he said proudly, loving the sight of the fiery spark in her eyes. \n\n\"You're playing a dangerous game,\" she warned him, giving him a smouldering look.\n\nHe nodded, and said, \"You're a dangerous woman. I wouldn't have it any other way.\"\n\nThey stayed like that for a few seconds, only inches apart, and staring into one another's eyes. Calara finally skipped backwards, lithe and nimble on her feet, then squared off against him once more. She waited while he closed his eyes, slowing his breathing and calming himself, until he'd shed all his distractions and slipped into a zenlike state as well. \n\nThey didn't need to say anything to signify the start of the bout. They'd spent countless hours fighting each other over the last few months, and they could read each other like a book. Calara moved first, stepping forward, then launching a bold spinning roundhouse kick at his head with her right leg. Narrowly ducking, he attempted to sweep her left leg, but she used the momentum from her sailing leg to carry her over into a flip, so his attack swept underneath her harmlessly.\n\nCalara pivoted as she landed, aiming a kick with her right at his chest, and he narrowly caught her foot, inches from caving in his ribs. He only had his hands on her calf and foot for a split second before she twisted out of his grasp, and rolled backwards, barely avoiding his counter punch to her chest. She moved out of range, and he drew back defensively, so as not to overextend himself.\n\n\"Very nice,\" he said approvingly.\n\nShe grinned at him, her eyes flashing as she said, \"Thank you.\" She raised her right hand, beckoning him towards her with two fingers, as she taunted him, \"It's your turn now. What've you got?\"\n\nJohn was perfectly balanced on his feet, the endless hours of footwork as he gained mastery over the sword having further refined his skill with martial arts. He leapt forward, his arms moving in a series of flowing strikes as he launched a devastating flurry of blows towards her. Where he had the advantages in strength and reach, she was quicker and more nimble, and she used that to good effect to deftly dodge or deflect his attacks. \n\nTo a casual observer it looked like they were dancing as they moved across the mats, performing a deadly waltz, and taking it in turns to lead with a fist, foot or knee. They both knew John had the edge in this fight, with his years of experience paying dividends. However Calara was a ferocious foe, making him use everything he had to best her. He finally managed to trick her with a feint before scooping her up in his arms, and bringing them both crashing to the mat. \n\nThey'd been fighting flat-out without pause for an hour, and they were both breathing heavily and covered in a sheen of perspiration as they lay there, Calara pinned underneath him. \"You were magnificent,\" he panted, his voice full of admiration as he stared into her eyes, their faces inches apart.\n\nThe Latina's chest was heaving, but not because she was out of breath. Her dark-brown eyes were smoky with lust, and she purred, \"Are you going to claim your prize?\"\n\nHe sat up abruptly, releasing her as his hands moved to tear off his top. She sat up as well, stripping off her clothes as she stared at him, licking her lips in an unconscious gesture. It took them moments to strip naked, and she lay back supine, arms above her head so that he could restrain her again. He moved over to join her, kneeling between her splayed, muscular thighs. \n\n\"Magnificent...\" he murmured, as he gazed at her breathtaking olive-toned body, which was glistening under the lights. \n\nHe looked up at the glaring lighting, and called out, \"Lights low.\" The voice activated dimmer went to work immediately, drastically lowering the bright lights, and then illuminating the pool with soft underlit lighting. Calara looked absolutely enchanting like this, and he leaned forward to trace the fingers of both hands down her body. He started at her collarbone, feeling the smooth skin slide under his fingertips as he brought them down over her firm breasts. They filled both his palms with pert flesh that sat up proudly from her chest, and he massaged her, enjoying watching her arch her back as she responded to his touch.\n\nHe used the smooth edge of his nails to trace across her skin, the change in texture causing goosebumps to appear in their wake. Those fingers teased her, moving around the areola of her nipples, and making them grow erect as they reacted to his caresses. \n\n\"No more foreplay!\" she panted, \"I've never been more turned on!\"\n\nHe ignored her though, tracing his fingers down over her ribcage until he reached the neat oval of her abdomen. She had a beautifully defined six pack, lean enough to just make out the muscles, but still feminine enough to smooth out the edges and make her body look wonderfully sleek. He massaged her toned stomach with both hands, encircling her waist, and rubbing his thumbs over her belly. \n\nShe stopped writhing underneath him, and just held her breath as she stared into his eyes. They both knew what his possessive touch signified, and he could see an extra level of excitement in her eyes as she gazed at him, both of them thinking the same thing. Using his firm grasp around her waist, he lifted her effortlessly into the air, then brought her astride his thighs, where he knelt on the mat.\n\nPressing her breasts against his muscular chest, she moaned with arousal, and suddenly wrapped her arms around his neck as she leaned in to kiss him. He held her rigidly in place, with his firm grip around her waist, and she began to whimper with need. She could feel the heat from his shaft where it was sandwiched between them, and she ground against him savouring the hardness pressing into her svelte stomach.\n\n\"Are you ready?\" he teased her as he stared into her hooded eyes.\n\n\"Please...\" she gasped, desperately trying to move over his throbbing cock. \n\nHaving mercy on her, and eager to slake his own lust, he lifted her off his lap, positioning her directly over his pulsating crown. She pulled his face into her cleavage, running her fingers through his hair as he slid between those glorious sweat soaked mounds of ripe young flesh. Once he was confident she was correctly aligned above him, he pushed her down, relentlessly impaling her on his cock. \n\n\"Oh, God,\" she whimpered as her body yielded for him, stretching to accommodate him inside her.\n\nHer flesh was supple and used to taking him now, and although there was no pain, she groaned at the feeling of being steadily stuffed full. He reached the end of her pussy, with plenty of his length still to go, but he paused for a moment to let her get used to the big invader inside her. They were nearly face to face again, and she leaned in to kiss him tenderly.\n\n\"You haven't taken my ass since you got promoted,\" she noted with an inviting smile. \n\nJohn released his iron grip around her waist, moved his hands down to her bottom, and grasped those taut cheeks. Calara didn't say anything, but he could feel her breathing quickening as he manhandled her, her full breasts rubbing against his chest.\n\nHe smiled, and said confidently, \"I fully intend to, but not today.\" He looked at her knowingly, and continued, \"I love dominating you like that, and I know you love it too, but that's not what you really need right now, is it?\"\n\nShe was about to disagree, but she bit her lower lip, and shook her head slightly. \n\n\"Tell me, what do you need?\" he asked her, as he wrapped his arms around her protectively.\n\nCalara looked a bit self-conscious, and whispered softly, \"Just to feel close to you.\"\n\nHe pulled her close and murmured into her ear, \"That's ok, I'm here for you.\"\n\nShe clung to him fiercely, shifting her weight and moving her legs so that they were wrapped tightly around his back. He held her like that, whispering quiet, reassuring words to her as he held her close. It was almost as though he could feel the tension sliding off her as he alternated between gentle kisses, and loving, reassuring words. As she relaxed, she took him further inside her, sinking down his shaft as the head of his cock entered her womb. Eventually she reached the bottom, and she shivered with the thrill of knowing she had taken all he had to offer.\n\n\"That feels so much better,\" she told him while sighing with relief.\n\nHe stroked her back, and said, \"Let's make you cum a few times, does that sound good?\"\n\nShe sought out his lips with her own, kissing him passionately, and moaning with desire. John placed his hands on her hips, then used his enhanced strength to easily lift her up until only the head of his cock was still inside her. She groaned when he pushed her all the way down again, stuffing her full once more. He loved hearing her feminine little gasps as he stroked her up and down his massive shaft, and with her pussy stretched tight, her clit brushed against him when she hit the bottom. \n\nHolding her there, he rubbed her against him, and he could hear the effect it was having on her by the way her breathing grew increasingly laboured. The Latina was already turned on after all the extend sparring foreplay, and she came explosively as he manipulated her body. John kept up the insistent pressure on her clit as she trembled and quivered in his lap, holding her tight in his arms. Eventually she sagged against him, and let out a disbelieving laugh.\n\n\"You're always coming up with something new, I don't know how you do it,\" she sighed, looking up at him with a satisfied smile on her face.\n\nThe door swished open, catching their attention, and a nude Alyssa darted into the gym, her face flushed with excitement. She rushed over to join them with Jade in tow, who was just as spectacularly naked.\n\n\"I had to come down and see you,\" Alyssa said with eager excitement. \"Hearing you two going at it was getting me too horny.\"\n\nShe knelt down behind Calara, wrapping her arms around her, and pressing her breasts against her back. The brunette was relaxed and happy now, and she tilted her head back and to the side, so she could give Alyssa a sensuous kiss. Jade knelt at their side, and John could see her face was glistening wetly in the light. \n\nThe Nymph smiled when she caught his gaze, and said, \"I offered to help her alleviate the tension.\"\n\nAlyssa came up for air from her kiss with Calara, and laughed as she said, \"A wonderful job she did too!\" She hugged the Latina exuberantly, but she frowned as she added, \"I hate to rush you guys, but Rachel's nearly ready for us.\"\n\nJohn nodded, and carefully lifted Calara off him. She let out a quiet moan of protest when he eased out of her, but she sighed with delight a moment later when he turned her around so she was facing Alyssa, and pushed his entire length back inside her ripe young flesh in one long unending thrust. He bounced her in his lap, while Alyssa swooped in to kiss the brunette, mashing her breasts against her lovers. Jade slipped a surreptitious hand between them, and then began to gently stroke Calara's clit in time with the thrusts.\n\nAlyssa tilted her head while kissing Calara, looking over her shoulder at John, and making eye contact with him. Those bright blue eyes sparkled with arousal, and she said to him telepathically, *I love seeing her cum when you fuck her.*\n\n*Yeah, me too,* he agreed, holding onto the Latina's hips and thrusting rhythmically into her gorgeous body. \n\nHe could feel Calara trembling with excitement as he drove into her, and with all the stimulation it didn't take long for her to explode into another intense climax. She clung to Alyssa as she rode out the waves of pleasure, and her pussy gripped his cock tightly, squeezing him and coaxing him to join her. \n\nStaring into Alyssa's eyes he thought to her urgently, *I'm nearly there!*\n\n*Yes!* she hissed as she held Calara in her arms. *Fill her full of cum!*\n\nHe gave one last powerful thrust, lifting the girl on his lap as he rammed into her, and his cock jerked as he began to unload. He cried out in ecstasy as he came, his quad convulsing as his four balls pumped their cargo into her eager womb. Her belly expanded outwards to take all he could give her, and he collapsed against her toned back, wrapping his arms around the spent teenager.",
        "Jade and Alyssa helped them roll to their side, and as his cock softened and slid out of Calara, Jade quickly moved to replace him. The three of them watched the Nymph as she lapped away, transferring the contents of Calara's swollen belly into her own body.\n\nAlyssa was lying on the Latina's left side, and she reached across the tired but happy girl, and interlaced her fingers with Calara's recently regrown digits. Bending down, she planted a series of gentle kisses on those fingers, then smiled at the brunette as she murmured, \"I said he'd take good care of you.\"\n\nCalara glanced at John, and smiled as she said, \"I know, I was being silly.\"\n\nThey cuddled together for a while, and Alyssa threw John a grateful smile as they both hugged Calara. *She really needed that, thank you,* she said sincerely.\n\n*I love her too, remember,* he replied with a playful smile.\n\n*We're both very lucky to have you,* Alyssa said, her tone earnest, and her words heartfelt. She paused, studying him for a while, and with a curious expression on her face, she added, *You've been getting much more perceptive recently. You picked up on everything that was bothering Calara without me having to say a word.*\n\n*The one downside to having six lovers? It's taken me ages to really get to know all of you,* he replied with a wry smile.\n\n*No... I don't think that's it,* Alyssa replied, studying his face, and ignoring his attempt to laugh it off.\n\nCalara let out a sad sigh, and when Jade set upright with her hugely swollen breasts, John realised she was done. He sat up as well, and said, \"Let's go grab a quick shower, then we can head over to Medical and check on the others.\"\n\nThey all rose together, and strolled out of the gym without bothering to get dressed. John hit the button to open the door, then stood aside to let the girls go first. Calara was the last to leave, and she stopped in front of him before going through the door. Her beautiful face was solemn as she gazed up at him, and she raised her right hand, using her newly regrown fingers to caress his face.\n\n\"I won't ever forget what you did for me,\" she whispered to him, her voice throbbing with gratitude. \"You healed me once before, but this was something else. I'm not sure I could have coped with an injury like that.\"\n\nHe smiled at her, and said, \"You're welcome, but don't undersell yourself. You're a very resilient girl, and you would have been just fine. I'm very proud of the brave, confident young woman you're growing into.\"\n\n\"Thanks to you, I didn't have to find out,\" she said, then raised herself up on tiptoe and pressed her lips against his in a soul-searing kiss.\n\nWhen they parted, she gave him a shy smile, then walked through the door to join Jade and Alyssa who'd stopped to watch. The girls slipped their arms around Calara, and the three of them walked up the corridor towards the grav-tube, chatting together quietly. John watched them for a few seconds as they walked away, his lips still tingling and reminding him of the Latina's passionate kiss. He grinned to himself, then strode down the corridor to catch up to them.\n\n***\n\nFive minutes later, and after a very quick shower and change of outfits, they rejoined Rachel and her two helpers in the Medical Bay. All three looked animated when John and his companions entered the room, and it was Dana who spoke up first.\n\n\"You'll never guess what we've found out! This shit is crazy!\" she blurted out, her sky-blue eyes wide with excitement.\n\nIrillith nodded, and giving Rachel an appreciative smile, she said, \"Checking these implants first turned out to be an extremely wise decision.\"\n\n\"Alright, well done, you've got me intrigued,\" John said with a chuckle, looking at each of the three girls. \"What did you find out?\"\n\nThe redhead and the Maliri girl both turned to Rachel, letting her be the one to explain. She smiled at them, then said, \"They're both right, it's been intriguing studying Sakura, and it's very fortunate that we did.\" \n\nTurning to the cyborg in the cryo-pod, she pressed a couple of buttons on the holographic display, and produced another image showing the girl's implants. Her hand moved over the controls, focusing the image on her brain, then zooming in to look at it more closely. The deep scan showed a fist-sized metal implant inside her skull, and at this magnification, they could make out the individual components.\n\n\"So what's all this then?\" he asked her curiously.\n\n\"Primarily it's a synthetic brain, with a CPU providing the processing power and overriding Sakura's control over her own body. We discovered something else there too though,\" she said, her expression sombre.\n\n\"There's a fucking bomb in her head!\" Dana gasped, unable to wait any longer.\n\nRachel rolled her grey eyes affectionately at the redhead's impatience, and nodded, saying, \"We think it's been rigged to explode if the implant is removed.\"\n\nJohn's eyebrows climbed higher and he asked, \"There must be a way to stop it?\"\n\nRachel was pensive as she replied, \"Normally, no. Without the deactivation codes being remotely activated, even the slightest tampering would detonate the explosives.\" She glanced at Irillith and said, \"We think we might have a way to neutralise it, though.\"\n\nThe Maliri girl nodded and said, \"She has data jacks at her wrist, which allows her CPU direct access to consoles. If I use the data jacks as an access point, I'll be able to infiltrate the CPU and deactivate it, then hopefully suppress the detonation trigger until Rachel removes the implant.\"\n\nDana chipped in again, saying, \"Once it's out of her head, I'll use inhibitor fields and signal dampeners to prevent the explosives from going off. They'll only work once we yank it out though, as she's got cranial plating that might interfere with the field.\"\n\n\"So you're removing the brain implant first then?\" John asked Rachel, glancing at the unconscious cyborg.\n\nThe tawny-haired girl followed his gaze, and replied, \"Second, actually. She's got subdermal plating around her abdomen, and I'll need to remove that first to let her expand to carry your full load.\"\n\n\"Nice work, girls,\" John said, clearly impressed. \"Are you going to start immediately?\"\n\nRachel turned to face him again, and said gravely, \"Soon, but there's something else I need to tell you before we start.\"\n\n\"That sounds ominous,\" he said, studying her sober expression. \"What's the problem?\"\n\n\"I took a small skin sample to check my theory about the cryo-induced frostbite. I was right, but that's not important. Physiologically, Sakura is in her early twenties, I'd estimate around twenty-one, twenty-two perhaps,\" she explained carefully.\n\nAlyssa frowned and said, \"That can't be right. I saw hundreds of murders archived inside her mind, and some of them dated back decades!\"\n\nThe doctor looked saddened as she said, \"I checked the DNA sample against the Terran Federation medical archives, and managed to find her listed there. Sakura Honami was born on New-Eden on the 12th of February 2684.\"\n\n\"Wait a minute, that can't be right!\" John exclaimed. \"That would make her ninety-five!\"\n\nRachel nodded, and said, \"We triple checked it to be certain. I think she's been held in cryo-stasis for over seventy years, being temporarily thawed out for each assassination then frozen again. It would explain the skin damage she's sustained.\"\n\nJohn stared at the girl in the cryostasis pod, and said quietly, \"Did you find out anything about her family? Any surviving relatives?\"\n\n\"Not yet, no,\" Rachel replied. \"As you can imagine, it took a long time to match the DNA in the archives.\"\n\n\"I'll look into it,\" Calara offered. \"Now I know her date of birth, name, and home planet, it should be relatively easy to find out more.\"\n\n\"Thank you,\" he said gratefully. \"I'm sure the first thing she'll want to know when she comes around is if her family are alright.\" \n\nCalara nodded, but they shared a look, both already coming to the same conclusion.\n\nTurning to Rachel, he asked, \"What's the plan now?\"\n\n\"Irillith will hack into her CPU, and shut it down while we bring her out of cryostasis. I'll prep for surgery, then we'll begin,\" she said, sounding confident in her abilities.\n\n\"Is there anything you need me to do?\" he asked as he gazed at the comatose assassin.\n\n\"It would be helpful to have you here at the start, just in case Irillith can't deactivate the CPU. If that happens, we might need you to physically restrain her,\" she asked plaintively.\n\n\"Of course, I'll help however I can,\" he agreed.\n\nIt didn't take Rachel long to get cleaned and prepped for surgery, and she soon stood with them again in her surgeon's gown and gloves. \"Alright Irillith, please proceed,\" she said, looking at the Maliri girl.\n\nIrillith found Rachel's calm and confident nature helped steady her nerves, and she took a deep breath as she got ready to project herself onto the astral plane. She was growing much more accomplished at spirit-walking, and once she had peeled away her ethereal form, it only took her a moment to steady herself afterwards. Approaching the captive assassin, she knew the data jacks were located on Sakura's wrists, so she reached out with her mind, searching for the connectors.\n\nThe data ports were much like the others she had entered before, so she carefully poured her consciousness into those points of entry. She felt a momentary feeling of uneasiness, as she suddenly remembered she was entering a system inside a person's body, rather than some inanimate object. Fortunately as she re-emerged in the digital network within the cyborg, it appeared largely interchangeable with all the other systems she'd explored so far. \n\nShe found herself on a tiny platform with a swirling green portal behind her, although the sky and floor were a dark red rather than black. There was a cursory firewall barring her path, which she broke through with a contemptuous flick of her wrist, barely having to flex her cyber-psychic muscles to do so. The sundered barrier shattered into thousands of tiny glowing shards, falling away from the platform and revealing the path beyond.\n\nA silver lined pathway snaked away into the darkness, so she leapt out onto it, and raced along the short distance to the CPU centred in the cyborg's brain. It was here she finally paused, as this was wholly unlike the previous systems she had entered. Rather than blank, largely featureless black walls, the data fortress inside Sakura's skull was made from an opaque gold material. The surface of the walls was covered in intricate sigils, and Irillith felt a flicker of anxiety when she recognised them as Maliri.\n\nThere were no guards patrolling the walls, and the door to the digital citadel was unbarred and thrown wide open, inviting her inside. She approached warily though, as this whole setup felt eerily familiar. Standing at the entrance, she could clearly see her target sitting out in the open on a raised platform, surrounded by rectangular blocks that looked like data archives. The central processing core was a large green cube with a bewildering number of buttons and controls on the top. It was only a few dozen steps away from her, just tantalisingly out of reach for the moment. \n\nPart of her wanted to stroll right in and shut down the system, but Irillith just knew this was a trap. One of the Maliri cyber-defence techniques was to deliberately lure a hacker into a false subnet, which had been baited with some tantalisingly named files. Once the invader entered that system, they would be savaged by aggressive defence programs that would shut down the hack, and in some cases even backtrack to the host system and launch a counteroffensive.\n\nNarrowing her eyes suspiciously, she stepped inside, while keeping watch open for hostile tracking programs. She created a shield formed from violet polygons, then as an added precaution she created some defensive routines that appeared as shield wielding Maliri soldiers, flanking her as she walked in cautiously. Nothing seemed to be out of the ordinary, but her senses were screaming at her that this was a trap.\n\nAccompanied by her guards, she walked into the forest of data archives, taking careful steps as she approached the big data repositories. Unfortunately her guard programs weren't as sure footed, and one of them walked out onto a floor tile, which sank down with an ominous click. The monoliths surrounding the dais began to tremble, and Irillith realised they were part of the trap. The big rectangular shapes quickly begin to shrink and morph, and she let out a startled gasp, as a flash of blue lunged towards her from her right.\n\nThe defensive program took the hit, and was instantly scythed in half by the hostile program. It advanced on her remorselessly, and she gasped as she saw more of the sleek, faceless figures all around her. They were armed with long twin blades instead of hands, and they raised them aggressively as they rushed in on the attack.\n\nThe first of the lethal programs charged directly at her, blades flashing as it attempted to disembowel her, just as it had just done to her defence algorithm. Irillith slammed her shield in its path, frantically blocking its frenzied attacks, just barely keeping it at bay. She glanced to her left, just in time to see the second defensive program fending off another digital killer, until another one flanked it and stabbed it in the back.\n\nBacking away warily, there were six of the blue twin-bladed killers bearing down on her, so she gathered her will, forming a javelin of purple light in her hand. She hurled it at the lead program, which toppled over as the javelin tore through it in a spray of glowing blue chunks. Holding out her hand, the spear of light raced back to her, skewering another program on its return journey in another cascade of digital blocks. Irillith seized it in a tight grip the moment it came in range, just as the other programs surged in to attack. \n\nThey rained blows down on her shield, which she had to swing back and forth to try and keep them at bay. Irillith kept backing away from them as she got ready for another attack with her javelin, until she suddenly bumped into a solid object. The fortress walls had slammed shut behind her, and there was nowhere else to run. The hostile programs seized on her momentary distraction, and while she managed to keep three of them back with her shield, the fourth darted in and stabbed her in the thigh with one of its blade-arms.\n\nShe screamed in shock, as the blade sank into her leg, agonising pain radiating out from the wound. The attack program seemed as surprised as she was, but in its case, it was frozen in a logic loop. Its programming told it the invader should have been destroyed, but the system alerts were still triggered, telling it that the intruder was still present. Irillith took advantage of its indecision, and plunged her force-javelin into its chest, causing it to explode in tiny fragments. At the same time she widened the shield and blasted it out ahead of her, sending the three remaining attack programs sprawling backwards.\n\nThey quickly regained their feet, then started to sprint towards her on the attack, but those few seconds of respite were all she needed. Her eyes had begun to glow with a throbbing purple light, and furious with the pain in her leg, she lashed out with twin columns of virulent energy. The first program lost its head and most of its upper torso as the eye-beams punched into it, and she viciously slashed the raw eldritch energy across the other two neatly chopping them in half. The pulsating light in her eyes dimmed out, and she sagged back against the fortress wall, breathing erratically as she recovered.\n\n*Are you alright?!\"* Alyssa thought to her in alarm. *I could feel your pain! What happened?*\n\nIrillith steadied herself, and pushed away from the wall as she gasped breathlessly, *Ambushed by defensive programs... I was right... it's Maliri tech!*\n\n*Do you need more power?* Alyssa offered, her voice ringing with concern.\n\nRemembering what happened to the last data fortress when Alyssa flooded her with energy, Irillith quickly replied, *No! I'm okay now, I fought them off.*\n\nShe looked down at her leg, and saw a gaping wound in the digital signal representing her presence in this network. It throbbed with pain, and she limped as she approached the dais again. Although she'd dispatched the sentinels defending the raised platform, it still didn't feel right, and after what had just happened she was wary of activating any more traps. Stopping for a moment, she began to build, then replicate two dozen search routines, which she sent spinning off into the data-fortress to locate the central processing core. \n\nThe search routines rushed up to the green cube on the platform then studiously avoided it, fanning out as they began to scour the rest of the electronic citadel. Waiting patiently, Irillith eyed the large green cube with a sardonic gaze, and wondered which of the controls on top of the Trojan Horse would have unleashed a small army of sentinel programs intent on her demise. It didn't take long for one of the search routines to change colour from orange to green, and Irillith limped over to the section of wall it was pointing towards. It seemed just the same as the rest of the golden walls surrounding the fortress, but now she had drawn near, she could see that the Maliri symbols looked slight discordant. \n\nNow she was studying it carefully, she could see that the Maliri script that covered the surface of this section was gibberish. The words were written correctly, but the sentences they formed were nonsensical. Something seemed strangely familiar about the broken phrases, the words more fitting to rhyming couplets than any kind of programming terminology. She had a sudden flash of insight, and recognised a few of the key phrases from a Maliri nursery rhyme her nanny had told her as a small child.\n\nPlacing her hands on the surface of the wall, her fingers began to glow, and the wall responded immediately, highlighting a grid of small tiles. She was able to move the tiles around, shifting and replacing them as she repositioned the words into the correct sequence. There were over a hundred tiles to rearrange, so it took her a while to complete the puzzle. When she was finally done and the last tile clicked into place, the whole panel sank back into the wall, before parting down the middle and swinging wide open. There was a hollowed out section behind the reinforced panel; a secret subnet that had been concealed to keep the central processing core away from intruders. She approached it, immediately recognising the complicated device for what it was, then carefully examined the controls on the upper surface.\n\nThis was definitely the central processing core, but she couldn't see any way of deactivating the trigger controls for the bomb. Irillith suddenly realised that the trigger controls were not linked to the processor, and must be purely mechanical in nature, perhaps hooked up to some kind of signal receiver. She pressed her hand down on the big red button, deactivating the CPU, and preventing Shinatobe from re-emerging.\n\n*It's done,* she thought to Alyssa, suddenly feeling bone weary. *I've shut down the CPU, but the bomb is still active.*\n\n***\n\nTo the others waiting patiently around the cryo-pod, it only seemed to take less than a minute for Irillith to complete her task, such was the speed that events occurred in the cyber-realm. Alyssa gestured with her hand, and the Crystal Alyssium bands that were securing the cryo-pod melted away, flowing into a cube that she placed on the floor. The moment that she told them it was safe to bring the assassin out of cryostasis, Rachel sprung into action.\n\nShe leaned over the pod controls, and activated the thawing process, awakening the cyborg from its slumber. The pod doors swung open with a hiss, and as they parted, cold misty vapour swirled out into the room. Sakura groaned in agony, and Rachel was there like a shot, pressing a hypo-injector to her neck and applying a sedative.",
        "The assassin slumped over, unconscious once more, and Alyssa carefully levitated her out of the cryo-pod. Seeing Sakura's bloodied and beaten face up close, the blonde girl was filled with a profound feeling of regret, so she was very gentle as she floated her over to the operating area. The limp body passed through the force field surrounding the operating area that kept it sterile, and the psychic blonde girl settled her down on the table. Jade and Rachel followed the cyborg inside, the nude Nymph's body glowing when she passed through the force field as rogue particulates were scoured from her skin. \n\nRachel carefully stripped away the torn Nanoweave jumpsuit that covered the cyborg's body, revealing her pallid flesh to their curious eyes. Just as the scan had shown, her skin was in a terrible state, the cryo-frostbite causing significant damage, and the lack of sun exposure making her look unnaturally pale. Long surgical scars crisscrossed the poor girl's tortured body, making it quite apparent where implants had been inserted into her flesh.\n\n\"Alright, let's begin,\" Rachel stated calmly, as she picked up a laser-scalpel in her right hand. She placed her left over Sakura's stomach as her dexterous fingers probed for the subdermal plating that she knew lay hidden beneath the skin.\n\nIrillith had ended her spirit-walk by this point, and she leaned heavily against John as he stood with Alyssa watching the surgery. Dana hurried over to one of the Medical consoles, and her hands raced over the keyboard as she began setting up inhibitor fields and a signal dampener around Sakura's head.\n\nA clatter over by the operating table drew John's attention, and he saw that Rachel had placed the first of the abdominal plating on a tray. Her agile fingers moved quickly and methodically, making an incision with the laser-scalpel, then removing one piece of plating after another. She looked up at Jade when she was done, then nodded at the green alien girl, who walked around the table to Sakura's head.\n\nThe Nymph raised her slender fingers to the cyborg's mouth then gently pried her lips apart, so she could slip in her first two fingers. They began to pulse shortly afterwards, as Jade began to pump John's cum into their patient's belly, and they could all see Sakura's abdomen start to swell as her stomach expanded.\n\nJohn closed his eyes so that he could focus on the compartments in his mind, immediately spotting the bright glow radiating from Jade. He watched in fascination as another compartment suddenly appeared in the row underneath Alyssa, but this one differed from the others, in that there was no link between the girl and his Matriarch. The figure representing Sakura started to glow as Jade filled her up, a warm nimbus of light emanating from the unconscious girl's rounded stomach. \n\nSakura's body was swathed in a riot of injuries, and now that he was actively linked to her, they were highlighted in bright red, bringing them to his attention. In addition to the decades old surgical wounds, she also had a series of nasty lacerations across her shoulder, made up of four parallel, jagged slashes into her flesh. The skin had been scorched and burned around the gouges in her flesh, further increasing the severity of the wound. Finally her face was a mangled mess, with a smashed nose, shattered cheekbones, a broken jaw, and fractured right eye socket. He remembered the savage beating that Alyssa had delivered, and he winced subconsciously as he examined the aftermath.\n\nSurveying the extent of the damage to her body, he started to have doubts that he was going to be able to heal all her injuries in time. The last thing he wanted to do was to give her a third dose of cum, which would bind her to Alyssa and to him permanently. He could feel the gentle draw of power as he started healing Sakura, starting with the sallow frostbitten skin around her abdomen, as well as the neat incisions that Rachel had just made to remove the armour plating. He overheard Dana talking, so he opened his eyes, pulling out of his mind-space so he could listen to what she was saying.\n\n\"-to remove the plating around her head next,\" Dana was saying to Rachel from where she stood at the medical console. \"If that bomb's still active, we can't risk fucking with it, not with those metal plates in the way. They'll interfere with the inhibitor field, and then Ka-blammo!\"\n\nRachel was already examining the cyborg's head, her fingers gently probing for the edges of each metal plate. She glanced up at the holographical representation of the cyborg that floated a foot above Sakura's body, where each of the implants was highlighted in blue. Nodding as she confirmed the locations of each subdermal plate, she replied, \"Alright, I'll remove the cranial plates next. Once they're out, let me know the strength of the inhibitor field, and if everything looks alright, I'll begin the cyber-lobotomy.\"\n\n\"I'm not sure I fancy hanging around for that,\" John whispered to Irillith. \"You're looking tired, shall we go have a rest?\"\n\nShe nodded, smiling at him gratefully, and with a sigh, she sagged against him. Scooping her up in his arms, he looked at Alyssa and said, \"Sakura's injuries are extensive. I'll tap Edraele for power first, but I'm going to need some energy from you and the girls at some point.\"\n\nAlyssa glanced at Irillith, then stepped over to her, and brushed her fingers through the Maliri girl's flowing white hair. \"She's exhausted, bless her. That fight with the CPU defences must have been nasty,\" she said sympathetically. Looking up at him, she continued, \"Irillith's tapped out, but the rest of us are fine. Just let me know, and I'll give you some more juice.\"\n\nHe leaned over to give her a brief kiss then smiled at her as he said, \"Tell me if you run into any problems.\"\n\n\"Will do,\" she agreed, she waved her hand at the door, then stopped herself and accompanied him to the door instead so she could press the button to open it for him. She laughed lightly, as she added, \"I've got so used to using telekinesis, I've started using it without thinking. I better save the energy though.\"\n\nShe waved him goodbye as he walked away from the bright glare of the operating lights, leaving Rachel to her delicate, painstaking work. Irillith had fallen asleep in his arms, resting her head against his chest, and he smiled as he looked down at her resting peacefully. Stepping out of the grav-tube, he walked down the corridor to their room, and then carried her over to the bed. She was wearing one of the long dresses she favoured, so he just slipped off her shoes and then tucked her under the covers.\n\n*Edraele,* he called out to the Valaden Matriarch, *Are you there?*\n\n*Hello John,* she replied after a long moment's pause. She sounded drowsy, and when he glanced at the ship's chronometer, he realised it must have been late on Valaden.\n\nHe sent her an apologetic smile, as he said, *I'm really sorry I woke you, but I'm healing a badly injured woman, and I'll need as much psychic energy as you can spare.*\n\n*I'll be glad to assist,* she replied, stifling a yawn. \n\nJohn immediately felt a surge of power flowing through him, and he began to direct it accordingly, mending Sakura's shattered face. He could sense Edraele had given him everything she could, so he wished her a good night, and she fell straight back to sleep. Sitting on the bed, he leaned over to stroke Irillith's long white mane, and she murmured something in Maliri under her breath as she slumbered.\n\nHe was about to lie down next to Irillith, intending to get some rest while he focused on healing the badly wounded girl on Deck Seven, when he suddenly sat bolt upright and cursed. With everything that had happened, he'd completely forgotten to call Yamamoto back and let him know he was alright. Without Eito's warning... well, he still would have ended up getting shot by the tranquiliser gun anyway, but that wasn't the point.\n\nWalking quietly out of the room, he hurried along the corridor up to the grav-tube, then floated up to the Bridge. Faye was sitting up on the Command Podium, perched on his console, but she was alert this time, and greeted him with a friendly wave when he appeared on the Command Deck.\n\nJohn returned the greeting, and said, \"Sorry, Faye, I have to make an urgent call. Chat to you in a minute?\"\n\nShe waved him away with a beaming smile on her face, and he was pleased to see her looking so much more at ease. He turned left, then walked briskly to his Ready Room, hitting the button to gain entry. The doors swished open quietly, and he dashed over to his big leather chair behind his desk, activating the comm interface before he'd sat down. He scrolled down through the list of contacts until he found the surly swordmaster, then quickly swiped his hand across the man's name; Eito Yamamoto.\n\nThe call didn't go through for several painfully long minutes, and John huffed, guessing he was being forced to play the patience game because of some perceived slight. He waited for just over ten minutes, and was about to hang up, when his call was finally answered.\n\n\"Whad'ya want?\" Yamamoto slurred, as his dishevelled image appeared in the holographic vid-screen.\n\nThe man had obviously hit the bottle. Hard.\n\n\"It's me... John,\" he replied, not sure if his taciturn trainer had recognised him or not.\n\nYamamoto hiccupped, and grumbled, \"Can't be... dead.\" He was weaving unsteadily on his feet, as he stared at the vid-cam for the comms interface.\n\n\"No, I'm fine,\" John persisted. \"I just wanted to let you know, and to say thanks for the warning.\"\n\nYamamoto stared at him bleary eyed, then lifted a bottle of Saki to his lips and took an impressive swig. \"Musht be a ghost,\" he blurted out, then giggled to himself, laughing at his own joke. \n\nJohn could see he wasn't getting anywhere, and he decided to let the man sleep it off, resolving to call him the next morning. He said gently, \"You might want to call it a night, but I'll call you in the evening, give you plenty of time to recover. You probably won't remember this tomorrow, but I really am alive.\"\n\nHe reached for the comm interface, about to close the call, but Yamamoto's forlorn expression made him pause. Considering the man had been laughing only moments before, it was a shocking shift in mood, but being absolutely hammered could do that to a man. \n\n\"They don' leave people alive,\" Yamamoto mumbled, his face shadowed with grief. \n\nJohn stared at him in surprise, then leaned forward, and asked eagerly, \"You know this group of assassins?!\"\n\nYamamoto swayed as he nodded, mumbling, \"Fought one. He was good... but I was better!\" He tried to thump his own chest proudly, and the effort nearly knocked him over. He was obviously having trouble focusing as he glared at the camera on the comm interface, and said, \"Saved target's life... for one night anyway, spared ashashin... let get away...\"\n\nJohn frowned as he tried to understand the other man's slurred speech, and asked, \"You stopped an assassination attempt? You defeated the assassin, then let him live?\" \n\n\"Yesh. Out trainin' late, heard fight...\" Yamamoto replied, then his face crumpled, and he sobbed, \"So they killed me instead...\"\n\nShaking his head, John protested, \"You're fine Yamamoto! You aren't dead.\"\n\nHe shook his head slowly, tears streaming down his face as he answered, \"They came back... next night...\" his words became too slurred to really understand, but John heard him whimper, \"Tried to save them... Ayumi... my little Kimiko...\"\n\nJohn was stunned, and he blurted out, \"They killed who? Your wife and daughter?\"\n\nYamamoto sobbed brokenly, and replied, \"... And Eito too...\"\n\nFinally understanding, John felt a lump in his throat as he stared at the heartbroken man. It finally all clicked into place, and he felt overwhelming sympathy when he saw him so consumed with grief. \"I'm truly sorry, Eito,\" he said quietly. \"I'm going to hunt them down and make them pay for what they've done.\"\n\nThe drunk man stared at the camera, and slurred, \"Send them all to hell... they can join me!\" He suddenly looked very queasy, and John looked away as Yamamoto vomited all over the console. The screen flickered and died out a moment later, the call cutting out abruptly.\n\nJohn sighed as he stared at the 'Call ended' message. This group of assassins had clearly been operating for decades, leaving a trail of ruined lives in their wake, whether it was their targets or innocent bystanders caught in the crossfire. Yamamoto's obsession with killing suddenly became clear, and John was forced to agree with the drunken man's declaration that Eito Yamamoto had died that fateful night too.\n\nIt was yet one more reason to hunt the band of assassins down; at least, when they finally got an opportunity to do so. He still had the Dragon March Traitor to expose, Irillith's sister Tashana to rescue, and another visit to Maliri Space planned to refit the Invictus. John snorted with frustration, and recalled a time not that long ago when he was free to go where he wanted and do whatever he felt like.\n\nYamamoto's dark mood seemed to be infectious, so he decided to go and see Faye, knowing that the exuberantly happy sprite would cheer him up before he got too maudlin. He turned off the comm interface, and hauled himself out of his chair, then strode across the room, and out onto the Bridge. Faye looked up again when she heard the door open up, and she fluttered down off the Command Podium to greet him with a wide grin on her lovely face.\n\n\"Is everything alright?\" she asked him, her happy expression turning to one of concern. \"You look upset!\"\n\nHe waved her worries away as he climbed the illuminated steps, and replied, \"Just a bad call with a friend. He was dealing with some dark old memories.\"\n\nShe nodded soberly, her expression growing perplexed until she finally said, \"Sorry, I'm hopeless at this! I've no idea what to say to make you feel better.\"\n\n\"Don't worry, I'll be alright,\" he replied with a weary smile. He glanced up at the Sector Map, and the long sweeping arcs displaying the Invictus' sensors. Turning to Faye, he asked, \"Anything I need to worry about, Watch Commander?\"\n\nShe shook her head as she hovered at his shoulder, and when he slumped in the Command Chair, she sat daintily on the top of his Command console. \"There's been almost no traffic at all,\" she explained. \"Nothing military, and only a couple of freighters.\"\n\nHe nodded in thanks for her report, then looked at her curiously before he said, \"You seem a lot happier now. Are you still having trouble with that undeletable file?\"\n\nFaye gave him a warm, grateful smile as she exclaimed, \"-I- might be rubbish at knowing what to say, but your advice was great!\" She blushed a little, as she confessed, \"I watched you and Jade in the bedroom earlier. She looked so happy, it helped make the memories a little less painful. I still can't delete the file, but I don't feel so tormented by it.\"\n\nJohn was delighted his advice seemed to have helped her, at least a little, and he said, \"That's great news! I'm glad it's been getting easier to deal with. Perhaps when Sakura has been healed, and all trace of the assassin is gone, that might be enough to give you some closure.\"\n\nThe purple sprite let out a soft sigh, and she murmured, \"You're very kind. Thanks for helping me deal with this.\"\n\n\"You're part of my crew!\" he said cheerfully. \"It's my job to look after you.\"\n\nShe looked like she wanted to say something in return, but she bit her lip, and glided over to him instead. The tiny AI creature was only inches from his face when she stopped, hovering in place before him. Up this close he could see all the features of her lovely cute face, dominated by her huge, luminous eyes that stared at him intently. She didn't say anything, but leaned in and gave him a tender kiss on the cheek. He couldn't feel anything, but it was a sweet gesture nonetheless.\n\nHe smiled at her, as she gazed at him, but he started to yawn before he could say anything. \"Sorry,\" he apologised looking a bit embarrassed, \"The healing really takes it out of me.\"\n\n\"No need to apologise,\" she replied with a forgiving smile. \"You should probably get to bed and rest while you can. We'll be nearing our destination in a few hours.\"\n\n\"Can you call me when we're say... thirty minutes out from Iota-Leonis?\" he requested, glancing up at the map. \"That's when we started seeing wrecks last time, so that's probably the furthest out the Kintark forces can strike. If they aren't all focused on repelling the invasion that is.\"\n\n\"Of course,\" Faye chirped, her tiny gossamer wings fluttering away as she returned to her perch on the console.\n\nRising from his chair, he strolled down the steps as he headed towards the grav-tube. He stopped to give the helpful digital fairy a wave goodbye, and found her staring after him with a wistful look in her eyes. She sat up straight when he waved at her, her expression brightening as she gave him a cheery wave in return. Stepping into the grav-tube, she disappeared from his sight, and now that he was alone, he felt free to have a huge yawn. \n\nHe trudged wearily down the corridor towards the bedroom, checking Sakura's status as he did so. Rachel had removed the implant from her head, leaving a gaping cavity in the poor girl's brain. Now that he knew what he'd need to focus his attention on next, he reached out to Alyssa, and said, *I've been tapping into my own energy reserves to maintain the healing. Could you start feeding me energy too please.*\n\n*Sure,* she agreed immediately. *You get some rest, I'll wake you up if there's an emergency.\"\n\nJohn stripped off his clothes, then flopped down on the bed, trying to be careful not to wake up Irillith. Crawling under the covers, he turned on his side so he could watch her, and he tried to match his breathing to her slow rhythmic cadence. He felt his eyes getting heavy, and before he knew it, he was fast asleep too.\n\n***\n\nSoft lips brushed against his own, and John slowly opened his eyes to stare into a pair of beautiful angular violet orbs. He knew he'd been asleep, but he had no idea for how long. At that point in time he hardly cared, and he pulled Irillith over him as he rolled from his side onto his back.\n\n\"Good morning,\" he said, as he smiled at the beautiful blue-skinned girl.\n\nShe smiled back at him as she rested comfortably on his chest, and replied, \"It's a bit early, but strictly speaking you're right.\"\n\nHe peered around her long flowing white locks, and checked the ship's chronometer. It was now three in the morning, and he realised that he'd been asleep for several hours. \"Do you feel better after a rest?\" he asked her with concern. \"Alyssa thought you'd overexerted yourself a bit against the CPU defences.\"\n\n\"Much, thank you,\" Irillith replied. She rested her chin on her hands, which she'd crossed over his chest, and gazed off into the distance for a moment. When she refocused on him, she added, \"I was up against Maliri tech, and their programmed defences were much more sophisticated than anything I've faced before.\"\n\n\"Were they really that bad?\" he asked her curiously.\n\nShe hesitated for a moment then nodded. \"I assumed I was invulnerable in the cyber-realm after my other expeditions there, but after facing those Maliri sentinels...\" she replied, trailing off with a worried expression on her face.\n\n\"That doesn't sound good,\" he agreed, sounding alarmed. \"Could you really be harmed in the real world if you get badly hurt in the cyber-realm?\"\n\n\"I'm not sure,\" she replied, looking shaken.\n\nHe wrapped her in his arms, and stroked her back comfortingly, so she lay her head down and snuggled in against him. They rested like that for a while, with him caressing the lean, sleek muscles in her back. He looked down at her, but he could only see her flowing white hair from this angle, and wasn't able to see her beautiful face.",
        "\"Actually, that reminds me about something,\" he said, as he gazed at her.\n\nShe raised her head, putting it back on her folded hands, and asked, \"What's that?\"\n\n\"Athena asked me to sincerely apologise on her behalf. She said you weren't ready to project those Progenitor schematics like that, and she never meant to hurt you,\" he explained, passing on the apology as the radiant girl had asked him to. He studied Irillith's face as she frowned, then added, \"Was it really painful?\"\n\nShe nodded, and replied, \"It hurt like hell. It felt as though my eyes were being seared from the inside out.\" Giving him a wan smile, she continued, \"It was well worth it though. The new Progenitor tech will be invaluable.\"\n\n\"Just like you,\" he said with a smile. \"Thanks for all your hard work in shutting down that cybernetic CPU, and for acting like a portable projector for the secrets in Dana's head.\"\n\nShe laughed at his playful tone at the end, and said, \"You're very welcome for both.\" She hesitated for a second before adding, \"Although I'm not going to be upset if we have to wait a long time before the next big tech reveal.\"\n\nIrillith felt wonderful where she was lying against him. She'd stripped off her dress while he'd been asleep, and she felt soft and warm against him where her skin made contact with his own. He began to get hard, and she felt the heat from his cock under her svelte stomach.\n\n\"You got hurt, and it's my job to heal you girls when you get injured,\" he said to her flirtatiously, reaching down to rest his hands on her hips.\n\nHe could see the eager flash of hunger in her eyes, but she faltered as she said, \"I'd love that, but what about Sakura? Besides, we only have about twenty minutes until we reach Port Medea.\"\n\n\"Sakura isn't due to be fed for another four or five hours. Her body isn't used to feeding off my cum, so she'll still be carrying a stomach full for a while, and as long as she does, I can direct my psychic healing to repair her wounds. As for our imminent arrival, I promise to only make you climax once before I fill you up,\" he said in all seriousness.\n\nShe laughed, and said with a coy smile, \"How could a girl say no to that?\"\n\n***\n\nAlyssa, Calara, and Jade were up on the Bridge when John arrived. He was by himself, having left Irillith in bed with a blissful smile on her face as she cradled her sperm packed belly. Alyssa turned her Executive Officer's chair and smiled at him, her eyebrow arched as she asked, \"Been having fun?\"\n\n\"Just directing my healing powers where they're most needed, XO,\" he replied with a grin.\n\nShe laughed at that, the lovely sound echoing around the Bridge, as she said, \"Your dedication to your role is truly humbling.\"\n\n\"We all do what we can,\" he agreed as he vaulted up the steps and sat beside her in the Commander's chair. He glanced up at the Sector Map, and saw they were nearly at their destination, the glowing green path that plotted their route leading them directly to Iota-Leonis. \n\nAlyssa was watching him, and when she saw him looking up at the holographic map, she said, \"We'll be arriving in five minutes.\"\n\n\"There's a big fleet there,\" Calara informed him, gazing at the System Map for Iota-Leonis. \"I'm counting twenty-seven cruiser class or larger vessels, not including auxiliaries or supply ships. Maddox was telling the truth, the battlegroup definitely looks about the size I'd expect for the Dragon March Operations Commander.\"\n\n\"Thanks, honey,\" he replied, then glanced at Faye who was sitting on the Command console and asked, \"Any sign of hostile ships for the last few hours?\"\n\n\"Nope!\" the purple pixie replied energetically. \"I didn't see any wrecks either, it was pretty boring really.\"\n\nCalara had been listening to their conversation, and she spun her chair so she was facing them, then said, \"The Terran Federation must have dispatched space-lane cleanup teams to clear the debris.\"\n\nJohn nodded thoughtfully, and replied, \"Makes sense. If they've been directing big numbers of ships to the Dragon March, then they'd need the space lanes free of any obstructions.\"\n\nTurning to Alyssa, he asked, \"How's the surgery going? Have there been any problems?\"\n\n\"No problems,\" she replied, then asked him leadingly, \"Why don't you tell me how Sakura's doing?\"\n\nRealising what she was hinting at, John closed his eyes, focusing on the newly added compartment in his mind. He could still see the glow centred around her stomach, confirming what he'd said to Irillith earlier, and with the active connection between them, he was able to see all Sakura's current injuries. While he'd been asleep, the section of brain that had previously been surgically removed had now regrown, and the girl's battered face was now fully healed. Rachel had removed subdermal plating from Sakura's back, allowing her access to the artificial organs that had been implanted in the cyborg's body. It looked like the young doctor had already taken out the synthetic kidneys, connecting up external dialysis in their place, and was now working to excavate the cybernetic lung.\n\nHe could feel that steady draw of energy being pulled from him as his psychic healing ability worked to knit new flesh, gradually rebuilding her lost organs and repairing the incisions to her body. He had no direct control over the mental changes he had inadvertently made to the other girls, but he was fervently hoping that they weren't being applied to Sakura, and he prayed that was enough to prevent them.\n\n\"About half-way through,\" he replied when he opened his eyes. \"Seems to be going to schedule.\"\n\nSmiling at him, Alyssa admitted, \"Rachel gave me a status update a few minutes ago and basically said the same thing. Apparently removing the adrenal implant and the links to all the muscle groups is going to be the most time consuming operation, but she'll have to remove subdermal plating from each limb before she can work on those.\"\n\nCalara shuddered, and said, \"How people can voluntarily do that to their own body is beyond me.\" She quickly added, \"I know Sakura didn't ask for this, but I know some people do.\"\n\n\"Cybernetics are a quick, relatively easy way to turn yourself into a superhuman,\" John replied, thinking back to his time in the marines. \"I remember a few guys I served with getting cybernetic limbs. They were looking to give themselves an edge in combat.\"\n\nAlyssa nodded, looking thoughtful as she said, \"I saw plenty of gangers do the same thing. They didn't have much cash, so they could only afford really crude and ugly cyberware. They just wanted to make themselves tougher, so they didn't give a shit how fucking ugly it made them look.\" She let out a dry laugh, and added, \"Actually, looking like some horrifying monster was probably an added bonus.\"\n\nJade smiled adoringly at John, and her voice was full of reverence as she said, \"I much prefer your way of turning us into superhumans.\"\n\n\"Or SuperNymphs, in your case,\" Alyssa said with a grin, nodding her agreement.\n\nThe green-skinned girl's emerald eyes sparkled as she nodded, as did Calara's and Alyssa's for that matter.\n\nJohn smiled at her, and said, \"You'll get no complaints from me.\"\n\n\"Are you sure?\" Alyssa teased him. \"Definitely over all your self-recriminations about how you 'forced' us to become stunningly beautiful, intelligent, powerful women?\"\n\nHe sighed and held his hands up in defeat as he replied, \"You all seem happy enough, and I can't counter your arguments. Yeah, I'm fine with it.\"\n\n\"Good,\" she said simply, with a look of smug satisfaction on her face. She didn't need to look at the Sector Map, as she added, \"We'll be dropping out of hyper-warp in eight seconds.\"\n\nJohn blinked at her in surprise, and she gave him a playful wink which made him laugh. Calara replaced the Sector Map with the System Map, and the bright blue-white glow of the Class-O star appeared centred in the middle of the Bridge. Iota-Leonis had no habitable planets, but there were several gas giants orbiting the star, and he remembered shooting down the Kintark bombers that had attempted to blow up the gas mining facilities around those planets. Port Medea appeared to be in much better shape since the last time they saw it, with the previous damage now fully repaired. it looked serene as it orbited the crimson volcanic planet on the fifth orbital track around the star.\n\nWhat was shockingly new in the system, was the big Terran Federation fleet that was currently arrayed defensively around Port Medea. At the centre of the task force was a colossal Terran Federation Dreadnought, representing the pinnacle of humanity's shipbuilding craft. The massive behemoth was over three kilometres long, and its profile was dominated by the pair of huge singularity drivers built into the topdeck. Although the ship was practically fresh out of drydock, now that it appeared in the Tactical View, they could see it was pock marked with light battle damage.\n\n\"It's the 'Thor's Hammer',\" Calara informed him, her expression filled with awe. \"We helped build that!\"\n\n\"Yeah, and got paid handsomely for it too,\" Alyssa agreed, recalling the Tyrenium deals John had made.\n\nHe smiled at her, and said, \"Just playing my part in the war effort.\"\n\nThey saw a battleship on the outskirts of the system move to approach them, flanked by several cruisers, a half-dozen destroyers, and dozens of fighter wings from the combat air patrol. A light on Alyssa's console flashed, indicating an incoming call, and she quickly pressed the button to open a communication channel with the big vessel. The viewscreen flickered to life and John recognised the older Asian woman in a Navy Officer's uniform who appeared in front of them.\n\n\"This is Commodore Sasaki on the Battleship Artemis, please identify yourself, assault cruiser,\" she requested, following strict Terran Federation hailing protocol.\n\nJohn was fairly sure she must have recognised his ship, but he followed protocol as he replied, \"This is Rear Admiral John Blake on the Invictus, it's good to see you again Commodore Sasaki.\"\n\nSasaki blinked in surprise, and she sounded astonished as she exclaimed, \"Good Lord, you're a Rear Admiral now?! You'll have to let me know your secret! I saw the award ceremony on TFNN, and was expecting to greet a fellow Commodore...\" She suddenly realised with a start that he now out-ranked her, and she snapped a sharp salute as she said, \"Congratulations on your promotions, Sir.\"\n\nHe smiled at her, and said, \"Thanks, Commodore.\"\n\nBefore he could continue, she looked apologetic as she interrupted, saying, \"The situation has changed in the Dragon March, Sir. As of oh-eight-hundred this morning, the Terran Federation formally declared war on the Kintark Empire. Iota-Leonis is now a highly restricted area, and I must ask you your business here. If you aren't able to supply a satisfactory answer, I might be forced to impound your vessel.\"\n\n\"That won't be necessary, Sasaki,\" John replied sharply. \"I'm following orders from Admiral Devereux, and I have urgent business with Admiral Lynton.\"\n\nThe Terran Federation officer nodded, smiling at him apologetically, then glanced at one of her Bridge officers. \"Confirm that please, Commander Patel,\" she said to the dark-skinned man.\n\n\"At once, Commodore,\" he replied, as he put his hand to his headset, and contacted the Dreadnought.\n\n*Should we be worried?* Alyssa thought to John, sounding alarmed. *I'm fairly sure we don't want the ship impounded.*\n\nHe glanced her way, and replied, *I'm hoping Lynton will be curious enough to find out what we want before trying to have us arrested. Saying that, obviously we won't be handing over the Invictus, so get ready to take us out of here if we need to run for it.*\n\nJade looked over her shoulder at the Command Podium, and gave John a surreptitious nod as she heard Alyssa's telepathic warning. His eyes flicked to hers, acknowledging the gesture, and she returned her attention to the Invictus' flight controls, hands at the ready to spring into action.\n\nWhile they waited for Commodore Sasaki's Communication's Officer to confirm their orders, she said, \"That's a radically different paint job on the Invictus, Admiral. I didn't recognise your ship when you jumped in-system.\"\n\nHe smiled at her to mask his nervousness, and replied, \"My crew kept telling me the black hull didn't set the right impression. It took a little getting used to, but I must admit they were right.\"\n\nShe returned his smile, as she said with a twinkle in her eye, \"It's certainly much more fitting for the 'Lion of the Federation'.\"\n\nHe flushed a little at her playful teasing, and said, \"Yes, Admiral Devereux got a bit carried away there.\"\n\nCommodore Sasaki shook her head, and said, \"Forgive me, I wasn't trying to embarrass you. You made a huge difference here, Admiral. We wouldn't be able to launch this counter-offensive if you hadn't intervened and saved Port Medea.\"\n\nAround the Bridge of the battleship Artemis he could see the other crew watching the conversation intently, and he spotted them nodding their agreement. \n\n\"We were glad to be in a position to assist,\" he said magnanimously.\n\nSasaki smiled at him, then said, \"It's a shame you aren't-.\"\n\n\"Sorry to interrupt, Commodore,\" Commander Patel said, cutting her off. \"Admiral Lynton wishes to speak to the Lion.\" The man turned to look up at the view-screen and nodded to John respectfully.\n\n\"I'd better let you go, Admiral,\" Commodore Sasaki said to him. She gave him a crisp salute, and said, \"It was good to see you again, Sir.\"\n\n\"You too, Commodore. Thanks for your assistance,\" he replied, then glanced at Alyssa who closed the call.\n\nThere was another flashing light on her console, and she went to press it, but her finger hovered over the button, as she said, \"Here we go. Are you ready?\"\n\n*I might need your help here, Edraele,* John called out to his second Matriarch.\n\nThe Maliri woman's voice was calm and soothing as she said, *It's alright, I'll be listening to your thoughts. I'm ready to advise you when necessary.*\n\nFeeling relieved, he nodded to Alyssa who pressed the button to accept the call. The viewscreen flickered for a moment, before solidifying into the image of the Terran Federation emblem. Underneath the image of the sword flanked by wings, pointing to a star, the words \"Secure Channel\" glowed brightly in bold red text.\n\n\"This is Admiral Gabrielle Lynton. My apologies for the lack of vid-feed, our comm array was damaged repelling a Kintark assault on Port Medea,\" a clear, well-spoken voice said, the pleasant tones echoing around the Bridge of the Invictus. Her tone turned curious as she asked, \"What are you doing in the Dragon March, John?\"\n\nHe was surprised at the informal way she addressed him, and replied, \"I actually have urgent business with Fleet Admiral Buckingham. Captain Maddox had no idea where he was, so he suggested I contact you, Admiral.\"\n\nHe could hear her smile as she said, \"Call me, Gabrielle, please, there's no need to stand on ceremony. I'm well aware of your supposed retired status, and Lynette's attempt to turn you into a Public Relations puppet.\" She paused for a moment, then sounded confused as she added, \"We only authorised your promotion to Commodore though. What's all this about you being a Rear-Admiral?\"\n\nHe threw a surprised glance at Alyssa, who looked equally shocked by the friendly Terran Federation Admiral. \n\n*It appears there's bigger games being played here,* Edraele cautioned him. *I'd advise caution.*\n\nJohn glanced up at the Terran Federation logo, then said, \"Terra was attacked, Gabrielle. A rogue AI fleet headed straight for the Capital from the Beta-Persei system. It assaulted the moon, but I managed to stop it from destroying Terra itself.\"\n\nThe Admiral sounded furious as she blurted out, \"I thought we'd shut that project down?! Fucking R&D division... I'll see Von Brandt hanged for this!\" She was silent for a long moment, before she continued, \"I haven't seen anything on the Network. Is Lynette suppressing the news?\"\n\nJohn wasn't sure how to respond after her sudden outburst, so he answered honestly, and said, \"I believe so. The AI fleet caused a lot of structural damage to orbital facilities, and it also bombarded the Moon, so casualties must number in the high tens of thousands at least. I think Admiral Devereux is trying to keep it quiet, but with that much destruction, I'm not sure how long it'll be before the news is leaked.\"\n\nAdmiral Lynton sighed, and said quietly, \"It seems like I owe you a big debt, John. I have family on Terra.\"\n\n\"You're welcome, Gabrielle,\" John replied, still feeling strange about being on first name terms with a high ranking member of the Admiralty. \"Our business with Fleet Admiral Buckingham is really quite urgent though, so if you could let me know his location, you can consider any debt paid in full.\"\n\nHer voice was filled with regret as she said, \"I'd love to help you, John, but the Fleet Admiral is in Kintark territory. I'll need to confirm with his chief of staff before I can disclose Buckingham's location in an active war zone.\" Her tone brightened as she continued, \"While we're waiting for authorisation, a phenomenal opportunity has presented itself that someone with your skills will be able to assist with.\"\n\nHis eyes narrowed as he asked warily, \"What did you have in mind, Admiral?\"\n\nShe sounded excited as she said, \"Do you remember that Kintark Carrier Captain you captured? A Prelate Jarganth?\"\n\n\"Yes, I remember, what about him?\" John replied, not sure how he could be relevant.\n\n\"After some persuasion, he's started to become co-operative in providing useful intel for the war-effort. The Prelate has given us the location of the staging base the Kintark have been using to launch their raids into the Dragon March. It's hidden in a Nebula not that far into Kintark territory, but I don't have enough forces at my command to be able to defend the Dragon March and launch a raid too. Any offensive fleet I assembled would have to be big to fight through the border forces,\" she said as though she was hinting at something.\n\n\"So how could I make a difference?\" John replied, sounding wary. \"I'm only commanding a single assault cruiser.\"\n\n\"There's no need to be coy, John,\" she said to him sounding quite self-assured. \"We're aware you've heavily upgraded your vessel with a FTL drive from the Ashanath. At the hyper-warp speeds you're capable of, you'll be able to slip past any border forces before they can interdict you. Then you can strike at the staging base before they know what's hit them.\"\n\nJohn was stunned by her knowledge of his ship, but Edraele contacted him by telepathy, saying, *It's not surprising she knows about that, actually. You're usually in a big hurry to get where you're going, and make no real effort to keep the Invictus' hyper-warp speed a secret. I doubt she knows anything about the rest of the upgrades you've made though.*\n\n\"Alright, the Invictus is pretty fast,\" he conceded with some reluctance. \"But I won't exactly be able to assault a fortified starbase on my own.\"\n\n\"According to the Prelate it's basically a munitions and fuel dump with minimal static defences. The Nebula blocks sensors, so the Kintark know we'd never be able to find it, and have focused their defences in more vulnerable locations. You'll be able to race in there, hit them with their pants down, then get out before they can react. It won't even slow down your mission to visit the Fleet Admiral, as I can send you an Ultra-encrypted message with Buckingham's location through the temporary comm beacons in Kintark territory,\" she explained, her tone an equal measure of excitement and pleading.\n\n\"If this is so important, why don't you just order me to assault this base?\" John asked her curiously.\n\n\"We both know your operational status in the military is a grey area,\" the Admiral replied, sounding frustrated. \"If I ordered you to do this, you'd just claim you were retired, and refuse. That's why I'm asking you nicely instead. Please, John, this will make a huge difference to the Kintark's ability to launch counter offensives in the Dragon March.\"",
        "He stopped to consider her words, and was forced to admit that she knew him pretty well. He would have reacted exactly as she described if she'd started barking orders at him. Still there was one last nagging doubt that he had. \n\n\"What if this is a trap?\" he asked her, his tone conveying his doubts. \"If we get ambushed, we'll be stuck in Kintark territory, and left to fend for ourselves.\"\n\n\"You're wise to be cautious,\" she admitted. Sounding optimistic she continued, \"However I'm sure the intel is good. It all fits in with the pattern of raids and assaults we've been subjected to recently, and I'm confident the Prelate isn't lying to us.\"\n\nSomething about the way she said that made John suspect that Prelate Jarganth had been the subject of quite insistent persuasion techniques. Glancing at Alyssa and Calara, he replied to the Admiral, \"Can you give me a moment to confer with my crew, Gabrielle. Most of them are civilians, so I'll need to discuss it with them before I give you my decision.\"\n\n\"Of course, John. Take as much time as you need,\" she replied indulgently.\n\nAlyssa muted the comm channel, and John blew out his breath before he asked, \"Alright girls, what do you think?\"\n\nCalara had already brought up the Sector Map, and was currently examining Kintark territory. Before the recent conflict, the Kintark Empire had open borders with the Terran Federation, and a significant amount of trade had been done by enterprising merchants. The Kintark systems were fairly well mapped, and the Latina had already zoomed in on a compact Nebula a short distance into Kintark Space.\n\n\"I bet the base is in the 'Mar'Katrach Nebula',\" she said, pointing to it on the map. \"It would be the perfect staging ground for mustering a fleet to launch an attack into the Dragon March.\"\n\n\"With our long-range sensors, we'll be able to steer well clear of any Kintark forces,\" Alyssa said, looking thoughtful. \"Considering how fast we are, they'd never be able to get close enough to interdict us.\"\n\n\"Until we enter the Nebula where the sensors won't work,\" John reminded her.\n\nAlyssa winked at him, and said, \"Actually, Dana said that's not strictly true; for us at any rate. Terran and Kintark sensors would be disrupted so badly they'll be useless, but our sensors are radically advanced, and we'll just lose some of our range.\" \n\nHe nodded thoughtfully, then looked around at the girls on the Bridge, and asked, \"Does anyone have any strong feelings either way?\"\n\n\"I'm happy to go wherever you take us!\" Faye exclaimed with a cheerful smile.\n\nAlyssa smiled at the tiny creature, and said, \"Dana, Rachel, and Irillith all feel the same way.\"\n\n\"I'll follow you anywhere,\" Jade said emphatically, her eyes full of reverence for him.\n\nCalara nodded, but she also said, \"I definitely think we should do this. If the intel is good, we'll cripple the Kintark's ability to quickly resupply near the Dragon March.\" She gave him a confident smile as she added, \"Even if it turns out to be a trap... it'll take at least a battleship to provide any real challenge for me and the Invictus.\"\n\n\"How about you, XO,\" he asked Alyssa.\n\n\"I agree with you,\" she said gazing into his eyes. \"We don't want to get embroiled in this war, but we've got a lot invested in the Terran side, and if we can make a difference we should help. Besides, it shouldn't prove dangerous considering how powerful the Invictus is now, and we can always escape if we have to...\"\n\n\"And it brings us one step closer to the Fleet Admiral, whilst earning us some goodwill with Admiral Lynton,\" John finished for her, revealing the last of his own thoughts. Turning his mind to the last of his advisors, he asked, *Edraele, what's your opinion?*\n\n*I can't disagree with your reasoning,* she replied, although her tone was full of caution. *But be very careful dealing with these Admirals. You can't get to this kind of rank without being accomplished at manipulating people. You'll probably find there are factions vying for power within the Admiralty, and until you find out the lay of the land, you might accidentally end up making enemies amongst the different power groupings. It sounds like Admiral Lynton initially thought you were Admiral Devereux's pawn, and she could be trying to usurp her influence over you.*\n\nHe nodded, then said, \"Thanks everyone for the vote of confidence and the sound advice.\" He glanced at Alyssa, and added, \"You can reopen the call.\"\n\n\"Hello again, John,\" Admiral Lynton said to him as soon as the secure comm channel was open again. Her tone was hopeful as she asked, \"Have you made your decision?\"\n\n\"I have,\" he replied decisively. \"We'll destroy this base for you.\""
    ],
    "authorname": "Tefler",
    "tags": [
        "teenager",
        "swallow",
        "cum inflation",
        "psychic healing",
        "regeneration",
        "harem",
        "cyborg",
        "cybernetics",
        "dragon march"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-62"
}