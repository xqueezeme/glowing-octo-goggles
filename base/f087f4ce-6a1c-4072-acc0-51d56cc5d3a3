{
    "title": "Lilith's Emporium: Inner Demon",
    "pages": [
        "Hello again, this story is based on a request I had from a fan recently with my own twist on the idea. I hope he and all of you enjoy it.\n\n*****\n\nGwen was driving home from work in the rain one night. It was hard for her to see and the rain was so hard she knew she had to pull over until it stopped. Her glasses kept fogging up as well which wasn't helping as she already had a hard enough time seeing in the dark but the only light she could see was this little shop up on her right-hand side that looked like an old general store on the front of an old house. The lights were on so she thought maybe they were still open so she pulled up out front if it.\n\nJust barely able to see through the water dripping down her windshield but she could see a sign that said \"open\" so she turned off her car and ran for the door. Once she was inside she started to look around and was a little freaked out by what she saw. There were strange looking statues that seemed to be staring at her. There was a shelf filled with strange crystals and she also saw a shelf with plants on them. At first glance they looked like strange cucumbers until she noticed they looked like something else completely which made her tilt her head a little confused by the green penis plants.\n\n\"Hello there?\" Nessira said walking over to greet her customer.\n\n\"Oh, hi, you aren't closing are you?\"\n\n\"Not at all, trying to get out of the rain I take it?\"\n\n\"It's raining like crazy out there, but yeah if you don't mind.\"\n\n\"Not at all, would you like a towel?\"\n\n\"No its alright, I'll dry.\"\n\n\"Nonsense, here you go,\" Nessira said handing the woman a dry towel.\n\n\"Thanks, you sell towels here?\"\n\n\"No, we have a massage parlor in the back so we have them handy.\"\n\n\"Massage, what kind of shop is this?\"\n\n\"This is Lilith's Erotic Emporium.\"\n\n\"Erotic? At first glance I thought it was a General store or something, what is all this stuff anyway, doesn't seem like the usual sex shop.\"\n\n\"We are far from the usual, here we deal with sex at a primal and even spiritual level, it's not just about the pleasure of the body, it's about the pleasure of the soul, what someone really needs.\"\n\n\"Uhuh, well that's... Fascinating?\"\n\n\"What are you looking for today?\"\n\n\"Oh, I'm not, just trying to get dry is all.\"\n\n\"Oh I don't think so, every customer who has entered this shop has left with something.\"\n\n\"Maybe I'll be the first to disappoint you.\"\n\n\"There it is, disappointment,\"\n\n\"Excuse me?\"\n\n\"You used that word, that specific word, that tells me you are used to disappointing people, and also used to disappointment.\"\n\n\"Um, no, that doesn't sound like me.\"\n\nNessira began to look her over. She was not an ugly girl but she didn't seem to be very confident about her looks. He breasts were small, almost flat which she knew had to be an issue for her self-esteem. Her dirty blonde hair was a mess as well and she could see the split ends. The Glasses Nessira liked as it reminded her of a naughty librarian fantasy she does with Patrick but the more she looked her over she saw a woman who didn't even try to make herself look good despite how attractive she was already.\n\n\"I think I know what you need,\" Nessira said walking over and picking up a jar filled with a slimy liquid that seemed to be a mix of both black and red.\n\n\"What the hell is that?\"\n\n\"You wouldn't believe me if I told you.\"\n\n\"Okay, then what am I supposed to do with it?\"\n\n\"That's the fun part, anything you want!\"\n\n\"That doesn't make any sense,\"\n\n\"It can be used in a bath, it can be used as a lotion, it can even be used to... Well, you know.\" Nessira said looking down at Gwen's crotch.\n\n\"Oh, that's strange,\"\n\n\"It is but trust me, once you let this stuff touch your skin, you will never regret it.\"\n\n\"So you are selling me a jar of goop?\"\n\n\"I am helping you solve your problems.\"\n\n\"How so?\"\n\n\"Listen, here at Lilith's we have a 100% satisfaction guarantee, if you are not satisfied with your purchase you will get a full refund or something even better to help you.\"\n\n\"I think I'm all set.\"\n\n\"I'll tell you what, it is yours for $5, and if you aren't happy I will give you a $10 credit.\"\n\n\"Wow, that sounds like a great deal, but still what can it really do for only $5?\"\n\n\"I try to give people what they need, it's not about the money here, it's about sexual satisfaction.\"\n\nGwen stood there looking at the jar with the strange slime inside. For a moment she thought she saw it move on its own which was strange but she convinced herself it was the way Nessira moved the jar. She stepped closer and took the jar from her and examined it closely. The substance inside was unlike anything she had seen before. She reads a small label on the side but it's hard for her to understand.\n\n\"Viri daemonium?\" Gwen asked confused.\n\n\"It's Latin.\"\n\n\"What does it mean?\"\n\n\"Do you really want to know?\"\n\n\"Yes if you don't mind.\"\n\n\"Okay, it means slime demon.\"\n\n\"Slime demon, really?\"\n\n\"Its just a name, most of the stuff in this store has Latin names, I wouldn't worry too much about it.\"\n\n\"This is just weird though.\"\n\n\"Well the rain is letting up, so do you want to leave with this jar or not?\" Nessira said as Gwen stared at the strange goop in her hands.\n\n------\n\nGwen finally got home to her tiny apartment and placed down her pocketbook and a bag labeled \"Lilith's Erotic Emporium\" on her table. She felt silly for letting that woman talk her into buying a jar of goo but the price wasn't bad and she knew she could return it if she needed to. She took out the jar and placed it on the table before sitting down and staring at it.\n\nThe mix of black and red that didn't seem to mix together seemed strange to her. Like water and oil almost but not exactly. She was almost afraid to touch the stuff as it didn't look like any sort of lotion she had seen before. She pulled the jar a little closer opening it up and looking inside. She smelled it but there was no strong scent coming from it, just a light scent that wasn't unpleasant as she stuck two fingers into the jar taking a small amount of the goop in her hand and rubbing it between her thumb and finger.\n\nThe stuff was warm and definitely slimy but it felt nice. It was thick and almost felt solid from time to time like it would harden then thin out. She smiled a little as she played with the little glob in her hand wondering what she could do with it. It didn't feel like something that would absorb into her skin so she wasn't sure why she was told it could be used as lotion.\n\nShe began rubbing her hands together a little and to her surprise it did seem to absorb into her skin getting thinner the more she rubbed it. She noticed her skin seemed shinier and smoother as she continued to rub it in until it was gone. There was no black or red residue and her skin looked amazing after like it was five years younger.\n\n\"Huh, isn't that something.\" She said to herself as she closed the jar and went to get ready for bed.\n\nShe washed up and laid down quickly falling asleep. She was resting peacefully at first until she began to have strange dreams about halfway through the night. She found herself in a dark tunnel barely able to see anything. It was frightening a little as there seemed to be darkness in one direction and light in the other but she felt like there was something in the darkness watching her, even following her. She stopped and looked as she saw a figure standing in the darkness walking towards her slowly. She couldn't make out much except for what looked like long flowing hair as it moved. She got the feeling it was a woman but she couldn't make out any real features except what looked like vines or tendrils coming off of her. \n\nGwen turned and headed for the light but the tunnel seemed unending. The strange part was she was running and her pursuer was only walking but still seemed to be catching up to her. She felt as if she was in a horror movie unable to escape the killer that was stalking her. She could hear he walking up right behind her and she began to get scared. Suddenly she felt something grab her wrist wrapping around it like a liquid before she was held up against the wall while her other wrist was grabbed as well. The woman had her pinned and stepped into the light in front of her. She was the same color as the strange liquid she had bought in that jar earlier that night. Her hair was wild and crazy almost looking more like tendrils but her face seemed quite smooth and beautiful even.\n\n\"Do not be afraid of me Gwen.\" She said before stepping a little closer.\n\nHer voice was strange almost as if it was multiple voices speaking at once. She could not escape but as scared as she was she almost didn't want to. The woman even though looked like some sort of unworldly creature didn't seem to want to harm her but still, Gwen was nervous.\n\n\"Please calm yourself, Nessira sent me to help you.\"\n\n\"Help me, with what?\"\n\nShe stepped a few inches closer before she said \"everything.\" Before she pressed her lips to hers giving a very gentle kiss.\n\nGwen could feel her tongue wiggle around in her mouth and was actually starting to enjoy it a little. One of the other tendrils started to slide up the side of her leg before gently brushing against the front of her panties. The feeling made her body jerk as she continued to tease her but not actually enter her. Gwen was going mad wanting her to enter but she would not.\n\n\"What are you waiting for?\" Gwen said breaking the kiss.\n\n\"I am waiting for you.\" The creature said before Gwen shot up out of her sleep covered in sweat and confused by what had just happened\n\nGwen was very confused as she rolled out of bed and put on her glasses before she headed for the bathroom. She turned the light on and splashed some water on her face trying to calm herself down a bit. She looked at her hands which still looked smooth and the asking seemed flawless. Even a little scar she had on her thumb from cutting it when she was 15 seemed to be gone.\n\nGwen stepped out to look at the jar still sitting on the table where she had left it. She was still tired but she felt this urge to open the jar. She stared at it for a moment before she picked it up and brought it to the bedroom with her placing down on her nightstand. She remembered something Nessira had said about using it on herself so she began to think maybe she should as she was very turned on by the strange dream she had. She opened the cover and dipped her two fingers in again taking out a glob. It felt warmer than before and much more slippery as she rubbed it between her fingers again. She found herself getting turned on at the thought of masturbating with this stuff which just seemed strange all around but soon she got comfortable back in her bed leaving the jar on the nightstand with the cover off.\n\n\"This is so fucked up.\" She said to herself as she slid off her panties with her clean hand.\n\nShe looked at the glob of goo in her fingers before she slid her hand down and began to rub her opening with the slime. It felt strange at first but she let out a gasp at the sensation. It started out very slippery and smooth but then she noticed it was starting to get sticky. It was getting hard for her to continue and she was mad that the stuff wasn't working as well as she had hoped until she noticed something strange. The goop had fallen from her fingers as she noticed them clean as can be but when she looked down she noticed the stuff had become like tar almost and part of it was sticking to her clit. She tried to pull it off but it didn't seem to want to let go and the strangest part was she could feel it squeezing and even massage her clit which was strange and wonderful at the same time. The rest of it was inside her like slimy tendrils that felt like it was moving and attaching itself to all of her erogenous zones inside her pussy.\n\n\"Oh, Oh God...\" She said as this strange liquid began to pleasure her intensely whether she wanted it to or not.\n\nThe little red and black slimy tar was attached to every g-spot down there and was massaging her inside and out as she bucked her hips frantically as it was greater than anything she had ever felt before. Her hand grabbed her bed sheets gripping them tightly as her moans turned into more like frantic yells of ecstasy as it wouldn't stop. What she didn't notice at the time was the liquid in the jar starting to become more like tar as it started to climb out of it and start crawling towards her. She was too distracted to notice or care what was happening until it grabbed her wrist causing her to look down as it began to spread up her arm and across her skin.\n\n\"What the... Fuck!\" She said as it spread across her chest and down her other arm before sliding down her stomach. \n\nThe goo began to slide up the back of her neck and even start to coat her hair but left her face open as the rest of it slid down over her pelvis and down her legs all the way to her toes. She felt strange but the pleasure continued as she began to feel the slime do the same thing to her nipples that it was doing to her clit. Her body was covered with this stuff and she began to resemble the creature she saw in her dream as the slime began to enter ever hole in her body sending waves of orgasmic delight all over her until she let out a loud scream as every nerve in her body exploded with pleasure before she fell to the bed and past out from exhaustion.\n\n----\n\nThe next morning Gwen awoke to the sound of her alarm clock going off. She glanced over and realized she was running a few minutes late as she jumped out of bed before she looked all over herself remembering what had happened during the night. Her skin was normal and there was no sign of black or red slime anywhere. Her panties were back on and she was still wearing the same t-shirt she had been all along.\n\nBelieving it was a dream she ran to the bathroom and turned on the shower before brushing her teeth. She hurried as fast as she could spitting one last time before she went to hop in the shower. As she rubbed soap on her body she suddenly noticed her breasts seemed bigger. They were more plump and shapely and that was very strange because she knew boobs didn't just grow overnight. She started to wonder if the cream she had been using to make her breasts bigger had finally kicked in. She had bought it online but didn't actually expect it to work but it was the only explanation she could think of.\n\nShe jumped out and dried herself off before running back the bedroom and finding her work uniform which was a green shirt with a store logo on it. She hated her retail job but she needed a way to pay the bills so it was what she had to do for the time being. She found her work pants and tied her hair up in a tail not noticing the red tips against her dark blonde hair before she grabbed her keys and ran out the door.\n\nAs she drove she found herself having difficulty seeing with her glasses on. They were hurting her eyes to the point she had to take them off only to notice that her vision was perfectly fine. In fact, it was better than it ever was even with glasses which also confused her because there were a lot of strange changes to her today and it was freaking her out a little.\n\nIt was a slow day as Gwen stood at the service desk waiting for customers. The only few she had dealt with so far were complaining people who tried to return items without their receipt which always made her mad but there was little she could do about it. She was stuck between the company policy that basically told her she couldn't help them unless they get mad which pissed her off to no end.\n\n\"You know Gwen,\" she suddenly heard her manager Eric say behind her. \"You know the policy on dying your hair, you are at the front of the store, the first person everyone sees and now you look like some punk rock girl.\"\n\n\"What are you talking about?\" Gwen asked as she saw the red streaks in her hair after pulling her tail around to see \"what the hell?\" \n\n\"This is your first offense so I will let it go but make sure it doesn't happen again.\" He said before he walked away leaving Gwen there confused about what had happened to her hair.\n\nThere was a customer at her counter as she went over to help her. It was a woman she saw in there all the time who usually was a problem despite how many times she tried to help her. Gwen put on her fake smiled and walked over to see what she could do for her.\n\n\"Good morning, what can I do for you?\"\n\n\"I would like to return this.\" She said placing an empty package of chips on the counter.\n\n\"Sorry, you can't return food like this.\"\n\n\"They didn't taste right.\"\n\n\"Okay but still the bag is empty.\"\n\n\"I threw the rest away because I didn't want them.\"\n\n\"Fine, I still can't give you your money back!\"\n\n\"Well, then I want to speak to your manager!\"\n\nGwen could feel her heart starting to race a little as this woman was stressing her out. She clenched her fist a little bit before she went to pick up the phone her eyes turned a strange red color and she suddenly began to growl at this woman. Freaking out the woman backed away and ran out if the store.\n\nOne of Gwen's coworkers walked over and asked: \"what was that about?\"\n\n\"Watch the desk I have to use the restroom!\" She said turning and rushing towards the restroom before they could even respond.\n\nShe walked into the employee bathroom locking the door behind her as she went to the mirror splashing water on her face again. She knew something strange was going on as she began to look at herself seeing her expanded breast's, the red streaks in her hair, even her ass seemed more toned and she could see it all clearly without her glasses on.\n\n\"Do you like the changes I made?\" A strange voice suddenly said as she jumped not expecting to hear it.\n\n\"Who was that?\"\n\n\"We met last night, I trust you enjoyed yourself?\"\n\nGwen suddenly remembered being attacked and absorbed by the jar of slime before she said: \"Oh God, that wasn't a dream was it?\"\n\n\"No it was not, the bonding process is complete, I really enjoyed pleasuring you.\"\n\n\"Oh shit, where are you?\"\n\n\"I am inside you, you and I are co-existing together, does this bother you?\"\n\n\"A little bit actually yeah, what the hell are you?\"\n\n\"That would be hard to explain but the best way to describe myself would be what Nessira told you yesterday, a slime demon.\"\n\n\"A slime demon, wait I am possessed by a demon?\"\n\n\"No, I cannot control your body, but I can work with you and help you.\"\n\n\"But you're a demon?\"\n\n\"Please don't judge me by a simple title, I mean you no harm and truly want to help you,\"\n\n\"Help me? Holy shit, I am going crazy!\" She said as she started to panic a little.\n\n\"Please calm down Gwen, your heart rate is elevating quickly.\"\n\n\"Shit, this can't be happening!\" Gwen said ignoring her as she started to panic more.\n\nSuddenly Gwen felt something strange between her legs that made her knees wobble. There was a sudden pressure in her crotch and she began to feel her clit start to pulse a little. It was a very strange feeling but it actually felt very nice at the same time.\n\n\"What are you... Oh, God!\"\n\n\"You were stressing your body, this will calm you down.\"\n\n\"But I... oh shit...\"\n\n\"Do you wish for me to stop?\"\n\n\"I... Oh, Fuck!\" She said turning around and using the counter to hold herself up as her pussy pulsed harder until she felt a very strong orgasm rippled through her body almost making her collapse to the floor but she held herself up the best she could.\n\n\"Do you feel better?\"\n\n\"Holy shit! That was amazing!\"\n\n\"I am glad, there is so much I can do for you if you let me.\"\n\n\"I'm sorry but this, this is all just very strange.\"\n\n\"I understand, but please know I mean you know harm, I need you to survive and I want to make this as pleasurable for you as possible.\"\n\n\"Right?\" Gwen said trying to wrap her head around all of this, \"Do you have a name?\"",
        "\"It would be hard for you to pronounce.\"\n\n\"Try me?\"\n\n\"I really can't,\"\n\n\"Well I need to call you something,\" she said thinking a moment, \"how about Viri?\"\n\n\"Viri?\"\n\n\"It was the first word on the Jar, but your right it's...\"\n\n\"I like it, Viri, it sounds nice, please call me this.\"\n\n\"Okay will do... I need to get back to work so uh, we will talk about this later.\" Gwen said cleaning herself up before heading back out.\n\nShe was stopped by another coworker named Brad whom she had been friends with for a while and always had a bit of a crush on but never let on that she did. She saw him walking towards her and she got a little excited but what he had to say was a little worrying.\n\n\"Hey Gwen, Eric is looking for you, he wants to see you in the office.\"\n\nGwen got a pit in her stomach before she said: \"did he say what about?\"\n\n\"No, but you know him.\"\n\n\"Thanks, Brad, I'll tell you how it goes.\" She said before heading upstairs.\n\nShe walked into Eric's office as he held his hand out inviting her to sit down after closing the door behind her. He had some paperwork on his desk that she could quite see at her angle but she was starting to worry a little bit.\n\n\"So Gwen, I have to ask you, is everything alright?\"\n\n\"Um... What do you mean?\"\n\n\"Well you come into work today late, your hair has been dyed a color not approved in the handbook and you have gotten your first customer complaint.\"\n\n\"Complaint?\"\n\n\"Yes, a woman called and said she tried to return some food that had gone bad and said you growled at her?\"\n\n\"Growled? Have you ever heard me growl at a customer?\"\n\n\"Well, she was pretty adamant that you growled at her.\"\n\n\"I can't believe this!\"\n\n\"Yes, well, unfortunately, I am going to have to give you a written warning for all of this Gwen, three in one day is a bit much!\"\n\n\"But it's not my fault I...\" She stopped suddenly not sure how to explain herself.\n\n\"Well, then whose fault is it?\" Eric asked waiting for a response. \"How about you take the rest of the week off, get your stuff figured out and we will see you Monday, okay?\"\n\n\"Seriously?\"\n\n\"The DM asked me, don't worry you can use your personal time as well.\"\n\n\"Fine.\" She said getting up and leaving the office in a huff.\n\nOn her way down the stairs she ran into Brad again who asked: \"so how did it go?\"\n\n\"Well, I'm off until Monday.\"\n\n\"That sucks, I'll miss you.\"\n\n\"Well, we could... Never mind.\" She said walking past him.\n\n\"Wait, we could what?\"\n\n\"It's nothing, I have some things to take care of.\"\n\n\"Well how about I take you out to dinner tomorrow night?\"\n\n\"What, like seriously?\"\n\n\"Why not?\"\n\n\"It's just, kind of random, why now?\"\n\n\"I don't know, just felt like asking?\"\n\n\"I see, okay, see you tomorrow night then!\" She said with a smile as she walked through the door and headed for her car.\n\nThe ride home was silent as she was deep in thought about everything that had happened. She was excited that Brad finally asked her out but also worried because she had an unwelcomed guest inside her and she suddenly wasn't sure if Brad would even be safe around her.\n\n\"I will not harm Brad,\" Viri suddenly said\n\n\"Wait what? How did you?\"\n\n\"I can read your thoughts and you were wondering if I would be a threat to Brad, I would not do anything to harm someone you care about, I may feed off him if the situation arrives but that is all.\"\n\nGwen suddenly slammed on her breaks and pulled into a parking lot parking her car before she said: \"what do you mean feed?\"\n\n\"I need to feed in order to survive.\"\n\n\"Yeah I get that but what do you feed off of?\"\n\n\"I feed off of reproductive juices.\"\n\n\"Wait, are you telling me you feed off of cum?\"\n\n\"Exactly!\"\n\n\"So you think I am going to fuck Brad tomorrow night?\"\n\n\"I would not make you if that's what you mean, but should it happen I would take what I need.\"\n\n\"This is so fucked up!\"\n\n\"Why do you think I made you more sexually appealing?\"\n\n\"You made me hotter so I would fuck more?\"\n\n\"Yes, do you not like the changes I have made?\"\n\n\"That's not the point but, you've turned me into a slut!\"\n\n\"Do you not enjoy sex?\"\n\n\"Just shut up okay, I need to think,\" Gwen said as she got back on the road and headed home.\n\n\"I can enhance...\"\n\n\"I said shut up, please.\"\n\n-----\n\nGwen paced back and forth in her apartment trying to figure out how to handle all of this. She did this for hours and eventually started to get hungry so she went to the kitchen and made herself some dinner. She ate it in silence sitting at her kitchen table still trying to wrap her head around all of this.\n\n\"Okay, so what if I didn't want you?\" Gwen asked.\n\n\"What do you mean?\"\n\n\"I mean, what if I didn't want your help and I asked you to leave, would you?\"\n\n\"I... Do you want me to leave?\"\n\n\"Just answer the question!\"\n\n\"I have already bonded with you so if I were to leave I would die unless a powerful witch were to place me in proper stasis until I can find a new host.\"\n\n\"Of course you would,\" Gwen said sarcastically.\n\n\"Do you wish me to leave?\"\n\n\"No, I mean, I don't know, but we have to figure out a better system here because I don't want to fuck just random guys my whole life.\"\n\n\"I understand, if it helps you don't have to actually have their genitals inside you for me to feed.\"\n\n\"What do you mean?\"\n\n\"We could get it from someone differently than traditional sex.\"\n\n\"By force?\"\n\n\"Yes!\"\n\n\"So I start raping people?\"\n\n\"Actually about 2 blocks away there is someone attempting to rape a young woman as we speak.\"\n\n\"What? How do you know that?\"\n\n\"I can hear them, we could intervene.\"\n\n\"Then I'd get raped as well?\"\n\nSuddenly Gwen began to feel a little strange. She started to sweat and her heart rate began to climb as she stood up from the table. She looked at her hands and saw that black and red liquid start to seep from her pores and cover her whole body. It ripped off her clothes leaving her naked except for the layer of this strange substance all over her until she was covered everywhere except her face.\n\n\"What the hell?\" She said as her voice seemed different, almost sound like multiple people speaking at once similar to Viri's. She rushed over to the mirror seeing herself as her whole body was covered except her face but her eyes looked red and her teeth seemed sharper, also her hair looked like dread-locks and her fingers were more like claws. \"What the fuck did you do to me?\"\n\n\"This is one of the benefits of having me, you are now stronger and faster with all of my demonic powers for you to use.\"\n\n\"I look like something from a comic book!\" She said almost liking her new look seeing her breast's still showing almost alien looking nipples.\n\n\"Now would you like to go and stop a rape?\"\n\n\"I um, okay but how?\"\n\n\"Head for the window and jump, I will do the rest.\"\n\n\"What? I'm not jumping out the window!\"\n\n\"Please just trust me, I will not let anything happen to you.\"\n\nGwen was hesitant but turned and stepped towards the window and stepped onto the fire escape. She actually felt pretty badass covered in this demonic goo as she examined herself a little. She could hear a woman crying nearby and as she looked she could see the body heat of her and her rapist a few alleys over.\n\n\"This is so weird!\" Gwen said starting to like this form and getting comfortable.\n\n\"Now spread your wings and fly?\"\n\n\"My what?\" She said as two large wings sprouted from her back in the same slimy look. \"Wow, that's cool!\"\n\n\"Now, let's do this,\" Viri said as they jumped into the air and headed for the sounds of peril.\n\nIt was a quick flight before the landed on the edge of the roof right above them. Gwen had a pit in her stomach watching as this man made this woman fear for her life. She began to get angry thinking about all those women who had felt helpless against an attacker and Viri could sense this in her.\n\n\"Should we kill him?\" Viri said breaking the silence.\n\n\"I am not a killer, but I want to scare him, I want to scare him so bad he will be afraid to even try this on anyone ever again.\"\n\n\"We can do that easily, let's go.\"\n\nGwen smiled before she jumped down landing in the shadows behind them both. It was evening so they hid easily but she stood up and began to walk towards them.\n\n\"Ooh, the big strong man, is he having fun?\" Gwen said in her new strange voice.\n\n\"What the?\" He turned around to see a woman standing in the shadows. \"Better back off or you're next!\" He said holding up a knife.\n\nGwen wasn't sure who was exactly in control but she shot out a tendril that knocked the knife out of his hand and another that hit him in the chest and pinned him against the wall. The woman he was trying to rape looked up from the ground in horror as she wasn't sure exactly what she was looking at.\n\n\"Go home, he won't bother you again,\" Gwen said to her while still holding him against the wall.\n\n\"Uh...uh...\" The woman said struggling to her feet. \"Th... Thank you.\" She got out before she turned around and ran.\n\n\"What the fuck are you?\"\n\n\"He's all yours Viri,\" Gwen said as another tendril slithered out of her other hand and moved towards that man's crotch which was already open as his zipper was down.\n\nIt slid down his underwear and examined his half erect cock before it opened up on the end and engulfed it. The man wasn't sure what was happening but he started to enjoy the sensation. He was scared but it felt so good that he couldn't help but smile.\n\n\"Don't enjoy yourself too much,\" Gwen said with a smile as suddenly the slime tightened around his cock and around his balls.\n\nHe let out a scream as Viri forced her way into his penis and began to forcefully remove his cum making it extremely painful while at the same time pleasurable. His scream grew louder as he had orgasm after orgasm but still feeling pressure and discomfort as this creature sucked everything it could from him. \n\nGwen could feel Viri feeding off of him and it made her feel good as well. There was something strange about it as it felt like she was getting nourishment from it but also it was an enjoyable sensation as well. Viri was taking everything she could from this man knowing that Gwen wanted him to suffer a little for trying to harm some poor woman.\n\n\"Should I stop?\" Viri said snapping Gwen out of her enjoyment.\n\n\"Oh um, do you think he has suffered enough?\"\n\n\"If I take anything more from him it will be blood, but if I stop now it will still be a long time before he will be able to harm anyone with his sexual organ.\"\n\nGwen held him there still listening to his cries of pain wanting it to last a little longer until she finally stopped and retracted the tendril from his crotch but still keeping him pinned to the wall as he was almost crying in pain before Gwen says: \"The next time you think you can have your way with women, just remember I exist, and next time I won't go as easy on you!\" She said as she began to choke him a little and get close to his beaten up penis with one of her claws getting dangerously close.\n\nShe let go of him letting him fall to the ground before knocking him out. They suddenly heard sirens and saw the lights of a police cruiser pull up down the other end of the alleyway. As the two police officers pulled out their flashlights and headed down the found a guy unconscious with his pants down but no sign of Gwen.\n\nGwen watched from the roof above knowing the woman they saved must have called the police which was fine with her as long as guys like that weren't still loose on the streets.\n\n\"That felt really good, like I didn't expect it to feel that good,\" Gwen said.\n\n\"My host usually gets pleasure when I feed so I am not surprised you enjoyed that.\"\n\n\"It was hard to stop actually.\"\n\n\"I could have just killed him, then he would have never hurt anyone ever again,\" Viri said as they both watched on.\n\n\"I know, and I considered it but I can't let myself become a killer, no matter how much he may have deserved it.\"\n\n\"You are different from my previous hosts.\"\n\n\"Oh really?\" She said as they turned and headed home walking slowly along the rooftop \"How so?\"\n\n\"Most of them craved power, especially in a sexual way like I provide.\"\n\n\"Were they all women?\"\n\n\"No, you are my first woman.\"\n\n\"What? But you are female aren't you?\"\n\n\"Not exactly, I have a female form because it is easier to seduce men into bonding with me, but I am enjoying being with you, Gwen.\"\n\n\"But you said you fed on Semen?\"\n\n\"Which is easier to get from a male host for sure, which is why I am unsure why Nessira gave me to you.\"\n\n\"Could she have made a mistake maybe?\"\n\n\"Unlikely, she always has a plan, we just aren't always sure what it is.\"\n\n\"We?\"\n\n\"Me and the other beings in the shop.\"\n\n\"There are others?\"\n\n\"Many actually.\"\n\n\"Huh, this is getting interesting, but I am actually starting to enjoy your company Viri.\"\n\n\"I am glad, and I hope you don't mind me helping you with Brad.\"\n\n\"Wait, what did you do, well besides making me look amazing, thank you for that by the way.\"\n\n\"I increased your pheromone output when you were speaking to him, it affected his reaction to you.\"\n\n\"That's cheating isn't it?\"\n\n\"Are you angry?\"\n\n\"No, but let's see how tomorrow's date goes.\"\n\n\"It should be fun.\" \n\n\"Well, I don't know about that, but yeah let's hope.\"\n\n\"You really like him don't you?\"\n\n\"We are great friends, but there has always been something there, I just hope he didn't ask me out because you made me look this good.\"\n\n\"I don't believe that was the case with him, I think he has always liked you.\"\n\n\"Thanks, Viri.\"\n\n------\n\nThe next evening Gwen was trying on different outfits trying to figure out what to wear on her date with Brad. Because of the physical changes made to her some of her best outfits didn't fit comfortably anymore. She had also noticed her hair was now completely red which she was shocked to see at first but couldn't help but like it.\n\n\"Dammit, thanks to you nothing fits anymore!\"\n\n\"I'm sorry!\" Viri said sounding a little sad.\n\n\"No, I'm not complaining its just now I have nothing to wear.\"\n\n\"May I offer an alternative dressing?\" \n\n\"What do you mean?\" Gwen asked.\n\nSuddenly she noticed the goo started to seep from her skin moving around her before becoming thin and solid. Viri had formed a tight-fitting red dress around her with two straps over her shoulders that hugged all of her curves comfortably.\n\n\"Wow, that's a neat trick.\"\n\n\"I can do other clothes too if you like?\"\n\n\"That's awesome! Can you make it black, and maybe strapless?\" Gwen asked as her clothes changed according to her wishes. \"That is so hot!\"\n\n\"I am happy you like it.\"\n\n\"I love it, you're like my own personal wardrobe.\"\n\n\"Just one of the many things I can do, in fact...\" Viri said as Gwen suddenly felt her panties become coated in Viri's goo.\n\n\"What are you doing?\" She asked as she felt the slime start playing and tickling her private areas. \"Oh... Oh wow...\"\n\n\"Do you like your new underwear?\"\n\n\"Ok, stop that,\" Gwen said with a chuckle finding it hard to say no to Viri's advances.\n\nThey suddenly heard a knock at the door as Brad had arrived. Viri silenced herself as Gwen answered the door greeting him as he was blown away by her outfit.\n\n\"Wow, I wasn't expecting you to look so amazing,\" Brad said.\n\n\"Oh, uh yeah its new so I figured what the hell.\"\n\n\"Looks good to me, shall we?\"\n\n\"I'm all yours.\" She said as she took his arm and headed out.\n\nThe night was amazing as they went to a movie, followed by dinner where they talked about what they loved about what they had just seen. For the first time in a while, Gwen was having fun and enjoying herself. She and Brad had always gotten along after working together for so long that it almost felt natural that it would lead to this. Viri had kept silent all night letting Gwen enjoy herself and Gwen appreciated it greatly.\n\nAs the night drew to a close they were back at her place as Brad walked her to her door. She found herself a little turned on and had remembered something Viri had said about feeding off of him which had her both curious and nervous at the same time.\n\n\"Well, I had a lot of fun tonight Gwen,\" Brad said as they stood in the hallway.\n\n\"Me too, do you want to come in for a beer?\"\n\n\"Um, well I...\"\n\n\"Relax stud, we're both adults here.\" She said not waiting for his answer and opening the door leaving it open for him to follow.\n\nBrad was a little confused and even hesitant but he followed her inside closing the door behind him as he started to look around at her place. Gwen invited him to sit on the couch as she went and grabbed some drinks from the fridge before sitting down next to him.\n\n\"Hey Brad, I need to ask you something.\"\n\n\"Shoot.\"\n\n\"Why did you ask me out yesterday?\"\n\n\"What do you mean?\"\n\n\"Well, I feel like we've been playing this game for months now, what made you finally ask?\"\n\n\"Honestly, I don't know, it just didn't seem as scary I guess.\"\n\n\"Scary?\"\n\n\"Well we work together, it could end badly and just make things hard.\"\n\n\"Well, I don't think I'm coming back Monday.\"\n\n\"What, why?\"\n\n\"I just can't stand it anymore, this retail bullshit is taking its toll on me, time to move on.\"\n\n\"Oh, well I'll miss you.\"\n\n\"Well, you don't have to.\" She said leaning in and kissing him to his surprise.\n\n\"Woah, maybe we should take it slow?\" \n\n\"I think we've done that long enough don't you think?\"\n\n\"Are you drunk?\"\n\n\"Not enough that you should feel guilty.\" She said kissing him again when he finally started getting into it.\n\nThey savored each others taste for a few moments before a thought had crossed her mind before she stopped and said: \"wait, I need to um...\"\n\n\"No, you're right we shouldn't...\"\n\n\"What? Oh no, just wait here I need to go take care of something.\" She said kissing him again before heading to the bathroom. She turned on the light and looked into the mirror before she said: \"Viri?\"\n\n\"Yes Gwen I am here, I am glad you are enjoying Brad's company.\"\n\n\"Me too, but I have to ask you something?\"\n\n\"What is it?\"\n\n\"Well whatever you've done has worked, I want to fuck him so badly but...\"\n\n\"But what?\"\n\n\"After last night with that guy in the alley, is this safe for him?\"\n\n\"What do you mean?\"\n\n\"I really like Brad and, well I don't want to hurt him, this may be the start of something.\"\n\n\"Gwen, Brad will not be harmed, I promise you, I feel for him the same way you do as you and I are one, when this is over he will be begging for more.\"\n\n\"Thank you Viri, what would I do without you.\"\n\n\"I hope we never have to find out,\" Viri said as she warmed the dress around Gwen's body almost as if she was hugging her in her own way.\n\nGwen held her waist almost as if hugging her back as they shared a moment together. Gwen was starting to feel something for Viri that she couldn't quite explain. It was as if she was falling in love with her but at the same time, she still had loving feelings for Brad. It was hard to describe but she began to think about something that probably wasn't possible before she realized she should get back out there to her date.\n\n\"Before you go back,\" Viri said stopping her as Gwen watched her black dress transform into a very sexy black sheer teddy that looked amazing. \n\n\"Wow, I love you Viri!\"\n\n\"I love you too, now let's go show him the night of his life,\" Viri said as Gwen smiled and headed back out there.\n\nBrad was still sitting on the couch a little confused but very turned on waiting for Gwen to come back. He had always liked her even before she changed. He was surprised she wanted him this badly and this soon but like she had said and he had to agree that they were both adults.\n\nGwen came walking back out wearing the loose fitting teddy and stood there in the door frame smiling at him. His jaw dropped at how amazing she looked and his rational thought process seemed shot at this point. Gwen was pleased with his reaction as she walked over and took his hand leading him to the bedroom.",
        "They stepped inside and she wrapped her arms around him pressing her lips to his. His hands slid up her waist under her clothes and he could notice how smooth and soft her skin was. Brad was so wrapped up in the kiss there were many things he didn't notice how quickly she was able to get his pants open before pushing him down on the bed. He was also surprised that she was suddenly naked not seeing her take off the teddy.\n\n\"Where did your clothes go?\"\n\n\"I slid it off while you weren't looking,\" she lied as she crawled down towards him gently caressing his manhood.\n\n\"Are you as excited as I am?\" Viri said in her head as she looked at her reflection in the mirror next to her, smiled and winked letting her know she was.\n\nBrad was enjoying the sensation as both Gwen and Viri got an even closer look at his cock. Gwen was never the sexual kind of girl and knew it was Viri making her like this but she didn't mind. She had always wished to be a stronger and more sexually dominant woman so this was all an amazing experience for her.\n\nBrad watched as she took his cock in her hand and began to slide her tongue up along his shaft gently teasing him. Gwen knew the more stimulated he was the more cum Viri could get from him which is why she wanted him to enjoy every second of this. Brad couldn't complain as he was enjoying himself immensely as Gwen continued to molest his cock.\n\nGwen wrapped her lips around him giving him a few hard but slow sucks. She would tease his tip a little making circles with her tongue before engulfing it again. It wasn't long before little bits of precum had started to bubble to the surface. Gwen tasted his cum which seemed different to her now. As strange as it was in her own mind it tasted very good to her which she also guessed was Viri's doing.\n\n\"Oh wow!\" Viri said to Gwen, \"we must have him!\" She added before Gwen climbed up towards him and impaled herself onto his throbbing member.\n\n\"Holy shit!\" Brad said not expecting her to move that quickly.\n\nGwen began moving her hips enjoying the sensation which seemed more intense than she remembered. Brads hands slid around her ass squeezing it a little before sliding up her side and across her breasts as her skin was flawless and so soft it felt good under his palms. Gwen also noticed the nerves in her nipples seemed more sensitive as well and it felt very good when Brad would touch them. The feeling between her legs was intense as well as Viri had seemed to increase her nerve endings to take more pleasure.\n\nWhat Gwen didn't see was what was happening inside her pussy as the black and red slime of Viri's true form was starting to surround Brad's cock ready to absorb every drop he was willing to give. It began to slither around his member not leaving the insides of Gwen to make sure it wasn't seen but Brad could feel something incredible happening inside Gwen and his moans grew louder. \n\nGwen grabbed him and pulled him up as he wrapped his arms around her kissing her. Her hands wrapped around his head pressing his face against her breast's as all the sensations grew stronger. His mouth explored her chest which made her moan out louder before she leaned back holding on to his shoulder as she continued to move her hips. Brad was amazed by her body as it glistened with sweat as their hands continued to explore each other.\n\nGwen was almost ignoring Brad's moans at this point as everything just felt so good. They were both getting closer to orgasm but what she wasn't prepared for was Viri also getting close to her own orgasm as well. It was such a strange feeling and she remembered it from when they attacked that rapist last night. When Viri feeds it is very pleasurable for her and Gwen gets to share that feeling. It was like an orgasm that gently touched every nerve in her body on top of the one that was about to explode between her legs. She tried to prepare for it but she knew it was going to hit her like a train the moment Brad squirted his seed into her.\n\n\"Oh fuck... I can't... Hold on much...\" Brad said while Gwen continued to bounce on top of him.\n\n\"Don't... Just let it go!\" Gwen said second before Brad's cock suddenly erupted and Gwen felt something that she didn't think was possible as an alien pleasure rippled through her body.\n\nShe let out a moan that was a mix of her and Viri as they both were in euphoria sharing their pleasure as Brad's cock was sucked dry. Even he couldn't believe how amazing it felt as he seemed to cum much longer and harder than he ever had before. He squeezed Gwen's breasts which made her scream out even more as her whole body was still vibrating with pleasure that seemed too much for any human to handle but she was feeling it right now and didn't want it to stop.\n\nFinally, she couldn't take any more as she collapsed against Brad exhausted as was he. His cock was covered with Viri's slime as she was still holding on but luckily Brad couldn't see it over Gwen before Viri finally let go and slid back inside her. Gwen was tired and she soon fell asleep against Brad who just wrapped his arms around her and went to sleep as well.\n\n----\n\nThe next morning Gwen awoke alone in her bed. The sun was shining and she felt incredible as she sat up and stretched. She looked next to her and saw Brad was not there. She was confused for a moment but then she saw a cup of coffee from the shop down the street with a little note on it.\n\n\"Hey\n\nSorry had to work and didn't want to wake you up. Bought you a coffee and I'll call you this afternoon.\n\nBrad\"\n\n\"Holy shit, that was amazing last night!\" Gwen said with a smile as she fell back on the bed. \"I am still turned on by it.\"\n\n\"I can help with that if you want?\" Viri said as Gwen felt her talents between her legs again.\n\n\"That feels nice, but... Nah, forget it.\"\n\n\"What is it?\"\n\n\"I want you Viri, but I want you here, with me.\"\n\n\"I am always with you Gwen.\"\n\n\"That's not what I meant, remember that dream the first night we met, I wish you could really do that because I want you so bad.\"\n\nViri was silent for a while and Gwen was curious as to why until after a few minutes Viri said: \"If I separate from you without a witch to place me back in the jar, I could die.\"\n\n\"Oh, never mind then, it's alright.\"\n\n\"I want you as well Gwen, I have never had a host like you before and...\"\n\n\"And what?\" Gwen said before she began to feel a little strange.\n\nShe felt her body shiver a little before black and red goo began to flow out of her quickly. It was an odd feeling but it came through her skin and through some other holes which felt very nice but she was starting to worry a little about what Viri had said to her.\n\n\"Wait, no don't,\" Gwen said clenching her fist around some of the slime as she held it.\n\nThe slime in her hand began to take the form of another hand whose fingers were now between hers as Viri took shape and was now on top of her. Her face was just as beautiful as she remembered it from the dream with her hair long and looking like slimy dreadlocks as she was straddling her.\n\n\"As long as we as touching I should be fine,\" Viri said.\n\n\"But it's risky.\"\n\n\"Love is risky.\" She said before she leaned down and kissed Gwen's lips.\n\nGwen played with her tongue which felt normal for the most part as she placed her hand on Viri's cheek. Viri's skin began to smooth out and become soft and more flat though remaining the mix of colors always flowing and changing.\n\n\"Oh my God, you are so beautiful Viri, I... I don't even know what to say right now.\"\n\n\"Shhh,\" she said placing her finger on Gwen's lips, \"Don't say anything, my love.\" She added before she kissed her again.\n\nGwen felt so strange as she started making out with this form of Viri but it was what they both wanted. She wanted to keep dating Brad as she did like him a lot but her relationship with Viri was hard to explain to anyone including herself. She was a part of her now and she loved her in a way she couldn't explain.\n\nViri removed her lips and smiled at her. Gwen watched as her hair wiggled around like each strand had a mind of its own before Viri began to kiss Gwen's chest and work her way down her stomach before she hovered above her pussy for a moment. Gwen was both nervous and excited as she waited for Viri to do something, anything.\n\nViri examined her opening knowing it very well as she stuck out her slimy tongue and began to touch her clit gently at first but soon her tongue began to stick to it almost pulling on it a little with every touch. Gwen's eyes rolled in her head at the sensation as Viri knew exactly how to please her more than any other person on the planet. \n\nGwen let out a yell as she felt Viri's tongue start to slither into her expanding and vibrating driving her wild as she clenched the sheets beneath her in her fists. Every touch from her was like magic as Viri's hands slid up and grabbed her breasts and she began to play with her nipples as well sending wave after wave of pleasure through her body.\n\n\"Oh my God Viri! Don't ever stop!\"\n\n\"Maybe you'll like this then?\" Viri said climbing back up towards her as Gwen looked down and saw something growing from between Viri's legs.\n\n\"Holy shit! That's not going to fit inside me.\"\n\n\"Trust me, my love,\" Viri said kissing her before she shoved her new appendage inside Gwen's waiting pussy.\n\n\"HOLY SHIT!\" Gwen yelled out.\n\nGwen grabbed Viri by the shoulders as she thrust her slimy cock down into her. It was an amazing feeling that even Brad couldn't replicate and was very well endowed himself. Viri seemed to be enjoying the sensation as well as she felt her own pleasure while still connected to Gwen letting out little moans.\n\nViri extended two of her dreadlocks looking tendrils down connecting to Gwen's breasts engulfing them while at the same time Gwen felt the slime enter through her nipples and start to pleasure them from the inside as well. Gwen slid her hand all over Viri's body cupping her breasts as well as she felt her nipples perk up in her palms which was strange to her but she didn't care. Their lips met again as Gwen's pussy was filled more than it ever was before making her want to scream out her lust.\n\n\"I love you, Gwen!\" Viri said.\n\n\"I love you too Viri!\"\n\nGwen could feel her orgasm about to pop when suddenly Viri started to return to liquid and poured down onto her covering every inch of her body in her warmth as her orgasm struck her hard and Viri transferred the energy to every nerve in Gwen's body all at once. She screamed at the sensation as she felt like she was wrapped in a warm blanket of pleasure. The cock was still inside her and was even squirting a liquid into her only enhancing the feeling. Viri made it last as long as possible keeping Gwen covered from head to toe making her feel otherworldly pleasures until she couldn't take anymore.\n\nThe slime pulled from Gwen's skin to reform on top of her as Viri looked down at her with a smile happy Gwen had enjoyed herself. Gwen placed her hand on Viri's cheek rubbing it with her thumb before pulling her down on top of her and holding her in her arms. Viri had never felt this way for a host before and felt comfort in her embrace which was strange to her but she didn't want it to stop.\n\n\"Can I keep you?\" Gwen whispered in her ear.\n\n\"You will never be rid of me,\" Viri responded as she laid her head on Gwen's chest.\n\nViri remained separate from her as they cuddle and enjoyed each other's bodies. They remained connected the whole time but Viri did like the pleasure of having sex like this and wanted to do it again but for now, they slept wrapped in each other's arms."
    ],
    "authorname": "maestro84",
    "tags": [
        "slime",
        "bond",
        "female transformation",
        "breast expansion",
        "cock growing",
        "symbiote",
        "lesbian sex",
        "transformation"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/liliths-emporium-inner-demon"
}