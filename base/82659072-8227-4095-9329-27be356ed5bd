{
    "title": "Payment in Kind",
    "pages": [
        "Though this story focuses on a person's path to full sexual freedom, it has very strong elements of non-consent (the bad kind), with overtones of threatened incest. If any of these offend you, it is probably best that you find another yarn.\n\n<p align=\"center\">Payment In Kind</p>\n\n<p align=\"center\">Chapter One: Installment Number Five</p>\n\nI heard the front door of my law office open and close. The clock said 5;35 p.m.--not quite quitting time. I registered the brief animated conversation between my secretary Penny, and Delta Ann Rucker, my former client. I hustled to complete the last paragraph on the brief, I had due tomorrow. Penny's excited East Texas twang contrasted nicely with Delta's liquid contralto. Laughter rippled forth from the front room, more evidence that both women genuinely enjoyed one another's company. I closed the file and the program and sent the brief to Penny to proof. It was all over anyway. The moment Dell walked in any prospect of doing serious work went out the window.\n\n\"I'm taking Winnie to little league,\" Penny yelled.\n\n\"Fine, see you tomorrow,\" I yelled back. I'd hired Penny years ago out of college primarily because she was perky and very friendly on the eyes. Golden blonde, with elfin looks and an athletic figure, she'd won me over with a smile. What an idiot! I had quite accidentally hired the best legal secretary and office manager in the history of legal secretaries and office managers. There was not a single detail that escaped her. She had seen me through the death of my wife Dorothy from cancer and helped pick me up off the floor, both figuratively and, on occasion, literally. She had a job with me for life.\n\nPenny knew to smoothly disappear when Dell showed up. I had never said anything. Dell certainly hadn't either. Penny just knew her continued presence wouldn't be appreciated in the way a lineman knows not to get too close to the transmission wire. Way too much crackling energy. Though she had been a client for some time, Dell was not coming to my office for legal advice. Dell was coming to make an installment payment on her bill--an in-kind payment.\n\nMy cock began to swell, and an anticipatory ache spread through my crotch. Dell's stiletto pumps called out click, click, click, clack, as she slowly down the hallway towards the back of the building and my office. My mind oscillated from sexual fantasy to useless inanities. I envisioned her hips swaying back and forth as she walked away from me, marveling in my mind's eye at the strength and firmness of those fine orbs, just as I had when I stole peeks at them the first time I 'd met her. These prurient thoughts were chased by I'd heard that tip of a stiletto exerts more pressure than an elephant's foot, or was it an alligator's tooth? I'll never understand my own mind, much less others'.\n\nI looked at my hands as they hovered over the keyboard. They trembled, of course. They always did when Ms. Rucker came around.\n\n\"Good afternoon Mr. Betts,\" Dell said as she stood in the door to my office. \"I'm here to make another payment on my bill.\" Dell did not owe me a penny--never had. This \"installment fee\" thing she had dreamt up was completely imaginary, a construct of Dell's mind that I was at first too perplexed to fully understand, then just too plain grateful to refuse.\n\n\"Have a seat on the couch,\" I said curtly, not bothering to look away from my computer screen. The persona that I put on during these recent sessions with Dell felt so odd and out of whack. I was not completely certain where Dell and I stood. I either loved her, or at least lusted for her with a constant and caring obsession that was very akin to love. She had come to occupy my thoughts both day and night. Though her own feelings were doubtless still mired in a haze of uncertainty caused by a seventeen-year long hellish marriage, Dell seemed to reciprocate. And despite the strong feelings we had for one another, we never quite took a typical approach to love and sex. Dell liked...no, \"liked\" was far too mild a word--demanded that we execute her unusual fantasy of a desperate deal and the control it evoked to feel comfortable laying with me.\n\nI was, by nature, a boy scout, I always had been. My folks raised me to get up on time, make my bed, do my chores, be kind to my pets, take responsibility when I screwed up, and to expect the same in others--even if I didn't get it. But this bombshell of a woman had come into my life with her own story, twisted though it was. I had come to appreciate how different her history was from mine and to relate to her on her terms. So, I suppressed my urge to hug her tight and stayed in role.\n\nShe was magnificent, as always, so stunning that I had to consciously override my institutionally panicked disbelief that she had voluntarily chosen to be with me. She was tall, at least 5' 10,\" maybe more, with hair so silky black that it looked blue. Her skin had an olive tint, perhaps from a long-distant gypsy background. Her eyes were dark brown and wide set above high cheek bones and a heart-shaped jaw line. Her lips were full, and sensuous. Just a gorgeous woman.\n\nToday she wore her work uniform, except that it was not her real work uniform. It was special outfit she'd created just for me, made of typical uniform material, but tailored to be extraordinarily tight, emphasizing the enormity of her chest, the dramatic narrowing of her waist and flowering of her hips. The top three buttons of the uniform were undone, exposing nearly a third of her gorgeous breasts. Penny had seen that. No wonder she bugged out. The skirt was so short that had Dell not kept her legs crossed, she would have shamelessly flashed her pussy just by sitting up normally.\n\n\"I suppose you feel you deserve to cum today?\" I challenged.\n\n\"Sir, I've come to make the fifth payment on my bill. That's all that matters. Eight sessions...that was our agreement. I keep my word,\" she concluded. Total myth I thought, and yet she acted as if ours was a contract chiseled in granite.\n\n\"Don't lie to me Dell,\" I answered, \"I've told you before how important it is for a client to be completely honest and open with her lawyer.\"\n\n\"I was hoping so sir,\" she replied after a pause. \"I've been good, and I've been completely faithful and...it has been almost a month since I was permitted the last one.\"\n\n\"You think you have been good?\" I asked.\n\n\"Yes,\" Dell replied anxiously.\n\nI shook my head in mock disbelief. \"Tell me Dell, did I see you in the parking lot of the grocery just two days ago having a conversation with Bill George?\"\n\nDell lowered her eyes to her feet and flattened the top of her skirt anxiously with her hands.\n\n\"It didn't mean anything,\" she said looking up. \"He's in our church. He was going in and I was going out right past him. It would have been awkward if I hadn't talked to him.\"\n\n\"But you did much more than say hello, didn't you?\" I asked. \"You actively flirted with him Dell. You were preening for him like a high school freshman girl. Anyone could see it, and I certainly did.\" Dell said nothing but continued to stare at her skirt. Privately, Dell had always felt that Bill George was insanely handsome, a little cross between Tom Selleck and the Marlboro Man, so the questions struck a guilty chord in her, as if a private shame had been plucked out of her head and left to wriggle on the floor for all to see.\n\n\"You concede, don't you, that your inability to exercise control over your sex drive has dealt you a severe injury in the past, don't you?\"\n\n\"Yes, sir.\"\n\n\"You agree that you must learn to exercise greater self-control over your sex, do you not?\" I asked.\n\n\"I do,\" Dell responded.\n\n\"How am I supposed to teach you self-control if you are unwilling to exercise any?\" I chided gently.\n\n\"I don't know, sir,\" she replied.\n\n\"You do know what the good Deacon wants don't you Dell? You must know that. He'll smile at you and chat cordially about church and this and that, but if the circumstances permitted him to do so without any negative consequences, he would breed you just like one of those heifers he is so proud of. He has a big spread. He could take you to some back corner of his place and you know what he'd do don't you?\" I asked.\n\n\"No Sir,\" she responded.\n\n\"Ha! I scoffed. You know damned good and well what he'd do. He'd rip your top off whether you liked it or not, probably because he knew you'd like it, then he'd bend you over the tailgate of his truck or maybe a bale of hay, yank your panties down and strum you with that cock of his until you were a humping defenseless mess.\"\n\nI paused, watching the wheels turn in her head. \"You understand that don't you?\" I asked.\n\nDell said nothing, but I knew that the image I'd crafted would secretly excite her. I'd been thinking about this interlude for days since seeing the two together in the parking lot. There really was a connection there, but Dell would sooner die than shame Josephine George that way.\n\nThe thought hit home with Dell like a truck. She quickly imagined a quiet corner of Bill's ranch, maybe behind the big live oaks near one of the stock tanks. She would park on the little dirt road that ran behind their place, hiding her little Toyota out of the way of wandering eyes. Bill picked her up just on the other side of the fence. He had her sit next to him like they were high schoolers as he drove to the most remote section of the ranch and had played with her twat all the way out to his hideout. She imagined being hot and ready for him. They kissed feverishly when they reached the grove before Bill broke it off and walked her around to the back of the truck before yanking at her shirt so hard the buttons popped off. He pulled her bra off and used the massive thing to tie, her hands behind her. He pushed her top down so that her breasts stretched out over the dirty rough tailgate. In her imagination, she could hear Bill behind her, unzipping his fly, then gripping her hips and giving his all into her, spanking her harshly as he went. With great willpower, she extinguished the thought from her head, but not before her quim grew hot and wet.\n\n\"It's all about control Dell, something you show very little of,\" I said. Then, after a long pause I added, \"you're wet right now aren't you, just from us having this discussion?\" I asked.\n\nDell said nothing and continued to stare at her dress.\n\n\"Yes...sir,\" she mumbled.\n\n\"Sopping wet?\" I challenged.\n\n\"I don't know, sir,\" she responded shyly. I could spend a lifetime uncovering this woman's layers, I thought. How the little conversation we'd had so far could possibly trigger this level of sexually excitement I did not know. But I swore to myself to find out.\n\n\"Spread your legs,\" I instructed. \"Reach in with two fingers and pull them through that slit of yours. Hold them up to me. Show me. Show me whether you have any control over that pussy of yours\" I ordered.\n\nDell looked briefly down the hallway, checking to make sure Penny had left. She laid her purse down at her feet, then took her hands and raised her skirt. She was wearing an electric blue pair of hose suspended from a garter of the same color along with tiny little thong--just as I had instructed. She scooted her bottom out until it sat on the very edge of the couch, propped a pillow under her back, leaned back and spread her legs wide. I knew my answer before Dell reached in to take her sample. The light blue thong had turned to dark navy between her legs.\n\nDell slowly inserted two fingers under the elastic band of the little garment, then trailed them down until the fingers resided insider her quim. She dug deep to take a good sample and held her hand up to me. Her index and middle finger glistened with her juice, so much of it that a little droplet formed at the end of one of her fingernails.\n\n\"Tsssk, tsk, tsk,\" I began, \"not one ounce of control. Just a casual conversation about another man's desire for you, and now you're in heat. Clearly, you need additional training of the most serious kind. Your presence here and complete and obedient participation will serve as full payment of your fifth installment, whether I permit you to orgasm or not.\"\n\n\"Thank you, sir.\" She replied.\n\n\"It was our deal\" I responded, \"you'll get nothing more than you earn.\"\n\n\"Assume the position against the window,\" I instructed.\n\n\"The window?\" Dell asked hesitantly, clearly taken aback by my command. This was new. Our previous sessions in my office were from the couch. There I could close the door to my office, and we both had at least a chance of escaping detection, either from the front road or the side. But my windows were another matter. They looked directly out onto a pine-forested lot to the East of my office. A road ran along the backside of it with plenty of gaps in the foliage where we could be seen. The windows on that side of my office were huge--a storefront door-type, with a full door-sized window in the middle and two window panels on each side. If a driver were curious enough, and just happened to notice Dell's backlit figure in the window, she would be fully exposed.\n\n\"The window,\" I repeated. \"Do we have an issue Ms. Rucker?\"\n\n\"No sir, we do not,\" she replied. She unwound her long frame and stood up from the couch, her heavy breasts swinging down slightly as she leveraged herself off the couch. She walked across my office slowly, placed her hands up flat against the window above her shoulders, spread her legs and turned to look at me over her shoulder. She then lowered herself slowly until her knees landed on the doormat.\n\n\"Look away,\" I instructed. I needn't have issued the instruction. Dell was so nervous that someone would come down the road that her eyes were locked on it. I took my time unlocking the credenza door behind my desk and rolling open the big drawer. The sound conveyed meaning to Dell. She knew what was in the drawer. She knew what was about to happen to her because, after all, she had asked for it by name. In the bottom of the drawer, amongst old files and legal articles, sat a metal bar with cuffs on each end, an old-style metal fishing tackle box with a small, keyed lock, and a black strappy paddle. I lifted the short spreader bar out of the drawer, knelt behind Dell, and attached the cuff on each end to her knees. Her pussy would now stay open, and vulnerable, to anything I wanted to do to it, just as Dell wished. The effort brought my face within inches above her lovely quim, and I could smell her hot sex as it oozed into her tight little thong. It was all I could do not to press my face into her thighs or backside and nip her.\n\nI stood back up and pulled the tackle box out of the drawer, careful to scrape it against the top of the drawer for emphasis. Dell flinched from the sound just as I knew she would. I popped the box open and withdrew the long chain anchored by alligator clips at each end, laying it on the desk. Dell looked back at me nervously. I reached into the box and rustled around needlessly to make a racket, then extracted four large lug nuts, the big kind used on farm machinery, plenty wide openings in the middle of each, and plenty hefty.\n\n\"Undo your top,\" I instructed. Dell dropped her hands to her chest and undid buttons until the front of her uniform was wide open. The electric blue bra beneath the pale, yellow uniform was a testament to the surprising firmness of her bosom. It was no more than a half-cup, offering little support, but exposing the upper half of her gorgeous breasts to the air above and leaving just a darkened hint of nipple below the lace. Despite the flimsy structure of the garment, and the ample size of Dell's tits, they sat firm and high, her excitement betrayed by her veins, dull blue bolts of lightning that coursed under her skin. A thin sheen of sweat had broken out over Dell's chest. My air conditioning automatically cut off at 5;30 each day, and it didn't take long for the Southeast Texas sun to drive the temperature up. Dell did the rest.\n\nI lifted the uniform up and off her, throwing it over the back of a nearby chair. \"Undo the bra,\" I instructed. Dell deftly reached behind her to uncouple the snaps. Her breasts fell free, and Dell handed me the flimsy garment while she searched anxiously for traffic coming down the road.\n\n\"What would you like me to do now Dell?\" I asked.\n\n\"Anything you want, Sir,\" Dell answered.\n\n\"Anything?\" I asked challengingly.\n\n\"Anything,\" Dell reaffirmed.\n\n\"Do you think you can handle that, Dell?\" I asked. \"Do you think you can take a cock in the ass and still stay under control.\"\n\n\"Yes Sir,\" she replied.\n\n\"I don't think so Dell, but if you're lucky enough to get a cock in the ass, then we'll see, won't we?\" I responded, but Dell said nothing.\n\n\"And what if I want nothing at all, then, is that what you want?\" I asked.\n\nThis took Dell aback, for the last thing on earth she expected for me to do was refrain from sampling the proffered goods.\n\n\"If...that's what you want...Sir,\" Dell replied.\n\nI kneeled behind her and gripped the nipple of her right breast in my hand, rolling the bud between the tip on my index finger and thumb. Her breasts were perfectly round, so much so that I wrongly supposed she'd been augmented. Her areola was dark and nearly the size of the mouth of a coffee cup. The areola puffed out from her breasts and were capped with eraser sized nipples. Delicious.\n\n\"Ahhhh,\" Dell sighed as she leaned her head back against my shoulder. Harder and harder I continued working the nipple until she winced and drew in her breath from the pain. I repeated the procedure on her left tit, then spanked her tits back and forth, lightly at first then with increasing vigor, until the nipples were fully engorged with blood and the skin around her areola began to pink.\n\nReaching back to the desk, I took up the nipple clips and lapped them over her shoulder so that the chain banged into her. She winced and drew back.\n\nWithout comment, I reached around her and pulled her right nipple away from her right breast and attached the clip to it, letting it go so that the chain to dangled back and forth from the nipple. The weight of the heavy chain alone distended her nipple and Dell drew in her breath, dipping her right shoulder in response to the pain. After a moment, she righted.\n\nI grabbed the other end of the chain and threaded four heavy lug-nuts onto it, one-by-one, pausing after each to allow Dell to adjust to the additional tension--and pain. With each addition Dell winced, but after a short while she also moved her hips forward in a slow, nearly imperceptible humping motion, betraying that the pain was being re-routed directly to her clit. I attached the left clip to her left nipple and let the assembly dangle between the two massive orbs. Now both nipples were very cruelly stretched, abused nearly to the breaking point. Dell struggled for breath as she brought her pain under control. It was time to match that pain with a distracting pleasure.\n\nI pulled Dell's hair out of the way and kissed the back of her neck, rounding to her left ear and nipping at the flesh along the way. I had learned that Dell's neck and upper back were an extremely sensitive erogenous zone for Dell, nearly as powerful as her clit. I backed away and surveyed her. The sweat had started to bead on her forehead and in the valley between her breasts.\n\n\"Lean forward,\" I ordered. Dell leaned forward slightly until the metal clips tapped against the window. I reached between her legs and lightly strummed my fingers over the little thong that sparsely covered her snatch. She bolted upright further then ground her pussy down against my light touch.\n\n\"You're slick with your own juice now, aren't you?\" I asked.\n\n\"Yes.... sir I am wet,\" Del responded.\n\n\"When I told you what Bill George wanted to do to you, you started to fantasize about it, didn't you?\" I asked. \"You didn't have the self-control even to shut that out of your mind, did you?\"",
        "After a long pause Dell replied, \"Yes sir, I did, no...no...I couldn't stop it.\"\n\n\"Get it out in the open. Tell me what you fantasized about\" I ordered, gripping her hair and continuing to drum on her clit lightly with my fingers.\n\n\"Just...just...\" Dell babbled as the strumming of her clit began to create discord between her conscious will and the signals her body was sending, \"just what you said. Goin' some place and having him 'do it.'\" She replied.\n\n\"It wasn't just that was it, Dell? You were thinking about how good it would feel when he did it, weren't you?\"\n\n\"Yes,\" she gushed.\n\n\"Be specific,\" I ordered.\n\n\"He ripped my shirt off. He tied my hands behind me with my bra. He stood me up against the back gate of his truck. It was all dirty and scratchy, but he didn't care. He just wanted what he wanted. He made me bend over and he pulled my panties down. He pushed my head down and put it in me real hard, over and over. The dirt on the thing scratched at my titties and it was rough, but I liked it. He made me get down on my knees and suck him until he finished in my mouth,\" she confessed.\n\nI removed my hands from her hair, and her clit, and dug my nails into her shoulders, dragging them across her back, digging against the skin the whole way. Dell lurched upward, then thrust her ass against the crotch of my pants, sensing my hardness then leveraging her ass up and down against it, seeking out something, anything, to put out the fire in her pussy. My hands circled to the lower legs, and I continued to rake my nails across her inner thighs and ass before ending with a series of hard smacks to her bum.\n\n\"Ohhh, Ohhh, uhhhh, uhhhh, uhhhh\" Dell responded after each smack.\n\n\"Pleaaaase, pleasseeee, sirrrrr, please let me cum, may I cum, plleeeassseee?\" Dell whispered finally, begging for any release. I kneeled under her to look at her more closely. Dell was so wet that the thong was soaked fully through. Her upper thighs glistened, and a small rivulet of her spunk trailed down her left thigh. I reached beneath the thong and, keeping my fingers flat, rubbed her slit from front to back all the way from her pelvic bone and clit on the front, to her anus in the back. Dell's head lolled backwards, her face staring straight at the ceiling and her lustrous locks falling nearly to the top of her ass.\n\n\"Remember, this is all about you exhibiting some control, Dell,\" I said and spanked my right hand hard across her right ass cheek, alternating back and forth across her tight rounded bottom until both cheeks pinked brightly. \"Are you back under control, Dell?\" I asked.\n\n\"Yessss, sirrrr,\" she replied, her lusty slur betraying her lie.\n\n\"I don't think you're the least bit under control Dell. Even the pain of those brutal nipple clips and my spanking of your ass have not cooled your sexual desire one bit. Unless I miss my guess Dell, they have brought you much closer to an orgasm, haven't they?\"\n\n\"I don't know Sir, I don't know,\" she answered, her breath quickening as I returned to rub her clit lightly with the tips of my fingers.\n\n\"You know that you have been instructed not to cum Dell, don't you? You understand that the reason you have been denied an orgasm all this time is because you violated my orders in our last session, don't you? Are you going to come against my instructions Dell?\" I asked, rubbing then invading her pussy with three of my fingers.\n\n\"Noooo sirrrr...\" she crooned, \"I dooon't think ssoooo.... nooooo, no, no, no\" she responded, her body jerking slightly under my touch.\n\nDell had been on edge for over fifteen minutes, and I could feel her on the verge of going off, so I backed away. She merely stood, kneeling against the window where I'd placed her, and rhythmically humping her bottom back and forth against an imaginary lover. After a short period of inattention her ardor cooled, and she straightened back up. That's when I got dirty.\n\nI stuck my middle finger, slicken by her juice, into her puckered ass, and began working it. In. Out. In. Add a second finger. In. Out. In. Out. Add a third finger. In. Out. In. Spit on the fingers. In. Out. In. Out. The effect was immediate.\n\n\"Oh fuck, OH FUCK, FUCK, I'M.... I'M...PLEASE I CAN'T.... JESUS! JESUS GOD ALMIGHTY! OOOOHHHHHH FUGGGHKKKK, FUCK, FUCK, FUCK, FUCK PLEAAAAEEESSSSEEE, CAN'T STOP, CAN'T.... OHHHHHH, CAN'T.... GOD, YESS, YESSS, YESSSS, SHIT YESSSSSSS, CUMMMMINNGGGG!!!! OOOOHHHWWWW!!!!!\" Dell screamed at the top of her lungs as she exploded, her head bumping repeatedly against the window. Her sphincter contracted around my fingers as she came violently, strong muscular contractions gripping my hand as if to claim it, and her left-hand assumed a vice grip on my dick. It took a full minute for her undulations to subside and in the last few her top jerked so violently that the right clip, perhaps aided by her sweat, came loose from the nipple and the lug nuts tumbled out across the floor, landing helter-skelter. Dell collapsed against the window, her breath huffing in and out of her swiftly.\n\nI let her recover her senses. I wanted so desperately to enter her, to pull aside the little blue piece of material and fuck her mindless. But I stayed above it. I stayed in role.\n\n\"I'm so sorry Harper,\" she said, acknowledging her violation of one protocol, and engaging in another in calling me by my name.\n\n\"We'll just have to keep working on it,\" I responded, removing the remaining clip from her left tit.\n\n\"Don't you want somethin'...Sir?\" she said, teasing me playfully and trying to get back into role. She emphasized the point by dragging her fingernails across the crotch of my blue jeans.\n\n\"Can you come over tonight?\" I asked. \"If you can, I'll take everything I want, you can complete the payment at my house.\" I whispered in her ear, kissing her lightly along the way.\n\n\"Allie is on a band trip,\" Dell responded, \"you want some supper?\"\n\n\"I'm looking at supper,\" I said and, at long last, I got to kiss her and hug her tight.\n\n<p align=\"center\">Chapter II</p>\n\n<p align=\"center\">The Client</p>\n\nMy name is Harper Betts. Except for the brief time I spent in college and law school, I've lived in Sandstone Texas (pop. 8,217) my whole life. Sandstone is, believe it or not, the county seat of Sandstone County, the name given to this place by early settlers who lived off and fought the land for a living. Being a small towner isn't for everyone and being a small-town lawyer isn't either, but it is perfect for me. Or at least it was for a long time.\n\nMy dad was a railroad engineer for the Burlington Northern railroad and my mom was the county clerk. We knew just about everyone in the County, and everyone knew us. I got lucky in so many ways. I was shy as a boy, criminally shy. My wife Dorothy and I met as 7<sup>th</sup> graders, and we fell into a deep friendship before we realized that we'd also fallen in love. We had no idea what to do with one another and it took years to find out, each year, and each new horizon a blessing. We married two years into college at Sam Houston. We raised four kids, all of whom are now out of the nest. Then skin cancer quite literally ate her from the outside in. I watched, and stood helpless by her side, and by her doctors, and finally by her hospital bed, as she gradually lost strength, hope, and then life itself.\n\nI knew of so many older couples whom, once the husband or wife died, the mate passed on within a few months. They were so intertwined that life without the other simply didn't make sense--didn't have any meaning. But I wasn't 85, I was 52, and it wasn't time for me to die. At least not completely.\n\nSo, I died a little bit, every day. Within a year later my story was written all over town. \"Nice guy, lost his wife, got drunk, stayed drunk, used to be real, really good, not worth a hoot anymore.\" If the truth be told, they were right. I was sleepwalking through my life and through my law practice, my life's rudder gone never to return. Penny alternated between commiserating and kicking my ass with tough love. Deadlines were missed, briefs were turned in half-assed, and tongues wagged.\n\nAnd that was my condition on the fateful day when the most challenging case in my history, embodied in the person of Ms. Delta Ann Dedier, nee Rucker, walked into my office.\n\n\"You have a client,\" Penny intoned through our antiquated intercom.\n\n\"I wasn't expecting anyone,\" I responded. There's no one on the schedule. We were at least religious about calendaring, and there was nothing on our calendar for this time slot.\n\n\"You're going to want to take this,\" Penny said.\n\n\"Ok, put whoever it is into the conference, and I'll be there in a little,\" I responded, irritated. I'd gotten a good drunk on the night before, hell, the entire weekend, and I was in no shape to see anyone.\n\n\"You're going to want to take this right now,\" Penny said.\n\n\"Okay boss-lady,\" I said derisively I appreciated Penny's backbone, but sometimes I it chaffed.\n\nI grabbed a legal pad and pen and walked into the conference room. There, at the head of the table, sat Delta Rucker Dedier. Every red-blooded man in Sandstone County knew who Delta Rucker was from her early maturation. She was very simply the most stunning woman in Sandstone County and perhaps in the ten surrounding counties. When you saw her on the sidewalk, you slowed down to look. When you saw her putting gas in her car, you suddenly needed gas. When you saw her in the grocery, you happened to need the exact same thing she was shopping for on the same aisle.\n\nThe Rucker's came from the dirt, emigrant Hillbillies from the border of Kentucky and West Virginia during the 1850s. They'd doubtless led a marginal existence in the Appalachians, and had lived at the margin of Sandstone County ever since. They lived off the land, as did many of the small rural landowners. There was no shame in that at all. Sandstone County was dry, the result of long-domination of the local religious community by affiliates of the Southern Baptist Convention and their protestant compadres. But the Rucker's didn't take much to those rules. Hiram Rucker, Dell's great grandfather, ran moonshine down to Beaumont during prohibition, the only way anyone within Sandstone history could envision that the 'ner-do-well family could have come up with the cash necessary to purchase the meager 60-acre place they called home. Hiram III continued the tradition, according to local law enforcement officers, by bootlegging and, more recently, selling small quantities of intoxicants far worse for you than their predecessors in an old, abandoned trailer on the back side of the farm.\n\nTheir place screamed \"train wreck\" when you saw it from the road. Two single-wide trailers of ancient vintage were situated on a high point just off the road and embedded in a grove of trees now so overgrown that they had made the trailers permanent captives. Rusting and smeared with decade-old stains and moldy growth, the trailers were surrounded by a cacophonous assembly of junk--mowers, cars on blocks, more junk cars, furniture, abandoned toys and other sundry items of wreckage. The place reeked of human dissolution.\n\nAnd into this disaster of a homestead, the law of statistical and genetic chance landed two of the most beautiful young women our county would ever see. The longstanding rumor was that Hiram III considered both the comely Dell and her older sister Muriel to be his long-term income generating salvation and that he made no small effort to market them to interested buyers. Only Janice, his wife and a woman of some skill and greater intellect, who threatened to shoot the balls off any man who came within barking distance of the trailers, stood in the way of his plans. By the time Dell was a sophomore in high school, Muriel had seen the writing on the wall and escaped to take up respectable work in a Houston strip club. Most felt Dell would soon follow.\n\nAnd it was in her sophomore year that Dell drew the attention of Marshall Eugene \"Marsh\" Dedier, the favored, and indeed, only son of Max and Lenora Dedier and heir to the Dedier empire. The Dediers owned Sandstone County, lock, stock, and barrel, and I hated them for it, had my whole life. The family was granted six entire sections of land, over 3600 acres, because their progenitor Max Dedier had served early and been wounded in the battle for Texas Independence.\n\nOnly, it turns out, he had done no such thing. A Lamar University professor who grew up in Sandstone (and hence hated the Dediers) had researched the original papers and definitively proven that when Sam Houston's army faced down General Santa Anna in the battle of San Jacinto, the supposed site of the elder Dedier's heroism, Max I was safely holed up in an opium den and whorehouse in Galveston. But a card-laid is a card played, and the State was in no position over a hundred years later to either admit its error or reclaim its land.\n\nThe mere ownership of six sections would have been enough to provide the Dediers substantial wealth. In the early days of their ownership of the land before the civil war, they grew cotton, with all that entailed. They engaged in subsistence farming and ranching for three-quarters of a century until, in 1954, an enterprising young geologist employed by the Texas Companies found a series of squiggly lines on a seismic shoot over the Dedier property intriguing. Very intriguing. He urged the company to lease the property from the Dediers and drill an exploratory well. They did. While the resulting well wasn't Spindletop, it was damned close. Hundreds of wells and side-tracks later, the Dedier's property has produced over three hundred and seventy-five million barrels of oil and nearly as much value in natural gas.\n\nAn equally enterprising local lawyer hired by the Dediers in the late 1970s, and looking to impress them, noticed that for one month, just a lousy month in 1963, Texaco had let the leases lapse by failing to maintain continuous production. So advised, the Dediers changed locks on their gates and filed suit in Sandstone County to cancel the leases and keep 100% of the production off the land and for an accounting of the 7/8ths Texaco had been taking since 1963. The right and honorable Billy Timmons (after whom lake Timmons is named), then-presiding judge of the 77<sup>th</sup> Judicial District Court of Sandstone County, refused to recuse himself from the dispute, even though he had served as the Dediers personal counsel for three decades before going on the bench two years prior. The subsequent trial was for Texaco much like post-apocalyptic life envisioned by Henry Kissinger--nasty, brutish, and short. The leases were cancelled, an enormous judgment entered against Texaco for \"stealing\" the 7/8ths of the production they had spent tens of millions to create was entered, and the Dediers went from merely being filthy rich, to being meteorically, obscenely, nationally rich. Most hoped they'd buy the Oilers and move to Houston, but they didn't.\n\nThe people of Sandstone County had a love-hate relationship with the Dediers. They loved their money and hated the Dediers, whatever deference they might have paid to them while in their personal company. The Dediers propagated a host of trust-fund babies who came to dominate all local politics. If you had a board in Sandstone County, three out of five members of it, or more, were Dediers or their in-laws. The Dediers abused the privilege that serendipity had given them mercilessly. Though they professed high regard for the public good and very visibly gave thousands to one or another charity in and around the county, they were unrepentant bullies who kept score with great precision and exacted revenge with glee against those who took them on. If you crossed the Dediers, you left Sandstone County, and not always voluntarily.\n\nNo Dedier had benefitted from the family's power and influence more than Marsh. Marsh was what the good folk of Sandstone County rightly called bad seed. As an underaged teen Marsh and a group of his buddies got a serious drunk on and decided it would be fun to lasso a young cur pup around the neck to drag it behind the hopped-up pickup his dad had given him for his 14<sup>th</sup> birthday. They hoped just to see how long it could keep up. Not long. By the time the assemblage passed the courthouse and police station, the poor beast had given up and was being skinned alive by the road, its now-broken rear legs trailing it. Sherriff Templeton was so furious that he planted his cruiser straight in front of the boys' truck, drew his shotgun, ordered the boys onto the ground, face down, cuffed them, shot the dog to put it out of its misery, and arrested the lot on felony cruelty to animal charges. He later privately recounted that he felt he had shot the wrong animal, a sentiment to which many agreed.\n\nThen entered Max Dedier III. And money. Lots of it. Marsh was turned out as a juvenile with his charge reduced to a misdemeanor, \"$250 fine paid.\" The two other boys riding in the truck were tried as adults and received a felony rap-sheet as a sign of law enforcement's outrage at the heinous crime. The dog was unceremoniously dumped in the slough at the end of town without burial and a brand-new state of the art Dedier animal shelter was built with no mention of the events leading to its construction, but a beaming picture of Max, Lenora and, yes...Marsh Dedier...gracing the front entry.\n\nSheriff Templeton was forced to resign eight months later following a 3-2 vote of no confidence by the county commissioners. The vote went straight along family lines with Dediers casting all three of the deciding votes. Two years later both dissenting members of the commissioners' court were also gone, one moving from Sandstone County entirely and the other just retiring from all public life. Valuable lessons were learned, or, perhaps, reemphasized. To Marsh: there is no pickle the family cannot buy my way out of. To Max: enough money will get you what you want, as always. To everyone else: don't fuck with the Dediers, you will lose, and it will hurt.\n\nBut for the remaining populace of Sandstone County, these events defined the Dediers, far more than they would have liked to admit. Max would have been better served to have let law enforcement deal with his son unobstructed. Had he done so, Marsh would have gotten his felony rap sheet, which could have been expunged after he had a few years to think about it. He might also have learned that the world doesn't always bend to your will, and there were consequences for being a drunken pig, even to a dog with no friends other than the ones he helped made for it.\n\nTwenty-one years later the pig's wife came into my office, seeking my help.\n\nThe phrase \"pearls before swine\" entered my mind as I walked into the office. Because I didn't have anyone on the schedule I was in jeans and an old Sandstone Athletic Department T-shirt, while Dell wore a beautiful Jade green dress and a strand of pearls that must have gone $100-250K. Her purse alone was four figures.\n\nI shook her hand and sat town, so tongue-tied by her appearance that I didn't immediately muster words at all. The pearls rested within the valley of her fabulous bosom, and as I convinced myself that I was staring at the pearls.\n\n\"Mr. Betts, I think you're the only one who can help me,\" she began to break the silence.\n\n\"What seems to be the problem?\" I mumbled half-heartedly. I had seen Dell around town for years. Like most men in the town, I was intimidated by her looks. She was in her mid to late 30's now. She simply looked too good to believe, the kind of woman you knew had to be with someone, but whom you felt should be beyond the reach of any man, eligible only to be courted by some sort of superman. Since I was no superman, she had simply been an abstract luminary, with as much relevance to me as a star in the nighttime sky. The fact that she was married to Marsh Dedier and was therefore Dedier property made her that much more inaccessible. She was a third rail--touch her, and you will suffer death by electrocution. I was rightfully anxious.",
        "\"I need a divorce, today,\" she answered.\n\n\"Today?\" I asked, amused.\n\n\"Yes sir, today if I can get it,\" Dell followed.\n\nI had already heard enough. I turned to the credenza behind me to gather the notes of references that I kept there. I had given up divorce work years ago. Having one high school classmate blow another's brains out in front of their children just because she'd had the temerity to end a brutal 15-year marriage via divorce was, believe it or not, a life-changing event for me.\n\n\"Well, you can't get a divorce in one day, not unless you're carrying a written signed agreement with a property division in that very nice purse of yours. And I can't help you. I don't do divorce anymore. Not after the Rudners.\" I replied, spying Penny shaking her head \"no\" out of the corner of my eye. I stared Penny down. It was my practice and I'd decide which case to take and which to punt. But Dell had seen Penny pitch in on the side of her plea and took heart.\n\nEveryone in the County knew of the Rudner case. Everyone knew Steve Rudner had a crazy streak three miles long and twice as wide. Everyone but me. In my post-Dorothy alcoholic fog, I had not gotten Millie the most basic protection necessary in a divorce involving continued domestic violence. I hadn't obtained a restraining order on Steve. For the rest of their lives the entire clan, even Steve, would bear the consequences of my self-indulgent stupor.\n\n\"I heard about that\" Dell said, \"It wasn't your fault. I know it wasn't.\" Dell didn't mention how she concluded my innocence with such certainty, but it wouldn't have mattered. I was in no mood to hear it, and in no mood to forgive myself. And I was damn certain in no mood to take on another divorce case. Which was a pity because divorce was about a quarter of any small-town attorneys' normal practice.\n\n\"I'm going to give you a list of lawyers you should talk to\" I heard myself saying. One of them can help you.\" Dell took the list in her hand, looked it over, and began to sob.\n\n\"I've talked to them all\" she said eyeing the list. \"They can't help me. They all do work for the Dediers. They're all afraid of what they'll do.\" Oh, I see. You came to me as the absolute last resort after striking out with every other lawyer in town. Well, that's the vote of confidence I needed to jump right into the middle of your shitty marriage, sure!\n\n\"Let me be really blunt Ms. Dedier,\" I said, heated by her comment. You need an exorcist, not a lawyer. We have one district judge who rides the bench in Sandstone County and the two adjacent counties. You know who that is. Atone Volse was your husband's lawyer, and his father's lawyer before him for years before going on the bench. They grew up together. They serve on the hospital board together and they run the Lion's club. Volse is Godfather to at least two of Allie's cousins I know of. He's been asked to recuse himself in Dedier cases before, and he's always refused, and the opposition always gets hosed. Not anything big or notable to the court of appeals, they just lose every single decision the judge has any discretion on whatsoever. You will get your divorce--the law guarantees you that. But you'll most likely be stripped of any property for which you don't have strict proof of gift and you'll be effectively run out of town, whether you continue to live here or not. The chances that you will get sole custody, with no visitation rights for Marsh, are zero point zero. In fact, it is more likely that your husband will get custody. I think it is important to be realistic here, Ms. Marsh\" I said.\n\nDell exploded into tears again.\n\n\"I have to try,\" she said. \"You don't understand. He wants her. Marsh wants Allie...that way,\" she said nervously, peering briefly at Penny. \"I can see it in the way he looks at Allie when she's not lookin' at him. He looks right at her, all hungry, the way he used to look at me. She's just 15 Mr. Betts. She doesn't know what's comin' after her. I do. I'll take her and skip town if I have to.\"\n\nAbuse of this kind was a whole different kettle of fish. No judge in his right mind gives the time of day to a fully established child abuser, and it was normal for their custody rights to be completely suspended in such cases. But the proof. That was the problem. Judge Volse wasn't heartless, but he also wasn't about to take down a Dedier, particularly the heir apparent to the throne, on the random suspicions by the mother about the way the father looked at their daughter. He would be especially suspect of the story of a spouse looking for a divorce and a property settlement.\n\n\"You have to help me. They said you were good once. Very good. That you understood how to get things done, to make people do things. I need that. Allie needs that\" she said. Once was the only word from her sentence I heard. Once--formerly, previously, some time ago. Long ago in a galaxy far, far away.\n\nI must have let my eyes fall to Dell's breasts, but she misinterpreted my eye movement. All I was really doing was stalling for time and thinking about how to end the session gracefully.\n\n\"I can't give you these\" she said, lifting the pearls that lay across her front. \"I know you don't work for free, but these are a family heirloom and Lenora would know it in an instant if I didn't come home with them. She keeps them on a mannequin in her closet.\"\n\n\"Can you give us a moment please?\" Dell asked, turning to Penny. Penny, who had teared up stood as if to leave.\n\n\"Stay where you are,\" I ordered Penny firmly. \"Anything you have to say Ms. Dedier, you can say in front of my assistant. She understands the need for absolute confidentiality.\"\n\nDell leaned across the table towards me and whispered, as if to stave-off hearing by Penny, who was a scant four feet from her \"I only have one thing I can pay you with,\" Dell said quietly, her eyes shifting nervously to Penny.\n\nAgain, I had misinterpreted Dell's fitful embarrassment. She wasn't talking about offering me some family heirloom tucked away in a safety deposit box, she was talking about her body. She was talking about giving herself to me physically in exchange for legal services. A simple, if corrupt trade, a mother's ultimate sacrifice for her daughter's good.\n\n\"If you will handle my case, I'll give you eight private sessions with me,\" she continued staunchly\" her voice gaining strength with each passing word. \"You can do anything you want to me, with me. I've done it all for him, I'll do it for you, gladly. It's...the only thing I have to offer...maybe the only thing I ever had, I guess. My daddy sure thought so,\" she continued, looking up from the table into my eyes. Penny was now openly weeping.\n\nThe offer had to be rejected out of hand. Not just because it was morally repugnant, but because the state Bar of Texas had outlawed sex between lawyers and clients and made it crystal clear in several subsequent disbarment actions that there were no exceptions to, and no excuses for, violating the rule.\n\nBut the offer told me several things about the woman I was speaking with. It told me that regardless of my suspicions, this woman believed with crystalline certainty that her daughter was in imminent danger of sexual abuse, that the only solution to it was removal of her husband from the scene, and that she would sacrifice anything to secure her daughter's safety.\n\n\"No mam. We will not talk of such things,\" I replied.\n\nDell burst into tears once again. I had brought two women to tears in one day and it was barely noon.\n\nAfter a long pause to permit Dell and Penny to share a tissue and stop weeping, I continued. \"I don't even know if I can help you. I won't consider taking the case unless I can. I'll need to get your full statement, though we can't do it here. I'll look around to see what we can do, if anything, to help. We're not even going to worry about payment unless I decide to take the case. I must warn you, though, that the odds are about 20 to 1 that I won't be able to help you at all. But I'll give it a good look and let you know what I find.\" I regretted the words almost immediately after uttering them, but Penny was now beaming at me, and Dell was again crying.\n\nWhat was I doing? I was about to take on the most powerful family in the County, and do it solely because this woman was suspicious. It was ridiculous. The most likely outcome was that I'd be drummed out of my own hometown, never to return, or perhaps disbarred. And for what? $275 an hour? The realization hammered me as I sat there that Dell's looks had more than a little to do with it. It was one thing to help a damsel in distress, another to help a Raquel Welch look-alike in distress.\n\n\"Thank you! Thank you, thank you Mr. Betts,\" Dell intoned.\n\n\"Don't thank me. I haven't done anything yet and the odds are that I won't be able to do anything, and at that point you will just hate me for raising your hope.\" I nodded to Penny in a gesture that said, \"get her out of here\" and Penny stood to escort Dell out.\n\n\"You have to hurry,\" Dell said anxiously as she stood. My anger flared before I could get a grip on it.\n\n\"You've been married to this bastard for 17 years Ms. Dedier. He's been a total prick his whole life including all 17 years of your marriage, and now this is my emergency? I don't think so. I'll do what I can to see if I can help, but I offer no assurances, either on time, or the ability to do anything.\"\n\n\"I didn't mean to...well...I'm just...worried\" Dell said.\n\n\"I understand,\" I said, softening, \"but you're about to take on the most powerful man in Sandstone County, maybe in all of Southeast Texas. You're going to do that in a forum that he owns, in front of a judge that is his good lifetime friend, one who owes the thanks for most of his wealth and appointment to the bench to your opponent. You don't go off on a mission like that half-cocked. If you do, you get rubbed out. You must prepare, and you have to own a Goddamned nuke in your pocket and set it off at just the right time. Those don't come along every day.\"\n\nDell nodded, we shook hands, and I gave her our standard fetch list--any emails with Marsh, all her texts, every bank record she had access to, their tax returns if she could get them, a full list of anyone or any place that might have useful information on her background. She and Penny set a system under which she could contact Dell for me, and set an appointment to meet with her, well out of town, when she could get free without suspicion. In a town our size tongues wagged. There was a good chance someone had already informed Max that his beloved and doting wife was visiting lawyers. In fact, it was not beyond the pale that one of those lawyers, seeking a bigger cut of Dedier business, let it slip, inadvertently, that Dell had dropped in. Marsh was probably already forewarned and forearmed.\n\n\"I'm proud of you,\" Penny said when she returned. \"Most guys would have taken her up on her offer. She's beautiful and she's desperate, that's a dangerous combination. You are gonna take it aren't you?\" Penny asked after a pause. \"It just may be the most important case in the County in the last ten years. Those don't come along every day.\"\n\n\"Thanks, I wasn't aware,\" I replied sullenly.\n\n\"Don't get snarly at me, I didn't make the damned rules\" Penny replied.\n\n\"No, you didn't,\" I replied apologetically. \"I just don't like living by them sometimes. And don't be proud of me until I do something worth being proud of,\" I added.\n\n\"I am proud of you anyway,\" Penny repeated, \"just for saying no to the offer. And I'm proud of her for making it.\"\n\n\"Get me Terry Clavell, would you?\"\n\nPenny smiled and inclining her head in my direction and smiling said, \"right away...Sir.\"\n\n<p align=\"center\">Chapter III.</p>\n\n<p align=\"center\">The Detective</p>\n\nTerry Clavell was a former Texas Ranger who looked a lot like the old professional wrestler Rick Flair. He went about 6'4\", maybe 225 to 230, was broad-shouldered, narrow wasted, blonde, ruggedly handsome, and the most effective private detective I had ever seen. I had worked on a host of business cases with Terry over the years after an attorney I knew in Tyler recommended him to me. He was ungodly expensive and, when you could afford him, worth every penny.\n\nIn our initial meeting Clavell told me how he'd come to be a private detective. He had been thrown out of the Rangers notwithstanding a fantastic service record over 18 years because he had engaged in \"behavior unbecoming to a Ranger.\" This consisted of a drunken tryst with the Houston station chief's wife. Terry had the equally stoned Ms. Parings bent over the balcony railing of the Warwick Hotel in the middle of a hot May afternoon, a hand full of her long blonde hair, giving her exactly what she wanted, when their crime was called in. He later bragged that he \"finished the job\" before the police arrived, and that both the Parings woman, who somehow managed to remain married to the chief, and the chief himself, continued to call him for years: him to seek advice, her to seek more of what she'd gotten on the balcony.\n\nTerry's strength was that he could get anyone to talk about anything, at any time. His secret wasn't his looks, which were exemplary. It wasn't his sexuality, which was mythic. It was his ability to cause people to relax, open up, and talk. I listened to one of his taped conversations once to see how he managed it. He talked just enough to prompt someone else into talking, figured out lightning fast what was motivating the speaker, primed their pump, then listened so raptly that the speaker felt like talking until they were talked out. His common approach, which played to his strengths, was to get \"next to\" a spurned lover or abused secretary on a pretext. Once there, he would innocently suggest a meeting for lunch, or a drink. In a short while the subject would spill the secrets the opposition could not afford to have revealed. It was testimony to his charms that the women for whom he postured (one of the great euphemisms of all time), continued to open up even after he revealed that he was an investigator for an opponent.\n\n\"I need your help,\" I told him moments after Dell had left my office.\n\n\"What is it?\" he asked.\n\n\"A bad one,\" I said.\n\n\"You don't give me any other kind,\" he responded.\n\n\"Sure, I do, most of what I give you is a damned cake-walk,\" I responded.\n\n\"Bullshit! Okay what is it?\" he asked.\n\n\"I can't tell you over the phone,\" I responded.\n\n\"That bad?\" he asked.\n\n\"Worse,\" I responded.\n\n\"I'm going up to Henderson on a medical partnership breakup case next Tuesday. I'll stop by on my way. You're not fucking with me, are you? I'll kill your ass if you're fucking with me,\" he concluded.\n\n\"Terry, you know better. This is a real thing,\" I responded.\n\n\"Okay, Tuesday,\" he said and tapped out before I could say goodbye.\n\nThe following Tuesday he came into my office unannounced, having charmed the socks off Penny as usual. Made me glad we'd never been a target because Penny would've given it up in a heartbeat.\n\n\"You need to quit doing that you fucker,\" I said. \"One of these days you're going to pop back here unannounced and find me yanking my dong.\"\n\n\"And won't that be so fine?\" he asked sarcastically. \"Don't you have a fucking bedroom in that house of yours?\" he asked pointedly. I stared him down.\n\n\"Well fuck it,\" Terry said. \"Let's get down to it, what is it? and why all the mystery?\"\n\n\"The target is Marsh Dedier. I may be representing the wife in a divorce. She thinks he's a pedophile and that he intends to bugger his own daughter. She doesn't have shit to go on and you know the county, unless we've got him by the balls from the get-go, we'll get buggered just before the daughter does. Oh, and we don't have much time.\"\n\n\"Shiiittt,\" he breathed. Terry stood up and walked around his chair, then sat, then stood up and did it all over again.\n\n\"I won't do it,\" he said finally. \"You know Tom and I go way back. If he finds out that I've been working a project in his County against his leading citizen without giving him so much as the time of day, he'll kill me.\" Tom Skidmoor was our County Sheriff and, like Clavell, a former Texas Ranger.\n\n\"What the fuck?\" I asked. \"I knew a guy named Terry Clavell once who had two balls. Where'd you stash his ass? And no deal on tipping to Skidmoor,\" I said. \"This has to be completely black. Not a word to anyone. You'll have to work as an alias. The Dediers gave huge money to Houston Lutheran Hospital. They're holding a gala on Saturday in their honor. I've already gotten you a ticket near their table. I need you to get next to Eunice Hawthorne. She's a spinster and she's worked for them for at least 30 years. Late 40s or young 50's, under-appreciated, unloved, but not bad looking. Just your type.\"\n\n\"And what do you propose to pay me for this cluster fuck?\" Terry asked.\n\n\"Well, that's the great part. We haven't been retained yet and the wife doesn't have access to any of the family money, so I can't pay you. The downside is that if you or any of your impossible missions' task force is caught or killed, the secretary will disavow all knowledge of your existence. The good part is that if you get the goods, you can name your price and it won't be dependent on the time spent,\" I smiled.\n\n\"Shhiiiiiit,\" Terry repeated, stood up, and walked around his chair again before sitting back down.\n\n\"Do one good thing in your life, would you?\" I asked. \"You've been taking cases for ABC Corp against DEF Business for the last fifteen years. Do something that Goddamned matters! I've got the feeling that the mom is right on this one. She's not just relying on instinct. The guy has been dirty in everything his whole life. The whole damned family has. Why wouldn't he be dirty this way, Terry? Do one...good...thing...okay?\"\n\n\"This 'firm belief' of yours wouldn't have anything to do with the fact that the mom looks like fucking Gina Lollobrigida, would it?\" Terry asked. \"Yeah, we get the internet in Houston too and those two are all over the society pages. Ok you dumb fuck. I'll look into it, but I'm not promising anything. Shoot me any leads you get. Jesus you're fucking hopeless.\"\n\n\"The situation is hopeless Terry, that's why I called you. I can't settle for second best, not on this one.\" Terry looked away, but I could tell my comment had affected him. \"Besides, she looks like Raquel Welch, not Gina Lollabrigida.\" He turned back to me, nodded curtly, and left, the steady thump of his cowboy boots trailing back down the hall.\n\nPenny gave him a large packet that she and I had prepared containing all the names, addresses, bank account and other information we could muster from the public record. I walked to the front door to see him leave. I don't know why, but it gave me enormous comfort to know that Clavell would work on it. He flipped me the bird before he ducked into his ancient, gigantic Continental.\n\nI had Penny text Dell with their predetermined signal. We didn't know what kind of security the family ran, and the odds were about 100% that Dell's phone was on their system. To hide our connection as well as we could, Penny texted \"We still on for our trip to Beaumont tomorrow?!!? I got $500 of Rick's money burning a hole in my pocket.\" Dell texted \"Yep, pick you up at 8;30,\" which was the code for my meeting with her the next morning.\n\nMeeting confirmed, I returned to my office, closed the door, and reached for the fifth of Jack Black I kept under the loose papers in the bottom drawer of my credenza. What the fuck am I doing? I pulled a hefty tug from the brown bottle, the fire spreading through me. I put it aside and began preparing for an all-out assault on the Castle Dedier, one almost certain to result in my complete obliteration.",
        "<p align=\"center\">Chapter Four:</p>\n\n<p align=\"center\">The Happy Couple</p>\n\nWe had arranged to meet in a quiet coffee shop just outside of downtown Beaumont. It was more than an hour and a half drive, but well worth it. The place was old school, more diner than coffee shop, but adapted to meet the demands of the time and a favorite of the local college set. I was there early, nervous as a cat. Dell walked in fifteen minutes before we were scheduled to start. Anxious. And beautiful. Every eye turned her way. She wore a yellow and green sleeveless paisley summer dress. It was light and gauzy, and while the skirt fell modestly to just above her ankles, the top addled my mind, and, if my observations were correct, the mind of every other male in the little shop. It was a halter top tied on the back of the neck with an open back. She was wearing no bra and the triangles covering her breasts did a poor job of it, or good job of it, depending on one's perspective. They showed a personally unbearable amount of cleavage and her nipples, hardened by the cold air, poked at the soft cloth.\n\n\"You need to dress down next time,\" I blurted as she sat down at our table, coffee and roll in hand.\n\n\"This is down,\" she said defensively. This was not going well. I had to earn her confidence, not piss down her leg. The odds that someone would know her here were very slim anyway, so where was my anger coming from? I realized, to my chagrin, that I was jealous. The nearly syncopated way that every man in the shop had immediately focused on her pissed me off.\n\n\"Let me be explicit then,\" I said, unable to back down. \"You need to wear something that makes you look unrecognizable and totally unremarkable. Since you walked in, the two linemen on the left who are waiting for their call out from Beaumont Power &amp; Light zeroed in on you and started comparing notes about you, the two churchy-women in the booth right behind us hate you without the need for any further explanation, and the boy scout's dad three tables to our left is discretely stealing glances at your side boobs just to confirm that they are as big as he thinks they are.\"\n\nDell glanced around nervously, looking first at the line workers then at the boy scout's dad--which were the only views she could muster of the parties discussed. Each of the men looked away sheepishly as her eyes fell on them, revealing their inner thoughts completely.\n\n\"Ok, you've made your point,\" Dell said petulantly. \"I'll wear a sack next time. Can we get underway?\"\n\n\"It's not just for them,\" I heard myself saying \"I need to be able to concentrate.\"\n\n\"And...you...are having difficulty concentrating Mr. Betts?\" Dell asked with the hint of a smile.\n\n\"I'm human and I'm a man. I'll do my job, and I'll do it well. But you could help,\" I replied.\n\n\"I need you to give me a detailed history of your relationship with Marsh. From the beginning right up to now, and don't spare me anything, his good, his bad, your good, your bad, because in a divorce this big, it is all likely to come out.\"\n\nDell blanched at that request and became visibly anxious, her hands moving back and forth between her skirt and the table without reason. There were things buried here that would take some digging, but she needed to understand that the Dediers would use any device, force open any crevice in her personality or past that spoke of weakness.\n\n\"Let's start from the beginning,\" I said, \"that should be easier.\"\n\nDell nodded and began. \"I never knew Marsh before I was a sophomore. They started the big high school before I was a freshman, so I never went to school with him before that. He went to West, and I went to East for elementary and Junior High.\n\nHe let everybody know he was a big deal right away. He hung with the 'in' crowd, he was always done up nice, always the latest car, always had people around him. I could feel him looking at me just as soon as I got there. You can tell about a guy. But he was fishy about it. He didn't come right up to me and say hello, he just stood off and looked at me when we'd walk by. I could tell he'd say nasty stuff to his buddies because as soon as we walked by, they'd all laugh.\"\n\nI liked hearing Dell spilling out even these largely irrelevant details. She had to get comfortable with me and make full spill if we were going to do any good.\n\n\"So, how did you get together?\" I asked.\n\n\"We didn't,\" Dell said taking a bite of her scone \" not at first anyway. I heard through a couple of junior girls that he was sweet on me, but I...didn't like him at first. I liked Sammy Held. Sammy was at least a good friend, Marsh twarnt nuthin'.\" I smiled at the colloquialism and urged her to continue.\n\n\"Anyways, Marsh was always around. He'd never just talk to me like a man, he'd just sit and look at me across the cafeteria. When spring came around, he manned up and asked me to the prom, but I lied and told him I already had a date. I didn't, but he gave me the creeps. I made Hooch Fowler act like we had a date, then act like he got sick the night of the prom and that we couldn't go. I didn't want to make an enemy out of Marsh or his family, but I didn't want to go with him neither. I couldn't afford a damned prom dress anyway. Ridiculous,\" she concluded looking away.\n\n\"Okay, that's how you didn't get together, now tell me how you did,\" I reiterated.\n\n\"Marsh went off to school and I didn't see hide nor hair of him for a couple of years. Right after my senior year daddy sent me around town to apply for a job.\" I remembered Dell's graduation, vaguely. Our eldest son Luke had graduated with her. It stunned most of the crowd that Dell walked across the stage bearing the banner of the National Honor Society and won top honors for highest 4-year grade in social studies. Hiram III had so little sense, Jackie was the only possible explanation for Dell's smarts.\n\n\"Daddy was gonna make damn sure I was earning my keep since I was an adult and all\" Dell continued. \"When I went into the True Value to apply for a clerk job, they had I ran into Marsh. He looked...different...somehow ...changed. Anyways, he walked right up to me and said hello. I was a little on the surprised side, so I said hi back, and we got to talking, and that's when he spilled the beans.\"\n\n\"Spilled the beans?\" I asked.\n\n\"Yeah, he admitted he had had a thing for me for years, that he'd always wanted to ask me out, to be something to me, but that he'd never had the nerve to say anything. Course, I was surprised, and flattered\" she concluded. \"He was a good-looking guy and it seemed like he'd grown up some.\"\n\n\"Still is a looker,\" I said.\n\n\"No,\" Dell said quickly, \"not once you know him. Not now.\"\n\n\"Anyways, one thing led to another\" she continued. \"He was straight with me from then on, or so I thought. I was the most important person in the world to him. He listened to me, thought about me, thought about everything I said, and when we started datin', he never asked for a thing, not even a kiss. That right there is what threw me. Every girl in school knew he was a horn dog. He wanted in your pants, and that's all he wanted. I knew a bunch of girls who screwed him, all hopin' they'd be the one to win the lotto. But he wasn't like that at all with me. We went on five dates before he even nerved up to kiss me on the cheek. I had to tell him it was ok for him to kiss me on the lips, that I didn't bite. He knew I hadn't been with anyone before him, but he said he wanted to wait, said he wanted it to be special, to be for marriage. Blew me away. Marriage. Holy cow! I musta put off some kind of vibe to that because he got really quiet and said stuff like 'we don't have to talk about that now' and so on until I told him 'I'd think about it.'\"\n\n\"Well, anyways, it happened. Bang, boom, I was engaged before I knew what hit me. Big monster of a ring. Daddy cleaned up and quit running the still for a while. Had most the junk hauled off. Mowed the yard, went to church. I knew what was goin' on, twarnt nothin' I could do about it.\n\nAnyways, Marsh and I still didn't do it, didn't do a whole lot of anything hot and heavy really, until the wedding night. When I look back on it, it was all a big sales job.\"\n\n\"What was your relationship like with his folks?\" I asked.\n\n\"Ha!\" Dell said laughing. \"Lenora hated me, and old Max wanted to fuck me. That was my \"relationship\" with 'em. You can always tell about a guy, and the acorn didn't fall far from that tree with that old bird. They hated the idea that their little boy would marry the County's poor white trash, a silly little girl who wasn't even going to college, a clerk in the hardware store. Max all but told me he'd pushed Marsh just to go down to a whorehouse in New Orleans and get his rocks off if he couldn't hold it. I guess it was his way of saying that's all I would ever be to him, a good lay. He was a pig-no surprise Marsh is a pig.\n\nBut...I guess...Marsh just kept on and wore 'em down because at the end August we got married out on their place. Big deal. Flowers, bridesmaids, the whole thing.\"\n\nAt that Dell burst into tears, sobbing so loudly that both Boy Scout's dad and the Truckers took notice and looked like they might intervene. I raised my hand in an \"I got this\" gesture and offered Dell my handkerchief. It seemed to placate them.\n\n\"That afternoon, 'cept for Allie bein' born, that was the last day of my life I was happy,\" Dell said.\n\n\"What was it like after you got married?\" I asked, hoping to refocus her discussion.\n\n\"Shit. Pure shit\" Dell said and looked out the windows wistfully. \"We moved up to Dallas so he could go back to school. I didn't fit there. They all had money, they'd all gone to St. Marks or Hockaday or some other bullshit private school. They didn't have a lick of sense, none of 'em, but you sure couldn't tell it by listenin' to 'em. They just knew they had the world by the tail.\n\nAnyways, Marsh was rough in bed with me from our very first night. I gave it off to the fact that he'd been waiting for it for months, that he'd had a lot to drink, and it was all just pent-up juice, but the spanking and shit never went away. Didn't take long until I was yesterday's news with him. He'd spend most of his time at the fraternity house, come home drunk at midnight and expect me to get up and fix him something, or he wouldn't show up at all. I got a job, but he wouldn't see it, made me quit---screamed at me that he didn't marry a fucking clerk. So, I sat there in the apartment, watching Oprah and Springer, and wishing I had something to do. I ended up sewing for a few folks in the Apartments just to have a little something.\"\n\n\"You said he was rough from the beginning. How? Did he hurt you?\" I asked.\n\nDell looked up and all around the table before beginning. \"He made me do...things to him\" Dell blurted.\n\n\"Do things?\" I asked.\n\n\"Sex...thangs\" Dell twanged.\n\n\"Okay, I don't expect this to be easy to talk about, but it can make a big difference. If he forced you to do things against your will, it makes a huge difference\" I said.\n\n\"Oh really?\" Dell said derisively \"Since when has a rich man forcing a poor girl to do what he wanted her to do ever gotten him in trouble? Can you name me one case Harper?\"\n\n\"Several, actually\" I responded.\n\n\"Okay, let's see what you can handle then. He made me take his dick in my mouth in the kitchen bathroom right after the wedding. Ran me into one of the downstairs bathrooms, pushed me down on my knees and made me pull it out and suck it before I was out of my wedding dress. He made me suck it until he shot his wad into my mouth and laughed when it gagged me. He made me swallow it. All the first afternoon. He fucked me regular and from behind, like a dog. After just a little while he talked ugly to me while he was doin' it, bitch this, cunt that, whore, slut, you name it.\n\nHe fucked me in the ass. He did it dry because he liked the way it made me whimper. He spanked me until my tits and butt turned beet red. He fucked me late nights in front of the big picture window in our apartment so people could see us as they walked by. And people did walk by, and look in, and laugh, and I had to stand right next to some of 'em the next day as though nothing had happened. He'd shoot his load on my face, -aim it so it would shoot up my nose or in my eyes on purpose then just laugh about it. He'd fuck me upside down, pounding my head. I was lucky to get a pillow under me.\n\nAnd it none of it didn't do an ounce of good. I was stupid and in love. I thought that if I just gave him that next thing he wanted, it would be enough, that suddenly he'd treat me like he did the summer before we got married. I was an idiot. He thought more about his damned little Beamer than he did me.\n\n\"I'm sorry,\" I interrupted.\n\n\"Why?\" Dell asked. \"You didn't do anything.\"\n\n\"I'm sorry it happened to you\" I responded. \"Did you ever think about leaving?\"\n\n\"Not until he started bringing his boys by\" Dell responded.\n\n\"His boys?\" I asked.\n\n\"Yeah, his frat boy buddies\" Dell answered, \"same kind of sucker-fish that lined up with him in high school. At first, he set up proper dates, sorta. We'd meet another couple and go out to dinner or to a bar and go dancing. We'd even switch off and I'd dance with the other fella, and he'd dance with that guys' date. Good fun, I thought, 'til we got home the first time,\" Dell said, her sentence grinding to a halt.\n\n\"What happened then?\" I asked.\n\nDell looked down at her hands and paused. The place had cleared out and we were nearly alone. This seemed to give her the strength to go on.\n\n\"You sure you need all this?\" she asked.\n\n\"Yes, I'm sure,\" I responded.\n\n\"He'd start making out with me on our couch and the other couple would be sitting right there near us in the big love seat. We'd have a movie on, at first, they were just normal movies, later he put pornos on. Anyway, he wanted to make out right in front of the other couple, but I wouldn't have any of it and I butted out, ran to the bedroom. Marsh didn't much like that. Once they left, he beat the shit out of me for it until I swore I wouldn't ever bug out again. Didn't take more than a couple of trips to Parkland for me to come around.\n\nThe next time we had a couple come over, we got to kissin' and everything and he waited until everybody got hot and got going, then he made me go down on him in front of them. One of his friends told me later that he and his buds had a game. They wanted to see who could get their date to do out it in the wide open first. The other couple just stared at me while I did it. It was the most humiliating thing I'd ever done in my life.\"\n\n\"Were you ever able to shut it down?\" I asked.\n\n\"Naw. You want to hear this?\" Dell asked, making it clear that my prompts were no longer needed, and my interruptions weren't either.\n\n\"I do,\" I answered.\n\n\"Okay, take your notes then\" Dell said with true hostility.\n\n\"Dell, I'm going to remind you, because you seem to have forgotten, that it was you who asked for my help. I'm not asking you this because I want a ticket on the sidelines of your sex life. What you told me so far gives me the lead on three or four good witnesses if I can turn them, and it lets me know that I need consent form so that Penny can get all the medical records on you from Parkland Hospital during the first two years of the marriage. There really is a purpose in all this,\" I responded.\n\n\"Okay. I get it\" she said somewhat more neutrally.\n\n\"He won, I guess, because we did it in front of another couple first. I didn't know what to do but grin and bear it. There he was pounding away on me and the other two just stopped making out and stared at us as he did me. I felt so embarrassed, but it's what he wanted, and I was still stupid enough to be feeding it to him. Then that was the way it always was. Sometimes we'd just do it in front of the other couple. Sometimes, they got into it right alongside us. After a while I didn't mind it so much. I knew I looked a ton better than anyone who'd be coming around. I liked the way the boys looked at me. I liked the way it pissed off their dates that their boyfriend wanted me more than them.\n\nThen one night one of the girls came onto me while Marsh and I were doing it. Shit I didn't know what to do. I'd never done more than hold hands with girlfriends in school, then there she was with her mouth on my pussy while Marsh fucked away. That sent Marsh into orbit. Then her boyfriend put his dick right there at my mouth. I just went with it, I guess. Only thing was, I knew those bastards were all talkin' about me, that was the only thing that pissed me off.\"\n\n\"Anyways, after a while the girls quit showing up, but the guys didn't. I guess word got out what was going on and it made it hard for them to get dates when the end of the night was a group thang. So that's when the guys started comin' over from the frat with Marsh on their own. Same thing. We'd go out to eat, sometimes a bar. I'd dance with Marsh, then dance with the other guys. Then we'd go back to our apartment and do it. At first it was just one guy, then it was two, then three or four\" she concluded.\n\n\"Four?\" I asked incredulously, jealousy firing up again, \"Did you ever tell him no?\" Ever think of moving out?\" I asked.\n\n\"All the time. But where would I go? I didn't have two nickels to rub together. Come back home to the trailer and do tricks for pop? No, I wasn't goin' to do that. At some point, I got smart and decided to make it work for me instead of against me. Marsh didn't give a shit about me as it was, so I decided to make him give a shit about me all over again. I had picked up 15-20 pounds easy in the first few months after we were married because I was miserable and had nothin' to do but eat. I made him let me get a job at one of the local gyms. At first, I just sat the desk, but I'd take an hour or two a day and started working that weight off. I even picked up a few people to train after a while. Talk started. Some folks came by and dropped off cards. One wanted me to model for \"D\" Magazine, one for some little fitness pub, one for Penthouse. I showed 'em to Marsh, just to let him know what he had. He wasn't interested in me modeling, even the legit stuff.\"\n\n\"Penthouse?\" I said, unsurprised and surprised at the same time.\n\n\"Yeah, Penthouse\" Dell responded, lifting a little smile to let me know, I know what you're thinking.\n\n\"Anyways, I hit the stores and started buying expensive trampy outfits and bikini's you wouldn't dare wear anywhere. I decided I'd be the hottest little tramp in the fucking city, and he'd damn well know it. When the boys came over, I was ready. I was going to be the best lay they'd ever had. What was funny about it was that I could make 'em jump and dance without them ever knowing I was doin' it. I'd give this one an extra smile, or moan really loud for one of 'em while being quiet with the rest and pretty soon them ole boys were jealous as shit. They all wanted to be the special one, ever last one of 'em.\n\nI decided I'd make them want me for the rest of their days and make Marsh as jealous as hell for having brought them to me. Still stupid. I thought it would get better I hoped he'd get tired of it and quit bringing 'em, but he never did. He'd just sit there and watch me, whether it was one guy, or two or four, he'd just sit back and strum that little pecker of his and watch them treat me like a whore, go down on me, do me, sometimes three at the same time, and all the while he'd just sit there until he was ready to come over and shoot it into my face.\"\n\nI prided myself on my ability to do a good client interview, and to pick up every detail that could possibly be helpful to the client. But listening to Dell's yarn had ended my objectivity long before, as well as my neutrality. I hated Marsh Dedier. To my shame, Dell's graphically detailed stories of her and Marsh's sexual Klatch made my cock grow rock hard. I paused briefly to understand why. It wasn't because I was hearing about sex. Hell, divorce attorneys ought to have minor designations as sex counselors anyway. I'd heard it all, at least I thought I had. I was turned on because despite the early humiliation involved in her sexuality, it was clear from the enthusiasm of her description that Dell enjoyed, no...that was far too mild a word..., loved her sessions with other men. She liked being the center of attention, she liked being the object of lust, and she reveled in her remembrance of the sensations these young men had given her with their mouths, their hands and their cocks. The revenge it evoked on Marsh at the same time was just a heavy bonus for Dell.",
        "\"Anyways,\" she continued, \"I started puttin' on those little things and hanging out near the pool to get a nice tan, pretty soon the boys were swarming like bees. I knew when Marsh was about to come home, and when it was time, I'd flirt with 'em until them boys thought they were gon' hit the jackpot. Marsh'd come home from school, come out to the pool and get so mad about what a slut I was, how I couldn't keep my cunt clean, then he'd take me inside and fuck me with everything he had with that little pecker of his.\n\n\"So, I guess in worked in a sense,\" I offered, \"but not much long-term cure for your problems.\"\n\n\"No. I had a plan. I would act like his little plaything, but every chance I could get I was rippin' him off to make money to get out. I'd buy the most expensive thing on the rack, then return it for cash. I set up a bank account in a bank he never went to and deposited what little cash I'd made sewing and all of the other money I could lift off of him without him knowing about it. I thought about blowin' some of the guys around the pool for cash, but I knew it would get back to him and he'd understand that something was up. Over the next year, between this and that and the other, I managed to put together a little over ten thousand\" she concluded.\n\n\"So, what happened?\" I asked.\n\n\"Allie is what happened. When she came, it ended that thang\" Dell responded.\n\n\"What do you mean?\" I asked.\n\n\"Because you're not the only one who understands how things work Mr. Betts\" she answered.\n\n\"First thing was I had to wait it out to make sure the baby was Marsh's. I insisted that we stop the parties for the baby's health and Marsh agreed. We were always drinkin' or smokin' weed and I didn't want none of that for her.\n\nAnyways, I'd been careful all along, I thought, but somehow, I'd managed to get pregnant. It was the last thing I wanted and since I thought I'd done everything right I had no idea who the father was. I probably banged twelve different guys the year before I got pregnant. Marsh kept telling me for nine straight months to get rid of the baby, that he was afraid that it wasn't his, that he wouldn't raise some other guy's baby and act like it was his. He kept telling me he'd get a paternity test as soon as the baby was born and that if 'I didn't pass it' he'd shame me, dump me like a sack of coal. I kept tellin' him that it was his, even though I had no idea. If it was or wasn't. I just knew I wanted something different from what I was doing, and this baby was going to give it to me.\n\nIt was bullshit! I'd screwed all of them other guys because he wanted it! He brought them over! I didn't ask for 'em!\" Dell emphasized before looking around the diner to make sure she hadn't been heard.\n\n\"But I knew damned good and well that he was tellin' the truth\" she whispered. \"He was gonna dump me like yesterday's trash. When Allie's DNA matched Marsh's I was happy, but he was miserable. He didn't want a baby, didn't want anything to tie him down, including me. Wanted to stay in Dallas after school, didn't want to come home, didn't want a damn thing to do with the family business. Probably wanted to divorce me then, but Max and Lenora made him come home and sober up. Told him that if he didn't get his ass back down to Sandstone County, get his shit together and act like a real man, they'd cut him out of the will completely\" she rambled to a finish.\n\n\"Was life at home any better when you got back?\" I asked.\n\n\"Yeah, it was good, really good for a few years. Lenora didn't think much of me at first, but she could see I was a good mom. I took care of Allie and worked my ass off around the house. She respected that, least when she wasn't drunk. Max pushed Marsh, hard. Wouldn't let him screw off like he'd done at SMU. Made him learn everything about oil and gas. Made him be the company man when they drilled the wells, made him watch when they built the gathering lines, made him go out in the middle of the night to let the trucks in that hauled the oil out.\"\n\n\"Say that again\" I said, \"about going out in the middle of the night.\"\n\n\"They made him go out at night and let the trucks in. It was always real late, 10;00, 11;00, midnight, and they didn't get done until 4;00 or 5;00 in the morning most mornings. Marsh hated it, but he said the family didn't trust anyone else to do it cause the oil companies would rip you off if you let them. Made no sense to me. Don't they have valve-counter or somethin' on the pipelines? I never could tell why they sold some into the pipeline and some into trucks at all. Hell, there must have been twelve, fifteen tankers a night most of the time we were married. Once Max died, Marsh hired a Mexican guy, Hector, who he has do it. Lenora couldn't make him go out at night. Course he's left and now Marsh's got some other guy.\"\n\n\"Do you remember what the trucks looked like?\" I asked, \"Did you ever see one?\"\n\n\"Sure, some little mom and pop out of Magnolia Arkansas, Ark-Tex or something like that. Dark Blue, Yellow top on the cab.\"\n\n\"Okay, and Hector? What was his last name?\" I asked. Dell looked truly puzzled as to why I'd want to know the name of a guy whose job was as menial as counting trucks and watching gauges.\n\n\"Rondon\" she said, \"Hector Rondon, like the ball player in Houston.\"\n\n\"Sorry, I didn't mean to interrupt. You said it went well for a long time, right?\"\n\n\"Yeah, sorta.\"\n\n\"Sorta?\" I asked.\n\n\"Marsh was never faithful. Not once, not when we were at SMU and not when we got home. I caught him banging half the staff in the house. They knew it, I knew it, Max and Lenora knew it, everyone did. But it wasn't ever enough. He wanted to swap me, all the time. He'd talk about it day and night while we were screwing, how much he liked seeing me go down on another guy, lick his balls, take it in the ass, he'd drum on and on about it like a damned record. Then he set up a reunion with his old buddies in New Orleans and it was like old times. Five of 'em at once. All guys I'd screwed when he was in college. Oh yeah, he got the gang back together alright.\"\n\nDell's words were harsh, but a certain wistfulness had crept into her voice and unless I failed in my observations, and I was keenly focused on her at the time and unlikely to do so, her nipples had measurably hardened from the discussion of the group sex. There was much more buried there than Dell wanted to mention. It might become important, and it might not.\n\n\"Again, why not leave?\" I asked.\n\n\"Don't be stupid Harper!\" Dell said savagely. \"I knew I didn't have a chance in hell of ever getting Allie in a custody fight. Every fuck I'd ever done would suddenly become my idea. All Marsh's shit buddies would like rugs and say I wanted it, that I asked for it, that I egged it on, and that Marsh was nowhere around. I'd go from being somethin' to a nothin' overnight and I'd lose Allie to boot. Only hope I had was to keep going until Allie got old enough to leave.\n\n\"I played it the same way I did in college. Marsh started going online and setting up bangs in Las Vegas, LA, even London, Barcelona. New guys--total strangers. I don't have any idea how he'd make contact, but every time we traveled out of Sandstone on vacation as a couple, whether it was to Houston or Abu Dhabi, I knew what was waiting for me at the end. A room full of cock. I worked at it all over again--made the little shit so jealous he saw red, every time. As soon as the door shut with the last guy gone, he'd tie me up and strap me good, weird little fuck would eat me out, cleaning up all their cum, then beat me red, then ass-fuck me, always ass...fuck...me,\" Dell said bursting into tears once again.\n\n\"I'm know I just keep repeating that I'm sorry, and I know that doesn't do much good, but I am sorry that there are guys in the world like Marsh, and guys in the world like the ones you met in those hotels,\" I said.\n\n\"That's not why I'm cryin'\" Dell whispered, wiping her nose. I waited her out.\n\n\"I'm cryin' because I wanted it. I wanted those men. I loved it Harper. It was the only thing I had, so when those men laid eyes on me for the first time, I wanted their eyes to pop right out of their heads. I went back to the gym, back to the clothes stores, I was the ultimate fuck, and I made sure I wore out every man who ever came in me. Marsh would show me the follow-up messages. Lots of these guys were sheiks and shit he'd met in the oil business. They'd offer him $25,000, $50,000 for just one night with me, one even offered $250,000. He'd always laugh it off and say, 'Why should I sell you when I can give you away?'\"\n\n\"All that shit ended when he started looking at Allie,\" she volunteered. \"I knew then that I couldn't outwait him for her to get old enough to leave on her own. I knew he'd do the exact same thing to her that he'd done to me. He'd screw her. Then he'd make her like it. Then he'd make her hurt, and he'd make her to like that too, just like he'd done me. And then even that wouldn't be enough. Then there would be other men, just like for me. That's when I started backing him down. My mama stood up for me, I was gonna stand up for Allie. I let him know I meant business and that wasn't nothin' gonna come from it. I started going to the gun range.\"\n\n\"You were just going to kill him?\" I asked.\n\n\"If I had to. I'd kill any man that laid hands on her against her will, I still will. Or I'll leave and take her before I ever see that happen,\" she said quietly.\n\n\"If I can help it, you'll never face that decision,\" I said raising the legal pad which was now thick with notes. \"You've given me an incredible amount of ammunition. In any fair setting, we'd immediately be able to get a TRO suspending all contact between Marsh and Allie, but this isn't a fair setting, and there are consequences from kicking the Dedier Hornet's nest. We have to blow it up--set it on fire. You've given me some things that are great leads, and I'm going to spend some time drilling down into them now and get to work following them up. But I have to tell you that unless we find something more, something that changes the calculus completely, we'll still just be in a pitched battle with a guy holding all the cards.\"\n\nDell looked at me solemnly and said \"I know you'll do everything you can. They was wrong about you. You didn't used to be good, you're good right now.\"\n\nI blushed at her compliment and the air between us went still.\n\n\"You've been asking me questions all morning. Do you mind if I ask you some?\" she asked.\n\n\"Sure\" I responded uncertainly. It was totally normal for clients to ask about the court process, and these were the questions I expected.\n\n\"How did it make you feel when you heard about...what I'd done...with Marsh and all those other men?\" she asked.\n\nI was taken aback. \"Why do you want to know that?\"\n\n\"Because you're the only person in the world other than me and Marsh who knows about it all,\" she responded, then added \"and I think you're a good man, so I'd like to know what a good man thinks about something like that.\"\n\nThe enormity of her revelation hit me like a train. This poor woman had been carrying the burden of a life filled with hate, contempt, and derision. The sin was not hers, at least not hers alone, but his. She'd made rough choices, arguably bad choices, but under circumstances so harsh they were unimaginable. Others would have folded under the pressure and abandoned their child, or life itself. Today, for the first time in her life she'd shared a part of her pain with someone, and she was looking for absolution.\n\n\"I try to think about these things the way a jury would--lots of different people. A fair chunk of them will be horrified at Marsh. The women will hate him. The men will be a mixed bag.\n\n\"I'm being totally honest here,\" I said, pausing. \"Officially the men will understand that they're supposed to condemn the activity, but a part of them will say 'She liked it, she asked for it. If it had been all that bad, she would have left. And some of them will be drawn in by your looks and wish they were a part of it.\"\n\n\"Now, I can't tell you what I would have done if I'd been you. My life has been lived in a different galaxy than yours\" I began. \"I had love, true love, from early on. Honest love from a great woman, I had great kids, and a great family. I go to church. You know that. The Old Testament talks about Job, and how God decided to test him to see if he'd remain faithful while everything was taken away from him. Even with the loss that Dorothy's death brought to me, I've never been challenged the way you've been. I wasn't raised poor, I wasn't shoehorned into a marriage by a cheat, I wasn't forced to do things in my sex life that I didn't want to do, with people I didn't want to do it with. So, I'm in no position to judge you.\n\nBut I can tell you this. If I can't make a jury understand from this record that you were living in a gold-plated hell, I'll give up my license\" I finished.\n\nDell wept again and, for the first time reached across the table to gather my hand into hers. My heart jumped at her touch, and I must have flinched some, for she laughed and said \"I don't bite Harper. Well, least not until I'm made to\" she smiled mischievously. I flushed crimson.\n\n\"Don't worry, I think you're safe...for now...\" Dell whispered, and I flushed again. I continued to take her story, but her touch and her words inflamed my imagination. I took a long bathroom break to clear my head, then did the very best I could to get every detail I needed and set up a protocol for further contact through Penny. Marsh's recent interest in running the church's youth group was particularly interesting. It wasn't in his pattern. He certainly wasn't beyond doing something that looked like public service to gain recognition and standing in the community, but this was different. Marsh Dedier was about as far from being an exemplary Christian as any man in history, so this recent activity set off alarm bells.\n\nBy the time that session and two others were complete, we had all the information we needed. Penny created Dell's request for medical records, both in Sandstone, LA, New Orleans, and Dallas at the site of each medical treatment for Dell's beating. She personally walked them through the hospitals and other health care providers so that there would be no wagging tongues. I fed all the details I could to Terry Clavell and waited to see if he could deliver me a nuke.\n\n<p align=\"center\">Chapter Five</p>\n\n<p align=\"center\">The Divorce</p>\n\nA week after my last interview with Dell a fat envelope arrived by hand delivery at our office. I heard a whoop from Penny out of the front office and scurried to the front to see what was up.\n\n\"You're not gonna believe this!\" she crowed and handed me the package.\n\nThe top document was an invoice from Clavell investigations. I knew from the bottom-line charge that Terry had hit his mark. The memo read: \"$90,000. $30,000 FOR EACH TIME I HAD TO SLEEP WITH THAT OLD BITCH.\"\n\nBeneath the invoice were a series of black 8.5 x 11\" glossy photographs over an inch thick, then a three-inch thick folder of business records. The first photograph was of the Pinetree Inn in Henderson Texas, the kind of place with \"a room where you do what you don't confess.\" There were a first few orienting pictures showing open curtains and the placement of remote cameras on them. Then there were camera shots taken from inside one of the rooms from the remotes. Terry had been careful and methodical as usual, establishing that what he had captured was in plain public view--providing of course that someone was standing right outside room 109 of the PineTree Motel.\n\nThe hunch that Marsh was showing an unnatural interest in the flowering youth of his church had born ugly, rancid, fruit. Marshall Eugene Dedier was captured committing repeated violations of Texas Penal Code Sections 21.01 and 21.02 by exposing himself to a minor, by engaging in sex with a minor, by engaging in deviant sex with a minor, by administering illegal substances to a minor for the purposes of inducing the aforementioned crimes. That was Nuke enough. Marsh tied the bow together by having the bad taste and even worse judgment to commit these crimes upon the youngest daughter of District Judge Antone Volse.\n\nWe had a hundred megaton nuke. I reached out to call Sheriff Tom, then put the receiver down.\n\n\"Penny, get me the Texas Rangers.\"\n\nThey arrested Marsh Dedier as he walked out of the S.I.S.D school board meeting a week later. My interview with the Texas Rangers' field chief the next day went from incredulity that I would even dare to involve the Rangers in a simple divorce, to intrigue within a couple of photographs, and outrage at six. A helpful tip to the Sandstone Register led a reporter to be present to capture the moment when the Texas Rangers handcuffed Marsh and ducked him into their Suburban. The Rangers simultaneously seized Marsh's cell phones and his computers, the location of which had been surreptitiously, and accurately, supplied to the Rangers by counsel to Ms. Delta Rucker Rainer.\n\nDell and I couldn't wait for Marsh's ultimate, if inevitable, conviction. As soon as I had the photographs, Dell and I signed a retainer agreement. Dell still had no cash, and I was already on the hook for over a hundred and thirty thousand in expenses. Dell had signed a marital property agreement with Marsh, an ironclad one which gave her none of the Dedier fortune in the event of divorce. My agreement was to take 20% of any sum recover above what Dell had contracted to accept on divorce, which was zero.\n\nJudge Volse recused himself from the criminal dispute, of course. Elyse went off to a boarding school back East. Marsh hired the hottest gun in the criminal defense world, a man in Houston who'd gotten the rich and famous off from far worse offenses. Visiting judge Spofford was assigned. Spofford was old, mean, and uncorruptible, he denied Marsh bail and moved him to Huntsville as a flight risk. Nine months and three million in wasted fees later, the jury convicted Marsh on every count for which the DA had secured indictment. Judge Spofford sentenced him to four sentences of 50 years apiece, to run consecutively. Marshall Eugene Dedier would spend his remaining days in prison.\n\nDell and Allie moved out of the Dedier mansion the morning after Marsh's arrest. The two took up residence in a seedy upper-floor apartment on the square, and Dell began working for The Buttercup Diner. Meg Simpson knew that, despite her connection to the very rich, Dell had nothing. But Meg was good that way and talked the landlord into letting Dell and Allie live free for the first two months. The property hadn't been leased for years for good reason--it was a piece of crap.\n\nThe afternoon after Marsh's arrest, I called Raleigh Simpson, the Dedier's current personal counsel and Meg's son. Raleigh, like his mother, was good people, honest, very smart, and experienced enough to know when someone was pulling his leg and when he was facing the real deal.\n\n\"Raleigh, I'm going to be representing Delta Ann Dedier. Given recent events involving Marsh, she intends to file for divorce. She believes that it would be in the family's best interest for their divorce to remain essentially private and to have a plain vanilla property division. If this does not occur, however, I'm sending over the form of petition which we will be filing\" I concluded.\n\n\"I don't know what kind of property division you could be talking about Harp. Dell signed a marital property agreement. I know because I drafted it. I'd be surprised if she has over $50K in property to her name\" Raleigh responded.\n\n\"Well Raleigh, that's why I'm sending the complaint. The prenup was involuntary, the worst kind of involuntary, and after you become acquainted with the facts, I am sure you'll agree with me about that. Oh, and we'd like to talk to you and Lenora about the property division tomorrow. We'll sending the form of marital property agreement incident to divorce as well. To break the news, Raleigh, its' going to pay her $84 million dollars free and clear.\"",
        "Raleigh laughed long and hard. \"Look Harp, I love you and I owe you. You were the only guy in this town who didn't piss down my leg when I showed up out of law school. You set me straight, gave me words to live by, so I really do owe you. But you're way out of touch with reality on this. The Dediers don't even have that kind of money and if they did, they damned sure wouldn't give it to someone who was leaving the family the first time the crap hits the fan. I understand the timing, I mean, kick the guy while he's down, only chance she's got to do it, really. You might be able to wheedle seven figures out of them if you played it right and didn't piss Lenora off, but that's it. She never much liked Dell anyway and I imagine she'd be happy to get rid of her. I'm just shooting straight with you buddy,\" he finished.\n\n\"Do you remember what I told you about the facts Raleigh?\"\n\n\"Sure, never think you're big enough to change them. You can spin 'em, or package 'em, but they don't change\" he responded.\n\n\"Precisely Raleigh. Read the fucking facts when you get the complaint. Read the documents Raleigh. Fifty Million. Not a penny less and have Lenora at my office tomorrow at 4;00 to get the papers to sign\" I said and hung up.\n\nLenora Dedier looked the part of a Texas matron. She was tall with silver-gray hair blued in the style of the older ladies at the church. She wore the kind of dress that didn't look expensive but was. She was adorned with probably $150K in jewelry. Her expression, particularly when she cleared the door and saw Dell sitting at the table, was chipped from ice. She sat at the head of the table and refused look Dell in the eye or acknowledge her existence.\n\n\"Let's get this over with\" Lenora began \"I have to be at the church hall by 6;00 and I don't want to be late. I've come out of respect to your wife Harper, of whom I was quite fond. She taught Allie and her cousins and was a personal favorite.\"\n\n\"Thank you, I know she'd appreciate hearing that\" I responded.\n\n\"Don't interrupt me\" Lenora barked.\n\n\"Do not interpret my deference to your dear wife as any signal that I plan on giving that bitch a penny of our family's money\" she said, nodding towards Dell. \"We don't have nearly as much as people believe we do, and we aren't apt to spend it on a worthless slut who abandons her family at the first sign of distress. Raleigh informs me that we have an ironclad marital property agreement which deprives her of any part of the Dedier estate, so perhaps you'd enlighten me as to why we're here and what we're going to talk about?\"\n\n\"I take it that you weren't persuaded by the x-rays of my client's broken ribs, or the fracture to her left orbital bone just two days before her signature appeared on the marital property agreement? Or the three referrals to protective services that were made by hospital officials on her behalf during the same quarter?\" I responded.\n\n\"I'm quite sure she got precisely what she deserved,\" Lenora said a little too smoothly.\n\n\"How about the X-rays? On four occasions? From three different hospitals? Those too? She deserve those too?\" I responded.\n\nBut Lenora had responded easily. Too easily. That Marsh was an abusive sick piece of shit was now old news. He was already a pedophile, so his reputation could sink no lower. Every single organization in town had dumped him in a matter of days. Dumping on Marsh in a lawsuit, as the divorce petition did for 42 exquisitely detailed pages, would certainly make the first page of the Sandstone Register, and probably make it to the Beaumont and Houston papers too, but it was little incremental leverage against Lenora or the Dediers, who were already dealing with a much bigger firestorm and could afford to just hunker down and let all of it pass.\n\n\"I thought you might say that\" I responded. Lenora looked momentarily shocked, clearly expecting me to flail about wondering why the detailed history of abuse weren't enough.\n\n\"So, I think I will appeal to you on the one metric you and your family have always known--money\" I remarked. Lenora said nothing. She would have done well in the world series of poker.\n\n\"You see, records have come into my possession that, during their marriage, properties owned by Marsh, directly or in the name of others, have generated over one hundred and sixty-eight million dollars, all of which are community funds.\"\n\nLenora gave no visible reaction.\n\n\"Records have also come into my possession that, for at least the last eighteen years, your family has regularly underreported the production of oil and gas produced from your lands by around 25% by filing false P-1 forms, the last 38 of which following the death of your dearly departed husband bear your name as trustee. I know that the purchaser of the excess oil and gas production is Ark-Tex out of Magnolia Arkansas and that the proceeds of these sales have been consistently placed in foreign bank accounts in both Switzerland and the Grand Caymans, never to be revealed to the state of Texas or the United States Internal Revenue Service\" I said. I pushed a thick three ring binder of well-organized records in Lenora's direction.\n\n\"You may not give a shit about your son. I certainly don't and it would surprise me if my client does. But I expect you to care about yourself. You've committed Texas felonies by failing to properly report production. Go look up the name Clinton Manges and you'll see where that ends up. You've committed federal felony offenses by underpaying taxes. The last guy who did that got 5 years in prison, at age 84, and he hadn't been doing it for the last eighteen years. I cannot threaten you with criminal prosecution, and do not do so today. But I can assure you that if Ms. Rucker is required to trace the existence and status of her community property, it will inevitably cause you to be forced to produce, and me to make public at trial, this vast and continuous criminal theft from our government.\"\n\nLenora, who had been pouring over the papers with intense panicky eyes, turned white.\n\n\"I don't know what they serve in Texarkana FCI Ms. Rainer, but I doubt it is anywhere near as tasty as what you get out on your place. The deadline to make the wire transfer, and to have Marsh sign the papers divorcing Dell, giving up all custody rights of himself and his family, and assigning these funds to Dell, is tomorrow at 4;00 p.m., so you have work to do.\"\n\n\"We just don't have that kind of money!\" Lenora screamed in a dead panic.\n\n\"To the contrary, Ms. Dedier\" I said as I pulled the notebook to me and dog-eared tab #47, \"at last count the Dedier Trust, over which you have full and complete authority to act as trustee, held One Billion, Six Hundred Forty-Two Million, One Hundred Eighteen thousand dollars and twelve cents.\"\n\nLenora became physically sick when the correct balance sheet on the family fortune was recited to the penny. That was okay. I confess that I enjoyed her discomfort, and the mess cleaned up just fine from the hardwood floors.\n\nAt 3;59 p.m. the following day, $84 Million appeared in the trust account of the Law Offices of Harper Betts, P.C. We were cloistered in the conference room waiting for the news from the Bank.\n\n\"They did it!\" Dell screamed. \"They agreed to everything?\"\n\n\"Everything\" I answered.\n\n\"So, I can go?\" she asked.\n\n\"Go\" I responded?\n\n\"Go. Go anywhere I want? Move? Get out of here, get away from them, forever?\" Dell asked.\n\n\"Of course, I said, my heart falling. Only then did I realize that I'd become far too attached to this woman and was filled with dread that she might leave Sandstone.\n\nMy face must have looked it, because Dell said \"Oh, I don't know what I'm going to do. This is all new.\" Penny, who I might have mentioned does not miss a beat, picked up on my disappointment immediately.\n\n\"I expect so\" I responded. \"Well, as soon as you get it set up, we're ready to wire transfer your part of the funds to you. Here is a statement of your account, and here are the names of three financial advisors whom we've worked with in the past. We recommend any of the three and intentionally chose individuals living outside of Sandstone to preserve your privacy and avoid potential conflicts of interest involving the Dediers.\"\n\n\"Thank you. Thank you so much for everything\" Dell said as she hugged Penny first, then me. \"I can't believe it. I still can't believe it. You've both, you changed my life. You've given me a life, the first one I've really had.\" She scribbled her name on the distribution sheet and skipped out the front door. I was the first lawyer in recorded history to be heartbroken to receive a $16.8 Million contingent fee, because it meant that my case, and my time with Delta Rucker, was now at an end.\n\n<p align=\"center\">Chapter Six</p>\n\n<p align=\"center\">Installment No. 1</p>\n\nThe surprising thing I learned about big money, of which I'd never had much, is that it changes you way less than you think it will. You worry less about meeting the next mortgage payment, but in a few days, you realize you're still about twenty pounds overweight and searching for inspiration to lose it.\n\nI bought Penny the most souped-up Ford F-250 in history, maxed out her 401k, then transferred another $500K to her bank account for good measure. Then I went home. Home was a cabin on Timmons' Lake about four miles south of town. Looking at it with the fresh eyes that the time and money from Dell's case gave me, I realized I had let it go to seed. So, instead of returning to my office and looking for the next big thing (like there would ever be another case like Dell's again), I stayed home and worked, and worked, and worked some more until by body ached like one giant bruise. But gradually, the outside of the house started to look like something you'd want to live in. Rudy and Julie, my two labs, got more outside work that next couple of weeks than they'd had in years. They bitched and moaned pitifully at first but came around like troopers after a few days.\n\nDealing with the inside of the house was harder. Though I returned inside each evening exhausted, I still had trouble sleeping. Everything about the home and everything in the home reminded me of Dorothy and the life we'd built together. I hadn't touched a thing since her death, as if keeping a snapshot of my life via its contents would help me hold on to the happiness that resided there when Dorothy was alive.\n\nIt felt disloyal to remove any of the pictures, the chalkboard she'd put on the side of the fridge, even her damned macrame supplies. The kids had commented on it when they visited, quietly suggesting that the place could use some \"sprucing up\" and even suggesting I might consider moving to Houston to be closer to them. They were, after all, about to start having kids and I'd want to be close.\n\nI'd accumulated books on grief and how to deal with it, but never read them. Now I did. I put all our family photos into a single room--my study. It became the Betts family shrine. While Dorothy was in most of the pictures, she was never alone in them, she was always in the company of family, always providing me a reminder of what I had to live for along with what I'd lost.\n\nPenny called a week into the sabbatical.\n\n\"She wants to see you\" Penny said excitedly.\n\n\"She?\" I asked.\n\n\"Dell, dumbass! Who the hell else have you made millions for recently?\" she asked.\n\n\"Okay, why?\" I asked, \"When?\"\n\n\"Tonight!\" she bubbled.\n\n\"Tonight?\" I asked, puzzled.\n\n\"Be here at 7;30 and clean up for God's sake. Last time you came by you smelled like a damned horse.\"\n\n\"Ok\" I said, \"leave the AC on I guess.\"\n\n\"You think?\" Penny laughed into the phone.\n\n\"What is all this about?\" I asked, but Penny just kept laughing and hung up the phone. Shit, you'd think a nice F-250 and a half-mill would buy a little Goddamned respect, wouldn't you? I thought.\n\nI cleaned up as instructed, put on khakis and a nice business shirt and my best blazer, wondering all the while why Dell needed to see me, and why she'd chosen such an odd hour to do it. On the way out I dashed some cologne across my neck only to wonder what the fuck am I doing that for? I drove to my office, cranked on the lights, then went to the back, and waited. 7;30 turned into 7;45 before I heard the door open, then close, and the inside lock being twisted to close it. Why did she do that? I wondered. I heard the lights in the front entry and in the hallway being clicked off as Dell walked my way.\n\nClick, click, click, clack, the unmistakable sound of high-heeled shoes cascaded down the hallway. A walking wet dream appeared at my door. Dell stood there in a low cut, tight as skin, little black dress. Her legs were stockinged in black hose and four-inch stilettos adorned her fee.\n\n\"He...llo,\" I stuttered.\n\n\"You like?\" she asked as she twirled. The back had a long plunging dip, nearly to the top of her bottom. I could see the slightest dimple between her butt cheeks. The front also dipped, revealing a good portion of her generous curves.\n\n\"Yes,\" I replied, dumbfounded.\n\n\"I've come to pay the first installment of my debt to you Harper,\" Dell announced.\n\n\"But...you...don't owe me anything Dell. You took care of everything\" I said, genuinely perplexed.\n\n\"Come sit on the couch next to me, and I'll explain it to you,\" Dell said patting the cushion next to her. The word came out \"splain\"--I'll \"splain\" it to you--like Ricky Ricardo used to say to Lucille Ball. My interviews with Dell taught me that her speech reverted to its most southern roots when she was nervous.\n\nI sat on the couch next to her.\n\n\"I've paid my fee. I know that. But I haven't paid my debt. You helped me when nobody else would. You believed in me when nobody else did. You helped me in a way nobody else could\" she said evenly. You treated me with respect, even when I told you I didn't respect myself. And you never made me feel like a tramp, even though Marsh made me one. Then an imp seemed to emerge from her: \"plus, our deal was clear, wasn't it? Eight sessions of whatever you want from me in exchange for your services?\" she asked mockingly. \"That's what I recall anyway. Was it eight, or ten? Or was it fifteen?\" she asked as a huge grin crossed her face.\n\n\"Dell, you know I never considered that. I never would do that,\" I responded.\n\n\"I know, that's why I'm here, and I won't take 'no' for an answer,\" she replied.\n\n\"I've been thinking about this a lot, Harp. Ever since I walked out of your office. I had to drive all the way over to Beaumont just to talk to the bankers and make sure it was real. I still can't get my head around it. I don't need a rich man Harp; you've seen to that. I don't need a powerful man, I never wanted one. I need a good man, a man who knows me, who knows what I've done, the choices I've made, and thinks I'm okay anyway. I need a man who is strong in the mind, and who is kind. You're the first man in my whole life who's ever listened to me, ever really given a damn about me, ever believed me or believed in me or stood up for me. I'm not about to let that go by, and if you think I would, you're not nearly as smart as you think you are,\" she replied.\n\nThen, without asking she leaned over and kissed me. I backed away from sheer shock and she giggled in reply. We joined again then and I warmed to the task. Her lips were soft and tentative at first, exploring my upper lip, then traveling to my lower before gathering it entirely in her mouth and giving it a gentle pull. I moaned, my cock rising like a NASA booster, and I pulled her face to mine as our tongues began to dance in and around one another.\n\n\"Now,\" she said, sitting up and running the nails of her right hand on my thigh, whisper in Ms. Dell's ear every naughty thing you thought about doing to me when I told you all about me. It's really very unfair, I think. I told you everything, and you haven't told me a thing about yourself. That doesn't seem fair to you does it, Mr. Betts?\"\n\nI knew that what Dell proposed to do was wrong, from every single possible angle it was wrong. It could get me disbarred. It could result in the loss of the fee I had just earned, a life-changing fee. I would arguably be taking advantage of the very vulnerability that our privileged communications had revealed. But when she gave me a slow, radiant, smile that must have travelled from the bottom of her feet to the top of her head, I knew that none of those fears would ever come to pass. I had been offered a gift of unimaginable depth--one I would not refuse.\n\nBut how to answer Dell's lusty question? Honestly, I thought. I leaned into Dell's left ear and whispered \"everything. I thought about every naughty thing in the world, and I've kept on thinking about it ever since.\" Dell's eyes lidded shut for a moment as she processed that reply. I could feel the hard nipples of her breast as she leaned against me and contemplated her next move.\n\nI kissed her again, a slow probing kiss, the kind a 7<sup>th</sup> grader gives the girl of his dreams for a first kiss. Dell responded hungrily and I cupped her face in my hand again. The accumulated sexual tension of months working together exploded into a raucous, grinding, unbridled exchange of tongues and breath, during which Dell threw her leg over the top of my lap and straddled me. She dove into my mouth with her tongue, so deeply that I could feel it in the back of my throat. I thrust up against her hard and gripped her nearly nude bottom. We parted breathlessly and then both promptly burst into laughter as we relaxed for a moment.\n\n\"Whoa, I definitely did not see this coming\" I admitted.\n\n\"Me either. When the divorce went final, I started thinking that I didn't want to see hide nor hair of a man forever, then I kept comin' round to you. I kept thinking about things you said, about what you stood for. Penny helped me get up the nerve\" Dell cooed.\n\n\"Crap,\" I said \"another thing to deal with.\"\n\n\"Shush!\" Dell replied. \"She loves you, the good way, and she's worried about you.\"\n\n\"So, I was outnumbered from the beginning?\" I asked.\n\n\"Oh yah,\" Dell said, \"I learned a thing or two about preparation for important events here in the last few weeks.\"\n\nI might have enjoyed these little bits of conversation even more than the kiss and the incipient promise of sex, but my hard cock was issuing its own demands and Dell could feel it press between her legs. She arched her back, forcing her pussy down onto my lap. She moved her hips back and forth over me, the friction between her tiny thong and my pants lighting the fire between us not at all. Soon we were humping one another madly, our lips locked together to complete the connection. Suddenly her movements became intensely passionate, a ferocious grinding of crotch on cock until she went off... AGGGHHH, AAGGHHH, AHHH, AAHHH, AAHHH, ohhhh, ohhhhh, ohhhh yes, yesss, she cooed as she came down from her high and collapsed against me, my face nestled against her neck. She pulled away from me and her eyes were dewy.\n\n\"I can't seem to keep from making you cry\" I said, rubbing my thumb over the corner of her eyes to clear them of the salty tears.\n\nDell laughed lightly \"Good tears. Very good tears, the best kind\" as she lay her forehead against my chest.\n\nI cupped the side of her face and stared into her dark brown eyes. I am given to too much reflection, generally a man of thought rather than action. But that evening I refused to give in to my ordinary instincts. I knew what I wanted. I didn't know exactly what I'd done to deserve it, but I had gotten it. Working with Dell, listening to her, believing her, defending her, they had all rekindled in me something like my former self. I would never be precisely the man with her that I was with Dorothy. We had decades of shared history and Dell and I just a few weeks. Dell would never have to be the woman she had been with Marsh, but maybe, just maybe, we could be enough for one another, whether just for a time or for forever, time would tell.",
        "\"Shhhhhhh,\" Dell replied and put her finger to my lips. \"You're thinking, aren't you?\"\n\n\"Yes,\" I laughed. I guess lawyers aren't the only folks who can read people.\n\n\"I want to be right for you,\" I heard myself say to her. God that sounded stupid. What do you mean right for her?\n\n\"You caint possibly be wrong,\" Dell drawled and kissed me on the forehead, bringing her lovely chest to bear on my jaw. The mere touch of her fired me again. I knew that what I wanted right then was to please her, again and again until she could take no more pleasure.\n\n\"So, you want to pay your fee, hmmm? Stand up. Take off your dress. Look me in the eye while you're doing it,\" I ordered.\n\nDell apparently liked it when I became authoritative, for she cocked her head in mock surprise, smiled, stood, and slipped the shoulders of her little black dress off so it could fall to the ground around her. Good God she was stunning! She wore no bra. Her tiny thong was black, just like her dress. I pulled her towards me, laying my face against her midriff and tracing my hands softly over her legs, her exposed rump, then back to her front. I changed the angle at which my hands approached her so that my nails teased across her arms, breasts, stomach and inner thighs. Dell flinched to my touch and her breathing quickened. I looped my hands into the waistband of her thong and pulled it down past her ankles. She smelled delicious.\n\nI laid her down on the couch, pulling her left leg up and resting it on the back of the couch so that her quim was fully exposed. I lowered my head to just above it and blew softly. She arched her back up, searching for my mouth with her pussy, but I just backed away. I refused to be Marsh. I refused to simply take from her. I wanted her to want, wanted her to need, I wanted her to beg.\n\n\"I'm going to undress now\" I told her. Dell laid back on the couch, her back resting against one of the large pillows. I threw my sport coat across the desk, followed by my shirt, then shoes and socks, then pants. I did nothing quickly and my eyes never left Dell's. She was desultorily rubbing her two fingers over the top of her clit, a motion I found mesmerizing. When I dropped my boxers and my cock appeared, upright and ready, Dell said \"ooohhh, bonus!\" My size and girth were all out of proportion with my physical stature, which was ordinary.\n\n\"Would you like to touch it?\" I asked her.\n\n\"Oh yes,\" she responded immediately, then, seeming to think better of it she asked, \"with my tongue?\" She sat up and reaching out to lightly touch the underside of my tool and rake her fingernails across the taut skin, before forming an \"O\" with the fingers of her right hand and jacking my cock softly. Bolts of pleasure shot through me like electric shocks. I was nearly out of control and could sense the presence of pre-cum at the time of my cock. When Dell leaned toward me with the obvious intent of taking my cock in her mouth, I pulled away.\n\n\"Not yet,\" I said. \"Okay?\"\n\n\"Okay, you're the boss\" Dell smiled.\n\nI kneeled on the couch and lowered my mouth to her neck, then kissed lightly across her breasts, her stomach and down to her pussy, never settling on one place, constantly promising more direct contact with her clit, but never quite making it. In no more than a minute Dell was humping her hips up and down and breathing like a miler who'd just completed her race. I slowed then, flattening my hands to take the edge off my touch, and covering the same ground all over again, only this time biting her nipples lightly. When the palm of my hand hit Dell's pubic bone, she grabbed my wrist, staring me down with a look of ardent lust.\n\n\"Please,\" she said simply.\n\n\"Please what?\" I asked.\n\n\"Please finish me, please,\" she repeated. I slipped my index and second finger into her, moved them up and down along her slit, her slickness inviting me to plunge into her. But I waited, and waited, and waited while I worked her, sensing her build up towards her peak, then slowing the process and working less erogenous areas to ensure that she did not reach orgasm. She'd finally had enough and broke.\n\n\"In. In Goddamnit. Do me, do me. DOOO MEEEE\" she bellowed as she grabbed my wrist again and sunk my two fingers back into her quim. I laid my left arm over her top and pushed her back onto the couch and took off, rubbing three fingers in a cone in and out of her pussy, searching and feeling her slickness to find just the right angle to drive her mad. Within seconds she hunched up at the sky and screamed \"CUMMMMMINGG, I'M.... OHHHH, ......OHHHH.... CUMMMMMING HARD GOOD LORD, CUMMING, CUMMING, CUMMING, SO HARD, SO HARD, SO...SO...SOOO...oh, oh, oh, oh wow, oh wow, yes, yesss, YESSSS AGAIN.... FUCKING AGAIN, AGAIN, AGAIN YESSSS, YESSS, YESSS HELL YESSSSS!\"\n\nI slowed my hand and let her come down. Her pussy muscles were so strong that I could actually feel her grip and release my fingers over and over as the passion ebbed and flowed. Finally, she reclined completely, the sexual tension between us momentarily extinguished by her two strong orgasms.\n\n\"Oh my God,\" she said \"incredible,\" and threw her arm up over her forehead. After a pause Dell sat up and cupped her huge breasts in her hands, pinching the nipples as she went and staring at me with lust. Her breasts weren't one top one percent, they were more like one in a million.\n\n\"Your breasts are perfect,\" I said, stating the obvious.\n\n\"You're sweet,\" Dell replied.\n\n\"I'm honest,\" I responded.\n\n\"Now, all this was meant to be for you. What do you want?\" she asked.\n\n\"To give back as much as you're giving me,\" I replied. \"Please take off everything else\" I ordered. Dell smiled and stood up. With great effect, she slowly and carefully undid the tabs on her garter belt, the unhooked it and threw it on top of my clothing. She unstrapped the high-heeled shoes and threw them to the side, then rolled her stockings down her thighs. She was gorgeous. How could Marsh not understand what he had? How could he not value her? Even if he was just a plain horn-dog, this was the most beautiful woman I'd ever seen, live or in print.\n\n\"Marsh was an idiot,\" I blurted.\n\n\"Let's not talk about him,\" she responded.\n\n\"Agreed,\" I said. \"Lay down,\" I said, patting the couch. Dell laid down and asked without speaking whether I wanted her to lift her leg to the back of the couch as I had done before. I did and she did. I then spread her legs further apart and urged her to hold her left leg just below the knee to elevate it out of the way. Then I dove in, trailing soft kisses across the sensitive flesh of her inner thighs, and finally landing on her labia, tonguing it ever so slightly and tasting her tang. Dell began moaning again before I ever reached her clit. She was highly sensitive to touch. With a few seconds of slowly tonguing up and down her slit, I felt her free hand at the back of my head. I pulled it away. I wanted to be in control, not Dell. I wanted to stretch this out, to make her beg for it all over again until she was so insane for release that she cried out for it. Within just a few minutes she was there, mumbling \"please, yes, yesss, please, please, hard, hard...oh, oh, yes, harder, please harder,\" as I circled her clit with my tongue.\n\nI had no intention of relieving her hunger so quickly. I meant to make her fly. Slowly, I inserted two fingers into her sopping wet pussy as I teased and nipped and bit at her clit. Dell arched her back, then hunched down her pussy onto my mouth again and again. Several times she clasped the back of my head to pull me into her, and several times I put her hand away. Her \"penalty\" for her ardor was to suffer even more light-tongued titillation. Her breath, now coming and going in great heaves, gave her away. She was on the edge again and wanted desperately for me to push her over.\n\n\"No, .... noooo, nnooo...please don't... please don't stop, no, donn, don't stop doing what oh, shit, fuck, shit, fuck, yesss, yess, now, now, now NOWWWWWWW!!!\" Dell screamed out as I mercilessly licked and bit her clit while forcefully moving my two fingers up and down her slit \"YAAAAASSSS, YAAASSSS, OHHHHH, OH, OH, NOWWW, NOWWWW, OWWWWWWMMMMM.\" she wailed as I extracted another hard orgasm from her. At the end my jaw ached, my neck ached, my cock was iron hard, and I felt like the king of the world.\n\n\"Turn over. On your knees, ass to me\" I ordered. Dell complied quickly, spreading her knees slightly and raising her ass so that it was within easy reach. I took up the position behind her and immediately slid every inch of my cock into her in two thrusts, not pausing for gentility, not worrying about whether she could handle it, just doing it. Dell's head shot up and her hair flew back across her muscular back.\n\n\"OOOHHH, OOHHH, SHIT, OOOH GOOOAWWWWD, YESSS, GOOODDDDD GOD, OH, OH YEAH, OH YEAH,\" she screamed as my oversized tool sent her into a deep orgasm. Something came over me and my right hand lashed out against Dell's backside to deliver several loud pops.\n\n\"NO ONE SAID YOU COULD DO THAT\" I yelled irrationally, \"no one said you could cum. I need to say it. I'm the one, do you understand?\" I asked.\n\n\"OHHHHH, YESS, YESSS SIRRR,\" Dell purred beneath me as my thrusts gained momentum. My right hand gravitated to her hip, pulling her luscious body into me, while my left sought out her dark locks. I laced my fingers into the silky mass and pulled her face upright. I was no longer rational, not even close to it. I was so fully under her spell that everything else around me ceased to exist. There was, for a few short minutes, nothing in the world but the slick muscular tunnel gripping my cock, her luxuriant hair in my hand, her enormous breasts dangling wildly beneath her and her fabulous tight ass backing into me to meet my every thrust.\n\nI nearly went black with the unbearable tension of an oncoming orgasm. Blood rushed out of my head and into my lower trunk. Suddenly even Dell's strong undulations into me weren't enough. I gave her a quarter turn until her body was upright against the back of the couch, her breasts lapping over the back. From this angle her body could move very little as I rutted into her. I redoubled my efforts, changing from short frequent strokes to long hard thrusts that knocked the very breath out of her. Every fiber of my being focused on muscular contraction that began in the bottom of my feet and erupted with a Jetstream of cum spurting into her. I would recall, much later, that I had been mindlessly screaming my fool head off during most of this interlude but felt no subsequent embarrassment because Dell was right there with me, riding the same wave. In the moment, however, there was nothing for me but the cum, the magnificent, world-is-coming-to-an-end-and-I-don't-give-a-shit-about-anything-else cum. I would later replay that scene over and over in my head, trying to draw from it every ounce of information and of ecstasy that it contained. Finally sated, we fell side by side onto the couch together.\n\nA few seconds, or maybe minutes later Dell uttered \"Oh my God! That was unreal.\" Dell turned me so that my feet were again on the ground, then, lowering herself onto the rug, she reached for my cock. This threw me completely. When Dorothy and I finished, we were finished and that was that. Head for the towels, head for the bathroom, and on to the next thing.\n\nI was well and fully spent and thought I had nothing left to give. I flinched back and put my hand on Dell's shoulder to push her back.\n\n\"Please,\" she said, \"you'll like it, I promise.\" I let my hand up and she drew my slimy cum-covered cock into her mouth. Slowly, lovingly, she worked her tongue up and down my shaft, licking me clean as gently as a feather at first, then with increasing urgency as my tool gained steam and grew beneath her care. Finally, she sat up, her right hand lazily jacking me up and down.\n\n\"I can get you there,\" she said \"you wanna see?\"\n\nI kissed her, feeling her cheeks wet with my own seed. \"I have the feeling you can take me anywhere you want me to go.\"\n\nDell smiled and began, holding her right hand under my cock and gently licking the underside of it from the bottom to the top. She was so talented. She approached sucking cock like a dolphin handles swimming, naturally, joyfully, exuberantly. She was astoundingly patient. When my endurance flagged, she slowed, but never stopped, kissing my thighs and stomach to give my poor abused cock a break, but always returning to the task. Her lips were experimental, searching, scorching, hungry. Within a surprisingly short time Dell had brought me back to full bloom and I was edging inevitably towards a second strong orgasm.\n\n\"Have you ever come in a woman's mouth?\" Dell asked coquettishly. I nodded \"no.\" Dorothy was the love of my life, but not the least bit adventurous in the bedroom.\n\n\"Well, then, I'll have had my first virgin, won't I?\" Dell joked. Between licks and slurps Dell teasingly asked me how I wanted it: did I want to shoot it on her face? On her boobs? In her mouth? When I didn't reply, her attitude changed. I realized that she knew just what to say, and how to say it, to put the starch back into me.\n\n\"Fuck my mouth Harp. Force me. Work it in and out of me until you gag me. I want to feel your big cock fill up my throat.\"\n\nDell's filthy words drove me insane just as she'd hoped they would. Inside a second, I stood before her, placed both of my hands behind her head and inserted my cock into her hungry mouth. I fucked her throat with a vengeance, and she took it like a champ. Just as before, I felt myself starting to lose my grip on any sense of time, place or person. That's when Dell turned the tables. Just as I'd done with her before, she pulled away and teased me with her hand.\n\n\"Are you going to shoot your wad into my mouth?\" she asked.\n\nI was too embarrassed to say \"yes\" so merely nodded.\n\n\"Ohhh, so shy,\" she said smiling at me. Her fingers circled my cock and she spat on it for lubrication, then jacked me harder and harder until I was again on the verge of a spectacular orgasm. She accomplished it not through physical manipulation, but mental.\n\nShe opened her mouth wide and said, \"shoot it in my face, all over me.\" I groaned loudly. She took me through two more cycles, each time building me to the edge of orgasm, only to pull away and leave me unfulfilled. After the last, I unabashedly begged her for release, just as she'd begged me earlier.\n\nBut Dell had a different plan.\n\n\"Make me,\" she ordered then repeated \"make me,\" when she saw my confusion. I lost it then, grabbing her head and thrusting into her mouth. It took only a few jerky thrusts before I exploded in her. She collected most of my seed in her mouth, then, in what I later came to conclude was planned, pulled my cock out of her mouth and rubbed the tip over her cheeks and chin as I gave the last few spurts. I collapsed onto the couch behind me, knees too weak to stand. The vision of her burned into my brain as she kneeled before me, a stunning carnal wet dream, dark, lovely, and so utterly alive.\n\nShe lay her head on my right thigh as I recovered, then decided to lift the mood. \"I think that's a very successful payment of the first installment, don't you?\" Dell asked.\n\n\"Oh my God yes,\" I gushed. \"I'm not sure I can survive another payment, and I'm damned sure eight will kill me,\" Dell pealed in laughter and hugged my thighs.\n\n\"Well,\" she said smiling and pausing to take a nip at my left thigh, \"we'll just have to find out, won't we?\""
    ],
    "authorname": "ProperlyTwisted",
    "tags": [
        "non-consent",
        "bdsm",
        "gang bang",
        "big boob",
        "blowjob",
        "cumshot",
        "romance"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/payment-in-kind-3"
}