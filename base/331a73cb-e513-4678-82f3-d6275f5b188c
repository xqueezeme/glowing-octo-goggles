{
    "title": "There and Back Again Ch. 019-020",
    "pages": [
        "Author's Note: \n\nThe delay in chapters posting to this site is not of my making. It takes several days for documents to be reviewed and approved by the Literotica moderators. To counter that, I have combined two chapters into one document, and will continue to do so until this site is caught up. \n\nThere are currently over 100 chapters of this story. By the time this site is caught up, there will be more. Chapter sizes will remain 3500-5000 words, to keep them consistent. I plan to take this story through to the DA2 timeline, and possibly further if I can figure out all the changes that need to happen...Currently, I write a new chapters approximately every two weeks. \n\nI want to thank everyone for the enthusiastic responses to this story! It will not remain 'non-erotic' forever, and will eventually fall into the Sci-Fi and Fantasy Category, so keep an eye out! \n\n-E \n\nChapter Nineteen: Time for Truth \n\nWe rejoined the others, and I gave Aedan a slight nod as I sat down. He smiled at me, and I rested my head against his shoulder for a moment. Leliana was back, her expression tightly controlled, and I was briefly tempted to try to rekindle her blush, but decided that would be unkind. Aedan, Wynne, and I discussed the ritual that was to take place in Redcliffe. Wynne was skeptical, but Aedan and I both thought Morrigan was the best choice to enter the Fade. The question was how to get her to agree to it. My suggestion was to appeal to her pride - for Aedan to tell her that he didn't want to impose on her, but that he wasn't sure any of these other mages could do it, and ask her to help him choose someone. He wanted me to convince her, but I knew he could do it, and he needed to stay firmly in everyone's mind as the leader. \n\nI also suggested that Aedan try to get a few moments alone with Solona - assuming she was in Redcliffe - and see if she wanted to be recruited. He was the Grey Warden - I figured the offer should come from him. The conscription would certainly have to, if she agreed. \n\nWe sat around the table or wandered the deck of the boat for the rest of the day. I was a tad seasick, having never been on a boat before, until Wynne used some sort of spell on me and I felt better. After that, sailing on the lake was glorious - sun shining, not excessive wind, and relatively warm. The spray from the water felt nice, though it made me wish for more - I was still sticky and disgusting from the corpse Alistair had dropped on me. \n\nWe docked in Redcliffe late in the evening. We were met there by Bann Teagan, with a few of the knights and a very subdued Theron. Both men nearly jumped out of their skins when I disembarked, and I hid my smile behind my hand. Theron had the grace to look embarrassed, and I noticed Aedan narrowing his eyes in response. \n\nApparently the mages had already arrived, and were in the process of readying the ritual; it would be morning before anyone could enter the Fade to rescue Connor. As we walked up to the castle, Teagan handed a piece of paper to Aedan, which was tucked into a pocket before I could blink. Morrigan joined us, pointedly telling Jowan to wait outside. \n\nTeagan managed to suppress his questions until we were inside, safely in the library. \"My lady! I thought I'd lost my mind when you disappeared. Morrigan assured me you would be fine, but I was still worried. And why are you wearing armour?\" \n\nI hesitated, but we had all decided to tell Eamon about myself and Theron anyway, and given the way I left Redcliffe, I couldn't justify further lies. \n\n\"What has Morrigan told you?\" \n\n\"Not much. She's a hard nut to crack.\" She smirked, and I gave her a thankful smile. \n\n\"She was protecting me. But I think it's safe to tell you everything. Are you all okay with that?\" I turned and met each of my friend's eyes, getting cautious nods from Aedan, Alistair, Leliana, Morrigan, and finally, after a thoughtful moment, Theron. \"Leliana, would you be a dear and grab my pack out of our room?\" She nodded and scampered off. \n\n\"I have to apologise, Bann Teagan. You see, for reasons of our own, each of us has secrets to hide, but mine are perhaps some of the biggest. I have lied to you, since we met, about many things. And I am sorry for that, though I had no choice at the time. If you'll promise not to act on what I tell you until you've heard the entire story, I will tell you the truth. Though you need to know that in this instance, the truth may put you in danger.\" \n\nHe gave me his word, and for the second time in two days I launched into the explanation of where I came from. Leliana returned in the midst of this, and I started passing him items to back up my story. Having seen me disappear into thin air, he was moderately easier to convince than the rest of our little group, which was good because I knew nothing personal that I could use to convince him. \n\n\"So, you can see, I am not a noblewoman, just a mystery in disguise. And the disguise was necessary, because there is another truth I was hiding. There were some survivors from the battle at Ostagar. Most of them from the rear of the vanguard, however, there were two from the very front line - one is a Grey Warden who has left on Warden business, but the other...\" I gestured at Theron. \"Take a closer look at my so-called bodyguard, my Lord. It might help to imagine him as a blond.\" \n\nTeagan turned his piercing gaze on Theron, who stepped forward, posture changing subtly to look more authoritative, more arrogant. Teagan studied his face, and I noticed him glancing surreptitiously at Alistair from the corner of his eye. Finally someone else notices the resemblance! He turned to look at me, and I could see recognition, but then a question in his eyes. I shook my head slightly. No, he doesn't know about Alistair. Don't blow it. He turned back to Theron, crossing his arms in front of his chest, and bowed deeply. \n\n\"Your Majesty, I cannot excuse myself enough. I should have recognised you sooner, Nephew.\" \n\n\"Well, Uncle, that was rather the point of the disguise, wasn't it? No one takes too close a look at a noblewoman's mercenary bodyguard.\" He smiled and embraced the Bann warmly, and Teagan relaxed slightly. I stepped back in, speaking before Theron got fully back into King mode. \n\n\"So I apologise, my Lord, for the deception, but it was the best way we could come up with to safeguard Theron, now that Loghain is angling for the throne. He dislikes the necessity of hiding his existence, but we have convinced him it is necessary. I hope we can count on you to keep this secret? You must continue to treat him like a nobody. If anyone sees you defer to him, or call him 'your majesty', Loghain will stop at nothing to have him (and anyone who knows about him) executed.\" \n\nTeagan nodded, bowing his head to Theron in acquiescence. He looked thoughtful, and I imagined he would have a lot of questions later. During the discussion, some of our group had slipped out, so by the end, there was only Theron, Aedan, Alistair, and myself with Teagan in the library. Once it seemed he was convinced, Aedan excused himself and asked to speak to Theron privately. The two left, and I was alone with Alistair and Teagan. He waited until we heard the footsteps recede, and then Teagan spoke. \n\n\"Maker's breath, how did I not see it? Alistair, you and he could practically be twins. But...listen, I think he knows, or maybe at least guesses. I don't know how - some servant gossiping about you perhaps? But some of the things he's said since you left, Lady Sierra...\" \n\n\"Just Sierra, please. I'm not a noblewoman, I never was.\" I blushed and refused to meet his gaze. \"But, my lord, what do you mean about Theron? What did he say?\" \n\n\"I can't remember exactly. Something about royal bastards running around the castle, I didn't pay attention to the rest. Though...I was quite annoyed, actually. If it hadn't been for you, Sierra, I probably would have turned him out for being impudent.\" I stood stock still, furiously trying to think. What had I said, exactly? Oh God, what have I done? My hands covered my horrified face of their own accord, and I felt both Alistair and Teagan reach out to steady me. \n\n\"Sierra?\" Alistair asked, voice kind. \"Are you alright?\" \n\n\"No, I'm really, really not. I'm so sorry, Alistair. I swore I'd never tell anyone, but I think I screwed up. I think I accidentally told Theron.\" \n\n\"What? How-\" \n\n\"I was angry. The reasons don't matter, now. But I told him...something like why didn't he go seduce another serving girl, because what was one more royal bastard in Redcliffe Castle? I'm so sorry Alistair. I can't believe...I'm so stupid...I just don't think before I talk sometimes.\" \n\nAlistair sighed, but to my surprise, squeezed my hand gently. \"It's okay. We knew he'd figure it out eventually, whether Eamon or Loghain or someone else told him. I guess at least here we have the chance to deal with it before it gets ugly in public.\" \n\n\"Promise me to stay away from him until I talk to him? Please? Let me fix this, as much as it can be fixed.\" \n\n\"Oh don't worry about me. I've no desire to have my execution ordered by my King. I think I feel the need to sleep in tomorrow.\" He turned to leave, bowing slightly to Teagan on the way. I watched him sadly, then turned back to Teagan. We were alone. \n\n\"I'm sorry, my lord.\" \n\n\"I thought we agreed, no more titles?\" \n\n\"That was fair, my lord, when you thought I had a title as well, but I don't. I'm not a noblewoman, I don't even have the same status as a serving woman - I'm not Fereldan.\" \n\n\"Ah. You think this is why you couldn't be with someone here?\" \n\n\"Only one reason of many, my lord.\" \n\n\"Many? I didn't think we were that bad. And if I'm the noble and you're not, you have to do as I say, right? So that means...at least in private, you will call me Teagan. Alright?\" \n\n\"Yes, Teagan, many. I would have thought it was obvious. You're a noble, I'm not. I'm not even clear that I'm really even human in this world, or if I'm just insane and you a figment of my imagination. Even if you're real, I'm fairly certain that me vanishing into thin air isn't going to go over well at parties. And then showing up again, who knows where, with weird clothing...\" \n\n\"Sierra, if you didn't want them to be, those reasons wouldn't be enough.\" I opened my mouth to object, and he held up a hand to stop me. \"Peace, woman, I'm not being pushy. I can see the forest despite the trees. Your heart belongs to someone else. I don't blame you - he's a good person, and deserves someone like you. For the record, you definitely picked the right brother. I just hope you will let him in, when the time comes.\" I blushed crimson, looking down. \n\n\"Thank you, Teagan. But as you will eventually see, I have nothing to offer you or anyone else.\" I swallowed, my voice thick with emotion that I refused to let out. \"I'd like to change the subject. Will you keep an eye on Theron when we go? He seems to listen to Aedan, and I've managed to shame him into behaving a couple of times, but...I'm afraid he's going to forget the minute we're out of sight and start trying to order you to provide him an escort and march directly on Denerim. Can you manage him, until we get back? Honestly, if it means you have to lock him up in the dungeon, will you do it, for the good of Ferelden?\" \n\n\"In this...performance of yours, he didn't survive, did he?\" \n\n\"No. Alistair was forced to take the throne, and he was brilliant at it, despite hating every minute of it. I am glad Theron survived, but good God keeping him alive in spite of himself is proving to be a chore.\" \n\n\"I'm amazed you want to, really. I confronted him, when you disappeared. He didn't confirm anything, and clearly had nothing directly to do with your disappearance, but I can guess what happened to make him look so guilty.\" \n\n\"Please don't. Aedan will kill him, if Alistair doesn't. They're too honourable for their own good. It was a stupid mistake, one he paid for in humiliation, and I won't risk everything to let someone defend my non-existent honour. Just don't speculate, okay? Not even in your inside voice.\" At this Teagan laughed, and I blushed into a red-faced grin. Stupid earth sayings. \n\n\"In answer to your question, yes, I will manage him, somehow. But you better be around to back me up and keep me from the executioner's axe afterwards.\" \n\n\"I swear. And I'll have words with Aedan and Alistair, just in case I'm not.\" \n\n\"Can I ask you something?\" I nodded. \"You're not Fereldan. This is neither your world nor your fight. With your knowledge, you could just run away. So...why?\" \n\n\"I...\" I had to think. How to explain? \"Where I'm from, my life is safe but horrible. Nothing scary ever happens, but I also don't ever feel like I can make a difference. I'm an anonymous nobody. I have no family, no friends. At the moment I don't even have a job. I'm not leaving anything behind. \n\n\"Here I can maybe make a difference. Besides. We're in the middle of a Blight - where would I go? And honestly, I'm not even sure I have a choice. You saw what happened when Aedan and Alistair left me behind. I just disappear and catch up to them. God forbid they ever separate - I might end up as two skinny dwarves instead of one human.\" I giggled, and Teagan laughed. \n\n\"Being in two places at once sounds useful, actually.\" \n\n\"Doesn't it? I might just have to try it and see what happens.\" \n\nWith another laugh, I finally took my leave and headed to the guestroom I was in before. Approaching the door with dread, I stepped inside with a sigh of relief. Leliana was nodding off in the chair, though she jumped up as the door swung shut. \n\n\"I thought you might like some company. Though after last night I wouldn't blame you if you sent me away.\" \n\n\"Leliana, seriously? I enjoyed the cuddle. I'm not freaked out. Relax, okay? I trust you. Now get your ass into that bed and go to sleep.\" \n\nAnd we both did. \n\nIn the morning the mages had finished preparing, and Aedan had discussed the situation with Morrigan - successfully, obviously, since she volunteered when the lead mage asked who would be going. Unlike in the game, Irving himself was not present, but a whole slew of templars were. Connor's sleeping form had been moved into the middle of a circle of seated mages, and Morrigan sat beside him, taking his hand in her own. She looked up at us, telling us to go away and stop staring at her, then nodded to the leader to begin. \n\nI had already donned my light leather armour, and with practice sword in hand I went out to the courtyard. I warmed up as usual, and then Wayne had me actually practice with the sword on a scarecrow stuffed with hay. I watched and then tried to mimic the strikes he taught me, only somewhat managing to avoid tripping over myself. Shaking his head, he took my sword away again and instead handed me an actual dagger, though the blade was dull. I felt much more comfortable with this, and was much more successful at not falling down as I slashed and stabbed at the dummy. He tried me with a second dagger, and my coordination suffered a bit, but I was able to compensate. \n\nThe obvious conclusion - that I was apparently a rogue, at least I might be if I trained for another 20 years perhaps - stunned me. I never played rogues in games, always chose to be a mage, or a ranger, or if forced to fight in melee, a sword-and-shield warrior type. I had never thought of myself as dexterous; I thought I disliked the sneaky stuff. Though I had to admit that in an actual battle, when I was one step from throwing up on myself in fear, being sneaky didn't seem so bad really.  \n\nAnd it was one more defense against Irving's assertion that I was a templar...unless the game was wrong and rogues could be templars in reality. \n\nThe sound of snorting laughter brought me back, and I realised that I was stabbing at a mostly destroyed practice dummy with both daggers flying, showing no finesse and a fair amount of pure fury. I stopped, embarrassed, trying not to listen to the jokes flying about the little girl and her pointy daggers, though I walked a little taller when I heard a couple saying things like \"Remind me not to get on her bad side!\" \n\nI needed to talk to Alistair. \n\nI needed a bath. \n\nTorn between conflicting needs, I handed Wayne back both daggers with a blush and an apology, then headed back into the castle - both needs were within. But which to do first? \n\nMy question was answered as I literally ran headfirst into Alistair in the hallway. I bounced off him, managing not to fall, to my relief. As I stepped back, I realised he was holding a towel, a pile of clean clothes, and soap. I narrowed my eyes - he wasn't anywhere near a bathtub - and then grinned. \n\n\"Having a shower?\" He blushed and stammered. Poor Chantry boy. I decided to rescue him from his own painful degree of innocence. \"Go, don't let me stop you. But after...would you meet me? I think we need to talk.\" \n\nHe agreed, and we elected to meet up in the main hall once I was done bathing and he finished showering. I rushed to have a bath drawn up, and sank into it gratefully as I scrubbed away equal measures of sweat and frustration, washing my hair twice for good measure. I'd washed up on the boat as well as I could, but without shampoo I wasn't convinced my hair was even close to clean of blood and gore. \n\nAfterwards I put on my linen dress and bound my hair up - Teagan had suggested we maintain my status as a 'lady', so I wasn't supposed to go around in pants and a shirt, to my annoyance. I headed to the main hall and found Alistair chatting with Teagan, both laughing over stories of Alistair's youth. Teagan gave me an impish smile as Alistair jumped up when he saw me. I blushed, avoiding his eyes, and followed Alistair upstairs to the same balcony I'd gone to with Teagan. \n\nChapter Twenty: Unanswered Questions \n\nI was reluctant to break the silence, at first, and more afraid of the answers I might get to the questions I needed to ask. Alistair stared out over Redcliffe Village, expression distant. I turned to sit on the wall of the balcony. \n\n\"It was you who left me this.\" He showed me the amulet around his neck, the one that had been fixed by Eamon. I nodded. \n\n\"Why didn't you say anything?\" \n\n\"You were sleeping, and I didn't want to disturb you. And I didn't want to draw attention by giving it to you with others around.\" \n\n\"I suppose you already know how much it means to me, but thank you.\" \n\n\"Did Duncan tell you much about her?\" \n\n\"A bit. He promised to send her a letter asking her to come to Ferelden at some point once this crisis is ended. Can you believe I'm half an elf?\" \n\n\"You seem a bit tall for an elf, I admit.\" \n\n\"I don't exactly know how I feel about it. I mean, when I thought she was dead, my upbringing made sense. But now...\" \n\n\"You wonder how she could have left you.\" He nodded. \"She wasn't given a choice, is how. She's unique, for the Grey Wardens - somehow she is no longer Tainted. Not subject to the Calling. I wouldn't be surprised if you end up having to go to Weisshaupt to see her, instead of hoping she comes here - they will never want to let her go. They want to 'study' her. If she kept you, you'd have been used as a hostage against her. And against Ferelden, had they figured out who your father was. She was trying to save you from them.\" \n\n\"You sound so bitter about the Grey Wardens.\" \n\n\"Everything I've read, everything in the performance...Duncan, and you and Aedan, are such honourable men. And from what you've said, many of those that died at Ostagar, too. The other Grey Wardens really...aren't. They've taken the whole 'the end justifies the means' thing way too far, and somehow lost their humanity in the process. Kind of like the templars, actually. Truly, the only hope I have for the future of the Grey Wardens lies with you and Aedan.\" ",
        "He looked uncomfortable, and I chose to change the subject, give him some space on the topic. \n\n\"So. Is there any way for you to check if someone is a templar?\" \n\n\"Unless you use a templar ability like holy smite on me? No.\" \n\n\"Well, you were standing nearby when Uldred died. Did I use holy smite then?\" \n\n\"No. However, you could have used an ability that only targets mages - or other mana-using creatures - for example, and I wouldn't know. In theory, anyway.\" \n\n\"You're a big help.\" I sighed, sliding my back down the wall to sit on the floor, curled up with my chin on my knees. \"Okay well, are you aware of any templar ability that would do...what happened to Uldred?\" The image of the abomination with blood spraying out of his eyes, nose, and mouth made me nauseous, and I tried to think of something else. I ended up looking up at Alistair's handsome face, and felt better. \n\n\"I'm not. But...I wasn't a full-fledged templar, either. It's possible there are some skills I never learned, or some way that Lyrium grants more abilities.\" Alistair slid down to sit beside me. \n\n\"Alright, well...can someone who is a rogue be a templar? Or are they all warriors?\" \n\n\"I doubt the divide between those is as big as you think. If your question is whether someone who leans more to dexterity than strength can be a templar, the answer is yes.\" \n\n\"I hate you right now. You know that, right?\" He grinned half-heartedly. \"Okay, here's one. Have you ever heard of someone being born with innate templar powers? Or do they have to be trained?\" \n\n\"I've definitely never heard of innate abilities. Everyone I ever knew had to train, though some had to work harder at it than others. I think the key was the discipline, being able to clear your mind of everything but what you were trying to do. Those who were good at the discipline found the abilities came easier.\" \n\n\"Well, that clinches it, then. I'm no templar. I've never trained, I lack even the most basic discipline, and my mind was definitely not focused during that fight with Uldred - I was screaming in fear for you and Aedan. It must have been that electricity thing from back at home.\" \n\nAlistair grimaced. \"A random lightning strike? With specific effects that mimic a templar's abilities? And happening this often? Do these 'surges' happen often, normally? It seems like a poor system, if yes.\" \n\n\"Well, no, they don't, but...it makes more sense than me being some sort of innate templar freak, doesn't it?\" \n\n\"I just don't know, Sierra. Some part of me hopes you are a templar, mostly so I could rub it in the face of the Revered Mother where I was trained. She spent a lot of time trying to make me feel guilty for not being keener to finish my training, for making them waste the effort on me. Someone with abilities like that without them and without Lyrium...yeah, that would be kind of fun. As to what they would do to you if it was true and they found out...I don't know.\" \n\nWe sat silently for a bit, shoulders barely touching. Between the stone I leaned on and the wind, I was cold; between the cold and my fear, I started shivering slightly. Alistair put his arm over my shoulders, offering his warmth, and I leaned into him, but the shivering wouldn't stop. I tried to hold it in, was furious as a couple of tears trailed down my face. Alistair looked down in surprise as one of them splashed onto his hand. \n\n\"Oh, blast. Don't cry, Sierra. We will figure it out. And Duncan, Aedan and I won't let anything happen to you.\" \n\n\"You can't promise that. I appreciate that you want to, but...you can't even promise to survive the Blight, given what I know Duncan told you. And that's assuming I don't just disappear and end up in the middle of the darkspawn horde. No one can keep me safe, Alistair.\" There was no reply to that, and so he just sat, providing comfort and warmth all at once. \n\nI wiped a couple of frustrated tears away, finally forcing the shaking to stop. We sat for another few minutes while I collected myself, and as we stood the door to the balcony burst open and Aedan came through with Prince, with eyes flashing, and a face like thunderclouds. It was a good testament to how angry he looked that Alistair stepped in front of me, arms out, as Aedan barrelled towards me. Even Prince got in front of him, growling. Protecting me? From Aedan? \n\n\"You will tell me what happened, Sierra.\" \n\n\"What? Aedan, what is wrong?\" \n\n\"You told us you thought disappearing might be triggered by emotional upset. What did he do?\" \n\n\"Aedan, I have no idea what you're talking about. What's going on?\" \n\n\"I've been trying to get the truth from Theron, but he won't say. Morrigan knows something, but she wouldn't either and now she's busy. Don't act stupid. What did he do?\" \n\n\"Nothing, Aedan. Please. Stop. There's nothing for you to go poking your nose in. Just let it go, okay?\" \n\nAlistair had stepped to counter any move he tried to make towards me, and the two men were coming close to wrestling as he kept trying. Aedan was practically growling in frustration, and I finally thought to intervene. I put one hand gently on Alistair and moved him to the side. Prince reluctantly let me pass. \n\n\"He won't hurt me. It's okay.\" I approached Aedan, hands out. When I reached him, I put my hands on his shoulders, ducking down to meet his gaze. \"Aedan. I'm fine. Everything's fine.\" \n\nHe was almost shaking with rage. I held his gaze, trying to reassure him. He finally slumped a little, the tension draining out of him, and I took the opportunity to give Alistair a look, motioning my head towards to door leading inside. He gave me a skeptical look but I nodded and motioned again. Finally he acquiesced and practically tiptoed inside. I'd never noticed before, but Alistair could move quite quietly when he tried. When not wearing armour, at any rate. \n\nLeft alone with Aedan, I waited for him to finally speak. When he did, his words surprised me. \n\n\"I'm sorry, Sierra, if I scared you.\" \n\n\"I've never been scared of you, Aedan. Scared for you, yes, but not of you.\" \n\n\"It's just...you're the only family I have left, Sierra. Well, Fergus, too, but I'm not going to see him anytime soon. You are my sister, regardless of where you were born. I left the rest of them behind, knowing they'd be slaughtered. I swore to myself that I wouldn't do the same again, that I'd protect you, and then I left you here. With him. And you can deny it if you want, but I know he did something. I could see it on his face, and he tried to rub my nose in it this morning, thinking I was a jealous lover.\" \n\n\"You don't have to worry about him. I may not be able to protect myself from darkspawn, but I can certainly manage one idiot. Trying to brag is just a symptom of his wounded pride. You want to know what happened? I kicked his ass. He surprised me with an inappropriate advance after I had already told him no. I didn't realise it was him, when he surprised me - I tossed him to the ground and almost slit his throat. And I held him down there until he realised I was serious. He won't bother me again, I don't think. His fragile little ego wouldn't allow him to be bested by a woman twice, I suspect. He didn't hurt me, I promise. And you need to let it go - he's your King.\" \n\n\"Sierra, I...I just couldn't...if anything happened to you...\" \n\n\"How's this. Next time someone tries to seduce me, I'll let you kick his ass. Deal?\" He snorted, and I giggled. \n\n\"Oh and just who do you think is going to try?\" \n\n\"Well, let me tell you, if Sten tries I'm definitely calling you to help.\" Now we both started giggling, and that's how a frightened-looking servant found us a few minutes later. \n\n\"My lord, my lady, Bann Teagan requests your presence in the main hall.\" \n\nWe collected ourselves and Aedan offered me his arm to escort me downstairs. Before we went, I quickly explained the problem that Theron may have learned about Alistair's parentage. He promised to think about any possible damage control for that problem. As we drew close, it became obvious why we'd been requested. We could hear multiple voices talking, but the one that stood out was Isolde's high-pitched Orlesian accent, crying and exclaiming. The mages had finished their ritual; Connor was awake. \n\nEntering the main hall, Isolde knelt at the front of the room, hugging a very dazed-looking Connor to her breast. The snooty Orlesian annoyed me to no end, but even I was forced to smile at the emotional reunion. Alistair stood by himself, expression a mix of pleasure and longing. It tugged at my heart seeing him look like that, especially for this horrible woman who had treated him so poorly. I had to struggle with myself not to run over and hug him. Aedan rescued me by excusing himself and heading over to clap his hand on the templar's shoulder, distracting him with some sort of conversation. \n\nI looked around the rest of the room; Leliana was talking with Theron and Bann Teagan, with Sten glowering nearby; the mages were talking amongst themselves, and Morrigan stood alone, expression aloof. I went over to her, drawing a surprised grunt as I drew her into a hug. \n\n\"Thank you, Morrigan. I know this seems like a waste to you, but on behalf of all of us, thank you. I wouldn't have trusted the others to do it right.\" She studied my face for a moment, and I wondered if she thought I was mocking her. Seeing no humour on my face, she finally smiled slightly and nodded. \n\n\"'Twas nothing I couldn't handle.\" I smiled and turned to draw her towards the others with me. She reluctantly followed. Leliana gave me an odd look, but I couldn't help it. I felt sorry for Morrigan. She had no idea how to relate to people, knew she was disliked, and had not the first idea how to deal with it. All of her icy demeanor was a self-defense mechanism. I decided to make it my personal mission to break that down. \n\nAs we reached the group, one of the mages approached me, and I turned toward him, pushing Morrigan into the empty space beside Leliana. The mage handed me an envelope, and then slipped away before I could ask anything. I looked at it - the flap was sealed with wax, stamped with an insignia I didn't recognise. As I ripped open the envelope, I tried to preserve it to show Aedan later, just in case. \n\nInside the envelope was a thick piece of paper covered in neat handwritten script. I had to look at it a couple of times to understand it - no one at home uses cursive anymore! - but was able to figure out that it came from Irving. As I glanced at it, I realised what it contained was not meant for casual eyes. I folded it up, tucking it into my armpit where it wouldn't be seen, then slowly eased my way to a doorway and out. I found myself in the hallway with the library, and snuck in there to read more closely. \n\nLady Sierra, \n\nI hope this finds you well. I wanted to let you know that your interest in templar history is quite natural, and no one here in the tower will think strangely of you for your research. I would love to hear what you learn, someday, and hope to meet you again in the future to discuss it. \n\nI thought you would be interested to know that one of the mages visiting you knows more about templar history than anyone else, and can probably answer any questions you may have. I trust him completely, and will not even ask him to reveal your research to me upon his return should you choose to discuss it with him. If this is of interest to you, seek out Enchanter Tanar before they leave. \n\nRespectfully, \n\nIrving\n\nDear Irving! I realised he must have managed to keep me secret from Greagoir, and his letter was vague enough not to implicate me had it been intercepted. I may have to kiss him next time I see him. \n\nI tucked the letter into my bra, then snuck back into the main hall hoping no one noticed my absence. I asked one of the servants if she knew which one was Enchanter Tanar, and she pointed out a slightly balding elf whose age I could not start to guess. I edged toward him, then approached the group of mages as though to thank them for their help, 'accidentally' bumping into Tanar first. I spoke with him for a few moments, making a big show of shaking his hand and looking grateful. He watched me curiously, but responded appropriately to my show of thanks. After a moment, realising no one was looking at us, I murmured to him that I would like to speak with him before he left for the Tower, and asked him to find me in the library after the noon meal. He nodded, looking confused, but I left him before anyone would notice my interest in him. \n\nTeagan and Isolde threw a lunch feast for the mages before they sailed. The entire castle seemed to be present, celebrating Connor's 'return to health'. Apparently a rumour had been circulating that whatever had afflicted Eamon had similarly struck Connor, and everyone was subtly encouraging this to cover up the truth. The servants seemed to believe that Connor's recovery meant Eamon would also recover, and were truly celebrating."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "dragon age",
        "fanfiction",
        "fantasy",
        "romance",
        "modern girl in thedas"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-19-20"
}