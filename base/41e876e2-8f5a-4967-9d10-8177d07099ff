{
    "title": "Twas The Night Before...",
    "pages": [
        "December 24th and the fatman was having a fit. It wasn't like we've been slacking all year. Well, Okay, so there's been more fucking around than a bad soap opera, but what does he expect? I mean, snow and cold twenty-four seven, and the nearest town a continent away. Not that it really matters, us elves wouldn't be welcome most places anyway.\n\nSee, that's where he makes out like a bandit. The only employer of elves on Earth. The guys bitch and moan, but us girls? As well as playing jolly and making toys we gotta put out for ol' lardass if we want to keep our jobs. Ever try blowing a bowl full of jelly? No wonder most of us are lesbians.\n\nNow that Missus Claus, I'd love to get between her thighs. All those nice old ladies you see on television? Forget that shit. The boss has taste, I'll give him that. She's a dish, six foot four inches of pure sex appeal. Blonde hair, blue eyes, tits like soccer balls and legs up to her ass. Speaking of her ass, what an ass. \n\nOh, I'm Zelda by the way. Yeah, cute fucking name. And I wasn't named after the princess in the video game, she was named after me. Comprende? Good.\n\nI know I sound bitter, but it really isn't that bad. We all get a little edgey as the holidays approach. Things get a little tense and my girl has been so busy painting faces on dolls she hasn't had time to fuck me. So I'm a little bitchy, can you blame me?\n\nI'm in the clothes division. Not the shit kids get, the stuff that goes on Barbie and Baby Wets Herself. Luckily the demand for dollies is down this year, so we got all the outfits we need. Of course that just means we end up doing something else; the old man will get his pound of flesh out of us - one way or another.\n\nSince I have the best figure, of course I ended up in the big house doing the maid's job. And where is she you might you ask? Well, lets just say she got her Christmas bone-us a little early and she's in a family way now. Nobody wants to work the big house, not since Chuckles discovered Viagra. Nice thing about this time of year though is the ole man has performance anxiety and with all the added stress, you rarely see him.\n\n'Course, that goes for the Missus too; I wonder how she puts up with it sometimes, but I guess eternal youth is worth it. Then again, ole lardass is so fat, I don't see how he gets his pickle into the jar, if you know what I mean. \n\nUgh, geeze, a \"thanks for the visual\" moment.\n\nAnyways, I hear him going down the stairs now, the 'flying shit factories' are hooked to the sleigh and everyone is outside waiting to send him off. And where am I? Hiding under the bed in the master bedroom, of course. Everyone knows right before he leaves he hits up on that magic dust. Keeps him up all night and moving like a cheetah on speed. Of course he also gets hot and lord help the poor girl he catches. My friend Della got it last year, said it was like being fucked by a Black & Decker power drill. Not this little elf. No way.\n\nSo here I am hiding out, when I hear the front door slam. I guess I can start breathing again. Just as I start, in walks the Missus. She looks pissed and I'm guessing the old man must have wanted some elf booty. I mean really, anyone who could walk off and leave her when she's dressed like that is definitely not right in the head. Hell, she's getting me hot. She has on this green satin corset, with black lace trim that pushes her bare breasts up, red stockings, and little red curly booties with bells on the tips. And these indecently brief panties in black, with a green and red sprig of mistletoe embroidered on them right above heaven.\n\n\"You can come out now,\" she said.\n\nI was startled, no doubt. I thought I was pretty well hidden. Obviously she knew I was there, so I crawled out.\n\n\"How'd you know I was there?\" I asked, looking up at her.\n\n\"I didn't, just guessed you would be hiding,\" she replied with a pretty smile.\n\nOkay, I think she was smiling, I don't really know, I was staring at her tits. So sue me. I mean, from my angle, I couldn't have seen her lips if she had been Mick Jagger.\n\n\"Ironic isn't it? You're up here trying to avoid a fucking and I was doing all I could to get one,\" she said in a sad voice as she turned and walked over to her vanity.\n\nShe was staring at herself in the mirror, and I probably should have just split, but her ass was bare and that big, soft expanse of silken flesh was too much to ignore. She turned suddenly and stared at me. I could feel myself blushing. Luckily, on us elves it's hard to tell.\n\n\"So, were you avoiding a fucking or just avoiding my husband?\"\n\n\"The fat man,\" I replied, now staring at her tits.\n\n\"You're kinda cute. And I'm fucking climbing-the-walls horny.\"\n\n\"And?\" I managed.\n\nThis was unreal. I mean, this was like a fantasy come to life. Was she really about to ask me to her bed? No way, I'm not even close to that kind of lucky. Am I?\n\n\"And\u2026How do you feel about Christmas customs?\" she said with smile.\n\nI know she was smiling this time because she bent down. Granted, her tits had the lion's share of my attention, but hey I did reply to her face.\n\n\"Depends on the custom.\"\n\nShe stood back up and spread those impossibly long legs. Her hands slid down her corset until her long fingers rested on the edge of her panties.\n\n\"How 'bout kissing me under the mistletoe?\"\n\nHoly Shit! Of course, that invitation is a bit like putting a bitch German Shepherd in heat in the same back yard with a male Chihuahua. He ain't getting any without a step ladder and even in these ridiculous heels I couldn't reach that little triangle of silk with my hands, much less my lips.\n\nThe missus just smiled and glanced meaningfully at the bed. When I could tear my eyes away from her, I saw she was looking at the bed steps. Oh hell yes, heaven, here comes Zelda!\n\nI went and got them; leave it to lardass to have cheap elf furniture everywhere in the house, but bedsteps made by Baron von Heavyassshit, that famous concrete sculptor. I was still trying to lift the damned things when the Missus took pity on me and came over. She positioned herself right in front and up I went. And down I went. Busting my ass in the process. Did I mention the outfit the maids wear? Five inch stilettos. I mean really, five inch heels on an elf? Don't even try to tell me the old bastard is sweet and kind. Fucking sadist.\n\nWith her pussy waiting for my attention, I didn't even let if phase me and scrambled right back up. This time I wrapped my arms around those big, silky thighs and hung on while I teetered on the top step.\n\nI pressed the tip of my nose right up against the embroidery and started to lick her through her panties. In no time, the crotch of those tiny silk panties was wet and slick. I could taste her pussy through them. Talk about sweet. The missus, she just sighed and then stepped a little forward, straddling the steps and me. I felt her hands on my shoulders, holding me up and I knew that meant my hands were free.\n\nYou better believe I pulled those panties out of my way and got a drink straight from the source. Her soft, golden pubes were trimmed in the shape of a little Christmas tree. Cute. All right, so it's demeaning and objectifies her and\u2026so fucking what? Now is not the time for a dissertation on elf feminism. Now's the time for serious pussy eating and you better believe I dug in.\n\nNow, she's not the first human I've been with. All of us put out when Santa is running his \"Visit the North Pole\" racket. And those of us who are the best at it get the call when Government regulatory agencies show up.\n\nYou don't think super Santa crosses all those restricted airspaces for free do you? I mean, he's going ninety to nothing on the magic dust, but he still can't out run a surface-to-air missile. And then there all the special \"representatives\" you have to placate. I mean, you come bounding down a chimney in Northern Ireland or east L.A. and some one is likely to pop a cap in your ass.\n\nAnd since Chuckles doesn't make any money, wink, wink, nudge, nudge, he pays the piper by having us put out. Ignore that account behind the curtain in Costa Rica. How bout an elf blow job? Either that or he delivers some special cargo, for a cut of course. Last year after he finished up in Jamaica the whole operation ground to a halt until the weed was all smoked. You should have seen some of the dollies, I'm talking noses on their asses and arms coming out from everywhere. It looked like we were sub-contracting in Chernobyl or something.\n\nSo back to the Missus. You see, the problem here is, she has a big pussy. No slight on her of course, when you're an elf, everyone has a big pussy. She's also getting excited, which is good, but she's standing right over me. Now I have a talented tongue, but it isn't very large and there's a lot here that needs attention. So I figure the best idea is to concentrate where I know it will feel good. This is all working out just dandy, until I feather her clit and her hips buck.\n\nDid you know elves can fly? Neither did I. But that's where I find myself. Flying backwards through the air like supergirl. Of course, I'm also going down like the human cannonball, without a net. End result is, I'm flat on my back, seeing stars while the Missus is caught between embarrassment and concern. I try to move and my back cracks like the walnuts that prima donna nutcracker is always after. I try to sit up and there's this big popping sound. I bet my chiropractor heard the Cha-ching! from her place. \n\nNow I know when you're messing with someone else's wife you're running some risks. I mean, jealous husbands are dangerous, but I get the feeling the Missus hasn't been getting any for a while and if she's going to gyrate like that, you're talking dangerous sex even without fatboy coming home early. I'm considering my health benefits and maybe calling it an evening, when she rushes over and picks me up.\n\nSo now she's holding me tight and my head is - you guessed it - right between those beautiful tits. I suppose if the time has come to shake off the mortal coil, tits like that are as good a reason as any. Hell, better than O-D'ing on cigarettes and coffee.\n\n\"I'm so sorry,\" she says.\n\nDoes she actually expect a response here? I'm surrounded by boobs - I got better things to be doing with my mouth! Apparently she does. No telling with women. Especially humans. My girl would be laughing her ass off at me if she could see me now.\n\n\"It's all right.\"\n\nI guess she wants more. She's staring at me with those big blue eyes.\n\n\"Really, I'm fine.\"\n\nShe smiles then. All that wishy-washy romantic stuff about a room lighting up when someone smiles. Believe it. Her face is so angelically sweet I feel a little guilty because for me, right now, it's all about the boobs. Glad she's as hot as I am or this might have turned into one of those smarmy Kodak moments.\n\nInstead she just climbs on the bed and lies down, with me still riding shotgun on her tits. And she just lies back and watches me.\n\nHave you ever dreamed about something, I mean, really dreamed about it. Run it through your head a million times? Till, it's down to just exactly what would be perfect? Till you know every word, every gesture, till you can see it if you just close your eyes?\n\nDon't ever believe that shit. I'm sitting here with a dream come true and can't decide what to do. I mean, I've got a choice of lips, tits, legs or pussy. Kinda like letting the fat kid loose at Micky D's with grandpa paying the tab. You know, where the old guy is smiling evilly, cause he knows he doesn't have to deal with stomach aches or farts that would be considered chemical warfare agents and the kid's eyes are the size of dinner plates staring at the menu.\n\nThat's me, the fat kid. And she's staring at me with the smile of a woman who expects to experience the best sex of her life. Talk about pressure. Maybe I should give fat bastard a little sympathy. It is pretty daunting. Luckily, I don't have to worry about my noodle giving me away.\n\nWell, enough of this happy horseshit. When the going gets tough, the tough get going or something like that. Anyway, I know how to make a woman feel good and I can still taste her on my lips. Hopefully with her prone I won't need a seatbelt when her hips start working again.\n\nNow, I've said she has a big pussy, but goddamn it's beautiful. In the first place I love natural blondes, even if it is shaved into cutsey patterns. Her mound is fat, fleshy, the kind that leaves a camel toe in tight pants that you can see for miles. Soft, delicate pink lips, gaping open slightly to reveal an even more sublime shade of pink inside.\n\nI started out just licking along her lips, really gentle and with very little pressure. Slow, languid trips up one side and down the other. The trick is to be totally focused on your lover here, if you're paying attention she'll let you know exactly what she wants, even if she never says a word. After a few minutes of this, her lips were open and the muscles in her thighs were quivering. It was almost imperceptible, but I could feel her hips pushing up and that let me know she wanted greater contact.\n\nSo I gave it to her, using more of the flat of my tongue, stopping to occasionally nibble on her outer lips. When I finally applied my tongue to her inner pussy she let out this sexy little moan. One nice thing about being small is everything is bigger. No way I can miss her clit, which has just made an appearance. Remembering my last attempt to play with that little hot button, I stay away from it. I lick around it, getting closer and closer, but backing off when I can feel her straining to hold her hips in check. Gotta get myself into a better position here, before I go after it. Once I've snuggled down into the comforter and made sure I'm well between her thighs I suck that little bitch into my mouth and tongue it as I keep up a gentle suction.\n\nShe's close now, I can fell her body thrumming, hear the soft little whimpers and I'm really hot to make the boss's wife cum. So I really bear down on her with my tongue.\n\nI'm ready for the bucking hips. Got a death grip on the bed under her ass and I'm hunkered down so I don't get caught up on her legs. Got it all figured out haven't you Zelda?\n\nEver wonder how a grape feels? In that split second before the pressure from the press is too much and it gets splattered? Well, I don't need to wonder. I know.\n\nThe Missus let out a little moan and then\u2026 her thighs snapped together like a bear trap. My eyes had to be bulging out of my head and I was trying to shout. Of course I had her clit in my mouth and I couldn't move, so all that did was add to the stimulation. So there she is, having one of those year-long orgasms you see in the movies and the whole time I'm wondering if my brains are coming out of my nose yet.\n\nWhen she finally relaxes, I'm seeing Aztec temples and shit. The next few moments are kinda blurry to me. I don't remember exactly what happened, but I guess she reached into her night-stand and pulled out her vibe. When I do manage to get my shit together, she's watching me and I have this big, honker vibe in my hands.\n\nAt this point, I'm thinking servicing the Missus should net me hazardous duty pay. But she's got that sexy smile on her face and the next thing I know I'm working that big vibe into her. I'm dumb like that.\n\nOnce it's in, she's moaning and happy and like an idiot I can't leave well enough alone. Nooooo, I've gotta get the bright idea and turn the damned thing on.\n\nSo now she's really moaning and gurgling happily and cumming again. And me? I've got the shakes worse than a drug addict in her second week of detox. It's like operating a jack hammer. My teeth are chattering like I'm trying to make snow angels in the nude outside and I'm trying not to bite my tongue. And I can't let go! Her legs have clamped shut again and I'm basically along for the ride. And what a ride. If I ever met up with the energizer bunny, I'm kicking his furry little butt. \n\nBy the time I manage to turn the damned thing off, she's coming down off a beautiful orgasm and I'm worried about the deductable on my dental plan.\n\nSo while she basks in the after glow, I'm trying to figure out how to get off this bed and out of harm's way. I'm guessing the way my luck's going if I jump for it, I'll break a leg. But if I stay here, god knows what might happen to me.\n\n\"Come here, I want to pay you back,\" she says.\n\n\"Uhhh,, thanks but I really need to be going. Wouldn't want the fatman to catch us.\"\n\nOkay, so he's going to be out all night. It's really lame, I know, but fuck, her voice is so sexy I wasn't thinking straight.\n\n\"He'll be gone all night,\" she says, while grabbing me and lying me back on the bed.\n\nDespite the mishaps, I'm really hot, and hell, she's a dream come true. I figure there's no way I can get hurt having my pussy eaten, so I help her get my panties off.\n\nShe's kinda slow at first, really unsure, but that's fine. I can deal with slow, specially since my back is out and my butt is hurting. Things were just starting to get good when the front door slammed. She looked at me and I looked at her and we both had the same thought. Busted.\n\nThere ain't many places to hide, but she throws a couple of pillows on me and lies back just as Chuckles waltzes in. Just my luck, he can't stay out like every other night in the past ten years. Oh no, he has to come home for a quickie. And I'm stuck under the pillows.\n\nHe just jumps on the bed and goes to town. So I get a front row seat for that shit. Somewhere during that, I saw the damned vibrator rolling around on the bed. I reached out to grab it just as he rolled her over. Any idea how much that sweating, grunting pile of humanity weighed? Me either, but I felt my bones crack.\n\nBy the time he finishes and waltzes out, the Missus is dead to the world with a shit- eating grin on her face. No help there, so I eventually decided to jump. Turned both my ankles when I landed, but it was worth it to get out of there.\n\nOf course my girl wanted to fuck, it being Christmas and all. I couldn't exactly tell her why I was in such a bad mood. Not like she cared. Seems like the fat man left the top off the magic dust and all the girls were hitting up. Della was right, Black & Decker power drill. Pussy, mouth, ass, tits, I think she would have fucked my ears if I hadn't of passed out. Next year, I'm hiding her strap-on before that fat Don Juan and his drugs get me killed.\n\nSo the score is this, \n\nTwelve orgasms for the missus,\nEleven for the girlfriend,\nTen stitches in my backside,\nNine Aspirin for my head,\nEight hours in the hospital\nSeven at the chiropractor,\nSix chipped teeth,\nFive cracked ribs,\nFour broken fingers,\nThree slipped discs,\nTwo sprained ankles\nAnd one pissed off little elf.\n\nMerry fucking Christmas."
    ],
    "authorname": "Colleen Thomas",
    "tags": [],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/twas-the-night-before-1"
}