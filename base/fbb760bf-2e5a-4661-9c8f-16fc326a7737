{
    "title": "The Twelve Vitali Ch. 09",
    "pages": [
        "Authors note: Hello everyone. Thank you to everyone who has left comments and votes on the chapters so far. They mean the world to me, even if just to know someone is reading the series. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n*****\n\n\"I didn't do anything wrong!\" Trista cried as she sat across the desk from her father.\n\n\"Even if your mother had been correct in her assumptions, you had no care at all for that girl's feelings, or Matteo's, for that matter,\" Roberto said patiently, wanting to be sure his daughter understood exactly what she had done wrong. \"Now there is a lovely young woman in the world who believes our entire family think she's nothing but an opportunistic gold-digger, and two of your brothers who believe that your mother, through you, deliberately sabotaged their relationships with this woman. Not to mention my own friendship with her, which saddens me more than I can say.\"\n\nTheresa knew she had done something terrible the moment the usually calm and serene Stefano refused to even look at her, let alone talk to her, leaving Roberto to have this conversation with his wife and daughter while he hovered in the background.\n\n\"I'm sorry. Who knew everyone would take the truth so badly,\" Trista shrugged indifferently.\n\n\"Have you heard nothing we have said?\" Stefano roared, voicing his rage for the first time. \"Your mother lied to you! There was no truth in anything you said to that girl!\"\n\n\"I did nothing wrong!\" Trista said again, blinking at being yelled at by her father for the first time in her life.\n\n\"Veronica Donati was guilty of Murder, attempted murder, and assorted other criminal activities. And do you know what she said to anyone who visited her in prison before and after her conviction?\" Roberto asked, then answered the question. \"I didn't do anything wrong.\"\n\n\"The privilege of being part of this family seems to have given the Vitali women a bizarre sense of entitlement that allows you to believe you can treat anyone badly and be totally justified in doing so! Well, I will not tolerate it! You are cut off for six months, Trista! Your bank accounts have been frozen, your credit cards cancelled! You may ask your mother or myself for an allowance, but, trust me, if you use our name or position to obtain finances or goods without payment, I will not be so lenient!\" Stefano said. Now that he had started talking, it seemed he couldn't help letting his rage out on both women.\n\n\"You can't do that!\" Trista yelled back. \"I have a life to live! I can't survive like that!\"\n\n\"Then get a job,\" Roberto said. \"Each of your older brothers had a traineeship of some description at your age and earned their own money instead of relying on us to support them. Even Vanessa has begun working toward establishing herself instead of spending thousands of dollars flying around the country to bully her brother's girlfriends under the guise of seeking media interest in her designs.\"\n\n\"It's not my fault the stupid bitch was too ugly to get photographed on the night. All she had to do was stand with Matteo while the press was there and it all would have been worth it,\" Trista shook her head incredibly as if it was all Cat's faults that this was happening to her now. Even Theresa looked shocked at her daughter's words.\n\n\"I think you were right,\" Roberto said sadly to Stefano. \"I'll call and make the arrangements.\" He watched as Theresa paled visibly. \"You will stay home for the next forty-eight hours, Trista, believe me when I say that if we have to come and find you, you will regret it more so than you already regret your mistakes.\"\n\n\"Fine!\" Trista snapped after looking at her mother and realising she would get no help from her. \"Am I excused?\"\n\n\"Yes, but don't go too far,\" Roberto said, and watched his daughter flounce from the room. \"Not you, Theresa!\" he growled making the woman sit back down.\n\n\"Have you not learned the lessons of Maria and what she did to our family? Do you not know what happened to the mother of the Savoy, or the mother of the Pellegrini who put the future of their sons before the rest of their family?\" Roberto asked in the same calm voice. \"Did you not think we would be horrified that you would so overtly try to destroy our sons by pitting them against each other and the woman they love?\"\n\n\"That was never my intention. I didn't have all of the information about this Catriona Leone,\" she explained, trying to keep her voice calm. \"As far as I was aware, she had worked for Vanessa, used her family connections to gain your assistance in a dubious court case and began dating Ricco. When she was finally discovered to be not as innocent as she pretended she left town in a hurry and started to date Matteo. What was I supposed to think?\"\n\n\"You were supposed to know that I wouldn't have defended anyone who did not deserve our respect and assistance!\" Roberto snapped.\n\n\"If we find any other action taken on your part to harm our children, there will be very dire consequences. Neither Roberto nor I will risk losing one more child in this house to the machinations of misguided and ultimately evil thinking. You have spoilt and favoured your children over the others for long enough, and I believe we will be taking a greater hand in ensuring all of the trials have been completed to our satisfaction,\" Stefano snarled. \"There are enough cousins to fill the table with the oldest three sons should it come to that,\" he threatened, making her gasp loudly and cover her face in horror.\n\n\"Go and speak with Trista and make her understand that she did indeed do something wrong,\" Roberto advised.\n\n*****\n\nCat had settled into a comfortable routine where as long as she showed up at the house for meals she was left alone to do her art, aside of Finola's visits each afternoon and the constant check-ups of Pete Donati, who she thought seemed to take his follow up of patients a little too seriously.\n\nCat smiled as she let Romy Donati into the small cabin she had been assigned for the gathering. She was amazed at how many cabins, yurts and other temporary structures there were on the vast property. Finola had also arrived early with her children and had visited Cat daily to ask about drawing techniques and do some small exercises that Cat said were the very same ones she had been given when she was learning to hone her craft. The appearance of Romy Donati at her door surprised her.\n\n\"I just need your signature on a few documents,\" he said by way of explanation as she invited him into the cluttered space.\n\n\"I have already signed the non-disclosure thingamajig and the commission paperwork with Peri. She should have copies, but I can probably find them for you if you need them,\" she offered.\n\n\"No, this is not about your art,\" Romy chuckled, taking a seat at the table. \"It's about the apartment you were staying in before coming here. Matteo has transferred ownership into your name, and the settlement for that has been rushed through and should become official on Friday, so if you can just sign where the tags indicate, please.\"\n\n\"Wait! What?\" Cat blinked at him. \"Matteo is selling me the apartment? I can't afford that! I thought he had rented it and told him to break the lease and get his money back.\"\n\n\"He is gifting it to you,\" Romy explained.\n\n\"I can't accept a gift like that!\" Cat was shocked and horrified that he would even think she could accept it. She supposed it was his way of assuaging guilt over not being able to return her love and hurting her unintentionally.\n\n\"I'm afraid there has been a family crisis for the Vitali's and Matteo will be out of contact for a week. I assure you everything is legal and above board, I just need a signature on the documents, and then you can fight with him about it when he returns,\" Romy explained. \"If not for the crisis, Ricco would be here delivering the papers and explaining the ins and outs of why he has done this. I'm afraid I have no details for you. I just need to complete the paperwork so my family and I can enjoy our holiday.\"\n\n\"And if I don't sign the paperwork?\" she asked.\n\n\"Then this becomes a giant pain in my ass, and I will have to do all new paperwork and ask Angelo to foot the bill and take possession of the apartment until Mateo returns and then file new paperwork for whatever he decides when he can finally take possession. That will ruin my holiday by having to work and convince Angelo into working, which I will make you explain to Carmen and my boys, by the way,\" he rolled his eyes. \"I have been promising no work this holiday for six months. I'm not sure Rosanna will be very pleased either if I start dragging the big guy away from the festivities.\"\n\n\"Emotional blackmail, seriously?\" She asked, pulling the paperwork across the table to look at it.\n\n\"Oh, don't worry, that was minor compared to what I gave Ricco when he asked for the favour,\" Romy chuckled.\n\n\"So, I sign this, and I own that place free and clear? Then when I am done I could sell it again and return the money to Matteo?\" she asked.\n\n\"That's one option, yes,\" he confirmed.\n\n\"Fine then, but if he thinks he can pay me off to rid himself of any bad feelings with an apartment he can think again. I'm not a whore that he can just pay off and never think about again!\" she said angrily as she signed the document where he has left sticky markers.\n\n*****\n\nA week after walking out of Cat's apartment, and ostensibly her life, Matteo arrived at the small private airfield on the outskirts of Melbourne and headed for the family jet. He'd thrown himself immediately into work, and knowing that Josh and his family would all be preparing for the Gathering he had taken a quick flight to a project in Papa New Guinea where tensions with the locals always ran high.\n\n\"Hey,\" Ricco greeted him with his typical one-armed hug and a bumping of chests. \"The others are all on board.\"\n\n\"Rough flight, sorry I held everyone up,\" Matteo said as he stepped on board the family jet. \"Do we know the destination yet?\"\n\nI'm flying blind, so to speak,\" Jacobi shrugged, but smiled in a relaxed way. \"Papa says fly, and I grab an overnight bag.\"\n\n\"Yeah, I'm not quite as convinced we're going to enjoy what's at the other end of this trip,\" Ricco murmured to Matteo. \"When was the last time we all took a trip like this?\" He nodded to the fellow occupants of the cabin. All five of the oldest children were present, without their partners, however.\n\n\"Mama is here this time though,\" Matteo murmured back. He called her Mama, but she had never been particularly maternal toward him or his siblings who were on this plane. He respected her because he had to, but after what Trista had said to Cat, and where she got her information from, Matteo would rather ignore her presence than going through the usual respectful small talk required when in her presence. For once she didn't seem eager to engage him either, for which he was grateful. He took a seat near Mia and did up his belt.\n\n\"Hey, how's Kalum? Have you talked to him about a trial yet?\" he asked conversationally.\n\n\"In a round-about way,\" she pulled a face. \"It's not so easy. I'm sorry things didn't work out for you and Cat. Trista has been sent to the Battaglia,\" she informed him.\n\n\"Excessive,\" Matteo kept his voice low.\n\n\"No, you should have heard the way she spoke to Papa. She swore over and over again that she did nothing wrong, which Papa pointed out was Nik's great defence, even after she killed people. I think Papa was scared they hadn't been strict enough with the younger ones. They all have to redo their trials, and we,\" she looked around. \"We all have to do this trip, no exceptions.\"\n\n\"There's always one exception,\" Matteo smiled and squeezed his sister's hand. \"I was coming home anyway to spend the day with you tomorrow.\"\n\n\"You never forget,\" she smiled.\n\n\"I loved Alessandro too, you know,\" he reminded her.\n\nDuring the flight, Matteo made an effort to talk to each of his siblings about what projects they were working on. If the subject of Cat came up, he changed it rapidly, finding that it was too disappointing to think about yet. Eventually, he made his way to his stepmother.\n\n\"The break up was not yours or Trista's fault,\" he said quietly. \"The fault was mine, and I have told Papa that.\"\n\n\"I am not here because of that, but thank you, I appreciate you saying so. I am sorry for my untimely interference. I didn't understand the situation at the time,\" Theresa admitted, swallowing nervously. \"I never meant you or the girl any real harm when I told Trista those things.\"\n\n\"I never believed you did it maliciously,\" he said.\n\n\"Your fathers think Trista's attitude is reminiscent of Veronica Donati, they have sent her away,\" she said sadly. \"That is my fault. She was brought up spoilt and indulged until she believed she could do as she liked with no recriminations or consequences. In the end she didn't even show me the respect due to her mother, and I am horrified that I encouraged that sort of behaviour without seeing it for what it was.\"\n\n\"Not even the great Antonia Donati was immune to turning a blind eye to her children's faults,\" Matteo said kindly, but what she had said had jolted him to the core. Were all of his siblings, himself included, getting disciplined for self-indulgent behaviour? The younger ones were all having to redo their trials, Mia had said. He considered where they were heading and stood to approach the cockpit to find out what the mystery was.\n\n\"Have a seat, Matteo, we will be landing soon,\" Stefano suggested as he blocked the way to the cabin. \"We will be arriving at a secure facility. Do not deviate from the instructions the people there give. When we land, Matteo, you will go with Roberto. Theresa, you will come with me. The rest of you will be escorted to the residence we have been given for our stay. You will stay there until we return. Am I understood?\"\n\n\"Yes, Papa,\" the siblings all said in unison before looking at each other nervously and nodding. They each knew of only one facility with this much security that belonged within the overarching configuration of the tables. The Papillo.\n\n*****\n\n\"You know he was probably just trying to do something nice for you,\" Pete said as Cat finally divulged what was bothering her. \"He probably had no idea how it would look to you to gift you something so big and expensive. To him, it was probably nothing more than something he had bought with you in mind that he no longer wants since you told him to leave.\"\n\n\"I...\" she began to argue, but the words died on her lips.\n\n\"You. You asked Matteo to leave. He wasn't getting rid of you, and therefore has no need to pay you off like a whore or assuage his guilt in any way,\" Pete said reasonably.\n\n\"It's not that simple,\" she sighed.\n\n\"So explain it to me?\" he asked yet again, knowing that she probably wouldn't.\n\n\"How about you explain to me why you're the only bachelor of the twelve men on the table?\" she asked. It had been an ongoing point of tension where she wouldn't be drawn on why she had left Matteo and their new relationship and why Pete had no significant other in his life.\n\n\"I've already told you, I'm married to my work. It comes before everything else. I can't expect anyone to put up with me dropping everything when a member of my family picks up the phone and calls me. Think about all the things you know about this family and the tragedies that have befallen us over recent years. No woman would put up with playing second fiddle to so many people,\" he lifted his hands as if it was a foregone conclusion that he would always be a bachelor.\n\n\"Surely you must want more?\" Cat asked. \"Everyone wants to be loved and accepted by someone who understands them on a deeper, more intimate level.\"\n\n\"You think I am lonely? That I don't feel loved by every single member of this family?\" Pete asked. \"I know it's difficult for you to understand a man like me, but, honestly, I am happy and fulfilled in every area of my life,\" he smiled.\n\n\"Do you have a mistress? A... what do you call them... Kept?\" she asked bluntly.\n\n\"Yes,\" he answered just as bluntly, \"And she makes me happy in that she serves my needs in the way I like without any recriminations for the amount of time I take to care for my family. I have no desire for children, I have so many nieces and nephews that I am not starved for the company of children that I feel quite paternal toward. I have been at the birth and significant milestones for all of them and been able to hand them back without any guilt as I move on to yet another family member in need.\"\n\n\"I guess I can see that,\" she shrugged noncommittally. \"I think that is what Matteo wanted, a guilt-free relationship where he could still work the same ungodly hours and have me waiting at home like a faithful pet eager for just a few moment of his time.\" She lied, she didn't think even if she would have accepted his loveless proposal he would have treated her that way.\n\n\"Running a company as large as his has got to be time-consuming, but I doubt he would treat you like a pet,\" Pete chuckled.\n\n\"I was being nice, he wanted a mistress that he knew he wouldn't have to commit to fully,\" she sighed. That was about as close to the truth as she was ready to get. \"If I accept the apartment then I feel like I am telling him it's okay to treat me that way and help himself to the apartment and me whenever he is in town.\"\n\n\"If he wanted a mistress he would have a Kept. It's a lot less complicated that way, and I am sure one could be found with similar physical characteristics to you, if that was what he wanted,\" Pete once again spoke bluntly.\n\n\"Knowing that doesn't help me stop feeling that way. Besides, his family hates me, and I don't want to be responsible for that,\" she admitted.\n\n\"I know that's not true,\" Pete chuckled, dismissing her excuses.\n\n\"Call Trista and ask her what she thinks of me. Trust me, no one in that family approves of me dating Matteo, or Ricco, for that matter,\" she said adamantly. She put her paintbrush down and turned to look at him properly. \"Can we just drop this, please, I don't want to talk about it anymore. It's over, the reasons don't matter.\"\n\n*****\n\nMatteo entered a small suite within the facility. It was spartan, and, although the walls were coloured, there was little in the way of decoration. The windows were recessed behind decorative but obviously sturdy metal grates. The couch and table in the living area were made of steel and some sort of polymer, and the only items of note seemed to be a wide bookcase, a television recessed behind what he assumed to be Perspex, or something similar. He was so busy taking in the design and materials of the suite he hadn't noticed the woman walk in from the other room.\n\n\"You have come to ensure I still suffer,\" the woman addressed Roberto with a tired voice.\n\n\"Quite the opposite, Maria,\" Roberto said with a smile. \"I have brought Matteo to visit his mother and make peace after all these years of believing you never loved him, which was why you could kill him so easily, or at least try to.\"\n\n\"That is a cruel lie, even for you, Roberto!\" she sneered at him. \"Why not concoct a fake Alessandro as well?\"\n\n\"I assure you, he is your son, Matteo, and has the scar on his chest to prove your motherly love for him!\" Roberto growled. \"A scar that reminds him every day that the one person who should have protected him and loved him did not!\"\n\n\"Why would you be so cruel as to do this now?\" She narrowed her eyes, looking at Matteo. She had spent the last twenty years believing him dead. This couldn't be her son, could it?\n\n\"I think I would like the answer to that as well,\" Matteo said stiffly.\n\n\"Sit,\" Roberto commanded, and waited for them both to comply. \"Matteo has recently met and got to know a young woman that I believe could be the love of his life. As every woman in his life, most especially his mother, has told, and or shown him that he is not someone they could love, he is too afraid to take a risk on this girl who has such a huge capacity for love and forgiveness, she could help him heal.\"",
        "\"You want me to not only believe that Matteo is alive, but that he is sitting right here and believes that I never loved him?\" Maria curled her lip. \"My children knew how much I loved them. Go away and stop trying to torture me further. Tomorrow will be hard enough now that you are here. Where is Stefano? Did his cold hard heart finally shrivel up entirely?\"\n\n\"My nanny's name was Marta, and she was fired when I was six, and I cried for a month. My mother didn't replace her, instead I was given a strict tutor. My mother made sure my childhood was an ordered and mostly cheerless place. I remember my mother very well, thank you. I do not need a trip down memory lane. If you'll excuse me, I'm ready to leave now,\" Matteo said abruptly and stood, walking toward the exit door.\n\n\"Sit,\" Roberto commanded without force, but expecting that his son would obey. \"The dismissal of Marta was not your mother's doing, though I can see why you would think that. You were school age, you no longer needed to be babied and spoilt by your mother. Tell Matteo what happened to his nanny, Maria.\"\n\n\"You let me believe he was dead! That I killed him!\" Maria accused rather than answer the question. Her eyes were wide as she stared at Matteo.\n\n\"You killed Alessandro, what was one more son, it's not like you cared about any of us!\" Matteo barked at his mother, coming to his father's defence. \"It's not like I ever would have visited you, I am only here because they tricked me into it!\" The truth was he had thought she was dead, had died on that fateful day after giving birth to Vanessa.\n\n\"No, you don't understand!\" Maria looked at him with eyes wide with horror. \"Tell him that's not true!\"\n\n\"I am not here for you, Maria,\" Roberto said harshly. \"I am here for him and our other children. It was time they knew the truth. I do not regret keeping the children from you. As far as they know you are dead, died from complications following the murder of Alessandro and attempted murder of Matteo and the unborn baby, Vanessa. Do not mistake my appearance here as a weakness where you are concerned. I may have come to terms with your actions, but do not think for one moment that you are forgiven for taking Alessandro from this world.\" Roberto nodded to one of the men who had accompanied them to this room, and he stepped forward, laying a thin album on the metal table between them.\n\nMaria snatched it up, and as Roberto and Matteo watched she studied each photograph in minute detail. There was one for each year of Matteo's life. He studied the bookshelves and realised that there was an album for each of his siblings, including Alessandro, and his fingers itched to touch it.\n\n*****\n\n\"I would like you to say very little and just watch and listen. Try to make the connections for why we may want you to meet this woman,\" Stefano said before opening the door and showing Theresa into a suite where a beautiful woman sat reading a magazine.\n\nStefano stood at the back of the room and watched as Theresa spoke with the woman. The conversation had quickly gone from sickly sweet greetings and polite conversation to one of demands and recriminations.\n\n\"I did nothing wrong! This place is worse than the real prisons; at least there I stood a chance of being heard! You have to tell Joshua that I'm alive and to get me out of here, Theresa!\" Nik raged. \"I did nothing wrong!\"\n\n\"You murdered a man, Nik!\" Theresa had exclaimed in the face of her words.\n\n\"Giorgio doesn't count! He was a closet freak; they were all relieved not to have to live with the embarrassment of him anymore. Trust me, I did the Battaglia a favour,\" Nik dismissed the man's death easily.\n\nTrista's words of \"I've done nothing wrong! I did Mattie a favour!\" echoed in Theresa's mind, and she looked at Stefano with tears in her eyes. She didn't think Trista could ever be this evil, but she understood the point that was being made here.\n\n*****\n\nMatteo steadfastly refused to leave Mia's side as she was taken to see her mother. Mia, though, had surprised him with her strength and fortitude in the face of meeting the woman who had caused so much harm in their young lives.\n\nMaria, it seems, was better prepared to face her other children. She had been allowed an annual photo and small snippets of relevant information designed to allow her the regret of not being part of their lives. It had been both a cruel and kind service his fathers had allowed her. Whereas Matteo had been stony cold toward the woman, not wanting to hear anything she may have to say, Mia had been forgiving and strong, feeling sorry for the woman who had lived a life she didn't want, and had finally snapped in a moment of weakness, to end up here, old and alone.\n\nMatteo had also accompanied Vanessa after ensuring that Mia was resting quietly after the ordeal. His brothers went together, and he patted Ricco on the back, knowing he would feel the confrontation more keenly than Jacobi.\n\nMatteo spent the afternoon on the small deck at the rear of the house they had been assigned. The facility was set in the remote but stunningly beautiful ranges of the Kimberley, and he wondered what it would have been like to grow up as part of this family. The Papillo's were the keepers of the worst secrets of the twelve tables, and quite secretive themselves. The criminally insane often thought to be dead, like his mother, were housed here and cared for until their deaths. Psychologists, Psychiatrists, and arguably some of the best minds in the country either worked here or consulted at the private facility. It was part of a group of facilities in the far north-west that catered for mental illnesses and dealt with everything from eating disorders and post-natal depression to multiple personality disorders and psychopathic narcissism.\n\nWhile this one small hidden facility was used by the twelve families only, the other institutions run and funded by the family were open to the public should they be referred to the specialist clinics there. It was peaceful here listening to the birdsong and the rustling of the small breeze in the trees. He realised at that moment that he hadn't retrieved his phone from when he had handed it over to visit with his mother. He went back into the house to see if he could find where it had been left when he passed Theresa, who was quietly crying.\n\n\"Mama?\" He asked tentatively. She was still his step-mother, and, while he may not love her, he cared that she was upset by this trip into the past. \"Did you go to see Maria? She is no threat to you, you must know that.\"\n\n\"Oh, Matteo, always so respectful, even after all I have done,\" she began a fresh round of sobbing, making him step into the small cosy circle of couches that was part of the open plan living area.\n\n\"What have you done?\" he asked curiously, unsure if he really wanted to know or if he could face any more shocks today. He watched as Theresa looked around. His brothers had gone with Stefano to meet with Maria, and Roberto was meeting with the chair of the Papillo. \"It's just you and me, the girls are resting,\" he reassured her.\n\n\"Antonia Donati really was the best of us,\" she smiled. \"She could make even the lowest of us feel important,\" she smiled at the fond memories she had of Antonia. \"Yet even she lost sight of the reality of bringing up children, particularly girls, within the confines of our family. We are the mothers of the tables, and we teach our daughters the importance of that role above even those of their brothers. We let them believe they are special beyond that of normal girls, their friends, their cousins, and when they act atrociously we are somehow surprised.\"\n\n\"I don't think I understand what you are saying,\" Matteo frowned.\n\n\"Is it better that Nik died rather than be a constant reminder to her mother of the guilt she also had to assume for Nik's actions? She allowed her to become the spoilt and arrogant woman who honestly believes she did nothing wrong in killing a man. Moreover, she believes she did his family a favour, and they should be grateful to her.\"\n\n\"Possibly,\" Matteo said. He honestly hadn't thought about how Antonia had felt as a mother. He had grieved for the family having to bear the weight of her crimes, and believed her death would allow them all to move on more easily from it. Particularly Josh, who had to assume leadership so quickly.\n\n\"Peri was practically paralysed with fear that Nik would return to kill her. I was at the engagement party when Izabella came home and scared her into almost calling the whole thing off and leaving the Donati family for good,\" she sobbed again. \"That poor girl got treated badly by so many people in that family, or because of them, and yet she still loved Joshua enough to listen to his pleas for forgiveness. Everyone should have a great love in their life, everyone, including you, Matteo,\" she said softly. \"Nik was never that great love for you. She never could have been, and I think if you let go of the anger and see who she truly was you would know that in your heart of hearts.\"\n\n\"Why are you talking about something long past that has no bearing on our lives now?\" Matteo asked irritably. Talking about Nik always made him angry, but he admitted he no longer felt that sense of humiliation and betrayal. She had fooled everyone, even her twin who had suffered the most at her hands.\n\n\"Is it better that Peri and Josh and Dante believe Nik is dead? So they can go on with their lives without the dark cloud of her one day coming back to destroy their lives hanging over their heads?\" She asked again. \"Is it better that Nik is dead rather than locked in this facility or something like it?\"\n\n\"Nik is dead. Are you worried Maria will be released to return to our family and home?\" He asked incredulously. \"Papa would never let that happen!\"\n\n\"Maria is here?\" she tilted her head curiously. \"I shouldn't be surprised. It would have been better perhaps if she had stayed dead as well,\" she mused.\n\n\"Who did you see this morning after we arrived?\" Matteo asked, dreading the answer.\n\n\"A future version of Trista, unless we all stop letting her treat us so badly. She said some dreadful things to your Cat based off bad information from me, and for that I am truly sorry. I have been sitting here thinking about all of the women I have admired and looked up to in my life. Your grandmother, Concetta, of course, Antonia, and I even admire Peri. After all the adversity she had been through, Peri is still one of the most giving and kind people I can think of. Perhaps the saying adversity breeds character is true. Perhaps it's even true of your Cat,\" Theresa smiled.\n\n\"As I said on the plane, she is not my Cat anymore, and that is no one's fault but my own,\" he said shortly.\n\n\"Did you love her? Could you love her?\" Theresa asked.\n\n\"I cared about her deeply, but it wasn't love, and it's over now!\" Matteo said, his anger rising again.\n\n\"Do you think the rush of endorphins and lust you had with a crazy woman who made you believe all her lies was love?\" Theresa's voice rose with Matteo's. \"You can't be that stupid as to confuse puppy love and lust for a beautiful woman with the real and deep love that makes you want to care for and look after the other person. The type of love that makes you ask how their day was and crave the answer just to hear their voice. The type of love that makes even bad sex feel great! Real love makes you endure a day spent with horrible people who treat you badly just so you can spend the night with the one you love.\" She watched as the reality of her words settled on Matteo's features and knew he loved Cat, even if he couldn't admit it to himself.\n\n\"Who did you see. . .\" Matteo began to demand, but Theresa was on a roll, and she wanted to finish what she was saying.\n\n\"You know I love your fathers'. I honestly can't imagine a day where I didn't see them or talk to them. It hasn't always been plain sailing, and I suspect they feel I have not always been fair to them or the five of you, who deserved a better mother than I have been,\" she admitted. \"But I have always loved each of you for your special strengths and talents. I have always loved you, Matteo. You're so strong and ethical, like Roberto, yet you can be the most compassionate man when it comes to others, particularly your siblings. You have the best of both of your fathers in you,\" she said honestly.\n\n\"I'm telling you this because I believe I'm going to need your help,\" she said sadly, and dashed a tear from her face. \"I need to right some wrongs, and I would like you to trust me and help me, please. In return I will tell you who I saw here, even though your fathers would not approve, and will go with you if you like to visit her.\"\n\n\"Nik!\" he hissed. \"She's alive and here?\"\n\n\"Your sister, Trista, is frighteningly like a younger version of her, even in her manic state,\" Theresa admitted and covered her face and began to cry again. \"And it's all my fault!\" she sobbed.\n\nEven in his shocked state, Matteo gathered his distraught stepmother into his arms and held her. \"I will help you, Trista isn't anything like Nik. I don't know where you're getting this from,\" he said honestly. The cold-hearted bitch that was Nik the last time he saw her was nothing like his vibrant and effervescent little sister.\n\n\"You're wrong in this, and I don't say that lightly,\" Theresa cried softly.\n\n*****\n\nBy the end of her second week at the Donati property, Cat had sorted through the clutter of her space with the help of Finola and Rosanna's oldest daughter, Arianna, who had befriended Cat, liking the fact that she was closer in age to any of the other adults there. She had a huge canvas set up that she had begun working on. While she had come up with several concepts, the more she got to know these people the more she knew one of the concept drawings fitted them perfectly.\n\nShe found that being able to immerse herself in her work without any outside distractions each morning, and in the evenings, she was able to accomplish a great deal. Then, finding that her benefactor, Peri, was busy with both her children and organising her huge family gathering, she decided not to bother her about the concepts she had in mind and went ahead with the one she knew was right.\n\nCat had always been careful and very conscious of the need to cover her work in the afternoons. Paintings of this size and detail could often seem haphazard and unrelatable without the bigger picture firmly in mind, so she had no wish for anyone visiting her to be telling stories of a mad artist wasting the family's time and money on random blotches of paint. On another wall were easels where both Finola and Arianna went through the exercises that Peri suggested for them. She quite liked seeing them discover a new technique and test it out on simple arrangements of cups and vases.\n\nShe had sent Matteo an angry text the day Romy had come to visit her, and the next day she had texted him an apology for her outburst after talking to Pete. It hurt that he hadn't acknowledged either text, but she did remember that Romy had said he would be out of contact for a least a week. She wondered where he was and why both he and Ricco would be out of contact range. Perhaps they had gone on some wilderness trek to clear their heads. A lot of people went up to do the Kokoda track at this time of the year as a challenge. Try as she might, though, she couldn't get him out of her mind and the look on his face when she had told him to leave.\n\n\"Hello?\" Romy called from the open door, and Cat quickly threw a sheet over her canvas and turned to greet him.\n\n\"Hello,\" she smiled. \"To what do I owe this pleasure?\"\n\n\"You are now the proud owner of a studio apartment in South Brisbane,\" he flourished the paperwork and placed it on the table. \"I've emailed Matteo the bill of sale, and a copy of these documents has gone to Ricco to process for him.\"\n\n\"Are they back yet?\" she asked casually. \"From wherever they went?\"\n\n\"I tried to call their office earlier, Aria and Lucca are still fielding their calls, so I am guessing not,\" he chuckled. \"Want me to forward a message to them? I imagine they would be able to get emails, sporadically, at least. There aren't too many places that have no coverage at all.\"\n\n\"No, I can wait,\" she said a little too casually.\n\n\"I have some time if you'd like to start on my sitting,\" he offered.\n\n\"Sure, why not. Do you mind if we go out to the front stairs of the house to do it?\" she asked.\n\n\"You're the artist, I'm just the handsome model,\" he chuckled. \"There will be more interruptions out there.\"\n\n\"That's okay, it will be less boring for you that way. As long as you can sit still while you're talking to people, I will be happy,\" she explained. She checked the concept sketch and saw where she wanted him placed on those steps and took some charcoal and chalk as well as her pencil case and an easel. Romy automatically helped her with the load, and they chatted about how hard it must be for him being such a handsome model type and the burden of it in a family plagued by so much ugly. He hadn't been able to keep the grin from his face as they discussed his misfortune.\n\nShe'd been out here measuring and pacing and marking things out several times, and now she believed she knew exactly where she needed people in relation to the stone stairs and railings. Now, with an actual body, she could see the piece in her mind's eye, full of strong, confident, happy family men who would do anything to protect those they loved and make life better for them.\n\nAs the morning wore on Cat stood at the easel and sketched as several of the other men came out to see what was happening and talk to her or Romy. It was almost lunchtime when Peri appeared on the stairs and walked toward her.\n\n\"I finally have some free time, and I was wondering if we could talk?\" Peri asked.\n\n\"Sure, I think I have got all I am going to from them,\" she laughed and pointed to the men on the stairs. \"I think I should have added some hyperactivity medicine for my kit. Do they ever sit still?\"\n\n\"Not even when they're asleep,\" Peri nodded in resigned indulgence of the men she loved. They walked back to her cabin with Romy and his twin, Jules, who Cat had only just met, following them and carrying her supplies.\n\n\"Jules, I need to schedule some extra time with you this week. It's so hard with you living overseas that I need to make sure I get it right while you're here,\" she explained in a slightly pleading tone. He had blown her off more than once already as he caught up with other family members after she had tried to talk about schedules at breakfast.\n\n\"Just add him to my times and I'll get him here,\" Romy chuckled as Jules was about to put her off again. \"Or, better yet, schedule time with Bianca, she grew up in Melbourne, she'll get him here just to spend some time with you talking about the Vitali clan.\"\n\n\"I might just do that,\" Cat said with no intention of being in a situation where she had to discuss anything about the Vitali family. She missed Matteo more than she would have believed possible, but she was glad he was away and out of range of any mobile devices. It had given her time to convince herself she had done the right thing and start the healing process without the temptation of calling him to tell him she missed him and had reconsidered his offer.\n\n\"Speak of the devil and she appears,\" Romy chuckled. \"Someone has to be bad in this household. We can't all be angels like Carmen and Peri,\" she laughed. \"Your presence is required for some sort of battle the kids are planning to spring on Dante for making them eat Brussel sprouts for dessert on New Year's Day.\"\n\n\"He only threatened, he didn't follow through, and your kids weren't even here for that battle,\" Romy said in Dante's defence.\n\n\"Go play with the boys and make sure they don't miss another one then,\" she laughed and accepted a kiss on the cheek from both men as they grumbled about being sent off to play like children. \"Men, they never truly grow up,\" Bianca entered the cabin. \"Is this a bad time? I can come back.\"",
        "\"You'll have to do the whole pinkie swear, cross your heart thing, but if you want to stay that's fine with me,\" Peri shrugged. She had hoped to talk to Cat alone, but she knew Bianca felt a bit misplaced in the family since moving overseas.\n\nPeri was more than impressed with the concepts Cat had come up with in initial drawings for the portraits. Bianca promised to make her husband attend regular sittings once she realised how important this was to not only Peri but the whole family. They'd left soon after all of the funerals and had not been here often during the last two years to watch everyone rebuilding their lives. These paintings were a symbol of the strength of this family to overcome anything and present a united front without any pretence.\n\n\"I hear you've been dating my favourite nephew,\" Bianca said as Cat began covering the large canvasses again and putting her drawings away.\n\n\"I doubt you have any nephews who are old enough to be dating,\" Cat laughed.\n\n\"Roberto and Stefano are my big brothers.Tthere's a bit of an age gap, I'm the baby of the family,\" she grinned.\n\n\"Wow!\" Cat said blinking.\n\n\"I'm also probably not as young as I look, but I will deny that if you ever repeat it,\" she said good-naturedly.\n\n\"We broke up, just before I came here,\" Cat said with a touch of sadness in her voice.\n\n\"Oh, that's a shame. I thought Matteo was finally moving past everything. When your own mother tries to kill you, the scars aren't just physical, and then that whole thing with Nik. Still, dating is a good sign. Why did you break up? Do you think you might get back together again? My mother told me he had been to see Roberto about you, so I'm guessing he was serious about you at some stage.\" Bianca asked, seemingly oblivious to any heartache Cat might be feeling.\n\n\"I'd rather not talk about it,\" Cat said softly, and turned back toward her canvas, adjusting the cover.\n\n\"Oh dear, you loved him!\" Bianca immediately regretted the offhand way she had spoken. She didn't mention any speculation her mother had made when she had told her that Matteo was dating a young artist. \"I'm so sorry; I would never have said those things if I knew you were hurting.\"\n\n\"I broke it off,\" Cat stiffened her back, taking a large breath. \"I'm fine. Yes, I do love him, but it's just one of those impossible things. We are better off this way.\"\n\n\"Sometimes I have believed as many as six impossible things before breakfast,\" Bianca quoted Lewis Carrol. \"Just look at Peri, nothing is impossible when it comes to matters of the heart. I mean, Dante? Seriously? Just shows there's someone for everyone.\" She laughed at Peri's expression. \"Oh, come on, you were married and pregnant to Mr. Wonderful, everyone's knight in shining armour. And, what? You decided you needed to visit the dark side?\" She continued to laugh.\n\n\"Well, we can't all fall in love with one of the naughty but nice Valentine brothers,\" Peri sniped back laughingly.\n\n\"I know, right? How lucky am I?\" Bianca grinned. \"It must be so hard for you having to paint all these gorgeous men. You should do a nude of them all just for us ladies to ogle over.\" She teased. \"Tell them they are going to be the perfect specimen, like the statue of David or something.\"\n\n\"No, I don't think so,\" Cat blushed brightly and shook her head, laughing with the two women.\n\n\"Let's get some lunch, I'm starving,\" Peri said. \"One of the pitfalls of breastfeeding is I am always starving.\"\n\n*****\n\nMatteo had spent a week with his family in the Kimberley. He trekked through Piccaninny Gorge and the Bungle Bungles with guides and had done a lot of soul-searching. Each of his siblings seemed to do the same, both together and apart, and he had finally faced his mother and asked the question of why, not expecting such an open and honest response. He guessed she had time to come to terms with not only what she had done but what had been done to her, and he had listened silently as she had talked about the pure insanity that her life had become and the fact that she had no desire to return to reality and the machinations of her family. Unlike Nik, she was happy here in the facility paying for her sins.\n\nOn the last day of the family's time with the Papillo, he had built up the strength to face Nik and requested a meeting. He had gone to her expecting to still feel the extreme pain of loving a woman like her but had felt nothing but a great sense of pity as he had been shown into the small suite that housed the beautiful woman.\n\n\"My God, Matteo! You're here!\" she had smiled widely and went to hug him, \"I knew Theresa wouldn't let me down.\" Matteo stepped away from her and put his hand up before him rather than let her hug him.\n\n\"Hello, Nik,\" he said in a deadpan voice.\n\n\"Oh, you're not still mad that I turned down your proposal, are you?\" she asked innocently. \"We had such a good thing; we loved each other and had a lot of fun. Neither of us was ready to settle down at the time. You have to see that,\" she continued to close the gap between them slowly. \"I promise if you get me out of here it could be just as good again. I'd even marry you this time when you ask.\"\n\n\"Why would you think I would want to marry you, now?\" he asked acidly.\n\n\"Because you love me, of course,\" she laughed as if he was joking. \"You've always loved me, silly. Don't you think I'm beautiful anymore?\" she asked coquettishly.\n\n\"You think I have been pining away for you for the last three years and that I am here to ask you to marry me again?\" he asked incredulously. \"After the way you treated me?\"\n\n\"Aww, Mattie, I didn't mean it. Think about all the good times we had, not the silly proposal,\" she waved away the event as if it was an annoyance to be easily forgiven. \"We can be happy again, just you and me. I promise I'll be the best wife ever.\"\n\n\"Barefoot in the kitchen with lots of babies to look after?\" he asked, and saw the hatred in her eyes briefly before she smoothed over her features.\n\n\"Yes, just you and me in the house on the hill,\" she smiled sweetly. \"You know that's why you are here. You want me there, with you, sharing your life and your bed. We were always so good together in bed,\" she said, dropping her voice down to a husky register.\n\n\"I don't love you, Nik. I don't think I ever loved you the way a man should love the woman he marries. I think I was enthralled by you. Under a spell even. You broke that spell with your cruelty and abuse. I haven't come here to be enslaved by sex again. I came here to thank you for giving me the freedom to live my life and find real love,\" Matteo watched as the sex kitten who had been approaching him changed and became a snarling feral beast. He was vaguely aware of the two men who had come to stand closely behind him and keep her from attacking him outright.\n\n\"Liar!\" she screeched. \"You love me! You have always loved me! You will always love me! Now get me out of here!\"\n\n\"I did love you,\" he admitted. \"I thought it was true love. It wasn't, though, was it? Be truthful, Nik. The only reason you said any of that was because you thought you had a hope of getting out of here,\" Matteo said.\n\n\"Ben will come and get me once he's sure I am sorry!\" Nik spat. \"Josh may be being an idiot over that fat cow, Peri, but Ben would never let me rot here!\"\n\n\"They think you died in the prison break, Nik,\" Matteo said gently and without rancour. \"No one in your family knows you're alive, let alone where you are. This is the ghost town, Nik. No one leaves here, ever. You took all of the chances and privileges your parents could offer and you killed them. They died in part because of your actions. Doesn't that affect you at all?\"\n\n\"I did nothing wrong!\" Nik screamed. \"Why do I have to keep telling everyone that! I. Did. Nothing. Wrong!\"\n\nThere it was, Matteo realised. The four words that had so shattered Theresa's view of the world and Trista's attitude to life. Nik honestly believed she was totally within her rights to treat people the way she had, and as he thought over his last conversation with his sister at the book launch he could see the same belief that nothing she did was inexcusable.\n\n\"The next time an ex-lover arrives and you try to get them to believe that you have changed and love them enough to settle down and play the good wife you might want to start with an apology and some remorse for the hurt you have caused them. You have done a great many things wrong, Nik. You used and abused anyone who cared for you so that now, when you need them the most, no one is coming to help you. Everyone who cares about you at all believes you're dead,\" he stated unemotionally.\n\n\"You know I'm alive!\" she spat.\n\n\"That's true, but I. Don't. Care.\" He enunciated each word. \"I thought I would, but I feel nothing for you, not even pity. You did this to yourself, and if you can't be sorry for the people you hurt, then feel sorry for yourself and admit you did something wrong to end up here. No one else is coming, Nik. Not now. Not ever.\"\n\nMatteo turned and left the room feeling oddly happy. He'd wasted so much time on a woman who was totally and inconclusively insane. He felt lighter and freer. The difference between the woman who was the Nik he knew and Cat hit him like a tonne of bricks, and he knew now that he not only wanted but needed Cat back in his life. She had admitted she was falling in love with him and he had walked away. He just hoped it wasn't too late to admit that he had been scared of the feelings he had for her, which was why he had walked away in the end when she'd told him to leave.\n\n*****\n\nPete was happy to have time to spend with Cat. The young woman fascinated him, and although he knew that she and Matteo had dated for just a week or two, he was also aware that it had been an intense time for her, and that although she had broken up with him, she had done it reluctantly.\n\nHe was a patient man who was content to observe her and talk to her about her life, letting her reveal herself slowly. He knew her history from the family research on her, as well as her medical history taken from a hospital database near her home in Melbourne. He'd started letting her get to know him little by little. He didn't talk much about himself, his true self within his family. He was their doctor, the guy they came to for help and to talk about problems, yet aside from his father very few knew anything about his personal life. Most assumed he was a workaholic, which was true to a certain extent. She had wanted to get to know him though, and he was slowly opening up to her himself as they became friends.\n\nHe approached her cabin and saw her standing with her phone in her hand, watching it as the melody played without answering it. He considered her carefully before tapping on the open door and walking in.\n\n\"I'm not looking,\" he said, quickly shielding his eyes and taking a chair behind where she had the large canvas set up so that she could continue to work while they talked, as they did most evenings for an hour or two. This chair had been set up for when he and the other men came in for sittings as she worked on proportions and body types for the individual portraits that would combine into a family portrait of the Donati twelve.\n\n\"Matteo?\" he asked, indicating her unanswered phone.\n\n\"I haven't heard from him for weeks, now suddenly he is calling and not leaving messages or texting,\" she frowned at the phone.\n\n\"You know if you answered it you would find out what he wanted,\" Pete chuckled.\n\n\"I don't know that I want to know,\" she admitted. \"I haven't spoken to him since asking him to leave. Except for an angry message I left on his phone after Romy got me to sign the paperwork for the apartment he was letting me in stay in,\" there was something about Pete that made her want to confess what she was really thinking and feeling. Her phone came to life again as she looked at it.\n\n\"Answer it,\" Pete said, his voice strong but not forceful, and without thinking she did what he said. Picking up the phone she saw it was her brother and answered it.\n\n\"David?\" she asked.\n\n\"Yeah. Look, I don't know how serious he is, but my boss says he's going to fire me if you don't talk to him,\" David gave a nervous chuckle.\n\n\"Martin?\" she asked. \"Why would he want to talk to me?\"\n\n\"No. The boss! Matteo Vitali,\" David said carefully.\n\n\"He what? Is he there with you?\" Cat asked, not believing this was happening.\n\n\"Yes,\" David said.\n\n\"He won't fire you, David, relax,\" Cat said. \"He's just used to getting his own way. Can you put me on speaker?\" Cat asked, and waited until she heard the echo in the background. \"Matteo, you realise how idiotic this is, right? Please stop calling, I have a job to do here. I will call you after the Gathering ends when I return to the city. If you fire my brother, however, I will never speak to you again.\"\n\n\"Fine,\" Matteo sighed. \"You have ten days, and then we have to talk about what happened. It's been a rough week, so don't push me too far, Cat. We need to talk, and sooner rather than later.\"\n\n\"Fine!\" she said. \"Ten days! David, I'll call you later!\" she snapped and hung up the phone.\n\nShe smiled. She wanted to see Matteo, she had missed him more than she had admitted, even to herself before hearing his voice. The things she wanted to say she couldn't say over the phone. She wanted to talk to him, really talk to him and look into his eyes as she did. That was why she hadn't been answering his calls. She had worried about what he might say about the breakup and the angry message she had left for him after being forced to accept the apartment. She was glad that he wanted to talk to her again. She had worried that he would retreat back into work and she would have to force him to see her again by making contact with Roberto in order to say what she needed to say to him.\n\nShe'd been horrified as, finally, after her curiosity had gotten the better of her, she had asked Bianca what she had meant when she had said Matteo's mother had tried to kill him. She had been told about the death of Alessandro and Matteo's injury, and part of the puzzle about why he shunned love began to make sense to her. Not that she thought scars like that could be fixed, but she owed him the chance to talk to her about it, which might ease some of his concerns.\n\n\"That smile doesn't go with the snappy voice,\" Pete said after hearing only one side of the conversation.\n\n\"It's complicated,\" she said, \"And I'm not ready to deal with it yet,\" she admitted.\n\n\"But you're going to be ready in ten days?\" he chuckled.\n\n\"Probably not, but I at least have time to work it out, if I can,\" she said smiling again, despite her misgivings.\n\nPete lapsed into silence, letting her think about the call and what it meant to her as he studied her. He could see possibilities in Cat, and perhaps it was time to show her that she had options. His family loved her, and the Vitali's had not treated her well, by all accounts, aside of Frankie. He still wasn't sure she could conform to his expectations, but it mightn't hurt to find out.\n\n\"The all singing, all dancing Donati concert is tomorrow night. You'll come with me, we will have fun,\" he said more as a statement of fact than a question, using the same strong voice he had used when he told her to answer her phone, and felt a sense of satisfaction when she complied so quickly.\n\n\"I guess I could use a break,\" she smiled thoughtfully. \"Sure, that sounds like fun,\" she agreed.\n\nPete smiled widely, a small thrill running up his spine at her easy acceptance of his words. Perhaps he had been right about her after all. He decided to continue to pursue his friendship with her and wait to see if Matteo's interest in her came to anything, or if the break up was permanent while letting her see who he was behind the congenial bedside manner of the family doctor. He had no desire to be involved with a woman whose affections could possibly lie elsewhere. He considered that the two short term affairs she had with the Vitali brothers could be nothing but a need to feel secure after her attack.\n\n*****\n\n\"Well, that didn't go well,\" Matteo chuckled. \"Maybe we should have done a video call, like a real hostage situation.\"\n\n\"Look, I'm not sure what's going on here,\" David said in obvious confusion.\n\n\"She never mentioned me?\" Matteo blinked. As close as they were, he had just assumed David knew that they had been dating, especially after his initial meeting with David a few weeks ago.\n\n\"Nope, I didn't even know you knew who she was,\" he said. \"At the risk of losing my job, I feel like I have to ask what your deal is with my sister?\"\n\n\"Sorry, mate, that must have been a confusing phone call for you then,\" Matteo couldn't help but laugh. \"I met Cat when she went to Brisbane, we were dating for a little while and then she dumped me. Now I'm on a quest to win her back.\"\n\n\"Why did she dump you? Bear in mind I will be asking her tonight,\" David said in a friendly manner, but was more than willing to defend his sister's honour if he had to.\n\n\"I was an idiot and didn't tell her how I felt. I'm not sure I knew how I felt exactly until she was gone,\" he admitted. \"Alright, I have a new job for you for a few days, follow me.\"\n\n\"Can I ask what it is?\" David fell into step with Matteo.\n\n\"I need information. Information only you have. Once I have that information we will put together a treasure hunt for two geniuses that are hard to challenge, so I'm hoping your information is good,\" Matteo said. \"Start talking, I want to know all of Cat's favourite things, starting from childhood, favourite toy, candy, treat, food, all the usual stuff.\"\n\n\"Look, I don't know how well you know her, but we didn't have that sort of childhood. Cat scrounged through our mother's bag and clothes every night for enough money to buy bread. We didn't have toys, candy or treats. Sometimes mum would sober up for a day or two, or the neighbours would help out, but we didn't have favourite anything's,\" he said unselfconsciously. \"Everything we have now is because she worked hard to make sure I got the opportunity to play football and get the internship with your company through Coach Frankie. So, if you're planning on being a prick, like your brother, you can count me out. She's every bit as good as any other girl who grew up rich, and I won't let you treat her like she isn't. Job or no job.\"\n\nMatteo stared at David dumbfounded. He shouldn't have been surprised, but he was. Most people just did what he said when he said it. He was Matteo Vitali, after all. This man and his sister seemed determine to frustrate him at every turn, and he became suddenly very serious.\n\n\"You're right, Ricco was a prick, and he is the first to admit it. I spoke to him a lot about the regret he feels about hurting your sister. I promise you I have been entirely honest with her up until now and I have no intention of doing anything that will ultimately hurt her. I genuinely want to fix things between us, and I need your help and friendship to do that,\" Matteo said sincerely.\n\n\"I'm not so sure she'd be happy with me helping you. She did dump you, so there must have been a reason. And I wasn't exaggerating, we had nothing, and anything we did have she gave to me because I was a whiny little kid,\" he admitted with a grimace. \"I don't think you need me, I think you need a miracle,\" he chuckled, \"Because sending her gifts won't impress her the way you think.\"\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "secrets",
        "lies",
        "family"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-09"
}