{
    "title": "The Human Condition Ch. 08",
    "pages": [
        "As usual, I was dressed and ready to go before Joe found his underwear. \n\nIt's a constant source of amazement to me that anybody can take as long as he does to get dressed.  And it's not like he primps or anything; the best way I can describe it is... he gets distracted. \n\nHe'll start to brush his teeth, then suddenly remember he needs to phone somebody.  He'll go make the call and while he's there, he'll see the plant on the phone stand needs watering.  He gets the watering can and as he's filling it at the sink, he realizes he forgot to tell me about the appointment he made for the boat to go in for repairs. \n\nAt that point, he'll wander into the bedroom with the watering can in one hand and the phone in the other, a towel the only thing keeping him from being one with nature.  \n\nThat's my cue to start bitching. \n\nSo it's me that ends up watering the plant and hanging up the phone, while Joe jumps into the clothes I've already laid out for him - only because I'm wise to his tricks.  I don't want a repeat of the time I left him alone to dress, only to find him sitting on the floor by the closet, nude, and sorting his collection of baseball cards, when we were already five minutes late for a dinner with one of my clients. \n\nToday was no different.  I gone into the bathroom to find out what the hell was taking him so long, only to see him talking on the cordless he'd snuck in there with him.  I say 'snuck,' because I'd learned along time ago that Joe with a phone was not good thing if you wanted to get anywhere on time. \n\n\"What the hell are you doing?\"  I crossed my arms and tried to look disgusted.  \n\nHe ignored me as always. \"Here,\" he said, handing me the receiver.  \"Talk to your sister while I get dressed.  We gotta get going or we're going to be late.\" \n\nI gasped indignantly, but he just laughed and walked out of the room. \n\n\"Mike!\" chirped a familiar voice on the phone.  \"Mike! Are you there, or are you staring at Joe's ass?\" \n\n\"Both,\" I said honestly.  Then I gave her my complete attention.  \"Hey, Sarah.  How goes it?\" \n\n\"Same old, same old.  Houston's a bitch in the summer.  Why did I move here again?\" \n\nI chuckled.  \"Because it's a big market and really good for your career?\" \n\nSarah was a TV sportscaster, and she'd moved to Houston the previous year to be a reporter on the number one news show in the city.  She bitched incessantly about the heat and the humidity.  And, you did not want to get her started on cowboys - real and or otherwise - but she loved her job and was damn good at it, if the things I read about her were true. \n\n\"Oh, yeah.  Well, keep reminding me, okay?\" \n\n\"Will do, lil lady,\" I replied, in a very bad impression of a Texas accent. \n\n\"And knock that shit off.  I hear enough of that crap as it is.\" She droned on and I laughed and kidded her, while she gave back as good as she got.  \n\nIt sometimes amazed me, how close we'd become.  When we'd \nboth lived under the same roof, we could barely speak to each other without ending up trying to kill each other.  Now, we rarely went a day or two without at least touching base. \n\nJoe loved her too.  I knew that's why he'd called her.  She was having a big day - up in the box with the network people from ABC, sort of an informal tryout for a place on their team.  He'd just been calling to give her moral support.  And since I'd been planning to do the same thing myself once I'd gotten him situated, I could hardly blame him. \n\nBesides, I thought, I owed her.  Without Sarah, I might never have gotten around to trying to fight for what was important to me... \n\n\n\nFebruary 1989 \n\nEveryone kept telling me how lucky I was.  My doctor said I was lucky because I was a fast healer.  My therapist told me I was lucky because the torn ligaments hadn't been worse.  My lawyer told me I was lucky because I had options. My friends just said I was lucky to be alive. \n\nThe only problem was, the one person who could actually make me feel lucky wasn't around to do the job. \n\nI did hear from Joe.  He called after he got to Rome.  He apologized for not saying goodbye.  He told me he felt like shit because he'd deserted me, and said he wouldn't blame me if I never forgave him.  He must have talked for an hour and said nothing but \"I'm sorry.\"  Finally, he ran out of ways to do even that and hung up.  He was crying. \n\nI didn't cry.  I just didn't have the tears to spare.  Besides, I wasn't about to admit that five lousy minutes were enough to destroy four years of friendship.  So, I hung up the phone and decided to go on with my life.  I would nurse my wounds, I would go back to school and I would wait for Joe to come home. \n\nSo I went to physical therapy and sweated and swore, but I made progress.  I returned to classes - maybe too soon for physical comfort - but great for my determination to get my life back to normal.  The waiting for Joe's return was more difficult, but I did my best, and if I spent too much time looking for his face in a crowd, I told myself that nobody noticed but me. \n\nI finally convinced Lucy that I was ready to be on my own about two weeks after I'd moved into her guest room.  The relief of being back in my apartment was great, though it felt emptier than I remembered. \n\nNot that I didn't get company.   Shit, I couldn't ever remember being so popular.   All the usual suspects showed up, along with coworkers and the half if the campus that came to gawk or sympathize.  My name hadn't been broadcast, but word had gotten around.  Eventually, the gossip \ntapered off and then stopped after a few weeks.  But it still meant that a lot of people knew what had happened. \n\nThis bothered me.  Not because I gave a damn about what other people thought, but because I still hadn't any intention of telling my family.  I figured the more people who knew, the less chance of keeping that promise to myself.  Kevin still thought I was nuts to not let my folks know, but I still thought it was silly to make them worry about \nsomething that was over and done with. \n\nSo, except for the hole in my life that Joe used to fill, my life was pretty much back to normal.  I got up, went to class, to work, did laundry, shopped - all the normal things that used to keep me bitching about being too busy.  My nights were slower, but there were people who visited and studying; and of course, the full time job of trying to not \nthink about Joe. \n\nAnother thing I didn't want to think about was what had happened to me. Unfortunately, there were times when it couldn't be avoided.  Cam had set me up with a lawyer in the firm, a real son of a bitch by the name of John Schubring.  He laid out exactly what he thought I should do about Elliot and pointed out how much money I could get out of a civil \nsuit.  I told him I'd think about it. \n\nThe police were in contact, too, this time for a more detailed statement.  After they finished, I got another call from someone in the DA's office.  I tried to answer everybody's questions, but the thing I really wished for was that they'd all just go away. It got to the point where that seemed to be all I wanted from anybody. \n\nI just needed down time, I figured.  My body was still healing and rest was important; at least that's how it seemed.  I slept a lot.  I even stopped making my bed; there didn't seem to be any point, since I crawled into it every chance I got. \n\nIt was my haven.  I'd pull down the shades and crawl in between the cool, soft sheets.  I'd sleep for hours until the alarm would ring reminding me that I had to get up and face the world.  After a while, I stopped paying attention to it and eventually stopped setting the damn thing at all. \n\nI started to make a point of parking my car in the garage instead of on the street, and stopped going to the door when my friends decided it was time for another visit.  I loved them, but sometimes it seemed overwhelming to have them around.  Pretty soon, they got the picture and I didn't have to worry about them anymore. \n\nThe only thing I had to concern myself with was filling up my sleep bank.  And I worked on that with a vengeance. \n\nI didn't think I was missing that much.  Classes were at the mid term and we were at a break.  Besides, I was at the end of my senior year and I'd planned for it.  My schedule was so easy, that basically all I'd have to do was read the textbooks and just show up to pass the exams.  I had plenty of time for that, though I must confess, I never seemed to get around to it. \n\nMy closest friends still dropped in, but they usually wanted to go out and party, something I seemed to have lost all interest in doing.  It sounded boring to me now.  I thought I was growing up and getting tired of the whole nightlife thing. \n\nI would go to the grocery store occasionally, but I only bought thethings I absolutely had to have to exist.  I found that if I shelled out 50 bucks for frozen entrees, I could eat with almost no effort.  Then I could crawl back in my bed and fall into that dreamless sleep I craved. \n\nWork had given me six weeks off and was paying my disability, so money was not that tight.  I don't know how he worked it, but I'm sure Cam had a hand in that.  I wasn't sure how I felt about owing him that way, but the time off was too irresistible to pass up. \n\nLucy checked in every day, and she was the main reason I even bothered to dress anymore.  I knew I'd get on the bad side of her tongue if she thought I was just being a slug.  \n\nEvery morning I'd get up and shower and shave, then I'd put on jeans and a sweater and wait for her visit.  We'd drink coffee and she'd ask me what I'd been up to, and I'd have to \nthink of some bullshit story that I was sure she'd see through right way. \n\nFunny, but she never did. Instead she seemed to treat me with amazing courtesy and never gave me any flack at all.  It seemed like I was talking to a different woman and sometimes, I almost thought I'd rather have the old one back.  I thought about asking her what the deal was, \nbut honestly, it seemed like too much effort.  \n\nSo we'd play out our little morning ritual, then she'd leave to do God knows what.  I'd strip and head back to my comfortable mattress, relieved that my responsibilities for the day were over. \n\nI don't know how long I would have kept this up, but I never got the chance to find out.  One sunny afternoon - a rarity in March - I woke up because something wet was suddenly slapped on my face.  I sat up and sputtered. \n\n\"What the fuck?!\" \n\n\"Good - nice to see you're still with us.\"  Kevin was standing over me holding a wet washcloth. \n\n\"Jesus H. Christ!\"  I said, wiping the water off my chin.  \"How the fuck did you get in here?\" \n\nHe grinned.  \"Lucy let me in.\" \n\n\"Well, she had no goddamned right.\" \n\nHe leaned forward, and his expression suddenly changed. \"Yes, she does, Mike.  She's your landlady, she's your friend, and more importantly, she's worried about you.\" \n\nI lay back down on my pillow and closed my eyes.  \"She doesn't have to be,\" I said quietly.  \"There's nothing wrong with me.\" \n\nKevin snorted.  \"Try tellin' that to someone stupid, cause it doesn't work for me.\" \n\nI kept my face away from him.  \"C'mon, asshole, I'm just tired.  Can't we have this conversation after I'm up?\" \n\n\"And when would that be - July?\"  He looked around the room and made a helpless gesture.  \"For God's sake, Mike,\" he continued, \"I don't think you've been out of this bed in a week.  Maybe two, if the state of this place is any indication.\" \n\nThat was unfair.  True, I had a couple bags of garbage from all those cardboard containers of frozen food, and there was a bunch of dishes in the sink, but other than that, the place looked pretty good to me.  No dirty clothes, anyway; I hadn't worn any long enough for them to need cleaned. \n\n\"Get your ass out of bed,\" Kevin said, using the same voice he used at the center when the kids were pulling shit.  \"Now!\" \n\n\"Fuck you,\" I was no kid and he wasn't going to get his way this time.  I closed my eyes and pretended he wasn't there. \n\nI heard him rattling through my cupboards, but he didn't say anything else to me.  I thought he would sit around for a while and try to intimidate me into doing what he wanted.  He was in for a long wait as far as I was concerned.  I was just drifting back into my non-dreamland state when my back was suddenly assaulted by freezing-cold water. \n\n\"Jesus Fuckin' H. Christ!\"  I roared, Kevin had the good sense to move away as I jumped out of bed and came at him. \n\n\"Back off, Mike,\" he ordered.  Surprisingly, I did. \n\nThe apathy that had left me as soon as I'd felt the water was creeping back into my bones.  I knew the bed was now a no-go, but there was the couch.  My eyes drifted towards it longingly.  Kevin immediately took a step towards me. \n\n\"Don't even think about it,\" he warned. \n\nHe walked over to my closet, pulled some stuff out of it and threw it at me.  I caught it automatically and stared at him as he invaded my underwear drawer. \n\n\"Here,\" he said, handing me a pair of red boxers.  \"Put these on, along with the rest of this shit.  We have to be somewhere in 20 minutes.\" \n\n\"Not a chance in hell,\" I said in a low voice, staring back at him. \n\n\"Oh, yes there is, sweet pea.  You have an appointment today, and you're gonna keep it.  And I'm gonna go with you, just to make goddamned sure you show up.\" \n\n\"And just where do you think you're taking me?\"  I asked through gritted teeth.  Though there was no way in hell I was going anywhere. \n\n\"To see Alice Wanamaker,\" he replied calmly. \n\n\"Oh shit.  You want me to see that shrink again?!\"  I sputtered. \n\n\"Yeah, I do!  And trust me, Mike, you're gonna see that shrink again, if I have to get Ab over here to carry you to her office!  So help me God, if that's what it's gonna take, I'll do it.\" \n\nI folded my arms.  \"I have nothing to say to her.\" \n\nHe laughed out loud.  \"You have everything to say to her, but you're so goddamned stubborn, you'll probably sit there like a fuckin' mute for the whole hour.\" \n\nThis was the first thing he'd said I agreed with.  \"Alright,\" I said. \"So then what's the point of going?\" \n\n\"The point is, you're going - that's the point.  Today, and tomorrow, and the day after that, and on and on until she can either get you to open up, or you explode like a raw egg in a microwave.\"  Kevin's voice softened, the concern he'd kept hidden, finally crept into his voice.  \"Jesus, Mike - can't you see it, sweetie?  You're falling apart here.\" \n\nI shook my head.  \"I'm fine,\" I replied.  \"I'm just a little tired.\" And as stubborn as you, I thought. \n\nKevin looked me right in the eye.  \"No, there's a lot more goin' on than that, Mike.  You want me to list the evidence?\"  He started to tick the points off on his fingers.  \"One - you haven't been to class in over a \nmonth.\" \n\n\"Not true, I...\" \n\n\"A month!\" He insisted.  \"I checked with some of your professors.\" \n\nJesus, I thought, had it really been that long?  I knew I'd been skipping for a week or so, but that was all I thought it was, I swear. \n\n\"Two, you don't see any of your friends anymore.  You don't even bother to answer your phone,\" he pointed over at the nearby answering machine, which was blinking red as another sign of my guilt.  \"Or apparently, even listen to your messages.\" \n\nI shrugged, but I could feel my cheeks burning.  I knew that was true. I'd turned the ringer off on my phone so it wouldn't disturb me.  And after the first couple of days, I'd started to ignore my machine because I felt guilty about not answering the phone in the first place.  But I'd been thinking about getting in touch with everyone again, just \nas soon as I could get up the energy. \n\n\"Three,\" Kevin was relentless, \"when was the last time you got laid?\" \n\nI shot him a look; that was unfair. Elliot was the last time, and he knew it.  Add that experience to what had happened with Joe, and it was no wonder I wasn't eager to jump back in the saddle again. \n\n\"I think you know damn well exactly when that was.\"  My jaw was clenched so hard I could barely get the words out of my mouth. \n\n\"Okay,\" he conceded, \"lemme put it another way: when was the last time you beat off or even thought about sex?  How long ago did you have a nice little fantasy about some big juicy cock?  Anybody's cock - say, Joe's, for instance?\" \n\n\"Fuck you!\"  I shouted and took a step forward. \n\nHe was taller than I was and certainly, at this point, stronger, but I had anger on my side.  I figured it would give me the edge I needed to throw his ass out. \n\nFor his part, Kevin ignored my temper.  He threw up his hands in a 'why not' gesture. \n\n\"If that's what you want, buddy, I'm all for it,\" he said.  \"At least it would prove that some of you is still alive.\" \n\nAll the anger leaked out of me, leaving only the familiar feeling of exhaustion.  I went over to the couch, sat down, and put my head in my hands.  He walked up behind me and gently squeezed my shoulder. \n\n\"Get dressed, Mike,\" he said, his voice no longer angry or threatening. \n\n\"Oh, please, Kevin...\"  I hesitated then went on, picking my words carefully.  \"Okay, look - maybe you have got some good points.  I promise, I'll work on some things like the phone calls and going back to school,\" I deliberately left out any promises about sex.  \"But right now, I just want to be alone so I can think about some things.\" \n\n\"Uh huh.  You just wanna crawl into a ball and try and escape.\"  He knelt beside me and kissed my cheek.  \"Sorry, sweet pea.  Can't let ya do that.  I love you too much to see you in this kind of pain.  We all do - me, Lucy, Beau, the rest of the guys from the Tuesday game, everybody.  We want to help you - be there for you.  But you gotta take \nthe first step,\" he stood up and put his hands on his waist.  \"You have to let us in, and you need to have some therapy - starting today.\" \n\nHe reached out a hand and pulled me to my feet.  Then he took the shirt I was still holding out of my hand and slipped it over my head. \n\n\"Now get dressed,\" he said gently.  \"Alice is making time for us.\" \n\nI gave up then.  I knew he was honestly concerned.  What difference did it make anyway?  Alice wasn't going to be able to do any good, but so what.  It wouldn't hurt to go and listen to what she had to say.  \n\nAnd Kevin was a smart boy.  He'd figure out soon that this wasn't going to help me.  Sure, I had problems, and maybe I had let them get me down lately.  Thanks to Kevin, I knew now that maybe things were getting a little bit out of hand.  But I could take it from here though; I was positive of that.  I'd always been able to handle things.  I saw no reason why this would be any different. \n\nBy the time we got to Alice Wanamaker's clinic, the afternoon was over and the lights of the building were dark. Kevin didn't pay any attention to that.  He pulled his car up to the back and rapped on a staff-only door.  A few moments later, Alice opened it up herself.  She smiled at me, then looked at Kevin. \n\n\"I was worried that you hadn't been able to convince him to come after all.\"  Her voice was soft, but it carried in the cold night air. \n\n\"There's nothing so determined as a big queen trying to snag a man,\" I said, before Kevin could make any derogatory comments himself. \n\nAlice laughed.  \"Well,\" she said, \"at least you've still got a sense of humor.\"  She took a good look at me and frowned.  \"Baby, you look dreadful.  Get in out of the cold, and let's go into my office and talk.\" \n\nI followed her silently.  Kevin said he's wait for me, then sat and read a magazine out in the hallway. \n\nAlice was a cozy-looking woman of about 60.  She had gray hair that looked like someone had gone after it with a weed-whacker.  She was short and stubby - she'd have looked like hell in a bikini - and yet there was something about her that was undeniably appealing.  She had the kind of soft, chubby body that every little kid in the world likes ",
        "to cling to.  She even smelled liked safety; an ld-fashioned scent of roses that stayed with you, long after you'd left her presence. \n\nKevin told me once she had a reputation as being a ball-buster, but you couldn't prove it by me.  She'd been the perfect granny when I'd seen her last, and so far, it was just more of the same.  Even though I thought being here was a waste of time, I had to admit, I was glad to see her again. \n\nWe went into her office and sat down.  The first time I'd been here, I'd had to use the couch because of my injuries.  This time, I picked a comfortably shabby wingbacked chair across from her scratched wooden desk.  Alice was in charge of a rape crisis center that was perpetually in need of funding, and there was never enough in the budget for such \nluxuries as good office furniture.  She'd told me on my first and only other visit that these were discarded relics from a gastro-intestinal man at the U who'd redecorated three more times since he'd give her this stuff. \n\nIt didn't matter to me; I liked it.  There was an ease to her office. It had no pretenses that you felt you had to live up to. \n\nAlice asked me how things were going and when I said fine, she raised and eyebrow and looked at me.  \"That isn't the story I hear from Kevin.\" \n\n\"Kevin is an alarmist,\" I said mildly, hoping that sounded like the truth.  \"Maybe I have a few issues, but there's nothing really that serious.\" \n\n\"Well, that's good,\" she said, then paused to look down at a file and read for a minute.  \"So, why don't you tell me what these issues are?\" \n\nWhat the hell, I thought to myself.  I said I'd give it a shot.  I explained briefly about my physical therapy and how exhausting it had been.  I told her about going back to school.  I did say, I was a little concerned at how low my energy levels were lately. \n\nI wavered about telling her anything about what had happened with Joe and Betsy.  I finally compromised and told her that my best friend and his fianc\u00e9 had broken up and he'd left, and that I missed him.  The whole litany only took about five minutes, but at least I'd attempted to let her know my state of mind. \n\n\"Hmmm\" she said, idly tapping the side of her cheek.  \"And what about the rape?\"  She watched as I flinched at her use of the word.  \"Do you feel you still have any problems associated with that?\" \n\n\"Not really,\" I shook my head.  \"I hate all the bullshit with the copsand the District Attorney's office, and I'm not exactly looking forward to testifying, but other than that, I have nothing to complain about.\" \n\n\"No dreams?\" \n\nI shook my head. \n\n\"No fears about going out at night or being alone?\" \n\nI grinned, a guy my size doesn't worry about that kind of shit.  True, I'd been fooled by Elliot, but I knew better now and I'd never put myself in that situation again. \n\n\"How's your sex life?\" she asked. \n\n\"Now, you sound like Kevin,\" I said.  We both laughed and then she waited for a real answer. \n\n\"Okay,\" I said finally.  \"I admit, I'm not really interested in any intimacy right now.  But remember, I broke up with my boyfriend that same night, and I think that's more the reason.\" That, plus Joe, I thought, but I wasn't going to discuss that with her if I could help it. \n\n\"Do you still masturbate... have any sexual fantasies?  That kind of thing?\" \n\nGod, had she and Kevin discussed this beforehand?  I definitely didn't want to talk about this right now. \n\n\"No, not really,\" I reluctantly agreed.  \"When I get sick or hurt or something, my libido seems to be one of the casualties.\" \n\nI didn't look at her when I said this.  I was too busy remembering all the times my actions made this statement a lie.  Like when I was in the hospital and burned.  I'd still managed to find a way to get some relief.  This time was different.  I had absolutely no desire for sex whatsoever.  In a way, I was even grateful about that.  It meant at \nleast my fantasies about Joe were clean. \n\n\"Okey dokey,\" Alice leaned back in her chair.  \"Then why don't you tell me why you think you need to be here?\" \n\n\"I don't,\" I said bluntly. \n\n\"Really?\"  She raised her eyebrows and scribbled something on a pad. \n\n\"I know I have some problems,\" I continued, \"but I think I can handle them myself.\" \n\nAlice nodded sympathetically, \"I'm sure that's true, but isn't it nice you don't have to?\" \n\nWe went on like that for the rest of the session.  She poked and prodded and I dodged and evaded.  It was more like a duel than it was a conversation, and by the end of it, I wasn't sure who'd won. \n\nShe stood and we shook hands.  She led me out to where Kevin was waiting, looking at Vogue. \n\n\"You are such a fag,\" I teased him. \n\n\"And that's a bad thing?\"  He threw the magazine back on the table.  \"Besides, it was either this or American Baby.  So, how did it go?\" \n\nI sighed.  \"Fine.  She wants to see me tomorrow at the same time.\" \n\n\"Great,\" he grinned.  \"At least that means she doesn't think you need to be locked up.\" \n\nI decided to believe he was only kidding and grinned back.  But in the back of my brain, I wondered just exactly who the joke was on. \n\nFor the next month my routine was pretty much the same.  I went to see Alice every day the first week, then on Tuesdays and Thursdays from then on.  At first, Kevin or one of the other guys would come by every night to make sure I made it to my appointment.  After awhile though, they realized that I could be trusted to show up on my own and left me to it. \n\nThe sessions were pretty awkward in the beginning.  I really couldn't think of anything to say.  As we got to know each other better, I started to open up more and things got a little easier between us.  I even broke down and told her most of my history with Joe - including that last, awful night. \n\nI thought that would please her because it had to be some kind of a breakthrough.  If it did, she didn't let on. All she did was make a few sympathetic noises and scribble notes, then she asked the same damn question she did every night. \n\n\"Tell me about the rape again.\" \n\nI don't know why she did that.  I'd told her all about it the first time we met.  But she kept insisting on going over and over it until I just wanted to scream or bolt to the door.  I didn't, though, and she kept on asking. \n\nWell, at least I felt I'd made some progress.  For one thing, I was able to go back to classes.  I had some catching up to do, and that occupied a lot of my time.  \n\nI also got in touch with all those people who'd been \nleaving messages on my machine.  Slowly, I was making plans with most of them to go to dinner or a movie, or to anything that didn't include the possibility of sex. \n\nI still had no desire for that.  Secretly, it no longer pleased me either.  I'd look at my limp cock and wonder if the only thing it was ever going to be good for again was taking a piss.  Even if I didn't want a man at this point, the possibility of never being able to have one wasn't exactly the happiest thought I'd ever had. \n\nIt wasn't physical, I knew that.   The doctor assured me there'd been no permanent injury to the equipment - first, when I was in the hospital and later, when I finally got the nerve up to ask him again when I went in for a checkup.  Another reason I knew was because I was the kind of \nguy who almost always woke up in the morning with a piss hard-on, and that hadn't changed.  The only problem was that as soon as I relieved myself, it went away for another 24 hours. \n\nAt some point, I realized I should probably mention this to Alice, but I kept putting it off, hoping the whole thing was just temporary and would eventually fix itself.  She'd never actually asked specifically about my erections, so I told myself I wasn't really keeping anything from her that was important. \n\nThings went along and time slipped by and it was early May.  I was graduating soon and my folks were coming out, even though I told them I'd just as soon have the diploma mailed to me and forget about it. \n\nSome of it was still the exhaustion that still seemed to haunt me.  It was even worse now that I'd finally returned to work.  Alice had only given me one extension of a couple of extra weeks before she'd decided it was time I go back there.  But if I was honest with myself, a lot of the reason for my apathy was because I knew that this wasn't exactly \nthe graduation ceremony I'd always anticipated. \n\nThere would be no pictures of Joe and me with our arms around each other wearing our caps and gowns.  There would be no late night celebrations that went on into the early morning, leaving us groggy and sick, but happy as hell.  Joe wasn't coming back to pick up his diploma.  \n\nAfter that first call he hadn't phoned again, but there were a series of letters, each more distant than the last.  He was having a great time, he had lots of stories to tell, Josh said hi... \n\nThe letter that said he was staying on for the summer had arrived the week before.  He wished me luck and said he'd think of me on the big day.  I cursed him and cracked a pane of glass in the door when I stormed out to a class I was late for.  \n\nI regretted that.  Not the glass, I replaced that the next day with a new sheet from the hardware store and some putty.  But I was sorry I got angry.  I knew what Joe was going through.  Sometimes, it seemed like I was the only one who \ndid. \n\nKevin could barely mention his name without spitting.  He seemed to think that Joe's leaving was a sign of weakness.  Saul, who'd finally made it back from the Dark Continent, heard his version of events and agreed with him.  I argued that Joe's concern had saved me when I needed it most.  If later events had made it impossible for him to stay, then maybe they should cut him some slack.  \n\nKevin's standard response was:  'Why should I even bother when you're giving him more than enough rope to hang yourself!'  The last pronoun was not a mistake on his part. \n\nIt wasn't just the gay side of the group that took this stance either. Beau wouldn't talk about him at all and Ab and Ronnie were almost as bad.  If they thought I'd appreciate their support, though, they were wrong.  It only made me feel worse, especially since I figured they'd \nprobably said the same thing to Joe in letters or phone calls, and would no doubt continue with the cold shoulder once he returned. \n\nI didn't think that was fair, and I figured they should know that for themselves.  They knew what had gone on between Joe and me.  Beau had made sure of that, along with Lucy, a deed for which I wasn't completely able to forgive either of them.  It was my business, and Joe's - and of course, Betsy's. \n\nBetsy.  I still hadn't talked to her since the night she walked in on us.  I wanted to.  I'd tried to call off and on for the first couple of days.  She didn't pick up and my messages went unanswered.  \n\nIn a way, this hurt me more than anything else I'd been through.  No matter how much I suffered over what had happened between Joe and me, I knew that it was my own actions that had brought it on - not Betsy's.  Her anger over that fact had been justified.  I had no bigger regrets than the one I felt about betraying her. \n\nBut there was something else, too:  I plain old missed her.  We had become so close those last few months.  The thought of never recapturing that feeling depressed me more than I would have believed.  I deserved it though and if that's the way Betsy wanted to handle it, I'd just have to accept it.  I'd told that to Alice, and sadly, she'd agreed. \n\nSo you can understand my reaction when I finally saw Betsy standing at my door again.  I couldn't believe it was her at first.  I stood there stunned, letting in the cold rain - a requirement in Michigan in May. \n\n\"Mike,\" she finally said, \"it's a little wet out here.  Can I come in?\" \n\n\"Oh, God - I'm sorry!\"  I stood back and let her pass. \n\nFor a few minutes, it felt like nothing was different.  I took her coat and got her a towel for her hair.  I made us both some coffee and we sat down at the table across from each other.  Then Betsy took my hand and looked at me and it all came back.  I felt my cheeks flame and for the first time since the night Joe left, I could feel tears in my eyes. \n\n\n\"I wanted to see you before I left,\" she said softly. \n\n\"You're leaving?\" \n\nShe nodded.  \"I'm going back to California.  You know, I always liked it there.  But I couldn't just leave and not say goodbye and see how you're doing.\" \n\n\"I'm fine,\" I managed to get out. \n\nBetsy smiled sadly. \"I know it doesn't seem that way, but I've been hoping that was true.\" \n\n\"Oh, God, Betsy...\" \n\nShe squeezed my hand hard.  \"Don't, Mike.\" \n\n\"But I need to tell you how sorry I am!\" \n\n\"No, you don't.\"  Her gaze was steady.  \"If anybody needs to apologize, it's me.\" \n\nI was stunned.  \"What?\" \n\n\"I said some terrible things to you,\" she continued, her eyes filled with tears.  \"Awful, hurtful things.  I knew they weren't true, even when... I knew.\" \n\n\"It just happened,\" I said.  \"I swear to you that we'd never done anything like that before.\" \n\n\"It was just a shock, you know?  Walking in on you two, seeing you together, just...  I don't know - looking so right together.\"  She sniffed and then smiled.  \"You want the truth? I wasn't so much pissed as I was jealous.\" \n\nI stared at her.  \"You don't mean that.\" \n\n\"Yes I do.  And it wasn't the first time.\" \n\nThat totally threw me.  Betsy had never been one of those girls who pitched a fit when their boyfriends had a life that didn't always revolve around them.  \n\nShe must have seen the doubt in my face because she laughed softly. \"Poor Mike.  You don't get it do you?  How could you?  You never saw yourself and Joe the way the rest of us did.  Hell, the way we still do.  The way you really are.\" \n\nI shook my head.  \"There's nothing to see.\" \n\n\"Mike!  Stop it!  Jesus, for once, can't you be honest with me... with yourself? You  love Joe - you always have.\" \n\nI stood up abruptly.  Hearing Betsy use those words was too much. \"Betsy, shut up, okay?  I don't think I can do this now.\" \n\n\"Why not?  You'll have to sometime.\" \n\nSuddenly I was furious.  Maybe Alice had let me down easy on this, but it looked like Betsy wanted to shove my face in it. \n\n\"Why?\"  I barked.  \"What the fuck good will it do? Okay, you're right. Satisfied?  Cause I sure as shit don't feel any better.  Christ, what the hell am I supposed to do now?\"  I ran my hand through my hair, tried to regain my composure.  \"He's gone, Betsy.  He doesn't want me to love him.  I think he's made that perfectly clear.  So what the fuck do I do about that?\" \n\nI glared at her, but she just shrugged. \"Well, you could try fighting for him.\" \n\nI rolled my eyes and began to nervously pace back and forth.  \"And never mind the little matter that he's straight?  Oh, yeah, that'll work.\" \n\nI began to shake and turned around, just wishing I could go back to bed and sleep again.  Betsy walked over to me, grabbed my arms, and spun me around to face her. \n\n\"Tell me something,\" she said.  \"When was the last time a straight guy looked at you the way Joe does?  When was the last time you saw a straight guy get a hard-on just because he got too close to you?\" \n\nShe stepped back and released her grip.  I had marks on my arms from her fingers.  But when she spoke again, she was as calm as if she were reciting a poem she didn't particularly care for. \n\n\"Take a look at things from my point of view.  The guy I was engaged to couldn't go a day without seeing you.  We'd be getting ready for bed, for sex, and he'd sneak away to call you, getting a fix of your voice.  Half the time, I don't think he even knew it was me he was making love too.\" \n\nMy eyes widened. \"You don't mean that.\" \n\n\"Yes, I do.  Oh, I didn't realize it at the time, but I knew something was wrong.  I told you about it, remember?  My God, I was afraid it was another woman.  But it wasn't. It was you, Mike.  I think it was always you.\" \n\nThis was getting ridiculous.  \"Betsy,\" I said gently, \"I'm not saying you two didn't have your problems.  But honey, guys don't just wake up one day and 'decide' they're gay.  It's a slow process, and one that starts a lot earlier than this.  Even when you hide in the closet, you know.  You always know.\" \n\n\"And who says Joe doesn't know?\"  She countered.  \"What makes you think he hasn't been 'in the closet' about you for years?  Did you ever ask him about it?  Did you ever say, 'Hey, Joe, how do you feel about guys? Do they ever turn you on?'\" \n\nShe watched for my reaction, but she'd already guessed the answer. \"Of course you didn't.  Jesus, Mike, when are you going to get over this ideal you have in your head and see Joe the way he really is?  He's not a saint.  He's a human being.  He gets things wrong, and sometimes, he lies to protect himself just like the rest of us mere mortals.   You \nneed to face that, for your own happiness, and for his.\" \n\n\"You know, Joe and I rented a video one night, a porno flick,\" she grinned an unhappy smile.  \"It was my  bright idea.  I was hoping it would inspire him.  Well, it worked.\" \n\n\" But the thing was, it wasn't the girls that turned him on.  Oh, he watched and he liked it, but it was this one guy who really rocked his world.  From the minute that guy came on screen, Joe was hot.  He was a big guy - dark with curly black hair.  I kidded Joe about it.  He said it was the hair and then he made a joke about mine and told me it was \n'cause the guy kind of looked like me.\"  She sighed and shook her head.  \"And because I wanted that to be the truth, I decided to believe him.  But even then, I think I realized it was really the other way around.\" \n\nShe took my hand and led me over to the full-length mirror on the back of the bathroom door.  She made me stand next to her and pointed. \n\n\"We could be brother and sister,\" she said softly. \n\nI stared, shocked.  She was right.  My own sister looked so much unlike me that it had never hit me before.  But Betsy and I could be twins - we looked that much alike. \n\n\"And I don't think I have to go find that picture of Cam you used to have out to show you the other half of this equation.\" \n\nI shook my head in agreement. \n\n\"I want to tell you something else,\" she continued.  \"When Joe and I first met, he was a pretty good lover, even for an eighteen year-old boy,\" she laughed.  \"I mean, what he lacked in experience, he more than made up for in enthusiasm.  But when I came back, it was different.  I \nblamed myself - I thought it was just me, because of Ben and all.  But it wasn't.  Eventually I realized that.  Joe just wasn't as into it like he'd been before.  Oh, he tried, but somehow, it wasn't the same.  And Mike, half the time he couldn't even...\"  She closed her eyes.  \"Well, you get the picture.\" \n\nI did.  And the whole time she was speaking, all I could think of was that hard bulge I'd felt when he'd rubbed up against me while rinsing my hair.  But Betsy couldn't be right, I thought.  If they'd had problems with their sex life it had to be because of something else. \n\n\"Oh, there's that look,\" Betsy was still staring at my face in the mirror, a half-smile on her face.  \"You still don't believe me.  But tell me something, Mike: is it really that you don't think I'm right, or maybe it's that you don't want to think I'm right?\" \n\nMy mouth dropped open as I searched for something to say.  Before I could she continued. \n\n\"Because if I'm right, then you know, you just might have to do something about it.\" \n\nThe phone rang.  I'd never been so glad to hear that sound in my life. I practically ran to answer it.  The problem was, Betsy had thrown such a curve at me, I didn't catch the first half of the conversation.  The person on the line spoke for about a whole minute before what he was saying started to sink in. ",
        "\"Wait a minute,\" I spoke into the receiver.  \"I'm sorry, repeat that again.\" \n\n\"I said,\" Cam's baritone come over the line loud and clear, \"you don't have to worry about John Schubring bugging you anymore about suing that asshole who went at you.  You can't sue a dead man.\" \n\n\"Elliot is... dead?\"  I said, in disbelief. \n\nBetsy heard me say the last sentence and came over and put her arm on mine.  \"Is he sure?\" \n\nI nodded and she gripped my arm tighter.  I'd known that Elliot had been moved to a real prison after two months at the forensic center.  You have to be even more twisted than he was to get to stay there indefinitely.  County lockup had not been an option either, because he was considered too dangerous to be in with the run-of-the-mill felons so he'd been sent to Jackson to wait out his trial.  It was the \ntoughest prison in Michigan, now it seemed to be once again living up to its reputation. \n\n\"Aren't you listening?\"  Cam said.  \"There was a fight in the prison yard yesterday afternoon.  Elliot got stabbed.  He died in the hospital this morning.  They don't know for sure, but it seems that piece of shit finally picked the wrong guy to try out his perverted little sex games with.  The kid belonged to another prisoner who took offense when \nhis boy-toy came home a little the worse for wear.  Elliot got thrown in solitary confinement for that stunt, but all that did was prolong his miserable life.  Yesterday was the first day he was allowed out in the yard.  There was a scuffle and when the guards finally broke it up, there was Elliot - one knife in his back and another where his balls \nused to be.  Gotta love the irony.\" \n\nI supposed I agreed with Cam, but I still winced at the thought of having your balls cut off.  We talked for a few minutes more.  Cam reminded me that I could still go after Elliot's estate on the civil case, but I told him I still hadn't decided whether to just let it go.  Finally, Cam hung up.  I put the receiver back in it's cradle and looked down at Betsy's worried face. \n\n\"It's over,\" I said. \n\n\"Are you sure?\"  She studied my face. \n\n\"Hell, yes, I'm sure,\" I felt weak as the thoughts, I wouldn't have to sue, wouldn't have to testify, finally sunk in.  The reporters had still not identified me as the man who'd been Elliot's final victim.  I'd been dreading court because I was sure that my name would inevitably get out.  Now it wasn't going to happen. \n\nI was in a daze, I'd heard the words and I knew what they meant, but it was a lot to believe in.  Betsy and I talked for a few more minutes and then she had to go for her shift at the hospital.  We made plans to go out for goodbye dinner the following week, and I led her to the door. \n\nWith the news about Elliot, I'd almost forgotten what we'd been talking about before the phone rang.  Betsy reminded me as she was leaving. \"Remember what I said, Mike, about you and Joe,\" she said as she hugged me goodbye.  \"I'm not done yet, either, I warn you.  I really think you two are right for each other, and I think it'd be a shame if you didn't \npursue it.  Especially if the only reason is because you're too scared to find out the truth once and for all.\" \n\nI just stood there and watched as she closed the door behind her.  I knew she was right about one thing:  I did need to think about it.  But tonight wasn't the night.  Tonight I had to accept that Elliot was finally, irrevocably, out of my life forever.  I picked up the phone to call somebody, anybody, to tell them the great news, but then I looked \nat the receiver in my hands and put it down again.  It was Friday night.  Everybody was either out already or just getting ready to go.  I didn't want to disturb their plans. \n\nAnd there was another thing:  before I could tell somebody else, I had to come to terms with the news myself. Elliot... gone.  It was unbelievable.  Don't get me wrong, I didn't feel one bit sorry for the asshole.  If anyone ever deserved what he got, it was Elliot.  Not for me, but for the three dead boys they'd dug up by the lake, and for countless others who'd been victimized and abused by him.   Those \nnameless guys who'd been so terrorized they couldn't even face reporting him. \n\nHe'd picked wrong with me.  I had friends, a home, and a family who cared.  Even if he'd killed me, someone would have come looking for him.  But it seemed that he hadn't always been so careless.  Of the three bodies, only two had been positively identified.  They were runaways, one whose name Kevin recognized as a kid who'd taken refuge at the shelter.  There were two other boys that Kevin knew, too, and both had apparently disappeared off the face of the earth.  I was afraid Elliot had found a better hiding place than his isolated cabin for their last resting place.  And if not him, maybe some other predator had found them.  In the last few months I'd learned that monsters really do exist. \n\nThat night I had a dream.  I was back in Elliot's playroom.  I could feel the bite of the metal against my skin.  Sweat ran down my body, stinging the cuts he'd made and mixing with the blood that still oozed out of them.  Elliot stood in the corner, his back to me.  Only it wasn't him. I realized with a shock that it was Joe.  For a second, I \nslumped in relief.  Joe was here.   He would save me. Then he turned.  He had no face.  I started to scream. \n\nI was still screaming when I sat up in bed.  My heart was pounding and the sweat poured off me, soaking my sheets.  I was so caught up in the dream, I was almost afraid I'd find blood there too, when I turned on the light.  Of course there wasn't, and I sat there, gasping for breath and desperately trying to calm down. \n\nEventually I managed to crawl out of bed.  I went to the bathroom and got a glass of water.  I was feeling pretty foolish by that time.  It was only a dream for Chrisssakes, and one that was pretty easy to figure out.  I went back to the bed and looked at my clock.  Only 11:30.  I'd been asleep for about an hour.  That was odd; usually I only remembered those dreams that occurred right before I woke up in the morning.  It had been years since the last time I'd had a nightmare that had awakened me like this one had. \n\nI went over to my door and checked the lock to make sure it was bolted. Then I went back to bed.  It took me a while to fall asleep, but when I did, I dreamed again. \n\nThat became my pattern.  I'd sleep for a little while, only to be awakened by a nightmare.  They were always pretty much the same:  a faceless predator in a locked room had tied me up.  After the first one, I was no longer shocked to see it wasn't Joe and I wouldn't scream.  Instead I'd watch in horror as he approached me.  I knew what he was about to do and I struggled to break the bindings that held me to the wooden apparatus.  I never could.  I would fight until I felt him close behind me, his breath hot on my skin, his body huge against mine.  I knew what he was planning and I begged him not to.  He never responded, never made a sound.  The only noise in the room was my frantic breathing, my cries for someone to help me.  And then... \n\nI wouldn't get any further.  At that point, my conscience would step in and pull me out of the dream by waking me up.  Over and over it happened, leaving me shaky and exhausted, until I gave up on the idea of sleep and spent the rest of the night on my couch watching infomercials and praying that the sun would rise and chase the demons from the room.  When it finally did, I got dressed and started my day, determined to put the evils of the night behind me. \n\nI was pretty successful, too.  I cleaned the apartment from top to bottom, something I usually found an excuse to put off, then I went shopping and met Beau for a quick lunch at the local Subway.  We took in a matinee - I don't remember what we saw, but I know I insisted on a comedy.  When it was over I headed home.  I took another shower and got dressed and went over to Kevin and Saul's for dinner.  They were their usual entertaining selves, and Saul was hilarious as he described his recent trip home from Africa. \n\nThere'd been a high school marching band they'd picked up on his connecting flight from Paris.  These kids were just a little too helpful as far as the flight attendants were concerned.  Especially when they all repeated every sentence the one poor woman said during the safety lecture and mimicked her arm movements as she went through her demonstration. \n\n\"It was in-fucking-credible,\" he laughed, \"fifty sets of arms pointing out the escape doors and showing how to put on the oxygen masks.  And then later, one of the kids liberated a drink cart and...\" \n\nI was still laughing about it as I fell asleep. \n\nBut I wasn't laughing when I woke up a half hour later.  I couldn't believe it was happening again.  The nightmare was back, even more vivid even than the one the night before.  Again, I ended up awake and waiting for the dawn. When it finally came, I decided that maybe I could finally sleep.  I went back to bed, but the minute I lost consciousness it happened again.  I moved to the couch, then my recliner.  Location wasn't the problem, though, and my dreams followed \nme wherever and whenever I closed my eyes.  Sleep, which had been such a comfort to me, was now suddenly my enemy. \n\nBy Monday, I was a basket case.  I forced myself to drag my ass to classes, but I might just as well have stayed home for all the attention I paid to them.  I was completely exhausted, and nothing the professors said seemed to make any sense. \n\nI didn't know what to do.  Well, actually I did, but I didn't want to do it.  Calling Alice seemed like a defeat.  But I didn't have another appointment with her until Tuesday afternoon and the thought of spending another night like the last three was even worse than the humiliation of admitting to her that maybe there was something wrong that I couldn't fix by myself. \n\nShe told me to come in at four.  I was there at 3:30 and hung around the clinic until it was time for my appointment.  When I finally got ushered into her, she took one look at me and stood. \n\n\"My God! Baby, what's happened to you?\" \n\nShe took my hand and led me over to the cracked leather couch and then sat down beside me.  \"Tell me about it.\" \n\nI did. I told her about Betsy's visit and then finding out about Elliot.  I described the dreams in detail, even though even thinking about them gave me the cold sweats.  Eventually I was done and I waited to hear what Alice would say about the whole thing. \n\n\"Tell me about what happened the night you were raped.\" \n\nI exploded.  This was such bullshit!  Jesus Christ, somebody turn off that Goddamned record! \n\nI jumped up and started to pace the room, screaming at the top of my lungs.  I wanted to break something... anything.  Smash it into smithereens, just the way I felt my life had been smashed. \n\nAlice just sat there.  I finally shut up, not because I was done, but because my throat was so dry I couldn't talk anymore.  She got up and walked over to her desk.  She grabbed a prescription pad and scribbled something on it and handed the slip to me. \n\n\"That should help you sleep.  There's only 7 pills and no refills, so try to make them last.  I won't renew the prescription.\" \n\nShe stopped talking then and seemed to forget I was in the room.  I stood there, feeling foolish.  What was she doing?  She looked up and saw me. \n\n\"You can go now if you want,\" she said, nodding towards the door. \n\n\"Uh, okay,\" I grabbed my jacket.  \"Should I stop at the desk and make another appointment.\" \n\n\"Do you want another appointment?\"  she said, raising an eyebrow. \n\n\"Don't you think I need one?\"  I was so confused.  Last week I would have been thrilled if she cut me loose.  Now it seemed like the worst thing that could happen. \n\nShe sighed and leaned back in her chair.  \"Baby, I think you need lots of appointments.  But you could sit here till Hell freezes over, and it wouldn't get either of us anywhere if you're not willing to open up to me.\" \n\nI was immediately apologetic.  \"Look, I'm sorry about yelling.  I promise I won't do it again.\" \n\nShe shook her head.  \"Oh fuck that!\" \n\nMy head shot up, I'd never heard Alice swear before. \n\n\"Go ahead and yell, scream, break the goddamn furniture.  I don't give a damn.  But make sure while you're doing it, that you're actually saying something!\" \n\nI stood there, unblinking.  \"I don't know what you mean.\" \n\n\"Bullshit,\" she said, eyeing me wearily.  \"Michael, you know exactly what I mean.  I can see it every time you lie to me... everytime you lie to yourself.\" \n\nI tightened my jaw. \"Look,\" I said, \"maybe you're right.  I don't need this shit.  I don't need you, I don't need anybody.\"  I turned to go but she stopped me before I made it to the door. \n\n\"Liar.\" \n\nIt was like she'd zapped me with a ray gun.  I froze.  And then, I started to cry.  I hadn't cried since the night Joe left, but now I was sobbing.  I felt more alone than I ever had in my entire life.  Even at the worst with Elliot, there had been hope.  Now, I didn't have any left. \n\nJoe was gone, Betsy was leaving in 5 days, my family was all the way in Pennsylvania and wouldn't know what to do anyway.  My friends?  Well, they had their own lives.  At 21, I wasn't sure I could say that about myself anymore.  I cried for a long time, and Alice made no move to stop me. \n\nWhen I finally did, all she said was, \"Are you ready to get started?\" \n\nI turned and looked at her.  I couldn't remember now why I'd thought of her as the grandmotherly type.  Now she looked like a drill sergeant.  I had two choices, I reasoned:  I could walk out the door, go get my script filled and go to sleep; or I could sit down and see if I could start to get my life back together.  I sat down. \n\n\"Good,\" Alice said, with a grim smile.  \"Now it's time to begin.\" \n\nThe next couple of weeks were the most difficult I'd ever know.  Any physical pain I'd ever had been nothing to the mental anguish I was subjecting myself to on a daily basis.  All my energy, all my focus was on that one hour a day I spent in Alice's office.  The rest of the time I was on autopilot.  Classes were over.  The celebrations had begun.  I wasn't part of that.  I worked, I ate, I even slept - thanks to Alice's little pills, which she did renew when it looked like I was going to need them for a while longer.  \n\nOther than that, I waited.  For 23 hours a day, I waited to go back to see her.  I was up to five times a week, but she assured me that was only temporary.  I wasn't sure if that made me happy or not. \n\nThe sessions didn't make me happy, that was for damn sure.  I started to bring my own box of Kleenex, because I was so guilty about going through so many of hers.  I screamed, I yelled, I raged at the night, and Alice - good to her word - didn't give a damn.  She sat there and listened as I ticked off every injustice I'd ever felt, every dirty secret I ever kept.  Through it all she never criticized or censored me.  She didn't need to.  I did enough of that myself. \n\nIt was weird, but once I'd agreed to talk, she never again asked me the question that had set me off in the first place.  She never mentioned the rape.  Instead, she asked about everything else, past and present.  \nI wasn't sure why this was so.  At first I was glad she'd stopped needling me about it, but after a while it started to bug me.  One night I couldn't stand it anymore and I asked her why she'd stopped. \n\n\"Can't you figure that out for yourself, baby?\"  She asked in that maddening psychologist way that drove me crazy at the same time I was learning to depend on it so much. \n\nI thought for a minute.  \"You were waiting for me to bring it up myself.\" \n\nShe nodded.  \"I knew you were a smart boy,\" she said, \"and now that youhave brought it up...\"  She raised her eyebrows and smiled.  \"Tell me about the night you were raped.\" \n\nMy heart started to pound, but I told her.  I started to cry, but I told her.  I kept on going, describing every little detail of the room, the equipment, the pain.  I told her about waiting for Joe, trying to hold on, trying to be strong.  When I was done, I was proud and I thought Alice would be too. \n\n\"And how were you feeling?\" \n\nMy face blanched. \"What?\" \n\n\"You told me a lot, Mike, but you never told me how it felt.\" \n\n\"Jesus Christ, how do you think it felt? It hurt, goddamn it!  The whips, the knives...\"  I made a helpless gesture. \n\n\"I'm sure it did, but what about the rest of it?\" \n\n\"There is no rest of it!\" \n\nShe shook her head.  \"Don't bullshit me again, baby. We've been through this before.  Remember?  Elliot fucked you, he stuck a dildo up your ass and then later his cock, and he fucked you.  So how did that make you feel?\" \n\n\"Go to hell!\" I snarled. \n\nShe got up and walked around her desk and faced me.  \"You were helpless. You couldn't do anything to stop him.  He fucked you.  How did that feel?  Tell me Mike.  Goddamn it, tell me!\" \n\n\"IT FELT GOOD!!\"  I screamed and the tears that had stopped started harder then ever.  I choked on them as I continued. \"Jesus Christ, it felt... good.  Are you satisfied?\" \n\n\"You had an orgasm,\" she said calmly. \n\n\"Yes! Goddamn it, yes,\" I could barely get the words out.  \"I tried so hard not to, I didn't want... I couldn't stop myself.  Oh God!  How could I have been so sick!\" \n\nI couldn't go on.  I don't know how Alice made it over to me so fast, but she did and I was in her arms in a second.  Her body was as comforting as I'd thought it would be.  But there wasn't enough comfort in the world for me at that moment.  I had done it, let slip my big secret, the thing I'd sworn I'd never tell anyone.  Now Alice knew I was as much a pervert as Elliot.  I didn't know how she could stand to touch me. \n\n\"It's okay, baby, it's all right.\"  Alice's words slowly sunk into my brain. \n\n\"No,\" I said in a hoarse voice.  \"I should've been stronger!  I should've  never allowed myself to get in that position in the first place.\" \n\nAlice pulled back and looked at me skeptically.  \"Right, you're so tough.  Listen to me, Mike:  what you felt is absolutely normal.\" \n\n\"Yeah, sure. Rape me - I love it.\" \n\n\"Knock that shit off right now,\" she snapped.  Her voice was so harsh I sat back and looked at her through swollen eyes.  \"You know better than that.  Didn't one of our volunteers come and talk to you at the hospital and tell you about involuntary sexual pleasure?\" \n\nI dimly recalled the conversation.  \"Yes, but...\" \n\n\"No, don't go there.  You're a man.  If your prostrate is massaged long enough, and in the right way, you are going to ejaculate.  It's a physiological reaction - that's all there is to it.  Elliot knew that; it was one of his issues of power.  He used that to degrade you, make you feel worthless.  He was playing a game, and this was his way of \nstacking the deck.  Don't be a schmuck and let him win.\" \n\nShe continued to talk and I argued back.  At some point it started to sink in that maybe she had a point.  I'm not saying I believed her yet, but somewhere in the back of my brain, a little voice was telling me I should maybe listen and start giving myself a break.  It was almost 7 by the time I said goodbye to Alice.  The staff had gone home except for the folks on the crisis phones.  Alice followed me out to the parking lot and over to her own car.  I thought of something as she unlocked her door and sat inside. \n\n\"You knew, didn't you?\"  I asked.  \"All this time, you knew that this was what was really bothering me.\" \n\nShe shrugged.  \"I guessed.  I wasn't sure, but it was a pretty good bet.   You're not the first male rape victim I've counseled.  This is actually pretty common.  It happens with females, too, but not as often.  You, however, were a textbook case.\" \n\nI was perplexed.  \"How so?\" \n\n\"Look at you, baby.  You're tall, strong, handsome, macho...\" ",
        "\"Gay,\" I added. \n\n\"That, too,\" she agreed, \"but I'm willing to bet you take a lot of care not to be perceived as effeminate because of it.  I think that's important to you.  And anyway, what does that have to do with anything?  Rape is power - it's not about sex.  Lots of rapists swing both ways.  It's the dominance that turns them on.  They like to make people feel \nhelpless.  Some of them, like Elliot, translate that to mentally helpless, as well as physically.  It's what gives them their charge, and to hell with the lives they destroy getting it.\" \n\nI nodded, and she reached out and squeezed my hand. \n\n\"You listen to me, Mike,\" she said quietly. \"You're stronger than you know, and you're going to make it through this.\" \n\nI thanked her, we said goodnight, and I walked over to my car.  I had alot to think about on the way home, a lot to face, but I felt better about myself than I had in a long time. \n\nOf course it wasn't easy.  I wasn't suddenly 'all better' - I don't want you to think that.  But every day was a step forward; the hole I'd dug for myself was getting shallower, and soon I'd be able to I'd be able to leave it behind all together. \n\nOne big relief was my sex drive was coming back.  I don't mean I was ready to out and score a quickie at the bar, but I was able to at least think about sex without wanting to puke my guts out.  And my dick was making a little comeback of its own.  Now, the only problem was trying to think of anybody, but Joe, as good fantasy material. \n\nMy folks came up for my graduation.  I'd been talking to Alice, trying to decide what I was going to say to them. She listened, but mainly declined to give me her opinion.  It wasn't until the day before they arrived that I managed to wheedle anything out of her. \n\n\"It's up to you, baby,\" she said finally.  \"I don't live your life, and I can't tell you how to live it.  But I do know for myself, that I've found the truth, no matter how difficult, is always better.\" \n\nI thought about that the whole night.  I'd been tapering off on the sleeping pills and had been doing pretty well, but this night I was sleepless.  It didn't feel too bad though, because for once I was up because I was facing my problems, not because I was trying to hide from them. \n\nMy parents arrived around 3 the next day.  Only my sister Sarah had made the trip with them.  My brothers still had class for another week.  Sarah was a senior in high school and was already finished.  I would be heading home for her big day in another two weeks. \n\nLucy had insisted that my folks stay with her at the house and Sarah was going to bunk down with me.  Lucy had met my parents once before on their annual trip to see Michigan play Penn State in football, and they'd hit it off as soon as Lucy realized my folks were going to root for the Big M and not the Nittany Lions. \n\nI took my folks over to Lucy's and left Sarah to get her own things unpacked.  After we'd dumped suitcases, Lucy gave us all a glass of wine and we sat around the kitchen table and talked.  I knew if I was going to say anything now was the time.  I took a big breath and began before my nerve left me. \n\nLucy figured out where I was heading and tried to leave, but I stopped her.  It wasn't as if this was anything new to her, and in my newfound resolve for honesty, I wanted her there.  Also the moral support would be great if my parents weren't able to handle it as well as I hoped. \n\nIt went okay... and it didn't.  My folks, as always, came through with their love and support, but they were also so horrified that I felt like shit about telling them after all.  I assured them that I was fine physically, and that mentally I was on my way to a full recovery.  I glossed over that last part; even mentioning therapy had brought tears \nto my Mom's eyes, and my Dad had to stand and pace the kitchen as he listened. \n\nEventually, we switched the conversation to something less\ncontroversial.  Just in time, too, because Sarah came in the room, bitching about how hungry she was, and wasn't I going to take them to someplace fabulous for dinner? \n\nThe rest of the night went by uneventfully, and if my Mom held my arm a little too often and my Dad couldn't stop staring, whenever I thought he wasn't looking, it couldn't be helped.  Sarah was her usual smart-assed self, and that was good.  It leant an air of normalcy to what could have been an otherwise-strained evening. \n\nAt one point, when Sarah left to go to the bathroom, the conversation stalled and I thought it would be best if I made my own escape.  I used the same excuse my little sister had, and headed for the john.  I had just finished up and was coming back when I noticed Sarah, still in the hallway, talking to a guy. \n\nHe was an okay-looking kid, maybe 19 or so, and he wasn't doing anything wrong as far as I could tell.  But it suddenly hit me that my little sister wasn't so little anymore.  And what made it worse was that somewhere between puberty and now, Sarah had grown up goddamned gorgeous. \n\nShe was as fair as I was dark, a taller clone of our mother.  She could've had a real 'Alice in Wonderland' thing going for her if she'd played it up.  Instead, she'd adopted a grunge rock look that, I was sorry to say, worked really well, too.  Now she was headed for college - not here, though - at Northwestern, for broadcasting. \n\nIt hadn't been all that long ago that I'd been getting ready for my first year away from home.  I remembered how much I'd looked forward to it.  Then I remembered why and walked up to the pair to break them up. \n\n\"...that's not that far away,\" the boy was saying.  \"Maybe we could get together sometime over a weekend.\" \n\n\"Hi!\" I said, and felt great satisfaction when the kid jumped. \n\n\"Oh, it's you,\" Sarah said with a distinct lack of enthusiasm.  \"Have I been too long?  Were you sent to rescue me from the perils of the white slavers who we all know lurk outside of restaurant restrooms?\" \n\nI ignored her.  \"So aren't you going to introduce me to your little friend?\" \n\n\"Er, Justin,\" he said, sticking out his hand. \n\n\"Asshole,\" Sarah hissed, glaring at me. \n\nI lazily ran my eyes over the kid.  \"Seems okay to me.\" \n\nOkay, I probably had the shot she gave me coming for that one.  But she was my baby sister, after all, and I was supposed to act like a pain in the ass.  It's in the rulebook somewhere. \n\nJustin wisely decided that it was time to split.  Sarah and I made it back to the table without her causing me too much damage, although she did manage to kick the back of my calf every third or fourth step.  She stopped talking to me, too, after that.  She didn't unbend until we'd gotten our folks safely tucked away in their bed at Lucy's and made our way back to my place. \n\n\"I'm sorry,\" I said, for the thousandth time that night. \n\nSarah threw her purse on the couch and walked over to the fridge.  She pulled out two cans of beer and tossed one to me.  Apparently, her highness had decided to bestow her generosity and forgive me; even if it was with my own beer. \n\n\"You're too young to drink that,\" I said as I popped the top on mine. \n\n\"Oh, bite me.\" She took a big swig and came over to the couch and sat beside me.  Her face got serious. \"So you were actually raped?\" \n\nI had just tipped my head back for another swallow. I choked and beer shot out of my mouth and nose. \n\n\"Fuck!\"  I jumped up and grabbed some paper towels.  \"How the hell do you know about that?\" \n\nShe shrugged.  \"You were telling Mom and Dad.  I just listened.\" \n\n\"What charming habits you've picked up,\" I said, rolling my eyes. \n\n\"Whatever works.  So you're okay now?\" \n\n\"Didn't you stick around for that part?  Yeah, I'm fine.\" \n\n\"Good, I'm glad.\"  Her face softened as she looked up at me.  \"Mike, I really am glad, you know.\" \n\nI smiled at her, touched by the unaccustomed concern.  \"Thanks, Sarah. That means a lot to me.\" \n\nShe backed off; it wasn't in her to be nice for very long.  \"I mean, what would I do if you went ape shit on me?  Then I'd only have Andy to talk to, and we all know what a shit-heel he is.  Rob is too young yet.  Though,\" she mused it over in her mind, \"he is kinda sweet.  Probably the best of us, anyway.\" \n\n\"Gee, thanks.\" \n\n\"Well, you know what I mean.  You're so straight,\" she said, and stuck her tongue out at me when I laughed pointedly.  \"Well, you know what I mean.  I'm pretty much of a bitch, and Andy has gone totally over to the dark side.\" \n\nI nodded.  I knew this was the truth.  Andy had always been wild, but since he'd hit high school it was even worse.  My parents were worried sick about him. \n\n\"So that leaves Robby, the great white hope,\" Sarah concluded. \n\nI took another swig.  \"You think he's going to be okay, huh?\" \n\n\"Yeah I do,\" she said with a nod.  \"He's a real sweetie, even when he's being a pain in the ass.  He idolizes you, too - did you know that?\" \n\n\"You're kidding?\" I was pleased, though I tried hard not to show it. \n\n\"He's always talking about his big brother Mike who hangs out with jocks and is gonna be a lawyer.  You know what he said the other day?  In front of the whole clan, including Aunt Livid?\" \n\nI shook my head. \n\n\"He said,\" she started to do a perfect imitation of our littlest brother's voice, \"When I grow up, I want to be just like Mike... except for the gay thing.\" \n\nI burst out laughing.  \"What a little shit.\" \n\n\"That's what Dad said.  But Mike, he was serious, so don't turn into a basket case or something.  He needs you. I... we all do.\" \n\nThen I thought of a question I'd wanted to ask her before, but had got distracted when she mentioned Rob. \n\n\"Sarah, do you think that Mom and Dad are okay about me telling them about the rape?\" \n\nShe snorted. \"No.  Of course they're not okay!  They love you and want you to be safe.\" \n\n\"You think I shouldn't have told them then.  I mean... I worried because I was afraid they might be disgusted or something.  Sure, they know I'm gay, but do they know exactly what that means?\" \n\nShe gave me this really disgusted look.  \"Jesus, for someone who'd supposed to be so smart, you really are clueless.  They would never equate your being gay to your being raped.  Even they aren't that stupid,\" she said, then corrected herself.  \"Actually, they aren't stupid at all.\" \n\nI raised an eyebrow.  Sarah really was growing up \u2014 faster than me, it seemed.  She hugged me quickly, then got up and confiscated another beer and one for me.  When she came back to the couch she changed the subject. \n\n\"So Joe was the one who rescued you?\" \n\nI nodded. \"He started it, but there were others who were involved.\" \n\n\"So romantic.\" \n\nI think I mentioned somewhere before that Sarah had a long-standing crush on Joe.  I'd always thought of it as some cute little girl thing, but Sarah wasn't a kid anymore.  It worried me that she still might feel that way. \n\nI snorted.  \"You can't possibly be still mooning over Joe?  Sorry Sarah, but you aren't his type.\" \n\nIt was only something to say - just bullshit to get her mad and off track.  So her response surprised the shit out of me. \n\n\"I figured that out a long time ago,\" she said, looking sideways at me, judging how far she could push it.  \"Last Spring, when I came out here for that week.\" \n\n\"You mean when you conned Mom and Dad into thinking you were going to go to school here, so you could get some time out of class?\" \n\nShe grinned.  \"Sure, that was the plan.  But Mike, I did look the place over and I saw a lot of other things too.  Like...\"  She swallowed; sometimes that tough-girl veneer of hers was pretty thin.  \"...how you looked at Joe when you thought he wasn't watching.\" \n\n\"What? Don't get crazy on me here.\" I couldn't look at her, even as I said it. \n\n\"Oh, it's okay,\" she reassured me, \"you never did it in public where someone else would see, just here, at home.  I guess you take me for granted so much, you didn't remember I was around.  But I was, and I'm not the little innocent you think I am.\" \n\n\"I'm beginning to realize that,\" I muttered. \n\n\"I noticed something else, too.  Something you might be very interested in.\" \n\n\"Yeah, right.\" \n\n\"You weren't the only one looking.\" \n\nMy head shot up and I stared at her.  \"Sarah, so help me God, if you say one thing about this to anybody...\" \n\nShe rolled her eyes.  \"Oh chill, please. I would never do that.  But I want a favor in return.\" \n\n\"Okay - you can have my old Van Halen CD's.\" \n\n\"Cool, but that's not what I was going to ask for,\" she said with a grin.   A cold chill ran down my spine when she continued.  \"What I want is the simply the truth.  Are you and Joe lovers?\" \n\n\"You know he was engaged this fall,\" I retorted. \n\n\"And I also know that doesn't mean shit!  And you haven't answered my question.\" \n\nI thought about it.  I was willing to tell her the truth.  Alice was right:  the truth was always best.  The only problem was, I didn't know what that was.  I looked at Sarah, smiling next to me and waiting expectantly. \n\nI took a deep breath. \"I'm working on it,\" I said quietly. \n\nSarah's smile turned into a grin and she jumped into my lap and gave me a big hug.  \"Oh that is so great! I would so love to have Joe for a brother-in-law.\" \n\nI pulled her back.  \"Hey, wait a minute! Let's slow down here.  There are a lot of problems...\" - that was an understatement, I thought to myself - \"...like Joe doesn't really know if he can have a relationship with a man, let alone be open about it.  And I can't have it any other way.\" \n\nShe nodded happily, unwilling to even think about that.  \"Don't worry so much, Mike.  He loves you - trust me, a woman knows these things.\" \n\nI tickled her ribs and she squirmed and giggled and tried to get out of my lap.  \"Woman, eh?\"  I laughed.  \"I don't see any women around here - just a skinny assed girl who has a big mouth and sees much too much for her own good.\" \n\n\"Oh, you are sooo gonna get it for that!\" \n\nShe attacked me back and we ended rolling on the floor like we used to when we were kids.  We didn't stop until we were out of breath.  We lay there together, exhausted, until Sarah finally yawned and said she needed sleep.  I needed some, too, because of the thoughts that had kept me up the night before.  I got up and then leaned back down to give her a hand. \n\n\"Mike promise me you mean that.\" \n\n\"Mean what, Sarah?\" \n\n\"That you'll work on getting things right with Joe.  That you won't put it off until it's too late and then, for the rest of your life, wonder what could have happened it you tried harder,\" she dropped her head as her cheeks flushed.  \"and yes, I know this is none of my business.\" \n\n\"When has that ever stopped you?\" \n\n\"Shut up, I'm serious,\" she punched me, but my teasing had done the trick and she wasn't embarrassed anymore.  \"I just want what's best for you.  And for Joe.  I wouldn't have said anything if I didn't know he was as crazy about you as you are about him.\"  She stood on her tiptoes and kissed me.  \"So promise, okay?\" \n\nI took her words seriously.  My grown up little sister deserved that. \"I promise.\" \n\nShe grinned at me delighted then turned and started to get ready for bed. I made up the couch for her while she brushed her teeth, then we said our goodnights and crawled into our beds.  I thought a lot about what she'd said and even more about what I had told her. \n\nI'd given her my word I was going to try and fight for Joe.  I was going to keep that promise too.  Somewhere through all the mess and all the problems of the last few months, I'd realized that everything else in my world might have changed, but not my love for Joe.  \n\nBetsy and Sarah believed he loved me back and I trusted their instincts.  I wanted to believe them because I'd finally realized I needed Joe and I was tired of waiting around for him to make the first move.  For once in my life, I was going to go after the thing I wanted most in the world.  \n\nNow all I had to do was try and figure out how the hell I was going to go about \nit. \n\nto be continued...\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n Authors note:  \nThis is a work of fiction.  Readers should remember this when they read my description of the therapy sessions that Mike undergoes.  They are figments of my imagination, devised solely to tell a story.  Crisis Intervention \ncounseling and psychotherapy are wonderful resources for people dealing with the trauma of being raped and if any of you feel that I have trivialized it, I'd like to assure you that this was never my intent and I apologize. \n\nJayne "
    ],
    "authorname": "jfinn",
    "tags": [
        "joe betsy",
        "basket case",
        "she'd stopped",
        "bed fall",
        "happened joe",
        "kevin voice",
        "listen mike",
        "back brain",
        "nodded knew",
        "jesus mike"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/the-human-condition-ch-8"
}