{
    "title": "A New Way of Seeing Things Ch. 24",
    "pages": [
        "(This story takes place in a fictional world with fictional people. Any similarities to people or things in the world we actually live in is coincidental.)\n\nChapter 24\n\nTim could sense his wife's distress as she stood before him, unwilling to meet his eyes. \"What's the matter? Is one of the girls in trouble?\"\n\n\"No, no, nothing like that,\" she muttered. Despite having thought about it all afternoon, Gwen could not find the appropriate words to start with. \"Natalie was over riding this morning, and we were up in the pool together after\u2014\"\n\n\"Lucky pool,\" Tim said with a smile. Gwen didn't acknowledge him, instead plowing on. \"And she asked if I wanted another trim, you know, down there, and I said yes.\"\n\n\"And?\" \n\nGwen risked a glance up to see Tim smiling at her expectantly. \"And one thing led to another, and we, uhh, touched ourselves in front of each other.\" She stared at the floor, studying the tile, fearing the worst from her husband.\n\n\"Were you okay with that?\"\n\nGwen looked up in shock, wanting to wipe that patient smile off his face. \"Was I okay with it?! Are YOU okay with it?! Tim, I was in bed with another woman!\" \n\n\"But did you enjoy it?\"\n\nTears welled in her eyes as he gathered her to him. \"That's not important. What I did was wrong!\" \n\n\"No, I don't think so,\" he said softly. \"If you tried it and didn't like it, don't do it any more. If you liked it...well, the world didn't end, you're still here, and I'm hungry. What's for dinner?\"\n\nGwen pushed her head back and looked up in amazement. \"That's it? You're hungry?\"\n\nHe looked down at her apologetically. \"Well, I am...\"\n\nHis wife's eyes widened as she snapped back into control-and-order mode. \"Oh my goodness, I was so worked up about...this...that I completely forgot to make anything! I'll start something right now!\" \n\nHis arms held her tightly, preventing her from pulling away. \"Nah, don't bother. Let's go out tonight.\" \n\n\"No, really, I can\u2014\"\n\n\"Let's go out tonight,\" he repeated firmly. \"Let me just go take a shower first.\" Gwen stood there in shock as he kissed her forehead and released her, then ambled down the hallway towards the bedroom. She stood there for some time, trying to come to grips with the fact that the most important person in her life had not taken offense to her transgression. The shower was running, her husband's naked body blurred behind the frosted glass of the shower enclosure, when she stepped into the bathroom. Silently she stripped, intent on thanking him for not throwing her out. \n\nGwen opened the door and caught a glimpse of Tim's hand flying away from his crotch while he turned his body to present his muscular backside to her. \n\nHe awkwardly angled himself away from the open door. \"Oh, uh, almost finished hon, be right out.\" \n\n\"Would it be all right if I joined you?\" \n\n\"Well, uh...\"\n\nGwen stepped behind him, reaching around to run her hand down his chest, across the fur of his lower belly...and on to a very erect penis. Wordlessly she began to stroke it as she pushed her breasts into his back. Tim didn't fight, just standing there, allowing her to play, hoping she wouldn't ask why he had been hard even before her arrival, wondering if she had already guessed. \n\nGwen continued to stroke until he could take no more. Tim turned to face her, but only got a quick kiss before she sank to her knees and slid his length between her lips. Her senses were assaulted with a variety of inputs\u2014the hard tile beneath her knees, the splash of hot water against her skin, the clean, slightly salty taste of his penis. Gwen worked him for a short time before he announced his impending orgasm. \n\n\"Mmm-hmm,\" she acknowledged from between clamped lips. \n\n\"But don't you want me to take care of you first?\" \n\n\"Gwen removed his cock long enough to say \"you first,\" then impaled herself on it again. Tim didn't argue, and filled her mouth with his salty spend a moment later. Gwen swallowed, stood and kissed him. \n\nTim shut off the water. \"Now your turn. Bedroom?\" \n\n\"Later. You have to eat first.\"\n\n\"But\u2014\"\n\n\"Later.\" \n\nTim dressed while his wife brushed her teeth, not wanting to advertise to others what she had just had in her mouth. She dressed after she was satisfied with the results, Tim requesting she wear something from her earlier shopping excursion. Gwen complied with a short-sleeve blouse that hinted at the bra and cleavage underneath, a skirt that showed more thigh than Tim could ever remember being displayed in public, and a pair of bikini panties. He whistled appreciatively. \"Man, people are gonna think I married out of my league.\" \n\nThe couple made their way a few miles down the road to their local pizza parlor, Gwen noticing the looks of surprise from the regulars at the change in attire from this familiar customer. She was thankful for the relative privacy of their high-backed booth. \n\nNothing was said of the day's events as they sat eating like they had so many times before, Tim with pizza and beer, Gwen with a salad and a glass of soda. It was dusk when they made their way back out to the truck, Gwen careful not to reveal what might be under her skirt as she climbed up and in. \n\nTim brought the engine to life and turned to her. \"I want you to do me a favor.\"\n\nGwen looked back at him, particularly anxious to do anything for him. \"What's that?\"\n\n\"Gimme your panties.\" \n\n\"The ones I'm wearing? Right now?\" \n\n\"The ones you're wearing. Right now.\" \n\n\"But we're out in public?\"\n\n\"We're in my truck. Please?\"\n\nShe rolled her eyes and intently scanned the parking lot before reaching under her skirt, hooking her thumbs into the lacy waistband and pushing them down while her cheeks burned hot. Picking them up from about her feet, she made sure to hand them to Tim below dashboard level. \n\n\"Thank you very much.\" Gwen's discomfort when he held them out at eye level to examine them turned to horror when he hung them on the rearview mirror. \n\n\"Tim! You can't leave them there! Somebody will see them!\"\n\n\"Call it a trophy. I like 'em there. Just for the ride home.\" He dropped the truck into gear and pulled out while Gwen nervously checked the lights of the oncoming traffic to determine if they were strong enough to make out what was hanging from the mirror. They had only gone a half mile when she felt a calloused hand on her bare thigh, pushing its way up under her skirt. \n\n\"Tim! Watch the road!\"\n\nHe laughed. \"I am watching the road. My hand knows the way on its own.\" \n\n\"What's gotten into you tonight?\" Gwen protested, but did nothing to stop the advance of his hand, instead spreading her legs a bit more in anxious welcome. Not for the first time that evening, she dared believe that Tim had been pleased rather than upset with her indiscretion .\n\nHis rough middle finger was not delicate in its approach, finding its way to the top of her furrow and sliding down until it reversed direction and pushed up into her opening, the palm pressing down on her clitoris. Satisfied, the hand withdrew and Tim tasted the tip of his finger. \"I'm guessing when you said later, you meant as soon as we get home?\"\n\n\"If we get home. Both hands on the wheel, please.\" \n\nThe turn up into the driveway was made a few moments later, Gwen making sure to remove her underwear from their place of honor before exiting the vehicle. \"Spoilsport,\" Tim called out good naturedly and led the way into the house. \n\nThe before-bed routine that had been followed for as long as either could remember was not ignored, and it was another half hour before the couple stood together in the bedroom. \n\n\"So, umm, I was wondering,\" Tim stammered, \"and you can tell me it's none of my business, but...\"\n\nGwen turned to look at him, surprised at how quickly the confident, almost cocky man in the truck had been replaced by this bashful one. \"But?\"\n\n\"But, uhh, I'd uhh, kinda like to know how you, you know, did it...this afternoon?\"\n\nThe Lady quickly arose indignantly, firm in her belief that such things should never be discussed and that yes, it was none of his business, but Gwen knew that she had to be truthful with him, and felt a strange desire to share some of the less scandalous details. \"Are you sure you want to know?\"\n\n\"Yeah, I do, if you're OK to talk about it.\"\n\nGwen sighed. \"Well, I laid down with my head at that end of the bed\u2014\"she nodded to where the pillows were again neatly stacked on top of the duvet, \"\u2014and she laid down with her head at the other end\u2014\" she gestured to where a spare blanket lay folded, \"\u2014and we , umm, you know...\" The whole truth and nothing but the truth, the Slut firmly reminded her. With another sigh, Gwen moved to the closet. \n\nTim watched curiously while his wife appeared to rummage around the closet until she found what she was looking for. Gwen turned and dropped what she had retrieved on the bed. \n\nA neck massager, an oddly-shaped plastic cylinder, and a massive lifelike penis were what he saw, and Tim knew right away what they were meant for. \n\n\"We used these,\" Gwen volunteered.\n\nTim looked up, his surprise and confusion evident. \"At the same time?\" \n\n\"No, no, I used that\u2014\" she pointed to the Magic Wand, \"and she used the other two.\" Gwen felt a pang of remorse\u2014the woman she had shared this wonderfully perverted experience with had been reduced to 'she'.\n\n\"How long have you had these? Where'd you get 'em?\" Tim's look and tone made it obvious he was surprised and curious, but not upset. \n\n\"Not long. Sh\u2014Natalie, Natalie gave them to me a little while back.\"\n\n\"Huh. Do you use them much?\"\n\n\"Once in a while...but I'd much rather be with you,\" she hurriedly added as she glanced sideways at the dildo. \"You're alright if I have these, right? They'll just be for when you're busy, or not home\u2014\"\n\n\"I'm fine with them. That log there can't fix barn doors, so I'm sure you'll still have some use for me. And you can use them any time you want. How about right now? I'd like to see how you used that one.\" Tim looked down at the Wand. \"Never knew they had electric ones.\" \n\n\"It makes that one more powerful, I guess.\" \n\n\"So, let's see.\"\n\n\"Right now?\"\n\n\"Why not?\"\n\nThe excitement that had been building since Tim's shower overrode the shame and embarrassment of her revelations. Ooh, let's put on a show! The Slut squealed. \"Well, alright...\"\n\nTim was naked before Gwen, his erection making his interest in the unfolding scene obvious as his wife removed her skirt and plugged in the vibrator. \n\n\"So, your head was up on the pillows?\" \n\n\"On some of them. Natalie had the rest.\"\n\n\"Show me where you were.\" Gwen climbed onto the bed and lay back with her legs closed while Tim began to lightly fist his length. \"Then what did you do?\"\n\n\"I, uh, started touching myself.\" The nude woman decided that it was not important for him to know that she had watched Natalie for inspiration first.\n\n\"Show me.\" \n\nGwen opened herself to her husband and began to stroke, if not in the exact same manner as earlier that afternoon, at least close enough, while her hand found her breast. Quick glances to the end of the bed made it clear that Tim was enjoying the show very much, his eyes glued on her moving fingers. \n\nThe couple continued this way for some time, both attempting to control the arrival of their impending orgasms, until Gwen reached for the vibrator and thumbed it on. Tim watched in fascination as she firmly pressed the bulbous head to the top of her slit, making the wand rumble defiantly. Gwen was close, she knew it; one more thing was needed to make the performance complete. \n\nTim was momentarily surprised to see her eyes open and her head come off the pillow. Old fears that he had been caught peeping briefly surged through him before Gwen found the dildo, grasped it halfway down the shaft, and dragged it to her opening. \n\n\"I thought Natalie used that one?\"\n\n\"She did. I used it when she was done with it.\" Close enough to the truth, Gwen decided. No need for him to know how it had gotten inside of her. She clumsily inserted the impossibly large reproduction, pushing it against her opening until the head slid past her lips. Only after her body had a firm grip on the massive tool did she move her hand down the base and slowly slide the rest of it in.\n\n\"Holy Cow, Gwen, it looks like that thing is splitting you in two!\"\n\n\"It feels good...\" the vibrator continued to grumble while she moved the length in and out in short strokes, unwilling to let the fattest part escape from between her lips. Her orgasm broke quickly, and without her sister-in-law's body between her thighs, Gwen instinctively pulled her legs together and curled into a fetal position, the dildo still firmly lodged in her and the Wand buzzing against her clitoris. \n\nShe came to her senses unwillingly, aware that Tim had joined her on the bed. He kneeled at her feet, his body still erect enough so that he might continue to reach every part of his cock and balls. Gwen switched off the vibrator and rolled back to remove the fake penis inside her and let Tim replace it with his very real one. \n\nHe was quick to mount her even as she dropped the black cudgel next to the Wand. \"Wow,\" he muttered. \"I would have thought you would have been more, uh, stretched out after that thing.\" \n\n\"It's not that much bigger than yours,\" she offered generously, \"and besides, yours is better anyways, because it's attached to a handsome man.\" \n\nHis did not take her gently, Gwen's body recoiling with each thrust, until with one last grunt and a push aided by feet anchored in the bedding, Tim deposited his seed deep inside her. Sleep came soon after her toys had been again hidden in the closet. \n\nTim was awake first the next morning, holding his still-sleeping wife tight while his cock twitched impatiently. She did arise soon after, the feel of her husband's strong arms overshadowing the thing nestled between her cheeks. She happily gave him what he wanted with a slow, comfortable lovemaking session before heading to the kitchen to make breakfast. Tim joined her shortly after, pleased to see her bare bottom peeking out from beneath the t-shirt she wore. \n\n\"Andrew's gonna be here in a couple of hours,\" Tim said as he sat at the table drinking coffee. \"I'm going to reorganize the parts storage in the workshop.\"\n\n\"He volunteered to come in on a Saturday?\" The Lady strongly suggested Gwen get dressed now, in case he arrived early, but she was ignored. \n\n\"He drew the short straw. He didn't seem to mind too much, though.\" \n\nTim was in the workshop a half-hour before Andrew's well-worn pickup rattled to a stop in its customary parking spot. Despite the Lady's strident urgings to get dressed or at least hide in the bedroom, Gwen remained in just a t-shirt as she watched from the kitchen window while the young man left his truck and entered the shop. \n\nA strange excitement swept over her. Almost without thinking, the shirt was pulled over her head, and she spent the next ten minutes nude in the kitchen, repeating the steps she had taken an hour before to clean up after breakfast. The unlocked door behind her kept Gwen in a state of nearly panicked excitement, ready to dash for the hallway should the sounds of boots on the deck be heard. \n\nA ride might be in order, she decided when the danger of her exposure could no longer be ignored. Moments later she was dressed in a pair of jeans put away three winters ago as too form-fitting for a proper lady to wear. Polished black knee-high riding boots accentuated the lower half of her body, while a loose grey t-shirt only slightly softened the lines of her torso. The omission of a bra allowed her breasts to bobble freely under that same loose fabric. \n\nThe Lady was torn between urging Gwen across the yard towards the barn before the men in the shop took notice of her and telling her to move slowly so her bouncing breasts did not attract attention. The Slut guessed at how far up the trail she would get before the shirt was removed altogether. \n\nDart was saddled in a leisurely manner, Gwen reveling in the personal scandal her outfit was creating. She already had a foot in the stirrup when Gwen remembered that she had not told Tim where she was going. With a devious smile, she made her way down to the shop. \n\nThe bay doors were open to help the overhead fans create some sort of circulation in the early morning heat. Both men were at the far back of the cavernous space, pulling boxes off a utility shelf, their shirts already stained dark with sweat. \n\n\"Tim?\" Her husband looked up, a smile quickly appearing. \"I'm taking Dart up the hill for a ride. I'll be back in a couple of hours, I guess. Be sure to stay hydrated\u2014there are drinks in the fridge upstairs in the office, and the fridge in the kitchen is full as well.\" \n\n\"Thanks Mrs. Nelson, we\u2014\" Andrew looked up and hesitated, unsure if the figure contrasted against the bright sunlight behind her was really the woman who handed him his paycheck every two weeks. \"We, uhh, already got some from upstairs.\" The young apprentice quickly shifted his gaze back to the box in front of him and began to rearrange with purpose.\n\n\"Good! See you in a bit. Be sure to take a break.\" \n\nGwen brazenly removed her shirt as soon as the first line of trees screened horse and rider from the buildings below. Dart could sense his human was distracted, allowing him more freedom to set his own direction and pace than was normal, even being allowing him to come to a complete stop in a particularly shady area. He did notice the female sat astride him in a different way this morning, her hips further up the saddle, hard against the horn. He took the twitch of her hips against this protrusion as his cue to move on.\n\nGwen was intoxicated from the effects of her daring displays that morning, the memories of what had happened morphing into what could have happened, or might still happen. The Lady was there as well, pointedly reminding her that if she had to think about these things at all, then it must be kept in mind that they were to be sick, lurid fantasies only. \n\nShe returned to the here and now to realize she and Dart had somehow made their way back down the hill and were approaching the end of the last line of trees. Hurriedly she pulled the horse to a halt and dismounted to put her shirt back on, aghast that she had almost ridden into the yard topless! \n\nGrooming the horse and returning him to his paddock quickly stained her own shirt dark with streaks of sweat and water. She knew she should return to the house and change into something drier and less revealing, perhaps even add a bra, but the Slut convinced her that was too much effort. She returned to the shop, telling herself she would just peek around the corner of the open doorway to check on their progress.\n\nGwen could hear them working as she approached, but their position deep in the parts area made it impossible for her to stock to her plan. She walked in until she could finally see them.\n\n\"I'm back. Anybody need anything?\"\n\nTim looked up, again smiling and looking her up and down before answering. \"Naw, almost done. Good ride? You look hot?\"\n\n\"Yes, it was, and yes, I did get a little warm up there. You two look in worse shape than I do, though. How about a swim and some lunch?\" Her gaze moved to Andrew, who averted his. \n\n\"How about it, Andrew?\" Tim asked from his spot on the ladder.\n\n\"No, thanks, I, uhh, didn't bring anything to swim in.\" He blushed furiously and refused to make eye contact with either of the Nelsons. \n\n\"Well, what did you wear when you went swimming before?\" Gwen asked with feigned innocence. \n\n\"I, uhh, had some shorts in the truck,\" the young apprentice lied evasively. \"Don't have 'em today.\" \n\n\"I can go get you a pair of Tim's, if you like.\" \n\n\"No, no, I really should get going,\" he stammered. \"Thank you though.\"\n\n\"Any time. Can I feed you before you go?\"",
        "\"No, thank you, that's very nice, but I really should head home after this.\"\n\n\"Suit yourself. Feel free to change your mind. Tim, I'm going to go get changed. I'll meet you up at the pool. Finish up and stop working this poor boy to death!\"\n\n\"He's getting paid,\" Tim laughed. \"But I suppose a swim would be good. Be up in a few minutes.\" \n\nGwen turned to leave. \"Good bye, Mrs. Nelson.\" She looked back over her shoulder to see Andrew smiling weakly, the heat and his embarrassment turning his face scarlet red. \n\n\"Good bye, Andrew. If I don't see you in a bit, I'll see you Monday.\" \n\nGwen made her way back to the house, again stripping off her shirt as she closed the kitchen door behind her. Her senses returned as she savored the cool of the air-conditioning, the chill only making her nipples stand even more erect. Her modest one-piece suit and robe were selected, just in case Andrew did change his mind. His truck was still there as she carried a pitcher of sweet tea and three glasses up the hillock to the pool. Gwen put everything down and jumped over the side into the refreshing water, aware how restrictive this suit now felt after a summer of skinnydipping. \n\nThe sound of Andrew's truck starting, then crunching across the gravel told her had had declined her offer. Tim's head bobbed up the stairs a few moments later. \n\n\"No Andrew?\" Gwen asked as she climbed on to the pool deck to pour her husband a glass of iced tea. \n\n\"Nope, no Andrew. I think you embarrassed the hell out of him when you asked about his choice of swimwear. That, and I think the outfit you wore riding had him thinking impure thoughts. Hell, it had me thinking impure thoughts. I mean, those jeans, the boots...and if I didn't know better, I'd have sworn you weren't wearing a bra!\" \n\nIt was now Gwen's turned to blush furiously. \"Do you think it was too slutty for him to see? I mean, he's young, and he works for us...\"\n\nNaw,\" Tim laughed. \"Let him look. If he gets over being so goddamned shy, maybe he'll find someone who can wear that half as well as you.\" \n\nShe finished pouring and handed him the glass. \"Well, since he's gone...\" Gwen began to wriggle out of the wet suit, pushing it down over her hips until it lay about her ankles. Tim took a swig, set down the drink, and stripped as well.\n\nThe couple entered the water together, lazy paddling quickly discarded for a passionate embrace and kiss. She listened for the sound of a vehicle turning into their yard even while her hands instinctively found his manhood and began to tease it into full bloom. Strong hands eventually found her thighs and wrapped them around his hips, the length between his legs nestled between her lips. \n\n\"Shall we go inside?\" she murmured as she broke the kiss. \n\n\"Nope. Nice day out here.\" Tim began to walk towards the steps, Gwen wrapped about his waist. She dropped her legs to stand and gave him a confused look as he reached the first tread. \n\nTim smiled confidently. \"Go bend over the table.\"\n\n\"Out here?\"\n\n\"Why not? Beautiful day, the umbrella gives us some shade...\"\n\n\"But outside? Where people might see us?\" \n\n\"Like who?\"\n\nGwen searched for an answer, trying to explain that anyone could drive up at any moment.\n\n\"Go bend over the table,\" Tim repeated again, smile gone, more authority in his voice this time. She did as she was told, hurrying across the hot concrete warming the soles of her feet. Tim followed after her, an upturned ass presented to him as Gwen propped her elbows on the Plexiglass surface of the table and stared ahead. His foot was inserted between her ankles, firmly pushing to the right, then the left, until he had her spread to his satisfaction. Gwen could feel the head of his penis search briefly for her opening, and then, with a gentle push, he was in her. \n\nTim's hand made its way around her hip and down to the point of the vee of pubic hair Natalie had left. His middle finger found its way to her clitoris and began to circle while his hips began thrusting. The way Tim had used her body first thing in the morning, her attire and her ride had taken their toll, and she began to climax after a few moments of her husband's attention. Tim's hand retreated as Gwen's legs momentarily lost their will to stand in the explosion of pleasure, and only his hold on her hips and his cock in her pussy kept her from falling. \n\nHe waited patiently until her strength and senses had returned, then began his assault again, the force of hips meeting ass making her breasts jiggle and wobble beneath her. Her husband's hands continued to grip her hips tighter and tighter and pull her to him, trying to get every last bit of his cock inside of her. \n\nGwen expected him to fill her any second now, and was surprised when his length was pulled from her before sliding up and forward between the globes of her bum. The feel of his manhood as it slid across her rosebud and up to the small of her back shocked her as the tingle from the bundle of nerves about her anus reached her brain. She struggled to help him find his way back into her channel, sure that Tim had drawn back a bit too far in his thrusting and would be looking for the correct path to allow him his release, but strong hands held her firmly in place as she felt the first warm spurt land just below her shoulder blades. Tim's hips continued to jerk in short thrusts as he released himself on her. After his ejaculation had been reduced to dribbles, he stepped back and inserted himself one more time, then stepped away to allow her to stand. \n\nGwen looked about nervously, fearful they might have been observed and heard a splash behind her as Tim dropped back into the pool. He beckoned to her, and she joined him. Tim smiled and gathered her in his arms again.\n\n\"Good idea, that swim.\""
    ],
    "authorname": "BusyBadger",
    "tags": [
        "masturbation",
        "toys",
        "outdoor",
        "blowjob",
        "doggystyle"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-ch-24-1"
}