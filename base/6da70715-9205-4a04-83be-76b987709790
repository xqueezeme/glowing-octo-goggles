{
    "title": "Georgia's: Boiled Peanuts",
    "pages": [
        "Brad came in to wrap up his aunt's estate, but he never thought a summer romance with younger Georgia would turn into anything. But the country fried town and spitfire local girl get under his skin.\n\nThis is a Summer Lovin' contest story. Please vote for my story!\n\nGeorgia's Boiled Peanuts\n\nBOILED PEANUTS\n\nSWEET PEACHES\n\nPECANS\n\nLOCAL HONEY\n\nVINE RIPE MATERS\n\nP-NUTS\n\nFRESH VEGETABLES\n\nEvery day I would pass those hand-lettered bright yellow signs evenly marching down the side of the road and every day I turned down the dusty road to get to Aunt Birdie's house before I got to the actual goods.\n\nThe door creaked on the rusty unused hinges and the dust danced across the sunbeams coming in through the windows. I had been there a week already going through Aunt Birdie's estate and only had a few boxes stacked by the door. It was much harder to do than I had envisioned. She was eighty-six when she died a few months back. Being and only child I was her only surviving relative. I had stupidly put this off until it was the middle of a Georgia summer with sultry summer humidity and brutal heat.\n\nMy first marriage was short and not so sweet. I was fifty-four and had an excellent job that I could work from anywhere. That allowed for traveling, so I could work and do what needed to be done here with no one to account to.\n\nAunt Birdie was a collector of books, some of which were valuable and they all had to be sorted and made available for sale appropriately. Being what the locals call a stone's throw to the Georgia Florida line in the middle of nowhere makes it tough for shipping. Forty-five minutes to a parcel service store meant I will get as many boxes prepared that I could take at one time.\n\nI spent a few hours filling two boxes, and another for thrift. With that accomplishment, I deemed myself done for the day. I locked up and bumped back down the sandy rutted road. But instead of turning left to go back to my motel, I turned right, compelled to find out what boiled peanuts were all about.\n\nI pulled up in front of a weathered wood open front shed with a rusty roof. Angled shelves across the front held baskets of bright red tomatoes, blush peaches, jars that sparkled with different colors of jams and jellies. Another shelf held bags of pecans and peanuts, and jars of warm golden honey. It was all very bright and artistically displayed against the grayed wood.\n\nA radio was blaring a crackling off-channel Willie Nelson tune. Delicate feet long stained with Georgia red clay feet were propped on the lower shelf. My eyes followed the longest legs I have ever seen and on up to fingers laced over denim cut off shorts which called attention to her bare midriff. From there the green camo shirt that was tied under her well-endowed bust, which was very much at odds with her long red braids and three nose freckles. But her face was farm girl milk maid knockout and my dick was very much in approval of all.\n\n\"You just passin' though?\" Bright blue eyes looked me over as she stood up behind the shelves.\n\n\"Yes, Well no.\" Damn, I thought. \"I'm here for a short time to sell my aunt's house.\"\n\n\"You must be referring to our Birdie,\" she said, her eyes hesitating on the obvious bulge making itself known through Florida cool cotton shorts.\n\n\"Yes. You knew her then?\"\n\n\"She-it, everyone knows everyone here doncha know,\" she said in her lilting southern twang.\n\n\"I noticed, yes,\" I said laughing. \"What I stopped for was to ask about boiled peanuts?\"\n\nI stepped to the side when a car pulled in and bought some fresh peaches and okra, along with a couple of the jars of pickles.\n\n\"You mean you never had boiled peanuts before?\" she asked, incredulously, the southern twang raising a couple of squeaky octaves. \"We grow up on them in the south!\" Steam billowed and rolled when she opened the lid of a huge stockpot. The smell was earthy when I looked into a foam cup of what was essentially, wet peanuts. \"If you like them spicy, I'll give you some of them to try.\"\n\nThey looked mushy but weren't at all. They were fairly firm and salty. I ate a few more. They were growing on me A few more. She took the cup and handed me another. This was spicy with the earthy scent and, \"I love them!\" I said and she was obviously delighted.\n\n\"You either love 'em or you hate 'em. I used to drop a bag off for Birdie every week,\" she said, looking sad. \"I\"m going to miss her. I sold her jam here.\" She pointed to the jars. \"Those are hers. She gave them to me about a month ago.\"\n\n\"She was a character,\" I said, remembering. \"I used to spend summer vacations here. It was so hot it would burn my city feet, but that spring on her property. Always moving and cool.\" I smiled, thinking back. \"I spent time there every day, splashing around. Water was clear enough to drink. Imagine it still is.\"\n\nShe was smiling, her eyes wet. \"She-it, I guess we have been yakkin' enough to exchange names?\" I nodded, hiding my smile at her cursing. \"I'm Georgia,\" she said, sticking out her hand.\n\nI laughed and said, \"That's fitting since we are a stone's throw from Georgia!\"\n\n\"My mama named me that to remember when I was conceived.\"\n\nI started to laugh, then realized she was not joking, so I just nodded. \"I\"m Brad. Bradley. I mean Brad.\" This red headed tomboy had me off balance.\n\n\"Nice to meetcha Brad Bradley Brad. 'Round here we may have a Billy Bob but not usually three names.\" She grinned.\n\n\"Just pick whatever one you like,\" I said, laughing. She was easy to talk to and comfortable to be around.\n\n\"Do you have much to do at Birdie's?\" she asked. I told her about the estate project in between a steady stream of customers. \"If you ever need help, let me know. I\"m usually sold out mid-afternoon and done until early produce pickings the next morning.\"\n\nSure enough, I looked at the shelves again and there was not much left of her wares. \"Feel free to come anytime. I'm at the house every day.\" She smiled and nodded. \"Oh... just as long as you bring those boiled peanuts,\" I said, laughing.\n\nI stopped at the diner and picked up a burger and fries to-go and went back to the motel. It was lost in a time warp but meticulously clean. An older couple owned it all their married lives, took great pride, and it showed.\n\nI turned on the television which was a big old tube job on rabbit ears that got snowy images on every channel. All three. I just listened normally, but tonight I could not get the image and sweet sing-song voice of Georgia out of my mind. I was way too old for her, but a man can dream. And fantasize.\n\nI thought of her full rosy red lips and the peek of cleavage the green camo blouse allowed. Before I knew it I had my dick in hand and cumming hard to provocative images of a naked Georgia.\n\nThe next morning I had my usual grits, eggs, and coffee at the diner. Since I had been here a week, I was a regular and she was calling my order into the kitchen when I walked in, and a steaming mug of strong coffee was on the table by the time I sat down. Bessie was not one much for talking, and I was not one much for anything in the morning. Besides coffee. Which she kept filled.\n\nI woke up with Georgia on my mind and thinking Ray Charles although he was before my time I didn't if he was talking about the woman or the state. As I drove in and out of the invisible Georgia Florida border to get to Aunt Birdies, I considered stopping by her stand first but thought better of it.\n\nI boxed up more books to ship, more for the thrift store, and the last of Birdie's jams. I thought to just swing by the stand on my way back to the motel, but it was boarded up and she was gone for the day. I was surprised at the disappointment I felt. Brad old boy you've been isolated in this burg too long.\n\nI made a few calls back home to friends and family and felt more myself. I told the family that I was working on Birdie's house, but it was going to take longer than I thought. I wasn't sure why they cared because they weren't in the inheritance, but people can dream I guess. They didn't pay her no mind until after she died as Georgia so correctly had pointed out.\n\nThe next morning I woke up to pouring rain. I didn't want to run through that deluge for breakfast and figured I'd knock off early and get lunch.\n\nI bumped and slid down the mud slick road that was as dicey as driving on ice. I pulled as close to the house as I could and ran through the rain and up the steps to get out of the pelting rain.\n\n\"You forgot your umber-ella.\" I started and looked up to see Georgia sitting on the porch swing.\n\n\"I don't even think it would help with this downpour,\" I said, shaking my jacket off and hanging it on the back of an old rocking chair. \"Not too good for business either I'd guess.\"\n\n\"She-it, those pansies want me to deliver it to their cars. Dayum if I'm gonna do that..\"\n\nI couldn't hold it in any longer and laughed at her cursing and colorful language. I sat on the swing with her and enjoyed the rain that was stinging the metal roof.\n\n\"Did you ever sleep under a metal roof in a rain like this?\"\n\n\"No, can't say I have, but I bet it's relaxing to listen to.\"\n\n\"Yup.\" She crossed her long legs at the knee and I kept the swing going. \"Birdie has a bedroom in the attic and I loved to lay there and listen to the rain.\"\n\n\"Oh, you used to stay with her?\"\n\n\"Sometimes.\" Her sharp reply didn't invite more.\n\nShe pointed to the big picnic basket and bag near the door that I hadn't noticed.\"I brought you food. And thank you for the jam. I figured that was the last of it.\" I nodded.\n\n\"Groceries?\"\n\n\"Yup.\" She pointed out to the driveway which was a sea of water where I had just driven through. \"I knew that you wouldn't realize that it flooded out here and would come on out. You'll be here awhile Brad Bradley Brad. This is a real gully washer.\"\n\n\"Yeah, I can see that.\" I sighed. \"but thanks to you I'll eat.\"\n\nThankfully I hadn't had the electricity turned off and as it became darker outside, the house did too. I took the groceries in and we stowed the refrigerated stuff in the old Frigidaire that could have been used in an ad for their longevity.\n\nShe volunteered to help with the books and we did for a while, but even with lamps we gathered from around the house, it was still to dark to see.\n\n\"Hey, do you want to go listen to the rain?\" I nodded and she nearly skipped up the two flights of steps.\n\nThe attic was amazingly large and big windows at each end gave a nice diffused light. In the middle was a big old brass bed piled with quilts. The headboard gave off a soft warm glow. She ran over to one of the old trunks, knelt in front of it, and opened it. I ran my finger over the warm wood on the dresser and it was amazingly dust-free. The top was cluttered with cut glass bottles and tins of women's toiletries from back in the day. I picked one up to smell it. Distinctly lily of the valley.\n\n\"I love it here,\" she murmured, her lap full of lace and satin. She held up a gown of satin, ribbons at the shoulders. I assume it was nightwear from back then.\n\n\"It's beautiful.\"\n\nShe stood up and picked up a lace dress. Holding the bodice to her front, she pulled the skirt out and twirled around.\n\n\"Try it on!\"\n\n\"It's lace and there's no slip.\"\n\n\"Oh, okay.\" I thought how shockingly obscene it would be back in those days to wear it without the slip. Then momentarily wondered where that came from.\n\n\"Don't look!\" I heard a rustling of clothing behind me. Would she actually....? \"Turn around!\"\n\nBracing myself, I did. She found a satin gown that I was sure was silk. She was busty so the bodice stretched tightly across her chest. It dropped to cling seductively to her hips. Never would I have imagined a dress that great-grandmother would wear would be so fucking sexy, but Georgia nailed it. When she glanced down I realized my cock was standing up in my pants with his vote.\n\n\"You look very sexy in that, Georgia,\" I said truthfully.\n\nShe looked incredulous. \"Really?\" I nodded and she ran over to a dusty old pedestal mirror and looked at herself. She ran her hands over the satin of her tits and nipples poked through the shiny fabric. You could see the outline of her bra and she tried to tuck the straps in the dress but the design didn't allow for a bra. Or at least that kind. I had no idea what their underpinnings were back then.\n\nShe smoothed her hands down her sides and over her hips. \"They were very elegant then weren't they.\"\n\n\"Yes, they were. It's almost sad we have lost that through the years.\"\n\nShe quickly cupped her tits before nodding. \"Yes.\"\n\nI went to look out the window while she removed the dress. She came up behind me and we watched the rain pelt the window. It hammered on the roof, loud but soothingly constant.\n\n\"Here.\"\n\nI turned and saw she had moved the quilts and left just one along with two pillows. I took my shoes off and stretched out on the bed and she did the same. Her little finger touched mine. I didn't move, just closed my eyes and listened and felt. Finally, her little finger curled around mine and that was the way we stayed.\n\nI must have dozed because I woke up to her gone, the rain still beating on the roof, and the scent of bacon wafting up the stairs. I checked to make sure my car hadn't floated away before going downstairs.\n\n\"We're having breakfast for dinner.\"\n\n\"I like breakfast for dinner. I often do dinner for breakfast. Like pizza.\"\n\nShe looked at me, grinned then popped the top of a beer and passed it to me. I'm not sure how much Aunt Birdie would have approved of us sitting at her table eating bacon and eggs for dinner with a beer. But it worked for us.\n\n\"It's still pouring and I can't take you home. Can you stay? I don't want you walking through this mess.\"\n\n\"I can.\"\n\n\"Do you need to call anyone to let them know you won't be home?\"\n\n\"No.\"\n\n\"Okay, then it's set. Neither of us will go out in this miserable weather.\"\n\nShe cleaned up and didn't want help. I futzed around and found a radio that got in a local station relatively well. Country of course, but she started bouncing around the music so I was happy with it. She stood at the sink with her hips swaying to the music. Another song came on and she started singing along and really gyrating to the music.\n\nShe twirled and saw me watching and stopped. She turned back to the dishes and I felt like a lecher for getting caught. I went over, pulled up a lamp, and went through a small table of books.\n\nA while later she put her hand on my shoulder. \"Let's go to bed.\"\n\nI thought, oh I wish, then realized she meant it. She turned and slowly walked up the staircase. I followed and we were back up in the attic. She went over in the dark and turned a small bedroom light on that glowed pink through the faded rose shade.\n\nI sat on the edge of the bed and removed my socks, shoes, and shirt. I stood up and dropped my pants and slid between the sheets. We were as before but this time she put her hand on mine, and I wove my fingers through hers and we went to sleep with the rain still knocking on the tin roof.\n\nSometime during the night, we changed positions and I woke up with her sleeping soundly curled at my side. Her arm was across my chest, her leg over my morning wood. My arm was around her and rested on her side. I realized then she was naked.\n\nNo way was I able to move without waking her. No way did I want to wake her. It had been too long since I had a woman in my arms. And especially a young woman. I must have dozed off again and this time she had changed positions. She was stretched out and her leg was between mine and the warmth of her pussy on my thigh was steamy. She had rolled towards me and her left breast rested on my chest, her right smashed against my side. Her head was on my shoulder and her arm was wrapped across my waist.\n\nShe stirred and I woke but pretended to be asleep to give her time to move away from me without being embarrassed that she was sprawled naked on an old guy.\n\nI felt her breath on my jaw and knew she was looking at me. I knew any moment she would roll away and this would turn into a jerk-off fantasy for the rest of my life. I waited.\n\n\"Mmmm,\" she moaned, loud enough to wake me up. When I didn't move, she repeated and I could no longer play dead.\n\n\"Oh, good morning,\" I said, immediately thinking, damn Brad, is that the best you can do. \"Sounds like the rain let up.\"\n\nShe stretched out against me and settled back in. \"It sounds like it. I think the sun is out.\" She was as casual as if we woke up like this every morning. She moved her knee and her thigh slid over my morning wood and it throbbed. \"Mmmm.\" She pushed her breasts against me and got even closer. \"I'm a little cool.\"\n\nI reached down and pulled the quilt over her shoulders and she sighed. \"You still won't be able to drive out of here until it dries out, and I'm not going to slog through the mud to go pick and open the stand. It's a good day for just lollygaggin' around the house.\" She said, still making no move to get up. She was all warm and cuddly against me and I could have stayed there all day but I had to get up and use the bathroom.\n\n\"I have to get up,\" I said untangling myself from her. I felt her eyes on me as I went down the stairs to the bathroom.\n\nWhen I came out, she was coming down the stairs. Her long braids were loose and she had my white t-shirt on.\n\n\"I hope you don't mind.\"\n\n\"Of course not,\" I said, trying to tear my eyes off the nipples that poked through the thin knit.\n\n\"I'm fixin' to take a shower.\"\n\nI swallowed hard and stood there in the hall in my boxer shorts with my cock tenting the fly out. One move and he was out the door.\n\n\"Good idea.\"\n\n\"Do you want to go first?\"\n\n\"No no, you go.\" Please. So I can move.\n\nShe made a point of looking at the front of my boxers for a moment before going into the bathroom. I ran upstairs to get my clothes and when I came down, the bathroom door was open and the sweet-scented steam rolled out. I rushed on down the stairs but not before looking in but the shower curtain was too opaque to see.\n\nI found coffee and had water on the stove when she came in. She had a snow white towel turban on her head and she must have been in one of the trunks because she had a floor-length satin robe on from another era. It was a shimmering light blue silk and clung to her body. The belt was tied but the front gaped open when she moved, obviously not intended for a woman with such wonderfully ample breasts.\n\nI poured us both coffee and we sat at the table. She tapped her mug with her unvarnished fingernails and talked about how she might help me here today and all I could see behind that mug was the silk clinging like a second skin to her breasts. The nipples poked through and I could see the bumps of her aureoles in the silk.\n\nAnother old lecher move, I thought to myself. Get with it Brad I thought, and focused on the conversation.\n\nWe started that morning and by mid-afternoon, we were cross-eyed exhausted, and done. I looked out at my car, still looking adrift in a sea of rust colored muddy water. It had not receded one bit. They had so much rain previously that there was nowhere for it to go and the ground was saturated. Gully washer indeed.\n\n\"Hey! Let's go to the spring and take a dip. I haven't been in a long time.\"\n\n\"I haven't been in years,\" I said, smiling at the memories of my childhood with Aunt Birdie.\n\nAfter a couple of wrong turns, she thought it was over yonder and sure enough it was over yonder. Like a lush green oasis, the water sparkled and the surrounding vegetation was a vibrant green. I had forgotten how clear it was. I heard a splash and looked up in time to see her naked body slicing into the water.",
        "She came up, waters streaming off her face, her hair clinging to her. \"C'mon in!\"\n\nAs she splashed around I quickly undressed and jumped in. I shivered at the cool. I had also forgotten how cold the water could be, but yet refreshing on a hot day.\n\nShe swam up and splashed me and we began playing in the water just like childhood times. But not like old times, the girl I was playing with now was a knockout. She would come up out of the water with her hair clinging to her voluptuous breasts. She went under and swam between my legs, then around me, and surfaced in front of me. Close enough her nipples rubbed my chest.\n\nWe were laughing and diving to catch each other, but she would swim away just as I got near, and I did the same. One time I caught her around the waist and she giggled and squirmed and her back was against me and she was rubbing her delicious ass against my cock. She hesitated for a second when she felt it and backed into me rubbing her ass in circles. I still had her around the waist and she twisted as I lifted and those fabulous breasts were in my face. She grabbed me by the shoulders, pushed up, and shimmied them on my face, giggling.\n\nI smacked her ass and she wrapped her arms around my head so her tits were smashed into my face. A nipple was in my eye, the other on my cheek, but didn't care. It was the sexiest fun I have ever had. I dipped down under the water and she let go. Next thing I know her thighs were on each side of my head, her pussy on the back of my neck. I came up with her riding my shoulders.\n\nI went down and shot up and she jumped off my shoulders, splashing. She dove under and it felt like a fish touching my cock. Just a light touch. I jumped back and it followed. Suddenly she surfaced in front of me sputtering. She wrapped her arms around my neck and her legs around my waist. I automatically cupped my hands under her firm ass.\n\nTiny droplets formed on her eyelashes. Red hair swirled and clung to her creamy skin. Sea blue eyes looked into mine, then to my lips. She leaned in and pressed her lips against mine. Tentatively at first, then more pressure. Her mouth opened and I felt her hot tongue on my cool lips and I let her in. She held each side of my face, as though to keep me in place while she angled her head from side to side as though measuring. She tugged at my lower lip with her teeth and I did the same. Her legs tightened around me and my cock bobbed and searched but she was too high on my body. Her breasts were smashed into my chest and I could feel her hard nipples digging in.\n\nShe leaned her head back. \"Bradley Brad Bradley, you're a helluva kisser.\" She put her elbows on my shoulders, her forearms over my ears, and her fingers wove through my hair.\n\nAgain she kissed, angled, moved, nipped, bit, and sucked. Our noses pressed together as she tugged at my upper lip. Her tongue drove in and out of my mouth, slowly, then increasing like fucking. It was incredibly arousing. I squeezed her ass and she responded. She dropped her legs from around me and bumped into my cock as she floated in front of me.\n\n\"Let's go. It's getting cold,\" she said, and she was right, it was. I dried off with my shirt and drug my shorts up my wet legs. She dried off with her shirt and tied it around her waist like a cape. It was open in the front displaying her tuft of red hair, then draped lower and back around her ass. I smiled at her new style.\n\nWe walked back slowly because we were warming up from the spring water. She draped her arm around my shoulders and I had my arm around her waist. We walked and bumped crossing each other's paths. Then she bumped me harder with her hip, and I did her, and we laughed and hip bumped back to the house.\n\nI put hamburgers in a skillet and she put mayo on the homemade bread she brought. She scooped corn relish onto our plates along with sliced fresh tomatoes. She didn't change her outfit and still had her waist cape on and breasts bared.\n\nI put a burger on her bun with the spatula. I had mayo on my finger and wiped it on her nipple. She looked down and made a big O with her lips.\n\n\"Now look what you've gone and done. You have to lick it off you know.\" She set the plate down, put her hands on her hips, and thrust her breasts out. I picked up a scoop on my finger and mayo'd her other nipple. \"Now you've really gone and done it.\" She shimmied her tits and they shook in my face.\n\nI stuck my tongue out and just touched her nipple. \"That's not very efficient.\" I wiggled my tongue. \"Nope.\" I circled my tongue. \"Mmmm, better.\" I moved to the other one and did the same. \"There's still some left Brad Bradley Brad,\" she said sing-song, her voice rising.\n\nI took a deep breath, leaned in, and took her nipple in my mouth sucking and nipping and nibbling and tugging. I came off with a wet pop. She just moaned, so I went for the other one the same way.\n\n\"Mmmm, yes,\" she moaned. \"Umm let's sit down and eat.\" And with my cock throbbing under the table, we did.\n\nThe next morning I woke up without her next to me and felt sad. How quickly I got used to her soft warm body curled into me. I felt the bed move and she was on her knees next to me. She was going through the trunk again because she was wearing some filmy little thing.\n\n\"Do you like it?\"\n\n\"What is it?\"\n\n\"It's a bed jacket. They were popular in the 1960s.\"\n\nI propped the pillow under my head and said, \"Jacket. It looks like a robe for really short people.\"\n\nShe looked down and straightened the satin ribbon that held it closed at the neckline. It had below elbow sleeves of a very thin knit fabric and it ended right beneath her breasts. It spread open from that neck bow so a considerable amount of her inner breasts and the valley were viewable. As she moved the hem would cling to her nipples and I could see the delicious under curve of her breasts.\n\nShe covered her tits with her hands. \"I suppose women didn't have big bosoms back then. Everything is too tight across my titties.\"\n\n\"Their loss,\" I mumbled, noticing that today she was wearing pink bikini panties, whereas yesterday they were white.\n\nShe kissed me. \"Mmmm. You are sexy as all get out. I'm going to make us coffee,\" she said and was gone.\n\nI was just out of the shower brushing my teeth with toothpaste and a washcloth thinking I really had to get out of here today. I found small scissors and attempted to trim the mustache that was out of control.\n\nShe set a cup of coffee on the counter next to me, dropped her panties, and sat down to pee.\n\n\"I reckon you might get down the road today if you stick to the high side,\" she said as though she always peed and talked. Having a woman even be in the bathroom at the same time was a first.\n\nI took an appreciative sip of the coffee. \"Yes, I have to get back to the motel and get a little work done. I'd just stay here but I need wi-fi for my laptop.\"\n\nShe dried, pulled her panties up, flushed, and picked up her cell phone waving it. \"There's wi-fi here. I'm using it.\"\n\n\"What? Really?\"\n\nShe took a sip of my coffee and stood behind me looking around my shoulder at us in the mirror. I had a towel slung low around my waist. The old fluorescent light above the mirror gave our skin a weird greenish glow. I watched in the mirror as her arms wrapped around me. She had one hand splayed on my upper chest and the other traced the arrow of hair from my chest to under my towel.\n\nAt the bottom of the mirror, we watched my cock grow and the tent the towel. Her plump breasts pressed into my back and she looked up at me.\n\n\"I'm getting used to you smelling like spring lilac,\" she smiled, rubbing her nose on my shoulder.\n\nI laughed. \"It doesn't take away from my overall macho-ness I hope?\"\n\nShe glanced down at the tent in the towel. \"Oh, no. Not. One. Bit.\"\n\nShe had vegetables to pick to get her stand open and I needed to make an attempt to get my car out of here, pick up my stuff at the motel and get it back here.\n\nAs Georgia advised, I kept to the high road and away from the mud slime white knuckling it to the paved road. I wanted to give her a ride but she insisted on walking, cutting through the fields.\n\nChapter Two\n\nI swung by the motel, gathered my things, and checked out. I pulled into the diner and ordered breakfast while I made out a list for the grocery. I did it hoping that she would be there to share it all with me. If not, I'd have a lot of food and be lonely and I did not want to consider that.\n\nI've never had as much fun in a grocery store as I did shopping for us. We were using a lot of Aunt Birdies things, but we needed fresh. I didn't stop at the stand to see her because I wanted to get back and get everything in place before she came back.\n\nI got that finished and moved to the bookshelves in the next room. I got involved and realized it was getting late in the day and no Georgia. I knew she had a cell phone but didn't think to get her number. Darkness fell and I knew she was not coming back, but I guess I knew long before that. I shouldn't be surprised and I expected sooner or later she would realize an old man is not much fun. I realized I needed to get this wrapped up and back home.\n\nIt was nice having my own things in the bathroom to get back into the routine. Gone were the lilacs and in place women's shampoo, body soap, and creams that were next to my masculine body soap. I did not know what she normally used to I sort of went nuts picking and choosing. I was a little down that she had not shown up today and went to bed that way.\n\nWaking up without her in the house did not improve my mood. I made coffee and did some work on the laptop. Birdie's house was typical of that style old Florida house and was broken up into smaller rooms. Some that made no sense, but that is what they did in those days. One small room already had a desk so I commandeered that for my office. It did feel good settling in somewhere instead of that off-balance feeling you have when traveling and living out of suitcases in motels. I can at least get somewhat comfortable before I head home.\n\nI wanted Georgia to have all the trunks of clothes and any other of Birdie's things she wanted. I pushed the trunks in the attic near the steps intending to move them down later. First I wanted to load the boxes of books in the car that I did have ready to go and drive to the next town to ship to the dealer. He had texted, anxious for some books, and I promised him they would go out today.\n\nIt was an hour to get to the closest shipper and thought I should enjoy the city while I was there. Even though it was one-tenth the size of Charlotte, it was better than the burg I had been staying in. I stopped for lunch and a beer chatted with the barmaid and almost felt normal again. Although I thought how nice it would be to share this little excursion with Georgia.\n\nI unlocked the door, stepped in, and immediately knew she was here. Somewhere.\n\nI looked on the lower level and started up the steps to the attic. She heard me, turned and took my breath away. She was beautiful and seductive and obscene all at once.\n\nShe put her hands on her hips. \"Where have you been?\"\n\n\"Where were you?\"\n\n\"No matter. We are here now, right?\" I nodded, walking up to her. \"Can you zip me up?\"\n\nThe dress was tight and the zipper took some time to ease up. I looked at the shadow down the center of her firm ass, held tightly in the heavy lace. It was easy to see she wore no underwear, just the thick lace dress that she found before with no slip. I finished and she turned.\n\nThe dress hugged her curves and was stretched tight across her tits. Her hard nipples obscenely poked through the lace and hardened into long long nubs. I raked my nails over the lace on her tits and she moaned.\n\n\"Brad Bradley Brad, I like that a lot.\"\n\n\"Do you now?\" I scratched around her nipple and heard her breath catch. \"You look very naughty you know. Playing sexy dress-up.\"\n\n\"I am,\" she breathed. \"For you.\"\n\nI looked into her eyes and knew she did not have it in her to lie and even tell a man what he wanted to hear. She would tell you whether you wanted to hear it or not.\n\n\"Really?\" I said, hefting her heavy tits in my hands. She pushed them into my hands and I palmed her nipples.\n\nShe put a hand on each side of my face and pressed her lips against mine, almost sweetly, chastely. I kneaded the soft flesh in my hands and her hand slid to the back of my head, as though to hold me in place for the onslaught of passionate kisses. She angled and nipped and nibbled and sucked. She drove her tongue in and out of my mouth and sucked mine into hers. I pulled her against me and squeezed those heavenly globes in my hand. They were so tightly encased in the lace I could feel her soft skin along with the heavy, almost coarse texture of the lace.\n\nShe undulated her hips, pressing her mound into my hardness. She reached down and gathered the hem of the dress and worked it up over her hips until it was bunched at her waist. I eased her back on the bed and spread her creamy thighs.\n\n\"Oh Georgia,\" I breathed. Her sweet pussy lips were shaved smooth and I buried my nose in the shock of red hair. I nibbled and licked and her hips rocked, rubbing her wetness all over my face. I probed her clit with my tongue and she jerked. I flicked and licked and took her higher until she shuddered and moaned.\n\nI slid my hands up her body and kneaded her lace-covered tits. I pinched and pulled her nipples longer, then did it with my teeth.\n\n\"Ohhhhhhh, Brad,\" she moaned, thrusting her tits higher.\n\nKnowing the coarseness of the fabric was erotic against her soft skin, I scratched my nails across her skin. She moaned louder and her thighs parted. I moved higher and sank into the cradle of her thighs.\n\n\"I want to fuck you, Georgia,\" I murmured.\n\nShe shoved my shorts down and my cock plopped lewdly against her cunt. She pushed up and the head slipped between her wet folds aimed right at her entrance.\n\n\"I need your cock in me....\" she whimpered.\n\nI pushed the head into her steamy heat and slowly pushed in. She had a long intake of breath hissing through her teeth as my cock stretched her tunnel for the first time. Her nails dug into my ass until I bottomed out deep in her body.\n\nI dropped my head next to hers for a moment. My cock throbbed and grew hotter inside her and I needed to gain control. My steamy breath was in her ear which only served to inflame her. She squeezed my ass and thrust up, grinding my cock deeper and I began long slow stroking.\n\nHer soft thighs wrapped around me and her nails scored up and down my back. I jerked and drove deep. Our moans and obscene sex sounds rumbled around the attic. Just fucking in this sinless unsullied room was vulgar, making it even more arousing. I raised up over her and began driving into her wet cunt. My shaft abraded her clit on each stroke and her pussy convulsed over and over on my cock.\n\n\"Oh yeah, Georgia,\" I moaned, stiffened and exploded inside her while she panted each hard throbbing pulse of my cock. I rolled to the side and we both caught our breaths.\n\n\"Mmmm,\" she moaned, satisfied.\n\n\"I thought I was too old for you.\" There was short silence then she began laughing, and laughing, and laughing.\n\n\"Oh hush your mouth!\" she exclaimed, still laughing. \"She-it, I don't give a feck how old you are. I don't even know. Never even thought about it. You're just a man that I'm attracted to.\" Then she added, \"Really attracted to.\" She sighed contentedly.\n\nWe lay on our backs and she slid her hand into mine and dozed.\n\nWe woke and she wanted the dress unzipped. When she shimmied out of it, she had imprints of the lace on her soft skin.\n\n\"Whoa,\" she breathed, running her fingers over her breasts.\n\n\"Whoa,\" I repeated, doing the same and she giggled. \"Actually it is pretty cool.\" I leaned over and softly trailed my lips across the bumpy flesh.\n\n\"I'm going to find something else to wear for you.\"\n\n\"I just can't wait.\"\n\nShe was irrationally excited about everything I bought for her and each time she would find something she would run up and give me a kiss. She stayed topless but had her bikini panties on and that was how she worked around the house. I knew I had died and gone to heaven.\n\n\"Do you want me to start going through Birdie's bedroom?\"\n\n\"Please.\" I was most thankful for her help on that. Even dead I had respect for her and would not have been able to bring myself to sort through her stuff. Georgia would give me an idea of what she thought should be done and I mostly agreed.\n\n\"Why did you move the trunks?\"\n\nIt took me a moment to remember I had moved them. \"I was going to bring them down here so I could load them in my car and bring them to you. I want you to have all that, Georgia.\"\n\nTears filled her eyes. I thought because of the sentiment until she said, \"I can't.\"\n\n\"Why not?\"\n\n\"Just because I can't.\"\n\n\"Okay.\" I dropped it.\n\nShe worked on Birdie's room all day and was done by nightfall. I looked in and it no longer looked like my aunt's room. There were no traces of her. Even the furniture had been rearranged. Somehow Georgia got the bed to the other side of the room and had fresh new bedding on.\n\n\"Wow, I can't believe you got this all done in one day. I got involved with the books and time flew by.\"\n\nI turned to look at her and she was smiling proudly. What she didn't know was that she had smudges on her face, legs, and even on her tits from working topless. I thumbed them off her face.\n\n\"Looks like we both need a shower.\" She looked down and laughed saw how dirty she was.\n\n\"I think I may need help,\" she said and batted her eyelashes.\n\n\"I'm the man for that job.\"\n\n\"I'll go get everything set up in the bathroom while you finish up in here,\" she said, sprinting up the steps.\n\nA few minutes later I walked into the bathroom to find her submerged in the deep claw foot tub.\n\n\"I think it's too small for both of us to shower in. So I thought we could use the bath.\"\n\n\"I see,\" I smiled and started shedding my clothes.\n\nMy hard cock bounced in front of me as I walked over to step into the tub. She stood up, bubbles and water streaming down her body then lowered herself on my lap. The warm water felt wonderful, her body on top of mine was excruciatingly arousing. I wrapped my arms around her and she had her head back on my shoulder. She sighed deeply.\n\n\"This is incredible,\" she murmured and sighed deeply.\n\nI kissed the side of her neck and whispered in her ear, \"Very much so.\"\n\nI had her breast in my hand caressing it under the warm silky water. She reached down, held my thighs, and pushed back into my cock. I moaned and slipped my hand down her belly and between her legs and teased my finger in her slit. That and the fluttering movement of the water caused her to begin soft little pants and I knew she was on her way. I flicked rhythmically, felt her tense in my arms, and mew out a long moan.\n\n\"Oh Brad,\" she said, angling her head back for a kiss. \"No one has ever done what you do to me.\"\n\n\"I'm sorry, honey. All men should take care of their women.\" She went silent.\n\nShe was so weightless in the water she wiggled back until my cock stood up between her legs and was tight between her pussy lips. She rubbed her hand up and down the underside of the shaft and thumbed the head. She reached under and danced my balls on her fingers. Her actions and that of the swirling water was driving me crazy.\n\n\"I'm about to lose control,\" I gritted out. All she did was rub my cock faster and circle palm the head. \"Oh my god.\" That did me in. I thrust, drove my cock up, and shot ropes of cum spiraling into the water. Everything was surreal under water as was the extra intensity of my orgasm.\n\n\"Oh Bradley Brad Bradley,\" she moaned, relaxing against me again. \"You are one hot ride.\"\n\nShe got back into her morning routine of picking and gathering vegetables for the stand and then usually home by early afternoon after she sold out.",
        "\"How was today?\" I asked when she came in the door.\n\nShe began mumbling under her breath, and besides a lot of swearing, I got, \".... madder than a wet hen....\" More cursing. \"...Little dick's have big trucks...\" Lots of cursing. \"....who does that varmint think he is...\" Even more cursing.\n\n\"Georgia had a bad day, I think,\" I said. Her head swung around like a scene from The Exorcist and she stared at me. \"Honey...?\"\n\nShe stalked out to the kitchen and began unloading the bag of fresh veggies for dinner. I chose the better part of valor and went back into the room to finish going through the pile of books... And hid.\n\nAfter a while, all kinds of delectable curry spice smells drifted in from the kitchen and I had to go see what was on the menu. Georgia used her own vegetables and fresh meat from the local butcher.\n\n\"Yum, smells good,\" I said, treading lightly.\n\nShe smiled, looking only slightly annoyed instead of rabid as before.\n\n\"Do you want to sleep downstairs tonight,\" she said out of the blue.\n\nTaking my time to answer in case this was some kind of a test, I said, \"I don't know. What do you want to do?\"\n\n\"Whatever you want to do.\"\n\nWell crap, this was not going well. \"I guess we could?\" I put it in form of a question so as not to commit myself.\n\n\"Y'all men just think you can say whatever the hell you want to say,\" she gritted out, making me go over the last thing I said to her, which seemed pretty innocuous. So I just kept my mouth shut because I knew the other boot was going to drop at any moment.\n\nShe was doing a stir fry and chopping vegetables at a record pace. I gently took the sharp knife out of her hands and finished chopping.\n\n\"Those little dicks that drive those big ol' pickups,\" she grumbled. \"All the girls round these parts know that the bigger the pickup the bigger the ego.\"\n\nShe was no shrinking flower and I knew she could be a badass and could kick some serious ass if necessary. I didn't need to fear for her life. She would whoop and live to tell about it.\n\n\"What did he say?\"\n\n\"He asked me out!\" I blinked. \"He just pulled in out of nowhere, got all up with that snarky leer y'all macho whatevers get. Said he'd like to take me for a ride like it was a big deal to me.\" She scowled.\n\n\"On a date?\" Thinking there had to be more to it than that.\n\n\"YES.\"\n\n\"And you said?\"\n\nShe turned around and frowned at me and I swear on my mother's grave fire shot out of her eyes.\n\n\"NO.\" And she started slamming things around again.\n\nI got dinner plates out and set the table and pretty much tried to stay out her way. I was in the dark and didn't know if I would be seeing the light any time soon. On one hand, I was relieved she turned him down, on the other, she needs to live her own life but it would have killed me to see her with anyone. At least while I was still here. Once I was back in Charlotte, I could live in my own fantasy world that she never was with anyone else and I could live happily ever after with that.\n\nShe slammed a couple of beers on the table we began to eat.\n\n\"What did you want me to say to him?\" she asked.\n\n\"Ummm, whatever you want, Georgia, it's your life. I have no say.\"\n\nShe nodded and I watched her eyes rim and she blinked tears back, then take a long pull of beer. The rest of the dinner conversation centered around the crops, what was coming up for picking, and that she wanted to add some new things to the roadside stand. I was impressed with how she handled the stand as a real business and was very successful at it.\n\n\"You know Birdie has those hives out back. I have someone caring for them now, but you might consider taking them over and adding local honey to the stand.\"\n\nShe looked at me and said, \"What happens when you sell the property and go back to Charlotte? Where am I supposed to put the hives?\"\n\nShe had a point. I couldn't stay here forever and did plan to sell the place.\n\n\"I guess I don't really know what your living situation is. We never talked about it. I mean I know you stayed with Aunt Birdie sometimes, but I don't know where you actually live.\"\n\nShe got up and began clearing the plates and running water in the sink, effectively ending the conversation. She was always uncomfortable talking about her life so I assumed it wasn't good and I did not push.\n\nShe washed and I dried and we were soon done. \"Did I see a television in Birdie's room?\"\n\n\"Yup, she has cable here.\"\n\n\"Really? I've been television-less and didn't need to be.\" She laughed.\n\n\"I thought you knew. It's only down here, not up there,\" she said, looking up. \"I wouldn't want a television up there.\"\n\n\"Me either.\" The attic was a special place. It was magical for Georgia because of the trunks of memories, it was special to me because that is where she sleeps in my arms.\n\nShe went into the room and turned on the television. It was an older newer style so the picture was pretty damn good. Certainly better than I had in the motel. She piled and plumped pillows and stretched out. I grabbed a couple more beers and lay down next to her. She rolled on her side, head my shoulder and leg across mine. Her hand was on my chest and slipped under my shirt while she toyed with the curls. We found a good movie that we were making out to before it even ended.\n\n\"Are we staying here, or going up?\"\n\n\"Up,\" she said and sprinted up the steps.\n\nI made sure lights were off and everything was shut down before going up.\n\nShe sat with her legs folded under her in a sheer kitten baby-doll nightie like a centerfold from the sixties. The sheer white clung to her nipple before dropping in soft folds to her thighs. White satin ribbon tied at her shoulders. Her hair was up in a vintage French twist.\n\n\"Oh, baby.\" I dropped pieces of clothing as I walked to the bed. She rose up on her knees and I saw the matching sheer panties, that gave a peek of her red bush.\n\nShe kissed me and I held her, the silky fabric sliding her over her skin. I ran my hands over her firm ass, encased in the slippery silk panties. She kissed down my chest until her lips grazed the tip of my cock. Her cherry red lips wrapped around the head of my cock. Traces of red lipstick smeared my cock and she sucked the head, grazing her teeth over the sensitive surface then scrubbing it with her tongue. She already had me a trembling mess.\n\nTwo fingers wrapped around the base of my cock while she sucked a ball into her hot wet mouth and toyed with it with her tongue. My legs were jelly as she kneaded and squeezed my ass while pulling my cock into her throat. My hips spontaneously rocked into her sucking mouth. She took me right to the edge, but before I flew, she stopped and pushed me on my my back.\n\nShe wiggled out of the sheer panties but kept the short babydoll on. She loved wearing it and was all but nude since it was transparent so it was win win.\n\nShe straddled me and held my cock. While she watched me she slowly slid down my cock until we were locked tight. She ground down to make sure.\n\nShe used her knees to stroke her tight cunt up and down the length of my cock. Her back was arched and tits thrust out. I could see the silky gown sliding over her hard nipples and I slid my hands under her babydoll and cupped her tits.\n\nShe got this body rocking undulation going that gripped my cock in long strokes. I toyed with her nipples and her lips parted and the tempo increased. I thrust meeting her movements but she was in total control. I saw her jerk at the same time her cunt clenched hard on my shaft and pulled as she began rocking faster, intent on draining the seed from my balls.\n\nI palmed her nipples and she tightened her inner muscles and kept milking my shaft with those long strokes. My balls tightened and I was over the edge. She stopped and ground down taking my cock deep as it erupted in her.\n\nAfter awhile she took the babydoll off and snuggled next to my side. I fell asleep thinking it was the most beautiful sex I had ever had.\n\n\"I think you're a closet nudist,\" I said the next morning when she came to breakfast totally naked. \"Either that or you forgot where you put your clothes.\"\n\n\"Oh you think so do you,\" she said, wrapping her arms around my neck and pressing her body into my semi-clothed one. I smoothed my hands up and down her back and over her ass while she pressed into my bulge. \"Feels pretty good to you, hmm.\" She wiggled her ass and ground into me.\n\nI moaned. \"I give, go ahead and run around naked all day so I stay hard all day and get nothing done then I'll never get out of here.\" I laughed but her face fell and I realized what I said.\n\nShe pushed away and said, \"I need to go get picking.\" She turned and ran up the stairs.\n\nThis was the first she indicated my leaving bothered her. I thought she looked on us a thing and did not allow myself to think much past the current moments. Would someone her age be happy with an older guy, I wondered. She will end up taking care of me as she would a father or grandfather. I don't think she has thought it through.\n\nI pulled boxes of books out of a closet and stacked them in the middle of the room. The last box out was back in the corner and had much more dust on it than the others. The tag had my Uncle's name on it, Aunt Birdie's husband that died before I could remember.\n\nI took a rag and wiped the box off. It had been sealed, but the clear cellophane tape had yellowed and curled, the glue having long since let go. I spread the flaps and picked up a stack of old photographs and postcards. They were all images of erotica. These from the early nineteen hundreds would be my guess. One would be titillatingly suggestive, the next would be stunningly pornographic.\n\nAnyone thinking pornography of the early days would be tame, would be shocked to see these images, I thought. I would hazard to guess that many of these women were prostitutes in France because brothels were legal at that time. I sorted through the mostly postcard size images into piles. Many were not surprisingly girl-girl, several were both males, some of it was fetish, most of the women would be overweight by today's standards, men had bellies, and in all the pornographic images they looked like they were enjoying themselves, smiling even. Not the fake tits and bored smiles of today.\n\nThey were sepia to black and white. Up through the nineteen fifties, by clothing of the era. There was thick untrimmed pubic hair, heavy hanging breasts and, innocent pinups to lewdly spread bawdy women. The later images of women were most titillating I thought. The women carried ten, twenty, or more pounds. Many had pretty good size breasts, especially considering they were all-natural. Faces were not all beautiful, nipples were huge which made me wonder if they began airbrushing nipples smaller after the centerfold days.\n\nThe box was packed with hundreds of images like that. The bottom of the box had books and smaller leather-bound novels, all erotica and pornographic.\n\nGeorgia would love these because many had vintage clothing and lingerie.\n\nI was filthy from digging through the closet and ran up to shower. When I came back Georgia was on her stomach, studying each image and spreading them on the floor. I squatted down next to her.\n\n\"I thought you might like those,\" I said, smiling.\n\n\"Oh yesss,\" she said looking up at me wide-eyed. \"Am I supposed to be this turned on by them?\"\n\n\"Sure, why not honey, I was with some of them too,\" I admitted. \"That was really the point of it back then... And now I suppose.\"\n\nShe was still dressed from working the stand in shorts and a cropped t-shirt. I slipped my hand under her shirt and unhooked her bra. Her tits tumbled out and she moaned.\n\n\"Oh, that feels so good.\" I pushed her shirt and bra up and off. \"This feels better.\" She rolled to her side and propped her head on her hand. \"And why are you still dressed?\"\n\n\"What? I only have shorts on! I'm almost naked.\" She laughed at me.\n\n\"I'm going to make a nudist of you yet! Not much longer and y'all will come home and strip at the door,\" she said smirking.\n\nI caught the ya'll-will-come-home part and liked the sound of it.\n\nChapter Three\n\nI shoved the box of my Uncle's vintage erotica and pornography back in the closet. I would have to find an appropriate dealer to take all that, so I needed research time.\n\nI was sitting in the middle of the floor surrounded by stacks of books when Georgia got home from her stand. The door closed behind her and she had her top and bra off before she took another step. I leaned back on my hands and thought about what a lucky fucker I was.\n\n\"Bradley Brad Bradley, I want to ask you something.\" She climbed over the books and plunked down in front of me, cross-legged, and handed me a bag. I was still smiling like a goof from thinking what a lucky fucker I was and she hesitated.\n\n\"What, honey?\"\n\n\"Okay, so well you know how busy my stand gets?\" I nodded. \"I am running out of things earlier and earlier, because I don't have enough to sell and I thought to add some new stuff.\" I was having a difficult time hearing her and trying to keep my eyes off her bare breasts, much less my hands. \"And I thought now without Birdie's jams and stuff I was really in trouble.\"\n\n\"You need more stock and you want to keep it to homemade products that will go along with your fresh produce. That's a great idea, Georgia. Not only will it benefit you obviously, but you will help the local folks.\" She nodded vigorously seemingly glad I got it.\n\n\"Yes! But the only problem is, I don't have anywhere to meet with the vendors and taste their products. If they see any activity at the stand, customers pull in to buy, so I can't do it after hours.\" She glanced down. \"Don't you want to see what I brought you?\"\n\n\"Oh right!\" I opened the bag and knew when the earthy steam puffed out. \"Boiled peanuts!\" She grinned.\n\n\"So have them come here to meet with you. That's no problem. We can straighten up the front room and set things up however you want them.\"\n\n\"Yay!\" she cried, jumping up on her knees and throwing her arms around my neck. I fell back with her on top. \"Mmmm,\" she said, rubbing her tits on my chest.\n\n\"Oh honey, now look what you've gone and done,\" I said, pushing my hardness against her. I heard a couple of my nicely stacked books slide away as my clothes disappeared.\n\nShe left me gasping, empty and sprawled among the books. Life is pretty fucking good, I thought.\n\nI got Georgia's room ready. I had found another desk and drug it in her room as a surprise. I wanted to make sure she had enough seating and called her into the room.\n\n\"Did you do all this for me?\" she asked, shocked. \"It looks like an office!\"\n\n\"Of course I did.\"\n\nShe wrapped her arms around my neck and sprinkled kisses all over my face. \"Thank you thank you thank you!\"\n\nI hugged her, happy at how happy that made her.\n\nHer room was near the front door so she was able to escort them in there right from the front door. Very businesslike. I heard the low hum of their excitement even from the other room.\n\nShe peered around the corner of the door, \"Brad Bradley Brad can you come in and help me taste test? I need another opinion.\"\n\n\"Sure,\" I said following her.\n\nAfter quick introductions, I went to the tasting table. It was loaded with all sorts of jams, jellies relishes, pickles and any other kind of home-canned good you could think of. Georgia handed me a glass of water, to cleanse my palette she said grinning.\n\nI began mentally keeping track of the best ones, but that quickly failed because so many were excellent enough to be on commercial store shelves.\n\n\"Can they leave them?\" I whispered to Georgia and she nodded. She told them it would take some time to decide and she did not want to rush and wanted to be fair. They were all very agreeable and some brought in more jars. We filled a shelf up of the small refrigerator with the rows of jelly jars.\n\n\"She-it, this is going to be tougher than I thought,\" Georgia said. \"There, I believe I can add some extra shelves doing it this way,\" she said, pushing her sketch of the stand across the table.\n\n\"Sure, sure, I said, thinking that was not going to be near enough space for the number of products she would need. I had to put some thought into it before I approached her with any ideas.\n\nThat night she was not feeling well and just wanted to cuddle and I was more than happy to do just that with her. Anytime.\n\n\"Georgia honey, I never asked, but do you own the property the stand is on?\"\n\n\"She-it, no. I couldn't afford that. Gilbert lets me use it because some of the vegetables I sell are his.\"\n\n\"Oh, okay. Nice deal then.\" I was thinking that possibly rebuilding the whole stand would be better than trying to use what's there. She had her head on my shoulder and my arms were around her holding her against me. \"You never did tell me where you lived. I mean before you started staying with me.\"\n\n\"No. I don't tell anyone.\"\n\n\"Okay. But I don't even know anything about you, you know. About your parents.\" I could feel her tense. \"Sisters or brothers. Nothing. Do I at least get a hint?\"\n\n\"Not brother or sister and no mother. Mama died a ways back.\"\n\n\"Sorry honey... So your Dad is still around then.\" She nodded.\n\n\"Yes, he's still in these parts. He's a drunk.\"\n\nI kissed the top of her head. \"I\"m sorry honey, that's tough to live with. I know.\"\n\nShe let out a big sigh and snuggled even closer. I knew that there was more to it and it wasn't going to be good.\n\n\"That's why I don't like to go home.\"\n\nThe next morning after she left to pick, I made a few phone calls. By noon everything was arranged and I couldn't wait to tell Georgia. I began to draw some preliminary sketches of her new stand. Actually, it would be more of a building. She would have room for a lot of new products as well as her daily produce. It was arranged that she could grow into it as her business enlarged.\n\nBy the time she got back, I had several variations spread on the table.\n\nShe placed a bag of dinner's produce on the counter and tossed me a bag. I caught it but promptly tossed it back into the air. \"Ow! Hot, boiled peanuts today!\" I said, tossing the bag from hand to hand to cool them down.\n\n\"What's this?\" she asked, moving the drawings around on the table.\n\n\"Your new stand!\"\n\n\"You're nuttier than a Junebug in July! That won't fit there!\"\n\n\"You're right. It's not meant for there. It's meant for the end of the road right out front,\" I said, smiling and proud of myself.\n\n\"What? So you're staying here?\" she said, her face lighting up.\n\n\"Not exactly. I'm giving you a piece of property for your stand with enough room behind to build a cabin if you want.\"\n\nShe shuffled through the drawings and tapped her fingers on the table. She was quiet for a few moments. I could tell she was trying to compose her thoughts. This was not going the way I envisioned.\n\n\"I mean you don't have to build it like one of these. I just sketched these as ideas. Do whatever you want, Georgia.\"\n\n\"No no, these are fine. Dandy.. I'll be making enough money that I can repay you.\"\n\n\"I don't want you to do that. It's a gift, I want you to have it. Think of it as being a gift from Birdie too. You've been so successful with your stand, this little store is just the next step.\" She hadn't met my eyes since I told her and I was getting worried.\n\n\"Yes, I like these,\" she said turning away. \"I need to get started chopping the vegetables for dinner.\"\n\nI gathered up the drawings and took them into the other room, but not before I heard her crying. I didn't know what I did so I didn't know how to make it better. I just wanted to allow her to continue her success but on a bigger level.\n\nI lost myself in books because I honestly did not know what to do. I was bleary-eyed and had to go to bed, but as I walked by Aunt Birdie's room, I saw Georgia had fallen asleep in there while watching television. She had normal nightclothes on, obviously intending to spend the night there. By herself. With a heavy tread, I went up to the attic to sleep alone.",
        "Georgia was up and gone to pick before I came down. The sketches were on the table with a scrawled note.\n\nI like this one. Can it be done before you leave?\n\nI immediately thought sure, I would make sure it was done. But then I realized I had no idea of when I was going to leave. I owned a condo in Charlotte that was fine without me, and I did my work from here, or there. Made no difference. I guess I assumed I would leave when Birdie's house sold. By then her books would safely be in the collector's hands and I had thought to have what was left auctioned off.\n\nI had no life to get back to, but I wanted Georgia to get out and find some guy her age. After I was gone because I sure did not want to see her with anyone. That would be too painful.\n\nI would have to find someone to build it and get the proper permits before starting. Not being familiar with the area, I had no idea of how long that would take. Which brought me to the conclusion that I had no real answer for her.\n\nShe was home by mid-afternoon and before we could get into any serious discussion, she wanted to narrow down the jams and jellies and sundry other things that filled our tiny refrigerator.\n\nWe decided on a method, set up the jars, glasses of water, and scorepads.\n\n\"I like this mango jam. They don't grow here but the woman that makes this gets them in southern Florida. It'll be unusual,\" she said and I agreed.\n\n\"This wild blueberry is pretty tasty too,\" I said and she agreed. The next three we ruled out and chose another four, giving us six new jams.\n\nWe brought out the pickles, but because there was pickled cauliflower, brussel sprouts, broccoli, Vidalia onions, and okra, we had to narrow it down yet again.\n\nMaking the choices took the rest of the afternoon. I was continually amazed at how these tasted good enough to be in a mainstream grocery store. Finally, we were done and although we had taken the smallest of tastes, we were pretty full, we decided on grilled cheese for dinner.\n\nGeorgia buttered the bread and began slicing the fresh tomatoes she brought home. When I saw her put them between two pieces of cheese in the bread before she grilled them, I was a little hesitant. But, decided to withhold comment until I ate it. Just like the boiled peanuts, it might be my new favorite food here.\n\nShe slid the sandwich off the spatula onto the plate in front of me. \"Here ya go, Brad Bradly Brad.\"\n\n\"You know, I've never had grilled cheese with tomato before.\" She stopped and looked at me like I had grown a third eye in the middle of my forehead.\n\n\"What? Never?\"\n\n\"Never.\"\n\n\"You have led a sheltered life. I spose you haven't had shoo-fly pie either? Don't answer that,\" she said rolling her eyes.\n\n\"I do believe I have,\" I said, picking the sandwich up and taking a bite. The gooey rich cheese mingled with the acid of the tomato and I said, \"Damn this is really good!\"\n\nShe grinned. \"I'm glad you like it. Better I'm glad you tried it before saying no. I hate that. So feckin' rude!\"\n\nWe decided to watch a movie and settled on the bed.\n\n\"You never answered if the stand could be done by the time you leave me?\"\n\nLeave me. Those words were like a kick in the gut. Before I leave her. Putting it that way made me sound like a real scuzzball. Damn.\n\n\"I'm not exactly leaving you, honey.\" I tried to measure my words as carefully as I possibly could.\n\n\"No? What are you doing then? If you're not staying with me, you're leaving me right?\"\n\n\"Well yeah... No... I mean you need to get back to your life. This will all be wrapped up eventually,\" I said, waving my hand around. \"And I'll be done here.\"\n\n\"I see.\" She drummed her fingers on the bed. \"And you have decided that without even discussing it with me?\"\n\n\"Decided what?\" I said, confused.\n\n\"That I needed to get back to my life? What if this is my life? This is what I want? I am about to pitch a hissy fit, Brad Bradley Brad,\" she growled, hands on her hips.\n\n\"You want this?\" I asked, waving my hand. \"The house? It's yours!\"\n\n\"Bless your heart. You really have no idea, do you?\"\n\n\"I guess not.\"\n\n\"You must be ready to get back to your life in Charlotte, I guess,\" she asked.\n\nI had a feeling a lot of things were going to hinge on my answer to this one question. I looked at her and tried to quickly weigh all the angles. \"I, uh,\" I faltered. \"Not really, no.\"\n\n\"When do you reckon you'll know?\"\n\n\"Maybe when you get tired of me,\" I smiled. She rolled her eyes, shook her head, and walked out.\n\nWe found a builder for her new stand and met with him. He assured us he could get it done in a timely manner.\n\nAfter he left, she scoffed, \"Timely. No such thing in the south. They're all slower than a Sunday afternoon.\"\n\nSure enough, we did not hear from him again for two weeks. In that time Georgia worked on the interior shelving and storage. She ordered canned goods that we tasted. She lined up a baker that would drop homemade bread every day. Again I was impressed with her business acumen. She was very shrewd.\n\nShe found a cork board somewhere and set it up in her office and kept track of each project she was working on. She would ask for my opinion occasionally, but overall it was her baby. Vendors began calling her and every evening she had a ton of voicemails to go through.\n\nIt began to rain and she came to me and said, \"Let's go to bed.\"\n\nWe turned off the lights and climbed the steps to the attic. She turned to me and slipped the oversize shirt off her shoulders.\n\nA vintage white slip hugged her curves. The upper edge and hem were trimmed with delicate white lace. The body of the slip was sheer and silky. The bodice was sheer with tiny pleats. Vintage often did not account for the larger breasts of women today and the sheer cups were full with her ample tits. Hard nipples poked through the sheer. Narrow white satin ribbon attempted to hold her luscious flesh up.\n\nHer red hair was pinned up with escaped curls dancing around her head. \"You look beautiful Georgia,\" I breathed. I pulled my shirt over my head and dropped my pants. My cock throbbed in front of me while I took in her body, her sweet face.\n\n\"Mmmm, is that for me?\"\n\n\"Always for you. Only for you, honey.\" I said the true words. I took her in my arms, sliding my hands over the silky slip. I cupped her ass and pulled her into me. \"You are so sexy in this.\"\n\nBecause of her, I discovered that although I love skin on skin, there are times a tantalizing mystery is just as erotic.\n\nI backed her against the big brass headboard and raised her arms and wrapped them around a brass curve. She hung on and arched her back. I began to slide the satiny skirt higher and higher until the lace hem exposed her sweet pussy, and let the silky fabric slide down her skin. I heard her breath increase. Her tits were tight in the sheer cups, her nipples lewdly poked out of the soft fabric.\n\nI wrapped my hands around both breasts and kneaded and squeezed, studying her soft flesh and feeling the firmness in my hands. I urged a ribbon strap over her shoulder and down her arm. I pulled the lace edge cup down slowly, excruciatingly slow to expose her breast. I rubbed the lace over her nipple, abrading it with the texture.\n\nShe mewed and squirmed. She still clung to the headboard, her eyes were dark with lust hooded. Strands of red hair had fallen over her face and shoulders and clung to her damp skin.\n\nI pressed my lips on hers and she parted them in invitation. I kept the kisses, light, erotically teasing. My cock throbbed and wanted attention, but this was for Georgia now. I stepped back and cupped a breast in each hand, one behind the lace and sheer, the other exposed and bare. Her nipples were hard and I tugged on each one. Her back arched and her head fell back.\n\nShe looked like a tawdry dame from the cover of an old trashy dime novel. I pushed the other strap down and traced the outline of the bodice on her skin. Her breath hissed through her teeth. I uncovered that breast leaned over and took it into my mouth. She moaned when I tugged on her nipple with my teeth. I reached under her slip and ran my finger between her soft lips. She was wet. Very wet.\n\n\"Turn around.\" She let go, turned, and grabbed back on again. I pulled her skirt up and bared her ass. I rubbed circles on her firm ass. She began to purr, low and deep.\n\nI pressed up behind her and kissed her neck. She moaned and pushed her ass back into me.\n\n\"Do you want it?\"\n\n\"Yesssss,\" she hissed. I slid my cock between her legs. \"Brad... I need you...\" I rubbed my cock head between her soft lips. She moaned. I pushed in and she thrust back, sliding on until my cock was ball deep inside her. I held her hips rocking into her, deep and fast. I knew I wouldn't last long after that, and right then her pussy clamped down on my cock and she shuddered, mewing long and low.\n\nHer pussy milked my cock and my balls twinged. I locked inside her, and exploded hard and loud.\n\nShe dropped her arms to her sides and caught her breath. \"Ohhhh Brad that was good. That was so fecking good.\"\n\nThe next morning I woke up and she was already gone, but the smell of bacon wafted up two flights. I pulled on my shorts and headed down.\n\n\"Whoa!\" Georgia was at the stove cooking up bacon, but somewhere she found a frilly vintage apron. It flashed through my mind that this was going to be payback for our sex last night.\n\nShe turned and said, \"Sit down Brad Bradley Brad, breakfast is almost done.\"\n\nThe front bodice square was held up by a loop around her neck and was edged in a ruffle of the same tiny blue flower cotton. The edges barely covered her nipples and when she moved, the top would give me a flash of nipple.\n\nThe skirt of the apron was of the same fabric and full. The wide waistband created the back straps that tied into a large bow, with the tails hanging down over her bare ass.\n\nShe leaned over the table to serve the bacon and eggs and her bodice moved to reveal one breast, then as she stood up, it was hidden again.\n\n\"Aren't you hungry, Brad?\" I glanced at her face.\n\n\"Uhm, you're certainly looking like a fifties hot housewife this morning,\" I stammered. She smiled. \"You don't have to pick for the stand this morning?\"\n\nShe turned to the counter to butter the toast. Her sexy ass between the back opening of the apron skirt was driving me crazy.\n\nShe sat down. \"I have to meet with the builder this morning to go over some things.\"\n\n\"Not like that I hope.\"\n\n\"No silly! This is all for you,\" she smiled seductively.\n\n\"Lucky me,\" I sighed, wondering how I was going to get this out of my head to make it through the day.\n\n\"I'm going to clean out the pantry later so we can get some food in. Everything is pretty much out of date from Birdie,\" she said matter of factly.\n\nI kept glancing to see if I got another flash of nipple. \"Sure, we can go into town to the grocery store later.\" A big grin formed on her face at that.\n\nI had to get quite a bit of work done today so I was shut up in my office for the better part of the day. I would hear bumping and banging around at times. She brought in a sandwich and salad so I could work through lunch.\n\nI was stunned when I walked into the kitchen later and found all the counters cleaned off of Birdie's bric a brac. In its place were what few more modern appliances that were here. I noticed everything she removed had been carefully stored away on a pantry shelf. I could smell a faint pine scent indicating she also scrubbed the kitchen down. Beyond that, the wonderful smell of meatloaf came from the oven.\n\n\"What do you think,\" she asked, wrapping her arms around my waist.\n\n\"Mmmm, I think you smell warm and good from your shower,\" I said, nuzzling her neck.\n\n\"The meatloaf is going to burn.\"\n\n\"I just checked, it has another thirty minutes.\"\n\nWe kissed and it escalated to hot and steamy. She had my pants open and pushed down to my knees and sat me on the kitchen chair. She straddled my lap and shimmied her tits in my face.\n\n\"Oh honey,\" I whispered, reaching under her shirt to massage her fleshy breasts. I sucked her nipples through the light cotton until she began to lower herself to slide onto my cock. I moaned.\n\nShe bounced and rode on my cock, letting her inner muscles milk my shaft. She threw her head back and moaned out an orgasm, her cunt tightened on my cock. I felt it in my balls and locked her down on me while I unloaded inside her.\n\nWe kissed. \"Mmmm, I kinda like these quickies,\" she said. That's my Georgia, I thought.\n\nOver dinner, we discussed the plans for her stand. Even though it was at the end of my road, I hadn't been out of the house to see it recently and I promised I would tomorrow.\n\nThe next afternoon I sniffed the air and couldn't decide what the delicious smell was, so I had to go investigate.\n\nA pot bubbled and steamed on the stove and I looked in to see the wild blueberries she had found on the property. She came from the pantry carrying a big canning pot. I flashed back to Aunt Birdie using it when I used to stay here.\n\n\"I had a hankerin' for some blueberry jam so I picked on my way home from the stand.\"\n\n\"Smells wonderful, honey.\" She smiled brightly. A few hours later glass jars of purplish-blue blueberry jam cooled and pinged on the counter.\n\nDinner was meatloaf leftovers, which I was thrilled about, and a mix of fresh vegetables from the stand that she stir-fried. \"These are really good, Georgia,\" I said of the vegetables.\n\n\"Thanks, it was a new idea.\"\n\n\"Hey, do you want to go to the grocery when you get home tomorrow?\"\n\n\"Sure thing.\" She hesitated. \"Can we get some paint for the kitchen maybe?\"\n\nAfter she had scrubbed the cabinets and walls it made it apparent that it was pretty worn. Who knows the last time Aunt Birdie painted it.\n\n\"Absolutely. We'll get paint and supplies first. Decide on a color.\"\n\nShe leaned over and threw her arms around my neck. \"Thank you, Brad.\"\n\nI was grateful she no longer seemed mad at me, and we were settling into a life routine. I loved going to sleep with her next to me, and I loved waking up to her next to me. I didn't know what I'd do without her, frankly. And that thought took me aback. Were we getting too comfortable? It would be painful to leave no matter, but the deeper we got into a relationship, the harder it would be on us both. I decided to put it out of my mind for now. I had to be around until the books were done and her stand was completed. I would just have to deal with it then.\n\nWe stopped at a big box store for paint and left with paint, a microwave, a ceiling fan, two new faucets, a new bathroom light and an ecstatic Georgia. We stopped at a drive-in where they roller-skated our burgers and fries to the car. Georgia dropped her empty milkshake cup into the trash on the way into the grocery. Most of the town knew her so we stopped to talk. She then loaded our cart so it took us numerous trips to get the car unloaded.\n\n\"Phew, I'm exhausted from bringing food and supplies before I ever get to the part about using them,\" I said laughing.\n\n\"Let's go out to the porch,\" she suggested. \"I'll grab us a couple of long necks.\"\n\nShe sat on the swing and I had my head in her lap. She chattered about ideas for her new stand while she stroked my hair and all I could think was I would never get enough of her lilting southern drawl. Her feisty sweetness. Her wicked business sense. I have gotten by for years on my own, but now I wonder how I will make it without her.\n\nWhen I woke up the next morning, Georgia was already gone to gather her vegetables. I was down to the last few piles of books. The dealers were thrilled with the collection they had received and I didn't feel the pressure anymore.\n\nI sat at my desk, opened my laptop, pulled up a blank sheet, and began typing my first book. It flowed and flowed until Georgia came home. I didn't tell her my plan yet but felt a new sense of purpose.\n\n\"Hi honey, how goes it at the stand today?\" I put my arms around her while she unloaded the vegetables she brought home for dinner.\n\nShe wiggled her ass against me. \"Not as good as this feels,\" she murmured\n\nI kissed the side of her neck and she moaned. \"Mmmm,\" I whispered as she arched her neck and ground her ass into my hardness.\n\n\"Brad, I need you now.\" She pushed her shorts down to her ankles. \"Now. I need you inside me.\"\n\nShe leaned over the counter and I pushed my pants to my knees. I ran my finger through her slick folds. She was wet. So wet. I held my cock and rubbed it up and down her pussy lips, circling the head on her clit. She moaned and rocked her hips. I positioned the head at her entrance and she pushed back, taking my cock deep in one thrust. My balls slapped her clit as we fucked. Hard and fast and hot, racing towards the edge. I held her hips and thrust into her. She groaned loud and her cunt rhythmically squeezed my cock. I followed her over the edge, locking deep inside her and filling her with hot seed.\n\nWe were both out of breath. \"Ohhhhhh Bradley,\" she breathed. \"You're so good for me.\"\n\nA quickie in the kitchen with Georgia topped my list of best ever.\n\nShe came into my office later and said, \"I'm going to make you a country boy yet... Tonight we're having chitlins for dinner!\" She looked at me a moment and doubled over laughing. \"The look on your face,\" and more peals of laughter.\n\n\"Ummm. Maybe not that much country?\"\n\nShe leaned against the door, wiping her hands on a towel. She wore her usual cutoff denim shorts, a red checkered blouse tied at her waist, and knee-high farmer's boots and she was the sexiest thing I ever laid eyes on.\n\n\"I'm making you a possum pie from the recipe my Granny used to make.\" I looked at her suspiciously. \"And fried chicken!\"\n\n\"Sounds great, honey,\" I said, not going to fall for it again.\n\n\"You're doing a lot of typing for your work job.\"\n\n\"I've always wanted to write a book and I just started it.\"\n\nA big smile lit up her face. \"Really! I reckon that you finally deserve to do something for yourself.\" She came over and gave me a kiss. \"I'll let you get back to writing while I get back to the possum for dinner.\" I watched that hot ass sashay out of the office.\n\nI wrote for several hours and decided to take a break and start installing some of the things we got at the big box store. Georgia said she wanted to paint the kitchen herself, so I left it to her.\n\nA few hours later I had both faucets installed and had to hunt her down to find out where she wanted the ceiling fan.\n\nI knocked lightly on the bathroom door. \"C'mon in, Brad Bradley Brad.\" I slowly pushed open the door and saw her up to her luscious tits in a bubble bath.\n\n\"You caught me,\" she smiled.\n\nShe had her red hair haphazardly pinned up and long strands floated in the water and clung to her wet skin. Seeing where I was looking she arched and pushed her tits above the water. They were covered in iridescent bubbles. I lightly caressed the underside of her breast under the water. She sucked in a breath through her teeth.\n\nHer eyes were closed, head back, her lips slightly parted as I continued to caress her breasts. I pinched the hard nubs and tugged them longer, which brought a moan. Her tits were buoyant in the water and I lightly bounced them with my fingers and she arched, pushing them into my hand. Her tongue flicked across her lips.\n\nI slid my fingers between her legs and her knees fell wide. I finger swirled the water around her clit. I created a tornado-like effect in the water on her clit without touching it.\n\n\"Oh my god,\" her voice heavy on her accent. \"Yessssss.\"\n\nI let my finger begin to flick across her clit in a slow tempo. She gripped the edge of the old claw foot tub as I did it faster and faster. Her body arched and stiffened as she whimpered her orgasm.\n\n\"God honey, you're so sexy,\" I whispered. Her eyes opened and she studied me for a minute.",
        "\"I think I love you, Brad Bradley Brad.\"\n\nI can't say that I have not tossed the love word around in my mind recently. I was still sorting my feelings out along with consideration of our age difference, that we lived hundreds of miles apart once I left, and I even considered not leaving but staying right here. Which brought me to would she want to continue to live with me here, like this. Would either of us want more or even less? Too much to consider to just throw an I-love-you out in reply.\n\nI leaned over and kissed her tenderly, hoping to convey my feelings. Best as I could now.\n\nWe fell into a routine, that I wrote while she was at her stand, she would come home and we would both go check on how the new building was coming along. To say this builder was slower than molasses was an understatement, but Georgia warned me upfront, so I wasn't shocked.\n\nShe was surprised to see a small washroom in the back corner of the building. I had them run water to have a sink and commode. She would spend more hours here than in her old place and couldn't close up every time she had to pee to run back to the house.\n\nEverything was now closed in enough that the building could be secured. She and I began to install some shelving and display racks ourselves after the building went home for the day. We had stock to work with and were able to space shelving appropriately.\n\nAt this point, Georgia was like a proverbial kid in a candy store. I brought two old rockers from the porch so I could either sit and watch her, or we could sit together to enjoy her accomplishments of the day.\n\nI began to slowly realize I did truly love Georgia in a way that I didn't want to leave her, or worse, have her leave me. I could not see my life without her in it. We would have to deal with any age difference issues if, or when, they would crop up.\n\nWe watched the blades lazily turn. The air moved enough that it felt like a soft caress on my skin.\n\n\"You chose the perfect spot, honey. Right over our bed.\" We held hands. \"I'd rather not change much else. Maybe when we bring our clothes here, we can use the bedroom next to the bath?\"\n\n\"Huh?\"\n\n\"I thought instead of adding a closet and storage here in the attic, we could use the bedroom-\"\n\n\"I got all that! What are you talking about bringing our clothes?\"\n\n\"When we move into the house here.\"\n\n\"What?!\" she nearly shouted. \"You're staying?\"\n\n\"We are staying right here. Together. If you want to that is. And if you wouldn't mind being married to an old man like me, I was thinking we might do that as well.\"\n\nShe nearly rolled on top of me. \"Are you proposing?\" she asked excitedly.\n\n\"Well yeah. I don't think they'd rightly think in these parts take to us living in sin.\" But I knew Aunt Birdie would be overjoyed that her house would continue to be a home.\n\n\"She-it Brad Bradley Brad, I do!\"\n\n- the end -\n\n\"I do solemnly swear to take you, Brad Bradley Brad as my lawfully wedded husband.\"\n\nThis is a Summer Lovin' contest story. Please vote for my story!"
    ],
    "authorname": "Daddysgirlfl",
    "tags": [
        "summer lovin 2021",
        "mature",
        "older man",
        "younger girl",
        "oral",
        "big breasts",
        "romance",
        "summer romance",
        "georgia summer"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/georgias-boiled-peanuts"
}