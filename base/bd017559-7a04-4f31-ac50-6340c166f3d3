{
    "title": "Under The Right Moon Ch. 02-03",
    "pages": [
        "Chapter 2\n\nHope stared at herself in the mirror above the bathroom sink, trying to tell if something, or someone, had taken over her body. She splashed cold water onto her face and stared into her own blue eyes. Please tell me I didn't just have sex with my NEW boss, she thought. Her body twitched at the memory of Gavin inside her body. She gripped the sink as the flashback ripped through her body, spasming as if she was climaxing all over again. She fought against the urge to slip a hand under her dress and touch her already throbbing clit. She was dismayed at her reaction to the sex they had just had. Sure it had been good...ok, great, but she had never responded this way before. She was on the verge of rushing back into his office and asking him, no begging him to fuck her again.\n\nAnd oh my goodness, there was that word again. FUCK. She had never used it to describe intercourse, it was either sex or making love, though for her it had never been the latter. But she had uttered those words while Gavin and her had been together, and somehow she felt more empowered for it, not to mention she had loved the reaction she had gotten from Gavin. It had been like he had been waiting for her permission. \n\nShe stared harder at her reflection. Her blond hair, which she normally kept either in a high ponytail or in a bun, hang loosely down her back. Her blue eyes seemed darker than normal, with a hint of wild eagerness to them. And her pale skin seemed to glow with a hint of a pink blush. I've never looked more feral, more alive and my god I want more. Hope fluffed out her hair, turned on her heels and went in search of the man that had seemed to kindle a desire deep inside of her. \n\nGavin was a fucking coward. While Hope had been freshening up in the employees wash room, he had quickly dressed and headed out the door. The thought that kept going through his head was, WHAT HAD HE JUST DONE! She was his assistant, for god sake. But if he was truly being honest with himself, he wasn't feeling guilty about it at all, no it was the exact opposite in fact. It had been very hard not to take her again, to stay inside of her until he was exhausted from it. That's the reason he had scrambled out of his office, he had Hope so far into his brain that he thought it was much safer where he was headed. \n\nGavin turned off the highway that lead into the Sierra Nevada mountain range. The Viper threw gravel as it sped down the one lane road. Lucas Friar's mansion was nestled against the Sierra's tree line. The property was isolated, which was a good thing considering that one night a month a hundred and fifty, give or take depending on who showed up, werewolves descended on the land to hunt and party. This was only Gavin's fourth time here, after he had been able to control himself during the change every full moon he had choose to hunt on his own. Gavin wasn't a big team player, and he didn't like his \"king\" one bit.\n\nLucas was standing out on the driveway, he eyed the red Dodge Viper with contempt. He didn't believe in driving a flashy set of wheels, not when it made more since to drive something that could handle the terrain. Gavin unfolded his body from the car and tried very hard not to glare at the man he was offering his hand to. \n\n\"Lucas.\" He did his best to make that one word as neutral as possible. \n\n\"Gavin, it has been a while since you've graced us with your presence at on of our get-togethers. Welcome.\"\n\n\"Thank you. Toby called me this morning to inform me that your taking a queen.\"\n\nGavin followed Lucas towards the house, waiting for his response. This queen business baffled him. Lucas didn't believe in sharing his power, and he sure as hell didn't trust anyone to have control over his pack. \"Her name is Sasha Black.\"\n\nGavin waited for Lucas to say more but it seemed that his king was more interested in moving through the mansion towards the backyard. The house was packed with, well, pack members. He wondered if everyone was here, had they too all dropped what they were doing and came at the command of their leader. Of course, Gavin hadn't come because of the order but because he had been running away from a petite young blond that he probably could have easily bench pressed and never have broken a sweat. \n\nGavin spotted Toby out of the corner of his eye. His younger brother was moving solidly through the crowd towards him, his long brown hair dangling in his eyes. Toby's normal big dopey grin made Gavin happy to see his brother. They hugged warmly.\n\n\"How's it going brother?\" Toby asked.\n\n\"Not bad, and yourself?\"\n\n\"Good, good. So have you seen her yet?\"\n\n\"Seen who? Lucas's new queen?\"\n\n\"Oh, yeah. She's beautiful and, get this shit, human.\"\n\nGavin stared at Toby, \"Human?\"\n\nToby's eyes glittered with the information. \"Yeah. Lucas is claiming to have received a dream from Odin telling him that this Sasha chick is suppose to be the savior of our clan. That she'll bring happiness and strength to us. She's agreed to be his queen and to let him infect her.\"\n\n\"Get the fuck out! She's agreed to let Lucas just infect her with the lycanthrope disease, is she fucking crazy?\" Gavin's head was spinning. Why in the hell would anyone agree to let them selves be turned into a monster? He, himself, hated what he was, hated being a beast and having to let the moon dictate to his life.\n\n\"I've heard a few others talk about her. Evidently she doesn't see it as a horrific thing. She doesn't think monster, or evil.\" \n\n\"Wait till her first full moon and then we'll see her sing a different tune.\"\n\n\"You think so, Gavin?\" Came a husky female voice from behind him. He had been so caught up with his conversation with Toby he hadn't felt or smelled her approach. \n\nGavin had forgotten how beautiful Lisa Friar was. She had long brown hair that fell to the middle of her back in a silky curtain. Her brown eyes always held a hint of defiance and mischief, something he had learned quick to stay away from. Lisa was Lucas's second oldest child, he had three and they were all pack members, all turned on the same night. She inched her long, thin muscular body towards him. She was a dancer, knew how to move her body to flaunt it, and was quick to use it against you. They had been lovers for a short period of time, a very short period of time. Lisa grew bored quickly with her playmates.\n\nShe slide her body into his, rubbing against him seductively. Or at least what she assumed was seductively, but somehow Gavin's mind snapped to the petite and classy Hope Mathews. She wouldn't have had to work so hard at it. With the thought of Hope in his mind, he didn't even have to worry about Lisa trying to drag him back into her world of sex and pain. Gavin stepped back from her. He felt Toby straighten beside him and knew what his little brother was thinking. It wasn't a good thing to piss off an alpha female, especially one who's daddy could make your life a living hell. \n\nGavin said, \"You think differently, I take it.\"\n\n\"She talked three of our newest shifters through their first transformation, that is impressive. \" Lisa's hands played at the hem of her leopard printed mini skirt, not a nervous habit but a way to draw attention to herself.\n\n\"True, but that still doesn't mean she can handle being one herself.\"\n\n\"My father's vision say different. Odin himself sent a dream to my father that pictured Sasha saving our clan.\"\n\n\"Saving us from what?\" Toby asked.\n\n\"The way he made it sound, from ourselves. She will help him to restore our name as a respected pack and to bring happiness to our kin.\"\n\n\"And because your father dreamt it, than it must be true.\" Gavin responded sarcastically.\n\nOnce again he felt Toby's eyes try to warn him, but for some reason Gavin was looking for a confrontation with Lisa. He wanted to push her buttons until she did something stupid. She weighed about half of what he did and stood almost seven inches shorter than him, but that had nothing to do with the otherworldly strength that he knew she possessed. His height and weight gave him an advantage only. Plus, he didn't want an all out brawl with Lisa, he was looking to try and humiliate her and he had the perfect plan for the dominate top in front of him.\n\n\"Are you speaking bad about your king, Gavin?\" She took a step towards him, her skin shimmering with anger. \n\nGavin flashed her a nasty smile. He could feel her power lashing out from her aura, and it triggered his own magic. His beast moved under his skin, ready for the clash. He circled Lisa, her head rotating so that her eyes never left his. \"I have no love lose for our king and I'm not much in believing that some Norse god gives a crap about a bunch of werewolves.\"\n\nA snarl escaped between her clinched lips. Her body vibrated as she tried to hold herself together. \"You aren't here to express you opinions on anything. You're here because your KING\" and she practically screamed the word, \"told you to come, and like a good boy you did. You've distanced yourself away, Gavin, and it seems to me that you have forgotten some of the things that I once taught you about respect for the dominates that rule your life. Maybe you need a refresher course.\"\n\nGavin gave a bark of laughter, as he felt his beast try to climb to the surface. He was still circling her and out of the corner of his eyes he caught the image of a woman he didn't recognize. She was in her late twenties with long blackish brown hair. She stood watching them with interest, of course everyone else in the room was too. But something about the way she held herself, from the almost pleasant smile that carved her dark red lips, gave Gavin the impression that she was enjoying watching Lisa lose her cool. Standing with her were the kings of the other five werewolf clans in the territory, they did not seem so impressed. Gavin quickly looked around for Lucas but couldn't see, smell or sense him in the near vicinity.\n\n\"How dare you laugh at me. I'm the third most powerful lycan in our clan, you think you'd remember that and show me more respect.\"\n\n\"You are only that high in the rankings because your daddy's little girl and you've made most of us afraid of you, not because you actually deserve to be in that position. And as for your \"refresher course\", you respect nobody and you of all people shouldn't be playing dominate.\"\n\nHer hand snaked out to slap him, but he was quicker and dodged. She turned on him coming with the liquid speed that all shape shifters seemed to posses. Lisa took another swat at him, her hands more like claws as the swiped across his face. Gavin could feel where she sliced him, the blood starting to trickle down his check. He maneuvered her roughly, grabbing her by the arm and tossing her against the nearest wall. Before she could rebound he wedged her body between his and the wall. \n\nHer breathing was harsh, and a growl of warning rumbled deep within her chest. \"Let go of me, Gavin. Now!\" She didn't scream the words but the threat was still embedded in them. \n\n\"You know what you need to learn, Lisa? You need to learn a little humility.\"\n\n\"Humility?\"\n\n\"You know most of us are tired of watching you prance around thinking your better than the rest of us. Thinking just because your father is king that you don't have to show others respect, flaunting your body and forgetting how to use your brain. So, fine, if you want to show off your body, if you want to continue using it as a torture device for some of our most submissive kin, I think I can help you out.\"\n\n\"What, Gavin? What are you going to do? Do you think your dominate enough to bring me to me knees?\" Lisa's words were laced heavily with sarcasm. \n\nThough the hostility between them was high, Gavin still felt Lisa's body respond as he roughly moved her skirt up around her hips. Lisa's laugh was high and taunting, \"Oh? Please don't tell me your going to fuck me? How is that going to teach me humility? You think I give a damn if others are watching?\"\n\n\"Trust me, I remember how much you like to be watched. And I also remember that you like to be in charge. A true sadistic dominate how believes in torturing and embarrassing her partner.\" As he was talking Gavin kicked Lisa's legs apart, the palm of his hand slipping to rest against the V-of her open thighs. \n\nLisa relaxed against the wall, sliding her groin against his hand, she wasn't wearing any panties and she was soaked already from the little bit of rough play that he had given her. \"Are we going to play Gavin?\" She breathed just as he flicked his finger across her clit. Lisa bucked against him, her ass fitting against his pelvis. She rubbed into him causing his hand to stroke against her opening.\n\n\"Nope, your going to give our visiting rulers a little show, and I'm going to merely be the puppet master.\"\n\nLisa's head snapped up, like she had forgotten that it wasn't just their clansmen in the room. Gavin pushed her tighter against the wall, as she started to struggle against him. Her body ran high with anxiety as she whispered, \"My father will be pissed.\" \n\n\"Oh, most diffidently. But, who will he be angrier at? The third most powerful in his pack or a lowly insignificant wolf. Guess who my money's on?\" \n\n\"I'm going to hurt you.\" She said the words as if she were speaking about going shopping, it was just that simple, if Gavin let her up now she was going to do some damage. However, if he kept her pinned and could use her own body against her, and from having been her lover he knew exactly what buttons to push, she would have to acknowledge him as dominate. Honestly he could care less about it, he wasn't one to play those kind of games, but it would put Lisa in her place and that was what he was after. \n\nLisa slammed her head back into his chest, if he had been shorter she would have connected with his own noggin and then she might have done some pain, but luckily for his height she barely bruised him. He wrestled her firmly against the wall, bringing her hands up above her head so that he could hold them with one of his. She snarled at him, the sound of a trapped beast just as he started to feel her skin crawl with magic. It shimmered against her flesh as she began to call her beast.\n\nHe hit his knee straight up into the middle of her back, knocking the wind from her and said, \"If you change, Lisa, I'll challenge you right here and now to your position in this pack. Trust me when I say I don't want it, but just to see you lose it, just to see you finally get what's coming to you, I will do it. You've never seen me fight but you can ask my brother, he'll vouch for how ruthless I've been known to get. If you want to keep that pretty title as third than don't shift, take this small embarrassment and maybe, just maybe it will make you a better person. Or, maybe your so gone in the head it wont do shit but cause a little strife between your father and you.\"\n\nLisa's body stopped shaking, Gavin could still feel her powers laying across her skin as she thought about what he had said. \"You would challenge me even though you don't want my rank?\"\n\n\"Yes I would.\"\n\n\"And you think you could beat me?\"\n\nIt wasn't Gavin but Toby that answered. \"Listen to the truth in my words Lisa, I swear it on my life that Gavin could easily take you.\"\n\nHer breathing was harsh but he felt her let go of her magic. \"Do what your going to do than, and get it over with. But, and here the truth in my words, what you've just started here will far be from over when your finished.\"\n\n\"Fair enough.\" He said, as he slipped his free hand back between her legs. She was still moist as he ran his finger over her clit, but unlike before, her body this time didn't respond. He pulled back from her and laid a very gentle kiss against her temple.\n\nShe turned to face him, confusion etched across her face. \"What?\"\n\n\"Oh, I'm done with you.\" Gavin said as he wiped her wetness on his jeans.\n\n\"WHAT!?\" She screamed rushing towards him.\n\n\"What? I had my fun with you, now I'm finished.\"\n\n\"That's all?\"\n\n\"Well, of course. What else did you think was going to happen? I don't do forced sex, you would think you would have remembered that. Nope, my plan was small and simple. I blatantly tested your authority, even allowed you to have challenge over me to prove yourself but you choose to take humiliation. What kind of message does that send out to the rest of our pack?\"\n\nBut it wasn't Lisa that answered. \"It says to our kin that what's a little shame or disgrace as long as you don't have to battle for your title. It says that those in higher ranking have no real idea what it means to hold that position, that it is merely a status and not a way of life. It says to the other clans in this territory that we don't have to hold true to the belief system that was set before us hundreds of years ago, we'll just make it up as we go along.\" The woman that Gavin had noticed earlier was no longer standing with the five territorial leaders, she was walking their way. He caught a whiff of her perfume, something light and flowery, and the underlying scent that identified her as a human.\n\nShe walked with confidence towards them, her head held high as she passed between close to a hundred werewolves. They parted for her, their future queen, and on the faces of those closest to him he saw a mixture of awe and hatred. She continued saying, \"You were looking to humble her and yet, I have the feeling that she truly doesn't understand what has just happened. You used logic, good logic I might add, that by making her willingly accept defeat that she would be ashamed of herself. However, by the look on her face, I'd say your time and efforts were just wasted.\" She sighed heavily.\n\n\"At least it wasn't lost on everyone.\" Gavin said.\n\n\"So true, and sometimes that's just as well.\" She turned towards him and offered her hand, \"Sasha Black and I'm not sure if I caught your name.\"\n\n\"Gavin Thompson, ma'am.\" He began to drop to his knees, to show her the respect that should be given her but her hands on his chest stopped him.\n\n\"That's not necessary today, Gavin. Today I'm merely being introduced.\" She addressed the rest of the room, \"Today is a day of greeting, to familiarize myself with your faces and names. Today is a party, so please, everyone, go back to enjoying yourself.\" She tucked her arm through his own and started moving them away from Lisa, who was still standing slack jawed and confused. \n\nThe party around them began to start again. Silence was replaced by rapid talking and slight laughter. Sasha ambled slowly but surely through the crowd, acknowledging those that nodded her way. Once they were outside on the back veranda, she said, \"You know what I would have done?\"\n\nGavin leaned against the railing and asked, \"What?\"\n\n\"Instead of wiping your hand off on your pants I would have smeared it across her face.\"\n\nGavin gave a sharp choke of laughter, \"Not exactly what I thought you were going to say. Figured you would have told me how stupid I was for not making it a true challenge and taking the position away from her.\"\n\n\"I'm assuming what you said was true, that you don't want to be in the ranks.\"\n\nGavin shook his head, \"I don't. I've never been much for team playing.\"\n\n\"That's a shame, I could use a couple of good men and women on my team.\" She turned towards him, her eyes the color of emeralds, and shining brightly with enjoyment. \"So you and Lisa were once lovers?\"\n\n\"Sad but true.\"\n\nShe tilted her head to the side and study him for a moment. Her next words shocked the hell out of him, \"So than tell me who has your heart now and is she here?\"\n\nGavin took a step back, \"Are you coming on to me?\"\n\nSasha burst out laughing, \"Umm, no. It's just that something about you says taken and I was just wondering if that lucky person was here.\"\n\nGavin's first thoughts went to Hope Mathews but he quickly shook the idea from his head, \"Nope, there's nobody.\"",
        "\"Hmm, interesting. The vibe I'm getting is mated.\"\n\n\"The vibe your getting?\"\n\n\"Oops, sorry. I get these feelings sometimes about people when it comes to their soul mates. Maybe you've just met her?\" \n\nShe said it like it was a question which somehow got Gavin talking about Hope. He told Sasha everything from their encounter in the elevator to the awesome sex.\n\nBy the time he was done, which didn't take that long cause he had only known her a few short hours, Sasha was nodding her head in complete understanding. \"Well, of course you nailed it with the electric shock, it was fate.\"\n\n\"I don't believe in that shit.\"\n\n\"Whether you believe it or not doesn't make it any less true. You felt the connection now go back and find out how she feels.\"\n\nGavin stared at her for a few moments than said, \"What the fuck.\" He kissed Sasha quickly on the check and took off for his car. \n\n\n\nChapter 3\n\nHope Mathews sat on the edge of her bath tub, waiting for the hot, rising water. She swirled her hand through the perfumed bubbles thinking about the day that had started so promising and had ended completely confusing. Questions kept popping into her mind. What had happened to Gavin? Was he embarrassed or sickened by the fact that they had had sex? Was she either of those things? Did she still have a job? Believe it or not it wasn't the last that she was truly worried about, even though it had taken her forever to find this job. Mostly she just wanted to hear Gavin's side of it, to know why he had taken off.\n\nShe was just about to disrobe when a loud knock came at the front door. Unhappy at being disrupted, Hope trudged through the living room to answer the still hammering fist. She threw the door open with a demanding, \"What!\"\n\nGavin stood looking ruffled and unsure. Part of her wanted to throw her arms around his neck and drag him into her apartment, but another part wanted to slam the door in his handsome face. So she stood with her back straight, staring at him with as much disapproval as possible even though her traitorous little heart was beating frantically with happiness at seeing him.\n\nThe sight of Hope standing in the doorway in a fuzzy light blue bathrobe nearly stole the breath right out of Gavin's chest. He could smell the rose and vanilla bath oils whiffing down the hall with the roar of the bathwater cascading into the tub. Hope's blue eyes held a bit of mistrust that broke a bit of his heart. Damn, had he fallen so completely for her in the matter of a day? She nibbled slightly at her lower lip but her chin was held high and taunt, she wasn't just going to roll over and accept some casual \"I'm sorry\". Nope, not this one, Hope deserved better than that and she knew it.\n\nHowever, Gavin was unsure of where to start so he opened with, \"Are you going to over fill the tub?\"\n\nThat had not been the sentence that Hope had been expecting so it took a second for his words to register. She cursed loudly and ran down the hall, her blond hair swinging. Gavin moved after her, even though he hadn't been invited in. He was to worried that she would just simply slam the door in his face before he got the chance to really apologize for his rudeness. She leaned over the bath to turn off the running water and the need to slip her robe from her body so that Gavin could run his hands over her tight ass was so strong that he started to step forward to do exactly that.\n\nHe grunted and moved to the sink. He could see her watching him in the mirror so he closed his eyes and gripped the porcelain as hard as he could without busting through it. Her breathing was shallow and the sound of her heartbeat gave him a focusing point. He listened to the rhythm of her body and started his apology.\n\n\"I was a coward and a jerk,\" he began, to which she snorted at. \"I can't believe that I choose such a lowly road as to have ran out on you this afternoon like that. All I can truly give you is an I'm sorry and a shabby explanation as to why.\"\n\n\"So give it than.\"\n\n\"I felt it was a lot safer for both of us if I left the office at that time. I have never felt anyone like you before.\" Gavin growled at his choice of words but unfortunately that was exactly what he meant. \"From the moment you first spoke to me on the elevator something has tethered me to you. I knew that I wanted you badly, and I feel like a monster for having just used you like I did.\"\n\n\"You used me?\" Hope asked, quietly.\n\n\"I was upset and needed a distraction, isn't that how you feel? That I used you? But you see, that wasn't it at all. You were standing there and I could sense your body and I could smell your perfume and all I wanted was you. All I could feel was your presence. Just like now, it's driving me crazy not to turn around and take you. So this morning I ran, because I was afraid of what it meant.\"\n\nHope's heart leaped, she had had the almost exact reaction to him. But was it truth, was the words he was using real or what he just thought she wanted to hear? \n\nAs if inside her head he continued, \"You don't have to believe me right now, but all I'm asking is that you give me the chance to prove that I'm not some Don Juan trying to trick you. Just give me an opening to show that I need to be in your life, desperately.\" He felt her move, her body heat approaching closer to him and so he dared to open his eyes.\n\nShe stood just over his right shoulder, her eyes filled with compassion. He caught her eyes in the mirror and said the words she deserved to hear, \"I am so sorry.\"\n\nAnd Hope believed him, his green eyes said it all right in that moment. She laid her hand on his shoulder and gave him a small reassuring smile. He straightened up and she moved into his arms, her head resting against his chest while his ducked to lay atop hers. They stayed locked together, each listening to the others breathing, both wanting so much more than the small touch they were sharing. \n\nEven though Gavin could sense, smell and almost taste Hope's body reacting to his he was unsure of how to proceed. It took her tiny hands kneading at his back to lift his head and look deeply into her eyes. She moved up onto her tiptoes to place her lips softly against his. Gavin moaned as he ravished her mouth with his own. His need and desire for her was more than he could understand, no woman had ever made him feel like this. He gathered her into his arms and backed her towards the wall, pinning her with his body as his hand sought and found the soft lips between her legs. \n\nHope sighed as she spread her legs to his probing hand and fingers. He brushed gently over her already throbbing clit and she jerked and dug her nails into the material of his shirt. He worked her softly as she panted and moved to the rhythm of his hand. Gavin lowered his mouth to her ear and nibbled it, his breath hot against her lobe as he whispered, \"I want you on a bed this time.\"\n\nHope whimpered and gently pushed Gavin away from her body. She could feel her skin warm with desire as she brazenly slipped the bathrobe from her shoulders and let it fall to the floor. Gavin's eyes flared while they took in her naked form, he was so hard he could barely stand it. Hope turned from him and sauntered slowly down the hall to her bedroom. In her head she felt that she should be timid and shy but nowhere in her heart and body were those characteristics. Never had she been so wanton and forward, but something about Gavin gave her the confidence to be unabashed about her sexuality. \n\nHope stopped just inside the doorway and waited for Gavin to move up behind her. She faced him, her hands going to rest on his chest as she maneuvered them so that Gavin now had his back towards the bed. His breathing was shallow as Hope licked up his neck, his hands gripping her ass tightly, pulling her snuggly against the front of his jeans were his erection demanded to be released from its prison. Her tiny hands slide over his body as she moved him backwards, slipping over his chest, arms and ass until she found herself massaging his hardness through the material of his pants. Gavin groaned desperately. \n\n\"Your killing me,\" he whispered.\n\nHope gave a low, sultry laugh. \"Oh? And I've only just begun.\" She pushed him firmly so that he fell onto the bed. She straddled his hips, grinding her pelvis onto his own. His hands came up to cup her breasts as she mimicked the act that he so badly needed to do. She gyrated against him, arching her back and he sighed her name and a please. Hope leaned forward letting her breasts sway into his face as she asked him, \"Please what, Gavin?\"\n\nHe didn't respond just stared deeply into her eyes, letting her see the nefarious thoughts that were running rampage through his sex induced mind. She slide down his body until her chin was resting on his bellybutton, she moved his shirt up and flicked her tongue across his stomach. Her fingers nimbly undid his jean's button and zipper, Gavin's hips came up so that she could pull the pants from his body. He wasn't wearing any underwear and his hard cock nestled against the crease of his left hip. \n\nHope positioned herself between his thighs and slowly lifted him towards her mouth. Gavin watched with anticipation carved against his handsome face. She licked just the tip of him, tasting the saltiness of how badly he wanted her. Hope took him completely into her mouth and rolled her tongue around him, getting use to his size and length. She sucked and licked, sliding her teeth around him, teasing and tormenting him. She found a slow, steady rhythm that made him moan and whisper her name. Hope cupped his balls gently and sped up her mouth around his cock, Gavin's hips moving to her mouth as he gripped the sheets. His moans increased as his hips sought a faster rhythm. Hope opened wider and let him do all of the work as he fucked her mouth. Oh gods, pleases and her name fell from his lips until he tore himself away from her, turning onto his side so that he could try and reclaim his composure. Gavin had been so close to losing control, to finishing it all right there between her lush lips. \n\nHe could feel Hope's eyes watching him, still feel her mouth wrapped around his cock, he was losing his self control. He needed her too badly to be gentle and soft, Gavin would give all of that to her in time but right now he was to far gone for niceties. He let a little of his otherworldly magic slip from his aura as he swiftly rolled over her, pinning her soft yet ample body beneath his. Hope's eyes widen a bit, and Gavin could have sworn that he felt her own aura respond to his power. He wasn't ready to share his beast with her yet, no way on that one, but he wasn't human and he enjoyed his sex with a different kind of spice, so to speak. Adding magic and the threat of pain did it for him.\n\nWith Hope beneath him, Gavin buried his teeth into her neck, being careful not to break the skin. She responded like he had hoped, her body arching off the mattress, her nails clawing at his arms and back. Her legs encompassed his waist, pulling him closer to her. She breathed his name and he opened that part of him that he kept hidden away a bit more. The lycanthropy disease didn't just come with the ability to shift forms, it held a magic, a vibe that resounded through the body. He felt it when it hit Hope's aura, but instead of bouncing off, instead of her aura protecting her from it, it was absorbed. \n\n\"What was that?\" She asked. He noted that she didn't seem afraid of it, but curious.\n\nHe couldn't afford to drop to much of his shield but he allowed more to slip through and into her. Hope closed her eyes and sighed, whatever Gavin was doing she liked it. Something warm seemed to vibrate out of his being, it strangely felt alive, like a separate entity. Whatever it was, it didn't frighten her, on the other hand, it was almost like it knew her and liked her. Gavin watched her, she smiled and wiggled under him. She was enjoying the magic play and that, for Gavin, was another point on her side. He shifted above her, her eyes still closed, and slide deeply into her opening.\n\nNever in Hope's life had she felt so completely taken by another being. If this was love, than damn it, it had her. She meet his rhythm, the feeling of him embedded inside of her driving her crazy. The climax hit her, one minute she was meeting his thrusts and the next she was shrieking, thrashing under him, grasping to hold him tightly. Gavin's movements became deeper, harder, faster. His breathing was short and she could feel his body shake with the upcoming orgasm. The thought of him spilling hot and deep inside of her made Hope cry out in ecstasy. She tightened her inner muscles around him, gripping him harder every time he slide back in.\n\nGavin could feel how close he was, could feel Hope clinch herself around him. He needed to be with her, like this, it was a need so desperate that he thought his heart was going to burst from it. He slammed inside of her, aware that he was hitting the end of her and trying hard not to do any serious damage. However, there wasn't any stopping him, he was to close to coming. His smooth rhythm was replaced with short thrusts until he doubled over her, entrenched so far into her as he came hard.\n\nGavin rolled onto his back, dragging Hope with him so that she was pulled half atop him. Hope threw a leg over his and softly ran a finger over his semi-hard penis. Gavin shook uncontrollably, her touch sending ripples of pleasure through his body. He took her hand off of him and brought it to his lips, kissing her fingers tenderly. The touch was to much so close after orgasm that it bordered pain. She lay with her head on his shoulder, the last thing she remembered for the night was his breathing as sleep claimed her.  "
    ],
    "authorname": "trueunseelie",
    "tags": [
        "supernatural",
        "werewolves"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/under-the-right-moon-ch-02-03"
}