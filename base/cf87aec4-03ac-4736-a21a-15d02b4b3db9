{
    "title": "Little Packages Ch. 08",
    "pages": [
        "This took longer than expected and for regular readers my apologies. Sometimes the words come out easy, sometimes you have to drag them out. The latter is what happened here, although I hope what was dragged out is still fun.\n\nDue to a much-needed and long overdue vacation (I have both shots and being careful, I promise), there may be a delay in Chapter 9. I'm bringing something to write on so I'll get some done, I just can't promise 20,000 words in four weeks. Look for Chapter 9 close to the end of August.\n\nThank you for reading, as always. And if you can spare a kind word or a kind vote after reading and it's to your liking, that's always appreciated.\n\n******************\n\n(Mid-October)\n\nKitten\n\nI looked at the two pieces of luggage I had, and then the mountain of crap I had to fit into those two pieces of luggage and made a sound that was partway between a sigh and a snarl.\n\nOn this particular Monday evening, the spectators for this display in frustration and masochism all had different reactions. Gillian ignored me as she was focused on her computer and trying to get some classwork done. Soo-Ah was agitated because she wanted to help, but I told her I was fine an hour ago.\n\nThings had managed to get less packed during that hour.\n\nThe third person sighed, looked up from his phone and gave me one of his patented \"Are you being a silly little girl?\" looks. Daddy was right; I was a silly little girl, but I was also a stubborn one. I hated having to pack in an organized way. Normally I tossed clothes in a suitcase. Daddy was horrified how I packed for our trip to Florida, but I got everything home, so obviously I knew what I was doing. When I went to New York last year I travelled by bus and had more space. I also had fewer and simpler costumes.\n\nBut this was different. I was bringing regular clothes and trying to fit bits and pieces of weirdly shaped cosplay into the suitcase. I was packing six costumes that had corsets, a sword, a lightsaber, vegan leather, boots, multiple capes, and other odds and ends. Daddy considered six costumes over four days lunacy, but he'd given up arguing with me on it.\n\n\"Let Soo help,\" he said from the living room, not looking up from his phone.\n\n\"I'm fine,\" I said in a voice that indicated that I was not, in fact, fine. I could see Soo hovering at the edge of the door, desperately wanting to help.\n\n\"There are limits to even what your stubbornness can accomplish,\" he said, which produced a snort from Gillian. \"You need a fresh set of eyes. Let her have a crack at it and we'll go get some food for everyone.\"\n\nThat got Soo and Gillian's attention. Everyone has been so wrapped up in the drama of watching me pack that supper hour had slipped past.\n\n\"Thai food?\" Gillian asked hopefully.\n\nDaddy laughed. \"Sure, I assume you have a spot?\"\n\nSoo ran to get her phone and offered to call since they knew our order. My drama worked up everyone's appetite.\n\nI stared at the rubble and idly kicked a boot. I was frustrated, but I knew some of that was hunger at this point. Plus, I hated having Soo bailing me out, but if there was something she was bad at, I hadn't found it in the last six weeks. However, she was so incredibly nice it was impossible to resent her for it.\n\n\"Coming, Kitten?\" Daddy asked. He already had his jacket and shoes on and was leaning on his cane waiting for me. I sighed, stomped over to the door, rammed my feet into some flats, and threw on a coat. I was getting ready to march out the door when Daddy gave me a look that indicated I was being an ungrateful brat. I lowered my head and turned around.\n\n\"Soo? Seriously, thank you.\"\n\n\"No worries. Food will make us even,\" she said, smiling and heading towards my disaster area.\n\n\"Better,\" he said as the door closed behind us. I felt mortified I behaved so poorly.\n\nWe left the apartment and headed towards the elevator. This place was a lot nicer than our apartment last year. It wasn't a luxury condo or anything, but it was safer, there was less vermin, and Daddy enjoyed the elevator as didn't have to walk up a bunch of stairs.\n\nThe walls were thin, so we heard everything the neighbours were doing, but that was a small price to pay. It's also why God invented noise-cancelling headphones.\n\nWe were walking outside in the cool October air. The leaves had turned and there was a satisfying crunch as we walked. It was about a 10-minute walk to the restaurant, so it was a good time to clear my head. Daddy had a firm grip on my hand. It didn't hurt, but he was also letting me know that we were walking and he was in charge.\n\n\"I'm ok, Daddy,\" I said in a small voice.\n\n\"You sure?\"\n\nI nodded. His grip on my hand relaxed a bit. I pulled it away and then wrapped myself around his arm. He kissed the top of my head.\n\n\"Sorry I'm being brattier than normal,\" I said.\n\n\"New York is supposed to be fun, Kitten. I thought you'd be excited to go to a con, get to see some of the city, and celebrate our anniversary. But you've been....\"\n\n\"Stressed?\" I added.\n\nHe nodded. \"Are you ok? Seriously?\"\n\n\"I am, it's just a lot going on. I mean, I knew things were going to ramp up in the second year, but they've piled on faster than I thought,\" I said.\n\n\"But you're managing ok? Is there anything I can do?\"\n\nSuch a good Daddy.\n\n\"Just keep being you. I'd be out of my mind without you at this point,\" I said.\n\nAfter our usual weekend together he came up to Montreal to spend a few days with me before our New York trip. There was no worry about upsetting the roommates; Gillian and Soo both loved him and were angling for an invite back to our...well, his, house. The woods, sauna and jacuzzi were major selling points. After Soo's latest rescue it was going to be hard to say no to them staying for a few days during mid-term break.\n\nDaddy was meeting me after class tomorrow and from there we were going straight to the airport so we could have all Wednesday before the con to see some of the city. He had everything planned including \"a show\" Wednesday evening, although he wasn't telling me which one. I was one spoiled little girl, but he liked doing it.\n\n\"I just feel a little bad seeing you stressed out,\" he said, snapping me back to reality.\n\nI rolled my eyes. \"Daddy, this is 100% self-inflicted. It's not like this comic con snuck up on me.\"\n\nIt hadn't but last month I realized I hated how all my costumes looked on me. Courtesy of Daddy trying to turn me into a cow last summer, I put on weight. I wasn't going to tell him it was a problem because I know he worries. Plus, I think he likes the extra weight on me, which was a whole other thing I wasn't going to deal with right now.\n\nBut it was a big deal to me because none of my costumes fit right anymore. I'm normally tiny and wearing tight-fitting costumes. Now everything was too snug or bulged in the wrong places. It was maddening.\n\nThis led to some frantic redesigning over the last six weeks. Altering some of the older costumes, making new ones, and dealing with everything that had gone on since the start of school, meant I'd been very stressed. Also, because I was taking most of the week off school, I let some of my profs know. Since I was going to a comic con in New York, which has lots of TV and movie people in attendance, most were cool with it. But they wanted to see what I was wearing, and then offered suggestions. That meant more work.\n\nSo a lot was happening. I love my Daddy, but because he's also a fixer he wants to help. But this is school and I have to get through it. I love being his little girl, and I would try and get as much of that time as I could. But for the rest of the time, and for the times when he wasn't around, I was going to have to learn how to deal with things.\n\nThat included learning to pack properly.\n\n\"Ok, well, I'm here to help,\" he said.\n\n\"Of course you are, Daddy,\" I said, and stopped. He looked at me puzzled for a second and then I leaned up on my toes and kissed him. Being short could be a pain in the ass sometimes, but I never got tired of getting on my toes to kiss him. It was a small Little moment that made me happy.\n\n\"You're a good girl, Kitten,\" he said. \"Don't forget that, no matter how hard school gets.\"\n\nThat at least put a smile on my face.\n\nWe eventually got back to the apartment with a ton of food and when I walked in I discovered two packed suitcases next to the door. I looked stunned for a moment and then saw Gillian and Soo recording the moment on their phones. I reached down and lifted one of the bags; it wasn't empty.\n\n\"Not filled with rocks, we promise,\" Gillian said.\n\nDaddy squeezed by, glanced at the bags, glanced at me, and then looked at Gillian and Soo and cracked up.\n\n\"Well, I can't say you didn't earn this,\" he said, placing the food on the table.\n\nI was still poking at the bags.\n\n\"Do not open them,\" Daddy said, knowing where this was going. \"Walk around your room and if you see anything not packed, we'll throw it in mine. But do not open them and start pulling things out to see if Soo remembered to pack a shoe or something.\"\n\n\"How?\" I finally asked. \"We were gone less than 30 minutes.\"\n\nSoo beamed and Gillian gave her a hug and a kiss. I didn't understand how the relationship worked when I first met Soo but watching them together, it was unquestionable that it did. Gillian was spending less time online and was less bitchy. Soo absorbed praise and kindness like she was a thirsty camel. She never spoke about it, but I had the feeling that her parents were not the most receptive towards her being gay.\n\n\"My girl has some serious skills,\" Gillian said.\n\nI didn't want to insult Soo by doing a doublecheck of my room in front of her so I sat at the table and started opening up takeout bags.\n\n\"Seriously, Soo. You're a lifesaver. Thank you.\"\n\n\"You're welcome, Kit.\"\n\nWell, that was one less thing to worry about. Maybe I could finally start to relax and get ready for my weekend in New York.\n\n***\n\nLater that night that idea was out the window. I was tossing in bed and couldn't sleep because my brain was spinning: Was I nuts for skipping this much school time when everything was piling on? Did Soo remember to pack my belt that I needed to go with that outfit? Was Daddy getting pissed off with how I'd been behaving lately?\n\nI flipped onto my side and glanced at my phone. It was two in the morning. I hated my brain sometimes.\n\nThen I felt Daddy shift in the bed. Unlike his house, I had a Queen-sized bed, so it was a tighter fit and easier to wake up the other person. I was about to apologize when I felt his arm slide underneath my body and he gently laid his hand around my throat. His other hand went and began stroking my nipples.\n\n\"Shhhh, little girl,\" he said in a soft voice.\n\nThe move had the simultaneous effect of slowing down my brain and igniting the rest of my body.\n\n\"Daddy,\" I whispered urgently, \"They'll hear...\"\n\nGillian, Soo and I worked out an arrangement when it came to sex. Because the walls were so thin it was easy to hear everything. I was gone three nights of the week, which left them lots of time to fuck when I wasn't around. The other four days were \"In Case of Emergency\" days; you could fuck, but only if things were desperate.\n\nDaddy and I had only done it once here; Gillian and Soo about a half dozen times, so they owed me a few emergencies. Still, I was nervous because I was loud and said....things.\n\n\"Be a good girl and listen to your Daddy,\" he whispered in my ear, and that took care of any resistance I might have had left. I was a good girl. I was going to obey my Daddy.\n\nI was naked except for a simple collar around my throat. He kept playing with my nipples and I could feel my pussy liquify. I started shifting my hips, partly to get him to move his hand downwards, partly so I could feel his hard cock rub against my ass.\n\n\"I know you're stressed and worried, little girl,\" he said quietly, but firmly in my ear. His hand began to slide down from my breasts and ran across my stomach. \"But you need to remember I will always take care of you.\"\n\n\"Yes, Daddy,\" I whispered.\n\n\"Your Daddy loves you very much, little girl,\" he said, his hand hovering over where I needed it. I whimpered.\n\n\"Please....\"\n\n\"Are you going to be a good little girl and do what you're told?\" he asked.\n\nAt that point, I would have promised to bring him back rocks from the moon, but it worked. My brain wasn't spinning. I was freefalling into my little space.\n\n\"I'm my Daddy's good little girl. I always do what I'm told,\" I said.\n\n\"Yes you do,\" he said. Then his fingers dance across my clit, while at the same time his hand slid up from my throat and covered my mouth.\n\nIt wasn't perfect containing my scream, but his hand muffled it a bit. Maybe Gillian and Soo were still asleep.\n\nHis hand went back to my throat. He was more concerned about making sure I knew who was in charge than keeping me quiet. Once I realized that I let go of the last of my embarrassment. Daddy was going to make me cum, and people were going to know.\n\nThe combination of his hand on my throat and fingers on my clit did wonders. The stress and anxiety vanished. I was an obedient little girl.\n\n\"Daddee,\" I whined, feeling the orgasm getting closer and closer.\n\n\"Do you want to cum, Kitten?\" he said.\n\n\"Please let me cum, Daddy. I need it,\" I said.\n\nI could feel his fingers pause for a moment, and then I had the horrible thought that he was going to tease me when he did a quick flicking motion with his fingers and I went off.\n\nI dimly recalled turning my head at the last minute to scream into the bed and hearing Daddy chuckle.\n\nAfter a few minutes, my brain came back to reality a bit. I was aware of three things: Daddy's hand idly playing with my nipples, a rock-hard cock wedged into my ass, and that I was still horny.\n\n\"Was that enough or do you need more, little girl,\" he whispered and then nipped my ear.\n\nI lifted one of my legs, shifted my hips so that his cock slipped between my thighs, and then reached down and grabbed it and placed it right at the entrance of my pussy.\n\n\"I'm a horny little slut, Daddy. I always need more,\" I said. And then wiggled my hips, giving his cock a tease.\n\nDaddy did a quick shift so that his cock was sliding into my pussy and I let out a loud moan. We hadn't fucked like this much, on our sides with him behind me. I guess this was supposed to be quieter as the bed wouldn't make much noise, but I was nicely compensating for the bed.\n\n\"Oh, Daddy, just like that. Fuck your little girl,\" I said.\n\nIt was amazing feeling of his body pressing behind me, his hairy chest rubbing against my back. He directed one of my hands towards my pussy, so that as we moved his cock in and out of me, I could play with my clit. He then moved up and stroked and pulled on my nipples. His remaining hand tightened and relaxed around my throat.\n\nIt was overwhelming. I was flooded with sensations and my brain melted further. I knew I was talking to him but had no idea what I was saying. It was babble.\n\n\"Oh, I'm your good little girl, Daddy. Fuck me, please fuck me. Never stop fucking me. Oh God, I love your cock so much....\"\n\n\"Are you going to obey your Daddy from now on?\" he said and squeezed around my throat a little harder.\n\n\"Uh-huh. I'm a good girl,\" I said, and squeezed his cock with my pussy. He groaned and I giggled. I could feel him move his cock back and forth with more urgency. He was close and so was I.\n\n\"You want your Daddy's cum, Kitten?\"\n\n\"Give me everything, Daddy,\" I cried out. He pushed into me with one last hard thrust and came with a groan. I gasped and came right behind him, a rush of endorphins and heat blasting through my body.\n\nA couple of minutes later, after we both could breathe normally again, he moved to pull away from me. I grabbed his arm and made him hold me longer.\n\n\"I love you so much,\" I finally managed to get out. My brain was all over the place, but unlike before it was only happy, blissful thoughts.\n\n\"I can guess why,\" he said as he flexed his semi-hard cock which was still inside me. I groaned.\n\n\"No,\" I managed to finally get out. \"You know how to take care of me and you do it without once making me feel bad. It's just...I don't deserve it sometimes, I think and....\"\n\n\"Shhhhh,\" he said, kissing my shoulder and gently running a finger across my lips. \"I love you, you love me and we'll both do anything to take care of the other. It's no more complicated than that.\"\n\nI smiled. Even if he couldn't see it, I knew he felt it.\n\n\"Such a good Daddy,\" I said, and I could feel myself shutting down and drifting off. He slowly untangled himself from me, and this time I was too tired to complain.\n\n\"Such a good little girl,\" was the last thing I heard him say before drifting off.\n\n***\n\nA day and a half later I'm sitting in a diner watching Daddy eat his breakfast with a smile on my face. It's not like I'd never watched him eat before, but he was just so happy outlining what we were going to do today. It was an insane schedule he had set out, and even he admitted that we might not get to do all of it, but he wanted to try and cram in as much as we could.\n\n\"Well, first we'll head to MOMA. We're not going to be able to see all of it, but we can see some of the cool things they have there,\" he said, chewing around some of the bacon. \"Then we'll walk to Central Park and find a place nearby to get some lunch. Then we can head down to Macy's, which you should see if nothing else....\"\n\n\"Daddy...\" I tried to interrupt.\n\n\"If we have time, maybe run down to Union Square, because there's normally something weird or cool happening down there. I'd like to try the Empire State Building, but that's probably too much to squeeze in. Then back to the hotel to change, catch our show this evening, some supper and then back to our room. How does that sound?\"\n\nI laughed.\n\n\"Daddy, are you trying to kill me before we ever set foot into the con? Because that's a whole lot of running around on our first day here.\"\n\nHe at least looked a little embarrassed about it.\n\n\"I love this city. I moved near Kingston because it is an easy trip to visit New York if I wanted. Of course, then I found myself with this huge distraction on my hands...\"\n\n\"Thanks,\" I said, frowning a bit as I held a piece of pancake on my fork. Daddy had gone with a big breakfast. I was going to go with something lighter, but they had blueberry pancakes and I'm only human.\n\n\"Massively cute distraction on my hands,\" he said, correcting himself.\n\n\"I'll let you get away with it,\" I said. Honestly, his enthusiasm was too cute.\n\n\"I love the energy of the city. There's always something amazing and interesting to do. I know we can only see a fraction of it today, and it's probably madness to try and see as much as I have planned, but I love the place and I hope you will too.\"\n\n\"You know I'd be just as happy wandering around the city with you looking at things you love to see, right? I love that you want to do this for me, but I'm already in New York, going to a comic con, and I'm with you. I'm already having a really good week,\" I said, trying to remind him that not everything has to be perfect.\n\n\"Duly noted. It's not unlike a comic con; plan lots and anticipate to get to do half of it,\" he said.\n\n\"Exactly.\"\n\n\"And if we don't make it to the show this evening, it'll be perfectly fine. All part of the New York adventure,\" he said, trying to hide the smirk.\n\nI sighed and lowered my head.\n\n\"Are you going to tell me what show we're going to see?\" I asked for the 500th time.\n\nHe glanced at his watch. \"Plenty of time for you to know that.\"\n\nFor the past six weeks, after he told me he had tickets to see a Broadway show but refused to tell me which one. I'd been going back and forth between loving him for getting me tickets to my first Broadway show and wanting to kill him for not telling me which one. When I argued I needed to know what I should wear, he told me a nice black dress, stocking and some heels was all that was needed.",
        "I was tempted to wear my Red Sonja cosplay and see how he would react to that, but even I wasn't that bratty.\n\n\"I promise you'll have fun. How's that?\" he said. Well, that was something at least. I didn't think he'd make me sit through a couple of hours of serious drama, but you never know.\n\nHe waved over the waitress and paid for the bill.\n\n\"Come on, Kitten. Time for some culture.\"\n\nOh my God, this was going to be a long day.\n\n***\n\nThere's a lot of things I love about my Daddy and a few things that frustrate me. The one thing I never know which list to put him in is how observant he is. You would think that would be a good thing; a boyfriend that pays attention to you and knows you so well that he can tell when something is wrong. Or knows what you like and what you don't like.\n\nThe other side is I have to be careful what I say around him because I know he's making a mental note. Maybe it's for a gift later. Or maybe a particular surprise. Or maybe you mention that you've never been to a museum or art gallery before.\n\nIt was an innocent enough remark last summer. Meg was visiting and said something in French. I didn't know she was bilingual.\n\n\"Well, I learned in school, like all good Canadian kids, but my fluency was kind of crap. So after my undergrad, but before I started law school, I wanted to improve it so I went to France for the summer.\n\nDaddy laughed.\n\n\"You mean you wanted to be able to tell your parents you were doing something productive instead of being drunk almost constantly for several months, along with hitting on every hot man and woman you could find in Paris,\" he said.\n\n\"I had many excellent...tutors,\" she said, almost managing to not blush.\n\nI giggled. Daddy roared laughing.\n\n\"The only thing you perfected that summer was your walk of shame,\" he said, which provoked Meg into giving him the finger.\n\nThe conversation eventually switched over to a trip to the Louvre. Ben and Beth dragged Meg there even though she was hungover and operating on less than four hours sleep.\n\n\"I never thought looking at so much beautiful art would be hell,\" she said. \"I nearly murdered that poor Japanese tourist. But his camera was so loud.\"\n\n\"I guess I'll have to go one of these days,\" I said without thinking.\n\n\"Yeah, we'll get to France sometime after you graduate if you want,\" he said. I loved how he casually dropped places we were going to visit one day as if just running off to France was no big deal.\n\n\"No, I mean to an art gallery...museum?\" I said, shrugging my shoulders.\n\nMeg and Daddy looked at me like I grew a new head.\n\n\"You've never been to an art gallery or museum?\" Meg said.\n\n\"Nope.\"\n\n\"Look, I know you grew up in Saskatchewan, but they have art galleries and museums there,\" she said.\n\n\"Sure, but I never got into Regina or Saskatoon much and when I did I had other things to do than go to an art gallery. Besides, I can just look at all the pictures online anyway. Why do I need to go see them in person?\" I said.\n\nI could see the look of despair wash over Meg's face.\n\n\"You are dating a heathen,\" she said to Daddy.\n\n\"I know, I know,\" he said shaking his head.\n\n\"What? They're pictures. What difference does it make if I see them in person or on a computer screen?\"\n\n\"Oh Kit, just stop. Ben, please, you have to fix this,\" Meg said.\n\n\"I'll take care of it. Don't worry,\" he said.\n\nWhich is how I found myself several months later at the Museum of Modern Art. Because I made an offhand comment about art galleries. I admit I had every intention of being a bratty little girl at the museum; the one who doesn't want to be there, but is being dragged there by her parents. That would have been ungrateful, but I didn't like being treated like an uncultured hick.\n\nBut to my surprise, I liked it. It wasn't just wall to wall of paintings and carvings. There were photography exhibits and some interpretive/interactive things that were weird, but kinda cool. I liked a crafts display and Daddy was perfectly happy to let me wander around and look at different things.\n\n\"Ok, ok,\" I said as we were going up to the fifth floor, \"this is kinda cool and not something I could see online. You win.\"\n\n\"I always win, Kitten,\" he said. I stuck out my tongue, which seemed like a mature response.\n\n\"I don't know, maybe I was intimidated or something. I had opportunities in Montreal, but I was always busy studying, and it wasn't something I thought about much. And then you and Meg made fun of me about it, so it became a whole thing,\" I said.\n\n\"Sorry about that,\" he said, looking contrite.\n\n\"Eh, you and Meg were having fun. It's not like you were being mean or anything. And I tease you all the time,\" I said. \"But as much as I'm enjoying myself, are we at risk of going off your elaborate schedule?\"\n\n\"Just one more thing,\" he said, leading me across the fifth floor of the building. There was a ton of art on the walls. \"Just wander around, take it in. We'll head out in 20 minutes if you're done.\"\n\nI had a sneaking suspicion there was a plan or a piece of art he wanted me to see, but I played along. Besides, there was a lot of nice art on the wall. I would stop and look at a piece for a few moments and then moved along.\n\nThat's when I noticed a crowd of people around one piece in particular. A couple of girls my age were posing in front of it using selfie sticks, which even I had to roll my eyes at a bit. Getting a selfie in front of a piece of art just seemed dumb to me. But then they cleared out and I wandered over to see what the big deal was.\n\nIt was Van Gogh's \"The Starry Night\". I mean, I knew a limited bit about art, but even I could recognize that painting.\n\nI just walked up to it and there it was. Right in front of me. I could touch it if I wasn't sure alarms would go off. I just stared at it for a few minutes. It was beautiful and it was...right there. I don't know why I was so surprised it was real, but it felt like a piece of magic was just conjured into existence.\n\nI felt Daddy standing behind me. I turned around and I'm sure my eyes must have been wide open. He was smiling at me and I couldn't help it, I started to giggle.\n\n\"It's just....right there,\" I said, in-between giggles.\n\nA crowd has started to build around the painting again and I could see a few people giving me dirty looks, not because of Daddy and I being affectionate, but because they wanted to get closer to the painting and I was in the way. I backed away and gave them space. Then I hugged Daddy.\n\n\"Ok, that's pretty cool,\" I said.\n\n\"I'm glad you liked it,\" he said.\n\nWe started to wander out of the gallery area. I was glad I saw the paintings, but I was starting to get a bit fidgety and I think Daddy could see that.\n\n\"So I guess this means you have to take me to Paris so I can see the Louvre and stuff now,\" I said, and then immediately kind of regretting it. I meant it as a tease, but for all I know, he was going to start booking tickets to Paris the instant had a free minute.\n\n\"It's on the list, Kitten,\" he said, taking my hand. \"Remember, I was getting ready to do some travelling when we met. I put that on hold for very good reasons. But I still want to see some of the world. It would be nice to have company.\"\n\n\"You got it, Daddy,\" I said, as we headed downstairs.\n\n***\n\nWe'd been lucky to get a pretty nice day for our New York adventure. It was in the low 20C range, so I wore a denim skirt, the strappy sandals that I liked, and, well, that Daddy liked a lot too, and a Hello Kitty t-shirt. I'd been tempted to put my hair in pigtails just to drive him nuts, but a hairband worked just fine and was slightly less cruel. My hair had slowly darkened back to my usual brassy red, which made me happy.\n\nAfter MOMA we walked up 5th Avenue towards Central Park, pausing for a moment to make rude gestures at Trump Tower. Everyone was doing it and it felt like the New York thing to do.\n\nI was skeptical of the park because it's not like I haven't been in them before. But so far, I hadn't been steered wrong yet. Daddy was looking for a restaurant for lunch, but I persuaded him take-out would ok so we grabbed some souvlaki from a food truck and then headed in. And he was right, again. It was beautiful. We just rambled around for an hour or so, people watching and chatting.\n\n\"You're going to become smug and unbearable being right like this all the time,\" I said as we sat on a bench to give my feet a bit of a break. I'd whined before starting our day's adventures about killing my feet before the con, so I was getting plenty of breaks.\n\n\"Wisdom is one of the benefits of my advanced age,\" he said. I rolled my eyes. A cute girl with pink hair burst past us on a skateboard while an older lady walking a poodle walked by in the opposite direction. I was content to just sit and watch the world go by.\n\nWhich is when, of course, Daddy did something weird.\n\n\"So, have you heard from your mom lately?\" he asked.\n\nI turned and looked at him like he suddenly grew three heads.\n\n\"Where did that come from?\" I asked.\n\nHe shrugged his shoulders.\n\n\"You haven't mentioned her in....I honestly couldn't say when was the last time you last mentioned her. I'm just curious if you'd heard from her or not,\" he said.\n\n\"Trust me, if I had heard from her, you'd know. I would be scowling and cursing.\"\n\nI knew exactly the last time I heard from my mom. It was right towards the end of the last school year in April. Mom predicted our relationship wouldn't last six months. So a few days after six months, when I had just finished moving my stuff into Daddy's house, I snapped a selfie of the two of us. It wasn't pornographic or anything, but there was a high level of affection going on. I thought the most important thing was that we both looked happy.\n\n\"6 months+ and going strong,\" I sent to her.\n\nI hadn't heard a word since. She didn't like to be shown she was wrong. Plus she was probably waiting for this to fall apart in the anticipation of me crawling home, sobbing that she was right. That was never happening. I'd be homeless, begging for change before that happened.\n\n\"You know you should...\" he started. I put up a hand to stop him.\n\n\"I text her once a month, letting her know I'm alive and could she do me the courtesy of letting me know if she is. Nothing,\" I said. \"I even reached out to a few people I know in town who assure me she still has a pulse and has been spotted around town. So it is her choice not to talk to me. I am ok with that. I have an amazing life, right here, right now, that does not require her one little bit.\n\n\"She made her choice, Daddy. She chooses to not be happy that I'm doing well. Her loss, not mine.\"\n\nHe nodded and leaned back on the bench, staring off at some kids running around and playing with their dog. It was the middle of the week, so I had no idea why they weren't in school, but their parents didn't seem to care very much.\n\n\"I'm sorry about that, Kitten. I know you don't care much, but I still am sorry about that.\"\n\nThen I figured out what this was probably about.\n\n\"How're your parents?\" I asked. I hadn't told him about the conversation his dad had with me, but I know he knew about it, and what the topic of conversation was. I didn't push him about his mom. He'd tell me when he was ready, although it broke my heart that he might lose his mom so soon after losing his wife.\n\n\"I never thought dad being a terrible liar would be so stressful,\" he said. \"Whenever we talk and I ask how mom is doing, he says she's fine, or she's busy and can't come to the phone. I'm not sure how long he thinks he can go without telling me something is wrong, but he seems very determined to test the limit.\"\n\nI snuggled back into him, and he hugged me a little bit harder.\n\n\"Are you going to have to go out to see them?\" I asked.\n\n\"Yeah, probably. Not sure when I'm going to pull the trigger on that. I'm probably in some denial on this.\"\n\n\"I'm coming with you when you go,\" I said. This wasn't a request. I was going with him because there was no way he was seeing his mother...unwell without me there to support him.\n\n\"Ok, Kitten,\" he said. \"I promise you'll come with me.\"\n\nI nodded my head, satisfied now that he promised he wouldn't run off on some misguided solo trip to 'protect me.'\n\nHe glanced at his watch, slowly disentangled himself from me, and stood up. He held out his hand and I bounced up, wrapped my arms around his neck and kissed him. We stood like that for a few moments. I figured if there was a place where a girl could get away with making out with her much older boyfriend, it would be in New York.\n\nAnd sure enough, when I came back for air and glanced around, not a single person was looking at us. Maybe Daddy was right about the whole New York thing.\n\n\"So, Macy's next?\" he asked.\n\n\"I'm not really a Macy's girl. But I did find a bunch of vintage clothing stores that look more my speed. Can we go there instead?\"\n\nHe smiled. \"Whatever my princess wants.\"\n\nJust what a girl wants to hear when she's about to go clothes shopping.\n\n***\n\nThe next few hours were spent torturing him by hitting vintage clothing stores. I'd already ransacked all the ones in Kingston and Montreal, so this was new territory. Even if the outfit didn't work for me, I could always adjust it, or just use the fabric. And there were some seriously good finds. Too good, in some cases. I couldn't buy it all, no matter how good the deals were.\n\nBecause I'd been enjoying hitting these stores and wandering around neighbourhoods, I asked Daddy if it was ok to blow off going to the Empire State Building. It would be nice, but I was having way more fun hitting these stores and walking around New York neighbourhoods. It was better than standing on top of a tall building and fighting the hordes for a picture. I'd be going through enough of that at the con the next four days.\n\n\"This is your New York adventure, princess. Whatever you want to do for the rest of the afternoon, I'm happy with it,\" he said.\n\nDaddy was patient as I oohed and aahed over different things. He also wasn't white knighting it and offering to buy me anything. I'd warned him not to before we even started hitting these places. He seemed content to just let me play and angst out over what to buy. I did take advantage of his offer to carry some of the bags, though.\n\nThat was until the last store when I came out of the change room in a little black dress. I mean, I'd packed a dress for tonight's show, but I wasn't 100% sold on it. But this....this was something else.\n\nWhen I walked out of the change room and posed in front of the mirror the owner of the store said, \"girl, you need to buy that dress.\"\n\nDaddy looked up from his phone and whistled.\n\n\"We're going to see a Broadway show this evening,\" I said to the lady. \"Is this appropriate?\"\n\n\"That dress is appropriately inappropriate for many occasions, including Broadway,\" she said, making me giggle.\n\nThen I looked at the price and I winced. I'd been doing so good not asking for Daddy's help so far on my shopping this afternoon. I was trying hard to keep my reaction from him, but he has a sixth sense for these kinds of things.\n\n\"I'll buy it for you,\" he said. Before I could protest added, \"I have completely ulterior motives for wanting you to have that dress.\"\n\nAnd that was that. The owner wasted little time taking the dress as I was getting changed and ringing it up. By the time I came out of the change room, he was waiting with me holding a little bag.\n\n\"I either need to get used to you doing that or you need to stop doing that,\" I said as we walked down the street looking for a taxi. I'd glanced at my phone in the change room and saw that it was 4:30. Daddy had said the show started at 7 pm. That didn't leave a lot of time for me to get back to the hotel and get changed.\n\n\"Hypnosis is the only option left for you,\" he said. \"Because I'm not stopping.\"\n\n\"Ooooh, is that a new kink?\" I asked, teasing him. \"I'm already pretty submissive. I'm not sure you need to hypnotize me to make me more obedient.\"\n\nHe waved his hand and a taxi slowed down.\n\n\"I'll take all the help I can get,\" he said, opening the door.\n\nInterestingly that wasn't a no, but that was something to think about later. Right now, I had an evening out to plan for.\n\nBy the time we got back to the hotel, it was almost 5 pm. The show began at 7, and we wanted to get there a bit early to take in Times Square. I had maybe an hour to get ready. I hated rushing these kinds of things, but now I had no choice.\n\n\"It's your fault if I'm not perfect,\" I yelled at him through the door. I could hear him laugh.\n\nOne quick shower, with a cap to keep my hair dry. I started on my make-up, although because of time constraints, I wasn't getting too fancy. The lingerie was going to be the tricky part. The dress I'd brought was going to be long enough for garters and stockings. The new dress was shorter, so this was going to require some additional fussing. If things got desperate I had a pair of emergency pantyhose, but I hated wearing them.\n\nIt took some fussing, but the stockings worked. I had a couple of inches of grace but bending over was going to be tricky. I was going to be clinging pretty hard to Daddy this evening. Like he was going to mind.\n\nI did one last review in the mirror. My hair looked good, with a hairband keeping it off my face. Makeup could be better but was ok. My one concession to geekery was a set of Rebel Alliance earrings. My usual day collar was on with the lock resting squarely in my cleavage.\n\nThe dress itself was a miracle of infrastructure. Black, slim and accentuating all the right parts. It showed off my tits without being too slutty about it. All the curves were displayed in a flattering light and it was short, but not so short that I was in immediate danger of being arrested.\n\nWhen I get back to Montreal I was going to have to take a serious look at this dress because it was a minor miracle. I slipped on a pair of three-inch heels and glanced at my phone. Almost 6 pm.\n\nI opened the door to the bathroom and walked out, my heels clicking on the floor. Daddy had been looking out the window and turned around when he heard me. I did a little pose and spun around slowly. He whistled quietly.\n\n\"God damn, princess. You look spectacular.\"\n\nI blushed. I mean, I knew it was true, but Daddy's praise was always going to make me blush.\n\n\"You want to skip the show, stay here, order some pizza and I can better appreciate that dress?\" he said, stomping on the moment.\n\nI huffed at him, but my hands in my hips and did my best annoyed little girl look.\n\n\"I was promised a show, dinner, and some spectacular fucking. And I'm going to get it. In that order,\" I said.\n\nHe threw his hands up in mock surrender and came over to hug me. He gently lifted me so only my toes were touching the floor.\n\n\"I keep all my promises, Kitten,\" he whispered in my ear and then gently nibbled on it.\n\nIt's not like the thong I was wearing was going to absorb much, but that act produced a reaction that overwhelmed the small amount of material there.\n\nI pushed back gently to try and catch my breath. If he wasn't careful I was going to be jumping him in the bathroom at intermission.\n\n\"Come on. We only have an hour,\" I said, reaching for the trench coat and slipping it on. It had gotten colder so I did need the coat, but it had one additional benefit; I'd yet to find a heterosexual male who didn't get a little dumber looking at a cute girl wearing a short skirt and a long coat.\n\nDaddy was no exception and I had to poke him to snap him out of it. I noticed that he was sporting an erection in the casual dress pants he was wearing. Good. If I was going to be wet and horny for the next five hours or so, he could be hard and uncomfortable. Fair play and all.\n\nWe arrived in Times Square and I spent a few minutes gawking like a tourist. How did I not come here last year? The stuff I missed because I was so focused on the con and the stupid drama with Heather and Lesley. Daddy was right; we were going to have to come back here and explore properly.",
        "I felt a gentle tugging on my hand and noticed Daddy smiling at me and tapping his watch. I let him take the lead as I had no idea where we were going. We turned down 46th Street and stopped in front of a theatre.\n\nI was confused.\n\n\"Why are we stopping here?\"\n\n\"To go and see a show,\" he said, speaking in a way he might as if I was very little and maybe a bit slow.\n\n\"But this is for Hamilton. It's impossible to get tickets to see this,\" I said.\n\n\"Not quite totally impossible,\" he said, reaching into his jacket pocket. He pulled out a printout showing we had two seats to see Hamilton. \"It's not front row center, but they're not bad.\"\n\nI was genuinely not processing it. I never guessed Hamilton because tickets for the show were sold out more than a year in advance and getting them from resale sites normally meant having to sell a kidney. But there he was, with a smile on his face and Hamilton tickets in his hand.\n\nDaddy magic.\n\nI lunged at him and gave him a huge hug. Normally he was better at bracing himself with his cane when I did that, but I either caught him by surprise or was more excited than normal. He stumbled back a step or two, braced himself and enjoyed the hug.\n\n\"I love you, Daddy,\" I said into his shoulder.\n\n\"I love you too, Kitten,\" he said.\n\nI untangled myself from him and we went inside and found our seats. I was looking around and gawking at everything. I was wired over being here which might account for not noticing the volume in my voice.\n\n\"You are so getting laid after this,\" I said.\n\nThat produced a barely suppressed snort of laughter from behind me. The theatre was about half full with more coming in, but the people behind us heard. I flushed and turned around to apologize. There were two black men holding hands and smiling. They looked like they were in their 30s and were beautifully dressed in tailored suits.\n\n\"Sorry,\" I said. \"I'm a little excited.\"\n\n\"Oh don't be,\" said the younger of the two. \"I said the same thing to him when he told me he got tickets.\"\n\nI laughed and complimented him on his suit. He raved about my dress and the two of us chatted until the lights dimmed. Daddy took my hand, kissed it, and I snuggled into his shoulder to watch the show.\n\n****\n\nAfter the show, I spent the next hour or so driving Daddy nuts by humming songs or dancing to whatever was playing in my head. I was incredibly horny but also famished because I hadn't had anything to eat since lunch. So we went to one of the nearby restaurants that served food to the theatre crowd. I was expecting something fancy, but it was actually kind of bland. But there were lots of beautiful people to stare at, and Daddy listened patiently while I recapped the play he had just watched.\n\nIt was getting close to 11 and I was getting no less horny, but also realizing that I needed to get up early to get ready for the comic con tomorrow.\n\nI leaned across the small table, showing plenty of cleavage to Daddy.\n\n\"Time for you to take your shot, Daddy,\" I whispered.\n\nMagically, we were making out in the hotel elevator 15 minutes later. As Daddy was fumbling with the room card I worked some quick girl magic in my dress. So when he held the door open for me to walk in, I thanked him, took a couple of steps into the room and let the dress slide off my body and onto the floor.\n\nThe room was still semi-dark so he didn't notice. By the time he closed the door, I was by the bed. I spun around, wearing my long coat, bra, panties, stockings and heels.\n\n\"Thanks for a beautiful night out, Daddy,\" I said in my best little girl voice.\n\nHe stood there, looking dazed for a moment. Then he slowly walked over to me, taking in every detail as he moved. He stood in front of me and slipped the coat off my shoulders.\n\n\"You are a magical creature,\" he whispered in my ear before starting to kiss my neck.\n\n\"Mmmmm, what kind of magical creature, Daddy?\" I asked, enjoying his lips and tongue running along my neck. His hands ran down my back and cupped my ass.\n\n\"Succubus maybe?\" he said. I could hear the teasing in his voice. I tapped gently on the head.\n\n\"Try again.\"\n\n\"Maybe a witch who has cast a spell?\" he said, moving down from neck towards my breasts. A quick gesture behind my back with his hands removed my bra from the picture.\n\n\"Better, but not quite,\" I said, running my hands through his hair.\n\n\"Fairy princess?\" he said, then latching into one of my nipples and began sucking.\n\n\"Ooooh, jackpot, Daddy,\" I moaned. I could feel him smile more than anything else, as I savoured the feeling of his hands and mouth on my breasts. After a few moments, he came up for air. I looked at him slightly dazed as he smiled and then gently pushed me backwards. I landed with a bounce on the king-sized bed.\n\nI lay there on the bed, untying my thong off and giving them a flick to land somewhere on the floor. That left me in just the garter, stockings and shoes. Then I began to play with my pussy while I watched Daddy remove his jacket, then his shirt, pants and underwear. His shoes and socks had already vanished at some point after he entered the room.\n\nI should be a good girl and take care of my man. He brought me to New York, took me to a museum, shopping, dinner, and a show. I should be on my knees right now sucking his cock. And lord knows I wanted to. I loved his body. He joked it was just a slightly above average dad bod, but I knew he took care of himself because he wanted to not put extra strain on his knee. But the hair on his chest, even his scars - I got wet every time I saw him like this.\n\nNot to mention the effect his cock had on me.\n\nBut after a year I'd gotten pretty good at figuring out what he wanted and how to make him happy. And this evening it wasn't about me serving and taking care of him. He wanted to play with my body. He wanted to tease me and watch me squirm and moan.\n\nNo problem.\n\nHe stood at the edge of the bed and watched as I continued to stroke my pussy. I decided to give him a little show. I shimmied up the bed a little more and bent my knees. I used my right hand to continue to rub my clit and my left to tweak my nipples. Daddy had to see I was soaking wet.\n\n\"Mmmmm, thanks for showing me a good time today, Daddy,\" I said softly.\n\nHe took my leg and ran his hands up and down the stocking. I moaned and didn't stop playing with myself. I wasn't going to unless he told me to, or he replaced my hand with something better.\n\n\"The day's not over yet, princess,\" he said.\n\n\"God, I hope not,\" I said.\n\nHe moved his face and ran his beard across my stockings. I felt its texture and moaned. I knew he was working his way downward. This was all just part of his tease. And sure enough, his face moved further up my legs. Soon I felt his lips on my upper thighs moving his way closer to where I needed him.\n\nI moved my fingers away to give him space but he gently grabbed them before they got too far away and he sucked them into his mouth and made a little hum of pleasure.\n\nI began moving my hips to get his attention focused where I needed him. Normally this was his cue to torture me for what felt like an hour, but this time he got straight to the point. I guess teasing him all night in this dress focussed his attention. I felt his mouth on my pussy lips and soon his tongue darted through and I felt it do a quick flick across my clit.\n\nI was still wearing my heels but managed to plant them into the mattress, shove my hips up and scream all at the same time.\n\n\"More, Daddy! More!\" I cried.\n\n\"As you wish, princess,\" came the reply. And I would have groaned at the reference if I wasn't so busy moaning from what his tongue was doing.\n\nHis tongue flicked along my clit and he would then suck it into his mouth and tease it some more. Sometimes he would tease me but this was a masterclass in knowing what would get me off.\n\n\"Oh God, Daddy. You're going to make me cum. Please, please don't stop!\" I begged, hoping to prevent more desperate begging in the future if he changed his mind and became a tease.\n\n\"More?\" he said, running his tongue along my lips. \"Are you sure?\"\n\nI grabbed his head and lifted it so he could see my face.\n\n\"I have been soaking wet for hours. Your princess is going to have a fit if you don't make me cum, Daddy,\" I said in a low growl.\n\nHe laughed and went back to what he was doing before I interrupted, but with more focus. I guess he took my threat seriously as he sucked my clit into his mouth and flicked his tongue across it. It took about five seconds for me to go from 0 to 100.\n\n\"Oh God! Cumming, Daddy!\" I screamed, bucking my hips off the bed.\n\nWhen I came back to reality a bit, I had the dim realization that Daddy was still between my legs. He did this after I came where he would kiss, lick and nibble around the edges of my pussy, but give my clit a momentary break.\n\nBut now that I was coming back to reality, I could feel him starting to ramp up again. His fingers, previously absent, were starting to tease and slide inside of my pussy. I thought, not for the first time, about previous boyfriends who would go down on me for a minute or two and popped back up like they wanted a cookie. Daddy would gladly spend all night there if I let him. One of the many reasons why I was never letting him go anywhere.\n\nStill, I knew he wanted to fuck me and I was kinda eager for his cock to be buried in me and was about to tell him that when he slid his fingers into my pussy, curled them in that magic way he does, and miraculously found my g spot.\n\n\"Oh fuck!\" I cried out. The neighbours were going to be calling the front desk at this rate, I briefly thought. That thought was quickly drowned out by the sensations ripping through my body. Daddy's fingers stroking inside me, his tongue on my clit, his beard brushing against my thighs. I wrapped my legs around his shoulders and grabbed his head to make sure there was no way he could stop.\n\n\"Oh fuck, just like that, Daddy. Keep licking, keep sucking, oh God, keep doing that thing with your fingers, oh fuck, please Daddy! I'll fuck you silly. I'll be a moaning little whore for you, but don't...fucking....stop!\" I screamed and came again. And this time I knew he was getting soaked.\n\nAfter I finished twitching, I felt a gentle tapping on my leg and looked down with glazed eyes to realize I still had him wrapped up in a death grip with my legs and hands. I managed to get the mental signals to my limbs to let him go and he pulled back, taking a little gasp of air, and then used it to laugh.\n\n\"I'm going to die in bed with you one day, but it'll be worth it,\" he said.\n\n\"As long as you left me something in the will to cover the therapy I'm ok with that,\" I replied, making him laugh again.\n\nHe crawled up on the bed between my legs. For the first time tonight, I reached down and touched his cock. It was hard and wonderful and I had a moment where I wanted to slide down and take it in my mouth. But Daddy had other plans and I wasn't about to deny him anything.\n\nHe leaned down and kissed me and I could feel how much he wanted me. When we came up for air he looked at me in such a way that I knew what was coming.\n\n\"How long have you been hard, Daddy?\" I asked.\n\n\"Since I first saw you in that dress, princess,\" he said.\n\nI lined his cock up with my pussy. Then I whispered in his ear.\n\n\"Then you should do something about that, Daddy,\" I said. I thrust my hips up the same time he pushed forward and his cock buried in me as far as it would go. I would have screamed, but I needed air to be able to do that.\n\nDaddy and I settled into a rhythm and after having two orgasms I had some of the edge taken off my horniness. Oh, I still wanted to cum, but at least I could focus on him a bit. I matched the rhythm of his thrusts. I gave his cock a little squeeze every few moments. I wrapped my legs around his hips and put my arms above my head, pretending I was helpless beneath him.\n\n\"Fuck your little girl, Daddy. She was a tease all night. You deserve to feel good,\" I moaned to him.\n\nHe grinned at me.\n\n\"And I did buy you that dress,\" he said. He reached back and took my legs which had been wrapped around his waist and moved them over his shoulders, then thrust hard into me.\n\n\"Oh fuck, Daddy!\" I cried out. All my tricks were gone now. I was just along for the ride as he took me. He pinned my hands above my head and bent down to kiss me. His hips kept moving faster and faster as his cock just kept slamming into my pussy. It felt otherworldly and I knew I was moments away from coming. I broke from his kiss.\n\n\"Oh God, Daddy. I'm close, oh fuck I'm so close. I want you to cum in me, Daddy. Cum in your little girl, please!\" I said and then squeezed my pussy as hard as I could around his cock.\n\nThat did the trick.\n\n\"Oh Christ, Kitten,\" He groaned, burying himself in me and then finally cumming. Feeling his cum shooting into me and the look of pleasure on his face was all it took, and my brain's fireworks display went off.\n\nA few minutes later, when I could process reality again, I giggled and remembered that there was nothing better on this earth, that I had discovered so far, than both of us cumming at the same time. It was as close to magic as I'd experienced.\n\nI opened my eyes and looked at Daddy. He was red and still sweating, but looked very happy.\n\n\"I love you, Daddy,\" I said.\n\nHe leaned down and kissed my nose.\n\n\"I love you too, Kitten,\" he said. I could tell his knee was starting to bother him, but I wasn't ready to let go of him yet. As he moved to roll off me, I rolled with him, so I was now on top, and his lovely cock still in me for a few more minutes.\n\n\"You're going to be sore tomorrow at the con,\" he said, running a hand down my back.\n\nI gave him a look that tried to convey that he was full of himself, but he was probably right. I was going to be walking funny for a few hours in the morning.\n\n\"Worth it, though,\" I said, resting my head on his chest. Suddenly it felt very much like I could just pass out. It had been a long day. I then felt his hands running through my hair.\n\n\"You're the best thing that's happened to me in a very long time, Kitten,\" I heard him say, softly.\n\n\"I know,\" I said, which was meant to be teasing, but suddenly I was too tired to keep my eyes open and I drifted off to sleep.\n\n****\n\nDaddy's saying about comic con's has always been \"Plan to do half of what you have planned.\" I rolled my eyes at it a bit because it's such a dad thing to say. But he's also not wrong.\n\nThe con is huge, with a quarter of a million people visiting over four days. There's so much to do and while Daddy and I are both geeks, we do have differing tastes. I prefer cosplay, anime and just reading some graphic novels. He's much more into collecting things, particularly art.\n\nA couple of weeks ago our con passes arrived in the mail and the organizers began emailing out details of events and panels. Daddy tries not to be the super planning, ultra-organized guy anymore, but it's hard to throw away a lifetime of habits.\n\nI knew when I was at school he was programming the comic con's app with what he wanted to do and probably making notes on what he thought I might like. Last year I barely paid attention to any of the activities. I was focused on hanging out with cosplayers and trying to seduce this hot daddy-looking guy that was making my hormones rocket.\n\nBut I could see he was getting edgy about my \"I'll figure it out when I get there\" attitude. Plus, I was curious to see what he recommended. The result was a dedicated list of things we could do together and apart.\n\nWe love each other, but there was no way I was putting him through a panel on emergency repair tips for your cosplay just like he wasn't putting me through a retrospective panel featuring a writer popular 30 years ago that I'd never heard of, but that he loved as a kid.\n\nI admired the precision of what he created. Time for each of us to do our own thing and also time for us to be together. It was an organizational work of art.\n\nNaturally, we blew it up on the first day.\n\nWe woke up later than we planned, with only 90 minutes until the start of the con. Daddy has VIP passes, so we could skip the worst of the line, but it didn't leave us much time to shower, get some breakfast and for me to get prepared. It's not like these outfits were something you just slapped on.\n\nI decided on the first day to go with a callback to last year when I wore a classic Scarlet Witch costume. This year I'd spent a few weeks working on one from the TV show. It looked pretty damn good if I do say so myself and I wanted to wear it today because by Saturday there would be hundreds of them. But it wasn't an easy costume to get into. Then there was Daddy hovering nearby, trying to make sure I had something to eat while trying to not rush me, but wishing I would hurry up. So tempers were a little short.\n\nIt's just as well we had separate agendas for the morning. We arrived a few minutes before the doors opened to the hordes. He made his way to artist alley to get some artwork. I made my way to the area where all the panels were being held. I still had time to make the one on cosplay design work. It was how to design a costume you might only have a few seconds of screentime to work off of.\n\nI walked out an hour later in a much better mood. It had been a useful panel and I'd jotted down some ideas onto my phone. Plus, it's always good for the ego when people come rushing up to you and make appreciative noises about your cosplay. I walked away from the panel room and hit the mob wandering around the main show floor. With the doors open to everyone the main floor had filled out quickly.\n\nIt took about 10 seconds after I wandered out onto the floor before someone gushed over my costumes and asked if they could take a picture. I struck a pose, they quickly snapped a picture, thanked me again, and wandered off.\n\nThat scene replayed dozens of times over the next hour. It can get tiring, but right now it wasn't. Having people run up to you, gush about how much they love your costume, want to talk to you about it and get a photo, it was just a constant blast of endorphins. A constant stream of praise is addictive.\n\nIn-between all of that I was wandering past tables and checking out things. I was focusing mostly on those with cosplay materials for the moment, just to see what they had. I'd check out the t-shirts, graphic novels, and toy tables with Daddy later. That was a fun thing to do together.\n\nI was wandering around and not paying much attention when suddenly I came to a booth and saw my picture on the banner.\n\nIt took me a second to process that and then I noticed Michelle, Ahmed and someone I didn't know were behind the table. Ahmed looked happy to see me, I couldn't read the look on Michelle's face and the third person, a woman a few years older than me, was doing a double-take.\n\n\"You're...the girl on our banner,\" she said. Which was true. They had updated their business banner since the con in August. What surprised me was the prominence of pictures of Michelle and I on the banner in costume. A glance at the table also showed pictures of costumes I'd worked on over the summer.\n\nI knew this would probably happen after I left. I....may have exaggerated Michelle's apology when talking to Daddy. It wasn't so much an apology as a \"You'll ask for this job back one day and you better pray I'm in a good mood\" sort of thing. So not an apology at all. But I didn't want Daddy firebombing their house, which he was considering for a few weeks.\n\nAll of that flashed through my head as I processed what was happening. Time to be polite.\n\n\"Yes, I am. I worked for them during the summer,\" I said. And then, because I couldn't resist the dig, \"I'm glad they're able to use so much of my work at the booth this con.\"\n\nMichelle looked like she was about to say something when Ahmed jumped in. \"Mary just joined us a few weeks ago to help out. Your designs have been a great help to her as she gets up to speed.\"",
        "\"Yeah, I love your work!\" she said. \"I didn't know you were going to be here. Well, I didn't know we were going to be here. But it's cool to be in New York and I get to do all of this for free.\"\n\nOh, the alarm bells were going off in my head. I was younger than Mary, but I was getting a bad feeling. I knew they wanted to come to this con, but were waitlisted. They got here, but what was going on with Mary?\n\n\"The costume is not bad,\" Michelle said. \"I've seen a few better wander by, but it's not bad. Were you designing that on the side at the workshop over the summer?\"\n\nAnd that's when I had a small moment of clarity. Why was I standing here talking to them? I didn't have to stand here and get into it with them. I could just walk away and enjoy the rest of my comic con.\n\nSo I did.\n\n\"Good seeing you all,\" I said. And then, because I couldn't be a complete adult, I reached into one of my hidden pockets I built into the costume, and took out a card and handed it to Mary. \"Drop me a line and we can chat cosplay. I'm happy to give you some tips if you like.\"\n\nThe cards had been Daddy's idea. I thought it was old-fashioned, but it had my social media accounts and a generic Gmail for email. Just in case I did meet someone with a production company or someone interesting, I had something to give them instead of scrambling to give my cell or personal email, which I might not want to get out.\n\n\"That's great, thanks,\" she said, pocketing the card. Even money said that card would go missing over the weekend. I could see a few people hovering nearby wanting to ask for a picture, which I did. Then I waved good-bye and headed on my way.\n\nTwo things occurred to me as I slowly began to work my way towards the \"VIP Room\" to meet up with Daddy for lunch. The first was that I had made the right decision to go back to school. And the second was angling Daddy away from this section and hoping he didn't stumble on them accidentally.\n\nI sighed as I continued to make my way through the hordes, stopping every 100 feet for a photo. Daddy joked that I had a drama field. I didn't think so. If he knew half of what I got up to when I was in Saskatchewan he might reevaluate what he considered drama.\n\nFinally, I got to the VIP Room. When Daddy told me had special passes, I thought it was just because he wanted to avoid standing in the massive lines to get into the con. I didn't give much thought to the VIP Room; it sounded a bit silly. Instead, it was a miraculous thing. There were tables and chairs, so you could sit down and eat food like a civilized person. You could fill up a water bottle. There was a place to hang your coat and stash a bag. And, most critically, private bathrooms. The only thing worse than the line to get into the con was the line to use the women's bathroom. And using it in elaborate cosplay was also annoying. I've never felt more decadent using the washroom in my life.\n\nWhen I came out, Daddy was waiting, sitting at a table and reading a graphic novel. Killing time waiting for his little girl. Whatever irritation I had with him this morning vanished. He was just there in jeans, a Wonder Woman t-shirt, his backpack on a chair and his cane resting against the table.\n\n\"Hi Daddy,\" I said, sneaking up from behind, wrapping my arms around him, and kissing him on the head.\n\n\"Hey princess,\" he said, taking my arms and squeezing them. After he let go, I slid into a chair next to him. There was no need to apologize about this morning. We both knew what happened, and moved on. Sometimes I think Daddy didn't understand what drama was. Some of my previous boyfriends would be hashing this out with me for days. Me and him...we were good now.\n\n\"So how was your morning?\" he asked. I gave him the highlights, omitting the part where I ran into Michelle and Ahmed. That might backfire, but I was willing to take that chance for now. He asked how many times I was stopped for a photo, and I told him it was madness to try and keep track of that kind of thing.\n\n\"So, spill, how much did you end up buying this morning,\" I said. I could tell he was eager to show me his spoils.\n\nHe grabbed his backpack, took out a special portfolio he kept inside and started showing me a few of the pages he bought. He was happy with them, so I was happy with them. He'd long since run out of room in his office and he was reluctant to put them up around the house.\n\n\"And where are you going to put these, Daddy?\" she asked. \"You have no more room.\"\n\n\"Oh, there's always room for more art,\" he said.\n\nHe loved saying that. Gradually the house had transformed over the last year. I remember my first visit and the place was so sparse. But now, there's more on the walls. He dragged me to a lot of markets over the summer, and we'd be at a table with a photographer selling things or an artist with paintings for sale. And if we both liked it, he'd buy it.\n\nNow the house was warmer and friendlier, with all the art and photos on the walls. He also started putting photos of the two of us around the house. It was startling at first, and I wanted to make sure he was ok with it. He said he'd be a poor boyfriend if he didn't have pictures of his girlfriend around.\n\nMy favourite was one of the two of us outside, laughing. Meg snapped the pic, he framed it and it sat on his desk, right next to his computer. The first time I saw it there I could have cried.\n\nThere was only one picture of Beth now in the house. In the spare bedroom, where Meg crashes when she comes for a visit, there was a picture of Daddy, Beth, and Meg, from back in their university days. It's Halloween, they're in costume, drunk and happy. I'm pretty sure Meg cried when she saw it for the first time, but she refused to move it.\n\nI shook my head and smiled.\n\n\"You can hang some up in the bedroom, y'know. I'm not going to take offence,\" I said.\n\n\"There are limits to geekery, princess. Batman doesn't belong in the bedroom,\" he said. I giggled.\n\n\"Well, there goes that cosplay fantasy roleplay,\" I said, and then started laughing.\n\nHe shook his head, realizing he walked into it.\n\n\"Ok, little girl, you've had your fun,\" he said.\n\n\"Yes, Daddy,\" I said, trying to sound a little contrite. I wasn't succeeding, but he let me get away with it.\n\n\"Ready to walk around and check out some more of the show?\" he asked.\n\nI stood up, adjusted my cape, and took his hand.\n\n\"Lead the way, Daddy,\" I said.\n\n***\n\nThe rest of the day acquired a kind of rhythm. We walked around the show floor for a few hours, with people routinely stopping me for pictures. I was worried Daddy would get annoyed by the constant interruption, but he not only remained pretty chill about it, he normally had a big smile on his face when it happened. He often offered to take photos if someone wanted to pose with me.\n\n\"No one is being creepy towards you,\" he explained. \"And they love your costume. So I'm perfectly happy with how things are going.\"\n\nHe headed off to a panel an hour or so later and I went to an area where cosplayers were hanging out. I watched as he walked away. Yes, I was checking out his ass, but I realized how much more relaxed I was at this year's con. There was no senseless drama, there was no worrying about if I was being too slutty or if he liked me.\n\nHe loved me. I loved him. I would see him again in a few hours and I'd feel my heart do a little bounce when it happened.\n\nThe one thing I'd underestimated was how exhausted I would be at the end of the day. When the con closed at 7 pm, all I wanted to do was grab some food, cuddle my Daddy for a little bit and pass out. Which is exactly what happened. Parties and events were happening all over the place. A few of the cosplayers invited me out to a bar later in the evening. I said I wasn't 21 yet and they gave me a look like that was the stupidest argument ever. Still, they let me get away with it.\n\nBy the time Daddy woke up the next morning I was already up and was wrestling between costumes. I'm sure if I had let him, he would have had them all planned out in advance, but that's not how I worked. It was how I felt when I got up in the morning.\n\nThe problem was, this morning I felt like Red Sonja. I was itching to wear the outfit, but wearing a chainmail bikini and armor at one of the largest comic cons in the world was a little daunting. It seemed like a great idea when I was packing it. Well, when Soo was packing it. But having spent a day at the con, I wasn't sure.\n\nI didn't think anyone would try anything. \"Cosplay isn't Consent\" signs were all over the place and most guys knew if they even thought about misbehaving towards a cosplayer they would be tossed....fast. Still, it was a revealing costume. I was nervous.\n\nDaddy eventually rolled out of bed and saw me looking at that costume, along with a Batgirl costume I had. I explained my concerns to him.\n\n\"Why not wear both?\" he said. \"Wear the Sonja costume, pack the Batgirl costume. If you get uncomfortable or feel weird, just go into the VIP Room and change.\"\n\nWhich, of course, was the sensible thing to do. Still...\n\n\"Would you like me to stay with you while you're going around in that cosplay?\" Daddy asked.\n\nI shook my head. \"I can't ask you to do that, Daddy.\"\n\nHe came over and wrapped his arms around me from behind. I could feel myself nestle back into him. It's not like I was seriously stressed about the costume choice; it was just I could feel my brain settling back down. If he held me long enough like this I'd probably settle into a little space. But right now, it was just to get me to be calmer.\n\n\"Ok, so here's the plan for the day. Give the Sonja costume a try. I'm going to be with you until about 1 or so and you can figure out if you're comfortable or not. If not, you'll change. It's no big deal to spend the morning with my little girl.\"\n\n\"Ok,\" I said, my voice feeling smaller.\n\n\"Then, we're going to leave the con a little early this evening, and we're going to get some supper and then maybe go do something not con-related.\"\n\nI turned around in his arms, and put my arms around his neck.\n\n\"Does the 'not con related' involve fucking me silly tonight?\" I asked.\n\n\"It could,\" he said, beginning to kiss my neck.\n\nI had about five seconds left to put a stop to this or we were going to be very late because I was going to be demanding he fuck my brains out. Somewhere I found the reserves to gently push him away. He looked slightly surprised but didn't push it.\n\n\"Great, now I'm going to be soaking wet while wearing a chain mail bikini,\" I groused, starting to put their outfit together.\n\nHe laughed and went to shower.\n\n\"It's a hard life for a barbarian queen,\" he said.\n\n***\n\nCosplayers are a tremendously supportive community. We've got each other's back, whether it's having emergency tape or thread in a bag, or coming to someone's defence if it looks like they're in trouble.\n\nI learned that morning they can also form a gang of terrifying scantily clad women that no one wants to mess with.\n\nDaddy walked with me to the con as I was in my leather boots, a chainmail bikini and armor, cloak, realistic-looking plastic sword, and assorted jewelry. To make myself look a little scarier at five feet tall, I was liberal with the blood make-up and messed up my hair.\n\n\"You look terrifying,\" Daddy said, and he wasn't teasing me.\n\n\"Good,\" I said, sounding braver than I felt.\n\nBut I wasn't in the con long before other cosplayers wearing....limited amounts of clothing found me. Another couple of Sonjas. One brave woman was going as Vampirella. There was a Lady Death. A couple of Slave Leias, but with lightsabers, and we soon formed a scary crew.\n\n\"Strength in numbers,\" one of the Leias said. Part of her costume involved dragging around the severed head of Jabba the Hutt, just in case someone was missing the point about not messing with her.\n\nAfter an hour or so, I shooed Daddy away and told him to go and do his con things as I would be fine. The Leia with Jabba's head, whose real name was Susan, came over and started chatting in one of the open areas for cosplayers.\n\n\"Finally got rid of your father, did you?\" she asked.\n\n\"Boyfriend, actually\" I corrected. \"I asked him to hang out for a bit because of nerves. But I have my scary ladies posse now, so I'm feeling more confident walking around the con now.\"\n\nPerhaps realizing she might have stepped on some toes, she switched gears to my costume and asked some good questions about it.\n\n\"It's really good chainmail armor,\" she said. \"You don't often find many cosplayers making their own Sonja costumes using that material. They use other materials or they get someone to make it for them.\"\n\n\"Wellllll,\" I said, hating to admit it. \"Someone originally made it for me, but there were things I didn't like about it, both in how it felt when I was wearing it and how it looked. So I took it apart and put it back together in a way that worked better for me.\"\n\n\"Did....did you know how to work chainmail and the other materials before doing that?\" she asked.\n\n\"No, not really. Fortunately, the guy who made it originally had a workshop and since I was working for him last summer, I watched him for a bit and then figured it out on my own.\"\n\n\"Wow,\" she said, looking impressed. \"There are some women I need to introduce you to. Do you know many women make costumes like this? You could do ok business for yourself.\"\n\nWell, that was interesting to know. I'd have to mention it to Daddy.\n\n\"I thought about it, but I want to finish design school first.\"\n\nThe chat went on like that for a while, with interruptions for photo taking. The bikinis, swords and severed head were a big hit. I never learned much about her at first, but I've always been terrible at asking questions to people. It feels like I'm being nosey.\n\nAt around two I begged off from the group, saying I had to go find my boyfriend and get him to give me food. But before I did, Susan asked what I was doing this evening.\n\n\"I'm not sure. Supper and then possibly passing out. Con days always wipe me out.\"\n\n\"Well, maybe you'd be interested in coming to see me at the burlesque show this evening,\" she said. \"First show starts at 10, so that'll give you plenty of time to go back and get some sleep.\"\n\nI was a little surprised. I mean, not that Susan wasn't attractive. She was a brunette, probably in her early 30s and had a good figure. Plus she was confident, which helps when you're doing a Slave Leia costume.\n\n\"I've never seen a burlesque show,\" I said, sounding naive.\n\nShe laughed. \"Well, now you have to come. It's a blast, I promise. I have a couple of extra passes. I'll put your name on the door.\"\n\nAnd just like that, we were going to a burlesque show. Somehow I didn't think Daddy would mind.\n\nI was making my way to the VIP room. I'd already texted Daddy to let him know I was on my way. Now I just had to get through the hordes. It was a little more unpleasant this time around. I had a few people ask for photos but I politely declined saying I had to be somewhere. Some understood; others got a pissed-off look and snuck a photo anyway.\n\nI was starting to get a little agitated when someone tapped me on the shoulder. I spun around ready to tear their face off and drew out my plastic sword to emphasize the point when I saw Ahmed standing there, looking terrified with his hands up.\n\n\"I'm sorry, Kit. I didn't mean to startle you,\" he said.\n\nI exhaled and mentally told myself not to kill him. Instead, I grabbed his arm and pulled him next to the wall. There wasn't a lot of room there but it was better than trying to have a conversation in the middle of the hallway with hundreds of people pushing by.\n\n\"Do not grab a cosplayer from behind, Ahmed,\" I said. \"Do you know how close you came to being kicked out of here? The show organizers have no tolerance for grabbing us.\"\n\nHe genuinely looked mortified. \"I called out but it's so loud. I am sorry, Kit.\"\n\nI sighed. I like Ahmed, even with the drama going on with Michelle. But sometimes he just didn't think things through. He was just a little careless, not malicious.\n\n\"It's ok. Just be careful,\" I said. \" How's business?\"\n\n\"Not bad. I think Michelle had her expectations a bit too high, but we're doing ok,\" he said. And then he looked like he wasn't sure what to say next.\n\n\"We do miss you, you know,\" he said. \"We didn't mean any harm offering you the job, but in retrospect, I see it was a mistake. We should have just asked you to come back next year.\"\n\n\"And does Michelle feel the same way?\" I asked.\n\n\"She's more....stubborn on the subject,\" he said. \"But she now sees it was premature to ask you to quit school. I think she's mostly mad at Ben these days.\"\n\n\"Ahmed, what do you want? I'm grateful for everything last summer, but unless Michelle apologizes and chills out, I don't know what else there is to say.\"\n\nHe nodded and looked a little sad. I felt a bit sorry for him. He was so happy to mentor me last summer and I'd been happy to learn. I was happy to have grown-up friends and I thought of Michelle as a kind of big sister. But then....drama.\n\n\"I know,\" he said, sounding sad. \"I just wanted you to know. And to tell you I love how you reworked the costume. You look great.\"\n\nI smiled. Not like I could pass up a sincere compliment. I stepped up to him and gave him a quick hug. Michelle would probably lose her shit if she saw it.\n\n\"Thanks, Ahmed. I hope things work out, I really do,\" I said. Then my phone in my pouch chirped. I glanced at it. Daddy was wondering where I was.\n\n\"Go. I'll see you around,\" he said. I smiled and nodded.\n\nI wasn't sure I would. But it was nice to hope.\n\n****\n\nI wasn't sure how Daddy was going to react when I told him about the offer. But when I suggested it he said it sounded like fun if I was game. If he had suggested a strip joint I would have asked him some serious questions. But I did some quick reading on my phone about the burlesque show and it looked like a huge amount of fun.\n\nI wasn't entirely sure what clothing combo went with supper and burlesque. Fortunately, Daddy said the restaurant was a nice place, but not seriously upscale and that this week they were probably used to seeing all kinds of geeks walk in. So I went with the little black dress I brought from Montreal, comfy flats to spare my aching feet, some bracelets from the Sonja costume that would work with the outfit, and a spare pair of cat ears.\n\n\"Perfect,\" Daddy said after I finally left the bathroom. Then again, what else was he going to say?\n\nHe looked nervous during the meal, but when I asked him about it, he just said it was nothing. Which was weird, but ok. By the time we hit the theatre to see the show, I'd forgotten about it and we'd both settled into the performances.\n\n\"You know, when it came to finding a way to celebrate our first anniversary I was thinking of dinner and going to the Empire State Building,\" Daddy said. \"But I have to admit that your plan of dinner and strippers is much better.\"\n\nI elbowed him in the ribs and gave him a dirty look.\n\n\"They're burlesque dancers. There's a difference,\" I said.\n\n\"Ah,\" he said. I knew he knew the difference; he was just teasing me.\n\nOn stage was a guy dressed as Groot who was removing his 'clothes' while having a confrontation with Treebeard, who was also removing his 'clothes'. I confess to being torn between enjoying the stripping and being impressed with the design work in the costumes. I'd taken out my phone and was tapping notes when Daddy started laughing at me.\n\n\"Mostly naked men on stage, princess. Maybe just enjoy it instead of figuring out the costume design,\" he said.\n\nWell, that was a fair point. I put my phone away and enjoyed the show.\n\nFollowing the trees, there was a group of mixed gendered Doctors on stage talking over one another and removing their clothes. There were a bunch of X-Men, a very slutty Batman, and a host of others. Susan came out dressed like 1970s Dazzler in a silver bodysuit, complete with roller skates and began singing, rolling around the stage, and removing her clothes.",
        "Even Daddy was wowed and the theatre gave her a standing ovation afterward.\n\nOnce the show was over, we were getting ready to leave as it was after midnight. I was already yawning and, while I'd had fun, was kinda resigned that sex likely wasn't going to happen this evening. That's when Susan came rolling over. She was wearing a bathrobe but still had her make-up and wig on.\n\n\"So what did you think?\" she said, clearly buzzing from the performance.\n\n\"You were amazing!\" I said, hugging her. \"I never knew you could strip and roller skate until tonight.\"\n\n\"You learn all kinds of tricks in burlesque. You should try it sometime,\" she said.\n\nI waved my hands in a big no gesture. I didn't even want to glance at Daddy to see his reaction.\n\n\"I'm not sure I'd be comfortable removing my clothes in front of people. Plus school and this guy eat up 90% of my time. Oh, and I can't dance,\" I said.\n\n\"Well, work eats up most of my time. That's why I do this. Believe it or not, this is my way of relaxing,\" she said. And then she reached into a pocket in the bag she was carrying and handed me a card.\n\n\"Fucking LinkedIn is the devil,\" she said. I looked at the card and was about to emphasize that I didn't want to do burlesque right now when I saw her full name, job title, and the production company she worked for.\n\n\"Look, I love the costume you wore today and the ones you showed me on your phone. You've got a great eye, you put a lot of little detail in and you pick things up quickly. I love cosplay, but I also do some scouting when I'm at these things, to see if there are any future costume designers we can find. There's a lot of people who love making these things, but you only find a few that take it seriously enough that they want to make it as a career. That's the real reason I invited you here this evening.\"\n\nI sat stunned looking at the card. The company name was familiar and I was pretty sure they did costume work on TV shows.\n\n\"Are...are you offering me a job?\" I said. It was one thing to turn down Ahmed and Michelle's offer, if she was offering me a job to work for a TV production company, that was going to be something else entirely.\n\n\"No,\" she said and smiled gently. \"I'm a big believer in education, so you should stay in school. But if you need a job next summer, or if you're looking after you graduate, give me a call. Fair?\"\n\nI managed to gurgle out some words about that being fair. Then one of Susan's friends called out to her from the bar, she made her apologies, told me to not lose that card, and headed off.\n\nLater, as we were taking the subway back to our hotel, Daddy was holding my hand so I didn't float away. I wasn't paying much attention to anything, my head a whirlwind of noise so thank God he was there.\n\n\"That's quite the friend you made there, Kitten,\" he said.\n\n\"I had no idea who she was,\" I said, eventually processing that he had spoken to me. \"I thought she was just another cool cosplayer. This is just weird, dumb luck.\"\n\nHe leaned down and kissed my head.\n\n\"I'm proud of you, but sometimes you're a very silly little girl,\" he said, which snapped me out of my daze. I gave him a slightly hurt look.\n\n\"Many of the luckiest people I've ever met are either very rich or have worked hard and put themselves in place to take advantage of a moment when it happens. You came to this con at least hoping to meet some designers and people working in production. You've been hitting some of the tables and handing out information to your digital portfolio, right?\"\n\nI nodded my head, remembering that I did that for Susan.\n\n\"You worked hard, you prepared, and when the moment happened, you were ready, even if you didn't know it. Not luck, princess. You deserve that break,\" he said.\n\nI looked at him and I could feel myself melting a bit. Another guy might have been jealous of the moment or downplayed it. \"Oh, nothing will happen with that,\" he might say. Instead, my man was telling me that not only to enjoy the moment but that I had earned it. I burrowed into him even further.\n\n\"I love you so much, Daddy. Thank you,\" I said. I had enough emotions running through me I felt like I could cry, but didn't want to start bawling in front of strangers on the subway.\n\n\"I love you too, Kitten,\" he said. \"And you still have tomorrow and Sunday at the con yet. Who knows what else might happen.\"\n\n\"I'm not sure anything will top this,\" I said.\n\n\"We'll see,\" he said cryptically.\n\n***\n\nI was still pretty bouncy the next morning when I got up. Not just because of last night but because today was the day Daddy was going to dress up with me.\n\nEver since I made him the Obi-wan Kenobi costume for Christmas, I'd been dying to see him wear it at a con. After some gentle pestering, I finally got him to agree that on Saturday we would dress up together. He has the Obi-wan costume and the lightsaber he made in Disney. I had a Rey costume and my Disney lightsaber. After we got dressed up, I cuddled up next to him and took a selfie in the mirror.\n\n\"We are adorable,\" I said. I immediately put the picture up on Instagram. I didn't put too many pics of Daddy up just because I didn't want to deal with crap about his age. But this was too good not to.\n\n\"I think you're carrying the adorable part, but I'm happy to shine in your reflected loveliness,\" he said.\n\n\"You underestimate the appeal of a sexy older man,\" I said. \"There are many girls who thought Obi-wan was the hot one in the series.\"\n\n\"That would be Ewan McGregor's Obi-wan and not Alec Guinness's, right?\" he asked as we headed out of the room.\n\nI hit him with my best mysterious smile and left it at that.\n\nSaturday's at a comic con were concentrated madness. Daddy told me that once upon a time that made sense. Cons were three days, and people had to work Fridays, so naturally everyone came out on Saturdays. But now with huge cons like this, they stretched over four days and every day was sold out.\n\n\"So why is Saturday so much crazier?\" I said as we were trying to move through the syrupy mob. \"This is much busier and harder to get around than the last two days.\"\n\nMy very wise Daddy shrugged his shoulders. \"I don't know, but I do know they go crazy on Saturdays.\"\n\nIt was a fun day with the two of us in cosplay but still felt...weird. Part of it was that, yes, we were getting asked to pose for photos a lot. Daddy had to deal with a lot of Darth Vaders wanting to duel with him, just as I had to deal with a bunch of Kylo Rens either wanting to duel or flirt with me. The flirting was worse because many were giving off creepy vibes and annoying Daddy.\n\nBut also, Daddy just seemed....off. I couldn't put my finger on it, but he just seemed weird. He said it wasn't the costume, but I didn't know what else it could be.\n\nIt got to the point that around 2 pm, I told Daddy I wanted to change. He looked relieved. He went back into his civilian clothing, I hopped into my Burnside Batgirl costume. After that, things eased up.\n\nThe rest of the day at the con was much better. We'd each gotten to see and do what we wanted over the last two days. Today, now that we were finished dealing with all the people wanting to photograph us, we could just wander and take things in. When the crowds got too much we'd dive into a panel, even if it was something we were only passingly interested in. The only thing I steered him away from was the cosplay area, which he thankfully didn't read much into. I wanted to keep his good mood going.\n\nAt the end of the day, I was ready to head back to the hotel, but Daddy reminded me of the cosplay competition.\n\n\"You know you want to see it,\" he said.\n\n\"I doooo,\" I whined. \"But it's been days since I've been properly fucked. Promise me once this is over there is takeout and fucking waiting for me back at the room.\"\n\n\"Sounds like a date,\" he said. Like any guy is going to say no to takeout and sex.\n\nWhat felt like half the con piled into the main hall and some had been lining up for hours, so we didn't have the best seats. That was fine as everything was displayed on a big screen. And for a couple of hours, I watched a parade of really good cosplayers go across the stage and display their work. There was more than bragging rights going on at the event. There was money and the chance to compete at a national event.\n\n\"Your costumes are better than a lot of the ones I've seen up there,\" he said over the noise. \"Why didn't you enter?\"\n\nI shrugged my shoulders. \"I thought about it, but I had so much going on this year that I didn't think my stuff would be good enough. Some of those people have focussed all year on that one costume. I get bored doing that. I need a bunch of projects to keep me busy.\"\n\n\"Well, you should enter next year,\" he said.\n\n\"Eh, maybe. I just like making them. I'm not comfortable going up on stage like that and showing off,\" I said.\n\nDaddy laughed.\n\n\"You have been photographed probably over a thousand times in the last three days. I'm not sure I believe that.\"\n\n\"Well, it's one thing to pose in front of one person, especially if you're with a group. Getting up on stage in front of thousands of people is something else. And for all the cheering happening, you better believe there are plenty of people criticizing the costume or that person's appearance,\" I said.\n\nDaddy nodded. \"Fair enough. I hadn't considered that.\"\n\n\"You're on me to do this and you mentioned last night I should try burlesque. Trying to show off your hot, young babe girlfriend,\" I said, teasing him. But he looked serious.\n\n\"No, it's not that. I'm reminded there were things I didn't do when I was your age that I wished I had tried. But I didn't have the money, or chickened out, or got distracted so it didn't happen. I look at you and the sky's the limit. You're 20 and you can do anything you want.\n\n\"It's not that I think I'm holding you back, because I don't think I am. I just want to encourage you to do and try....everything. Burlesque, or competing in these events, or travelling or whatever. I never want you to be afraid to try something if you want to,\" he said.\n\nI honestly didn't know whether to cry or throw him on the floor and start ripping off his clothes until security tossed us. Instead, I put my arms around him and gave him a big kiss, which caused a few ewwws from around us, but I did not care.\n\n\"Tell you what,\" I said after I came up for air. \"You make a list of things you want to do, and I'll make a list of things I want to do and we'll work on it together, ok? It's not that I don't want to do burlesque or whatever, I just want to do things with you. I'm not missing a damn thing as long as I have you.\"\n\nHe smiled, took my hand and kissed it.\n\n\"It's a deal, Kitten.\"\n\nThe rest of the show passed in a blur, with my head on his shoulder. The winning costume was someone dressed up in an elaborate Robotech suit. It was technically impressive, but a little blunt force for me. There was no elegance to it at all.\n\nI was explaining all of this to Daddy as we were walking out. I wasn't paying much attention to where we were going as he knew the way. That's when he suddenly paused and moaned.\n\n\"Are you ok, Daddy?\" I asked, concerned.\n\n\"Yeah, my knee just twinged. I must have pushed a bit too hard the last few days. Just let me sit for a second,\" he said, gesturing towards a chair in one of the areas where cosplayers hung out, although there was no one around at the moment. He sat down and I fussed over him for a few minutes.\n\n\"I should have been nagging you more to take care of yourself. You always try to do too much on these things,\" I said.\n\n\"Yes princess,\" he said, in a slightly condescending tone. I gave him a light tap on the back of the head, and he laughed. Then his face got serious.\n\n\"This is the scene of the crime, did you notice?\" he asked.\n\nI wasn't sure what he meant and then I looked around and he was right. It was the spot where I'd been a year ago. When I had been horsing around, not paying attention and knocked him over.\n\n\"You're right,\" I said, with a goofy look on my face. \"So, any regrets?\"\n\n\"I've thought about that moment a lot,\" he said. \"I'm not one for fate, magic, or higher powers, but I've wondered what life would be like now if I'd been...three seconds faster or slower that day. If you fell in front of me, or behind me, but not slamming into me. What my life would be like now. What yours would be like.\"\n\nI mussed his hair and kissed him on the cheek.\n\n\"Mine would be worse, I think. Not just because the last year has been the best in my life, but because I could see certain trends getting ready to creep back in. I was being bullied a bit, so maybe I started drinking or doing drugs again. Maybe I don't have the strength to get through school when it got hard. But you would have been fine. You were bouncing back,\" I said.\n\nHe shook his head and looked sad for a moment.\n\n\"No, Kitten. I was starting to try and bounce back. And you've seen in the last year that I've had moments when I slipped and got into a bad headspace. How far would I have slipped without you there to catch me? My life would have been worse without you. It would have been harder. And I'm not sure I would have made it without you. So whatever high force was going on that day that brought us together, I'm forever grateful for it,\" he said.\n\nThe next few minutes get deeply fuzzy and the only reason I can remember any of it was some cosplayers coming around a corner with their phones out and saw that something was going on in our little corner of the world. Between video and memory, I've managed to piece together that this is what happened.\n\nDaddy slipped out of the chair, his knee miraculously healed. He somewhat awkwardly got on one knee and in his hand was a little box with a diamond ring in it. The video was too far away to capture what he said, but that much I managed to remember.\n\n\"I never want to find out what life would be like without you, Kitten. Will you marry me?\" he said.\n\nKeep in mind I'm standing in a convention center, in a Batgirl costume, at the end of a long day at a comic con. This is the moment my boyfriend, who I love so much I can't process it sometimes, chooses to ask me to marry him.\n\nWhenever I tell the story, people often think he's an idiot for doing it that way. I just get a goofy smile on my face. Maybe it wasn't elegant or flashy, but it was him, and it worked for me.\n\nPlus there was the whole bit where I kept him waiting for what felt like hours, but the video shows was about five seconds, but give me a break, it was a lot to process.\n\nWhen my brain began working again, I noticed the beginnings of a worried look creeping on his face, and that's when my brain kicked into overdrive.\n\n\"Oh my God, yes!\" I screamed and then tackled him to the ground.\n\nThis all began when I accidentally knocked him to the ground, so it seemed fitting a year later I deliberately tackled him at the same spot.\n\nI was still on top of him and somehow my glove managed to get removed, the Claddagh ring was carefully removed and put on another finger and the engagement ring slid on, fitting perfectly. The next thing I knew a small horde of people, mostly girls around my age, came running over to congratulate us and then showing us the video. It was absolute madness for the next 20 minutes, with people congratulating us. Daddy looked dazed but thrilled I'd said yes.\n\nEventually, we made it back to the hotel room and I desperately wanted to jump him, but I desperately needed a shower first. Being the clever man he is, Daddy suggested that we both shower together.\n\nBefore getting in, I very carefully took off my new ring and placed it on the end table by the bed. I got a quizzical look.\n\n\"I know the odds of it slipping off my finger and going down the drain in the first hour of getting it are slim, but you're nuts if you think I'm even remotely taking that chance,\" I said, quickly removing the rest of the cosplay. Daddy gave me a hand, eager for me to get out of the clothing as well.\n\nWe were in the shower, making out and soaping each other up. I was eager to finish getting clean and get to the main event, but Daddy was in a teasing mood, and kept finding new ways to rub his soapy hands over my body under the pretence of \"missing a spot.\"\n\n\"Are you ok?\" He asked, rubbing his hands over my breasts while nibbling on my neck.\n\n\"Keep doing that and I'm going to be a lot better than ok. I'll be explosively ok,\" I said, giggling.\n\nHe slowly turned me around and my breasts pushed into his stomach. I wrapped my arms around his neck and got up on my toes to kiss him when he gently stopped me with his hand.\n\n\"No, I mean, that was a lot to absorb in the last hour. Are you ok? If you have second thoughts and want to change your mind...\" he started, when I pushed past his hand and kissed him as hard as I could. For the next minute, there were no sounds in the shower except one of us moaning.\n\n\"Stop overthinking things. I said yes. I love you and we're going to get married. Now take your fianc\u00e9 to bed and fuck her silly,\" I said. Then I realized I just referred to myself as his fianc\u00e9 for the first time and started giggling like a lunatic.\n\nWe eventually managed to scramble back into the bedroom, but I wouldn't let him touch me any further until I got my engagement ring back on. I looked at it for what must have been the 1000th time. It wasn't a huge rock, but it was a nice size, with a nice clasp holding the diamond in place. I suspected he got help picking it out, but that was a question for another time.\n\nI rolled onto my back and opened my legs, kicking my feet slowly in the air\n\n\"All yours, Daddy,\" I said.\n\nHe wasted no time diving between my legs and began licking my pussy. There was going to be time for a leisurely, loving fuck at some point, but right now was not going to be it. I gave a small cry as his mouth made contact with my pussy and his tongue began flicking across my clit.\n\nI reached down and ran my fingers through his hair. Some dim part of my brain kicked in and I didn't wrap my leg around his head. \"Bad form to kill your fianc\u00e9 within a few hours of getting engaged\" ran through my head, and I giggled.\n\n\"Something funny, princess?\" Daddy asked when coming up for air.\n\n\"Just your beard ticking,\" I said. Then I planted my legs on the bed, pushed my hips upwards, and pushed down on his head. He took the hint.\n\n\"Such a bossy little girl,\" he said before diving back in.\n\n\"You... oh my fucking God! You love it,\" I managed to get out before settling into a steady stream of moaning and babbling as his tongue worked its magic on my clit. At the best of times, my ability to hold back when he was determined to get me off was pathetic. But I had enough electricity from this evening's excitement running through my body to power this hotel.\n\n\"Oh Fuck, Daddy! I'm cumming!\" I screamed out, and I was dimly aware he'd stopped flicking my clit with his tongue and was just focused on holding on as my hips spasmed.\n\nWhen I came back to reality, I could see he was getting ready to start fucking me, which ordinarily I'd be all about, but I needed some personal time with his cock in my mouth first. I gently pushed him to the side, and he fell on the bed and rolled onto his back. I quickly shifted position. I didn't want to waste time getting between his legs and starting to suck so I just straddled his chest, leaned down and took his cock in my mouth. I got a delightful groaning noise as a reward.\n\nEver since I figured out how to deepthroat Daddy it was hard not to want to do it all the time. But I learned a few other things that my fianc\u00e9 likes, and rather than just shoving his cock down my throat I just focused on worshipping the head, running my tongue across it, bobbing up and down a few times, and then running my hands across his balls and down towards his ass.",
        "Some part of me realized I was being a little too good and he might cum in my mouth. Which I would love, but not really what we wanted this evening. Fortunately, he broke my rhythm by pulling my hips back down towards his face. Suddenly his tongue found its way back onto my clit, which shattered my concentration on his cock.\n\n\"Oh god that's not fair,\" I managed to get out, with my mouth still kissing his cock.\n\n\"I am not cumming in your mouth this evening, Kitten,\" he said, his voice muffled by my hips. I could feel myself building already, but if Daddy didn't want to cum in my mouth, I didn't want his mouth making me cum again. I wanted something harder. I did a few more hard sucks on his cock, and then performed a small act of acrobatics so that my hips were no longer above his face, but above his cock.\n\nHe was grinning when I looked down.\n\n\"That was impressive,\" he said.\n\n\"You haven't seen anything yet,\" I said, and then slid his cock into my pussy.\n\n\"Fuck!\" We both cried out at the same time, although I giggled out \"jinx\" a few seconds later.\n\nI then began moving up and down on him. To help with my balance I placed my hands on his chest. We both noticed the bling on my finger.\n\n\"I never would have guessed in a million years you were going to do that,\" I said.\n\nHe took my hand, brought it to his mouth and kissed it.\n\n\"I meant what I said. Maybe it's crazy, maybe it's too soon, but I can't imagine being without you. So why wait? And you've made it very clear every time I've mentioned your future that it involves me,\" he said.\n\nI buried his cock in my pussy, leaned down, and kissed him.\n\n\"I love you,\" I said, breaking the kiss and moving my hips up and down teasingly. I was going to lose coherent thought in a minute, so I needed to say this soon. \"And I love that you listened to what I said and didn't write it off as me being immature or not knowing what I want. I want to be with you.\"\n\n\"Good. That makes me very happy.\"\n\n\"So does this,\" I said, quickly lifting my hips and slamming down on him once again. I moaned loudly again. \"So that's what I'm going to focus on. And very shortly you're going to flip me off and fuck my brains out. Deal, fianc\u00e9?\"\n\n\"Deal, fianc\u00e9,\" he said, but I was already not paying attention, bouncing on him with more determination. I could already feel the next orgasm build as his cock filled me up in all the right ways.\n\nSeeing how close I was getting, Daddy pulled a double whammy on me. One hand reached up to my tits and pulled on my nipple, while the other slid between my hips and rubbed my clit.\n\n\"Oh Daddy!\" I screamed out, burying his cock in my pulsing cunt, with the fireworks going off in my head.\n\nI came back realizing Daddy was at least partially holding me upright. I looked at him with glazed eyes, smiled and flopped off of him. Thank God for king-sized beds.\n\n\"You ok, Kitten?\" He asked, looming over me. I grinned, feeling completely stoned from the orgasms. Then I reached for his cock.\n\n\"I just need one more thing,\" I said, opening my legs. He didn't require much coaxing, quick maneuvering between my legs and sliding his cock back into me.\n\n\"You're all mine now, Kitten,\" he said, which gave me a sudden jolt that I didn't know I had left in me. I was his now.\n\n\"Yes, Daddy,\" I moaned, wrapping my legs around him. Just to let him know I owned him too. He grinned.\n\nIt wasn't frantic fucking, but every time he slid his cock into me I wanted more and deeper. I moaned and groaned. I wrapped my arms around his head and pulled him in for a kiss. Finally, I could feel myself build again. This was going to be the one that did me in for the evening. The others were appetizers; here came the main course\n\n\"Cum in me, Daddy. Please I need your cum,\" I groaned out. I could see he was flushed and getting close too. There was no need to hold back anymore for either of us.\n\n\"Do you want Daddy to breed you, little girl? You belong to me now after all,\" he whispered in my ear.\n\n\"Oh fuck, breed me now!\" I screamed out, and I felt the muscles in my pussy down. That finished off what was left of his willpower.\n\n\"Jesus,\" Daddy cried out, and I felt his cum pulse into me. And although he couldn't see it, I knew I was smiling because nothing made me happier than making my Daddy cum.\n\nWe lay like that for a few minutes, me on my back refusing to unlock my legs because if I did he might pull out and leave me. Him, catching his breath. Eventually, however, we had to let the moment pass, as much as we both hated to. I unlocked my legs and he rolled over onto his side.\n\n\"I could get used to that for the rest of my life,\" I said.\n\n\"Just as long as you don't expect it every day,\" he managed to get out.\n\nI rolled over and rested my head on his chest. He wrapped his arm around me and I burrowed in. The rest of my life. I was 20. It should have sent a wave of terror through me, but it sounded like the best thing in the world.\n\nStill, no reason not to scare him a bit.\n\n\"Daily? I expect it multiple times a day, Daddy,\" I said, running my hand along his thigh and gently touching his cock.\n\n\"Thank god for toys,\" he said, and I laughed.\n\n\"I love you, Daddy. You're all I ever need,\" I said.\n\nI felt his hand run through my hair.\n\n\"I love you too, Kitten. I'm glad you said yes,\" he said.\n\nAnd I thought about teasing him but was perfectly happy to just cuddle him and enjoy everything at that moment.\n\n***\n\nI woke up the next morning to the sound of my phone buzzing. It wasn't the alarm; we both agreed to sleep in this morning. If we were late to the con we didn't care. If we didn't make it to the con at all, we weren't worried. It's not like anything was going to top last night.\n\nI blearily looked at my phone. It was Gillian. I'd missed a lot of texts and calls from her. And others too. The phone said 7:45 am. What on earth was she doing calling me at this hour? Unless something happened to Soo. Momentarily worried, I rolled out of bed and went into the bathroom to call her back.\n\n\"It's about damn time you called back,\" she said.\n\n\"I'm sorry I was sleeping at 7 in the morning on a Sunday,\" I said. \"Is everything ok? Is Soo ok?\"\n\nShe sounded puzzled. \"Yeah, she's fine. She's right here.\"\n\n\"Did you get engaged last night?\" Soo's voice came across on the phone. Gillian must have her on speaker.\n\n\"What? How? How did you know that?\" I asked.\n\n\"Oh my God!\" Soo squealed loud enough that I was sure Daddy was going to hear in the next room. \"Congratulations! That's so awesome!\"\n\n\"Wait, what? Gillian, how do you guys know we got engaged?\"\n\n\"You've gone viral,\" Gillian said in an amused voice. \"Showed up last night on a bunch of social media. Some lunatic proposing to his girlfriend at a comic con. Everyone is still trying to figure out who the two people are, but I recognized you and that costume.\"\n\n\"Oh. My. God,\" I said. Daddy was going to lose his shit when he woke up. I quickly checked my texts. Along with Gillian, there were also texts from a couple of classmates asking if that was me, texts from the girls last night saying they were sorry, but it was too cute not to put on TikTok, and texts from a couple of geek news sites wanting to talk to us. Because of course those little bitches gave up my contact information.\n\nI sighed. All of this before coffee and I was still a little sore from last night.\n\n\"I was going to wait until I got home this evening to tell you, but apparently everyone knows now. I should go wake him up so we can start dealing with it,\" I said. I was glad I had the video of him proposing, but I'm not sure it was worth the price at this moment.\n\nI could tell Soo wanted to ask more questions, but Gillian gently cut her off.\n\n\"We'll want all the details tonight,\" she said. \"And good luck with Ben.\"\n\n\"Thanks,\" I said, ending the call. I took a deep breath and walked into the bedroom. My phone buzzed with another text. It was another site wanting to talk to us. Oh, Daddy was going to be an unhappy camper.\n\nWhen I walked in, he was already waking up, although not 100% there.\n\n\"Were you on the phone? Who was calling at this hour?\" he said.\n\n\"Well, funny thing, Daddy...\" I said."
    ],
    "authorname": "thanagar",
    "tags": [
        "older man",
        "younger woman",
        "ddlg",
        "romance",
        "daddy",
        "mature",
        "oral sex"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/little-packages-ch-08"
}