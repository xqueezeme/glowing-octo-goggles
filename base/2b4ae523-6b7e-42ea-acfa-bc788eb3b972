{
    "title": "Lilith's Emporium: A New Friend",
    "pages": [
        "Anna walked into this shop in the middle of nowhere in a building that looked like it was a house a hundred years ago. The floor creaked beneath her but all in all, it was not a bad looking shop. She wasn't even sure what she was doing there as she felt compelled to stop and check it out.\n\nHer husband Peter had been working late a lot lately doing a special work project so she wasn't getting much sexual satisfaction lately so she stopped here. She was expecting a store full of porn and sex toys and not what she was looking at which was strange looking statues and items she couldn't identify. She walked around and didn't see anyone around but the sign on the door clearly said open and was unlocked.\n\nShe was looking at a shelf full of the statues that all looked strange and erotic. There were exotic looking woman with demonic wing spans and horns but also creatures that didn't look human at all. She glanced over at a small jar of some sort of black liquid that seemed to move as she walked past it like it was moving towards her. It was unnerving to watch as she quickly moved away from it before she looked to her left and saw a strange looking necklace. \n\nIt appeared to be a red gem that she couldn't help but pick up and look at closely. There was a card with the box that described it as some sort of necklace you wear to have erotic dreams which she thought was a little strange. As she looked closer she could see something moving inside it almost like it was filled with smoke or something that seemed to flow around inside. She looked at it more closely as for a moment she saw something strange. She looked at it even closer when she thought she saw a woman's face staring back at her from inside the gem.\n\n\"What the...\" She said suddenly dropping the necklace back on the shelf. \n\nWhen the gem hit she noticed a small crack as if it shattered on impact before a strange red smoke came pouring out of it quickly. Anna was freaked out by what was happening as she turned and ran out of the store scared before getting into her car and speeding off home.\n\nNessira came walking out of the backroom looking around a bit confused as she was pretty sure she had heard something moments ago. She walked over seeing a necklace out of place from where she remembered it being as she examined it more closely. Seeing the gem was now clear with a large crack in the middle knowing what had been inside it before she became a little worried.\n\n\"Oh, my... What have you done?\" She said looking up at the ceiling as she heard the building creek a little as if responding to her. \n\n---------\n\nIt had been a few days since Anna's trip to the shop and she had basically put the events of that day behind her as she was at work. She was on lunch at a local diner she usually frequented on her break. She was nursing a coffee and reading emails on her phone when she saw a text from Peter saying he was working late again. It had become usual for him to work late and she understood but deep down she was starting to miss him a little.\n\nAs she went through her phone she noticed a woman standing a few feet away seemingly watching her. She tried to ignore her at first but every few seconds she noticed her. The woman smiled at her as she began to notice things about her. She had dark hair and was wearing a black dress that hugged her curves. For a moment Anna thought to herself how much she wished her body looked that good. After a few minutes, the woman walked over to her.\n\n\"Hello there, do you mind if I join you?\" The strange woman said to her.\n\n\"Um, I suppose not, do I know you?\"\n\n\"Oh no, but you seem like you could use a friend.\" She said sitting down across from her.\n\nAnna suddenly got a whiff of her scent which was a bit intoxicating. She wasn't sure why kind of perfume She was wearing but she was liking it a lot and almost wanted to ask her where she got it.\n\n\"That is a lovely scent you're wearing Miss?\"\n\n\"My apologies, my name is Jiless.\"\n\n\"Jiless?\"\n\n\"Yes, but please just call me Jill.\"\n\n\"Okay, so what can I do for you, Jill?\"\n\n\"Actually it's what I can do for you!\"\n\n\"What are you talking about?\"\n\n\"Well, I have a sort of sixth sense about people and you look like you need someone to talk to.\"\n\n\"Really, so you can just read people from across the room?\"\n\n\"Sort of, and you caught my attention the moment you asked in.\"\n\n\"Well, I am sure there are far more interesting people for you to read so...\"\n\n\"Why do you do that?\"\n\n\"Do what?\"\n\n\"Doubt yourself like that?\"\n\n\"Excuse me?\"\n\n\"You just said there were more interesting people than you, are you not interesting?\"\n\n\"No, I mean of course I am... Look I should go.\"\n\n\"Please, I don't mean to make you upset, I am a sort of therapist in a sense.\"\n\n\"So you are saying I need therapy?\"\n\n\"Of course not, but here is my card, if ever you find yourself lonely or just needing someone to talk to, call me, any time.\"\n\n\"Um, alright?\" She said confused as she looked into Jill's eyes and got a strange feeling, it was if she had seen them before.\n\n\"I won't even charge you, you just seem like you need a friend.\"\n\nAnna stood there for a moment noticing the scent if Jill's perfume was still very strong and was making her feel strange. She found herself smiling as even starting to check her out a little which was strange because she never found women attractive before but the scent was getting her a little hot and bothered the linger she stayed. She eventually took the card and glanced at it trying not to let on the effect Jill was having on her.\n\n\"Well I um, thanks, I guess, have a nice day,\" Anna said as she turned and headed for the door.\n\nJiless watched the skinny blonde woman get up and leave as she examined her more. She noticed how attractive she was despite the fact that she seemed to hide behind her glasses and work clothes as if she was shy or didn't know how attractive she was. She smiled to herself as she thought about the plans she had for her. It may take some time but she knew it would be worth the wait.\n\nAs Anna got back upstairs to her office she was still feeling a bit off. She went to her computer trying to get back to work but suddenly something just seemed strange as she was having trouble concentrating. She tried desperately to avoid this feeling she was having but soon she couldn't hold on anymore as she stood up and headed for the private woman's room on their floor.\n\nShe stood in front of the mirror sweating as she held her legs together feeling extremely horny all of a sudden. She wasn't sure what was wrong with her but it was getting difficult to stand and soon she was lifting up her skirt and sliding her hand into her panties. It didn't take much as the moment she touched her clit it sent a strong sensation through her body making her yell out a little as she held on to the sink counter. She frantically fingered herself trying not to make too much noise and feeling almost ashamed of herself for doing this at work but she couldn't stop herself anymore. She got closer and closer until she let out a loud moan before feeling herself squirt all over her hand as her knees began to shake violently.\n\nShe stood there holding the counter for a moment as the feeling finally subsided and she started to clean herself up. She looked in the mirror adjusting her glasses as she washed her hands and grabbed a paper towel cleaning up the mess. She felt much better but was still very confused about what had just happened but she tried to forget about it and go back to work.\n\n---------\n\nThe next day Anna was sitting at home with a glass of wine that evening as Peter was working late again. She was getting almost annoyed with it but she knew he was dealing with a big merger at work so she was trying to think about the positives like the extra money he was bringing in but she was feeling lonely. She had gotten through the day without having to violate herself in the restroom at work so she figured it was just a random occurrence and put it behind her.\n\nShe looked down at the coffee table and noticed the card she had gotten from Jill the yesterday at the coffee house. She picked it up and glanced at it for a moment confused because all it said was her name and a phone number. There was no other information on it which seemed strange to her but she was still considering calling.\n\nShe put the card back down and began flipping through channeled only to discover nothing was on. She heard her phone go off and saw a text from Peter that said he was going to be later than usual. Aggregated she downed the rest of her wine and picked up that card again and dialed the number on it. It rang for a few moments as she wasn't even sure why she was doing it but she was hired and didn't know what else to do.\n\n\"Hello?\" A voice said on the other end of the phone.\n\n\"Um, Hi is this Jiless?\"\n\n\"Yes, this must be Anna.\"\n\n\"Yes, sorry about calling out of the blue like this but...\"\n\n\"Not at all, what can I do for you?\"\n\n\"I don't know exactly, I just... I guess I was just looking for someone to talk to.\"\n\n\"Of course, hey why don't you meet me at Jamie's for a drink?\"\n\n\"Um.,\" Anna said thinking for a moment still not sure why she was doing this. \"Sure, one drink wouldn't hurt.\"\n\n\"Great, meet you there in 10 minutes.\"\n\n\"10 minutes, how...\" Anna asked before the phone hung up.\n\nShe was confused by what she was doing and why but she went and got dressed before heading down to Jamies which was the bar right around the corner from her apartment. She threw on a dress that she hadn't worn in a while just to feel a little dressed up for a change before she headed out.\n\nWhen she got there she looked around for Jill but didn't see her anywhere. She sat down at the bar and waited but felt silly sitting there by herself. She almost felt like she was cheating on her husband which wasn't at all what she was doing but still she didn't see Jill anywhere so she thought about just going home.\n\n\"Ah, there you are!\" Jill suddenly said as she sat down next to her.\n\n\"Oh shit, you startled me.\" \n\n\"I'm sorry, nice dress by the way.\"\n\n\"Thanks, I don't get to wear stuff like this often so I figured what the hell.\"\n\n\"You're husband doesn't take you out?\"\n\n\"Well, he's been very busy with work lately so...\"\n\n\"Women have needs Anna, here.\" She said handing her a drink.\n\n\"What's this?\"\n\n\"It's a drink I invented, told the bartender how to make it, give it a try.\"\n\nAnna looked at the margarita glass filled with red liquid and said: \"why not.\" Before she drank it. \"Wow, that is very good, how do you make it?\"\n\n\"It's a secret, but maybe someday I'll give you the recipe.\"\n\n\"You aren't trying to poison me are you?\"\n\n\"You ask after you drink?\" She said with a laugh. \"Of course not, I told you, you needed a friend, here I am.\"\n\n\"A friend, so you just barge into peoples lives and expect them to be your friend?\"\n\n\"Hey if I remember correctly you called me?\"\n\n\"Yes, that's true...\"\n\n\"So let's start there, why did you call me?\"\n\n\"I... Honestly, I don't know.\"\n\n\"I think you do, you just haven't figured it out yet.\"\n\n\"Well, you just know everything don't you.\"\n\n\"I told you before, I read people.\"\n\n\"So then you tell me why I'm here then?\"\n\n\"Okay, your husband has not been fulfilling you lately and you need something to do to keep you busy.\"\n\n\"Okay, What else?\"\n\n\"You also aren't getting satisfied sexually.\"\n\n\"That's not true and it's also none of your business.\"\n\n\"Oh really, so he's giving it to you just the way you like it?\"\n\n\"Like I said, it's none of your business.\"\n\n\"I think you want it to be my business.\"\n\n\"That's not... Why are we talking about my sex life?\"\n\n\"I don't know, why do you want to?\"\n\n\"I don't I... I mean...\"\n\n\"Sounds like a sexually frustrated woman to me.\"\n\n\"Stop it!\" Anna said getting a little angry and frustrated.\n\n\"I am sorry, sometimes I don't know when to back off, I apologize.\"\n\n\"It's nothing, I'm sorry I... Thanks for the drink but I think I'm going to call it a night\" She said getting out of her seat. \"Here.\" She said putting money down to pay her back.\n\n\"Not necessary, I hope you enjoyed it.\" She said with a smile.\n\n\"Thank you, have a nice night,\" Anna said as she left the bar and headed back home.\n\n--------\n\nLater that night as Anna slept she started having very intense dreams. They were very hot and passionate dreams which was odd to her because usually she didn't have sex dreams. It was hard for her to focus but she found herself having sex with a faceless man as in she just couldn't make out who it was. It wasn't so much about who she was having sex with as much as it was about the sex itself. She could feel the cock inside her as she was in complete control and bounced on top of this dream sex partner.\n\nIt felt very real and felt amazing but she was still confused because usually when she and Peter made love he was usually on top of her. It wasn't like he liked overpowering her or anything it was just what they were used to and she had no problem letting him fuck her like that despite the fact it had been a while since the last time they did it.\n\nAnna awoke covered in sweat right as she orgasmed. Peter was asleep next to her as she struggled to catch her breath noticing the wetness between her legs. She had never had a wet dream before so this was a bit unusual to her as she rolled out of bed and headed to the bathroom to get cleaned up. \n\nShe headed into the bathroom and turned in the light as she cleaned herself up. She looked in the mirror at herself covered with sweat and for a moment she felt good about herself. She looked herself over and just felt sexy which was the first time in a while so she admired her reflection for a moment before returning to the bedroom and getting in a new pair of panties before climbing back into bed.\n\nPeter never awoke but she knew he was exhausted from all the extra hours he had been putting in lately. As she laid there she thought about what Jill had said about him possibly cheating on her and that's why he had been out so late but she knew it couldn't be true. Even though their sex life had been quiet lately she still trusted him. \n\nDespite these thoughts, It didn't take long for her to fall back asleep. The rest of the night seemed pretty uneventful in regards to her dreams so she rested well until the next morning as the sun came up. When she awoke she noticed Peter was already gone like usual but she shrugged it off and got up to shower and get ready for work.\n\nAnna's day was pleasant as she worked. She seemed almost distracted by her dream like it was something she needed and soon she started to fill with a heed for the real thing. She pulled out her phone and sent Peter a text wondering if he would be home on time because she was thinking of taking him for a ride but before she could she got a text message from Jill.\n\n\"Hey, sorry if I made you upset last night, I would love to hang out again.\"\n\nAnna couldn't believe Jill was still trying to be her friend after last night. She didn't understand why this woman wanted to be her friend so badly or what her interest was in her at all. At first, she didn't text back and went to send the test she had originally wanted to send to Peter. Once she had sent it she waited for a while.\n\n\"Sorry Babe, working late again, I promise I will make this up to you though once this project is done.\"\n\nShe read the message from Peter and she was bumbed out. She wasn't sure how much longer she could take him working so late like this. She went back and read the Text she had gotten from Jill and just stared at it. She wasn't even sure why she was so tempted to message her back after what had happened last night. She put her phone away without responding and headed to lunch.\n\nAs Anna sat in that diner she was about to order a coffee when suddenly one was put down in front of her. She was surprised before she looked up and saw Jill standing there with a smile on her face before sitting down across from her.\n\n\"Are you stalking me now?\" Anna asked.\n\n\"Ha, I knew this is what time you were here for lunch the last time so it was safe to assume you'd be here again.\"\n\n\"Really Jill, what do you want from me?\"\n\n\"What makes you think I want anything from you, I told you before, you need a friend and here I am.\"\n\n\"But friends aren't usually this pushy.\"\n\n\"Look, about last night, I had no right to pry into your personal life like that, It was wrong of me and I'm sorry, its hard for me sometimes.\"\n\n\"How so?\"\n\n\"Because when I read people I get a lot of information about people and can seem pushy and even creepy to people, maybe I try too hard but it can be tough for me to make friends myself.\"\n\n\"Well, then maybe we need each other, maybe we met for a reason, I know how it feels to be lonely sometimes, so maybe I could use a friend if you still want the gig.\"\n\n\"I would like that,\" Jill said with a smile as she sipped her coffee. \"By the way, try it.\"\n\n\"Oh, are still trying to poison me?\"\n\n\"You enjoyed the drink I made last night didn't you?\"\n\n\"It was good, but you're good at making coffee too, do the workers here know?\"\n\n\"Just something I have them whip up for me, like I said, try it.\"\n\nAnna took a sip of the coffee in front of her. It had a strange flavor to it but it was very good. She was shocked by how tasty it was as she had never had coffee this good before. She drank most of it before putting it back down on the table.\n\n\"That is good,\" Anna said.\n\n\"Told you,\"\n\n\"Well, I guess I could use a friend that makes great coffee.\"\n\n\"I'm glad, and once again sorry about last night and talking about your sex life.\"\n\n\"Honestly, it has been tough with Peter working so much.\"\n\n\"You don't think he's cheating on you do you?\"\n\n\"No, not at all, I trust him completely.\"\n\n\"And so you should, I mean look at you, you are a stone cold fox that he is lucky to have.\"\n\n\"Oh stop it.\"\n\n\"Seriously, you are a beautiful woman, don't try to hide from it.\"\n\n\"You mean with my glasses and all?\"\n\n\"Glasses are very sexy actually, a smart sexy woman, any man would kill to have you.\"\n\nAnna wasn't sure why but she suddenly felt very relaxed around Jill. It didn't really make any sense why she should but she was opening up to her which is something she didn't usually do with anyone. She told her about Peter and how long they had been together, how he proposed and even more. They chatted for a long time before she suddenly looked down at her watch and realized she was going to be late.\n\n\"Oh my, I am so sorry but I have to get back to work.\"\n\n\"No worries my dear, but let's do this again soon?\"\n\n\"Definitely, how about tonight? Peter is working late again.\"\n\n\"Sorry, I can't tonight but I'll tell you what, here is my address, come over tomorrow night and we'll crack open a bottle of wine.\"\n\nAnna looked at the information and thought how strange it was this woman was already inviting her over to her place even though they barely knew each other. Despite everything in her head telling her this was strange she agreed to meet her the following night.\n\n\"I'll be there,\" Anna said with a smile \n\n\"I look forward to it, just get a good night sleep,\" Jill said with a smile as Anna turned and rushed back to work.\n\nShe sat there with a smirk on her face watching Anna walk down the street. She picked up the empty cup that Anna had been drinking from and smelled it. The scent was intoxicating as she enjoyed the aroma before licking the edge where her lips had touched it.\n\n\"Almost ready my sweet Anna.\" She said before she stood up.\n\nJill walked into the kitchen past employees seemingly unnoticed before she walked into the back storage opening the door and closing it behind her. She turned on the light as one of the employees was standing in the corner shaking with his hands tight to a shelf and his mouth gagged. She looked down at his cock that was sticking out if his pants glowing a strange pink color as he seemed to be struggling with a strange sensation.",
        "\"Well thank you for letting me make that coffee again.\" She said taking off his gag.\n\n\"Oh god, what did you do to me, make it stop!\" He said looking down at the erect glowing cock that seemed to be causing him discomfort.\n\n\"My pleasure, besides you deserve a little something for your help.\" She said as she kneeled down in front of him taking his penis in her hand and began to lick it and stroke it. \"You like that don't you?\"\n\n\"Oh Fuck!\" He said as she began to suck on his cock.\n\n\"That's right, it is time for your reward!\" She said as she took his cock into the back of her throat as she sped up sucking him harder and harder.\n\n\"Oh shit... Oh FUCK!\" He yelled out as his cock began to twitch violently before emptying the content of his balls into her throat.\n\nAs amazing as his orgasm felt he suddenly began to feel very strange as after his cock stopped squirting liquid he suddenly began to feel something warm start to flow through his penis as well as she continued to suck. The sensation was intense and unending as it began to feel like his energy was being sucked from him in an endless orgasm as his body went limp and lifeless as he was still hanging there from where his hands were tied.\n\nJiless wiped her mouth before she stood up enjoying her meal. She smiled and stretched before looking down at the dead coffee server in front of her before she turned and opened the door shutting the light off as she exited leaving the body there to be found later.\n\n----------\n\nThat night Anna went to bed early as she was bored being home alone most of the evening. She had felt a little strange before she went to be but it was nothing that she was too concerned about as she assumed she was just overtired. She laid down resting her head on the pillow and quickly fell asleep.\n\nSoon she began to have another extremely erotic dream as she found herself make and on top of a man again. Strangely enough this time it was Peter as she was pulling off his pants and throwing them on the floor. The room didn't look like their bedroom as the bed seemed larger with softer almost satin sheets on it. She didn't spend much time looking at the decor as she saw his erection sticking in the air in front of her.\n\nAnna neeled down almost stalking his cock like prey. She breathed in his scent which gave her goosebumps before she got closer to it. She gently pressed her lips to the side of his member kissing it as she started at the has and got closer to his tip. It tasted better than she imagined it would as she stuck out her tongue and traced it up and down his shaft. She could hear his moans as she continued to taste his manhood.\n\nThe tip of his cock glistened with precum as she licked it up. Usually, she didn't enjoy the taste but this dream made everything seem strange and good as she teased him even more. She didn't see him as her lover as much as she saw him as prey. He was a means to an end, a meal almost as she continued to pleasure him. \n\nSoon her mouth had engulfed his cock as she began to suck on him. She gently caressed his balls know it would make him taste better which also seemed odd to her. Peter moaned out as if he was her prisoner ready to receive her pleasure. She let go of his cock looking up at him for a moment before she took her breasted and began to squeeze them around his cock massaging it. Her breasts seemed bigger than they should which she also was confused about but it didn't matter at the time. She knew this was a dream and wanted to enjoy it as much as possible.\n\nPeter's face seemed to be in agony as she teased him more and more. She almost enjoyed it feeling this great power over him knowing it was her decision when he would cum. She felt like a lioness in total control and she loved it as she continued to give him enough pleasure to keep him stimulated but not let him cum yet.\n\n\"You want me, Baby?\" She said still squeezing his cock with her breasts.\"\n\n\"Oh fuck yes!\"\n\n\"Are you ready for the end?\"\n\n\"Holy shit, yes, I'm ready!\"\n\nAnna gave the tip of his cock a kiss before she climbed up towards him and let him slide inside her with ease. Peter let out a yell as if her pussy was the greatest thing in the world to him. She could feel his cock inside her as she began to ride him starting out slow and getting faster with each passing moment. The feeling was incredible as she milked him before she began to notice some strange things.\n\nShe looked down and noticed Peter's hand were bound by what looked leather straps. The room seemed darker too almost like the mood had changed. As strange as it all was she continued to ride his cock as it felt incredible. She began to moan out herself as this was the best sex she had ever felt even though it was just a dream. \n\nSuddenly she felt two hand slide around the front of her from behind grabbing her breasts. The sensation was amazing but she wasn't sure who it was until she heard Jill's voice in her ear whispering. At first, she couldn't make out what she was saying but she felt her. Breasts press against her back as the arms held her gently caressing her nipples.\n\n\"Take him.\" She said as she kissed the side of her neck sending electricity through her body. \"No man should ignore his wife as he has, take him, take him now!\"\n\n\"Oh, oh God!\" She yelled out as the pleasure was getting much more intense.\n\n\"Take him, let his final moment be the greatest feeling in the world!\" Jill continued as Anna could feel her orgasm growing. \"Take his very essence, rip it from him and let it fill you!\"\n\n\"Oh... Oh, Fu... FUCK!\" Anna screamed as she felt his cock blow inside her sending her into an orgasmic frenzy as she felt a warm sensation fill her body as if she was sucking energy from Peter himself before she jerked awake yelling out covered with sweat as her pussy squirted for a moment soaking her panties through and leaving a wet spot on the bed.\n\n\"Oh shit, are you okay?\" Peter said as he was standing at the door as he had just gotten home from work.\n\n\"Peter I um... Sorry, it was uh... A bad dream is all.\" She said breathing heavily as she rolled out of bed and headed for the restroom to get cleaned up.\n\nPeter was confused as he saw the giant wet spot on the bed where she had been laying. He headed down the hall to the bathroom knocking on the door to check on Anna who didn't answer at first. He knocked again calling out her name as she finally opened up and he could see her face was wet as if she was splashing water it in.\n\n\"Are you okay?\" He asked as she was still catching her breath.\n\n\"Yeah, I um, I'm okay, you're home early?\" \n\n\"Yeah, almost done with the merger, should be done after tomorrow.\"\n\n\"That's great, I was starting to miss you.\" She said as she pulled him in for a kiss.\n\n\"I can see that, you know I'm not that tired if you want me to help you forget about that bad dream of yours.\"\n\n\"Oh, I would love to but I um, I am just exhausted but um, let's wait until its done, make it special.\"\n\n\"Oh, sure that sounds good, I supposed I can wait another day or two.\"\n\n\"I promise it'll be worth the wait.\" She said giving him another kiss.\" Well, I'm going to um... Change the sheets and go back to bed.\"\n\n\"Okay, I'm still a bit wired from work so I'll be in in a little while.\"\n\n\"Good night Babe.\" She said as she laid back down on the bed.\n\nAnna laid awake for a while thinking about that dream and wondering what was going on. She began to think maybe she was just sexually frustrated because Peter hadn't been home much the last few weeks. The fact that Jill was in the dream too also made her question a few things but she shrugged it off as nothing. Also, she had read somewhere before that dreaming about sex with different people you know doesn't usually mean anything so she closed her eyes and went to sleep.\n\n-------\n\nThe next day she was up and out if the house pretty quickly. She knew that tonight would be Peters last late night and that she had plans to go over to Jills but she was actually feeling a little nervous about it. That dream was still on her mind and she wasn't sure why it was bothering her but she considered canceling on her a few time throughout the day.\n\nRight before she went to lunch she got a text message from Jill that read \"looking forward to seeing you tonight!\" With a smiley face after it.\n\nShe knew she had to just be crazy to think Jill had anything to do with her dreams the past two nights but it was still in the back of her mind. She felt comfortable around her which was still odd to her as she barely knew her but as nervous as she was to go over to her place she was also a bit excited as well.\n\nAs she sat at her desk she began to feel a bit strange again. Her top began to feel a little uncomfortable almost as if her breasts had grown a little for in reason and it was making her bra hurt a little as it squeezed her. She also began to feel a little strange between her legs like she needed to masturbate again which was making her feel like something was seriously wrong with her as she got up and headed to the bathroom.\n\n\"Oh!\" She said as she suddenly bumped into a young man who was walking past her desk. \"I am so sorry.\"\n\n\"No it's my fault, sorry I should have been watching where I was going.\" \n\n\"You're the new guy from the mailroom right?\"\n\n\"Yes, I'm Timmy.\"\n\n\"Nice to meet you, Timmy.\" She said as she turned and headed off as he went back to work.\n\nAs Anna got to the restroom when she realized she was feeling much better. She wasn't sure what had happened but she was no longer feeling strange and horny anymore. She was relieved as she touched up her lipstick in the mirror and examining her swollen breasts which did seem a little bigger but she was feeling so go about herself that she just smiled and headed back to work.\n\nTimmy had returned to the mail room and was feeling very strange all of a sudden. He suddenly realized he had a growing hard-on in his pants that just sort of appeared out of nowhere and wasn't subsiding at all. He did his best to ignore it however it was becoming almost painful the longer he waited until he couldn't take it anymore.\n\nTimmy ran into the bathroom and found a stall closing the door and trying to be as quiet as he could as he pulled down his pants and saw the raging cock sticking in the air in front of him. There was nobody else in the men's room so he took his member in his hand and began to jerk himself off trying to get this erection to subside.\n\nWith each stroke, it sent an intense wave of pleasure through him as he worked to get rid of this current issue. The feeling was getting more and more intense as it was getting harder for him to keep quiet as he approached orgasm. He bucked his hips as he looked and saw his cock start glowing very strangely to the point he was starting to freak out but the pleasure was so intense he couldn't concentrate.\n\nHis cock erupted shooting what seemed like gallons of cum up in the air hitting the ceiling and dripping back down on top of him. His penis was like a fire hose that didn't seem to want to stop. What was even stranger was it looked like a red colored energy started to shoot out of him well as he felt a warm feeling in his body begin to flow from him like he was draining his very essence. \n\nTimmy began to get light headed as the pleasure continued before his vision went white and he fell to the floor. His cock continued to squirt a few more times as his corpse laid there only to be found hours later by a coworker covered with bodily fluids curled up in the stall.\n\n----------\n\nAnna was at home trying on different dresses and such which she wasn't sure why. It was just supposed to be drinks with a friend but she wanted to look her best and she was struggling until she saw the black dress she was wearing the other night when they went to the bar together. She picked it up and looked it over before smiling and slipping it on. She looked over 8n the mirror and felt really good about herself as she looked over how much it hugged her figure but then she noticed something.\n\nShe grabbed her purse and headed out with a slightly different agenda. She was still going to see Jill but she wanted to ask her a few questions. If she truly was a therapist as she claimed to be she should be able to g8ve her some answers.\n\nAs she arrived at Jills apartment building she felt butterflies in her stomach. She paid the cab driver and headed inside looking at the very nice building she lived in. She looked at the piece of paper she had been handed and checked to see what floor and apartment number before she stepped into the elevator. \n\nAs the door opened she walked out into the hallway and saw the door a few feet away. She was suddenly very nervous all of a sudden as she took steps towards it. She must have stared at the number for a solid minute trying to gather her thoughts but she reached her hand up ready to knock when she heard a click. The door opened and Jill stood there looking stunning in a very tight red dress that hugged every curve of her. Anna couldn't help but stare at her blown away by how good she looked.\n\n\"Well hello there Anna, won't you come in.\" She said standing aside and inviting her letting her walk past her. \"By the way you look very nice this evening, that dress really compliments your figure.\"\n\n\"Oh, thanks, I like yours as well, it's very...\"\n\n\"Isn't it, would you like a drink?\"\n\n\"Sure,\" Anna said sitting down on one of the stools at the counter. \"This is a lovely place you have here.\"\n\n\"Thank you, I haven't been here very long, actually moved in last Friday.\"\n\n\"Last Friday, that was the day we met.\"\n\n\"Oh no, we met once before that, I was just looking for a place up to my standards near you which took me a few days.\"\n\n\"Near me? What are you talking about?\"\n\n\"The previous owner's body is in the other room if you want to see it.\"\n\nAnna suddenly got very nervous by the way she was talking to her before she said \"ha, that's a good one,\" trying to ease the tension and make sure she was joking.\n\n\"Here you go.\" She said coming out of the kitchen and placing a champagne glass down in front of her before she sat down on a stool across from her. \"Ah, I see the physical changes have started.\"\n\n\"Excuse me?\"\n\n\"Your breasts, they are so much bigger now.\"\n\nAnna looked down at her breasts which she had noticed were bigger earlier. She looked back at Jill who just had a strange look in her eyes as she smirked at her and took a sip of her own drink. Jill could feel her heart racing as she suddenly felt as if she was in danger.\n\n\"I um, so Peter is done with his work project so uh, no more late nights, well after tonight anyway.\"\n\n\"I know, that why I invited you over tonight.\"\n\n\"You know? What are you talking about?\"\n\n\"Tonight is the final dose to complete your transformation.\"\n\n\"Transformation? What the fuck are you talking about?\"\n\n\"You are such a sweet and innocent woman, it has been fun corrupting you these past few days.\" She said smiling as she stood up and walked around the counter to her. \"Like I said, tonight is your final dose.\n\n\"Dose, I'm not letting you drug me with anything.\" She said knocking her champagne glass over as she stood up from her stool.\"\n\n\"Ha, you silly girl, Its already inside you.\"\n\nAnna suddenly remembered the drink she had bought her at the bar the other night and the coffee from yesterday before she said: \"What the hell have you been giving me?\" \n\n\"Just some of my essence, you have been experiencing the effects from the beginning, that scent when we first met which caused you to go upstairs and violate yourself in the bathroom at work, those were my pheromones, they just started the process along.\" \n\n\"What... Pheromones?\"\n\n\"Also that Young man from the male room you bumped into, because of you he jizzed to death in a bathroom, luckily I was able to grab his energy so he didn't go to waste.\"\n\n\"This is... What are you, what are you... Turning me into?\"\n\nJill smiled again before she suddenly began to change a little as two large black wings sprouted from her back ripping through her dress making it fall to the floor. She stood there naked as Anna noticed a tail down between her legs curling from behind. She looked back up to see two small horns pop out if the side of Jill's head as well as she laughed a little staring at her with black eyes.\n\n\"I've been giving you my bodily fluids, slowly changing you from the inside, you've felt it haven't you, and had the dreams as well?\"\n\n\"Oh my God, stay away from me!\"\n\nAnna was terrified by what she was seeing as she slowly backed away. She looked over at the door wondering if she could make it by running around the other side of the counter. She looked back at Jill who was slowly walking towards her licking her lips as her eyes seemed different, almost red and not human.\n\n\"Don't even think about it, I'll have you in my grasp before your first step,\" Jiless said.\n\n\"What do you want from me?\" Anna said realizing she was trapped.\n\n\"To give you a gift, you freed me from my prison and I am here to return the favor.\"\n\n\"What are you talking about, what are you going to do to me?\"\n\n\"That little gem you dropped, at the store, that was my prison, I've been watching you from the moment I escaped, the suppressed woman you are and the freedom I will bring you.\"\n\n\"Please, please don't hurt me!\"\n\n\"Hurt you?\" She said as in the blink of an eye she had Anna pressed against the wall surrounded by her wings as she shivered in fear. \"I would never hurt you, my dear, I mean to free you.\" She continued before she leaned forward and pressed her lips to hers. \n\nAnna was shocked and scared but Jills kiss felt strangely comforting as her tongue gently played with her own. She tried to resist but she felt herself starting to get light headed and she couldn't think rationally anymore. She was so turned on but she also knew it had to do with whatever it was she had ingested making her feel this way but she could not resist.\n\nJill slid off Anna dress letting it fall to the floor. With a quick swipe of her fingernail which looked more like a claw as the skin on her hands and most of her arms were black to up near her elbow ripped her bra open with ease. Anna could feel Jill's warm breath as she leaned down and began to start to lick her mounds with a tongue that seemed longer and more pointed as it wrapped around her nipple sending ripples of pleasure through her. She was so ashamed of herself for enjoying what was happening to her right now but it was as if she wasn't in control of her actions anymore.\n\nAs Jill kissed her again and slowly pulled her lips away seeing Anna standing there squirming from her touch. She examined the exquisite example of a woman in front of her licking her lips getting excited knowing what she was about to do to her. Her tail curled up between her legs and began to tease the edge of Anna's panties. She squirmed a little more getting aroused by the feeling of Jill's tail against her skin.\n\n\"Are you ready Anna?\" Jill said.\n\n\"I uh... Please...\" She replied dazed and confused as her panties were being slipped off by her tail. \"Don't... Peter...\"\n\n\"Hush my darling, Peter is the final piece to this puzzle, but first...\" She said as the tip of her tail slid inside Anna making her moan out loud at the sensation. \"Now for your final dose!\"\n\nAnna felt a warm fluid suddenly squirt inside her making her yell out as a warm tingling sensation began filling her body. Jill let out a moan as if this was pleasurable for her as well. She emptied more of her fluids into Anna to the point they were starting to drip out of her onto the floor. Once she finished she pulled her tail out letting the fluid drip everywhere before she backed away from Anna as she moaned and squirmed standing there shaking before she fell to the floor.\n\nAnna felt very strange as her body seemed to be orgasming over and over again. She looked down as her fingernails began to grow a little becoming sharper. The pleasure continued as she suddenly felt something begin to grow from her shoulder blades as she saw the shadow of two large wings on the floor beneath her. She then felt something strange as she started to swell at the has of her spin before a tail popped out. ",
        "She was on the floor for a few moments before the pleasure began to subside. Jill was sitting on the stool again still reeling from the experience as she watched her creation come to terms with what she was. Anna stood up as she examined herself and what had been done to her. She was filled with an intense lust that was hard to describe as she wanted to fuck someone right now despite the extreme pleasure she had just gone through.\n\nShe walked over to the mirror on the wall looking herself over. Her eyes were red and she had two small horns on the sides of her head. She looked at her body which looked extremely sexy despite the wings, claws, and tail dangling from behind her. She began to think about Peter and what this all meant as she turned to face Jill.\n\n\"Ah, you look absolutely beautiful,\" Jiless said admiring her work.\n\n\"I, what...\"\n\n\"Shhh, now it is time to complete your transformation.\"\n\n\"But, I thought it was complete?\" Anna said almost in a trance.\n\n\"Physically yes but now it is time for you to go to Peter.\"\n\n\"Peter, my husband.\" She said as she looked away as if she didn't know how to feel about this.\n\n\"Yes, it is time for you to devour his soul.\"\n\n\"His soul?\"\n\n\"Yes, you have to feed off of someone you love and then and only then will you be a true succubus. You will be free of everything and be part of a world of endless pleasure.\"\n\n\"Yes Jiless, I... I will go to him now.\"\n\n\"Very good, go and wait for him, and give him the greatest night of his life, as it will be his last.\"\n\n---------\n\nPeter got home after his final day of working late. It had been a rough few weeks and he was happy it was over. He had missed spending time with Anna and was looking forward to making it up to her. He had known she was going out with a new friend so he wasn't sure if she would be home or if she would be awake if she was so he put his briefcase down on the table and went to the kitchen to grab a drink.\n\nAs he stepped back out into the living room he turned the light on as he was going through the mail that had been on the counter when he suddenly noticed someone sitting on the couch. He looked up and saw Anna laying on the couch wearing nothing but a bathrobe as she smiled at him. He was shocked to see her but couldn't help but notice how good she looked. Her lips had a dark shade to them almost like she was wearing a new lipstick or something and her eyes seemed shadowy.\n\n\"Wow, Anna you look amazing! What are you doing up?\"\n\nShe smiled before she stood up from the couch and walked towards him and said: \"I've been waiting for you.\"\n\n\"Well, I'm glad you did.\" He said before she pulled him in for a kiss. \"But I thought we were going to wait until tomorrow, you know go out and celebrate and all?\"\n\n\"Hmmm, I don't want to wait anymore.\" She said as she opened up her robe showing off her name body underneath. \"Do you?\"\n\nPeter looked her up and down and was blown away by what he saw. She had always been beautiful to him but tonight she looked amazing as her skin seemed flawless and tone. He looked at her breasts which seemed larger than he remembered but perfectly rounded. It was hard for him to contain his excitement as he felt himself getting aroused.\n\n\"Ah.\" She said as her hand began stroking the growing bulge in his pants. \"There you are.\"\n\nIn the back of his mind, something seemed a bit off about her but it wasn't anything sending him any red flags. He was also thinking with a different part of his body at the moment but why would he have expected anything? This was his wife and she obviously wanted to have sex with him so there was no reason to question any of it in his mind.\n\nAnna looked up at him as her hand began to lose his belt and unzip his pants. This was a little strange to him as she usually wasn't this in control when it came to sex but before he could comment she was down on her knees taking his hardened cock in her hands and start to kiss and stroke his member. His knees shook a little as she took his cock in her mouth and gave him a few good sucks that felt amazing.\n\n\"Shit!\" He blurted out as she molested his penis. \"That feels... Oh wow.\"\n\n\"You like that?\" She asked in a sexy voice as she continued to pleasure him.\n\n\"Oh yeah.\"\n\n\"Shall we finish in the bedroom?\" She said as she stood back up and let the robe fall off her shoulders falling to the floor.\n\n\"The bedroom, the couch, wherever you want Babe!\" He said as she took his hand and led him to their bed.\n\nPeter had no idea that his wife was no longer the loving woman he had been married to for years. He had no idea how dangerous she was or what was about to happen to him. All he saw was the woman he loved looking sexier than she had in a very long time and he was going to have his way with her which was long overdue. He watched as she crawled on to the bed showing off her amazing ass before she looked back at him with and spreading her legs a little wanting him to mount her from behind.\n\n\"I want you, I want you to fuck me, I want your cock inside me pumping me over and over again!\" She said in a sexy voice as she moved her waist like she was already milking his cock.\n\n\"Holy shit, what's gotten into you.\"\n\n\"I was hoping it would be you.\" She said with a chuckle as it was getting hard for him to hesitate any longer as he got his pants off the rest of the way.\n\nHe pulled his shirt off throwing it before climbing on the bed and placing his hands on her ass. He teased her slit with his cock which made her shiver a little as she wanted his cock so badly. She was getting aroused thinking about everything she was about to take from him. \n\nAfter a little more gentle teasing he finally shoved his cock inside her as she let out a loud moan. Peter was surprised at how aroused she was and also how amazing it felt the moment his cock was inside her. With every passing thrust, it sent a wave of pleasure through him. He leaned forward and wrapped his arms around her stomach before sliding them up and massaging her breasts which seemed bigger and more plump than he remembered. She smelled so good as he got closer to her kissing her neck and breathing her in. He couldn't figure out what scent she was wearing but it was intoxicating and it was turning him on even more.\n\nShe ran her hand through his hair as her pheromones enter his nostrils. She was putty in her hands at this point as the pleasure was incredible. His hands against her skin was like fire as she could feel his energy getting ready to exit his body. She wanted this to last as long as possible as her mind began to wonder a little as he began to touch her in certain spots they way he had in the past.\n\nAnna began to forget about her purpose and her plan for a moment as she was suddenly just enjoying sex with her husband. It had been a while and she was starting to feel the way she did before she met Jill as she was just so aroused by what he was doing to her at the moment and was starting to get into it.\n\nShe slid herself off if his cock and grabbed his sweaty body before throwing him down on the bed and climbing back on top of him. She kissed him as she started to ride his cock so much harder and faster as she lost herself to the moment. It was suddenly as if she had been snapped out of her trance and just wanted to fuck her husband. It was at the moment she suddenly realized what she was doing and what had happened to her. She suddenly stopped and looked down into peters eyes for a moment.\n\n\"Peter?\" She said as his cock was only a few strokes away from finishing. \"Oh my God Peter I...\"\n\n\"What is it?\" He asked confused as to why she had stopped.\n\n\"Peter, I love you.\"\n\n\"I love you too, what's wrong?\"\n\n\"I... We have to...\" She suddenly stopped as she let out a small sound like she was in pain.\n\n\"What is it, Honey?\" Peter asked her confused until he started to notice something odd happening to her.\n\nHer eyes began to change turning black as she looked back down at him. Her teeth seemed to extend as he watched two horns grow from the sides of her head. Peter was getting freaked out watching this before he saw to large wings form from her back sticking up in the air as her hands turned black up to her elbows before her fingernails grew becoming like claws almost \n\n\"What the fuck?\" Peter said watching his wife transform into some sort of demonic creature on top of him.\n\n\"It is time.\" She said in a low demonic voice as she lost herself to her succubus instincts again.\n\n\"Anna, Anna what the hell happened to you?\" Peter said terrified by what he was seeing.\n\nShe looked down at him with those black lifeless looking eyes as she began to ride his cock again. He was seconds away from orgasm and couldn't stop it if he tried but the sensation was so good that he wasn't even sure he wanted to stop it. Anna was still struggling a little but she couldn't stop at this point as it was too late. Tears began to drip from her demonic eyes as Peter let out a loud moan as his cock erupted inside her. \n\nThe sensation was greater than anything Anna was expecting as she drained Peter of his fluids and his soul. The fluids and the energy filled her making her body feel incredible as and an inhuman orgasm exploded inside her making her body shake as she sucked up every drop of the man she loved for what felt like forever. She closed her eyes enjoying the sensation until everything began to settle down and the room was quiet. \n\nShe opened her eyes and looked down at Peter who had a lifeless stare on his face as she suddenly felt heartbroken about what she had just done before she started sobbing against her dead husband's shoulder. Her body returned to normal as the guilt and sadness filled her driving her mad with guilt and sadness.\n\n\"Now you are free.\" A voice said from behind her as she turned to see Jiless standing in the doorway. \"No, you are free!\"\n\n\"I thought you said this would be the end of me caring?\"\n\n\"Now you have nothing you love holding you back, that is all I meant.\"\n\n\"You made me kill my husband, the only man I ever loved!\" She said climbing off of him and walking towards her\n\n\"That's what you have to do to truly become a succubus, we all make a sacrifice.\"\n\n\"But I never asked for this, you did this to me, you bitch!\"\n\n\"Now calm down you, you don't understand the gift I have given you, now you can...\" Jiless suddenly stopped as she was struck by the filled force of Anna in her demon form knocking her through the wall and into the next room. \n\nShe landed hard before she transformed herself and jumped back at Anna as they started attacking each other in a demonic battle. Unfortunately, Anna didn't have as much experience so she was not doing very well after that first hit but she did her best scratching and biting every chance she got but Jiless grabbed her and threw her across the apartment as she crashed through another wall hitting the refrigerator in the kitchen.\n\nAnna was injured but tried to pull herself back up. There was blood dripping from her mouth and she knew she couldn't take another hit as Jiless was only a few feet away from her standing there much stronger than her.\n\n\"You ignorant little bitch, if you don't want my gifts then I will send you to the afterlife with your departed Peter.\n\nAnna looked through the broken walls seeing Peters lifeless body still laying on the bed before she said: \"do it, I don't want to live without him, so go ahead.\" As she accepted her fate ready to die.\n\n\"Very well,\" Jiless said as she went to attack only to realize she couldn't move. She looked down at the rug she was standing on and was confused as she couldn't move a foot in any direction. \"What is this magic?\" She said snapping her fingers and burning the small rug only to see a strange design painted on the floor. \"Who did this?\"\n\n\"That would be me.\" A voice said as they both looked to see a very attractive red headed woman sitting on a chair in the living room sipping on a glass of red wine.\n\n\"You!?\" Jiless said in anger.\n\n\"Yes, me, you have been a bad girl Jiless and now I have to clean it up.\"\n\n\"You have no right to interfere with this Witch! Ire in gehennam Nessira!\" She spoke in an ancient tongue.\n\n\"That's not very nice, and If you aren't polite I will send you there myself!\" Nessira said standing up and walking towards her. \"By the way, I am Nessira. \"She said introducing herself to Anna. \"I have to apologize as we have a 100% satisfaction guarantee at Liliths and... \"She said looking over at the bedroom before saying: \"and I am guessing you aren't satisfied.\" \n\nAnna fell to her knees as the pain of her injuries started to get to her. She wasn't sure what was going on as she had a flood of emotions inside her ripping her apart. Jiless seemed to be trapped for a moment and she did not know who this red-headed woman was or what she wanted.\n\n\"That's fine, you rest and I'll get back to you.\" She said before turning back to Jiless.\n\n\"You think you are the big hero here aren't you, trying to make up for all your past failures and horrible deeds,e even raising that crossbred bitch as your daughter like you are doing the world a favor, well what happens when you lose control of her, and that store, you think my escape was an accident? You have no idea what is coming do you?\" Jiless said as Nessira just stared at her.\n\n\"I'm no hero, I am the Red Witch, and nobody talks about my daughter like that.\" Nessira said before she raised her hand and said: \"et demetam posteriora tua\" as Jiless suddenly flung through the wall outside disappearing as if a supernatural wind threw her hundreds of miles away.\n\n\"Bitch!\" Nessira said before turning back towards Anna who was still confused and practically sobbing on the floor in her demonic form. \"I am so sorry about all of this.\" She said kneeling down towards her.\n\n\"Did you kill her?\"\n\n\"No, as much as I'd like to I don't kill other succubi.\"\n\n\"Wait, you're a?\"\n\n\"In the flesh, now put this on,\" Nessira said placing a necklace around Anna's neck with a small crystal on it.\n\n\"What is this?\"\n\n\"Something I invented, it will absorb the sexual energy around you given off by people who are aroused by you sustaining you without having to kill them.\"\n\n\"Thank you but, I don't want to live anymore.\"\n\n\"Why is that?\"\n\n\"I just killed the man I love, I can't... I can't live without him.\"\n\n\"Well, this might hurt a little but...\" Nessira said before she suddenly jammed a shard of some sort of crystal into Anna's hand as she yelled out in pain.\n\nAnna looked at the crystal she had just been stabbed with as it began to glow before she began to feel dizzy and light headed. It wasn't long before the room began to spin and she fell to the floor before everything went dark.\n\n--------\n\nAnna had a nasty headache as she opened her eyes trying to focus on what was in front of her. As her vision got a little better she realized she was laying on the couch covered by a blanket. She noticed Nessira sitting in the chair across from her looking through an old looking book.\n\n\"What the... Where?\"\n\n\"Oh you're awake, how do you feel?\"\n\n\"Terrible, what happened?\"\n\n\"Well you are probably hungry, but you're turning me on a bit so that crystal should help you feel better in a few moments so just rest a bit.\"\n\n\"What did you do to me?\"\n\n\"Well, first I found a spell to fix up your apartment here, was a lot of holes in the walls and such.\"\n\n\"Why did you bother, I already told you I want to die!\"\n\n\"Yeah I heard you the first time, but I'm not letting you do that so get over it.\"\n\n\"I am tired of succubus bitches making my decisions for me!\" Anna said getting angry as she tried to get up but was still weak.\n\n\"Give it another minute before you try to kill me, also I left a present for you in the bedroom,\" Nessira said still reading her book.\n\n\"What, a present? No, what did you to Peters body?\" She said suddenly pulling herself together as she ran to the bedroom.\n\nAnna opened the door worried about what had been done when she saw Peter laying in bed apparently asleep as she could see him breathing. She stood there shocked not sure what had happened or what Nessira had done so she was confused. Nessira walked up behind her with a smile on her face.\n\n\"Is he, is that really?\"\n\n\"Yup, sorry I had to stab you but it was the only way to get his should out if you, then I just had to get it back inside him and now he's as good as new.\"\n\n\"You... You saved my husband?\"\n\n\"I did, but if you still want to die...\"\n\nSuddenly Anna threw her arms around Nessira hugging her tightly. Nessira was a little surprised but she gave her a pat on the shoulder. She could hear Anna starting to sob a little which she understood though she still wasn't much for the mushy moments but she still humored her for the moment.\n\n\"Okay okay,\" Nessira said pulling away. \"It's not that big if a deal, I was a healer back in the day and luckily he was the only soul you had fed on, if there had been more I probably wouldn't have been able to narrow it down.\"\n\n\"How can I ever repay you?\"\n\n\"Well, this never should have happened to you to begin with so just consider us even.\" Anna's face suddenly went from happy to concerned in a matter of moments. Nessira was a little confused as to why. \"Whats wrong?\"\n\n\"But, I am still a succubus.\"\n\n\"Yes, sorry cant reverse that I'm afraid, but there are some perks I can teach you.\"\n\n\"But, that means I will be a threat to him, his life will always be in danger.\"\n\n\"Oh that, one sec.\" She said walking away and digging through a bag she had brought with her. \"Ah, here it is!\" She said before walking back over and saying: \"here you go.\"\n\n\"What the... This is a condom?\"\n\n\"A very special kind, designed for people like you and me.\"\n\n\"What do you mean?\"\n\n\"Put this on him once, and he will be immune to your wicked ways.\"\n\n\"Really? Does it really work?\"\n\n\"Does with my boyfriend, in your new state you will still need sex, this just makes it so there are no dangerous side effects. Keeping an active sex life and wearing that gem around your neck should be enough to sustain you \"\n\n\"This is all so... Thank you so much.\"\n\n\"No worries, but why are you still talking to me?\" Nessira said as they both heard Peter moan a little from his sleep. \"He's having some pretty sexy dreams right now, go make them a reality!\" She said pushing her into the bedroom and shutting the door behind her.\n\nAnna walked over to the bed and examine Peter. She reached down and touched his chest feeling his heartbeat and his warmth as she began to tear up so happy she had him back. She was still a bit if a mess after everything that had happened but having him back just made her feel so much better.\n\n\"Huh?\" He suddenly said as he opened his eyes and looked around confused. \"Anna?\"\n\n\"It's me, Peter.\" She said before he grabbed her hand and got a close look at her.\n\nHe placed his hand on her face rubbing it before he said: \"Was it... All a dream?\" He asked still confused.\n\n\"I wish I could say yes.\" She said with some sadness in her voice.\n\n\"What happened?\"\n\n\"I, it's hard to explain, but I think the worst part is over.\"\n\n\"I thought... I thought I died.\"\n\n\"You did actually, but you're okay now.\"\n\n\"I am, are you?\"\n\n\"Peter, something has happened to me, I've changed.\"\n\n\"How so?\"\n\nShe took a step back and dropped the blanket she had been wrapped up in before she transformed again in front of him. Peter watched in awe as her wings spread and her body changed right in front of him. As frightening as she was she was still a beauty to behold and he couldn't help but feel aroused by her demonic form which seemed odd to him.\n\n\"Holy shit... Anna... What?\"\n\n\"I was tricked, by that woman Jill, she used me and changed me into this... Thing!\"\n\n\"I... You... I mean...\" Peter said stumbling over his words.\n\n\"I was changed into this monster and forced to kill you, I am so sorry Peter.\"",
        "\"You're...\"\n\n\"I know, I'm hideous!\"\n\nHe took her hand and pulled her close examining her before he said: \"you look beautiful!\"\n\n\"You're just saying that.\"\n\n\"No I'm not, Anna I love you and yeah this is weird, actually very weird but I have never been more turned on before in my life.\"\n\n\"Really?\"\n\n\"Really, I mean, is it safe?\"\n\n\"I can make it safe.\" She said putting her hand on his chest and gently pushing him down on the bed before sliding off the covers.\n\nShe looked at his erect cock and started to feel strange like her instincts were kicking in but she picked up the little foil wrapper that Nessira had given her and opened it up. Peter looked at the red rubber condom in her hand as she placed it on his cock unrolling it like a regular condom down his shaft.\n\n\"A condom?\" He asked a little confused. They both looked as it began to glow for a moment before disappearing leaving his cock there hard and uncovered. \"What happened?\" \n\n\"I'm not sure, I was told it only had to be used once and it would protect you from me.\"\n\n\"I see,\" he said leaning up and pulling her close. \"Let's find out.\"\n\n\"Wait, it might be too dangerous to...\" She stopped as his lips pressed against hers.\n\nIt was hard for her to resist as the changes to her made gave her an extremely high sex drive and this animalistic lust was starting to take over as she climbed on top of him grinding herself against his cock. Neither one of them could contain their lust as something about her transformation was driving Peter wild.\n\n\"Wait, wait wait!\" It's too risky!\" She said trying as hard as she could to stop.\n\n\"I don't care, I don't want to live in a world where I can't fuck you so If I die again then I die!\"\n\n\"Oh fuck!\" She said as she could no longer resist before she spread her legs a little letting his cock slide inside her with ease.\n\nAnna sat up riding her husband's cock again as her wings stretched out. Peter ran his hands up along her stomach before cupping her breasts and squeezing them in his palms. He felt her nipples perk up as she grabbed his wrists and pushed his hands harder against herself. \n\nThe sex felt amazing as she continued to move her hips milking his cock. As strange as all of this was Peter didn't care ab9ut what had happened to Anna as long as they could still be together. He actually felt guilty feeling as though if he hadn't worked so many late nights he would have maybe caught on that something was wrong and maybe have stopped it.\n\nAnna also felt guilty for what she had done to him and what she had let happen to her. It was constantly in the back of her mind but all that matter alright now was the pleasure they were sharing right now. She was still a little scared that she could kill him again but she wanted to believe that Nessira was telling the truth about the condom.\n\nPeter pulled himself up planting his face into her chest as he began to suck on her breasts teasing her nipples with his tongue. There was fear in the back of his mind as well that Anna could kill him again but it just seemed to turn him on even more as he continued to taste her skin. Her scent was strong and intoxicating as it filled his nostrils getting him even more aroused.\n\nSoon neither one of them cared about the consequences or anything anymore. Their lust grew stronger and stronger as the pleasure grew between them. Whatever changes had happened to Anna had made sex a hundred times better than they thought possible as their moans grew louder and louder and they got closer to orgasm. Peter looked up at his wife who stared at him with those black eyes which pierced his very soul. It was as if time had stopped right on the edge of orgasm as they held each other tightly before letting out cries of passion as his cock erupted inside her followed by her pussy tightening around him and vibrating as she enjoyed her own pleasure. \n\nNeither one of them knew how long to orgasm lasted before they collapsed into the bed together still wrapped in each other's embrace. Her wings folded around him as they held each other still shaking from the pleasure they had experienced. Peter was covered with sweat and breathing heavily as he looked into Anna's eyes again which were starting to return to normal before kissing her passionately.\n\n\"I guess it worked.\" She said as they stared at each other.\n\nAnna returned to her normal looking self as she laid next to him. She smiled and kissed him again as they both just held each other and let themselves fall asleep in a loving embrace. It would be an interesting life from here on out but as long as they had each other they would make it work."
    ],
    "authorname": "maestro84",
    "tags": [
        "succubus",
        "succubus transformation",
        "female corruption",
        "succubus sex",
        "body change",
        "breast expansion",
        "seduction",
        "absorb energy",
        "wife corruption"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/liliths-emporium-a-new-friend"
}