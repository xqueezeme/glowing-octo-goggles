{
    "title": "The Infinite Bk. 03 Ch. 02",
    "pages": [
        "I'm so sorry for the delay, it was not intentional. Plus, I know I said I was changing the name of the series, but the mods keep rejecting the update.\n\nArt of the Sword\n\nEbony skin, silver hair, and pointed ears; she was a stunning beauty and drew both men's and women's gazes. Her outfit didn't reveal much skin, but her leather pants accentuated her curves, and her white shirt was tight-fitting. Noah found himself bewitched as well, despite her attempt to kill him the first time they met. The sun had just risen on the first day at the academy, and he was gathered out in one of the training fields with about twenty others, ready to begin their first lesson in swordsmanship from a national hero. At the moment, it wasn't just a sense of honor that currently filled them.\n\n\"Good morning, all of you. I am Valia Zodiac, and I will be your instructor in the art of the sword. Whatever your level of skill is, be it total novice or self-proclaimed genius, you will receive the same level of tutelage. No matter how talented or experienced you think you are, you are still children in my eyes, and you have a lot to prove. Those of you who have already relinquished the thought of taking the path of a swordsman, know that just learning the basics from me will make you a force to be reckoned with.\n\nNow, I want to get a sense of your skill levels, and there is only one real way to figure it out.\" She pointed to her left, where two barrels of varying types of swords had been put out. There was another pair of barrels to her right, full of hand-and-a-half swords, like most knights carried. \"Those swords were donated by the blacksmiths of Uther, and I want each of you to pick one that fits your preferences. I want you to fight me with nothing less than the intent to kill.\"\n\nThis shocked many cadets, mainly those who had gotten in purely on magic ability. To suddenly fight a mock battle against Valia Zodiac required courage and affinity that they simply didn't have. All of the cadets rushed to the barrels to try and grab the best sword; hopefully, one that they were used to using, or at least that fit somewhat naturally in their inexperienced hands. Noah managed to snag a one-handed leaf-blade sword.\n\n\"You, you're up first,\" Valia said while pointing to one man. \"Your name?\"\n\n\"Highroar, ma'am. Sorn Highroar.\" Noah didn't recognize him from the brawl, meaning he was probably a mage.\n\n\"Well, like I said before, Cadet Highroar...\" She drew her sword, an elegant khopesh blade. Noah had encountered it already, dodging by mere inches when it was swung at his neck several nights ago. \"I want you to come at me with the intent to kill. However, you are not to use magic of any kind. The rest of you, step back and pay attention.\"\n\nThe space was cleared, and the master and student faced each other. She gave the word. Highroar, holding a longsword, appeared to be maintaining his courage and launched himself into a steady charge. He swung at her from the side with all of his strength, and she blocked with little effort. Their blades collided, and she simply flicked his away. She stepped forward and rested her blade on his shoulder, stopping him in his tracks.\n\n\"I'd step back if I were you.\"\n\nHe pulled away and was given enough time to form some semblance of a stance. Valia went on the offense and swung wide like he had, but with a perfect pose and execution. Her attack broke through his guard and narrowly missed slicing him, done so intentionally. Once more, she let him steady himself. \"Again!\" He tried once more to attack her, only to be knocked to the ground with the same ease displayed earlier. \"That's enough. I see you have much to learn, but fear not, for I will turn you into a proper knight. Go back among the others. You, you're next.\"\n\n\"Cadet Ken Rilgis, ma'am.\"\n\nThe young man that stepped forward was armed with a scimitar, and with just his stance and sharp eyes, he displayed his experience. He shot towards her and made an elegant swing. Valia deflected it with the tip of her sword, but before she could lean in for the counter, his next attack came, forcing her to block. He was fast, able to pull back from a swing before she could parry it and immediately try again. Ting! Ting! Ting! She blocked three attacks and was then blocked in turn when she retaliated.\n\nThey continued on like this, with Rilgis managing to barely hold his own. He displayed some notable finesse, but Valia was still lazy with her movements, able to block and attack with the smallest amount of effort. He wasn't even a challenge, and he was soon knocked to the ground.\n\n\"Decent. You can rejoin the others. You, you're...\"\n\n\"Wait! One more chance!\" Rilgis exclaimed.\n\n\"Now, now, don't get too ahead of yourself. All the children get a turn.\"\n\nThe class continued like that, with Valia putting the cadets through their paces. Noah observed each match with meticulous eyes, studying her movements and patterns. Her skill certainly lived up to the reputation. She was an unreachable enemy humoring her students, and even after defeating them, not a single silver hair was out of place. As for the cadets, some of them displayed skill and talent, but not many and not much. However, when fighting Valia, anyone would look weak in comparison.\n\nEventually, Noah was chosen to step before the ranks. He faced her and readied his stance. He had no desire to stand out, so his plan was to last just until the third exchange and then take a dive. He was used to holding himself back to avoid unwanted attention. In past lives, he'd play the role of the average student, the unremarkable employee, the simple citizen.\n\nHe zoomed in. Swing. Block. Counter. Block. Thrust. He went through the motions, using the same skill level as those before him, and soon enough, let her knock his sword from his hand. \"Damn,\" Noah chirped as he reached down to pick it up.\n\n\"You're not done yet.\"\n\nHe stopped. \"Ma'am?\"\n\nAll the other cadets similarly perked up. Several had dropped their swords in their bouts with her due to intimidation or inexperience, but she never said anything.\n\n\"I need you to come at me with everything you have, so I know what I have to work with.\"\n\n\"Ma'am, that was all I could do. You didn't leave me with much room to maneuver.\"\n\n\"You didn't flinch once and barely blinked. Your breathing remained steady the whole time. I didn't faze you at all, yet you could only fight at that level?\"\n\n\"I'm used to fighting with a spear and don't have much experience with a sword,\" he said as he reached down to retrieve his blade.\n\nShe grabbed his hand and turned his palm upwards. \"These aren't the calluses of a spearman. This is not a request, nor is it a game. Shyness has no place here or on the battlefield. You will fight me with everything you have, just as you will fight the enemies of Uther. Understand?\" It was rare for someone to see through his guises like that. Was it because she was an elf, or warrior's intuition? He faced her once more. \"Begin.\"\n\nNoah remained unwilling to reveal his real skill, but he had to feed her something. This time, he went on the offensive and upped his speed a little while deteriorating his balance and agility. He wore an expression of frustration and tried to make it look like he was desperate. Valia allowed him to push her back while she measured his strength, but soon enough, she slipped past his guard and put her sword to his throat.\n\n\"How much longer are you going to play the fool?\" she hissed.\n\n\"Lady Zodiac, I mean no disrespect. I'd be very grateful if you could let this go. I just--\"\n\n\"Enough. Go back to the barracks and collect your things. You're done here.\" She turned away from him in disgust and was about to call up another cadet.\n\n\"Wait,\" Noah said. In his mind, he was cursing. 'So much for blending in.' \"One more chance.\"\n\n\"I have no desire to waste any more time on you.\"\n\n\"A drop of blood.\"\n\n\"Excuse me?\"\n\n\"If I can spill just one drop of your blood, you'll let me stay in the academy. That sounds like a fair wager, does it not?\"\n\nHer sour mood softened, and the rest of the cadets were bewildered. None of them had been able to so much as ruffle her clothes.\n\n\"Very well. I'll give you one last chance. But this time, I won't hold back either. You might not make it out of here in one piece.\"\n\n\"Thank you. Do you mind if I select a different sword?\"\n\n\"If you need to. Choose wisely, as I don't want you claiming that the sword is the problem.\"\n\nNoah returned to the barrels and grabbed a sword without glancing at the others. However, everyone else had rejected it for blatant reasons, and they stared in confusion when they saw it once again. It was a large claymore with an oversized guard, heavy enough to throw the wielder off their balance and almost as tall. The blade, rusty and dull, had a crack halfway up. It looked like some blacksmith's early attempt, likely deemed a failure before ever seeing battle. He faced Valia once more and raised the sword.\n\n\"That's the sword you want?\"\n\n\"Yeah, this'll do.\"\n\nHe simply assumed a stance to the cadets, but Valia's eyes, sharper than her sword, saw everything. She saw his focus, his killing intent. He wasn't looking at her as an instructor, but as an enemy to destroy. The next moment, he shot towards her like an arrow. He raised the blade high and brought it down towards her like a great hammer. Rather than block it, she stepped out of reach and let it bury itself in the ground, then stepped in for a sideways slash. Noah launched himself forward, using his sword like a pole vault to raise the pommel and block her counter. He then kicked the buried tip, knocking it back towards her into an uppercut attack. She stepped to the side to dodge, and Noah swung his leg up and once more kicked the blade towards her. She blocked the attack, only for a third kick to the blade to force her to disengage.\n\nShe stepped back, given no time by Noah, as he swung at her from all sides. The sword's weight and reach made it clumsy, but he used that to his advantage. He blended his moves together, not a single spark of energy going to waste. He'd swing wide, and if Valia dodged, he'd use the rotational momentum and spin around to make a second attempt while moving towards her. If their blades locked together, he'd swerve around to the side to catch her with the longer reach of his sword. When its weight proved unwieldy, he'd kick the blade towards her, both to enhance the attack and to try to catch her off guard.\n\nAs long as he kept moving, continued harnessing the sword's momentum, he could control its trajectory better than if he had paused between attacks. His movements were wide and obvious, but also fast, and any gaps opened for only a moment and then sealed back up. He kept showing her his back, something a foolish newbie would do, but Valia knew that if she tried to strike, she'd be the true fool. He had total control of his breathing, pushing his body to its limit so that he could keep this bombastic assault going when even seasoned warriors would be left exhausted.\n\nDespite his skill, Valia neutralized every one of his attacks, always blocking or stepping out of the way. When Noah fought the Harajin, he recognized them as skilled assassins, masters of combat, but she clearly ranked above them, and he sat somewhere in that margin. What surprised him, though, was what she did when she finally stepped back out of his range, taking an offensive stance with a smile on her face, embodying a coy predator that had found something capable of putting up a real fight.\n\n\"Now we're talking. You can attack, but let's see how well you can defend.\"\n\nNoah flashed a small grin and readied himself. \"Let's go wild.\"\n\nShe leaped towards him, attacking not as an instructor sparing with a pupil, but as a true warrior. Noah blocked the first downward swing, managed to parry the attack from the right, and avoided a sharp thrust to the center. She was attacking mainly from the sides, so he kept his sword pointed downward and used it as a narrow shield to block her. However, her moves increased in speed, and Noah was soon forced to change his tactics. He went on the attack, swinging from the left, and let her block and repel the attack, but Noah grabbed the blade with his bare hand and closed the distance, this time shoving her with the edge.\n\nHalf-swording, it was a technique perfect for an unsharpened blade. The user gripped the sword by the blade for greater thrust and leverage, or to hammer the enemy with the pommel. In this case, he was holding it by both the handle and the center of the blade. It left him with a short reach, so he didn't give her any chance to create space. He got as close in as possible to more effectively attack and block.\n\nNoah's movements were all rapid-fire, giving her no chance to make a powerful swing. All the other cadets noticed the difference in how Valia was fighting. In their bouts, she'd let them push her back to coax them to fight harder, but now, she was being forced to retreat for her own safety, and she as well was surprised. In her long life, this wasn't the first time someone had used half-swording against her, but never in such a style as Noah's. At the moment, she had no idea of the nostalgia flowing through him. The weapons were different, but the moves were the same as when he was training for the Marine Corp and learning bayonet and buttstroke combat.\n\nSoon enough, she began to get a sense of his moves and went back on the offensive, pushing him back. Noah had anticipated her adaptability, expecting no less from a warrior like her, and moved on to the next stage of his plan. Her attacks were once more coming from the sides, and Noah blocked and deflected them all, just waiting for the right moment. Finally, she raised her sword for a crushing downward strike to hammer through his guard. He blocked the attack, and while it drew blood from his palm, it gave him what he wanted. The force of her attack was the last blow needed for the cracked blade to finally snap, drawing frightful gasps from the other cadets. For the briefest moment, Valia displayed utter shock. Had she gone too far? It was time to call this off.\n\nNo hesitation, Noah spun around and kicked her in the stomach with all of his strength, sending her flying. All the cadets gasped once more in awe and horror. He had actually managed to land a blow. It wasn't the drop of blood he had promised, but Valia Zodiac, the Sword Goddess, had been struck. The kick had pushed most of the air out of her lungs and knocked her off balance. She staggered back to reform her stance, but Noah wouldn't let her get away.\n\nChasing after her, he grabbed the snapped blade and threw it like a knife. She narrowly reformed her guard and deflected it. It flipped through the air back to him, and he caught it, then lashed out with both halves of the sword. Now, with their weight split up, he could attack and defend simultaneously. Valia had said that only one sword could be used in the match, but Noah's fight with the Harajin had reminded him of the strength of dual-wielding combat. He lunged, hurling slashes and jabs as fast as his body allowed. Valia was once more on defense, trying to regain her bearings. She finally jumped back out of his reach and reformed her stance. She appeared out of breath and visibly sweating for the first time, with a lock of silver hair now hanging out of place. She was smiling, as she now understood.\n\nNoah had planned this, every stage of the battle. He picked that sword, broken and worthless, with the three fighting styles in mind. Such ingenuity and recklessness, but with the skill to back it up. All of her instincts told her that she had to stop, that things were becoming too dangerous, and that she had to abide by her responsibilities as a teacher. But the way her heart was beating, the way her sweat made her shirt stick to her skin, the way her fingers clenched her weapon so tight that they hurt; it was exhilarating. How long would it be until she could enjoy herself like this? If she let this battle end, she'd always regret it. She wasn't going to back down. She wanted to see how far this would go.\n\nShe again went on the offensive and came at him in the form of a tornado of death. Noah faced her with the same strength and tenacity. In his right hand, he held the handle of the broken sword to catch her attacks, as well as send some of his own. The shard, held in his left hand, was his main form of offense. Because it didn't have a handle, he couldn't apply much force and had to be light in his strikes, but just a scrape would be enough to end it. He used every trick and maneuver he could think of, almost juggling the two blades.\n\nStill, he was just barely keeping up with her. Valia's sword mastery was like nothing he had ever seen before. The speed of her moves was matched by their complexity. She could switch and reverse her grip on her sword so easily, even spinning it around her fingers like a propeller. It was like her sword was a shapeshifting liquid, becoming whatever she needed it to be with each passing second. It was the same with her body, every movement made without even the slightest delay or hesitation, as if she could see the future. After living more than a hundred lifetimes, he had encountered his deadliest opponent.\n\nThe two of them were at a stalemate, one that left the other cadets in stunned silence. Not only had Noah outlasted them, but he had also outclassed them. Most couldn't even follow the movements, as the two fighters had become a living blur, blocking, attacking, deflecting, and dodging at near-impossible speeds. The sound of blades colliding was like the ringing of sleigh bells, while the sparks produced could be seen clearly, even in the summer sun.\n\nWith both Noah's skills and Valia's so brilliantly displayed, many young men and women didn't know what to think or how to process it. Some watched while trembling, fearful of the killing skills they were witnessing. They knew how quickly their lives would be lost if they tried to fight such a battle, and what little chance they'd have of survival if they made enemies of these two. Despite the warmth of the morning, others shivered as despair filled their stomachs like cold mud. This was a chasm they could never hope to cross, a level of strength forever out of their reach. A few watched with steely eyes, grateful to be where they were. They knew that to witness combat like this was nothing short of a privilege, and they tried to learn everything they could.\n\nFinally, Noah and Valia separated, the two of them gasping for air and pouring sweat. Noah's hand was bleeding from gripping the sword shard, and his clothes had plenty of tears from narrow misses of Valia's sword. For all his effort, he managed to leave a single scratch on her cheek, from which budded a lone drop of blood.\n\n\"I think we'll end it there,\" she said. \"If we fought any harder, magic would inevitably get involved, and if that happens, one of us would probably be killed.\" If her magic was as powerful as her skills, Noah was sure he would be the one to die. Were he in his prime, he could have fought her to a proper draw, maybe even defeated her, but that was a long time ago, and he had grown rusty.\n\n\"I agree. Thank you, Lady Zodiac. That was a good match.\"\n\n\"You've impressed me and given me a fight I will long remember. I'll have to keep my eye on you.\"\n\nShe stepped forward and examined his injured hand like before. Her movements her gentle, with a tender look on her face. Noah was subtle with his glances, memorizing every detail. His heartbeat was unstable, and not because of the fight. He had encountered dwarves and various beastmen, as well as seen a few elves from a distance, but to be so close to Valia, this elegant creature, sent a tremor through him that he so rarely got to experience.\n",
        "\"Since you're a cadet, I should chastise you for doing something so reckless.\" She looked him in the eyes. Her own, gray, gleamed like diamonds. There was depth to them, depth he had never seen in humans. She called him a cadet, but it was evident in her eyes that she didn't see him as one.\n\n\"Technically, yes, you should. But realistically?\"\n\nShe gave a huff of amusement and smiled. \"I'll leave you to wrap it up. You can get it healed in the infirmary on your own time.\" She then cleared her throat and turned to the rest of the cadets. \"Now, who's next?\"\n\nNoah returned to the group, and it parted like the Red Sea, for the most part. A few of the more hyperactive cadets began cheering and congratulating his skills. Ken Rilgis, the sharp-eyed youth from earlier, even approached and respectfully bowed his head. \"That was an amazing thing to witness. Thank you.\"\n\n\"You're welcome,\" he replied with a cheerful fa\u00e7ade.\n\nHe had hoped to blend in among the cadets and go unnoticed. Unfortunately, that plan had been blown out of the water on his first day. He had to now focus on twisting the result to his benefit. If he could not be invisible, he could at least manipulate how he was seen. He humbly accepted praise from all those who gave it, shaping their first impressions of him while they were still malleable. Hopefully, his skills would put off potential enemies, and his mild-mannered acting would lower everyone else's guard and make it easier for him to get what he wanted.\n\nWhile Valia continued gauging the other cadets, Noah went to work fixing his hand. Along with their uniforms, each cadet had been given a canteen and a small pouch full of bandages. However, healing and mana potions were forbidden. It wasn't much, but the bandages were clean, and Noah could treat his wounds. Soon enough, the rest of the cadets had been defeated, none of them putting up much of a fight, and Valia faced the crowd.\n\n\"Well done. Now I know what level each of you is on. Yesterday, you were told that the only weapons you can use are those the academy provides. What you weren't told is that you are required to carry an academy weapon with you at all times. The standard is a sword, unless you can use warrior magic for a different weapon.\" She held out her arm to the barrels to her right. \"Each of you, return those practice swords and take one of these. They are what you'll be using for all training and battles. Do not draw them until I say so.\"\n\nNoah and the other cadets obeyed. They brought back the donated swords, and each took their new partners. Once everyone had one, Valia ordered them to be unsheathed. Immediately, there was the sound of something fragile breaking and the cadets exclaiming in shock and confusion while holding broken swords, some even snapping off after only an inch.\n\nIntrigued, Noah held his sword straight up and carefully lifted the scabbard. Glass, the blade of his sword was made of glass. In the corner of his eye, he caught Valia glancing at him, perhaps curious as to how he'd react. \"Ok, you have my attention,\" he muttered. Did she hear him? He thought she made a slight chuckle.\n\n\"This is how I learned to wield a sword, and if you can master it, you will be the greatest warriors of your generation.\" She picked one herself and drew it without it snapping. \"As you can see, you are each wielding glass blades. The glass on its own is strong enough not break under its own weight, no matter how it is held or swung.\" She waved it in all directions, performing various tricks and acrobatics to prove its durability. \"What you can't see are the runes are on the tang, granting it two enchantments. I know what you are thinking, and yes, you can attack with it, but it is tricky. If the blade is a single degree off from the exact direction you're swinging, it'll break against your target. However, if the swing is perfect, it will be undamaged.\"\n\nShe held out her khopesh and tapped the glass sword against its back. The sword's angle was off, if only slightly, and it was a gentle hit, but the blade snapped like a thin icicle. It didn't shatter into several small pieces like standard glass, but simply broke in two. Valia knelt and joined the broken ends of the sword. \"That is the first enchantment. Even if it breaks, the second enchantment allows the blade to repair itself. Simply hold the pieces together like setting a broken bone and channel your mana into the handle. The blade will heal itself in seconds.\"\n\nTrue to her words, she lifted the sword, and it was as new. She once again struck it against the back of her khopesh, this time with much more force. However, both the swing and the direction of the blade were perfectly vertical, so the glass edge didn't even chip. She continued smashing the two of them together at varying angles, always keeping the sword focused in the same direction as her swing, and it never broke.\n\n\"Lady Zodiac, what about blocking?\" Ken asked. \"If these blades are made of glass, won't they just snap if we try to defend?\"\n\n\"You bring up an excellent point. Every swordfighter worth their salt knows to never block an attack edge-to-edge, as it'll wreck your blade. Here, take this.\" She reached into one of the nearby barrels and drew a steel sword from the sparring matches, then tossed it at him, nearly making Ken stumble to catch it. \"Now, take a swing at me.\"\n\nHe seemed uncertain for a moment, then stepped forward and slashed with all of his strength. Valia blocked the attack edge-to-edge, and to the continued shock of the cadets, the glass sword showed no damage whatsoever, while the steel blade was chipped from the collision.\n\n\"Your blocks and parries must follow the same principle as your attacks. If you focus your edge perfectly in the same direction as you're exerting your strength, you can destroy enemy weapons without ever going on the offensive. Keep in mind, this technique has no margin for error. Every time you use it, it must be absolutely perfect. When you become knights, you can choose your style of blocking, whether you go the traditional way or my way, but this is the path to true sword mastery.\n\nI want all of you to hook the sheaths to your belts, opposite from your dominant hand, and form a ring around me, no less than ten feet apart.\" The cadets took their positions, making sure Valia was in their view. She secured a cadet sword to her belt and assumed the directed stance. \"Before you can begin wielding your sword, obviously, you have to be able to draw it first.\" She drew the sword in the blink of an eye, unsheathing the glass blade and swinging it at an invisible enemy. \"You have to draw the sword perfectly straight, without twisting the blade or dragging it out of its sheath. Otherwise, the blade will break. Keep practicing until you can do it ten times in a row, then work on increasing your speed.\"\n\nNoah and the other cadets spent the next hour repeatedly trying to draw their swords without any damage. Even he found it rather difficult, as while he managed to successfully pull out his sword more times than anyone else, it was only one out of every dozen attempts. Noah welcomed the challenge, this new method of studying swordplay. Without magic, training like this would never have been possible.\n\nAt the moment, the cadets' combined attempts sounded like a china shop during an earthquake. Each time their swords broke, the cadets had to pour in their mana, and after repeated attempts, the drain became impossible to ignore. Noah could sense the building frustration in many cadets, hear the subtle cursing and enraged nasal breathing, threatening to lead to full-blown tantrums. There was a noticable ripple every time he successfully drew his sword.\n\nValia paced around them, studying their technique and trying to offer advice where she could, be it how they bent their shoulders or the angle they drew from. There was little help she could give, as this most basic foundation couldn't be taught, only learned through repetition.\n\nHalfway through the class, Valia stopped them. \"By now, even if you haven't mastered drawing your sword, you should have a sense of dexterity and accuracy needed to handle it. I expect you to practice drawing it in your spare time until you can do it perfectly. For now, we're going to move on to the next stage. Follow me over here.\"\n\nShe led the class to an array of wooden constructs, each featuring a log, a meter in diameter, propped up at chest height. The ends of the logs, displaying fresh saw marks, had been painted like a compass, splitting into eight sections.\n\n\"Head, right shoulder, right side, right leg, chest, left leg, left side, and left shoulder. The lines depict the eight basic directions in which you attack your enemy, and you will use them to practice your attacks. You'll be swinging at them every lesson. This will teach you how to control the angle of your swing.\"\n\nShe took her khopesh and swung at the nearest log. She went with the grain at an improper angle and buried it in the edge of the wood. She then used her glass sword and swung at a different spot, against the grain at a perfect angle, and not only did the blade not shatter, but it also matched the depth.\n\n\"The slightest adjustment in the direction makes all the difference in the world. Regardless of your prowess or experience, whether or not your sword breaks determines your actual skill. Every time you have to repair it, I want to think about every time you've used a sword before, every time you failed to cut through enemy defenses or slay a monster. The reason for your failure will be made clear. All the times you succeeded, realize that victory came DESPITE your skill level, not because of it. You could learn the most elegant and deadly moves in the world of swordsmanship, but if your sword still breaks against this wood, then you'll never reach true mastery.\n\nFor today, just attack in whatever way you're most comfortable in and don't worry about technique. The focus is purely on how you hold the sword. Now, begin.\"\n\nThe cadets spread out, each taking a target to practice on. All still struggled to draw their swords, so attacking without the blades breaking was a daunting task. Noah made his first swing, a downward slash across his imagined foe's chest, only for the blade to snap and get stuck in the wood. Around him, every other cadet had similarly failed, snapping their swords. The broken shards lay stuck in the wood, soft enough to catch any attack and prevent a ricochet. He and the other cadets retrieved and repaired their blades and went at it again. Crack! The blades were once more broken.\n\nThis went on for the rest of the morning, swinging from the eight directions and trying desperately to get the angle right. The sound of glass breaking was constant, but blades would sporadically get buried in the wood without breaking. A perfect swing, just one of the infinite they had to produce. For Noah, the challenge was more amusing than frustrating.\n\nWhile all this was going on, other classes proceeded throughout the academy, teaching various weapons and techniques. Weapons could be heard striking, along with shouts and grunts of pain and effort and bodies hitting the ground. Warrior magic--magic that enhanced the abilities of weapons and their users--most often manifested for swords, bows, shields, spears, and clubs, so the academy used that to create the cadet's schedules. Today, Noah and his assigned class would train with swords, and the day after, he'd move on to bows. Five days of work, followed by two days of rest, resulting in a seven-day week.\n\nEveryone was grateful beyond words when midday finally arrived, and Valia gave the order to stop. They were all drenched in sweat, with blistered hands.\n\n\"You've all done well today. Now, go fill your bellies. Remember to keep your sword with you at all times and to practice whenever you can. I expect you all to be able to draw your swords flawlessly when next I see you.\n\nCadet Noah, a word?\"\n\nThe others departed while exchanging glances of curiosity and intrigue. Noah sheathed his glass sword and approached. \"Yes, ma'am?\"\n\nValia waited until the cadets were no longer in earshot. An owl hooted nearby, but otherwise, all was quiet. \"My curiosity and pride as a swordswoman would be crying if I did not ask this. Where did you learn to fight?\"\n\nHopefully, she wouldn't see through him this time. \"My father trained me relentlessly. He claimed he was some great warrior back in the day and didn't want it to all go to waste. When he was drunk, he'd joke that on the day I was born, he forced a dagger into my hands and made me cut my own cord. He was killed by a sledgepaw this past winter.\"\n\n\"Ah, my condolences.\" Her pause seemed sincere. \"What was his name? Maybe I've heard of him?\"\n\n\"Steven the Bold. It's the only name he ever gave, but I have yet to meet anyone who knew about his glory days.\"\n\n\"That's a shame. I must admit that I am not familiar with that name either. You, on the other hand, your skills impressed me, and you'll go far in the knighthood. However, you should watch out. Factions will start building soon, and many will try to lure you into their folds.\"\n\n\"I wasn't aware of that. Thanks for the warning.\"\n\nThose eyes, so focused. Noah was confident in his ability to hide his tells, but their battle had shown the power of her intuition. Trying to hide under his fa\u00e7ade felt shielding himself against a flamethrower with a sheet of plywood.\n\n\"I think you had some idea. I probably wouldn't be off the mark to say you dropped your sword on purpose in the first round because you were trying to avoid it. While I do sympathize with the pressure about to be put on you, intentional weakness is still weakness, and is not something a knight should be doing. That kind of hesitancy will get you and others killed.\"\n\n\"With all due respect, I have no qualms with ending the lives of others on the battlefield if that's what you're worried about. I assure you that I will erase Uther's enemies when the time comes. I simply wish not to make a spectacle of myself unless it is necessary.\"\n\n\"To intentionally drop your weapon dishonors me as your teacher and yourself as a student. I need you to treat these lessons with the same seriousness you treat the battlefield.\"\n\nNoah bowed his head. \"Yes, ma'am. I will.\"\n\nShe seemed irked by the response. Whether she spotted a tell or if it was instinct, she didn't let herself be satisfied by the answer.\n\n\"It looks like you have something you wish to say. You can speak freely, cadet.\"\n\nHe felt it, her seriousness. Just like before, if he came at her with nothing less than total honesty, she'd see right through him. He really didn't want to anger her a second time.\n\n\"Very well, ma'am. You tell me I need to take your lessons seriously, but I also need to think beyond them, don't I? I threw the first fight for the sake of every fight that would come after. With my skills now public knowledge, my future opponents will be less likely to underestimate me, less likely to drop their guard, meaning I've lost the element of surprise. I take that very seriously.\"\n\n\"Is that not the whole point of enrolling in this academy? You're here to learn and develop new skills for combat. It was inevitable that you'd have to fight seriously and let people see you. How long do you think you could have coasted by hiding your abilities?\"\n\n\"Long enough, ma'am, and until I do develop those new skills, I need every advantage I can get. The sooner people know my abilities, the sooner they can develop countermeasures. I chose to lose a sparring match to my teacher in an academic setting, rather than risk getting killed in the future because my enemies would know my strength.\"\n\n\"You're here to become a knight of Uther. You will live, fight, and possibly die for this nation. Instead of hiding your strength from potential enemy cadets, shouldn't you be making them into your allies? When you graduate, you will be part of an order, with people who will depend on you just as you'll have to depend on them.\"\n\n\"I know how to depend on people. I know they are valuable and necessary.\"\n\n\"Necessary to preserve your own life, right? To fulfill your own goals? That's not how we do things around here. You're thinking long-term about yourself, but I need to think long-term for this country.\"\n\n\"Are you sure you aren't focusing too much on the short-term? It's a choice you may not like, but you know it was the right one.\"\n\nValia's eyes narrowed. \"Excuse me? Do not presume to know what I think.\"\n\n\"You're an elf, are you not? You've seen how far the choices we make ripple out. Years, decades, centuries can pass before consequences lose their momentum. A human teacher would obsess over a sparring match on the first day at the academy, but I'm rather disappointed that you would as well. I figured you would have a better sense of perspective. You of all people should know how easy life can be thrown into chaos, and how insignificant the things we deem important really are.\"\n\nHe saw it, the slight tremor in her expression, alerting him that he had touched a nerve.\n\n\"You forget your place, cadet.\"\n\n\"On the contrary. My place has been made quite clear, has it not? I get the sense you're stronger than most gold-rank knights, so it's probably safe to say that my place is in the high silver. Once I include magic, I'm probably gold-rank. Might makes right in this world, does it not? The purpose of this academy is to support that rule. You're teaching us how to wield our strength to extend the reach of our influence and control, all for the glory of Uther. Tell me, what authority does that drop of blood on your cheek grant me?\"\n\n\"Is that a challenge or a threat?\"\n\n\"It's a request. You wanted to know my level, well now I would appreciate the respect it deserves. When I speak of concerns, I want you to acknowledge them as the concerns of a gold-ranked warrior. When I calculate what is important in the long run, I want you to trust my math.\"\n\nA moment of silence. \"You are dismissed. Hurry up to the mess hall.\"\n\n\"Thank you, ma'am.\"\n\nWhen he arrived, the mess hall was already half-full, and he could hear descriptions of his fight with Valia. It seemed like his match with her was a big deal. Only the two dozen cadets had seen his face and heard his name, and they were already eating or weighting in line. He could still blend in with the cadets still streaming in and get his tray of food without being hassled.\n\nAlexis was eating by herself, so he walked over. \"Mind if I join you?\"\n\n\"Go right ahead.\" He sat down on the other side of the long table. They both ate in silence for the first few minutes, each acclimating to the presence of the other. This was time to eat and rest, so they gave each other time to decompress. \"Today was your first day training under Lady Zodiac, right?\" she finally asked.\n\n\"Was it the sword that gave it away, or just how I look?\"\n\n\"Well, you do look... weathered. I'm guessing she was a bit rough on you?\"\n\n\"More than a bit, I'd say. When do you start?\"\n\n\"Tomorrow.\" Then, a rare smile. \"I honestly can't wait. This will be a dream come true.\"\n\n\"You're that excited?\"\n\n\"I was raised on stories of her adventures. She's my hero, and training under her is one of the main reasons I enrolled. Most of the women here probably feel the same way.\"\n\n\"Well you can probably expect the same introduction she gave me.\"\n\nAfter eating, Noah made his way to the infirmary, where he found several other cadets already waiting. At least forty were gathered, sitting on long benches in the brick corridor, all with varying injuries, much of which came from sparring matches and inexperience with new weapons. Unless something was broken, missing, or spurting blood, suffering an injury was not an excuse to skip a lesson. Cadets had to learn to fight through the pain. Blisters were aplenty, even for seasoned warriors.",
        "There were a few other armed cadets; an archer and two spearmen, but no one from Noah's swordsman class, so he went unrecognized. He took his seat and listened to the injured youths yip at each other, either complaining about the harshness of the lessons or trying to brag about their pain tolerance. Every few minutes or so, one cadet would exit the infirmary doors, and the next in line would enter.\n\nSoon after Noah arrived, he encountered someone he did not expect. A young woman entered the corridor, wearing white vestments instead of her academy uniform. She was likely a female light user, recruited to work in the infirmary to train her healing abilities. Her beautiful scarlet hair drew Noah's eye, contrasting with her outfit like blood on snow. Unfortunately, she arrived on the tails of the man whom Alexis fought. The despondent look on her face, Noah only had to see it from the corner of his eye to sense her misery. She hated the man at her side, and from the smug look on his face, he was fully aware. Neither appeared wounded, but they strolled right by the sitting cadets and approached the infirmary.\n\n\"Hey, there is a line,\" a dwarf barked.\n\n\"A line for you, not more me,\" he scoffed.\n\n\"Galvin, please, you don't have to watch over me while I work,\" the woman murmured.\n\n\"Of course I do. I can't trust any of these flea-ridden plebeians around you.\" He said it loud enough for all to hear. \"And I thought I made it clear last time that no one touches you but me, and you don't touch anyone without my permission. How can I trust you when you keep breaking the rules?\"\n\n\"I'm... sorry.\"\n\nBy how she addressed him, she wasn't a slave, probably his fianc\u00e9e, though it didn't seem like there was much of a difference. He pulled her inside, and the hallway became silent. The flow of conversation had stopped like a cold heart. Soon enough, it was Noah's turn to get treated. He entered the infirmary, a sunlit room filled with beds, as well as cabinets stocked with various potions and ointments. The cadets were being tended to by the academy healer and several female cadets, all wearing white vestments. Each bed was occupied, minus the one in the corner, where the red-haired girl was stationed. Galvin leaned against the wall behind her, sticking out like a sore thumb. In all honesty, that corner of the room looked about as appealing as a minefield, but the academy healer, an old woman, ushered him forward.\n\n'Just get in and out. No confrontation.' Noah approached and sat down on the bed. \"Good afternoon,\" he said to the girl, without even glancing at Galvin.\n\n\"How can I help you?\" she asked, likewise trying to ignore the unwanted presence.\n\n\"I was hoping you could fix my hand. It got scratched up during a mock battle.\"\n\nHe undid the bandages and showed her his wounded palm and fingers.\n\n\"I can take care of that.\" Without touching him, she held her hand over his. \"Healing Light,\" she cast.\n\nLike Rita at the Knight's Sheath, holy energy flowed from her hand and repaired the damaged tissue. The wound wasn't severe, so it only took a minute of healing. Noah kept his eyes focused on his hand, doing everything he could to appear inconspicuous. A wandering glance or wrong word could draw the ire of the petulant cadet behind her.\n\n\"There, all done,\" she said.\n\n\"Thank you, I appreciate it.\"\n\nHe bowed his head in gratitude and got up to leave. As he passed by, Galvin stuck out his foot to try and trip him. Noah managed to avoid it and escaped the infirmary. After Valia had exposed him, getting caught up in some domestic issue was the last thing he needed. Next, he went to the bathhouse, as his first lesson under Valia had given him quite the patina. It was busy when he arrived and louder than the previous day, as like outside the infirmary, the young cadets were sharing complaints about their lessons.\n\n\"Kiev was the worst! He made us do pushups until we passed out!\"\n\n\"Oh please, Sir Walter made us run infantry charges all day. I feel like my feet are bleeding.\"\n\n\"Those fucking bows are so fucking heavy! A team of horses couldn't pull that string all the way back!\"\n\n\"The next time I see my brother, I'll bust his teeth. The lying bastard tricked me into coming here!\"\n\nThe gripes came from nobles and former adventurers alike. It seemed the academy really had upped the difficulty this year, and it was turning out not to be the cozy ivory tower many thought it would be. The descriptions of what he had to look forward to did not frighten Noah. Instead, he was disappointed, having hoped to hear something as interesting as the glass swords Valia handed out. They were being explained by Noah's classmates to the disbelieving cadets, and the difficulty of simply drawing them was a vocal point of frustration. Then, they described going up against Valia one by one and helplessly losing. The next shift in the conversation was inevitable.\n\n\"Hey, is it true about the cadet who beat her with a broken sword?\"\n\n\"I don't know which part of that question is more insane, but I'm amazed that you didn't stutter once while saying it.\"\n\n\"No, it's true! I was there! The guy managed to scratch her face! I never saw anything like it!\"\n\n\"What, is she weak?\"\n\n\"No, the fight was unbelievable! I was... ting! Ting! Ting! Ting! Tingtingtingtingt--\" While the excited cadet nearby made sound effects and swung his hands around, Noah got out of the bath as nonchalantly as possible. The conversation was spreading, with other classmates describing the fight.\n\n\"Oi, you're that guy, Noah, right?\" Many eyes turned to him.\n\n\"Me? No, he's in that bath over there,\" he replied, pointing over to the corner. When those gazes shifted, he ducked among the shelves of discarded uniforms and activated his invisibility. In a drawer under one of the benches, he grabbed a fresh uniform and got dressed, retrieved his belt, and disappeared without a trace.\n\n----------\n\n\"Magic is the study of concepts. It is to look behind the curtain and see the true mechanics of the world that the gods have created. As knights, magic is something you will inevitably come up against and will have to use. I am Sir Lewis Elyot, and for the next year, I'll be teaching you how to utilize magic and survive it. No matter what your weapon preference or livelihood, it is a talent you should explore, the power to change the world.\"\n\nAdjacent to the academy library, Noah and a new class of students gathered in an auditorium in tiered seating for this introductory lecture. He was younger than Noah expected for a magic instructor, looking maybe in his early thirties. Noah had been hoping for more of a bearded wizard, though if he was a magic researcher like Cyrilo, then appearances could be deceiving. Behind him was a board made of white clay, and he wrote on it with a piece of charcoal. \"Theory of Magic\" had already been drawn in large letters. Noah and the other cadets took notes on rolls of parchment with quills and bottles of ink. He had been waiting for this since he arrived in this world, to finally get a full explanation of magic.\n\n\"Magic is powered by mana, which flows through us at a steady pace, like our heartbeat and breathing. It can become disturbed when we are stressed, but so too can it be controlled. All of you here, you passed the magic exam yesterday because you not only had sufficient mana, but you were able to channel it to objects outside of your body. If you can do that, you can surely use magic, so there no reason not to look into it.\n\nSpells are the means through which we harness magic. They are contracts made with the gods, and the circles that appear are those contracts made visible. The symbols you see in magic circles are known as runes, and they are the language of the gods, each symbolizing a concept of the universe, such as the elements of nature. It is the correct combination of runes that defines a spell and allows it to occur. Only when it triggers the appearance of a magic circle can any kind of mana manipulation be considered a spell. That is when it has become an act recognized by the gods.\n\nQuestions?\"\n\nNoah raised his hand. \"I've seen spells activate without producing runes and magic circles. Assuming I didn't simply miss them, is it possible that the runes cannot be seen by the human eye? Or would it be more likely that they do not produce runes at all?\"\n\n\"A spell that does not produce runes is considered incomplete. It is an unfinished mana manipulation that has not been solidly defined enough to produce runes.\"\n\n\"Is there a limit to how powerful these manipulations can be without crossing that threshold?\"\n\n\"I suppose... maybe a third as powerful as what the completed spell would be? That's from what I've seen, at least. Now, speaking of unfinished spells, can any of you tell me the two methods in which magic is developed?\" A young woman raised her hand, the redheaded girl that had healed him in the infirmary. Unfortunately, she was sitting next to Galvin. \"And you are...?\"\n\n\"Cadet Sophia Rosege, sir.\"\n\n\"Speak, cadet.\"\n\n\"The first is the natural method, in which repeated use of magic can cause spells to grow and change to match the skill level of the caster. The second is through inscriptions, using runes to formulate new spells that are too complex or beyond the affinity of the user.\"\n\n\"Precisely. These are known as intuitive magic and crafted magic. You could think of it as letting the gods write the contract versus writing the contract yourself. Each of you should be capable of using at least one intuitive spell. It is the magic you discover on your own, that is improved through practice and training.\" He wrote the terms on the board. \"The most common intuitive magics are monk and warrior, one involving the condensing of mana within the body, and the other involving the projection of mana through a familiar weapon. These actions happen most often during battle, and with repeated exposure, can be controlled and enhanced. That is the point of the outdoor training with various weapons.\n\nLess common is elemental magic, which features a link to the gods of thunder, earth, water, wind, fire, and light, allowing the user to manifest those elements in varying forms. If you have the talent and train enough, you may be able to shape your mana into actual spells, as well as make current spells more potent by rewriting the contract.\"\n\nElyot straightened his glasses and pulled a book out of his robe. He flipped it open to a particular page, and it began to glow. \"Illuminate,\" he cast. He held out his hand, and a magic circle of holy energy appeared in the air in front of him, like a golden STOP sign. It displayed a line of runes that put out blinding light.\n\n\"As you can see, I am using a light spell thanks to the formula written in this book. I do not have an affinity for light magic, so without this book, I am unable to cast it. However, because I wrote it out, I have more control over the price and the results, and can adjust it to compensate for my lack of an affinity. Take the materials for instance. Everything in the world can conduct mana one way or another and at varying levels. If you want to cast a spell that requires more mana than you can produce, you can substitute the cost with more powerful ink and paper, or by adding certain conditions.\n\nWho here can use holy spells?\" A few cadets instinctively raised their hands, including Sophia. \"If you have the affinity, it is surely possible to cast this spell on your own. If not today, then someday, but it would require training, time and effort spent twisting your mana to take this form. Or, if you cast the spell by using this book, you can memorize the feeling and use it later on your own.\n\nNow, before you can start runecrafting, you first need to know the runes themselves. I'm going to show you all the basic need-to-know runes and explain their meaning so that you can record them. Other runes will be taught later, but most of your vocabulary should come from research and real-world exposure. Make sure you copy them exactly as I show you, as misdrawn runes will not function. Just know that I won't be kind to anyone who falls asleep.\"\n\nAnd so, the hours passed. One by one, he'd use charcoal to draw symbols on the board and give their definitions. As he said before, runes were the language of the gods, and like all languages, there were rules for grammar and syntax. Each rune had only one meaning, but its interpretation varied among cultures, and its effect could change depending on the runes around it, with various concepts existing on wide spectrums of abstraction. There were hundreds of them, each with individual designs, using lines, dots, dashes, and other minute details. Compared to the up-close and personal first lesson with Lady Zodiac, Sir Elyot's class was more tedium-incarnate, but Noah's attention was undivided.\n\nHe raised his hand during a transition.\n\n\"Yes, cadet?\" Elyot replied.\n\n\"Does naming a spell have any effect on it? I noticed that everyone verbally states the names of their spells when they use them. Is there a reason for that?\"\n\n\"Runes are concepts of reality, and within every spell, they rank in importance. To speak those concepts while activating the spell helps solidify its definition and allow it to manifest. A spell is always strongest when its name is spoken, and the closer the name is to the superior runes, the better. However, most amateur magic users don't know about superior runes and simply name their spells on whims. A spell cast without its name is considered incomplete.\"\n\nHe continued with the lesson, but Noah's mind was already buzzing. He had three spells so far: turning invisible, creating an illusory clone of himself, and taking on the appearance of the freshly slain, but none of them produced any visible runes. In his fights with the Harajin, he had uncovered the mechanics of the technique known as Bakudan, a similar invisibility spell that didn't produce any runes. The one who explained it described it as a \"state of being\" more than a spell, likely meaning it was incomplete. Were his spells the same way? All of them having yet to be developed far enough to produce runes? Or were the runes there and just waiting to be seen?\n\nIn time, a familiar trumpet blowing in the distance signaled when the lesson was over, much to the enjoyment of the rest of the class. \"My, my, where did the time go? Before the next lesson, I want each of you to find a beginner-level spell in the library and record the rune sequence. You are to use only standard ink and parchment. To activate it, simply speak its name while channeling mana into the parchment as I did before. Keep it small, nothing too bombastic. All spells damage the material you use, from a slight crinkle to utter disintegration, so if you find a spell that destroys your parchment with a single use, you need something smaller. If you choose a spell and cannot cast it, just pick another.\"\n\nThe cadets were released, finally able to decompress after the long day. There was still time before dinner, so Noah headed straight for the library. To his luck, the place was devoid of all but a few people. They were fellow cadets with similar thirsts for knowledge. With some direction from the librarian, he found one of many books on the different known branches of magic and secluded himself to begin his search. Since he arrived in this world, he hadn't had many reading opportunities, but he had grown accustomed to the local alphabet. More than half of the letters were at least slightly similar to English, and the flow of the text helped him figure out the rest. The problem was the author's handwriting and their diction, like an overinflated textbook combined with a messily-scribbled notebook.\n\nEventually, he got accustomed to the dialect and began skimming through the book, looking for keywords while letting his subconscious process the rest of the information later. 'Invisible,' 'illusion,' 'eye,' nothing stood out, nothing pertaining to his own magic, and before he could get very deep into the book, he heard the evening horns announcing dinner.\n\n'There's always tomorrow.'\n\nHe returned the book to its shelf and made his way to the mess hall, already bustling. He didn't see Alexis at her earlier spot, so he went to find his own quiet corner. Moments after he sat down, her own tray of food was slammed onto the table.\n\n\"Why didn't you tell me about your fight with Lady Zodiac?\" she asked. While not angry, she was more excited than he had ever seen her.\n\n\"Need I bother if you were just going to hear it this quickly from someone else? I wasn't keeping it from you; I just felt there wasn't a good enough way to come out with it. 'Hey, you know your hero, Valia Zodiac? Well, she and I got into a life-or-death fight, and I managed to scratch her cheek. Boy, this lunch is delicious.' See what I mean?\"\n\nShe sat down and stared at him. \"Who are you?\"\n\n\"I'm the son of an adventurer. He taught me everything I know, trained me, and then sent me here to become a knight.\"\n\n\"He trained you to fight Valia Zodiac to a draw?\"\n\n\"Let's just say that the training was rough. You could probably handle it, but not many others here. My mother, well, she wasn't around, so there was no one to tell him to go easy on me. Let's just say I didn't have many happy memories. When I saw the average level of the other cadets, I decided to hold back so I wouldn't get asked about it, but Lady Zodiac wasn't going to let that slide. I was hoping for a fresh start when I got here, a new life where I wouldn't be burdened by my past. So much for that.\"\n\nThe traumatized youth with fresh scars, an easy role that he played well. Alexis was sharp, but not sharp enough to see through him.\n\n\"Forgive me for prodding.\"\n\n\"Anyway, what's your story? The noble kids here aren't as spineless as I expected, but I doubt many of them would track down a pack of ogres on their own.\"\n\n\"My full name is Alexis Fleija Veres, third daughter of Duke Boris Veres.\"\n\n\"Duke? That's pretty impressive.\"\n\n\"Like I said, though, I'm the third daughter, so I don't actually rank very high in the family, not that I really care. Noble life... never really suited me. I'd rather shape my destiny with a bow than have it be decided by someone else's money. I've fought tooth and nail to break every engagement, and a noble daughter that can't even be married off has no value. The carriage you saw me riding in was all for the sake of family appearances.\"\n\n\"So I guess I can't expect you to bail me out of trouble with your family connections, or brag about having friends in high places?\"\n\nShe laughed. \"Sorry, I can only be a regular friend.\"\n\n\"Well, that's good enough for me.\"\n\nHe raised his cup, and she clinked hers against it.\n\n----------\n\nValia could smell the burnt gonlief, despite all attempts to hide it. The commandant banned smoking for the cadets, but even he had a few rules he ignored.\n\n\"You've made quite an impression on your first day. You got into a fight with a cadet that could have turned deadly. We are here to train cadets, and we can't do that if we end up killing them.\" She ignored his words, choosing instead to stand by the window of his office and gaze at the stars. \"I understand that you did not come to this position willingly, but you are here to teach, not to maim. You got lucky today; that's all it came down to.\" Still, she didn't answer. \"Damn it, Zodiac! Explain yourself!\"\n\nShe didn't show it, but Valia tensed in annoyance. Summons like these had brought her nothing but bad fortune as of late. She was getting sick of hearing her name called. \"I've encountered an anomaly,\" she finally said.\n\n\"An anomaly?\"\n\n\"Something I honestly cannot explain. That cadet, Noah...\"\n\n\"Are you sure you aren't being a little dramatic? He was a talented youth, that is all. I've seen plenty of them come and go.\"",
        "\"Well I've seen more than \"plenty.\" I've met hundreds of enemies, thousands of warriors. I know what talent looks like. That was not mere talent.\"\n\n\"Then what was it?\"\n\n\"That's the thing, I'm not sure. I know he's human, I can't sense any other blood in him which would explain it, but for some reason, he fights like an elf.\"\n\n\"Like an elf?\"\n\n\"I'm talking about mastery of movement. He's trained himself to be ambidextrous. Kinesthesia and coordination like his would normally take centuries to develop. As for his technique, it was too vague for me to identify a specific school or style. There was no ingrained pattern to how he moved. I first thought he was making it all up as he went along, relying on talent mixed with whatever training he's had, but his steps, his breathing, his balance, his pacing, it was like countless styles had all been mashed together.\"\n\n\"Is he someone we should be concerned about?\"\n\n\"I'm not sure yet. There's something strange about him, and I'm going to find out what it is.\"\n\n----------\n\n\"So is it true what they say? About your fight with Lady Zodiac?\" one of many cadets asked, interrupting Noah's reading. All the students had returned to their various dorms and barracks and enjoyed the brief window of time before light's out. Like the bathhouse, most of the conversations in the barracks were just complaints about the first day, but the story about Noah's fight was Valia was also spreading. Unfortunately, evening roll call had destroyed Noah's hopes of studying in quiet anonymity.\n\n\"It is true that she and I sparred,\" he replied, \"just as she did with everyone. I don't know what else people have been telling you.\"\n\n\"The other guys down the row are saying you fought her to a draw,\" another cadet said.\n\n\"I managed to give her a scratch, while she tore my uniform to ribbons. It was hardly a draw. Besides, you'll get your turn to fight her.\"\n\n\"Where did you learn how to fight?\" The questions kept coming as the cadets searched for any information that might aid or amuse them. Noah would deflect and dismiss the probing so gently that the men barely noticed, and felt their attention directed elsewhere. If any of them got too inquisitive, a little fake backstory would get them to shut up.\n\n\"Do you have any advice about fighting Lady Zodiac?\" Gideon asked out of the blue.\n\nNoah closed his book. \"Finally, a worthy question.\"\n\nPlease comment! Tell me your thoughts!"
    ],
    "authorname": "Sage_of_the_Forlorn_Path",
    "tags": [
        "action",
        "fantasy",
        "isekai"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-infinite-bk-03-ch-02"
}