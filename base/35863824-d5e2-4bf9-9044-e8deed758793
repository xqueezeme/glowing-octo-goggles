{
    "title": "First Death Pt. 09",
    "pages": [
        "A note from AfterDusk:\n\nSorry for the delay, Matthew has been oddly quiet this past month. Thanks for your patience! I'll do my best to keep the ball rolling.\n\n-AD\n\n*****\n\nHiro and Kaito were waiting for me in the foyer; just outside was a large black SUV parked in the curved driveway. I sat in the back, Hiro up front while Kaito drove. Even in the dark I watched out the window as the beautiful Japanese country side rolled by; I wondered what it looked like back when Lily first arrived\u2014that casual thought threw me head first into her memories.\n\nIn the darkness of the night, Lucas and I stood on the deck of our ship, gazing out at the island as it began to loom in the distance. The orient\u2014I knew it only through the memories of those before me yet it was something I had always wanted to experience for myself. As my brother and I killed our way across the world to get here, I suddenly felt a pang of regret, though not for the hundreds of lives we took, for the simple thought that once we finished our trek the entire world would be known to me. An eternity without any mysteries seemed like a dull existence; I tried to assure myself that change was inevitable, that humans were fickle creatures who always pressed forward, onward to greater discoveries and new technology. Perhaps someday ships would not only sail the ocean but the skies, maybe even beyond into the heavens above.\n\n\"I think I'll go north,\" the tone of his voice expressed his lack of desire to visit the place, his boredom. He had been that way for a while after we left Siberia and fleeted our way through China. \n\nFrankly I found his apathy tiresome and was more than happy for a break from his constant companionship, \"I will visit the mainland. Let us meet back at the boat in a month.\"\n\n\"Very well sister,\" he grumbled, retreating to tell the captain of our plans.\n\nLucas was dropped off first before the ship docked in the main harbor; pulling up the hood of my cloak I stepped out into the night filled with the dark excitement of a new adventure. I trolled the streets until just before dawn, paying for lodging in a quaint hotel where tourists often stayed though I was the only white woman amongst them, the others were all Asian businessmen, coming in from other cities to see to their trade.\n\nI kept an ear to the ground for rumors of shifters; it seemed like everywhere we went there was always a wolf pack or two amongst the fold but I never heard a word about any of them here. I knew the history enough to know that Japanese wolves were often seen as protectors of their human counterparts, ensuring that travelers had safe passage in the mountains where the packs lived, but at least here by the coast there was no mention of them. As I wandered the streets alone I caught wary looks from the locals, muffled whispers that I was a trickster, a fox. I understood their language and spoke it well enough through the memories of others so I was thoroughly versed in their superstitions and knew they regarded me as a supernatural spirit; after that, I took care to remain hidden within the shadows to avoid being seen.\n\nIt wasn't even a week before I discovered an elder vampire living among them in a small house near the base of the mountains; he was dangerously close to what I figured was pack territory, frankly it was a wonder he had survived this long. I waited to ensure that no one was near and I slipped into his home, silently standing behind him while he sat cross legged on the floor, reading through a book. I never even gave him a chance to see my face when I fleeted over to him, grasping his topknot in one hand, my other arm slung around his narrow torso. \n\nTo his credit, he fought amiably; we rolled around on the floor as he tried his hardest to escape my grasp but I was far stronger than him, far more practiced in the art of killing. My fangs sank into his neck and I mewled out at the richness of his blood, the depth of his knowledge as it flowed into my being.\n\n\"You do not know what you are doing,\" he hissed at me, still fighting as his body weakened and slowed. \"They will come for you.\"\n\nIt was the last thing he had the energy to say before I drank all that he had to offer. His cold body became lifeless in my arms, his skin darkening gradually, smoldering in my grasp. I let him fall free of me to the reed mat below and watched as the embers of his being flickered in the dark night. I fleeted in a circle around him several times, whipping up a wind to catch the fire that was within him until the empty vessel flared up, shining brightly enough to force me to cover my eyes. I waited while he burned, ensuring that he left nothing behind to be found but a pile of ash.\n\nMy being hummed with the feeling of fullness, the power of absorbing another elder. I strolled out into the night, unable to suppress the smile on my face as I made my way back to the hotel just before dawn. Tucked safely into a spot of the room where no sun would shine, I relaxed back into the large plush chair, eager to sift through the vampire's memories to see what mysteries they would unfold. As each one played over in my mind, though, the smile faded from my lips\u2014wolves. \u014ckami. Somehow, he was one of them.\n\nOver the next three weeks I took care to remain hidden from all eyes, any being that saw me was sentenced to a quick death by my hand. I sought out all the vampires I could find though there was only one other elder on the mainland, the rest were first spawn of them. I made a large loop around the coast, fleeting quickly from town to town, wreaking havoc where I stopped at night, hiding away safely during the day. All the while, I knew they were on my trail, I heard the whispers amongst the locals of wolf sightings, townsfolk claiming that they were hunting something. I probably should have ran after I killed that elder but my ego overrode that\u2014I was a formidable vampire, there was nothing I was afraid of, or at least nothing that I had discovered yet.\n\nBy the time I had circled the island and made my way back to the port where our ship was docked, one of the crew men told me that Lucas had been waiting in the hotel for a few days; apparently he had grown tired of the northern island and was ready to leave. As it was just before dawn I was forced into the building, silently weaving down the hallways to the large suite that my brother had secured for his own personal use. I was sad to leave this beautiful land, its mysteries were still taunting me, drawing me towards the secrets that these strange humans kept.\n\nI pushed open his door, not bothering to knock; as we had seen each other in every state imaginable neither one of us would bat an eye at our sibling entering our bedchamber. However the instant I saw my brother lying on his stomach, his fine silk attire wrinkled, his limbs contorted behind him as he was hogtied with enchanted silver chains and gagged like a victim, I froze in my tracks. I only had an instant to react and I missed it, feeling the cold metal latch around my neck; the silver burned almost as bad as the sun. I hissed and tried to fleet away but the enchantments engraved into the collar had somehow drained me of my powers. I swung wildly at the tall, imposing man who walked my way but even my strength had evaded me; he caught my fist easily, clamping more burning metal around them, forcing my arms behind me to secure them together. In an instant I was thrust down onto the floor and I felt the indignity of my ankles being bound and forced upwards, my limbs chained together so that my position matched my brother's.\n\n\"You're a dead man, dog,\" I growled at him. I could see it in the way he moved\u2014humans were too oblivious to note the differences, even most vampires missed the way they carried themselves but I had too many memories, spent too much time sifting through years of information to not pick up a thing or two. What surprised me, however, were the strength of the enchantments these \u014ckami possessed; I knew there to be many things that were created to restrain a vampire and while some worked others did not. Even those that were successful were no match for creatures as powerful as my brother and I yet these wolves had retained a magic that had long been forgotten. I knew it from the elder I drained, just like I knew that there was no way I could break free.\n\nThe tall man crouched down in front of me, a half smirk on his lips. I glared at him, studying his posture, his body hidden behind folds and layers of fabric that made up his garb. The smooth rhythmic starts and stop of his language danced out from his lips as he spoke, though I understood his words clear enough, \"You have a vicious mouth on you for a lady. I have heard it said that women on the other side of the world are disrespectful creatures but I would have never imagined it the truth. You will address me as Alpha Nobu and you would do well to avert your unworthy gaze from mine.\" The venom in his voice was clear but I was too head strong to heed it. \n\nI narrowed my eyes at him but the moment I opened my mouth to speak someone from behind shoved a gag into it, cutting my words off. The Alpha rose and without verbally directing them, he made his wishes known; Lucas and I were plucked from the ground and unceremoniously deposited into our own emptied out traveling trunks, the lids slamming down and locking. My mind reeled at the possibilities as I felt the weightlessness of my container being lifted\u2014what if they threw us into the harbor, leave us to die of starvation with the crushing weight of the sea bearing down, knowing we would have no way out? I let my body go limp and closed my eyes, searching through the elder vampire's memories to discern the cruelty these wolves would impose on us but I gleaned nothing.\n\nIt was hours before I felt solid ground underneath the trunk; I knew the sun was still high in the sky. I wouldn't stand a chance if they simply opened it and watched while I smoldered under the brightness of day. I wouldn't even get the opportunity to repent for my sins, to say goodbye to Lucas. Though I expected the lid to be flipped open, it wasn't; I listened as hard as I could but the silver, the burning enchantments had even disrupted my keen eyes and ears. I was as useless as a human.\n\nTime, time was my enemy, my constant companion all these years and this was no different, it passed by painfully slow. Perhaps it was part of their torture, leaving us to think on our impending death. I felt the temperature lower, the night passing by just as slow as the day had. \n\nFinally, movement drew near and the lid was opened. A stout wolf plucked me out of the chest; I half expected him to toss me to the ground but he was civil about it and placed me on my side, taking care to pull my skirt back down to cover my ankles even though by that point I couldn't have given a shit less about my modesty. I was surprised when he removed my gag and undid the binds, though he left the collar on. His stature was tense, as was that of the wolf behind him\u2014both of them expected me to attack which is exactly why I didn't. I would have to bide my time, wait for the most opportune moment to escape.\n\nWhen the wolf retreated out of the cell I realized I was alone in it; it was cut into the wall of a cave, the front of it sealed off with bars made of silver, the artistic characters of their language etched into each one. I watched as he shut the gate and locked it before I slowly rose and gracefully stepped closer so I could get a better view of the area beyond my cell. \n\nThe cavern was large and seemed to extend back far into the mountain; the area just beyond the cell was close to the front as I saw sparse trees and vegetation just outside of the opening and in the middle of it was Lucas. He was still hogtied but had been set on his knees, leaning awkwardly backwards at an angle though his gag was gone.\n\nAlpha Nobu stood over him, \"For the crime of killing a member of the \u014ckami you are sentenced to death.\"\n\n\"I didn't touch a single one of your filthy mutts,\" Lucas spat out.\n\n\"Leave him be,\" I growled from behind the bars with enough tenacity to draw Nobu's attention, \"he wasn't even on the mainland. I was the one who killed your pet.\"\n\nNobu frowned at me, \"You are just a woman, your words do not matter.\" He turned back to Lucas, \"As patriarch of your family, the punishment is yours to bare. Take solace in knowing that your sister will follow in your footsteps.\"\n\nI watched in horror as the sky started to lighten and knew that it wouldn't be long before my brother was a smoldering pile of ash. Just as Nobu began to walk away from Lucas, he broke free of his binds and leapt onto the wolf's back. I was surprised initially until I recalled a distant memory of our youth and how Lucas always got us into trouble, resulting in being locked in our separate rooms. It took him a few tries but he had plenty of practice at picking locks over the years.\n\nI watched as they rolled around on the open stone, noting curiously how none of the other wolves made a move to help the Alpha; I figured it to be a matter of honor. They tussled for several minutes until the sun finally broke free over the mountain top, its rays of light blasting down on to them. My brother let out a long wail, his posture becoming rigid before falling to the ground and writhing in agony.\n\nHis cries tore at my unbeating heart\u2014he was all I had left in this world, the only proof that I once existed as a human long ago. I couldn't watch him suffer, I couldn't watch him die. Before I realized it, my slender fingers grasped at the burning collar around my throat and I tore it free, surprising the wolves outside of my cell as much as myself. With my strength restored I wasted no time and fleeted as hard and as fast as I could, crashing into the metal bars where they met the stone wall, focusing on the only point of weakness as I knew that it would take too much time to break through the enchantments. It took two strikes before the stone buckled under the force and broke free.\n\nI had no control over my actions, my entire body pulsed with rage, with fear as I gave into the darkness and evil dwelling deep within me. I left the two guards in lifeless piles in the cave, fleeting out to my brother. The moment sun touched my pale skin I slowed, ignoring the pain, pushing through my third death to pick him up and carry him to the safety of the shadows beyond. I knew it was hopeless, he was unconscious and I didn't have enough left in me to get both of us to safety and within moments the entirety of the \u014ckami would be on us. I spun on my heels and locked eyes with the furious Nobu and did the only thing I could think of\u2014I dropped down to my hands and knees. I willingly crawled out into the light, choking down the cries of pain that were trying to escape as I made my way to his feet. He stood still, watching me as I pressed my face into the ground and begged.\n\n\"Please,\" I choked out, \"please spare my brother. I am yours to do with as you see fit just give me your word you will not harm Lucas.\"\n\nThe last thing I heard was footsteps before I blacked out.\n\nI felt blood trickling down my throat, the rich substance pooling in my belly, giving me life even though I was dead twice over. I forced my eyes open and saw that I was in a room though the walls were the stone of the cave. I felt the softness of a bed below me and for the first time in a long time, my body felt warm, hot, as if I were sick with fever. I focused on the man who was pouring the fluid down my throat and I saw Nobu; he truly was a handsome man, even for a wolf. He was stout, thick with muscle, his long black hair swept up into a high bun, clean shaven face frowning down at me.\n\nBut then I sensed someone else; my eyes wandered until I caught the gaze of a stranger. He was leaning against the wall, in the shadows of the corner. Though he was dressed like the men of the orient in layers of fabric draping around him, he had a hood drawn up over his head and a mask covering the bottom half of his face, only exposing enough skin to tell me that he was not Japanese, no he looked like he was from Arabia or Persia with his rich olive hued skin and his almost glowing yellow eyes. He held himself with the authority of a wolf but I knew the stillness about him was something only known to a vampire.\n\n\"Leave us,\" the strange man said flatly in Japanese.\n\nI watched in surprise as Nobu rose and bowed to him before disappearing. The man remained still for a moment before he floated over and sat casually on the bed. His presence, his affect and confidence was the only thing that had truly frightened me since I had become a creature of Death's.\n\n\"Lillian Cain,\" he spoke in accented English, \"you have more lives than a cat. I have heard of your trek across the world, killing off all the elders you find so that you can keep their memories for yourself.\"\n\nI struggled to speak, using what small energy I had to keep the conversation going long enough to discover who this man was, \"You mean to stop me?\"\n\nHis golden eyes almost twinkled; I knew under his mask he was smiling, \"No. Death plays a dangerous game and there are too many of his creatures out in the wild. I will allow you to leave this place, to kill all that you like but you must grant me one small thing in return for your freedom.\"\n\nI knew I didn't have a choice\u2014this man or whatever he was had control over Nobu and therefore over the \u014ckami; the power of such a feat meant I was no match for him, \"And who are you to grant me my freedom?\"\n\n\"I am the immortal,\" he said smoothly.\n\nI knew it from the ease in his voice that it was true, just as I knew of his existence through the memories of the dead that haunted me, though none of their speculation was even close to the amount of power this man exuded. As I stared deep into his eyes, I saw something in them, something akin to recognition, to longing, to sorrow; I didn't know exactly why he looked at me this way. Perhaps I reminded him of a ghost of his past. Silently, I thanked whoever it was that haunted him, whoever had affected him in such a way to make him grant me his favor, \"What is it you wish of me?\"\n\n\"I wish you to protect my progeny, at all costs they must not be harmed. If they are, if my line is cut so shall yours be.\" His threat was not hollow nor was it vicious, simply a statement.\n\n\"You have my word.\"\n\nAs I pulled out of her memory, a chill crept down my spine; I knew that she had followed Ameer's descendants through the generations but lost track of them once they crossed the great ocean to the Colonies. After the scales had shifted, after she visited him again he reminded her of her vow; she left Evan behind in England to uphold her promise though she was never able to track them down to an exact location. By happenstance she chose my hometown as a basis for her research. It was almost as if Fate had forced her hand.\n\nI tried to focus on what Kaito and Hiro were discussing; I traced my hands down my flat chest and abs, ran them over my thighs to feel my body, to remember that I was Matthew, not Lily. I honed in on Hiro as he turned slightly, addressing me in the art of influence a human, \"In the beginning, making eye contact is key. You need to relax your mind and focus on your prey. Your body should naturally respond and when you breathe out, your scent will affect them like a drug. When you speak, they should have no reservations about granting you what you ask.\" \n\nI already inherently knew how to influence, as I had experienced Lily doing it to Andre, \"What is the difference between influencing and swaying a person?\"\n\n\"When you influence someone, they are more or less under your spell, so to speak. You can suggest things that they will commit to memory. Swaying is a bit more complicated and doesn't always work, but when you have someone under your influence you can order them to do something they normally wouldn't. For example, you could influence a human and ask them if they would like to have sex with you\u2014very few refuse. Or you could try to sway them to kill someone, that would go against their normal tendencies.\" ",
        "It was clear and unclear at the same time\u2014eventually when I had the chance, I would have to review Lily's memories on the subject to try to discern a difference between the two abilities. Perhaps Hiro didn't fully understand it himself. \n\nThe drive took us nearly three hours, though I used the opportunity to ask questions without having to train at the same time. I discovered that Kaito was only a few years older than me and had yet to find his mate. Since he had already traveled to all three of the \u014ckami packs, he believed his mate was human and he would have to find her the hard way. I discovered that the \u014ckami had no problems with creating half breeds or any notion as to them being inferior to full breeds. It was simply part of their life, a necessity to add new blood to their pack. Takeo was a full breed but his mate was not\u2014he had found her shortly after he became Alpha so she was spared having to fuck his father. \n\nWhen I asked for more clarification on Takeo making everyone submit, they opened up on the matter, even if they found my reservations on it odd. Though wolves in general are monogamous creatures, they held pride in knowing their mate submitted to the Alpha just as they had. I tried not to look disgusted at their responses\u2014perhaps it was just me being born human or outside of their world but I still had difficulties being okay with Takeo fucking his daughter and beating up his son.\n\nWe finally arrived at Dai Ni and were greeted by the pack Beta, Riku. He eyed me warily but after Kaito's insistence that I would behave myself, he relented and showed us to their spare quarters. The room was very similar to my first accommodations, a small living room area, a wet bar and a hallway leading to three separate bedrooms with attached bathrooms. I dropped my bag in one and went back out to meet Hiro as Kaito turned in for the night.\n\nThe moment Hiro and I stepped outside of the pack building, a scraggly looking silver tabby appeared and sat down on its haunches in front of us. Hiro glanced at me questioningly. \n\nI rolled my eyes and looked at the cat, \"Let me guess, Jinx sent you.\"\n\n\"Meow,\" she said quaintly.\n\nI raised an eyebrow\u2014at least this cat seemed to be less of a pain in my ass and more willing to try a different approach, \"Have you figured out how to convey the message?\"\n\nShe tilted her head for a moment, before yawning, \"Meow...meow.\"\n\nOne for yes, two for no. I felt like maybe I'd get somewhere with this cat, \"Well come back when you do.\"\n\n\"Meow,\" she purred and then sauntered off into the night.\n\nDai Ni was located almost directly in downtown Tokyo in a large professional looking building. I would have never guessed that it housed wolves or anything other than a business. When we started walking down the sidewalk I was inundated with sound, lights and people\u2014so many people. It was overwhelming and for a moment I started to panic; Hiro noticed this and led me to a small sake bar to cut the assault of the wild night from my senses. He got us a table in the back and we sat in the dimly lit booth. With a mere hand motion, he signaled a waitress to bring over a tokkuri and two cups. She greeted us with a quaint bow and set the items on the table before bowing again and disappearing.\n\nHiro poured sake for us; when I took the small ceramic container in my hands and brought it to my mouth, I felt my fangs graze the rim. I looked at Hiro, suddenly worried, \"Our teeth and eyes...\" I started, unsure how to word it.\n\nHe chuckled slightly and drank from his mug, \"Do not worry about it, at least not here in Japan. The streets are filled with odd characters, humans trying to be things that they are not. No one will believe we are anything but men dressing a part to fulfill some fantasy.\"\n\nIt was unnerving but he seemed entirely comfortable about it. \"Do you know how to control it?\" I wondered.\n\n\"No,\" he frowned, \"Lilithsan killed my benefactor before I had a chance to learn. Perhaps she will teach you.\"\n\nWe sat in measured silence, watching the humans interact with each other. I studied each table in a way I had never bothered to in the past, honing in on the details of their expressions, the beating of their hearts, the words they spoke. It was almost unsettling, being hidden in the darkness of the booth and witnessing everything in such detail as a voyeur.\n\nHiro slightly nodded towards a pair of blondes sitting across the bar; they had been trying to order something for the past ten minutes but didn't know enough Japanese to convey what they wanted, \"Tourists,\" he said. \"They are easy prey, good for your first feeding. Why don't you ask them to join us?\"\n\nI raised a brow and looked at him, \"You want me to pick them up? Seriously?\"\n\nHe tisked, \"Yes Matthewsan. In a way, hunting prey is no different than the act of courtship. You hone in on your target, you approach, you make your move and take what you want before retreating.\"\n\nI glanced back over at the blondes and shifted slightly in my chair. I could do this, I knew I could but I still had my reservations\u2014it simply seemed unfair. The cards were stacked severely in my favor, there was no challenge to the hunt. Hiro mistook my hesitation for nervousness.\n\n\"You do not need to be afraid. I will stop you before you harm either of them,\" he said before sipping his sake.\n\nI closed my eyes and drew in a deep breath, trying to relax my body. Sooner or later I wouldn't have a choice but to feed from a living being and it was just as well that I do it with Hiro around. Stilling my hesitation, I turned to him, \"I don't plan on fucking either of them, simply drinking.\"\n\nHe eyed me carefully with a smirk, \"That's just as well, I wouldn't mind having them both. And it seems that you are more in control of your faculties than I would have thought possible.\" He raised his hand up and pointed at his teeth.\n\nImmediately I ran my tongue across my lips, surprised that it wasn't sliced on my fangs; that was when I realized that I could control it. No doubt my eyes were back to their normal green as well and I would appear human. I nodded slowly before I rose from my chair, taking care to walk at a normal pace over to the women's table; there was a waitress with them attempting to understand what they wanted. All three of them looked up at me when I approached.\n\n\"Excuse me,\" I said quietly, offering a short bow, \"may I be of some help to you?\" I stared into the eyes of the taller blonde. She sucked in a breath and held my gaze as if she were under my power already. When I glanced at her shorter friend, she was the same way.\n\nFinally one of them managed to stammer out, \"We aren't exactly sure what to get.\"\n\nI smiled slightly, \"Of course; if you ladies would like, you can join my friend and I at our table and we will assist you.\"\n\nThe tall one dumbly nodded and rose, her friend following. I spoke in Japanese to the waitress and asked for another tokkuri and more cups; she bowed before scurrying off. We made our way back to Hiro who stood and motioned for the shorter woman to slide into the booth on one side. I repeated his gesture with the taller one before I sat on the edge, essentially boxing them into the middle.\n\nAs the effect of my influence began to ease off of them, they didn't seem to be bothered by our presence. They took up chattering on about this and that; I feigned attention, nodding when poignant though I wasn't really listening, I was observing how Hiro interacted with them. He was polite and courteous, taking care to keep their cups full of sake, getting them drunk before they knew what was happening.\n\nSeveral hours passed before the shorter one yawned deeply and glanced at her watch, \"Oh I didn't realize how late it was!\"\n\n\"Let us walk you back to your hotel,\" I offered; I rose from my spot and extended my hand out to the tall blonde who took it with a flirtatious look in her gaze. \n\nHiro covered the bill without batting an eye; he kept his arm tucked around his blonde's waist as they led the way down the streets. I could tell it wasn't in a sexual way or even a possessive way, but to ensure she remained upright as she was so shitfaced she had problems walking in her heels.\n\nThankfully, the tall blonde was wearing flats so I got away with draping her arm through mine, keeping her steady without having to press her body against mine, though she did so of her own accord regardless. I knew the signs before I was a vampire but having sharpened senses made it that much clearer\u2014her eyes were dilated, her breathing shallow, her throat and cleavage were flush, her voice thick and husky as she droned on about something I wasn't listening to.\n\nOnce in the hotel, we walked down a long hallway towards their room, stopping just outside their door. Hiro was being a perfect gentleman, bowing to them, \"Thank you for your fine company this evening,\" he said gently.\n\nThe shorter one hesitated before glancing to her friend, getting a grin in approval before she asked, \"Would you two like to come in?\"\n\nI forced a smile on my face, \"Yes, if that is all right with you.\"\n\nThe women nodded dumbly, fumbling with the door before stumbling into their room. Hiro wasted no time closing in on the shorter one; I watched as he influenced her, \"Perhaps we should go sit on your bed.\"\n\n\"Yes,\" she said, \"I'd like that very much.\" She batted her fake eyelashes at him and sauntered over to the further of the two queen beds.\n\nI turned my piercing gaze on to her tall friend; I knew she wanted to fuck me, even if I hadn't have influenced her. Coyly she bit her lip before grabbing my tie and leading me like a dog to the first bed; within a matter of seconds she had pushed me down on it and was above me, grinding sensuously over my hard cock. I tried not to groan as I watched her pull the top of her dress down and fish out her large breasts; she kneaded them with her small pale hands. I was horny as fuck and it had been too long since I had a good cum but I didn't want her\u2014I wanted Lily. Fucking this stranger wasn't going to give me the satisfaction I needed and I knew as much, but it didn't stop my cock from aching as I felt the heat of her cunt through my trousers. \n\nQuicker than I had intended, I grabbed the woman and pulled her down to me, rolling us on the bed so that I hovered over her. I clutched her chin with my hand and traced her jaw line with my nose. I could hear her heart quicken, see the tiny pulse underneath her skin as the blood gushed through her veins. With my mouth close to her ear, I breathed out, \"I'd like to bite you.\"\n\nShe whimpered, \"Okay.\"\n\nIt wasn't much of a consent but it was enough; I pressed my lips against her neck, opening my mouth and closing it. I felt my fangs extend and sink into her soft flesh, drawing forth the warmth from her body and into my mouth. I felt her blood trickle over my tongue and down my throat, filling my belly with her life force. I pushed aside the urge to read her memories and focused on the sweet taste that she gave me.\n\nWhen I heard a slight change in her breathing, I knew I had to stop. Part of me didn't want to, part of me wanted to drink down the succulent nectar she provided until she had nothing left but I pulled back, releasing my bite; teasingly I licked her neck, prodding the puncture holes with my tongue until I felt them close over. Leaning back I saw the hazed look in her eyes, her need for something more mixed with the exhaustion she felt. Her bare breasts rose and fell with each breath that she took, doe eyes staring at me in expectation.\n\n\"I was never here,\" I whispered to her. \"Go fuck Hiro.\"\n\nWithout hesitation she looked away from me towards the other man; her body rose slowly and she stumbled over to the bed where Hiro had the shorter blonde bent over, taking her from behind. I grunted\u2014it wasn't exactly an original position, he was basically fucking her like a wolf. Rolling my eyes I got up and let myself out of the room, quietly shutting the door behind me. I painfully adjusted my cock as I walked down the hall\u2014no way was I going to watch a threesome and not be tempted to participate. I had already made up my mind, the only way to gain any sort of satisfaction was to reclaim Lily. Watching Takeo fuck her still haunted me, still drove me nuts. I wished I would have forced her into submission before she left, using another man's cum as lubrication while I pounded her cunt until we both reached a mind shattering orgasm. Having to wait a week for relief, even a week just to see her face was grating on me. I knew from this point forward, I would never be separated from her for this long again.\n\nI walked down the busy street, heading back to Dai Ni. The high of my first live feeding was unlike anything I had ever experienced, it was like a drug. I could see how lesser vampires, ones who had lost their morality and were more animal than human could give in to the urge to simply eat. If not held in check for a weaker being, I knew this feeling could be addicting.\n\nI watched the humans scurry around me, too busy caught up in their mundane existence, worried about work or family, not truly enjoying what their life had to offer. In a way, I was bitter\u2014I would never have what they did. I could never have a wife, never have a child, never be bothered with the petty things that a job forced up on me or concerned about making and keeping friends. I moved amongst them like a wolf in sheep's clothing, struggling to view them as individuals, as souls instead of as food. It was hard, very hard; I willed my body forward while searching my mind for Lily's memories to see how she coped with the struggle of humanity. I slid easily into her body, into a body that wasn't mine yet felt just as comfortable.\n\nStanding in the shadows of the mortician's I tried not to frown while I watched the old man move about his work. He wore thick rubber gloves, a large apron and a face shield. I had arrived too late, barely able to see the last of the man's blood swirl down the drain.\n\n\"Please don't do that, Adam,\" I said, setting the duffel bag down on the counter.\n\nThe old man startled and turned to me with wide eyes; his hand rested on his chest while he drew in a deep breath, \"One of these days, Lily, you're going to kill me. I told you not to sneak up on me like that.\"\n\nI walked over to the dead man and looked over his naked form while he lied on the table; he was too young to have reached his second death. Water clung to his cold, stiff flesh, his blonde hair was dark with it, the excess fat on his body seemed like it was pooling around him now that life had left his bones but I knew that appearances could be deceiving. Somewhere in there, he was trapped. When I saw the wound on his neck I narrowed my eyes, focusing on it; the coroner's report was close but he wasn't familiar with Death so he didn't know\u2014it wasn't a dog bite, it was a wolf bite. I leaned down when I noticed some bruising that had started on his flesh and I frowned as I knew all too well what caused it and it was not a wolf. It was a vampire.\n\n\"He's one of yours then?\" Adam said curiously, looking at me after he had peered into the duffle bag. \n\nI turned to him and saw that he had started to unpack the pouches of blood I lifted from the bank, \"Yes. I would have given you more notice but I didn't know myself; looks like he died well ahead of schedule.\"\n\nThe old man frowned, \"It is always a shame to see them go when they are so young.\"\n\nI watched him as he set to work, preparing to fill up the empty vessel with strangers' blood, \"What do you know about him?\"\n\n\"I never met him when he was alive,\" he replied, \"but I know of his family. His kids go to school with my grandkids\u2014he was a good man, well liked, wife and two daughters. His father made the arrangements for the funeral and the obit listed a younger brother\u2014nothing of their mother though, but she isn't buried here if she's dead.\"\n\nFamily. They always complicated things. Whoever killed this man was either stupid or ballsy; I didn't like the idea of a vampire working with wolves. Even though I had done so thousands of times before, those were the old days\u2014now, no vampire kept a wolf. Not even me.\n\nI leaned over to the corpse, my mouth close to his ear and I spoke softly, \"I am sorry this happened to you. I know you must be confused but I will explain everything later. For now, you will have to be patient. Your funeral is set for Friday, I will resurrect you that night.\"\n\nI stood and glanced at Adam as he watched me the same way he always did but this was the first time he had ever been privy to a body that had made a deal with Death. Usually when I interrupted his preparations it was to ensure that proper procedure was followed for a nonhuman or to sip the thickened blood of a corpse to glean the last few memories left in it before its death\u2014I hated doing that but when necessary to track down a killer, I did what I had to. \"Pump him full of blood but leave the corpse otherwise untouched,\" I instructed him.\n\n\"What of the neck would? Should I stitch it closed?\" He asked.\n\nI shook my head, \"Don't bother, just some tape will be fine.\" I glanced over the man's body, glad that I didn't see a large Y incision in his chest. The coroner was a rather lazy fellow and generally didn't bother with an autopsy if the cause of death was blatantly obvious, luckily enough as I can't imagine how awful it would be to wake up with all of your organs out of place.\n\nI nodded at Adam and slipped silently out of the basement mortuary, cutting through the quiet cemetery. I often found peace amongst the headstones, knowing that the remains of the bodies in the ground would stay where they were, that they had been lucky enough to know a normal life and fortunate to only have to experience death once, something that had escaped me already. Before I knew it, I was standing outside of a quaint two story house, tucked into the shadows of a large oak tree that had been around long before the neighborhood sprung into fruition. I glanced across the porch, watching the swing sway silently in the mild breeze; focusing my hearing in, I listened to the heavy footsteps inside of the house. I heard the clicks of the man on his phone, the dial tone and finally a low tenor voice that answered on the other end of the line, no doubt miles away.\n\n\"Hey Dad,\" the voice said. There was a quality about it, the tone perhaps, that stirred something deep within me, something I had never felt before.\n\n\"Matt?\" The man in the house spoke softly into the phone, his agony almost dripping as if his heart were torn from his chest, which in a way it was. To lose a child is a pain I knew all too well\u2014it didn't matter how many centuries passed, it was a sadness that always tormented me.\n\n\"Yeah, hey, I meant to call you last week but I'm catching the redeye tomorrow night so I'll be home for Thanksgiving,\" the man's son replied. He tried to sound upbeat but there was a bit of exasperation in his words, making their strained relationship clear to me.\n\n\"Matt, I have some bad news.\" I imagined the older man, his shoulders dropping, his affect crumbled.\n\n\"What is it, Dad? What's wrong?\" There was panic in Matthew's tone, true worry. \n\n\"It's Teddy. He's...dead.\"\n\nI couldn't force myself to listen to the rest of the conversation, it was torture. It didn't matter that I had heard similar conversations many times before or that I had been the cause of no doubt thousands of the same, this one was different. This one was in my territory, in an area I had meticulously combed for criminals and spent time obviating the murder rate to atone for my own personal sins. It was more than that, though, I felt a pull I couldn't describe, a need to protect this family. Maybe once the older brother was resurrected I would be able to piece this together.\n\nA few days later, I was outside of that house again. I watched as Matthew guided his sister-in-law into a car and pulled away down the road. I fleeted off into the night, arriving at their destination before they did and I saw the care he took when handling the broken woman, he was so gentle yet sure in his movements. It was a while before he finally came back out, wearing a fleece that seemed too large on his slender figure. He was a deadly handsome young man and in time when he grew into a full adult, he would be a commanding creature. ",
        "I stalked him silently while he walked towards the park, watching the way his body moved, admiring the hidden dominance in his stature. The steady rhythm of his heart battling with the sound of his light footsteps filled my ears; I could almost taste his blood in my mouth, imagining the thick darkness of his sustenance, wondering what ecstasy it would be to drink from him while his cock was inside of me. The thought caught me by surprise frankly\u2014it had been a long time since I wanted a man in such a way, years even since I had Evan all to myself. Though I loved that half bred mutt in a way only time could solidify, I felt a pull towards this young human, a draw that made me want to protect him. It made me want to fuck him. It made me want to kill him, because I knew somehow he would be the end of me.\n\nI froze in my tracks, drifting to the shadows to keep downwind of the two wolves that I sighted on the other side of the tunnel. These were not wolves I had seen before, no they looked almost mangy, the jittery frantic pace of their hearts made it clear that they were toked out on something. As I watched Matthew approach them, I knew he was in trouble, there was no way he'd be lucky enough to skate past the pair. I forced myself not to react hastily, knowing I would have plenty of time to fleet to his rescue if needed but I didn't want to run the risk of my exposure.\n\nI watched as he turned on his heels and started running back into the tunnel, the dogs following behind him at a leisurely pace as if they enjoyed playing with their prey. I had to protect him, I knew he would die if I didn't. I was irritated by the urge\u2014no human should have such a sway over a vampire. No doubt this was just some ploy of Death's to get me to do his bidding, or some cosmic minigame between Good and Evil. A fleeting thought crossed my mind as I casually strolled towards the worried man\u2014maybe, just maybe, this was Fate. That fucking cunt.\n\n\"Don't go that way!\" He shouted to me, reaching out to grab my arm. \n\nI skirted his attempt easily, strolling past him, \"Go home.\" I whipped the asp out of my pocket, narrowing my eyes at the two wolves in pursuit, \"You're in the wrong territory, dogs.\"\n\n\"Two for one, sounds like a good night to me,\" the stupid little bitch snapped out disrespectfully. I shook my head, disgusted at each generation that followed over the years. Once, great and powerful, disciplined and skilled wolves were a force to be reckoned with but these pathetic progeny weren't even a shadow of them, there wasn't anything worth saving.\n\nI took down the man not even bothering to fleet or use my full strength, a few simple punches and a twist of his fragile neck and he was dead. I tried not to sigh in disappointment, a good fight, a well matched fight was something that I had missed for a long time. When I turned to the little girl she was standing over the human, he unconscious on the ground. When she leaned down my body responded naturally, the thought never even crossing my mind as I fleeted over and broke her neck before she could touch Matthew. \n\nThe sporadic rhythm of the three pounding hearts had silenced to just one, the man lying at my feet with his eyes closed. It was a tantalizing sound, a sound that stirred more than just my urge to feed. It made me feel...human.\n\nI hefted his body over my shoulder, carrying him with ease through the park and down the street to his father's house, taking care to remain in the shadows. After lying him back on the porch swing, I hesitated. I should have left before he woke but I didn't want to. I didn't want to leave his side ever again. The sentiment irritated me, even so, I sat down near his feet, gently rocking the swing as I listened to the muffled noise of the rain mixed with his breathing. It wasn't long before I found myself staring at the man, tracing his features with my eyes, suppressing my urge to drink from him, to taste him, to fuck him. After all these years, after all the men and women I've had, I never thought it would be possible. I thought I'd missed my chance, just like Evan had missed his. Sighing, I looked back out across the dark yard to the still neighborhood. I knew what he was. He was my soul mate.\n\nThe sounds of Tokyo were muffled by the pack building and the trickling fountain that fed the koi pond in the small garden at the center of the Dai Ni compound. It was a nice touch, truly, if I didn't focus too hard I was able to ignore the bustling nightlife just yards away. I glanced up at the fading half moon peering down on me from the view of the sky beyond the penthouses above, mulling over the memory that I had just lived through. It felt dishonest watching her interactions with me, as if I were spying on Lily but I was surprised to discover she knew even back then that we were destined to be together. I knew why she tried so hard to ignore it\u2014she didn't want to deprive me of a human life. She wanted me to live, to be free of this dark underworld, to die only once. It was a sacrifice that would pain her every moment of her time after I was gone but none the less it was once she was willing to make because she loved me in a way that I could barely comprehend. \n\nIt must have been near morning because I saw Kaito stretching his long form, dressed in simply sweat pants and running shoes. As he walked past the windows and saw me in the garden, he altered his course so that he could join me. I watched his body come near, the way his muscled rippled underneath the tattooed skin, the confident masculinity that came naturally to him as it did to most of the \u014ckami. He was a fine specimen and frankly, I wanted to fuck him. I wanted to pin him down to the ground and slide my cock into his tight, firm ass, I wanted to hear the way a man could moan in pleasure when he was taken like a bitch by a superior being. I felt my dick harden at the images my imagination threw at me and I relented\u2014I gave up trying to fight off my attraction to men, I came to terms with the thought that I wanted them just as much as women. It didn't matter anymore because I knew\u2014I knew that no matter what urges I had, there was only one person for me. Lily.\n\n\"You fed,\" he said simply while sitting beside me.\n\nI held his gaze for a moment longer than I should have; I watched his eyes flicker down towards my crotch. Even if he couldn't see my erection I knew he could smell the precum oozing out of it. I ceased caring that he knew of my attraction towards him, in fact I almost reveled in it; he knew that I wanted to fuck him but what was even more alluring was that he knew I could do it. I was stronger than a wolf, faster than a wolf and before anyone could come to his aid I could pin him down and rape him. But he also knew that I wouldn't and in a way, my restraint was what made me that much more powerful and frightening. \"You can tell?\" I asked.\n\nHe grunted, \"Yes. Vampires always look different when they feed directly from someone living. Hiro just looks like he is well fucked. You, though,\" he glanced at me for a moment longer before looking off into the garden, \"you look dangerous.\"\n\nI wasn't sure how to take that but I knew it must be true. Before I never considered myself to be much of a threat to anyone, I was scrawny though good looking enough I suppose but there was something else that others saw in me that I never new existed. Whatever it was seemed to frighten them.\n\nWe sat in silence for a while, simply enjoying being in each other's company. I was about to suggest hitting the gym, when we heard a small growl. We both looked over to the shadow of the silver tabby cat dragging something in her mouth.\n\n\"I will never understand these creatures,\" Kaito said with a frown.\n\nThe cat slowly came into view, waddling slightly because the stuffed animal in her mouth drug between her legs. I would have laughed at the hysterical sight but the instant I saw that it was a stuffed bear, I realized what they had been trying to say to me.\n\n\"Teddy.\"\n\nThe cat dropped the bear out of her mouth as soon as I uttered his name. She purred and rubbed against my leg, \"Meow.\"\n\nI reached down and petted her back, scratching her head while speaking to Kaito, \"I need to make a call, can you get me a secured connection?\"\n\nHe raised his brow, pursing his lips; I knew he didn't like the idea but he simply nodded and rose. I followed him into the pack building until we encountered Riku.\n\nThe Beta frowned, still eyeing me suspiciously, \"If I do this you cannot disclose your location or the pack will be at risk.\"\n\n\"I would never do anything to harm the Okami,\" I replied earnestly, \"the cats have been trying to convey a message to me for a while. Since Lily is the only one of Death's creatures I haven't been able to figure out what they were trying to say until now.\"\n\nRiku glanced at Kaito for a moment before he started walking and led us into a large office. He pointed to a chair behind a desk, \"I will only allow this if we remain and listen to the call.\"\n\n\"Of course,\" I replied, taking a seat. I watched him as he opened up a laptop, clicking through a few programs before setting it in front of me. I typed in the number without thinking, Lily's memories assisting me as I hit enter to connect the call.\n\nWithin moments the screen popped up the sight of Teddy's young face; it was still jarring, seeing my older brother, who now looked like my younger brother. I couldn't help but smile, \"Teddy.\"\n\nHis eyes grew wide; he leaned in slightly as if to focus on my face, \"Fuck. It is true\u2014you're a vampire now.\"\n\nI felt my fangs on my lips, realizing that after I fed and remained highly aroused that they never retreated, \"Oh, yeah well...I got shot and was dying. She made a snap decision to\u2014\"\n\n\"Lily changed you?\" He gasped, apparently not having known who was my benefactor, \"I had heard she never changed anyone, holy shit dude.\"\n\n\"Yeah well don't tell anyone,\" I grumbled, realizing I should have kept my trap shut. I redirected the conversation before he could ask me more questions, \"So you wanted to tell me something?\"\n\n\"Right,\" he said while he leaned back, though his eyes never left the screen, still glued on my flawless, dead features, \"Look, I have no idea what is going on, these damn cats are being tightlipped about the entire thing but I suspect it has something to do with Ian. All I know is that a guy named Daniel Warner is trying to get ahold of Lily but she seems to be indisposed. The furballs tried to clue you in but since you can't talk to them, they came to me. Are you going to tell me what the fuck is happening?\"\n\n\"I can't, Teddy, not right now. I promise once it is all over I'll explain everything\u2014do you have Daniel's number?\"\n\n\"Yeah,\" he replied, rattling off the information. \n\nI nodded and offered a smile, \"Thanks bro.\"\n\nHe eyed me for a moment before returning the grin, \"You got it. Don't die again, okay?\"\n\nI laughed before ending the call. Without bothering to ask, I punched in Daniel's number and waited. When the call connected, he was dressed in a white t-shirt, his hair disheveled; it occurred to me then that with the time difference I had woke him up. \n\n\"Hello Mr. Warner,\" I said flatly, trying to maintain the mystique I had created when we met on the plane.\n\nDaniel stiffened up and ran his hand through his hair, \"Matthew,\" he said curtly. \"I was expecting a response from Lily sooner\u2014for a few days I thought you were just fucking with me. I felt like an idiot talking to a cat.\"\n\nI snorted, knowing the sentiment, \"Lily has been busy but I'm here now. I take it you were successful in overthrowing Timothy?\"\n\n\"Yes,\" he said, \"I made it clear to Ian that any deal he had with the previous Alpha died with him. The Durham and Lancashire packs share my sentiments\u2014we don't want to be involved in any of this. You will keep your word? To leave us be?\"\n\nI sensed the worried tone in his voice and I knew he still doubted that a vampire could be trusted by a wolf; I almost laughed but I refrained, \"Of course I will, Mr. Warner. We don't want anyone harmed who doesn't deserve it. Do you know where Ian is?\" \n\nHe paused a moment, scanning my features, trying to discern my honesty. He either realized he didn't have a choice or decided to believe me, because he told me what I wanted to know, \"He returned to his estate. I had scouts keep an eye on him; as much as I can figure, he's got close to fifty vampires. Some other coven joined his.\"\n\nI narrowed my eyes, \"Lucas?\"\n\n\"No,\" Daniel immediately shook his head, \"he hasn't left his place once. This new vampire is Russian I think, he's got a pretty thick accent.\"\n\nIt made sense that Ian would have Russian contacts, in fact it explained how he ended up with two Slavic rouges under his command. \"Thank you, Mr. Warner. You've been most helpful.\"\n\n\"He still thinks you're human,\" Daniel added, \"they all do. I never bothered to correct them otherwise.\" A slow smile crossed his lips, \"It's going to be one hell of a surprise when they figure it out.\"\n\nI couldn't help the smirk, \"Yes, yes it will.\" I gave him a nod before disconnecting the call and shutting the laptop. I leaned back in the chair, pondering over the new information when Kaito's voice cut into my thoughts\u2014I had forgotten him and Riku were listening.\n\n\"It sounds like Fate is on your side,\" he nodded, \"we should train. You will need all of the help you can get.\"\n\nWe ran on treadmills for almost an hour before hitting the sparring room; Riku, out of curiosity, joined us. He watched Kaito and I fight for a long time; I made an effort, letting the wolf best me at some points but making sure to exhibit that I was no longer unskilled yet the entire time, I was skimming through Lily's memories for information on Fate. The way she felt about it was clear\u2014it was an actual entity like Death, but not as powerful as Good or Evil yet even so her knowledge on it was minimal, rumors or vague references, nothing concrete.\n\nI dodged Riku as he came flying at me, shoving his lanky body to the side while I rolled away from Kaito's kick. I stood, my eyes darting between the two, narrowly missing the surprise attack.\n\nRiku rose to his feet, stalking across the mat; it was clear he was hunting me. Kaito assessed the other Beta's interest before retreating for a water break.\n\n\"You are not focused on this,\" Riku said flatly, \"I can tell you are holding back.\"\n\nHe jumped again; my eyes went wide as I watched his lithe human from melt into a wolf midair. I side stepped his attack and fleeted across the room, eyes glued on the beast that was growling at me. While I had ran with the \u014ckami before, I never fought one.\n\n\"He thinks I have been too gentle with you,\" Kaito said before taking a long drink from his water bottle and sitting down cross legged.\n\nThat was the only warning I got before the beast came at me again. At first, it didn't seem fair\u2014I was a vampire, he was a dog; I thought I could easily take him down but I was surprised to discover how menacing his snapping jaws were, how threatening his claws were. He was nothing like the English wolves I had knocked out. It took me a while to get a good read on his tactics and I spent that time barely evading his lunges; once I had figured out the way his body moved, I waited for him to come at me again.\n\nAt the very last second I fleeted out of the way, jumping and turning mid air so I could grab him by the scruff of his neck. We crashed down to the mat and I pinned him with my weight, but only barely because in his wolf form he probably had twenty pounds on me. I growled into his ear, not daring to loosen my grip until he steadied. With my arm wrapped around his throat I had the beast in a choke hold\u2014we both knew I could snap his neck. \n\nHe finally stilled in my grip, his form immediately melting back into a naked man; I felt the slickness of his bare skin against my sweaty chest, the tension in his muscles as he submitted but not willingly. I ignored my erection, resigning myself to the fact that I would spend the rest of eternity with a perpetual hard on no matter what I did. \"Do you yield?\"\n\nRiku grunted, \"Yes.\"\n\nI let him go and immediately stood, walking away to sit beside Kaito.\n\nHe offered me his water bottle, \"It seems that Riku was correct\u2014I have been too soft on you. Your form is much more elegant than I would have imagined...looks like some of her memories are leaching into your mind.\"\n\nI didn't reply, just narrowed my eyes at him and chugged the remainder of his water out of spite, though I had no need for it. What I needed was blood. I handed him back the empty bottle and asked, \"You spoke of Fate earlier\u2014what is it?\"\n\nBy then Riku had gotten dressed and sat down in front of me; he quirked an eyebrow, \"Most of the other wolves in the world refer to her as the moon goddess, though she is so much more than that; they simply do not understand things as we do, though even our understanding is minimal at best. Fate is\u2014well, fate. Like Death she seeks to balance the world out, to provide creatures with a reason to live instead of a reason to die.\"\n\n\"Yin and yang,\" Kaito said.\n\nI understood what he meant but I rolled my eyes at it none the less; in a way, the \u014ckami were no different than the rest of them, never giving it to you straight but always speaking in riddles. If I ever had the privilege of speaking with Ameer again, I'd have to get a better answer on the subject; for now, simply knowing that a force greater than any creature I knew had destined Lily and I to be together would have to suffice.\n\nThe next few days blurred together; during the light hours, I trained with Kaito. Riku began to participate as well, offering me his guidance. Though in the beginning he was skeptical of me, he had started to relax in my presence. His fighting style was drastically different from Kaito's, which was good because it offered me the experience of something new. On the last day, both Betas tag teamed me in their wolf form; I didn't hold back. Though my learned skills paled in comparison to the knowledge I gleaned from Lily's memories, I discovered that I had adapted a technique from all of them, a sort of bastard amalgamation of fighting style. The wolves commented on it, impressed that I was able to retain as much as I did.\n\nAt night I went out with Hiro; he taught me the knowledge he knew about influencing and swaying, granted it wasn't much and I had already discovered most of it for myself but simply watching him in action was a lesson learned. He didn't treat the humans like Lily, Lucas, Ian or even Max\u2014not like a thing or a source of food, but as a charge, as a precious responsibility. It was a revelation to see that despite his many years of being a vampire, living with the \u014ckami had taught him more about being a human than Lily had learned living side by side with mortals.\n\nThough I was almost sad to say goodbye to Riku on our last night there, I was ready to leave the city. Tokyo was a bustling clusterfuck at the best of times; maybe if I had been human it would have been different but as a vampire it was almost overwhelming to be constantly around the noise, lights and thousands upon thousands of humans.\n\nKaito drove us back to the mountains; he and Hiro talked off and on but I remained mostly silent. It was exhausting constantly being awake and I had been training hard these past few days without a reprieve for anything more than a shower on occasion. My mind was reeling as I tried to formulate a plan of attack against Ian; it would have been nice to spend more time in the sanctuary of the \u014ckami but each moment we spent in Japan gave that bastard more and more time to gather fodder, making our job that much more difficult.\n\nAfter we arrived back at the pack house I bid Hiro and Kaito goodnight, choosing to retire to my quarters with the hope of squeezing in some meditation before Kaito insisted on a pack run. When I opened the door, I first noticed Max sitting on the couch; he seemed relaxed, though worn. He had just showered and cleaned up so he looked mostly put together aside from the healing bruises and bite marks that adorned his face, neck and arms.",
        "Then, my eyes fell on her. Lily. She was drinking back a tall glass of fresh blood; when she set it down and looked at me, I saw the toll the journey had taken on her\u2014she wasn't quite a hundred percent when we arrived and the week we spent apart had a slight detriment on her recovery. Her face was slightly ashen and worn, her normally bright red eyes seemed a bit dull. But I didn't give a fuck. The moment I knew she was real, my body responded before I could stop it.\n\nI fleeted to her, crashing into the couch and tipping it back when I tackled her body to the ground. A growl escaped my throat and I had her arms pinned to the carpet. Slowly, teasingly, I ground my hard cock against her, playfully biting at the air in front of her face. Coyly, she suppressed a smirk by biting down onto her lip. \n\nMax cleared his throat, \"So, how was Dai Ni, Matthew?\"\n\n\"Great,\" I replied sarcastically. I knew he was simply trying to remind me of his presence but for all I cared he could stay and watch because I had no intention of letting Lily out from under me until I had my fill of her cunt.\n\n\"Good,\" he said awkwardly, \"I'm just gonna...\" He didn't bother finishing his sentence before he wandered off down his hallway.\n\n\"I don't suppose we could do this on the bed,\" Lily asked, her tone mildly irritated though I knew she was faking it.\n\n\"Sure,\" I replied, shifting her left arm over so I could pin down both of her wrists with one of my hands, \"we'll go there next.\" With my free arm I shoved her skirt up, my fingers tracing over her panties before I hooked the edge and shoved them inside, giving me access to her cunt. Normally I'm a thoughtful lover, I take the time to ensure that my partner is ready, perhaps even make her cum a few times before I have my turn but not this time\u2014I had just spent a week in sexual torment, subjected to images of my mate fucking different men\u2014this time was for me.\n\nIt took me seconds to free my cock from its restraints and I didn't miss a beat, I lined it up with her hole and I slammed the entire length home, savoring the tight hug of her cunt that I had missed so much. Her eyes went wide before she tilted her head back and thrust her chest upwards to me, a low moan escaping her lips. I exhaled a sigh of relief before I withdrew and began to violently fuck her. I grabbed her throat and squeezed, staring down in to her eyes. Brushing my lips against hers, I felt her muscles begin to constrict around me and was almost floored\u2014she was getting off on my brutal domination of her body. \n\nSeeing her in pleasure was almost enough to do me in; I barely managed to restrain, to hold back though I desperately wanted to give in. I growled at her, slowly breathing out; when I saw her chest rise and she started panting, her pupils dilated and she began to squirm beneath me, fighting to get free. For the first time, I saw the hint of fear in her face\u2014it shocked me, until I realized what I had accidently done: my body was responding naturally to hunting her, to fucking her, to my desire to feed and I had unknowingly tried to influence her.\n\nI should have pulled away, let her go but part of me was curious to see if she would succumb to it; Lily was a terrifying, magnificent being whose strength and power was barely exceeded by Lucas alone and I didn't even think it was remotely possible that she should worry about being under my sway. When she caught my gaze, though, I saw something deep within her before her entire body relaxed against me and she succumbed to my dominance, fully submitting to me in that one moment\u2014but she did it of her own choosing; instead of trying to fight me off, to get herself out from under my control she gave in to her urge.\n\nKnowing that she did it willingly, that she offered her body and soul to me of her own accord was probably not something I should have ever discovered. It gave me too much power. I knew, in that instant, why neither she nor Lucas changed anyone\u2014they were a different breed of vampire, despite their vast lifetimes, the unfathomable amount of knowledge they knew they still were bound to a code of chivalry, a guideline of ethics that were instilled into them long ago but the power they possessed was difficult for them to control. For me, though, I knew just how dangerous it could be once I became the immortal\u2014there would be nothing that could stop me. \n\n\"Who do you belong to?\" I hissed out at her, pushing aside my thoughts, trying to bury the vastness of the power that I knew dwelled deep within me.\n\nHer eyes drifted shut and she purred out with each thrust I gave her, \"You, Matthew. I belong to you.\"\n\nA shudder rippled through my body at her admission of it; I leaned down and kissed her softly, releasing her throat before my lips tracked a path across her jaw. I whispered into her ear, \"And I belong to you, Lily. Now and forever.\" She moaned out when my fangs pierced her neck and I tasted her blood at the exact moment that her pleasure peaked and ruptured throughout her body; as she writhed underneath me I couldn't restrain my need any longer and I cried out into her skin, cumming deep within my soul mate."
    ],
    "authorname": "AfterDusk",
    "tags": [
        "vampire",
        "nonhuman",
        "wolf",
        "werewolf",
        "non-human"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/first-death-pt-09"
}