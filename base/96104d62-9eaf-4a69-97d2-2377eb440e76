{
    "title": "Smile",
    "pages": [
        " If you've read my story 'Love Hurts' you may remember a minor character called Irene. She was one of the door staff at Guys &amp; Dolls, a nightclub for lesbians and gay men. Irene was the diminutive bouncer whose permanent scowl made even hard men run for cover.  'Smile' is a tale that thrusts Irene into a starring role. It's a love story\u2014there is some sex but as always it's secondary to the plot. I hope you enjoy it.\n\nCharacters in sex scenes are eighteen years old or over. All characters and places are imaginary\u2014any resemblance to persons living or dead is coincidental.\n\nCopyright \u00a9 2018 to the author\n\n\"...You'll find that life is still worthwhile/If you just smile...\"\n\nNat King Cole 1954\n\n* * * * *\n\nAnnie\n\n\"Doesn't she ever smile?\" I pointed to the petite doorkeeper. I asked because her expression always reminded me of that old saying\u2014what was it? Something about a bulldog chewing on a wasp.\n\n\"Who, Irene?\" My pal Maggie laughed. \"I've been coming here for three or four years now and this is about as pleasant as she's ever looked. Still, Malcolm makes up for her. He's always cheerful.\"\n\nMalcolm was Irene's workplace partner on the door, a huge man who seemed to exude happiness. He was even friendly and jovial when throwing people out. And did I say Malcolm was 'a huge man'? He was a giant who would have made John Wayne look like a midget, that is if you could ever have got John Wayne into a gay club which seems unlikely. Nobody ever bore Malcolm any ill-will. Irene? Well, I don't know about that. She certainly didn't go out of her way to win friends and influence people.\n\nI'd seen them in action once. I'd been near the front of a queue to get into the club one evening. At the head of the line was a plump, red-faced man who had obviously, as they say, supped well but not wisely. He was an obnoxious loudmouth who had been complaining bitterly about the wait for fifteen minutes or so. \"I'm sorry, sir,\" Malcolm said to him, \"I think you've had enough to drink already. I can't allow you in.\"\n\nWith booze-induced bravado, the plump man leaned back to stare up at Malcolm's six-foot-six or -seven. \"And who's going to stop me? You? I'm not scared of you, you big bastard.\"\n\n\"Of course you're not, sir, I could tell at a glance you're the stuff heroes are made of. I still wouldn't advise you to go into the club, though. Not a good idea.\" Smiling, Malcolm leaned back against the door-frame, muscular arms folded.\n\n\"Fuck you!\" The drunk made as if to enter the club, only to find his way barred by five-foot-nothing Irene. \"You heard my colleague, you're not coming in,\" she said.\n\n\"Fuck you too!\" The man grabbed at Irene's shoulder to push her aside. I didn't see exactly what happened, only that suddenly he was on the ground, flabby hand clutching an elbow. \"You've broken my arm,\" he whimpered.\n\n\"No I haven't. If I'd broken your arm you'd be in real pain.\" Irene's tone was neutral, as if she was greeting a casual acquaintance. \"Now get up and go away before I get annoyed.\" I don't know about the plump man but Irene's scowl scared me and I wasn't even involved.\n\nMalcolm reached down with a huge hand, gripped the drunk's jacket collar and lifted him to his feet as if he weighed nothing. \"You see, sir, I told you it would be a bad idea. Now why don't you go home and sleep it off? Oh, and don't bother coming back here\u2014Irene remembers faces and she holds grudges.\"\n\nThere had been a smattering of applause as the drunk lurched off. Remembering the incident, I told Maggie all about it.\n\nMaggie grinned. \"The damned fool. Irene's a krav maga expert.\"\n\n\"Krav maga? That's a new one on me.\"\n\n\"It's an unarmed combat system, not a sport, no gentlemanly rules like some martial arts. It's Israeli in origin and was devised for their military and intelligence personnel.\"\n\n\"Well, I was impressed,\" I commented.\n\n\"You didn't know this place when it first opened, did you?\"\n\nI shook my head.\n\n\"Dodge City on a Saturday night,\" Maggie told me, \"All the local yobs thought it would be fun to come in and start trouble with the gays\u2014idiots thought that all gay men are pansies. It happens a lot of the gay men in here play rugby or belong to the local boxing club. Malcolm and Irene were like Wyatt Earp and Doc Holliday and with back-up from some of the members... well, after three or four weeks this was the quietest, safest club in this part of the city. Still get the occasional prat but not too often.\"\n\nI looked again at Irene. \"You know, it's a shame about that expression of hers. Look past the scowl and she's got a really nice face. If only she'd smile...\"\n\nMaggie laughed. \"Annie Truscott, I do believe that you fancy Irene,\" she teased.\n\nI felt my face go warm. \"I'm only commenting...\" But did I fancy Irene then? I'm not sure. What I was sure of was that hidden under that menacing look of hers was something quite different. Oh, she wouldn't have won any beauty contests, anything like that, but I believed I could see what most couldn't, someone decent and pleasant-looking struggling to get out.\n\nI continued watching Irene for a few moments, almost lost in a daydream. When I tore my eyes away from her, I saw that Maggie was giving me a quizzical look. \"You know, Annie, I think it's about time that you looked around for someone new,\" my friend said, \"You've been alone long enough.\"\n\nI shrugged. \"After my last experience? I don't think so...\"\n\n\"Not everyone's like Barbara,\" Maggie pointed out, \"And it's what, five or six years now?\" I hadn't been completely alone for all of that time\u2014when I first met Maggie we'd had a very brief fling but then decided we'd make better friends than lovers.\n\n\"Nearer six,\" I said, \"Whatever it is, a pet goldfish would be an improvement. It wouldn't be likely to walk out on me, anyway. \" Then as an afterthought: \"Neither would my vibrator.\"\n\nMaggie gave a long, theatrical sigh. \"So young, so cynical...\" And we both laughed.\n\n* * * * *\n\nDespite our laughter I had been badly hurt at the time and it soured me for other lovers. One- or two- night stands, yes\u2014other than that, no!\n\nWhen I was about eleven my father was made redundant from his job. He had always been a keen amateur photographer and a good one so with Mum's encouragement he decided to have a crack at running his own business, putting a good chunk of his redundancy money into starting up. He found a vacant shop near the city centre and fitted it out as part retail outfit, part studio\u2014clever with his hands, he was able to do much of the renovation work himself. It was tough going at first but he gradually built it up into a successful venture and in time he found himself on constant call. His work was quality and his customers recognised this.\n\nSadly, a short while after my twelfth birthday, my mother was diagnosed with multiple sclerosis. It wasn't too bad at first but it is a progressive disease and worsened as the years went by. Dad offered to give up his business to look after her and that was one of the few occasions I remember Mum being ratty with him. \"Don't you dare, Ted Truscott! You've got something good going here and you're not going to throw it away just because I'm unwell. The best thing you can do for me is to make it a success.\"\n\n\"Anyway,\" I'd chipped in, \"I can take care of Mum while you're at work, Dad.\" And that's the way it was.\n\nI was about sixteen or so when I admitted to myself that I was probably gay. I'd been masturbating for several years and slowly realised that my fantasies when touching myself were all about women and girls. Men and boys just didn't appeal to me. I was bothered at first\u2014most of my school-friends seemed to be boy-crazy yet I just couldn't see what was so attractive about the pimply and immature unwashed. I started to believe that there was something unnatural about me. I was unhappy for quite a while, wanting to conform but unable to do so, until the day I read a magazine interview with a famous TV personality who admitted to being a lesbian. She understood it could be difficult in certain places and situations but said that she felt much happier, more at ease and more confident once she was, as she put it, 'out and proud'. That was when I saw the light. I thought What the hell? I was what I was and no amount of wishful thinking was going to change that, so with relief I accepted my sexuality. 'Out and proud' was my mantra from then on.\n\nI came out to Mum and Dad before anyone and they were generally fine with it. Dad first\u2014he said: \"Okay, that's great. Would you like to see my latest camera?\"\n\nI was taken aback by his easy calm. \"Dad, did you understand what I just told you?\"\n\n\"Of course I did, Annie. I didn't just ride into town with straw in my hair and cow-muck on my boots. You prefer girls to boys and looking at some of the specimens of today's young manhood, I can't say I blame you.\" He winked. \"Always preferred girls to boys myself. Guess it must run in the family. Now, about this new camera...\"\n\nMum was a little more concerned at first, \"...not because I mind you being gay, darling, but because you're likely to meet with a lot of prejudice...\" Funny thing, though, I actually encountered very little bigotry. Times change, maybe slowly, but they do change and mostly for the better. I suppose living in a city helped, it might have been worse in a small town or village. All of my friends thought me being gay was cool. As for others... well, there were quite a few gay and lesbian clubs in the city, Nancy's Nook and The Twilight Time Rooms among them, so I guess most people just decided they might as well accept the situation.\n\nAs I was at school and Dad building his business, a professional carer came in during the weekdays to help Mum out. I did the early morning stuff with Mum, getting her up and making her breakfast and also the evenings when I cooked supper and got her back to bed. If Dad was free, he'd do his share. As the years went on Mum slowly worsened until towards the end she wasn't even able to feed herself.\n\nThree different universities offered me a place depending on my A-level results which turned out to be satisfactory. In the end I accepted the place at the city's own college so I could be close to home and Mum. First, though, I decided to take a gap year and put most of myself at Mum's disposal. I did get a part-time job so that I didn't sponge off my parents and generally things worked out well. I know they appreciated it.\n\nMum insisted that I take at least a couple of evenings off a week so that I could get out and do what normal nineteen-year-old girls did. Mind you, what I did wasn't what a lot of people my age would call 'normal'. 'Normal' in the city usually meant going out in a gang with other girls, getting totally shit-faced and falling down puking in the gutter while your mates laughed at you (or helped you if they were feeling kind-hearted). Oh, and if you happened to get shagged by some sleazeball along the way\u2014known locally as a ten-second hello\u2014that was considered 'normal' too. Evenings often ended with a ride in either a police car or an ambulance. Sorry, even if I'd been straight that sort of thing wouldn't have been my choice. 'Normal' for me usually meant going to the cinema or a concert or sometimes a nice quiet pub or club for a drink. There were times when a little company would have been good but I was okay by myself.\n\nMost of all I liked the lesbian club on Marlborough Avenue called The Twilight Time Rooms, a swish place catering for femmes. It was a bit costly to get in but the drinks were a reasonable price and I didn't go there too often. I'd have a couple of small beers, talk to anyone who wanted to talk, have a dance or two if asked, and nobody ever pressured me into taking things further. The offers were there but if I said \"No thanks\" that was accepted gracefully. The Twilight was quality and it was where I met and fell for Barbara.\n\nThe DJ was playing a blaringly loud selection of 1950s rock 'n' roll and I was part of the mob on the dance floor although I was dancing by myself. Another woman dancing by herself worked her way towards me and held out her hand. I took it and she pulled me close. I reckoned she was about my height but was wearing heels that added a good three inches. How the hell she could dance in them I don't know but dance she did and very well too.\n\nShe shouted out a name, barely audible above the music. \"Barbara!\"\n\nOh, I thought, she's mistaken me for somebody else. \"I'm not Barbara!\" I yelled back, \"My name's Annie!\"\n\nShe laughed and pointed to herself. \"No, I'm Barbara! It's this racket\u2014makes it hard to hear properly!\" As if the DJ heard her, the music abruptly changed to a quieter number with a different tempo, Tommy Edwards' \"It's All In The Game\" and Barbara pulled me in close for a slow, smoochy dance. She had a slim figure with medium-sized breasts which felt nice and firm as they pressed against me and my libido started to give me little kicks down below. Because of the extra height afforded by her heels, I was able to bury my face against Barbara's neck and enjoy the delicious fragrance she wore.\n\n\"Two questions,\" she said, \"First, I know it's a clich\u00e9 but do you come here often?\"\n\n\"Only as an occasional treat,\" I told her, \"I'm on a gap year so I'm careful with my money.\"\n\n\"Okay. Question two, are you with anyone tonight? If not, would you like to spend it with me?\"\n\n\"Technically, that's three questions.\"\n\n\"Ooh! Picky, picky!\" Barbara grinned.\n\n\"That's me,\" I said, \"Miss Picky Picky herself. And yes, I'd like to spend the evening with you.\"\n\nWe danced some more then the DJ took a break so Barbara led me to the bar where we commandeered a couple of spare stools and ordered drinks. Her name was Barbara Fletcher and I guessed her as being four or five years older than me. She was wearing the classic little black dress and she had straight blond hair that reached almost to her waist. Like so many young people, I was easily impressed and was seduced by her confident air.\n\nThe music started again, slow and smooth this time, and Barbara took me to the dance floor where we were virtually plastered together as were most of the other couples. She kept pressing her thigh against my crotch as her lips and tongue did all sorts of interesting things around my throat and ears. I was definitely getting a little soggy around the thong region and I let out several involuntary moans.\n\n\"Know what I'd like to do now?\" Barbara murmured.\n\n\"What?\"\n\n\"I'd really like to lick your pussy.\"\n\nI groaned. \"Sounds good to me,\" I managed to croak.\n\n\"This way.\" Barbara took my hand and pulled me towards the back of the club where there was a curtain concealing a small doorway. She had a quick glance round to make sure the coast was clear before opening the door which led onto a back staircase. \"Not many people know this is here,\" she whispered, \"It leads up to a studio flat which isn't in use at the moment. I'm good friends with one of the staff here, a friend-with-benefits. She showed me these stairs.\"\n\nMoments later we were in a sitting room with a comfortable-looking sofa and several armchairs. Barbara sat me on the sofa and knelt at my feet, tugging at the side zip on my skirt. I lifted my backside to help her remove the garment and again so that she could slip off my thong which was very moist by this time.\n\n\"Mmmm... somebody's ready,\" Barbara purred and she held the damp gusset of the thong to her nose and inhaled. \"Mmmm, yes... somebody's more than ready.\"\n\nShe pulled me towards the edge of the seat and spread my legs wide. I lifted my legs and held them apart, hands behind the knees. Barbara drew a long forefinger down my cleft and sucked off the juice. \"Young come,\" she said, \"There's nothing quite like it.\" As if to prove a point, she soaked her finger again and held it to my lips for me to lick.\n\nUsing both forefingers, Barbara eased my labia apart. \"You've got a lovely little pussy, Annie, and a lot girls would kill for such a neat backside. Can't wait any longer.\" She lowered her head and gave a single long lick from my perineum to clit. My hips jerked and I gave a little cry. I could feel a middle finger entering me and my walls tightened. At the same time, Barbara did amazing things with her tongue and it didn't take long for me to explode.\n\nWhile I was still shaking and panting, Barbara stood, reached under her skirt and removed her expensive-looking knickers. She knelt over me, a leg either side of my shoulders and presented her honeypot for my attention. She was shaven clean\u2014something I'd never seen before, didn't realise people did that\u2014and there was a tattoo on her mound, a phoenix arising from the ashes. The tattoo looked good but I did cringe a little inwardly at the thought of having it done right there. Her slit was shiny with moisture and I found it easy to penetrate her with two fingers. Her natural scent was strong and musky as was her taste when I started to lick at her.\n\nI was probably a bit clumsy compared with Barbara but I certainly loved what I was doing. I licked at the hollows where her legs and hips met and I kissed the phoenix then licked all around her outer lips, kissed the phoenix yet again then lapped at her cleft and very prominent clit. Inexperienced I may have been but Barbara acted as if she was enjoying every flick of my tongue, pressing my head firmly to her pussy and emitting little staccato cries until she came.\n\nAfter a while we returned to the club's bar and had another glass of wine. I thought that would be it but Barbara asked me if I'd like a date and one thing led to another...\n\nThere's not too much more to tell and what there is doesn't make for pleasant reading. It was my first proper love affair and I certainly fell for Barbara in a big way but I should have seen the warning signs when I introduced her to my parents. She was fine with my father, fair enough, but she was obviously very uncomfortable with my mother.\n\nShe dropped her little bombshell when we'd been dating for about six months. She told me quite bluntly we were through. \"...and it's only fair to tell you why, Annie. I can't handle sickness. Never have been able to, not even in my own family. Seeing your mother in that wheelchair and you or your father spoon-feeding her like a baby, well, it just puts me off. I'm sorry...\" and she simply turned and walked away.\n\nI was heart-broken initially but what were my emotional problems compared to my mother's terminal illness. Nothing really.\n\nThat wasn't quite the end of it. Mum died several months after I started at university. I took the time off so I was with her when she passed. For her, death was probably welcome; her quality of life was non-existent, her poor body had taken all the crap that the disease could throw at her. For Dad and I, it was as if part of us had been severed. We just held each other and wept.\n\nA day or two after the funeral, as I was preparing to return to uni, there was a knock at our front door. It was Barbara. \"Hi Annie. I heard about your mother and came to offer my condolences.\"\n\n\"Thank you,\" I said.\n\n\"Annie...\" she was hesitant. \"...do you think we could get back together again? Now that your mother's gone, I mean...\"\n\nFor a moment I didn't know how to react, then: \"You want to come back? Because my Mum's dead. And supposing Dad or I get seriously ill? You just going to walk away again because you can't handle sickness? No thanks, Barbara!\" I slammed the door in her face.\n\nI never went to The Twilight Time Rooms again\u2014I didn't want to risk meeting Barbara. I might not have been responsible for my actions.\n\n* * * * *\n\nDad had always hoped I'd be joining him in his business but my camera skills are little better than snapshot standard. Dad understood and in time found himself a really talented assistant called Nicole. My degree is in History and I'd been lucky when I graduated for there was a vacancy, unfilled for several months, in the City Museum. I was offered the job and jumped at it. So for the past few years I've been an assistant curator, a post less grand than it sounds. And the salary wasn't much to start with\u2014still isn't come to that\u2014but I loved the work.",
        "After Mum died I could have carried on living at home but there was an empty flat above Dad's studio-shop, previously used for storage. It wasn't too far from the museum and he offered it to me at a peppercorn rent knowing I'd appreciate my independence.\n\nTo supplement my income I taught some history at adult evening classes, not to academic standard but just for those mostly middle-aged and elderly people looking for a general interest hobby. There were several small meeting rooms in the museum and these were often used as overflow classrooms for the local adult education college, my subject being among them. This was convenient as I was able to allow my students access to primary source materials which were not on public display but stored in a number of basement rooms.\n\nOne evening I went down to the basement to replace some of the artefacts I'd been showing. There were several ill-lit corridors and a couple of times I thought I heard noises behind me but when I turned to look I could see nothing. I reached a particular store and carefully replaced the items in their cupboards and drawers. I heard noises again and I turned to see that I wasn't alone.\n\nThere were three of them. They loomed out of the semi-darkness near the store-room's entrance to surround me, three large thuggish-looking teenagers with obvious mischief on their tiny minds. My hand went into my jeans pocket where I kept my keys and I slipped my finger through the ring, holding them so that a Yale key protruded between my first and second fingers.\n\n\"Well, what we got 'ere?\" one said, \"I think it's a pretty lady.\" As they drew near I could smell their beer breath.\n\n\"Hello, pretty lady,\" said another, \"No need to be scared of us. We just want to be friendly, tha's all. Ain't that right, lads?\"\n\nThe first speaker sniggered but the third yob said nothing, just reached out and squeezed one of my breasts. I pulled out the keys and raked the Yale hard across the back of his hand.\n\n\"Fuckin' hell! The bitch scratched me!\" He held up his hand which was oozing blood. \"Look at that! The bitch scratched me! Right, hold her you two, I'm going to show her what's what!\"\n\n\"No you're not,\" said a quiet voice. I looked towards the doorway to see Irene from the Guys &amp; Dolls club. Her eyes were cold as she gazed at the trio. \"Only three of you to handle one woman? That must takes a lot of guts.\"\n\n\"Oh shit!\" a kid moaned, \"Now we've got trouble!\"\n\nThe one I'd scratched stared hard at Irene, trying to intimidate. \"Piss off, cow, unless you want to be hurt as well!\"\n\n\"Shut up, Baz!\" hissed one of his companions, \"She's the one who put Lofty Martin and his brother in hospital.\"\n\n\"What, her?\" Baz laughed, \"She must've snuck up behind them in the dark.\"\n\n\"Leave it, Baz! Let's just fuck off!\"\n\nIrene had come all the way into the room, apparently ignoring Baz. \"I know you little shits,\" she said to the others. 'Little!' Each one was twice her size but they cowered back. \"I'm giving you a chance to get out\u2014now!\"\n\nBaz looked at his companions with contempt. \"Okay, let's see how tough you are, bitch.\"\n\n\"Don't,\" said Irene.\n\n\"Ooooh! Don't!\" he mocked, \"She said 'Don't'. Runnin' scared, are we darlin'? Please don't hurt me, you mean? Not so hard after all!\" Baz reached out and grabbed Irene's arm. And then he was face down on the ground, his straightened arm held rigid in a tight lock and Irene's foot on the back of his neck.\n\nShe lifted her foot and released his arm. \"Stay down,\" she warned.\n\nBaz scrambled to his fee. \"You're fuckin' dead, cunt!\" He threw a punch.\n\nIrene hardly seemed to look at him but blocked the punch, lashing sideways with a foot and hitting the teenager just below a knee-cap. As his leg gave way, Irene applied a different kind of arm-lock to bend him backwards, at the same time bringing the heel of a hand down onto the bridge of his nose. There was a nasty crunching noise, blood spurted and Baz was on the ground again, clutching his face and whimpering.\n\n\"Stay down,\" Irene repeated. She turned to the other two. \"Your friend seems to be a bit stupid,\" she observed, her voice conversational as if nothing had happened, \"Doesn't recognise good advice when he hears it. I've warned you two off before when you've tried to get into the club. You're on your final warning now. Stay out of this area because if I see you again, you'll get hurt. Now, first of all you apologise to this lady, then you pick your stupid friend up and take him away. When he stops moaning, tell him that if he lays a finger on me again he'll never get to be a father. Oh, and clean up that blood on the floor before you go.\"\n\nThe two scurried to obey and when they'd made their escape I said: \"I hope this doesn't cause you trouble, you know\u2014like being charged with assault.\"\n\nIrene shrugged. \"You don't think yobs like those would admit to being duffed up by a woman my size, do you? They'll probably say he got pissed, fell over and hurt himself. Anyway, it was self-defence... and rescuing a lady in distress. How about you, you okay?\"\n\nI nodded. \"Yes, thanks to you. I might have a bruised boob where one of them squeezed me but I left my mark on him.\"\n\n\"What did you do?\"\n\nI showed Irene the key clenched in my fist.\n\n\"Good improvised weapon,\" she said, \"Take a tip, though. Don't put your finger through the ring, it could be used to break the finger.\"\n\n\"What brought you down here, anyway?\" I asked.\n\n\"I was just coming out of a class\u2014I'm studying human biology here. I saw you heading for the basement steps and those three following a couple of minutes later. Reckon with all the classes coming out, they thought they wouldn't be noticed in the crowd. Knowing two of them, I guessed they were up to no good. Next time you come down here at night, bring a security man with you.\"\n\n\"I will Irene, thanks.\"\n\nIrene peered at me closely when I addressed her by name. \"Do I know you?\"\n\n\"You've probably seen me at Guys &amp; Dolls. I'm Annie Truscott.\"\n\nShe nodded. \"That's it. You come in sometimes with Maggie... Farrel...Farmer...\"\n\n\"Farnol,\" I said.\n\n\"Yeah, Farnol. Right. I'm Irene Wetherill. You and Maggie partners?\"\n\n\"No, just friends.\"\n\nShe nodded and said: \"You live locally?\" I told Irene where my flat was and she added: \"I'll walk you there just in case those yobs got their courage back and hung around. Don't think they will but I'll see you're home safe.\"\n\n\"Thanks, appreciate it. But then who's going to walk you home safely...\" The absurdity of what I'd just said hit me and I started giggling. And I think Irene's mouth twitched.\n\n* * * * *\n\nWhenever I saw Irene at the club after that I made a point of greeting her. She always gave me a slight nod of acknowledgement, not exactly an effusive welcome but for her quite a step forward. It was certainly more than most other members got\u2014for them it was just the customary scowl. \"What's your secret?\" somebody asked me once, \"A magic potion?\"\n\nMalcolm came up to me once when Irene had the evening off. He sat down by me and said: \"Are you making friends with Irene?\"\n\n\"I'm trying. Haven't got that far yet,\" I replied, \"I'd like to. Strikes me she could use a friend and I'd be happy to be one but it's not easy getting through to her.\"\n\n\"Tell me about it,\" Malcolm said, \"I've been trying for several years and haven't made much of an impression. It's as if she wears friend-repulsing armour\u2014seems like she can't bring herself to trust people. I think that deep down she's got a load of not-very-nice baggage to get rid of. Keep working on her, Annie\u2014I know it's not much so far but you seem to have got further with her than anyone else. I reckon she's worth more than being a bouncer for the rest of her life.\"\n\nThere had been a chilly autumn mist hanging over the city for several days when I next saw Irene outside of the club. I'd been working late at the museum, helping to prepare for an exhibition we were putting on, and by the time I left the mist had thickened considerably, wrapping the buildings closely while guttering dripped, making the pavements greasy and slippery. I was a couple of streets away from my flat when I saw two figures several hundred yards ahead, one sitting in what seemed to be a mobility scooter, the other, a small person, standing.\n\nIt looked as if something\u2014a little package perhaps\u2014was handed over by the smaller person then the one in the scooter turned and came haring down the pavement at a dangerous speed. I had to leap into the gutter to avoid being run down.\n\n\"Out of my way, you stupid bitch!\" the invalid yelled as he narrowly missed me. It was a man's voice. I was near a lamppost and I caught a glimpse of a thin, mean-looking face with a silly little moustache, a fleeting glimpse but sufficient to know that I'd recognise him if I saw him again.\n\n\"Excuse me for breathing!\" I shouted after him as he disappeared round the next corner. The small person was still standing there, apparently gazing after the scooter. I drew closer and saw that it was Irene.\n\n\"Who's that unpleasant swine?\" I asked.\n\n\"My father,\" she said.\n\n\"Oh... sorry if I was rude.\"\n\n\"Be as rude as you like, you won't offend me.\" Her voice was bitter. \"He is an unpleasant swine. In fact, he's every kind of swine you can think of.\"\n\nThen I noticed the silent tears running down her face. Crying? This little toughie whose cold stare reduced strong men to wrecks? \"Irene, what's the matter?\"\n\nShe just shook her head so I added: \"Come with me, there's a great little coffee shop on the next street and he stays open late. You look like you could do with a hot drink.\" I took her arm. Irene resisted for a moment and then gave in and allowed me to guide her along.\n\nSome people might call Charlie's Caf\u00e9 a greasy spoon, based solely on the fact that it's small and tucked away in a back street. They'd be wrong. Charlie kept the place immaculate and he served some of the best coffee and hot meals in the city. And you didn't need a mortgage to eat there. Charlie himself was an old retired seaman, kindly-natured and benevolent. With his abundant white beard and ingrained laughter-lines he resembled Santa Claus in a clean apron.\n\n\"Hi, Annie. Cappuccino?\" He turned an enquiring look on Irene.\n\nI nodded and said: \"This is Irene. How do you like your coffee, Irene?\"\n\n\"I don't much like coffee,\" she said, then lowered her voice. \"Do you think maybe I could have... a hot chocolate...?\" There was something touching, almost childlike, in the way she asked, like a small girl hoping for a treat she knew was forbidden. Irene was one hell of an enigma.\n\n\"Of course you can, lovey,\" said Charlie, \"Sit down, girls, and I'll bring your drinks over.\" He winked at Irene and added: \"Once you've tasted my hot chocolate you won't want anyone else's.\"\n\nWhen we were settled in a booth with our drinks in front of us I said: \"Do you want to talk about it?\"\n\nShe shook her head briefly then reconsidered and shrugged. \"Why not? You saw my father in a mobility scooter and he's got a pair of crutches in the rack. It's my fault he's like that. I crippled him.\"\n\n\"How the hell did you do that?\" I said, not quite believing what I was hearing.\n\n\"It's some years ago now...\"\n\nIrene -- 12 to 16 \n\nIrene was twelve when Great-aunt Rose showed her the small box. \"It's your mother's jewellery,\" her aunt explained, \"Some of it belonged to your grandmother and several of the pieces, including a couple of engagement rings, are worth a fair bit of money. Your mum gave it to me to hold when she had her first heart attack so that your father couldn't get his hands on it. As it was, the miserable sod took her wedding ring within minutes of her death and sold it in the nearest jeweller's shop. Frank's asked me several times over the years if I knew where this lot was and I've always denied it. He's never pushed me too hard because he knows I'd have the law on him as soon as look at him. Never was any love lost between us\u2014I could see right through the little creep.\n\n\"I'm offering this to you now, Irene, because I'm getting on in years. I'll not be around for ever and I want to make sure you know about it. I can hang on to it or you can take it but if you do, you'll have to find one hell of a good hiding place. Oh, and here's a letter from your mother saying that the jewellery is yours and not his.\"\n\n\"I've got just the place to hide it,\" said Irene, \"and Dad will never find it.\"\n\nIrene's divan bed reached almost to the floor, leaving only an inch or so gap. One day several years previously, when her father was out of the house, she had pulled the bed out and loosened a floor-board so that she could hide what few little treasures she had. Her relationship with her father was an abusive one, not physical at the time but emotional and verbal. For instance, he had a vindictive habit of confiscating and destroying her favourite things when the mood was on him. He didn't need a reason or excuse, it was pure spite. Irene was sure he'd never find her hidey-hole\u2014for a start he was too idle to even think of moving the bed.\n\nLana Wetherill had a serious heart defect and her second or third heart attack killed her. Irene was about four at the time and Lana's Aunt Rose offered to take the child. Frank Wetherill declined saying that as Irene's father, she was his responsibility. \"Call me a silly old woman,\" Rose said to her friend Nellie, \"but I reckon all he's interested in is the child benefit.\"\n\nWhich was probably true. Irene could only remember a lousy childhood, her sole relief being visits to Aunt Rose who lived a couple of bus rides away. Irene usually had to walk there, her father begrudging even the children's half-fare. It was worth it, it was the one place where she got affection.\n\nThere was never any praise or encouragement from Frank Wetherill. Once Irene told her father she would like to be a nurse. \"You?\" he'd scoffed, \"You'd never make a nurse, you pathetic midget, you're too small and too stupid.\"\n\nOn one very rare occasion he took her into a cheap caf\u00e9 and Irene asked if she could have a hot chocolate. \"No you can't, you greedy little bitch,\" he'd hissed, \"You'll have water and like it!\" Irene had to sit sipping her water and watch her father having his coffee and cake. That evening at home, he'd ripped one of her favourite books to pieces, just to teach her not to make unreasonable requests.\n\n* * * * *\n\n\"Hi, I'm Moya, haven't seen you around before.\" The speaker was tall, slim, dark-haired, probably three to four years older than Irene who had recently turned sixteen.\n\n\"I'm Irene, just started here today.\" She accepted Moya's outstretched hand and felt a little thrill as their palms met.\n\n\"Bet they've put you on shelf-stacking, they do that to all the new staff. I'm a cashier. You'll get there in time. Mind if I join you?\" Moya sat on another chair at the canteen table. \"Thought you looked a bit lonely here by yourself. I know it's strange at first, this place is so big with so many staff. You with us full time?\"\n\nIrene shook her head. \"Part-time for the moment.\" She hesitated and added: \"I've left school and my father thought I should get a job.\" She didn't mention that he'd ordered her to leave school and start working. This part-time work was all she'd been able to get at short notice and she knew that most of her wages were likely to be snatched by her father.\n\nThe relationship with Moya started out as friendship but over a matter of months developed into something more. Moya had been upfront with Irene. \"I don't want to spoil our friendship, Irene, but there's something you'd better know about me. I'm gay\u2014you know what that is, don't you?\"\n\n\"Yes,\" Irene acknowledged, \"I think I might be too.\" Irene had known for some time that she was either lesbian or bi-sexual, most likely the former because she had never seen a boy or young man who attracted her. Quite the reverse, men just revolted her. She was honest enough to admit to herself that her antipathy to men could have been triggered by her father but she was unable to get rid of these irrational dislikes. Her feelings towards Moya had been growing stronger and she was overjoyed when the older girl admitted to her sexuality.\n\nThere was no physical contact between them other than holding hands or hugging when they went to the cinema or for a walk together. \"I'm very fond of you, Irene,\" Moya said, \"but you're young yet and I want you to be sure of yourself before we get in too deep.\"\n\nThen came the first overwhelming kiss on the doorstep of Irene's home. It was a warm and gentle kiss, so wonderful, and Moya felt so delightful in Irene's arms.\n\nAnd it was the last kiss. As it deepened and the two girls huddled together more closely, the front door was snatched open and a hand grasped Irene's coat collar, dragging her backwards into the house, smashing her hard against the hall wall. Frank Wetherill thrust his face at Moya and jabbed an angry finger, spraying spittle as he shouted. \"Get out of here, you bloody slag, before I kick you down the street!\" He slammed the door on her and rounded on Irene.\n\n\"A dyke! My daughter's a filthy little dyke! We'll soon knock that out of you, you disgusting little bitch or I'm not your father!\"\n\n\"Call yourself a father?\" Irene spat, \"The only reason you keep me around is because it pays you!\"\n\nThat was when he hit her, a hard open-handed slap that rocked her head back against the wall. \"Don't you dare answer me back!\" he screamed, seizing her collar. He hit her again. \"You.\" (Slap!) Filthy. (Slap!) Little. (Slap!) Dyke. (Slap!)\n\nIrene squirmed out of his grip, pushed her way past and staggered up the stairs towards her bedroom, his voice shouting after her. \"You'd better sort yourself out by tomorrow or you'll get another good belting! You'll get a bleeding good belting each day until you come to your senses. Understand? And you're not going back to that job if they're employing bleeding perverts!\"\n\nIrene stumbled into her room, grabbed her bedside chair and pushed it under the door-handle to block any attempted entry. She couldn't hear any noises to suggest her father was pursuing her and hoped that for the moment she'd be safe. Her mirror showed massive bruising on her cheeks and her lips were badly swollen with a trickle of blood running from the corner of her mouth. As quietly as possible she stuffed as much of her clothing as she needed into her backpack and at five in the morning crept from the house. Not wishing to make a noise by moving the bed , she had left her mother's jewellery in its hiding place, fairly certain that her father wouldn't find it. She'd work out how to retrieve it at some future time.\n\n* * * * *\n\n\"Right!\" Aunt Rose snapped, \"I'm calling the police, get that bloody animal locked away!\" She packed the muslin bag with ice from her freezer and held it against Irene's swollen mouth as gently as she could.\n\n\"No, please don't!\" Irene begged, \"Aunt Rose, he did this because he found out I'm a lesbian. I don't want everyone knowing about this.\"\n\nRose looked doubtful but after some argument conceded with reluctance. \"Okay, now the question is what to do with you. You can't stay here, that's for sure.\" Seeing the stricken look on Irene's face she hastened to add: \"I'm sorry, sweetheart, that wasn't meant the way it sounded, I'd love to have you here. It's just that this is the first place that slimy little bugger's likely to come looking for you. But I've got an idea...\"\n\nRose's good friend Nellie was the caretaker for a community hall on the outskirts of Langton Heights, one of the city's better areas. It was quite a few miles away, certainly far enough for safety. The hall had its own kitchen and there was a small studio flat, one room with a camp bed and a tiny shower and toilet. Nellie spoke to the committee's chairman and it was agreed that Irene could stay there in exchange for helping with the hall's maintenance. \"It won't occur to your father that you might be this far out,\" said Rose, \"And before I go home\u2014\" she handed Irene a bank-book with bank-card \"\u2014this should be useful. It's not a lot but it'll help you keep going until you can get a decent job. I've been saving up for you since your mother died. I knew you'd need it some time.\"",
        "Weeping with gratitude, Irene threw herself into her aunt's arms.\n\nShe never returned to her first job and she never saw Moya again.\n\nIrene 16 to 19\n\nThe slim, tough-looking man with the close-cropped hair was pinning a poster on the hall's notice-board and it caught Irene's attention. Some peculiar block lettering in black headed the poster, a form of design or writing Irene had never seen before. The man became aware of her standing there and gave her a friendly nod. \"Hi. You must be Nellie's new helper. I'm Jack Matthewson.\"\n\nIrene pointed. \"What's that?\"\n\nHe smiled. \"That's Hebrew script,\" he said, \"It reads 'Krav Maga'.\" He tapped the English translation lower down the poster.\n\n\"What's krav maga?\"\n\n\"It's a bare-handed fighting system.\"\n\n\"Like karate or kung fu?\"\n\nJack Matthewson grinned. \"Something like that but we think it's better.\"\n\n\"Could I learn?\"\n\n\"Anyone could learn if they're willing to put in the effort,\" he said, \"It's a lot of hard work, though, and you don't become an expert overnight. But why would you want to learn?\"\n\nIrene scowled. \"There's somebody I may have to see sometime, not soon but maybe in the future. The last time I saw him he hurt me, beat me up. I'm not going to let him hurt me again.\" She leaned forward to peer at the poster's small print. \"Oh... don't know if I could afford the membership fees regularly.\"\n\n\"This bloke used to beat you up, did he? Who was it?\"\n\n\"My father.\"\n\n\"He beat up a tiny thing like you? That's why you're living here? Out of his way?\"\n\n\"Yes,\" Irene said.\n\n\"The bastard! You let me know if he ever shows his face round here...\" Matthewson looked thoughtful then seemed to come to a decision. \"I'll make a bargain with you,\" he said, \"I own and run a local car showroom. You give me a couple of afternoons a week cleaning the cars and I'll cover your membership fees. Deal?\" He held out his hand.\n\nIrene shook. \"Deal.\"\n\n* * * * *\n\nIrene often wondered what might have happened had she known Moya in a different place at a different time. She was pretty sure that Moya had been becoming very fond of her and Irene had been developing strong feelings for Moya. Still, water under the bridge. She did have a few one-night stands and a couple of near relationships, both short-lived for different reasons. She was nineteen when she met Gudrun and twenty-one when she met Leah...\n\nCharlie's caf\u00e9\n\n...Irene paused, lips tight. \"Please... do you think... could I have...\" She pointed with her chin towards her empty mug. There was still that odd, childlike quality in the request but I thought I could understand it a little now.\n\n\"You'd like another hot chocolate... yeah, sure.\" I called the order to Charlie and when he brought it over Irene said: \"Thanks, your chocolate's great.\"\n\n\"You were talking about a couple of girls,\" I prompted.\n\n\"Oh yes, Gudrun and Leah...\"\n\nIrene 19 to 22\n\nIrene dropped her backpack on her chosen bunk\u2014first come, first served\u2014and looked around the small cabin. It wasn't too bad for what was to be a short stay. At least it was several points up on the local community hall room she had used when first escaping from her father. There were two single bunks with bedside cabinets against opposite walls, a toilet and shower room, a chest of drawers and a curtained alcove with a clothes rail. The floor was covered with cheap carpeting and there was a rug by each bunk. She wondered what her room-mate would be like, that is if she was to have one. I'll find out soon enough, she thought, and if we're not very compatible, well, it's only for a week. Leaving the cabin, she wandered across to the refectory hut to grab some lunch.\n\nIrene was here at this camp as a favour to Jack Matthewson. He'd been good to her and she guessed she owed him something back. Each year Jack with a group of friends and colleagues ran a summer camp for underprivileged and handicapped children. One of his regular carers had to drop out for the first couple of weeks and Jack had asked Irene if she would like to stand in. Irene wasn't sure how she'd be able to cope with deprived children but she couldn't let Jack down and she agreed.\n\nAnother woman was unpacking a small hold-all when Irene returned to the cabin. Her back was to the door and all Irene saw at first was a tall athletic-looking shape with blond hair in a single long braid. The other turned at the sound of the door, revealing a neat figure and a wholesome face, lightly dusted with freckles. Her smile was huge, showing slightly uneven, dazzling white teeth. She held out a large, well-shaped hand.\n\n\"Hi. Guess we're sharing here. I'm Gudrun Nystr\u00f6m.\" Gudrun's hand was warm and her grip firm.\n\n\"Irene Wetherill. Don't want to seem rude but your name sounds foreign...\"\n\n\"My father's Swedish, mother English. Father's the pastor in a Lutheran church in Langton Heights. They thought it would be good for me to do some community service and volunteered me for this camp. Got three weeks of it. Not sure how I'll handle it but I'll try. You?\"\n\n\"The only family I've got worth speaking about is an elderly aunt,\" said Irene, \"As for being here, I'm helping a friend out for a week. Like you, not sure what to expect, just have to give it my best shot.\"\n\nGudrun Nystr\u00f6m continued to chatter away. \"Father had to pull a few strings with my boss so I could come here. I'm a trainee solicitor, I'm articled clerk to a city company, Partridge. Anyway, it's good publicity for his business to support a scheme like this. What do you do, Irene?\"\n\n\"Nothing so impressive,\" admitted Irene, \"Just a couple of part-time jobs right now.\"\n\nIrene approached her first full day in camp with trepidation. It turned out that she and Gudrun would be working together under the supervision of an experienced counsellor. They were given a dozen children to care for and were given free rein to set programmes. Within three days Irene knew that she loved working with the children, they brought her a joy she'd not known before\u2014having suffered a woeful childhood herself, she repaid their trust with love and enthusiasm. She liked it so much that she persuaded Jack Matthewson to arrange extra time from her supermarket job so she could stay a couple more weeks. It was granted, unpaid of course, but again good publicity for the company.\n\nThe pair had no night-time duties. The children were housed in twelve-bunk dormitories managed by experienced carers so Irene and Gudrun could pass the evenings as they wished. The relationship between the two young women was a friendly one until the night of the great thunderstorm when it became something more.\n\nIrene was wakened by and enormous flash of lightning which momentarily lit up the whole cabin. The storm must have been very close for the explosive crash of thunder followed on by no more than two or three seconds, seeming to shake the very earth around. An almost incessant barrage of thunder and lightning followed and Irene became aware of small sobs of distress from the opposite bunk.\n\n\"Gudrun, are you all right?\"\n\n\"The thunder!\" Gudrun cried, \"I'm terrified of thunder!\"\n\nIrene climbed from her bunk and padded across to Gudrun. \"Move over,\" she said, \"I'll protect you.\" She pushed her way in beside Gudrun and folded the frightened girl in her arms. Gudrun wrapped her arms around Irene and her shaking and whimpering gradually eased.\n\n\"Sorry, I'm a big baby when it comes to storms.\"\n\n\"Don't worry,\" Irene told her, \"We've all got our private fears.\" Her lips were close to Gudrun's neck and she planted a soft kiss intended to comfort. Gudrun turned her face to Irene's and their lips brushed together gently. It remained that way for a few seconds and then the kiss became a little deeper. Irene felt a warm tongue caress her bottom lip and she met it with her own tongue. Their embrace tightened and Irene slipped her hand under Gudrun's pyjama top to stroke her smooth back.\n\nGudrun lifted Irene's t-shirt and cupped her breasts. Irene's nipples stiffened under the touch and in her turn she tugged at Gudrun's top, lifting it over the girl's head. She lowered her own head and took one rigid little nipple into her mouth while playing with the other between thumb and forefinger.\n\nGudrun's hand moved down Irene's belly and into her pyjama shorts to toy with a thick nest of pubic hair. Her fingers moved further, sliding up and down Irene's slit. \"Oh wow, you're so wet.\" One finger and then two worked their way into Irene's passage and started to move in and out. \"You can play with mine, if you'd like to.\" Gudrun's whisper sounded quite shy.\n\nGudrun's pubic hair was sparse and her pussy slippery with juices, and Irene was able to find and enter her easily with two fingers while her thumb rubbed at Gudrun's clit. \"Oh God, Irene, I'm going to...\" Gudrun came hard, shuddering as she did so. Irene pushed her own hips insistently against Gudrun's hand until she, too, came with a little cry.\n\nIrene hugged Gudrun to her. \"That made you forget the thunder,\" she whispered. Still holding each other and caressing bodies, they slowly returned to sleep.\n\nWhen they awoke in the morning, Gudrun tried to apologise. \"Irene... last night... I'm so sorry...\"\n\nIrene put a finger to Gudrun's lips. \"What's to be sorry about?\"\n\n\"You were trying to soothe me in the storm and I took advantage.\"\n\n\"Believe me, Gudrun, you didn't. I loved what happened. I'm gay, Gudrun. My only regret is we had to wait for a thunderstorm to get together. That's if you're gay too. Are you, or maybe bi-?\"\n\n\"I'm gay,\" Gudrun admitted. Her eyes filled with tears.\n\nIrene grasped her hands. \"What's the matter?\"\n\nGudrun's little smile was sad. \"One of life's ironies. My parents are both rabidly homophobic and they've produced a gay daughter. I'll never be able to come out to them, not without being disowned and probably condemned to hell-fire. Irene, it isn't wrong, is it? Our kind of love, I mean.\"\n\n\"I don't think anything that feels so lovely can be wrong,\" Irene said, and continued: \"I don't know if there is a God, and if there is I don't know if I believe in Him or Her. But if there is, would He or She have made something so wonderful and enjoyable only to condemn it? I don't think so\u2014it wouldn't make a lot of sense.\"\n\nFollowing that, the girls spent every night together until their time at the camp was finished. Back in the city, they met up whenever they could although not too frequently. Gudrun seemed to be totally under her parents' control and had to exercise great care in their liaisons.\n\n* * * * *\n\nAnd then after a couple of months Gudrun went off the map, disappeared as if she had never existed. Irene phoned, texted, nothing. All her communications were ignored or unanswered. Eventually she rang and got the 'number unobtainable' signal. Gudrun had either changed her phone or her number. The one thing Irene didn't try was calling Gudrun's workplace, thinking that Gudrun's employers wouldn't appreciate being bothered by an concerned lesbian lover. Solicitors could be a bit stuffy about that sort of thing, she guessed. Irene briefly considered waiting outside her lover's offices but rejected the thought almost as soon as it occurred to her. That would have made her no better than a stalker.\n\nHad Gudrun shown some gumption at last and come out to her parents? Irene had been surprised when Gudrun had mentioned the depth of her parents' bigotry. From her reading in newspapers and magazines Irene had formed the impression that the Swedes were very open and tolerant about sexual matters. But then, Gudrun's father was a pastor in a fairly strict Protestant church. No, coming out didn't seem likely.\n\nLooking on the brighter side, perhaps the family had taken a holiday and gone to Sweden to see Mr Nystr\u00f6m's family. After a week or so, Irene decided to let it rest, certain that Gudrun would contact her when she could.\n\nOne morning Irene was skimming through a local paper while she ate her breakfast. The final couple of pages were the small ads, items which she usually ignored but on this particular morning one entry under the 'Engagements' column caught her eye, possibly because it was a prominent box ad, bordered in black. It came at her like a punch in the dark.\n\n~~~The Reverend Bjorn and Mrs Adele Nystr\u00f6m are pleased to announce the engagement of their daughter Gudrun to Mr Jeremy Davenport, son of Mr Edward and Mrs Patricia Davenport of Langton Heights. Reverend Nystr\u00f6m is the pastor of the United Lutheran Church while Mr Edward Davenport is the owner and managing director of Davenport Engineering. \n\nThe marriage will take place in the autumn and will be conducted by the bride's father.~~~\n\nSo that explained Gudrun's disappearance and silence. Forthcoming: a nice, wealthy middle-class wedding with a pleasant house in the suburbs and in time two-point-four children to make the happy home complete. And an abnormal and probably long-term miserable fate for someone like Gudrun. It wasn't even as if she was bi-, she was one hundred per cent lesbian. Irene felt as if a heavy weight were resting on her soul, draining it. Well... she thought...that's it, I guess. Sighing, she took out her phone and wiped Gudrun's details from it.\n\n* * * * *\n\nThe next\u2014and final\u2014time Irene saw Gudrun was pure chance. It was several weeks following the newspaper announcement and Irene was having an amble around the city centre, window shopping. She couldn't afford much at all but she did enjoy looking at the displays. She entered the city's new mall at one of the upper floors and having wandered for a while thought she might go to one of the ground floor coffee shops for a hot chocolate. Thinking of her childhood, she was catching up with all the hot chocolates she felt she was owed\u2014after all, there was nobody to deny her now.\n\nHalfway down the escalator she spotted the familiar figure of Gudrun sitting by herself outside one of the coffee shops. The escalator reached the ground floor and Irene almost turned onto the ascending stairs. But then... she had to know...\n\nShe went across to the coffee shop. \"Hello, Gudrun.\"\n\nGudrun, caught by surprise, flinched then reddened. \"Oh... Irene...\"\n\n\"Were you ever going to tell me, Gudrun? Or were you just hoping that I'd fade away quietly to save you embarrassment? Please, I'm not angry with you, I'd just like to know...\"\n\n\"My parents...\" Gudrun mumbled, \"they wanted...\"\n\n\"They wanted you to marry into a nice rich family...\" Irene finished for her, \"I'll bet they pushed you like hell.\"\n\n\"You don't understand...\" Gudrun's expression told Irene she'd guessed correctly.\n\n\"Oh, I think I do,\" said Irene, \"You could have told me face-to-face or even texted me, I wouldn't have blamed you\u2014it would have been better than the shock of seeing it in the paper, though. What I don't understand is how you're going to cope. You're gay, Gudrun, and you're being pushed into a straight marriage. How long before the pretence gets too much for you?\"\n\n\"Irene, I... about telling you... I didn't know how to handle it...\" Gudrun stopped and glanced towards the coffee shop door where an angular, brittle-looking woman was coming out with a tray holding hot drinks and cakes. \"My mother... please don't say anything...\"\n\nThe woman placed the tray on the table and glanced at Irene with something like disdain on her thin face. Irene didn't think it was personal, Mrs Nystr\u00f6m probably looked at most people that way. The wind had probably changed one day when she was sneering and fixed her face. \"Aren't you going to introduce me to your friend, Gudrun?\" Her voice was as brittle as her appearance.\n\n\"Mother, this is...\"\n\n\"It's okay, Mrs Nystr\u00f6m,\" Irene interrupted, \"I'm just leaving. I'm an old acquaintance of Gudrun's ... from some time ago... seems like a hundred years, sometimes. Just wanted to say 'congratulations'. I hope you'll be very happy, Gudrun ...\"\n\nAs Irene walked away she heard Mrs Nystr\u00f6m say: \"What an odd little creature.\"\n\nShe didn't catch Gudrun's mumbled reply.\n\nAnd that was about the time that Irene forgot how to smile.\n\n* * * * *\n\nIrene didn't think much of The Porcelain Doll at first glance. It was one of the newer lesbian bars in the city with dim lighting and unimaginative decor. Perhaps that was why the lighting was dim. After Gudrun, Irene hadn't looked for anyone else, or rather not anyone else to make a permanent kind of relationship with. She had this constant feeling that any long-term affairs would eventually collapse like a house of cards. The odd one-night stand was sufficient for her needs and there were a few clubs she could go to for a pick-up. She'd heard someone mention The Porcelain Doll and decided to give it a look.\n\nThis place was... mediocre was as good a word as any, nothing special about it. The only thing outstanding enough to catch the eye was the giant porcelain doll mounted behind the bar between the rows of bottles and glasses. It was a vulgar-looking thing with staring blue eyes, about four feet in height, and was dressed in vintage clothing a bit like a Forties film star. On reflection, Irene told herself, the bar was definitely upmarket compared with Nancy's Nook where most of the members looked like road-menders and ships' stokers but way below The Twilight Time Rooms which was a classy femme joint. Still, it was new and different so Irene gave it a chance. She met Leah on her third visit.\n\n\"Hi there, all on your lonesome?\" Irene looked up at the question. The speaker was a pretty femme with curly blond hair and a winning smile. She was wearing a patterned blouse and an Austrian-style dirndl. \"Mind if I join you? My life's a little empty at the moment, too. I'm Leah, by the way.\"\n\n\"Sure, help yourself.\" Irene gestured to a seat. \"I'm Irene. What makes you think I'm alone and my life's empty?\"\n\nLeah flashed another smile. \"I've had an eye on you ever since you came in half-an-hour ago. By yourself. Nobody else has spoken to you, nobody's followed you in, so I reckon you're alone. And there's a kind of sadness in your eyes, like your life really is empty. Do I sound like a stalker or something?\"\n\nIrene shook her head. \"No, you just sound like someone longing for a little company. You did say your life's a little empty too.\"\n\n\"Yes. I had a partner but she got rather bored round here so she's pushed off to London. Buy you a drink?\"\n\nIrene went home with Leah that night. Like many of the flats just off the city centre, Leah's was above a shop, an arts supplies business. The moment they were through the flat's door, Leah embraced Irene, covering her face and neck with eager kisses. She tugged at Irene's t-shirt to lift it over her head. \"What sweet boobies,\" Leah gasped and bent to take a nipple into her mouth. As she licked and sucked, she fumbled with the buttons and zip of Irene's jeans, pushing the garment down together with the panties.\n\nDropping to her knees, Leah nuzzled at Irene's thick bush and ran a finger up and down the moist slit before effecting a slow penetration. Irene sighed deeply and thrust her hips forward, riding the finger. She felt Leah's tongue exploring all around her pussy until it settled at her clit, flicking expertly until Irene came with a soft cry.\n\nIrene awoke early as daylight streamed into the room. Leah was still sleeping and Irene was now able to see that her companion was older than she had thought. The previous night in the club's dim lighting she had guessed at Leah being roughly the same age as herself. Now she could see that the other woman was probably ten to twelve years older. Leah was pretty but small signs of aging were there.\n\nThe two began to see each other regularly, several times a week, usually spending nights at Leah's flat which was much closer to The Porcelain Doll than Irene's place. Leah said something odd once. They had just made love and Leah whispered: \"You know, you can control me if you'd like to.\"",
        "Irene was puzzled. \"Why should I want to do that?\"\n\n\"Oh, just me having a funny thought,\" said Leah, \"Just a silly joke.\" But there was a slight look of disappointment on her face.\n\nThe next time Irene went to The Porcelain Doll, she noticed a couple of things that had previously escaped her. With at least a third of the couples present, one partner always seemed to be subservient to the other. And what Irene had thought to be a velvet choker on the bar's porcelain doll was in fact a dog-collar. It looked as if the club catered in part for certain tastes and maybe Leah got off on being dominated occasionally. Well, Irene was fond of Leah but she wasn't going to go down that path. She'd had too much of domination and control during childhood to want to inflict it on another person.\n\n* * * * *\n\nIrene went into The Porcelain Doll and looked around for Leah, this being one of their regular meet-up evenings. The place was crowded and in the dim light it was difficult to spot individuals. Well, there was plenty of time. She pushed her way through the heaving mob and the bar and managed to catch a barmaid's eye. She ordered a red wine, paid for it and went to lean against a pillar. Then she saw Leah sitting at a table against the club's far wall. Leah wasn't alone.\n\nEven sitting down, the woman with Leah looked big, big and butch, and she was drinking beer straight from the bottle. She was dressed in black t-shirt and dungarees and Irene would have taken a bet on her wearing Doc Marten boots. And as Irene made her way towards them, the butch pulled Leah towards her and kissed her very firmly on the mouth. Irene reached the table.\n\n\"Leah?\"\n\nThe pair glanced up, Leah disconcerted as if she'd forgotten it was one of their usual days. There was something different about her too. What? Then Irene realised, Leah was wearing a collar like some of the other women in the place. The butch was the one who answered. She had a beefy slab of a face and her hair was shaved at the sides leaving a kind of stiff, gelled crew-cut on top. \"You Irene?\" she said before turning to Leah. \"Christ, Lee, are you fucking midgets now? When you told me you were seeing someone I at least expected it to be a real woman.\" She stared disparagingly at Irene's five-foot-nothing height and snorted in disgust. \"Like I turn my back for six months and you start shagging Munchkins like this...\" Leah cringed a little and yet at the same time seemed pleased to be admonished. The butch turned back to face Irene. \"Okay, kid, momma's back in town and Lee's mine so you'd better fuck off. Like right now.\"\n\n\"That what you want, Leah?\" Irene said.\n\nLeah turned her face away\u2014Irene had her answer. It was the butch who spoke again. She stood up, encroaching into Irene's personal space so that their bodies were almost touching. Irene had guessed correctly\u2014the butch was wearing Doc Martens. At nearly six foot, she probably weighed about fourteen or fifteen stone. \"Have you got a hearing problem, Munchkin? I said you'd better fuck off. Now. Before you have a nasty accident.\"\n\nIt was obvious to Irene that the butch was not a real fighter. Her stance was all wrong for a start and by standing so close she made herself instantly vulnerable. Probably never been in a genuine scrap, just used her size and bulk and aggressive manner to intimidate others, probably much smaller others. Irene reckoned she could break the butch in half with little or no effort and for a moment she was tempted, wanting to show the woman that bullying didn't pay. But... What was the point? It would only have made her as much a bully as the butch. Anyway, if a controlling butch was what Leah wanted, then so be it...\n\nShe shrugged and nodded, saying: \"Have a nice life, Leah,\" as she moved away.\n\nAs she moved towards the club door, Irene determined that she would never trust anyone again.\n\n* * * * *\n\nIrene knocked hard on the front door, kept hammering away at it until an enraged Frank Wetherill wrenched it open. \"What the\u2014? Bloody hell, it's you. What do you want?\"\n\nIrene pushed past him to step into the house. It had been more than five years since she'd seen her father and time hadn't improved him. He looked more like a vicious ferret than ever. Nor was the house improved by the look of it. The hall wallpaper, a drab beige to start, was now even more grubby and depressing. Of course it was. Frank Wetherill would have begrudged every penny needed to freshen the place up. \"I've come to get some property of mine,\" she told him.\n\n\"Property? Here? You haven't got any property here. Wait...\" He clicked his fingers. \"Your mother's jewels. You owe me, you bitch. They'll do. Where have you got them hidden?\"\n\n\"Forget it,\" said Irene, \"You're not getting your dirty hands on them. I'll treasure them, you'd be straight round to the nearest hock shop with them.\"\n\nFrank Wetherill raised his hand and slapped Irene's face, hard. \"I said, where've you hidden them, you dyke bi...\" He trailed off. Irene hadn't staggered but had ridden the blow to lessen the sting and there was something in her glower and in her icy blue eyes which gave him strange chills.\n\n\"I'll give you that one free because you're my father,\" she said, \"Raise a hand to me again and I'll hurt you.\"\n\n\"You'll hurt me? You're threatening me?\" he blustered, \"Right, you've asked for it!\" He raised his hand again. Instantly his arm was jammed high behind his back and his face pressed hard against the wall. He felt as if his arm and shoulder were being wrenched apart and he squealed for mercy before Irene punched him very hard over a kidney and let him slip whimpering with pain to the floor.\n\nIn her former bedroom, Irene dragged the bed out and found the jewels where she'd hidden them all those years previously. She knew that Frank would have been too idle to move the bed for any reason at all. In fact, the whole room appeared to have been neglected during the time she had been away. The bed remained unmade, a fine film of dust\u2014a good five years worth\u2014settled on every flat surface and thick strands of filthy-looking cobweb festooned the upper walls. Irene shuddered, pocketed the jewellery and returned to the ground floor where her father had hardly moved. He was curled up trying in vain to nurse his injured back. \"You hurt me.\" His voice registered bafflement and shock but above all, fear.\n\n\"I warned you,\" Irene told him, \"Consider that payback for years of misery. The pain should go within a few days time and you might see some blood in your pee for a while. That'll clear up too. We're quits now, I don't want to see you again.\"\n\nAs Irene opened the front door to leave, Frank reached out a hand. \"Irene... help me up...\"\n\nIrene gazed at her father coldly. \"No, I can't. I'm too small and too stupid, remember?\"\n\n* * * * *\n\nAunt Rose died in her sleep, aged eighty-seven. The old woman had been very popular where she lived and the crematorium's chapel was almost full. The service was conducted by the minister from her local church and her favourite song \"Time To Say Goodbye\" was played as her coffin slid behind the curtain. Nellie held Irene's hand as tears ran down both their faces.\n\nRose didn't have much to leave\u2014her house was council-owned\u2014but what she did have came to Irene. As they were preparing to go, Irene saw a familiar face at the back of the chapel. It was Frank Wetherill. Irene drew near and stopped. To her surprise, she saw that he was on crutches. Excusing herself to Nellie for a moment, she went over to him. \"What the hell are you doing here? You know Aunt Rose couldn't stand the sight of you.\"\n\n\"Came to pay my respects...\"\n\n\"Paying respects? You? You don't know the meaning of the fucking word.\" She sent up a silent apology to God for cursing in a chapel.\n\n\"Yeah, and I wanted to see my darling daughter.\"\n\n\"I told you last time I didn't want to see you again. What do you want?\"\n\nHer father gestured to his crutches. \"Look what you've done to me.\"\n\nIrene frowned. \"What's your game now? I didn't do that to you.\"\n\n\"Yes you did, when you hit me that time. That was real professional fighting and you broke something inside. I've been crippled up ever since. You want to see my doctor's certificates?\" He pulled an envelope from an inside pocket and offered it. Irene ignored the outstretched hand.\n\n\"What do you want?\" she sighed.\n\n\"Well now, daughter, I could go to the police and bring a charge of grievous bodily harm against you. That'd probably get you a few years inside. Or, you can support your old Dad\u2014I won't be greedy, three or four hundred quid a month should see it right. For a start...\"\n\nIrene gasped. \"I can't afford that on my wages.\"\n\nFrank bared his teeth in a nasty grin. \"Then you'll have to get a couple more jobs, won't you...?\"\n\n* * * * *\n\nIrene was working two jobs already but she started scouring the 'Staff wanted' ads in the local press. There was a new nightclub opening soon\u2014some place called Guys &amp; Dolls\u2014and the owners were advertising for door staff. After tax, the wages quoted would just about cover her payments to Frank Wetherill. Irene called the number given and a few days later was summoned in for an interview.\n\nThe new club's back office was cramped and poky with cheap-looking furniture and a couple of steel filing-cabinets, while the white-painted walls were adorned with a dozen or so photos of handsome young male bodybuilders. The club itself, what Irene had seen of it, promised to be very well-appointed and she guessed that as the public were unlikely to see the office, it didn't much matter what its state was. The boss, manager, whatever, introduced himself as Lance. His blond hair\u2014probably dyed given his heavily-lined face\u2014was long and floppy, his suit was the palest of blues and his shirt a riot of butterfly colours. When they shook hands, Irene saw that his perfectly manicured fingernails were painted to exactly match his suit. Lance was accompanied by a jeans-and-sweater-clad goliath of a man whom he didn't bother to introduce.\n\n\"First of all...er...\" he glanced at her application form \"...Irene, you'd better know that Guys &amp; Dolls is primarily aimed at gay men and women although anyone is welcome as long as they can behave properly.\" He gazed at Irene over the top of blue-rimmed glasses. \"Have you got a problem with that?\"\n\nIrene wondered idly if Lance had differently-coloured glasses to match all his suits. She scowled. \"No. It's none of your business but I'm gay too. So I don't give a damn what people are.\"\n\nLance looked slightly taken aback at Irene's manner. For someone wanting a job her attitude seemed a little abrasive. \"You're aware of what being door staff entails?\" he continued, \"You have to assess customers, decide whether they can be allowed in or not. Mainly that means excluding drunks and obvious trouble-makers and some of them are likely to be bloody unpleasant. The words 'door staff ' can also mean bouncers. Sorry, I'm not sure you'd be suitable.\"\n\nIrene's scowl deepened. \"I could manage.\"\n\n\"You're rather small for a job like that,\" Lance observed, \"What are you, not much more than five foot, I'd guess?\"\n\nIrene didn't bother to answer. She just turned to the giant. \"Give me your hand.\"\n\nThe two men looked at each other and shrugged. The big man did as Irene asked and without warning he was on his back, right elbow locked hard against Irene's left knee and the toe of her right boot below his chin and pressing into his throat. She looked down expecting to see fury or resentment or humiliation at being so easily bested. Instead the man's eyes shone with amusement and he started laughing. Released, he scrambled to his feet.\n\n\"She'll do, Lance,\" he grinned. Turning to Irene, he held out a shovel-sized hand. \"Welcome aboard, Irene. I'm Malcolm.\"\n\n* * * * *\n\nAnd that's how it went. Irene worked three days a week in a supermarket, two days in Jack Matthewson's showroom, doing his admin work now rather than cleaning cars, and several evenings each week at Guys &amp; Dolls. And although she now had her own small flat she still helped Nellie at the community hall when she had the time...\n\nAnd Frank Wetherill got his monthly allowance from his daughter...\n\nAnnie\n\n\"...so there you have it, six years of paying him off,\" Irene concluded, \"Not a nice story, is it?\"\n\nMalcolm had been right. Irene did have a lot of unpleasant baggage aboard. \"That was him I saw collecting this month's instalment?\" I asked.\n\n\"Yes.\"\n\n\"Sounds a lot like blackmail to me,\" I said.\n\nIrene shrugged. \"Call it what you like, it's my problem and I'm stuck with it. And for me, the worst thing is that as long as I'm in hock to my father\u2014\" she spat the word out as if it were something toxic \"\u2014I'll never be able to afford to do what I really want to. Maybe it's too late already...\"\n\n\"What's that?\"\n\n\"A pipe dream, I guess, from the kids' camp. I always fancied being a nurse,\" she said, \"now I'd like to be a children's nurse...\" There was a little crack in her voice. \"You might not believe it to look at me but I love kids and I'd move the world to help the sick ones. And despite what my so-called father said, I don't think I'm too stupid.\" That perhaps explained why Irene was studying human biology at evening classes, something I'd been wondering about. She was living in hope.\n\n\"What about friends?\" I asked.\n\n\"I'm not very good at friendship. People avoid me, some even seem to be scared of me. Know what they call me behind my back at the supermarket? Miserable Irene. Think I don't know but I do, got pretty good hearing. Some of them go further, it's Miserable fucking Irene.\"\n\n\"Irene, have you ever stopped to think that maybe your expression puts people off, perhaps scares them? Your face is like a thunder cloud most of the time. Understandable, maybe, but it's a bloody shame because behind it you've got a nice face. And are you sure that people are against you and not the other way around? Why don't you try smiling at people sometimes?\"\n\n\"Smiling?\"\n\n\"Yes, smiling. In case you've forgotten, smiling is the one where the mouth turns upwards.\"\n\nI got the full benefit of Irene's basilisk glare\u2014it was a bit like being zapped with a Taser. \"Relax,\" I told her, \"that was a joke. I don't know if you realise but I'm about the only person at Guys &amp; Dolls who gets any kind of greeting from you and that's pretty perfunctory. Irene, there are plenty of people who'd be your friend if you'd only let them in. There's Malcolm for instance.\"\n\n\"He's a man.\" The tone of those three words condemned half the population.\n\n\"Yes, he's a man\u2014that doesn't make him a wrong 'un. Your father may be a heap of shit but he's just one person. Most men are all right. Take Charlie over there, he's everyone's favourite uncle, and I reckon Malcolm's one of the good ones too. Everyone's big brother. How about that Jack Matthewson you told me about? He sounds okay. Believe me, there are more men like them in the world than there are bad 'uns. Come to that, not all women are angels and we've both found that out the hard way. On the question of friends, there's me as well. I'd be your friend if only you'd let me...\"\n\n* * * * *\n\nMaggie and I had gone to Guys &amp; Dolls for our usual Friday night meet-up. We got there early enough to bag a table and as well we did for a little later the place was packed. We hadn't quite finished our first drinks but Maggie went to get another round while the going was reasonable.\n\nAs she joined the mob milling about at the bar, Irene came up to me. For some reason she had a slightly embarrassed air about her. \"Er, Annie, er... do you like classical music?\"\n\n\"Yes,\" I told her, \"I like most kinds of music including classical.\"\n\n\"Um... so do I...\" She said nothing else for a moment and I thought Is that it? Did she come over just to ask if I like classical music and to tell me she does?\n\nHer awkwardness seemed to deepen. \"Er... I've got a couple of tickets for a concert in the City Hall next Tuesday evening. I was wondering if... maybe... you'd like to come with me... You don't have to if...\"\n\n\"I'd love to,\" I said.\n\n\"Oh... good...\" Her relief was apparent. \"The main item is Scheherazade...\"\n\n\"One of my favourites,\" I told her.\n\n\"Fine... see you outside the City Hall then. Seven-thirty okay?\"\n\n\"That's great, I'll see you there. And Irene, thank you.\"\n\nShe nodded and moved away. Maggie appeared in time to see Irene going back to her place on the door. She put our fresh drinks on the table. \"What was all that about?\"\n\n\"I think I've just been asked on a date...\"\n\n* * * * *\n\nThe concert was great even though it was just a small local orchestra. And then that one date became another, then another. We had to fit them in as best we could: I had my job and my teaching a couple of evening classes a week while Irene had her three jobs and her evening classes and krav maga practice.\n\nWe went sometimes to the cinema and sometimes to a sports match\u2014any sport would do, not really my bag but Irene enjoyed it and I think she was pleased that I went with her\u2014sometimes just for a meal, usually Indian or Tex-Mex. On occasion Irene was happy just having a hot chocolate at Charlie's place. She told me once that he did make the best hot chocolate in the city.\n\nWhatever, and I don't know if she would have admitted it at the time, Irene now had a friend. And while she still didn't smile much, at least her expression was more relaxed some of the time than it used to be.\n\nIrene always insisted on seeing me home, \"...just in case...\" An elderly Jewish lady called Mrs Reece had a bakery a couple of doors along from Dad's studio and she'd seen us once when Irene was wearing a t-shirt with Hebrew lettering on the front. Mrs Reece said to me: \"You stick with that friend of yours, Annie, she knows krav maga so you'll always be safe with her.\"\n\nThen came the night Irene astonished me and, I think, herself. On this particular evening she had walked me home as usual and when we reached the studio door she tiptoed up and kissed my cheek. An odd look crossed her face, as if surprised at her own temerity, and she literally ran from me.\n\nIt didn't happen again but I chose to see it as a breakthrough. But that wasn't all. Suddenly I realised that I was falling for this strange little person.\n\n* * * * *\n\nI had a day off work and spent the morning doing essential housework, laundry and so on before lunch. Dad was in the studio all day so I bought a couple of Mrs Reece's fresh bagels, plastered them with cream cheese, added a flask of coffee and took them down for us to share.\n\nWhile waiting for Dad to clean up I wandered round looking at displays of his latest photographs. There were individual and family portraits and group photos from various functions, dinners, that sort of thing. And one set in particular caught my eye. I looked more closely and realised I recognised someone. \"Dad, when did you take these photos?\"\n\nDad came to see what I was pointing to. \"Oh, those. Two or three weeks ago. It was some social club on the far side of the city. Mostly middle-aged and older folk go there and they were holding a dance competition. No-one outstanding or brilliant but they seemed to be having fun. These pictures were of the jive session. Why?\"\n\n\"Oh, I think I know one of the dancers. Could I have copies of all these?\"\n\nDad shrugged. \"Sure. I'll print you some off this afternoon.\"\n\n\"Thanks. It's just that I'd like to surprise someone.\"\n\n\"Friend of yours?\"\n\nI nodded. \"Something like that.\"\n\n\"Nicole took the still photos,\" Dad said, \"While she was doing that, I made a video recording. I can copy that to a disc for you if you'd like, go with the photos.\"\n\n\"Thanks, Dad, that'd be brilliant. You're a gem!\"\n",
        "As soon as I got back to my flat I made a phone call. \"Hi, Maggie, it's Annie. Would you like to come round to my place this evening for a coffee? I've got something that's right up your street. I'll explain when I see you...\"\n\n* * * * *\n\nA week or so after seeing the jive photos, and armed with a bottle of wine and glasses, I picked Maggie up outside her workplace as arranged. There was another casually-dressed woman with her, a few years older than us, thin with greying hair, who Maggie introduced as Joyce Carroll. \"Right, ladies,\" I said, \"ready to fight the forces of evil?\"\n\nMaggie waved a 'forward' gesture with a hand. \"Let's hit the trail!\" she said. Loves a good Western, does Maggie. Thinking about it, they don't even have to be all that good.\n\nIrene looked shocked when she opened her door and saw three of us standing there. \"What's going on?\"\n\n\"We're here to give you moral support,\" I told her, \"Maggie you know and this is Joyce.\"\n\n\"Sorry, but you can't stay.\" She lowered her voice, speaking directly to me. \"What're you up to, Annie? I told you he's due here tonight.\"\n\nI put my hands on her shoulders. \"Irene, will you trust me on this?\"\n\nShe considered and pulled a face. \"I guess...\"\n\n\"Okay, then trust me. Let's get the stage set up.\" I pulled out the wine and poured a little into each of the four glasses, swilling them around so that they seemed to have been in use for some time. \"These are for show right now, not for drinking,\" I said to Irene, \"And no matter what you hear any of us say, don't act surprised, just go along with it. Have you got his money ready? Good, let's have a look at it.\"\n\nBewildered, Irene handed me a plain A5 envelope stuffed with banknotes. I passed it to Maggie who asked to use Irene's bathroom. She went in, taking the money with her, and closed the door. She came out again after a few minutes to hand the envelope back to Irene. \"Whatever you do, don't touch the money,\" she instructed.\n\n\"Annie... Maggie... what's going on?\"\n\n\"Trust us, Irene.\"\n\nSmall talk was desultory for about half-an-hour until we were interrupted by an impatient rapping on the door. Irene's face settled into an unhappy grimace. Gesturing her to stay where she was, I opened to door to admit Frank Wetherill and had my first really good in-the-flesh look at him. My feelings towards him were probably coloured by what I knew of him but the impression I got was of an offensive little weasel of a man, skinny with pebbly eyes, a pointed nose and a mean slash of a mouth under a toothbrush moustache. He looked as disagreeable as he had the night he'd nearly run me down. The man lurched through the doorway, balanced on his crutches, breathing heavily as if he'd just run a mile.\n\nHe glared around at us then turned to his daughter. \"What're these slags doing here?\"\n\nI took his arm and led him gently to a chair. \"I'm Annie, this is Maggie and over there is Joyce. I'm sure you didn't mean to be rude, Mr Wetherill, but I suppose you're in terrible pain with your disability.\"\n\n\"You're right! I'm in constant pain. Agony. But what're you doing here?\"\n\n\"We're Irene's friends\u2014\" I started.\n\n\"Friends? Her?\" he snarled with a contemptuous jerk of his thumb, \"She hasn't got any bleeding friends! Unless you're a load of bloody lesbian perverts!\"\n\n\"We're her friends,\" I continued as if he'd not spoken, \"It's my birthday today and we're celebrating. As Irene couldn't come out because she was expecting you, we came round here.\" I pointed to the glasses on the table. \"Would you like a glass of wine?\"\n\nIgnoring me, he held out a hand to Irene. \"You got it?\"\n\nShe passed him the envelope which he ripped open and, oblivious of we strangers, took out the money and counted it. \"Good,\" he grunted, \"Same time next month then.\" He reached for his crutches as if to climb to his feet.\n\n\"Before you go, Mr Wetherill, perhaps you'd like to see some photographs I have.\"\n\n\"Why should I want to see your bloody photos?\"\n\n\"Oh, I think you'll find them very interesting.\" I passed him the sheaf of photographs my dad had taken at the dance competition. \"Oh look, that must be your twin brother jiving there, and there he is again... and again... after all, you couldn't dance like that being on crutches.\"\n\n\"He hasn't got a brother, let alone a twin!\" Irene hissed.\n\n\"He hasn't got a twin brother?\" I said, feigning surprise, \"Then that must be\u2014\"\n\nWetherill tore his horrified gaze away from the pictures. \"Bitch!\" he snarled and threw them at me as he jumped up from the chair and made a dash for the door. He wrenched it open to find his way blocked by Malcolm's bulk. Malcolm gave him an amiable smile, said: \"Not leaving the party already, surely?\" and shook his head as he gently turned the older man around. Maggie and I each took an arm and guided Wetherill back to the chair.\n\n\"You forgot your crutches, Mr Wetherill,\" Maggie chided, \"But then, you didn't seem to need them. That was some turn of speed you put on.\" She turned to the rest of us. \"I do believe we've just witnessed a modern miracle. Quite Biblical really. What is it? Something about '...the lame shall walk...' \"\n\nI saw Irene's fists clench and she started to move towards her father. \"I'll fucking kill him!\" she muttered.\n\nI intervened, blocking her way. \"No you won't. We've got a better way of handling this. Just trust me. \" I looked at her father. \"You've been extorting money from Irene for years, letting her believe she'd crippled you. Must run into thousands of pounds by now. You really are a vile little shit, aren't you?\"\n\nWetherill reached into his coat pocket, pulled out the envelope full of money and threw it on the table. \"There! Now I don't know anything about any money!\"\n\n\"I'm afraid I've been a bit remiss,\" I said, \"I didn't introduce Maggie properly. Meet Detective Sergeant Maggie Farnol of the City Police.\"\n\n\"That's right, Mr Wetherill,\" said Maggie, flashing her ID, \"And that money has been treated with a luminescent chemical.\" She took a small spray-can in a plastic evidence bag from her pocket and showed it to him. \"You can't see it now but under ultra-violet light you'll find your hands are heavily stained. Takes days to wear off no matter how often you wash. You won't be able to deny handling that cash. Oh, and I'm forgetting my manners too. This is Joyce Carroll. Joyce is an investigator for the Department of Works &amp; Pensions.\"\n\n\"Yes, Mr Wetherill,\" Joyce added, also showing an ID card, \"and you've been falsely claiming disability benefits for years, again amounting to many thousands of pounds. Defrauding the taxpayer is a very serious offence. We also have reason to believe that you've either forged your medical certificates or you are acting in collusion with a doctor.\"\n\nMaggie placed a hand on his shoulder. \"Frank Wetherill, I am arresting you on suspicion of extortion, forgery and conspiracy to commit fraud. You are not obliged to say anything...\" She finished the standard caution before phoning for a police car and escort to take her prisoner in. \"Sorry to break up the party, folks, but Joyce and I will have to leave you. We're about to have a fun-filled evening interviewing Mr Wetherill down at the nick. And Irene, I'm afraid we're going to take your money, it's evidence. I'll give you a receipt and you'll get it back in time.\"\n\n\"I'll bet that's the last dance competition you enter,\" I whispered sweetly to Frank Wetherill as he was taken away.\n\n* * * * *\n\nMaggie had left us, she and Joyce having taken Frank Wetherill to the Central Police Station for questioning. And that left me and Malcolm to have a glass or two of wine with Irene.\n\n\"I'm grateful to all of you,\" said Irene, \"but why did you involve Malcolm?\"\n\n\"Maggie figured your dad might try to do a runner so we reckoned the easiest way to prevent that would be having Malcolm guarding the door,\" I said, \"Avoided a chase and perhaps a nasty brawl.\"\n\n\"And if you need another witness,\" Malcolm added, \"I was hiding on an upper stair-well. I saw him running up the stairs, two at a time, like an Olympics candidate. He was carrying the crutches, didn't start using them until he reached your door.\"\n\nIrene looked a little embarrassed. \"Don't know what to say,\" she mumbled.\n\n\"Just accept that you've got real friends,\" I told her.\n\nShe surprised us both when we left. She squeezed Malcolm's arm and gave me a hug. Both gestures were brief but coming from Irene they meant one hell of a lot.\n\n* * * * *\n\nBetween them, the police, a couple of government departments and the Crown Prosecution Service gathered enough evidence to throw the book at Frank Wetherill. Among other things, it was found out that throughout Irene's childhood he had been claiming child benefit for a non-existent younger daughter. Quite the con-artist was Frank.\n\nMy dad was called as a witness although all he could do was to confirm that his business had taken the photographs at the club's dance. The defence counsel tried to make out that I couldn't have seen his client clearly in the mist but I held my ground, stating firmly that he had been no more than twelve to eighteen inches away when he almost ran me down. Anyway, the photos and video of a supposedly disabled man dancing like an extra in Grease were damning enough.\n\nI believe Irene's evidence was the most telling, including her total honesty about using her fighting skills against her father. Again, Frank's barrister tried to make a big issue of this but I think the jury accepted it as self-defence.\n\nFrank Wetherill got six years. With some judges he might have got less if it had been Irene alone whom he had cheated\u2014defraud the taxpayer (a euphemism for the Treasury and government), though, and you're in deep trouble. Unusually, the judge in this case was more scathing about the way in which Wetherill had treated his own daughter. The judge also ordered him to repay all of the money he'd defrauded; failure to do so would cost him an extra two years inside.\n\nIt turned out that his medical certificates had been provided by a GP with a serious gambling problem and true to form, Frank Wetherill had bribed him with the minimum amount of money he could get away with. The doctor was prosecuted and given a two year suspended sentence. And he was struck off by the General Medical Council. Some price to pay for getting involved with a poisonous creep like Frank Wetherill.\n\nIt might be nasty of me but I couldn't help hoping that some twenty-five stone tattooed biker in prison would take a fancy to Frank's lissom form and install him as a new concubine. That would be poetic justice.\n\nNot very likely, though\u2014even twenty-five stone tattooed bikers must have their standards.\n\n* * * * *\n\nI couldn't hold off any longer. After about fifteen months of going out together, I knew I had fallen for Irene big time. I wasn't sure about how she felt but there was one way to find out. We'd been to one of the City Hall concerts, country and western this time, and as usual Irene had walked me home. I unlocked the door to the studio which led to my flat and then took the plunge. I cupped Irene's face in both hands and kissed her mouth\u2014the moment of reckoning.\n\nIrene pulled back, a look almost akin to shock on her face. Oh shit, Annie, I told myself, you've blown it! And then... and then her slim arms were thrown around my neck and warm lips crushed against mine. \"Do you want to come up?\" I asked.\n\nShe nodded and kissed me again. I think that at that point Irene was starting to believe she could trust me.\n\nI closed the flat door behind us and turned to Irene, taking both her hands in mine. \"You're absolutely sure about this?\"\n\nShe nodded.\n\n\"Bed?\"\n\n\"Yes please,\" Irene answered.\n\nI took her to the bedroom where I slowly undressed her, planting tiny kisses on every bit of flesh I uncovered. Irene had the most delightful boobs, small with hard brown nipples which seemed to stiffen even more when exposed to the night air. I knelt to get rid of her jeans and underwear. She wore male-style boxer shorts under her jeans and I slid them down to reveal an abundant thatch of hair over her mound and pussy. Didn't bother me, I'm fairly hairy down below myself.\n\nI sat back on my heels to admire the vision before me. Her body was lean and fit without a sign of fat, hard and yet not excessively muscled. The result, I guessed, of all the krag mava training. \"You know something, Irene? You really are king-sized gorgeous. Or maybe economy-sized gorgeous. You are so beautiful.\"\n\n\"You mean that, Annie? Nobody's ever said that to me before.\"\n\n\"Not even\u2014\" I bit my tongue before I ruined the moment.\n\n\"Not even them.\" Irene didn't sound put out. She held my head close and I kissed all around her belly button. \"Can I undress you now, Annie?\"\n\nI stood. \"I'm all yours.\"\n\nI had to crouch a little so that she could pull my t-shirt off before reaching behind me to unclasp my bra and release my breasts. They're not all that large, really, but I supposed compared to Irene's they looked big. She cupped them in her hands then took my long nipples between fingers and thumbs, pinching gently. \"Oh God, Annie, they are so lovely.\" She gave each nipple a fairy kiss before undoing the zip at the side of my skirt, allowing it to fall to the floor.\n\nHand-in-hand we went to the bed and lay down. I think at that point both of us were feeling rather shy. I hadn't had sex for a long time and was feeling as randy as hell although at the same time I'd didn't want to rush into things but to take it nice and easy. I believe it was much the same for Irene. We lay there for what seemed to be ages, just looking at each other and exploring our bodies with gentle touches, slight strokes with our fingertips. Every once in a while our lips would meet, brushing together gently, sometimes with a little flick of the tongue, and we'd each stroke the other's hair and tangle our legs together.\n\nAt length we moved closer, arms around one another, so that our bodies were pressed tightly together. The crush of Irene's breasts against mine, the feel of those stiff little nipples pushing into me, thrilled me as did the pressure and warmth of her damp pubes at the top of my thigh.\n\nNow our kissing became deeper, more serious, with tongue caressing sweet tongue. Irene was making small moaning noises which appeared to come from way down and her blunt fingernails raked my back. Little teeth nipped at my earlobe as she thrust her hips harder against my thigh. I could feel my own wetness and I took Irene's hand, guiding it to my pussy. A small finger slid up and down my oozing cleft before easing into me.\n\nIn turn I reached between Irene's legs, cupping her vulva so that my palm was coated with her thick juices. Bringing my hand back to my mouth I started to lick it clean and Irene's tongue flicked out to join me. She took her finger from my pussy and held it so that we could both lick that too. For me, we both tasted delicious. Reaching down again, we slowly finger-fucked our tight vaginas. Both made soft wet noises as our inner walls clamped down. I'd almost forgotten how much I enjoyed hearing those squishy sounds, they really turned me on. Barbara had always been vaguely embarrassed by them. I could never understand why\u2014to me it was all part of the pleasures of sex.\n\nPulling away slightly from Irene, I reached into my bedside cabinet drawer and took out my small vibrator. Setting it to its lowest frequency I caressed Irene's body with it, starting at her shoulders and unhurriedly working my way downwards. As I rubbed it around her areolas and nipples they seemed to grow even harder and I took one into my mouth, lapping hard and enjoying the taste of her breast. As I sucked I continued to move the vibrator down, circling her belly and allowing it to rest against her mound as I increased the frequency. Irene gasped aloud and her hips jerked.\n\nI moved down the bed until I was between her legs where, with finger and thumb of my free hand, I eased her lips apart. Her inner lips shone with lubricant and an enchanting tiny clit stood out from its hood. Several droplets of milky-coloured fluid seeped from her vagina and trickled down to her perineum as I slowly eased the vibrator into her.\n\nIrene's hips twitched again, and then again, more strongly. \"Oh God, yes, yes!\"\n\nI turned the vibrator to its highest frequency and brought my mouth to her so that I could lick her clit. \"Christ!\" Irene yelled out as she came, clutching me close and panting heavily. \"Oh Annie! Annie! My God, Annie, that was the best one I've ever had!\"\n\nI withdrew the vibrator and started to lick it clean but Irene snatched it from me. I guess she was in a hurry to make me come for there was little finesse. She entered me with two fingers and stroked my clit with the vibrator. The toy was still on full power and I thought I was going to hit the ceiling when I came. As it was, I felt as if I'd passed through the gates of Paradise and it took several minutes for me float back down.\n\nIrene reached out to cuddle me and I responded, taking her into my arms. \"Oh, Annie...\" she said simply, \"Please just hold me now? I feel so good.\"\n\n\"Yes, I'll hold you,\" I replied. Within minutes she was asleep and I added in a whisper: \"I love you. I'll not let you go...\"\n\n* * * * *\n\nBut I did. Inadvertently of course, because I was still asleep. I woke up in the morning, stretched lazily, and turned to put my arm around Irene but she wasn't there. At first I thought maybe she'd gone to the toilet or into the kitchen but the flat was quiet and her clothes were gone from where we'd left them. I sat up and called out. No reply. I got out of bed, put on a robe and after using the lavatory I went to the sitting room and then the kitchen. Nobody.\n\nI put a fresh kettle on then noticed the scrap of paper with writing on the kitchen table. The unsigned message was brief: Sorry, Annie. I need to think.\n\nI tried her phone a number of times but no joy and there was no answer when I called at her flat. I enquired at the supermarket and her manager told me Irene had called in sick. I phoned the club in the evening and Malcolm told me much the same thing. I looked for her in all the usual places in vain.\n\nThen after a few days of silence, Irene texted me. It was abrupt: Caf\u00e9 7.30. Okay? I replied, saying that I'd be there.\n\nThe trouble was that Irene wasn't there, not at seven-thirty anyway. I asked Charlie if she'd been around but he hadn't seen her. Come eight o'clock she still hadn't arrived but I wasn't about to walk out. If Irene did turn up, then I wanted her to see that there was someone she could rely on. Her past life may have been a load of crap but I wasn't going to add to it. Anyway, I'd fallen for her and wasn't going to let her go that easily.\n\nIt was close to nine when Irene walked into the coffee shop. She looked unhappy and distracted, shaking her head when Charlie mimed a drink. She flopped into the booth opposite me, not meeting my eyes. \"Thought you'd be long gone,\" she muttered. The unspoken implication seemed to be: Thought you'd let me down like others have.\n\n\"No, I said I'd be here and I am.\" I reached out to cover a hand with mine but she snatched her hand away. \"Where have you been?\" I asked, \"I couldn't find you anywhere.\"\n\n\"Hid out at my father's house. I've still got my key and he's too tight to have had the locks changed. I almost changed my mind, almost didn't come here tonight.\" Irene still wouldn't look at me. \"I was scared.\" Scared? Irene?\n\n\"I thought maybe you'd forgotten,\" I said, \"Or perhaps something more important had cropped up.\"\n\n\"Got to tell you something.\" She made a number of false starts, hesitating and mumbling. \"God, can't even hold my shit together. Don't know where to start.\"",
        "\"Why not just blurt it out?\" I suggested.\n\nFor the first time she raised her head and looked directly at me. Her eyes were bright with unshed tears. \"Going to give you a laugh, okay? Big joke\u2014I've fallen in love with you, Annie. I love you. Get that? Now isn't that funny? Miserable fucking Irene has fallen in love with you! And I was scared to tell you which is why I ran off. So now you can have a good laugh about it and tell the others at the club and they can all have a fucking good laugh too!\" Irene pushed away from the booth and ran to the door.\n\nI followed. Charlie raised a puzzled eyebrow as if to say: \"What's up?\" I shrugged and went after Irene. She was a damned sight fitter than me and I only managed to catch up because she stopped to lean against a lamp-post, hands covering her face, shoulders quaking.\n\n\"Irene!\" She flinched back slightly, head down, lifting her hands in a defensive gesture. I caught at them, holding her lightly. \"Irene, look at me! Look at me!\"\n\nShe raised a tear-stained face and I said: \"Do I look as if I'm laughing at you? Okay, it could be something to laugh about but it'd be happy laughter, not the sneering kind. Maybe you'd like a laugh? Then I'll give you one.\" I pulled her into my arms and kissed her forehead. She stiffened for a second then relaxed and buried her head against my chest. \"I love you too, Irene. Have done for a while now but I didn't want to scare you off or make you feel pressured. As for the people in the club, I reckon they'll be happy for us.\n\n\"Irene, the whole world isn't against you. Your father's doing time for his misdeeds\u2014and even when he gets out you need never see the disgusting little toad again. Most of your problems now are what you've allowed to continue festering inside you and you need to let go. Easier said than done, maybe, but you really need to let go. I'll be here for you, supporting you\u2014I won't let you down. Okay, so you had a shit upbringing because your mother died young and your father was a load of crap. And you were unlucky with your girlfriends. On the other hand, though, think of your Aunt Rose. She loved you right to the end and that's got to be worth a lot. Think of people like Nellie and Jack Matthewson and their unconditional caring for you.\n\n\"Thousands of others have bad starts in their lives\u2014they get over it. Maggie's mother died of cancer when she was twelve and her father a year later in a traffic accident. She spent her teen years in a children's home and not one of the better ones. That's why she became a cop, so she could try to help people. My mother had MS and my father was working all hours trying to build up his business, helped when he could but mostly the care fell to me. We didn't curl up all bitter, we got on with it. Love can get you through the worst of situations. All those thousands who've had shitty lives, most of them face life and they smile. Remember smile? Where the lips turn upwards?\"\n\nPulling back slightly, Irene scrubbed at her face to wipe away tears. Her lower lip trembled. \"You love me? Honestly?\"\n\n\"Yes, dammit!\"\n\n\"Why? How could someone like you love me?\"\n\n\"For fuck's sake!\" I practically shouted, earning a resentful glance from a passing cyclist who wobbled and almost lost his balance, \"What do you mean, how could I? Why does the sun come up in the morning? Why is it cold in winter? Why do flowers bloom in springtime? Because these things happen, that's why! Now, are we going to stand here all night trying to find the answers to life's mysteries or are you going to come back to Charlie's with me and have the hot chocolate I think you need?\"\n\n\"What'll Charlie think?\"\n\n\"Bugger what Charlie'll think,\" I said, \"Charlie's a good bloke and he'll mind his own business. If he does say anything, I'll just tell him it's women's troubles. That shuts most men up... And when you've had your hot chocolate, we're going home, not my home but our home... And when we get there we're going to sit down and have a serious talk about what happens next...\"\n\nEpilogue: several years later\n\nThere were a lot of graduates to get through the formal ceremony and quite a crowd milling about outside the City Hall, mostly proud parents although there must have been a few like myself. I slipped through the mob and up the broad steps to where Maggie was waiting for me at the ornate doors which were not officially open for another five or six minutes. I wanted to be sure to get a good seat immediately behind the graduates and Maggie finagled our way in, courtesy of a security man who was a retired police colleague. The graduates were already all seated and having located Irene we gave her a wave. I reckoned we owed the security man a drink as getting in ahead of the others was a good move\u2014once allowed in everyone scrambled, trying to make a dive for the best seats.. We got a few glares but just smiled sweetly at them. I saw my dad who was there as official photographer and he gave me a big grin and thumbs up. He and Nicole had spent the morning taking portrait photographs of the graduates and now they were preparing to record the ceremony.\n\nA massive shadow loomed over us unexpectedly. \"I couldn't miss this,\" Malcolm beamed, \"It's great that Irene has achieved something worthwhile at last. Always knew she could do better than the club. Guess it's thanks to you, Annie\u2014you gave her the love and the push she needed. Catch you later.\" He went to take a seat at the very back of the hall so that his bulk wouldn't obstruct other people's view. Ever thoughtful, that was Malcolm.\n\nShortly before the ceremony was due to start, a well-built middle-aged woman approached us and looked from Maggie to me and back again. \"Is one of you Ms Truscott?\"\n\n\"That's me,\" I said.\n\n\"My name's Sally Lane, I work at the City Hospital. I've been told you're a friend of Irene Wetherill.\"\n\n\"I'm her wife,\" I corrected.\n\n\"Oh, sorry, I wasn't told that. Well, the thing is that Irene came top in all of her classes throughout the nursing degree course and her tutors have commended her highly. I understand that she's interested in working as a children's nurse. Is that right, do you know?\"\n\n\"That's what she's always hoped for.\"\n\n\"You know, it takes a special kind of person to deal with sick children and sometimes the job can be heart-breaking. Do you think Irene could hack it?\"\n\n\"I'm sure she could,\" I said.\n\nSally Lane handed me a business card. \"I'm a Senior Charge Nurse in the Paediatric Unit. I've got a vacancy coming up on my team within the next month and Irene's training record is very impressive. Get her to give me a call as soon as possible. If she'd like the job I've got sufficient clout to fix it for her. She'll need to carry out extra studies for a paediatric nursing diploma but judging by her record she should ace that.\" Sally hesitated then added: \"You must be very proud of her.\"\n\nThere was sudden lump in my throat. \"I am,\" I managed.\n\nThe stage began to fill with academics, all of them wearing gowns and caps with trimmings in various colours denoting their universities and specialisms. Those with doctorates looked especially splendid in their scarlet robes. A number of eminent guest talkers gave their speeches and eventually the ceremony began. It was an hour or more before they reached the thirty or so nursing graduates and because they were summoned forward in alphabetical order, Irene was among the last three or four.\n\nEventually she was announced. \"Ms Irene Wetherill, the degree of Bachelor of Science with First Class Honours.\" I clapped so hard my hands hurt and Maggie whooped loudly. Clutching her diploma, Irene waved to Malcolm then turned towards where Maggie and I were sitting and smiled.\n\nHer smile lit up the auditorium\u2014along with my heart.\n\nThe End"
    ],
    "authorname": "Maonaigh",
    "tags": [
        "drama",
        "lesbian clubs",
        "unreliable lovers",
        "lesbian sex",
        "oral sex",
        "lesbian love"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/smile-10"
}