{
    "title": "Raw and Broken Ch. 06",
    "pages": [
        "It has been a wonderfully enlightening and unexpected journey with Daphne. I hope you all have enjoyed the trip as much as I did writing it. The story has come to come to an end at some point, though. So everyone off the kinky train for this group. Thank you for your loyal readership! - SSW\n\n***\n\nAnother tear slid from the corner of my eye and over my heated cheek while I waited for Stefan to reply. To explain what he was doing standing over me in Malcolm and Becca's mansion on a beach in Delaware when I'd left him in Paris not even two months ago.\n\nHe stared at me, his jaw twitching. When he did speak, I was glad I was already sitting.\n\n\"I came to get the backup keys to my aunt's beach house. I was taking a gamble that Malcolm\u2014\"\n\n\"He's in Chicago.\" My eyes widened. \"Wait, you know my brother-in-law?\"\n\nHis chuckle was faint. \"Apparently I do, if Malcolm is your brother-in-law. We used to spend the summers out here with our families when we were kids. My aunt owns that house at the front of the\u2014 Hey, are you okay?\"\n\nI sniffed and wiggled my nose, trying to stop the impending flood I could feel building up inside me. But when I blinked, my eyelashes were damp. \"I'm sorry. I'm still trying to grasp that you're here.\"\n\n\"Trust me, I hadn't expected you to be the one to open the door.\"\n\nI waved my hand at him, unable to stop my chin from trembling. \"What are the chances?\"\n\nHe sat down on the edge of the coffee table, his hands clasped between where his arms rested on his thighs, his gaze down at the space between his feet. \"I haven't talked to Malcolm in ages. But he had contacted my aunt last winter when a friend or relative of his no longer needed the house.\"\n\nI frowned. \"That would have been my husband, Drake. He rented it indefinitely while we tried to repair our marriage. Then he...well.\"\n\n\"I'm sorry.\"\n\nI just nodded, unable to form any more words at the moment. While I had loved Drake very much, I had chosen to move on. But saying his name again brought back memories. And not exactly the good kind.\n\n\"She recently had a mild heart attack,\" Stefan said, thankfully derailing my train of thought. \"She'll be fine, but she decided to move to Paris to live with my mother. We flew back to collect her in Arizona. It's already difficult to manage the rental property from there, much less overseas. So she asked me if I'd spruce up the beach house and look into realtors. Malcolm's family has always kept a spare set of keys in case of an emergency, and she said he was living out here now. So I thought...\"\n\nI squeezed my eyes shut, trying to fathom what he had said. What this meant. Stefan and Malcolm had grown up together. Well, at least during the summers. He'd come to sell his aunt's house. Which meant he hadn't been searching for me. And he would be leaving once he'd taken care of business. He would be returning to Paris with his mother and aunt, to carry on the modeling business and his private fetish of erotic photography.\n\nI wasn't sure why that last thought brought pains to my chest. And more tears. I'd convinced myself I was over him. He was just another man. We would both live our lives in our separate countries on our respective continents. Yet here he was again, making a scene at my front door.\n\nHe was so quiet, I had to open my eyes to verify he hadn't gotten up and left. That I wasn't dreaming. Suddenly, he shook his head.\n\n\"What?\"\n\nHe looked up at me, a frown on his face. \"It's hard seeing you again.\"\n\nI stood and limped to the kitchen, thinking the bruise on my ass was going to linger longer than other times, mostly internally. There was a cabinet next to the fridge where I knew Malcolm had several keys on hooks. I searched through them, and lo and behold, there was one labeled 'Brunet.' Claudette and Stefan's last name. I retrieved the ring with two keys then returned to the living room. \"I'm sorry I've caused you such distress. Here you go. You don't\u2014\"\n\n\"Stop it, Daphne.\"\n\n\"What? You just said\u2014\"\n\n\"That it was hard to see you.\" Stefan rose, towering over me. \"Not that I didn't want to.\"\n\n\"I don't understand.\"\n\nHe brushed his fingers at my cheek, pushing my hair behind my ear. His voice was almost inaudible. \"Do you have any idea how difficult it was to watch you get in that taxi? To watch you leave? Knowing you didn't feel the same way I did?\"\n\nMy breath came out as a shudder as my eyelids lowered. If he only knew.\n\n\"I never thought I'd see you again. Hear your voice. Touch your skin.\"\n\nMy legs were shaking now. My mouth dry. I licked my lips and swallowed. I swear he groaned.\n\n\"Daphne, I'm not willing to call this a coincidence. I mean, what are the odds that you would be living here in the same freaking cul-de-sac that I spent my summers, related to an old friend of mine? That I would happen to come back to the states right now?\"\n\nI just shook my head, my heart thumping in my ears.\n\n\"I don't know what your plans are. But I'm going to be around for a few weeks. I have to get my aunt's house ready to put it on the market.\"\n\n\"Are you saying you want to spend time with me?\"\n\n\"Woman,\" he said, his voice gravelly, \"you can only imagine the things I want when it comes to you.\"\n\nI gasped. He continued before I could say anything.\n\n\"But to answer your real question, yes. If you're willing, I'd like to hang out with you. Get to know you more on our own turf without all the models around. See where it goes from there.\"\n\n\"Our own turf? That's Chicago, for me. I'm out of my element here.\"\n\n\"I'm not.\"\n\nI smirked at him. \"Just where exactly did you grow up?\"\n\nHe cleared his throat. \"Southampton.\"\n\nI smacked his arm. \"Are you kidding me?\"\n\n\"Not at all.\" His eyes suddenly bored into mine, his mouth a firm line. \"Before we go any further...\"\n\nI had just inhaled through my mouth when he pressed his lips to mine, his hands palming my face. He took advantage of my surprise to slide his tongue into my mouth. To languidly draw my tongue into his. I think he moaned. I know I did. And for a moment, I forgot I could breathe through my nose while my mouth was preoccupied.\n\nWhen he let me go, I staggered back to fall down on the couch and cried out. \"Oh, God, my ass hurts.\"\n\n\"Well, that's the first time I've gotten that response after kissing a girl!\"\n\n\"Just get the damn ice pack,\" I said, laughing with tears rolling down my face.\n\n###\n\nWe spent Sunday sitting around talking. Being lazy. From what Malcolm had stocked for my presumably solitary week, we whipped up a salad and a cheese tray and sat out on the porch as the summer breeze blew in off the waves.\n\nWhen Stefan asked about Drake, I only discussed the vanilla side of my late husband. He held me as I cried after telling him about Lilly. And after the sun had set, he kissed me gently and left to go back to his aunt's beach house.\n\nI sat up in the observation room for a long time, just watching the stars through the open window. Wondering why I no longer felt nervous being with him. When I did go to bed, sleep came quickly. And I had a wonderful, peaceful rest.\n\nHe was back again in the morning, ringing the bell before seven. Thankfully, I had been up already to watch the sun rise and take a walk on the beach.\n\n\"Are you still on Paris time or something?\" I let him in and went back to the kitchen.\n\n\"Something,\" Stefan said, following me. He leaned on the island. I could feel his eyes on me as I pulled two mugs from the cupboard. \"Do you models always look so good when you roll out of bed?\"\n\n\"Wouldn't you like to know?\"\n\n\"Yes, I would. That's why I asked. But if you won't tell me, there are other ways to find out myself.\"\n\nHeat filled my cheeks at what he was implying. \"No. We're just like regular human beings with bedhead, bad breath, and hairy legs. Well, not the latter for me. I live on the beach right now. Anyway, I've been up for a bit.\"\n\n\"I see.\"\n\nI fumbled with the pre-made cups and the buttons on the instant coffee machine. One mug done, I set the other one in place and started the machine whirring again. \"I miss having a real cappuccino every morning. Oh, and the corner bakery. The cheese pastries? Mmm.\"\n\n\"See, I knew Paris had grown on you.\"\n\n\"I never said it hadn't.\" I set a frothy mug before him. I took a tentative sip out of mine and managed to swallow it. \"Sorry, this is the best I can do.\"\n\n\"Do you have any plans today?\" He watched me over the rim of his cup as he blew on it and took a sip as well. His slight grimace told me he didn't care for the watered-down drink, either.\n\n\"You don't have to drink it.\"\n\nHe took another sip. His lips pressed together, and I saw his Adam's apple rise and fall as he swallowed. \"No, it's good.\"\n\n\"Liar.\" I tossed the contents of my cup into the sink. \"It sucks. I know.\"\n\n\"Oh, thank God!\" He quickly dumped his out as well and filled the mug with water from the fridge's dispenser, gulping it down. When he was done, he wiped the back of his hands across his mouth and smacked his lips.\n\nI was trying very hard not to laugh but ended up failing. Miserably.\n\n\"So...do you have plans?\"\n\n\"Let me check my calendar.\" I wiped at the tears in my eyes and pretended to pull out a notebook and flip through it. \"Looks like I've got lying on the beach scheduled from now till sunset. But I think I can pencil something in. What did you have in mind?\"\n\nThe corner of his mouth turned up. \"Want to help me inventory my aunt's house? I need to get a list of repairs and see what else needs to be done to spiff up the place.\"\n\n\"You're really selling it, huh?\"\n\n\"Yep, probably to some yuppie who will only come down from the Hamptons on the weekends during the summer to feel normal.\"\n\n\"Very funny. Have another glass of water while I go change.\"\n\n\"You look perfectly fine to me. Besides, you'll probably get sweaty.\"\n\nI raised an eyebrow at him then looked down at my old shorts and the Justin Timberlake T-Shirt Drake had given me. I was so glad that I wasn't still drinking my fake cappuccino because I would have spit it out. I'd forgotten which T-shirt I'd grabbed before my walk.\n\n\"Come on, we have a lot of work to do,\" Stefan said, grabbing my hand.\n\nWe were halfway across the cul-de-sac when I said I'd forgotten the house keys. Anything to go back and change out of the suggestive shirt. He cleared his throat and pointed at my other hand.\n\nI stared at the Eiffel Tower keyfob and the two keys dangling from it. I did not remember swiping them off the counter. But I'd done it so many times in Paris as I was running out the door to get to a shoot, it must have become second nature.\n\nHe continued his beeline to the other side of the circular road while I tried to think of some reason to turn around. But none came to me. And then we were slowing down, and my mind switched focus.\n\nAs crazy as it may seem, I had never been to Drake's rental property...or rather Stefan's aunt's house. Our group had always hung out at the mansion. Both Malcolm and Drake had said the other dwelling wasn't anything special, so we weren't missing much by not visiting. And I'd not really paid it much mind as we drove past it on occasion.\n\n\"Now don't hold back on me. Tell me what you really think.\" Stefan stopped in front of the house with a silver Audi parked in the driveway and flung his hands out. \"Ta da!\"\n\n\"Um...Yeah. How about, ta dump?\"\n\n\"Seriously?\"\n\nI just stretched out my own hand at the property before us.\n\nHe scratched the back of his head. \"I guess you're right.\"\n\nThe house was set back in a grove of trees that had gotten a bit overgrown. But it was actually a benefit in this situation. The biggest eyesore was the fact that the main living area of this house had been noticeably raised up from the ground level by at least eight feet. You needed to climb a flight of wooden steps to get to the front door. And then that was accessed through a screened-in porch. If you listened closely, I was sure you could hear banjos playing.\n\nWhile the porch looked out onto the cul-de-sac and the beautiful homes surrounding it, the building as a whole looked subpar against them. Unworthy to be considered a beach house. Yet the location at the mouth of the circular road did provide foliage as a backdrop that the mansion and the other dwellings closer to the beach did not have. It just hadn't been maintained.\n\nI had asked once, and Malcolm had said all of the houses were at raised heights to reduce flooding. But the curb appeal here was so...lacking. So unlike the gentle slope with stone steps that led to the mansion's black front door. Or the unique paths and stairs on the surrounding houses that had landscape and porches to hide the fact that they weren't on ground level. Surely there could be better away to mask this entrance?\n\nThere was an open-air porch directly above the screened-in one with just a wooden railing surrounding it. Drake had told me he could see the ocean over the rooftops of the other houses. While it probably offered a great view, it would be lost if the lower porch was removed to update the fa\u00e7ade. It was a conundrum for the new owners, though, I guessed.\n\nI told Stefan all of this. That he needed to find a way to keep the upper balcony but make the entrance more appealing. He wrote something down on a pad of paper he'd retrieved from the car. Asked me my opinions of what I would change. I faltered, but he insisted. He wanted to know what a woman thought. What would make the house more sellable. Because in this neighborhood, he said he hated to say it, but he agreed it was currently a dilapidated mess.\n\nWhen he started toward the stairs, I asked, \"What's in the garage?\"\n\n\"Just some umbrellas, chairs, and sand toys. I got empty boxes from a local grocery store yesterday and threw them in there. A dumpster is being delivered tomorrow, and a donation center will take whatever is left. Which shouldn't be much beyond the basic furniture and some decorations.\"\n\nI followed him up the creaky stairs, the two-by-four railing swaying without much effort on my part. \"If anything, this has to be secured. It's unsafe.\"\n\n\"And we've just begun.\" He grunted and shook his head.\n\n\"Hey, you asked.\"\n\n\"I know. I know. Also, try to see past the bad paint jobs. What I need is a second pair of eyes to find major defects, like this. And your opinion on the layout. Does it flow? Can you imagine if you were living here, would you be able to work in the kitchen? Relax in the living room?\"\n\nI squinted at him, to which he raised his hands up.\n\n\"I'm just theorizing, Daphne. You said you have a degree in theatre. Pretend you're the new homeowner. What would you change? What would make you want to buy this house?\"\n\nI took a deep breath and made a comment about replacing the front door with something more substantial than the existing metal storm door. French doors maybe. Opening up the front of the house to the sorry-excuse for a beach property.\n\nStefan jotted down more notes. \"You know, you're good at this?\"\n\n\"I'm a woman,\" I said, grinning at him. But then my face fell. I almost cried. I could see why Drake hadn't invited us over.\n\nAs soon as we stepped through the front door, we were immediately in the kitchen-slash-dining area. To the left was a narrow lunch counter that barely looked wide enough for a plate. The peninsula cut the already cramped space into an even smaller area that was no bigger than the kitchen in my old studio apartment. The outdated counters and appliances were arranged in a C-shape with the sink centered along the outside wall. At least it had a window above it. Except that the view was of the screen room. And Stefan's aunt had placed one of those tall, plastic outdoor storage cabinets against the screen on the far side.\n\nHe mentioned that it was for storing beach towels. Before I could ask why they weren't inside the house, he said I'd find out soon enough. Then he asked me about the kitchen layout, as if that was the only problem with it.\n\nThere was a decent number of cupboards, and they reached up to the ceiling. Except the ceiling was made lower than normal by inset, boxy light fixtures that gave the room a yellow cast. I worried that Stefan wouldn't be able to stand up straight. I wondered if Drake ever had problems.\n\nThe two major appliances\u2014the stove and fridge\u2014were stained from years of use, and had probably been here since the Regan era. There would have been a decent amount of counter space between them, but half of it was taken up by a commercial-sized microwave. Which made me wonder if the oven and stove even worked.\n\nA small pantry across from the sink had three shelves that barely looked deep enough to hold more than a handful of boxes or cans. Next to that were two bi-fold doors\u2014also relics of years gone by when it came to design standards\u2014that hid a stackable washer and dryer next to a small water-heater.\n\nAnd that was the main food prep and cooking area in a nutshell. Almost literally.\n\nI frowned. This was pathetic.\n\n\"Stefan, let's be honest. I don't know if this was considered to be upscale when your family bought it. But no woman would buy this place now based on this kitchen alone. Especially not without a dishwasher. You may have to narrow your market to just bachelors.\"\n\n\"We can put one in.\" He stepped into the kitchen area with me. And noticeably ducked his head.\n\nThe only positive about this area was that we could stand side-by-side. But it was very...cozy. I covered my mouth to muffle my laugh. \"Where would you put it?\"\n\nHe pointed to an area but apparently realized it wouldn't work. He turned to another wall, hesitated, and turned again. When he'd done a full circle of this, he shrugged. \"Well...I don't know.\"\n\n\"Maybe we should move on.\"\n\nHe sighed. \"Yeah.\"\n\nI took five steps to the right...toward the door. I almost walked right through it and back to the mansion. But I'd promised I'd help him, so I surveyed what was being used as a dining area.\n\nIt was basically just an extension of the open living room that ran from the front door at least thirty feet to the other side of the house. There was a wide section of ceiling over the area where a picnic-style table had been placed in front of a picture window that looked out on the porch. It gave a good indication of the true height of the kitchen if the gaudy lights were removed. Beyond that, a vaulted ceiling defined the rest of the space as a great room. Except it wasn't so great.\n\nThe only other item in the area was a hutch on the east wall. The shelves and single drawer were bare. But the bottom cabinet had mismatched placemats, candles, and an empty picture frame with seashells haphazardly glued to it and 'Delaware' painted on in childish writing.\n\n\"Your handiwork?\" I grinned at Stefan as I held it up.\n\nHe shook his head and laughed. \"I can honestly say, no. Not sure where that came from. Maybe one of my cousins. So what's your analysis so far?\"\n\n\"Well, you should probably gut the kitchen. This is supposed to be a beach house. You need to think Southampton meets Bethany Beach. Right now, it's just the house on the wrong side of the tracks.\"\n\n\"That bad?\"\n\n\"The renters probably spend more time on the beach...and not just because they're at the ocean. I enjoy the surf and sand as much as the next beach bum, but when you've got a house in this location? You want to spend quality time enjoying it. Not just sleeping in it. And your new owners? They may not want it for a rental. Look at Malcolm and Becca. They've made a wonderful home for themselves out here all year round.\"\n\nHe pressed his lips together then let out a deep sigh.\n\n\"We don't have to do this. Or at least I don't, if it's upsetting you.\"\n\n\"No. It just sounds like more work than I was expecting to take on. We've only looked at two rooms. But you're right. It would be a good family home if it was updated. Anything else here before we move on?\"",
        "\"There's no real entry way. You don't need a foyer, but in this neighborhood, you need something other than...this.\" I waved my hand around indicating the front porch, picnic table, and kitchen designed more for a Barbie doll than a human being.\n\n\"Understood. Make it look like home, but more affordable.\"\n\n\"Your childhood Southampton home, not your mother's Paris one. Although, I'm only imagining the house you grew up in doesn't rival the country estate.\"\n\n\"No, it only has two floors on three acres.\"\n\nI rolled my eyes and started toward the living room and a set of bookcases on the far wall. But he intervened and quickly guided me to the back of the house instead. When I started to ask what the rush was, he shushed me and moved behind so I couldn't backtrack.\n\nA hallway led to three rooms for sleeping. While they were each a good size, there were way too many beds. Four single ones were lined up along the walls in each room, some of them arranged as bunks. Mismatched nightstands were stuck in between leaving a square of open space in the middle to maneuver around.\n\n\"You're going to need a lot of manpower to clear these out.\"\n\nStefan scratched his neck. \"When is Malcolm coming back?\"\n\n\"Saturday or Sunday, I think. Maybe he could call Daryl to come help. But that wouldn't be until next week at the earliest.\"\n\n\"I was hoping to get these out of here today or tomorrow. Start ripping up carpet.\"\n\n\"Well, I may be a model, but I'm not afraid to get dirty.\"\n\nHis mouth twitched, then he shook his head slightly as his smile returned. He gestured toward the door and followed me out of the last bedroom.\n\nI groaned as I took in the two cramped bathrooms across the hall from each other. Each had a pedestal sink, a narrow shower, and a toilet but no storage. I'd not seen a linen closet, either, in the hall. No wonder the beach towels were kept on the porch.\n\n\"These bathrooms are too small.\"\n\nStefan walked into the shower stall, sat on the lid of the toilet seat, then stepped before the sink, all while I stood in the hall. \"I can move around just fine.\"\n\n\"You're a guy.\"\n\nHe put his hands on his hips. \"And just what does that mean?\"\n\n\"Just that you don't need a lot of room. But unless you're going with the bachelor pad idea to sell this place, maybe you could think about rearranging the floorplan. Like take out the wall of the third bedroom to make a single, larger full bath and bump the kitchen out into the second bathroom? It would work well for both a rental property or just a single-family dwelling.\"\n\nStefan blinked several times. \"Tearing out walls? I don't know about that, Daphne.\"\n\n\"Listen, you asked for a woman's opinion. We're all about big kitchens. Ample bathroom space. And bedroom layouts that are not only comfortable but also functional. What you have here is just the opposite of all that.\"\n\n\"I'll have to consider it.\"\n\n\"That's all I'm saying. This really isn't a party neighborhood. We haven't seen the master suite yet, but you could probably get away with just the two guest bedrooms. If your buyer still wants to rent the place out, they could fit a couple of bunk beds in each of the rooms down here to allow for higher occupancy. It just wouldn't feel like a guys' dorm room...or a cabin at summer camp.\"\n\n\"I'll keep that in mind.\"\n\nAs he jotted down some notes, I suddenly wondered if my ideas offended him. This had been his childhood vacation home. Although, it didn't look like something a family from the Hamptons would willing come visit, it seemed to have been special to him. Maybe Stefan came with his less wealthy cousins while his parents were off gallivanting the globe. And it could have been much nicer in the past.\n\nI asked Stefan about the eight extra feet of below the house. If it was a lower living level. Or could be. He didn't remember ever being down there, so it was probably used for storage. The only way in appeared to be through a locked, external door he'd found. He said he would get a locksmith out to open it since he'd already tried the keys he had without success.\n\nFunctionality aside, the d\u00e9cor seemed more along the lines of what I had expected to find: white walls\u2014some more worse for wear than others\u2014with white-washed, distressed wood furniture. The floors were either light wood or light tan carpeting. The only true colors were in accents and consisted of blue, pink, and green pastels. It was as if a beach-themed store from the 1980s had exploded in here. Every room had seashell and fish knickknacks on the tables, framed on the walls, embroidered on pillowcases, and printed on the comforters. The candleholders, centerpieces, and decorative bowls were even made out of driftwood. It was enough to make me slightly nauseous.\n\nWhen we finally trekked back to the living room, I smiled wholeheartedly for the first time in this gloomy house. The sun was rising higher outside, and bright, natural light streamed in from three dirty but strategically placed skylights above. I thought I heard my heart sigh as I stepped closer to the east wall directly across from the entrance.\n\n\"Are you glad you waited? I tried to save the best for last.\"\n\nI just grinned at him and bounced a little on my toes.\n\nTwo wide columns of built-in bookcases flanked a window seat big enough to lie down in and an expanse of windows inlaid with grilles that stretched to the second floor. The architectural design was capped with a sunburst circlehead. The entire wall looked like a white-framed glass archway you'd find in a fairytale. Outside, vibrant green trees with a blue sky above the canopy blocked the view of the neighboring house.\n\nAt this point in the tour, this wall was the only thing that the builders had done right. I could imagine sitting in that little alcove, curled up with a good book and a real cappuccino any day of the year. Snuggled in a blanket, watching the snow or rain fall. Taking a nap as the sun warmed my face.\n\n\"What do you think of the fireplace, Daphne?\"\n\nI flinched as the sound of Stefan's voice pulled me out of my daydream.\n\nI studied the monster on the north wall with the gaping, black mouth. Several couches and chairs\u2014which had probably been quite nice at one time but were now faded from the sunlight\u2014were arranged in one large, three-sided conversational square in front of it. A low, oversized table had been placed in the center, as if to anchor the pieces. In this space, though, the furniture seemed to be bowing down to the monochromatic sand-colored stones that covered the source of heat and rose a couple of feet above a driftwood mantle then abruptly ended. I tried not to grimace but failed.\n\n\"Definitely keep it. It's always a good selling point, especially if someone were to stay here in the winter. But, I've never liked the look of rounded stones. Even when they were popular. I would replace them with brick or flagstone. Something more rustic. It would be amazing to take it all the way up. Finish it with the angle of the ceiling. Or stop at the mantle. Don't do it half-assed like this.\"\n\n\"Are you sure you haven't done this before? Maybe you were a designer in another life?\"\n\nI turned away as he glanced at me, not wanting to cry. To admit what a thrill this was. Drake had not let me decorate out in California. It had been intended to be a spec home that his boss had arranged for us to buy. We'd moved in and kept everything except the secret room exactly the same way it had been designed. Maybe that's why I'd never settled in. I'd always felt like it was on display. That we were. It was the perfect house, therefore we had to be the perfect couple\u2014at least in Drake's eyes.\n\nBut now? Even if it was pretend, I was elated that someone wanted to hear my ideas for what I actually liked when it came to a home. It felt so good, my chest hurt.\n\nI thought then of the conversation I'd had with Malcolm and Becca after my return from Paris. That I now had enough money from Drake's 401(k) as well as the sale of the house out west to buy a place of my own. To decorate it the way I wanted. Yet I hesitated to jump at the chance, mostly because I wouldn't be able to afford to live here, by them. Maybe in Delaware still, but I wasn't quite ready to leave them long-term and actually be on my own. Until they pushed me to move out, I would bide my time. Especially, with the baby on the way.\n\n\"Daphne?\" Stefan's voice whispered in my ear. \"Anything else?\"\n\n\"Hmm?\"\n\n\"The rest of the room? Anything you'd do differently?\"\n\n\"Oh, a couple coats of paint would make it seem less dated. And clear out all of this beach shit. It worked thirty years ago, but not anymore.\" I turned to him with my hands on my hips. \"I swear, if you touch those windows and bookcases...they are your only saving grace right now.\"\n\n\"I promise they will stay.\" His smile was wide. Probably a result of relief that I hadn't suggested a complete overhaul in this room as well, although that fireplace could use it. He gestured for me to lead the way up the stairs on the south wall.\n\nA wide loft walkway wrapped around from the west wall facing the cul-de-sac and partially along the north wall, creating a balcony that overlooked the open space below. Its floor created the ceiling for the dining area, part of the kitchen, and the entrance of the hallway. There were two sets of French doors, one leading onto the second porch, and the other into the master suite.\n\nThere was just one space left to review.\n\nI took a deep breath and flung the north set of doors open with flamboyance. Then I doubled-over in laughter. I wiped at the tears in my eyes. \"Was it always this way?\"\n\nStefan just stared at the floor. \"Well, it seemed much cooler when I was a kid.\"\n\nIt was a huge room that covered the space of the kitchen, hallway, bathrooms, and bedrooms below. What made me laugh was the ship's wheel\u2014a behemoth at least four feet tall and wide\u2014mounted on the wall above the bed. Not to mention the bed itself, if you could call it that.\n\nInstead of the typical rectangular mattress and box spring, there was a circle bigger than two king beds put together that served as the mattress. Beneath it was a circular base covered in the same carpeting as the floor. The spread on top was navy blue and had to have been made with two comforters sewn together. Laid out in the middle was a cream-colored blanket with an anchor emblazoned in the center and red and yellow rope curling around it.\n\nThere was a massive frame around the head of the bed that created two deep shelves about two feet apart. At either end was a built-in nightstand with drawers. All of the edges were rounded. The last time I'd seen a headboard like that\u2014albeit smaller in scale and definitely more squared off\u2014was back in the 1980s, but it was white acrylic. This one was made of wood. Which matched the dark, glossy paneling on the walls...and the ceiling.\n\nThe whole room looked just like the inside of a boat's cabin. I noticed there were even replica portholes on the wall across from the bed on either side of the French doors once we stepped further into the room. Thank goodness they weren't imbedded into the wall.\n\nThere were two low, leather chairs by a fireplace to the left of the doors, which made sense since the chimney from the living room would pass through this room as well. A small dinette set was tucked into the corner closest to the bathroom and across from the walk-in closet that jutted out into the room. But there was still a lot of open space.\n\nTo carry on the nautical theme, there were models of sailboats and anchors on almost every flat surface. Including the shelves surrounding the bench and arched windows that mimicked the wall in the living room below. Tall, dark shutters covered most of the glass except for the sunburst above it. What sun did shine in showed off dust particles dancing in the rays. It was also the only indication that we were truly not below deck.\n\nThe master bath was no better. The walls were the same glossy wood as the bedroom, and the brown carpeting carried throughout only to stop abruptly two feet before the shower and tub enclosure on one wall. The mirror above the double-sink was an enlarged porthole...and this one opened to reveal a medicine cabinet. Decorative wooden shelves held more sailing regalia, including a ship in a bottle, and the towels matched the blanket on the bed.\n\nIt all made me think of the loft area as a boat docked on the beach, which was the rest of the house. It was definitely odd. And my stomach wasn't quite sure if it was on land or a little sea sick.\n\n\"My uncle used to call the master suite his private yacht,\" Stefan said as we stood in the bathroom staring at the shower that was so old and dark, it looked like it had already been buried at sea. His voice was soft. Reflective.\n\n\"You could fit a whole yacht up here,\" I mumbled as we returned to the bedroom.\n\nHe was smiling, but his cheek twitched. Before he glanced away, I thought I saw his eyes grow glossy. As if he were going to cry. Which probably meant that I had said the wrong thing.\n\n\"I'm sorry, this house holds lots of memories for you. I'm sure it used to be lovely when you were growing up. It's just been neglected.\"\n\n\"No, you're right. My aunt had said it was all cosmetic. One to two weeks tops to repaint and maybe change out the flooring. That's like putting a bandage on a leaky pipe. It definitely can't be sold like this. Hell, I don't even know how we'd get this bed...this thing...out of here.\"\n\nI smiled up at him. \"If it's any consolation, I'm here to help.\"\n\n\"Thank you for your offer.\" He kissed the top of my head. \"And for thinking positive.\"\n\n\"You asked for my opinion. I just don't want to offend you.\"\n\n\"You're not.\"\n\n\"Please tell me if I do.\"\n\nHe nodded. \"So, where do we start?\"\n\n\"We need to clear out the junk and remove the furniture.\"\n\n\"Sounds good. Lead the way, slavemaster.\"\n\nDuring the whole inspection, I'd forgotten that he could read the back of my shirt. Now, as he followed me down the stairs, my cheeks heated. I wondered what he thought of the words embossed there about shackles, slaves, and whipping. God, I wish I'd thrown this shirt out long ago.\n\n###\n\nFour hours later, we had managed to move all but one couch down to the garage. One of the chairs wouldn't make it to the donation center. I'd lost my grip as we were going down the rickety front stairs, and it took a tumble. So that went on the side of the garage designated for the dumpster.\n\nWhen we'd found that the last couch wouldn't fit through the front door, I had suggested we haul it upstairs to the open-air porch and chuck it over the side into the driveway. Stefan had seemed to consider it for a moment, which left me gaping at him. But in the end, we'd decided it should stay for now. Something to sit on since we'd removed all of the other chairs and benches. We had just put it back in place when we'd turned to each other and both said we could have taken the feet off. Oh, well.\n\nWe'd also corralled every nautical and beach-themed knickknack into the boxes he'd acquired. Including the treasure trove of broken and neglected artifacts from years gone by we found in the upstairs window seat. Neither of us spoke it, but I'm sure we were both hoping the locked space beneath the main living area was empty.\n\nHe took the last couple of boxes down to the garage for the charity side while I began the dirty work: cleaning all of the hard surfaces. Even if most of them would eventually be demolished, I told him he shouldn't have to live in filth until then.\n\nI flopped back on the bed after I wiped down the bookshelves around the master suite's window seat and the countertop in the bathroom. I had over-estimated my own strength when it came to lifting furniture. Maybe we should have left it for when Malcolm could help us. But it was done now. I looked up and groaned. How the hell were we going to get the wheel off the wall? Not to mention dismantle the atrocity beneath me that someone had once considered a good idea. I was contemplating bringing up the chuck-over-the balcony idea again when Stefan returned.\n\nHe sat beside me on the bed, breathing heavy, as if he'd run up the stairs. \"Does Malcolm have any tools? We'll need them to take apart those beds downstairs. That is, if you're still up for it.\"\n\nI thought of where the toolbox might be at the mansion. \"I'm sure he does. Are you planning to donate, or should we have a bonfire in the sacrificial pit your aunt calls a fireplace downstairs?\"\n\n\"Funny. I'd like to donate the frames if possible.\"\n\nI sat up and started to scoot off the custom-made mattress. My muscles begged me not to move, their fervent plea leaving my lips as a long groan. The bed was actually pretty comfortable. I bet I could have a great nap on it. Too bad it needed to go. And I didn't live here.\n\nStefan grabbed my hand, stopping me. \"How about we take a break?\"\n\n\"What?\"\n\n\"A rest. A breather. A timeout.\"\n\n\"Oh, okay.\" I thought about lying down again, but then I considered something. \"Are you hungry?\"\n\n\"Ravenous.\" He moved his other hand to brush the back of his fingers against my cheek as he whispered, \"I've missed you.\"\n\n\"I've missed you, too.\" I wanted to close my eyes, yet I wanted to look at him. His constant touch made my blood race. I wasn't sure if it was from nerves or desire, though.\n\nWe'd sat on the mansion's porch yesterday, and we'd been together all morning. But this was the first I'd had time to stop and think about the implications that we were alone. Really alone. Maybe because this atmosphere was different. It was a bedroom. His bedroom, for now. I'd not been with him in an intimate setting like this since that hidden room in his den. And that encounter had been unsettling.\n\nHe inhaled. \"You smell...\"\n\n\"Thanks. I bet you do, too. Glad we got that straight.\"\n\nHis breath tickled my neck as he exhaled. \"No, I was going to say you smell wonderful.\"\n\nI laughed. \"Like eau de sweaty model.\"\n\nHe chuckled softly. \"I want to ask a favor.\"\n\n\"Mmm?\" I nuzzled his hand as he palmed my cheek and stroked his thumb over my lips. I couldn't stop my eyes from closing this time.\n\n\"I want to make love on this bed before I get rid of it.\"\n\nMy eyes fluttered open. It took a moment for his words to sink in. To realize what he was saying. Then I sat up straight. \"What? With me?\"\n\nHe nodded slowly.\n\nI gulped. \"Like, right now?\"\n\nHe licked his lips.\n\nI started to tell him no. Absolutely not. But then I asked myself why.\n\nBecause I was married? But I wasn't anymore. Because my husband had died? That had been almost eight months ago. Because I didn't want to get into another Master/submissive relationship? Stefan had never indicated he was into that. Because he was going to abuse me? I couldn't use past relationships to judge him.\n\nMy body answered for me as his eyes visually stroked downward. My own eyes lowered, and I had to tip my head back to see his face fully. My breath came out of my nose as soft, short snorts. The constant ache from the muscles I'd not used until today suddenly dulled as ones deeper within were roused from a forced dormancy. These could not be ignored as they clenched, instantly remembering with great clarity what it felt like to be manipulated by a man.\n\nWho the hell was I kidding? I wanted him. Badly. And it wasn't like he'd chased me halfway across the world. He hadn't thought he'd ever see me again. This was fate. Still, I hesitated.\n\n\"I need a shower...\"\n\n\"I don't care. I want you just as you are. I've been patient for over half a year. Ever since I saw you again yesterday, I haven't been able to stop thinking about you. I didn't sleep at all last night. And then I've had to follow you around all morning while you're wearing that fucking T-shirt?\" He let out a growl.\n\nI gasped. His thumb entered my mouth. A moan escaped as I found myself falling backwards on the comforter. Then Stefan laid down beside me.",
        "My eyes caught the wheel on the wall again. I suddenly felt like I was in uncharted territory without a life preserver. No compass to guide me. I'd been with two men in serious relationships, and they'd both ended terribly. That didn't mean this one had to. Yet it didn't make me any less scared of taking the plunge. And Stefan had never said anything about long-term. He just wanted to fuck.\n\nMaybe that was the problem. I didn't want just a roll in the hay...or on the captain's bed, as it was. I wanted something more substantial.\n\n\"Daphne?\"\n\nI blinked and looked up into his eyes. His beautiful, blue eyes. I'd never realized how bright they were before. \"I'm sorry, you caught me off-guard.\"\n\n\"We don't have to.\" His voice was so soft, but I heard the disappointment in it.\n\n\"It's not that. I want to. I just don't know\u2014\"\n\n\"What?\"\n\nI broke our gaze and took a deep breath. \"I'm afraid.\"\n\n\"Of me?\" He rolled onto his back, as if I'd pushed him away.\n\nI was going to tell him to forget it despite my own increasing disappointment. But suddenly, something Becca's psychiatrist had told me echoed in my head. Although her ways had been unconventional, she'd still given good advice. That I needed to be honest with people, especially at a time like this. Stefan could kick me out of the house and walk away as a result. But that was his choice. He deserved to know what he was getting into, for however long it was.\n\nSo I swallowed the small knot that was forming in my throat and sat up, Indian-style. He watched me patiently as I briefly explained my past. What had driven a wedge between my husband and I. The reason for my hesitancy in Paris. Now. That I was wanting more than just a fling with him, but I feared that's all he wanted. He was going back to Paris eventually. He didn't have to say it. He'd come here for a purpose, and once it was complete, he'd be gone again.\n\nWhen I was done opening my heart to him, I said, \"Ultimately, I'm afraid that you won't want to be with me unless I submit. Unless I surrender all control. And I just don't think I can do that anymore. I don't want to.\"\n\nStefan's eyes darkened as he rose to a sitting position as well. \"Daphne, I'm not really into that part of the scene. The roleplay. The domination. The power exchange. I prefer the artistic aspect. Using my skills to capturing the art of rope technique\u2014even the erotic poses. To express emotions through pictures rather than words.\"\n\nI blinked rapidly, telling my heart to settle down.\n\n\"I enjoy making a beautiful body even more so. Showing off my work is like a designer who has created a new fall or spring collection. For the most part, a scene in the BDSM world is structured. There is a beginning and end. And when it's over, the actions and emotions experienced will disappear with time. But with photographs? It's timeless. You can experience the scene over and over again. Feel the same emotions as the model. Sense more. It's all up to the viewer's interpretation.\"\n\nI had been holding my breath when he'd first spoken. As I took in his words, instinct took over. My exhales were shaky. My hands trembled in my lap. He wasn't like the other men in my life. He was...normal. With a twist. Dare I hope?\n\n\"But know this: my hobby is separate from any relationship I have. I would be lying if I said I didn't imagine you in my photos. I do. I would love to see you at your full potential. In your most raw, absolute beauty. And after hearing your story, to portray your brokenness. To show how you've come through it all like the phoenix rising from the ashes. Well, all that, and you have a smoking hot body. But I would still want you even if you said no to the camera.\"\n\nI thought of being in the photos above his secret fireplace. Waiting patiently while someone\u2014Stefan?\u2014wrapped my body in colorful jute or hemp rope before he posed me for his lens. Both the thrill and the fear of it sent a chill through me. Much more than my previous fantasies of erotic moves and poses on the catwalk.\n\n\"I want to be with you regardless, Daphne. For however long you'll have me. We'll make it work.\"\n\nI blinked at him.\n\n\"Okay?\"\n\nI managed a nod.\n\n\"I want you. I want this.\" His free hand grazed my breast through my T-shirt, his thumb stroking over where my nipple was already puckering in my bra. \"But not if you don't want to.\"\n\nI whimpered as he removed his hand. \"Stop teasing.\"\n\nStefan growled. \"I have one request.\"\n\n\"Anything.\" The word came out on breathless whisper before I thought of the ramifications.\n\n\"Tell me what you said to Edward that night of Pauline's show. When you stopped him from smacking your ass. Which I do have issue with. The smacking, not you stopping him. I'm surprised the other girls tolerated it. I spoke to my mother about it. She's\u2014\"\n\nI let out some sound that was a mixture of a laugh and a sigh. \"You're killing the mood.\"\n\n\"Sorry,\" he said, his voice very soft. He barely caressed the underside of one breast. \"Tell me.\"\n\nWhen he didn't put his hand back\u2014which surprised me because he would be losing out as well as I would if he ended this now\u2014and my muscles clenched, wanting to feel his touch again, I gave in. \"Fine. I told him, 'Don't start what you can't finish.' As if he had a chance with\u2014Ah!\" I gasped as Stefan pinched my nipple, making my back arch.\n\n\"Oh, I always finish,\" he chuckled and returned to stroking my breast. It was light at first, caressing all over, still teasing me. But as he leaned in to kiss me, his motions became more intent, moving from the underside up to the nipple.\n\nHis mouth was so warm as it covered mine. I gripped the back of his head, holding him against me. His arms wrapped around me as we laid down again. Then he rolled over my body, our limbs spreading out as we made full use of the expansive mattress beneath us.\n\nWe reminded ourselves what the opposite sex felt like. Our tongues played along with our hands. And when he finally broke the kiss, we were both panting heavily.\n\nThen he froze. \"Shit. I don't have any condoms.\"\n\n\"I don't fucking care right now.\"\n\n\"But Daphne...\"\n\nI cupped his face, licking my lips as I caught my breath. \"Do you want me?\"\n\n\"Of course I do. I just\u2014\"\n\n\"Then quit stalling. Trust me.\"\n\nHe growled and leaned down to run his tongue and lips along my jawline and neck. \n\nI closed my eyes again. Living in the moment. Gasping as his hand slid between my legs and stroked me through my jean shorts. I groaned, though, when he released the button.\n\n\"Having second thoughts yourself?\" His voice rumbled against my neck where he was nuzzling.\n\nI shivered as his tongue licked behind my ear. \"No, just a little embarrassed. I haven't shaved. There.\"\n\nDrake had always preferred me bare. I had slacked off in the past year, though. It had been kind of nice not having to worry about it. Going au naturel, although I'd kept it tidy. But now that I knew I was going to have sex with Stefan? I wish I'd kept up the maintenance better.\n\n\"I don't mind, Daphne.\"\n\n\"I shouldn't either. Sorry, it's just I'm used to...well...\"\n\n\"Easily remedied, my dear.\"\n\nSuddenly, he was no longer beside me. \"Stefan?\"\n\nI opened my eyes to see him disappear into the bathroom. I propped myself up with my arms behind me. There was the sound of him rustling around in there, opening doors, and then the water running. When he returned, he had a small, black bag under his arm with a towel flung back over his shoulder. He was also carrying the basin I'd used to wipe down the shelves. I hoped he had cleaned it out.\n\nHe saw me watching him and stopped. His mouth screwed up for a moment, as if he was reconsidering this decision. Then he approached the bed again and set the basin on the floor. I heard water sloshing around in it. \"Lie back.\"\n\nI yielded to his request, realizing he was going to shave my fucking pussy. Before I could object\u2014as if I wanted to\u2014he grabbed my ankles and gently pulled me to the edge of the bed so that my legs were hanging over at my knees. One by one, he lifted my feet and removed my tennis shoes and socks, his eyes still on mine. Neither of us spoke as his hands wrapped around my calves and glided up my legs until they reached the bottom of my shorts.\n\nI bit my lower lip as he slid his fingers under the hem on each leg and ran them along my thighs, first outward and then inward. Unconsciously, I parted my legs further. Which made him smile.\n\nHe finally broke eye contact as he moved to the hem of my T-shirt and bunched it up at my waist. Slowly, as if unwrapping a desired gift, he lowered the zipper. He parted the fabric to expose a tiny triangle of material from my panties then stopped. I could hear his heavy breathing.\n\nI rose up to my elbows again and held my own breath as he finally eased the denim over my hips.\n\nHe stopped again as soon as my panties were fully revealed, my shorts halfway down my thighs. Then he leaned in and pressed his lips to my bare belly. He lifted his eyes to mine again as he circled his tongue around my navel and dragged it down to the deep dip of the cotton waistline. His moan echoed deep within me, making me gasp softly.\n\nStefan planted kisses along the elastic waistband. Along the joint where my legs met my pelvis. Down into the space where my thighs curved inwards. It felt like butterflies fluttering over my skin.\n\nHis eyes lowered as he pressed his mouth ever so lightly against my covered mound.\n\nDespite the barrier, I felt the heat of his breath and the dampness of his tongue as he licked me. The shivers that ran through my body had me clenching the blanket and comforter. If not for the way my shorts bound my lower extremities together, I would have spread my legs and forced his head down between them.\n\nTo my slight dismay, he abandoned teasing me and removed my shorts the rest of the way. My panties followed suit. Those, he held up to his nose\u2014his eyes closing momentarily.\n\nOh. My. God.\n\nHe stood over my half-naked body, his eyes focused below my waist. My hips arched slightly on their own. The corner of his mouth turned up.\n\nStefan whispered, \"Beautiful,\" as he gently parted my legs and propped my bare feet on the mattress. Then he knelt at the side of the bed.\n\nI felt frozen. In awe. Any fear or embarrassment I'd had before was gone. Now, I was just curious.\n\nHe kept his gaze from mine as he rummaged through his little black bag. As he pressed his left hand on the inside of my right thigh. Used his right bicep to keep my left knee from closing.\n\nWhen I heard the buzzing sound of his electric razor, a shudder raced through me, and he paused.\n\nI expected him to tell me to be still. When he did not, I knew he was letting me make the decision to continue or not. It was my out, but I didn't want an out. Not now. So I stopped wriggling and clenched the fabric beneath me between my fists, counting to ten until I relaxed. Only then did he proceed.\n\nI tried to think of something else. Laundry. Doing the dishes. All the cleaning we needed to do downstairs. It actually did keep me calm.\n\nOnce he'd finished what he could with the electric one, he wiped his hand across my mound before starting with the straight razor. Which brought my train of thought back to him. I tried to remember to breathe as he pressed and pulled at my skin while he worked, occasionally rinsing of the razor blade in the warm water.\n\nTwice, he ran the tip of the handle along my lips, making me shiver and moan. I sucked in my breath the second time, thinking\u2014and hoping\u2014that he would slide the handle up inside me. But he didn't, and I bit my lip in frustration.\n\nBy the time he was done, a combination of water and evidence of my arousal was dripping between my cheeks. He gently wiped me down with a wet rag, toweled me off, and then he disappeared into the bathroom again. I heard the water running once more. When he returned, he'd removed his shirt.\n\nI sat up and pulled my own shirt over my head before he could object. That made him stop mid-stride. When I went to remove my bra, I heard him growl.\n\n\"I want to do that.\" He crossed the room the rest of the way. Knelt before the bed again, his hands cupping my bare hips for a moment. Then he leaned in and kissed my sternum.\n\nI held onto his shoulders as his hands slid back and under my ass, scooting me closer toward him. I cooed, gripping him tighter when he nuzzled his mouth and nose against my breasts still confined in my sports bra. I was suddenly embarrassed that I hadn't put on one of my satiny sets of underwear.\n\nStefan didn't seem to notice. Or else he didn't care. And I forgot about it when I felt his tongue sliding beneath the edge of the material of the bra. Eventually, he tugged the left cup down so that my nipple was freed. Then the wonderful torture began again as he sucked and teased that delicate point.\n\nMy hands slid up to play with his hair, holding his head against me. I could easily come this way. In fact, I was so damn close. Something was holding me back though. It wasn't until he moved to my other breast that I realized I was waiting for him to tell me it was okay to have an orgasm. I was so used to it that even after all this time, I'd reverted to needing commands.\n\nI must have whimpered because he pulled back.\n\n\"Are you okay?\"\n\nI opened my eyes to see him watching him. His hand still held my breast, his thumb frozen over my nipple. \"Um, yeah.\"\n\n\"What is it?\"\n\n\"I don't know if I can...\" My gaze dropped. \"For so long, I've trained myself not to...\"\n\nHe released his hold and cupped my chin instead, gently lifting it. Refocusing our eye contact. \"Daphne, it's okay to let go. Don't wait for my permission. Just feel.\"\n\nI automatically said, \"Yes, Sir.\" Then I cringed. \"Dammit, I'm sorry.\"\n\nHe growled at me, his thumb brushing over my lips. \"We're going to have to work on reprogramming your instincts so you can just enjoy sex.\"\n\n\"Who said I'm not enjoying this?\" I fell back and spread my legs, cupping my right breast through the cottony cup that still encased it. I crooked a finger with my left hand and licked my lips.\n\nHis exhale shook his entire body as he stood. As he stripped the rest of the way. Then his cock sprang free. Long and not too thick, ribbed with veins and a perfectly smooth head on top.\n\nI moaned. Loudly.\n\nGood, Lord, forget modeling. He could make a fortune as a porn star with that thing. With that body. He was\u2014in a word\u2014breathtaking.\n\nAll six-plus feet of him stepped forward in his naked glory. I thought he was going to climb on top of me and mount me. I wouldn't have complained. But he knelt at the edge of the bed again. Slid my legs over his shoulders. And with his eyes on me, he lowered his mouth to run the flat of his tongue across my now-smooth pussy.\n\nMy whole body arched and froze, along with my cry. I stared at the ceiling as I felt him part my already swollen lips with his fingertips and lick his tongue over my clit. He lapped at the fluids that still ran down to my crack. Teased at my entrance but didn't invade it.\n\nHe covered every inch of me as if surveying his own handiwork. Alternating between licking, kissing, and sucking. All the while, the scruffiness of his jaw lightly scraped against the insides of my thighs.\n\nI mewled. Gasped. Panted. I wanted to come. But I didn't want him to stop.\n\nAfter some time, he switched to caressing with his hand. I moaned long and loud when he slid one finger up inside me. His tongue flicked my clit again as he added a second finger. Now, his knuckles bumped against my shaved mound each time he thrust inward.\n\nI cooed as my body rippled from his leisurely strokes. I moved my hips up and down, back and forth, trying to guide him where I wanted him while playing his game as he teased and seduced me all at the same time. I clutched at my breasts, loving the feeling of reckless abandon coming over me.\n\nNo rules. No willful release of control. Just raw emotion.\n\nSuddenly, he stopped moving. I struggled to open my eyes, gasping and licking my lips as I tried to figure out what had happened. Our gazes met just as I felt him curl his fingers, rapidly pressing upwards.\n\nI came, screaming and thrashing.\n\nHe kept torturing me with his tongue and now his thumb while his arms around my thighs held me tight. Only when I'd settled down did he release me.\n\nI was still shuddering as he climbed over my body. He pulled down one strap of my bra and suckled my breast like a hungry babe. For the slightest moment, I thought about my daughter, especially as his hand snaked down to caress my belly. But when his teeth nipped the swell of my breast, I flung my head back in a silent cry and the thought flittered away.\n\nHis fingers were between my legs again. He didn't touch my G-spot this time but simply stroked in and out, the heel of his palm pressing against my clit. I was quickly back on the edge. A loud gurgling of moans escaped as I bucked on the bed, trying to get him deeper within me. His mouth covered mine as he brought me to a second release.\n\nHe removed my bra while I floated back down to earth. I felt him move me fully onto the bed. Crawl over me. I whimpered when his hand brushed against the inside of my thigh as he dragged his cock between my swollen lips. Rubbed it against my clit. Teased at my entrance. Then ever so slowly, he pressed into me, pausing every few seconds before continuing.\n\n\"Oh, God!\" My fingers dug into his arms.\n\n\"You are so fucking hot,\" his husky voice said against my ear.\n\nMy breaths were sharp inhales timed with each forward motion as he stretched me. Filled me. Each new movement sending shivers rippling through my whole body.\n\nAs I remembered he wasn't wearing a condom, elation bubbled up within me and came out as a joyful cry. My pussy undulated around him, gripping and pulling him in further. The skin-on-skin contact was fucking amazing. I didn't care what the repercussions were. I wanted this. I needed it. I deserved it.\n\n\"Damn, you feel so good,\" Stefan groaned once he'd completely sheathed himself. He lay still, holding my face between his palms. Kissing me softly as my body adjusted to his invasion. The full weight of him on top of me warmed me. Reminded me that sex could be so damn good.\n\nI whimpered, suddenly desperate and confused about what I wanted him to do. I thoroughly enjoyed the way our bodies were connected. The slow burn of taking our time. Yet I also wanted to feel him thrusting into me, too. Fucking me. Feeling the strength of him overpowering me. Bringing me ultimate pleasure. His hand spanking me... I groaned. Old habits die hard, I guess.\n\nHe must have sensed something was off because he whispered for me to open my eyes.\n\nHis face was blurry as I obeyed. I blinked and felt a tear trickle down my cheek. He brushed it away with his thumb.\n\n\"What's wrong?\" He didn't sound annoyed, but truly concerned.\n\nI closed my eyes and reopened them slowly. \"I want to stay like this forever. But I also want more. I want it fast. Slow. Rough. Sensual. I'm a mess.\"\n\nHe brushed at my sweat-dampened hair. \"No, you're not.\"\n\nI let out a soft cry as he twitched inside me. \"I want what I've had before. What I'm used to. But I don't want to want it. Not anymore. I want you to help me get over it, like you said.\"\n\n\"I will. We have all the time in the world.\"\n\n\"But you're going to go back to Paris\u2014\"\n\n\"Shh. I'm right here. I'm not going anywhere. I told you I'd wait for you. I thought I'd lost you once. Do you think I'm going to let you go now?\"\n\nI choked back a cry.\n\n\"Will you trust me?\"\n\nI nodded. Then I trembled as he started to pull out only to glide back in. But only a little. It was pleasurable torture.\n\nAnd so he set the rhythm, stoking the fire within me until I burned like never before. He drew out my moans as he built up the momentum. Silenced my cries with his kisses. When he rose over me, my body arched in an attempt to follow his. His mouth coaxed my neck and breasts. Urged me to hang on. And I did, with my legs wrapped around his, my hands clutching his back.",
        "Together, we fell over into bliss. It was all I'd ever imagined and then some.\n\nHe pulled the anchor blanket over us afterward and hooked one knee over my hip, hugging me to him while his fingers lazily stroked my arm. \"You are amazing.\"\n\n\"You're not so bad yourself.\" I tilted my head back with a smile. \"Was it worth the wait?\"\n\n\"Absolutely.\" He kissed me softly. \"But please don't make me wait another eight months before we can do this again.\"\n\nI just laughed and traced his features with my eyes. \"When did you cut your hair?\"\n\nHe reached up and felt his head, as if he hadn't realized he no longer had the carefree waves in the back and on the sides. \"Last week. Thought it looked more professional. Less like the model I'm not. I can grow it out again.\"\n\n\"I like it short.\"\n\n\"Oh, okay.\"\n\nI felt his stomach rumble under my hand. \"You know, if you're still hungry, we'll have to get dressed and go back to Malcolm's house to find food.\"\n\nStefan groaned. \"I don't want to move.\"\n\nMy own stomach rumbled then, and we both laughed. \"We may not have a choice.\"\n\n\"I could have something delivered.\"\n\n\"And at least one of us will have to put on clothes to answer the door. Besides, we need to look for those tools.\"\n\n\"Oh, so the fun is done?\"\n\nI untangled my limbs and crawled off the bed, making sure to wiggle my bare ass at him. \"I'm sure I'll need a shower after all the hard work we're going to do this afternoon.\"\n\nStefan growled. \"Who's the tease now?\"\n\n###\n\nWe'd already removed anything not nailed or glued down. So we spent the rest of the week dismantling the bunk beds, tearing out countertops, and ripping up flooring. Stefan met with a contractor on Wednesday. And a locksmith was able to open up the lower level which revealed just a cement slab and a lot of cobwebs between the vertical support poles. The saddest day was Friday when a couple of men showed up and started sawing away at the circular bed, cutting it into smaller pieces.\n\nEach day after we'd finished working, we took a shower back at the mansion, ate dinner, and sat on the porch watching the waves before we made love and fell asleep in each other's arms. It was wonderful.\n\nAnd yet, I knew in the back of my mind that it couldn't last. This wasn't my home. It wasn't his.\n\nI tried not to think of what would happen when Malcolm and Becca returned. It was hard enough that I'd encroached on their home for so long. Stefan would need to get a hotel room in town. Maybe I could stay with him. We'd discuss that hurdle soon enough. Until then, I enjoyed the time alone with him.\n\nKnowing that the contractor couldn't come back until Monday with preliminary plans, we slept in on Saturday. I was the first to wake, and when I came back from the bathroom, I stood next to the bed, my body shivering from the cool breeze blowing in the open window. Outside, I could hear the rain drumming on the rooftop of the second floor porch.\n\nStefan was on his back, his right arm still laid out from where it had been under my neck. The other was bent and up by his head. I'd flung the covers off me in my rush to relieve myself, leaving his right leg exposed. The sheet and blanket covered his groin, left leg, and part of his chest on that side. He looked so peaceful. And vulnerable.\n\nWith an evil grin, I ran buck naked down the hall of the mansion and warmed a washcloth. Back in the bedroom, I moved the sheet aside and groaned, licking my lips. Even flaccid, Stefan was magnificent.\n\nI started by lightly running the wet cloth over him. Warming him. Then I wrapped it around his cock, stroking with the slightest pressure. When I found that sitting next to him grew uncomfortable, I switched to kneeling. But that was awkward as well. In the end, the best position seemed to be part his legs and lie between them. Which brought my face in level with his cock.\n\nHe finally stirred as I removed the cloth and wrapped my hand around him. I darted my tongue out to lick the tip. To tease the precum from the eye. I had just taken the head between my lips when I heard his gasp then a guttural groan.\n\nHis hands rested on my head, guiding me.\n\nWithout skipping a beat, I lifted my eyes to his face and slid more of him into my mouth.\n\n\"God, woman, if I could only wake up to this every morning.\" His voice was that sleepy, gravelly sound. And damn, was it sexy.\n\nI just smiled and continued pleasuring him. He stroked my hair, holding it back as I bobbed my head over his waist. He not only felt good inside me, he tasted good, too. I hummed against him, and his hips jerked up.\n\nHe didn't let me go too much longer before he tugged on my hand. \"Come here, beautiful.\"\n\nI licked my lips as I crawled up his body, slowly settling over him. We both gasped as he slid into me after a little resistance. Once I was seated on his pelvis, he cupped his hands over my hips.\n\nStefan ran his fingers up my sides. Caressed my breasts. Teased my nipples. Stroked my back. All while I rocked back and forth, feeling him grow harder inside of me. Filling me.\n\nOccasionally, he thrust his hips up when I mewled as he hit a good spot. But otherwise, he let me control the speed and the intensity down below. Our moans mixed, fighting with the sound of the rain as it grew heavier. His hands focused on holding my waist, keeping me steady as I moved faster.\n\nI had just leaned forward, my knees straddling his hips, my breasts crushed to Stefan's chest as he pumped his cock in and out of me like a piston when I heard someone screech my name.\n\nI screamed. Stefan clutched me to his body and rolled me to the side, pulling the comforter over us in one smooth move. Through my hair that had fallen over my eyes, I saw Becca standing slack jawed in the doorway, one hand on the slight swell of her belly.\n\n\"Oh, God! I'm so sorry, Becca.\"\n\nShe was hiding her eyes, even though we were covered up now. \"No...no...it's my fault. I didn't wait for an answer after I knocked.\"\n\nMalcolm appeared behind her. \"What's all the racket?\"\n\n\"Honey, we have company.\"\n\nMalcolm stepped further into the room and switched on the light. \"Oh, shit!\"\n\nI blew my hair out of my eyes. \"Welcome home.\"\n\n\"Hey, Malcolm,\" Stefan said, sitting up and pulling the comforter with him.\n\nI scrambled to keep the sheet over my breasts as I sat up, too.\n\nMalcolm blinked and shook his head. \"Stefan?\"\n\n\"Wait, you know this guy?\" Becca said, still glancing between all of us.\n\n\"We were the boys of summer Don Henley sings about,\" Stefan said with a laugh.\n\nI punched him in the shoulder.\n\n\"Ouch! What was that for?\"\n\n\"I wouldn't brag about that,\" I mumbled.\n\n\"How did\u2014 What are\u2014 Stefan?\" Malcolm fumbled with his motions as well as his words as he crossed his arms, put his hands in his pockets, and eventually just let his arms flop at his sides.\n\n\"Why don't you let us get dressed, and we can explain downstairs?\" I said.\n\n\"That sounds like a good plan,\" Becca said, ushering her husband\u2014who's jaw kept moving although no sound came out\u2014back into the hall and closing the door behind them.\n\nI flopped back with an oof, flinging my arm over my eyes.\n\n\"Well, hey, now you don't have to worry about how to break it to them.\"\n\nI swung out with my other fist, hoping to catch his arm again. I met a pillow instead and groaned.\n\nFive minutes later, we were clothed and sitting in the living room on the couch across from where Malcolm stood by the fireplace and Becca sat in the chair between us. Why did I suddenly feel like a child who had been caught out after curfew and was being reprimanded by her parents?\n\nThrice, Malcolm had started to say something but stopped himself. He'd scrubbed his hand over his face each time before turning back to the wall.\n\n\"Are you mad?\" I asked, my voice a little squeaky.\n\n\"Mad? No. Surprised? Yes. I can't believe\u2014 How did you\u2014\"\n\nStefan cleared his throat. \"We met in Paris. Daphne worked for my mother.\"\n\nBecca raised her eyebrows at me and crossed her arms. \"Sounds like you forgot one big detail when you shared about your trip.\"\n\nMy cheeks heated. \"It's complicated.\"\n\nMalcolm finally sat down in the other chair, closest to Stefan and across from his wife. \"Have you been in Europe all this time?\"\n\n\"No,\" Stefan said. \"I traveled the states after graduation. Helped my mother when she started her modeling agency up north. Then we moved to London. Madrid. Followed the fashion circuit. Been about six years now that we've had the agency in Paris. It was just this past winter that she joined forces with Muriel. If she hadn't, I wouldn't have met Daphne.\"\n\n\"And the two of you?\" Malcolm wagged his finger between us.\n\nStefan shook his head. \"I persisted for six months, brother. She finally decided to be friends at the end. I threw out a bone on a whim, but then she flipped the tables on me and rattled my own.\"\n\nMalcolm's eyes widened. \"She rattled your bones? Seriously?\"\n\nI sighed. \"I found out he's into erotic photography. Artistic rope techniques, mostly. You know I've tried to put that life behind me.\" I lowered my voice as I added, \"So I told him I was a masochist.\"\n\n\"What?\" Becca was laughing now. \"We hoped you'd become more assertive. You went full women's lib.\"\n\n\"I was scared!\" I threw my hands up in defeat. \"I was leaving the next day. We were all alone in his private gallery. There was too much temptation. I blurted out a lot of stuff. I wasn't thinking straight.\"\n\n\"It didn't work, obviously,\" Malcolm chuckled. \"He's like a lost puppy who followed you home.\"\n\n\"Well, not exactly.\" Stefan put his arm across the back of the couch as he told them why he was in Delaware. It took every bit of strength not to take his open invitation and lean into his body. We were still sitting apart when he finished with, \"I'd let Daphne go, against my better judgment. Sure, I thought about trying to find her, but she'd made it clear her life is over here. I'd resolved that I'd never see her again. And then she opened your door. It was fate. The rest is, well, history.\"\n\nMalcolm filled Becca in on the backstory of how he knew Stefan. How they had lost touch after they'd gone off to college. And he kept stopping himself to say he couldn't believe Stefan was really here.\n\nI explained what we had done with the house this week. What the plans were. That they\u2014Malcolm and Becca\u2014should come check out the progress. Give their insight. Then I apologized for Stefan staying here without asking their permission.\n\nMalcolm told me to forget about it. I wasn't a kid they were going to punish\u2014as much as I still felt like it at the moment. But he teased that next time, they were setting rules about having boys over. Which made Stefan chuckle and me squirm a little as I pressed my lips together to stop a moan. I'd never get tired of hearing him laugh.\n\nBecca hadn't made a sound throughout, but her eyes were shiny and her cheeks looked like they might burst if she smiled any wider.\n\n\"Get it over with,\" I said, rolling my eyes that were also misting over.\n\nShe jumped up from her chair and gave me a big hug. \"I'm so happy for you.\"\n\n\"Could you use an extra pair of hands with the house?\" Malcolm said, obviously over the sentimental part of the conversation.\n\nStefan nodded. \"We're in the demolition stage now. Just waiting for the contractor to get back to us on Monday so we can get started.\"\n\n\"Did you hear that?\" Becca whispered in my ear as she squeezed into the space on the other side of me on the couch. \"We? Us? He's smitten.\"\n\nI grinned, glancing at Stefan as he carried on the conversation with Malcolm. My heart swelled suddenly. That empty space that had longed to be filled? It no longer ached.\n\n\"Yeah, I know. It's great, isn't it?\"\n\n###\n\nThe house of three became four again. And a half, with my niece or nephew on the way. The second that Stefan tried to excuse himself to make a phone call with the nearest hotel, Becca morphed into mother-mode and insisted he stay with them\u2014us\u2014while his aunt's house was being renovated. Which made it very convenient for Stefan and I to spend quality time together...including between the sheets.\n\nWhile it may have seemed odd that we were shacking up at my in-law's house, the arrangement worked out well for all of us. The guys demoed during the day while I helped Becca around the mansion or went shopping with her for baby things. And we all ate meals together, like one big, happy family.\n\nSome nights and on the weekends, Stefan took me out on official dates. Dinner and dancing. Walks on the boardwalk. Picnics on the beach. Drives up the coast to see where he grew up.\n\nIt was a normal life. A normal relationship. I loved every minute of it.\n\nI'd not been to the beach house since the beginning of the month. The guys had said it was just filthy with the construction, and us women should stay away for safety reasons. So when Stefan suggested I come check it out one rainy day, I jumped at the chance.\n\nI was disappointed as I walked up the old stairs and through the screened-in porch. I'd hoped that would have been fixed first. But my spirits lifted when I saw that the original walls of the kitchen were gone. The north-end where the fridge and stove had been was now extended several feet into the previous bathroom. And apparently, the second bathroom as well.\n\n\"Um, Stefan, isn't the outside of the house on the other side of that wall?\"\n\nHe had his hands on his hips and a big smile on his face. \"Yep.\"\n\n\"What about the other bathroom? The one across the hall? The one you were going to make bigger by combining it with the third guest room?\"\n\n\"I moved it.\"\n\nI squinted. \"You moved the bathroom.\"\n\nA big nod from him. \"Yep.\"\n\n\"What about all the plumbing?\"\n\n\"You saw the space below us. Completely open. The plumber said it wasn't an issue. Plus, the pipes needed to be updated to code. No better time to make changes than now.\"\n\n\"So if the kitchen goes all the way to the end of the house, where is the bathroom going? The guest bedrooms? Laundry? A pantry? Walk me through it.\"\n\nHe took me by the arm and guided me to the living room instead. \"They aren't laid out yet.\"\n\n\"Oh, okay. So what have you two been\u2014 Oh, my!\"\n\nWe stopped in front of the fireplace that was ablaze with crackling logs, evidence that he'd been over here already this morning. The heat beckoned me closer. While it would be August in two days, the weather outside and the extensive openness of the house right now made it quite chilly in here.\n\nBut what struck me was that the fireplace had been refaced with rough-hewn flagstones in varying sizes and shades of gray and tan. Some stuck out as little shelves, creating more depth. And it didn't just cover the front. The stone went all the way up the wall past the second floor and ended on an angle following the roofline. There was no mantle, but that was okay. It didn't need it.\n\nMy cheeks hurt from grinning. \"It's gorgeous!\"\n\n\"I got some excellent advice.\" He helped me sit down on a pile of blankets and pillows that had been spread out over the new floorboards. That's when I noticed the picnic basket by the hearth. The bottle of wine.\n\n\"What's the occasion?\"\n\n\"Can't I have a picnic with my girlfriend by the fire?\"\n\n\"Of course you can.\" I smiled as he gave me a quick kiss. \"But won't she be jealous when she finds out you're here with me?\"\n\nStefan shook his head with a smirk and poured us each a glass of wine.\n\nI watched over the rim of my glass as he opened the picnic basket and removed two plates. Two napkins. And then a square container.\n\nHe gently took the glass from my fingers and set it aside as I scrunched up my face. \"It's not the same as being there in person, but...\"\n\nI took the container he held out to me. Pried open the lid. And was suddenly glad my hands had been free because I would have spilled wine on myself.\n\n\"Stefan!\" I kept looking up at him and down at the four cheese pastries in the plastic box.\n\n\"Just a little taste from home.\"\n\n\"But how did you\u2014\"\n\n\"Mother to the rescue.\"\n\n\"I could kiss her!\" My stomach growled loudly, and I licked my lips.\n\n\"Will I do for now?\"\n\nI blinked at him. Realized what he said...what he meant. A soft coo met my ears as he pressed his mouth to mine. Then he took the box of pastries and put one on each of the plates.\n\n\"The cappuccino doesn't travel well. Sorry.\"\n\n\"No, it's fine. Well, more than fine.\"\n\nHe chuckled. \"Just eat, Daphne.\"\n\nWhen we'd devoured all of his surprise and drank half the bottle of wine, we laid back on the pillows. The warmth of his body and the fire along with the rain outside made me feel sleepy. I yawned and turned into his body, cuddling closer.\n\n\"Hey, don't drift away yet.\"\n\nI opened one eye. \"Then you shouldn't have made this so comfortable.\"\n\n\"I want to ask you a question. Talk about something.\"\n\n\"Or maybe I was wrong.\" Both eyes were open now. And I had a sudden queasy feeling in my stomach. I hoped it wasn't the combination of pastries and wine. I must have made a face because he snorted softly and smiled.\n\n\"Do all women think it's bad news when a guy says they want to talk?\"\n\nI narrowed my eyes at him. \"What do you think? Don't you feel that way when we say it?\"\n\nHe seemed to think about it for a moment and nodded. \"Yeah, I guess so. But guys don't usually initiate a serious conversation like that.\"\n\n\"You're stalling.\" For some reason, I sat up. Natural instinct kicking in, I guess.\n\n\"Sorry.\" He propped himself up on his left forearm. Not exactly sitting like I was, but no longer lying down, either. And the stance reminded me of a model posing, which was distracting. \"You know my aunt asked me to put the house up for sale when the remodeling is done.\"\n\nI nodded slowly. Then I gestured to the barebones of the area around us. \"At this rate, it'll be a year.\"\n\n\"There has been a...delay.\"\n\n\"Oh, no! Is your aunt okay?\"\n\nStefan waved his right hand at me. \"She's fine. Living it up in Paris. Mother has been indoctrinating her in the world of fashion.\"\n\n\"Oh, good. So what is\u2014\"\n\n\"I've been talking to Malcolm.\"\n\n\"You're going to move in? Here?\" My heart skipped a beat. Did I dare hope? And why did my brain jump right to that conclusion?\n\nThe corner of his mouth twitched. \"Not exactly.\"\n\nMy smile fell again. \"Oh.\"\n\n\"You'd like that, wouldn't you?\"\n\n\"Well, yeah. You'd be here, near me.\"\n\n\"Near you?\" Stefan sat up the rest of the way and reached for my hands. \"Daphne, honey, you can't live with Malcolm and Becca forever.\"\n\nMy lower lip trembled. I felt a tear in my eye. An ache in my chest. He was right. I knew it. I just didn't want to admit it. But I managed a nod.\n\nHe squeezed my hands. \"I told you before that I'm not going anywhere. I'm not leaving you.\"\n\n\"I don't understand.\"\n\n\"My aunt has given me ownership of the house. I want you to live here.\"\n\n\"But\u2014\"\n\n\"Us to live here. The house is unfinished because you deserve to make it the way you want.\"\n\nI sucked in my breath, blinking away my tears. I opened my mouth, but nothing came out.\n\n\"Daphne?\" He lifted my chin and tried to look into my eyes.\n\nEvery time I blinked, my vision blurred. I had to swallow twice before I could find my voice. \"What are you saying?\"\n\n\"I'm asking if you would move in with me.\" He glanced around. \"Here. Make this our home?\"\n\n\"What about Paris? Your mother? The business?\"\n\n\"They are nothing without you. Don't you see that?\"\n\n\"Don't give up your life.\"\n\nHe cupped my cheek with a warm hand, his thumb brushing away a tear. \"I'd do it for you.\"\n\n\"No. I did that for someone else. Twice. It was a train wreck both times. I won't do that to you.\"\n\n\"It's my decision. I'm not those other guys.\"\n\n\"Stefan, I\u2014\"\n\n\"We can visit Paris. Whenever you like. My mother is sad I won't be there as much, but she understands. You have family here. She has my aunt now, so she won't be alone. And I can still run the business. It's mostly online and through phone calls as it is. You saw how uninvolved I was with the day-to-day functions. Besides, I would never take you away from Becca. From Malcolm. Not if you don't want to.\"",
        "I shrugged. \"I'd be okay.\"\n\nHe gave me a lopsided smile. \"I know you would, honey. It's no secret what your time in France has done for your morale. But we also know you'd be wishing you were back here. Remember the conversation we had last Christmas? How sad you were? How you missed everyone? The traditions?\"\n\nI nodded then shrugged. \"We could come home for the holidays.\"\n\n\"Daphne, do you hear yourself? If we're living in France...\" He put his other hand on my face, framing my damp cheeks. \"You've told me so many times that what you long for is finally finding the one place you belong. And you know it in your heart that you've already found it. Right here. This...this is home.\"\n\nA million different questions and thoughts raced through my head. But the one that stood out was: he was right. Again.\n\nHe cleared his throat. \"In case you need additional incentive to make up your mind...\"\n\nIt seemed like time stopped as Stefan maneuvered so he was on one knee. I saw him reach into the picnic basket. Remove a black box. Open it to show a sparkling emerald-cut diamond.\n\n\"Daphne Rockland, would you let me love you for the rest of your life? To help you make this house our home? To accept me into your family? To start our own family, God willing? Will you marry me?\"\n\nMy mind suddenly cleared of all the excuses. All of my doubts and insecurities. I was the new Daphne. The one who had crossed the sea and proven she could be independent. But that didn't mean she had to be lonely. I blinked away my tears and covered his cheeks with my own hands.\n\n\"Oui, mon amour,\" I breathed more than spoke. \"Oui, je t'\u00e9pouserai. Je serais honor\u00e9.\"\n\n###\n\nStefan and I spent every day of August working on the house. Malcolm had to go back to work once school started, but we arranged for a comfortable chair and ottoman wherever we were so Becca could join us and keep her feet up. We refused to let her help other than to give her opinion on the layout as well as decorative choices. She complained at first, but she seemed to adjust quite easily to be the designated choreographer.\n\nDarryl and Ginger even came down on the weekends to help out. It was nice to see them both. He seemed very happy with Ginger. She was very sweet and mostly quiet, yet I saw that twinkle in her eye whenever Becca brought up anything related to kink. The three of us together could be big trouble. Especially when it came to our men.\n\nEvery night after I got cleaned up from all the dust and grime, I slipped my diamond back on my left ring finger and grinned like the Cheshire Cat. The house was coming together. And I had never been happier.\n\nStefan and I took a break in September to attend all of the Fashion Weeks. First New York, then London, Milan, and finally Paris. Everywhere we went, he seemed to know someone. He pampered me beyond belief. I'd never felt so special in my life.\n\nClaudette welcomed us with open arms when we arrived in France. I met Stefan's lovely aunt, Beatrice\u2014Bea for short, at her insistence\u2014who reminded me very much of his mother, just a little more conventional in both manner and appearance. Definitely not one to embrace the fashion world by choice, but she seemed to have adapted to her hew new lifestyle and held her own.\n\nBea told me stories of the boys growing up at the beach. How Stefan would come down south with her husband and kids while her sister and brother-in-law travelled, just as I'd assumed. How Malcolm was always such a good friend. She'd feared Stefan would regret accepting her initial invitation, knowing he may be left out when his older cousins did things he couldn't. But a little boy his same age had wandered over to their chairs on the beach that first day, and they'd been inseparable for years.\n\nIt made me proud to have brought the two friend back together, even if not intentionally. I was happy for them. I would have Becca, and Malcolm would have my fianc\u00e9. And of course, we would all have each other. Stefan seemed to have accepted that he was uprooting his life. Maybe it helped that he was going somewhere familiar, so it wasn't a complete change. Whatever the case, I felt no shame in my decision to stay on the east coast.\n\nClaudette and Bea threw us an engagement party that rivaled some of the after-parties for the fashion shows. It seemed outlandish compared to the small shindig we had with Malcolm, Becca, Darryl, and Ginger. Which was basically a bonfire out on the beach. I think I preferred that one over my future mother-in-law's celebration.\n\nIt was strange staying at the estate\u2014even as future family\u2014but I told myself I'd better get used to it. When I questioned if we would be staying with his mother whenever we visited in the future, he gave me an adamant no. He wouldn't do that to me. He'd look into finding us a vacation home. I told him about the flat I'd lived in for the six months last winter and spring. The one that looked out onto the little garden. I wouldn't mind staying there if his mother would allow it since she owned the building. He just grinned widely, his eyes sparkling.\n\nSpring Fashion Week in Paris was just like Winter Fashion Week. And just as I'd remembered it. The chaos of getting from one show to the next. The loud crowds of designers, paparazzi, and models all mixed together as the newest trends of clothes vied for the spotlight. It all made my blood pump faster. Harder. It was thrilling to be back.\n\nOf course, I started to second-guess my decision to not move here. But I knew I'd made the right one. Both about Stefan and where to live.\n\n###\n\nI woke up the morning of the second to last day a little sad that we'd be leaving soon. It didn't feel as bad as it had in May because I knew we'd be back. Instead, it was a postponement that nagged at me. Prior to the trip, we had talked about what I would do for a job after we got settled. Stefan had agreed to put the discussion on hold until we returned as long as I agreed to seriously consider all of my options. For the last few days, I had been content to focus on just being an engaged couple on vacation in the most famous city for love. But after tomorrow...\n\nWhen I rolled over, I noticed that Stefan was not in bed. I dressed rather sloppily in one of his button-up shirts over my jeans, opting to go without my bra. Which really was my only choice since I couldn't find it. I wondered if I'd left it in the secret den where we'd fucked to the backdrop of his erotic art last night. We'd streaked to his bedroom for round two. Thank goodness for the private hall behind the den...accessed through another secret door disguised in the wall. And for Stefan's dark shirt, now.\n\nI was wandering down the hall, popping my head into each of the rooms in his wing of the house, when Stefan rounded the corner ahead of me.\n\n\"Good morning! I'm glad you're up.\"\n\nI kissed him soundly on the mouth and sighed as he embraced me. \"Good morning to you, too.\"\n\n\"I have a surprise. Come with me.\"\n\nBefore I could say anything, he took my hand and practically dragged me after him. A minute later, we were outside in the cool, autumn breeze. It felt good as it kissed my skin...and puckered my nipples. I was glad I'd had the mind to pull my shoes on before leaving the bedroom. I'd remembered Claudette's look the last time she'd seen me barefoot. As if I was some hillbilly child. Had she forgotten how it felt to run around with no shoes...no inhibitions?\n\nWhen we'd reached the hedge maze, Stefan kept going. I giggled as he led me down the paths with green walls. I felt like we were two teenagers sneaking away to make out. I actually expected that when we found the center\u2014without any difficulty since he was leading\u2014and saw a small bench. But he walked right on past to another opening. And we followed the twists and turns once more.\n\nI was surprised when we stepped out into the openness of a space that was almost a mirror of the estate we'd left maybe ten minutes ago. The twisted tree arch over the entrance was almost the same. There was a winding path off to the right\u2014the opposite direction from the estate-side\u2014that I strangely assumed led to a gathering of willow trees surrounding a white gazebo.\n\nAhead was a gravel path over a slight incline. I held my breath as we climbed it. Then my arm was being tugged as Stefan continued for another two steps before he realized I'd stopped.\n\nA two-story building stretched out more than up in the middle of a grove of red and orange-tinted trees. It looked very similar to the estate house. The same color brick. Designs of the roofline. Arches on the upper windows. Just in miniature.\n\n\"It's the servant's quarters. Or rather, it was years ago,\" Stefan explained. He squeezed my hand. \"It's in excellent shape. Just needs to be dusted out. And of course, your unique touch added.\"\n\n\"Wait. What\u2014\"\n\n\"For when we visit. It's part of the estate, but separate from the main house. There is a private access drive. And plenty of room for other guests. Because you know Becca and Malcolm will never forgive you if you don't have room for them to stay with us if they visit, too.\"\n\n\"I don't know what to say.\"\n\n\"Speechless. I think that's a good response.\" He turned me around. \"Is this garden too big for you? I know it's not the same as the one you had at the flat.\"\n\n\"No. No. It's just fine.\" My heart was beating wildly now. I could live here, temporarily. Most definitely. And it would appease his mother. I hope he'd broken it to her easily that I didn't want to stay in her house every time we were here.\n\n\"You know, this is all mine someday.\"\n\nI gulped. Yeah, I'd figured that. At least somewhere deep in my brain. Of all the things I could have said or asked him, what came out of my mouth was, \"Is the only way to the estate house through the maze?\"\n\nStefan chuckled, which of course made my knees weak. \"No, I just thought it would be fun. It's also the most direct route. But you can walk around it. Or drive. Or ride a horse.\"\n\nI raised an eyebrow. \"Horse?\"\n\nHe grinned. \"The stables are on the other side of that ridge. Didn't I tell you my mother also raises purebreds? You can have one, if you like. I'll teach you to ride.\"\n\n\"Pinch me. This can't be real. It's too...perfect.\"\n\nStefan tweaked my nipple through the shirt, which made me squeal. His eyes widened. \"No bra?\"\n\n\"I couldn't find it,\" I mumbled as he kissed me.\n\nHe just growled and swept his tongue into my mouth. When he pulled back, he said, \"I guess that's a yes? You'll take the house?\"\n\n\"And the horse. And whatever else comes with it.\"\n\n\"How about me?\"\n\nI grinned wickedly and grabbed his hand. Thankfully, he followed me as I rushed down the winding path. I had been right. There was a gazebo mirroring the one on the other diagonal of the maze\u2014albeit with more wear and tear from lack of maintenance.\n\nStefan was gasping for breath as I spun him around, undid his pants, and shoved his shoulders so he was sitting on one of the benches inside. I knelt and wrapped first my hands and then my lips around his hardening cock. It took him a moment to snap out of his daze and put his hands on my head.\n\nI had him jerking beneath me in no time. Trying to thrust deeper into my throat. He must have been frustrated as he groaned and gripped my arms, trying to pull me upwards.\n\nI didn't need him to say what he wanted. I saw it in his eyes. Heard it in his strained breaths. I kicked off my shoes and yanked down my pants. Then I was moaning right along with him as he sunk into me while I straddled his waist with my knees on the bench.\n\nOut here in the wilderness with no one around, I let go of everything within me. Unafraid to be vocal. Raw. Completely open.\n\n###\n\nThe next afternoon, we packed up our bags and headed to the airport. I was exhausted but absolutely thrilled we'd come. As our plane climbed higher and higher, my mind spun with all of the new experiences. Attending the entire Fashion Week circuit. Finally seeing Paris in the fall. Walking down the Champs-\u00c9lys\u00e9es arm-in-arm under the colorful, changing leaves. Studying pieces at The Louvre. Him teasing me endlessly whenever I moaned in content after drinking real cappuccinos. Finding our new vacation house. Not to mention all of the sex. It was definitely a trip to remember.\n\nWe set our energy on full steam ahead once we got back. What had been mere thoughts in my mind were actually coming to life before us. While we had been gone, the contractors had installed all of the drywall and kitchen and bathroom cabinets, counters, and fixtures. We were down to the cosmetic features now. Painting. Flooring. Trim. Finally!\n\nBecca's belly reminded me of mine last year. Small, about the size of a volleyball. Her morning sickness had ceased as mine had around this time, too. When she wasn't resting, she was pouring over parenting books or talking all things baby. Much to the chagrin of Sue, her editor and agent who wanted her to start another series. I held my tongue when I heard Becca tell Sue her books used to be like her children, but now she was having the real thing so the stories would have to take a backseat for now. I was sure she could have written something in nine months. But I was just a model, not an author.\n\nI had a few tearful nights as I thought about Lilly. That she would have been almost a year old when she met her new cousin this coming February. That we would have had our first Thanksgiving and Christmas with her this year. But it was not to be. Stefan held me through those nights, rocking me back to sleep. Constantly reminding me that I was loved and cared for. And that I no longer needed to carry my burdens alone.\n\nAny day now, we would be ready to move out of Malcolm and Becca's home and into our own version of a beach house. I was giddy. And still in disbelief that I was really going to live here. With Stefan!\n\nWhile we didn't have a true foyer like the mansion did, the entrance made more sense as you walked into a completely open area. The kitchen seemed three times as big with the boxy light fixtures gone, raising the ceiling to the same level as the old dining area. No more ducking.\n\nOur new dining table had been moved to parallel the second-floor stairway, allowing the space just inside the door to be a small reading nook by the picture window that we'd made smaller and into two casement windows that could be opened to let in the sea air. All three areas now flowed much better into the living room.\n\nMy most favorite change had been the removal of the screen-room entrance. In its place was a front porch worthy of a beach house in this neighborhood. The stone columns and white railing against the newly-painted blue-gray house with white trim around the windows looked fresher. More welcoming. The wider, stone stairway with a landing halfway up made a big difference, too. It all led to the French doors that opened into the house. To hide the rest of the raised structure below, we'd added lattice against the house with some climbing plants and taller landscaping in other areas.\n\nAnd we'd been able to keep the porch on the second floor. It mimicked the porch below with the same railing. It also had a pergola at the west end with a padded, lounging bed that faced the ocean so we could relax outside out of the sun. It was also good for having sex under the stars, which we confirmed the night it was finished.\n\nThe new layout downstairs had allowed us to have two bedrooms side-by-side behind the wall of the fireplace, as well as a good-sized bathroom with a tub-shower combination. Perfect for overnight guests. But not too many. Definitely not for renters. And the contractor had been able to squeeze in an actual laundry room and small walk-in pantry to boot.\n\nUpstairs, the captain's yacht had set sail for the last time. The fireplace now mimicked the larger one downstairs, skylights had been installed to make it brighter, and we had a true king-sized bed to sleep in. Still, I'd miss that gigantic clamshell-like structure someone had once thought was a good idea to build.\n\nThe bathroom had been huge, so we'd taken part of it to create an extra room that was accessible through the loft walkway. I'd suggested a walk-in closet for me. He'd laughed. We'd settled on an office both of us could share.\n\nThe only space we hadn't touched was the empty space beneath the main floor. But I was happy to let the dust, cobwebs, and a slew of bugs who probably hadn't liked our invasion to continue their habitation. As long as it remained hidden from view outside.\n\nOur house no longer looked like a ship come ashore in an 80s movie but a truly modern home I could be proud of. A sanctuary on dry land. And I loved it more than any place I'd lived. Even the mansion. Probably because I'd had a say in what it would look like. And it had me anxious to start on the upgrades at our Parisian mini-estate house.\n\n###\n\nI woke up early the morning after we'd spent the first night in our finished home. When I stretched, I groaned as my muscles complained. Then I shivered from the cool breeze coming in across the room. Maybe it had been a bad idea to leave the windows open in November.\n\n\"Good morning, honey.\"\n\nI rolled over to see Stefan lounging beside me in bed on top of the comforter. He must have gotten up for a run on the beach as he was wearing a T-shirt and shorts. I yawned. \"Good morning, yourself.\"\n\n\"It's Thanksgiving.\"\n\nI raised an eyebrow to him. \"Already?\"\n\n\"Time flies when you're living at the beach, baby.\"\n\nI yawned again. \"Apparently. I'm just glad we don't have to paint anything else. Or hammer another nail to hang another picture. Every part of me aches. Even my eyes from looking at carpet samples.\"\n\n\"Well, it's all done,\" he chuckled. \"We've been invited to Malcolm and Becca's for the day. They're making a turkey. But we can stay home if you prefer.\"\n\nI closed my eyes for a moment and mentally told myself to wake up. I could sleep later. \"It's okay. What time do we need to go? Should we take something with us?\"\n\n\"We've got a few hours. And I bought a bottle of wine at the store yesterday.\"\n\nI reached up and ran my fingers over the stubble on his cheeks. \"So back to sleep?\"\n\nHis eyes glimmered. \"I had something else in mind, but if you would rather rest, that's okay.\"\n\nI nodded, giving him a sleepy smile as my eyelids already started to drift closed. \"I'm sorry. I think I'm paying the price for all the work we've been doing.\"\n\nHe kissed my forehead. \"It's okay, Daphne. I'll wake you an hour before we should leave, okay?\"\n\nI mumbled some form of affirmation and dozed off.\n\nWhen I woke again\u2014on my own\u2014I had to pee. Like I'd drunk a gallon of water. He was in the bathroom when I rushed in.\n\nHe kissed me after I washed my hands. \"Feeling rested?\"\n\n\"A little. I'm going to take a shower.\" I stripped and stepped past him.\n\nHe patted my ass playfully and growled. \"Because you know I always finish.\"\n\nA moan escaped before I could stop it. I tried so hard to suppress the memories. If I embraced them...I knew the trouble that could come from venturing into that area again. Maybe someday the two of us could explore spanking or flogging. But I was enjoying the vanilla lifestyle way too much now to mess it up. And Stefan knew it. Because we actually talked. All of the time.\n\nI shivered a little as I waited for the water to warm up. Mainly because my eyes were glued on a hot body. I licked my lips while Stefan did a little strip tease to remove his shorts and boxers. He shook his ass at me and then turned to show me his partial erection.\n\nMy nipples puckered painfully just looking at his naked body. I was so in a trance that he had to say my name several times before I heard him. He just shook his head and gestured for me to enter the shower first. I stepped backwards into the spray, beckoning him to follow. As soon as the hot water hit my shoulders, I moaned again.",
        "\"Now, that's not fair. It's my job to make you moan.\"\n\nWhich I did even louder when he stepped up behind me just as I turned to let the water hit my front side. The length of his cock pressed against my ass. His hands brushed along my hips and sides to settle under my breasts as he cupped them in his palms.\n\nI cried out, recoiling. Damn, why did his touch hurt so much?\n\nStefan froze. \"Daphne? Are you okay?\"\n\n\"Water must be too hot.\"\n\nI pressed back against him to prove I was fine. He must have accepted it because he rubbed against me. His thumbs and forefingers circled my nipples, pinching and pulling them as hot streams coursed down my chest.\n\nI gritted my teeth as tears blurred my eyes. Every blessed cell of my body seemed to have turned the sensitivity knob up several notches. I must have really overdone it lately. I just needed to relax today.\n\n\"Let's play a game,\" his voice rumbled in my ear. \"We could tell each other what we're thankful for.\"\n\n\"Um, I'm thankful for a beautiful house on the beach.\"\n\nHe kissed the space between my shoulderblades. \"I'm thankful for my beautiful fianc\u00e9e.\"\n\n\"I'm thankful for a beautiful house in Paris.\"\n\nHis hand was on my hip, his fingers stroking over my wet skin. \"I'm thankful my fianc\u00e9e is a model.\"\n\n\"I'm thankful for being able to be near Malcolm and Becca.\"\n\nHis fingers wandered down and circled my clit. \"I'm thankful for that, too.\"\n\n\"I'm thankful for...\"\n\n\"Me?\" Stefan pressed against me from behind again.\n\n\"For your wonderful cock.\"\n\nHe chuckled, then he turned me suddenly and gently pressed on my shoulders.\n\nI knelt willingly and cupped his balls in one hand while I wrapped my fingers around his wet cock. I licked at the head, teasing him. Despite the heat of him in my hand and the hot water against my back, I shivered. I could feel him watching me. I raised my eyes and lowered my mouth at the same time.\n\nHis jaw clenched as my lips wrapped around and I took him deeper into my mouth. Then his hands were in my hair, holding me. Guiding me.\n\nI kept my eyes locked on his throughout because I wanted to, not because he was forcing me. I moved my hands behind him to grab his ass. He was gentle, and I felt no fear. Instead, there was only desire within me growing stronger and stronger.\n\nAs his eyes darkened, he pulled free and helped me to my feet. Which I was glad because I'd been pressing my breasts against his thighs, and they were screaming for relief. He spun me around and bent me over so my hands were on the built-in seat of the shower. I gasped as he penetrated me from behind. He gripped my shoulders and thrust fast and hard. It felt wonderful, even as I grew colder since his body blocked the water.\n\nBy the time we'd both reach orgasm, I was freezing. But the natural rush I felt made it worth it.\n\nStefan pulled me upright afterwards and held my back against him under the water, which he had to turn up twice. We washed quickly and toweled each other off before scrambling back to bed and diving under the covers. There, we cuddled in each other's warmth...and I tried not to cry as I suddenly felt overwhelmed. For no apparent reason.\n\nWe ended up spooned with him behind me as he lazily caressed my breasts. His other hand was wedged between my thighs, his fingers stroking my pussy. I reached back and stroked him in turn. When I came, he maneuvered us so I was on my back and then made love me to me missionary-style.\n\nAfterwards, he rested his body over mine as I stroked my fingers along his back.\n\n\"I forgot one more thing I'm thankful for. My loving fianc\u00e9,\" I whispered in his ear. \"I'd be nothing without you, Stefan.\"\n\n\"You're damn right,\" he mumbled sleepily and kissed my cheek. His cock twitched, still buried within me, as if echoing his thought. Our bodies separated as he rolled off me, but I scooted back against him.\n\nAs we both drifted off, I hoped he had set the alarm. Malcolm and Becca would not forgive us if we slept through Thanksgiving dinner.\n\n###\n\nTwo days later, I blinked and stared at the white stick in my hand, my heart beating wildly.\n\nWas it right? It couldn't be right. Did I want it to be wrong, though?\n\n\"Well?\"\n\nI flinched and looked up at Stefan who had stopped his pacing. Although we'd taken a good chunk of the room away for the office, the master bath still remained vast. At least it had seemed so for the last five minutes. I took a deep breath and read the verdict. \"Vous allez \u00eatre un p\u00e8re.\"\n\nHe ran his hand through his hair. \"Honey, usually I think it's the sexiest thing when you speak French to me. But could we stick to English right now?\"\n\n\"Sorry.\" I sighed and turned the stick to face him. \"You're going to be a father.\"\n\nStefan reached out, blindly grabbing at the air as he staggered around. I was already sitting on the toilet seat. He ended up wandering into the shower and sitting on the seat there. \"Are you sure?\"\n\n\"My body has already told me yes. This stick...well, I can go to the doctor...\"\n\nWe were both silent. My heart was pounding so loud. So fast.\n\n\"Daphne, we're having a baby.\" Stefan was kneeling before me now, his hands covering mine. \"I love you so much.\"\n\nA tear slipped down my cheek as I clenched my eyes. \"The doctor...he said the chances decrease after a miscarriage. I didn't want to hope.\"\n\n\"Hope is good.\" He brushed at my tears. \"I will do everything in my power to make sure this baby is happy and healthy. I am with you, every step of the way. Okay?\"\n\nI nodded.\n\n\"Good. Now show me how you really feel, Mommy.\"\n\nI giggled and smiled through my tears.\n\n\"That's my girl.\"\n\n###\n\nThe weather was cool, but not so much that it prevented me from taking a walk along the beach on Christmas morning. The lower temperature actually made the sand firmer and easier to traverse with my shoes on. I'd woken before Stefan, just as the sun was starting to sparkle across the ocean. The time alone allowed me to process my thoughts about how much had changed in the past year.\n\nI was living in a beautiful house with an amazing man who loved me for who I was, notwithstanding my faults and baggage. My best friends and family were closer than a phone call away. A little one would be joining us after the first of the year, making me an aunt. And I was expecting now myself, confirmed by the same doctor I had seen for my pregnancy with Lilly. I could never have imagined any of this.\n\nI was putting my jacket away in the coat cabinet Stefan had built under the stairs to the second floor when I noticed the inside wall on my left looked funny. As in, it was no longer flush, like a wall. There was a slight gap. And when I pressed on the wall, it swung open. Like a door. And a light shown from the other side, illuminating a set of stairs that went down.\n\nI thought about Stefan's secret den back at his mother's estate. About the secret hallways to his private rooms. I wanted to be mad that he hadn't told me he'd built a hidden passage in our own home. But my curiosity got the better of me.\n\nI cautiously descended to the lower level, gripping the handrail that followed the slope. When I reached the bottom, another door stood agape. I walked through and stared, awestruck.\n\nThis had been one, big empty room with just the foundation as the four walls and support posts spaced periodically throughout. Now, no more was there sand and dirt underfoot, cobwebs overhead, or cinderblocks all around. Instead, the space was divided by a clean, cement-floored hallway with plastered walls. Edison lightbulbs in cages were spaced along the ceiling, giving the hall a warm glow.\n\nOn the right was a set of wide barn doors with a bar above reaching from one end of the hall to the other. Both doors were currently closed. Seeing that the entrance to this level was closer to the back than the front of the house, it didn't allot for much room on the other side since the wall was in line with the outside doorway.\n\nI easily slid one door open to reveal a storage area that spanned the length of the house, save for the stairs I'd just come down. As I had guessed, it was only about five feet deep. But it allowed for plenty of room to walk comfortably. Most of the space was filled with floor-to-ceiling shelves. A few plastic storage crates had been stacked near where I stood, but otherwise, the shelves were bare.\n\nWe hadn't really discussed what to do with the all of the space since there wasn't access from above. I guess I'd been wrong about that. I tried to think of the last time I'd been down to this level. There had been no reason to come in beyond the first visit after we had the door unlocked. So he could have done this at any time. Or maybe it had been renovated while we were in Europe.\n\nI closed the barn door and turned my attention to the left side of the hall\u2014the wider part of what I considered the basement, although it was above ground. There were two doors, one at each end, also closed. The first one\u2014across from the hidden stairs\u2014opened into a bathroom complete with a shower, toilet, and sink. Now why would he put in another bathroom...and down here of all places?\n\nAs I approached the far door, light shone through where it wasn't fully shut. And there was a box with a number pad next to the handle. Similar to the one Drake had installed been back in California on the secret room. I frowned. When had that been installed? And why?\n\nI pushed that door open as well to find Stefan standing in the middle of the room with his back to me, his hands on his hips. He seemed to be surveying something, as he had a tape measure laid out on the floor. He didn't seem to realize I was there, so I knocked on the door.\n\n\"Joyeux No\u00ebl, Stefan.\"\n\nHe spun around and grinned. \"Joyeux No\u00ebl, Daphne, mon amour!\"\n\nI mimicked him with my hands on my hips. I tried to frown, but there was really nothing to be upset about. I was just surprised. \"So when were you going to tell me about all of this?\"\n\nHe embraced me in a hug and kissed me softly. \"I was hoping to keep it a surprise until it was finished. But I think it's better you see it now. To have some input.\"\n\n\"What exactly are your plans?\" I kissed him back and leaned my head on his shoulder as he stepped beside me, one arm still around my back.\n\n\"I would like a studio. One here in America. To expand my hobby. Unless you have other ideas. I'm sorry, I should have asked you first.\"\n\nStefan had given me a tour of his wing of rooms back at his mother's estate when we'd visited in the autumn. One of which was an elaborate studio for his photography: a bed, couch, rigging equipment. All the necessities for an indoor erotic session with the camera. There was an attached dark room with top-of-the-line equipment and materials to produce prints in color, black-and-white, and sepia tones.\n\nI'd ventured the question if his mother knew about his hobby. He'd said she did. Her only response had been that everyone has a different appreciation of art. Then she'd told him to be safe and not make a public spectacle of himself. I didn't dare ask if she'd seen any of the prints he'd produced.\n\nHe'd also shown me a room larger than the hidden den where he had more photographs on display. He hadn't been kidding when he'd said he had a private collection. The images\u2014what they showed and what was left to the imagination\u2014had made my legs weak and my pussy throbbing. He had a book of personal prints. Some of them had him alone, but most were with models. In all of them, he was either fully dressed or wore just pants as he posed in various positions. No actual penetration on camera, which was a huge relief to me.\n\nHe must have seen the lust in my eyes as I'd studied each one. As I'd slowly flipped through the pages, stroking my finger over a couple of images of him in an erotic pose. He'd gently taken the book out of my hands and then dragged me across the room, ripping my clothes off before he fucked me right there against the wall between prints of other couples intertwined in sex. It\u2014he\u2014had been amazing.\n\nI knew that he still considered himself an amateur when it came to the trade, even though he did it so well. He'd told me he hadn't been ready to advertise his services beyond Paris. That he mostly worked by word of mouth within a local community of kinksters, to put it simply. But I had an inkling now that he had changed his mind.\n\nThe space before me was empty except for a pile of boxes in the corner partially covered with a tarp. A blank slate. But I could envision a photography studio similar to the one in Paris. And honestly, I had accepted that this would just be dead space under the house. If he wanted an erotic man cave, he could have it. He'd uprooted from France for me. And I was taking over the extra room upstairs to make it into a nursery. The least I could do was give him a space to play in down here, mindful that he didn't put either of us or our friends and family in any jeopardy.\n\n\"Daphne? Say the word and I'll stop. I should\u2014\"\n\n\"No, you need this. I've got my fantasy window seat in the living room upstairs. The nursery. The balcony. The beach.\" I pointed across the room to two closed doors. \"What's in there? I saw the bathroom already.\"\n\nHe led me to the door that had a round, red light next to it, like Malcolm used to have at his house back in Wheaton. There was also a register cover one would see for air conditioning and heat return. But I knew we had neither down here. Or at least I assumed we didn't.\n\nAs soon as he opened the door and started to speak, I wanted to smack my head. A dark room, duh. The light would signify not to enter, just as it had at Malcolm's dungeon. And the vent was for the exhaust fan to pull air out of the room. Why hadn't I put two-and-two together?\n\n\"We could share the space if you think of something,\" Stefan said, leading me back into the main area. \"It's pretty big. It doesn't need to be just for taking pictures.\"\n\nI turned around, envisioning the various stations he probably intended to set up. Among the various boxes of what I assumed were props, something caught my eye. I laughed. Then I groaned.\n\n\"You weren't supposed to see that yet,\" Stefan's gravelly voice met my ears.\n\n\"Do I dare ask why? Sentimental reasons?\"\n\nHe shrugged then crossed the room, moving the tarp so it fully unveiled the ship's wheel that had once adorned the wall in the captain's cabin, aka the master bedroom. \"Not exactly.\"\n\nI stepped closer to the colossal ornament leaning against the wall. It didn't look as big as it had hanging upstairs, but still, it was over half of my height. \"So what in the world were you planning do with it?\"\n\nHe wrapped his arms around me from behind. His breath was warm against my cheek as he whispered, \"Photograph it. Particularly with you, tied up in rope. Bound to it, maybe naked. Malcolm has some ideas for Becca, if she's game after she has the baby. Darryl and Ginger, too. Chains and the like. But all three of you ladies together? That would be a sight to see in print.\"\n\nI licked my lips, barely nodding. Then I moaned as he pressed into me from behind with his own apparent arousal. I gulped, clutching at his thighs to stay upright. \"Very, um, interesting. We'll see.\"\n\n\"Good. I'm glad you're keeping an open mind. But don't feel pressured.\"\n\nI turned into his embrace and kissed him then. Good and hard. I was panting when I pulled back. \"You realize how horny this all makes me?\"\n\n\"No idea,\" he whispered, his teeth gripping my bottom lip for a moment. He took my hand and led me to the other closed door. He opened it and snapped on a light.\n\nI would have laughed if not for the state I was in. Why had I not seen this one coming, too?\n\nHe had replicated his den at his mother's estate. His regular one, not the hidden one. While there wasn't a fireplace, there was a desk at one end and a couch facing it. And directly behind the desk was the Leonid Afremov painting that had been the topic of our conversation when I'd first met him. Across from it on the opposite wall above the couch was a similar piece of art. Except that the figures were more clearly defined...and they were having sex with the man behind the woman as she knelt on a table with a candelabra and a glass of wine before them.\n\n\"That one is 'Candles of Love.' Do you like it?\"\n\nI made some kind of grunting noise. My eyes danced over the bare shelves and the rest of the empty spaces on the walls. As if they were ready. Waiting. And I didn't have to guess what for.\n\nAs frightening as it was to think of myself on display for him like that\u2014in here \u2014my body was practically begging to see what he would do if given the chance. Maybe it was time to experiment with a new fetish. One that he already embraced and excelled at.\n\nHe guided me out of the den and through the studio to the hall. As we walked, he explained the door to the stairway was disguised as part of the wall, just as it was above in the closet. There was a lever hidden in the wood trim that released a latch. He'd added the coded lock for the security of the equipment in case someone broke in. Said that if I did allow him to photograph me, he had no intent of showing my photos to anyone I didn't want to see them. They would be locked up as well.\n\nI was only half listening, though. I couldn't get that second painting out of my mind. I was imagining what the artist had been thinking when he'd selected the topic. How he'd chosen the colors and arranged them to show yet hide so much.\n\nStefan must have been affected as well because he suddenly took my hand and started up the stairs. \"I want you. Right now.\"\n\nI tugged on his hand. \"Wait.\"\n\nHe glanced back at me. Something flickered in his eyes. Disappointment? Frustration?\n\n\"Take me like the painting.\" I gestured toward the studio. \"Fuck me on the desk.\"\n\nHis mouth twitched but he switched directions. He left me standing in the doorway to the den as he turned and faced me. As he stripped down. Then he stroked his cock while I pulled off my sweatshirt and T-shirt under it. Our eyes remained locked as I unhooked my bra and lowered my shorts and panties. Neither of us spoke, but I heard his sharp intake of breath upon revealing my breasts. My shaved pussy.\n\nWhen I was as naked as he was, I approached the back of the desk and used the chair as a step to get on top. I felt the heat of him as he joined me. As I leaned forward and held the edge of the desk while he spread my legs.\n\nHis hands rested on my waist, guiding me back. I felt him position his cock. I held my breath. The tip brushed against my clit. I bit my lower lip in a muffled cry.\n\n\"Is this what you wanted, Daphne?\"\n\n\"Yes!\" I hissed as I lowered my body onto him. His hands gripped my waist tighter, slowing my descent. I felt every blessed inch of him as he impaled me. My moan started out low and grew louder the longer it took for him to fill me. His hands slid up my sides the further I sat upright until I was just on my knees.\n\nBy time I was sitting back on his hips, I was gasping for breath. His hands moved up to play with my breasts, which still ached, but I pushed past it. I stared straight ahead at the new painting. At the way we mimicked it. I squeezed my pussy around his cock, and it jerked. He put his hands on the top of my thighs, just like the painted man, and thrust hard until I came. Which didn't take long.\n\nI continued rocking through my orgasm, whimpering and biting my lip harder to keep myself from zoning out. Once I was close to the pinnacle again, I arched my back against his chest. Wrapped my arm behind me around his neck while I focused on the feeling of him moving within me.\n\nHis own hands caressed my front. From my overly sensitive breasts, past my belly where our baby grew, down to my throbbing clit. Arousing me even further.\n\nAfter awhile, he tugged my arm free and had me lean forward. He pressed on my shoulderblades until my arms and head were resting on the hardness of the desk. Then he spread my legs wider so my ass lowered as well.",
        "He fucked me leisurely from behind, his height putting him at the opportune angle. My incoherent cries were in syncopation with his pants and groans. His hands squeezed and parted my cheeks. Gripped and guided my hips. I was so close. I just needed something more.\n\nAnd then suddenly, he smacked my ass with his open palm. I screamed. Gasped for breath. Then begged him to do it again. After three more swats, I was trembling beneath him, blubbering tears of joy.\n\nHe continued to thrust hard and fast until he was shaking as well. His own release came with a spewing of grunts and obscene words with my name intertwined. Afterwards, he gathered me in his arms and carried me over to the couch. He held me close, kissing all over my face as he whispered how much he loved me. I could only whimper as I drifted on the edge of consciousness.\n\nI would have to talk to him about the spankings later. Was it a masculine instinct to smack a fine ass? Or had he thought\u2014somehow known\u2014I needed the extra boost to get over the pinnacle? Maybe I didn't need to give up all of my desires. Maybe there was a middle ground.\n\n###\n\nI took one last look in the mirror and smoothed out my skirt over my knee-high boots. I was checking my hair when Stefan wandered out of the bathroom. With a towel around his waist.\n\n\"Why aren't you ready to go?\"\n\n\"It's just a few yards away. You don't need to wait for me if Becca needs you in the kitchen.\"\n\n\"It's Christmas. My first one with the people I want to be with in exactly the place I want to be. We should go together. Besides, the second I see her, I'll spill the secret.\"\n\n\"You've kept it for a month now. Surely, you can hang on for a few more hours.\"\n\n\"Don't ruin this for me. Please.\"\n\nHe kissed me on the lips. \"Yes, mon amour.\"\n\nI followed him around, handing him pieces of clothing until he was dressed. I noticed it had been another fifteen minutes before we made it downstairs. We were finally heading out the door when he said he'd forgotten the bottle of champagne he'd purchased just for today. I tried not to grumble as I waited on our beautiful front porch that was just beginning to be dusted with fresh snow.\n\nMalcolm opened the front door before we'd reached the mansion. \"Good of you to join us. My wife has been complaining that she was afraid no one was coming to Christmas dinner.\"\n\n\"I thought Alexander and Cameron were here already with Beth?\" I shrugged off my coat and toed off my shoes, thankful to be in the warmth of the house. The wind had picked up since my walk just a few hours ago.\n\n\"They are. Darryl and Ginger, too. But you know Becca. If you're not here, no one's here.\"\n\n\"Aww.\"\n\n\"We don't see you enough,\" Stefan said dryly, and I could practically hear his eyes rolling. \"We really should get together more often.\"\n\n\"Don't mind him,\" I said, swatting my fianc\u00e9's arm and returning Malcolm's hug. \"Merry Christmas.\"\n\n\"Merry Christmas to you, too, sweetie.\" He kissed my cheek and let me step past before he slapped Stefan on the back in their manly hug. \"The women are battling the stove. The men are drinking beer.\"\n\n\"Typical.\" Before I could head toward the back of the house, Becca came waddling down the hall in a long sweater dress. I'd picked it up in Milan, and it looked absolutely adorable on her. \"There's the mother of my future niece or nephew. And you're rocking that outfit!\"\n\n\"I feel like a model in it!\" She embraced me as best as she could with her basketball-sized belly now, rocking me side-to-side for a moment. \"Thank God, you're here. What took you so long?\"\n\n\"You know men. They take forever to get ready.\"\n\n\"Yes, I do. It's just...\" She suddenly took my hand and pressed it to her belly.\n\nI grinned, feeling the baby kick three times. I couldn't stop the longing inside for when I'd be at that stage. I hadn't gotten that far with Lilly. \"Do you think he or she can smell this wonderful food?\"\n\n\"Probably feels my stomach rumbling because it's making me hungry.\"\n\n\"He's not the only one,\" Stefan said, giving Becca bises.\n\nShe was grinning and her cheeks turned red. \"What makes you think it's a boy?\"\n\n\"I'm a man. Men want boys.\"\n\n\"But I'll love a daughter just as much,\" Malcolm laughed, gesturing we should all get out of the foyer.\n\nEvery time I fidgeted during dinner when someone brought up Malcolm and Becca's baby, Stefan squeezed my hand under the table. It had been our silent agreement to hang in there. I was trying to hold out until we did presents.\n\nIt also helped that I had anxiety about Beth's reaction to finding out I was pregnant with another man's baby so close to the death of her eldest son. She had been very quiet when I'd announced our engagement over a phone call. While I'd promised she'd always be a part of my family\u2014she was like a mother to me\u2014and she'd given me her blessing, I'd cried for an hour in Stefan's arms after we hung up. I understood where she stood. It had only been a year. Yet, wasn't it for me to decide when I was ready to move on?\n\nGinger and Cameron offered to bring in the pecan pie and vanilla ice cream. As soon as everyone was served, Darryl turned the conversation to me. My back stiffened as soon as he said my name.\n\n\"So Daphne,\" he said, \"have you given any more thought about what you're going to do now that you've settled in?\"\n\nI squeezed Stefan's hand this time. \"Well, I've been going over my options. I know that Claudette was disappointed we weren't going to move to Paris. And the same for Muriel when I told her I wouldn't be coming back to Chicago.\"\n\n\"Are there even opportunities out here?\" Becca sighed as she swallowed a spoonful of the sweet dessert. \"For modeling that is?\"\n\nMalcolm patted her other hand on the tabletop. \"I'm sure they thought of that.\"\n\nStefan cleared his throat. \"We did consider it, and there really aren't. But\u2014\"\n\n\"If you tell me you've changed your mind and you're leaving for France again, I swear...\" Becca said, her smile falling.\n\n\"No, we're not leaving,\" Stefan said, moving to put his arm around my shoulders.\n\n\"Then what?\" Darryl said.\n\n\"I'm not going back to modeling.\" I took a deep breath. \"At least for a long while.\"\n\n\"I echo him,\" Malcolm said, pointing to our mutually kinky friend.\n\nStefan tightened his grip. \"I'm going to manage my mother's business abroad, as planned.\"\n\nMy chest swelled with pride. \"And I'm going to be a stay-at-home mom.\"\n\nBecca made some noise between a grunt and a shriek as she pointed a spoon at me. \"That's why you wouldn't have a glass of wine!\"\n\nThe room was suddenly full of cheers and congratulations. Hugs and kisses abounded as everyone got up to come to our side of the table. I was hugging Darryl when I noticed Beth standing out of the way. The small crowd of family and friends suddenly stilled and parted as the matriarch approached.\n\nI held my breath as she leaned down and placed her hands on my cheeks.\n\n\"Daphne, my dear, you will always be my daughter-in-law. Losing Drake does not change that. He loved you. Wanted the best for you. You should be happy. And from what I can tell, with Stefan\u2014and your coming child\u2014you are.\"\n\n\"Thank you.\" I wasn't sure she heard me as I thought maybe I'd said the words in my head.\n\n\"I don't know all of the details, and I don't need to. But I know it wasn't always easy for you with my boy. He had his demons. We all do. He just chose to handle them in a different way. But you hung in there with him. Tried to make things right. None of us will ever know if your efforts would have paid off, but you did try. Thank you for that. You are a very brave girl.\"\n\nI definitely could not speak now as tears filled my eyes and throat.\n\n\"You will be a wonderful mother.\" Beth turned her smile to Stefan and placed a hand on his head. \"And you will be a wonderful father. I'm proud to have you both in my family.\"\n\n###\n\nWe took a break from clearing the table to open presents. There were a lot of boxes and bags filled with clothes and toys for the future baby McClaren. The final gift was a top-of-the-line cappuccino maker from Malcolm and Becca to Stefan and I. My fianc\u00e9's insistence that I open it\u2014and his chuckle as I screamed when I ripped off the paper\u2014clued me in that he might have had something to do with the gift idea.\n\nAfterwards, I helped clean up the kitchen while Becca relaxed with her feet up. I scolded her for working too much today. Her only reply was that she'd done the same to me before and would be doing it again. Soon. Then she hugged me tight and said she couldn't wait for our kids to play together. That blood or no blood, they would always be considered cousins. Family.\n\nI cried. But only a little.\n\nThe lights shut off behind me as I wiped down the kitchen island. Cameron and Ginger walked past, pausing their chatter to let me know the food was all put away and the dishwasher loaded. I thanked them and smiled as I thought about how they had been outsiders, like me. Given time, we'd all been welcomed into the fold.\n\nMalcolm joined me. \"How are you doing, Daphne?\"\n\n\"Good.\"\n\nHe held my chin for a moment, his own smile faltering. \"Are you? Be honest with me? I know you.\"\n\nI turned to the living room where everyone was lounging on the new couches and chairs that allowed for more seating. Between them, the coffee table held several mugs of coffee that steamed away, forgotten as stories were swapped while the snow fell harder outside on the beach. The tree and mantle were elegantly decorated, yet not over the top. The food had been delicious\u2014and I'd been able to help. The whole day had been perfect. Family, friends, and memories.\n\nThis is exactly what I had dreamed the holiday would be like. Should be like. I couldn't ask for more. Except for maybe a couple of rugrats crawling around. But that would be next year.\n\nI smiled widely up at Malcolm. \"I am good. Very good.\"\n\n\"I'm proud of you, you know?\"\n\n\"Really?\"\n\n\"Yes. You've grown so much. Not just in the past year.\" He turned to lean his back against the edge of the counter. \"I remember when we first met. You were so scared. That girl? She would have never flown across the country for help. Gone to Europe on her own.\"\n\nI nodded, frowning. \"Yeah, I think she's finally learned her lesson.\"\n\n\"There will be more lessons to learn. Different ones. Never forget one thing, okay?\"\n\n\"What's that?\"\n\n\"You've always got us. No matter what. No matter where you are. Welcome home.\" I sniffled as he pulled me into a tight hug and kissed the top of my head. Yes, I'd finally found home.\n\n###\n\nThe new year brought a new Rockland into the family the second week of January. I was the proud aunt of a nephew, a baby boy\u2014like Stefan had predicted\u2014that Malcolm and Becca named Landon Drake. He was the cutest thing I'd ever seen. I dreamt that night of Landon and Lilly playing together. But it was the only night, and Stefan held me as I cried at the thought that Landon wouldn't be able to meet his uncle and cousin.\n\nStefan and I traveled the Fashion Week circuit again in February and March. Afterwards, the whole crew\u2014Malcolm, Becca, Landon, Beth, Alexander, Cameron, Darryl, and Ginger\u2014joined us in Paris as we got married on the estate. Claudette's side, not ours. We honeymooned in Spain, and then stayed an extra month at our house in Paris to do a project with Claudette and Muriel, who had been there with her girls for their six-month excursion.\n\nOnce we'd returned home\u2014as Mr. and Mrs. Stefan Brunet\u2014I was so glad to be off of my feet. I still had four months to go until I was due, but I wasn't taking any chances. And neither were Stefan, Malcolm, and Becca who coddled me like I was the baby. Plus I got a lot of experience spending time with little Landon. More than ever, I was glad we'd chosen to live here in Delaware. Someday, the situation may change for either of our families. But for now, this is where I was meant to be.\n\n###\n\nI laid back on the prop bed after I finished my fifth photography session with my husband. It was a project we decided to do where he would shoot just my belly each month in black and white, and we'd hang the prints in a collage in the nursery. I was surprised at how comfortable the mattress was. I could probably take a nap on it. A fact that only rang more true as Stefan removed my shoes and began massaging my feet.\n\n\"That feels amazing. Thank you.\" I flung my arm over my already closed eyes to block the brightness of the overhead lights he'd used to create the right shadows for the scene, wincing as he hit a tight muscle.\n\nHe released my foot. I was about to complain that he didn't have to stop\u2014just be more gentle\u2014when I could tell the room had grown darker, even from behind my eyelids. I cracked an eye open to see that just a dim light above the bed remained. I lowered my arm and blinked.\n\n\"Is that better, mon amour?\"\n\n\"Hmm,\" I mumbled as he commenced with the massage. My eyes drifted closed once more. I was on the cusp of sleep when he laid down beside me, spooning my body from behind.\n\n\"Any other areas that need my expert touch?\"\n\nI smiled and reached out for his hand. My fingers circled his thick wrist and brought his arm across me, laying his palm over my breast.\n\nHe took the hint and caressed lightly, making me moan. \"Like that?\"\n\n\"Mmm hmm.\" I gasped as he increased the pressure. And his lips grazed the back of my neck.\n\nIt took little effort for him to get to my bra and tug the cup down to reach my bare skin since I had rolled my top up for the photo shoot. With the lightest touch, he had me gasping for breath. Writhing against him as he stroked the soft underside of my breast. As his thumb brushed my puckering nipple.\n\nI turned my head to kiss him. He dragged my lower lip into his mouth with his teeth and slid his tongue back and forth over it. We both moaned when he slid his hand over the swell of my belly and beneath the elastic waistband of my pants.\n\nI whimpered as his fingers moved lower. Deeper. Found the heat I could feel between my legs.\n\nWhen he rolled backwards, I went with him, my legs falling open. His other arm wrapped around my chest and held me against him. I felt his hand cup my pussy. His middle finger slid inside of me. His other fingers spread my swollen lips apart. The heel of his hand pressed against my clit in slow circles.\n\nI gasped, pressing my feet flat against the bed for support. I clutched at his arm as my orgasm crested.\n\n\"That's it mon amour. Come for me.\"\n\nI cried out his name as the wave crashed over me. I barely felt him lower my pants and roll our bodies to the side. But I moaned loudly as he slid in from behind, increasing the tremors still flowing through me. Then we were moving as one again.\n\nAfterwards, we lay in a sweaty tangle of arms and legs as he stroked my damp hair. Kissed my lips. Told me how much he loved me. How glad he was that I'd come to Paris. Even that I'd rejected his advances for six months.\n\nHe said he'd used the time to study me. To learn who I was. What I liked and didn't like. To get to know me as he'd never done with a woman before. He thanked me for my stubbornness. He felt like he'd become a better man as a result...for being forced to take his time. To become my friend above all else.\n\nI could only agree.\n\n###\n\nFOUR MONTHS LATER\n\nWe were hosting Christmas this year. Due to a pending snow storm, only Malcolm, Becca, and Landon made it over to see us. The men ran things in the kitchen. And us mothers took turns playing with Landon\u2014who loved to crawl everywhere now\u2014and holding our pride and joy, Hope Isabelle.\n\nAfter an early meal and opening presents, the McClaren family bundled up for the short walk to the mansion before the snow grew any heavier. We were left with a house that still smelled of turkey combined with the pine of the Christmas tree and the cranberry-and-orange scented wax melting in the living room warmer. Faint holiday music still played from the stereo.\n\n\"Did you have a good holiday, mon amour?\" Stefan joined me at my window seat and kissed my lips.\n\n\"I wouldn't trade this day for a thousand Christmases in Paris.\" I nuzzled a sleeping Hope closer to my chest and returned my husband's kiss.\n\n\"I can tell you're very content. As is my daughter.\" He leaned down to kiss her forehead.\n\nHope fussed for a moment, yawned, and then let out a soft coo as she returned to her slumber.\n\nStefan kissed my cheek. \"How about you put her down and I cash in my Christmas present?\"\n\nI resisted the sigh that wanted out. Instead, I nodded and gave him a smile.\n\nForty minutes later, I was standing in our living room, silently telling myself I only had to do this the one time. I concentrated on breathing evenly as he snapped away with his camera. It wasn't like the photo shoots I was used to. It was much more intimate. And I had to admit it...arousing.\n\nHe had used red and green jute rope to wrap me in what he called a Shibari fashion. The way he'd twisted and tied the two colors had produced a design that looked like a halter-top leotard. Malcolm would have been impressed. I definitely was.\n\nStefan posed me by the tree. In front of the fireplace. And of course\u2014my favorite\u2014in the window seat. He even used the time lapse option on the camera to join me for the latter, stripping off his shirt and posing in just his pants. I was struggling not to lick my lips by the time he'd said we were finished.\n\nUpstairs in the warm silence of the house as the cold snow fell outside, we made love. We lay spent in each other's arms afterwards, and I thought of all times I'd done kinky things in the past. Never before had I been so turned on as I had knowing he was capturing my raw emotions forever within a frame.\n\nI giggled softly as I drifted off. The masochist had apparently been replaced with an exhibitionist. Who'd have guessed?\n\n~ H"
    ],
    "authorname": "secretsxywriter",
    "tags": [
        "dominance",
        "submission",
        "bdsm novella"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/raw-and-broken-ch-06"
}