{
    "title": "The Slumber Party",
    "pages": [
        "\"A slumber party? Seriously? Heather, you do realize I'm turning 18, not 12, right?\"\n\n\"Don't worry, Shelby. This one won't be for kids. Just worry about the accommodations, I'll take care of the activities. Oh, and don't forget your pajamas,\" she added, laughing.\n\nShelby shook her head left and right as the call ended. She had told her best friend Heather that for her birthday, she wanted a small, intimate party with her best friends.\n\nHaving skipped several school years, she Shelby was currently studying engineering with students 4 or 5 years older. But despite her exceptional intelligence, or perhaps because of it, she had always had trouble making friends and integrating in her social groups, and had never had a boyfriend. But now, she had finally found a group of girls she felt comfortable with, and who accepted her and didn't care about her age.\n\nHeather was a 23-year-old blonde who made heads turn all day long, but she never let her popularity get to her head, and was friendly with everyone. She was the one who first approached Shelby, inviting her to eat at her table when she saw her sitting alone, too shy to come up to anyone and talk to them. Shelby opened up to her quickly, happy to find somebody interested in being friends with her, and Heather soon welcomed her into her circle of friends.\n\nTaylor, 22, was half asian and half caucasian, and had been sharing a room with Heather since the beginning of the year. The two got along very well, and spent most of their evenings together, whether at their apartment or out.\n\nFinally, Naomi, a 23-year-old brunette, was Heather's long time friend. The two had shared a dream of becoming engineers since they were kids, and joined the university together.\n\nShelby had never been very conscious about her femininity. Feeling distant from her comrades for most of her life, she never really connected with anybody, and instead focused on her studies where she felt she could do her thing, be herself, and not worry too much about fitting in. Somewhat small-breasted, Shelby was very thin and pretty, but due to her social awkwardness and being so much younger than other students, never really got hit on by guys.\n\n5 months into her first year of university, Shelby had already evolved a lot, thanks in no small part to her three friends, whom she shared numerous good times with, and who took her out and showed her new experiences beyond books and loneliness. While she could still be pretty shy among other people, she felt very comfortable with Heather, Taylor and Naomi.\n\n\"A slumber party...\" Shelby thought to herself. Despite her younger age, her friends had never treated her like a kid up until now. For her 18th birthday, she had decided to trust Heather with the party, but expected her to take her out somewhere, not to have a slumber party. But she couldn't believe it was going to be so simple. Not with Heather. She must have had something in mind. She would just have to wait for a few hours to find out, she thought.\n\nShelby had reached majority the previous day, and tonight was going to be her party with her three friends.\n\nAround eight, Shelby's door rang. Her family was wealthy enough to provide her with her own little apartment, which was more than most of the other students could afford. The young woman opened the door, and welcome Naomi in. Shortly after, Taylor arrived, followed by Heather. The small, cosy apartment was filled with giggles as one after the other, the girls changed into their pajamas.\n\nSoon, they were all sitting in a circle, on the comfortably thick carpet next to Shelby's bed. She had set some nice, warm mood lighting for the evening.\n\n\"So, I guess you didn't expect to have a slumber party for your 18th birthday, Shelby,\" Heather said with a smile. \"Don't be disappointed just yet, though. We've got some fancy ass gifts for you, but we'll save them for later. Now that you're an adult, we thought we could have a fun little game between us girls. So, check this out.\"\n\nHeather pulled out a small box in a gift wrap and handed it to her friend. The three girls giggled as Shelby weighed the box, trying to guess what was inside before she tore the paper off. She let her head fall, and displayed an embarrassed smile when she saw what her gift was.\n\nLifting her head and waving the box at her friends, she laughed:\n\n\"An 18+ truth or dare game? Oh, God...\"\n\nHeather teasingly raised her eyebrows as she smiled at Shelby. Naomi and Taylor laughed out loud, it was obvious they knew what this was before coming here.\n\n\"I've never played this game before,\" Shelby said.\n\n\"I would hope not! You were underage until yesterday,\" Heather replied, still laughing.\n\n\"You know that's not what I meant,\" Shelby said, shaking her head, trying to hide her embarrassment behind her cute smile.\n\n\"Well, ready to try it, then?\"\n\n\"Okay.\"\n\nShelby put the box down and pulled out a pile of cards.\n\n\"It's pretty simple,\" Heather explained. \"We each take one turn. The questioner takes the top card while the answerer chooses between truth or dare. Once the answerer had decided, the questioner reads either the truth, or the dare part of the card. To spice things up, the answerer will be chosen every time by spinning...\" she pulled a bottle of beer out of her bag. \"This bottle, as soon as we've emptied it.\"\n\nThe girls laughed as Heather poured each one of them a small glass.\n\n\"We won't tell anybody,\" Naomi said jokingly as Heather filled Shelby's glass.\n\nShelby trusted her friends not to get drunk, or try to get her drunk. But a little glass wouldn't hurt anybody. It was her 18th birthday, after all.\n\nThe young woman was a little anxious about the game. She wasn't sure exactly what its \"18+\" nature would entail, but she knew it was going to be pretty intense for someone with zero sexual experience. She knew that her three friends were pretty experienced, though at the moment, only Heather was in a relationship. Shelby had seen her boyfriend Justin several times, and it was no wonder he had managed to land one of the hottest girls in the university. He was a handsome, good-natured man, with an athletic body and a perfect smile. He was a bit older than Heather, currently being 27 years old.\n\n\"You can pick up the first card,\" Heather said to Shelby while she placed the empty beer bottle at the center. \"First, you get to spin this.\"\n\nShelby hesitantly spun the bottle, which landed on Naomi.\n\n\"Let's start easy... Truth,\" Naomi said.\n\nShelby picked the first card, and immediately blushed. The other girls began laughing, while Naomi said, hiding her smile with her hand:\n\n\"Oh shit, this is going to be bad.\"\n\nShelby cleared her throat, and read the card:\n\n\"Um, ugh... What, um... What kind of porn did you last watch?\"\n\nHeather and Taylor laughed out loud while looking at Naomi.\n\n\"Nice one, Shelby,\" Taylor said.\n\n\"Yeah, okay, it's not so bad,\" Naomi said as she gazed at the wall, trying to remember. \"I don't watch so much, but last time it was... Two guys on one girl.\"\n\n\"Um, okay...\" Shelby replied, looking at the floor in embarrassment.\n\n\"Hey,\" Heather said, \"don't let her off that easy! You gotta say more, Naomi. Describe what they were doing.\"\n\n\"Right, well... One guy was, like, pounding the girl from behind, while the other one was, um... fucking her face.\"\n\n\"You naughty girl,\" Taylor said, as the three girls began laughing.\n\nThey noticed Shelby's uneasiness, and Heather said:\n\n\"Hey, you alright, Shelby?\"\n\n\"Yeah, yeah, I'm just worried about what you're going to ask me,\" she said, chuckling.\n\n\"Don't worry, we'll go easy on you... at first. We'll get you easy ones for your first turns until you feel more comfortable, okay?\"\n\n\"Thanks. Okay, so, next person to pick a card is Taylor.\"\n\nTaylor spun the bottle and quickly drew a card. The bottle landed on Heather, who quickly said:\n\n\"Dare.\"\n\nTaylor read:\n\n\"Oh, I'm going to enjoy this one. Show me the sexiest picture of yourself that you have on your phone.\"\n\nHeather nodded confidently as the girls laughed.\n\n\"Do we get to see it too?\" Naomi asked.\n\n\"That's not what the card said,\" Heather replied. \"But I guess Taylor can describe it to you,\" she added as she began browsing through her pictures.\n\nTaylor opened her mouth wide with an amused smile as Heather showed her the screen. Naomi tried to lean to see it too, but it was impossible from where she was, and Taylor was playfully covering the sides of the screen.\n\nShelby instinctively leaned forward as well, without even realizing she was actually curious to see a nude picture of her friend. When the laughters calmed down, Taylor described the picture:\n\n\"Well I bet Justin must have used this one a few hundred times! Our friend Heather's leaving nothing to the imagination. She's sitting on the edge of her bed, in front of her mirror, with her legs spread. Completely naked, with an expression saying \"fuck me if you dare.\"\n\n\"That's a nice way of describing it, Taylor,\" Heather said, as the four girls laughed.\n\nShelby thought to herself that Taylor hadn't seemed so surprised to see such an intimate picture of her friend. For a moment, she wondered if the two girls had already seen each other naked. But they went back to the game before she could dwell on the question for too long.\n\nThe game continued for a while, and whenever the bottle pointed to Shelby, the girls would secretly make up an easy question for her, ignoring the more daring ones that were written on the cards. After each of them except her had had to face pretty embarrassing cards, Shelby realized that the others were going easy on her. Now feeling comfortable and confident enough, when the bottle landed on her again, she said:\n\n\"Girls, thanks for taking it easy on me, but I think I can take it now. I know you've been making stuff up. Just read what's on the next card. You'll have to show it to me so I know you're not cheating. I pick dare.\"\n\n\"Okay, Shelby,\" Heather said as she picked up a card. She winced as she read it silently, and asked: \"Are you really sure about this? No take backs.\"\n\n\"Yeah... If you can do it, so can I.\"\n\nSo far, Taylor had had to kiss Naomi for 30 seconds, Naomi had had to flash her breasts to the group and to suck on Heather's finger, and besides showing her intimate picture to Taylor, Heather had had to lick Taylor's neck for 60 seconds. Not mentioning the various embarrassing secrets the girls had had to share with each other. Shelby had come out pretty much unharmed, picking truths most of the time, and having to answer questions like which guy she found the hottest among the students, or which actor from Game of Thrones she would want to sleep with.\n\nBut things were about to take a sharp turn for her.\n\n\"Okay,\" Heather said, taking a deep breath as she looked at the card. \"Masturbate until you reach orgasm. If you are dressed, you can do it with your clothes on.\"\n\nThe girls suddenly stopped speaking or laughing, and all turned to Shelby, who looked back at Heather, frozen in place. Heather slowly turned the card to show Shelby she hadn't made it up. Shelby gulped, and with a shy smile, she said:\n\n\"I've, uh... I've never done that.\"\n\n\"Have an orgasm, you mean?\" Heather asked.\n\n\"That, too...\"\n\n\"You mean... you've never touched yourself?\" Heather asked, surprised.\n\nShelby shook her head.\n\n\"I'm not even sure how I'm supposed to do that, actually... Sorry.\"\n\n\"Hey. Hey, Shelby,\" Heather said, leaning forward, trying to meet Shelby's gaze as the young woman looked to the floor in embarrassment. \"It's alright. Not every girl's had this experience. Sorry for assuming. But, um...\" she smiled. \"You did say you wanted to go through whatever was on the card.\"\n\n\"I guess I did,\" Shelby said, slowly raising her eyes to look at Heather with a coy smile.\n\nNaomi and Taylor remained silent, and watched the situation unfold. Heather leaned further towards Shelby, and asked, with a benevolent smile:\n\n\"Do you trust me, Shelby?\"\n\n\"Well yeah, of course.\"\n\n\"I will help you, okay? I think it's time you discover this.\"\n\nShelby took a deep breath.\n\n\"Okay, Heather...\"\n\n\"Okay,\" her friend nodded.\n\nHeather walked on all four toward Shelby and sat next to her on her right, pressing against her side. They both rested their backs against Shelby's bed. Naomi and Taylor watched, without saying a word, as Heather wrapped her left arm around Shelby's waist.\n\n\"That's some nice, fluffy pajamas you've got here,\" she laughed as she teasingly tickled Shelby's flat tummy with her right hand, holding her in place with her left arm.\n\nThe four girls laughed, easing the tension that had begun to build up.\n\n\"You can tell me to stop at any time, Shelby. I'm going to start touching you down there, over you clothes.\"\n\nThe young woman nodded. For the first time in her life, she experienced a sensual touch on her intimate area, as Heather delicately pressed her fingers on her crotch. Shelby was sitting with her legs crossed, offering an easy access between her legs.\n\n\"Oh...\" she let out as she felt Heather's fingers drawing small circles around the entire surface of her vulva, through her clothes.\n\n\"Have you ever played with your breasts?\"\n\n\"N-not really...\"\n\n\"Okay...\"\n\nLeaving her right hand over Shelby's crotch, her left arm still wrapped around her, Heather reached up with her left hand and gently squeezed her friends breast through her fluffy pajama top. She could tell Shelby wasn't wearing bra underneath, and could already feel her hardening nipples through the thick fabric.\n\n\"Have you ever felt aroused before?\"\n\n\"I don't know, I'm not sure...\"\n\n\"Have you ever felt your nipples get hard? Have you ever felt wetness down there?\"\n\nShelby nodded as she let out another moan, slowly surrendering to her friend's intimate caress. She was discovering this new sensation, and, slowly, her awakening desire was taking over her body. She wasn't sure what this was yet, but she liked it. She wanted more of it. She trusted her friend to take care of her.\n\n\"Everything alright so far, Shelby?\"\n\n\"Yeah...\"\n\n\"Okay...\"\n\nShelby could hear her friend's breathing becoming deeper. Touching her obviously also had an effect on her friend. She looked down as she felt Heather's left hand slowly reach down and slip under her pajama top. Shelby took a deep breath as she felt the feminine fingers slowly glide on her smooth skin and find their way back up to her breasts. For the first time, she felt a sensual touch on the tip of her hard nipples. Heather pinched them softly, pressed them, drew circles around them, and soon began to gently squeeze her breasts one after the other.\n\nShelby let out a first moan. She had almost forgotten about Naomi and Taylor, and looked up to see them sitting closer than they were before, their eyes glued to what was happening in front of them.\n\n\"Are you feeling a wetness between your legs now, Shelby?\" Heather asked in a sensual voice, almost whispering in her ear.\n\nShelby shyly nodded. While all this was new to her, she knew she was admitting that her friend was making her sexually aroused.\n\nShe looked down and saw Heather's right hand slowly but confidently slip under her pajama bottoms, and in the same movement, under her panties.\n\n\"Oh my god,\" she thought.\n\n\"Oh, you're shaved down there,\" Heather observed in a whisper, as her hand slowly glided down Shelby's pubic mound.\n\nThe young woman let out a sigh as her friend's fingers reached her intimacy, awakening her womanhood for the first time. Her fingers stiffened and pressed together, Heather delicately applied pressure over Shelby's virgin vulva, and drew small circles as she had been doing earlier. Two of her fingers slipped between Shelby's labia, and were immediately soaked in the young woman's intimate juices.\n\nHeather said in Shelby's ear, whispering loud enough that Naomi and Taylor could hear:\n\n\"Now, I'm going to rub your clitoris. It's one of your most sensitive areas. This will feel very nice.\"\n\n\"Okay...\" she innocent young woman let out, already out of breath.\n\nSoaked in her abundant juices, Heather's fingers slowly glided up her vulva towards Shelby's erect clitoris, and began drawing small circles around it. Shelby felt an unprecedented surge of pleasure run through her body and let out a moan. Her friend's body pressed against hers, her hands squeezing her breast and rubbing her clitoris, Shelby completely surrendered to Heather, trusting her to show her unknown pleasures.\n\n\"Oh god...\" the young woman let out.\n\n\"This feels good?\" Heather asked.\n\n\"Y-yeah... yeah...\"\n\nStill silent, Naomi and Taylor had moved yet closer, and were leaning forward, taking in this intimate display.\n\nHeather continued to rub Shelby's clitoris for several minutes, taking her further and further into the uncharted territory of carnal pleasure. Eventually, Heather whispered:\n\n\"Now, I'm going to push one finger inside you, slowly. Okay?\"\n\n\"O-okay...\"\n\nShelby felt her underwear were completely soaked in her abundant juices. Heather's right hand effortlessly glided towards her intimate hole. Slowly, delicately, Heather pushed her middle finger inside the young virgin. Shelby took a deep breath she was penetrated for the first time. She couldn't believe the sensation. Her most private area, slowly entered by her friend, her fingers parting the walls of her tight cavity.\n\nHeather pushed as deep as she could, then slowly pulled out, and pushed back in. She repeated this several times, and whispered:\n\n\"Do you like that, Shelby?\"\n\n\"Oh... yes... Don't stop...\"\n\n\"Okay... Now, try to play with your breasts...\"\n\nAs she said so, Heather let go of Shelby's left breast and, her arm still wrapped around her friend, slowly reached down between her legs. Slipping her left hand underneath Shelby's underwear, she began rubbing her clitoris while she continued to penetrate her with her right middle finger.\n\nShelby, drunk on lust, looked at Taylor and Naomi, then reached for her breasts with both hands beneath her top, and began to squeeze them. Each passing moment brought her pleasure to a new high. Heather said:\n\n\"Now, I'm going to stimulate your G-spot. Along with your clit, it's your most sensitive area. It's inside your vagina, right... there.\"\n\nShelby let out a surprised moan as yet another surge of pleasure ran to her extremities. Heather had just begun pressing against her G-spot while she continued to rub her clitoris. Caught in the lustful spiral, Shelby squeezed her small breasts harder and harder. She couldn't believe the pleasure she was experiencing.\n\nThe intensity of this display was too much for Naomi and Taylor to look at without intervening. They exchanged a knowing glance, before joining their two friends. Naomi reached for Shelby's waist and slipped her fingers under the elastic bands of both her pajama bottom and her panties. At the same time, Taylor began to lift the top.\n\nCompletely surrendering to her friends, Shelby offered no resistance, and even pulled up her arms and lifted her crotch to help them undress her, while Heather continued to stimulate her intimacy.\n\nIn a matter of seconds, Shelby was now sitting completely naked before her three friends. Taylor reached for her breasts and began to squeeze them. Naomi signaled Heather to pull her finger out of Shelby's womanhood, then inserted her own index. The two girls used their free hands to hold Shelby's thighs spread wide and caress them in the process.\n\nThe young virgin looked into Naomi's eyes as the young woman, sitting on her knees in front of her, her fist closed with only her index sticking out, slowly pushed her finger inside her again and again. Shelby could see her own juices covering her friend's finger.\n\nShelby felt she was no longer sitting inside her room, but on a cloud floating high in the sky, as close to heaven as could be, as her three friends expertely pleasured all of her most sensitive areas. Moments ago, she had never experienced any sexual pleasure, and now she discovered sensations she didn't even know existed, offered by the three people she trusted the most.",
        "On her left, Taylor was leaning against her, passionately squeezing her breasts. On her right, Heather had her left arm wrapped around her, holding her left thigh spread while she expertly rubbed her clitoris with her right hand. And right in front of her, Naomi was now pushing two fingers in and out of her at a steady pace, while she used her left hand to keep her right thigh spread.\n\nThe room was filled with the sounds of Shelby's moans, the three other girls' intense breathing, and the wet sounds of Naomi's fingers sliding in and out of the young woman's hole.\n\n\"I take it you've never tasted your juices...\" Naomi said.\n\nShelby shook her head. Naomi pulled out her two fingers, immediately replacing them with her other hand as she brought them towards Shelby's mouth. As she was brought closer and closer to her first orgasm, Shelby discovered the smell of her womanhood. Looking into Naomi's eyes, she lustfully opened her mouth and extended her tongue. Naomi pushed her fingers inside her mouth, and Shelby wrapped her lips around them. She continued to moan as she tasted her own pleasure for the first time.\n\nAll the while, an unfamiliar sensation was building up inside her. She wasn't sure what was happening. Her moans grew more intense as she continued to suck on her friend's fingers, licking her own juices off of them, and eventually she arched her back and blocked her breathing.\n\nHeather whispered in her ear:\n\n\"You're about to have your first orgasm, Shelby. Enjoy it...\"\n\nSuddenly, time suspended. The world stopped spinning. Shelby couldn't hear or see anything. She felt a ball of indescribable sensations burst out inside her in a fireworks of a million colors. She lost what little control she had over her body, and let out a loud grunt as she began to rock her hips against her friend's hands.\n\nShe felt her vagina squeezing Naomi's fingers, while she continued to push them inside her. The three girls continued to stimulate her intensely as Shelby experienced her first sexual climax. Letting go of the fingers she was sucking, she began screaming in release, as her intimate juices poured out of her and onto Naomi's hand. She almost forgot how to breath as the overwhelming pleasure washed over her entire body, shaking it with uncontrollable spasms.\n\nLooking for someone to hold onto, she wrapped her arms around both Heather and Taylor's waists and pulled them against her, rocking her hips against Naomi's hand again and again. The young woman had never imagined her body was capable of experiencing so much pleasure.\n\nHer climax eventually subsided, letting her finally catch her breath. The three girls progressively stopped their stimulation. Naomi pulled her fingers out, Taylor let go of her breasts, and Heather let her palm delicately rest over her vulva.\n\nShelby opened her eyes and looked at her three friends, who had just offered her this moment of pure ecstasy. She smiled at them, they smiled back. Naomi, Taylor and Heather pulled back, letting Shelby slowly regain her senses. As she looked at her own sweaty body, the young woman became a little self conscious of her own nakedness in front of her clothed friends, but she was too exhausted to do anything about it.\n\nWith a wide, benevolent smile, Heather asked:\n\n\"So, how was your first orgasm, Shelby?\"\n\n\"I... didn't even know this was possible, Heather... God..\"\n\n\"Yeah,\" she laughed. \"I know.\"\n\nThe four girls giggled.\n\n\"But, um... You still haven't fulfilled your dare, Shelby,\" Heather said, teasingly.\n\n\"My what...? I'm... not even sure what planet I'm on right now.\"\n\nHeather picked up the card, and read it again:\n\n\"Masturbate until you reach orgasm.\" Looking at Shelby, she continued: \"We haven't seen you masturbate yet, so... you're still on. I guess it's the perfect time to put into practice what you just learned.\"\n\n\"And you're... you're all going to watch me?\"\n\n\"I believe that's the point, yeah...\" Heather said, chuckling.\n\n\"Alright...\"\n\nLooking at her three friends, Shelby brought her left hand to her breast. Her nipples were still hard. Her body had finally been granted the ultimate pleasure, and now it needed more. She slowly brought her right hand between her legs and began to rub her sensitive clitoris.\n\nShelby was a quick study, and the last half hour had given her ample time to pick up a few moves from her expert friends. Naomi, Taylor and Heather watched her draw circles around her clitoris. Soon, she let go of her breast, switched hands, and delicately pushed her right middle finger inside her vagina. Offering an exhausted smile to her friends, Shelby said:\n\n\"I never knew my body could do that...\"\n\nShelby's erratic breathing couldn't cover the loud wet noises of her fingers slipping in and out of her soaked womanhood, the palm of her hand slapping against her crotch as she pushed as deep as she could. It was obvious that now she knew how to make herself feel good.\n\nShe continued pleasuring herself under the fascinated eyes of her three friends. Eventually, she recognized the sensation that began to build up inside her. She intensified her movements, and let out:\n\n\"I can feel it... I think... I'm gonna have an orgasm...\"\n\nHeather couldn't help but bite her lower lip at this surreal sight. Her young, cute, innocent friend was naked and masturbating for the first time, right before her eyes, and telling her she was about to give herself the ultimate pleasure.\n\nShelby's climax hit her. She began to rock her pelvis against her hands. The three girls watched her small breasts bounce up and down as she moved uncontrollably and filled the room with her grunts, moans and screams of pleasure. They watched Shelby's thick juices ooze out of her feminine hole and join the large puddle that had been forming under her crotch, expanding on her carpet.\n\nThe three young women smiled as they witnessed their friend discover her own body.\n\nShelby's orgasm eventually faded, and the young woman slowly came down to earth. She removed her hands from her intimacy, offering her friends an unobstructed view of her intimacy, still pulsing with pleasure as she began to catch her breath.\n\nHeather said:\n\n\"I'm proud of you, Shelby... Welcome to our little private club.\"\n\n\"What do you mean?\" Shelby asked, barely finding the strength to formulate a sentence.\n\nHeather exchanged a knowing glance with Taylor and Naomi, who both nodded, and said:\n\n\"Well... This is something we like to do together every once in a while. We like to touch ourselves next to each other, to share this moment. Would you mind if... we did it now?\"\n\nShelby smiled and bit her lower lip."
    ],
    "authorname": "Tribad",
    "tags": [
        "fingering",
        "first time",
        "game",
        "group",
        "lesbian sex",
        "party",
        "student",
        "voyeurism"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-slumber-party-4"
}