{
    "title": "The Big Tits Club Ch. 19-20",
    "pages": [
        "THE BIG TITS CLUB by bluedragon\n\n****\n\n-- CHAPTER 19: Alice --\n\n****\n\nI felt something tickle my balls, and with a start, I jerked awake.\n\n\"Mmph!\" somebody grunted, and as I sat up, I realized I'd just shoved my dick an inch into a girl's throat. She took it like a trouper, gagging only slightly and keeping her head down, breathing heavily through her nose until I pulled back. And then she resumed rhythmically pumping my shaft in her hand and sucking on the mushroom head as if I'd never interrupted her.\n\nMy eyes fluttered for a brief second, giving me just enough time to see the copper-haired head bobbing up and down in my lap. Naimh looked up at me, her emerald-green eyes piercing in their gaze as she recognized I'd awakened. And she stopped to smile around a mouthful of meat while continuing to pump my shaft with her right hand.\n\nI smiled back, and Naimh once again focused on the task at hand. She briefly paused to gather herself before pushing her head all the way down and not stopping until she had her lips around the very base of my cock. She held that position there, looked back up at me to make sure I was watching, and I rewarded her with a proud smile before she pulled herself all the way up and took a deep breath.\n\nWhile she caught her breath, I took a moment to evaluate my situation. Unlike my previous experience sleeping with two girls in bed, I wasn't in the middle this time. Last night, after Sam, Zofi, and I cleaned up and got into our pajamas, Sam assumed the place of honor, ending up sandwiched between me and Zofi. The three of us formed stacked spoons with Zofi facing away, Sam hugging her from behind, and me wrapping my arms around both of them.\n\nAt present, my left arm was trapped beneath Sam's pillow as the two girls remained spooned together, still asleep. I glanced over at them, debating whether or not to attempt slipping my arm out and heading with Naimh over to her room or something, but Naimh blew those thoughts straight out of my head when she dropped her fantastic freckled face all the way down on me again and started swallowing to make her throat muscles ripple against my sensitive shaft.\n\nIn the end, I simply let Naimh blow me. She didn't seem interested in climbing on or anything like that, just pleasing me. I thought about what Zofi had said last night about not feeling the urge to suck my dick, but rather the urge to see the way I looked at her while she was sucking my dick. Given the way Naimh went about her business, I got the distinct impression the gorgeous redhead wanted BOTH, and that idea certainly made me feel really good.\n\nSo I gave her all my attention. My right hand was still free, so I cupped her cheek and brushed her hair back behind her ear so I could have an unobstructed look at her beautiful face. Her eyes sparkled and her cheeks pulled up into a smile in response, but she never stopped sucking me. When she deep-throated me again, I set my right hand atop her head to hold her down for just a second, and she quivered with increased excitement. The twinkle in her eyes told me she really liked that, although the instant I felt her trying to move back up, I moved my hand away and let her catch her breath.\n\nWe both stayed silent so as not to wake the others, but it was hard to control my hips. The closer I got to cumming, the more I involuntarily bucked upward. Naimh accepted each lunge with aplomb, resuming her oral love immediately afterward. And after a particularly good deep-throat, I found myself pinning her head down rather hard, not letting her up as I groaned beneath my breath and began erupting great gouts of hot lava straight into the Irish girl's throat.\n\nShe jerked at the first impact, her head trying to pop up but unable to since I was still pinning her down this time. She swallowed quickly lest she drown, her throat muscles milking my shaft for more and more cum. She even pressed her own head further down, really cramming me all the way in. But after the first few shots, I realized what I was doing and quickly let go of the top of her head.\n\nNaimh actually kept her head down as long as she could, trying to take it all without popping off. But the urge to breathe took over and she pulled away, taking a couple of shots to the face before the rest lost power and dribbled out around my mushroom head and her now-pumping right hand. She gasped for oxygen, eyes wide. And by the time I had nothing left to spurt, she had completely recovered her composure.\n\nStifling a giggle, Naimh looked at her sperm-covered hand and started licking my jizz off her skin. She scraped a few more globs off her nose, mouth, and cheeks, popping her fingers into her mouth and tasting them with relish. I definitely got the impression she enjoyed both the taste of my cum AND the way I looked at her while she tasted it, and once more I found myself wishing I could be with nymphomaniac Neevie all the time. She was the most gorgeous thing I'd ever seen AND a complete freak in the sheets. Lucky me!\n\nA second later, her eyes got big as she looked over to my left. I followed her gaze and found that both Sam and Zofi had woken up and rolled around. I must've been so distracted by my ejaculation I hadn't noticed I'd pulled my left arm out from under Sam's pillow, and didn't feel a thing.\n\n\"Umm... morning?\" Naimh greeted them a little nervously, still with a cum-covered finger in her mouth. \"I'm sorry. I didn't get to wake up with him yesterday and I didn't plan on sucking him off. I just wanted to see him since this is our last day of the trip and he had the biggest bulge in his pajamas and...\"\n\n\"Relax, relax,\" Sam said groggily, waving her hand dismissively. \"I'm still super-tired, my ass feels like it's on fire, and I'm not in the mood. Why don't you take him over to your bedroom and have him return the favor.\"\n\n\"Really?\" Naimh said brightly. \"But this is still your morning.\"\n\n\"No worries. We're the BTC. I'm good with sharing.\" She waved at us dismissively again and rolled back to cuddle with Zofi.\n\nI suddenly found a horny redhead tugging on my hand to get me up, dragging me over to her bedroom, and almost literally throwing me onto her bed. By the time I was able to roll over and sit up, she'd already unbuttoned half of her pajama top, baring those beautiful 34DDs to my hungry gaze.\n\n\"Let's try to keep it down, huh?\" I suggested. \"Let the others sleep in?\"\n\nNaimh shrugged. \"No promises.\"\n\n****\n\nNaimh's orgasmic screaming woke up the others. Belle came into the room while I was banging my pelvis off the busty redhead's buttocks from behind, spanking her bodacious booty repeatedly while she howled bloody murder. My dirty mind imagined Belle parking her pussy right in front of Naimh's face so I could watch her get eaten out by the busty redhead and complete a \"proper\" threesome, but she just leaned against the wall with her hands in her panties, rubbing furiously until the sight of Naimh and I having a simultaneous climax made Belle cum as well.\n\nMatty's Cumslut of course went straight for the creampie, and Naimh came again while cramming Belle's little head against her crotch with both hands.\n\nThe three of us emerged to find Mari making breakfast for everyone. Naimh apologized for waking everyone, but her friends brushed off her concerns as no big deal.\n\n\"It's the same time we would wake up for school anyway,\" Zofi explained. \"We can still sleep in for the rest of winter break.\"\n\n\"What time is your mum coming back here?\" Sam asked me.\n\n\"Before ten. We're supposed to be out of the cabin by then.\"\n\nNaimh checked the clock. \"There's still enough time if anybody else wants to take Matty into a bedroom.\"\n\nI arched my eyebrow and looked at each of the girls one-by-one. Nobody shrank from my gaze or anything like that, but none of them looked inclined to take Naimh up on her offer. Belle looked satisfied with her creampie. Sam looked sore and was walking funny. Zofi shrugged. And Mari shook her head, the only one to reply verbally, \"I'm good. Yesterday morning was crazy enough for one weekend.\"\n\nBelle snorted. \"You've gone from virgin to bisexual orgies in about a week.\"\n\nSo with that, the six of us ate breakfast, packed our suitcases, and started to tidy up and make sure we weren't leaving anything behind. I went to play suitcase Tetris in the van while the girls walked down to the beach to play in the snow one last time. I joined them twenty minutes later to find that our two snowmen from yesterday were still upright, although one of the arm sticks was missing.\n\nWe didn't stay long, though, and returned to the cabin by 9:30. Mother arrived ten minutes later, we loaded everyone into the van, and started the drive home. I never really got a good look at her boyfriend when he dropped her off, nor did I really want to try. If she wanted me to meet him, we would eventually do so under proper circumstances. For now, I'd rather not really think too hard about that part of her life.\n\nWe got fast food for lunch and then started dropping off girls at their homes a little after 2pm. It was a Tuesday, so I was expecting most parents to be at work even if Christmas was just around the corner. Indeed, nobody was home when we dropped off Mari. But Zofi's dad came out to the front porch and waved to us on arrival. Naimh's parents came down to the van and chatted with Mother politely. Sam reached forward, tapped my shoulder, and said, \"Looks like your future in-laws get along with your mom already.\"\n\nMy eyebrows shot up. \"In-laws?\"\n\nSam just laughed. I was glad Naimh was already outside standing with her suitcase by her parents and hadn't heard that comment.\n\nArching an eyebrow, I asked, \"You really wouldn't be jealous?\"\n\nSam shrugged and glanced back at Belle, who was the only one left in the van with us, and said simply, \"You and I are never getting married or anything like that. I want you to see me as Aphrodite, I want you to get turned on by the mere sight of me, and of course I'm competitive and want to be the best at... everything. But we're not dating and as much as I love being with you... romance isn't high on my list right now.\"\n\nI nodded as if in agreement and turned to look out the windshield, but in my head I was still turning her words over in my mind. Just yesterday morning she'd asked me if I could ever consider her as a potential girlfriend and gotten upset when I waffled on the subject. Today she said she didn't care.\n\nWe drove off two minutes later and dropped off Sam without further incident. And FINALLY Belle and I got home.\n\nI parked the van in the garage and gave Belle a quick kiss goodbye. Mother had already gone inside the house, as it was my job to bring in her luggage. Belle walked over to her place while I headed in, dumped my suitcase beside the bed, and flopped face down across my mattress. A shower and a nap sounded REALLY good.\n\nBut something niggled in the back of my brain, telling me I was forgetting something. A minute later, I realized I was actually forgetting someone. So I reached over for the cordless telephone handset on my nightstand and started dialing her number from memory. And after five or six rings, a female voice in heavily-accented Korean said, \"Herro?\"\n\n\"Hi, this is Matthew. Is Alice available?\"\n\n\"Ah, Mattoo. Yes, one moment,\" her mother replied. She was well familiar with me.\n\nA minute later, Alice picked up the phone. \"Hey, Matty! You guys are back from the trip?\"\n\n\"Yeah, I just landed on my bed two minutes ago. I missed you.\"\n\n\"I seriously doubt that,\" Alice snorted. \"Not with five girls vying for your attention, mom or no mom.\"\n\nI chuckled. \"Actually, Mother spent the whole time with her boyfriend. The girls and I had the cabin all to ourselves.\"\n\n\"Whoa...\" Alice went silent for a moment, letting that sink in. \"I'm... wow. How are you still STANDING?\"\n\n\"I'm not. I'm flat on my back pretty exhausted.\"\n\n\"Surprised you're not dead of dehydration. And there are a ton of other things I want to say but can't with my mom five feet away watching me have this conversation.\" I heard her cover the receiver for a moment, but not so much that I couldn't hear the burst of Korean exchanged between Alice and her mom.\n\nEventually, she came back to me. \"So what's up? I seriously hope you didn't call me just to gloat.\"\n\n\"No, no, of course not. Actually, I was hoping you had time for us to hang out like in the old days. Maybe you could come over here and play video games or something?\"\n\n\"Tempting. Actually, a little TOO tempting. I'm not totally sure how I'd handle myself if I went over to your place. Too many fond memories. Why don't you come here, actually?\"\n\n\"Sure, sure, no problem. When would be a good time for you?\"\n\n\"Anytime, really. I'm playing FF8 right now.\"\n\n\"You want me to come over now?\"\n\n\"Thought you were exhausted.\"\n\n\"Never too exhausted for you. I was serious when I said I missed you.\"\n\n\"Alright then. Come on over. I'll see you in a few.\" She hung up without waiting for further response.\n\nMother was in the kitchen when I came downstairs and grabbed the keys to the van off the hook. \"Going out again so soon?\"\n\n\"Going over to Alice's place to play video games.\"\n\nMother smiled, a warm smile that was exactly the kind of maternal expression she claimed to have no instinct for. But I didn't comment further as I hopped into the van and started the engine.\n\nI really HAD missed her.\n\n****\n\n\"Ungh, ungh, ungh,\" Belle groaned every time my cockhead hit that little bump at the end, setting off little sparkles in her brain. \"You fit so perfectly. Any shorter and you wouldn't reach. Any longer and this would hurt.\"\n\n\"Hmph, hmph, hmph,\" I grunted, concentrating on my technique to keep up the rhythm and hit that spot she loved so much every time.\n\n\"Fuuuuck, Matty...\" the petite strawberry-blonde moaned. \"You're gonna make me cum again. I'm gonna cum, Matty. Uuuuunnnnggghhhh!\"\n\nThe hot little pixie beneath my body dug her fingernails into my shoulders as she tensed up and came. Her chest thrust into my belly as her back arched, and she was so tight to begin with that when her cunt clamped down, I couldn't even move. So I stopped thrusting and held on for the ride as Belle writhed and wriggled beneath me in orgasmic ecstasy.\n\nA couple of minutes later, her legs relaxed their grip from my calves and she let her arms flop out to the sides. She smiled beatifically and started giggling, buoyed by the blissful bubbles bouncing around Belle's brain. But when her pussy went slack and gave me room to breathe, I started up my pumping motions and bent down to kiss the top of her head.\n\n\"In or out?\" I asked, by now a familiar question of whether she wanted me to stay in and blast into her womb, or pull out so she could swallow my load instead. Matty's Cumslut usually wanted me to pull out, but she wanted me inside her often enough for me to ask.\n\n\"Out.\"\n\nI nodded, put my forehead down on the pillow, and concentrated on piledriving my dick through her ultra-snug snatch. Free to chase my own pleasure, I rapidly masturbated myself with Belle's tight little body, feeling the pleasure build until I couldn't take it anymore. Yanking myself out and taking a big step forward, I held my dick out in front of her while she quickly sat up and crammed my cock into her mouth. She bobbed her head only twice before it began spitting cumwads onto her waiting tongue, and she moaned rapturously while drinking every drop down.\n\n\"Fuuuck, B. I don't deserve you,\" I marveled while watching the elfin beauty suck down my sperm.\n\nShe smiled around my dick and kept swallowing. Only after every drop was gone - plus some time spent nursing the tip just to be sure - did she finally pop off me and grin. \"I'm one of a kind.\"\n\n\"That you are,\" I agreed as I turned and flopped onto my back, breathing heavily.\n\nSomehow still energetic, Belle hovered above me. \"So based on how backed up you were, I'm gonna assume you and Alice didn't do anything naughty.\"\n\nI arched an eyebrow at her. \"In her house? With the door open and her mom outside? Uh, no. Definitely not.\"\n\n\"So what... It's eight o'clock now and you left here right after we got home so... You spent more than five hours together just playing video games?\"\n\nI shrugged. \"Her mom made dinner, so it wasn't ALL video games. But yeah, mostly video games. I'm out of practice. Been spending so much time keeping the BTC sexually satiated that I hadn't picked up a controller in a while. Alice schooled me and I didn't wanna quit until I beat her.\"\n\nBelle snorted and shook her head. \"So when's your next date?\"\n\n\"I told her I'd come over tomorrow after lunch.\"\n\nShe gave me a curious look. \"Did you already clear that with Sam? I thought she wanted to meet up with you tomorrow.\"\n\nI shrugged. \"Sam told me to come over tomorrow morning.\"\n\n\"And you think she'll let you out of her house right after lunch?\"\n\nI shrugged again. \"I'm pretty sure I can help her get her fix before lunch, yes. And she wants Alice back in the BTC as much as I do, so if I tell her I'm meeting Alice, it won't be a biggie.\"\n\n\"I guess so. What about everybody else? Zofi, Mari, Neeeevie?\"\n\nI blinked. \"Why'd you stretch out Neevie's name like that?\"\n\n\"Oh, nothing.\"\n\n\"Belle...\" I warned.\n\n\"Seriously, if you don't know, then I'm not spelling it out for you.\"\n\nI sighed. \"I haven't talked to her since the trip.\"\n\n\"You know she wants you to call her.\"\n\n\"I don't wanna call her.\"\n\n\"Sure you do.\"\n\n\"Well of course I do, but I'm not going to.\"\n\n\"Why not?\"\n\n\"Because.\"\n\n\"That's the worst answer in the history of answers.\"\n\n\"No it's not.\"\n\n\"Really? What would be a worse answer?\"\n\n\"I don't know, but that's not the point.\"\n\n\"I know it's not. The point is that you feel the need to avoid her. Why?\"\n\n\"You know why.\"\n\n\"Of course I know why; I'm a girl. But I'm also your friend, which is why I think you should call her.\"\n\nI frowned. \"You know, I would've thought you'd be happier if I avoided Naimh a little bit. More time with you this way... doing THIS.\" I emphasized the last word by sliding my hand up her thigh and tickling her pussy.\n\n\"Neevie wants to be doing this with you too. Probably more than I do. WAY more than I do.\"\n\nI sighed. \"I know.\"\n\n\"Then why don't you want to let her? Clearly you both enjoy doing it with each other.\"\n\n\"Were you NOT at the same conversation I was? The one about no one girl monopolizing my time and stealing me from the others?\"\n\n\"You're NOT being monopolized. You spent all afternoon with Alice, you're with me right now, and you're visiting Sam tomorrow. I'm pretty sure you'd visit Mari and Zofi without a second thought. The fact that you feel the need to avoid Neevie speaks volumes.\"\n\n\"Well I do.\"\n\n\"Because you're afraid you'll like her too much?\"\n\n\"I already like her too much; that's the problem. I close my eyes, a stiff breeze comes up, and I start imagining our bodies twisted together, scaling the heights of unlimited ecstasy.\"\n\n\"You sound like a trashy romance novelist. Is the sex really THAT good?\"\n\n\"It's pretty fucking amazing,\" I chortled immediately.\n\nBelle pouted for a moment and looked away from me.\n\nI caught her look and added a little hastily, \"I mean, sex with you is pretty amazing, too.\"\n\n\"Nice try,\" she drawled.\n\nI frowned. \"Are you jealous?\"\n\n\"Of course not. Maybe a little. Okay, yes I mean what's-so-great-about-her-anyway?\" she said hurriedly at the end there. \"Is it because her boobs are bigger than mine?\"\n\n\"Sex is about more than big boobs.\"\n\n\"It's because she let you fuck her ass.\"\n\n\"No. Well, yes. But if I'm being honest, sex with Neevie was amazing way before she let me in her ass.\"\n\n\"I thought you liked my tight pussy.\"\n\n\"I LOVE your tight pussy, B. You're trying to compare apples and oranges here.\"\n\n\"And you like apples better.\"\n\n\"Belle, seriously.\"",
        "She pursed her lips and sighed. \"You're right, you're right. I'm being...\" She didn't finish that sentence.\n\n\"You shouldn't feel bad,\" I told her. \"You're like a month removed from losing your virginity. Neevie's been... well she's done this more times than you have.\"\n\n\"Sounds to me like you and I need to catch up to her in that department then.\"\n\nI gestured to my penis. \"I'm game if you wanna help.\"\n\nShe reached over and patted my naked junk, but didn't try to start something yet. Belle took a deep breath, sighed, and shook her head. She furrowed her eyebrows, gave me a serious look, and asked, \"Are you afraid you like having sex with her too much? Or are you afraid you LIKE her too much?\"\n\nI sighed, decided I didn't want to talk about Naimh anymore, and asked, \"When are you gonna tell your dad about us?\"\n\nBelle frowned. \"You're changing the subject.\"\n\n\"Damn straight I am.\"\n\n\"I don't know yet.\"\n\n\"If you told him now, you could stay the night tonight. Clearly, Mother won't mind.\" In fact, Mother was downstairs right now and probably had heard me and Belle fucking a few minutes ago. \"I'll hold your hand, we tell him together, and then give him some space to think about it while we come back here and snuggle all night.\"\n\nBelle rolled her eyes. \"Mari's the big snuggler.\"\n\n\"C'mon, was it so hard to fall asleep in my arms?\"\n\n\"No. Yes. I mean, I loved cuddling with you. It just felt... I'm just used to falling asleep alone. It felt a little weird having your arms wrapped around me. I kept getting scared that I'd move at the exact wrong moment and prevent you from falling asleep.\"\n\nI shrugged. \"So we should practice. Like... every night... Until we get used to it, you know?\"\n\n\"Sure you don't want to practice falling asleep with Neevie every night?\"\n\nI sighed and averted my gaze. \"Of course I would. But her parents would flip.\"\n\n\"My dad will flip too.\"\n\n\"He's not going to. I mean, he'll be surprised, and yet won't be surprised, you know?\"\n\nBelle pursed her lips again and shook her head. \"Not tonight. We just got BACK from the trip. I think I should spend ONE night under my dad's roof before I move in with you.\"\n\n\"Fine, fine.\"\n\n\"Probably better that I don't stay with you overnight tonight anyway. I'm liable to want a morning protein snack, and that would take a bullet away from Sam. I still need to make sure I stay on her good side.\"\n\n\"Yeah, why IS that? You've been awfully deferential to Sam lately.\"\n\nBelle shrugged. \"I'm trying to keep the BTC running harmoniously. Keeping Sam satisfied is key to that. Or more to the point, upsetting Sam is the fastest route to blowing the whole thing up.\"\n\n\"And don't you think me spending a bunch of one-on-one time with Neevie would be one of the fastest ways to upset Sam? I wouldn't be surprised if she's kept a running tally of how many times I've fucked Neevie versus how many times I've fucked her. And she HAS to stay in the lead.\"\n\n\"Okay you may have a point there.\"\n\n\"Banging Neevie with the whole group around is one thing. Having all the other girls around keeps both her and me in check. But if you give us too much time alone together... I mean...\" My voice trailed off as I grimaced. \"You saw what happened the night after, when Sam just HAD to try and one-up her.\"\n\n\"I get it, I get it.\"\n\n\"So you and me are on the same wavelength about this?\"\n\n\"Yes, agreed.\"\n\n\"So stop needling me about me avoiding Neevie, alright?\"\n\n\"Fine, fine.\" Belle took a deep breath, sighed, and keeled over, putting her head on my chest and rubbing it softly. \"And I WILL tell my dad about us soon. I promise.\"\n\n\"Please. I haven't liked having to be so on guard during all these dinners at your house. After everything your dad has done for me, I keep feeling this wracking guilt about the things I've done to his little girl without his knowledge.\"\n\n\"I'm not so little anymore.\"\n\n\"You're still little, shorty,\" I chided.\n\nShe smacked my chest and glared at me, but not for long. She put her head back down, resumed rubbing my chest, and eventually slid her hand down my leg. The conversation had given me some time to recharge, and when a naked Belle started petting my trouser snake, like a flute-serenaded cobra he started to rise.\n\n\"Should I feel guilty about the things I've done to your mom's little boy?\"\n\n\"I don't think anyone would call him 'little',\" I drawled, feeling my new erection come to life. \"Plus, there's the whole bit about Mother knowing exactly what we're doing up here and clearly giving her permission.\"\n\n\"Yeah. For all the complaining you did over the years about her not being a part of your life, she's turning out to be pretty cool.\"\n\n\"Letting me bring girls into the house now doesn't make up for years of neglect.\"\n\n\"I'm not saying it does. I'm just saying it beats years of neglect and NOT letting you bring girls into the house... or renting Tahoe cabins for Matty's Harem.\"\n\n\"I suppose that's true.\"\n\n\"A cabin where five teenage hotties spent three nights rubbing their nubile bodies all over your naked flesh, letting you dip your wick into their steaming pussies, screaming in absolute ecstasy while you had your way with them, thrusting powerfully, squeezing so tightly, even tonguing each other! There was so much writhing, so much cum everywhere, mmm tasty cum... in my mouth... in all those pussies... and then back in my mouth... and... NNNNGHHH!\"\n\nBelle moaned as I covered her body with my own and shoved my refreshed erection into her tight pussy. Her petting had turned to stroking the more she talked, and when it became clear she needed me inside her, I was quick to climb aboard.\n\nTen minutes later, I groaned, \"In or out?\"\n\n\"In,\" she replied, eyes glittering. \"I wanna feel you oozing into my panties, and when I get back to my room I'll lay back on my bed, scoop you out, and suck your essence off my fingertips.\"\n\n\"Holy fuck, B,\" I grunted at the visual, and all of a sudden I was cumming deep inside her. \"Annabellllllle.\"\n\n****\n\n\"Hey, Matty,\" Alice greeted while giving me a fist bump when she opened the door the next day at 1pm on the dot, right when I told her I'd come over. With an appraising look, she added, \"You look a little worse for wear. You sick?\"\n\n\"What? No, I'm fine. Why?\"\n\nShe shrugged and waved me into the house. \"I dunno. You look paler than usual.\"\n\n\"A little tired, I admit. It's been a busy week.\"\n\n\"I'll bet,\" she commented while leading the way to her bedroom. \"Lemme guess, the girls are taking advantage of having no school to invite you into their bedrooms while their parents are at work?\"\n\n\"Huh?\" I blinked a couple of times, having not quite heard her. I'd gotten distracted.\n\nAlice turned around and walked back to me. \"Hungry? Did you not eat lunch?\"\n\nI tore my eyes away from the leftover kalbi short ribs on the kitchen counter. I hadn't realized I'd come to a stop instead of following her. \"Uh, well...\"\n\n\"Eomma!\" Alice called down the hallway before jabbering something in Korean I didn't understand, other than the word \"Matty\". Her mom hollered something back, so Alice went to a cabinet, grabbed a plate, and started loading some up short ribs.\n\nI realized what she was doing and muttered, \"Uh, thanks.\"\n\n\"Okay, who was it?\" she asked, holding up the plate of ribs along with a heap of white rice out to the side, far out of my reach.\n\n\"Um, what?\"\n\n\"Which girl were you visiting this morning? Or girls? Which girls kept you fucking them so long you didn't have time to eat before racing over here to meet me by 1pm just like you'd promised?\"\n\nI blinked. \"I never said--\"\n\n\"Tell me who or I'm not giving you the food.\"\n\nI blinked, blushed, and stared at the floor for a minute. For half a second I thought about denying everything, insisting I'd eaten plenty for lunch, and was just tired from not having slept well the night before. But this was Alice, who knew my lies almost as well as Belle. \"Uh, Sam and Zofi. Sam had actually never had sex in her own bed before, and her parents were both at work.\"\n\n\"Wow, Zofi? I never thought she'd give up her cherry. Didn't seem all that interested the last time I saw her, save for holding your hand at school all the time.\"\n\n\"Uh, no, not Zofi. She's... well, she's really into Sam.\"\n\n\"Obviously.\"\n\n\"And she's really into watching.\"\n\n\"Ohhh...\"\n\n\"So Zofi's still a virgin. Although she HAS started to really like going down on me.\"\n\nAlice mused on that, gave me a 'well, okay' shrug, and handed me the plate. \"You know the rules.\"\n\nI nodded. Eat at the dining table. Don't spill anything. No food was allowed in the bedrooms. I'd eaten at Alice's place enough times over the years.\n\n\"This actually works out great,\" Alice said with a grin. \"I was ALMOST done with this last level and was trying to bang it out before you got here. Now you've bought me another fifteen minutes.\"\n\nI smiled. \"Thanks for the food.\"\n\n\"No worries. See you soon.\"\n\n****\n\nThey say time flies when you're having fun, and the next week flew by in the blink of an eye. I kept making visits to BTC girls while their parents were at work, or they made visits to me. I have no idea if they called around to coordinate, but there were never really any conflicts about multiple girls wanting to see me at the same time, and we never hooked up on back-to-back days. They spaced themselves out, got their fill, and didn't need a repeat for at least two days or more. I even visited Zofi's house without Sam twice. Belle was the only exception to the two-day rule, of course. She just came over whenever she wanted, even if she'd fucked me just that morning or the previous night. Of course, Belle and I spent a lot more time talking than screwing.\n\nNot that I didn't also spend time talking to the other girls one-on-one. My visits usually lasted anywhere from two to four hours, and no matter how horny we might be, we couldn't fuck that entire time. I knew a lot of basic information about each of them, even some of their hopes and dreams. But engaging in idle chit-chat in a large group, almost half of it revolving around school, is quite different from having a one-on-one in a girl's bedroom with a wealth of personal keepsakes around to inspire my curiosity (usually while cuddling together as we cooled down from our recent exertions).\n\nNaimh loved to talk about her art projects, and I was happy to listen to her imagination run wild as she told me how she got inspired to make this particular painting, or how difficult it was to get a particular weave in another piece. She showed me some costumes she had sewn herself, and I was suddenly quite inspired to see her in a Princess Toadstool costume from Super Mario Bros (or maybe Jessica Rabbit).\n\nMari was big on baking, and I knew she and Belle traded recipes all the time. What I didn't know was that she collected bits of memorabilia from famous chefs, even buying stuff on E-Bay. She said it was her way of feeling like she had a personal connection to them. She also had an old baseball cap of mine on a shelf above her desk. I recognized it as my little league baseball cap from sixth grade. Apparently we'd gone hiking or just for a walk or something, she didn't remember exactly. She'd complained that it was hot out, so I'd taken the hat off my head and gave it to her. The season was over and I must've forgotten about ever getting it back, but she remembered.\n\nZofi, as I well knew, loved to dance. She could never be a ballerina with a D-cup, or even a contemporary dancer. Her height was actually a disadvantage, too. But that didn't mute her love of the art, and when she did some crazy split thing with one leg planted and the other one high in the air, I admittedly started fantasizing about what it might be like to have sex with her in some of those positions. What surprised me was the amount of 49ers gear she had in her room. Dainty, elegant, exquisitely beautiful Zofi was a die-hard Niners football fan. She knew every player and half the statistics of the team. Hell, she knew more about them than me! Who knew?\n\nSam... well... Sam was a bit of a workaholic. She read voraciously, but not sappy romance novels, legal thrillers, or what you might call \"Young Adult\". She read history, politics, scientific journals, you name it. We never talked about this kind of stuff with the BTC of course. But in private, Sam was fucking DRIVEN. On the outside, she looked like any other big-titted blonde bombshell and you'd instantly assume she was a sexy body destined to become some rich brain surgeon's arm candy, not the actual brain surgeon herself. I mean, I knew she was smart, because half the time the rest of us were asking HER questions for help on our homework. But she blew me away with her knowledge on a wide range of topics far beyond your ordinary high school senior. Seriously, for years my idea of a good time on a Saturday afternoon was to zone out in front of a TV screen for four hours. Sam would spend that same afternoon reading the Wall Street Journal. Her brain just never seemed to turn off.\n\nBetween visits with the BTC girls, I'd hang out at Alice's place to play video games and chat. She also came over to my place once as well. Sometimes she asked about the other girls. Most times she didn't. I told her during that second visit that she should really call Naimh. As it turned out, she did call Naimh on Christmas Day, and they had a nice long chat. And they started visiting each other the following week as well, although never at the same time as me.\n\nSpeaking of Christmas, my family and Belle's had a low-key affair, much like Thanksgiving. We all shared presents, had a nice conversation, and went our separate ways.\n\nBelle still didn't want to tell her dad about us, but I was busy enough servicing all 5 girls during the day that adding Belle to my overnights would probably have killed me.\n\nBut oh what a way to go.\n\nSo like I said: time flies when you're having fun. And I was having a LOT of fun.\n\nAnd then came Thursday.\n\n****\n\nThe doorbell rang at 12:59pm, and I greeted, \"Hey, Alice. How's it hanging?\" I held my fist out for a bump.\n\n\"You're looking chipper today,\" she said without preamble while bumping my fist. \"Did you NOT have a morning appointment today?\"\n\n\"I did; no biggie. My endurance must be getting better from all these workouts.\"\n\n\"'Workouts',\" Alice scoffed with an eye roll. \"I'd ask who, but then I don't really wanna know. Do I smell pizza?\"\n\n\"You hungry?\" I asked. \"It's not short ribs, but it'll do in a pinch.\"\n\n\"You kidding me? I've had nothing but Korean food for almost two weeks straight now. Except for Christmas: then we had Chinese food.\"\n\n\"Box is in the kitchen,\" I told her. \"I'm gonna go fire up GT2.\" Belle had gotten me the game for Christmas and Alice and I had played it exclusively ever since.\n\n\"Actually, I had something else in mind,\" she muttered a little mysteriously before biting her lip, frowning, and waving me off. \"You know what, nevermind. Start the game. Lemme just get a few slices first.\"\n\nI looked confused for a second before deciding to just go with it, so I shrugged and went into the family room. While the video game console was restricted to Alice's bedroom at her house, Mother didn't care if I played on the big plasma TV. It was the chief reason Alice had started coming over to my place to hang out instead of having me come to hers.\n\nShe nuked her slices before joining me and watching me start. Clearly, she must've eaten lunch and wasn't that hungry since she spent more time telling me what to do than finishing her two slices. She just sort of gnawed on them a bit to get the pizza flavor in her mouth but ultimately didn't even finish the second slice. Instead, she grabbed a controller and we raced around various tracks for more than an hour. But eventually it was time to take a break and we got up to get some water.\n\nAlice was pretty pumped up. She'd beaten me the last three races in a row, and was practically bouncing from foot to foot as we stood in the kitchen getting drinks. I told her, \"You're going DOWN now.\"\n\nSomething dangerous flashed in Alice's eyes. \"Is that a sex joke?\"\n\nI jerked my head back, caught off-guard. \"Um, what?\"\n\n\"'Going down' on you? Kind of an obvious euphemism. You must have sex on the brain.\"\n\n\"I never said 'going down on me'. I just said you're 'going down'... Like... racing.\" I chuckled. \"Sounds like YOU'VE got sex on the brain.\"\n\nI was prepared for a lot of responses. I figured she might shove me in the upper arm and call me a jerk. Or maybe she'd roll her eyes and silently give me a dismissive wave. I did NOT expect her to say, \"Yeah, well maybe I do have sex on the brain, and it's been pretty fucking annoying not having you help me get off for the last month.\"\n\nMy jaw dropped in shock and I actually spilled some water down my chin. Sputtering, I wiped it up with my sleeve while gawking at her goggle-eyed. \"Umm... run that by me again?\"\n\n\"Nevermind. Not important.\" She waved me off and started walking away, calling over her shoulder, \"Be right back.\"\n\nI frowned, wondering where she was going for like a second before returning to my glass of water. Actually, I felt like a Coke and went to the fridge to get a can, cracked it open, and headed back into the family room to re-start GT2.\n\nBut Alice returned holding a VHS video in her hands. I immediately recognized The Little Mermaid cover and started panicking inside. I knew which movie was inside that plastic case, and knew that it was NOT The Little Mermaid. It was a cheesy porno called Cum-Drenched Wet Fucking 5. \"Uh, where'd you get that?\" I asked, trying and failing to keep the nervousness out of my voice.\n\nShe shrugged. \"Your room.\"\n\n\"Ahhh, I mean...\" I hemmed and hawed. \"I'm not really in the mood for a Disney princess movie. If you wanna watch a movie, I'm sure there's something better we could pick.\"\n\n\"Relax.\" Alice grinned rather smugly at me as she tapped the cassette with her free hand. \"I know this isn't The Little Mermaid.\"\n\nMy eyes got big. \"H-how?\"\n\n\"Belle found it ages ago,\" Alice replied with a dismissive shrug. She handed me the tape and said, \"Put it in.\"\n\nI took the VHS tape while she smirked at me, and she immediately started putting her long, dark hair into a ponytail. Dumbfounded, I did as instructed, kneeling in front of the TV console and feeding the tape into the VCR we had stacked directly beneath the DVD player.\n\nGrabbing both the TV remote and the VCR remote, I got the input switched over from the PlayStation. When I turned back around, I immediately dropped both remotes at the sight of Alice with her track pants and panties down around her ankles, in the process of stepping out of them. My jaw joined the remotes on the floor a second later.\n\nThe tape resumed playing in the exact same spot where I'd last left it, during one of the (ahem) good scenes. The girl was riding her man reverse cowgirl, fake tits bouncing wildly as she impaled herself again and again on his large phallus. The guy feverishly groped the girl's enormous gravity-defying breasts as she urged him on. Alice was now completely bottomless as she reclined on my couch, fingers already rubbing her crotch as she drawled, \"That's a lot of tracking lines. You must've watched this movie a LOT.\"\n\nI blushed pink and gawked at my old friend, completely ignoring the movie. Alice got into it right away and seemed to be on a really short fuse because she was already humping her hand quite urgently and writhing on the couch chasing an orgasm. In less than two minutes she shuddered and squealed a small climax, her strained voice half-remembered from the number of times I'd been the one to make her go off.\n\nBreathing heavily as she came down from her peak, she sighed and muttered contentedly, \"Damn I needed that.\"\n\nI blinked, still kneeling in front of the TV console. \"Apparently.\"",
        "She frowned at me and thumped the seat cushion beside her. \"What are you doing over there? Sit down and take your pants off. This is going to be really weird if I'm the only one masturbating.\"\n\n\"Uhhh, I guess...\" Standing up, I dropped my sweatpants and boxers, stepped out of them, and almost gingerly walked over to join her on the couch. My cock was rock hard from watching her (I still hadn't even glanced back at the movie), and it jutted out from my crotch at a steep angle while I now tried to fix my gaze on the screen. A handsome stud with a six-pack, the same guy from the first scene, walked on screen and robotically announced to nobody in particular, \"Oh crap I am late,\" and ran out the door.\n\nAlice, still lightly rubbing herself, glanced over at me and drawled, \"You're not gonna beat off? What, have you forgotten how? Now that the BTC is taking care of all your needs?\"\n\nEmbarrassed to NOT be masturbating (seriously, who would have ever thought THAT?), I wrapped my hand around my schlong and started slowly stroking. There wasn't much to inspire me at the moment; the characters were standing around talking in the lead up to the next sex scene.\n\nWhile continuing to masturbate with her gaze fixed on the screen, Alice sighed and started talking. \"Do you have any idea how long it's been since I had a good orgasm? Before your tongue became my E-ticket ride, I used to watch porn at Neevie's house, or sometimes Sam's. But I don't think either of them would be much interested in a girls' jilling off session at the moment. Now? You've met my Korean Baptist mom. If I stay up late enough at night, I can watch the scrambled Skinemax channel on mute and can't even let out an orgasmic squeak while praying I don't get caught. And I rarely get more than the occasional distorted tit at that.\"\n\n\"Uh, sorry about that,\" I muttered, feeling I should say something sympathetic. At the same time, I now had the image of Naimh and Alice masturbating side by side in Neevie's bedroom, and belatedly realized I was stroking my dick a little faster and a little harder.\n\nOn the TV, Mr. Handsome Six-Pack leaned down and began softly licking the girl's pussy. Alice sighed blissfully, \"Okay, back to the good stuff.\" She bit her lip cutely and started rubbing harder.\n\n\"Mmm-hmm,\" I grunted, my eyes entirely on her. I'd already seen the movie a bunch of times anyway.\n\nFeeling my gaze, Alice glanced over at me and shook her head wryly. \"Face. TV. Now.\" Her voice brooked no dissent.\n\nI obeyed and turned to face forward.\n\nShaking her head, Alice scoffed, \"Fuck, this acting is ridiculous. And are you really turned on by those floatation devices bolted onto her chest?\"\n\n\"I like big tits and I cannot lie,\" I replied to the tune of Baby Got Back.\n\nAlice glanced down at her own chest. She wore a rock band t-shirt, a baggy thing that obscured what I knew to be an athletically trim body underneath, and she sighed regretfully. \"I understand that guys like them, but they're just always in the way. I fucking stopped playing on the volleyball team because they hurt too much. How many times have I complained about having big tits?\"\n\n\"A million times, give or take,\" I replied immediately. My memory superimposed what Alice would look like completely naked, as if her t-shirt had simply disappeared, but I shook that thought from my head immediately. \"Maybe a million and a half. But we'll always be friends, even if you do happen to have boobs.\"\n\nAlice chuckled and immediately reached over with her free hand to give me a fist bump. I bumped her, and she asked, \"Always be friends, even if we're masturbating side-by-side to a shitty porno?\"\n\n\"Always,\" I replied confidently with a nod.\n\nWe fist bumped again, and actually turned to look at the movie for a bit, starting to feel more comfortable about what we were doing. Despite the fact that both of us were bare butt naked below the waist, it felt like we were finally slipping back into the old buddy camaraderie we'd shared since seventh grade, and I started to believe we could put the past several weeks' estrangement behind us. Alice focused on her rubbing, I focused on my stroking, and together, we watched the Mr. Six-Pack eat out Miss Fake-Tits until she let out an overly-dramatic moan and cried out how amazing it felt for him to eat her out.\n\nNow it was his turn, and Mr. Six-Pack sat in a chair while Miss Fake-Tits knelt in front of him and started taking his pants off. Alice's breathing was shallow and rapid, but like I said, I'd already seen the movie a bunch of times. And my gaze drifted over to Alice again.\n\nShe didn't reprimand me this time though. Her fingers were working her clit, and she muttered while staring at Miss Fake-Tits lowering her mouth around the Mr. Six-Pack's cock, \"I think you might actually be bigger than the porn star.\"\n\n\"Uh, thanks,\" I replied, unsure how else to reply to the compliment.\n\n\"How many blowjobs do you think you've had in the last couple of months? A few dozen? A few hundred?\"\n\n\"What?\"\n\n\"I'm serious. How many?\"\n\n\"Uh, I have no idea. To be honest, Belle got me past a few dozen in the first two weeks before telling the rest of you. After that, it would've been pointless to try counting.\"\n\n\"That many, huh?\"\n\n\"Uhhh, well...\" I stammered.\n\n\"Who's the best?\"\n\n\"What?\"\n\n\"At giving blowjobs. I mean, I know Mari seems to have no gag reflex. Neevie said she was the Blowjob Queen of the BTC.\"\n\nI chuckled and nodded. \"She's quite proud of it, actually.\"\n\n\"Bet you have her mouth around your dick as often as possible.\"\n\nI shrugged. \"Not THAT often. I mean, Belle still has more alone time with me than anyone else, so in terms of pure number she's still way up there. It's like 'Matty's Cumslut' doesn't want to go to sleep without a belly full of jizz. She's like a bloodhound and will go after anyone's creampie at this point. Mari even let her suck one out.\"\n\n\"No shit. Mari? It's always the shy ones that turn out to be the kinkiest, huh?\"\n\n\"I dunno about kinkiest, but she's definitely opening my eyes to a whole new side of her.\"\n\n\"How 'bout Sam? She ever pull off the deep-throat she was so desperate to finish?\"\n\n\"Uh, yeah actually. Said she did a lot of practicing on her toys at home to prep herself. Although to be honest, the whole deep-throat thing is a much bigger deal to her than it is to me. My favorite part is the way she looks up at me with her seductive eyes, almost as if asking for my approval.\"\n\n\"Neevie?\"\n\nI popped my eyebrows. \"Wow, where to begin? You ask about a 'best', and for me at least, it's her. Girl has a wicked tongue. She doesn't try to deep-throat me as often as Mari or Sam, although she CAN do it. She's just so good at doing everything, it... it just blows my mind.\"\n\n\"She's not blowing your mind.\"\n\n\"Yes, she is,\" I contradicted with a chuckle, \"WHILE she's blowing my dick.\"\n\nAlice laughed. \"And Zofi?\"\n\n\"Zofi is...\" My voice trailed off as I furrowed my eyebrows and concentrated. \"To be honest, the biggest high is just that it's ZOFI. She's not experienced and she's not like a natural-born cocksucker. She doesn't seem all that interested in sucking ANY cocks at all, really, and the fact that she chooses to suck MINE just feels... special.\"\n\n\"I can tell. You're stroking yourself pretty good there now just thinking about it.\"\n\nI blinked in surprise and realized that yes, I was jacking my shaft with some serious urgency now. Alice was rubbing herself pretty aggressively too, her eyes unfocused enough that I thought she might be imagining the BTC girls giving me blowjobs one after the other instead of watching the TV, even if her face was still pointed in that direction. And I replied quietly, \"So are you.\"\n\nShe nodded and mumbled, \"I think I'm gonna cum soon.\"\n\nOn screen, Mr. Six-Pack had bent Miss Fake-Tits over his desk and entered her from behind, building speed until his pelvis was slapping against her ass with each hard thrust. I saw this in the corner of my eye, my focus on Alice's enraptured face and the mounting ecstasy written across her lovely features. Even though she was a self-proclaimed tomboy who mostly eschewed makeup, she really was beautiful. As she whimpered quietly but in perfect sync with the porn star actress's overly-dramatic moans, I could tell she was getting really close to cumming. And I found myself timing my strokes to match the frantic sloshing sounds coming from her hand to better fantasize I was the one about to bring her to orgasm.\n\nWe sat on side-by-side cushions. I was close enough that I could've reached out and shoved a finger inside her, or taken over rubbing her clit, or started palming her breast, or grabbed her head so I could mash our lips together and suck her tongue into my mouth. All of those things were infinitely more appealing to me than watching a really cheesy porn video, but I knew better than to actually do any of those things. In a way, it was just like being back in the old days. I accepted whatever the girl was comfortable with and didn't stray one millimeter beyond her boundaries.\n\nBut even more to the point, this was ALICE. She'd been my best friend since seventh grade, and I'd missed her companionship far more than I'd missed her body. In hindsight, I realized that from the moment I became the BTC's collective boyfriend and the lines of physical intimacy started getting crossed, my relationships with all of the other girls had steadily deepened at the expense of my friendship with Alice. Instead of spending my time hanging out with my fist-bumping female \"bro\", I'd started spending my time suckling boobs and getting as many ejaculations as I could. Not that an 18-year-old boy should necessarily be blamed for this shift in priorities, but recognizing how much I'd missed her would be the first step in making things right.\n\nI wasn't going to stop having sex with the BTC girls; let's make that clear. But between Alice and me, if the sex stuff had been getting in the way of our friendship, then it was the sex stuff that would have to go, not the friendship. Yeah, the idea of staring at her lustfully while jerking my meat and blowing my load all over my own stomach held some appeal. The idea of cramming my tongue down into her mouth, seizing hold of her hips, and slamming my sausage deep into her virgin snatch held even greater appeal. But I would gladly give up any chance of ever doing that just to have her give me a fist bump and pick up a game controller in the seat next to me.\n\nSo with that thought firmly in my mind, I turned to face the TV and let THOSE images fuel my fantasies. Miss Fake-Tits finally convulsed in orgasm, her head thrown back as she closed her eyes and howled her euphoric release, her whole body still jerking back and forth while Mr. Six-Pack pounded her all through her orgasm.\n\n\"Ah! Ah! FUCK YEAH!\" Alice cried out as she shuddered in ecstasy. She reflexively grabbed my thigh with her free hand and the whole couch started shaking as she went into overdrive on herself. \"I'm cumming!\" she shouted, \"I'm cumming!\"\n\nWhile Alice climaxed with Miss Fake-Tits, I was waiting for the money shot. I was well-familiar with this video, and knew that Mr. Six-Pack would keep hammering that pretty ass for another minute until she came down from her high, and he would then spin her around to press his big dick into the valley of her breasts. Sure enough, Mr. Six Pack pulled out and jammed his fat erection between those big fake tits, using the girl's own juices for lubrication as he pounded away at her cleavage. I pounded away at my own meat, my hand becoming a blur of motion while I anticipated that big cock on screen firing great wads of sperm all over the big-titted babe.\n\nAnd then all of a sudden, my hand wasn't on my dick anymore. Alice had knocked it aside when she abruptly dropped her mouth onto my dick, hoovering with incredible suction while her own right hand rapidly pumped the remaining couple of inches. I was already on the verge of cumming, and despite the system shock to my brain, my dick knew what to do. It belched, blasting off within the warm, welcoming confines of Alice's mouth, detonating little bursts of cum inside her oral cavity which she drank down almost as fast as I could shoot them.\n\nAlmost.\n\nShe couldn't quite handle it all, and the very idea of shooting my sperm into my best buddy's mouth called up reserves of spunk to properly celebrate the occasion. So when she started choking and had to pull off to breathe, my dick went ahead and spat out a few extra spurts that painted Alice's poor face from forehead to chin.\n\nAs soon as I was done, I felt instantly apologetic. After all those afternoons with the girls teasing Alice about my dick going off and getting yucky sperm onto her hand or something, and I'd gone and given her a facial.\n\n\"Holy crap, Alice. I'm so sorry!\" I exclaimed, reaching out to hold her head and making half-reaches toward her cum-streaked face with my fingers as if to help scrape my icky sperm off her skin, but could never quite bring myself to actually do it, so my hand kept retracting back.\n\nBut she just laughed, grinned, and scraped a glob of jizz off her eyelid so she could try and look at me with both eyes. \"That was so hot,\" she panted.\n\n\"What?\" I asked, confused. There was no way she could've meant what I thought she said. Perhaps she really meant that the temperature of my semen was too high for proper skin comfort.\n\nShe popped the finger that had scraped off the glob into her mouth and sucked on it. \"It's not bad,\" she commented. \"I mean, I don't quite get why Belle is fucking OBSESSED with swallowing every last drop she can get her mouth on, but... it's not BAD. I mean, I could get used to this.\"\n\nShe bent back over my lap and started sucking my schlong again.\n\nI stared at my old friend like she'd been replaced by a space alien. And in an absolutely, completely, and utterly dumbfounded voice, I asked...\n\n\"Who ARE you?\"\n\n****\n\n-- CHAPTER 20: Twister --\n\n****\n\n\"I'm just saying: This is a great example of good friends telling the truth, no matter what,\" Mr. K said, gesturing with his fork that still had a piece of penne pasta skewered on the end. \"Did it hurt at first? Yeah, totally. Did you get things worked out? Yeah, eventually. I mean, I don't know what went down between you guys, but I always knew Alice would come back into your life.\"\n\nI smiled and nodded, continuing to chew my dinner rather than attempt to answer in any way that would lead Mr. K into asking for more details about what \"went down\" between me and Alice. I especially didn't want him to know that she \"went down\" on me just this afternoon.\n\nTwice.\n\nWhile Alice and I both agreed that the sex stuff had been driving a wedge between the two of us, we had definitely not come to the same conclusion as to how the resolve the problem. I'd been thinking I needed to stop objectifying her and treat her in a completely platonic manner in order to get back to \"the way we were\".\n\nAlice came to the realization that you don't know what you have until it's gone. Having spent a month without getting Matty's face between her legs, she realized she actually CRAVED all the sex stuff she'd previously been bitching about. She realized she wanted a tongue wrapped around her clit as often as possible. She realized that the ONLY guy's tongue she'd want wrapped around her clit was mine. And then to her great surprise, when she saw me jacking my dick right next to her on the couch, she realized that she WANTED to feel me shooting off in her mouth.\n\nAlice got the \"urge\" that Zofi said she didn't have.\n\nAnd then she got the urge for me to return the favor, which I happily did.\n\nAnd then she got the urge to give me a complete blowjob from start to finish, not just catch the ending.\n\nAlice was still the same friend I'd always cared about, even if she had boobs... and even if she wanted us to go down on each other every now and again.\n\nFull sexual intercourse? I didn't know, and I wasn't going to ask. But we both knew that if she ever decided she was ready, I wouldn't turn her down. It would simply be the next evolution in our friendship.\n\nAfter Alice had gone home, I'd headed over to Belle's house to make dinner and, of course, tell her everything. I suppose there is a certain logic in two people becoming more emotionally connected after they've transitioned from platonic friends into physically-intimate friends, but the level to which I now felt comfortable exposing my innermost thoughts and feelings surprised me once I stopped to really think about it.\n\nThere's an old urban myth that if you put a frog into a pot of tepid water and then slowly heat up the pot, the frog won't jump out and will eventually boil to death. A classmate said he actually tried that experiment after catching a frog when we were in fifth grade, but the frog kept jumping out. He couldn't be sure if it was because the frog sensed the water heating up, or if the frog was simply bored and didn't want to stay in a damn pot with a human watching it. The point is: the experiment was a bust.\n\nWhat I'm getting at in a roundabout way is that the urban myth kind of represented my relationship with Belle. We had always been pretty close in an adoptive siblings kind of way, enough that the entire BTC knew how close we were. I'd fallen into a protective big brother sort of role and we spent so much time together that a certain level of familiarity was inevitable. But in the same way even real brothers and sisters don't share their private thoughts, I didn't share those with Belle either. For example, Alice used to know more about my secrets than Belle did, and I was certain Mari knew more of Belle's secrets than me as well. And hell, I hadn't even known that Belle masturbated to thoughts of having sex with me until that fateful night after Holly's aborted attempt to get my virginity.\n\nBut like the frog in the pot of water, things had been gradually changing since then. The more I shared with Belle, the more comfortable I felt sharing other things. We hung out, we chatted about whatever, and certain topics became less and less taboo. At first, I had tried to hold back the way I really felt about the other BTC girls, specifically Sam and Naimh, out of fear Belle would get upset or feel jealous that I had \"love\" feelings for her potential rivals. After all, she had told me she was \"in love\" with me. And doesn't a girl who says she's \"in love\" with a boy want that boy to ONLY be \"in love\" with her in return?\n\nAnd yet, \"voyeur\" Belle expressed no jealousy over my feelings for the others. Okay, maybe she could get a little jealous, like that apples and oranges bit when I remarked how amazing sex was with Naimh. And that's where the \"boiled to death\" part comes in my analogy.\n\nI had been losing the filters I would normally put up to prevent myself from pissing her off. I was losing the fear of saying something that could potentially fuck up my relationship with possibly the most important human being in my life. What would happen if I finally said something that made her REALLY jealous? And while -I- had been losing those filters and baring my soul, it occurred to me that I didn't really know all that much more about HER than I used to.\n\nMaybe I was just being so self-centered that I was grateful to unload things off my chest and never stopped to ask what was going through Belle's mind. Except, well, I had. She'd told me some stuff, mostly things I wanted to hear about her being totally cool with me banging the other BTC girls and how excited Matty's Cumslut was to suck out their creampies. But somehow I'd never quite gotten into her head the way she'd gotten into mine.\n\nJust like tonight.\n\nI'd come over here to Belle's house after Alice left, bared my soul, talked through all my confusing thoughts about not objectifying my best friend as a sexual creature and swearing that we'd always be friends, even if she happened to have boobs, and yet ending up with her going down on me and swallowing my cum for the very first time.",
        "Twice.\n\nTelling the truth, right? No matter what. Because that's what real friends do.\n\nSo why wouldn't Belle tell me HER innermost thoughts and feelings? How was she so good at deflecting me that I never even really realized she was doing so before? True, for a guy who had staked his initial reputation on being a great listener, it turned out I liked to talk a lot about myself, apparently, but still. What secrets did Belle tell Mari that she still kept from me?\n\nWhat secrets did Belle keep from BOTH of us, secrets she kept only for herself?\n\nDid I have any right to ask for those? Just because I'd become more than willing to expose my dirty laundry didn't obligate HER to, right?\n\nJust because -I- felt ready to tell her dad the truth about our relationship didn't obligate HER to, did it?\n\nBut even if she wasn't obligated, why was she still so hesitant to tell him? Was it a teenage girl's plain and simple fear of admitting to her father that she'd become sexually active? Or was there more to it than that?\n\nWas it as simple as, \"If it ain't broke, don't fix it\", meaning that we were getting away with the status quo for now, so why risk upsetting everything by giving him a reason to... well... get upset?\n\nI didn't know the answers to these questions, and they were starting to drive me nuts tonight. I wanted this angst GONE, one way or another. I wanted to tell Mr. K that I was fucking his one and only daughter, although perhaps not in such vulgar terms, and let the chips fall where they may. So tonight, at the dining table, when Mr. K said his little piece about telling the truth no matter what, I fixed Belle with a serious look that carried a loaded question in my eyes.\n\n'Should we tell him?'\n\nBelle's closed face was answer enough. 'Not tonight.'\n\n\"If you need to get something off your chest, just say it,\" Mr. K counseled sagely, relishing the opportunity to be the wise old man giving parental advice. \"Even if you're not sure how they'll react, if things are bad enough that it's stressing you out, you're better off just coming clean instead of keeping a secret all bottled up. You can drive yourself nuts that way; I've done it to myself. And if they're as good of a friend as you think -- if they're practically family -- they'll work with you to work it out.\"\n\nI blinked and nodded my agreement, saying, \"Yeah, totally.\" It was a typical teenaged response.\n\nBelle studied her food.\n\nAfter the meal I headed home. Alone.\n\nAbout a minute later, I walked through the front door of my house and noted with surprise that the lights were on. The sounds of women's voices filled the air, along with delighted laughter. And did one of those voices have a familiar Australian accent?\n\nI walked down the short hallway into the kitchen and gawked at the sight before me. Mother was still dressed from the office, but she sat in her usual seat at the dining table, refilling herself a fresh glass of wine from the bottle. The remnants of a take-out dinner were spread out before her. This, in and of itself wasn't the greatest shock in the world. She rarely came home this early in the evening, but it wasn't unheard of, especially since work had slowed down a lot during the holidays.\n\nWhat DID shock the hell out of me was her dining companion. Sam sat in a chair just around the corner from Mother, her own glass of wine in front of her, although hers was about a quarter full. The beautiful blonde bombshell saw me first and turned to look at me with delight in her eyes. \"Matty! You're home!\"\n\nSam dismounted the stool and scurried over to me with short little steps and her hands fully extended towards me. She slammed into my chest, wrapped her arms around my head, and hummed happily while planting a passionate kiss on my lips. I didn't quite kiss her back, still surprised to see her and rather more alarmed by Mother's presence. I mean yeah, she obviously knew that Sam and I were fucking each other. But it's one thing to know that your mother knows, and quite another to suck face with a girl while she's ten feet away.\n\nWhen Sam finally pulled away, I gaped at her, still in shock, and asked, \"What are you doing here?\"\n\n\"Oh, long story. The short version is that we ran into each other yesterday at the mall and got to chatting. I asked her some advice, she told me she'd be coming home early tonight, and invited me to join her for dinner.\"\n\nI blinked in surprise and looked at Mother. \"You didn't tell ME you were coming home early, or invite me for dinner.\"\n\nMother frowned. \"Would you have rather had dinner with me instead of with Belle?\"\n\nI waggled my head. \"Well no, but...\" My voice trailed off as Mother's smug grin wiped out the rest of my answer.\n\n\"Anyways, your timing's perfect. We were just wrapping up,\" Sam said enthusiastically, and I loved the way she purred the word 'perfect' in that amazing Aussie drawl. Still with half of her body molded around mine, the busty blonde looked back over her shoulder and asked, \"You don't mind me taking your strapping young man upstairs, do you, Beverly?\"\n\nMother smirked and waved us on dismissively, commenting, \"Ah, to be young again.\"\n\nSam immediately started tugging me toward the stairs, suddenly in a great hurry to get to my bedroom and rip my clothes off.\n\nBut I had only one thought on my mind.\n\n\"Since when did you start calling my mother 'Beverly'?!?\"\n\n****\n\nSomething tickled my balls, and with a start, I jerked awake.\n\n\"Mmph!\" somebody grunted, and as I sat up, I realized I'd just shoved my dick an inch into a girl's throat. She took it like a trouper, gagging only slightly and keeping her head down, breathing heavily through her nose until I pulled back. And then she resumed rhythmically pumping my shaft in her hand and sucking on the mushroom head as if I'd never interrupted her.\n\nMy eyes fluttered for a brief second, giving me just enough time to see the platinum-blonde head bobbing up and down in my lap, radiant in the morning light. Sam looked up at me, her amber eyes piercing in their gaze as she recognized I'd awakened. And she stopped to smile around a mouthful of meat while continuing to pump my shaft with her right hand.\n\nI smiled back, and Sam once again focused on the task at hand. She briefly paused to gather herself before pushing her head all the way down and not stopping until she had her lips around the very base of my cock. She held that position there and looked back up at me to make sure I was watching. I certainly was, and for a moment I remembered telling Alice that my favorite part about Sam's blowjobs was the way she always stared at me as if asking for my approval. Sam stayed there, watching me smile at her, practically choking herself and not letting up until the last moment before she finally popped all the way up and took a deep breath.\n\nI gave her a look of concern, my face expressing my worry that she was pushing herself too far for the sake of somehow buying my favoritism. Sam recognized the look and didn't repeat the deep-throat. Instead, she slid her hands up inside my pajama shirt, her fingernails scratching my chest until she could squeeze my pectoral muscles. At the same time, she crawled up my body and pressed her lips into mine, kissing me feverishly and moaning into my mouth.\n\nWe made out for a minute, in no rush to move things along, or so I initially thought. Just when I started to increase the passion of my kissing, she abruptly pulled away so she could rip my shirt over my head. I thought we would go back to making out after that, but she instead sat up on my midsection, reached down for the hem of her nightgown, and whipped it over her head. Her bare, beautiful 36DD melons popped proudly into the morning air, pink nipples crinkled from both arousal and the cold. I gawked like a virgin, blinded by those beauties, and with a grin she grabbed both of my hands and planted my palms atop her supple breasts, inviting me to squeeze and fondle away.\n\nShe'd already gone without panties all night. We'd fucked twice before falling asleep, first doing doggy-style immediately after she'd dragged me upstairs. Afterwards, she expressed her intentions by way of showing me the overnight bag she'd already stashed in my bedroom, pulled me into the bathroom, and started off my first-ever round of shower sex.\n\nMuch like hot tub sex, the concept is more fun than the actual act itself. Don't get me wrong, I LOVED banging my pelvis into Sam's beautiful butt while her big bosoms repeatedly bashed into the cold tile wall. But we first tried it standing up and couldn't quite get my big dick inserted with the water washing away all her natural lubrication. Rear entry into her pussy proved a little easier while she reached back to spread her bodacious buttcheeks out of the way. But the entire act itself, while sexy, was pretty uncomfortable for both of us.\n\nStill, Sam got to say she got my \"shower\" cherry, which appeared to be her goal all along, and we returned to my bed to finish each other off. That time, we fucked face-to-face in a missionary position until she asked me to pull out, hold her head, and fuck her face until I blasted my load straight down her throat. She even managed to deep-throat me while I was doing it.\n\nAll that was last night. This morning, we completed the trifecta of positions as she scooted her butt back and mounted me cowgirl-style. Sam humped herself up and down in a steady rhythm while I cupped and squeezed her big boobs. Amber fire was in her irises as she stared down at me with an intense look of... love? Well, a ton of lust, but... well... Maybe my own eyes were playing tricks on me, but I thought I saw a lot of love there too.\n\nReaching around to Sam's upper back, I pulled her down to me so we could kiss madly. At the same time, I raised my knees and planted my feet flat so I could start bucking my body upwards to really drive my dick deep up into her cunt. Sam moaned, broke the kiss, and scooted a little higher, which worked out great for me since it put those massive hooters right in my face. She kissed my forehead while I mashed her melons against my cheeks and fucked her even harder. That only spurred HER to fuck me even harder, giving me such incredible pleasure until I simply couldn't take it anymore and rolled us over so that I could be on top.\n\nNeither of us lasted long after that. Refreshed from an amazing night's sleep holding the blonde beauty in my arms, I pounded the shit out of her this morning with every ounce of energy I had. Sam was not a small girl, but her entire body got jerked around like a rag doll's as I gave her a royal pounding, sending her mind into delirium as her head flopped left and right on the brink of unconsciousness.\n\nHer orgasm triggered mine. She couldn't hold onto me anymore, her arms and legs spread eagle while I had my way with her helpless body. Her cunt clamped up as she climaxed, and Sam screamed loud enough to wake Mother in the unlikely event that she was still here. Her inner muscles milked my cock, and I lasted only three more pumps before slamming myself as deep as I could go, parking my cockhead at the very entrance to her womb, and basting it with all my scalding hot sperm.\n\nWhat felt like hours later, the world came back to us. I lay panting with my head atop Sam's bounteous breasts, having pulled out of her pussy and then collapsed to use her chest pillows as... well... pillows. Almost lazily, I licked a nipple and then started nursing on the tip of it, dreaming of perhaps one day suckling out her precious nectar. At the same time, Sam cradled my head to her bosom and sighed in utter contentment.\n\n\"What a great fucking way to start a morning,\" she murmured happily. \"We should really do this more often.\"\n\n\"I'd be happy to do this as often as you like,\" I mumbled around her teat.\n\nShe looked down at me, rubbed my head, and in a voice full of wonder, she muttered half to herself, \"I think I'd like that a lot.\"\n\n****\n\nI made breakfast for me and Sam, puttering around while she sat on a stool at the kitchen island drinking coffee while wearing my white button-down dress shirt and one of my ties. She complimented me on my domestic skills, to which I replied that I'd quickly learned to fend for myself since \"Beverly\" was never around. I still couldn't get over the idea of Sam referring to Mother by her first name.\n\nSince we'd slept in, it was getting close to 10am, the scheduled time for the girls to start arriving. The BTC hadn't been together in one place since the Tahoe trip, but since it was the final Friday before school started again next week, we'd long ago made plans to spend the entire day together as a group.\n\nI let my eyes run up and own Sam's choice of attire and asked, \"Were you planning to change?\"\n\nShe smiled at me from behind her coffee mug, brown eyes glowing amber for a moment as she replied, \"Nope.\"\n\nI arched an eyebrow, shrugged, and scooped up her empty plate. I started cleaning up, including the frying pan and my dishes as well, and was still washing up when the doorbell rang.\n\nAs usual, Naimh was the first arrival when Sam went to get the door. She greeted Sam brightly, and a second later must've realized what Sam was wearing as she teased, \"Well YOU must've gotten here early.\"\n\nI had finished up with the dishes and was walking into the living room when Sam flashed me an almost nervous smile and admitted, \"Actually, I spent the night.\"\n\nNaimh's jaw dropped as she processed this news, but within two seconds she grinned super-broadly, shot her hand into the air even though it was just the three of us, and chirped excitedly, \"I call 'next'!\" If there was any jealousy, she certainly didn't show it.\n\nThe three of us had a big laugh, but Naimh screwed up her face and pouted. \"I just need to figure out how to convince my parents to let me stay out.\"\n\n\"Hey Matty, didn't I tell you the BTC was planning a slumber party at my house next Friday night?\" Sam stated in an overly-serious voice with exaggerated head nods indicating to me that I should just go with it. \"I think it's important for all the girls who are staying overnight to check with their parents to make sure it's okay. And if they have any concerns whatsoever, they can call me?\"\n\n\"Uhhh... yeah... of course... I DO remember you telling me that,\" I replied in an uncertain but 'just going with it' voice.\n\nIt took Naimh a second to catch on. \"Wait, are we really having a slumber party or not?\" she asked uncertainly.\n\nSam laughed. \"No, just you. But seriously, you can have your parents call me if they need to confirm.\"\n\nNaimh frowned. \"You'd do that for me?\"\n\n\"Of course!\" Sam gave the redhead a fierce hug. \"We're friends, not rivals.\"\n\nNaimh smiled and hugged Sam back. \"I'm really glad you feel that way.\"\n\n\"Awesome!\" Sam said enthusiastically. \"I mean, assuming Matty won't mind.\"\n\nI ogled the gorgeous redhead up and down, already imagining the things we would do... TO... each other if we had all night, and I drawled, \"Wouldn't mind at all.\"\n\nThe doorbell rang again, and Sam went back to open it. I noticed the way she greeted the new arrivals by stepping back and gesturing them inside with a dramatic, \"Welcome, welcome! Come on in!\" as if she lived here. I had a sudden vision of marrying Sam, living in this house, raising our children here, and having her welcome guests in the same manner. But I quickly shook that thought away as a distant pipe dream.\n\nIn this case, Belle and Mari had arrived together, a common occurrence since Mari often parked at Belle's house first. Belle recognized the significance of Sam's attire immediately, and she looked a little shocked. \"Wow, really? You spent the night?\" There actually WAS a trace of jealousy in her voice.\n\nSam looked equally surprised. \"Uh, yeah.\" She frowned. \"Is that not okay?\"\n\n\"What? No, of course it's fine,\" Belle said immediately, recovering quickly. She gave Sam a warm smile and leaned in for a hug. \"How was it? What am I saying of course it was amazing otherwise you wouldn't be dressed like this now.\"\n\nSam smiled and hugged Belle back, not entirely convinced everything was fine but wanting to keep things moving. She greeted Mari as well and everyone started moving into the family room by the big TV.\n\nZofi was the last arrival a few minutes after 10, but since she'd been Sam's parental alibi, she already had an idea what to expect. She simply smirked at Sam, exchanging a look that said she'd get all the details later, and moved on.\n\nSam finally went upstairs to change into the clothes she'd packed in her overnight bag. When she returned re-dressed in a new outfit, she clapped her hands and called out to the group, \"Okay, let's get moving!\"\n\nThe other girls wrapped up their conversations and started getting up, but I checked my watch and said, \"Not quite yet. I'm not ready to leave.\"\n\nSam frowned at me. \"We've got to get in line to get good seats for all six of us together!\" The plan was to go see a movie together and grab lunch afterwards.\n\n\"You can wait two minutes and there will still be plenty of good seats.\"\n\nHer confusion deepened. \"Wait for what?\"\n\nAs if on cue, the doorbell rang. I smirked a knowing smirk, enjoying this feeling of knowing more than the girls did for once in my life. I left the family room and headed back to the front door, glancing back once to find that all five girls were following me curiously. With a flourish, I opened the door, took a step back, and was nearly deafened by the sudden high-pitched screaming.\n\n\"ALICE!!!\" they collectively screamed.\n\nMy best friend soon got buried under an avalanche of hugs.\n\n****\n\nThe movie turned out to be... forgettable. Like seriously, I don't even remember what we watched. We got to the theater early, bought our tickets, stood in line, and got good seats. Add in the drive to the theater and we had close to an hour for the girls to talk and catch up. And they didn't even talk about sex once!\n\nIn a way, it was a welcome return to the \"old days\" before the sex stuff took center stage. We sat in one long row: Zofi, Sam, Naimh, Alice, me, Belle, and Mari. None of the girls put their hand on my leg or did anything else remotely sexual. We just... hung out.\n\nMaybe it was Alice's presence, with everyone coming to the same conclusion I had before she'd dropped her mouth onto my dick while watching the porno: If avoiding the sex stuff was a requirement to keep a good friend like Alice, then the sex stuff would have to go away (at least for a little while). Naimh still flirted with me like crazy, and Sam seized multiple opportunities to get me to stare at her boobs, but both of them had been acting like that since before the \"Holly\" incident.\n\nThe seven of us grabbed lunch, spent the next hour eating and talking, and finally loaded into the van to drive back to my place. It was only once we got back inside the house that the rest of the BTC started to realize they wouldn't have to tiptoe around Alice for fear of scaring her off anymore.\n\nEspecially since Alice turned out to be the FIRST one to get my dick in her mouth.\n\nI'm getting ahead of myself again.\n\nWe'd actually never gone through the entire box of alcohol Mother had left us on the Tahoe trip, and Sam wanted to finish it off. She cracked open the wine first and got Zofi to join her, with Naimh following suit. I started mixing cocktails, and when Alice asked where we'd gotten the box of booze, she kicked off a conversation that went down one tangent after another, ending up in a fairly explicit retelling of the morning orgy after Sam had slipped me one of her father's erectile dysfunction pills.\n\n\"So there's... hehe... there's Matty...\" Sam chortled, unable to keep up a continuous narrative the way she kept cracking and wiping tears of laughter from her eyes. \"And he's trying... hehe... his head is darting left and right trying to track where... hah... And then... And then... hahahaha.\"",
        "Alice glanced over at me. \"She's never gonna finish the story, is she?\"\n\nDrunken Sam keeled over onto her side, cackling quite uncontrollably.\n\nZofi, who had been sipping wine but was only mildly buzzed, explained, \"Matty got fed up with the sleep mask and ripped it off. By then, Belle had Sam in an armchair eating her out.\"\n\nAlice arched an eyebrow. \"Even without a creampie in there?\"\n\nZofi slapped her hand down on the coffee table. \"That's what -I- thought!\"\n\nBelle frowned into her cocktail. \"I'm not JUST a cumslut.\"\n\n\"Anyways,\" Zofi continued. \"Matty rips off the sleep mask, shoves his dick into Belle from behind when neither she nor Sam has any idea he's coming, and just starts hammering the hell out of her.\"\n\n\"He looked like a fucking GOD,\" Naimh breathed, looking quite pink, her emerald eyes aflame.\n\nZofi continued the story. \"He blasts away inside Belle, gets up, waggles his finger in Sam's face, and orders, 'YOU suck that out of HER!'\"\n\nI frowned. \"That's not quite how I remember it.\"\n\nSam kept laughing and wiping tears from her eyes, \"Even if it isn't, I like her version better.\"\n\n\"That's when I noticed he wasn't getting soft at all,\" Naimh chimed in. \"Because of the pill.\"\n\nAlice snickered, \"So you went for a ride.\"\n\n\"Actually, he took ME for quite a ride,\" the redhead replied, shivering as if she'd had a mini-orgasm just thinking about it. \"Threw me down and fucked me like a rag doll. It was AWESOME.\"\n\n\"Then he fucked ME like a rag doll,\" Mari chimed in. \"And yes, it was also awesome!\"\n\nAlice smirked and looked up at Zofi. \"I'm surprised you got through that trip without losing your virginity.\"\n\n\"Oh, I got what I came for,\" Zofi replied a little smugly, her eyes darting over to Belle and Mari.\n\n\"Sounds like things worked out for the best with me not coming along,\" Alice said quietly, biting her lip while staring into the bottom of her glass. \"I don't think the rest of you would've been so uninhibited if I'd been there, raining on everybody's parade.\"\n\nTHAT got Sam to stop laughing. She sat up abruptly, wiped her face, and started to say something. But Alice beat her to the punch, holding up a hand and adding, \"Please don't try to apologize. It's the truth. I couldn't handle what was happening, and I would've been a dark cloud on a sunny day. You guys had an incredible trip because I wasn't there, and I wouldn't have changed it for the world.\"\n\nNaimh frowned and patted Alice's leg. But before she could say anything either, Alice grinned and continued, saying, \"I think everything worked out for the best, actually. You all got the crazy Tahoe cabin orgy, and I got the time and space I needed to figure myself out.\" She got a wicked gleam in her eye right then. \"I've got a feeling Matty never told you what happened yesterday afternoon, did he?\"\n\nThe girls all exchanged glances. Belle stared into her lap, because of course I'd already told her. Sam, on the other hand, looked particularly confused because she'd spent all night with me and didn't have a clue.\n\n\"All the stories you've been telling have gotten me pretty turned on,\" Alice continued. She glanced over at me, gave me a knowing smirk, and finished, \"At least now I feel totally comfortable with the urge to act on it. I think it's time I showed the girls I've learned a new trick.\"\n\nWith that, Alice slipped of the couch and knelt in front of me. You could hear the collective gasp of the girls as she reached for my cargo pants, pulled down my zipper, and extracted my erection.\n\nI was rock hard and ready to go. She wasn't the only one to have gotten pretty turned on from hearing the stories.\n\n\"OhmiGAWD!\" Naimh screeched the moment Alice's mouth sank down around my cock.\n\n\"Wowww!\" Mari squealed.\n\n\"She looks REALLY into it,\" Zofi commented.\n\n\"Fuck me dead and bury me pregnant!\" Sam exclaimed.\n\nBelle shook her head wryly at Sam. \"You people have some really weird sayings.\"\n\n****\n\nNobody interfered with what they initially thought was Alice's first blowjob. Only after Sam commented that she was doing pretty good for a first-timer did Belle explain that Alice had done it to me twice yesterday afternoon.\n\nMidway through, Alice called Naimh over to join her. Together, the girls gave me a tandem blowjob, licking up each side of my shaft and taking turns gnawing on my knob. Naimh even sucked my balls into her mouth while Alice bobbed her head up and down. But at one point when they both were near the top, Naimh lost her head a little bit and started kissing Alice on the lips, much to the Korean girl's surprise. Alice jerked away, Naimh got apologetic, and for a second there I worried Alice was going to get upset and stomp off or something.\n\n\"It's okay. You don't have to say sorry. I just... I don't think I'm quite ready for that tonight,\" she wound up saying, looking rather apologetic herself.\n\n\"You keep going,\" Naimh offered while taking a step back.\n\n\"Actually, who else wants a turn?\" Alice asked, turning around. \"Today's not about me, even if it's felt like it sometimes. I'd really prefer to just let things go back to normal, where I'm just one of the girls instead of the guest of honor, which it seems you're all treating me like.\"\n\n\"Don't have to ask me twice,\" Mari announced as she dropped to her knees right in front of me. The buxom Latina quickly took over, rapidly slamming her entire face down my dick with ease. She was proud to be the BJ Queen of the BTC, and I could tell she was showing off even though it wasn't the first time Alice had seen her do this. Still, I enjoyed seeing Mari every time she carried herself with this kind of self-confidence. If only she could bring the same vibe into other areas of her life.\n\nIn the end, all six of the girls took a turn blowing me. Sam went next, then Zofi, and finally Belle. But when I started getting close to cumming while Belle hoovered my prick and did that two-hand twisty thing I loved so much, she stopped short of getting me off and looked back up at Alice. \"Finish him off for us? You know we're all dying to see him cum in your mouth.\"\n\nWith a grin, Alice sank down before me and started bobbing her face up and down my dick.\n\n\"Careful, you don't want to get that yucky sperm on you or anything,\" Sam drawled teasingly.\n\n\"Oh no, he's gonna explode in your face! Dive away!\" Naimh exclaimed in mock horror a moment later.\n\nAlice flipped them both the bird, one with each hand. That she did so with her mouth halfway down my dick somehow made the moment absolutely perfect. And I felt my balls coiling as the pressure came to the point of no return.\n\n\"Gonna cum,\" I grunted in warning.\n\nAlice actually kept her hands up, continuing to flip the girls the bird in a big Eff-You gesture while backing her head up until just the crown was still in her mouth. I groaned and started ejecting little cumballs that splattered across her tongue that she swallowed immediately in anticipation of the next load. Over and over again I fired away, filling her mouth to bursting although she managed to swallow it all.\n\nAll except for the last few shots at least. Those, she kept in her mouth, trapping them inside while she nursed on my tip to get the last dregs. And when I finally groaned and sank back deep into my seat, wiped out for the moment, my best friend turned to face her audience, gaping her mouth open wide to show them the pool of cum she'd collected.\n\n\"Better swallow it before Belle kisses you,\" Sam drawled.\n\nAlice's eyes popped open wide and she abruptly swallowed.\n\n\"Aww...\" Belle pouted cutely in mock (?) disappointment.\n\nTurning to me with a happy grin, Alice dropped onto the couch right by my side, hugging me tightly. I hugged her back and raised my free hand, knuckles forward.\n\nShe fist-bumped me, kissed my cheek, and sighed. \"It's good to be back.\"\n\n****\n\nAs darkness fell, I was alone outside on the patio while grilling up dinner. It was a cold evening, and the girls were inside where it was warm while their slave boy Matty made them food. But I didn't remain alone for long.\n\nI heard the sliding door open and the voices of excited teenaged girls chattering about whatever popped into their pretty little heads filled the air for a few moments, but a moment later the door slid back shut and the sounds faded. I heard footsteps and glanced back to see a small figure almost completely hidden beneath a blanket that had been wrapped over the top of her head in addition to around her body. Based on her short stature alone I knew it was Belle, and I asked, \"Coming to get a breath of fresh air?\"\n\n\"A little too fresh. It's freezing out here.\" She wrapped the blanket a little tighter around her thin body.\n\nShe made to sit down in one of the chairs, but I gestured, \"Come stand by the grill. The heat will help keep you warm.\"\n\nBelle nodded and came alongside me. I wore a jacket and there was no wind, so the chill didn't really bother me. And when she came close I wrapped up my little Annabelle in a hug and rotated us so that she was between my warmth and the grill.\n\n\"What brings you out here into the far reaches of the Siberian wasteland?\" I asked casually.\n\nShe shrugged, looked up at me with doe eyes, and murmured, \"I needed a kiss.\"\n\n\"Oh, well in that case...\" I quickly bent down, holding her tight, and captured her lips with my own.\n\nShe clutched the blanket close around her head and shoulders but otherwise pressed herself against me, kissing me with unexpected passion. No warm-up, no foreplay, just straight to the main event, as if she'd been building up to this moment for a while already.\n\nFeeling the intensity of her emotions, I squatted and scooped up my Baby Belle in my arms, blanket and all, to bring her face to the same elevation as mine. She finally shot her arms out and wrapped them around my neck, her tongue darting and diving as her lips mashed up against mine over and over and over again. Other than the times we made out while in the middle of having sex, she hadn't kissed me with this kind of passion since... well... maybe never.\n\nAll of a sudden, Belle broke away, turned her face, and tucked her head into the corner of my neck and shoulder. She whimpered, shuddered, and seemed to start crying for a moment. But just as suddenly as she'd started, she stopped, sniffled and asked, \"Please put me down.\"\n\nFrowning, I went ahead and set her back down on her feet. Taking deep breath, she looked up at me, wiped a tear from her eyes, and mumbled, \"Sorry about that.\"\n\n\"What's going on?\" I asked.\n\n\"Oh, just hormones out of whack I think,\" she said dismissively before looking up at me, her pale green eyes shimmering in the outdoor patio lights. \"I love you, Matty.\"\n\nHer voice was serious and sincere. I smiled warmly at her and replied, \"I love you too... Annabelle.\"\n\nShe gave me a coy little smile, got up on her tiptoes, and gave me another quick kiss. Shivering enough to cause her face to twitch for a second, she muttered, \"Brr... It really IS cold out here. I'm gonna head back inside.\" Without waiting for a response, she turned around and started heading for the sliding door.\n\nI watched her go, puzzled. But the alarm I'd set for myself went off just then, drawing my attention back to the grill. The meat couldn't wait.\n\n****\n\nDinner was a boisterous affair. With one last evening together before school started again, the girls were in a festive mood. Plus, they seemed intent on polishing off every last drop of alcohol we had left in the Tahoe box, nevermind that I probably could've added the bottles to the liquor cabinet.\n\nThe wine ran out during dinner, which more or less forced everyone to switch to the hard alcohol. I mixed up sweet, fizzy drinks with soda to take the edge off, but that didn't stop the girls from finishing glass after glass as the night wore on.\n\nMuch like our first night in Tahoe, happy-flirty drunk Naimh outdrank everyone. Unlike our first night in Tahoe, competitive Sam tried to keep up with her while never turning morose, not even for a little bit, which was nice. Belle simply weighed like 90 pounds soaking wet. She didn't have the meat on her bones to absorb so much alcohol, and she may have turned out even happier-flirty drunk than Naimh.\n\nAlice was making up for lost time, having missed the entire Tahoe trip, and she didn't have enough experience with alcohol to know when to stop. She got crazy-loopy really early in the evening. Mari was a little more sedate, but even she got pretty toasted. And Zofi couldn't stop giggling for what seemed like an hour.\n\nFor some weird reason, being drunk made the girls want to raid our games closet. I think Mari started the whole thing by suggesting we play Texas Hold 'Em (I was beginning to think the shy one was actually a calculating card shark), but when they went to get the cards out they discovered all the board games and started to get nostalgic about their childhoods. We played Uno for a bit, and Sam tried to start a game of Monopoly that lasted for all of three minutes. Alice and Naimh got into a rather heated game of Connect 4, and that's when Sam found Twister.\n\nSam, Zofi, Belle, and I started the first game, and when Zofi fell down, Sam promptly commanded her to strip off an article of clothing. Eyebrows went up, but Zofi did as ordered, losing her sweater. The four of us kept playing, Sam fell next, and Belle commanded Sam to strip something off.\n\nSam took off her jeans first, leaving her bottomless below the waist save for a pair of baby blue panties. And thus, strip Twister was born.\n\nI could write paragraph upon paragraph about each step of the game, describing in great detail about how I wound up trying to balance myself like a crab with my right leg extended to get to a red dot, a position which put the bulge in my boxer shorts dangerously close to Sam's face while she hunched over in a precarious position.\n\nI could explain the convoluted logic Sam employed to somehow get all seven of us involved in a manner that ultimately resulted in everyone losing their clothes in a reasonably uniform pattern. But to be honest, I don't remember most of that crap.\n\nWhat I remember is sucking one of Sam's big bare boobies into my mouth when it got within reach. She didn't seem to mind.\n\nWhat I remember is that someone managed to unbutton the flap in my boxers, and it could've been any of the three girls who were in that direction at the time. I was twisted into some kind of pretzel shape where I couldn't actually see my crotch. Whoever she was, I'm pretty sure she wasn't doing it to try and win. She just wanted to pull my cockhead through the flap and start playing with me.\n\nWhat I remember is losing my balance when somebody kicked my ankle out from under me, and I collapsed face-first into Mari's cleavage. It took me a minute to get off her (probably more than a minute), and her tits had quite a bit of my saliva on them by the time I was done, plus a few teeth marks.\n\nAnd I definitely remembered a moment when Naimh was completely naked save for her panties and I found myself arched over her like a bridge in a position that put my dick poking through the flap in my boxers just over her face. At that point, Naimh muttered in a pretty thick Irish brogue, \"Fuck the game\", dropped flat onto her back, grabbed my hips, and yanked my dick into her mouth.\n\nI was so revved up by that point that I started fucking Naimh's face then and there, in a pushup position while drilling my dick straight up and down. And from that moment, the drunken orgy began.\n\nI need to make abundantly clear right from the beginning that I did not take Alice's virginity that night. She offered it to me no less than three times: the first while inviting me with a drunken giggle, the second while whining and moaning that she needed me, and the third while she got quite angry with me for holding out on her. I had decided for the both of us that she deserved better than to lose her cherry while bombed out of her mind during a furball where no less than five of her best friends were vying for my dick's attention at the same time. And while she obviously hated that decision at the time, the next morning she told me she was quite appreciative of my better judgment.\n\nHowever, it's fair to say that would be my only noble decision of the night, because apart from refraining from taking anyone's cherry, I pretty much spent the entire night selfishly sticking my dick into every willing hole I could reach without regard for whether or not I even got the girl off.\n\nI was still face-fucking Naimh when Mari parked herself on all fours right next to us and invitingly waggled her big butt in my face. I crawled over, grabbed her hips, and slammed myself in, rabbit-humping the luscious Latina at hyperspeed right from the jump.\n\nSam was quick to park herself on all fours next to Mari and waggle her ass at me. The busty blonde also craned her head to look back at me and blew me a kiss. So... yeah, I moved over and started jackhammering her instead.\n\nPetite little Belle parked herself in front of the couch, her chest on the cushion and her booty facing back at me. She actually reached back, spread her cute buttcheeks to the sides with both hands, and extended one middle finger to rub up and down her tight slit. Soaked as I was from Mari's and Sam's combined pussy juices, and given that Belle had been getting quite revved up herself as the game progressed, entering her snug snatch wasn't too difficult. I couldn't start rabbit-humping her at hyperspeed, but slow-dicking started to become fast-dicking as she got stretched out.\n\nNaimh didn't park herself next to me and wait for an invitation. The busty redhead actually yanked me out of Belle's cunt, dropped me flat on my back across the Twister mat, and mounted me then and there. Alice saw an opportunity to get involved as well, so the Korean girl climbed onto my face. And quite possibly because this was Alice's first day back, nobody seemed inclined to try and interfere this time.\n\nSo Naimh was able to keep riding me to orgasm, at which point somebody else switched with her. I had no idea who, because even though I wasn't blindfolded, Alice was still sitting on my face and I couldn't see anything but her crotch, her big D-cups protruding out from her naked chest, and my hands going honka-honka on those big tits. Actually, I could see her face all screwed up with pleasure whenever she bent forward, but that was pretty much it.\n\nI finally got a look when I made Alice cry out her climax and dismount me to let someone else have a turn. Sam was having a grand old time humping herself up and down, and lovely Zofi climbed aboard the Matty's Mouth Express Train to Orgasm. Only Zofi sat down facing back towards Sam, and after a few moments, I could hear a lot more than just moans of arousal. Apparently the two girls were kissing each other. And when I slid my hands up Zofi's lithe torso to cup her tits, I found Sam's hands had beaten me there.\n\nNo worries, Sam was more than happy to share. She even grabbed my hands to plant them on her own big melons as well, and the three of us happily fucked the night away in a threesome position we would repeat again and again many more times in the future.\n\nBoth of them came, and by then I was ready to drop a load as well. But the girls were already getting off me to give someone else a turn. Unfortunately for me, nobody else climbed on me right away. I sat up, looked around, and my jaw hit the floor at the sight before me. Alice and Mari sat side-by-side on the couch, heels up on the cushions and legs spread apart. Belle knelt in front of her BFF Mari, her face wriggling in the obvious motions of a girl giving head to another girl. This in and of itself wasn't so surprising, since I'd seen Belle suck a creampie out of Mari before and also seen her going down on Sam even without a creampie. But the fact that Alice had Naimh's face in her crotch doing the exact same thing blew my fucking mind. I nearly came just seeing it.",
        "Not that I actually wanted to cum all by myself. Not when there were much better receptacles within reach. Even though it was probably Belle's or Mari's turn, I just really wanted to fuck Naimh's fucking incredible body as much as possible, especially since she was currently going down on Alice. I rubbed the redhead's ass while she waggled it against my palm. I also gave it a few healthy spanks, just for fun. And then I slotted myself in and started pounding away.\n\nAlice's eyes glittered watching me initiate her first threesome with a girl eating her out. She held the back of Naimh's head, cramming it deeper against her crotch and started moaning MY name. \"Matty... Matty...\" And all the while, Naimh fucked her ass back at me with a pretty steady beat.\n\nMari, watching us through half-lidded eyes while Belle continued working on her, squeezed Alice's hand and mumbled questioningly, \"You want him in you?\"\n\nAlice nodded in heat, giggled drunkenly, and crooked her finger to me. \"Wanna come take my cherry, Matty?\"\n\nNaimh picked her head up and stopped fucking back at me. She glanced back at me, wordlessly asking if I wanted to pull out and go fuck Alice instead. But I took the Irish girl by the head and pointed her back into Alice's crotch, saying, \"Not today. Not like this. For one thing, you're not on the pill, are you?\"\n\nAlice screwed up her face and shook her head. \"Didn't think about that.\"\n\n\"As awesome as it would be, you know I'd never risk your future like that.\"\n\nAlice pouted but nodded her understanding.\n\nIn the end, I pounded my way into Naimh's heavenly pussy, but with my eyes locked onto Alice the whole time. I didn't want to take her virginity in the middle of an orgy tonight, but I was perfectly happy to fantasize about spurting into her unprotected womb. Less than a minute later, I slammed forward one final time, let myself fire away, and imagined just that.\n\nFrom the way Alice's eyes flashed, I think she was imagining the same thing.\n\nWhen I was done spunking Naimh's snatch, Belle actually shoved me out of the way so she could flip the bigger girl over, parking the redhead on the couch and diving between her legs to get to my cum. Meanwhile, Mari took one look at my still pretty hard dick and jumped off the couch to suck me into her mouth. She bobbed up and down a few times, gave me a wink, and then pulled up to say, \"I think I'm starting to like the taste of a girl's pussy on your penis.\"\n\nI blinked, shrugged, and said, \"You're welcome to it anytime.\"\n\nMari quickly went to work trying to revive me.\n\nIn the meantime, Alice looked over and saw Sam and Zofi scissoring on the floor. She stared at them, puzzled for a moment, as if trying to sort out the mechanics. I called over for her to come back to me. She hesitated, pointing at the girls, asking, \"Are they...?\"\n\n\"They're rubbing their clits together,\" I explained. \"Sam called it 'tribbing'. You should try it sometime.\"\n\nAlice's eyes got big. \"Letting Neevie go down on me was one thing, but I don't think I'm quite drunk enough for THAT.\"\n\n\"How was it, actually? Neevie eating you out?\"\n\nStill a bit bug-eyed, Alice slowly shook her head in a daze. \"Still trying to wrap my head around it.\"\n\nI chuckled and said, \"Come sit on MY face. Pretty sure you can wrap your head around that.\"\n\nAlice grinned and came over to me, but this time she sat down facing away from me. I buzzed her asshole, making her squeak in surprise. She didn't immediately get into it the way Mari or Naimh had the first time I'd rimmed either of them, so I didn't repeat the maneuver. Instead, I focused on eating out my best friend and snaking my hands up to play with her boobs. Meanwhile, the girls started trading off blowjobs. Belle took over from Mari, her twisting hands a dead giveaway, not that she was trying to hide her identity. I ended up in at least two more mouths, although I'm not sure who, before someone finally just sat down on my re-hardened dick.\n\nBy now, the girls had all gotten at least one orgasm, and probably two or three, not that I was really keeping count. The girls didn't seem interested in trying to climax, instead swapping themselves out every minute or so. Actually, it started to get regular enough that I popped my head out of Alice's crotch and asked with a sudden burst of inspiration, \"Are you guys actually using a timer?\"\n\nSam laughed and popped into my field of vision, holding up one-minute plastic sand timer from some board game or another.\n\nI rolled my eyes and gave myself a goal to get Alice off in less than two minutes. I had her screaming with about ten seconds to spare, although she stayed on top of my face until the next timer ran out and Belle's ultra-tight pussy sank down on me.\n\nOnce Alice rolled off me and whimpered on the floor, shuddering from orgasmic aftershocks, I decided I'd had enough of lying down. It was easy to wrap my arms around Belle's lower back and get off the floor without dislodging my dick from her tight snatch, and I planted her butt on the edge of the couch so I could really start hammering her. My little Annabelle squealed and moaned and howled her pleasure, making quite a racket. That's when Alice parked herself right next to Belle, spreading her legs apart while whining and moaning that she didn't care if she was protected or not, she just needed me deep inside her.\n\nI was tempted, but not that tempted. Not with Belle's ultra-tight pussy wrapped around my prick. I gently told Alice not yet, focused on the petite strawberry-blonde beneath me, and did my level best to make Belle cum. The petite pixie was pretty primed up after all the Russian Roulette, so it didn't take long to set her off.\n\nBy then, Alice had grumbled and moved away. Sam took her place sitting next to Belle, showing off her flexibility by raising her knees up to her own shoulders and holding them there, feet up and pussy completely exposed. It was an easy matter to pull out of Belle, scoot a couple of feet to my left and start pounding Sam instead. And then Mari lined herself up next to Sam.\n\nBy the time I slid out of Sam and then switched over to start shoving my swollen schlong into Mari, Belle had recovered and gotten out of her seat. Naimh took her spot, likewise folding herself in half by raising her legs all the way up. Belle and Zofi wound up in the loveseat, the two self-professed voyeurs rubbing each other while watching me alternate back and forth between Mari, Sam, and Naimh. And that's when Alice in the armchair started waggling the one-minute sand timer and calling \"Switch!\" every time it ran out.\n\nWe actually only made it through two full rounds before Naimh got up and went to talk to Belle. I had switched over to Mari by then and didn't pay much attention, at least not until she returned a couple of minutes later while I was still fucking Sam. But instead of getting back into position, the redhead parked herself on all fours, waggling her ass at me. I was happy to step over and slam it into her soaking wet snatch from behind, but when she set her chest against the backrest and reached around to spread her own asscheeks for me, that's when I noticed the way her crinkled anus was glistening.\n\n\"Holy crap, you lubed?\" I exclaimed in surprise.\n\n\"Merry Christmas!\" Naimh laughed.\n\nI didn't hesitate. I pulled out my dick, notched it at the Irish redhead's sphincter, and started pushing.\n\n\"Ohmigawwwwwddd...\" she grunted at the penetration, her head popping up while the hands she had braced atop the couch's backrest clenched and turned white-knuckled.\n\n\"Holy shit!\" Belle squealed. \"She's actually taking it.\"\n\n\"Were you not LISTENING when they did this in Tahoe?\" Mari asked, completely unruffled by the sight.\n\n\"That was different. His dick looks HUGE in her little asshole,\" Belle squealed. \"Can you imagine him trying to do that to ME?!?\"\n\n\"Well, I'm certainly imagining it NOW,\" Mari deadpanned.\n\n\"That thing ain't NEVER going near my anus,\" Alice stated emphatically, her face rather pale. In a concerned voice, she asked, \"You okay, Neevie?\"\n\n\"Uh-huh...\" she groaned, straining a bit as her anal chute stretched to accommodate me. But she exhaled, relaxed her ass a bit, and added, \"Deeper, please, Matty. Deeper. Fuck my arse!\"\n\nDrunk and delirious, I nodded and didn't think too hard about it. Naimh's asshole felt fucking GOOD and I wanted to feel it ALL. So I thrust as hard as I could, pulled back, and thrust again, reveling in the redhead's screams as I royally reamed out her rectum. Fucking the busty Irish teenager's pussy was incredible and had me lying awake at night revisiting fond memories of the times we'd already had, but fucking her tight \"arse\" was just on another level of amazing.\n\nGroaning gutturally, Naimh tried to hold on for dear life as I laid down the lumber and really ravaged her ass. She howled and yelped and bucked her butt back at me. Bracing her boobs against the backrest, she reached back with her right hand and rubbed her own clit. And faster than I would've thought, she started screaming in orgasmic ecstasy, \"Matty! Matty! MAAAATTTTTYYYY!!!\"\n\nNaimh thrashed and moaned all through her climax, howling constantly until her voice petered out and she ultimately collapsed, completely worn out.\n\nI was close to joining her, but not quite. Switching pussies every minute feels nice, but the downtime in-between kept setting me back. As great as Naimh's asshole had felt, I wasn't there yet, and for a second, I thought about just sodomizing the shit out of her (not literally) whether she had the strength to fuck back or not.\n\nThat's when Sam landed on the couch beside us, bent over and braced against the backrest the same way Naimh had been. \"My turn?\" she asked coquettishly. \"I've been training myself with butt plugs since Tahoe.\"\n\nI glanced over as she reached back and spread her buttcheeks, revealing a freshly lubed anus glistening in the light. With a grin, I replied, \"Um, yes please!\" I pulled out of Naimh, pausing for a moment to admire the redhead's gaping wide anus, and couldn't help but push back in for a second it looked so welcoming. But then I finally pulled all the way out and shifted over.\n\nSam giggled excitedly as I notched my cockhead at her backdoor and started to press inside. As promised, entry into the busty blonde's asshole was a LOT easier than the first time in Tahoe had been. I actually slid all the way in on that initial thrust, bottoming out right away, and looked up at her in surprise. I wasn't the only one shocked, either.\n\n\"Holy shit!\" Belle squealed. \"That went in so easy!\"\n\n\"It certainly didn't SOUND easy when they did this in Tahoe,\" Mari commented. \"It actually sounded really painful.\"\n\n\"Yeah, those were the noises that made me realize I am NEVER doing this with him,\" Belle swore.\n\n\"I have to admit though, the noises Neevie made when she had those crazy orgasms DID make me wonder... a little bit...\" Alice remarked, spacing out for a second. Then she focused again on the scene in front of her. \"Sam, how did you DO that?\"\n\n\"Told you,\" the blonde muttered, eyes narrowed as she concentrated on the sensations, sweat beading on her forehead. \"I've been training my arse for this moment since Tahoe.\"\n\nI supposed it shouldn't have been such a surprise. I've told you Sam was driven, and when she made up her mind, there was nothing that could stand in her way. Presently, I found her grinning back at me, quite proud of herself.\n\n\"Fuck my arse, lover,\" she crooned invitingly.\n\nI was only too happy to do so.\n\nSam howled and wailed like a porn star who'd popped an e-tab. I pounded that ass like there was no tomorrow, banging my pelvis off her bubble butt over and again. She pushed herself upright, hands planted on the backrest and elbows locked while I held her hips and hammered the hell out of her.\n\n\"Fuck me! Harder, baby! So deep! So good! I love it, baby! Fuck me!\"\n\n\"I'm fucking you,\" I grunted in return. \"I'm fucking you!\"\n\n\"Fuck my arse! Fuck my teeny tiny arse! Oh I love it so much! Fuck my arse! Fuck my arse! Fuck my arse!\" the busty and apparently bisexual bottle-blonde beauty moaned beneath me. \"Fuu-uu-uuuuu-uu-uuuuuuuccckkkk Meeeeeeee!!!\"\n\nI fucked her. I really, really fucked her. I fucked that tight \"arse\"until I literally couldn't fuck it anymore. Because as much as I wanted this moment to last forever, in the end I finally ran out of control and started spewing thick gobs of cum into the deepest reaches of her rectum where the sun would never shine.\n\n\"SAAAM! SAAAAM! FUUUUUUUUCCCCK!!!\" I howled while ejecting every drop I had left deep into her bowels.\n\n\"MAAAAAAATTTTTTTYYYYYY!!!!\" she howled right back, quaking in orgasm beneath my heaving body.\n\nExhausted, I collapsed against Sam's back, which buckled her knees and elbows so that she crashed face-first against the backrest. I cuddled her closely for a minute, almost drooling on her shoulder before I regained enough strength to roll off. Sam remained hunched over for another minute or so, but then she abruptly squeaked, her eyes flew WIDE open, and her mouth gaped open in utter shock.\n\n\"Belle!\" Zofi screeched. \"That's dribbling out of her ASS!\"\n\n\"Mmph! Mmph! Mmph!\" Belle's answer was muffled while she kept slurping my jizz as I leaked from Sam's lewdly-stretched anus.\n\nNaimh looked a little shocked.\n\nMari looked a little curious.\n\nAlice was laughing so hard she tipped over.\n\nSam just started grinning, and even rubbed her ass against Belle's face a bit before curling a finger to me. Together, we made out like the happily sated lovers we were until Belle finished hoovering out my jism.\n\nZofi gawked goggle-eyed at the petite strawberry-blonde. \"Well I WAS gonna ask you to go down on me, but you'd better go clean up your face and like, use mouthwash before you go anywhere near me.\"\n\n****\n\nAt that point, I was pretty ready to call it a night. I'd cum in Alice's mouth before dinner, I'd spunked in Naimh's pussy after naked Twister, and I'd blasted another load into the depth of Sam's rectum just now. And Sam hadn't slipped me any of her dad's E.D. pills this time. But when I decided it was time to take a shower, both Zofi and Alice decided to join me, claiming that as the only two remaining virgins they didn't get as much time with me as the others.\n\nMy bathroom fortunately had a larger-than-standard sized shower, big enough to fit three people, albeit a little snugly. I had tons of fun soaping up the girls' bodies, making sure their tits were squeaky clean, and even knelt down to do taste tests of the insides of their pussies to check for soap residue. Nobody had an orgasm, but I think we all realized more co-ed showers would be in our future.\n\nI did get hard again though, and while we were drying off, Alice started making out with me and jacked my new erection while she led me over to my bed. Still rather drunk and delirious, I just sort of went with it right up until the point that we were French kissing pretty hot and heavy atop my bed and she started sliding her wet pussy up and down my dick, riding it like a rail. Once, though, she slid back far enough that my mushroom head nestled into the gap between her labia, seemingly quite on purpose, and that's when I reached down to grab her hips and keep her pinned down.\n\n\"Not yet,\" I cautioned. \"Not like this.\"\n\n\"I don't care about having some special night,\" she complained. \"I don't mind that all our friends are here and I'm getting one-sixth of your attention. I'm ready, Matty. I want you. I want it NOW.\"\n\n\"Tell me again when you haven't downed like eight cocktails in a night. Tell me again when you're on the pill. I'm sorry, Alice, we can't do this tonight.\"\n\nShe knew I was right. Mother's admonishments to make sure the girl was protected were ringing in the back of my head, and from the look on her face I knew her own mother's warnings were ringing in the back of hers. But I could see the lust in her eyes and the cravings in her expression, the alcohol dulling her inhibitions and sense of reason. She kissed me again, and in hindsight I think she did so in an attempt to distract me. And then without word or warning or request, she elevated her body, notched my cockhead at the entrance to her pussy, and started to sink down.\n\nPerhaps my experience with Sam had taught me to expect such a maneuver, and the instant she put my cockhead into position I twisted my hips and rolled us over. A second later I backed away and got off the bed entirely. And that's when Alice got MAD.\n\n\"What the FUCK, Matty! You're supposed to be my best friend!\"\n\n\"I AM your best friend! And I care about you too much to let you risk this!\"\n\nBut Alice wasn't having it, and after about a minute of arguing she got angry enough to stomp out the door in a rage. Zofi had been in the room the whole time, and with a towel wrapped around her torso she stepped up to hug me from behind, kiss my shoulder, and set her cheek against mine.\n\n\"You did the right thing,\" she told me. \"It's one of the reasons why I love you.\"\n\nI blinked in surprise. \"Wait, what?\"\n\nZofi giggled and clarified, \"I'm not IN love with you. I'm saying it the same way everyone else does when they say how much we appreciate you being you. For years we've all known we could trust you with our bodies, trust you with our emotions, and trust that you always had our best interests at heart. You think six girls like us kept you around this long just because of your swimming pool? Why do you think four of us stayed virgins? Why do you think Sam stopped even dating other guys? Or Neevie never dating anyone since her arrival? Even if we didn't always want to admit it to ourselves, we've always known we'd eventually start having sex with you when the time was right. Even me.\"\n\nI arched an eyebrow and twisted slightly to face her, suddenly quite interested. \"When?\"\n\nZofi giggled, kissed my lips, and hugged me close from behind. She whispered into my ear, \"We're not there yet, darling.\"\n\nAnd then like a ghost, she slipped away.\n\n****\n\nIt was only when I returned to the family room that I realized how badly we'd messed up planning the day's activities. While Belle had simply walked over from next door, the other five girls had all driven here so we could take my van to the movie theatre together. Even Sam had driven herself here last night. That meant I had six drunken girls in my house with five vehicles parked nearby, and the same sense of responsibility that had prevented me from taking Alice's cherry now prevented me from letting any of them drive home.\n\nLogic told me I would have to keep them here overnight and let them sleep it off. Logic also told me that would be a one-way ticket to hell when all their parents discovered the girls had spent the night at my house because their darling little angels were too drunk to drive after a night of debauchery and hedonism. I started trying to rationalize my way out of the situation, not an easy thing to do when I was also still rather drunk myself. But at least I didn't smell like sex anymore.\n\nNot smelling like sex is what actually gave me the idea for the girls to all get cleaned up. Arriving home a little tipsy could be explained away as high school seniors being high school seniors, so long as they didn't smell like the one teenage boy in the BTC had been pounding their pussy (or ass) all night. I got a bunch of extra towels, Sam took Naimh into Mother's bathroom to shower, and Belle took Mari into mine. And in less than 30 minutes I at least had five semi-conscious girls dressed in their day clothes.\n\nYes, I said five, not six. Even after taking a shower, the amount of alcohol Belle drank had hit her pretty hard. She passed out in the armchair after getting dressed, completely out like a light. Well, listening to me, Sam, and Zofi talking while trying to figure a way out of the mess may have also had something to do with it.",
        "Sam's brilliant idea (while still pretty drunk) was to wait for Mother to come home, explain the situation, and have her call all the parents to let their daughters spend the night. I pointed out that Sam herself had already spent one night away from home, and two in a row would really be stretching credulity. I also didn't want to ask Mother to cover for that sort of thing, even if Sam was convinced that \"Beverly\" wouldn't mind.\n\nLuckily enough, Zofi had barely had anything to drink, at least in comparison to the rest of us. She enjoyed the wine but didn't really enjoy the cocktails, no matter how sweet. She pronounced herself fit to drive, especially after the shower, and once we accepted that, we concocted a plan. Zofi would drive herself, Sam, Naimh, Alice, and Mari home tonight in Sam's big Cadillac Escalade. If any questions were asked, they could truthfully admit we'd been drinking and the responsible thing was to not drive themselves. Tomorrow morning we'd figure out how to pick everyone back up, we could hang out for the day, and then each of the girls could drive her own car back home. As for Belle, she was small enough that I could just carry her next door.\n\nOf course, just as soon as our drunk asses had decided on THAT, Mother came home. She actually walked in right as we started organizing to have \"less drunk\" Zofi drive everyone home and immediately declared, \"Okay, no stupid teenaged plans. Everybody into the minivan! Wait, one moment. Is anybody going to be sick? No. Then get in the damn van.\"\n\nThe girls all went rather pale when a parental authority figure arrived and started barking orders. They obeyed with barely a peep. At least she gave me enough time to hug each of them goodnight.\n\nAfter Mother left with a van full of tipsy teenaged girls, I scooped Belle into my arms and carried her bridal style out the front door with her head pillowed on my shoulder, her house keys already in my right hand. It was after 10pm, but Mr. K was still awake and watching TV when I came in. He took one look at me carrying Belle instead of his daughter walking under her own power, turned the TV off, and came over asking, \"What's wrong? Is she hurt?\"\n\nI shook my head and explained, \"Nah she's fine. But, uh... we were drinking quite a bit tonight and Belle's a bit of a lightweight.\"\n\nMr. K sighed but shrugged. While I was certain he wasn't thrilled to hear his little girl had been drinking, he seemed to accept it.\n\n\"I'm just gonna carry her upstairs,\" I told him.\n\nHe nodded and followed after us.\n\nI took Belle straight to her bed, pulled aside the covers and lay her down. She woke up a bit when her head hit the pillow, and she gave me a beautiful smile while reaching up to caress my cheek.\n\nI was suddenly quite conscious of the fact that Mr. K was standing in the doorway right behind me, and as my eyes went wide I reached up to grab Belle's hand before she did anything rash.\n\nBut before I could say or do anything to warn her of the situation, she sighed happily, saying, \"I love you, Matty.\"\n\nAnd then she closed the gap between us for a firm, passionate kiss."
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "mutual masturbation",
        "porno",
        "orgy",
        "group",
        "mff",
        "anal",
        "anal sex",
        "morning blowjob",
        "harem",
        "drunk"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-big-tits-club-ch-19-20"
}