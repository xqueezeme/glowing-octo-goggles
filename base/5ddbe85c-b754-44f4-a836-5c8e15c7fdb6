{
    "title": "Amazing Grace Ch. 15-16",
    "pages": [
        "CHAPTER FIFTEEN\n\nMimi & John\n\nEthan's finger had discreetly slipped out of my panties when Ginger was rising from the table. The muscles in my pussy clenched and released several times as if trying to grab a hold of his finger. The scene had put me in a quite a wanton state. I remained frozen in place on that bench as Ginger and Doc made their exit, not exactly sure how to deal with my state of arousal. \n\nIt was a whole new experience for me. As elementary as it may sound, being sexually charged in front of other people wasn't something I could put on my resume. I wasn't even sure if I liked it or not. I knew so much of what went on in the lifestyle included being on stage, it seemed, but it wasn't the most appealing idea to me. \n\nI liked what Ethan and I did together. But I especially liked that it was private. I wasn't ready for other people to see what I was like with him. To be honest, I wasn't sure I would ever be ready for that. I knew it was probably because I still cared about how other people looked at me and what they thought of me. But that didn't change the fact that it bothered me. A lot. \n\nIt was at the very heart of my doubts about whether I'd be able to fit in this world. In Ethan's world. I wanted it to work out with us more than anything, but there were still some things I wasn't sure I'd ever be able to handle.\n\nDeke broke the spell that seemed to be suspending everyone in place like invisible jello. \"I could use a smoke.\"\n\nJohn nodded. \"Doc and Ginger are probably in the other spare room. They're staying there tonight so they don't have to drive all the way home. You know where the screened-in patio is, right?\" \n\nDeke nodded, \"Yeah.\" He stood and held his hand out to China, then looked back at John. \"How well do you know your neighbors?\"\n\nJohn tilted his head and frowned for a second, then smiled and nodded. \"You won't be the first naked bodies they've seen in there.\"\n\nEthan stood and swung his leg over the bench as Deke led China out of the playroom. He offered his hand to help me onto my feet. \n\nI noticed a silent exchange between Ethan and John. A lingering direct stare.\n\n\"Mimi and I are going to the kitchen. Do you guys need anything?\"\n\nI shook my head and then realized that John had dropped the protocol. I wondered if he'd done it on purpose or if it was purely accidental. Nobody is perfect, right?\n\nEthan held me firmly in his arms until we were the only people remaining in the playroom. Then he loosened his grasp and guided me backward to the bench where Ginger had been so my butt could sit down on top of it.\n\nHe parted my thighs and stood between them. I remember thinking that it was a nice height for intercourse. Then I quickly thought, Duh. That's one of the things it was designed for. \n\n\"What did you think of their scene, baby?\"\n\nI took a deep breath and exhaled as I tried to get my mind to work. \"I don't know if I think anything about it. I mean, nothing bad or anything like that.\"\n\nEthan patiently waited for a better answer. \n\n\"It was surreal watching someone get off only a couple of feet in front of me.\"\n\n\"Did that bother you?\"\n\n\"No.\" \n\nThe elevated pitch of my voice gave away that I was not fully committed to my answer. Ethan's eyes narrowed.\n\nI wasn't sure how to explain my hesitancy. \"I can't...I don't ever want to ...\"\n\nEthan started shaking his head before I was even halfway through my sentence so I stopped talking. \"I'm not into that.\"\n\nI wasn't sure we were thinking of the same thing. \"Into what? Which part?\"\n\n\"I'll never even pretend to share you with another man. Ever.\"\n\n\"Good. I was afraid that because I wrote about that kind of stuff you might think...you know, that I wanted to do it or something.\"\n\n\"No. I won't assume something like that. I'll ask you first.\" \n\n\"We haven't really talked about boundaries.\"\n\n\"Sure we have. But not in one conversation. And maybe not exactly laying each limit out on the table.\"\n\nI nodded. \"Ethan, I think I have a limit that we haven't discussed.\"\n\n\"Okay.\"\n\n\"I don't think I want to, um, you know, come in front of other people. I ... that's just too personal.\"\n\nEthan smiled and kissed my cheek. \"I'd prefer we only do sex scenes in private, too. Not with friends or on stage. Unless that stage is empty because the dungeon is closed for another couple of hours.\" Ethan nuzzled my neck as he referenced our recent scene at the dungeon. \"You liked watching Ginger climax, though. Didn't you?\"\n\nI nodded and tried to hide the impish grin I could feel starting to curl my lips. \n\n\"We might have to use that screened-in patio after Deke and China are through with it. I don't think I can wait until we get home to fuck you.\"\n\nEthan claimed my mouth in a hungry kiss, plunging his tongue past my lips. My head spun with desire as if I were drunk with it. The kiss was over as suddenly as it began, though.\n\n\"Damn, you bring it out in me.\"\n\n\"What?\"\n\n\"My need to dominate. I don't know what it is, exactly. This is the first time I've felt like this. This strong, I mean. I ... God, I love it.\"\n\nMy heart practically exploded at his confession. It mirrored how I'd been feeling about him. There was just something so right between us. I could only think of one word to describe it. Harmony.\n\n\"Do you realize I haven't played online once since you and I started dating?\"\n\n\"It hasn't been that long.\"\n\n\"I used to game every night. For hours. I went 14 hours straight, once.\"\n\nA mild alarm sounded in my head. I connected the dots all at once. I remembered that he'd transferred his addiction from drugs to alcohol to smoking to gaming. Now, to me? Is it even possible to be addicted to another person? I wasn't sure how addiction worked. I need to remember to google this tomorrow.\n\n\"What does it mean that you haven't been gaming?\"\n\n\"That I no longer have a need for it, I hope.\"\n\nEthan tipped my chin upward so he could kiss me again. He started with gentle, coaxing pecks and then deepened the contact for a more meaningful, passionate exchange. My mind was once again fuzzy, falling quickly under his spell.\n\nLow murmurs gradually got louder as people began walking down the hallway, making their way toward the playroom. Ethan kept me locked in a kiss until the voices were clearly in the room.\n\n\"I found it online.\"\n\nEthan pulled away as John and Doc were moving past us toward the steel kneeling stockade in the corner of the room. \n\nDoc bent over the apparatus and tugged at one of the legs. \"Looks pretty sturdy.\"\n\n\"Yeah. I'm pretty happy with the quality.\"\n\n\"You'll have to send me the website. We're talking about doing the same thing you did here with combining adjacent bedrooms. We hardly ever use the two spare rooms in our house.\"\n\n\"Back when they built this house, the spare rooms were so small. This room is still only 12x20. Each bedroom was 10x12 before. Can you believe that?\"\n\n\"Damn. Are you guys still thinking about moving?\"\n\nJohn nodded, \"Yeah. Thinking about it. I haven't brought it up to my folks, yet. I don't think they'll care about selling this house, but I don't know what they have in mind in terms of what they want from the sale. Technically, it's their house still. But all the improvements we've made to it we've paid for on our own. So, I don't know how we're going to work that out.\"\n\nEthan cocked his head to the side and looked over at John. \"Your name isn't on the title?\"\n\n\"No. And we never took over the payments officially. I mean, as far as the bank is concerned, my parents have been paying the mortgage. We've been paying them. And we pay the taxes.\"\n\n\"Yeah, you need to talk to your parents because you're getting screwed on your taxes.\"\n\n\"I know. But I really don't want to go through the hassle of moving it all over to my name because we just want to turn around and sell it.\"\n\nDoc chimed back in. \"Just put off selling it for another year.\"\n\nJohn shook his head and then grinned. He looked over at Doc and then to Ethan and me.\n\nEthan smiled and frowned back at John. \"What?\"\n\n\"We can't wait for much longer. Nine months comes fast.\"\n\nDoc's jaw dropped. \"Oh, shit! You're kidding, right?\"\n\nJohn shook his head. \"It's not official, yet. She just took the home pregnancy test this morning.\"\n\nThe subject of children hadn't come up in any of our discussions. We were still working on boundaries. I watched Ethan's expression intently. A huge smile lit up his entire face. He was genuinely happy for John.\n\n\"Oh, man, congratulations.\" Ethan leaned in to give John a man hug and then stepped out of the way for Doc to do the same.\n\nI wasn't sure if I should congratulate him or not. I hadn't been included in their conversation, and I was a little wary of breaking any rules with so many torture devices nearby.\n\nMelissa and Ginger walked into the room as Doc and John were composing themselves after their hug. Melissa firmly planted her hand on her waist and camped her hip out to the side in an exaggerated motion.\n\n\"You didn't just tell them without me, did you?\"\n\nJohn slowly turned his head toward Melissa, raising a single eyebrow. Her hand slid off her waist and she straightened her posture. Then her eyes lowered to a spot on the floor just a few feet in front of her. The tension was palpable, but not exactly ominous. I even detected a slight quiver at the corner of John's mouth as though he might break out in laughter at any moment.\n\nDoc motioned for Ginger to come to him and she scurried away from Melissa, eager to distance herself from her friend all of a sudden.\n\nThe whole display was suspenseful. I found myself holding my breath and trying not to smile at the same time. If I thought for a moment that John might really do her any harm, I would've been uncomfortable. But I wasn't the least bit uneasy. It was evident that he was going to school her on her behavior and I could hardly wait to see how.\n\n\"What did I tell you about sassing me before our guests arrived?\"\n\n\"You told me to keep my mouth in check, sir.\"\n\nI bit my lip when she spoke. I'd never heard her refer to John with such respect. She wasn't disrespectful to him, but this was a whole different level of formality. It seemed they were slipping right into some type of role playing. I wondered if they'd worked out some signal and it was so subtle I missed it.\n\n\"Do you think the way you addressed me just now was 'keeping your mouth in check'?\"\n\n\"No, sir. I'm sorry, sir.\"\n\n\"And what happens when you clearly disobey my orders?\"\n\n\"I get punished.\"\n\nJohn looked over Melissa's shoulder to Deke and China who were quietly slipping through the doorway. Then he turned his attention back to Melissa. \"Did you think that being pregnant would stop me from whipping you?\"\n\nMelissa shrugged one shoulder and then dropped her chin to her chest as she shook her head. \"No, sir.\"\n\n\"Not at this stage of your pregnancy, it won't. And later on, I'll just have to dole out much more creative punishments. Because I highly doubt you'll be any better at controlling your mouth at eight months pregnant than you are now. Right?\"\n\n\"Yes, sir; I'm sure you're right.\"\n\n\"Of course I am. Now, go pick out a crop.\"\n\nMelissa gasped and then bit her lower lip as she appeared to be holding her breath.\n\n\"You have something to say about my choice of implement, Mimi darling?\" The sarcasm rolled off his tongue.\n\nShe shook her head and turned around to walk to the closet. \n\nEthan pulled me with him as he stepped around the spanking bench so we could move out of the way. I clasped my hands together and realized that they were clammy. I was a lot more tense about what was about to happen than I was admitting consciously. \n\nParking his back against the wall, Ethan wrapped one arm around my waist to hold me firmly against him. I wasn't sure if he could sense my state of anxiety or not. I only knew that his firm grasp felt like it was holding me together.\n\nMelissa returned with a pink crop that had a wide leather piece on the end with a heart cut out of it. She balanced it on her open palms, presenting it to John with a bowed head.\n\nJohn chuckled. \"The very first crop I bought for you. And the mildest one in that closet. You haven't wanted this one in a very long time.\" \n\nJohn lifted the implement from her hands and mused as he rolled the handle in his fingers. His expression changed as though he'd discovered the answer he was looking for. He briefly glanced over at Ethan and then back at Melissa.\n\n\"Here.\" John tapped the steel kneeling stock with the end of the crop to indicate where he wanted Melissa to go. She approached the apparatus and knelt down onto it. Even though John had stated they hadn't used it, it was obviously adjusted for her. \n\nJohn leaned over and stroked her back when she was in place. He locked her ankles in place by latching the bar over them, followed by her wrists and neck. He then yanked down the back of her leggings, exposing her thong and two bare butt cheeks. \n\nI immediately noticed a series of scars along her hip. They were a pale pink color and obviously very old, but they weren't from a natural cause. I couldn't think of anything that might cause those marks except being beaten. My eyes darted from Melissa's hip to John's face. I couldn't put it together. Even though he was about to hit her with a crop, he wasn't angry. He didn't even seem capable of inflicting those types of marks on Melissa. The way he looked at her, doted on her. \n\nMy attention was drawn back to Ethan as I could feel the back of my skirt inching upward. His free hand had been sliding up the back of my skirt and his fingers were now wiggling beneath the elastic leg of my panties at the base of my buttocks.\n\nThe sharp thwack of the crop startled me. My gaze had drifted as I was focusing on Ethan's creeping hand. Ethan tightened his grip on me.\n\nMy attention shifted back to Melissa. I wanted to be ready for the next blow. Flinching seemed like such an amateurish thing to do. No need to broadcast how new all of this is to me. I noticed that Melissa was completely still and quiet. \n\nJohn's hand lifted for another swing and I sucked in my breath. This time as the sharp sound of the leather slapping her skin resonated in the room, I felt a pinch on my buttock. It might've even happened a half a second before the sound. I froze in place.\n\nAnother strike of the crop and another pinch in the same spot. Ethan's fingers hadn't been creeping up my skirt for sexual reasons, he had intended for me to feel a sting each time the crop landed on Melissa's buttocks. \n\nI not only forgot to flinch at the sound, I was no longer intently focused on Melissa. Instead, I was anticipating my own torment. It calmed me so much I wanted to drop to my knees. Thankfully, Ethan had me steadfast enough that I didn't require legs to stay upright. \n\nMelissa twisted her head in the stock and looked directly at me. She suppressed a smile before shifting her face back to the floor. \n\nAlmost the exact same envy that I'd felt for Ginger was creeping over me again. I wished that it were me in that stockade with Ethan wielding that crop in his hand. When the next blow came, and I felt the sting that was now increasing in intensity as Ethan had hardly moved from pinching the same spot, I nearly moaned out loud. I must've made some sound because suddenly all eyes in the room were on me.\n\nI bit my lip and Ginger stifled a chuckle. John's hand came to rest at his side and he took a couple of steps backward.\n\n\"I think I'll change this out for something with more bite.\"\n\nJohn moved to the closet and swapped the crop he'd been using for another one. The end of this one was shaped differently. The leather piece was nothing more than a narrow strip. He showed it to Melissa and she groaned as he took his stance behind her. \n\n\"Five more, Mimi. But I'll make these count.\"\n\nThe sound wasn't as loud as the previous crop but the first blow with this one made Melissa squirm. Ethan didn't pinch me. I shifted my face toward him slightly in question but received no response. \n\nJohn continued with the remaining four swats and I endured them without any distraction. I listened to Melissa's labored breathing and soft cries and watched the red stripes appear across her white skin right before my eyes. I felt no sympathy for her because there was no reason for it, however, I stopped envying her on about the third stroke. But all the way to the end, I found myself in awe of her strength. \n\nAfter the fifth blow was delivered, John walked to the closet and put away the crop. Then he returned to Melissa and stood by her side stroking her back as he spoke to her.\n\n\"Are you going to remember this for the rest of the night, Mimi?\"\n\n\"Yes, sir. Thank you, sir.\"\n\n\"Are you ready to come out of the stockade and rejoin our party?\"\n\n\"Yes, sir.\"\n\nJohn leaned down and lifted her pants over her buttocks. Melissa hissed her discomfort. He didn't acknowledge it at all. He simply released her limbs and neck from the steel bindings and then helped her onto her feet and into his arms. He leaned down and whispered something in her ear and she shook her head.\n\nJohn lifted his face from Melissa's hair and smiled. \"Anyone else want to try our new stock?\" He swiveled toward me and tilted his head in question. \"Hmmm?\"\n\nI violently shook by head and tried to shrink farther into Ethan's grasp as everyone laughed out loud, including Ethan. \n\nCHAPTER SIXTEEN\n\nKiwi\n\nDeke interrogated John on what they'd missed and everyone moved back into the living room to sit and talk. I finished my wine and actually found something to contribute to the sub conversation when the topic turned to books. It ended up being the one thing we all had in common. We all read novels.\n\nI left the party with a couple of titles to add to my reading list, and a few new friends. And another BDSM experience under my belt.\n\nOn the ride home, Ethan pumped me for information. \"What did you think of the party? Was it what you expected?\"\n\n\"I'm not sure what I was expecting. In some ways, it was like any other party I've ever been to. This one at least had some entertainment.\"\n\nEthan laughed. \"And what did you think of John and Mimi's entertainment?\"\n\nI frowned at his use of her nickname but shrugged it off. \"I was real nervous about it at first.\"\n\n\"I noticed that.\"\n\n\"Is that why you pinched me?\"\n\n\"I just wanted to play a little. I didn't know it was going to turn you to jelly. I had a hard time holding you up.\" Ethan took a long sideways glance at me with a huge teasing grin on his face.\n\n\"I don't know why, but for some reason it was easier to take it than to watch someone else taking it.\"\n\nEthan nodded. \"I'm the same way at a club when there is a guy I don't know behind the whip. I thought it was my own discomfort over being out of control.\"\n\n\"It's kind of hard to watch.\"\n\n\"I know what you mean. You handled the last five strokes, though.\"\n\n\"Yeah. I'd sort of moved beyond feeling sorry for her by that time.\"\n\n\"What were you feeling?\"\n\n\"I, uh, sort of envied her.\" I quickly added, \"To a point. I mean, she was enjoying that, I think.\"\n\n\"Yes she was.\"\n\n\"Did you see those marks on her hip, though?\"\n\n\"Yeah. They're, uh ... I should let Melissa tell you, but it isn't like it's a secret or anything ... She got those before she met John.\"\n\n\"What are they from?\"\n\n\"A cane, I think. I don't know, exactly.\"\n\n\"Someone did that to her?\"\n\n\"Yeah. Some guy she was seeing when she lived in Houston.\"\n\n\"How did that happen?\"\n\n\"What do you mean?\"\n\n\"I mean, didn't they have a safe word?\"\n\n\"I don't know. I never asked her.\"\n\n\"Why not?\"\n\n\"Because it's not my business.\"\n\nI frowned and continued to stare at Ethan, waiting for an explanation.\n\n\"What? Listen, Grace, it's not like what you read in books. Safe words don't magically protect you from harm.\"",
        "\"What does, then?\"\n\n\"Choosing to play with someone you trust. Talking about things; communicating. Telling the truth and trying not to hide things from the other person. Mostly, though it's about making good choices. There are guys out there who get off on inflicting pain. They're out to get their own kicks and couldn't care less about the other person.\"\n\n\"Do you get off on inflicting pain?\"\n\nEthan frowned and glanced at me. \"Not exactly, no. I get off on pleasuring my partner. Pain can be a part of that in different ways. When the pain morphs into pleasure, for example. Or when the pain causes the person to let go, much like it did for you earlier on a smaller scale.\"\n\n\"How do you know when to stop?\"\n\n\"You mean, if your partner doesn't let you know when they've had enough?\"\n\nI thought about it. He had a point. It came down to trusting that the person would stop when you told them you couldn't handle any more.\n\n\"There are dozens of non-verbal signs that give an indication that someone is getting close, but you can't just count on the person wielding the whip to pick up on them. What you have to be able to count on is that they will stop when you say you've had enough.\"\n\n\"What if I'm gagged?\"\n\n\"Well, for one, I hope that you'd know the person pretty damn well before allowing yourself to be bound and gagged. And you should work out a signal.\"\n\n\"And a safe word.\"\n\n\"A safe word is only as good as the agreement.\"\n\n\"Meaning?\"\n\n\"You have to work out what it means when you use a safe word, or when you stay 'stop', or use any signal that indicates that your limit has been reached. I personally prefer you say, 'stop it, asshole', or 'I've had enough, you fucking sadist.'\"\n\nI laughed. \"Like I'd dare say that to you with a whip in your hand.\"\n\nEthan shrugged and chuckled. \"I'd hope you would feel comfortable saying it, knowing that I wouldn't take it out on you if you did.\"\n\n\"You'd just stop?\"\n\n\"Absolutely. And that's something you're going to have to trust in me before I'll even consider whipping you.\"\n\n\"Who said I want you to?\"\n\n\"Your eyes said it loud and clear. Hell, everyone in the room could feel how much you wanted to trade places with Mimi.\"\n\nI could feel the heat rising up my neck and over my cheeks. I focused intently on the road out the front windshield.\n\n\"It doesn't make you a freak, Grace.\"\n\n\"I don't want to be hurt. I don't understand why I was feeling like that at that moment. Believe me, I don't want to be whipped.\"\n\n\"Do you think Melissa wants to be whipped?\"\n\n\"Well, yeah. I saw the look on her face when she was there.\"\n\n\"That was Mimi.\"\n\n\"Who are we talking about then?\"\n\n\"Melissa likes to refer to that part of herself as Mimi. John calls her Mimi to get her in the right frame of mind to play.\"\n\n\"I thought it was just his pet name for her.\"\n\n\"A lot of people use nicknames, not just to protect their real identity, but to get them into the proper frame of mind for role playing. Melissa is like that. My point is that Melissa doesn't want to be whipped.\"\n\n\"But Mimi does?\"\n\nEthan chuckled. \"When certain situations arise, Melissa, or Mimi, finds herself in the mood to be taken in hand by John.\" Ethan shrugged. \"She isn't like that all the time.\"\n\n\"And you think I'm like that?\"\n\n\"Do you?\"\n\nI wasn't going to repeat the answer in my head. I would've just been stating the obvious, anyway. \"Do I have to come up with a nickname?\"\n\n\"Not unless you want to. You could always use the pseudonym you already have.\"\n\n\"I was thinking about that, anyway. This crowd already knows my pen name so it just feels right. I don't like for many people to know me by both names.\"\n\n\"I've been careful not to use your real name. I don't think anyone heard me when I spoke it in your ear earlier tonight.\"\n\nHe remembers everything. \"I'd still like to keep my safe word.\"\n\n\"Of course. I wasn't suggesting that people not use one. I was merely pointing out that it won't save the person who has made the wrong choice of partner. I want you to remember that if we ever break up.\"\n\nI felt a little sick at the thought of it. \"I don't think I'd do any of this without you.\"\n\n\"Yes you would. And you would have found it without me sooner or later. I haven't done anything special.\"\n\n\"Yes you have. How can you say that? I was going to leave that night and go back to my boring, vanilla existence. I planned to never return.\"\n\n\"And when John called you back to read again, would you have considered it?\"\n\n\"Probably. But not becoming a member.\"\n\n\"You don't know that for sure. You were dying to get involved. You just didn't know how. Someone else would've presented you an opportunity. I just beat them to it.\"\n\n\"I'm glad you did.\"\n\n\"Me, too.\" Ethan grinned over at me as he was exiting the highway.\n\n\"But I disagree with you that you haven't done anything special. You've opened up a whole new world of possibilities for me. You've made me feel things I didn't even know were possible. And I've learned so much about myself, although to be honest with you, some of it wasn't good.\"\n\n\"There's nothing wrong with you, Grace.\"\n\n\"No, I don't mean that stuff. I mean the part about being hung up on what everyone thinks of me. And how much I let my past cloud the way I saw myself.\"\n\n\"Everyone does that, though. I mean, we're all a product of our past experiences. We can't help it.\"\n\n\"You don't think I can change?\"\n\n\"I didn't mean that. I just meant that we can't change what has happened in the past. We can always change how we deal with it. If I didn't believe that, I'd be a lot different person than I am now.\"\n\nI nodded and let it go without further prodding. He'd already divulged his past struggles with addiction, I didn't see any need to rehash it.\n\nEthan changed the subject. \"So what did you think about Melissa being pregnant?\"\n\n\"I think it's great. I mean, I don't know them all that well but, you know, they seem to be happy about it.\"\n\n\"They're not married.\"\n\nI shrugged and shook my head. I wasn't sure where he was going with his statement of fact about their marital status. \"Does that matter?\"\n\n\"Hell yes it matters.\"\n\nI tilted my head in curiosity. He obviously had some strong opinions on the subject.\n\n\"I've seen too many couples have kids without making any other commitment to each other. When they split up, there is no one watching out for the kid. Marriage doesn't keep people from splitting up, but divorce isn't an overnight process, and child support can be a motivating factor to stay involved.\"\n\n\"You've spent some time thinking about this.\"\n\nEthan shrugged. \"My cousin got killed in a car accident. He was only 13. He'd been hanging with a group of older kids, getting involved in all sorts of bad shit. His mom didn't even notice that he was failing in school and his dad skipped out after he was born. I've had a lot of time to think about it.\"\n\n\"I take it his parents were never married?\"\n\n\"No.\"\n\n\"But what's to say that things would've turned out any different?\"\n\n\"My mom knows his dad. He's married with two kids. I have to think that if he'd been forced to take some responsibility for Ben, things might've turned out different.\"\n\n\"You don't think John would do that to Melissa, though; Do you?\"\n\n\"No. I don't think so. But circumstances change. People change. One left turn and you don't even recognize the guy that was once your best friend.\"\n\n\"So you're not against marriage?\"\n\n\"No.\" Ethan wrinkled his nose. \"Did you think that I was?\"\n\n\"Yeah, sort of. Something you said about not even considering marrying Holly made me think you might be against the whole institution.\"\n\n\"Oh, hell no. You have to know by now that Holly was just a convenient outlet at the time.\"\n\n\"While you were recovering from your addiction?\"\n\n\"Yes.\"\n\n\"Is that what I am?\"\n\nEthan frowned and sighed. \n\nHe pulled the car into his garage, shut off the engine and closed the garage door before speaking. \"I'm always going to be an addict, Grace. I haven't used drugs in almost three years, but that doesn't make me less of an addict. I have an obsessive personality. That can be a bad thing, or it can be manageable. I choose for it to be manageable. And I'm finding new ways to manage it all the time. \n\n\"Last month, my way of managing it included gaming. Holly helped with that. But even far more therapeutic for me was becoming active in the BDSM community. My therapist believes that it is helping me to shift to an internal locus of control. There were a couple of times when I felt it before I met you. But now ... shit, I can't even describe the change.\n\n\"But to call you a convenient outlet? No, it doesn't feel like that at all to me.\"\n\n\"What does it feel like to you?\"\n\nEthan grinned, \"I don't know. Like the real thing. Something permanent.\"\n\nI could feel the pin pricks at the corners of my eyes. I wasn't expecting him to say that. I'd been fighting the same feeling; trying desperately to stomp it into the ground each time the fleeting thought crossed my mind. It's too soon. We hardly know each other. I'm only just starting to learn about this side of him.\n\n\"Have I scared you off?\"\n\n\"No.\" Maybe. A shiver ran down my spine at the thought of commitment. I wasn't sure why.\n\n\"I'm not convinced.\"\n\n\"It's a lot to take in, Ethan. You throw out that you're an addict and seeing a therapist like it's the most normal thing in the world.\"\n\nEthan nodded, \"I told you I had more baggage than you, and that you'd wish we were dealing with your shit instead of mine.\"\n\n\"You did. I remember. I thought you were just trying to be nice.\"\n\n\"That's something I don't know how to do very well.\"\n\nI shrugged. I wanted to disagree but there was no point. If he needed to feel he was a total hard-ass, then who was I to burst his bubble? \"I'm a little afraid that you're just sort of shifting your addictive energies, or whatever, to me. That I'll just be part of the problem. And I don't know how to deal with that.\"\n\nEthan chuckled. \"I suppose I am obsessed with you in a way. And I probably will become addicted to the feeling I get when I'm topping you. Is that so bad? I mean, there are addicts everywhere. It's just a matter of whether or not their addiction is hurting themselves or anyone else. Is being with me unhealthy for you?\"\n\n\"No. Is it unhealthy for you?\" \n\n\"No. It's good, in fact. I have to exercise a lot of restraint around you.\"\n\n\"You do? I don't understand. Why?\"\n\nEthan's hand wrapped around my wrist and he gently pulled my hand to his crotch. The stiff bulge beneath his jeans was obvious. \"Because this is what you do to me all the time.\"\n\nMy lips formed a silent \"O\".\n\n\"Yeah. So, either I tie you to my bed and spend all day and night fucking you ... which isn't a bad idea, by the way ... or I learn to control my impulses. And each time I do that, I feel stronger.\"\n\n\"What were you starting to say about the feeling you get when topping me?\"\n\n\"That's fucking incredible. Adrenaline. Better than any drug I ever took. I don't know how to describe it to you. Can you describe what it's like to be on bottom?\"\n\nI shook my head. \"I'm still working on that. For my books. But if topping gives you the same rush as being on drugs, isn't that bad?\"\n\nEthan nodded, \"It would be if I couldn't control it. That's the beauty of it. My self control is part of what gives me the high.\"\n\nSounds reasonable. I was trying to keep a positive attitude about the whole thing despite the fact that it was starting to feel complicated. The only long-term relationship I had to compare it to was my marriage. Failed marriage. I couldn't help but think of it as a total failure given the undeniable truth that the very basis of it, fidelity, was breached. \n\nAnd yet, I did everything right. The way everyone says to do it, anyway. We dated for a long time. We waited until we were out of school and had jobs. We established strong ties to our families. Every ingredient of the recipe was there; whereas almost none of that applied to this relationship. \n\nOn top of that, there were some real red flags with Ethan. I think. If I sat down to tell a girlfriend about him, she'd most certainly warn me off of him. I should be warning myself off. But something inside me, some inner voice was telling me to stick it out. He was messy, that was for sure. So are you. You just hide it better. This connection we had was based on harsh truths and not on what we wanted the other person to see. Not on what we wanted anyone else to see. I'd been playing that game for too long. All my life.\n\n\"Grace, I think I can give you what you need. If you'll let me. We're good for each other. What's happened in the past is behind us.\"\n\nEthan reached over and stroked my cheek until I looked up into his eyes.\n\n\"What's your safeword, Kimber?\"\n\nI swallowed hard and tried to ignore my skipping pulse. \"Stop it, asshole.\"\n\nEthan chuckled for a second but then tilted his head with one raised eyebrow as if my clever recount of his earlier statement wasn't amusing him at all.\n\nI cleared my throat and wiped the smirk off my face best I could. \"Kiwi.\"\n\nEthan nodded, \"Kiwi.\""
    ],
    "authorname": "D_Lynn",
    "tags": [
        "safeword",
        "role play",
        "crop",
        "whip",
        "stockade"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/amazing-grace-ch-15-16"
}