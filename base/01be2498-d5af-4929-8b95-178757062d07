{
    "title": "A Boiled Frog Pt. 03",
    "pages": [
        "Welcome to 'A Boiled Frog'. If you haven't read Parts 1-2 I suggest you read those first as the characters and situations won't make much sense otherwise. Please vote, I especially like feedback and comments, both good and bad, as this is my first storytelling experience and any help I get is appreciated.\n\nSpecial thanks go to Anjali and Sterenn for editing help and thanks to Lilith.Fair for all of the advice. I hope I can eventually live up to your expectations. I wish you a speedy recovery and a pain-free day.\n\nI also need to thank several fans for their feedback and comments. Some of your stories moved me and pushed me to keep writing. As I've never written anything longer than a college essay, I've had some struggles and I know this story is not as good as it could be, but at some point, I need to move on because I have more story to tell. So, without further ado, here is Part 3. \n\nChapter 1\n\nHave you ever been on such an emotional high for so long, that you absolutely KNOW a crash is coming? Well, that's how I felt as I got off the plane from Vegas. I felt like I had defied the laws of gravity for so long that it had to end. What goes up must come down, right?\n\nJulie rushed into my arms at baggage claim, holding me tight. I started to apologize and was told to be quiet. She went into lawyer mode right away, however. The cross-examination began the moment the three of us were in the car driving to our house. Julie demanded a play-by-play of the entire weekend and at each point she would stop and ask Lisa for her point of view. It was tiring, but I could see Julie was enthralled by it. Something nagged at me though. Something seemed off. It bugged me that I could see her getting visually excited whenever Lisa described how \"delicious\" I looked in certain outfits or how much someone wanted me. She seemed to spend extra time dissecting it whenever it was a guy. I decided to downplay all my interactions with Billy for that very reason.\n\nWe ended up back at our place going through the details well into the afternoon. As I told the story of checking out Amber and Ash in the bathroom, and Ash exposing herself to me, I could see my wife getting excited. Then when I went on about Lisa's dad checking me out as I changed the tire her expression became almost orgasmic.\n\n\"All this talk has my little Tina all hot and bothered I see,\" she said as she knelt in front of me, even though I was barely at half-mast. I started to protest because Lisa was right there, but Julie told me to shush. I looked over at Lisa sitting on the loveseat watching Julie and shrugged while mouthing, \"Sorry.\" Julie undid my jeans, pulled out my cock and started slurping.\n\nDespite the embarrassment of being watched, I couldn't ignore Julie. She quickly got me hard and I furtively glanced over at Lisa wondering what she was thinking. Lisa sat there and watched, biting her lip. Her eyes stared at mine, not on the act itself. I don't think she was happy but I couldn't maintain eye contact with her long enough to be sure. I knew what Julie was doing, she was claiming me as hers once again. I, personally, was mortified to be used like this and flushed a deep red. It didn't stop me from cumming though.\n\nAfter that, I said I needed a break and headed upstairs for a shower and to change. I popped out of the shower not knowing what to wear. I grabbed a towel, and still naked, headed down to ask if I should dress for staying in or going out to dinner.\n\nAs I neared the stairs, I heard their discussion.\n\n\"I want DDs, maybe even Fs,\" Lisa said. \"Her frame can handle it and they will look so scrumptious.\"\n\n\"They won't look natural,\" Julie responded.\n\n\"Screw natural,\" Lisa said. \"I want porn star tits. She is so sexy already, but that'll put me in heat the moment she walks in the room.\"\n\n\"He plays sports Lisa. You of all people know how hard it is to play with those getting in the way. If we did injections instead of implants, couldn't we start small so he can get used to them?\"\n\n\"Um, what'cha talking about,\" I said, interrupting them.\n\n\"My Christmas present,\" Julie said innocently. \"Lisa tells me she's already picked out my gift. Trust me, you will love it.\"\n\n\"I don't think so. I've heard enough. You two are crazy! \"\n\nI turned around and headed upstairs, where I went to get men's underwear out of my dresser. There was none to be found. I dumped out my entire drawer to only find women's lingerie.\n\n\"Screw it, I'm going commando,\" I said to no one.\n\nThen grabbing a pair of sweats and a t-shirt, I threw on them and laced up my combat boots. It was as masculine as I could get on short notice. I searched around and had found some scissors and was just sitting down to cut my hair when Lisa and Julie walked in.\n\n\"Chris, stop!\" Julie shouted. \"What's going on? What are you doing?\"\n\n\"Ending this craziness here and now!\" I said firmly. \"You guys are planning my life, treating me like a Barbie doll, and don't even bother to ask me what the heck I want. I don't want to be a freak with tits.\"\n\n\"Oh, baby, please stop,\" Julie implored. \"I was being insensitive. Please don't do anything this rash. Let's discuss this like adults.\"\n\nI paused, nodded, and set the scissors down on the vanity. Julie immediately lunged for them, grabbing them and slipping them behind her back. (Everything sharp mysteriously disappeared over the next few days).\n\nJulie went on to explain that she loved Tina, and didn't want her to go away. Lisa then repeated almost the same thing, saying she wanted more time with Tina. When they finally got around to asking me what I wanted, I replied, \"I want my wife happy, and I really enjoyed being with you, Lisa. I am shocked that I did, but it is true -- you are terrific. But what you guys are suggesting is not just a big step, it's a monumental one. I'm not sure it's one I can make. I enjoyed the weekend. I really did. It was liberating being Tina, but I am not sure I can do that full time. It's not really me.\"\n\n\"How 'bout we start small?\" Lisa said. \"And we can do injections instead of implants because it's easily reversible.\"\n\n\"Why do I need boobs anyway?\" I asked.\n\n\"It will make you look more natural and we can get rid of the breast forms,\" Lisa said. \"I absolutely love sucking on nipples and yours are hidden away. You are missing out on some of the best parts of sex. And the pump will help turn your nipples into an erogenous zone. Trust me, you will enjoy the extra sensitivity. With some nipple training, we can make your breasts more like a girl's than a boy's.\"\n\n\"What's the difference?\"\n\n\"If you want, we can arrange to get a guy over here so you can try sucking on his nipples and see the difference,\" Julie teased with a smile.\n\n\"That's ok, no thanks,\" I quickly replied. After a few more minutes of them cajoling me, I finally relented. \"Are you guys sure this is what you want?\" When they both nodded anxiously, I sighed, \"I guess we can try it out, if I can always stop. You guys are driving me crazy.\"\n\nLisa set me up with a noon appointment for the very next day at her office. As I was getting dressed to head to her clinic, I don't know why, but I was nervous to leave the house dressed as Tina. I mean I had gone all weekend in Vegas as a girl and it hadn't bothered me nearly as much as the idea of getting in my car and driving 15 minutes to Lisa's office. Maybe it was because I was all by myself again or maybe it was because I was here in my home town where I could get recognized. Either way, I was feeling very anxious.\n\nI knew I was going to have to take my top off at the doctor's office so I wore a French bra without my breast forms and a loose sweater shirt. I tucked myself into an extra-tight gaffe and pulled on a pair of yoga pants that molded to my legs and ass that Lisa had admired when she bought them for me. I followed with ankle socks and my pink Nikes. I looked at myself and while I couldn't see a bulge, I decided to be safe and added a skirt. Then checking my makeup for the fourth time, I nervously headed out.\n\nI got to Lisa's office and went in to find the waiting room completely empty, not even a receptionist at the window. Ringing the bell by the window for service, I heard Lisa yell, \"Tina, is that you?\"\n\nI yelled back an affirmative and was told to come on back and go into room two. I entered to find it empty and climbed up on the examination table. It was different from any other exam room I had been in because the table had an X-Ray arm that went over the top of it on one end. I yelled out, \"Where is the staff?\" and she opened to the door with an \"I sent them out to lunch early so we could be alone.\"\n\nShe walked in looking utterly amazing. She had on her doctor's coat and a stethoscope around her neck, but the coat was unbuttoned and dangling open. Underneath, she wore nothing but lingerie. A sheer black bra left nothing to the imagination and she had on crotch-less black pantyhose with 4-inch black spiked heels. Her pussy was completely exposed and already glistening.\n\nMy mouth hung open.\n\nShe smiled and sashayed toward me.\n\n\"Please remove your top so I can examine you,\" she said.\n\nI quickly pulled the sweater off and she reached down herself and undid the bra. As my nipples became exposed, she reached over and tweaked them. She grabbed them between her fingers and started to roll them around. They hardened to pure marble. She then bent down and licked one.\n\n\"What was that for?\" I asked.\n\n\"Cause I wanted to,\" she said with a grin. \"Now lay back.\"\n\nShe went into professional mode as she explained that this was a DEXA bone density scanner and would give her a reading of my total body composition and fat content. That way she could know where and how much fat she could take out of my body to inject into my breasts.\n\nAs she was waiting for the results she went on about how she would prefer a regular breast augmentation saying that the debate was still out on this technology, but she understood this was my choice and she appreciated me going through this much for Julie and her.\n\nAfter the scan, when she looked at the charts, her frown was visible.\n\n\"What's wrong?\" I said. \"Am I going to die?\"\n\n\"No, you goofball. I need at least 300 milliliters of fat from one location to do a body fat transfer,\" she said. \"You are in too good of shape. I need you to stop whatever exercise you are doing and start eating more desserts. We need to fatten you up.\"\n\n\"That has got to be the strangest advice I have ever heard a doctor give,\" I said. \"But I am not doing much. I haven't really been to the gym since Julie first styled my hair. I was too embarrassed that I might be recognized.\"\n\nShe smiled at that and said, \"I am going to insert some saline into your breasts to loosen things up, but it should dissipate quickly over the next couple of days.\"\n\nFirst, she massaged my breasts. I closed my eyes tightly when she pulled out the needle and kept them closed until the pinch of the needles were done. I felt the liquid running into my body. Once she pronounced herself done, I looked down and was shocked. I looked like a girl for sure now. My breasts bulged at least an inch off my chest. She kneaded them gently (they ached), before telling me to sit up.\n\n\"Now that we are done with the work part, it's time to play,\" she said with another grin. She bent over to kiss me and I quickly stood up and took a step back. She came forward again, this time grabbing for my crotch. I reached out and grabbed her arms to fend her off.\n\n\"Lisa, we can't ...\" I said.\n\nShe growled and I could tell she was getting angry. \"You have GOT to be kidding me. You know Jules is okay with this. What is your problem?\"\n\n\"I can't have sex with you,\" I stated. \"I am sorry.\"\n\n\"Why the hell not!?\"\n\n\"Because my doctor said I am not allowed to exercise that way anymore,\" I said, trying to keep a straight face. \"It's the only exercise I have been getting lately and I was told to cut it out.\"\n\nShe looked at me seriously for a second and then caught on. \"I really stuck my foot in that one, didn't I? Well, I am giving you an exception for me. In fact, I am going to give you a prescription for a daily dose of Lisa.\"\n\n\"I don't think my insurance covers that,\" I quipped. \"Do they have that in a generic form?\"\n\nShe chuckled at that and said, \"They most certainly do not.\"\n\nShe pulled me into her and we started making out. I got tired of stretching upwards so much since I didn't have heels on and she did so I maneuvered her onto the exam table to bring her back down to my height. Parting her lab coat, I reached my arms around to her back and undid her bra. I started nibbling at her neck while I rubbed my hands up and down her back. I was still topless and she somehow got her bra out of the way and was rubbing her breasts with mine. It felt heavenly despite the small ache. Maybe getting rid of the breast forms hadn't been such a bad idea after all. Her hands buried their way into my yoga pants, worked out the details of the gaff, and finally fished out my cock. I was completely erect in seconds.\n\nHer legs locked behind mine and her hands grabbed my ass and pulled me into her very wet pussy. I slid right in. I was surprised that she went straight for full-on fucking without much foreplay at all. It was so unlike Vegas. I pushed her so she was lying down and swiveled the x-ray arm out of the way so it wouldn't bump my head.\n\nI climbed on top of her and said, \"You owe me a ride if I remember correctly.\"\n\n\"Just don't make it a slow one. Make it hard and fast. I need this so bad.\"\n\nSo, I did. I quickened the pace and thrusted into her pussy mercilessly. I still remembered vividly the names that Julie had said Lisa had called me during our first fuck session a couple days ago. She had said I wasn't worthy of my wife and that my wife was stupid for choosing me. I was determined to show her how good of a lover I was and gave it my extra effort. I even raised her legs up and rested them on my shoulders so I could drill deep.\n\nI kept my pace relentless and used the comments flowing through my head as fuel for an anger, which deadened my sensitivity and allowed me to push through the pleasure. Lisa quickly started to moan in pleasure as I got more and more aggressive. I don't even know what came over me, but at one point my right hand raised and fell onto her butt cheek with a loud smack.\n\nThe dam broke. Lisa gushed into an orgasm. I started to rain dozens of blows upon her. My spanks weren't very strong, since I wasn't at the right angle to put much into them, but I kept hammering away with my hand and my cock.\n\nHer butt started to redden and my hand started to hurt. I began to wonder if I'd reach the point where she would tell me to stop. Yet, she never did, if anything she seemed to be loving it. I felt like a cowboy riding a bucking bull.\n\nLisa seemed to be completely out of her mind with pleasure. She stopped doing anything but moaning, thrusting back at me and breathing hard. She was no longer coherent and kept getting louder and louder. She quivered and shook as orgasms rolled through her body. Her vaginal walls clenched me harder and harder, slowly sapping the anger out of me as my own pleasure mounted.\n\nEventually I could take it no longer, erupted a torrent of sperm like a volcano, spraying her inner walls. Her legs locked me into place and held me until I was completely spent. We lay there, panting and recovering, for the longest time. We cuddled and kissed and giggled until I remembered that I had heard a chime in the distance during the middle of our lovemaking.\n\nFinally, I spoke. \"What was that noise I heard? The chiming.\"\n\n\"What noise?\"\n\n\"The chiming that happened four times while I was fucking you.\"\n\nShe turned crimson. \"That must've been the staff coming back from lunch,\" she said, dropping her voice down to a whisper. \"Do you think they heard us?\"\n\n\"I think everyone within three blocks heard you. You don't know the meaning of the word quiet.\"\n\n\"Oops,\" she grinned, despite blushing beet red. \"Oh, well, this should be interesting. But it was worth it. That was great.\"\n\nI looked down at her and she was drenched with sweat. Her matted hair made her look like she'd just done a P90X workout. I climbed off and looked at my own reflection in the mirror and I was a total wreck as well. I had sweated buckets riding my bucking Lisa and my makeup was streaked down my face, a total mess.\n\nI spent the next few minutes frantically tucking myself completely back together, straightening my clothes, hair, and makeup before kissing Lisa goodbye and sneaking out of the room. As I did my walk of shame through the reception area, both ladies in the reception windows were scrutinizing me intently and one put her hands together and gave me a silent golf clap before winking at me. I looked down at the floor and sped up towards the office front door. My entire face flushed red in embarrassment.\n\nWhen I got home that night, I had to do a repeat performance for Julie, minus the spankings. I don't think I could ever hit Julie, not even in play. Lisa had called her and bragged about how good I was and Julie demanded a play-by-play review followed by a complete reenactment. Luckily, Lisa hadn't mentioned the spankings either. I dropped to sleep bushed. So much for gaining weight today. I felt like I had gone to the gym for hours.\n\nChapter 2\n\nTuesday morning, I got out of the shower and was blow drying my hair when I heard the front door bell. I was going to ignore it but then I meandered over to our master bedroom's window and looked out to see a FedEx delivery truck.\n\nMy engine parts! I'd ordered them right before we had left for Vegas. This was everything I needed to get my car out of the garage and back on the streets.\n\nI quickly grabbed a towel and threw it around me before running down the stairs, yelling, \"I'm coming. Don't leave.\"\n\nI whipped open the front door just in time to see a tall young guy walking off the porch. Upon hearing the door open, he turned back to face me.\n\n\"I have a delivery for your husband, ma'am,\" he said. \"Where would you like it?\"\n\nMa'am? I was completely naked. How could he think I was a girl?\n\nI looked down and noticed I'd wrapped the towel around my torso covering my breasts, which still ached from the saline and hadn't receded all the way yet. Then I saw my painted toenails. And the towel was long and bulky enough to cover my junk. I could see the mix-up.\n\nI switched to my Tina voice to avoid embarrassment. \"Those are MY parts. Bring them to the garage. I'll open it for you, throw on some clothes and be right out.\"\n\nI hit the garage door opener and ran upstairs to get dressed. I grabbed the first thing I saw -- a pair of boy shorts from the floor followed by the flowery summer dress Lisa had bought me in Vegas that was on the first hanger in the closet. I skipped bra and shoes completely and hustled down the stairs two at a time.\n\nThe delivery guy was wheeling a hand truck up the driveway with about 10 boxes of engine parts stacked on it. I was so excited, I admit I was bouncing up and down, causing my saline-filled boobs to jiggle. I couldn't control myself.\n\n\"Hello, ma'am, I've got a delivery for Chris Adams,\" he said, looking at me a little puzzled.\n\n\"That's me. It's Christina but you can call me Tina, all my friends do. These are the parts I need to get my baby here up and running,\" I said, running my hand down the hood of the GTO.\n\n\"Oh, wow,\" he said, catching the first glimpse of the muscle car. I'd just finished the final coat of paint and it looked straight out of a car magazine. It was a deep, royal blue that looked black until the light hit it. \"That's hot. I'm into cars myself, but I could never afford something as nice as this.\"\n\nWe hit it off. I proceeded to jump into the minutiae of what I'd done. He seemed very interested and it was great to have a captive audience for once. Every time I tried to explain to Julie what I was working on, her eyes glazed over and she would reply with a \"That's nice, dear.\" Mick, as he told me, seemed enthralled.",
        "After I rambled on for about 30 minutes, he asked me if I was doing it alone, and why my husband wasn't helping me. I circumvented my situation by saying I didn't have a 'husband', because I didn't want to explain the whole crossdressing thing. It was nice; just two guys hanging out and talking about cars with sex not even being part of the discussion.\n\n\"Well I get off work at 4:30,\" he said. \"I'd be happy to come over and help you. Some of those engine parts are heavy and having someone to hold them would speed you up.\"\n\nI explained that I only had mornings to work on the vehicle since I didn't want him to meet Julie. With the way she has been going on about guys showing interest in me, I knew she'd read more into this than just two car enthusiasts hanging out.\n\n\"Oh, okay, then. Well, I'm off Saturday if you need help. This car is sweet. \"\n\n\"Sure,\" I said. \"I'll probably start around nine. You can help me then if you want. That'll give me time to get most of the easier stuff done.\"\n\nHe asked for my number in case something came up and I gave it to him. He typed it in and then sent a quick text so that I'd have his. Then he noticed the time. He'd been here for over an hour.\n\n\"Oh crap, I've got to get back to work. I'm way behind on my deliveries.\"\n\n\"No problemo,\" I said. \"See ya Saturday.\"\n\n\"Sure thing. It's a date.\"\n\nI had already stopped paying attention to Mick as I quickly started unwrapping boxes. I had parts to install! With my baby so close to being done I was anxious with anticipation.\n\nI lost track of time as I jumped into the work of installing pieces and parts. When the sun went down, I realized I hadn't even stopped for food and my stomach was growling. I'd also completely ruined the summer dress with grease and oil.\n\nI was under the car working on installing the fan belt when Julie walked in. It was being a pain and I almost had it when she announced, \"I've been texting you for the past hour and you haven't responded. \"\n\nWithout letting go of the blasted belt and losing my progress, I said, \"Sorry, honey. My parts came in and I've been excited to get them in.\"\n\n\"Well, I was hoping for some Tina time,\" she said. \"I texted you asking you to be ready to go out to dinner with me and wear something extra sexy.\"\n\n\"I'm sorry, Julie,\" I said, still wrestling with the belt. \"I really want to get this done. Why don't you grab a coin off my nightstand and I'll make it up to you tomorrow?\"\n\nShe said nothing and stared at me in shock. After about 10 seconds she turned and walked back inside without saying a word.\n\nIt took me about 30 more seconds of struggling with the belt before it dawned on me what I'd done. I'd just set the worst precedent in the world. The coins had always been used to have sex and I had just used one to get out of sex. That was NOT what I wanted them to be used for EVER.\n\nI dropped everything, leaving the belt to unravel, and rushed inside to see a dazed Julie sitting on the couch. I dropped to my knees before her, careful not to touch her since I was covered in grime, clasped my hands, and begged forgiveness.\n\n\"I'm so sorry and stupid, baby,\" I pleaded. \"I don't know what I was thinking. I've got no excuse. Please forgive me. I can shower and change quickly if you want. Let me make it up to you. What can I do?\"\n\nShe smirked at me. \"Well, I'm definitely not giving you back your coin. That's your payment for being a jerk. And you can make it up to me by being my sex slave again all Sunday.\"\n\n\"Deal,\" I said immediately. \"That doesn't sound like a bad punishment at all.\"\n\nI then ran upstairs to shower.\n\nShe yelled after me. \"You also can't wear dresses when you work on your car! If Lisa saw that dress right now she'd kill you.\"\n\nChapter 3\n\nYou know how when you have cash in your pocket, you seem to burn through it. That was me with the coins, I spent three over the next few days. One to get out of my wife's office function, one to\n\ncancel a salon appointment and one to avoid leaving the house to pick up my wife's dry cleaning. Frivolous in hindsight, but the car had priority. The only thing I did was make sure I was cleaned up and waiting for Julie in case she wanted to play.\n\nI was up again at the crack of dawn Friday to try to get the rest of the parts installed. The weather was predicted to be nice next week and I wanted to get in some actual driving time before we got snow. I worked all morning until lunchtime before I went in to make me a quick sandwich.\n\nAs I was spreading mayonnaise on the bread, I glanced at my phone and saw 14 missed calls and 14 text messages. \"That can't be good,\" I thought picking it up. They were all from Lisa. I then scrolled through the text messages of \"Hi, it's Lisa, please call me back.\", \"Call me\", \"Where ARE you?\", \"Pick up the damn phone!\", \"You better be dead cause if you're not I am going to kill you,\" and so on. They got progressively more demanding.\n\nAs I started to dial her back, the doorbell rang. Setting down the phone, I walked over to the door to open it to the full fury of the Ice Queen stare.\n\n\"Why haven't you been answering my calls?\" Lisa hissed.\n\n\"I was in the garage working on my car,\" I replied.\n\n\"You've wasted two hours of our day and looking at you, we're going to have to waste another two getting you cleaned up,\" she said, wrinkling her nose. \"I think we need to put you on a leash.\"\n\n\"What are you talking about?\" I said, a little annoyed. \"I'm working on my car all day.\"\n\n\"No, you're not! My surgery got canceled so I negotiated with Jules and you are mine for the next 30 hours. No coins are getting you out of this one.\"\n\nShe did seem to know everything about our life. It made me wonder what, if anything, Julie didn't tell her.\n\n\"Now, let's get you showered. You are filthy.\"\n\nI could fight and argue, or I could give in. Lisa always got her way anyway, so I capitulated.\n\n\"Will you wash my back?\"\n\nAnd with that one comment, the glare vanished and Lisa's face melted into a smile. Her beauty radiated through. My heart jumped a little. \"Yes, I will. I'm going to have so much fun with you, little girl. Let's go.\"\n\nThe shower took over an hour and two orgasms from me; I lost track of how many from her. We didn't get out until the water turned too frigid to stay in. Lisa was happy and relaxed and practically bursting with energy.\n\n\"Where we going?\" I asked, as Lisa pawed through my clothes pulling out stuff for me to wear.\n\n\"First, we're going shopping for a couple of items, then to a tanning salon.\" Lisa relayed. \"Jules and I agreed you need a little color. After that, I'm taking you to dinner and out dancing. I got us a hotel room so we can do some horizontal dancing after that.\" She gave the horizontal dancing air quotes. \"I'm really looking forward to that part. I got something special in store for you.\"\n\nLisa laid out for me a pair of nude crotch-less pantyhose with a gossamer white bikini and bra set, followed by a mid-thigh length, yellow sun dress covered with large sunflower patterns. It had a hole exposing my belly button. She then pulled out canary yellow Anouk Jimmy Choo pumps that she had bought me. I hadn't worn them yet. The 5' inch heel was a little much for me.\n\n\"I feel like such a Barbie doll sometimes,\" I said, donning the outfit. \"You guys sure like making my clothing decisions.\"\n\n\"You're not Barbie,\" she said, dragging me to the vanity. \"You can't put makeup on a doll. You're Barbie Plus.\"\n\nAfter I was dolled up, we headed out with her driving. She drove right past the mall and stopped at a seedy looking tattoo parlor.\n\n\"Um, why are we here? I don't want a tattoo.\"\n\n\"Relax,\" Lisa said. \"They also do piercings here and you're getting a couple.\"\n\n\"Me?\" I said, shocked.\n\n\"Yes, we want a second hole in each ear and your belly button pierced.\"\n\n\"Guys can get away with one hole pierced, but definitely not two,\" I said. \"And my belly button? I won't be able to wear a shirt outside once I do that.\"\n\n\"Honey, when are you going to realize that you're not a guy anymore?\" Lisa said. \"I mean, let's face it, you were lucky to be called a 6 as a guy, but as a girl you're a solid 10. Quit trying to be the 6 and embrace the hotness. Be the 10.\"\n\n\"But I'm into chicks, I can't be a girl,\" I said.\n\n\"I dig chicks, too. Am I not a girl?\" was Lisa's response.\n\n\"Well, yes. One of the sexiest girls I have ever seen.\"\n\n\"Back at ya, baby doll. Back at ya.\" With that she left the car. As I did the same, several guys at the construction site next door emphasized her point by giving us the wolf whistle. I had to admit, we looked like two hot chicks stepping out of a hot car.\n\nAfter the parlor, with three new punctures in my body, Lisa took me shopping for a new bathing suit. She went through the rack with a purpose, checking out each suit. When she finally found one she liked, she pronounced, \"This is the one.\"\n\n\"That thing's hideous,\" I said. It was an orange and purple polka dot. Even Mr. No Fashion Sense Me knew no one would find this swimsuit attractive.\n\n\"Yes, it is,\" she agreed. \"But that doesn't matter. You won't be wearing it out of the tanning booth.\" She went on to detail her reasons. This suit would cover my entire breast forms and because it had no ties, I'd have distinctive tan lines. That was the mission here, not fashion.\n\nI sighed. \"This will make it even more impossible to pass as a guy.\"\n\n\"That's partly the point, but you will look sexy,\" she emphasized. \"Now suck it up and look sexy for me. You do want to look sexy for me, don't you?\"\n\nI sighed and nodded and let her drag me to the tanning salon, which turned out to be part of a women's only gym. She had added me to her membership so that I could use the tanning facilities and everything else. They had a workout room, sauna, showers, racquetball and tennis courts, as well as a pool. It was a high-end sports club for women only. While that eliminated the pressure of being hit on by guys, it didn't really calm my fears. I still didn't consider it a safe haven. What would they do if they found out my secret?\n\nThe good part of the trip was Lisa covering me with tanning bronzer. The better part was a private shower after the tan to get it all off. Showering with Lisa was becoming one of my favorite things to do.\n\nAfter that she took me out to a fancy Italian restaurant for dinner, this one only two blocks from my previous job. As she pulled into the parking lot, I complained.\n\n\"Here?\" I said. \"This is too close to my old work.\"\n\n\"Relax, Tina. No one's going to recognize you. I'm starting to forget what Chris looked like. Everyone else will too. Just relax and be Tina.\"\n\n\"That's easier said than done.\"\n\n\"It will become natural over time,\" she said. \"Just don't dwell on it and let it be.\"\n\nI reminded myself that I was out with a woman I adored and if I didn't blow it, I would be getting lucky later. I needed to calm down and just be.\n\nDinner went without a hitch, except for the one guy behind Lisa who kept trying to look up my dress. I still wasn't comfortable with stuff like that. I decided to try to be personable and stay away from my feminization, since it had been such a big part of our day.\n\n\"So, have you talked with your family?\" I asked. \"Have you heard any feedback from our Vegas trip?\"\n\n\"Actually, I have. Ash has been calling me every other day. I think she's got a crush on you. I don't think I've gotten off the phone without her asking how you're doing,\" she teased. \"She even asked for an updated photo of you in front of your car. And I know she isn't into cars.\"\n\nI ignored the teasing and queried her, \"Why has she been calling so much?\"\n\n\"I haven't talked to her in a while. I admit, I was hurt from the loss of Robin and was projecting on my family. I've been avoiding them. And because I was avoiding them, Ash began rebelling against the status quo and anything me. She even refused to go to college. Now, though, she has done a 180. She's been asking me how to get into college and what should she expect. I think she's finally growing up.\"\n\nThen she continued with the teasing. \"My mom's been asking about you as well. She wants me to get you to set a date in Vegas since your parents are no longer with us. She wants to go big. In fact, she's asked me for your number several times. Should I give it to her?\"\n\n\"How are we going to get out of that?\" I asked. \"You and Julie have really piled me into a bunch of crap lately. I can't believe how much you guys get me to do. I'm living so far out of my comfort zone it's ridiculous.\"\n\n\"It's good for you. Your comfort zone was boring, and you have to admit, right now your life is anything but.\"\n\n\"That's true,\" I said. \"I also don't know what to make about Julie lately. How she's dealing with this. She seems to have gotten a lot more aggressive lately, not just in bed but in everything. I think she's trying to compete with your dominant nature. I feel like our relationship is strained and I'm not sure what to do about it. And I've no idea why I am telling you all this, you're scary, but I've got no one else to talk to.\"\n\nShe laughed at that. \"Every relationship is evolving or dying. Jules and I have actually talked a lot about this. I appreciate her so much for opening up her relationship with you to me. I'm having so much fun with you. I don't know where this relationship with you is heading, but I do know that I've promised Jules not to get between you and her. I'm giving you the same promise. I love Jules and don't want to hurt her. I realize I'm the third wheel.\"\n\nAfter that we moved onto lighter subjects. At one point, I asked about her practice and how they reacted to her squeals of passion the other day. She blushed red and said it ran the gambit.\n\n\"Dish,\" I demanded. \"Come on, you have to explain that.\"\n\nShe told me one of her nurses gave her a pamphlet today on the perils of same-sex relationships that she got from her pastor, but the rest were enthusiastically supportive.\n\n\"So, no one suspected I was a guy?\"\n\n\"Baby doll, when I tell you, you pass, I mean it. You need to relax on that subject.\"\n\nWhen I asked for more details she told me a couple of them highly approved of me and wouldn't mind joining me in an examination room if I wanted. When I asked for who, she replied, \"You aren't trying to cheat on me and Jules are you? Jules would be pissed.\"\n\n\"I'm not too sure about that,\" I said. \"I think she's developing some weird fetish. The last couple of times we've gone out, she's tried to get me to flirt with people. She keeps saying I need to loosen up and embrace my inner woman, whatever that means.\"\n\n\"Honey, it's not just her saying that. I've been too. You're too worried all the time. It's stressing you out. Once you realize that you are Tina and not playing Tina, you will be happier.\"\n\nAt that point, the guy who'd been trying to look up my dress got up to go to the bathroom. He walked real slow as he passed our table, totally checking us out. After he'd passed, I mentioned him to Lisa.\n\n\"That guy's creeping me out. He's been trying to see up my dress all night. I don't know how you girls deal with that. I want to go slug him.\"\n\n\"You're new to this but you'll get used to it,\" Lisa said. \"Every girl has to. It's part of being a girl. It's normal for most of us because it happens as soon as we hit puberty. We grow up with it.\"\n\n\"What do you mean?\" I asked.\n\nShe explained every girl gets checked out, no matter what-- even the fat and unattractive. It's just the quality of man goes up the hotter the girl. Guys look, they just can't help themselves.\n\n\"I can't believe that,\" I said. \"I've never tried to look up a girl's dress.\"\n\n\"Baby doll, you aren't the norm.\"\n\n\"Lately, girls check me out, too. What's up with that? They didn't use to.\"\n\nShe explained that I've entered the realm of beautiful people. And beautiful people are always looked at.\n\n\"Every man will check you out, just get used to it,\" she said. \"Girls will too. While some may want you, most just compare themselves against you. Regardless, you will be judged as a sex object.\"\n\n\"I don't know if I can accept that.\"\n\n\"Doesn't matter,\" she said. \"It's a fact of reality.\"\n\nAfter this heady conversation, I was feeling stressed.\n\n\"I think I need a drink,\" I announced.\n\n\"That, I can help you with,\" she raised her hand for the waiter.\n\nWe'd had wine with dinner, but now she ordered an amaro as an after-dinner drink, which I didn't like.\n\n\"It was good, but not my style,\" I said. \"Too sweet.\"\n\n\"Let's get something more fun then.\"\n\nAfter paying -- she refused to let me -- saying I was her woman, she dragged me down the street to a bar to do Tequila shots. It wasn't until after my second shot that I noticed something odd about the bar. It seemed like everyone was paired up by their sex. I was in a gay bar.\n\nLisa didn't give me a chance to care. She just pulled me onto the dance floor. I complained that I couldn't dance in heels this high and she said it was time to learn as she wasn't letting me off. Luckily, at that moment, a slow song started up. She pulled me in tight and held me, softly swaying to the music. Halfway through the song, her lips reached mine and our dancing slowed way down. As the song finished, I laid my head on her breasts and hugged her tight.\n\nThe next song Lisa didn't care for, so she declared it was time for more shots. That led to another round and I was starting to feel the alcohol. She didn't let me rest, making me dance for another hour or so before I said I needed to hit the ladies' room. She said she'd order more drinks.\n\nI waited patiently in line for the bathroom but luckily it wasn't too long. I did my business, and then went to check my make-up, as had become my habit. As I primped in front of the mirror, and got rid of some sweat from dancing, I noticed the girl next to me checking me out.\n\nMy breath caught as I realized who it was. It was my wife's secretary, Tiffany. \"Did she recognize me,\" I thought. The hair on my neck tingled and a fresh round of sweat burst from my pores.\n\nThen she spoke.\n\n\"Hi,\" she said nervously.\n\n\"Um, hi,\" I said nervously.\n\n\"Sorry, but I couldn't help but notice your date,\" Tiffany said. \"The tall, blonde lady. I saw you guys making out and was wondering, how well do you know her?\"\n\nHmm, what was she getting at? \"I know her pretty well,\" I responded. \"She's my fianc\u00e9. What's it to you?\"\n\nHer eyes lit up at my answer. \"That's such good news,\" she said. \"I'm so happy for you.\"\n\n\"Um, I don't know you. Why did you ask me that?\"\n\n\"Oh, it's nothing,\" she said. I stared demandingly and arched one eyebrow, so she continued. \"You see, I know her. I thought she had a thing for my boss, and I thought I was going to lose her to your fianc\u00e9, and well, let's face it, your fianc\u00e9 is so pretty I couldn't compete with her. But if she is out of the picture, it's good news for me.\"\n\n\"Your boss isn't married?\" I said, knowing darn well she was. To me!\n\n\"Well, she is,\" she said, \"but I am not worried about him. He's such a loser: not that cute, at all. He doesn't work and he's not even looking for a job from what I hear. I can't see that lasting. I don't know what she ever saw in him in the first place.\"\n\nI wanted to punch her. But, that wouldn't go over well, so I quickly said, \"I see, well I better get back,\" and left.\n\nI got to Lisa and downed the drinks she gave me. She kept ordering them and I kept drinking. I was in the mood to get plastered. Tiffany had left a sour taste in my mouth.\n\nWe danced late into the night and I eventually calmed down. But, by the time we finally made it to the hotel, I was still feeling tipsy and sluggish. I hadn't drank that much in a long time and I wondered why Lisa had been plying me with drinks. She knew I was a sure thing, she didn't need to get me liquored up. I felt wined and dined as if she wanted to get into my pants. What a role reversal.",
        "I waited patiently with our overnight suitcase while she went through the check-in process. After a couple of minutes, I needed to pee and wobbled to the bathroom. As I sat on the toilet, I looked at her overnight bag and wondered what she'd packed. I opened the suitcase and found several pieces of intimate apparel, as well as some sleepwear and clothes for tomorrow. But, in the zip-up compartment on top there was a gigantic black dildo, along with 2 bottles of lube. Curious, I pulled it out. That's when I noticed it had a harness attached to it. It was one of those strap-on dildos.\n\nI blanched. I could only think of one place this could go and I felt my anus clinch. This thing was at least 8 inches long and thicker than me. There was no way this would fit up my butt. I debated what to do and then heard someone come into the bathroom. In panic, I shoved the dildo behind the toilet and quickly zipped the bag.\n\nIt was Lisa.\n\n\"Tina, you in here?\" she asked.\n\n\"Yes, just peeing. Be out in a second.\"\n\nAs we got in the elevator, Lisa was all over me. We petted heavily up to the room. She even reached under my dress and grabbed my cock and pulled it out of the gaffe. I wasn't hard though, the dildo had removed any desire and replaced it with fear.\n\nShe opened the door and guided me into the room with lips still entwined, moving me backwards until I bumped into the bed. Then, with a heavy shove, she knocked me over before leaping on top of me. She grabbed my arms and pinned them with her knees, putting her weight on me. Then, lifting her butt off my belly but leaving my arms immobile, she reached overhead and pulled her dress off before sinking back down. She wore black -- bra, under bust corset, garter belt with stockings, and a skimpy thong bikini.\n\nI tried to wiggle but couldn't. I was secure. She pulled my arms above my head and held them with her left as she unfastened her bra. Reaching down, she pulled her thong askew to expose her pussy and inched her knees up my arms to free both hands. Then, she grabbed my head and shoved my face into her pussy, forcing my lips to her clit. Not able to do much else, I opened and sucked it in.\n\nHer whispers of \"Yes\" egged me on as I teased her pearl. After just a few minutes, I felt her body convulse and shake to its first orgasm. She sighed and let my head down, collapsing forward over me. After a minute or two, she rolled off me and said, \"Your turn.\"\n\n\"My turn for what?\" I said.\n\n\"Why, to make me cum, of course.\"\n\nI rolled my eyes at that. Then she said, \"Actually, I've got a surprise for you. Why don't you go take a quick shower and I'll join you in a second?\"\n\nI started the shower and instead of climbing in, peeked through a crack in the bathroom door to see Lisa throwing clothes everywhere. She even upended the suitcase and shook it. I heard her mumble, \"I could have sworn I packed it.\" Then a couple of seconds later she hissed, \"This sucks!\"\n\nI watched for a second as she started to undress and when stood up, I dashed to the shower and jumped under the stream to get my hair wet. The water was freezing. I hadn't bothered to set the temperature before spying and shrieked for a split second before I could get out of the stream and adjust it to be hotter.\n\nI was just able to get it warm when Lisa slid into the shower behind me. She reached up and grabbed my shoulders and started to massage them.\n\n\"That feels nice,\" I mumbled. The alcohol was still affecting me and I wondered if I could perform. I still was flaccid.\n\n\"I had a special surprise for you tonight, but I misplaced it,\" she said. \"It'll have to wait until tomorrow if I can convince Jules to give me another night.\"\n\n\"I'm a little wiped out anyway,\" I said. \"Can I just hold you tonight? I don't need to cum.\"\n\n\"Sure, baby doll. Sure.\"\n\nChapter 4\n\nA nice, relaxing blowjob where you lay back and do nothing is a great aid to cure a hangover. That's what I learned Saturday morning. I woke up to a work in progress. Lisa kept sucking until I started to reach for her. Then, she pulled her mouth off my penis and said she wanted to try something new.\n\nAt this point I was game for anything. She had me hot and bothered and willing to experiment. But still, I was shocked.\n\n\"Have you ever fucked Jules in the ass?\"\n\n\"Um, no,\" I replied, blushing a little.\n\n\"Have you ever wanted to?\" Lisa said.\n\n\"Well, her ass is amazing, but I don't want to hurt her, so not really.\"\n\n\"Would you be willing to fuck mine?\"\n\n\"Do you want me to?\"\n\n\"I do.\"\n\n\"Have you ever done it before?\"\n\n\"Sure, with a dildo, but never with a real cock. But I want to try it.\"\n\n\"Um, ok,\" I said, not trying to sound too eager. \"What do I need to do?\"\n\n\"Well, I already prepped myself while you slept,\" Lisa said. \"I gave myself an enema and made sure I was clean back there. So, all you need to do is open me up.\"\n\nShe then crawled up to my side and faced away so I was looking at her big beautiful ass.\n\n\"Take your finger and play with my bottom,\" she said. \"Take your time and go slow.\"\n\nI decided to shock her. Since she'd had an enema, I wasn't too worried. I sat up behind her, and leaning over, ran my tongue right down her ass crack. She flinched in surprise but then pushed into me.\n\n\"Oh, that feels good.\"\n\nI tried to wedge my tongue into her ass. I licked her bud and then plunged my tongue into it as far as I could, licking and salivating as much as I could. I smelled no poo, nothing but a floral scent. As I was licking, I started to saw two fingers into her vagina, lubricating them up.\n\n\"I don't need to teach you anything,\" she said. \"You're doing great. Keep it up.\"\n\nOnce my tongue started to tire, I pulled out and eased my index finger into her asshole, working it down to the first knuckle, before she started to push back on it. With her flexing, it sunk to the hilt. She pulled back and then sunk again onto it.\n\n\"Add another please.\"\n\nI added the second digit and rotated them as I pushed. She sighed again, welcoming them. Once they bottomed out, I spread them apart in a V (for victory) as they slowly retreated. Once the tips were right at the entrance, I repeated the process, slowly penetrating her again.\n\nShe moaned in delight. \"Yes, that feels good.\" After a couple more cycles, she told me to add lube and try for three. I pulled out my fingers and sniffed them. They smelled earthy but fresh, not bad at all. I opened the lube tube she had on the bed and squirted it liberally over all three fingers.\n\nI inserted one on the first stroke, a second on the next, and the third on the third. I went real slow with the three, dilating her sphincter as much as I could. After a few minutes of slowly sawing my fingers in and out of her butt, she pronounced herself ready.\n\nPouring the lube right on my dick, I put the tip right on her asshole and eased myself forward. Once I felt the head slip in, I paused. The heat was intense and the tightness, oh my goodness. It was wonderful.\n\nShe said, \"Go ahead, give me some more.\"\n\nI replied with, \"Why don't you push back at your pace. I don't want to hurt you.\"\n\nWith that, she flexed and with one push took 3/4ths of my cock into her ass, burying at least 5 inches into herself. I almost came on the spot. It took every effort of mine to hold off. I grabbed her hips to hold her still before she pushed for more.\n\n\"I'm close already,\" I gasped. \"Give me a second. It feels so good.\"\n\nShe started chuckling and the laughter went through her belly and right up my cock, causing me to twitch and gasp again. I steadied myself for a minute and then released her hips. She understood and pushed in a little deeper, before reversing the process and pulling almost all the way off.\n\nAs she pushed back the second time, I gasped out, \"I love you, Lisa,\" shocking myself as well as her.\n\n\"I think we found something someone likes,\" she said, pushing back even further. She didn't stop this time to pause but kept moving up and down my cock. After about the seventh or eighth stroke, I finally felt my hips touch her backside.\n\n\"That's it,\" I said. \"You have all of it.\"\n\nShe paused there and started squeezing. Not moving at all, she just squeezed and bore down and slowly pushed me away with just her butt muscles until I was all the wait out.\n\n\"Your turn,\" she said. \"Put it in me and push into me.\"\n\nI did and as I sank in, it felt exquisite. It was so tight. Even tighter than Julie's pussy, which was much tighter than Lisa's. As I bottomed out, I gave an extra shove to make sure I was in as deep as I could be. I then started to pull out again.\n\n\"Speed it up,\" Lisa said. \"Fuck my ass.\"\n\nI am embarrassed to say that after 20 strokes I had to stop to avoid blasting off right then. As I paused, Lisa started playing with her pussy. Once I caught my breath, I started up again, not as fast this time, but trying to pace myself so that she could come first. I barely held on. Once I felt her start to spasm, my cock fired, not even waiting to make sure she was truly climaxing. Luckily, she was and we both came together.\n\nWe lay there gasping for a good 10 minutes after we were done. I slowly softened inside of her until I slipped out. I would have kept lying there except she got up, grabbed my hand and dragged me to the shower. I was wiped.\n\nWe barely made it out of the room before check-out time and moseyed down to the lobby restaurant for lunch. At lunch, I people watched. I wanted to test Lisa's theory. I caught every man in the place, including one in his 70's or older, check out me or Lisa. And, even more surprising, all but two of the ladies appraised us as well. I guess what Lisa had said was true. A lady is always on display.\n\nAfter lunch, we hit the tanning salon again and then I agreed to play tennis with Lisa.\n\n\"Are you sure you want me working out?\" I said.\n\n\"You just need to eat more,\" she said. \"Come on, I want to play.\"\n\nI gave her a good match, but only won one set before she won three. None were blowouts as I won at least three games each set. We rallied a lot though and it ate up the rest of our time, so she took me straight home.\n\nI walked in to see Julie sitting in the living room. She flipped off the television and turned to me as I entered. She had on her attorney face and I knew I was in trouble. For what I didn't know.\n\n\"Are you cheating on me?\" she asked, beginning her inquisition.\n\n\"Honey, I was just with Lisa, she said she had your approval. Was that a lie?\"\n\n\"No, I'm not talking about Lisa. I'm okay with that. I'm just checking to see if that is all.\"\n\n\"Well, you know I kissed Ash in Vegas, but there's been nothing else, I swear.\"\n\n\"So, you didn't have a date for today with someone else?\"\n\n\"What are you talking about?\"\n\n\"Well, imagine my surprise when I am getting dressed this morning and as I'm walking past our window, I see a strange truck pull up in front of our house. The truck parks and this very cute guy in a muscle t-shirt gets out, smells his armpits, and then reaches back in for some cologne.\"\n\nI realize where this is going and close my eyes and cringe. \"It's not what you think,\" I get out before Julie talks over me.\n\n\"He then walks up to the house and rings the bell. When I answer it, he looks at me in surprise and asks for Tina. When I ask him who he is, he says, 'Her Date'.\"\n\nI groaned.\n\n\"Don't worry, I covered for you. I told him I was your roomie and you had to go out of town for an emergency. I wouldn't want to cramp your style when you're getting some on the side.\"\n\nWas she being sarcastic? I couldn't tell. She looked pissed. \"Honey, it's nothing like that. He's just into cars, not me. He offered to help me work on the engine of the GTO.\"\n\n\"I don't think that's the engine he wanted to rev. Don't worry, I'm not complaining. He was cute. You've got excellent taste. I just want to be there to watch.\"\n\n\"Honey, you have it all wrong,\" I spouted in frustration. \"I don't want Mick sexually. It was just two guys hanging out talking about cars. I'm happy with just you.\" I paused a second, then added. \"And Lisa.\"\n\n\"I get it if you want to explore your feminine side. I get it. I have pushed that a lot on you. Just know that I love you no matter what. Don't leave me for him.\"\n\nI was frustrated and got angry. \"Arrgh! You've no clue what you're talking about! I'm NOT interested in Mick. Just forget it, it's a dead issue. I'm going to shower.\"\n\nI was angry with my wife, but the anger dissipated as I let the warm water run over my body. I eventually decided to just let it go. Who cares if she thought I wanted to date Mick? I didn't, and that's what mattered. What did I have to worry about? A couple of weeks and Mick would be an ancient memory.\n\nWhen I got out of the shower, I dolled myself up for my wife. I took extra time to make sure my makeup was perfect and even put on some of her favorite lingerie. I slipped back into the sunflower dress I'd worn yesterday since she hadn't seen my piercing yet.\n\nI sauntered downstairs to see her busy making dinner. I snuck up behind her and kissed her on the neck.\n\n\"I'm sorry I got upset, Julie,\" I said. \"I love you no matter what as well. Let me show you how much I love you.\"\n\nShe relaxed and smiled, \"Give me two minutes and this goes in the oven. And then you can tell me all about your date with Lisa.\"\n\nI went through the previous day starting with the ice queen stare all the way until when she dropped me off. When I told her about the belly button piercing, she had me model it for her. She oohed and said it was very sexy. I agreed and asked her if she would pierce hers as well. She told me she'd think about it.\n\nWhen I got to Tiffany and her calling me a loser, she snarled. \"Do you want to fuck her? I could set up a threesome and you could surprise her from behind. She wouldn't know what hit her.\"\n\n\"Are you crazy? Not only would that out me to your entire office, but I don't like her that way at all. And I certainly don't want to encourage her in any way where she thinks she gets you.\"\n\nShe smiled at that, pleased as punch. Had that been a test?\n\nWhen I mentioned Lisa and the strap-on, she replied, \"That cheeky bitch. She tried to steal your virginity from me.\" She loved it that it didn't work out.\n\nWhen I mentioned fucking Lisa's ass, her eyes got wide. After I explained how intense the heat was and how much I came, she whispered, \"Would you be willing to do that with me, too?\"\n\n\"I don't know if I'd fit in your cute ass,\" I said. \"But, yes, I'd be willing to try it. It was really fun.\"\n\nWe had a pleasant dinner, followed by a good session of make-up sex. Not once, during the night, did Mick come up again. And she didn't mention me fucking her ass, either.\n\nChapter 5\n\nI don't know why but I slept terribly, tossing and turning all night. When the alarm went off Sunday morning, I shut it off and promptly fell back asleep. Hours later, I awoke to the smell of coffee. Opening my eyes, I looked up to see Julie standing there holding a cup for me.\n\n\"I'm a little disappointed in my slave this morning,\" she smirked. \"I've been up for over an hour. Where was my breakfast in bed?\"\n\n\"I'm sorry, baby,\" I sighed. \"I didn't sleep too well. What do you need me to do? I'm here for you.\"\n\n\"I'm teasing, silly,\" she said. \"Here, drink this and hopefully it'll wake you up.\"\n\nI sat up and took the coffee from her. She climbed on the bed, scooched behind me and started rubbing my shoulders.\n\n\"Mmmm, that feels nice,\" I said, slowly sipping on the hot coffee. \"I've been thinking. Are you really okay with me sleeping with Lisa? I really don't want to do anything that will upset you.\"\n\n\"You'd think I would be jealous but I'm not,\" she said. \"I've always cared for her. And I haven't seen her this happy ever. Not even when she was with me. That makes me more jealous than anything else. Plus, I love you and seeing her eat crow every time she tells me how wonderful you are, gives me a little zing.\"\n\n\"She says I'm wonderful?\"\n\n\"Don't go getting a big head, but you know you are.\"\n\n\"No, you are the wonderful one. I'm just me.\"\n\n\"Which is the definition of wonderful if you look in the dictionary. It even has a picture of you.\"\n\n\"Am I a boy or girl in the picture?\"\n\n\"Does it matter? Both of you are pretty wonderful.\"\n\nI finished the coffee and leaned out to set the cup on the nightstand, then flipped over and pulled her under me. When my mouth was near her ear, I whispered, \"How may this wonderful slave serve you, great mistress?\"\n\nShe giggled and said, \"First, you can get your butt out of bed and head to the tanning salon. I don't want you to skip a day. You're starting to look very sexy, but I want you darker. When you get back, we can take a shower together.\"\n\n\"Are you sure I can't do this first?\" I said as I moved my head between her legs and took the waistband of her panties between my teeth and tugged. When she smiled, I grabbed the sides of the panties, yanked them down and buried my tongue into her love hole.\n\n\"If you insist,\" she gasped. \"I guess I can't turn this down.\"\n\nI ate her out until she orgasmed twice and finally pushed me away.\n\n\"Go,\" she said. \"I already let you sleep in. The day is wasting. Get out of here.\"\n\nAfter a routine tanning session, I returned to the house to find my wife dressed to kill waiting for me on the bed running a small red vibrator over her pussy. She had two red ribbons in her pig-tailed hair. Her boobs were bare and thrusted forward by the red under bust corset she was wearing. Her legs were capped with red thigh highs and red high-heeled f-me pumps. In bed! My mouth dropped open in amazement. I'd never seen my wife openly masturbate before. She just wasn't that kind of girl.\n\nI quickly stripped and headed for the shower to get the bronzer off. She got off the bed and followed me into the bathroom. There, beside the shower, hung an orange two-quart bag with a silicone hose coming out of it. On the tip was a nozzle.\n\n\"Um, what's that?\" I asked.\n\n\"I decided since my SLAVE was so dirty from her tanning session, I'd make sure she was nice and clean for me to play with. Inside and out.\"\n\n\"But, honey ...,\" I started.\n\nShe raised her hand and cut me off.\n\n\"You did promise to be a good sex slave,\" she said harshly. \"Are you changing the deal?\"\n\nI succumbed. \"No, dear. It's just that ...\" I trailed off as I could see she was getting irritated. I had agreed to play and I guess I could put up with the consequences. I mean, how bad could it be. I knew she wouldn't hurt me. I had seen Lisa's dominating nature once or twice and could imagine her hurting me, but not Julie.\n\nAfter a double enema, I was pronounced clean. She led me to the vanity and did my hair and makeup. Then she got me dressed. First, she picked out a silky red camisole and tied a red choker around my neck. She followed that up with mocha thigh highs, and a pair of red panties. Pulling them up, I noticed a heart-shaped cutout in the back right over the ass. This confirmed my fears, but I stayed still and silent as she took out a pair of high heels and locked them into place.\n\nShe pronounced me ready and had me climb onto the bed, while she disappeared into the bathroom. She returned a minute later with one little addition -- jutting between her legs was a red 6\" dildo dripping wet with some fluid. She eased up beside me and started to kiss me on the neck, rubbing her hands up and down my body.\n\n\"Honey,\" I started.\n\n\"Hush,\" she said, bringing a finger to my lips. \"I want this. I'm going to fuck you, Tina, and you're going to like it. Be my little bitch. I'm claiming you as mine.\"\n\nShe had me get on my elbows and knees and rest my head on the bed with my ass up in the air. She slowly ran her hands over my body. Once she reached my bum, I couldn't help but flinch.\n\n\"Relax, baby. I won't hurt you. I'll go slow. If it gets too bad, just let me know.\"",
        "I felt her outline the heart on my bum. As it did a complete loop, she whispered, \"I love you, Tina.\" Then, she moved inward. Her fingers danced across my anus. My skin began to burn and ache in anticipation of her touch. She must have coated her fingers with some form of lube because I could feel streaks of wetness all over my bum.\n\nI stayed locked in that position for a long time with her lightly grazing my rosebud, caressing but never entering. Then, after an eternity, she reached around and grabbed my rock-hard cock through the panties. I sighed in relief and started to undulate my hips, jacking myself up and down on her hand. Her other hand undid the ties on the sides of the panties and I felt the heart slip away off my ass as her tongue joined in the action.\n\nI gasped as I felt the slick wetness of her tongue trace the outlines of my pucker hole before pushing its way in. After a couple of seconds, she backed off. Her left hand released my penis and drifted up to my face. She pressed a digit against my lips and I eased them open for her. She buried her middle finger deep into my mouth. I flicked the bottom of the finger with my tongue and sucked around it. She started to bob it in and out of my mouth as if it was a miniature cock. With my concentration there, I was jolted suddenly when I felt a finger from her other hand apply heavy pressure on my anus.\n\nI couldn't resist any longer. My body instinctively knew what to do. My hips pressed back and I felt her fingertip resist my push and with a slight pinch, I opened up and welcomed her into me. She pushed forward and I felt nerves burn with fire as she sunk further inside. I felt full, but knew that it was just one finger barely inside me with more to come. She sunk further into me, and every increase in depth seemed to push me past my limits, only to find a reservoir willing to accept more.\n\nI felt my insides heating up and I wanted more, the only part uncomfortable was right near my sphincter -- the rest was wonderful. I started grinding my hips into Julie's finger.\n\n\"Open up, baby,\" Julie teased. \"Here I come.\"\n\nShe inserted a second finger to go with the first and I felt the pleasure doubling. Waves of pleasure tinged with minor hints of pain rippled through my body as her fingers worked to dilate my anus.\n\n\"More,\" I grunted. I didn't mean to ask for it, but it slipped out.\n\n\"Sure, baby. I got you covered.\" A third finger joined the other two for a couple of pumps before they all were removed, bringing an emptiness. Surprising myself, I longed to be filled again.\n\nMy hand reached down to stroke my cock and my wife slapped it away, telling me not to touch myself.\n\nI whined at that and said, \"Please.\"\n\n\"No, you're not allowed to touch it. Don't make me handcuff you.\"\n\n\"We have handcuffs?\"\n\n\"No, we don't. I should probably get some. Just don't touch yourself.\"\n\nWith that I felt her shift up behind me and her hand on my backside as she guided the tip of the dildo into the center of my anus.\n\nWhispering, \"Push back slowly,\" she commanded me to impale myself on her cock. I obeyed and felt arousal and shame as the dildo sank into my bum. When I felt her body touch my backside, I knew she was all the way in. She stopped there and hugged me.\n\n\"How you doing, honey?\" she cooed into my ear.\n\n\"Good,\" I replied, hesitantly.\n\n\"You ready for a little more action?\"\n\n\"I think so.\"\n\n\"Excellent. Because I'm going to pummel that virgin ass of yours and make it mine.\"\n\nHer hips pulled back about an inch before slamming back into me. I gasped in pleasure. But then she pulled out further and I felt empty, before the wave of pleasure struck again. Then she pulled almost all the way out before slamming her way back in.\n\nI cried out. It was so intense I wasn't sure I could take it. My fingers and toes clenched tight and I closed my eyes and waited for the next assault.\n\nShe didn't let me down. Building up a steady rhythm, she continued to force her way out and then impale me again. The pleasure intensified as she put more and more thrust into her movements. Any pain had completely vanished.\n\nInstead of the build-up I was used to by friction through my cock, my cock waved in the air and was dribbling pre-cum like a small faucet. Each thrust would splatter seed onto the bed, some of it reaching my knees, legs, and upper arms. After a few intense minutes I couldn't take it anymore, the pleasure became too much and my dick ejaculated, throwing cum everywhere.\n\n\"I'm cumming,\" I managed to get out. My wife continued slamming herself into me for another 10 strokes or so before slowing down and pulling out. I collapsed onto the bed completely wiped. I laid there panting until I drifted off to sleep.\n\nMy wife let me rest for a couple of hours before bringing me lunch in bed.\n\n\"Ah, the life of a slave,\" I said. \"Lounging around being pampered by his mistress.\"<br >\"Are you feeling ok?\" she said. \"I didn't hurt you, did I?\"\n\n\"No, babe, it actually was quite terrific,\" I responded. \"I didn't know what to expect, but that was pretty amazing.\"\n\nShe smiled at that. \"I guess I am going to HAVE to try it now.\"\n\n\"Now?\" I asked.\n\n\"Not now, silly. Sometime when you deserve an extra big reward. It's an incentive for you to do something nice for me.\"\n\n\"Oh, okay,\" I said. \"I'm recovered and feeling pretty good. What do you want to do?\"\n\n\"Get dressed, sweetheart. We're going dancing.\"\n\n\"Dolled up as Tina?\"\n\n\"Of course.\"\n\nI waited until Julie headed downstairs before I jumped into action. I hustled to take a quick shower and then raced to get dressed before Julie came back up. It was time for my little black dress. I had worn it out with Lisa but never with Julie. I decided I needed to rectify that. I looked great in it and I wanted to be extra desirable for her tonight. I topped that off with the 4\" stilettos I had bought to go with it and a little clutch purse that Lisa had bought for me in Vegas. Underneath, I was tucked into a black gaff and had on my corset to make my angles really pop. I even busted out the big breast forms that Lisa had given me for Vegas. Julie had never seen those and would be very happy with them.\n\nAs I heard Julie heading up the stairs, I jumped into the closet to hide. I didn't want to do my big reveal until after makeup.\n\n\"Chris, are you ready yet?\" she said as she passed through the bedroom and into the bathroom, looking for me. I crept out of the closet and went to the bathroom door and stuck just my head in.\n\n\"I'm still getting ready,\" I said. \"Take your shower and I'll be done as soon as you are.\"\n\nOnce the shower started I quickly sat down at the vanity. I went all out with base, rouge, eyebrow liner, mascara, bright pink lipstick, and powder. I don't think I had worn this much since my initial time. I just finished and was appraising the results when the shower turned off, so I quickly bolted downstairs before Julie entered the bedroom.\n\nI waited downstairs a little nervous for her response. Time seemed to stretch forever but after about five minutes I heard her on the stairs. I quickly struck as seductive a pose as I could manage. My efforts seemed worth it by the look on Julie's face.\n\nShe took one look at me, her jaw dropped and she said, \"Holy shit, girlfriend, you look hot. I need to go step up my game. Be back in a few minutes.\" I had to wait a full 15 minutes while she went from the casual skirt and blouse she had on to an amazing white dress with openwork stitching that exposed tons of skin. Her heels went higher to a pair of 4 1/2\" ankle-strapped, pointed-toed heels that wrapped up her legs.\n\nI gave her my best whistle as she reappeared and she smiled and waved it off. \"I just had to get in the same league as you, girlfriend. I couldn't stand being the ugly, frumpy friend. We're going to be beating the boys off with a stick tonight.\"\n\nI paled at that. The last time I had gone dancing there hadn't been many guys and those had been gay. \"Should I go change?\" I asked. \"I wasn't thinking about that.\"\n\n\"Hell, no!\" she said, sidling up to me and grabbing one of my breasts. \"I really like this. Slave, I order you to be sexy and flirtatious as hell tonight. I want to see the Tina that Lisa saw in Vegas. Bring out the big guns, we are going out and shaking things up!\"\n\nI started my confidence mantra once we got in the car and headed out. She had mentioned earlier we were headed to Chili's and I watched her drive right by it without stopping.\n\n\"I thought you said we were going to Chili's,\" I pointed out.\n\n\"Baby, you stepped up the game so I have to as well. We're moving on up.\"\n\nWe ended up at a high-end French restaurant where the food was decadent and cost half an arm and a leg, but she seemed ecstatic, which was what mattered to me. I did notice that she wasn't wearing her wedding ring. When I asked about it, she said she must have forgotten to put it on after the shower.\n\nAcross the road from the restaurant was a bar with music blaring and we could see people dancing so Julie dragged me over. The place was packed but we found a small booth in the back and slid in. No sooner had we sat down when the waitress appeared with drinks.\n\n\"These are from the two gentlemen over there,\" pointing at a table on the other side of the bar. Julie picked up one, nodded at the two and slammed it down. I picked up the other, shrugged and followed suit. Tina was supposed to be bold.\n\nI was about to set down the glass when a shadow passed over our booth. The men had approached. \"Hello, ladies, would you care for a dance?\"\n\nI was prepared to jump into my 'No thanks, boys are gross' speech just as soon as I swallowed all of the alcohol when Julie popped out,\" Sure, we'd love to.\"\n\nI looked at her in shock. I was expecting to dance with her, not with some guy. I watched in amazement as she grabbed his hand and led him onto the dance floor.\n\nThe other, a tall, dark, masculine guy at least 6'3, looked at me and smiled. \"I guess you are all mine, little lady. Let's go.\"\n\nI told myself I would dance one song and then excuse myself and give Julie a piece of my mind. But, as we entered the dance floor, the music changed to Lifehouse's \"You and Me\". He scooped me into his arms and leaned in close. Putting his mouth near my ear he whispered, \"Hi, I'm Ted. And you are the prettiest girl in here. You take my breath away. I want to take you home tonight.\"\n\nThe confidence mantra had left the building. I looked over at Julie and her partner had snuggled up to her. He had both hands cupping her ass cheeks and she was leaning into him. It looked like she was kissing him on the neck. What the hell was going on? I felt Ted's hands drop to my ass and squeeze. And then, halfway through the song, Ted's pressed a hard bulge against my belly. I lost it and pulled away.\n\nWith a quick, \"Sorry,\" I turned and fled to the bathroom, picking up my purse as I passed our booth. Tears were streaming down my cheeks and I didn't know how to respond. I was intensely jealous that some dude was dancing with my wife and I knew his hard bulge was pressing up against her belly. I knew it wasn't fair. Julie was letting me fuck Lisa as much as I wanted and all she was doing was just dancing with some guy -- nothing more.\n\nRegardless, I couldn't stop the tears. I sat on the toilet sobbing. The music stopped and another song started, this one faster paced. Three songs later, another slow song began and Julie still hadn't checked on me. I finally got my emotions under control and eased out of the stall to look in the mirror.\n\nMy makeup was a wreck and I looked like a clown. I did my best to scrub it all off so that I looked presentable. I couldn't go out there and face Ted, so I eased out the door, stayed in the shadows, and looked for Julie. I eventually spotted her. She was still on the dance floor, arms wrapped around the same guy.\n\nI lost it all over again and slipped out the back. I pulled my phone out of my purse and sent her a quick text saying I wasn't feeling well and caught a cab home. It was the cowardly way out, but I couldn't face her or anyone else. I took the cab straight home, ran upstairs, ripped off everything, and climbed into bed.\n\nI heard Julie come into the house about 30 minutes later. She called out, \"Tina, where are you?\"\n\nI ignored it and pretended to be asleep. Within a few minutes, I felt her presence above me and stayed still while trying to keep the rhythm of my breathing steady like I was deep asleep. I felt her hand brush my forehead, checking for a fever. After a second, she pulled it away, sighed, and left the room. Thankfully, she didn't try to wake me thankfully. I didn't know what to say. I didn't know what to make of what happened and I wasn't ready to lay out my feelings. I laid there for a long while wondering what my wife wanted out of our marriage and what she wanted from me before I finally drifted to sleep.\n\nChapter 6\n\nI spent the next few days working on the car by myself. I never bothered to return one of Mick's frequent texts. They all went unanswered. I didn't want to risk anything. I also didn't bring up the bar and Julie didn't either. And I avoided any calls from Lisa. I just focused on the car.\n\nThursday, I cranked my engine of the GTO for the first time. It purred magnificently. I spent the rest of the day getting it road worthy so I could take it for a ride. When I told Julie that night at dinner time that it was done and asked would she like to go for a ride in it, she announced that a celebration was in order and she had prepared a special day for me tomorrow.\n\nThe alarm clock started blaring at 8 a.m. and I was sure I hadn't set it. I rolled over to silence it and realized it was Julie's clock on her side of the bed, which was empty. I climbed out of bed and went around to shut it off. On top of the clock was a calligraphic note on a small card. I picked it up and read it.\n\n\"Welcome to your Special Day. I have a lot planned for you today. It is designed to make you feel comfortable as Tina. Embrace her and be confident. I know you can do it. -- Love Julie\" \n\nReading the note again, I flipped it over and it said my first appointment of this \"Special Day\" was at Lisa's office. I was to arrive promptly at 9 a.m. I checked the time and saw I didn't have a lot of it, so I headed in to take a quick shower. The enema bag was hanging over the shower handle with a note telling me to use it. I sighed, this would take even more time, showered and threw on the clothes that had been laid out -- a ratty pair of sweats and a PINK hoody (ironically it was grey with the words PINK in pink),-- grabbed some coffee and headed out wondering what Julie had in store for me. As I got to Lisa's office, I saw the waiting room full with patients. I walked up to the receptionist, one I didn't recognize, and gave her my name. She told me to have a seat and wait.\n\nWhen my name was called, I followed the nurse back to a procedure room where she told me to disrobe and wait for the doctor. About 10 minutes later, Lisa walked in dressed in scrubs and her lab coat. She didn't even have on high heels, but tennis shoes.\n\nIn a business-like voice, she told me to lay back as she pulled out a pump and started to attach it to my breasts. As she turned it on, she leaned down and whispered, \"We don't have much time since I have a booked morning, but I do have time for this.\"\n\nWith that she grabbed my crotch and slowly worked her hand in to find my penis. Tugging it out of my pants, she told me to relax as she dropped to her knees and started to lick me. I started to protest that this wasn't necessary, but Lisa lifted her mouth from my penis and hissed, \"Shut up and be grateful.\"\n\nThat grateful word hit me pretty hard. I did have a lot to be grateful for, despite my problems of late. I had Julie. I had Lisa. I was getting more sex than I ever dreamed of. I had a wife who loved me and gave me everything she could, even a lover. How many people can say that? Heck, I even had a 1967 Pontiac GTO, my dream car. Again, given to me by my wife. And now I had a special day where, obviously, I was going to be spoiled.\n\nLisa got me close to an orgasm very fast. For a self-proclaimed lesbian, she was showing lots of talent at giving head. I told her I was about to cum and she didn't pause, but sped up. As I burst into her mouth, she clamped hard on my cockhead and swallowed, draining me as best she could.\n\nShe held me in her mouth trying to get every last drop out of me until the pump stopped. Then she pulled off, kissed the top of my cock and stood. As she was unhooking the pump, she said that Julie's orders were to give me another saline shot. This time she was taking me all the way up to a large C cup. I closed my eyes as she numbed up the area and said, \"Let's do this.\"\n\nAfter the procedure, I climbed off the table and looked at my chest in the mirror. There was a little bruising underneath where the saline had been injected but not much. In fact, I could barely notice it since my eyes were drawn to my nipples. They seemed to have grown in size with the stretching of my breasts and sat high, erect, and proud on top of my bosom. I slid my hands underneath the dangling orbs and hefted them. I turned to the side and looked at my profile. As I turned, I gasped. Unlike the breast forms, I could feel the jiggle and sway of MY skin as I moved. I felt so SEXY and desirable. My cock started to respond.\n\n\"I look good,\" I said, a little amazed, after staring at myself for more than a minute. I could hear a low growl in Lisa's throat as she watched me examining myself.\n\nWords finally escaped. \"You look damn good,\" she whispered. \"If I didn't have a waiting room chock full of patients, I'd ravage you. You'd be so fucked...\"\n\nI couldn't tear my eyes off myself to look at her, but I felt her come up behind me and wrap her arms around me. She hefted my breasts slowly. Again, she whispered in my ear, \"If we did the surgery, you could have puppies like this or even bigger full time....\"\n\nI stammered. \"I, uh, I, uh, just can't think about that right now. I need to go.\"\n\nShe reached into a drawer and pulled out a beautiful white lacy unlined bra that had white flowers embroidered into it. Saying, \"This should fit,\" she eased it over my arms and fastened it in the back. Then she handed me an envelope with a card inside. It was in the same style and calligraphy as the one from earlier.\n\n\"Even on special days, the chores still need to get done. You need to go the tanning booth, but when you are done, open the envelope in your glove compartment to get your next mission.\"\n\n\"What does it say?\" Lisa asked.\n\nI handed it over to her and said, \"I guess I am going to the gym.\" But as I got to the car, curiosity got the best of me and I quickly opened the glove compartment to read the envelope there.\n\n\"You cheated! Ha! I know you. Get your tanning done and then go to Sally Ann's right down the street. Tell them you are there to be fitted into the new corset you ordered.\"\n\nI had been wearing a corset roughly full-time for weeks now and while the initial few inches of my waist had shrunk quickly, lately there had been no change. I had started at a 30-inch waist and was now down to a natural 27 inches. But, with all the work on the car, the corset had suffered some damage, was stained and worn out. I had a couple of waist cinchers that I could wear when told, but Julie insisted I needed a couple of quality steel-boned corsets to get my shape down to where she desired. She had done my measurements herself and ordered customized ones.\n\nI walked into store a little unsure of myself. I knew I was tucked in the best I could be, but still, I would be in my underwear in front of someone. That unnerved me. I tentatively walked to the first saleslady, said my name was Tina and I was here to pick up my order.",
        "She escorted me to the back where she rummaged around until she handed me my order and pointing to the changing room, told me to try one on to make sure it's a good fit.\n\nI slipped into the top corset. It was a satiny white vintage style with cream-colored lacing. It came right to the undersides of my breasts and made them explode off my chest. They looked enormous and were showcased by the outfit. The corset came down and covered the top of my panties, hopefully it hid enough.\n\nWhen I was ready, I popped my head out of the dressing room and waved at her. She came over, appraised it, and started to tighten the laces. She started at the top, pulling the laces a little tighter before working her way down until she reached the large loops at the middle of the lacing holes. From there, she switched to the bottom and started to tighten there, again working her way back to the middle. When she finished, she took out a measuring tape and quickly encircled my waist. As she read the results, she announced that I was down to 22 and \u00be\" inches.\n\nI breathed out and found that it wasn't too bad. I mean it was uncomfortable, but bearable. I gave her a nod and said thanks. She abruptly left. I didn't see any interest in me at all from her so I assumed my secret was safe. Pulling the hoody back over my head, I picked up my packages and headed out.\n\nAs I got to the truck, I wondered where I was heading next. I glanced through the purchase for a clue and sure enough, mixed in with the order was another envelope.\n\n\"Are we feeling feminine yet? Hopefully my princess is starting to. Your next stop should expedite that situation. Now that your car is done, it's time for you to take a break from manual labor and focus on Tina. You have an appointment at the salon for nails and hair. Go see Lexi! Have fun.\"\n\nI knew without a doubt which salon I was headed to. Lexi also knew my secret. My wife had outed me to her the very first time I had gotten my nails done. I grabbed food through a drive through before I drove across town remembering in detail my first trip to the salon. It had been a life-changing day with my new hair style and dressing as a girl pretty much full time. In fact, it could almost be considered the day Tina was born.\n\nLexi was a babe. There was no doubt about it. While young, she was a sexy 10 on the poke-her scale. I was nervous to talk to her again. Beautiful women still seemed to intimidate me, even now. I mean you would think having sex with both Julie AND Lisa would up my game, but no. I was not smooth at all when it came to beautiful women.\n\nI walked into the day spa and up to the girl at the front desk and said quietly, \"My name is Tina Adams. I have an appointment with Lexi.\"\n\n\"Please have a seat and she'll be with you in a moment.\"\n\nI sat down and glanced at the magazine next to me. One of the headlines grabbed my attention. \"The Pros and Cons of Breast Augmentation.\" That piqued my interest. I quickly picked up the magazine and flipped to the article. I just started to read it when Lexi walked up and said, \"Hi, I'm Lexi. Please come with me.\"\n\nI saw Lexi's eyes flicker over the article I was reading and I blushed beet red. She knew I was a guy and she had just caught me reading THAT. How could I possibly talk to her now? I was completely mortified as I followed her meekly down the hallway.\n\nLuckily, she didn't bring it up. She took me into a private room and had me get into a chair, knelt before me and started to remove my sandals to prepare for my pedicure. As she soaked my feet, she began to talk. She nattered away as she moved to my hands and did the basic mani procedures of cut, trim, buff, oil, and all that. With each sentence of her ramblings, it seemed that she was cranking the dial on my humiliation meter higher and higher!\n\n\"Well Chris, I understand I'm supposed to call you Tina now.\"\n\n\"I suppose that's best, you really are a beautiful girl. I just love your hair.\"\n\n\"Your wife told me that today we are going to add nail extensions. She wants some real claws on you so you are going to have to change some habits. Stay away from finger foods and slow down your hand movements. Your hands are becoming works of art rather than functional tools. You are a trophy wife and showpiece now. Act like it.\"\n\n\"You look so good. Have you been losing weight? I hardly recognize you.\"\n\nThen she dropped a huge bomb. \"You do know that Pierre dropped by here trying to find out who you are.\"\n\nI managed to squeak out, \"Who's that?\"\n\n\"He's the waiter at the Olive Garden across the street. I understand he gave you his number and you haven't called him. He practically begged us for your contact information.\"\n\n\"He says you are his one true love and he can't live without you.\"\n\n\"Are you going to go to lunch there after?\"\n\nWhen I frantically shook my head no, she giggled and continued to tease.\n\n\"Are you sure? I would go with you. I'd love to see him profess his undying love to you. It would be divine!\"\n\nOnce she had finished her buffing and polishing, she began to study the natural curvature of my nails. Then she pulled out some clear, long rectangular-shaped nails and glued them in place, while announcing that she was going to give me a super-pointy stiletto style of fingernail. Once she had them shaped, she added a glittery gradient before painting them a bright red.\n\nThey looked amazing and as she started the pedicure I gazed at them in wonderment. They added such delicacy to my fingers. I was feeling so girly.\n\n\"I saw the article you were reading,\" Lexi announced, completely obliterating any peace I was feeling. \"Are you planning on getting a boob job? I am considering getting one myself. Do you think I need one?\"\n\nShe was cute and fit and probably was a B-cup at best. My current saline-filled cups were much bigger than hers already.\n\n\"I don't know,\" I quietly eked out. \"Julie and her best friend are pressuring me to do it. But I am not sure.\"\n\n\"I wish I could afford to do it. I would do it in a heartbeat. You are so lucky.\"\n\nLucky? I am a guy being pressured to get a boob job. A GUY! Obviously, she had forgotten that part already. Was I still a guy? Would it really be so bad to have breasts? Other than the extra stares, these breasts did wonders to make me feel sexy.\n\nI stayed in a contemplative mode all through the rest of my mani-pedi and on through the hair appointment. The lady who styled my hair I didn't recognize and she got the vibe after a few questions that I wasn't in a talkative mood. My wife had sent a picture along of what my hair was to look like and I ended up with a 'bridal coif' updo where my neck was exposed. The hair was wrapped like a snake coiled on my head.\n\nAs I was leaving after tipping both the stylist and Lexi, Lexi handed me a card.\n\n\"Don't be shy now, my little princess. You look amazing. Your next stop is a little out of your comfort zone. Be brave for me. Ask for Amanda.\"\n\nI looked at the address and the name and didn't recognize the place, so I tried to pull it up on the GPS on my phone. It took a couple of extra minutes as I tried to tap on the phone with the nails. Boy, my texting skills, which were already bad, were going to hit a new low.\n\nI drove to the address and the building was nondescript and looked like a seedy warehouse. I hesitantly parked and walked in not knowing what to expect.\n\nThe bell hanging from the door rang as I walked in and my jaw dropped in shock. I was in a sex shop. Dildos, adult movies, lingerie, and all sorts of adult paraphernalia were displayed openly. A tired old man was sitting behind a countertop reading a magazine. He looked up as I walked in and I instantly felt like a piece of meat being ogled. I wanted to turn and run and was about to when I saw a cute, young girl walking down the aisle.\n\nShe announced herself with a question, \"Tina?\"\n\nI nodded once and she said, \"I'm Amanda. Come with me please.\"\n\nI hurried down the aisle away after her, away from the leering eyes of the man. She said, \"Don't mind Henry, he's harmless,\" as we walked on.\n\nShe took me to the back into a small room, held the door for me and then closed it behind her as she walked in. I stood there uncertain what was going on and was even more surprised when she said, \"Don't just stand there, start taking it off.\"\n\nTake what off? I didn't know why I was here.\n\n\"Excuse me,\" I questioned.\n\n\"You are here for a fitting?\" she said questioningly.\n\n\"Um, I wasn't told why I was coming here. I was just given the address.\"\n\nShe smiled and relaxed at that.\n\n\"Oh, ok, I thought you were just being difficult. It's okay. Please take off your top, shoes, skirt, and panties please.\"\n\nI stood in shock as she reached over and picked up a latex glove and started to put it on her left hand. I just stood there and watched as she grabbed a tube of lube and started to spread it over her fingers.\n\n\"What are you doing?\" I managed to get out from between my clenched teeth.\n\nShe looked at me and saw I hadn't taken anything off yet.\n\n\"Hurry up, I've got new clothes to you to put on,\" she said, sweeping her arm in the direction of a table. \"The lady Julie picked out thigh highs and shoes from here and she even dropped off a new dress for you to wear. You were supposed to be here almost an hour ago. You are running late.\"\n\nI slowly started removing my clothes while keeping the latex glove in sight. \"What's that for?\"\n\n\"To help you with that,\" she said, pointing at my stack of clothes to put on.\n\nI started doing inventory in my mind through the clothes when I focused on what she must be talking about. Next to the pair of white thigh highs stood a clear butt plug, about five inches long and as wide as the dildo my wife had fucked me with last week.\n\nI gulped. \"That's for me?\"\n\nWhile I had been staring, Amanda had approached me. She wrapped her right arm around my waist, and slid her left hand down the back of my panties, since I hadn't removed them yet. I felt her finger start rubbing against my anus.\n\n\"We better get started so I can go slow enough not to hurt you,\" she whispered in my ear. \"I'm told you are practically a virgin.\"\n\nI shuddered as a strange woman played with my privates. Her index finger had slipped in to the first knuckle before she started to pull out again. She stroked it in and out a few times before dropping her right hand and using it to wiggle down my panties. They hung up on my penis and, embarrassingly, I reached down and untangled my penis from the gaffe and pushed my panties down further.\n\nShe kept up with the progression of opening me up and now had two fingers moving through my sphincter. They expertly swirled and dilated me, stretching me wider and wider. My erection reached full mast and Amanda reached down and wrapped her hand around it. It throbbed in need.\n\n\"And here I thought you were a little sissy girl,\" she said. \"Honey, you're packing some serious meat here.\" I watched her glance at the clock on the wall and I could see disappointment on her face. She sighed and added, \"You'll have to come back and visit me again.\"\n\nA third finger had somehow managed to slip into my access undetected and I still didn't feel any pain. Then she started to rub my prostate and my knees buckled. This girl was amazing. She nibbled onto my neck and said, \"I mean that. I want you to come back when you have more time. Tell me you will.\"\n\nMy cock had a steady dribble of pre-cum falling to the floor and she used her left hand to emphasize her demand by pinching my sphincter enough for me to feel a sharp stab. \"You haven't answered me!\"\n\nAnd I thought Lisa and Julie were demanding. This girl was scary.\n\n\"Sorry, I will,\" somehow popped out of my mouth, although I didn't mean it. My cock had had enough. It couldn't hold back the stream of pressure anymore and became a firehose, spraying down the floor like it was putting out a fire, extinguishing any sexual desire I had in the process and leaving a residue of guilt. Her hand released my cock, came up to my back, rotating me so that I was facing the table, and pushed me to bend over. Once I grabbed the table, she released me completely and picked up the plug, swirled it in her mouth, and unceremoniously shoved it in my rear.\n\nThere was a small pinch of surprise but she had relaxed me enough that the plug went in without much effort. I felt a quick steady pressure before it plopped into place. I suddenly felt full again and my cock twitched a couple of times as if it was going to rise again.\n\n\"You really are late for your next appointment,\" she said. \"Quick, hurry and put on these clothes.\"\n\nHave you ever tried to dress quickly with a corset sucking all of the breath out of you and a butt plug shoved up your ass? You can't get dressed quickly. It just isn't possible. But with her help I somehow managed to get it done. First, we put on the white thigh highs. These were followed by a white gaff, ultra-high, ankle-strapped, porn-star heels that she locked into place and didn't give me the key for, and a gorgeous dress with spaghetti straps over my shoulders. It showed a mountain of milky white, untanned cleavage. The dress billowed down with lace to cover my corset and thigh highs and rested modestly just below the knee. I looked in the mirror, loved the look and twirled.\n\nAmanda broke the spell by handing me another envelope and a demand. \"Remember your promise, you come see me\" she said before opening the door for me.\n\nI walked through the store in a daze and didn't even notice Henry staring at me. Each step was difficult for me. First, the heels were higher than I was comfortable with, and the plug rocked back and forth tickling my prostrate with each little movement. I couldn't focus on the environment around me at all. It took all my conscious effort just to make it back to the truck. I didn't even bother to read the card until I was safely seated there and had taken a moment to catch my breath.\n\n\"My princess is ready for me. But I want to memorialize this day with one final task. You have an appointment with a make-up stylist and photographer ...\"\n\nPictures? She wanted pictures.\n\nI headed to the address provided to find it a house that had been converted into an office. I was met by two obviously gay guys, Andre and Francis. They were the definition of loud and proud. Now, I had learned how to put on my makeup and thought I did a good job. I have had my makeup done by Julie and Lisa and both did an amazing job. But they weren't even in the same league as Andre. I looked in the mirror after he turned me around in the chair and I was blown away.\n\nIt was a perfect face with no blemishes whatsoever. And it looked completely natural, as if I wasn't wearing any makeup, which was not the case at all. I thought I looked good when I walked into the house, but I knew I looked good now.\n\n\"Wow,\" was all I could manage.\n\n\"Baby, you look good. Your husband is going to fawn all over you. I expect you will charm the pants off him tonight for sure.\"\n\nI didn't have the heart to tell him it was a girl I was meeting and ruin the image he was portraying.\n\nFrancis had me move to a bedroom he had set up as a photo studio where he had me \"make love\" to the camera. At first, he started with head shots before having me stand and pose and walk around. I felt like a model as he snapped picture after picture of me.\n\nAt one point, Andre came in and took one of the straps from my shoulder and slid it down, exposing one of my nipples. They had me turn my head and took a racy shot. I blushed red but let them. When he started to slide the dress up my leg, I halted them and said I was happy with what we had taken.\n\nI was feeling pretty and special as I got into my truck to drive home. Julie had promised me a special day and she had come through. I felt as pampered as a princess. I wondered what she could possibly do to top this.\n\nAs I turned the corner onto our street, I saw a truck parked in front of the house. It seemed we had guests. That could be trouble. I wanted Julie to see the full effect without someone else present. Then as I got closer to the house, I glanced at the license plate of the truck. It read M1CK.\n\nI admit it. I panicked. I couldn't do it. It had all come down to this. I knew what Julie wanted and I fled. I called Lisa and got no response so I headed to her office on autopilot trying not to think. I got to Lisa's office and barged in. I realized as I gazed at the receptionist, the one who gave me the golf clap, that I hadn't seen her since my embarrassing walk of shame and froze. It was late in the day and I had hoped everyone would be gone but Lisa. Nervously walking up to the window, I prayed she didn't recognize me since I was all dolled up.\n\nThat went right out the window once she saw me.\n\nShe smiled coyly and said, \"Hello Tina, I take it you are here to see Dr. King.\"\n\nI nodded politely without saying a word, although I could feel my face heating up.\n\n\"She isn't here right now,\" she said. \"She left about 40 minutes ago, said she had a tennis date. My, you look good.\"\n\nI blushed at that, turning beet red. I nodded again without saying a word and headed out. I knew where she was at. I headed over to the gym.\n\nAs I walked into the gym, I felt totally out of place all dolled up as I was, especially with the plug still buried deep in me. I was turning beet red even though no one noticed me. I kept my head down and headed directly to the tennis courts. As I neared, I noticed Lisa in full swing, energetically hitting the ball back and forth with someone. I sat down on the bleachers to wait for her to notice me and take a break.\n\nAs I watched, I looked at who she was playing. Oh, my goodness, it was Ash. Her sister was in town. \"That's all I need is another complication,\" I thought, watching them play. I did enjoy the view though. Both were so beautiful, so fit and so athletic, it was breathtaking to watch them move. The score seemed close as neither girl was dominating the other.\n\nAs I was watching, another girl came out and sat down on the bleacher a couple rows back from me. I never glanced back at her until she spoke to me.\n\nShe said, \"My, those girls are athletic, do you think either one plays softball? We need a couple more players for our team here.\"\n\nI started talking. \"Ash is from out of town. Lisa has never mentioned softball ...\" I trailed off as it dawned on me who I was talking to. It was Deidre, from the city league softball championships. My heart lurched its way into my throat and my pulse took off to the races.\n\n\"Oh my gosh, oh my gosh, I am so busted,\" I thought. \"What if she recognizes me.\" I quickly shut up, put my hair in front of my face, and stood up to leave. As I started to walk away, Ash rushed up and launched herself into my arms giving me a hug.\n\n\"Tina, it's good to see you!\" she said. \"Wow, you look good. Good enough to eat.\" Then she glanced over her shoulder and saw Lisa had picked up her phone and was talking into it. She was looking the other way.\n\nShe came in for a kiss. I kept my lips closed because I needed to get out of there before Deidre recognized me. While we had only talked briefly during that one softball game, we had played against each other for years and she knew most of my friends. And she definitely knew Julie. Everyone at the softball fields knew my cheerleader wife because she would yell so much rooting our team on.\n\nAsh would have none of that though. She reached around and grabbed my butt and pinched it hard. My mouth opened in surprise and she took advantage and slipped her tongue into my mouth, kissing me as aggressively as she could. After a couple of seconds, I reached up and pushed her away enough to talk.\n\n\"Wow,\" I huffed. \"It's good to see you but I need to run.\"\n\n\"But you just got here,\" she said. \"I have so much to talk to you about!\"",
        "I couldn't deal with this now. I needed to get away. I stepped back away from Ash just as Lisa walked up.\n\n\"Wowzer,\" she said. \"You turned out spectacular. Turn around and let me see the whole effect.\"\n\nI sighed and quickly spun in a circle and said quietly, \"I need to go.\"\n\n\"Yes, you do,\" Lisa said. \"I just got off the phone with Jules. She's looking for you, said you were supposed to be home almost an hour ago. She said you better hurry or she'll start without you.\"\n\nThat right there was a shock. Julie would actually do Mick without me. How could she? My stomach did flip flops. What had I got myself into? And how could I get out of this? Would I actually have to go home and face Julie and Mick together? I pictured walking in to find them naked together having sex in our bed. I felt nauseous.\n\n\"Who's Jules?\" Ash said. \"Doesn't Tina live with you? Are you guys still together?\"\n\n\"Julie is my roommate,\" I said quickly. \"I don't live with Lisa because she doesn't have a garage for me to work on my car. Yes, we're still together. I'll talk to you guys later. I guess it's time to face the music.\"\n\nAt that point, Deidre interrupted.\n\n\"Sorry to interrupt, but I couldn't help but notice you out there,\" Deidre said to Lisa. \"Do you play softball by chance? We need a couple more players to fill out our team and the way you swing that racket, you would be great at it.\"\n\n\"I don't,\" Lisa said. \"But Tina here is an amazing softball player.\" I rapidly started to shake my head no in hopes of shutting Lisa up, but she ignored me. \"She's played for years. I've even seen her show up boys. In fact, check out this video from our last Vegas trip....\"\n\nAt that point, I turned and ran to the bathroom as fast as these 5-inch heels would let me. I needed to throw up.\n\nI hid in the stall for a few minutes then realized that they knew where I was and could find me. I decided to sneak out the back. I made it to my truck without seeing Deidre. \"Whew, that had been close.\" I fumbled through my purse for the keys. I couldn't stop my hands from shaking.\n\nJust as I finally got my keys out of the bag and stuck them in the ignition, a black Lexus pulled up right behind my truck, effectively blocking me in my parking spot. I looked back annoyed and was about to honk my horn when I saw the door to the Lexus open and Deidre step out.\n\nShe slowly walked around her car with a huge grin on her face. I hadn't prayed since my parents had died but I started a silent one then. I kept whispering to myself, \"Please don't let her recognize me. Please don't let her recognize me. Please don't let her recognize me.\" I shook my hair so that it hung down covering most of my face.\n\nDeidre walked up to my window with an excited expression -- she looked like a cat about to play with a mouse. She was all grins as she motioned for me to roll down the window. I reluctantly did and she reached in and softly caressed my check, then slowly swept the hair back off my face. Her voice then dropped to a whisper and what she said next sent panic through my bones and caused the hairs on the back of my neck to rise.\n\n\"Well, well, well,\" she said. \"Hello, Chris.\" "
    ],
    "authorname": "noobdude",
    "tags": [
        "crossdressing",
        "feminization"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/a-boiled-frog-pt-03"
}