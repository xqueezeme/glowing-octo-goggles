{
    "title": "There and Back Again Ch. 144",
    "pages": [
        "Chapter One Hundred Forty-Four: Come Here Often? \n\n\"Wait, what?\" I stammered. Rolan and Conrad, two Wardens I'd believed taken by the darkspawn, probably dead, stood in front of me covered in darkspawn blood. \n\nConrad shot me a tired smirk. \"Well hello there. Come here often?\" \n\nI laughed. It was so absurd that I couldn't ask even one of the million questions that were currently jockeying for position in my head. Alistair's shocked expression mimicked mine, and the soldiers stood back uncertainly, waiting for us to take the lead. \n\n\"What's a nice place like this doing with a guy like you?\" Alistair deadpanned, and I lost it. I slid to my knees, dropping my daggers and covering my face with my hands as I giggled hysterically. \n\nThere's just been one shock too many. Between the horrific battlefield outside, the worrying presence of the templars, the missing Wardens, finding the Legion, Alistair almost collapsing...and then two Wardens who I'd feared dead standing there joking with us... I lost it. It was just too much to handle. A few annoying tears trickled down my cheek, and I swiped at them irritably, uncertain whether I'd laughed till I cried, or cried till I laughed. \n\nAlistair put a reassuring hand on my shoulder, and when I looked up Conrad was holding out a hand with a kind smile. \"I'd hug you, but...\" He gestured down at himself, covered in darkspawn gore, and I shuddered. \n\n\"Raincheck,\" I muttered, squeezing his hand and using the support to climb to my feet. \"I just can't even...\" I took a deep breath, shaking my head to clear it. \"Before I even start asking all the questions just begging for answers, what's back that way?\" I gestured to the doorway behind him, through which I assumed he'd come. \n\n\"Jail cells,\" Conrad replied. \"Empty. And more corpses. Did you see a ghoul come through here?\" \n\n\"What? No, can't say we did.\" Alistair was looking more and more puzzled as we went, and I was sure our expressions matched perfectly. \"Should we have?\" \n\nConrad and Rolan exchanged frowns, but declined to elaborate further. \"Have you found Anders and Solona?\" Conrad asked. \n\nI shook my head. \"So they are here, somewhere? We assumed, when we saw the templars...\" \n\nConrad sighed. \"Long story.\" \n\nUncertainly, Alistair pointed back the way the two Wardens had obviously come from. \"There's no other way out? It's a dead end?\" Rolan nodded. \"Then let's head up, and you can give your report to everyone at the same time. I look forward to an...explanation.\" \n\nI groaned in frustration at the delay; Rolan winced, and Conrad clapped his hand on the templar's shoulder sympathetically, which surprised me. I was still more than half-convinced he'd had something to do with what had happened outside, and I expected Conrad to be furious, not concerned. \n\n\"We're not leaving without the mages,\" Rolan insisted, and I raised my eyebrows. Clearly there's a lot more to this story than we even suspected - and given how little we know, that's saying something. \n\n\"Of course not,\" Alistair agreed, surprised, and Rolan seemed to relax a little at that. Knowing that the hallways behind us were cleared, we allowed the soldiers to lead the way up the stairs, through the warren of tunnels. \"Are you injured? Do you need help?\" \n\nConrad shook his head. \"Not sure how, but all our injuries were healed before we woke up. Not even a scar to show for them.\" He gestured to the damage to his armour, where he'd clearly been impaled at some point; I raised my eyebrows, impressed. \n\n\"He's learned a few things in the last couple of decades,\" I muttered, thinking back to the book \"The Calling\" and all the bandages and poultices he'd used to keep Duncan and the others alive when he'd captured them. \n\n\"How did you find us so fast, anyway?\" Conrad asked Alistair while we walked. \n\n\"Well, we knew where you'd headed, and when we didn't hear from you, we sent a scout with a raven. He sent a note back saying he was overrun with darkspawn. Seeing as no one else had seen any sign of the Architect, we figured this was the place we needed to be.\" \n\nConrad nodded sadly. \"I sent a messenger, but I was pretty sure he wasn't going to make it.\" His voice dropped until it was barely more than a hoarse whisper. \"Were there any survivors?\" \n\n\"Outside?\" Alistair asked, surprised. \"With the templars?\" Conrad nodded. \"I'm afraid not,\" he finished. \"We found enough bodies to account for all the soldiers except one. And a bunch of dead templars.\" \n\nConrad and Rolan both slumped at the news, and Rolan rubbed his forehead irritably with a sigh. Alistair and I exchanged curious glances as the senior Warden reached out and bumped the templar's shoulder, murmuring some sort of platitude I couldn't quite hear. \n\nWe walked the rest of the way in silence, back to the main chamber where Nate waited with the rest of the army. My mind was racing the entire way - what the hell happened out there? I had been so sure Rolan was somehow at fault...and yet Conrad's response would indicate otherwise. It was probably best that we waited until they could tell everyone all at once, but it took everything I had not to shake the both of them until they explained immediately. \n\nWe finally reached the main chamber, to find the other Wardens were waiting - we were apparently the last group to return - and their jaws dropped when they saw Conrad and Rolan following us quietly out of the narrow doorway. I grinned at Aedan's speechlessness as we approached; Zevran smothered a bemused chuckle with a cough and stepped around Aedan to squeeze my shoulder with a wink. \n\n\"Cara mia, I'm not even surprised anymore. Welcome back, you two.\" Zev nodded at Conrad and Rolan. \"I'm guessing we need a place to talk, yes?\" \n\nI was grateful that he'd taken control; I was too emotionally exhausted, and everyone else seemed to be standing around trying to process what was in front of their eyes. Zevran thought for a moment, and then herded all of us - Wardens, me, Trevian, and Nate - into the side passage he and Aedan had cleared. There were ruined tables and chairs pushed against the walls - I guessed it had served as a dining area for the dwarves that had once lived there - and we all sat down on the floor facing the two 'rescued' Wardens. \n\n\"Start at the beginning,\" Alistair suggested sternly, and Rolan nodded with a gulp. \n\n\"I was on my patrol when we ran across a group of templars camped near the pass up the ridge into the bannorn,\" the former templar began. \"I knew some of them from my training, though I'd never served with them. They told me they were tracking some apostates in the area. I decided we would share their camp for a while, offered my help if it didn't slow us down too much. I set up patrols to keep an eye out for darkspawn. After a day, when most of the soldiers had gone to their bedrolls, Rylock - the Knight Lieutenant - finally told me the truth. They were waiting for Anders and Solona.\" \n\nMy heart skipped a beat, and my stomach sank. Nothing good could come out of Rylock being anywhere near Anders. I vividly remembered killing her in game when she went rogue and tried to kill Anders after his conscription; clearly she didn't respect Warden authority, so she'd have entirely ignored the fact that they were Wardens. \n\n\"What?\" Alim exclaimed, agitated. He looked incensed, and only Wulf's hand on his shoulder kept him in his seat. \"Waiting for them for what?\" \n\nRolan looked down, avoiding eye contact. \"They were planning to capture them. Rylock was sure Anders was a maleficar, and if Solona was with him...\" \n\n\"Guilty by association,\" Zevran finished wryly. \"So what was their plan? They had just come from the Circle, yes? Their Knight-Commander permitted them to go, so what were they intending?\" \n\n\"I didn't know it at the time, but these templars had been transferred away from Kinloch for not adapting to the changes Knight-Commander Greagoir had instituted at the Circle. They thought the mages were being given too much freedom, and got in trouble for being too harsh.\" \n\n\"So who do they report to? Where were they going to take them? I don't imagine Grand Cleric Dorothea would be on their side either,\" I demanded. \n\n\"I don't know,\" he replied, obviously chagrinned. \"I didn't know any of this until after. Maker take me, I agreed to help them capture the two for questioning - I thought Greagoir would take a second look, and assuming they weren't blood mages, release them back to the Wardens.\" \n\nThe look on Aedan's face was truly alarming, and Rolan seemed to shrink under his glare when Aedan stood abruptly, looming over the templar angrily. \"You were going to help templars capture MY Wardens? And turn them over-\" \n\n\"Commander,\" interrupted Conrad. \"Just wait. Please, hear him out. There's a lot more to this story.\" \n\nAedan stopped and stared down at Conrad for a solid minute. The warrior met his gaze calmly, not wavering, and finally after an agonising moment where all of us held our breaths and Rolan appeared to be hoping to be swallowed by the floor, Aedan stepped back. He didn't sit, but leaned against the wall to his left thoughtfully, arms crossed over his chest. \n\n\"Go on, then,\" he allowed, his tone a clear warning - there'd better be a good explanation for this, or both Conrad and Rolan are going to be hip deep in it. \n\nI took a deep, relieved breath, and felt Alistair relax slightly at my side. Rolan swallowed reflexively, and then continued with a deep breath of his own. \"I knew that the soldiers with me wouldn't help Wardens be captured, and might try to stop us, so when they woke I told them to establish a new camp closer to the cliffs, keep an eye out for darkspawn, and wait for me there. I went with the templars and established an ambush site at the bottom of the pass where we would be within range to smite them before they would know we were there. And then we waited. \n\n\"They didn't know exactly when the mages would be arriving - that was my first indication something wasn't right. If they were working for Knight-Commander Greagoir, they should have known exactly when they were leaving. And then I overheard two of the men talking about...about Solona. Inappropriately.\" He blushed, and I was briefly glad he wasn't going to give me any details to go with the vile mental image I had come up with. \"And Lieutenant Rylock didn't stop them. Later, it became clear she was going to let them do whatever they wanted to her. At the time...I guess I hoped she thought it was a joke, or something.\" He was clearly upset, his expression almost indignant. \n\nJustice stood up abruptly, his armour scraping across the stone floor, but Aedan held up a hand before he could say anything. The spirit paced restlessly at the back of the room, fortunately not glowing blue or shouting in his horrible abomination-voice, but clearly agitated. I couldn't blame him. \n\nRolan eyed him curiously, but then cleared his throat and continued. \"I also knew the mages had guards with them, and assumed the soldiers would accompany us to Kinloch. Surely they would yield to the authority of the Chantry? Especially when outnumbered. I knew they'd never stand by and let the templars harm a Warden, and when one of the younger templars brought that up, asking what would happen if the soldiers saw the templars with Solona...\" He trailed off, closing his eyes as if trying to banish a particularly bad mental image. \"...I overheard one of the Corporals saying that he didn't need to worry - they'd all be dead anyway. They had no plans to leave any witnesses. \n\n\"I realised that whatever was going on, the Knight-Commander obviously had nothing to do with it. They were acting on their own, acting like animals, and I couldn't just let them...\" He trailed off, brow wrinkled. I jumped when he slammed his armoured fist into a nearby table. \"I joined the Order to help people! I believe in the Maker and the Chant. 'Magic exists to serve man', and all that. I've seen what mages can do, seen abominations and demons and blood magic. I had friends die when the Circle fell. But this! I always thought mages were cursed, felt sorry for them even, but I knew the world had to be protected from them. That doesn't mean they deserve to be mistreated! I never signed on to watch mages who hadn't even been confirmed as maleficar be raped, or murdered...\" \n\nWe were all rapt attention, watching Rolan obviously castigating himself as he told the story. I wasn't sure who to feel sorrier for. He'd been lied to and brainwashed by the Chantry, addicted to dangerous substances, and then abandoned when it was convenient. And then he got to see just how bad his zealot colleagues could get. It couldn't have been easy to accept how wrong he'd been. Aedan's posture had eased, and Alistair squeezed my hand almost absently. I hate the Maker-damned Chantry! \n\n\"I waited until nightfall. We returned to their camp, knowing the mages wouldn't risk the pass in the dark, and once everyone had settled, I snuck out of there. I walked to where I knew the rest of my patrol would be, planning to send a message and have a scout follow the templars - I knew I didn't have the manpower to stop the templars myself. But when I got there, I found Conrad's patrol as well. I'd forgotten all about the missed rendezvous.\" \n\nConrad took over, and Rolan shot him a grateful look. \"With both patrols, we outnumbered the templars. I thought we could arrest them and prevent them from getting their hands on the mages. We broke camp, and fell on the templars the next day. They'd already captured Solona and Anders, and had killed their guards. I expected the templars to yield, honestly - we had the advantage of numbers, and caught them by surprise - but some of them insisted on a fight. We killed seven of them before the rest threw down their weapons and surrendered. The surviving Knight-Corporal told us that he didn't know who they reported to, but they were to bring the mages to Amaranthine and board a ship - they were taking them somewhere in Orlais, as far as he knew. \n\n\"Greagoir had tried to excommunicate the lot of them after some incident at Kinloch a few months back, but Rylock had found them a Chantry sponsor who was supplying them with Lyrium and promised to 'fix everything' if they brought in the Warden mages - alive, though not necessarily unharmed, apparently. They were explicitly promised they had free rein as long as they were still breathing. But of course Rylock was one of those who fought to the death, and she was the only one who knew all the details. \n\n\"We stayed there for the day; the mages hadn't been harmed, thank the Maker - in the confusion with Rolan missing, their 'entertainment' had been put on hold - but they'd both been hit by smites, then fed magebane, and were feeling sick. We planned to light a pyre in the morning for the templars and the soldiers we'd lost, and then escort the remaining templars back to the Vigil, but we were attacked by darkspawn in the night. It was like they came out of nowhere. I just had time to send off one of the scouts to try to get a message back to you. But with the templars tied up, both mages unable to cast, and some of the soldiers injured...we had no chance. I saw Rolan fall, and then I got hit in the head...and woke up in a dungeon with Rolan, and no sign of the mages.\" \n\nRolan began talking again. \"Somehow we were healed before we woke. The Architect took blood from both of us a few times, brought us rations and water, but otherwise left us alone. I tried to smite him, but he just shrugged it off. We were just stuck there, waiting - naked, no weapons, nothing. And then, not long before you found us, a ghoul came in. A dwarf. Unlocked our cages, dumped out a bag full of our equipment, and left without a word.\" \n\n\"She was a Silent Sister,\" Conrad explained. \"There was one in Jader when I was there, and I recognised some of the gestures. She told us to leave, that she hoped we'd be able to escape.\" \n\n\"Utha,\" I gasped. \"She's not working with the Architect anymore then - he wouldn't have been happy.\" \n\nConrad nodded. \"I asked her about the mages, but she wouldn't say, just kept telling us to leave. We fought our way out of the cells, and that's when you found us. But you said you haven't found Solona and Anders yet?\" \n\nAedan shook his head sadly. \n\n\"This is my fault.\" Rolan stood up, unbuckled his sword sheath from his waist and dropped it to the floor, then stood, hands clasped behind his back in submission, facing Alistair and Aedan. \"It's no secret I was...concerned about mages outside of Chantry control, and I thought you weren't watching them closely enough...but they did not deserve this. I didn't stop the templars, and I failed Solona and Anders, as well as you both. I am prepared to accept whatever punishment you deem appropriate, Commanders.\" I wondered if I'd ever heard Rolan use their names before, instead of calling them 'mage' or 'Warden', but I detected no insincerity in his apology. Conrad looked like he was going to object, but Rolan shook his head subtly and the senior Warden sat back with a sigh. \n\nI glanced at Aedan out of the corner of my eye to see his jaw twitch with tension. \"Wait outside, Warden,\" he told the former templar. \"We will let you know.\" Conrad stood to go with him, but Aedan gestured to his chair. \"Not you.\" \n\nConrad sat reluctantly, an unhappy scowl marring his normally handsome face. We waited in silence for Rolan to shuffle out the door. Nate made eye contact with one of his captains outside, and I knew he would be watched until Aedan decided what to do with him. \n\nAedan finally sat back down after the door shut, shoulders slumping. He turned to Conrad, one eyebrow raised expectantly. \n\n\"Commander,\" the redhead said slowly, as though testing each word before letting them out, \"I'll grant that going along with the templars in the first place doesn't paint him in the best light, but he risked his life to get away from them so he could warn us. There was literally no way he could have stopped them alone, and if he'd tried to convince them, they'd have killed him. You didn't see them; their devotion to what they called their 'duty' was...disturbing, actually. I've never seen a person fight so hard in the face of overwhelming odds. It's like they were possessed. There's no chance he could have stopped them alone. \n\n\"And then after we defeated the templars, he had to stand there and listen to them denigrate him, call him a coward, a Chantry traitor, and worse; the only time he reacted was when one of them said something disrespectful to Solona, and he made the bastard regret it, too. \n\n\"When the darkspawn attacked, he was the first to be standing where both mages had fallen, too sick to defend themselves properly. He fought like a demon himself, took wounds he shouldn't have trying to protect them. He fell, but he made the 'spawn pay for it. And he was the first to insist we go after them ourselves rather than escape as the ghoul recommended. \n\n\"He's expecting to be executed, I think, or sent to prison somewhere - maybe Aeonar, or the Warden equivalent. I'd like to think I know you well enough to know that's not going to happen. He made a mistake, but he's realised it and tried to do what he could to make up for it. He doesn't deserve that.\" \n\nI was impressed by Conrad's impassioned speech, but more so by the fact that, without knowing it, Rolan had earned such a dedicated defender. Since his Joining, out of all of us, Conrad had worked with him the most, probably spoken to him the most while the rest of us were avoiding the issue and hiding our heads in the sand. We did nothing to help him transition, to make him feel welcome, and he stayed anyway. If Conrad is so positive that he's reformed, that he didn't purposefully put the mages in harm's way...He will still need to be punished for insubordination, but I guess I can give him the benefit of the doubt for the rest. ",
        "Aedan seemed to have come to the same conclusion. He turned to us, raising his eyebrow, his head tilted slightly, the question implicit. Alistair and I made brief eye contact, and then nodded wordlessly. Aedan finally stood with a sigh. \"I'll deal with Rolan. Everyone, get ready. You've got an hour for rest and food, and then we're going to find the Architect and end this.\" \n\nWe filed out of the room to see the army already doing what Aedan had suggested. Some were eating rations, sitting quietly while they chewed the ubiquitous jerky that soldiers seemed to exist on in Thedas. Some cleaned their equipment or sharpened swords; some slept where they fell, snatching what rest they could before moving on. We found ourselves some space and did the same, filling ever-hungry bellies with leathery rations, readying equipment and getting some rest. I briefly thanked the Maker for Warden stamina, otherwise I felt sure I'd have been too exhausted to move after such a trying morning. \n\nAfter a few minutes I saw Rolan and Aedan approach; the former templar had his sword strapped back on, and he moved purposefully and quietly, looking almost...at peace. Aedan shot me a grin before sinking to the ground and chewing absentmindedly on his own jerky. Alistair had huddled up with Trevian and Nate, devising the strategy for the next offensive, I assumed; when I was done eating, I grabbed some rations for my husband, found a small wedge of cheese tucked at the bottom of my bag for just such an occasion, and brought them to him just as they seemed to finish up. \n\n\"What was in the other side passages, anyway?\" I asked after accepting my husband's adoring smile when I handed him the cheese. Mouth too full to respond, he gestured at Trevian, who grunted. \n\n\"Mostly empty rooms. This must have been a major crossroads back in the day, judging by the size of the guard outpost. One day, maybe we'll even be able to reclaim it - there's the basics for sanitation, living quarters, and it would be quite defensible...\" He trailed off, and I cleared my throat. He flushed. \"Sorry 'bout that. There were a few darkspawn stragglers, but nothing major. No one was hurt.\" \n\nI nodded thoughtfully, turning to face the large, black opening at the back of the room - the only place we'd yet to explore. \"So any idea what's back there? Does your 'stone sense' tell you anything about the layout?\" \n\nHe shook his head. \"Doesn't work like that, cloudhead.\" He grinned at me, and I laughed. \"That's not part of the Deep Roads proper. Can't say whether it was darkspawn who dug it, or unsanctioned dwarven mining. It leads straight into the rock - no way to know how far it goes before we hit Deep Roads again. Could be one room, could be miles of irregular tunnels. Either way, they can't help but know we're coming - that battle wasn't exactly quiet. Depending on the forces this Architect has available...we could be in for quite the fight.\" \n\nI sighed. \"Well, this ought to be interesting, anyway.\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "romance",
        "modern girl in thedas"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-144"
}