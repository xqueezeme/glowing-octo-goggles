{
    "title": "Surefoot 21: Space Oddity",
    "pages": [
        "\"I don't know where I'm going from here, but I promise it won't be boring.\" \n\n-David Bowie \n\n\"USS Surefoot-A, Captain's Log, Stardate 44642.77, Captain Esek Hrelle, commanding: we're currently docked at Deep Space Nine for the next two days for a software upgrade, and to avail ourselves of a little shore leave. The latter of which I am definitely taking advantage of, given who is set to play here tonight. I was lucky to have enough pull to get myself a ticket, and now I'm getting ready for The Greatest Night of My Life!\" \n\nFrom their bed nearby, Kami stopped trimming the tuft of fur at the tip of her tail to look up at her husband. \"Excuse me? 'The Greatest Night of My Life'? I thought that was the first night we made love. Or so you've told me more than once.\" \n\nHrelle had commandeered her dressing table, trying to apply the red and blue make-up to the fur on his face in an attempt to copy the lightning bolt pattern on the holopicture beside him. It wasn't easy; the original model was human, with a flat face and no muzzle like Caitians sported, but he thought he was approximating it rather well. \n\nBut now he stopped, turned and smiled charmingly. \"Of course not, darling! I meant of course 'The Greatest Night of My Life Not Involving My Beloved Kami'.\" He returned to his reflection. \"I just didn't want to end up sounding like a tail-kisser.\" \n\n\"Sure you didn't.\" She lay back fully, breathing out with relief. \"I should put a tracer on you, in case you run off with this Ziggy Bowie.\" \n\nHe shook his head with mild exasperation. \"I told you before, it's not Ziggy Bowie, it's David Bowie. Ziggy Stardust was a persona he created early in his career. He didn't just sing and play, he was a performance artist-one of many, many talents he possessed. He was a master of reinventing himself.\" \n\n\"Or, he was someone insecure with his own identity. Or perhaps just someone under the influence of narcotics, like I heard many Terran artists were at the time.\" \n\n\"OR... Someone whose planet-sized genius couldn't be contained so easily!\" \n\nShe chuckled. \"Sorry, I didn't mean to insult your boyfriend.\" \n\nHe glowered at her reflection as he put away the dye applicators, turned and faced her. \"How do I look?\" \n\nShe regarded him, smirking, before finally settling on, \"Indescribable.\" \n\nHe blew a raspberry at her and rose, reaching for his longcoat, the final piece of his reproduction of one of Bowie's baggy beige and blue outfits from his Serious Moonlight Tour (his original choice had been a tight silver jumpsuit more appropriate for his make-up, but his first attempts at fitting into one of those met with so much laughter from Kami that she peed herself, and prompted him to find a more flattering alternative). \"There's nothing wrong with fans showing their allegiance to artists by emulating their look.\" \n\n\"And gushing over them constantly. And throwing their knickers onstage.\" \n\n\"I'm not going that far. Probably.\" He grunted. \"Are you sure you don't mind my going out without you? Unless you've changed your mind and want to come along?\" \n\nKami smiled. \"No thanks. As appealing as it sounds to stand around all night on my aching feet and watch you drool over your man-crush, I have an extended subspace call scheduled later with my fathers on Cait, and then a long, hot soak in a tub on the Holodeck.\" \n\nHe smiled now. \"An actual tub? I'm envious now.\" \n\n\"Enough to want to cancel your plans?\" \n\n\"Kiss my furry ass.\" He drew close, bent down and rubbed the side of his muzzle against hers, before offering a good night to the cub in her belly. \"Take care of your mother, my Warrior Prince.\" \n\nShe shooed him off. \"Don't be too late. And don't talk to strangers. And if this Mr Bowie tries to take advantage of you, resist.\" \n\n\"No promises on that last one,\" he joked. Then he was on his way out to the docking port, ignoring the looks from the few crewmembers still onboard as he passed. Nothing was going to dampen his elation. He was going to see HIM! The Starman, the Thin White Duke, Major Tom, the Goblin King! Not a hologram, not an android, not an impersonator! \n\nDavid Freaking Bowie! \n\n* \n\nDeep Space Nine Promenade: \n\n\"Who in Holy Hraxor's name is David Bowie?\" Neraxis asked, before a long, loud belch erupted from her. \n\nSitting at a table outside the station's Replimat, the other members of Alpha Squad groaned and waved away the quease-inducing odour of Bolian sausage it produced. Sasha grimaced from behind her beer bottle. \"Some old Terran musician from the Twentieth Century. He used to be a member of a group that studied Beetles.\" \n\nBeside her, Kitirik sipped nectar from a tall glass garnished with a small green sprig covered in crawling insects, which he nibbled at between drinks. \"Forgive the correction, Good Friend Sasha, but he was not a member of that esteemed group I believe you are referring to, but rather an accomplished artist in his own right. My studies of Terran subcultures of his era confirm his innovation and influence, not just in music but also film, fashion, and art, long after his first death.\" \n\nNext to Neraxis, her teammate and boyfriend Jonas Ostrow was making a failed attempt to keep her from consuming all of his cheese-slathered nachos, as she had already finished her own. \"Okay, so how did a Twentieth-Century musician end up in the Twenty-Fourth?\" \n\nSitting opposite him, Eydiir cradled her own bottle. \"His original body died from cancer in 2016-\" \n\n\"Wait, you can die of that?\" Neraxis asked. \n\nThe Capellan girl nodded. \"Back then, yes, and epithelial cells were extracted from him and tested as part of several failed tailored treatments. But before he died, he had his brain holographically mapped at the Jackson Roykirk Institute in Manchester, as part of a project to duplicate human engrams for artificial intelligence. \n\nIn 2365, some of his original cells were discovered intact in a cryogenic complex, as were the holographic engrams in a museum. Both were purchased by a Ferengi businessman, who had the cells revived and cloned, accelerating the clone's growth to adulthood, and somehow successfully imprinting the engrams onto it. The Ferengi tried to claim ownership of the Bowie clone.\" \n\n\"So what happened?\" \n\nEydiir paused to drink before answering, \"His claim failed, of course; the Federation Legal Council declared Bowie had the same rights as any other sentient being, and he was rehabilitated into modern society.\" \n\nSasha looked to her friend. \"How do you know so much about him?\" She nudged her, grinning. \"A secret fan of classical music?\" \n\n\"We discussed the case in my class on Medical Ethics. Ferengi do not have any ethics, at least not where profit is concerned.\" \n\n\"Ferengi are disgusting,\" Jonas groused - suddenly smacking Neraxis' hand as she reached for more of his nachos. \"Order a second bowl for yourself!\" \n\nThe Bolian nudged him, grinning mischievously. \"Yours are tastier, Scrappy.\" \n\nKit watched the interplay with interest, offering, \"Good Friend Jonas, I would suggest an alternative snack next time, but I fear Good Friend Neraxis might simply end up with a case of... peanuts envy.\" He wheezed with laughter at the pun, uncaring of the groans it induced. \n\n\"So,\" Meow Rrori interjected, returning to the table with a tray of drinks, this round on him. \"Have we decided on seeing this Bowie character, or have I sold you on my idea of a day trip to Bajor to see the Chulkese Waterfall?\" \n\n\"I'd like to see him,\" Jonas confessed, having resigned himself to letting Neraxis assimilate the rest of his nachos. \"It'd be fascinating to see a man who lived through the most tumultuous periods in Terran history: the Cold War, 9/11, Khan-\" \n\n\"You really want to see some old man crooning ancient songs?\" Sasha asked, smirking. \"Include me out.\" \n\n\"Did I mention that there were many scantily-clad beauties at the Chulkese Waterfall?\" Rrori asked. \n\n\"No,\" Sasha replied, \"But you didn't really have to-\" \n\n\"CADETS! AT ATTENTION!\" \n\nThe group bolted to their feet, the force nearly tipping over the table and spilling the contents of a few of the bottles and some of the snacks. \n\nA female couple approached them, a Vulcan and a younger Caitian, the former dressed in sober black and grey civilian clothes that matched her demeanour, the latter a colourful contrast in both attire and personality, guffawing to herself, her black tail swishing mischievously behind her. \"Oh, you darling little cubs! I'm going to miss teasing you when you go out into the Big Bad Galaxy!\" \n\nSasha sat down again, showing Lt C'Rash how many middle fingers she had on her right hand. \"Thanks, Cousin. Hope you get worms.\" \n\nThe Chief of Security looked to her companion. \"Ooh, that sounds like gross disrespect towards a superior officer, Commander! Should I file charges?\" \n\nT'Varik offered the barest hint of amusement as she replied, \"You could, Lieutenant, but I doubt if you possess the requisite maturity to sit through the required disciplinary hearings.\" She nodded to the cadets. \"Good evening, Alpha Squad. I trust you are staying out of trouble?\" \n\nSasha grinned. \"Don't we always, Ma'am?\" \n\n\"No. But assuming that there are no Nazis on this station to antagonise the pugilistic Mr. Ostrow, I will expect a lack of reports from the local constabulary.\" \n\nRrori grabbed a beer, letting his white-furred tail swish to display his gold tailbands at some passing Dabo girls from that interesting-looking bar nearby. \"We were just deciding to shuttle over to Bajor.\" \n\n\"We were just debating whether to do that,\" Sasha clarified. \"Or to go see the Bowie concert.\" \n\n\"Definitely go to Bajor,\" C'Rash recommended. \n\n\"Why? You got something against Bowie?\" \n\n\"I know nothing about him. I'm just thinking about who'll you be seeing there.\" She nodded towards a crowd of people milling about the Promenade. \n\nSasha and the others looked up, Sasha spotting her father strutting towards them like he owned the place, the lightning bolt on his face bright and unignorable, and the back of his longcoat swishing about because of his happy tail. \"Mother's Cubs...\" \n\nHrelle drew up to them, singing, \"We are the Goon Squad and we're coming to town... Beep Beep!\" He stopped and grinned. \"Hello All You Young Dudes! Well?\" He held out his arms. \"How do I look?\" \n\nNo one deigned to speak, until Kit offered, \"You are quite resplendent, Most Respected Captain! You capture the look of the period most successfully!\" \n\n\"Ass kisser,\" Sasha quipped, smirking again. \n\n\"Thank you, Kit!\" Hrelle beamed. \"Drink up, cubs, you don't want to miss the start of the concert! You're gonna love him!\" And in a loud voice he began singing. \"There's a StaRRRrmanNNN waiting in the sky / He'd like to come and meet us / But he thinks he'd blow our minds!\" \n\nNearby, a strange alien with slicked-back hair and an unformed-looking face, and wearing the beige uniform of a Bajoran security officer, looked over at the group. \"You there! Do you require medical assistance?\" \n\n\"What? No, Constable!\" \n\n\"In that case, there's no noise-making allowed on the Promenade!\" \n\n\"Sorry, Constable!\" Hrelle waved to him happily, before focusing again on his crew. \"Well? Aren't you coming?\" \n\nSasha bit back her initial reply, offering a hesitant as she stared at her father's outfit, \"Well, we, ah...\" \n\nHe frowned. \"What's wrong with you guys? David Bowie is AMAZING! He's written so many incredible songs! Space Oddity, Starman, Let's Dance, Loving the Alien, Fashion, Under Pressure, Suffragette City, Changes, Life on Mars, Heroes... oh, Great Mother, Heroes! And he's the most handsome, charismatic man you'll ever see! Women wanted to be with him, men wanted to be him - actually, they wanted to be with him, too - and his voice! It's- it's just-\" \n\nC'Rash chuckled. \"Whatever it is, it can't be as bad as yours, Uncle Esek.\" \n\nHe looked to her. \"You have a problem with my singing voice, Lieutenant?\" \n\n\"Me? Oh, no - at least, not if you're doing an impression of a man trying to pass a self-sealing stem bolt through his urethra.\" \n\nThat made some of the cadets titter, or moan in sympathetic pain, until T'Varik pointed out to her companion, \"Were you not just complaining about the lack of respect shown towards superior officers?\" \n\n\"Yes, well, it's tough to show him respect in that get-up.\" \n\nHrelle looked to the cadets. \"I guess you cubs can't appreciate good music; your loss. Enjoy yourselves, anyway.\" He started to turn, but looked back at his senior officers. \"Oh, Commander? Would you agree that Lieutenant C'Rash's attitude towards me is a poor role model for our cadets?\" \n\n\"Undoubtedly, Sir.\" \n\n\"Good. She's earned herself thirty minutes on the nearest Naughty Step you can find, while you lecture her on her responsibilities. Somewhere nice and public to maximise her embarrassment.\" \n\n\"What?\" the young Caitian exclaimed. \n\n\"If she refuses,\" he added, ignoring his niece and junior officer. \"Then her shore leave is cancelled and she's confined to her quarters.\" \n\n\"Acknowledged, Sir.\" T'Varik took C'Rash by the elbow. \"I believe I saw a suitable Step near the Klingon restaurant.\" \n\n\"Wha- he's not being serious!\" \n\n\"Yes I am!\" he called over his shoulder as he walked away, trying to find the location of the concert hall. Damned Cardassian architecture... \n\n* \n\nHe was still cursing it as he found himself in a quieter part of the station. There were no maps, no directions or signposts, and unlike the Surefoot, no helpful central computer he could ask for help. Seven Hells, he was gonna miss the start of the show! \n\nHis pointed ears twitched at some sounds when he rounded a corner, finding a man standing there, pacing anxiously outside a door, flexing his fingers. He was dressed in similar fashion to Hrelle - another fan? the Caitian wondered - and Hrelle drew up to him. \"Excuse me, I was looking for the concert-\" \n\nThen he stopped, his jaw dropping open. \n\nMother's Cubs, it was him! \n\nHe was lean and young; the Ferengi who had created him might have used the holographic brain map of Bowie when he was in his late sixties, but the cloned body standing here was aged only up to his twenties. But there was the charisma, the intelligence and charm Hrelle had seen in recordings of performances. The eyes looked different, but otherwise, it was definitely... \"Mr. Bowie? David Bowie?\" \n\nThe man stopped pacing, faced him with a measure of shock Hrelle recognised from people unused to non-humans, but then shook his head. \"Sorry, you have the wrong man. My name's Davy Jones.\" \n\nHrelle reacted - but only before his confusion blossomed into a grin, as he pointed at the man. \"Hah! Good one! That is your name, but I know you changed it to Bowie to differentiate from another singer of your time, who was a member of the Primates!\" \n\n\"The Monkees, actually.\" He began pacing again. \"Look, I'm rather busy-\" \n\n\"Mr. Bowie,\" Hrelle gushed, his heart racing at the unexpected opportunity, the words rushing from him like steam. \"My name is Esek, and I just have to say how thrilled and honoured and delighted I am to run into you! You don't know how big a fan I am!\" \n\nBowie looked over his outfit again. \"I can guess.\" \n\nHrelle chuckled. \"I suppose you can! Anyway, you're- you're amazing! Fantastic! Wonderful!\" \n\n\"Please, you don't have to go on-\" \n\n\"Oh, but I do!\" \n\nBowie stopped pacing and stared resolutely at him. \"No. You don't. I really don't want to hear it, thank you.\" \n\nHrelle frowned. \"What's wrong? Are you in trouble or-\" Then he stopped and smiled. \"You've got stage fright? You? But you're Bowie! You've played hundreds of gigs!\" \n\n\"Yes, and I've been nervous before each and every one of them. And that was before I started gigging in outer space for aliens.\" \n\n\"Wow.\" Hrelle shook his head. \"Still, it can't be too far out for someone like you, can it? Your songs practically prepared you for this century!\" He drew up and nudged Bowie with his elbow and sang, \"Believing the strangest things / Loving The Alien-\" \n\n\"Is your carer nearby?\" \n\n\"Mr. Bowie?\" \n\nHrelle and Bowie turned at the approach of four figures - three human males and a Bolian female - but Hrelle's hackles rose as he watched them. They were dressed in civilian clothes, but moved with a military bearing. The human up front was young, swarthy, with curly black hair, goatee and a gimlet gaze that was fixed on Bowie. \"Excuse me, sir, my name is Captain Belexes-\" \n\nThe musician looked away. \"I'm not in the mood for more fans-\" \n\nThe man drew a phaser, as did the others. \"You need to come with us.\" \n\n\"What's going on? Who are you?\" \n\nHrelle studied them, their weapons, their body language, prompting him to speak up. \"We'd best do what they say, Dave.\" \n\nBelexes focused on Hrelle. \"What's this 'we'? We're here for him, not you!\" \n\nHrelle's expression was aghast. \"What? How dare you!\" He drew closer to Bowie and put an arm around him. \"We're a double act! Look at me! Do you think I'd go out looking like this otherwise?\" \n\nBelexes looked at his comrades, before focusing on the Caitian again. \"We weren't told about you. What's your name?\" \n\n\"Mick Jagger.\" \n\n\"And you're a singer?\" \n\n\"Am I a singer?\" Without waiting for a prompt, Hrelle launched into a loud power ballad. \"There's no sign of life / It's just the power to charm / I'm lying in the rain / But I never wave bye-bye-\" \n\nBelexes held up a hand. \"Please, no more.\" He looked to his colleagues. \"I don't know classical music, I can't tell if he's serious or not.\" \n\n\"Just as easy to take two as one, Captain,\" the Bolian pointed out. \n\n\"Excuse me,\" Bowie exclaimed. \"Just what the bloody hell is going on-\" \n\n\"Stay calm,\" Hrelle advised quietly. \"Best not to antagonise them.\" \n\nBelexes nodded. \"Your friend Mr. Jagger's quite right.\" He drew out a handheld communicator. \"Belexes to Gallifrey: six to beam up.\" \n\nOn beaming into a small transporter room, Belexes strode up to a wall communicator. \"Capaldi! Eccleston! Get us going, but don't attract attention from the Starfleet vessels docked to DS9.\" He looked to his men and their captives. \"Baker, Tennant, lock them up in one of the cabins until we get back to the Badlands.\" \n\n* \n\nHrelle took in the cramped quarters of their improvised jail cell fairly quickly: a bunk bed, a chair and small table, empty overhead shelves, and an open doorway leading into the hygiene chamber. He waited until they closed and locked the door before shucking off his longcoat and began moving things about, while Bowie stood in the corner. \"This is almost as small as my first flat in London.\" He looked to Hrelle. \"What are you doing?\" \n\n\"Assessing our situation.\" He shifted furniture, finding an environmental panel near the floor: good. \"Planning our escape.\" \n\n\"Escape? Escape from whom? Who are they? Who are you?\" \n\nHrelle found a power conduit under the table. \"They're called the Maquis. They're rebels, opposed to a peace treaty that unfortunately meant some of them had to be relocated from worlds in this sector; it led them to renouncing their Federation citizenship to fight for their homes. Many Starfleet officers and crew joined them, sympathetic to their cause. Captain Belexes was one of us, I'm sure.\" \n\n\"'One of us'? Are you saying you're with this Starfleet?\" \n\nHrelle popped out his claws and worked at the environmental panel, raking the insulating seal and tugging the panel slightly away from the wall. \"Yes. Captain Esek Hrelle, USS Surefoot.\" \n\n\"And why would they kidnap me? I'm just a singer from another century! I'm nobody!\" \n\nHrelle began tugging out a sensor wire from the interior, twisting it about to point it towards the floor. \"You're not nobody; the story of your creation sparked a renewed debate on cloning and sentient rights. Kidnapping you will draw attention to the Maquis' plight.\" He rose and entered the hygiene chamber, hoping his guess about the make of this vessel was correct. \"We need to escape before we reach the Badlands.\" ",
        "\"The Badlands?\" \n\nHrelle smiled to himself as he confirmed the old-fashioned water-based waste recycling system in the toilet - even as he grimaced at the stench. \"A nearby sector of space filled with plasma storms and gravimetric anomalies.\" He looked up and smiled. \"You might say it's a... Space Oddity.\" \n\nBowie stared back, deadpan. \n\n\"You know? Like your song-\" \n\n\"Yes, explain the joke, that'll make it funnier.\" \n\nHrelle returned to his task, looking for a suitable position around the toilet to kick at the exposed waste pipe. \"The Badlands are a notorious hiding spot, used first by the Bajoran Resistance and now by the Maquis. If they get us there, I don't know when we'll be found. Or if. And if the Badlands don't kill us, a Cardassian patrol could.\" \n\n\"Kardashian?\" \n\n\"No, Cardassian. They're a militant race, the ones we had to sign a peace treaty with.\" \n\nBowie grunted. \"I keep getting told this is a Utopian time.\" \n\nHrelle kicked again, feeling it begin to give. \"Well, compared to your century, it must be. But it's not perfect. And a good thing, too, or it'd bore the crap out of me.\" He kicked again. One more... \"Speaking of crap-\" \n\nThe pipe gave way, and foul water poured out from it and raced out along the floor into the cabin. \"You might want to get up on the bunk to save your shoes.\" \n\nBowie took the advice, as Hrelle bit the proverbial bullet and walked through the water to the panel. Bowie watched him, his face screwed up in disgust at the stench. \"And how exactly is this going to help us escape?\" \n\nHrelle bent down, forcing himself not to breathe in through his nostrils as he drew the sensor wire from the panel closer and closer to the water. \"Hopefully, the sensor will detect the contamination in the room and override the lock on the door. Assuming we don't go insane from the smell.\" He glanced up, smiling. \"Or should I say, Aladdin Sane?\" \n\n\"Don't,\" Bowie responded. \n\nHrelle's smile dropped as he peered at the other man's face. \"I thought you were born with different-coloured eyes?\" \n\n\"No. A mate of mine punched me when we were fifteen, in a fight over a girl. It damaged the pupil and left it permanently fixed open.\" He glowered. \"This cloned body never went through that.\" \n\n\"Oh. Have you considered getting it cosmetically altered?\" \n\n\"No.\" \n\n\"Okay.\" Hrelle tugged at the wire, careful not to snap it. \"Once we're out, I'll get us to an escape pod.\" \n\n\"Are you sure there's escape pods on this thing? Why not just use that teleporter?\" \n\n\"We'll be too far away from the station by now to beam out. And I recognise the layout of this as a Tellarite freighter; it has escape pods.\" He paused and clarified. \"Probably.\" \n\nBefore Bowie could react to that admission, the door slid open. \n\nHrelle grinned, but his ears immediately picked up someone standing just outside, probably a guard, and he bolted out past Bowie, striking out at the beefy-looking human before he could put out an alert. The guard fell unconscious, and Hrelle slumped him to the floor, searching and taking the phaser he found, as water continued to pour out into the corridor. \"David? Come on!\" \n\nHe peered back inside; Bowie was on his back on the floor, his face aghast; Hrelle guessed he must have slipped on the water and helped him back up. \"Oops. You ready?\" \n\nHe grunted, shaking the water off his clothes. \n\n\"Then Let's Dance.\" Hrelle stopped, grinning again. \"Put on your red shoes, and dance the blues-\" \n\n\"Don't,\" Bowie pleaded. \n\nLuckily they found a two-person escape pod active not far from the cabins - though Hrelle initially baulked as he looked out the viewport and saw the edges of the Badlands: a chaotic miasma of spitting red and orange plasma streams and debris, a very deadly stew, one that could chew up a spit out a dreadnought, let alone a tiny little escape pod. He almost reconsidered his plan. \n\nAlmost. He closed the hatch and started the launch sequence. \"Strap yourself in.\" As the countdown descended from Ten, Hrelle crooned softly, \"Ground Control to Major Tom, Ground Control to Major Tom-\" \n\n\"Don't,\" Bowie murmured. \n\nBehind them, someone was pounding on the hatch. \n\n\"Sorry, Boys and Girls, but Elvis is leaving the building.\" Hrelle hit the launch button, thrusting them backwards into their seats as the pod propelled itself into the Badlands. \n\nHrelle immediately took over from the autopilot, but still allowed it to send a distress signal as he scanned the area for any nearby ships or planetary bodies. He banked them sharply and to the left. \n\nA voice came over the radio: Captain Belexes. \"Mr. Bowie! Mr. Jagger! You need to come back! It's dangerous out there! You're nothing but two singers! And Mr. Jagger isn't even that good-\" \n\nHrelle switched off the link. \"Everyone's a critic.\" He banked them hard to starboard, as phaser beams shot past them from the pursuing freighter. \"Don't worry, they're not really trying to hit us, just scare us. We can use the disruptive effects of the Badlands as much as the Bajorans and the Maquis; they can't get a decent transporter lock on us, and that ship of theirs doesn't have a tractor beam. Maybe they'll give up, thinking we're too much of an annoyance.\" He grinned at Bowie. \"I'm good at being an annoyance. Just ask my wife and daughter-\" \n\nHe started as the freighter suddenly appeared ahead, coming at them. \n\n\"Damn,\" Hrelle muttered. \"Hold on, I'll-\" \n\nBefore he could even finish his words, a plasma stream cut through the aft section of the other ship, ripping it like tissue. Hrelle watched in horror as they managed to eject their warp core, but their impulse engines still exploded, taking the rest of the ship with it - a little more slowly than if by a warp core breach, but no less deadly. \n\n\"Seven Hells...\" Hrelle banked them away, heading them back towards the planetoid. \"Those poor bastards.\" \n\nBowie looked to him. \"Those poor bastards kidnapped us! Threatened us! Don't waste your pity on them!\" \n\n\"It's my pity,\" Hrelle muttered sadly. \"I have enough for them. I didn't believe in what they did, but I understood why they did it. They weren't pirates, they weren't slavers, they weren't terrorists. There are far, far worse people out in the Galaxy. Believe me-\" His mood lightened. \"Ahh! A Class-L planetoid dead ahead! We can land and stretch our legs, and the pod's distress signal will continue.\" At Bowie's continued expression, he suggested, \"How are you doing?\" \n\nThe man's face was rigid, and his breathing rapid. \"How am I doing? I've been kidnapped, drenched in stinking rancid toilet water, stuck in a tiny capsule, shot at, tossed about in a cosmic firestorm, and my life is at the hands of a fat furry lunatic who's also my Number One Fan! I'm bloody terrific! How are you?\" \n\nHrelle considered the question, before asking, \"Am I really your Number One Fan?\" \n\n* \n\nUSS Surefoot-A, Deck 1, Bridge: \n\nT'Varik stepped out from the Ready Room to a wall of expected, anxious faces. She ignored them momentarily to look at the crew currently manning the various stations. \"Lt. Neheru, recall all crew on shore leave immediately, and alert the station's docking facilities that we will be leaving as soon as possible. Mr. Rrori, take the Helm, and plot a course for the Badlands; your skills will be in demand there. Lt. C'Rash, you will ready your Security for a possible Away Team rescue mission-\" \n\n\"T'Varik,\" Kami prompted, holding onto Sasha's hand. \n\nThe Vulcan turned to her. \"It appears the Captain and this Terran singer Mr Bowie were kidnapped by the Maquis, 4.5 hours ago. A freighter, the SS Gallifrey, was reported leaving at this time for the direction of the Badlands, and security cameras identified a member of a party as JZ Belexes, former captain of the USS Catilla, who deserted four months ago to join the Maquis.\" \n\n\"Four and a half hours' head start,\" C'Rash growled from the Tactical Station, her tail twitching behind her in agitation. \"I'll bite whomever's in charge of their security over there.\" \n\n\"Why would they take my dad?\" Sasha asked. \n\n\"He'll have strategic information about the DMZ and our ships along the Cardassian border,\" Neraxis suggested. \n\n\"He does,\" T'Varik conceded. \"But Intelligence suggests the Maquis' actual target was Mr. Bowie. The captain may have simply been caught up in the incident.\" \n\n\"No,\" Kami disagreed. \"He would have gone along if he could in order to protect a civilian. Especially if it involved his man-crush. I definitely should have tagged him.\" \n\nT'Varik looked past her. \"Status, Mr Neheru?\" \n\nThe Kelpien looked up. \"We are only at 60% crew capacity, Commander.\" \n\n\"It must suffice; alert Deep Space Nine as to our imminent departure, and initiate undocking. Helm, what is our ETA at Warp 9.5?\" \n\n\"2.3 hours, Commander,\" Rrori replied. \n\nShe nodded at that, looking to Jonas now. \"I am told by experts that sensor effectiveness is minimal at best in the Badlands. I am inviting our Strategic Engineering Officer to attempt to prove the experts wrong before we arrive, Lieutenant.\" \n\nJonas nodded professionally. \"Nancy, you're with me.\" As they started towards the doors, he tapped his combadge. \"Crewmen Darnell and Hunter, report to the Forward Sensor Array-\" \n\nThe others reported to their assigned stations - except for Kami. \"Counselor, if you wish to lie down-\" \n\n\"No. I'm staying here.\" \n\n\"It would be pointless to remain-\" \n\nThe Caitian put her hand on her belly. \"Esek and I were going to sit down with you after everyone's shore leave, to make a special request.\" \n\n\"Oh? And what is the nature of this request?\" \n\n\"Caitian parents who live and work away from their clans often appoint what we call a Lressha for their cub. The equivalent would be a Terran godmother, or maybe a Vulcan keos-tath. We want to ask you to be Misha's Lressha.\" \n\nT'Varik nodded. \"Would not Sasha or C'Rash be more appropriate choices, given their familial connections?\" \n\n\"The Lressha is typically a female who acts as a stand-in for the Clan's Matriarch, and offers the cub mature guidance and discipline. They tend to be older, more responsible and authoritative, and I fear he will get nothing from his big sister and aunt but lessons in mischief. There is no legal obligation with the role, but if you'd like to consider it-\" \n\nT'Varik shook her head slightly. \"Consideration is not required. I would be honoured to accept the responsibility.\" \n\nKami smiled. \"Thank you. Now, you should know that Misha refuses to leave until he knows his father is back, safe and sound. And I know you wouldn't refuse a request from your own godson.\" \n\nThe Vulcan raised an eyebrow. \"You are aware that any attempt to manipulate me emotionally is doomed to failure. And I will not be hesitant in employing discipline towards your cub when required.\" But then she added, \"I suggest you and my godson take the captain's chair; it is the most comfortable... and I suspect it will contain his scent.\" \n\nKami offered a slight, though still worried smile. \"Thank you. From both of us.\" \n\n* \n\nThe pod had begun to shudder as they entered the turbulent atmosphere of the planetoid. Hrelle compensated as best he could, but- \"It's gonna get worse before it gets better.\" \n\n\"Then maybe we should stay in space?\" \n\n\"No. It's far more dangerous to stay out here. The atmosphere of the planetoid will offer some protection from the plasma storms.\" He smiled. \"Brave heart, David. We can be heroes... just for one-\" \n\n\"Stop that. Just stop that. I'm sick to death of it! You are the most annoying man I've ever met! I don't want to be reminded about my old songs! I hate them!\" \n\nHrelle had to keep his eyes on the controls, but still shot a surprised glance at the human. \"You do? What were you planning on singing on your tour?\" \n\n\"Modern songs! Written by modern artists! Beyond Antares, Moon Over Rigel VII, Warp Core on the Dancefloor, The Laughing Vulcan and His Dog, Risa Rising-\" \n\n\"Why? What's wrong with your old songs? They're all wonderful! Even the ones from Labyrinth! You have this golden opportunity to introduce them to a whole new audience! You're so lucky!\" \n\n\"Lucky?\" Bowie's face tightened with disbelief... and anger. You... pillock! I was dying! I was resigned to die! I had my brain patterns recorded for medical research, not to help bring me back into a world I didn't want to be a part of! My wife, my children and family and friends, everything and everyone I know, dead for centuries! I'm a relic here, a curiosity for historians - and loonies like you! - and I'm not even the original, I'm just some 3-D printed version of his, cooked up in a test tube! I feel...\" \n\nHe turned and stared ahead, the anger ebbed into a bitter melancholy. \"I feel lost. Old. Obsolete. And there are times when I don't want to do anything more than to swallow a bottle of pills. Can you possibly conceive what that feels like?\" \n\n\"Yes.\" Hrelle focused on a sensor reading on the planet, inwardly kicking himself for being so oblivious to the man's emotional pain, while dressing himself up like a clown and gushing inanely like a fanboy. The shuddering increased. \"Planetfall in thirty minutes.\" \n\n* \n\nThe image of the Roylan captain filled the screen of the Surefoot's Bridge, exaggerating the surprise on his diminutive face. \"Counselor? I was unaware that the chain of command on your vessel included you.\" \n\nKami offered a little smile. \"My cub and I are just keeping the seat warm for my husband, Captain Weynik.\" She looked up at T'Varik. \n\nThe Vulcan stepped down to stand beside her and take over the conversation. \"Captain, the assistance of the Starsong in tracking down the freighter will be greatly appreciated.\" \n\n\"You'll have it, Commander. Anything for our little cousin ship. Send us the data and we'll keep you appraised. Starsong out.\" \n\nAt the Helm, Rrori growled to himself. \"'Little cousin'?\" \n\nDespite her worry, Kami allowed herself a slight smile. \"They are bigger than us, Meow. But I promise you, size isn't everything.\" \n\n* \n\nThere was no sun, but there was illumination, from literally hundreds of lightning shards cutting across the thick atmosphere of the planetoid. There was also thunder, powerful enough to reach the occupants of the crashed pod, making Hrelle reluctant to go out there and face the naked sound with his sensitive ears. But they couldn't stay there. He unbuckled his straps. \"Come on, we have to find shelter.\" \n\nBowie was recovering himself better than Hrelle expected. \"Shouldn't we stay here? If there's a rescue party-\" \n\n\"This atmosphere is heavily ionised, as you can see, and the metal in this pod will act as a lightning rod. There are caves nearby, I saw them as we were coming down, and maybe something more.\" He grabbed the phaser and a survival kit from under his seat. \"But hopefully no Scary Monsters.\" \n\n\"Or Super Creeps?\" Bowie finished, looking at him accusingly. \n\n\"I wasn't gonna say it,\" Hrelle promised. \n\nThe landscape was barren, though the rocks were covered in a thick lichen that presumably produced the minimal oxygen they were breathing, but at least it was dry. There was a basic tricorder in the survival kit, and Hrelle used it, detecting something in one of the caves ahead. He helped Bowie up the slope. \"I'll set up a beacon at the entrance for the rescue party.\" \n\n\"Assuming there'll be one.\" \n\n\"There will be,\" Hrelle assured him. \"My wife would move the Galaxy itself to find me... if only to be the first to smack my snout for getting myself in trouble again.\" As they approached the entrance, Hrelle smiled. \"Excellent.\" \n\n\"What?\" \n\nForgetting humans didn't possess a Caitian's superior senses, he turned on the tricorder's torch, lighting up the back of the cave, where several large covered crates sat. They approached, Hrelle examining the faded labels. \"Bajoran, Cardassian- this is an old Resistance outpost! Abandoned after they gained their independence... if we're lucky, we might find some things we can use.\" \n\n\"Can I help?\" \n\nHrelle looked to him, handing him the tricorder as he knelt down. \"Hold the light for me, please.\" He began opening the crates: rations, long since decayed to inedibility; batteries, spare parts for hand weapons and bombs. Hopefully there were some communicator parts- \n\n\"I'm sorry,\" Bowie announced. \n\nHrelle made a sound; the fusion batteries here were depleted, but there were some long-life chemical rechargers he might be able to revive. \"Sorry? For what?\" \n\n\"For blowing up at you like I did. I'm yelling at you, and you're busy trying to save my life.\" \n\n\"Both our lives. Besides, it's my duty; you're a Federation citizen.\" \n\n\"What, even though I'm just a clone?\" \n\nHrelle stopped and looked up at him. \"How you came to be alive doesn't matter, not one damn bit; you are alive. So what if you're not the original? You're just as good; do the words of Shakespeare have more value when read from a First Edition folio?\" \n\nHe returned to his inspection, shaking the vial of chemicals to trigger the release of energy to jump start the booster unit. \"Besides, if anyone should be apologising, it's me. I must have seemed like some kind of crazed fan to you.\" \n\nBowie chuckled. \"Believe me, I've seen worse in my day. Admittedly, though, even in my most coked-up days, I never saw one with fur and a tail. May I... Is it rude to ask what species you are?\" \n\nHrelle smiled. \"Caitian. Our system is about 178 light years from Earth's. We've been members of the Federation for the last century, though we first ran into humans a century before that.\" He made an amused sound. \"It was an interesting First Contact with humans.\" \n\nBowie watched him work. \"You know, I can't imagine how someone like you might be interested in my songs. They're... outdated, obscure. It's- It's another reason I was planning on performing contemporary numbers on this tour.\" \n\nHrelle stopped what he was doing, pretending to need a drink as he rose and retrieved the survival kit, obtaining the canteen and offering it to Bowie first, before imbibing sparingly, not knowing when they might be rescued or if there was potable water nearby. \n\nHe debated whether or not to go the route he wanted, the outside lightning flashes offering no succour. \"Some years ago, criminals abducted me, and killed the crew of my former ship. They also killed my first wife, though I wouldn't know this until I escaped years later.\" \n\nBowie drew up to him, his shocked, sorrowful face pale in the stormlight. \"I'm sorry.\" \n\nHrelle nodded absently. \"I was tortured. I was enslaved. My life became... brutal. Painful. I was made to do... horrible things. I was punished if I didn't obey. I was punished if I obeyed. I was punished if it happened to be a Monday. There was no rhyme or reason. And no hope. \n\nBut occasionally, when I did please my... owner... he granted me small privileges: extra food and water. Companionship. And use of a small music player. The selection on it was small, but... eclectic: Klingon opera, Vulcan funeral chants, Orion pirate ballads. And a compilation of songs from someone named David Bowie.\" \n\nHe looked to the man. \"I didn't know anything about you, only guessed that your were Terran from the few cultural references I recognised. But your music... David, your music reached me. I heard Space Oddity and remembered the thrill and terror of first leaving my homeworld to go join Starfleet. I heard Absolute Beginners and remembered the fear and joy of falling in love with Hannah. I heard Let's Dance, and...\" He smirked. \"Well, I wanted to dance. I didn't. But I wanted to. \n\nAnd then there was Heroes. That gave me hope, something I thought was forever lost to me. You reminded me that the Universe had joy and beauty and love and promise and...\" He swallowed. \"There are so many more songs, and even if I didn't know the origins or contexts - or the drugs - behind their creation, they still reached me. And if they can reach this fat cat four centuries after you first composed them, they must have some value. Even The Laughing Gnome.\" ",
        "Bowie smirked. \"I wouldn't go that far.\" \n\nHrelle smiled. \"I think I know something of what you're going through now. When I finally escaped, I wanted nothing more than to join my dead wife and consign what I had gone through to oblivion. But I couldn't. It was a terrible chapter in my life. But it was just that: a chapter.\" Hrelle smiled sympathetically now. \"I'm not diminishing what you've lost, or telling you to forget it. I'm just asking that you don't let that loss define the rest of your life-\" \n\n\"YOU!\" \n\nBoth men turned and faced the cave entrance, where lightning revealed a man-sized silhouette, and Hrelle recognised the voice and scent. \"Captain Belexes? You survived?\" \n\nLightning flashed again, allowing him to see that the Maquis leader was injured, angry - and wielding a phaser rifle pointed at them. \"No thanks to you two! I lost my ship, my crew- I barely made it to an escape pod and landed here, following your distress signal! You're responsible, Jagger!\" \n\nHrelle raised his hands, aware that he had left his phaser at the mouth of the cave, not thinking he would need it. \"The name's Captain Hrelle of the USS Surefoot. And it's over, Captain. Starfleet will get here before the Maquis. Put down your weapon, we'll work together-\" \n\n\"NO!\" Belexes stepped back, glancing up into the black sky. \"They'll never find you! Neither of you! Outside, now! \n\nHrelle's hackles rose. \"Captain... don't do this. Don't mar your cause with murder.\" \n\n\"This isn't about the cause anymore. I want revenge! Now, are you gonna step outside, or shall I just shoot you in there?\" \n\nHrelle stepped in front of Bowie and continued to approach the Maquis, watching him step further and further away, hoping he might trip over something on the slope. \"Leave Bowie out of this. I'm responsible for what happened to your crew, your ship-\" \n\n\"SHUT UP!\" \n\nThe lightning flashes were increasing. Getting closer. \n\nHrelle felt his fur stand on end, and his heart raced. \"Captain, get rid of the phaser! It's attracting the lightning!\" \n\nBelexes laughed at that. \"Just how stupid do you think I am, Hrelle?\" \n\nThe Caitian felt more than saw the bolt that came down on the Maquis captain, and he twisted in place and threw Bowie and himself down onto the cave floor, his ears ringing from the accompanying thunderclap, and his fur as erect as a cub's tail in his first Season. \n\nThey eventually sat up, though it took some effort to help themselves back to their feet, staggering together to the cave entrance. Hrelle looked at where Belexes had stood only seconds before - finding only a charred, smoking patch, and if there was anything left of the poor man's body, it was mercifully out of view. \n\n\"Good Lord,\" Bowie gasped, swallowing. \n\n\"Yeah.\" Hrelle agreed - as a wicked, thoroughly inappropriate thought quickly overtook him, despite the circumstances. \"Ashes to Ashes...\" \n\nHe looked to Bowie expectantly. \n\n\"No.\" \n\n\"Go on. You know you want to. Ashes to Ashes...\" \n\nBowie sighed in resignation. \"Funk to funky...\" \n\n\"We know Major Tom's a junkie!\" Hrelle smiled. \"Thanks. Let's get back to work.\" \n\n* \n\nThe maelstrom of the Badlands filled the viewscreen on the Surefoot bridge as Jonas entered, approaching T'Varik. \"Commander... I'm sorry, we haven't found a way to improve sensor effectiveness here, not in the time we've had.\" \n\nThe Vulcan nodded. \"Understood.\" \n\n\"I'm-\" He paled. \"I'm sorry I let you down, Ma'am.\" \n\nShe looked at him again. \"You most certainly have not, Mr, Ostrow. I asked you to attempt to find improvements to the sensor array within a limited span of time. In this, you succeeded. And my esteem for your skills will not diminish because of this. Take your post at Engineering.\" \n\nJonas smiled. \"Yes, Ma'am. Thank you, Ma'am.\" \n\nT'Varik descended to the captain's chair, where Kami sat, regarding her. \"You're getting soft in your old age.\" \n\n\"Commander!\" Neheru announced. \"We've just received word from the Starsong! They've located the captain and the civilian on a planetoid! They're alive and well!\" \n\nThe mood on the bridge lightened considerably. Even with T'Varik, who responded with, \"Send Captain Weynik our thanks, and arrange for a rendezvous.\" \n\n* \n\n\"Captain's Log, Stardate 44679.12, Captain Esek Hrelle, commanding: Thanks once again to Captain Weynik and the crew of the Starsong; it's good to know that they'll be in our neck of the woods for the foreseeable future. \n\nIt was deeply unfortunate that the lives of Captain Belexes and his Maquis crew were lost; under different circumstances, we would have been colleagues, not adversaries. \n\nAs for Mr. Bowie, we have returned to Deep Space Nine to give him a chance to finally start his tour - which he has rechristened the Surefoot Tour - and has been working on some significant changes to his line-up... to my immense delight... and not-inconsiderable nervousness...\" \n\n\"Admiral Tattok?\" \n\nThe Promenade of DS9 was uncommonly crowded with people, not just station personnel, but also crew from both the Surefoot and Starsong; these, T'Varik expected. But not the admiral, an older Roylan whose short stature should have made him vanish in these crowds. But he had a clearing about him now, as if his very authority created a force field. He nodded as T'Varik, Kami and Alpha Squad approached. \"Commander, Counselor, cadets.\" \n\nThe Vulcan drew up, standing formally, noting that Captain Weynik was there with his father. \"I was not aware that you were on the station, Admiral.\" \n\n\"A classified mission, Commander, regarding Cardassian activity in this sector. I was looking to speak with Captain Hrelle about it. Where is he?\" \n\nT'Varik glanced round. \"I... am uncertain, Sir. He asked us to congregate here.\" \n\nNext to Tattok, Weynik looked to Sasha. \"Hello again, Ensign Hrelle! I hope you're doing well since our previous encounter, and not destroyed any more careers.\" He looked to his father. \"She broke my previous First Officer.\" \n\nThe Admiral looked to Sasha. \"Did you, now?\" \n\nThe young woman flushed. \"Um, in my defence, Sir, he was fairly broken to begin with.\" \n\n\"She's right,\" Weynik admitted. \n\nKami sniffed the air. \"Where's Esek? I can't believe he'd disappear again.\" \n\nSuddenly a huge videoscreen lowered overhead, and a whistle drew everyone's attention to the image of two identically-dressed figures stepping forward on the screen. Music began building, and two voices filled the air, each alternating words: \"Okay... Bajor! Earth! Vulcan! Cait! Andoria! Betazed! Bolius!\" \n\nThen saxophones and trumpets and guitars sounded, as David Bowie and Esek Hrelle began dancing together. \n\n\"Mother's Cubs...\" Sasha breathed out in horror. \n\n\"Calling out around the worlds,\" Hrelle began. \"Are you ready for a brand new beat?\" \n\nBowie followed, grinning, with, \"Summer's here, and the time is right, for dancing in the street!\" \n\n\"Is that my Strategic Operations Officer?\" Tattok asked, bemused. \n\nNo one answered, watching as the duet continued onscreen, oblivious. \"They're dancing in Ktaris (Dancing in the street)! Down in Rigel IV (Dancing in the street)! In Nova Terra City (Dancing in the street)!\" \n\nPhysically, the pair were a contrast, of Bowie's thin, agile figure to Hrelle's more rotund frame; but the Caitian's energy and enthusiasm complemented the human's talent and experience. \n\nAnd it worked, at least to judge from the enthusiastic response from the crowd in the Promenade, bopping and dancing despite the efforts of the station security to maintain order. \n\n\"All we need is music, sweet music, there'll be music everywhere! They'll be swinging, swaying, records playing, dancing in the street!\" \n\n\"Have we lost him to show business?\" Tattok asked. \n\nBeside him, T'Varik merely raised an eyebrow. \"I have been reliably informed that there's no business like it.\" \n\n\"It doesn't matter what you wear! Just as long as you are there! So come on, every guy, grab a girl! Everywhere, around the worlds!\" \n\n\"Oh my God,\" Sasha declared, looking to Kami. \"I'm so sorry-\" \n\n\"What? Kiss my furry ass, girl!\" The Caitian didn't take her eyes from the screen, her gaze filled with sheer amazement - and arousal. \"Your father's incredible! Look at him move! The confidence, the charisma! He gets my nethers purring!\" \n\nSasha turned away in disgust - but then glanced back again, ignoring her father's antics and getting a good look at Bowie for the first time. \n\nAnd falling in love... \n\nTHE ADVENTURES OF THE SUREFOOT WILL RETURN IN... THE FIRST DAY"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "fanfic",
        "starfleet",
        "alien",
        "caitian",
        "celebrities",
        "federation"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-21-space-oddity"
}