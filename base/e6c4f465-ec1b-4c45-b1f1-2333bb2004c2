{
    "title": "Possessing Bella Ch. 25",
    "pages": [
        " Authors Note: Due to the timing of the completion of this series, this chapter has not, as yet, been through the careful hands of my wonderful proof-reader and friend AisieLynn. I will endeavour to replace it as she has time to work on it for me. I hope you will forgive my eagerness to bring you the conclusion to this long running series and bear with the few bumps in the writing. ~ellie. \n\n Possessing Bella Ch.25\n\n Bella woke to find herself pulled closely into Stephen's arms and his worried expression hovering over her in the dark. She no longer felt the need to apologise or explain, and she smiled stroking his cheek and accepting the soft kiss of relief he offered her. The nightmares had become more frequent as Mel's memorial approached, and she was grateful to have the warmth and love of the man beside her. She snuggled into his chest relaxing as he stroked her back. She was beyond happy; she couldn't believe how good her life with Stephen had become.\n\n The agreement they had entered into had been surprising to Bella at first. While Stephen demanded the respect and power due to him in a dominant-submissive relationship, he was also relaxed within the confines of their relationship. As if the constant concern that she would choose to keep another's collar had disappeared and allowed him to show her a side of him that was usually reserved for those he was intimate with. She realised she had only briefly caught glimpses of the softer side of him in the past as he watched over her training and helped her navigate the pitfalls and dangers of living within this lifestyle as a single woman. \n\n Each day he was there when she woke and he left for work as early as she did, travelling down to the cove for the mornings and returning to work from the office in her apartment or his office in the club in the afternoons. While he lectured her about burning the candle at both ends, he seemed to understand her drive where her career was concerned and gave her a lot of independence about how late she needed to work except on Fridays. The weekends belonged to the Lord of the Cove. They drove down on Friday evening and came back on Sunday evenings, in which time they slept very little and played very hard between hosting their friends. She smiled at the constant stream of people who visited the Cove on a Sunday.\n\n With Rob's return to the club full-time since Mel's death, much of what had been Stephen's role had been handed over to him as the owner. Mel had trusted Stephen completely during the time that Rob had been reclusive and when he had returned it had been difficult to define new boundaries between them. As Stephen took on the role of Bella's watcher Rob assumed even more, of the general managers role enjoying the challenge of updating and renewing certain aspects of the club.\n\n With Stephen's help, Theo was now training another manager to lighten his load further, and he had negotiated his withdrawal from working weekends at the club with the proviso that he would be available for the large events and holidays throughout the year. Stephen remained a major presence from Sunday to Thursday, but he made his own hours, usually while Bella was either still at work or asleep. Bella herself worked with Rob and the club managers two nights a week finding that she enjoyed the hostess role in the restaurant where she could meet and greet everyone and socialise with her friends.\n\n The Abbey at the Cove had rapidly become a much bigger part of their lives than the club had been, at least for Bella. She enjoyed the expanding group of friends who came often on Sundays for lunch and to inspect the renovation as it progressed. Arek was a constant presence as he worked on the landscaping of the huge grounds. He and Stephen bickered and teased each other like brothers and she wondered at the often about their friendship and the slight tension that ebbed and flowed between them. They were competitive with each other to the point of being aggressive at times and Bella often wondered why they would choose to spend so much time together.\n\n She and Stephen had become a couple in the true sense of the word and Bella was amazed at how easily they were able to slide in and out of each area of their lives. She belonged to him heart and soul now and after the memorial when she had said her last goodbye and thanked Mel and his friends for all they had done for her she would beg his collar. She had been planning git in her head for the last few weeks and wanted the moment to be perfect.\n\n She smiled acknowledging how different she felt about begging for Stephen's collar now compared to when she had begged for Mel's. She had been excited by the new world Mel offered her and also terrified of it and him. She had lived in a constant state of confused bliss then and while she admitted that she had loved him, it paled in comparison to the relationship she had with Stephen now. \n\n \"I can hear you thinking again,\" Stephen chuckled and smacked her ass lightly. \"It will be time to get up soon anyway so talk to me about what is going on in that busy little brain of yours.\"\n\n Bella turned her head to look at the clock and sighed softly. She leant up on one arm and ran her other hand over his chest. Would it make a difference if she told him that she wanted his collar, the real tangible one, now rather than after the memorial she wondered chewing her lip as she looked at him? He knew how she felt about him now. Their relationship had evolved and deepened rapidly into so much more than she expected. She knew she wasn't just a possession to him or a toy to be played with, why shouldn't she tell him that she was ready to commit to a future with him now rather than in a few days when she could be accused of being emotional and acting on that alone.\n\n \"Talk to me,\" Stephen said propping himself up on several pillows to half sit and pull her into his arms again. \"The dream was bad?\" he asked. He had been dreading the memorial and its effect on her. He dreaded losing her again to the dark pain that had crippled her for long.\n\n \"I was thinking about Mel again,\" she began quietly. This wasn't the perfect time or place she had planned in her mind but she tried to find the right words to say what she needed to in the best way to help him to understand that she was ready to beg his collar and that it wasn't a reaction to the dream or the memorial preparations. \"I'd known him most of my life, he was familiar and I trusted him because of that. He gave me a choice to beg for his collar but he admitted to me while we were in Italy that he wouldn't have accepted it if I had said no. He pushed me to accept it. I'm not sure I realised it at the time but I can look back and see now that I was thrilled and excited by what he had shown the na\u00efve girl I was then but I was also terrified and that's why I ran from him so often.\" Bella sat up looking directly at Stephen, wanting him to understand how differently she felt now.\n\n \"I mean I loved him, I truly did. He told me how much he needed me, wanted me, how special I was,\" her voice died off. \"I think I needed that from him, to know that he loved me and wanted me so much. I'd never felt that sort of obsessive desire before though and as much as I was excited by it, he also terrified me.\" She said guiltily. \"In the end, my excitement and curiosity about the lifestyle, a place where I could fit in and be myself are what made me beg his collar. I wanted to learn it all and experience everything he offered me.\"\n\n Stephen frowned but said nothing. He had known little of Bella before he had become her watcher down at the beach house during her recovery. The little he did know had come entirely from Mel himself. He listened as she continued to speak enjoying her honesty about what she was feeling about the upcoming memorial.\n\n \"He seemed to know what I needed and wanted instinctively and it was very overwhelming. I found myself doing things I would never have done without his pushing me to it. That first week before I took his collar was a type of introduction to this lifestyle. A week, that was it and I had to choose between Mel, the lifestyle my career everything I had at that time or return home to my parents having failed to make it in the city,\" she said softly. \"It was a strange time and I was so confused about everything except that I wanted to know more, do more and understand more and I loved him or thought I did.\"\n\n \"Your reaction after his death tells of how much you loved him,\" Stephen said becoming angry with Mel, what he did to her was against everything they preached to the new Masters at the club. Still he had known her for most of her life and perhaps there was more to what he did than she realised, it was a difficult time for her he acknowledged.\n\n \"Yes, she admitted I did love him. I am not sure I understood then what real love was, though. Love shouldn't make you feel scared or forced to perform. Love even between a dominant and submissive should still be caring and safe and honest and even tender,\" she looked up at him. \"I'm not saying this at all the way I planned in my head.\" She chewed her lip disappointed that she had made of mess of it.\n\n \"Sometimes talking is the best way to work through things. With Mel's memorial only days away it's understandable that all of these feelings are coming to the surface. You loved him deeply it's okay to be confused and uncertain right now,\" he stroked her hair.\n\n \"That's just it. I've never been more certain or clear-headed about anything,\" she turned to look at him taking in his handsome face. \"I love you. I love our life here, and at the Cove. I love that we both have demanding careers and manage to make it work. I love that you listen to me when I waffle on about the silly things that run through my mind. I love that I never knew that love could feel this way until you showed me,\" she took a breath enjoying his startled expression. \"I would love to wear your collar if you would still offer it to me.\" She finished lamely. \n\n Stephen stared at her for a long moment, and she chewed her lip nervously. He wasn't sure he had heard her properly and he was too stunned to risk asking her to repeat it in case he had heard her incorrectly.\n\n \"I know I should have said that kneeling at your feet and begging fervently for you to accept me but once I started talking,\" she shrugged and shook her head. \"I had planned to wait until after the memorial,\" she said quietly.\n\n \"I love you too,\" he said pulling her to him and kissing her softly. \"Stay exactly where you are he commanded nestling her head on his shoulder and picking up his phone.\n\n \"Nothing's wrong,\" Stephen smiled into the phone. \"Why would I worry about the time when I know you don't sleep,\" he chuckled as Kurt slowly calmed down. \"I need Bella to have the day off, it's important. I'll fill you in at the club tonight,\" He paused listening as Kurt brought up her schedule on his tablet and agreed to the day off while frowning at Bella as she gasped in shock. \"Great tell Rhys I'll owe him one for covering for her, thanks.\" He hung up the phone and grinned down at Bella. \"You and I are playing hooky today, get up and get dressed we have a lot to do.\"\n\n \"The sun isn't even up,\" she nuzzled into his neck confused by his sudden need to get up and move when he hadn't answered her. \n\n \"Not a good way to start after begging my collar, lucky I didn't just agree if this is the sort of behaviour I can expect.\" He smacked her ass but couldn't hide the grin on his face. \"Now up and shower and wear that dress your mother gave you when you got your car. We're going to take it for a drive.\"\n\n Bella got up and went to shower considering what had just happened. Had she messed it up so badly he was about to be punished? Maybe h just wanted to take her to the Cove and have her beg him properly. Several thoughts ran through her head but he kept urging her to hurry and she quickly got ready to leave.\n\n An hour later after a hurried breakfast, they were on the road with Stephen in the passenger's seat content to let Bella drive while he made a few calls. Bella loved her Sunbeam and was always disappointed that she didn't get to drive it more often. At such an early hour of the morning, the traffic was light and she made the trip in record time.\n\n \"Did you wear your lead boots this morning?\" Stephen laughed as he got out of the car and put his arm around her waist pulling her close.\n\n \"It not exciting unless you play a little with the speed limit,\" she blushed. \"I just love driving that car.\"\n\n \"You love a lot of things I have noticed, I am glad that I am one of them,\" he kissed her lightly and then hurried her through the abbey to his tower thankfully not meeting anyone along the way. Now that Anissa and Thomas had moved into the farmhouse and the workers were now housed in that part of the estate he and Bella had the living areas of his home to themselves mostly. The rooms closer to the main house would be used by staff in the future, when the guest rooms were finished and available to people wishing to stay but, for now, they lay empty.\n\n \"I had always imagined that if you begged for my collar that you wold ask me here, in the great hall or the garden, maybe even on the rooftop at sunset,\" Stephen said as they descended the stairs to the dungeon. \"You took me by surprise this morning, and that is not an easy thing to accomplish,\" he chuckled lightly unable to stop smiling despite himself. \"It never occurred to me that you would present yourself with sleep-tussled hair and wrinkled sheets covering your beautiful body while offering it to me.\"\n\n \"I'm sorry,\" Bella blushed and allowed him to help her remove the dress. \"I wasn't thinking about that part of it at all.\"\n\n \"I realise that you had not planned it that way or at that time but it gives me the opportunity to bring you here, to my domain and have you beg me properly,\" he said. He turned and went to sit in the large wooden throne-like chair that dominated one corner of the room. Bella watched as he removed the arm from one side and withdrew several boxes, one long and thin and she smiled realising why he had not answered her back at the apartment and felt silly expecting him to just produce a collar on the spur of the moment in her bedroom. Sitting in the large chair, he looked bigger and more imposing than ever and she walked slowly to stand before him and sink into a kneeling position.\n\n \"This is what you asked for so eloquently earlier,\" he opened the case and held it before her. Small gold ingots barely an inch in length, were held together by small rings at each corner to form the chain of the collar. On the central ingot standing out in platinum relief were the crossed swords of his crest behind a stylised heart shape sculpted to perfection. Each of the other slim ingots were finely engraved with similar images but included floral decorations as well. It was beautiful and Bella looked up considering the man who offered it to her. A man she had come to love as she had no other.\n\n Bella, having made the decision sometime before that she would beg his collar, even if she hadn't planned to do it quite as soon as this. In preparation, she had sought out the quote she had used the first time when she begged Mel's collar. Diane had given it to her then and she liked it even more now. She had changed a few bits to make it fit her new love and she willed herself to start speaking as she gazed from the collar up to Stephen's face. He had stopped smiling and seemed to be considering her seriously as she took long moments to gather her scattered thoughts.\n\n \"Loving someone as I do you is not just about what is going on in my heart but my mind as well. I can see clearly how our life is now and how it will be in the future. I accept and want that and everything that comes with it. I will be true to you, whatever the pain, because not loving you would be a pain much greater,\" she paused and swallowed nervously as she voiced her choice to be his.\n\n \"I choose a man who compels my strength and makes enormous demands on me. I choose one who does not doubt my courage or my toughness or, believe me, naive or innocent. I choose a man who has the courage to treat me like a woman.\" Her voice started to break in her anxiousness to speak with her heart as well as her head. \"I accept and understand who you are and what you ask of me and I offer you the gift of my submission and trust you to cherish it and hold it close to your heart. May I please wear your collar My Lord to show all others that I belong to and with you always.\"\n\n \"I am not such a fool as to wait for a second longer,\" Stephens smile appeared again and he took the collar from its box and secured it about her throat. \"Mine,\" he growled deeply and pulled her up by the collar kissing her fiercely. Here was the perfect place and with the sight and sound of her in his dungeon, begging his collar he gave rise to his dark need to dominate her right there and then. He pushed her back from him catching her by the collar alone, trusting in the maker for its strength. \"That is not the only jewellery you will wear for me today,\" he dragged her behind him to a bench on the far wall and opened a drawer taking out a glittering gold chain. \n\n \"You chose this, you begged for this life because you are a pain whore, a fuck toy and you want to serve my sadistic needs,\" he said darkly pushing her back onto the bench to lie at his waist height looking up at him. Hold onto the legs of the bench with both hands and do not let go,\" he instructed as he pinched her nipples hard, twisting them painfully to hear her whimper and yelp. \"You knew what serving me would entail, and still you embraced it and begged for it,\" he continued to speak as he clamped both of her nipples with the gold chain. \n\n \"Yes, My Lord,\" she whimpered feeling her eyes well with tears already as she felt his hand force her legs wider and after a moment of fondling the cold metal of the clamp surround her clit. She cried out and blinked the first tears to her cheeks, and he yanked on the chain to test the firmness of the clamps. \n\n \"Fuck,\" he groaned and pulled her from the bench to kneel at his feet. Freeing his cock he tangled his fingers in her hair and brought her face to it giving her no time to play or worship it as he normally did he pushed it into her mouth eager for the release that had been building since they had woken up that morning. He stared down at her turned on all the more by the tears and drool that fell from her face as she gurgled trying to keep up with his thrusts into her mouth. He went deep and held her head tight to his pelvis until she bucked with the need for air and pulled her off his cock reefing her head back to look down into her face as she gulped in large breaths. The sight of her messy and tear streaked undid him and he fisted his cock unloading jets of cum onto her face to mix with the tears and drool.\n\n Using one hand still tangled in her hair, he pulled her to her feet and released the clamp on her clit making her howl for him as he quickly shoved two fingers into her slippery wet cunt. She shook in her need as he pumped his fingers roughly in and out of her.\n\n \"Beg me,\" he growled, \"beg to cum on my hand.\"\n\n \"Oh god,\" she sobbed breathlessly, \"Please let me cum, I'm a whore, a slut a fuck toy anything you want, please My Lord, I need to cum,\" she begged her body shaking with her need. \n\n \"Come then pain whore,\" he rammed his fingers into her hard and held tight to her hair as she arched and jerked in an erotic dance on his hand. When she had almost stopped shaking so hard, he grinned and pulled his hand from her wiping it over her belly and under her breasts roughly knocking the clamps still holding to the soft pink buds tightly.\n\n Looking into her wet messy face, his still erect cock harden impossibly, and he dragged her through the crowded dungeon to the stocks and placed her head and arms securely into the padded holes then kicked her feet apart. His belt whistled through the loops of his jeans and immediately cracked against her ass. Kicking off his jeans and freeing his cock entirely he used the belt twice more while lubing his cock. ",
        "He eased his cock into her ass slowly, while he enjoyed her pain he didn't want to damage her beyond repair. Once fully embedded he gave a few slow thrusts before leaning forward to unclamp her nipples and begin to fuck her hard. Turned on by the sight and sounds she made he held tightly to her hips and fucked her hard so she would feel it for the rest of the day along with the bright red welts across the cheeks of her ass.\n\n As he felt his climax approaching he curled a hand around her hip and teased her bruised and swollen clit to bring her to climax as he withdrew and emptied his cum all over her back and ass. Perfect he muttered as he flipped open the cross bar on the stocks and let her collapse to the floor with him. \n\n They lay there for some time before he groaned and got to his feet pulling her up beside him. \"You are so beautiful like this,\" he ran a finger over a wet track on her cheek. \"You are the most amazing woman I have ever known. You are every inch as much a lady as you are a needy slut and I adore you.\" He smiled softly his hands gently gliding over her breasts. \"While I think you look delectable like this, I am not sure the greater public is ready for this look just yet,\" he grinned. \"Go up and shower, I will clean up and be up there in a minute,\" he smiled. \n\n \"Thank you, my lord,\" Bella said softly and started up the winding staircase filled with the pleasure of being his for now and always.\n\n \"We have a lot of distance to cover today so you will need to be faster than that,\" he said catching up to her as she reached the upper level of his bedroom and bathroom and smacking her ass.\n\n *****\n\n \"Why are we here again?\" Bella asked pulling into her parent's driveway. They had arrived back from their trip a few days before to support her at the memorial for Mel. \n\n \"I forgot to give your father back his keys,\" Stephen said easily. \"Don't worry so much I am hardly going to tell them I have collared their daughter and plan to use her as my personal sex slave,\" He chuckled at the wide-eyed expression she turned on him.\n\n \"Bella baby,\" Rosie came bustling out of the house opening her arms before Bella could even get out of the car. \"It's so good to see you I know we just saw you but it feels like too long already. Have you eaten, it's passed lunch time?\" she barely paused before answering her question. \"No, of course, you haven't come inside I have made something nice for lunch,\" she wrapped her arm around Bella's waist taking her inside. \"You too Stephen, a big man like you, needs to eat,\" she said decisively.\n\n \"Let the man get out of the car first Rosie,\" Joe chided her and offered Stephen, his hand. \"Good to see you again. Unexpected but good,\" he tilted his head in an inquiring way.\n\n \"We can talk after lunch,\" Stephen said easily. \"Oh and I forgot to return your keys to you, they came in handy, thank you.\"\n\n \"Hang on to them, it's good to know there is a spare set where Bella can find them if she needs,\" Joe waved away the keys. He liked Stephen and trusted him to do the right thing with both the keys and his daughter. \"I just got a new toy for the shed. I don't suppose you'd have the time to look it over with me after lunch?\" Joe invited hopefully.\n\n \"Maybe just a quick look,\" Stephen chuckled, \"We are just doing a flying visit that happily coincided with lunch. I'm starving,\" he said as he entered the kitchen much to Rosie's delight.\n\n They chatted about the trip to Italy and Bella's business as Rosie fed them with oversized portions of lasagne. Once they had finished eating Rosie began clearing the table, and Stephen stopped her clearing his throat nervously.\n\n \"If you could leave that for just a moment, please Rosie,\" again he cleared his throat. \n\n Bella had never seen Stephen nervous before or heard him clear his throat in such a way. He was always quietly confident in everything he did, and she looked at him curiously while her mother sat back down at the table.\n\n \"Bella has given me a reason to believe, hope might be a better word, that she would accept a proposal from me, and I would like to ask your blessing,\" he cleared his through again. \"What I mean to say, Joe, is could I please have your daughters hand in marriage,\" he placed a small ring sized box on the table.\n\n Joe looked at his daughter, surprise and shock written all over her face. \"Bella,\" he said and when she didn't turn to look at him, he tried again. \"Bella?\" he touched her arm lightly, and she turned her stunned look on him. \"is this something you want?\"\n\n Bella nodded having no words. This was the last thing she had expected today, girls like her didn't get married they got collared, she was speechless. \"I do, I really think I do,\" she said breathlessly.\n\n \"That's good enough for me,\" Joe said leaning back in his chair happily, \"What do you think Rosie?\"\n\n \"Oh,\" she dabbed at her eyes emotionally. \"My baby's getting married,\" she waved her hands as if to fan herself.\n\n Clearing his throat yet again, Stephen stood and moved around the table to where Bella sat and turned her chair to face him. Getting down on one knee he looked into her eyes and asked softly, \"Bella Lucia Biancotti, will you marry me?\" He opened the small box he held displaying a beautiful diamond engagement ring.\n\n \"I never dreamed... I didn't think... Yes,\" she said finally through her swirling emotions. \"Yes, I will marry you.\" Stephen wrapped his arms around her and kissed her softly.\n\n \"Oh Joe,\" Rosie sobbed dabbing at her eyes with a napkin, \"he's such a nice boy.\"\n\n \"This will be the only time you find me on my knees at your feet,\" Stephen murmured into her ear making her giggle.\n\n \"We'll have the engagement party here just like we did with our anniversary,\" Rosie said excitedly. \"You men go and tinker with that silly car and Bella and I can work out the details,\" she shooed the men out to the shed and asked Bella to help her clear the table. \n\n \"Don't get carried away my love, I am sure they have their friends and Stephen's family to consider, and we are a long way from the city,\" Joe warned in a stern voice.\n\n \"I thought that the old abbey down near Sanctuary Cove might be a good spot for the wedding, but it would work for an engagement party if you have your heart set on one,\" Stephen suggested smiling at Rosie.\n\n \"I know the place, it was a bit run down the last time I went past it, a few years ago now,\" Joe frowned trying to remember something important about the Abbey.\n\n \"Its undergoing big renovations, I believe that its main drawcard will be to host weddings and the like, it's quite beautiful down there looking over the cliffs, especially at sunset,\" Stephen tried to allay Joe's worries. \"Why don't you drive down and have a look sometime.\"\n\n \"Sure I'll contact the owner, see if he minds,\" Joe agreed still trying to remember why the abbey seemed so familiar.\n\n \"No need just give me a call, I'm available most days to show you around the abbey,\" Stephen said helpfully.\n\n \"Ah yes, that's it, I forgot, the Abbey of the Cove or the Brotherhood of the Cove,\" he rubbed his head still suffering from jet lag days after the big flight home. \"Bella isn't that where...,\" he bit off he words realising too late the connection between the abbey and the charity Bella wanted to support anonymously. \"Right,\" he nodded as it all came back to him a fraction too late, \"You own that place don't you? I'm sorry still suffering a bit of jet lag I'm afraid,\" Joe tried to recover from his gaffe.\n\n \"I see,\" Stephen said looking at Bella with a raised eyebrow. \n\n \"Vince left me so much, and I didn't want or need it, so I had Dad make donations to several charities I knew did good work,\" she said quietly. \"He looked into each one and made the donations anonymously so that I was wasn't pursued for further donations by all of the charities I chose. Yours was one of them.\" She admitted honestly. \n\n \"In that case I would be doubly interested in having you come down and look around at the work we do there,\" Stephen wasn't sure how he felt about the fact that she had not told him about this earlier and possibly wouldn't have if Joe had not accidently mentioned it. \"I am there most mornings or Bella and I often travel down on the weekends if that is easier for you,\" he added.\n\n \"Not this weekend,\" Bella added quickly seeing her mother about to seize on the opportunity to see more of her daughter. \"We have booked you into that hotel you stayed in the last time Stephen invited you to the city.\"\n\n \"Oh I thought we would stay with you again like last time,\" Rosie said crestfallen. \"You will need us close on such a sad occasion.\" She closed the distance between them hugging Bella to her.\n\n \"Now, now, my love,\" Joe said sternly, \"She has someone who loves her to look after her when it is over. It is enough that we will be there.\"\n\n \"I will be fine Mum,\" Bella smiled at the familiar phrase her father used often on her emotional mother and felt her mother disengage the crushing embrace. \"I am expected to attend a private wake after the memorial held by some of his business associates, and I don't want you cooped up in my apartment with nothing to do but clean out my closet or something.\"\n\n \"We had a very romantic evening the last time we stayed in that hotel,\" Joe winked at his wife who giggled and blushed. \n\n \"Go on to the shed, then you two and let us clean up this mess,\" Rosie began picking up plates from the table her flushed face reminding Stephen of Bella's constant blushing and making him smile with affection for the older woman.\n\n \"You're a lucky man Joe,\" Stephen clapped him on the shoulder, \"I can see where Bella gets her beauty from.\"\n\n \"Funny, I was about to tell you how lucky you were,\" Joe laughed and led the way to his shed.\n\n They stayed another hour at her childhood home in which time she and her mother marvelled at her ring time and time again and talked about possible ideas for an engagement party. They left in a flurry of hugs and kisses and promised to spend at least a small amount of time together before the memorial.\n\n Bella began driving back to the city but each time Bella moved her hand she stared in wonder at the ring nestled on her finger. Girls like me don't get engagement rings she kept saying to herself thinking of the gold collar that now lay about her neck. Distracted beyond belief after the first few kilometres by the diamond catching the sun and glittering brightly as she gripped the steering wheel she pulled over at a small service station.\n\n \"Could you drive please, Sir Stephen?\" she asked quietly preferring to let him drive her car rather than consider taking off the ring. He turned to frown at her in confusion as she undid her seatbelt. Seeing his expression she placed her hands back on the steering wheel and looked at the ring. \"It's so shiny and pretty in sunlight, I can't concentrate properly on the road,\" she smiled softly.\n\n \"You can take it off if you like, for the drive back, I have the box,\" he offered with a chuckle. \"We may have to go through the collaring and engagement scene again for your guardians tonight, but the most important people needed to know first.\"\n\n \"No!\" she snatched her hand back from the wheel cradling it in her other hand against her chest making him chuckle louder. \"Girls like me don't get rings like this. We get collars,\" she verbalised her thoughts. \"Why?\" she whispered, turning to look at him. \"Why propose? I would have honoured your collar without this,\" she extended her hand gazing in amazement at the ring.\n\n \"I love you,\" Stephen said simply, \"I want to share that with our vanilla friends as much, if not more than I want to share it with the people in the lifestyle,\" Stephen said. Leaning over to hold her hand and twist the ring on her finger. \"I want us to build a life together that includes both worlds and all that comes with it. You are correct that most girls in the lifestyle do not marry their Master's, but you might be surprised at who is married as well as collared. Did know that James married Dorothea very early on in their relationship.\"\n\n \"I didn't know that,\" Bella said considering what he had told her.\n\n \"I will drive back for you princess,\" he teased stepping out of the Sunbeam. \"Do we need fuel while we are here?\" He enjoyed the few occasions he had sat behind the wheel of her car. Joe was an expert restorer doing the research to identify and locate the original parts and accessories for each project he worked on. \n\n As Bella sat in the passenger's seat she considered having to go through a collaring scene similar to when Mel had collared her. It seemed so long ago now and she had almost forgotten how she was introduced to Mel's friends by begging his collar in front of them, followed by her introduction to club patrons within a golden cage. She'd never seen or heard of any other collaring like that since then and she wondered what would happen tonight when they faced Rob and Kurt. By the time they pulled into the parking garage she felt almost sick with worry and she sat in the car twisting the ring on her finger while Stephen held the door open for her.\n\n \"Come on little one,\" Stephen chuckled, \"You can't stare at the ring all night,\" he chided her not understanding why she hadn't moved from the car. It was only when she looked up that he saw the worry in her eyes, and he pulled her up into his arms and walked without talking to the elevators.\n\n It wasn't until they got to the apartment that he spoke. \"Placing her on her knees before him as he sat in a large comfortable armchair he looked at her and felt his own anxiety about the worry in her expression and the way she had been twisting the ring.\n\n \"Tell me,\" he said with more of an abrupt tone than he had intended to, bringing her head up to look at him.\n\n \"Will you want me to beg in front of everyone like Mel did and then blindfold me and put me in the cage like Mel did?\" She said in a rush having thought about it for some time. \n\n \"No,\" Stephen said evenly. \"Mel was a big man with a big personality. He ruled both the club and his company and had almost a rock star status amongst the lifestyle community. He and Rob had given people a safe to indulge their lifestyle and their fantasies, and he was to most people larger than life. When he finally took a girl for his own it was a big deal and being the showman he was; he gave them a show.\" Stephen said and watched as she chewed her lip thinking about what he said but sensing that she was still worried he continued.\n\n \"I have never invited such scrutiny of my personal life. I enjoy having my home and friends far removed from the club and its regular patrons. Had I not taken you there I doubt even Rob would have looked at the Abbey close enough to know what I did there,\" he said considering it as he spoke. \"We might need the formality of re-enacting your collaring for Rob and Kurt because they are your guardians and their roles in your life will change now and it is the right thing to do, just as asking your parents' consent to marry you was the right thing to do. Old fashioned maybe but the right thing non-the-less.\"\n\n \"I understand,\" Bella seemed to finally let some of her anxiousness go and smile at him. \"I think it would also be the right thing if we told Dorothea before the rest of our friends,\" she said thoughtfully.\n\n \"I agree,\" he said checking his watch but not elaborating. \"Now you have about thirty minutes to get ready. \n\n \"Yes, my Lord,\" she stood and hurried to her bedroom. She stood in front of her closet considering all the clothes she owned. Stephens preference for corsetry narrowed her choice somewhat but she wanted to look particularly lovely for him tonight and she rifled through several things. She pulled out a cream coloured corset made of a shimmering translucent material, the whalebone partially hidden by strategic beading. With it were a matching beaded G-string and a diaphanous skirt that wrapped around to secure in the from where it was as short as a micro-mini but cascade around her thighs to be almost full length at the back.\n\n Once she was ready, she looked at herself in the mirror and wondered if the outfit was too over the top for a weeknight at the club. It was too late to do anything about it now she thought and went out into the living room where Stephen waited. He too had changed and looked elegantly handsome in his black shirt and tie. He had traded his usual suit pants for leather and Bella quivered longing to touch them as he stood to approach her. Feeling less worried about being over-dressed she stood still as Stephen tightened the lacing of her corset to his liking and murmured in her ear, \"You look beautiful my little princess of pain,\" and squeezed the bare cheek of her ass beneath the fall of silk until she whimpered softly.\n\n Stephen groaned and stepped back leading her from the apartment and down to the club. He knew Kurt had already arrived and that Dorothea had also arrived for an early dinner with Charles and Sera. They girls in the foyer had texted him after each arrival as requested and even though he knew he had their approval he did not like being in the spotlight as he knew he would be tonight with the news that he had collared Bella. He called Theo as the entered the elevator.\n\n \"Could you have Mrs Brown meet Rob and Kurt in his office? I will be there in less than a minute,\" he said stiffly in his deep bass making Bella look up at him. \n\n \"Dorothea is here?\" Bella squeaked in happy surprise.\n\n \"It is only right,\" he smirked repeating her words back at her.\n\n They walked into Rob's office, having quickly passed through the foyer and salon bar to find Kurt fussing over Dorothea. He had taken the news of her condition worse than anyone had expected and when he had tried to insist that she have the surgery and possibly prolong her life he had met with disapproval from everyone else who defended her right to choose her fate.\n\n \"Bella has begged my collar, and I have taken her as my own,\" Stephen said without preamble, neither asking their permission nor inviting any argument.\n\n \"Well it's about fucking time,\" Rob said leaning back in his chair. \"You'll understand that we need to hear it from her, though, formality and all being her guardians.\" He chuckled. \"Kurt stop fussing like an old man and get over here,\" he grumbled.\n\n \"Seriously,\" Kurt said in a dry voice, \"Fussing like an old man? You couldn't have come up with a better insult that that?\"\n\n \"Well I could, but I didn't want to offend Dorothea,\" Rob smirked sheepishly.\n\n \"Alright let's hear it, little one,\" Kurt looked at her expectantly. \"Why did you finally beg the big oaf's collar?\n\n Bella burst into a fit giggles, taken aback by the jocular mood after worrying about the event so much all afternoon. She contemplated what she wanted to say as she had that morning and now faced with a more informal discussion rather than having to re-enact the begging process she couldn't find the words. \n\n \"I loved Mel,\" she began, \"but I think I was more in love with who he was and this new world that he wanted to share with me. We had such a short time together as a couple that we never got to explore those other things that deepening feelings beyond that initial attraction. I think coming up to the memorial that I realised that the love I felt for Mel though very real was based on the adrenaline I felt when I was with him. It was such a fast-paced thing fuelled by excitement and fear.\" She paused and swallowed being as honest with them as she was with Stephen when they lay in bed talking in the dark of the early morning.\n\n \"I am not sure I understood then what real love was then. Love shouldn't make you feel scared or forced to perform. I have never once considered running away from Stephen as I did so often back then.\" She blushed deeply but carried on regardless.",
        "\"I love him,\" she said simply. \"I love our life here, and at the Cove. I love that we both have demanding careers and manage to make it work. I love that he listens to the silly things that run through my mind and takes them seriously, even acts on them,\" she turned to face Dorothea, \"Like having you here for this.\" She smiled, \"I want this, I know the timing is bad with the memorial, but I am not acting on impulse or emotion about that. I'm am surer than I have been about anything since, well for a long time.\" She touched the collar at her throat and smiled. \"I am ready to commit to this and a life with Sir Stephen.\"\n\n \"Good enough for me, but,\" Rob said with a grin, \"You know there is always a but,\" he chuckled.\n\n \"As your guardians,\" Kurt continued for him, \"It is our place to protect you from gold diggers and scoundrels like the good Sir Stephen so we will need to have a longer conversation about your portfolio, particularly in light of that rock you have attached to your finger.\"\n\n \"Well fuck me,\" Rob whistled. \"Nice pick up there.\" He congratulated Kurt.\n\n \"My god when did you two morph into Tweedledee and Tweedledum,\" Dorothea exclaimed and stood up going to Bella and hugging her. \"I am so happy for you, let me see the ring!\"\n\n Stephen had said nothing during the whole exchange, but when Bella looked up at him, he wore a smile and did not seem unhappy about being called a scoundrel by Kurt.\n\n \"You've done well, Sir Stephen. Congratulation,\" Dorothea said with feeling as she moved to embrace him as well.\n\n \"I thought so,\" Stephen chuckled. Reaching out a long arm and pulling Bella to his side. \"Why don't you two beautiful ladies go and ask Charles to order some champagne to celebrate while I make sure Tweedledum and Tweedledumber spell Gold-digging scoundrel right on the prenup,\" he laughed. \n\n \"That's a bit unfair,\" Rob said with a smirk, \"Come here little Brat.\" He held out his arms to her. \"I couldn't be happier for you.\" He pulled her into his lap and kissed her. Kurt too picked her up and embraced her tightly.\n\n \"You realise how many girls will want one of those now too,\" he picked up her hand and looked at the ring she wore. \n\n \"Let's go order that champagne so the men can talk about how lucky Sir Stephen is,\" Dorothea took her hand and the went out into the restaurant.\n\n Bella and Stephen remained in the restaurant all evening entertaining a variety of guests who sat with them at times including most of the stakeholders and their girls who oohed over her collar and ring. By the time, Stephen finally took her upstairs to bed she was exhausted and fell asleep as soon as her head touched the pillow.\n\n Stephen stroked her hair back from her face revealing his collar and smiled. This girl was everything he had ever wanted in a submissive and life partner. She was his world and if they could get through the memorial, this weekend he knew that everything else would be plain sailing. \n\n *****\n\n Bella sat quietly between Stephen and her father in the front row of the memorial for Mel. The event was held in the function room of the Marcol building and was attended by invited guests only. While the crowd was quite large, there was also an intimacy in the room because of a shared need to acknowledge the man who had left such a legacy in his wake. Right up until the moment, she stepped onto the stage Bella had not known if she would speak at the memorial. She hadn't felt brave enough or worthy enough to face the people who knew him so well, loved him and respected him. It was as she listened to one after another of his friends and associates speak of the tragic accident that she decided to tell her story.\n\n Standing before the sea of faces she smiled shyly. \"I would firstly like to publically acknowledge that without the strength and kindness of one man here today, I may not have been here myself. I hope that at some time in those dark days follow the incident that I thanked him properly but here and now I would like my family and friends to know what Leon Watt did for me and thank him for being there when no one else could have been.\" She paused and a rippled murmur of surprise ran through the crowd and smiled at the man who obviously shared their surprise at her words.\n\n \"As I have listened to so many people today I realise that there is little understanding of the actions of some very brave men, so I have decided to tell you my story, and if Leon wouldn't mind, I could use his support again right now.\" She looked at him and seemingly unsure of himself he stood and made his way onto the stage. He stood partially behind her, close enough that she could feel him there and placed a hand on her shoulder.\n\n \"I know that it is easier to refer to Mel's death as an accident, I use the word incident more often than not but it is time we acknowledge that his death was no accident. It was murder. Premeditated and vengeful murder.\" Bella began with what had caused her to stand up on the stage in the first place.\n\n \"I cannot say exactly what led to the cold-blooded shooting that occurred on that lonely road a year ago only that it occurred unexpectedly for Mel. A tree had come down on the road and Tony our driver had stopped the car as we came around a bend and almost crashed into it. I didn't understand what the noise was when Mel dove over me and pushed me to the floor of the car shielding me with his body. I didn't understand why I was wet and sticky with blood but felt o pain. I couldn't fathom why Mel wasn't moving, even when Tony had opened the door with his gun in his hand and told me to stay down. I know now I was in shock and the heroic actions of both Mel and Tony, who drove for such a long time with mortal bullet wounds need to be acknowledged, for both of them acted heroically that day and saved my life.\" Once again she paused and looked out at the sea of faces who hung on her every word. The real story of what happened having been buried under rumour and myth for some time.\n\n \"I had thought the muffled voice I could hear was Tony talking to Mel but he had called Leon who immediately swung into action. He was there when we got to the hospital. I remember him pulling me from the car before the doctors and nurses took me from him. I remember seeing them pull the unconscious bodies of Tony and Mel, the men who had risked everything to save me, from the car, before being wheeled inside. Through all of that, the thing I remember most is the hand that never let go of mine. Leon never left my side even when I ran like a mad woman through the hospital searching for Mel and finding him in intensive care.\" She swallowed and her tears glistened unshed in her eyes as she remembered that horrible sight.\n\n \"Each time I woke from a drug-induced stupor he was there, holding my hand until Rob Collins arrived and brought me home to my family and friends. The one tangible thing I had there, this hand,\" she patted the hand on her shoulder, \"Kept me from going insane, kept me safe and kept me alive. I am forever grateful to this man and while we are here to remember Mel, we should also celebrate those hero's among us who do amazing things every day just by being themselves, people who make a difference every day to the world around them just like Mel did, but without the fanfare.\"\n\n \"I know you would have saved us all if you could have, but you saved me, and I will be eternally grateful to you for that.\" She turned and kissed his cheek embracing Leon. Then they walked off the stage.\n\n \"I had no idea you felt that way,\" Leon said as they moved slowly back toward their seats. \n\n \"I know, and I am sorry it took me this long to tell you,\" she gave a half smile and embraced him again. \"You couldn't have stopped what happened, or saved Mel but what you did for me was beyond anyone's expectations. You saved my life, and I would like us to be better friends now that I can look at what happened and not feel so afraid.\"\n\n \"I would like that too,\" Leon smiled for the first time, his guilt over the whole incident dissipating slightly with her story. He knew that she had avoided him and he had hated the thought that she associated him with not getting to them quick enough in Italy to make a difference or that his outlandish public playboy persona at the club had caused her to think badly of him in the months following the incident.\n\n \"I'm glad because I think my parents and maybe a few other people might want to meet you after that,\" she laughed lightly. \"I'm am sorry that I left it until now to tell you, but I haven't been ready to think about it clearly until recently.\"\n\n At the end of the memorial Rosie and Joe did indeed seek out Leon and thanked him for his role in saving their daughter. \n\n \"You must come to dinner,\" Rosie insisted, \"Tell him, Joe, he must come and eat, I will cook anything you like. I'm a good cook,\" she said to convince him.\n\n \"Now, now, my love,\" Joe put a restraining arm around his wife's waist. \"Let the man answer before bombarding him,\" Joe smiled and added, \"Yes, I am afraid you must come to dinner.\"\n\n \"I would like that,\" Leon agreed, \"Perhaps I could come with Bella and Stephen.\"\n\n \"Perfect,\" Rosie gushed. \"I will go and see when they are available,\" she walked off in their direction before Joe could stop her. \n\n \"Tell me,\" Joe said conversationally as they walked toward the exit with the remains of the guests. \"Do you like vintage cars?\"\n\n \"Not the old ones so much, I like cars with a bit of grunt,\" Leon grinned. \n\n \"I've just started restoring a 1967 Mustang,\" Joe said testing the waters.\n\n \"Eleanor,\" Leon whistled.\n\n \"I think you and I are going to be great friends,\" Joe laughed slapping him on the back. \"You know I restored that little Sunbeam Alpine Bella drives?\"\n\n \"Very nice,\" Leon approved. \"I wouldn't mind seeing your workshop sometime. Have you ever worked on James Bond-type car? You know gizmos for shooting flames and hidden gems in the hubcaps.\"\n\n \"Oh no, not another one that likes to tinker with cars,\" Rosie said approaching them.\n\n \"A man's gotta have a hobby,\" Leon said easily liking both Rosie and Joe very much. \"We'll talk more about the Aston Martin,\" Leon grinned. \"If you will excuse me, though, I have a wake to attend and it just wouldn't be the same without me.\"\n\n Stephen and Bella drove her parents back to their hotel before going on to the club where the wake was being held.\n\n \"You did well today,\" Stephen said as they pulled into the garage of her building.\n\n \"I was angry that they all kept calling it a tragic accident. It wasn't an accident. There was nothing accidental about it. I wanted to tell them that,\" Bella said softly. \"In all of my dreams about it I am trapped in that car, and I keep reaching out for that hand,\" she continued. \"I have been thinking about that hand a lot lately,\" she admitted. \"It was time that I thanked him properly for being there.\"\n\n \"You did well,\" Stephen repeated helping her from the car. She was surprised when Stephen took her up to her apartment rather than the club and she looked up at him inquiringly as they exited the elevator.\n\n \"It's more of a man thing downstairs,\" he opened the door for her, and she was surprised to see her friends including Belinda and Gian all sitting in her living room and chatting happily.\n\n \"Thank you, my Lord,\" she said quietly and kissed him. \n\n \"I trust you girls will all be well behaved tonight,\" Stephen said in a serious voice then left them to their wake while he went down to join the men in Rob's office.\n\n *****\n\n Dorothea's health continued to deteriorate and to ensure she was present for the wedding Stephen hired more tradesmen and landscapers to push ahead the restoration of his abbey in record time. It had put a substantial drain on the Abbey's finances, even with the huge donations that had come from Kurt and the company. He knew that holding events at the Abbey would make back far more than he paid out in the long run, so he forged ahead with their plans.\n\n Bella had cancelled the originally planned engagement party much to her mother's distress and had begun to plan a wedding. Or rather as a consolation she introduced her mother to the Wedding co-ordinator at the Abbey and allowed her mother to organise her wedding with the stipulation that she gave Bella choices and that Bella chose her own wedding dress.\n\n Bella was happy and despite the frantic pace of their lives, she and Stephen had made everything work for them. As Anissa had predicted, more of an overlap occurred between the Brotherhood of the cove and the Gorean men. Even Mike Millar became a frequent visitor participating in the most recent battle between the Brotherhood of the Cove and the Knights of Stowe. With the medieval festivals and battle days being such a huge success word quickly spread and as the interior renovations came to an end he hired more promotions staff to handle the traffic on the Abbey's website and promote its availability through the wedding shows and events marketing days. \n\n \"Are you happy?\" Stephen asked as they stood on the top of his tower watching the sunset. \n\n \"Deliriously,\" Bella laughed and turned in his arms to kiss him. It was the first weekend that they had been at the cove entirely alone in some time. The Abbey's interior was now complete with the new bed and breakfast room upstairs and the domed library restored to its original glory. The entrance foyer and the grand staircase were the stuff of fairy tales and the banquet hall ceiling was festooned with ribbons and strings of lights in the shape of small candles. Every detail in the castle like Abbey had been carefully placed, and it looked exquisite, nowhere more so than the chapel.\n\n The original tiny chapel had been expanded and lengthened at great expense, but again Stephen knew this was for the best in the long term, the pews were original for the most part, and the others had been purchased from similarly aged buildings that were upgrading to a more modern ethos. It was the stain glass windows though that Bella adored, each one framing a pious looking medieval knight or a saintly looking young woman in flowing robes. The colours of them poured into the chapel in the afternoons and gave Bella the feeling of walking through a kaleidoscope. \n\n After months of construction work, two medieval festivals and the ever present group of friends arriving on Sundays, Stephen had been frustrated in his need to be alone with his bride to be here in his home. After putting off all invitations offered or asked for by friends he had picked her up early from work and Friday afternoon and sped down to the Cove knowing that this would be their last opportunity to be alone there before the wedding and short honeymoon he had planned. He smiled as she winced while stretching up to place her arms around his neck.\n\n He had spent the last twenty-four hours satisfying his lust for his soon to be wife down in the dungeon and the walled garden confident that they were entirely alone. He groaned and pulled her tightly against him. \n\n \"Already?\" she murmured rubbing against his growing cock and purring. \n\n \"What do you mean already? It's been at least an hour,\" he chided her, and she grinned. \"I'm always ready when it comes to you,\" he bent his head to kiss her as his hands travelled over her nakedness beneath the blanket she held wrapped around her body. He swallowed the whimpers she emitted when his nails grazed over the welts lining her ass. \"I am not finished with you by a long way this weekend,\" he grinned. \"You have become far too cheeky lately, princess,\" \n\n Stephen had begun calling her princess when they had first started living together. It had always been Pete's name for her and he enjoyed using it when she was a brat. While Pete was more than happy that his brother was marrying Princess Bella he had not wanted to return for the wedding and change his plans to see more castles. He had toured extensively in Italy and Germany with Jarod and Sophie and was about to travel to Scotland where his sister lived with her husband and children. While disappointed not to have him home for the wedding Stephen also felt some relief. He wasn't good with change and the idea behind the trip with Sophie and Jared had been to avoid any distress when Stephen started the big interior renovations he had planned and their older sister had welcomed the opportunity to have Pete live with them for a few months.\n\n \"Okay enough torture,\" he said finally. \"If your teeth chatter any louder I might worry that they will fall out. Let's find some food and look at the wedding stuff your mother has sent for us to approve.\"\n\n Bella stopped in their bedroom and pulled on one of Stephens shirts rolling up the sleeves and letting it hang on her like a dress. When they were alone like this, she enjoyed being able to wear the comfortable oversized shirts that seemed to please him as much as the figure hugging clothes she wore every day.\n\n Bella went to the kitchen and considered her options for making them something sustaining to eat. Smiling she began to peel some potatoes. They had other people cook for them so often that when they were alone, he liked to keep things simple and she had introduced him to the joys of having typically breakfast foods in the evening. They discussed the plans and last minute changes while she made chunky hash browns, eggs and toast to go with the small steaks that had been left for them by Anissa, who still maintained the residential part of the abbey until Sophie and Jarod's return this week.\n\n Stephen picked up the folder that had been left for them and flicked through it scanning notes left by the wedding co-ordinator and Rosie. Stephen had very strong ideas about the wedding, and it was him that had worked with Rosie on creating exactly the wedding he wanted. The only thing he had left to Bella was her dress and that of her attendants after choosing a basic colour scheme and urging her to take the medieval theme into considerations. For a man used to being very much in control of all aspects of his world, working with Rosie had been difficult and often he had invited Joe to arbitrate on his behalf rather than deal with a dramatic outburst.\n\n \"I'm sorry about mum,\" Bella apologised again. When she had first cancelled the engagement party and moved the wedding to a closer date, she had offered her father an open chequebook claiming that she had more money than she could ever need or use. He had claimed that it wasn't necessary but as things blew out he understood why she had done it. Being Italian parents they wanted to give their daughter the best wedding possible, and Rosie argued constantly with Stephen over the fact that they would be paying for their daughter's wedding. His job she had informed him very early on was to take care of the bar tab and provide a wonderful honeymoon for her only child. \n\n \"Now that I have a few of your father's secret moves I quite like sparring with Rosie,\" Stephen chuckled. \"They only want the best for you and luckily for me, they agree that I am the best.\"\n\n \"Do they now?\" Bella laughed. She loved the fact that Stephen made such a big effort with her parents and had allowed Rosie to be so involved with a wedding he had obviously planned in his head the moment she had said yes.\n\n \"Do you think they would let you marry anyone who wasn't?\" Stephen pulled her into his arms and kissed her. \n\n \"Let me finish cooking, my Lord,\" she laughed and wriggled out of his arms. While strict protocols were observed in the club and with their lifestyle friends, so much of their time was spent with people, particularly here at the cove who, while not entirely vanilla, were less formal in their approach to dominant and submissive lifestyle. There was never any doubt as to Stephen's dominance of their relationship, but Bella had been able to relax and let more of her personality shine through. ",
        "Stephen watched her with a smile. Even he had been surprised by how wonderful their relationship had become once she had let go of all the fear and worry she had about serving and pleasing so many Masters. Rather than resenting the amount of time she spent at the company he appreciated her commitment and enjoyed the conversations they had over dinner about their days apart. Sex through the week though was never as satisfying as when they were here and even though they had come to eat and take a break his hunger for Bella was such that all he wanted to do right then was bend her over the bench he sat at and fuck her senseless again.\n\n He groaned and restrained himself secure in the knowledge that they would not be returning to the city this week. He had insisted that she take the week before the wedding and the three weeks following the wedding as leave from the company. He had been surprised when she had not attempted to voice some concerns about that the time away from her business. He flipped through the portfolio again knowing what it contained as he had monitored every aspect of the wedding ceremony and banquet. \n\n They had almost finished eating when there was a loud banging on the glass doors that led to the covered patios making Stephen frown and turn toward the darkness outside. \"Bloody Arek,\" he mumbled and rose to go and unlock the door. Arek pushed past Stephen and was followed into the room by Mike and Mark Millar, who stood either side of the big man. \n\n \"Don't you look adorable,\" Arek grinned at Bella and picked her up putting her on his shoulder and turning back to Stephen. \"There is just something infinitely sexy about a girl in a man's shirt and nothing else, nice choice my friend.\" He smacked Bella's ass as it sat over his shoulder grinning. \"Now as it I see it, you have two choices, SteelHart. You can fight off those two goons in which time I would have made away with your bride to be, or you can come and have a bucks party like every other red-blooded man and bloody well enjoy it.\"\n\n \"You fuck,\" Stephen growled and felt a hand fall onto his shoulder and saw Arek walking with Bella to the side door.\n\n \"So fight it is then?\" he stopped and asked. \n\n \"You can't expect me to leave Bella here alone,\" Stephen growled angrily. \n\n \"The girls will come in as soon as we leave,\" Mark laughed, \"We're not totally devoid of feeling.\"\n\n \"Fine,\" Stephen grumbled, \"Put her down.\"\n\n \"Good choice,\" Arek smiled widely. He placed Bella on her feet and took the shirt from her, \"You little princess have two minutes to run into that tower and find some clothes of her your own and some shoes for him.\" He threw the shirt she had been wearing at Stephen and popped her on the ass again pushing her toward the tower.\n\n \"Yes Master,\" Bella squeaked and ran into the tower. \"Thankfully Stephen had not stopped to take her luggage up to the bedroom before going down to the dungeon when they arrived the evening before, and she grabbed a dress pulling it over her head then she ran down to the dungeon grabbing their jackets and his shoes before returning out of breath to the living room. \n\n \"Not so fast,\" Arek stopped her from approaching Stephen, \"I'll take those for you.\" He took the shoes and jacket tossing them to his friend. \"She did well,\" he looked at his watch. \"My offer of a cart full of gold for her still stands,\" He smirked at the fuming Stephen.\n\n \"Save your money,\" Mike said lightly, \"Assassins have notoriously short life spans. Given a little time, you can assert your rights as best man.\" He managed to keep a straight face as Stephen obviously did not see any humour in the conversation.\n\n \"What's taking so long?\" Jack asked guiding Dusty, Nyx and Tali into the abbey. \n\n \"Shit,\" Stephen cursed. He had hoped that this was just a Gorean prank and that he would be able to leave as soon as they all got too drunk to care. Seeing Jack made him realise this was a bigger party than he had thought. He had specifically said that he did not want a bachelor party. \n\n \"It's a rare event to have a bachelor party amongst our friends I wasn't gonna miss it,\" Jack laughed reading the big man's mind. \"Shall we go?\" Resigned to his fate, Stephen let the men escort him out into the night. \n\n \"We're not having much of a party tonight but tomorrow morning we will. Lincoln is bringing Dianne down, and Charles is bringing Dorothea and Sera,\" Nyx informed her. \"They weren't allowed to come tonight, just in case,\" she rolled her eyes in the direction the men had walked in. \"So it's just us to keep you company.\"\n\n \"Just you is wonderful,\" Bella laughed embracing her friends. \"Your dresses arrived on Friday, Mum put them up in rooms you will be staying in,\" she said excitedly. \"Would you like to see?\"\n\n \"I'd like the grand tour first,\" Dusty said. \"I always see you in the city I haven't been down here since the renovations.\"\n\n \"Me either,\" Tali bounced about happily. \"I mean I have been here but not had a grand tour.\"\n\n \"We'll the best way to do that is to come in the front door,\" Bella laughed. \"Follow the path around to the front and I will run through and turn on some lights and open the door for you like the lady of the house.\"\n\n \"This isn't a house it's a freaking castle!\" Tali exclaimed.\n\n The tour as it turned out took most of the night as they inspected all the detail that Stephen had put into each room. Bella commented on how the chapel windows looked in the day time and the trouble Stephen had gone to find period furnishings. When they got to the domed library upstairs, Nyx declared she was moving in and that it would be her room.\n\n \"Oh they're beautiful I am so jealous,\" Tali said in a quiet voice showing her amazement at the red dresses with gold trim that Dusty and Nyx would wear at the wedding. They were done in a medieval style and while they had both had fittings for the dresses they hadn't seen them fully complete until now.\n\n \"I'm sorry Tali I could only have two bridesmaids,\" Bella felt guilt at her friends exclusion.\n\n \"Oh don't be sorry, Sir Stephen has given me a very special job on the day,\" she grinned. \"It's a secret though so I can't tell you.\"\n\n Bella laughed, \"Okay, I won't ask what it is then.\" She loved her friends so much. \"I have a secret too. I am not having the final fitting until Thursday but would you like a sneak peek at my dress?\" she asked Tali but looked at all of them. She had kept it a secret from everyone aside of her parents and the designer. She opened a second closet and walked in removing a long garment bag and hanging it from a hook high on the wall. \n\n The pale gold material glimmered metallically in the dim light of the room as she opened the bag making Tali gasp delightedly. The heavy embroidery and multiple layers allowed for a great deal of embellishment and she smiled as she stroked over the beading of the tight bodice. \n\n \"I'm so glad it's not white,\" Nyx breathed. \"It's perfect for you and Stephen. Red is more my colour, but I guess you have done well there too.\"\n\n At the end of the grand tour, Bella led them back to the living area and found a bottle of wine for them to share. They sat comfortably on the couches and tried to guess where Stephen would take her to honeymoon.\n\n Dusty smiled slowly as she finished her glass of wine. \"I'm guessing Stephen has a private dungeon for you somewhere here, are you sure you gave me the full tour,\" her deep voice held a teasing note watching her friend blush deeply. \"What's in there?\" She pointed at the door to Pete's tower.\n\n \"That's Pete's tower, it's where he lives when he isn't off exploring the world,\" Bella laughed. \n\n \"So that means you live in the other one with the king of this castle,\" Dusty looked over her shoulder.\n\n \"I know where it is you can see the entrance from her secret garden,\" Nyx said in a stage whisper, and the two women looked at Bella. \n\n \"You can keep the dungeon,\" Tali wrinkled her nose, \"but a secret garden like in the book? Please Bella, please, please, please, I have to see it.\"\n\n \"Why don't you scamper off and find another bottle of wine and I bet we can convince her,\" Nyx grinned.\n\n \"I don't think, I mean well you surprised us tonight, and it's a bit messy down there,\" Bella said softly. \"I'd don't think you want to go there if you think about it.\"\n\n \"We don't care about a little mess,\" Nyx said as Tali came back with the bottle. \"You seem to forget who you are talking to here. Plus you don't want Tali to get all droopy and sad. It's not a pleasant sight.\"\n\n \"Oh alright but just a quick look as we pass through to the garden if you promise not to look at anything too closely or comment,\" Bella blushed a deeper shade of pink.\n\n \"I'm not promising any such thing,\" Nyx said, and Dusty nodded agreeing with her. \"I might not like the slave whip myself, but I get it if you're into that sort of thing,\" she shrugged.\n\n Bella flicked the switch lighting up the garden and led the girls into the tower. \"Are you sure you wouldn't prefer the view from the top it's quite spectacular,\" she offered.\n\n \"After we see the garden,\" Tali bounced on ahead down te stairs to the dungeon and stopped on the bottom step not moving, \"Holy crap!\"\n\n \"Oh God,\" Bella groaned and pushed past her moving to the door to the garden, \"Come and see the garden Tali, it's much nicer out there.\" Tali hurried through the crowded space, but the other two lingered a little longer before joining Bella in the garden.\n\n \"It's magical,\" Tali whispered sitting on the swing that hung from Bella's tree. The evening was cold, though, and they soon went back in hurrying through the dungeon and back up to the warmth of the living room. Having not slept for a couple of days and after drinking the wine, Bella dosed off on the couch as her friends talked around her. \n\n She woke up in the morning in the same position with a blanket placed over her and her friends also stretched out in the same room. She smiled, it had been so long since no one had been there to put her to bed and she wondered how Stephen was feeling this morning after his buck's night. \n\n \"So you're awake?\" Anissa asked from behind her as she sat up and at the sound of talking the other girls began to awaken.\n\n \"Oh breakfast, yes please Anissa,\" Nyx said softly. \n\n \"Go and shower and change before people start arriving,\" Anissa instructed. The caterers have been here for an hour setting up and prepping. \"This is why I don't drink very often,\" she groaned and stood up heading upstairs the bedrooms.\n\n Bella went into the tower and changed into something suitable feeling refreshed after sleeping so well. When she came back down her mother was there fussing over everyone and trying to take charge of the brunch she had only received an invitation to the day before. Nyx was having none of it and had forced Bella's mother to sit down and relax with a cup of tea and talk to the other guests saying that she and Dusty were in charge of this bridal shower.\n\n Bella had grimaced but joined the group of women in the marquee sitting for some time with her mother keeping her in her seat and letting Dusty and Nyx get on with the job of greeting guests and organising everything they had planned. She knew that this week her main job would be to reel in her mother's drama queen antics as the wedding approached and let Stephen handle any hiccups and the final details. She socialised with all of her friends grateful that Dorothea had made the trip down with Sera and Charles and rubbing Dianne's huge Belly making her promising not to go into labour during the wedding.\n\n By the time she saw Stephen again, it was well past lunchtime, and he looked as if he had endured a hard night. He avoided the marquee entering the Abbey and heading up to his tower by the side door. When he eventually reappeared an hour later he was immaculately dressed and looked exactly as he always did. Tall, handsome and in control. Once the men had begun to arrive the brunch that had turned into lunch began to drift apart, and many people left for the long drive home. \n\n Bella and Stephen had a simple dinner of leftovers and went up to their bedroom early. Stephen appeared exhausted to Bella's surprise, and she imagined that the men had made him endure a night where he had little control of his actions. He cuddled her into his body as they climbed into bed and for once he was the first to sleep.\n\n The week before the wedding went by in a blur of activity from dawn until late at night. Stephen seemed to spend more time with Arek than he did with Bella, who seemed to spend most of her time calming her mother's nerves and dealing with the daily drama of such a highly strung woman. Initially, Bella had been surprised by Stephen's choice of Arek as best man given their history during her training, but Stephen had laughed when she had first raised the question.\n\n \"In all that you know about the men of Gor did you think I would give you to someone that I didn't trust completely?\" Then he seemed to consider her for a moment and added. \"He's like the brother I never had in Pete, we argue, we fight, we've even come to blows more than once, but I trust him more than most people. He's a good man with a strong code of honour and I respect that. The fact that he is a little jealous that I have you is a bonus that I will flaunt, and he will grumble over until he finds a woman of his own.\" He smiled, but his voice took on a serious tone, \"Should anything happen to me, I know he would look after you and protect you.\" He could see the horror in her eyes and held her close reassuring her that nothing would happen and that it was just the role of a best man or second like Mel and Rob had given her.\n\n Arek teased and flirted with Bella mercilessly, even more so if Stephen was present but he had never stepped over the line with her since her time with the Gorean enclave and Bella knew that the love and respect Stephen felt was echoed by him. He was at the abbey constantly during the week before the wedding doing anything and everything Stephen asked of him without a serious complaint though he teased often about a large invoice he was writing for services rendered.\n\n When the day finally came, Bella approached it with a sense of relief that the craziness would be over, and they could once again live their lives as they had been blissfully wrapped up in each other and building their businesses.\n\n She had spent the night before her wedding in a room beside her parents on the upper floor of the Abbey. They had decided to have a late morning wedding so that Dorothea and others with similar issues could enjoy the lunchtime festivities and those that were so inclined to stay into the night and enjoy the wedding party and a buffet style dinner could party on without concern for disturbing the less robust guests.\n\n It felt strange after so many months to wake up alone in a large bed. She got up and looked out at the rising sun and smiled. It was going to be a beautiful day. She had possibly an hour before the chaos would begin and she felt at a loose end. Her mother's superstition of not seeing the bride the night before the wedding had rankled Stephen but he has acquiesced after her father had stepped in and for once come down on her mother's side.\n\n There was a quite knock on the door, and she turned toward it a moment before it opened quietly. Arek put his finger to his lips and slid inside the room closing the door behind him.\n\n \"Firstly I must tell you of the urgent need to skip this circus and elope with me,\" he grinned. \"It's your last chance to say yes,\" he chuckled when she shook her head.\n\n \"I would it's just that I happen to be in love with Stephen, strange as that may seem to you\" she giggled. \n\n \"You could learn to love me,\" he said in a parody of being mortally wounded. \n\n \"Oh but I do love you, it's just a matter of degrees that's all,\" she said still giggling.\n\n \"Oh well if you're determined to go through with this then you will need this,\" he grinned and presented her with a sapphire topped dagger in a leather case with a small strap. \"It goes around your thigh to guard your chastity. It's your something old, something new something borrowed, something blue. The fact that it has the additional bonus of surprising that big poser when he tries to feel you up later makes it perfect don't you think?\"\n\n \"Borrowed?\" She asked.\n\n \"Well yeah, I'll be taking it back at some point tonight. Having me feel around under your dress will annoy him just the right amount,\" he smiled evilly. \"Can't let him have all the fun now can I?\"\n\n \"I already have a garter,\" Bella laughed.\n\n \"So put this on the other thigh. Come on, let me have one last dig at him before you two turn into frumpy old married people,\" he said with a note of disappointment that she did not think the idea was as funny as he did. \n\n \"Fine,\" she agreed with a laugh, \"but you are taking full responsibility for this.\"\n\n \"I wouldn't have it any other way,\" he guffawed bring Rosie into the room with her hands on her hips.\n\n \"Out!\" she commanded imperiously pointing in the direction of the grand staircase.\n\n \"Yes, Ma'am!\" Arek replied quickly and winked at Bella. She could hear him still laughing as he descended the stairs.\n\n \"Well since your awake you had better shower and put on a robe,\" Rosie sighed. \"I will get everyone else up.\" That was the end of her peaceful morning as she was poked, pushed, pulled, primped, pampered and pawed in the name of being a beautiful bride. She even ate a light breakfast while someone was handling some part of her body. \n\n Half an hour before the ceremony, Joe stepped in and shooed everyone out and down to the chapel including Rosie. You have barely spoken to Lucia and she flew all this way, for Bella's special day,\" he had said to make her move from the room. Once she was gone, he pulled a bottle of champagne from behind a curtain and smiled, \"Just a small glass to steady the nerves.\" He popped the cork and the three girls picked up glasses for him to fill.\n\n \"Thanks, Dad, I needed this little bit of calm before going down there,\" Bella said softly.\n\n \"Nervous?\" He asked.\n\n \"Not about getting married but there are so many people down there and everyone has gone to such a big effort and,\" she took a deep breath, \"What if I mess it up?\"\n\n \"You couldn't possibly. I have never seen a man more in love,\" Joe said and hugged her to him. \"I couldn't have given you to anyone less devoted.\"\n\n \"I'd have to second that,\" Dusty said and joined the embrace pulling Nyx in beside her.\n\n \"Let's get this show on the road,\" Nyx said uncomfortably, \"That photographer will probably keep up on the stairs an extra half an hour.\" She drained her glass and took Bella's from her hand.\n\n \"Dusty, you won't let me do anything stupid will you?\" Bella held her hand a moment longer and looked worriedly up at the tall woman.\n\n \"Never ever,\" she smiled and left the room with Nyx.\n\n As predicted the photographer stopped them and repositioned them several times on the stairs. Eventually, they stood before the doors waiting for the photographer the set up inside a few minutes longer then the doors opened and an ocean of people turned towards them. Nyx seemed to stand still an impossibly long time Bella thought as the music began. The opening chords of the music were familiar but were not Pachelbel's Cannon that she had agreed to for the entrance music.\n\n As Nyx moved off, Dusty stopped at the entrance and waited as a hauntingly beautiful female voice filled the hall. She immediately recognised one of her favourite songs and one of the first songs she and Stephen had danced to on the first evening he had taken her to dinner. Dusty moved off into the aisle and Bella could finally see beyond the tall woman to Stephen and greeted his wide smile with one of her own.\n\n \"Just wait one minute here and take it all in,\" Joe whispered and she took a deep breath. When they finally moved, she found it easy to step to the beat of the slow melodic song. She was halfway up the aisle before she realise that Tali stood with a small orchestra and sang, \"One step closer. All along I believed I would find you. Time has brought your heart to me and I have loved you, for a thousand years. I'll love you for a thousand more.\"",
        "It was so incredibly beautiful and touching Bella felt her eyes well up and she swallowed against the lump in her throat. The ceremony itself became a blur as she clung to Stephens' hand and moved at each prompt by the priest. They had kept it as brief as possible knowing that not all who had come cared for such things while still having the main events in the service to please her parents. She gazed up into Stephen's eyes as they said their vows and felt her worries melt away. \n\n The strings had played classical music in keeping with the wedding's theme throughout the service but as the ceremony came to an end. Tali once again stood before the band and sang in her haunting beautiful tones as they exited the chapel as husband and wife stopping for more photographs.\n\n \"I love you Mrs Cross,\" Stephen murmured into her ear as she stepped onto a small box so that he disparity in their height was not as great for several of the pictures and she laughed lightly turning her face up to him.\n\n \"I love you, my husband,\" she said softly and being at a height where she could finally kiss him spontaneously she leant forward to brush her lips over his with a smile. \n\n *****\n\n  Authors Note: This is the end of this series of Bella's story. I realised I have not answered every question that readers might have but as usual I enjoy leaving a few strands unwoven just in case I wish to revisit the story at a later date. I hope you have enjoyed Bella's story. ~ellie "
    ],
    "authorname": "xelliebabex",
    "tags": [
        "dominant/submissive",
        "collar",
        "engagement",
        "wedding"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/possessing-bella-ch-25"
}