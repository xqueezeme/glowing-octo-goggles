{
    "title": "Tumbleweed Ch. 01",
    "pages": [
        "I believe I've found my niche. Westerns, set in history or in modern times, and/or detective stories are what I like to write best. I may try my hand at a romance or two in the future but I'm comfortable with my little play area. \n\nI hope you enjoy this story of the exciting times following the Civil War. \n\nMy usual statement follows. Constructive comments, critiques, and emails are solicited and appreciated. \n\n******************** \n\nYoung Jeremiah Santee first heard the term \"bastard\" when he was eight in 1873. \n\nEarly one evening when he was returning to the shack he and his mother shared, carrying food scraps in a bucket from the kitchen of Rosie's Caf\u00e9. Hers was one of the best liked and busiest eateries in El Paso, Texas. Rosie was a big hearted, large woman who had no children of her own and had sort of adopted the boy. \n\nJeremiah bumped into a man coming out of the saloon. \"Little bastard. Watch where you're goin,\" the man said in an angry voice. He aimed a kick at the boy and it made him angrier when he missed and fell on his backside. \n\n\"C'mon Billings, he's just a boy,\" the man's friend said. \n\n\"The law shouldn't let bastard kids like him run around town with decent folk,\" Billings replied. \"You heard the stories about his Ma and that Santee feller.\" His friend pulled Billings in back into the saloon but not before waving for Jeremiah to leave. \n\n\"Ma, what's a bastard,\" Jeremiah asked when he got to the shack they called home. They were just sitting down for the only full meal they would have that day. \n\n\"That's not a nice word Jeremiah.\" Emily Santee was sure what was coming. \"Where did you hear it?\" \n\n\"I bumped into a man coming out of Thompson's saloon and he called me a bastard. Said the law shouldn't let bastards like me run around town with decent folk.\" Jeremiah was too young to realize the insult intended by Billings. \"What did he mean Ma?\" \n\nEmily sighed; she'd hoped that it would be later in Jeremiah's life before he had to face the truth of that derogatory term. She'd decided that if and when that term came up she would be truthful with her son and explain. \n\n\"Jeremiah, the word means a person whose parents weren't married.\" \n\n\"So what does that have to do with me? \n\n\"Your father and I were sweethearts, I guess you'd say. We planned on getting married after he came back from the war?\" \n\n\"What war?\" \n\n\"It was the War Between the States. What some in the South called it the War of Northern Aggression.\" Emily paused as if she were remembering better times. \n\n\"You told me Pa died a hero,\" Jeremiah said. \n\n\"I did, and he was a hero.\" Emily sighed knowing she'd have to tell the boy the whole story. \"Your father, Steven, and I were engaged before he left to fight with the First Virginia Cavalry. He didn't want to marry me until he came back from that damn war. It wasn't until he had been gone for a couple of months that I knew we were going to have you joining us. Jeremiah, he never came back; he was killed in the last battle of the war at a place called Appomattox Courthouse.\" \n\n\"Where's that?\" \n\n\"It's in Virginia,\" Emily answered. \n\n\"We live in Texas. Why would Pa go to Virginia to fight in the war?\" \n\n\"Steven was born in Virginia and moved out here with his folks when he was 15.\" Emily didn't think the boy should know that Steven's parents would have nothing to do with her and Jeremiah. She didn't want her son to know the vile hurtful things Steven's parents had said about her and her son. \n\nWhen Emily found out she was pregnant, she'd gone to the Santee's. They were less than thrilled that the young woman claimed to be carrying Steven's child. The Santee's called her a tart and a whore and ran her off their ranch. \n\nAfter Jeremiah was born Emily used Steven's last name for her and her son; she wanted the boy to have his father's name even if they hadn't been legally married. Emily eked out a life for her and Jeremiah. Her parents weren't around to help having died in an Indian raid several years before Jeremiah was born. \n\nEmily Santee wanted Jeremiah to go to school but some of the children were cruel, as only children can be. Some of them repeated things they heard from their parents, teasing and ridiculing Jeremiah until going to school was a torture for the boy. The bullying continued for several weeks and Emily finally allowed Jeremiah to quit going to the school. She taught lessons to him at night after they had supper. He was a smart boy and learned to read, write, and do simple arithmetic quickly. \n\nJeremiah talked to the owner of the livery stable the day after he stopped going to school; Jeremiah was eight years old but he convinced Sam Moore to hire him. Moore knew the boy's story and felt sorry for him and his mother. He had the boy muck horse stalls, feed the horses, and do clean up chores around the stable. Being the kind of person he was, Sam paid the boy the same as he would a grown man. \n\nHe also convinced his sister, who owned the general mercantile to hire Emily as a clerk. Emily and Jeremiah's life was a little easier with the money they were now earning. They were able to move out of the drafty barely standing shack into a small room at Ma Stewart's boarding house. Emily did several chores at the boarding house to help pay their rent. \n\n******************** \n\nJacob Hightower pulled his mount and his pack horse to a stop at the livery stable. Both animals seemed to sigh in gratitude that their journey was over, at least for that day. He slowly stepped down, tied his horses off to the hitching post, put his hands on his lower back and stretched. Jake resembled a big cat in his movements; a mountain lion to be exact. \n\nAt 6 feet, Jake was taller than average. His tawny, sandy colored hair was worn long over his ears and covering the collar of his shirts. The mane of hair reminded people of a mountain lions' pelt. He was long, lean and moved with no wasted motion; Jake had an air about him like he was just waiting to spring into action. Add to the picture his unusual yellow flecked, brown eyes and a person could see the resemblance to a mountain lion. \n\nGuess I'm gettin too damned old to take hard riding, he thought; horses are tired too. He chuckled and added, \"Hell I'm only 32.\" Jake, and his animals, had traveled the over 200 miles from Fort Stockton, Texas to El Paso in just over six days. It was early summer and the temperatures during the day in this part of Texas were in the low 90's. There had been what was called a Comanche Moon that gave enough light to ride at night so he could avoid the heat of the day. \n\nOnce he left the ranches and farms around Fort Stockton, the country was a hard unforgiving desert with only a few trees, mostly Mesquite with a few Palo Verde here and there, and damn few waterholes. Creosote bushes, scrub brush, and tumble weeds were the only other vegetation. \n\nJake rode from dusk until midday the next day and rested the horses until dusk that evening. He'd make camp, feed and water the horses, and sometimes light a fire to make coffee. His food consisted mostly of beans and bacon with a few pieces of jerky thrown in. The tumbleweeds came in handy for fires, providing just enough flame to cook coffee and heat beans. \n\nGathering tumbleweeds for his fire, the second day out from Fort Stockton, Jake laughed. \"Me and the tumbleweeds are alike. We blow around all over; never resting in one place too much.\" \n\nJake's trail cut the Rio Grande and his trek became a little easier. Along that border between the U.S. and Mexico it was a mite cooler because of the river and the cottonwood trees that grew along its banks. Twice during his journey, Jake had to run his horses to avoid groups of bandits and thieves that preyed on travelers along both sides the river. \n\nIt wasn't cowardice that made him run. \"No need to get into a gun battle unless I have to,\" Jake said aloud after outdistancing one gang. \n\nIn any case, Jake was glad when he rode into El Paso. \n\n******************** \n\nJake had started his trek in St. Louis where he'd met with a representative of a manufacturing company headquartered in Hartford, Connecticut. Jake had just resigned as a deputy county sheriff in Fort Smith, Arkansas when he saw an item in the weekly newspaper. The article was from the Colt Firearms Manufacturing Company and they wanted to hire men familiar with firearms as traveling salesmen. He sent a telegram and a meeting was arranged in St. Louis. Jake traveled by train to that city on the banks of the Mighty Mississippi and had two interviews with the company representative. The first interview took about an hour and consisted showing the company man how well Jake could handle both pistols and rifles; the man was very impressed with Jake's skill. \n\nJake's experience with firearms, both pistols and rifles, came while serving as a Captain with Major General George Custer's cavalry in the War Between the States. It gave him plenty of practice as he was with Custer for four years. He carried and used a Remington New Army 1858 .44 hand gun and a Henry repeating rifle of the same caliber while with Custer. \n\nHis last battle had been when Custer's command attacked a Confederate supply train at Appomattox Station on April 8<sup>th</sup>, 1865. The next morning General Robert E. Lee fought an early morning battle at the town of Appomattox Courthouse. The Union forces kept his army from advancing to Lynchburg to resupply. It was the final battle of the war; Lee surrendered the evening of April 9<sup>th</sup>. \n\nAfter Lee's surrender, Jake stayed with Custer for a couple of months. He'd thought about making a career out of the cavalry but the peace time Union army wouldn't be maintained at war time levels. A lot of the soldiers would be mustered out. There was a glut of men vying for the positions of officers; this was true of the enlisted ranks also. \n\nMany of the men who had been promoted during the war were returned to their previous rank; some Generals reverted to Colonels, Colonels to Majors and on down the line. Even some of the Lieutenants and Captains were now back to being Sergeants. The ones who kept their ranks had been in the army before the war began. \n\nJake had a fine record serving with Custer and knew he could stay in the army, but he would probably be demoted to Lieutenant or even Sergeant. It wasn't pride that made him decide to leave; he just didn't want to be under the command of some know nothing, politically appointed officer. Jake had seen what poor officers some of those men were and how they endangered the men under their command. It'd be better to find my own way, he decided. \n\nAfter leaving the army, Jake visited a few cousins and such that still lived in his home state of Missouri. He was there for almost a month before moving on. Jake had worked as a cattle drover, stage coach guard, wrangler and lawman for six years before going to work for Colt Firearms in the spring of '72. \n\nColt Firearms Manufacturing Company made him a salesman after the first interview. Jake was asked to show his proficiency with pistols; his years as a lawman in Fort Smith stood him in good stead. He was a very accurate shot and faster than most men on the draw, which he needed as a deputy sheriff; although he usually carried a 10 gauge, short double barrel shotgun called a coach gun. His skills with weapons were necessary for him stay alive in that dangerous profession in the dangerous town of Fort Smith. \n\nThe second interview was a bit longer. Jake was told of his duties, how he would demonstrate the new Colt Peacemaker and take orders for the weapon as well as other Colt products. Each man hired would have a sales territory and his district would include south western Arkansas from Little Rock as far west as Fort Worth and north to Fort Smith. \n\nWhen he took the job with Colt, Jake packed his beloved Remington in his saddle bags; he refused to totally give up what he considered an old friend. The Colt is a fine weapon and I don't have a problem selling it, but my .44 has been with me for a long time, he thought. It saved my life more than once and I wouldn't feel right letting it go. \n\n******************** \n\nBeen just over three years now, Jake thought as he looked around for someone to talk to about boarding his horses. And now I'm setting up a new sales area in the Southwest; mainly the far reaches of west Texas and on into New Mexico and Arizona. \n\nIt's a good life if you don't mind not being in one place for very long, he continued his thoughts. Three weeks earlier, Jake had taken a train with his new samples, from St. Louis to San Antonio. From there he'd taken a series of stagecoaches to Fort Stockton where he'd bought his two horses and made the ride to El Paso. \n\nTime to rest a bit before I start setting up the new sales route, he said to himself. Jake looked toward the big double door entry to the stable as a young boy of about 10 came out. The boy saw Jake and walked over to him. \n\n\"Want to stable your horses Mister?\" \n\n\"Yes I do son. Can you help me with that?\" \n\n\"Sure,\" the boy answered. \"It'll be a dollar a day for both your animals. How long you gonna leave them here?\" Before Jake could answer the boy said, \"Six dollars for the week.\" \n\n\"I plan on being in town for about ten days. What kind of deal can I get?\" \n\nThe boy thought for a few seconds and answered, \"How about nine dollars for ten days?\" \n\nJake smiled at the boy's horse trading. \"Don't sound like much of a deal son. Would you take seven dollars?\" \n\nThe boy thought again. \"No sir, but we'd take eight.\" \n\nNodding his head, Jake replied, \"We got a deal then.\" He stuck out his hand and shook hands with the boy. \n\nThey led the horses into the open area in the center of the stable. Stalls lined both walls and a few had other horses in them. As Jake unsaddled his mount he grinned and admitted to the boy, \"I would have paid nine dollars.\" \n\n\"I would have taken seven,\" the boy responded and returned the grin. \"I'll feed your horses an oat mash every morning, give em fresh hay every day, and make sure they're watered. We'll let em out into the corral so's they can stretch their legs. I'll take good care of them Mister.\" \n\n\"Name's Jake Hightower,\" he said. \n\n\"I'm Jeremiah,\" the youngster replied. Jake and Jeremiah shook hands again. \n\nThe boy led the saddle horse into a stall with fresh straw on the floor. He took a measure of oats and put it in the feed box at the back of the stall. Coming back to the center space, he looked at the pack animal. \n\n\"Best get your boss or a man to help unload the panniers,\" Jake suggested. He knew that each pannier carried 75 pounds of guns, ammunition, and the other products that he sold. \n\n\"I can help you with them Mister,\" the boy offered. \n\n\"You're a bit short on one end Jeremiah, they're pretty heavy.\" \n\n\"Help you get them down for 50 cents,\" Jeremiah offered. \n\n\"All right son, but if I have to tote the whole load you get nothing. Deal?\" Jake and the boy shook hands again. \n\nJeremiah took the lead rope and guided the pack horse over to one end of the stable. He took a hook off a peg on the wall that had a rope tied to it. Jeremiah attached the hook to an end of a one of the panniers. He motioned for Jake to grab the other end and started hauling on the rope. \n\n\"Tote your end,\" Jeremiah said. \n\nLooking up, Jake saw that the rope ran through a block and tackle that was fastened to a thick log beam that ran across the stable just under the roof line. He realized that he could have unloaded the pack animal all by himself using the pulley system. Jake smiled in admiration at Jeremiah's way of making extra money. The boy is a born salesman, he thought. \n\n\"Do you have someplace safe I can store these?\" Jake asked. \"Wouldn't like them to be broke into or stolen.\" \n\n\"Got a tack room over there,\" Jeremiah answered and pointed. \"It's got a big ole lock on it.\" \n\n\"Sounds good to me.\" Jake and the boy half carried and pushed the panniers into the tack room. \n\nPushing the door to, Jeremiah put a big lock through hasp and closed it. He handed a key over and said, \"Wells Fargo uses that type of lock for their strong boxes; it oughta hold. There's only two keys. Mr. Moore has the other one.\" He smiled and added, \"That'll be another dollar a day.\" \n\n\"I'm all ready paying you eight dollars,\" Jake objected while trying to hide a grin. \n\n\"That eight dollars is for your horses,\" Jeremiah said. \"Ifin you want us to guard your gear it's a dollar a day for the two panniers.\" The boy paused and then said, \"Tell you what, I'll make you the same deal as I did for the horses; nine dollars for use of the tack room for ten days.\" \n\nJake took a $20.00 gold Double Eagle and two one dollar coins out of his vest pocket. He tossed them to Jeremiah. \"It's eighteen dollars for the horses and there's an extra four dollars. I expect the horses to be curried and brushed at least three times while they're here.\" \n\nJeremiah nodded and then helped Jake take the pack frame off his horse. The boy led the pack animal into the stall next to the saddle horse; again putting a measure of oats into the feed bin. Jeremiah was curious about what the two panniers carried but decided it weren't none of his business. I reckon if Mr. Hightower wants me to know, he'll tell me, Jeremiah thought. \n\n\"There a good place to stay while I'm in town?\" Jake asked. \"Somewhere close to the livery.\" He grinned at the boy and asked, \"You gonna charge me for that information too?\" \n\n\"No Mr. Hightower,\" Jeremiah replied. \n\n\"Since we're doing business together, Jake's close enough son.\" \n\n\"Yes sir. Well, one place is the hotel that's south of here at the end of the street, but they're real proud of their rooms.\" \n\n\"Proud of their rooms?\" \n\n\"Yes sir Jake, they charge upwards of two dollars a day for a room.\" \n\n\"You said one place, is there somewhere else?\" \n\n\"Yes sir. You could stay at Ma Stewart's boarding house. She charges the same as the hotel but you get two meals a day and it's real quiet. Ma Stewart don't allow drinkin or loud behavior at her place.\" \n\n\"Okay, you sold me. Which way is the boarding house?\" \n\nJake followed the boy as he stepped outside. \"It's that big white house there,\" Jeremiah replied and pointed to a house about two hundred feet north of the livery. \n\nPicking up his saddlebags, Jake nodded at the boy and walked to the house Jeremiah had pointed out. The large home could have been a hotel. Two stories, painted white with dark green trim on the windows, doors and shutters it stood out from the rest of the homes and buildings along Front Street. The house had a porch on the ground floor that wrapped around three sides of the building with a balcony across the front on the second story. \n\n\"Pretty fancy for a boarding house,\" Jake said as he rang the pull bell at the front door. \n\n\"May I help you?\" It was a big woman who had answered the door. \n\nShe's big not fat, Jake thought. \"Miss Stewart? I'm Jake Hightower and I was hoping you might have room for another boarder. The hand at the livery said I'd like your place better than the hotel.\" \n\n\"Come in Mr. Hightower,\" she replied and motioned him into the house. \n\nThe entryway had a high ceiling and was a large space with a wide wooden staircase leading up to the second story. You could see a railing around the second floor and there were several doors around the three sides of the walkway that opened on to it. On the left of the entry were two doors opening onto what Jake would have called a parlor and a formal living room. On the right side there were also two doors; one led into the kitchen and the other into a dining room. The dining room had a very large table with two men sitting around it waiting for supper. \n\n\"It's Mrs. Stewart, Amada Stewart. I'm a widow.\" Amada studied Jake for several seconds, long enough that he became a little uneasy. \"You're just in time for supper,\" she said. \"Toss your bags on the bench there and hang your gun belt and hat on the coat rack. If you've a mind there's a place out the back to clean up. You can go through the kitchen. Come to the table when you're ready; I'll hold supper for you. \" ",
        "\"Yes ma'am,\" Jake answered. The statement about cleaning up was more like an order than an invitation or suggestion. He dropped his bags on the bench and took off his hat, putting it on the rack. Jake hesitated before undoing his gun belt but finally hung it on the rack too. First time I've had it off since Fort Stockton, he thought. He hurried through the kitchen to the back stoop and quickly washed his face and hands using the pump which sat on a large table. \"Place reminds me of a southern plantation house,\" Jake said softly to himself. \n\nAs he returned through the kitchen he watched as Mrs. Stewart and a younger woman fussed around getting the food ready to serve. Jake smiled to himself at the difference between the two women. Amada Stewart was about 5 feet 4 and almost as big around as she was tall. \n\nJake guessed her age between 50 and 70; it was hard to judge a person's age when they lived in the harsh west Texas weather. If she'd spent a lot of time working outside she could be years younger than she looked. Her gray streaked chestnut colored hair was drawn back into a bun. Amanda moved with the grace of a woman much smaller and the economy of someone who had done this job innumerable times. \n\nThe other woman was much younger; Jake judged her to be about 25. She was slender but from the way she carried the different pots, skillets, and large serving bowls she was strong. If she was a man you'd call her wiry, he thought. When she turned toward him, Jake saw a pair of cornflower blue eyes to go with the strawberry blond hair. \n\n\"This is Emily Santee Mr. Hightower.\" Ma Stewart said. \"Emily this is Jake Hightower; our new boarder.\" \n\nThe young woman nodded at Jake and returned to getting supper ready for the table. He returned the nod and watched her for a few more seconds before he headed toward the dining room. Fine looking woman, he thought as he took a seat at the table with the other guests. \n\nThe dining room table was carved wood and very large; it could seat twelve comfortably. The table, its matching chairs and a six foot long sideboard with a granite top were pretty much the only furnishings. Large floor to ceiling windows gave light during the day and there were several coal oil lamps hanging on the walls to provide light for the evening meal. \n\n\"Howdy,\" greeted one of the men at the table as Jake sat down. \"Name's Jim Bishop and this is Enrique De La Vega,\" he said motioning to the other man. \n\n\"Jake Hightower. Good to meet you Mr. Bishop, Senor De La Vega.\" \n\n\"What brings you to El Paso, if you don't mind my askin,\" Bishop said. \n\n\"Don't mind at all,\" Jake replied. \"I'm setting up a trade route and going to use El Paso as my base.\" \n\n\"You're a salesman then,\" De La Vega offered in slightly accented English. \n\n\"Yep, that's me, just a traveling drummer.\" \n\nMa Stewart and Emily came through the swinging door that led to the kitchen with their arms and hands full large serving bowls and a big platter of fried chicken. They set the feast on the table but neither Bishop nor De La Vega reached for the food. Jake also held back to see what was proper. \n\nWhen the ladies had finished serving and sat down, Ma Stewart bowed her head and said Grace. \"Gentlemen, supper is served,\" she said after her Amen. \n\n\"I sell ladies notions and supplies to general stores across west Texas,\" Bishop said. \"Enrique there raises and trades horses. His ranch is just south of Juarez.\" \n\nJake nodded and said, \"Like to look at your stock Senor De La Vega. Gonna need a good saddle horse; the one I have is a decent mount but I want something special.\" \n\n\"I would be happy to show you what I have at your convenience Senor Hightower.\" De La Vega somehow managed to bow while sitting down. \n\n\"What's you line Mr. Hightower?\" Bishop asked. \n\n\"I work for Colt Firearms,\" Jake replied. \n\nBishop nodded toward the rack where Jake had hung his gun belt. \"Thought that was a mighty fancy rig for a cowboy,\" he said. \n\nJake smiled. \"Yes sir, that gun's special. Got to have something to show to customers, don't you know? If you like, after supper I'd be happy to show it to you and Senor De La Vega. Who knows? You might be my first sale in the new territory.\" \n\n\"Enough talk of guns gentlemen,\" Ma Stewart ordered. \"Now y'all eat before it gets cold.\" \n\nAfter everyone had served themselves, Emily took the bowls and platters of food off the table; putting them on the side board. Anyone that wanted seconds would go to the sideboard to refill their plate. Just as Jake picked up a drumstick, a whirling dervish came charging through the swinging door from the kitchen. \n\n\"Sorry I'm late Ma, Aunt Amanda,\" Jeremiah said. His face was damp and his hair was slicked back from washing up. He wiped his not quite dry hands on his breeches as he came to the table. \"Mr. Moore just got back and I had a customer come in and I had to take care of his horses.\" \n\nJeremiah looked up and saw the customer he'd talked about. \"Hi Jake, see you took my advice.\" \n\n\"Howdy Jeremiah. Yes I did and from the looks of this supper it was the right thing to do.\" So Mrs. Santee is the boy's mother, he thought. I wonder where Mr. Santee is. \n\nJeremiah walked over, kissed his mother's cheek and handed her several coins; Jake saw a ten dollar gold piece among them. \"Mr. Moore gave me my wages from last week,\" he explained. \n\nEmily looked at the coins in her hand and smiled. \"You had a very good week; I'm proud of you.\" She motioned toward Jake and said, \"But I think you should address him as Mr. Hightower; I've taught you to respect your elders.\" \n\n\"Mrs. Santee, if I may?\" Jake offered. \"Jeremiah and I have done business together and will probably do more. Your son is a first rate trader and I like to use given names with the men I've learned to respect. So if you don't mind, I'd be proud for the boy to call me by my given name.\" \n\nEmily looked at Jake for a few seconds and then she smiled. \"Well, I suppose it would be fine. Thank you Mr. Hightower.\" \n\nSame applies to you ma'am, Jake added silently to himself. \n\nAfter supper Bishop, De La Vega, and Jake stepped out onto the front porch for a cigar; Jake took his gun belt with him. Jeremiah had started to follow but his mother reminded him that he had lessons to work on. \n\n\"Aw Ma,\" he complained. \"I already know how to read and do my sums. I want to see Jake's pistol.\" \n\nGrinning, Emily lightly swatted Jeremiah on the rump. \"Go do your lessons.\" The boy walked slowly to the bedroom he and his mother shared, like the weight of the world was on his shoulders. \n\n\"It's a Colt Single Action Army .45, better known as a Peacemaker,\" Jake said as he pulled the pistol from its holster. He quickly unloaded the pistol and handed it to Bishop. The drummer nodded and passed it on to De La Vega; it was obvious that Bishop wasn't really comfortable with fire arms. De La Vega on the other hand looked like he was familiar with pistols. He worked the action and tested the trigger pull without dry firing the weapon. \n\nJake smiled to himself at the differences between Bishop and De La Vega. Bishop looks to be about 40, Jake thought. The salesman was just 2 inches over 5 feet. The best way to describe his body was to call him round. His hair consisted of a fringe of salt and pepper that surrounded the bald crown of his head. \n\nIn spite of his grandfatherly appearance he wasn't soft. The way Bishop held himself, the way he talked and the short almost jerky gestures showed that this was a man that had seen the \"bear\" on more than one occasion. \n\nTurning his attention he De La Vega, Jake saw the perfect example of a Spanish aristocrat. He doesn't look to be but a few years older than me, Jake thought. That is until you see his eyes; those eyes have also seen the \"bear\" and dealt with it. \n\nDe La Vega was an inch or so taller than Jake with a whip cord slim build. His hair was black as the night and he wore a pencil thin mustache that almost gave him a sinister look . The experienced looking eyes were surprising in that they were a light gray. Jake learned later they were a gift from his Anglo grandmother. \n\nHis natural light brown complexion had been darkened by the many years working out in the weather. His movements were easy and fluid giving the man a grace not matched by many in this part of Texas. The manner of his speech was polite and showed his education. Man's more than a simple ranch owner, Jake finished his thought. \n\n\"This one has a 5 and a half inch barrel and a nickel finish for show,\" Jake told them. \"You can also get it in 4 \u00bd and 7 \u00bd inch barrel lengths and in a blued finish.\" \n\n\"I don't know all that much about hand guns,\" Bishop said. \"But isn't that barrel a bit short for everyday carry?\" \n\nJake smiled. \"I need to show my customers how fast you can get the Colt out of the holster and its accuracy.\" \n\n\"You're a gun hand then?\" Bishop asked. \n\n\"I guess you could say that,\" Jake answered with a frown. \"I was a deputy sheriff in Fort Smith so I had to know how to handle a gun.\" With a sad smile and a grimace he added, \"Fort Smith had a nick name of \"Hell on the Border\" that it earned during and just following the Civil War.\" \n\nHis thoughts drifted back to the events that caused him to leave Fort Smith. A rancher and his five hands had just finished a cattle drive and as usual the cowboys were celebrating in a local saloon. The saloon keeper sent his swamper to get the deputy because the cowhands had gotten a bit too rowdy. They began shooting at the spittoons on the floor in front of the bar. The men also shot at the piano over the piano player's shoulders; encouraging him to play faster and better. \n\nJake was on duty that night and hurried to the saloon. He didn't really expect too much trouble; usually the appearance of the Sheriff or a Deputy was enough to calm men down. This time it wasn't. \n\nWalking into the saloon, Jake saw two men lining up their pistols to shoot at the piano; the other three men he'd been told about were nowhere in sight. \"I think you've had about enough fun boys. Holster your guns,\" Jake ordered in a commanding voice. \n\nBoth men turned. \"It's the law,\" one of them said. \n\n\"So what,\" his companion replied. \"I don't intend for some two bit deputy to stop my fun.\" \n\nJake stood with his 10 gauge coach gun propped on his hip. \"Holster your guns,\" he ordered again. \n\nThe men were standing with their arms at their sides; each man holding a gun. One man, followed by the other, raised their weapons toward Jake. The men were not gunfighters and extended their guns at arm's length to shoot instead of firing from the hip. Jake dropped the barrel of his shotgun toward the men and fired. The shotgun jumped in his hands as he fired both barrels and the two cowboys went down. \n\n\"You son of a bitch,\" Jake heard from behind the bar just before a bullet hit him creasing his side and turned him toward the bar; another bullet narrowly missed him. He saw two more of the cowhands standing behind the bar with their pistols pointed at him. \n\nJake dropped the shotgun and drew his Remington .44, firing as it cleared the holster. Both men went down and a third head rose from its hiding place behind the bar. The young man had his weapon raised but not pointed at Jake. \n\n\"Don't do it son,\" Jake said. \"Put the gun on the bar and step back.\" \n\nThe youngster looked at his four friends and then back at Jake. \"You killed them,\" he said in surprise. \n\n\"They didn't give me any choice son. Don't you make the same mistake. Put the gun down.\" \n\nThe boy looked again at his friends and screamed. He brought his pistol up and toward Jake. \"Don't,\" yelled Jake and when the boy didn't stop, Jake's Remington roared again. The young man fell to join his companions on the floor. \n\nJake checked on the men, kicking away their weapons. When he came to the youngster, a sadness came over him. The boy had been hit in the chest and there was no doubt that he was dead. \n\n\"Damn kid can't be more than 16,\" he said, more to himself than to anyone else. \n\nJake had the bartender send for the undertaker. He stopped at the doctor's to have his wound cleaned and bandaged. The doctor wanted Jake to stay at his office for a while, just to be on the safe side. \n\n\"Hell Doc, I've cut myself worse shavin,\" Jake insisted and went back to his own office. \n\nThe next morning when Sheriff Timmons came in, Jake handed him his deputy's star. \"I'm done Tom,\" he told his boss. \"I killed a 16 year old boy last night.\" \n\n\"From what I heard, the boy didn't give you a choice Jake. You had to protect yourself; nothing else you could do.\" \n\n\"I could have shot him in the shoulder when he popped up from behind the bar with that gun in his hand. He would have been messed up some but at least he'd still be alive.\" Jake walked toward the door. \"See you around Tom.\" \n\nTwo weeks later, Jake saw the advertisement in the paper and sent a telegram to the Colt Firearms Manufacturing Company. \n\n******************** \n\n\"I think I would like to see the pistol in action,\" De La Vega said. \"Perhaps when you look at my horses you could show me.\" His words brought Jake back to the present. The Mexican smiled and added, \"If I buy one I will be the envy of my men and my neighbors.\" \n\nJake smiled to himself. Got my first customer before I even got started in the new territory, he thought. He and De La Vega talked about price and when the delivery of his gun could be expected. Customers would have to wait for their purchase to be shipped from the factory in Connecticut; Jake didn't part with his samples nor the gun he carried. \n\n\"At your convenience Senor De La Vega.\" \n\n\"I am returning to my hacienda tomorrow Senor Hightower; you are welcome to ride with me. My estancia is just across the border in Zaragoza; it is an easy morning's ride. \" \n\n\"It would be my pleasure Senor; I'll meet you at the livery at first light.\" \n\nTo Be Continued"
    ],
    "authorname": "woodmanone",
    "tags": [
        "western",
        "drama",
        "action/adventure",
        "romance"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/tumbleweed-ch-01"
}