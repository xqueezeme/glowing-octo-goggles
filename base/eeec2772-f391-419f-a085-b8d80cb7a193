{
    "title": "Sholan Alliance - AU Bk. 02 Ch. 03",
    "pages": [
        "Gah, I tried to work on a chapter for both of my other stories but this one has just seemed to have caught my attention. I have ideas for the other two but when I try to write them they just don't want to go down on the paper. Sigh. Such is life of an author I guess. I think what I am going to need to do is try and do a page or two in the other stories and then come back to this one. Eventually I will have them all out.\n\nAt the end of this chapter I am going to be posting a list of characters and some additional details on Sholan society and culture. Some you have encountered and have been explained but much hasn't. Eventually some of the chapters will take place on Shola but I am not sure how long that is going to be. Time will tell.\n\nAs always all intimate relations are 18+ or the equivalent for alien species. Enjoy\n\n*****\n\nThe doctor had just finished eating and stepped into her shower when her alert went off. \"By Vartra's Bones what now? Can't I get a shower without being bothered?\" Desjean kept muttering as she quickly toweled off and pulled her pad out and checked it. She blanched when she looked at the readings. \"Oh god this is going to be a mess.\" \n\nDesjean contemplated what her pad was telling her as she was jerking her clothing on. Their blood pressure and heart rate had gone up drastically as their temperatures had returned to normal. Another reading was showing a massive surge of telepathic energy just before the alert went off. She was finally dressed and ran down to the small sick bay. \"What is going on?\"\n\nThe SBA frowned and had to shrug. \"Not totally sure doctor. I noticed an elevation in their breathing, pulse, and BP. When I checked I found they were becoming intimate which would explain that. I darkened the window so they had privacy. About ten minutes ago there was a massive surge in telepathic energy.\" He held his arm out and the fur was still sticking up a bit.\n\nHe had to glance away. \"Um, there is also a strong urgency to mate with someone.\" He had to lower his ears and shrugged his shoulders. \"They seem to be broadcasting it for some reason.\" Man a cold shower was sounding better all the time.\n\nShe sighed. \"Go back to what you were doing or if it is affecting you too much I can give you a suppressant.\" Desjean could feel it as well and it was definitely not a comfortable sensation. Since she was going to be there for a while she took a suppressant which helped a great deal.\n\nAfter settling in the chair in her office she rolled her neck and started calling up the diagnostic data. She reviewed it from when they were put in the room till now. It had originally trended down to normal levels and then started picking up. It culminated with the surge of power. Thankfully it looked like the shielding in medical and the room damper kept it localized.\n\nDesjean placed a call to the tutor since he was still on board and hadn't gone with the Ambassador. \"G'Houl we have a problem. I am not sure exactly what happened but there was a flare of power in the room I have Satasha and Yilly in. It was telepathic in nature and was strong enough to escape the damper.\" She rolled her neck. \"I had to use a suppressant on myself to keep from reacting to what they were emitting.\"\n\nThat got his attention but he hadn't felt anything since his quarters were shielded as well. \"I will be down there in just a few minutes. I need to get dressed and then will come down and check on them.\" He rolled out of bed and pulled on the first tabard that came to hand. After jerking it on and settling it some G'Houl left his room. \n\nHe hurried down to medical and almost as soon as he walked in he was hit by the telepathic power flowing in the rooms. G'Houl had to lean against the wall for a moment as he strengthened his shields. Once that was done he shivered slightly since this was going to end up being a mess. The doctor came out and waved him to her office and closed the door. As the door shut the strength of the telepathic output dropped a fair amount.\n\n\"Please have a seat and here is some c'shar for you. Take a moment and tell me what you know.\" Desjean settled across from him in her desk chair. She hadn't really found any information that might explain what had happened. Desjean was greatly hoping that he would be able to give him some information.\n\nG'Houl almost chugged the cup of c'shar and gave his body a good shake to settle his fur. \"May I borrow your computer for a moment? I need the check some information before I actually say anything.\" Once she spun it around so it was facing him he entered his access code and started reviewing some information.\n\nThe information he was looking for was guild specific. Only doctors that worked with a specific aspect of telepathy would have access to the information. It took him a few minutes to review the information before he logged out and pushed the screen and keyboard back. \"Great, just what we need.\" He was rubbing his forehead as he murmured that.\n\nDesjean hardened her eyes slightly. \"What don't we need? What did you find?\" Some day's telepaths tended to irritate her. They seemed to have built in silence concerning their powers. As the doctor she had some additional training but again it was rather limited.\n\nG'Houl sighed. \"Sorry doctor I am just reviewing the information. If what I think happened did then this is going to cause all kinds of ripples in both our societies.\" After one last rub to his temples he sat up and leaned forward. \"This does not leave the room till I have had a chance to talk to the Ambassador. What it looks like is Yilly and Lt. Verzilon have formed a Leska link.\"\n\nShe stared at him in shock. All Sholan's had heard of Leska links and had a generic idea of what it was about. All she knew was that it was a permanent mental bond between the two telepaths. One of the purposes as far as they could tell was a compulsion to have children. Virtually all children of a Leska pair were talented. They were also capable of sending messages vast distances across space when needed. The last bit she knew was that they had to come together once every five days to share memories. This was accomplished by mating which was the process by which they were transferred.\n\n\"Oh shit, by Vartra's bones that is most definitely going to stir a shit pot of political issues.\" Desjean couldn't even comprehend just how much this was going to impact on the Sholan society. That wasn't even considering the fact they had never found a telepathic race before now. That alone was enough to cause huge ripples in the Sholan society. It was going to impact on Earth as well though she really had no idea just how it would. \n\nG'Houl had to give her a slight smile since she was normally a very proper officer and lady. To hear words like that from her was rather amusing even if the reason wasn't. \"I need to contact the Ambassador and let her know. Also they will have to be in the room till tomorrow\", he checked his comm., \"I mean this afternoon since it is already tomorrow.\"\n\nHe pulled the computer back over and typed in an urgent message for the Ambassador. Since it was in Sholan and the only human's who could even read the basics were on the ship he made it detailed. She didn't need to respond immediately since they were going to be isolated till the next day but she needed the information.\n\nG'Houl sighed and stood. \"They should be fine and I am going back to bed. Contact me if you have any questions or are concerned by anything.\" With a yawn and a sigh he walked out of her office and shook his head. He was going to need to send a message to the mentor on the mothership as well. Now that was going to be fun as well though it could wait for a while.\n\n~~~ Billy and Satasha\n\nBilly was relaxing in Satasha's arms when she mentioned a Leska link. It wasn't anything he had ever heard of and as he searched his memories of the implanted language nothing came forward. He had run into that before when it was a uniquely Sholan term. \"What is a Leska? I can't find anything in my memories...\" His eyes crossed as a few memories of Satasha when she was young crossed his mind. \"Also why do I have your memories as well?\"\n\nSatasha sighed but kept her arms around him. \"A leska link is a permanent telepathic bond between two people. They are very rare and on two or three form a year on average.\" Goddess how to explain this? \"Um, Leska's share memories with each other and need to spend one day out of five with each other. If they don't then they start to feel the way we were. I know I am feeling much better now.\" She yawned. \"Sleep Yilly and we will talk more tomorrow.\"\n\nHe wanted to discuss this more but since he hadn't slept well the last night or two he quickly fell asleep. As he was sleeping her memories were slowly being incorporated with his. Things like childhood memories were matched up and in his dreams her memories were mixed in with his. As bits of her memories flashed through his mind similar memories of his would come forward as well.\n\nEventually the two of them woke and by the clock on the wall it was late night or early morning depending on how you looked at it. Satasha woke first and she had to start stroking Billy's skin and hair. As she was doing that desire was starting to grow as well. When Billy started to wake he rolled over and looked at her. Satasha's eyes were almost glowing with desire and need.\n\nBilly looked at her and for a brief moment she almost looked feral the way her eyes were glowing. As he was looking at her images of how she saw him crossed his mind. How different they looked had never occurred to him till now. Just what had drawn them together? He was shorter than she was by several inches, his facial features were completely different. He didn't have any fur on his body. \n\nHe had to blink several times since she was momentarily a totally different person than he normally saw her. Satasha's features suddenly looked very feline with the muzzle she had instead of a mouth and nose like he had. The underlying bone structure was different and made her head look somewhat wider than his. The ears were currently pricked fully forward as she focused on him. She started to nuzzle him.\n\nSatasha could feel what was going through Billy's mind. She had grown up with these powers though now they were far stronger than before she had met him. What she loved about him was inside of him and not just the physical attraction. Satasha started purring. \"Silly man I love you for who you are. It doesn't matter that you are a different species than I am. I see what is inside, what makes you who you are.\"\n\nShe pulled him a bit closer. \"You are a very honorable male and genuinely care about the people in your life. Even if that caring causes you pain.\" She was thinking Sandi as she said that. \"I also love how you make me feel when you hold me and cuddle. I don't care that you are a bit shorter than I am, or that you only have fur in certain spots. I love you and want you in my life.\"\n\nSatasha could feel that he was still feeling pensive and decided she was going to take the lead. She was going to slowly seduce him and show him just how much she cared for him. Before he could reply she gave him a deep kiss and then started nibbling and playing.\n\nBilly wanted to say something but the feelings he was getting from touching her drove those thoughts away. The raw desire was muted slightly by the slow movements of Tasha and he couldn't help but lift his chin as she nibbled. When her teeth closed around his neck a surge of desire hit and he was very aroused by now. *God woman be careful or I am going to lose it before you finish teasing me.* His eyes were closed as he sent that to her.\n\nFor now he was totally focused on what she was doing to his body. His hands were resting on her back and sides but he could barely move due to the lust and desire he was feeling. When she settled on him and he slid inside their minds started merging again though now it didn't have nearly the flood of memories that last night had. As he was focused on the memories and the sensations flooding from her their bodies started moving in a motion that had been used for millennia.\n\nEventually the doctor did come to the room though she spoke to them via the intercom. \"Good afternoon to both of you. I can tell you are feeling better but how are you feeling?\" The diagnostic readings were down to normal at the moment.\n\nBilly automatically pulled the sheet up some since they were still both nude. \"Um, rather confused and trying to figure out what happened. Tasha told me that we are now Leska's and I have some vague memories dealing with that subject. It isn't enough to really know what it means since she doesn't have a great deal of information on it. What the hell happened and how or maybe why did it happen?\"\n\nSatasha snickered at his reaction. \"Silly man I would have thought by now you would have been used to casual nudity.\" Just for good measure she ran her tongue up the back of one ear and felt him both wiggle and a surge of desire.\n\n\"Damn woman don't do that right now or the doctor will have to come back.\" Her tail was curled over his side and he grabbed it and lightly tugged on it. \"I have a captive now and you had better be good or else.\" He didn't get to say much more before the end of it lightly tickled his leg and he growled at her.\n\nDesjean barely managed to keep a straight face. \"Well I don't have a great deal of information on Leska's since I have never had to work with them. What I do know is probably pretty much what you know. How or why it happened I really have no idea and the tutor has sent a message to the senior mentor aboard the ship. Once your link day is done I am going to start running some tests on you to see what might have changed.\"\n\nSatasha tried to be good as he was talking to the doctor and settled for draping an arm over his side. Without really thinking about it she snuggled a bit closer to him. She could feel how much he was enjoying the feeling of her fur on his back. Before she realized it she was lightly nuzzling his neck and behind the ear she had licked. Satasha felt a surge of desire as he leaned into her nuzzling. \"Doc can you come back at the end of the day please and darken the window?\" Satasha asked her.\n\nBilly had tilted his head so she had better access and his eyes were closed in enjoyment. \"Might be a good idea, I am trying to deal with this sudden...\" He twirled his hand around since he wasn't sure how to describe what he was feeling. Feeling everything she was, was confusing enough without trying to carry on a conversation.\n\nDesjean smiled. \"I will do that and your meals will be delivered at the normal times.\" With a touch she darkened the window from both sides and locked it down so that only she could lighten it. As she was walking back to her office she was rubbing her temples and decided a good shot of the suppressant meds was a definite idea.\n\n~~~ The ambassador the evening before~~~\n\nOnce Sally had left the room Ikarius seated her at the head of the table and settled down on one side next to her. \"Would you like to sample some of the munchies? Anything to drink?\" He had snagged a plate and some coffee as they came in. \"Please and my assistant will take care of that for me. He is here to ensure that our meetings aren't disturbed by my needing anything. He will also be keeping notes for me so I can focus on the discussion at hand.\"\n\nSeveral of the other representatives nodded since their assistants were doing much the same thing. In the case of the humans most of them were in either a uniform or expensive tailored suit. The distribution was about equal and Ikarius knew most of them at the meeting. Some he knew well and trusted others he knew and didn't trust at all. \"Let me introduce you to the representatives in the room. I am going to start with General Chou to your left and...\"\n\nAs he introduced them they all greeted her back and gave bows, nods, or other method of showing respect. Eventually everyone had something to drink and eat and the room settled down. \"From the sounds of it you know far more about us than we do you. Can you comment on that?\" That was a rep from Japan.\n\nTeolora nodded at him. \"I can answer to an extent. The reason I say an extent is because Billy and Sally discussed mostly social and cultural conventions of the countries Yilly was familiar with. There was some discussion on the political set up but he made sure that was rather generic. He did that so that when we came here we didn't come with preconceived notions.\"\n\nShe took a sip of some tea and smiled. \"The most important thing he did was to allow us to get the English language from his mind and his daughters mind. This allowed us to implant it into the crew that was coming with. Most of the Sholan's can understand and speak English without a problem. Does this answer your question?\"\n\nThere were quiet murmurs around the table as some of the ambassadors and representatives discussed what she had said. Another man spoke up. \"Vat about his vessel's drive signature? Did you give him that technology? If so I would expect it to be provided to others as well.\" He had a very thick accent as he spoke.\n\n\"Not at all, from what all I understand he came up with the drive modifications by himself. When he arrived at our ship his ship had already been modified. All we did was provide him with our style of beds since they are more comfortable. We did install expanded sensors but they are a separate installation and is manned by Sholan's and not Billy or Sally.\"\n\nThe rest of the evening went much the same way, they would ask questions and she would answer what she could. Eventually Ikarius called the informal meeting to a close. \"It is getting late and I am sure the Ambassador would like to get back to her ship and relax. Also it has been requested before we start with the formal meetings to give them several days to recover from the flight. They also have a warrior that died while taking the pirate vessel. They need to have a ceremony for him as well.\"\n\nHe stood up and smiled at everyone. \"Unless anyone has an issue for the moment I am going to act as an informal contact for them. Once Billy is released from medical, he was ill on the way to earth, then he will take over. Good evening ladies and gentlemen. I will contact you in a few days and start setting up a schedule of meetings.\"\n\nWhile the others were standing and getting ready to leave he noticed Teolora checked something on her wrist and frowned momentarily. \"Is everything okay Ambassador?\" Chances were it was simply a status update.\n\n\"Nothing major Commodore, if you wouldn't mind escorting me to the barque I would appreciate it.\" She had a gentle grin on her face when she asked. \"I would hate to get lost and walk into the wrong room.\"\n\nIkarius snorted. \"I have a feeling you could easily find your way back but I will be honored to escort you.\" He held his arm out and smiled as she tucked her hand in the elbow of his arm. He had to wonder what her fur felt like and he was sure that most of the people in the room felt the same way.\n\nThey slowly walked out of the room and back towards the barque. Once they were close to the ship she sighed. \"If you have a few minutes I need to update you on Yilly.\" She patted his arm. \"Nothing bad but something totally unexpected. If you wouldn't mind a drink we can go to my quarters and relax and talk about it.\"\n\nIkarius did look a bit concerned when she mentioned something going on with Billy. \"Well if you don't mind I would appreciate that. We have been friends since we both joined the Navy. It was a great loss when he resigned his commission.\" He allowed her to escort him aboard the ship. Ikarius tried not to look concerned when she led him aboard. \"Might I be able to see him this evening?\"\n\nTeolora lightly patted his arm. \"We can talk about it in a few minutes. I would prefer to wait till we get to my quarters and discuss it in private. He is doing fine but it is going to take a bit of time to explain it to you.\" She really didn't need this right now.",
        "He settled his expression as they walked aboard and though they might not consider the ship to be all that large to him it was. It didn't take long to get to the Ambassadorial quarters and she escorted him in. \"Deston can you please get a bottle of the Makkoe and two glasses and that will be all I need this evening.\"\n\nOnce he had done that the assistant gave both a nod and left the room. He knew what the message was about and wondered what the human would make of it. This was going to be interesting and before he went to bed he had several messages to send.\n\nTeolura took off her over robe and settled it across one chair and smiled. \"If you want to take your jacket off and relax. No need to stand on formality here and please have a seat.\" She poured the Makkoe into the glasses and slid one over to him. \"Yilly seemed to enjoy this from what I understand.\" She took one glass and took a sip.\n\nIkarius gave her a casual look as she took the over robe off. He could see some of what Billy might see in the female he was involved with. He didn't know much more than that since Billy had been sick when they arrived. \"Thank you and please tell me what is going on.\" Ikarius took his jacket off before sitting down and picked up the small glass. He raised it to her and took a larger sip.\n\nShe almost grinned when his eyes crossed and he had to shake his head a bit. \"It does have a bit of a bite I guess you could say.\" Once he was seated she picked the glass up again and played with it. \"The concept I am going to explain to you is going to require a certain amount of belief from you. I told you that some Sholan's are telepaths. We are graded from fifth level to first level. First is the strongest talents.\"\n\nShe leaned back and contemplated him and how to explain the concept. \"Occasionally two telepaths will form a permanent mental link called a Leska bond. The telepaths involved are drawn to each other every five days and spend the day together. This is because the memories since the last link day need to be shared.\"\n\nIkarius frowned slightly at what she was saying and had a feeling she wasn't telling him something. \"Hmm..., let's say I believe you and what you are saying. What does this mean to Billy? How will it impact on him and what happens when they are spending the day together?\"\n\nShe smiled slightly. \"I will show you that telepathy does exist. I will do a language transfer later since you will need one anyways. Now what this means for Yilly I am not totally sure. We have never come across a telepathic species before. The idea of telepaths of two different species becoming Leska's would never have crossed our mind. Now as far as what happens they are drawn together with a mating compulsion. The intimacy of mating is the vehicle that helps them share the memories.\"\n\nTeolura held her hands out and shrugged. \"I can't tell you much more than that at the moment. Normally all new Leska's are sent to Shola for training till they have come to terms with the link. They also require specialized rooms that have psychic dampers in them. It keeps them from broadcasting raw sexuality during their link day.\" She took a sip of her drink and nudged the bottle over to him in case he wanted more. \"That is why I can't show you Yilly or Satasha till tomorrow evening.\"\n\nIkarius narrowed his eyes and stared at her. To be honest he didn't really believe in all this psychic non-sense. What she was telling him almost felt like a way of telling him that he simply couldn't see Billy. \"I would like to at least see him even if I can't speak to him. I want to verify that he is at least doing okay since I know he was sick.\"\n\nTeolura sighed since she had a feeling he was going to react that way. \"Please believe me that right now is not a good time.\" She glanced at her wrist comm. and gave him a wry grin. \"They are currently intimately involved and I will not expose them right now.\" She took a sip of the liquor. When he took a larger sip she smiled slightly. The alcohol would help him relax. Though it would numb the telepathic centers she wasn't drinking nearly enough to impair hers. \"I said I can prove it Commodore so why don't I give you the language implant. Lay down on the couch and I will take care of it right now.\"\n\nHe was still giving her an intense look and contemplated her for several minutes. As he was contemplating her he sipped some more on the liquor. It was damn good after the first mouthful burned its way down. Eventually he gave her a decisive nod. \"Fine do your worst. Prove it exists to me.\" Ikarius leaned back and stretched out on the couch. \n\nShe smiled at him as he lay down. \"This is relatively painless though you might need to take a nap afterwards. Yilly said that it made his brain itch. I have never heard of that before and Sally just had a slight headache.\" She settled down on the edge of the couch and placed her fingers on either side of his head. \"The best thing you can do is to close your eyes and relax. Try not to think of anything though I know that is hard to do.\"\n\nAs Teolura was talking she was using her voice to distract him from what she was doing. She sent tendrils of thought down into his mind till she found the speech and language centers. The actual implant didn't take all that long and she removed her fingers. \"How do you feel Ikarius?\" That was in Sholan.\n\nHe frowned since he did have a headache. It wasn't bad but his brain almost felt scrambled. When she asked how he was doing he fumbled with the reply but was able to finally speak. \"I think I am going to have scrambled brain for breakfast.\" As soon as he said that his eyes popped open and he struggled to sit up. As he was sitting up he was trying to uncross his eyes. His mouth formed an 'O' in shock.\n\nShe moved slightly and helped him sit up and wrapped an arm around his shoulders. \"Take a deep breath and close your eyes and give it a few minutes. You should start to feel better shortly.\" She was still speaking in Sholan and had a slight smile on her face. Teolura had to admit that his expression was almost priceless.\n\nHe leaned forward and rested his head on his hands. His elbows were resting on his knees as he tried to wrap his brain around what she had done. \"Okay, I will buy that you have some sort of powers. Beyond that I deny everything.\" Ikarius tried to stand and the room did a sort of twirl and he sat right back down. \"I don't think I am going anywhere for a while. Do you mind if I borrow your couch?\"\n\nTeolura couldn't help but stand and give him a hand sitting back down. \"Sleep might be a good idea. I can tell that you are exhausted. I will have a message sent that you are going to be sleeping on board.\" She lifted the comm. and ordered the message be sent. \"As far as the couch the bed is far more comfortable and there is plenty of room.\" She paused and nibbled on a knuckle. \"Well unless that would be against your cultural upbringing.\"\n\nIkarius was a bit startled at the offer though he had a feeling it was just for sleep and nothing else. \"Um...\" God he was having trouble thinking. That liquor was stronger than it seemed or the language thing took more of his energy than he thought. \"Um, fine, whatever you feel is the best.\" He managed to stand up again.\n\nShe helped him up and to her room. \"Strip and crawl under the covers. If you need it the bathroom is through that door.\" Teolura pointed and when she turned back shook her head. He was just sitting there trying to unbutton the shirt. \"Here let me help you. If I had realized just how tired you were I would have waited.\" A few moments later he was in bed and snoring. Teolura sighed since she should have waited. She finished stripping down curled up on the other side of the bed.\n\n~~~ Sally and company\n\nThe next morning when Satasha and her father hadn't shown up she was starting to get concerned. Vangie had carried him onto the barque and to medical. The doctor had told Sally that she needed to run some tests before she could say much. Desjean had also said it would probably be the morning before she was sure of what was going on. Right now she was keeping busy taking care of the ladies and quietly chatting with her cousin who she hadn't seen for ages.\n\nShe kept giving the door a concerned look and when it finally dinged she jumped up and lunged at the door. Outside she found Vangie and she jumped into his arms. \"Oh god it is good to see you and feel you Vangie.\" The stress was showing in her voice. \"Have you heard anything about daddy?\"\n\nVangie had to stagger back a bit and wrapped his arms around her. \"Calmly sweety and he is doing okay. We won't be able to see him till this evening.\" He carried her into the room and settled down in a chair with her in his lap. \"I am very pleased to see you as well Sally.\" He kept half an eye on the room and gave the females a smile.\n\nWhen he had opened the door everyone tensed since they didn't really remember seeing him before. They were still learning how to identify the individual Sholan's who they didn't deal with on a daily basis. Bitty couldn't help but smile slightly at the scene in front of them. \"So this is your companion huh? So do you plan on introducing him or what?\" The fact that Sally seemed comfortable with him helped her relax some.\n\nSally blushed and tucked her head into his chest as he let out a low rumbling purr. \"Do I want to know what you have been telling them about me?\" He stroked her hair. \"Companion? So I have been bumped up a notch huh?\" He could feel her trying not to cry and figured some teasing was in order. \"So are you going to introduce me or am I chopped fisku liver?\"\n\nShe leaned back and gave him a light punch on the chest. \"Darn you oversized furball I will get you for that.\" Sally said that with a sort of hiccupping laugh. \"Oh you are definitely better than liver of any type.\" She nipped his nose. \"Maybe not quite a filet mignon but I am not complaining.\" She did start giggling though they were sort of teary.\n\nSally turned to the ladies in the room. For a very brief moment she glared at Marcella before speaking. \"This is Senior Warrior Vangie Askeron. He was one of the warriors who boarded the ship and rescued you.\" She shifted on his lap so she was facing the women. \"This is Clarice, Bitty, and Marcella.\"\n\nAs they were talking Ikarius was starting to wake up. As usual when he woke he was laying on his back with his arms stretched above his head. It took him several minutes to really wake up and something felt rather odd. He didn't remember his wife getting a furry blanket recently and whatever was draped across his chest was warm and furry.\n\nIkarius opened his eyes and looked at the ceiling and had to frown since it most definitely wasn't his house. It definitely wasn't the rooms he had been assigned as well. When he looked down and froze. Memories from last night came back and he had to twitch. For a brief moment he wondered if he had gotten drunk enough to do something but finally decided he hadn't.\n\n\"Oh god what happened?\" The last thing he wanted to do was even accidently have a fling with some female, alien or not. As he spoke he felt her arm tighten slightly before she moved away from him. For that he was thankful since it almost felt like he was cheating on his wife.\n\n\"Morning Ikarius and you were entirely too exhausted to make it back to you rooms or wherever you would be sleeping. I offered you my bed and almost before you had your pants off you had fallen asleep.\" She sat up and stretched. \"Well I am for a shower and then breakfast. After that we are going to take the day or two you recommended and discuss a number of things.\" As she rolled out of bed her tail was curled in amusement.\n\nIkarius sat up and was glad that he had his drawers on. She might not have a problem going to bed with nothing on but he did. Well when he wasn't with his wife. He rubbed his face before replying. \"I am so not going to try and explain this to my wife.\" Nothing had happened but still it was not something he wanted to try to explain.\n\nAs Teolura was getting some clean cloths out of her closet she looked over her shoulder at him. \"You have a mate? Where is she? I would like to meet her.\" She finally had some clean cloths. \"Oh, I sent for a change of clothes for you as well. I informed them that you were going to be working with me to come up with a rough plan. It is going to be interesting since your world doesn't have a central government.\"\n\nIkarius actually chuckled. \"She is at home right now and we call them husbands and wife's. She is my wife and I am her husband.\" He stretched and then had to blink since he wasn't speaking English. \"She wanted to come along but she decided that she would be too much of a distraction to me. I tried to convince her but she declined.\"\n\nShe looked contemplative and seemed to come to a conclusion. \"Do you want a shower as well? Your cloths should be here in just a few minutes and breakfast shortly after. A human doctor is going to be arriving shortly and I figure you will want to check on the women right?\" As she was talking she walked into the shower area.\n\nWhen he didn't come with she called out. \"So are you going to shower or not silly? We share showers since it is easier to get clean.\" \n\nThe sound of water started and he sighed. \"This is so not getting mentioned.\" Everything that was happening was going to be sent in a highly classified document to his command. It was going to be hard to explain but he wasn't worried about it getting leaked.\n\n~~~\n\nIt was somewhat later in the morning when the doctor showed up at the ship. He stopped in front of the two warriors that were guarding the ramp leading in. \"Good morning I am Lt. Cmdr Doctor Dominik Anlicker. I am here to see Doctor Desjean if she is available.\"\n\nThe warrior lifted his wrist to his mouth and spoke into it. Eventually he finished and looked at the man. \"The doctor will be here in a few minutes. If you wouldn't mind standing over there please.\" He pointed at a spot off to one side.\n\nDominik nodded and stood off to one side as requested and mentally reviewed what he knew about the females. Capt. Madlax had transmitted a detailed report of the names, ages, and status of the females. It included a listing of the DNA on each female as well as a list of injuries. To be honest he was surprised that they had survived as long as they had. \n\nThe fact that they had survived indicated the medical knowledge of the Sholan's was much more advanced. He really wanted to talk to the doctor and get a better feel for their technology and how it could help Earth. As he was contemplating the ladies and the knowledge he could hopefully get Desjean calmly walked to the entrance. \"Doctor Anlicker please come aboard and follow me. Do you want to see the females first or do you want to go to my office and talk first.\"\n\nHe started up the ramp. Based on what he knew the females could wait for a while before he checked on them. Dominik did want to know how Capt Madlax was doing so he could update his command and government. He was to check Sally out as well just to make sure that she was doing okay. \"Let's go to your office and talk first. I figure since you didn't place a call to me that everyone is still alive and doing as well as possible.\" \n\nDominik followed her to her office and settled down in a chair she indicated. Once seated she poured him a cup of the c'shar which he found boring but okay. \"First how is Capt Madlax doing? Is he doing better than yesterday? I would like to see him if possible.\" He wasn't going to get pushy at the moment but if needed he would.\n\nDesjean nodded at him. As a person he seemed nice enough but when he took on his role as doctor he became very businesslike. \"Yilly is doing fine but he and Satasha are in isolation till this evening. It is related to their telepathy. Till then we can't disturb them. Once they are cleared I will inform you. You can either come back and see him or if you are here then you can examine him with me.\" She sipped on the c'shar and waited for him to speak again.\n\nHe frowned since this whole thing with telepathy sounded rather unreal and silly. Of course there were a number of people who believed they had some powers but it had never been proven. Dominik would admit the possibility and even that a few people might have some talent but that was it. He contemplated what she said and then shrugged. \"For the moment I will believe what you are saying. You are an alien species and might have that but I am far more skeptical about humans having talents.\"\n\nDominik took another sip and if he kept coming over here he was going to have to bring some of the coffee concentrate to use. \"What can you tell me about the females? How are they doing and when do you think you will clear them? Before we contact their families we would like to get a status and do a check-up.\" He didn't bother asking if it was possible for him to see them since they were humans.\n\nShe tilted her chair back and sipped on the c'shar as well. \"Well as we informed you there are six total and they range from sixteen to about forty. Their injuries range from cracked bones to soft tissue trauma to some internal injuries.\" She pulled out six folders and slid them over to him. \"Here is a brief summary of what we found and how they are doing. We can go and see them but I will warn you they are very tense around males they don't know. The best I can say is take it easy on them and don't push.\"\n\nHe nodded and picked up the folders and was surprised that they were in English. \"Give me a few minutes to review these and if you have something to do I can just sit here.\" He flipped the first folder open and started reading it. \n\nDesjean nodded. \"In that case I will be back in about forty five of your minutes. That should give you plenty of time to review them and come up with questions.\" She walked out of the room and made sure a SBA was near in case the human needed something.\n\nSometime later she came back to the office and found the doctor sitting there staring into air. \"Food is going to be delivered to the ladies soon. Why don't we go and say hello and go from there?\" She figured it would be a good way to get them comfortable with him. \"They are very twitchy with males they haven't met so please be quiet and move slowly.\"\n\nDominik managed not to roll his eyes at her. It wasn't like he was green from school or something. No he normally didn't deal with this type of issue but he did know his ass from his elbow. \"Understood doctor and I will be careful not to scare them any more than they might be at this time.\" He gathered the folders and followed her to the rooms they were in.\n\n~~~\n\nMean while Billy was slowly waking up next to Satasha and pulled her arm a bit tighter around him. He glanced at his watch and found it was late afternoon. Just for good measure he yawned and shifted so he was on his back and stretched. \"Hey sleepy one I definitely think it is time to get up and get a shower.\" They had been active and the room definitely smelled of it.\n\nSatasha mumbled in her sleep and when he rolled on his side her arms pinned his head down. She started to lick one ear as she slowly woke up. When Billy tried to pull away her arms tightened and Satasha licked some more. \"Mmm don't want to wake. Go take a shower for me.\" Satasha was definitely feeling warm and comfortable.\n\nThat was till memories of the previous evening came back to her and she twitched. \"Oh god, how am I going to explain this to my parents? They are going to have a cow.\" Having an alien mate was one thing but an alien leska? That was a whole different kettle of fish.\n\nBilly snickered at her. \"I would have to drag your hide in there to take a shower for you and I don't think that is what you want.\" When she stiffened and groaned about telling her parents he looked offended. \"Are you saying that I am good enough to bond with but not show to your parents?\" As he was talking he could feel her reaction to her thought and knew that she wasn't embarrassed about him.",
        "She sat up and frowned at Billy and grumbled at him. \"No Yilly that wasn't what I meant at all. It is just...\" It was a totally overwhelming feeling everything he was. Yes she was used to the feelings from when you touched someone but this was so much more. \n\nHe sat up and wrapped his arms around her and rested his head on her shoulder. \"I know love and believe me I am freaked out even more.\" Billy's eyes were closed as he held her and shuddered slightly. \"I know and I still don't have the experience to really filter much of anything out.\" After one last hug he stood and slowly walked to the bathroom to take care of his needs. Once that was done he started a shower and stepped in and let the water flow down his back.\n\nSatasha silently joined him and started rubbing his shoulders. She could feel his stress and tension over the bond. \"I am sorry Yilly about this. It had never occurred to me that something like might happen. It is hard but doesn't change my feelings. I love you Yilly and to me that is what matters.\" As he started to loosen up she started working on his back.\n\n*I love you as well Tasha but it is going to take some time for me to come to terms with this.\" He was leaning against the wall and let his head hang. \"Please be patient with me Tasha as I grow into this, this, link thing.\" Billy felt bad saying that and really hoped she would understand.\n\nShe hugged him and sent him all the love she could. *I understand Yilly and take all the time you need.* Satasha wrinkled her nose. \"Well all the time except for the fifth day that is.\" She had a feeling that was bothering him as much as anything. Neither of them had ever been driven to mate by a mental link or otherwise.\n\n\"Thank you Tasha and it means the world to me that you understand.\" They didn't take too long showering since he wanted to see his daughter and the other ladies. Once they were out he stared at his cloths and wrinkled his nose and then frowned. It seemed that his sense of smell had gotten better since everything seemed more intense.\n\nRight about then his communicator started buzzing. Billy picked it up and flipped it open. \"Billy speaking, how may I help you?\" He kept looking at the communicator and waited for the reply.\n\n\"Good evening Captain. This is Lt. Yeagers at the main entrance. I have three people asking to see you. Here is an image of them.\" The officer on the other end sent an image of Jenna, Sandi, and Danielle.\n\nBilly looked at the image and wondered how it was being transmitted to him. The comm. he was using was Sholan. When it appeared he almost dropped a load. \"They are friends and my youngest daughter. Please have them escorted to the Sholan barque. I will meet them at the ramp.\" Once he hung up he hit the intercom for the room.\n\n\"I need to see the doctor. It is urgent that I talk to her. I have guests being escorted to the ship.\" His call was replied to immediately and they talked for several minutes before the call was disconnected. Billy did pull on his drawers and waited for someone to come and see them.\n\nThe doctor had been contacted and since the ladies seemed to be doing fairly well with the human doctor she left the room. It was possibly because Sally was there as well as one of the warriors that rescued them. By now all six females were in the room since he wouldn't need to repeat what he had to say more than once. Z'Marl and Kingie were in the room as well. Crystal wasn't quite as clingy as she had been but that could simply be because of the human. She was sitting rather close to him though.\n\nThey had been talking to the females for a while when she received a text that Billy wanted to see her. \"Please excuse me but I am needed in medical. If you need anything Doctor just ask and Kingie will see to it as best possible.\" She gave all the women a nod and then left the room. She hoped that they wouldn't freak out with her leaving him in the room. Desjean didn't think it would be a problem but with this sort of trauma you never knew.\n\nWhen she reached medical she went straight to the isolation room and opened the door. There was very little of the raw sexuality in the room which indicated their link day was over. \"How may I help you Yilly?\" He was looking so much better than the day before when Vangie carried him over.\n\n\"Afternoon or whatever time it is. I have some visitors being escorted to the barque and wanted to get checked out. The visitors include my youngest girl as well as two of my best friends. I would prefer to meet them in a lounge instead of here.\" Billy really didn't want to be sitting in isolation when they were brought onboard to visit.\n\nSatasha could feel his concern about that as well as introducing her to his youngest. To the best of her knowledge Danielle had no idea that he was in a relationship with her. She hoped that this would go as smoothly as it had with Sally, Jenna, and Sandi. It was going to be interesting to say the least.\n\nDesjean gave him a grin. \"What you don't want to be sitting almost in the buff when they arrive? How odd.\" She had to tease him some just for good measure. \"Actually now that both of you have mated and the bond is formed you are safe to leave. I will tell you that every five days you will have to be in a shielded room since you will broadcast raw sexuality.\" Just for good measure she used the diagnostic unit to draw some more blood samples.\n\n\"I am going to start doing some tests to see what if any changes there might be. I will keep you up to date on this and what I find.\" She put the vials away and turned towards the door. \"I have some clothing being brought right now and will have your friends and family taken to a lounge to talk.\" Her tail was set at a jaunty angle when she left. Desjean almost wished that she could be there when he introduced Satasha.\n\nBilly growled slightly. \"I get the feeling we are being laughed at.\" As he was grumbling one of the SBA's came in with some tabards for them and some over robes. Billy sighed. \"Thanks and we will have them returned after they are cleaned.\" He pulled them on and the sandals last of all. They had been given a bag for their dirty cloths. Billy knew that his had a serious funk going since he had sweated badly before he had been brought over.\n\nSatasha snickered at him. \"Oh most definitely though I have a feeling most of it was aimed at you.\" She dressed as well and took a moment to make sure the clothing was fitted over her tail correctly. \"I can't wait to see Jenna and Sandi again. I am a bit nervous meeting your youngest as well.\" Danielle didn't know anything about their relationship to the best of her knowledge. That was very daunting.\n\nOnce they were dressed Billy took her hand and walked out of the isolation room. Outside was a warrior. \"If you will follow me please I would appreciate it. Oh, by the way, here are your leska badges.\" He handed over the purple badges with the Sholan L in it. Both pressed it against their over robe and with a nod started to follow him.\n\nThey were shown to the sick room first and Billy smiled. \"Sally your sister is here. Bitty would you like to come with and see Dani?\" As he was talking he smiled at Z'Marl as she came over and gave him a good hug. He wrapped an arm around her since he was going to drag her with as well.\n\nBitty slowly stood up and smiled. \"I would love to see Dani and visit for a while.\" As she stood up Sally wrapped an arm around her. \"Thank you Sally but I am sure I can walk. I am just a bit stiff now.\" She moved towards the door but didn't bother moving away from Sally.\n\nSally really wanted to help but settled for letting Bitty hold on. \"So daddy how does it feel to be surrounded by women?\" She managed to say that with a straight face. Bitty actually snickered slightly and Sally grinned at her.\n\nSatasha snickered at her as they walked out of the room. \"Now Sally you shouldn't pick on your father that way. Keep in mind that two of the women in question are related and there is Vangie as well.\" She grinned at Vangie though he was keeping a stiff upper lip as they were being teased. \"Now Jenna and Sandi I might invite over for a home cooked meal.\"\n\nBilly traded looks with Vangie but didn't say anything. Instead they settled for following the warrior to the lounge. He walked into the room and smiled. \"Dani you are looking really good. So what brings you here?\" There was a slight grin on his face when he said that.\n\nShe looked up and after standing hurried over and gave him a good hug. \"Pappa you are so silly. There are aliens here and you came back with them or brought them here. What do you expect me to do? Stay home and study?\" She gave him a good hug and squeeze before she shyly looked at the Sholan's in the room.\n\nBilly laughed at her and returned the hug. \"And I am sure that Jenna and Sandi didn't tell any stories right?\" Both women simply smirked at him and he had to roll his eyes. \"Why don't we have a seat at the table and I will give you a brief run down as well as introduce everyone. You should give Bitty a hug as well. She has had a rough time recently and could use a good hug.\"\n\nDani did that while everyone found somewhere to sit. Sally didn't even think twice before getting drinks for anyone that wanted one. Eventually everyone had something to drink and Bitty finally nudged Dani over to the table. \n\nOnce everyone was seated he looked over at Dani. \"Sweetie hold onto your seat and try not to fall out. You are going to have trouble believing this but I am married. Actually it is considered a mating contract and Satasha is my bond-mate.\" He wrapped an arm around Satasha and gave her a kiss. \"This is Z'Marl my companion.\" He had been intending to see if she was interested which he believed she was.\n\nDani was getting ready to say something when Billy spoke and she closed her mouth with a clomp. Her eyes flicked between the three of them and there was shock written on her face. She tried to speak but this was so not what she was expecting. She finally managed to get something out though it really didn't sound very intelligent. \"Huh? What? How... I mean... Oh god I am getting a headache now.\"\n\nVangie tried to cover his laugh with a cough but wasn't quite successful and he got glowered at. \"I am pleased to meet you Dani. I am seeing your sister currently and she does keep me on my toes. As far as causing headaches that seems to be a specialty of Yilly's.\" He wrapped an arm around Sally and smiled as she leaned into him.\n\nBilly managed to keep a straight face. \"As far as how she crash landed at the house and while she was helping me get my ship fixed it just sort of happened. She is a lovely young woman and a damn fine officer. She held me while I cried and grieved for your mother. She helped me past it and to start living again.\" He looked up at her and a very shy smile was on his face. \"I do love her and deeply and she knows that.\" His hand was stroking the bracelet as he was talking.\n\nSatasha gave Dani a warm smile. \"I feel much the same about your father. He is a very special and wonderful man. He helped me by giving me some country hospitality, let me curl up next to him for comfort, and brought me back to my people.\" She lightly nuzzled his hair in contentment.\n\nZ'Marl still had her ears down due to what Billy had said. He hadn't taken her as his companion and didn't know he felt quite that way. She knew that he cared for her but hadn't realized he liked her quite as much. \"Thank you Yilly. I still think you like me for my mind.\" She gave Dani a shy smile.\n\nDani narrowed her eyes at the two females and contemplated the two females. Eventually she looked at her father and then Sally. \"Fess up Sally how old are they? Daddy mentioned Satasha as being a lovely young woman and I have a feeling Z'Marl is also fairly young.\" She was trying to distract herself for the moment.\n\nBilly snickered. \"You forgot to ask how old Vangie is as well Dani.\" As she was glaring at him he took a sip of the c'shar. \"I need some instant coffee darn it. This stuff is just so boring. Well either that or a good snort of rum for it.\" He took another sip from the cup.\n\nSally couldn't help but grin. \"Well it seems pappa likes younger women since Satasha is about 28 and Z'Marl is 22 or so.\" When Billy sighed she snickered at him. \"Well since pappa has decided he likes younger ladies I decided to go the other way. Vangie is about 38 or so.\" When Dani stared at them she snickered at her little sister.\n\nDani lowered her head to her hands and groaned. \"Now I really do have a headache. At least I decided to date someone near my age. Am I the only normal one in the family?\" This was just too much. \"I came here to see how you were doing and this is what I get?\"\n\nBilly reached over and wrapped his hand around hers. \"Dani I am doing much better than I was. Tasha has started to teach me how to live again. Z'Marl is as smart as we are and we have had some very enjoyable conversations.\" He smiled at Z'Marl. \"She can also take my equations and make them understandable by most.\"\n\nThat got her to lower her ears even more and look down at the table. \"I think you exaggerate a bit. I am just a moderately smart female.\" She gave Dani a shy look. \"I do enjoy spending time with your father. He is a really fascinating person.\"\n\nBitty was smiling at the conversation. \"Well Billy I must say that you have an interesting relationship. Two lovely young ladies falling over you. I know of at least two others who have commented on you.\" She hadn't but had to needle him a bit.\n\nBitty came over and settled down next to her and wrapped an arm around Dani. \"Believe me they are a wonderful people and have been taking very good care of us.\" Her face was looking strained. \"Billy and the Sholan warriors aboard his ship saved us. They pretended to let the pirate's board and retaliated. They took over the ship and when they found us...\" Her voice faltered for a few. \"They saved us and gave us medical attention, food, clothing, and showers. I will do anything for the warriors that saved us.\"\n\nDani took a close look and wrapped her arms around her and looked over at Billy and he shook his head. He mouthed 'later' at her and got a nod back. \"Well Bitty you are going to have to introduce me to the Sholan's that helped you and maybe the doctor. I would like that before I need to head back home. College and my boyfriend calls.\"\n\nDani looked at her father and gave him a lopsided grin. \"So any other bombshells you want to drop on me?\" Why she bothered asking she wasn't sure but it was sort of an instinctive reaction with her father. He didn't normally have just one or two bombshells. It just wasn't the way it worked with him.\n\nHe looked down at the table and sort of doodled. \"See the purple on the robe? Well it means I am a telepath, or something like that. The purple emblem with the sigil on it means that I am a Leska and Tasha is my Leska. We have a permanent mental bond that can't be broken. Every five days we have to spend alone as we swap memories of the last few days.\"\n\nShe simply shook her head. \"Fine. I think I would like to get something to eat and somewhere to lie down.\" This was entirely too much information for the moment. All she had wanted to do was see how her father was doing. What ended up happening was she got sandbagged and big time.\n\nBilly gave her a wry smile. \"I understand and some of the rooms on my ship have been cleared out and you will love the beds.\" He stood up and walked around the table and pulled her into his arms and gave her a hug. \"Let's get you fed and tucked in Dani.\" He looked at Bitty and smiled. \"If you feel up to coming over to the ship and sleeping as well that is fine. I can tuck both you and Dani in the same stateroom. Most of the warriors have been moved out but there are some on watch at all times.\"\n\nEveryone stood up and Vangie nudged Sally over to Bitty. \"I will be over there in a few minutes. I have something to take care of.\" He walked off and his tail was lightly swishing.\n\nBilly smiled at the warrior that was at the door of the lounge. \"We are going to my ship for the evening and unless the doctor says otherwise they are staying. Can you show us out please?\" Dani was leaning against him and he hugged her a bit more. As the warrior led them off the ship he thanked him and headed towards his ship.\n\nOnce they made it to his ship he led her on and towards the living area. \"Most of it is the same as the last time you were on her but the rooms are somewhat different. You will love the beds.\" He winked at her. \"Maybe you can invite your boyfriend over and make use of them.\"\n\nDani pinched him and frowned. She looked around the ship and it did mostly look the same. She finally flopped on a chair and rubbed her head. \"It is good to see you pappa but I do have a headache now. Is the kit where it usually is?\" He nodded and she stood up and headed towards the front.\n\nSatasha started some food cooking and also started a pot of water for some coffee. She figured after everything they had said everyone could use some coffee. \"Yilly I am going with something from your world. I will keep it mild.\" When he gave her a hug and kiss she leaned into it before starting to get to work. She was purring quietly as she was working on the food.\n\nBilly stretched. \"Sally could you please show all the ladies to some staterooms? The ones closest to ours are unoccupied and have been cleaned out.\" She stood and left the room as Billy started working on the coffee. \"I think industrial strength will be a good idea tonight. I definitely feel the need to relax and blow some steam off.\" As he was working he reached into a cupboard and pulled out a bottle of brandy and filled the cups for the humans with a decent shot.\n\nHe handed out the other cups and had to blink when Vangie walked in with Kingie and Crystal. She was looking a bit nervous. \"Hey Crystal welcome aboard my ship. Have a seat and would you like some coffee?\" He poured two more cups and handed them over to the two. \"Kingie it is fixed strong so take it easy.\" He smiled at Crystal. \"It has an effect similar to alcohol on Sholan's.\"\n\nKingie snickered slightly. \"I will take it easy on this cup and the next weakened.\" He sniffed at the food and smiled. \"Smells good Satasha. I will set the table for everyone.\" He nudged Crystal and showed her where the dishes were and they started setting the tables. He did keep a close eye on Crystal though he didn't make it obvious. She seemed to be doing okay but then again she knew most of the people.\n\nVangie looked at the two of them. \"Are you really Leska's? If so how did that happen? Do you know?\" He wanted to know since that was the last thing he wanted to happen. Yes he cared for Sally and enjoyed her company but he didn't want to be permanently linked to anyone. \n\nSatasha smiled and nodded. \"We are and we aren't sure what happened. The doctor is doing some research on it to see what she can find.\" She tasted the food and started adding a few spices. As she was cooking the coffee was finished and Billy poured it and handed her a cup after fixing it the way she liked it.\n\nThe others came back from their rooms and Jenna was grinning. \"Oh my yes I like the bed. Did you steal the tech from them?\" They had tried the bed and it was more than comfortable. They couldn't wait to really try it out.\n\nBilly snorted. \"No actually I didn't. They upgraded the beds for the warriors who were staying aboard on the flight here.\" He settled on a chair and stretched. \"It is going to be nice to be back in our cabin and get in some serious cuddling.\" \n\nThey continued talking for the rest of the evening and as people got tired they said good night and headed towards bed. The next morning everyone was awakened by the alarm Billy had set. They had things to do today and he really wasn't looking forward to it. There were interviews, pre-treaty meetings, and several other items. Most of them included Satasha as well. ",
        "~~~\n\nGeneral we have a report for you. The speaker waited for the General to wave him forward. As soon as he did the speaker moved forward and handed a screen to him. \"We found indications that the others are in this area.\" He tapped his screen which was linked. A map of the quadrant came up and indicated the hyper traces they had found. \n\nThe General looked at the screen and after several minutes he nodded for the other to continue. This was the first time they had found traces of the others since the ship had been destroyed. His high command wanted to know where they were from and possibly capture some of them for questioning. For some reason when the attack happened the troops had gone berserk and literally tore the ship apart. He had not been pleased with that.\n\nThe speaker tapped the screen again with a claw. \"The indications show a number of small craft scattered around in the quadrant. It appears that they are searching since they have entered a number of systems. There is also a trace of a ship with a different hyper signature as well.\" He had pulled up the traces of that ship. \"It has an odd hyper signature that we have not come across before. Indications are that it is a fairly large ship based on the traces discovered in hyper space.\"\n\nThe General frowned and really studied the screen. This time he actually scrolled through the report instead of having the speaker inform him. He did that to ensure everyone knew who was in charge of the destroyer they were on. \"Send a message to Command HQ about this and redirect half the small craft towards the traces we have found. I want to know what they are doing. If possible capture some of the Others and have them brought here.\" He studied the screen and ignored the speaker which was his way of dismissing him.\n\n~~~\n\nHe was sitting in his living room sipping on a large tumbler of Vodka on the rocks when the call came in. After considering a few moments he put the glass down and activated the screen. All he could see was a shadow since there was a light behind the person. The voice was also electronically modified so he didn't know if it was male or female.\n\n\"What can I do for you?\" That came out in an irritated tone. He had been grounded for the time being and that had seriously pissed him off. \n\nThe shadow stared at him long enough to make sure the other was uncomfortable. \"Do you have anything to report? This is especially related to the engines. We want to know what he did to them.\" They also needed to get their agent out of the compound the crew and everyone else was in. The loss of the ship and her crew was rather upsetting since they had been a very productive crew. Personally Jack Sparrow was despised and the person hated having to use him. It advanced their plans though since he had been sowing fear all over the place.\n\nHe leaned forward and pressed the transmit button. \"Here is everything I have on the ship. Scanner data, external visual, weapons, and everything else. We never got inside so I can't provide you with any interior video.\" That had been his fault and he knew it. \"I would suggest possibly removing the captain from the equation. That will give us the ship and superiority over most other ships.\"\n\nThe shadow stared at him again and finally spoke. \"That is of no concern of yours. Stick to what you have been tasked with or you might die in an accident.\" Even through the electronically disguised voice the lack of concern about that possibility. \n\nHe shivered slightly at the tonelessness in the person's voice. \"Yes sir I will keep that in mind.\" Before he even finished talking the screen went dark as the connection was broken. He picked up the tumbler and took a healthy drink from it. He was already thinking how to get the information they wanted. That should be possible working through channels. He could use the 'untested hardware' to force Billy to open up his notes on what had been done to the engines.\n\n~~~\n\nAlmost from the moment the mention of meeting an alien species had been made the Company had sent him a tasking. Since he was already in Europe getting to Switzerland wasn't difficult. He immediately started playing tourist and taking pictures. Considering that there was a huge crowd gathered around the landing area he blended in. He did get a few pictures of the Sholan's and was going to examine them to get all the details he could.\n\nEventually he made it back to his room and started reviewing the notes he had made as well as the photos. It took several hours for him to do that but he quickly had a plan. It was going to be difficult and he would probably have to leave everything behind but he was being paid extremely well. After crashing for a few hours he started reviewing the plans again.\n\nHe might have to sit and wait for some unknown length of time but he was patient. He was used to waiting for lengths of time to take out his target. In this case he had to be very careful since taking out the wrong person could be catastrophic. Well catastrophic to his life. The Company tended to take a dim view of a screwed up op. Eventually he packed up what he needed and headed out.\n\nThere was a tower that would work as a snipers nest. When he reached it he picked the lock and closed and locked it behind him. He had no idea what the tower was for and didn't really care. It was perfect for being able to scan the landing field and pick out his target.\n\nEventually he was set up and ready. He had a cloth that muted body heat and blocked some scanning devices. How it might do with the scanners on the Sholan vessels he didn't know but he was sure it would do adequately. It didn't take long to assemble the gun and get his firing position ready. Now all he had to do was simply wait.\n\n~~~\n\nBreakfast was done by Sally this time and he was pleased with the results. Everyone looked like they had slept well and that included Crystal. After checking the schedule on his watch he sighed. \"Well Tasha and I need to go over to the barque and attend several meetings. I also have a teleconference scheduled for causing more headaches.\" He grinned and several of the others groaned.\n\nSince nobody else had anything to do they decided to go over to the Sholan ship as well. Sandi and Jenna linked arms with Z'Marl as they walked out of the ship. They were chatting with her as they were walking. The others were walking out as well and sort of formed up in groups that matched up with who they were connected to.\n\nBilly was walking with Satasha and had her hand in his and was greatly enjoying the gentle flow of energy. It was warm and soothing at the moment. He was sure if and when they had an argument or disagreement the energy would feel different. That he wasn't looking forward to but it happened and you took care of it. \"This is going to take a bit of time to get used to Tasha. It feels so strange to know what you are doing and how you are feeling at any moment. I hope they can teach us a way to filter our thoughts on normal days.\" \n\nShe had to grin and then sobered a bit. \"I understand Yilly since I feel much the same way. I love you and wanted the bonding contract and to be with you. This is a bit more than I asked for though.\" She wrinkled her nose when he squeezed her hand. Just for good measure she lightly bumped him with her shoulder and smiled as he laughed at her.\n\nHe was about to reply when a sudden sense of dread came over him. Dread and danger and it was focused at them. He looked around trying to pinpoint the source but wasn't able to. As he was looking his senses expanded and he drew on Satasha without realizing it. Right as he identified the source he felt a surge of satisfaction.\n\n~~~\n\nThe sniper was watching when they walked out of the ship and smiled. This was perfect and if he was lucky he might get more than one or maybe two shots before they figured out where he was. He put the binoculars away and settled behind the rifle. He carefully sighted in and with a slight smile gently squeezed the trigger. As with the best shots the sound of the bullet and the recoil was a slight surprise.\n\nAs he was laying there he kept an eye on the targets to ensure he hit what he had been aiming for. If he hit he would shoot at someone else. They hadn't set any specific number of targets and he had gotten the impression that it was a case of the more the merrier.\n\n~~~\n\nWhy Billy lunged at Vangie later he wouldn't know. He nailed him in the side and managed to knock him over and into Sally. Right as they were falling the bullet struck and Billy was nailed in the shoulder blade and the round came out of his chest. It grazed Vangie but not seriously but Billy went down hard and screamed in pain.\n\nSatasha went down as well as the surge of pain from Billy hit and she screamed as well and collapsed. She tried to block the pain but they were to new to the bond and Billy wasn't all there mentally. Jenna and Sandi had rushed over to her to see if she had been hurt as well.\n\nThe response was almost instantaneous as warriors from everywhere came pouring out. A number made a defensive perimeter and started trying to figure out where the shot had come from. Several others hurried over and took a look. \"Get them to the barque and especially Yilly and Satasha.\" \n\nFrom the fighter a weapon lifted out of the top and a single beam flashed out and the top of the tower vanished in an explosion. As that was happening Swiss army soldiers came flooding out as well. Their sensors had picked up the shot and the rough location where it had been aimed. As they were forming up the fighter craft lifted off and hovered over the people on the ground. Her sensors were fully engaged and scanning for any additional threats.\n\nAs all this happened several warriors had picked up the injured and almost ran towards the barque. The pool of blood was large and spreading. Sally and Dani tried to get to the bargue the warriors almost had to drag all of them onto Billy's ship and closed and secured the hatch.\n\nBy the time they got Billy and Satasha to medical he wasn't looking very good and was pale with blood loss. The doctor immediately started working on him and finally stood back. \"Prepare the cold sleep capsules. I don't have what I need. Both need to be put in cryo till I can get them back to the mother ship.\" The last Billy remembered was a chill from the meds and the cover coming down over him.\n\n~~~\n\nI hope you enjoyed this installment of the Sholan Alliance stories. Please leave a comment and vote. I really look forward to knowing what you think."
    ],
    "authorname": "maxd01",
    "tags": [
        "feline aliens",
        "space travel",
        "injuries",
        "telephathy"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/sholan-alliance-au-bk-02-ch-03"
}