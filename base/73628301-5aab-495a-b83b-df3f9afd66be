{
    "title": "His Guiding Light",
    "pages": [
        "Title - His Guiding Light\n\nCould the light lead him to love?\n\n**************\n\nAuthor's note -- I'd like to thank my editor, who always makes the story better. The prereaders and editors that help with our stories deserve all the praise they get and more. Thank you. All mistakes are my own.\n\nThe next paragraphs give some small insights into the story, so you don't waste your time on something you know you wouldn't enjoy. If you don't like knowing in advance, then skip past the next set of asterisks.\n\nI started off writing a justice-is-served story and ended up writing a feel-good story. A heaping, helping of justice is still served up in this story, so if that bothers you, then you probably won't like this. If you cannot stand some amount of forgiveness, then this probably isn't for you either. At 26k words, it isn't short, so you've been forewarned. There is almost no sex in this story. If you have the time, I hope you'll read it and let me know what you think. This may be my last story for a while because I've barely started my next one.\n\nThis has a bit of early Mother's Day rolled in, with love going out to strong moms.\n\n**************\n\nThe applause continued for several minutes as the guest of honor was celebrated that night. It wasn't the first time that Zach had sat through a minute of applause for his wife, Cassie, but this was probably the longest. Some of Houston's wealthiest families had come out that night to celebrate local charities, and for the second time in five years his wife was the guest of honor because of her work leading the WoW Foundation of Houston.\n\nHe was extremely proud of his wife, and she gave her usual classy and inspiring speech. Towards the end, when it was time for her to thank all those who had contributed of their time and their money that year, she looked at him, and he almost imperceptibly shook his head, so she smiled at him and thanked her family for being her foundation of support and providing her with the strength and encouragement to lead the charity each of the last several years.\n\nAs the graceful woman finished, she received another nice ovation, which meant it was time for the small orchestra to play. For the WoW Foundation, there was never any shortage of musicians who would come out to play. A particularly good local vocalist performed some during the evening, also.\n\nAll through the speeches, sitting next to Zach and holding his hand was Gabriella, Cassie's mother. Though in her late seventies, she was still a fashionable woman. Now standing, she leaned in and quietly asked, \"You really should let her thank you directly. You know that's why she always looks this way.\"\n\nHe replied to his wonderful mother-in-law, \"Mother, if anyone can wear me down, it will be you, but we've had this discussion. I wouldn't be sitting here were it not for her and you. It will always be me that is forever grateful to her, and to you.\"\n\nShe squeezed his hand and said, \"Yes, that may be true, but I would say that you contributed more than your fair share to your family, our family. She wouldn't be standing there, and the foundation wouldn't exist without you. I couldn't have a better son-in-law, and I couldn't love you more if you had been born to me.\"\n\n\"Let's agree that she and I had really good guides for parents.\"\n\n\"You can be a frustrating man Zachariah Davis.\"\n\nHe laughed and said, \"Well, I think I learned most of that from your late husband.\"\n\n\"I know, and I love you all the more for that. The Lord took him too soon, but if the quality of life counts over quantity, then he had very, very good years.\"\n\n\"Yes, and he told me that was because he lived those years with you.\"\n\nGabriella tried to hold back the tears while kissing Zach on the cheek. She missed her husband, but at least she was still healthy and had a wonderful family to love and to love her.\n\nZach missed him too. He probably wouldn't be married to Cassie, nor enjoying where he was had it not been for Sam and Gabriella Ortiz.\n\n_______________\n\nTwenty-five, or so, years earlier...\n\nAs usual, Zach was late. Another last-minute out of town trip threatened to cause him to miss the symphony performance that evening. He had asked Mary, his girlfriend for the last four months, to meet him there. He promised her that she would definitely enjoy the night and that they had fabulous seats.\n\nZach picked up the tickets from the theater's will-call five minutes before the show, but his date was nowhere to be seen. Five minutes after the concert had started, she still wasn't there. Damn. He was waiting outside in the cool February air, when he called her phone, there was no answer. A few minutes later he received a text -- \"I'm not coming. Cannot count on you. We're done.\"\n\nHe sighed. Four months down the drain. He couldn't blame her. It was his job. He was a highly trained MRI engineer and was only sent out when there was a serious problem uncovered during routine maintenance or when, heaven forbid, something broke. Unfortunately, those trips tended to be unpredictable which meant he had to cancel a lot of last minutes dates and even missed her recent birthday. Another sigh. He had been looking forward to the evening and decided to go inside and try to enjoy the performance anyway.\n\nQuickly and quietly, he eased his way towards the front of the very full hall, dead-center, about ten rows from the front. Almost as soon as he sat down, he was thinking, 'Mary who?' because next to him was a stunningly beautiful young woman, who appeared to be accompanied by her cute female friend. They both seemed to be near his age, which was late twenties.\n\nSince the performance had already begun, Zach nodded at them in greeting, and they both gave him a polite smile in return. Tonight's performance was a collection of works from Mozart featuring several violin concertos. During the intermission, Zach offered the ladies, \"Good evening, can I offer to buy either of you something to drink?\"\n\nThe cute one said, \"I'm good, but thank you. Maybe after.\"\n\nThat elicited a grin from the beauty who said, \"Mindy, I'm sure he has plans 'after,' but it was a nice offer. Thank you.\"\n\nZach chortled, \"Well, as you can see, there is an empty seat next to me, so it appears I've been stood up, which means I do not expect to have any plans after this. Too bad because I had reservations across the street at Arturio's. I hear the food is mouthwateringly good. I'm Zach. If the two of you don't have any plans, would you care to join me 'after.' My treat.\"\n\nNot waiting for her friend, Mindy said, \"Nice to meet you Zach. I'm Mindy and this is Lisa. I would love to join you. I've always wanted to eat there. Lisa, you can join us or not, but I'm going.\"\n\nZach liked Mindy's spirit, and she was cute. What he was hoping for though was that they would both join him, so he could spend a little more time admiring Lisa. Mindy seemed to be enjoying the concert, but Lisa was quite a bit cooler and more critical of the performance. They shared a few more minutes of chit chat until the second half of the performance began.\n\nWhen the performance ended, there was a broad ovation for the orchestra, including himself and Mindy, but Lisa still seemed rather cool. However, next, she turned to Zach and said, \"So, Arturio's, huh? Let's go.\"\n\nZach was thrilled. He truly did have reservations, but they were for two. After explaining the situation to the hostess, he slipped her a $50, and a few minutes later, they were seated at a table. The ladies were suitably impressed.\n\nMindy asked, \"So, Zach. Even though your being stood up has worked out well for me, do you know why your date didn't show?\"\n\n\"Yeah. It's mostly my fault. My job is appalling from a scheduling standpoint. I may have to fly across or out of the country at the drop of a hat, which means I've had to cancel on her several times because I had to leave town. I know it wasn't fair to her. It's too bad because I had to call in a favor from my boss to get tickets that were that good. I was trying to make it up to her with good seats and a nice dinner. Do you two get to go to the symphony very often.\"\n\nMindy said, \"Lisa gets to go quite often. Tonight is the first time I've been in a while. Since I'm her roommate, I'm usually insanely jealous.\"\n\nZach looked at Lisa, and he could see her thinking a moment. She said, \"I have a degree in accounting, but I have a minor in music. I used to love playing, but it's more of a hobby now.\"\n\nMindy snorted, \"What she means is that she plays fabulously, but she's learning how to better critique performances instead of playing in them. Now she hardly plays at all.\"\n\nLisa turned to look at her friend, but it was not a friendly look that she gave her. She replied, \"Well, I'm learning how to appreciate it more than I once did, back when I just played.\"\n\nZach asked, \"Oh. What instrument do you play?\"\n\nMindy spoke up, \"She is amazing on the violin. You should hear her.\"\n\nLisa said, \"I still play some, so I don't lose it all, but I wasn't good enough...at least, not good enough to make a living at it.\" Then turning to Mindy, she said, \"and that's all I want to say about my playing.\"\n\nZach could tell it must be a bit of a sore subject between the two of them. They ordered their food and enjoyed their dinner together. Zach found out that Lisa was a CPA and worked at a local hospital near Rice University. Mindy was a Montessori schoolteacher working with kindergarten-aged children, and her school was less than ten minutes from where Zach worked. She loved what she did, but like most Montessori teachers, she wasn't making a lot of money doing it.\n\nAt the end of the evening, after Zach paid the bill he said, \"I know I'm being forward in asking this, but I'd love to see you two again. If you are willing to give me your phone number, I'll call you. If you'd prefer to think about it, here's my business card. As I told you though, I do tend to travel unpredictably.\"\n\nMindy didn't hesitate, \"Let me see your phone.\" Once he handed it to her, she dialed her number. She said, \"I'd like to do something. I love fancy like this, or barbeque, too. I'm not high-maintenance.\"\n\nHe liked that. Lisa didn't seem to be ready to share her information, so Zach thanked them for a lovely evening and wished them a good night.\n\n_____________\n\nIt was late in the day on Monday when Sam Ortiz, the owner and CEO of Magnolia City Diagnostic Instruments (MCDI), and his wife, Gabriella, knocked on Zach's door. They asked him, \"so, how did those tickets work out? Did you and Mary have a good time?\"\n\nZach laughed and told him about being dumped but meeting two other women, with whom he shared dinner.\n\nSam was a great CEO and a good guy to work for. Zach had been with him for nearly nine years, starting as a college intern, and loved every minute of it. Sam was in his late fifties with early grey hair showing and Gabriella's food was probably too good, because he needed to shed a few pounds.\n\nHis wife Gabriella was something else; not in terms of beauty, but she was a force in and of herself. She was the only woman he knew where he felt like he should be deferential all the time, because of the way she carried herself and acted. She was like a cross between a queen and the leader of a girls finishing school -- always proper, always dressed impeccably, never in slacks, nor jeans. Zach wondered if she even owned a pair of jeans. Probably not. She exuded confidence, but not cockiness. While many on staff thought her a bit too stuffy, Zach thought she was the rarest of gems, and she liked him as well.\n\nNeither her face nor her figure would be considered above-average attractive, but she was an expert at clothes and make-up and made herself look nice by accentuating what she did have.\n\nIt was clear that she and Sam were truly partners in business and in life. She had some past involvement with the company's accounting department and continued to help prepare the quarterly and annual numbers. Her real value, now, was in helping Sam interview new employees, including Zach many years ago. She was also deeply involved in a local charity.\n\nThey had three kids all within a few years of Sam, with the oldest son a newly practicing surgeon, the middle daughter studying medicine and biomedical engineering and their youngest, another son, also a new engineer at the Ortizs' company. By all accounts, the children were fine people, just like their parents.\n\nSam said, \"I'm sorry about Mary, but if you came out of the night with two, at least that's something. Hopefully your next girlfriend will be more understanding. You know I won't ask you to travel forever, right?\"\n\n\"I know and thank you. Truthfully? I like what I do. Keeping those machines operating is important to the hospitals, their patients, and our company. So, I'm willing to have an unpredictable life a little longer. Maybe in a few years we'll find a way to scale it back. Or better yet, hopefully, we grow enough that you can hire a few engineers that reside in each geography, so cross-ocean travel is limited.\"\n\nSam smiled, \"that's the plan, Zach. That is the plan. Hopefully one of those two ladies will work out.\"\n\nSam was always hopeful that Zach would find a good girl. Gabriella's never seemed thrilled with the discussion of Zach's dates, and her usual comment was for Zach to choose his dates wisely, which always brought a laugh from him and Sam.\n\nThe next day, Zach was quite surprised to see a text from Lisa show up on his phone. \"Hey Zach, call me when you have some time.\"\n\nEarly that evening, he called her, and they arranged a date for that weekend.\n\nWhen he picked up Lisa to take her to the restaurant, she looked great, decked out in a nice, black knee-length dress, with enough cleavage to draw attention without being too risqu\u00e9. Mindy was at the apartment and gave them a sad smile when they left, wishing them a good time.\n\nLisa told Zach, \"Mindy and I talked and thought you and I would try it first because she's looking for someone who doesn't travel quite as much.\"\n\nZach wasn't complaining, because while Mindy was cute, Lisa was gorgeous. She had dark Auburn hair, but not the usual fair skin. Standing around five and a half feet, she was fit with a tight butt and breasts that looked to be a little more than a handful. He would be the envy of many that night.\n\nThus began a relationship that quickly flourished.\n\nA few weeks into their relationship, he convinced her to meet his brother and sister-in-law who also lived in Houston, at a restaurant near her work. Lisa went straight from work, and when she arrived at the restaurant, she saw a cute woman talking to Zach at the bar.\n\nLiking what she had found in Zach, Lisa didn't want to let someone get between them, so she walked up to him and said, \"Hey, Baby,\" and proceeded to give him a tonsil inspecting kiss.\n\nThe other woman's eyes bugged out at that happening, and Zach looked shocked as well. When she finished the kiss, she felt a tap on her shoulder and heard, \"Hey, Lisa, I see you've already met my twin brother, Daniel. That woman about to claw your eyes out is his wife, Gina.\"\n\nLisa staggered back at the realization of what she just did. She immediately put Zach between herself and Gina and muttered, \"I'm so sorry. I didn't know. I thought some strange woman was trying to chat up Zach.\" Then she wheeled on Zach and said, \"You didn't tell me you had a twin!\"\n\n\"Sorry. I wasn't expecting you to do what you did, either.\"\n\nDaniel stuck out his hand and said, \"Nice to meet you, Lisa.\"\n\nGina was not pleased, even if it was an honest mistake.\n\nTrying to smooth things over, Lisa asked, \"Gina, what do you do?\"\n\nShe replied, \"When I'm not protecting my husband from being molested, I work in procurement at Exxon.\"\n\nDaniel offered, \"I'm a defense attorney. How about you?\"\n\nLisa told them about her job at the hospital, and once at their table, they eventually laughed, a little, about the earlier mix-up and wound up having a great evening.\n\nOver the next several months, Lisa never gave Zach any grief about his travel. While gone, he would call, and they would talk for nearly an hour on the phone. She was disappointed when he would leave, but happy to see him return. When he was gone for more than two or three days, she acted not simply happy but relieved that he was back. He liked being missed.\n\nGina even introduced Mindy to a good friend of hers that worked at Exxon, Robert, who had quickly worked his way from the oil fields into management, and they seemed to hit it off quickly.\n\nWhen Zach and Lisa talked about exclusivity, Zach asked, \"Will my being gone so frequently be a problem?\"\n\nLisa laughed before replying, \"Sweetie, you already told me that the longest you've ever been gone was two weeks, but it's usually more like two or three days. I'd like to think that I can last two weeks without sex, especially when the welcome-home sex is with you. Besides, I can either work late or Mindy and I will do something together.\"\n\nMany months later, when Christmas arrived, they spent time with each other's families. Her family also lived in Houston and was a simple upper-middle-class family that lived in a nice neighborhood. Both her parents seemed to like Zach, which pleased everyone.\n\nAt his parent's house, Lisa met Zach's older sister, Miriam, her husband and their two toddlers, who lived in Austin. Christmas afternoon, some extended family stopped by, and it turned into a big Davis family celebration. Zach's uncle Jack had brought a fiddle and was playing some Zydeco music for some of his kids. Before long, most of those in attendance were clapping to the music.\n\nDuring a break in the performance, Zach said, \"Lisa, you play. Play something for us.\"\n\nShe gave him a sad smile and said, \"Sweetie, you know I don't play much anymore. I no longer enjoy it. They don't want to hear me play,\" which of course immediately caused everyone to plead for her to play.\n\nThe look she gave Zach was a pleading one, but having rarely heard her play, he asked, \"Just one. Please.\"\n\nReluctantly she accepted the fiddle, a violin by another name, and played a few chords to get a feel for the instrument, and immediately everyone's ears were perking up. After twisting a couple of pegs to tune it the way she wanted it, she began to play Leonard Cohen's Hallelujah which became very popular thanks to its inclusion in the Shrek movie and soundtrack, amongst other covers of the song.\n\nThe entire audience was stunned into an entranced silence as she played it skillfully and soulfully. She only played one verse, but when she finished everyone simply sat there amazed, until the uncle began clapping furiously. Then everyone began clapping excitedly, and Lisa's entire neck and face blushed.\n\nJack said, \"Dang, Lisa, I'm afraid to play this after what you just did. It's like a completely different instrument.\"\n\nShe whispered, \"Thank you.\"\n\nZach wrapped her in a big hug, and a moment later so did his mom and dad. His mom said, \"You should play more often Lisa. Anyone that can play like that has a gift that should be shared.\"\n\n\"I appreciate that,\" she said, \"but I think once I realized that I wasn't good enough to play professionally, the disappointment took a lot of the joy out of playing.\"\n\nZach's dad said, \"Lisa, anyone that plays like that can play better than all but a tiny fraction of the population. You should let people hear you. Or at least let us hear you. Or just me. Anytime you want to play, I can promise you an audience of at least one admirer.\"\n\n\"Thanks Mr. Davis. I'll think about it.\"\n\nSeeing how well everyone got along with Lisa during the holidays, even Gina, Zach knew what he was ready to do.\n\nAs soon as their time off together ended, Zach bought a very pretty ring, and the next day at work, he asked Sam if he could come by his office at the end of the day.",
        "Upon finishing the day, he knocked on Sam's door and was pleased to see his wife was there with him. \"Sam, Mrs. Ortiz, do you have a second?\"\n\n\"Sure, Zach come on in. What's on your mind?\"\n\nRather than sitting across from Sam's desk, the three of them moved to a more comfortable couch and chairs surrounding a coffee table. Zack loved watching Mrs. Ortiz move. Simply observing her sitting was like watching poetry; every move had a purpose and precision. Today she was wearing a midi-length dress, with an equally long duster and three-inch stiletto heels. Her accompanying scarf and jewelry added to her refinement.\n\nZach said, \"I'd like to show you something.\" He then proceeded to pull the ring box from his jacket and handed it to Mrs. Ortiz who stiffened, even more so than normal, immediately.\n\nHer momentary inspection of the ring was perfunctory. She handed it to her husband, who, after a few seconds said, \"it's very pretty, Zach. Are you sure Lisa's the one?\"\n\nZach smiled at both of them and said, \"Well, the woman I would most like to marry is already taken and sitting in this room, so Lisa's my next best choice.\"\n\nMomentarily breaking decorum, Gabriella guffawed at that comment and stood. \"Congratulations, Zachariah.\" She always called him and Sam by their full names. She continued, \"I'm...I'm happy for you.\" She turned and quickly left the room.\n\nZach looked at Sam with confusion and asked, \"Did I upset her with what I said? I can go and apologize.\"\n\n\"No, Zach. It was a very nice compliment, and coming from you, it meant a lot to her. I promise. You know she thinks very highly of you.\"\n\n\"Then why do I feel like I just did something wrong?\"\n\n\"She's just emotional. Don't worry about it. She's happy for you. We are both happy for you.\"\n\n\"Thanks, Sam. Your opinion and her opinion mean a lot to me.\"\n\n\"Well, you mean a lot to us. She's always liked you, ever since the first day. That's probably why you and she get along so well. Not everyone understands her the way we do. Some do, but most think she's too pompous and snooty.\"\n\nZach harrumphed, \"Those are the people that prefer to meet their future wives in strip clubs.\"\n\nSam laughed, \"Maybe not quite that bad, but I see your point. Tell me, what do you remember about the day you interviewed with us? You spoke with three managers, and at the end, she and I interviewed you together.\"\n\nZach replied, \"I remember being scared shitless. I really wanted the internship, but there must have been ten of us here that day, and I was told there was ten more the next day for a total of three spots.\"\n\nSam interrupted him, \"That was because the price of oil was starting to fall at that time, which meant all of the local oil companies were not hiring as much. A lot of the top talent interviewed with us when we usually wouldn't see them. As you know, we hired four interns that year.\"\n\nZach said, \"I know, and I was competing against all that top talent. I remember Mrs. Ortiz didn't ask a single question, nor say a single word during the interview. She simply sat next to you and took notes. At first, I thought she was your admin. At lunchtime, all of us candidates were standing around at the table waiting to be seated, and she put out name cards to assign where we would sit. You and the managers were at one end of the table, and Mrs. Ortiz was at the other, and she sat me next to her.\n\n\"The other interviewees were trying to get all of your attention. I presumed if I was at the end of the table, away from you, I wasn't likely to be offered one of the openings, so I focused on having a good conversation with her. She was a little cool at first, but after a while, we were enjoying ourselves, and I had completely forgotten about the rest of you.\"\n\nSam replied, \"I can promise you I would have preferred to be at your end of the table.\"\n\nZach said, \"When we finished, she thanked me for a lovely lunch, and said she hoped she would be seeing me around the office. I thanked her for lunch and the interview, shook your and the other managers' hands, and left, knowing that I didn't have a chance in Hell of getting one of those slots. Now, nine years later, would you mind telling me what happened that day. I'm still not sure myself.\"\n\nSam said, \"She assigned those seatings herself. The other three managers were interviewing for skills and competence. She and I were interviewing for how well a new hire would fit into the company. Every person we interviewed had the resume to be hired, and I couldn't care less about an extra point or two on your GPA. When you walked out of your interview with us, Gabby said, 'hire him,\" which we did.\n\n\"There was no need for you to have to engage in the mosh-pit of candidates fighting for our attention during lunch. You were already in. Of course, you could have blown it while sitting next to her, but you charmed her even more. I still remember what we had for dinner that weekend, because of you - Manicotti.\n\n\"She told me you were telling her stories about helping the parents of the girls you dated in their kitchens. She was so impressed with your tip to use a baking sleeve to fill the manicotti tubes, she couldn't wait to try it. So she did that weekend. On our drive home that night she was still laughing about how you and one of your ex-girlfriend's father liked to go mud-riding for months after you broke up. I was in stitches when she told me about how the breakup was harder on you and him than you and her.\n\n\"My memory from that day was watching her laugh and engage with you. You know her by now and know that is quite unusual for her. I tell you all of this because I want you to know how much she cares for you. You and she have a special relationship.\"\n\nZach asked, \"How did the two of you meet? Before she became THE Mrs. Gabriella Ortiz.\"\n\nSam snickered at that, \"I don't know about 'THE' Mrs. Ortiz, but when she and I met, she was just a girl...or a young lady, emphasis on the lady. Like my parents, she didn't have much when she was little, but they taught her manners and to try to always do what was right. She and I met at a local food bank while we were in college.\n\nTwo Sunday afternoons each month she volunteered her time because like me she didn't have any money. My parent's church encouraged some of us to go, and I bumped into her, literally. I won't say it was love at first sight, but like now, she had a presence, which has grown ever since. I may be responsible for the running of the company, but there isn't a major decision in my life that we don't discuss together prior to the decision being made. She truly is my partner, and I'm better because of her.\"\n\nSam continued, \"Do not worry about her. I can promise you that she hopes you are happy. That's what she wants for you.\"\n\n\"Thank you, Sam. I appreciate that. Please tell her that I hope I didn't upset her. I value our relationship, too.\"\n\n\"I know you do. Now...\" Sam stood and so did Zach. \"Let me know as soon as Lisa sets a date, so we can make sure your vacation for your honeymoon gets booked.\"\n\nSam slapped him on the back and wished him a good evening.\n\n_________________\n\nZach thought about waiting until Valentine's Day to ask Lisa but thought that was just too clich\u00e9. Besides, he wanted to get married as soon as possible, so the longer he waited, the longer until they were married.\n\nThe following weekend, he took her back to Arturio's, and in a private corner of the restaurant, he asked her, and she enthusiastically said, \"Yes.\"\n\nIt was a late May wedding with plenty of family and friends. Her parents seemed very happy. Sam and Gabriella came, and Zach even shared a couple of nice dances at the reception with Gabriella. Zach and Lisa honeymooned in the Caribbean for a week, before returning to blissful lives.\n\nMindy and Robert were engaged and married shortly thereafter, and the two couples spent many weekends together. Occasionally, Daniel and Gina would join in, and the weekends when Zach was in town were always good.\n\nAt the larger Davis family get-togethers, Mindy and Robert were invited, and Lisa acquiesced to playing, occasionally, and they discovered that Mindy had a beautiful voice to accompany Lisa.\n\nThe first three years were a wonderful time for Zach and Lisa, especially the time they spent together after he returned from his trips.\n\n_______________\n\nJust after their three-year anniversary, tectonic shifts began taking place in their lives. The first tremor was Lisa's promotion at the hospital. It was a bump in position and salary. The company for which she worked had hospitals all over Texas, and she said she would have to travel occasionally to Austin. Zach hoped they could align that with some of his travel, which had started to become more predictable.\n\nThe reason it was more predictable was because of the next quake which was Sam wanting Zach to oversee the manufacturing and testing of two new types of ultrasound transducers. MCDI designed them, and they were being prototyped in Vienna and were to be manufactured for them in Munich, Germany.\n\nThe first transducer was a new design and was supposed to be more sensitive than existing sensors. When combined with the improvements in computer and graphics processing power, 3D images of soft body tissue that rivaled MRIs for a fraction of the cost could be produced. The second transducer was much smaller and would go into a portable handheld device that would work with the newest iPhones and tablets to be used for imaging in ambulances, field hospitals and other remote locations. MCDI would be taking on the giants in the field.\n\nIt was a lot of responsibility, but a good opportunity for Zach and the company. The testing schedule made his calendar much more predictable.\n\nSam also hired his daughter, Cassandra, or Cassie to most people, into the company. She would be in research and development, but nobody was certain what she would be working on. The consensus was that she and her younger brother would be trained to take over the business at some point in time, which was met with much skepticism by the lower-ranking staff.\n\nThe final seismic event was Mindy and Robert announcing that they were expecting and were five months along. Mindy had only just begun showing.\n\nSuddenly, that emphasized a timetable for Lisa, who continued to say that she wanted children, but that she wasn't ready yet. With her best friend's announcement, Lisa struggled with whether she was ready for them or not.\n\nShe told Zach, \"I do want them, and soon, but if we are both traveling...I don't know. I don't want us to be away from the baby.\"\n\nZach understood. He said, \"I'm with you. Let's see how your travel goes. If my travel gets reduced more, then maybe we can make it work.\"\n\nLisa liked that idea and shared her happiness with Zach in the bed that evening.\n\n_____________\n\nA month later, Lisa had her first trip to Austin, while Zach had to return to Germany for a week. They both had good trips, and Lisa was more than happy, again, almost relieved, to reunite with her husband in the bedroom.\n\nA couple of weeks later, Zach had another trip to Germany and a few overnighters in the US. Two months after Lisa's promotion, unexpectedly, he had to fly to Los Angeles to fix a broken MRI. As soon as he landed, Daniel called him.\n\nZach answered, \"Hey bro, what's going on?\"\n\n\"Uh, Zach, I need you to do me a favor while you are there.\"\n\n\"Sure. What do you need?\"\n\nDaniel said, \"I need you to call me as soon as you start to make plans to come home.\"\n\n\"What? Why? Are Lisa and Gina okay? Do you need me to come home now?\"\n\n\"Whoa, whoa, whoa. No. Nothing like that. There something I need for you to do for me before you plan on leaving there, that's all.\"\n\nZach said, \"Okay, Daniel. I'm not sure I get the mystery. All the parts I need are already at the hospital, so I should have the MRI back up and running in less than 24 hours. Expect me to call you sometime tomorrow.\"\n\n\"Sounds good, Zach. Thanks. I love you.\"\n\n\"Uh, love you, too.\" He thought, \"What the hell?\"\n\nAround lunch the next day, Zach called his brother. \"Hey Daniel, I'm almost done and making plans to catch the red-eye home. What do you need?\"\n\n\"Have you told Lisa that you are coming home yet?\"\n\n\"No. I called you first. What's up.\"\n\nDaniel asked, \"Can you call or text her and let her know it's going to take you an extra day or two? Then go ahead and catch the red-eye home and drive straight to my house. Gina and I need to talk to you.\"\n\n\"Are ya'll okay? Are mom and dad? Why all the secrecy?\"\n\nWorried that his brother was about to freak out, Daniel told him, \"Everyone and everything is fine. You're asking too many questions. I just need you to do this favor for me one time. Okay?\"\n\n\"All, right. My flight gets in at 5:00 am, so I should be at your house before 6:00.\"\n\n\"We'll have the coffee and breakfast waiting for you.\"\n\nZach replied, \"Sounds good.\"\n\nTo Lisa, he texted: \"I need to stay an extra day, maybe two. I'll let you know. Sorry.\"\n\nLisa replied: \"Aww, that's too bad. I was looking forward to welcoming you home. I'll grab Mindy, and we'll go baby shopping.\"\n\nHe replied: \"I'm glad it's you and not me. That baby will lack for nothing. Love you.\"\n\nLisa replied: \"Love you more.\"\n\nIt was a good thing that all he had left was the paperwork because Zach could barely concentrate the rest of his time at the hospital. He took a cab to the airport, flopped into a chair in a lounge and took a quick nap since he didn't get much sleep the previous night due to his working on the MRI.\n\nHis three-hour flight left at midnight, west-coast time, arrived at 5:00 am, and he knocked on his brother's door just before 6:00 am.\n\nGina and Daniel were waiting for him. The kids were still asleep.\n\nOnce at the kitchen table with coffee in hand, Daniel asked, \"what time does Lisa usually try to get to work?\"\n\n\"A few minutes before 8:00. Why?\"\n\n\"Don't worry. You'll see.\"\n\n\"Daniel, the two of you are being awfully secretive. Just spit it out.\"\n\n\"I need you to trust me, brother. Just this one time, be a little patient. We all know how hard that is for you to do.\"\n\nZach picked at his breakfast but drank his coffee, and soon they left in Daniel's car. As they drove, Zach asked, \"why aren't we going to mine and Lisa's house?\"\n\n\"Shhhh. We're almost there.\"\n\n\"Daniel! Just what the fuck is going on?\"\n\nThey pulled onto a residential street in a much older but upscale neighborhood with nice homes and large lots about ten minutes from the hospital where Lisa worked, which was near Rice University. \"Shut up, Zach. For once in your life just sit and watch. I need you to keep your eyes on that house,\" he said pointing to a house across the street and one house down. \"And no matter what, keep your mouth shut and sit on your hands if you have to.\" Daniel locked the car doors.\n\n\"Daniel, is it Lisa? Am I about to see her come out of someone's house? She's probably visiting a friend.\"\n\nDaniel replied, \"I'm sure that's all it is, Zach, but I need you to see it.\"\n\nOnly a few minutes later, they did. They watched the garage door open, and Lisa's Audi backed out carefully onto the street, then she drove away from them, towards her hospital.\n\nZach looked at his brother and said, \"I trust Lisa. That house probably belongs to some old friend of hers from college.\" He didn't want to believe it could be something else.\n\nDaniel said, \"I wish that were the case. Read this.\" It was a recent entertainment section from the Austin newspaper.\n\nZach looked at the paper and saw a picture of Lisa and a strange man, probably mid-forties, on a sidewalk going into what looked like a theater or concert hall. The man was wearing a tux and Lisa was wearing a long evening gown. She had her left hand on his right arm and while her engagement ring was easily seen, her wedding ring was missing. The caption read, \"Austin's own Reginald Alderidge, celebrated music critic, and Lisa Jennings, his long-time girlfriend, attend the evening's performance.\" Jennings was Lisa's maiden name.\n\nDaniel could see the confusion on his brother's face. He said, \"Miriam sent this to me while you were in Germany and Lisa was in Austin. There is an article in there about him. Read it. All of it. The article is still online, which has a picture of the two of them kissing. I have a PI report at my house that will give you more information than you want to see. It's an affair Zach. This isn't a one-time thing.\"\n\nDaniel watched as his brother deflated. He could tell that he was hoping it was an innocent visit, but the truth was beginning to set in. Daniel began the drive back to his house.\n\nZach read the article which told of Reginald's career as Texas' premier music critic who provided reviews to several Texas newspapers. It seems he was a Professor of Music at Rice University, where Lisa went to school but was soon taking up a new position at the University of Texas in Austin, his hometown.\n\nThe article was a puff piece allowing him to explain many of his views and activities. Why was he so harsh in all of his reviews? He demanded perfection, and he expected the other audience members did as well. What were some of his interests? He has been restoring his older home that he purchased last year and loved cooking Italian food on the home's original custom-built stove. He spent a lot of time preparing for upcoming concerts by listening to the best examples he can find in his home listening room. His love life? He was very happy with his girlfriend, and he sees no reason to change it.\n\nWhen they arrived at Daniel's house, Gina was gone, taking the kids to preschool. She would be back soon.\n\nZach said, \"Let me call work before I look at your PI folder. No way can I work today.\" He called his manager, Frank, and told him he was having some serious family problems and needed a few days. His manager asked him if he was okay and where he was. Then he told Zach to do what he needed to do and keep him updated. After they hung up, Zach began to tackle the folder.\n\nHe said, \"Daniel, I cannot believe you hired a PI for me. He must be really good to get all of this so quickly.\"\n\n\"We keep a few on retainer and this one is really good. He owed me a favor too, so he did it quickly. Unfortunately, it was all pretty easy for him to get. If you were out of town, she was usually spending the night with him. Don't you guys have a security system? If it tracks activity, I'll bet you won't see any when you are out of town.\"\n\nZach sunk into his chair, stunned by his own stupidity. \"I never checked it. Why would I? I never suspected a thing.\"\n\n\"I know man. You've been blindsided. We all were. We all like her. Except for her reluctance to play music, she seemed just like one of us. You never noticed anything, anything at all?\"\n\nZach thought for a moment, \"In hindsight, maybe the only unusual thing was that the longer I was away, the more she seemed to miss me; almost like she was anxious. I thought it was just her missing me, but clearly, she didn't, since she had someone else. So, I don't know what is up with that.\"\n\nDaniel just shook his head.\n\nThe folder was very thorough. It was more background info than he ever knew about Lisa, and also Reginald, or Reggie. The info on Lisa was depressing. Lisa was the first chair violinist for the Houston youth orchestra until she started college. She stopped playing around the same time she became a student of Gerald's. No explanation was given.\n\nThe PI had also accessed Reggie's house, and it seemed that she had set up a second residence at Reginald's place with a collection of clothes and various items, so she rarely needed to go home when Zach was out of town. She would simply drive from work to Reginald's, open the garage door, and drive in.\n\nReggie's neighbors all thought she was a live-in girlfriend. In the Houston music community, they were aware of his having a long-time girlfriend, though the PI didn't speak to anyone that knew her by name.",
        "By now, Gina was back, and she and Daniel tried to stay busy and out of the way while Zach continued with the report.\n\nThe background on Reggie was not pretty. An arrogant man from money in Austin became the preeminent music critic in the state. Two conductors had left Texas saying, Reggie had created an environment where audiences critiqued the music and performances too much instead of enjoying them, so the conductors moved on to locations where they felt better appreciated.\n\nHis scathing reviews were lauded by the local elites, but some performers had left also because they were tired of the criticism and what was becoming an 'us vs them' environment where the performers felt animosity from a growing portion of the audience.\n\nThe PI report revealed a news article from a smaller paper in the Houston area. It was reported that a featured soloist, who was emotionally fragile due to her husband cheating on her and leaving her prior to an upcoming solo performance, poured herself into her music and that one performance. Gerald's review was so brutal that she quit the symphony and refused to perform again. About a week after the review, she decided to take her own life because after losing her husband and her music, she didn't feel like she had anything left to live for. The larger Houston papers didn't report the story.\n\nDaniel heard him say, \"The man is poison.\"\n\nAlso, in the report, were a couple of school reports of undergrads accusing him of sexual harassment, which were buried by the school, and apparently Lisa wasn't his only 'girlfriend.' The report had detailed information regarding the inside of Reggie's house: floorplan, layout, pictures of the interior with accompanying video. Pictures and recordings of Reggie and Lisa having sex together were available on a private cloud account, but Zach was advised not to watch those if he had any intention of taking Lisa back.\n\nHe didn't have that intention.\n\nWhen he had finished reviewing all the information in the folder, he joined Daniel and Gina in the kitchen. After fixing himself a cup of coffee, the three of them were steeling themselves for the next conversation, which was what was he going to do, when the doorbell rang.\n\nDaniel went to answer it, and Zach could hear, \"Pardon me, is Zachariah here?\"\n\nIt was Mrs. Ortiz, and apparently, she does own a pair of jeans. Upon seeing Zach, she walked up to him, wrapped her arms around him and squeezed. \"Frank called Samuel, who called me. When I heard you were having family problems, and I knew it didn't involve your work family, I came as soon as I could.\"\n\nThey all looked at her speechless.\n\nShe continued, \"Oh, come on. I'm not stupid. I know you, Zachariah. You've worked with us for almost twelve years as of now, and before today, I think you've missed one day of work. For you to take more than a day off for a family problem is something serious.\"\n\nZach smiled in return. If he had never admitted it before that day, then he definitively thought that he loved that woman. He returned her hug. He asked, \"Daniel and I are twins. How did you know it wasn't me that answered the door?\"\n\n\"Because your brother looks at me differently than you do. You two could be dressed exactly alike, and I would always be able to tell the difference.\" Then she asked, \"I'm assuming this is about Lisa.\" Zach nodded. \"Is she cheating? Are you sure?\"\n\nZach replied, \"We have a PI report. There is no doubt.\"\n\nShe asked, \"So what are you going to do?\"\n\nDaniel said, \"We wanted to make sure that he was around us when he found out. Miriam, his sister, works for an investment bank in Austin. When the owner was complaining about the puff piece on Gerald, she looked at the article, saw the picture, and sent it to us.\" Daniel turned to Zach and said, \"After what happened with you and Scotty Mitchell, she didn't want you to be alone when you found out.\"\n\nGabriella asked, \"who's Scotty Mitchell?\"\n\nGina replied, \"I recently found out myself. It seems that when Zach and Daniel played high school football, the team's quarterback, Scotty, persuaded Daniel's longtime girlfriend to go out one weekend during the season with him. Then he bragged, and lied, the following Monday during school to all the football players about their having sex when they went out. Daniel was crushed, and Zach was enraged that a teammate would do that to one of their own, much less to Daniel. None of the team were happy about it because they all hated Scotty.\n\n\"So, the next day during practice, Zach, who played linebacker, talked one of the offensive linemen into tipping him off when a certain play was going to be called. When that play was called, the offensive lineman didn't block Zach. Scotty was looking away from Zach and towards the other side of the field as Zach rushed through.\n\n\"Even though Scotty was wearing a do-not-hit red jersey, Zach lowered his shoulder pad, and ran full-speed into the quarterback's non-throwing arm, breaking it. The coach was enraged and kicked Zach off the team.\"\n\nZach said, \"that worked out to be a good thing for me. Instead of trying to play football for some small D-III school in the middle of nowhere, I focused on my studies and my college entrance exams and got into the University of Houston. I'd probably be in Richmond or Louisville, or some other small town were it not for Scotty.\"\n\nGabriella laughed, \"Remind me to send him a card at Christmas,\" which brought a smile to everyone.\n\n\"Our sister, Miriam, was worried that if he would do that to Scotty, what would he do to Gerald.\"\n\nZach said, \"Mrs. Ortiz, Daniel's right. That man is a poison on society, and I'm about to provide the cure. I appreciate your coming here, but you probably don't want to be part of what I'm thinking right now.\"\n\nShe shushed him, \"Nonsense. It sounds to me like you are going to need a good alibi, and you already have an attorney who can help keep everyone out of jail. You just need to be smart about this.\"\n\nFor the second time that morning, everyone just looked at Gabriella who said, \"I know everyone thinks I'm a pompous, stuck-up, queen, but nobody screws with my family. Nobody.\"\n\n\"Damn.\"\n\n\"Watch your mouth, Zachariah. Doing what's right doesn't give you the excuse to curse.\"\n\n\"Yes, ma'am.\"\n\nGina snickered and Gabriella smiled. Gina liked her, too.\n\nZach also showed Gabriella the PI folder so she could get some background. For an hour they planned and schemed and threw out every outrageous idea they could imagine. Zach was almost in tears when Gabriella said, \"We should just knock him out and cut his pecker off -- quick and simple.\" He had never seen this side of her and was enjoying it immensely.\n\nDaniel let them go and go until finally, he said, \"Every one of those ideas would point to a jealous spouse, start an investigation and probably put Zach in jail. Time to get serious.\"\n\nGina said, \"I wish the PI had said something about a plane you could sabotage so it would look like an accident.\"\n\nThat triggered a thought and Zach said, \"I have an idea. Mrs. Ortiz, I need Sam to send me back to Germany.\"\n\nThe four of them hashed around the idea until they felt comfortable with it, or at least as comfortable as you can feel with possibly facing jail time, or the electric chair, for what Zach had planned.\n\nZach texted Lisa, \"I have to stay one more day. How was baby shopping with Mindy? Anything left in the stores for everyone else's babies?\"\n\nLisa replied, \"Oh, I'm sorry to hear that. Come home soon. Yes, we had fun. We left a few things for everyone else. Her credit card was smokin' =D.\"\n\nZach texted, \"I'll call you later.\"\n\nLisa replied, \"Kiss. Kiss.\"\n\nWhen Zach showed everyone the conversation, they all shook their head. Gabriella said, \"You know, Zachariah. She's going to be stunned when this all goes down. I'll bet she does genuinely love you.\"\n\nZach shrugged, \"Apparently not enough. It burns me up that she was all lovey-dovey to me on the phone as she was talking to me from his place while I was on the road. I don't want to be married to someone that can be so easily deceitful, so convincingly untruthful while lying to her husband.\"\n\nThe others nodded their head in agreement.\n\nZach continued, \"Speaking of lying to her husband, later today I'm going to go have a talk with her best friend Mindy who has been covering for her.\"\n\nGabriella stayed and had lunch with them because even though Zach was being looked after by Daniel and Gina, she wasn't ready to let him out of her sight yet.\n\nWhile eating with them, she said, \"Zachariah, you know you don't have to call me Mrs. Ortiz. The managers at the company call me Gabriella.\"\n\n\"I'm not sure I could do that, Mrs. Ortiz. To me that would feel like calling the queen of England, Elizabeth or calling Pope Francis, Jorge. I can promise you that I think much more of you than I do either of them. Half the time when I greet you, I feel like I should bow and kiss your hand or do like some of the people in India that touch their elders' feet, which I always thought was a nice gesture.\"\n\nGabriella scoffed, \"I appreciate that Zachariah, but I'm not anyone special. I'm just a woman that does the best she can for her family.\"\n\nZach chuckled, \"I'm sorry, Mrs. Ortiz, but I do not accept that. Saying you are just a woman is like calling Beethoven, just a pianist or Michelangelo just an artist. If Daniel had a pool, you could probably walk across it without getting wet. Sorry. You can ask others to call you by your first name, but I simply cannot.\"\n\nIt was obvious to everyone in the room how much he thought of Gabriella, whose eyes had become wet from his declaration of devotion.\n\nShe smiled at the young man for whom she had cared for so long, took his hand, squeezed it, and replied, \"We'll work on it.\"\n\n______________\n\nLater in the day, Zach drove the few minutes to Mindy's school, arriving before the time that she would normally leave. It was an older building that had seen better days, but he had heard wonderful things about the school and Mindy said the parents were incredibly pleased also. The office buzzed him in and called Mindy to allow him up. His stopping by would be unusual but shouldn't set off any alarm bells that would make Mindy reach out to Lisa before he arrived at her classroom.\n\nAs he walked in, they gave each other their normal hug in greeting. Zach carried a folder with him under his arm.\n\nMindy said, \"Zach, this is a nice surprise. What brings you by?\"\n\n\"I wanted to see how the baby shopping was going, and if there was anything you guys needed. How's Robert?\"\n\nShe laughed, \"Oh, Robert's great. He's enjoying the late-night ice-cream and fried chicken runs. He's gained as much weight as I have. As far as needing things, we've been good for a while.\"\n\nAs Zach pushed his phone across to her, so she could see the text message between him and Lisa from that morning, his smile was more a sneer when he replied, \"that's the funny thing about telling lies for a long period of time. You start to forget what the truth is, so you don't cover your tracks as well as you once did. Tell me Mindy, is your credit card still smoking from last night?\"\n\nMindy had the classic deer-in-the-headlights look at that moment. She could lie all she wanted, but Zach could tell from that look that she knew.\n\n\"I...I...I don't know what to say. This must be some kind of mistake.\"\n\nHe slid the newspaper article across to her as well as a picture of Lisa and Gerald having sex.\n\n\"Stop it Mindy. You've been her best friend since third grade. I know that you know. Lisa's been using you to help cover for her for years. Do you know how many times I've been out of town and she said that she and you did something? Plenty. So, what you are going to tell me is how long and why?\"\n\n\"I'm sorry, Zach. Truly, I can't tell you what I don't know.\"\n\n\"Mindy, here's what's going to happen.\" Now his voice was getting angrier. \"Either you are going to tell me every God damn thing you know about her and that sleazeball, or I'm going to send this link of Lisa and shithead having sex to Robert and tell him that you knew and helped her cover it up. Then you can explain to both of us what you know.\n\n\"I'm giving you a chance. Being so close to Lisa, you may not realize that guys hate for their wives to cover for their friends' affairs. It makes them think that they are okay with it and just might consider doing it themselves. It's funny how that works. I'd hate for you and Robert to be fighting during what should be some of the happiest times of yours and your baby's life.\"\n\nThe scared look returned, and Mindy said, \"Please! I tried to get her to stop seeing him. You have to believe me. I hate that man. He nearly destroyed her.\"\n\n\"I don't get it either. So you need to help me by telling me what you know.\"\n\nShe told him everything that she did know. She told him about Lisa's first meeting Gerald and being infatuated with the good-looking professor who was an 'expert' in music. He had to be an expert because he was an acclaimed professor and critic, right? He criticized her music the same way he does everyone else. He had critiqued her playing to the point that she didn't enjoy it anymore. As a result, she should have left him, but he was so smooth and built up to such high acclaim, that she, and many others, hung on his every word. Also, she was very attracted to him, and they became romantically involved.\n\nShe said, \"Zach do you remember the night we met? The reason I was with her was because Gerald was at a performance in Dallas, and we used his tickets. I was interested in you, and Lisa was a little cool. Remember? After we parted, Lisa thought about your traveling and thought that you would be a good fit for her because she would be free to see both of you. While I wasn't crazy about the travel, I thought it might be fun to try you out. That's why I was sad the night of your first date with her.\n\n\"Lisa wanted first shot because then she could have you both. I told her it wasn't a good idea. After you became engaged, I told her to stop but she never did. He didn't want children, but she did. She could have kids with you, and still occasionally see him. She's been leading this double life, and I think it's been hurting her. He's the darkness and you are the light in her life, which is why she is always so anxious for you to get home.\"\n\nHe asked, \"I don't understand. If that were true, why does she stay with him.\"\n\n\"I don't know. My best guess is that I think that she misses her music and whether she will admit it or not, he was the man that took it away. Now, I think, she is staying with him hoping that one day he will give it back to her. Before she met him, playing the violin was her life. Or maybe it could be some version of Stockholm syndrome. That's the best I can come up with. What are you going to do?\"\n\n\"I don't know, yet.\" He lied.\n\n\"Please talk to her Zach. She needs you. If all she had were him, I'd be very afraid for her.\"\n\n\"I'm not making any promises, except that I'll keep this from Robert until two months after the baby is born. That means, if everything goes according to plan, you have about four months to tell him, or I will.\"\n\n\"Zach, please don't make me do that. If her affair is about to end, there isn't any need for Robert to know.\"\n\n\"That's where you're wrong, Mindy. You shouldn't be keeping things like that from him anyway. Lies have a way of building up over time. I'm not talking about the little secrets we all use to hide surprise parties or Christmas presents, or something like that. Once you start lying and hiding the truth from your spouse, it gets easier. If the offended spouse ever finds out, they begin to wonder what else you've purposefully hidden. Robert doesn't deserve that.\n\nZach continued, \"You know once this all comes out, he's going to start asking you questions anyway. I'm giving you the chance to get in front of it. He's more likely to forgive you if he finds out from you instead of someone else.\"\n\nMindy started to cry because she was beginning to realize the predicament, she was in. The baby was due in two months. She didn't know how Robert would react.\n\nZach said, \"Of course it goes without saying that you will not reveal our having this conversation to her. If I find out that you did, then I'll tell Robert everything I know, immediately.\"\n\nMindy nodded her head in understanding. She said, \"Please give her a chance, Zach. She doesn't just want you in her life, she NEEDS you.\"\n\nZach scoffed at that comment, stood and turned to leave. \"Remember, tell Robert, but be careful what you tell Lisa.\"\n\nZach saw a scared woman looking back at him. Without another word, he was gone.\n\n__________________\n\nHe pretended to arrive back the following day, and as usual, Lisa was happy to see him and stayed close to him that evening. There wasn't any sex, but she slept draped over him like she usually did on his first night back at their apartment.\n\nA couple of weeks later, he had to go to Germany, again, and Lisa was sad to see him go.\n\nEarly the next evening, about a half-hour after sunset, Lisa was relaxing at Gerald's house when she received a text from Zach, \"Surprise! Plans got changed. I'm in the immigration line at the airport. Want me to grab some Chinese on the way home?\"\n\nLisa replied, \"That sounds great. I cannot wait.\" She didn't have to hurry, but she did need to get home. Not even a kiss was exchanged between her and her paramour as she left.\n\nUpon her leaving, Gerald went to his upstairs listening room and began playing the music that was to be performed at the next concert he was to critique. The volume was set to equate the sound of a live orchestra. Zach couldn't believe the neighbors didn't complain.\n\nIn the darkness, Zach was easily able to enter the back of the house using a copy of the key that was hidden in Lisa's purse. He quietly made his way to the kitchen where, using a long tool procured for this purpose, he quickly removed the wax and tape he had used to plug the hole that had 'developed' earlier in the week, where the old gas line and old stove met. He could hear the gas spewing out from the hole.\n\nNow for the tricky part. How far should he set one of Lisa's candles from the stove? Too far away and Reggie might smell the gas before it combusted. Too close, and not enough damage would occur. He did his best to judge based on the information he searched while using Wi-Fi at a local caf\u00e9 on an old tablet which he later wiped and disposed of.\n\nHe left Reggie's house and met his brother, who being his twin, had impersonated him to and from Germany. After retrieving his phone from his brother, he stopped by and picked up the Chinese take-out. Now all he had to do was go home, act sick and wait. Knowing what he just did, he didn't think he would have to act very hard. He truly did feel ill.\n\nLisa was, once again, happy to see him and was genuinely concerned about his 'illness.' She put the Chinese in the fridge, warmed him a little chicken broth and put him to bed. He barely slept all night because of what he had done.\n\nHe awoke at 5:00 am the next day and carefully browsed the local news on the internet without any specific searches. He saw an article about a gas explosion at a house in the neighborhood where Gerald lived. The occupant was rushed to a local hospital and was in ICU. Damn. This would complicate things.\n\nZach took a quick shower and left for work before Lisa got out of bed. Now what? Around mid-morning he drove over to the hospital where they took Gerald, and it was also the one where Lisa worked. He saw an orderly smoking while sitting on a bench in the parking lot on the side of the hospital by the emergency room. Zach walked over, sat next to him, and said, \"For $50 can you get me info on a patient?\"\n\nThe orderly replied, \"No. But I can for $100.\"",
        "\"For $100, can you do it right now? I need to know the medical info and prognosis on the guy brought in from the gas explosion near here last night.\"\n\n\"Give me fifteen minutes.\" The orderly stood up and walked into the hospital. Fifteen minutes later he was back. \"The guy is in bad shape but expected to make it, mostly. The concussion from the explosion damaged his eardrums, but he should recover most of his hearing. The damage to his spine will mean a lot of therapy just so that he can use a walker one day. Everything else is just a few broken bones and gashes which they fixed up. The heat from the explosion singed him fairly good, but nothing worse than some small second-degree burns. They're keeping him sedated for a few days to see if his spine stabilizes any. What's he to you?\"\n\n\"I'm a concerned neighbor.\" Then Zach stood up, leaving two $50 bills on the bench, and walked into the hospital, found the number for Gerald's ICU room and proceeded to the visitor's area, where he called his brother, who called Mindy for him. Mindy was to call Lisa saying that she just saw the news report about Gerald.\n\nThen Zach waited.\n\nNot ten minutes later, while sitting in the visitors' area, Zach saw someone rushing down the hall. No need to guess who that was. He found a nurse, paid her $100 for a favor and followed her to the door of Gerald's room where he could hear his wife's sniffling.\n\nThere was plenty to sniff about. Even though she didn't have the full diagnosis, she could see bandages covering most of his body and a cast on his right arm and leg. He had a full neck collar from his chin to his chest to keep his head from moving.\n\nThe nurse entered the room, saw Lisa by his bedside, and began looking at Gerald's chart. She then walked to the other side of the bed so that Lisa was facing her, not the door, and asked, \"Are you his wife?\"\n\nLisa shook her head no.\n\n\"Girlfriend?\"\n\nLisa nodded, not even realizing that she was affirming the question while wearing her wedding rings.\n\n\"Have you two been together long?\"\n\nLisa nodded again, \"About ten years.\"\n\n\"Wow, that's a long time. Does your husband know?\"\n\nLisa's reaction was to move her left hand behind her to hide her wedding ring. Then from behind her, she heard, \"He does now.\"\n\nShock overcame Lisa's face. She was mortified to see her husband standing there.\n\nThe nurse quickly left the room, but not before saying, \"If I hear one raised voice, I'm throwing you both out.\"\n\nThey both nodded in agreement.\n\nShe asked, \"What are you doing here?\"\n\n\"I came over to see if I could entice my wife into taking an early lunch. Your boyfriend of ten years doesn't look too good.\"\n\nLisa winced at that comment, but she didn't say anything.\n\n\"What? Cat got your tongue? At least you're smart enough not to try and deny it, which is what I expected.\"\n\n\"It hasn't hurt you.\"\n\nHe scoffed, \"You have no idea how badly I'm hurt. My entire world, our marriage, just imploded, and you tell me I'm not hurt. You're going to have to do better than that.\"\n\nShe said, \"I've never neglected you. You always came first. I just spent time with Gerald while you were gone.\"\n\n\"And soon, you would have spent time with him in Austin while I was here? I'll bet you somehow arranged it so that you could spend more time in Austin since he's moving there.\"\n\nThe look on her face told him he was correct and that she was surprised he knew.\n\nHe said, \"Maybe I know more than you think I do. Think about that. What I really, really want to know though is why. Did I mistreat you? No. Did our life together suck? No. Was I lazy about anything related to us or our life? No, again. I guess our marriage simply wasn't enough for you?\"\n\n\"That's not true.\"\n\n\"Then tell me why?\"\n\n\"I don't know. I just couldn't ever let him go, and your being gone made it easy.\"\n\nHe said, \"Well, I'm about to make it a lot easier for you. I don't know how badly he wants you in his life, but I'm told he's going to need a lot of therapy. So, he's going to NEED you, or someone. I no longer need nor want you in my life. So, you may as well stay with him. As of right now, we're finished. I'll have my lawyer contact you.\"\n\nAs he turned to leave, she grabbed his wrist and said, \"Wait. I'll never see him again. Please! I do need you. Don't you see? I still want and need you.\"\n\n\"But I no longer need you, Lisa.\" She was hurt by that statement. He continued, \"I thought we were a team. My mistake. Being married meant we took on the world together, me and you, together, nobody else. If I had known that the two of us were a threesome, me, you, and shithead, I wouldn't have asked you to marry me. Wait! More than that. I wouldn't have even bothered dating you. What a waste of four years.\"\n\n\"That's not true. We've had four very good years. You must admit that. We can have more.\"\n\n\"No. I can't. All this time I thought it was just us. I thought it was me and you making decisions about our life together. I can see from the Austin travel that he was involved, too. I cannot have someone else in our marriage. I'm just not wired that way. Maybe you can find another sucker who can.\" He looked down at her hand and then back up at her face. He growled, \"Let go of my arm, NOW.\"\n\nShe pleaded, \"Zach, please stay. We're not done.\"\n\n\"Lisa, I've never laid a hand on a woman in my life, but if you don't let go of my arm right now, I swear to God, I'll break every one of your fingers so severely you'll never hold a violin again, much less play it.\"\n\nShe yanked her hand back as if she had just been burned. She never imagined he could say something like that to her. Of course, she had never seen him this angry either.\n\nZach turned to leave, and again she pleaded, \"Please stay, Zach. I love you.\"\n\nShe heard his reply, \"Apparently, not enough,\" as he walked out the hospital room. Lisa collapsed into the nearest chair and cried.\n\nHe didn't plan on having that confrontation until after a funeral in a few days, but now things were all screwed up. He went back to their apartment and grabbed two big suitcases, into which he quickly packed the things he needed.\n\nOn his way out the door, he left his wedding ring in the middle of the empty kitchen table to ensure that she would see it. He would have stayed with his brother or his parents, but he didn't want Lisa to harass them even more than he expected her to.\n\n\"Hmph,\" he scoffed. \"Who's to say she's going to miss me at all.\"\n\nHe could check into a hotel, but then what. He decided to call Miriam, and she said for him to come, which meant he was heading to Austin for a few days. On the road, he called Sam, who was in a meeting and would call him back, which gave him a few minutes to think. What now?\n\nHe'd call his lawyer and have the papers delivered tomorrow. He needed to call his family to let them know where things stood. Mainly? He wanted to get away -- really away, like out-of-Texas away. Maybe a vacation, though it is hard to enjoy much of anything when your heart is full of anguish. Speaking of anguish, if he was going on a vacation, there was one thing he needed to do before he left Houston for a while.\n\nWhen Sam called him back, they talked about his getting away for a while, and Sam agreed to make it happen.\n\nHe sent Mindy a text that he and Lisa talked, and she might want to have that conversation with Robert, soon.\n\nGabriella called and told him that he could stay with them. He thanked her for the generous offer but declined.\n\nSurprisingly, or not, Lisa didn't call until the next day after she had been served. He didn't answer the phone. On his voicemail she said she was sorry and pleaded for him to come back and give her another chance. Ha. That wasn't happening.\n\nHis sister's family did their best to raise his spirits, and at times he almost felt human instead of numb and hollow on the inside. The time spent there was well used, in that it had allowed him to figure out his next steps.\n\nThankfully, the Houston fire inspection team ruled that the explosion was due to an old stove, connected to an old gas line in an old home. The owner should have had the line inspected before he started working on his house.\n\nA few days later, he made the trip back to Houston to do that one last thing before he left town. At the same time as the other morning, he found the same orderly, smoking while taking his break. $100 later, they had an agreement, and Zach went inside.\n\nWhen he saw the orderly come out of the room, he went in. Gerald was awake. Zach went to stand at the foot of the bed so he could be seen.\n\nZach asked, \"Can you hear me, or do I need to write on this board?\" He had brought a small dry-erase board with him just in case he needed one.\n\nGerald replied, \"My ears are still ringing, but I can hear you.\"\n\nZach asked, \"Do you know who I am?\"\n\n\"I do.\"\n\nZach made a demonstration of turning off his phone, and said, \"I'm not recording this. This is just between us. I'll take off my shirt to prove it if you need me to.\"\n\nGerald said, \"That isn't necessary. It doesn't matter that much anyway.\"\n\nZach said, \"I won't take much of your time. First, why? Why Lisa even after she was married?\"\n\nZach watched him try to laugh but saw Gerald wince in pain as he did it. Good.\n\n\"Why? You've got to be kidding me. The 'why' is easy, which is because she's gorgeous and a great fuck, but I'm sure you know that. If her being married didn't bother her, it didn't bother me.\"\n\nIt was going to take every ounce of strength Zach had not to break his neck with his bare hands.\n\nZach asked, \"Do you love her?\"\n\n\"Hmph. No. I care for her, but we don't mean anything to each other. Not really.\"\n\nOne last question, \"Why did you take her music away? She plays beautifully.\"\n\nGerald said, \"Of course, she does. She has a real gift, but she relies too much on what others think of her music. If she isn't committed to playing regardless of what others think, then she shouldn't be playing. At least those I criticize still return to the stage and play. Lisa fell off her horse and didn't bother to get back on. If she's so easily swayed by others, she shouldn't bother.\"\n\nZach was stunned. \"But you know what it means to her, and you didn't encourage her?\"\n\n\"Look, I don't encourage anyone. If she wanted to quit, that was her prerogative.\"\n\n\"So even though she could have been great, to you she was just another fuck.\"\n\n\"Just another fuck?' Oh, no. As you may or may not know, she was a tremendous fuck, which is why I wanted to keep seeing her.\" The slimy bastard had the audacity to smirk at Zach.\n\nZach had the last laugh though when he said, \"Enjoy your life in a wheelchair you bastard. I hope your dick never works again.\"\n\nZach could see the smirk leave Gerald's face as he began to wonder if that might be true.\n\nIt was Zach's turn to smirk, as he walked out the door. He had gotten what he wanted. Upon entering the visitors' lounge, he sat, and a few minutes later the orderly came in and handed him the small recorder. Zach verified that it picked up the conversation and left the hospital.\n\nHe had dinner with Sam and Gabriella, at their home. It was a very modest home, considering they owned a highly successful business that employed almost two hundred mostly technical people. When they could have both been driving Mercedes, they drove Toyotas instead.\n\nThey wanted to know how he was doing. He said it was nice not to be in jail and not to have needed his alibi. Otherwise, he felt empty.\n\nSam said, \"your brother and sister-in-law must love you very much for him to take the risk of impersonating you while going through immigration.\"\n\nZach nodded, \"They do. I'm lucky to have the family that I have.\" Then he looked at Gabriella and said, \"including both of you.\"\n\nThey enjoyed their time together, but it was a melancholy mood since Zach would be leaving Houston, and no one knew for how long.\n\nBefore he left, he hugged Gabriella and said, \"I love you, Mrs. Ortiz. Thank you both for everything.\"\n\n\"I love you too, Zachariah. Don't stay gone too long\"\n\nAs he was leaving their house, Cassandra was arriving. They greeted each other pleasantly since they bumped into each other some at work. Her father was holding her mother, and she could see her mother struggling to hold back her emotions as Zach drove away.\n\nBefore he left, Zach also received a call from Robert. Mindy had told him everything. Robert apologized for Mindy's involvement and thanked Zach for encouraging, demanding actually, Mindy to tell him the truth. It would be hard for a while, but they were committed to correcting that mistake and improving their marriage.\n\nHe spent his last night in Houston at his parent's house. Daniel, Gina and their two kids joined them. As they were leaving for the evening, Daniel said, \"Zach, I know you need to get away for a while, and I understand that, but you need to come back, brother. All of us are going to have a hard time with you gone, so promise me that you are coming back. Okay?\"\n\n\"I promise. I'll be back. I just need a little time.\"\n\nZach hugged them, and they left.\n\n______________\n\nThe next day would begin quite the adventure for Zach. He was to set up in Munich, Germany where the company that was to manufacture the new transducers was located. He would be able to be more hands-on as the testing and refinement of the two transducers progressed and the manufacturing capability developed. He would also be the Euro-based MRI engineer, and part-time sales, for MCDI. There was no shortage of maintenance work he could do on MRIs across Europe; Germany, especially, has a high concentration.\n\nHe spent the first week in a hotel while he looked for a short-term rental. He found a nice two-bedroom apartment near the town center, which allowed him to lose himself on many evenings amongst the crowds of businesspeople and tourists. It was mid-August and there were plenty of tourists around.\n\nOnce he settled in, he did take off for a few days and explored Munich and the greater Bavarian area. After a few weeks in his apartment, he had to wonder if he had made a mistake. He felt terribly, terribly alone. At times he would tell himself, that whether he stayed in Houston or wherever he was, he would have felt alone no matter what. Coupled with the loneliness was a heaping, helping of pain and hurt. He knew, or was told that it would eventually go away, but he wondered how people coped until then.\n\nHe would facetime his family back in Houston, but it was hard. They kept encouraging him to get out more. He did some but never really felt right. Something was missing. The people at the tech center where the transducer work was being performed were friendly enough, and a few invited him out with them from time to time. There was even a cute girl that worked there that went with them, but he just couldn't get up the courage to ask her out. Also, with that kind of indecision, he didn't want to be a dud of a date. At least his German was improving.\n\nJust over two months after he arrived in Munich, was Octoberfest. He tried to get out and enjoy some of the festivals with the people where he worked, but his heart wasn't into it. To add insult to injury, his brother called him to let him know his divorce was final and his old apartment was empty. As instructed in the divorce, everything from the apartment was gone, except she left her violin behind. Lisa didn't fight the divorce or the proposed settlement in any way. From time to time Lisa would call and leave messages on Zach's voice mail that she was sorry, but he never returned her calls.\n\nIt seems that after six weeks in the hospital, Gerald was discharged, and he moved to Austin to start his teaching position there. With his damaged hearing, he would never critique another performance. Lisa received a transfer to Austin, also, where she was helping Gerald through his recovery. Zach shook his head at that information.\n\nSo, for several months, he simply existed while waiting for the pain to go away. He kept hoping that one day he would finally feel well enough to end his self-imposed exile.\n\nBeing in the center of western Europe, he was close enough that when he felt like it, on weekends, he would drive or fly to various European cities to see the sights, by himself. Instead of returning to Houston for Thanksgiving he went to Barcelona. He discouraged his family from coming because of the likelihood of his getting called away to repair an MRI.\n\nHe did the same for Christmas. Rather than being hopeful, the idea of being around everyone this year at Christmas was an anathema. Christmas in Munich was frigid in more ways than one. His family, including Sam &amp; Gabriella, called him on Christmas day. Each woman was upset, and worried, when the calls ended. Silently, the men were also.\n\nIn January, approaching the five-month mark in Munich, he received a call from Sam. They normally reviewed the progress on the new transducer bi-weekly, but Sam had different plans for this call.\n\nAfter their usual progress review, Sam started, \"Zach, I want you to start lining up interviews for your replacement. It's time for you to come home. While I want you to stay in charge of the manufacturing of the new product, there are some other things I need for you to do back here.\"\n\n\"Sam, I'm not sure that I'm ready to come home.\"\n\n\"Gabriella has been pestering me for months to bring you back, and I've put her off as long as I can. You don't have a choice anymore.\"\n\nZach had to laugh at that. \"I imagine she can be a rather persuasive woman when she sets her mind to it.\"\n\n\"Son, you have NO idea. You've only seen a small fraction of what she's capable of. I swear, I think I spend half my time trying to keep her focused on the charity that she helps, or else all she would do is meddle in the lives of her children or this company.\"\n\n\"Sam, you wouldn't have it any other way.\"\n\n\"You're right. I wouldn't. She does miss you, though. Seriously, you've helped us grow enough in that region to hire someone there full-time. I'd like for you to find your replacement. If it is going to take you a little longer to get back, then come visit her and your parents. I'm sure they miss you, too.\"\n\n\"You sound just like my brother.\"\n\n\"Great minds, and all that. Why don't you try to line up some in-person interviews for a month from now, and I'll send Frank to help you interview and make the final call on who to hire. If you'd like, I can speak with Demetrius and pull him in for a day.\"\n\nDemetrius was the CEO of the company that would manufacture the new transducers, where Zach was currently being allowed to work when he wasn't out fixing MRIs or working with them on the plan to manufacture the new transducers.\n\n\"I'll make it happen, Sam.\"\n\n\"I know you will. Take care of yourself Zach.\"\n\n______________\n\nZach worked with a local recruiting firm to help him line up and test several candidates from across Europe. Then, using Skype, he and Frank screened those that had the highest test scores. MCDI would bring four or five from that screening into Munich for the final interviews.\n\nOn Thursday morning, the week before the interviews were scheduled, Zach was working from one of the cubes at the manufacturing company in Munich when he felt a soft hand on his shoulder.\n\n\"Hello, Zachariah.\"\n\nZach was surprised by who was standing there. \"Cassie? I didn't know you were coming over. What brings you in?\"\n\n\"Well, I could give you the official line, which is that I've been told to ask you to drive me to Vienna. I have meetings there early next week with our R&amp;D partner before I come back here middle of next week.\n\n\"Of course, you and I both know that's complete bullshit. While my meetings are real, I could have flown into Vienna for a perfectly lovely and quite cold weekend by myself, even though we already have two rooms reserved for us. If you can't, or don't want to come with me to Vienna, I can catch a train, no problem. However....",
        "\"I'm told that you are an expert at travel and have spent a little time in that area. If you'd like to spend what is supposed to be a cold but beautiful three-day weekend with someone that cares about you more than the people around here, then we should go together. I'm told it is one of the most beautiful capitals in Europe. If you decline, I completely understand, though I have no doubt that my mother will not, and while I'm out of the country, I'll forward all her calls to you.\"\n\nRemembering what Sam had said about meddling in the lives of her children, Zach had to laugh at that.\n\n\"I'm assuming this means that if I call Frank, he will verify that he, or someone, is covering for me for the rest of today and tomorrow.\"\n\nHe liked the smile Cassie sent his way when she said, \"Well, it's currently 3:00 am in Houston, so if you want to call your boss, be my guest, but I imagine he won't be too happy to hear from you right now.\"\n\nZach said, \"So, I'm going to give you one chance out of this, before I agree. Are you sure this is what you want to be doing? I can handle your mother. Did I just say that? I should have said, I can survive the fallout.\"\n\nShe replied, \"I'm not so certain you can, but if I were dead set against this, then I wouldn't be here right now. Give a girl a break, would ya? I know I'm not the most beautiful woman in the world, but it still hurts to get shot down.\"\n\nShe was making him laugh, so he thought this could be quite entertaining. She definitely wasn't her mother.\n\n\"We have to stop by my place so I can pack a bag for the weekend, which shouldn't take but a few minutes. I can have you in Vienna in four hours if we are in a hurry, or we can take the scenic route and stop for lunch at a breathtaking spot. It's up to you.\"\n\n\"I am in your charge for the weekend, so I'll let you show me a good time. Mom gave us her AmEx to use for this weekend, and I intend to do exactly that.\"\n\n\"Then definitely the scenic route. Let's go.\"\n\nIn the cab, on the way to his apartment he asked, \"Have you eaten anything? How are you handling the jet lag?\"\n\n\"I grabbed a bagel and a coffee on my way out of the airport, so I'm good on food. Thanks to your sharing your jet lag tips with your department, I've been going to bed a little earlier each night for the last week and took melatonin at the right time before my flight, along with a mini bottle of tequila. I also brought two packets of instant coffee to help me wake up on the plane, so I seem to be fine but a little frazzled. I may go to sleep on you in the car.\"\n\n\"Oh, I doubt that. The snow in the mountains should be beautiful. I'm sure you've seen mountains before, but after being used to flat-Earth Houston, this ride through the mountains will keep your attention, at least it did mine.\"\n\nHe reserved a car using their company's account and called ahead to where he planned to have a late lunch for a reservation.\n\nShe liked his apartment. It wasn't anything fancy, but she could tell that he kept it very clean even when he obviously wasn't expecting company.\n\nAt the rental car counter, the only cars available at the moment were tiny compacts or a Mercedes E-class. They smiled at each other, laid down Gabriella's AmEx, and chose the Mercedes.\n\nAs Zach mentioned, rather than taking the direct route, they headed towards Salzburg, but bypassed it and went onto Hallstatt, one of the most picturesque little lake villages in Austria. Above the town and lake sits Restaurant Rudolfsturm with breathtaking views over the snow-covered town and lake from their covered patio dining area.\n\nZach's German was improving, but he was blown away when Cassie started speaking to the waitress in incredibly good German, which helped with the service versus speaking in English. They could hear several diners who were speaking in English and several other languages.\n\nHe said, \"I didn't know you could speak German.\"\n\n\"There's probably a lot about me that you don't know. The two countries in the world that lead in research for the type of technology we want to use are the USA and Germany. I studied a few courses in Aachen one semester and had to work on my German then.\"\n\nHe thought that was rather impressive, but he was starting to realize that she was a rather impressive person.\n\nSitting next to Cassie and enjoying the view of the lake was no chore. He had always seen her well dressed, and her lightly applied makeup was always an enhancement. Today she was dressed for the colder weather with a nice heavy skirt and tights with what looked like a pair of riding boots. Her dark cashmere sweater was flattering on her.\n\nShe looked a lot like her mom, though slimmer. She had a small chest and wider hips, and she was very fit.\n\nUnlike her mom, she wore her dark hair down in natural curls, instead of up the way Gabriella did. Rather than the sultry sculpted face that Lisa had, Cassie's round face could be called sweet and innocent, more like her mom's. As she said, no raving beauty, but he had been married to a raving beauty and look where that got him.\n\nFrom the overlook near the restaurant, they took a selfie together with the town, the lake and the snow-covered mountains in the background and sent it to her mother.\n\nAs they left the town, taking the more scenic and mountainous route to Vienna, he asked, \"What will you be doing in Vienna?\"\n\nShe replied, \"As I mentioned, I'll be with our R&amp;D partners. We are tweaking the transducer design to hopefully be more receptive than the current model, which you and our manufacturing partners are working with. Always got to be working on the next design.\"\n\n\"You're helping to design the transducer?\"\n\n\"I am, but don't tell anyone. One of the reasons I studied in Germany was to learn and get some leads on who over here could help our company. Only a few people in the company know.\"\n\n\"But why keep it a secret? I would think you would want everyone to know.\"\n\n\"If things go well, then everyone will know anyway. As things are right now, a lot of people already think that Daddy's getting ready to hand over the company to me and my brother. We are trying to stay more low-key until we've earned our stripes. My younger brother, Tom, who you've known for a while, has been working on the software to better render the images from each new transducer we test.\"\n\n\"Wow. Talk about the family business.\"\n\nShe smiled because she knew something about him and the 'family' business that he didn't. She said, \"that's right. It is a family business. Daddy would like to keep it that way.\"\n\nZach laughed and said, \"I'll probably be working for you one day.\"\n\nShe laughed too because she thought it was more likely to be the other way around. \"You may see it that way, but Daddy doesn't. He doesn't think of you as working 'for' him right now. He prefers to think that you and a handful of very carefully selected others work with him. Everyone else works for all of you.\"\n\n\"Wow.\"\n\n\"Don't be too surprised regarding me and the R&amp;D team. I've been in either med-school or graduate school for nearly ten years. I started pieces of the design on my own while in school. I don't pretend to be super brilliant, but I've been well educated. After spending 12 years in undergrad and grad school, including finishing med-school, at least I have my Ph.D. I'll bet through either my parents or my scholarships I've spent over half a million dollars on tuition. It was time for me to put that to good use.\n\nShe certainly wasn't at the company simply 'for show.' They talked about the company, the industry, her background, and education. They spent quite a bit of time on her mother, which was fun. Cassie admired her mother and loved the way she was, but she wasn't her mother. She had tried to capture much of her manners and grace, but her mother was much more reserved. Cassie was willing to call a spade a spade. Zach could tell that she got that from Sam. Her mother might call one a gardening tool or shovel depending on the delicacy of the situation.\n\nUntil then, the only subject they didn't discuss was Zach's marriage and divorce.\n\nAs they left the mountains and drove down into Vienna, she said, \"You know she misses you and is really worried about you.\"\n\nZach scoffed, \"Unfortunately I have several women who are missing and worrying about me. My sister, my sister-in-law, my mother, and your mother. I'm assuming you are talking about your mom.\"\n\n\"I am.\"\n\n\"I wish she wouldn't worry. I'm getting better.\"\n\n\"She would have come instead of me, but Mrs. Propriety didn't think that would look very good, her being a married woman and all.\" They both laughed.\n\n\"That is so like her. Now she's forcing you to be the sacrificial lamb?\"\n\n\"Or maybe to be your guide out of the labyrinth.\"\n\nWow. He looked over at her and she was looking out the window, or maybe she was just looking away from him.\n\n\"Thank you, Cassie. The rest of the weekend could be a disaster, but I've already enjoyed myself more today than I have the last several months combined.\" That was absolutely true, but the conversation had turned way too serious, so he said, \"See? That alone should prove to her that I'm getting better.\" He knew better, though today had been a pleasant diversion.\n\nIn the reflection in the car window he could see her smile.\n\n_________________\n\nThey were staying at the Park Hyatt Vienna, where they each had a Deluxe Park Suite for the long weekend, two luxurious rooms. After settling in, they met at the concierge table and found a nice restaurant and purchased two skip-the-line tickets for the giant Ferris wheel and arranged for a horse-drawn carriage tour for later that evening.\n\nIt was a cold but lovely evening, and from the top of the Ferris wheel they sent Gabriella another picture of the two of them together, with Vienna at the height of winter in the background.\n\nLoving the pictures that she received, it took all of Gabriella's will power not to call them. She was more thrilled than she could have thought possible, but she knew better than to stick her nose in now. After all the planning and scheming with Sam over the last couple of months, she would wait to see how this played out. Hopefully, Zach wouldn't get any emergency MRI calls. Also, she had a charity that needed her help and tried to use it to distract herself, which she did, barely.\n\nZach and Cassie used their late evening carriage tour, snuggled together under a heated blanket, with two large thermoses of decadently thick hot chocolate, to help them discover some of the places they wanted to see the rest of that winter weekend. At the end of their night, outside of her hotel door, Zach was rewarded with a hug, a kiss on the cheek and a 'thank you' for his efforts.\n\nOn Saturday morning, after a sumptuous breakfast together in the beautiful hotel restaurant, they planned their weekend together with the concierge. There were a couple of spectacular churches that she wanted to see in addition to several of the palaces and markets. Zach said, \"If you like cathedrals, there's one in Barcelona that I need to take you to.\"\n\nShe smiled at him and replied, \"I may hold you to that one day.\"\n\nThere were no MRI emergencies and they enjoyed their weekend in Vienna. As predicted, it was quite cold, below freezing during the daytime, but the skies were spectacularly clear. They visited many beautiful and interesting places that weekend, including the Stephansdom, the Kunsthistorisches Museum, the Sch\u00f6nbrunn Palace, the Schloss Belvedere, the Naschmarkt, and the Caf\u00e9 Central to name a few. Each evening he received a hug and a kiss on the cheek for his efforts. Zach bought her a snow globe to commemorate their trip.\n\nOn Sunday afternoon when it was time for him to drive back to Munich, she said, \"I want to thank you Zachariah. You didn't have to come, but I'm glad you did. I've had a wonderful time, here with you.\"\n\n\"I did too. I'll admit I was hesitant in the very beginning, which was all on me, but it has been a great weekend. Thank you for inviting me.\" He hesitated to ask what he was thinking but plunged ahead anyway. \"When did you say that you are returning to Munich?\"\n\n\"My train arrives Wednesday afternoon. Why?\" She could see Zach deliberating.\n\n\"Could you be available on Friday to help with the interviewing?\"\n\n\"Zachariah, I only know a little about MRIs, and we both know that I'm not my mom. I don't see how I could be of much help.\"\n\n\"I know you aren't your mother but,\" he was trying to find a way to convince her to agree. She could see the smile spread across his face before he said, \"You did tell me that it was a family business. I think it would be important to at least hear your opinion on the candidates.\"\n\n\"I'll see what I can do.\"\n\nHe hoped that would turn into a yes.\n\n____________\n\nDuring the week back in Munich, Zach found himself thinking about Cassie. He thought about her probably having business lunches or dinners with the R&amp;D company in Vienna and discovered a bit of jealousy there. Why? He had no idea. Nevertheless, it had been a good weekend. It was just what he needed.\n\nWednesday afternoon, Zach met her at the train station. Cassie was pleasantly surprised. That evening, they had a business dinner with Demetrius and a couple of others. Afterwards Zach escorted Cassie back to her hotel. She asked him, \"Zachariah, remember that cathedral in Barcelona you were telling me about?\"\n\n\"I do.\"\n\n\"Do you have any plans for this weekend?\"\n\n\"Uh, why no. I don't.\"\n\nShe asked, \"I know it's last minute, but could I convince you to host me again for a short weekend, in Barcelona?\"\n\nHaving immensely enjoyed the previous weekend, he replied, \"I don't think you would have too much difficulty convincing me of most anything.\"\n\nShe smiled at his reply. \"Okay. I'll arrange the tickets and hotel. Good night Zachariah.\" Again, she hugged him and kissed his cheek, but for longer.\n\n\"Goodnight, Cassie.\"\n\nHe was liking those hugs and kisses.\n\nThe interviews on Friday morning went well. They brought in four final candidates, and interviewed each, with Cassie participating in the room with Zach. They all compared notes afterward and decide a man around Zach's age named Dominik would be offered the position.\n\nThey sent all the other candidates home and took Dominik to lunch. They were all chatting away in a mix of German and English when Frank's cell phone rang. Zach could hear his weekend with Cassie getting crushed. He heard, \"Okay. Where? Give me the details. Yes, I'll forward them to Zach. He's sitting next to me now.\"\n\nZach asked, \"An emergency?\"\n\n\"There is. In Belfast.\"\n\nZach looked at Cassie with a sad smile, and she shrugged her shoulders. He said to her, \"Family business.\"\n\nShe nodded, \"Family business.\"\n\nHe turned to Dominik and asked, \"I know you haven't had time to think about our offer yet, but how would you like to go on a call right now? You can see how things go and how we do things before you give us your decision.\"\n\nDominik agreed and they prepared to head off to the airport together. Cassie and Zach only had a moment before he had to leave.\n\nHe said, \"I'm sorry. I really would have liked to go with you to Barcelona.\"\n\nShe replied, \"It's okay. We'll have other chances someday.\"\n\nHe nodded his head wondering if fate was trying to tell him something.\n\n______________\n\nThe service call went well, as they usually do, and Dominik, who lived in Frankfurt agreed to join the company. While in Belfast, Zach thought a little more about starting a relationship with Cassie. He liked the idea of it, but he struggled with the thought that he needed to tell her about what he did to Gerald. He still felt like he did the right thing and that Gerald, a despicable human being, deserved what happened to him. However, now he needed to tell Cassie about it. He didn't have to tell her now, but he would eventually because he didn't want to keep any secrets from her. He cared too much for her, or at least for her as a member of the Ortiz family, to lead her on. Where the previous weekend had been so enjoyable, now he was in a serious funk.\n\nHe began preparations to close out his apartment and move back to Houston. It had been a week since Cassie returned when his phone rang, \"Hello, Zachariah.\"\n\n\"Hi, Cassie. How are things in Houston?\"\n\n\"Cool and humid, which is better than the typically hot and humid. I haven't heard from you. I'm just making sure you're okay.\"\n\nHe decided that trying to explain why he was an attempted murderer wasn't meant for a phone conversation. So, he punted and would do it when he returned to Houston. \"I'm sorry. That's completely my fault. I've very much wanted to, but I've been in a bit of a funk this week. I'll explain it the next time I see you.\"\n\n\"Oh. Okay... Well, speaking of the next time I'll see you, have you made your plans to come back yet?\"\n\n\"They aren't final, yet, but I should be home in less than a month.\"\n\n\"Will I see you when you get here?\" She felt like she sounded desperate.\n\n\"I hope so.\" He felt the same way.\n\nThey talked for about thirty minutes before they both needed to go.\n\nTheir little talks continued every few days, though Zach was having a harder and harder time engaging during the conversation. It felt so pointless to him. Would his feeling this way prevent him from ever getting married?\n\nAt the time he genuinely felt that what he did to Gerald, with a little help, was justified. He still felt that way, but why was he now so worried that Cassie, or any other decent woman, wouldn't feel the same way. He thought that his self-arguing was the equivalent of a dog chasing his tail; pretty damn pointless until you either exhausted yourself, or you wind up hurting yourself.\n\nEven though he was worried about what was happening with him and Cassie, he felt good about returning to Houston and seeing his family, including the Ortizs.\n\n___________\n\nOn the Friday that he returned to Houston, those he cared most about were at the airport, waiting for him, including his sister and her family and Gabriella, but not Cassie. Big hugs all around, and they all ate dinner at Zach &amp; Daniel's parents' house. Gabriella enjoyed watching Zach interact with his little nieces and nephews.\n\nAt the end of the evening, he walked Gabriella out to her car. It was just the two of them outside when he asked, \"How's Cassie?\"\n\n\"I think she's confused and maybe a little perturbed. She's not sure where your head is at. Do you know where your head is at?\"\n\n\"No. Not really. I keep coming back to the meeting we had after I found out about Lisa's cheating, and then what I did about it.\"\n\nGabriella said, \"You mean what we did about it. You had help.\"\n\n\"You're right. I did, but I don't plan on keeping any secrets from someone that I might get serious with. I could very easily see myself getting serious with Cassie. How do I have that conversation with her, or with anyone? Can you see me saying, 'Hey, I planned on killing a guy? It turns out that I didn't kill him, but he's been crippled for the rest of his life. He's a real scumbag, so he deserved it. Will you still want to date or marry me?' See what I mean?\"\n\nGabriella continued to think they did the right thing, also, but she could see his concern. \"Zachariah, just talk with her. I think the extenuating circumstances justify the actions, but you'll have to discuss that with her. After a little time to digest it, I believe she will be okay.\"\n\nZach replied, \"And she may not.\"\n\nShe said, \"That's true. She may not. But you won't know until you try. I do hope you'll try.\"\n\n\"I feel like this conversation is going to be harder than my last one with Lisa.\"\n\n\"Don't feel like that. Cassandra is a very mature young lady, but she cannot read your mind. Make sure your actions are communicating your intent.\"\n\nHe sighed. \"I don't know what my intent is at the moment.\"",
        "She touched the side of his face with her hand. \"I understand that, but your choosing not to do anything is still seen as a choice by others.\"\n\n\"Thank you, Mrs. Ortiz. Thank you for coming. Tell Sam that I will see him on Monday.\"\n\n\"I will. And Cassie?\"\n\n\"I'll call her.\"\n\n\"Okay. Take care of yourself young man.\"\n\nAs he watched her drive away, he didn't feel very young.\n\n_______________\n\nHe tried to call Cassie the next day, but she didn't answer. He tried again the following day, but she still didn't pick up. At the office on Monday, he waited until after lunch to swing by her office. Her door was open, and she was sitting at her desk when he knocked on her door frame. He could see the snow globe on her desk, which brought a smile to his face.\n\nHe started, \"Hey.\"\n\nCoolly she replied, \"Hey.\"\n\n\"How's it going?\"\n\n\"What do you want, Zach?\" Ouch.\n\nClearly, she was still perturbed. \"I wanted to say that I'm sorry. My head hasn't been in the right place since you left, and that's my fault, not yours.\"\n\nShe said, \"I really enjoyed our time together and was looking forward to Barcelona. Unless I misread the situation, I thought you were too. Then you completely changed. Can you tell me why?\"\n\n\"I can, but not right now.\"\n\n\"Oh. Well, until then, I guess we don't have anything to say. Now, I have some things I need to finish.\" It was killing her to dismiss him that way, but she did not want to get involved with someone who couldn't figure out his own feelings towards her because that would just lead to heartbreak.\n\nZach stood up to leave. \"I really did enjoy our time together.\"\n\nShe asked, \"Would you mind closing the door on your way out?\"\n\nHe did. She didn't want to take a chance on someone seeing tears in her eyes for the next few minutes.\n\n_________________\n\nTwo months passed, and little was spoken between Zach and Cassie. Zach couldn't bring up the subject of what he did to Gerald, because he knew that when he did, Cassie would surely reject him. Then again, until he discussed it with her, she was rejecting him anyway.\n\nEvery time Gabriella looked at Zach, she felt a little sadder. It was hurting her to watch two people that she loved so much build up a wall between them before they ever gave each other a chance.\n\nThe company scuttlebutt was that Cassie had gone out with a doctor, someone to whom her older brother had introduced to her.\n\nZach was beginning to wonder how much longer he could keep working for MCDI, one year? Two? It saddened him to think that he may have to leave a company that he had been with for twelve years, his entire professional life, which started while he was still in college.\n\nDid he want to continue to invest himself in a company with which he thought his future was likely to become more and more uncomfortable? As Cassie and Tom were likely to be given more responsibilities over time, he didn't think they would ever hold anything against him, but his time around Cassie lately had been short, curt, and obviously uneasy.\n\nOn a Wednesday afternoon in early May, Gabriella stopped by Zach's office. \"Honey, can you come to Sam's office at five o'clock for a few minutes. We'd like to talk to you.\"\n\n\"Sure, Mrs. Ortiz. I'll be there.\" Now he wondered if the axe wasn't about to fall.\n\nAt 5:00 pm, he walked into Sam's office. As he was walking in, Cassie was walking out. She was dressed very nicely, too nice for work. She either had an event or a date. The very thought depressed him.\n\n\"Hello, Zach.\" She said as she passed by him in the doorway.\n\nHe replied, \"Hi Cassie.\" Then he thought, \"Less than a year. Definitely.\" He didn't think there was any way he could last a whole year. He would have to get his resume together.\n\nSam said, \"Please close the door, Zach.\"\n\nHe did, and like almost four years ago, they sat around the coffee table. Gabriella did not look like her normal take-no-prisoners self. Mostly, she looked sad.\n\nSam started, \"Zach, as your employer I cannot ask you to do what I'm about to say. As your friend, I hope you will. You know Gabby is a board member with a local charity, which helps women who are homeless get back on their feet. It gives them a place to stay, food and clothing while they pursue their education or some kind of skills training. The first group of women to go through this new program is graduating this Saturday afternoon. That evening, the charity is hosting a small event in their honor as a celebration of their accomplishment.\n\n\"All of the senior managers from this company and their spouses are invited, and Gabby has also invited all of our children to attend. She and I consider you a part of that group and would like for you to attend as well. It isn't black tie, but it would be preferable if you wore a suit or sport coat with a tie.\"\n\nGabriella smiled and said, \"Your best suit, please.\" Sam rolled his eyes. She continued, \"A couple of months ago, I had hoped that Cassandra would have been your date. To my disappointment, it hasn't worked out that way. Most single people will probably bring dates, but I've already stopped Cassandra from bringing one. I hope you won't either, but based on our conversation a couple of months ago, I suspect you won't.\n\n\"What Sam and I are asking you to do is to talk to her on Saturday night, after the event. I know it's going to be hard for you, but please do this for me. I'm afraid I'm going to lose you if you don't.\"\n\nHe tried to interrupt, \"Mrs. Or...\"\n\nShe continued, \"No, Zachariah. I know it's true. You don't look at me the way you used to. Before you left for Germany all I ever saw in your eyes were love and admiration. All I see now is sadness. It kills me to see that. Can you honestly tell me that you haven't been thinking about leaving the company?\"\n\nThere was a long pause before he answered. \"No. I haven't started looking yet, but it's crossed my mind.\"\n\nFrom her pocket, Gabriella pulled a handkerchief and dabbed her eyes. \"I suspected that.\" She let out a long sigh. \"Do you remember sitting here a little over four years ago and your showing us that lovely ring you purchased for Lisa?\"\n\nHe nodded.\n\n\"What was my reaction?\"\n\nHe replied, \"It wasn't what I was expecting.\"\n\nShe said, \"It wasn't because I wasn't happy that you had found love because I was happy for you. My reaction was because I thought, well, I had hoped, that you would take a little longer so you could fall in love with Cassandra. She's so special and you're so special. I know you would make a great couple. I thought I had run out of time back then, and now I fear once again that time is up. I don't think she is serious with that doctor, but I worry that the gulf between you two continues to widen. So, we are asking you as your friend, as my family, please talk to her. Please.\"\n\n\"Mrs. Ortiz, what if she doesn't want to talk to me? And what if she rejects me because of what I did?\"\n\n\"Then you will have done everything you could, but it didn't work out. At least you'll be able to look back on this time in your life and know you did the right thing. Can you say that's what you've been doing? Can you look me in the eye and tell me that for the last three months you've been doing the right thing?\"\n\nHe felt shame when he whispered, \"No.\"\n\nSam said, \"Zach we still think that what you did with Gerald was the right thing. I suspect you still had such heat and anger at the time that it wasn't that hard to do. Even now, almost nine months later, I'll bet we could all sit around and look through your PI file at the destruction he left in his wake and make the same decision. We don't know what the outcome of your conversation with Cassie will be, and I can imagine you have some trepidation because of that. But compare that decision and this. If you can do that, then I know you can do this.\n\n\"I don't want to see you go to work for someone else, Zach, but if you do, I'll understand.\"\n\nZach said, \"You may think I'm crazy for asking this, but I feel like I need to. You guys know your daughter. If I tell her everything, and I do mean everything, if she reacts badly, or I should say, if she thinks I did the wrong thing, do you think she would tell the police? I would prefer for none of my accomplices to get brought into this.\"\n\nGabriella was about to answer, and Sam made the extraordinary move of speaking over her while squeezing her hand. \"I cannot say definitively Zach, but I hope that we raised her well enough that she will see that you did what you thought was right; what we all though was right. Even if she doesn't agree with it, she should respect it enough not to turn you in. I suspect that if she told the police everything, it would still be hard for them to prove anything with your strong alibi, lack of evidence and no scene left to investigate further.\"\n\nThe Ortizs had said what they needed to say, now it was up to Zach.\n\nZach stood to leave and said, \"I'll do my best. I can promise you that. I have no idea how it will turn out.\"\n\nSam stood and shook Zach's hand. \"I know you will. I have every faith in you. I have for a long time.\"\n\nGabriella stood and hugged him fiercely. \"I love you, Zachariah. I always will.\"\n\nHe replied, \"I love you, too.\" He felt so sad at that moment. It was like he was expecting to lose a part of his family, and maybe he was.\n\n___________\n\nHe spent all of Friday evening hashing it out with Daniel and Gina. Even though he tried to tell them that she was not like her mother and would be unlikely to accept what he had done, they continued to tell him that he needed to do this so that he could move on. Six months of misery in Germany and then one week of hope, followed by three more months of pain. He couldn't keep going on that way. He definitely agreed with that.\n\nZach was incredibly nervous on Saturday. He arrived a few minutes early to the event. It was being held in a hotel near the shelter where the women lived. The large ballroom was divided into a smaller space and there appeared to be ten tables with up to eight chairs at each table.\n\nWhen he arrived, Sam was waiting for him. \"Hi Zach, I'm glad you could make it.\"\n\n\"Me too. Is everyone already here?\"\n\n\"No. We're just over half full but expecting a full house shortly. We have assigned seating, so the graduates are dispersed through the crowd. Otherwise, we were afraid they would all huddle at the same table. Let me show you to your table.\" Sam walked Zach into the ballroom and towards a table near the speaker's podium. The only person at the table he recognized was Cassie. Zach's chair was two away from Cassie, and the chair next to his contained a booster seat, which he thought was odd.\n\n\"Hello, Cassie.\" She was wearing a very pretty navy dress.\n\n\"Hi, Zach.\" While not exactly warm, it wasn't the cold, curt greetings he had been receiving. He didn't know anyone else at the table. A few minutes later, Gabriella brought a cute young woman, in her early twenties he guessed, and her little girl, who looked like she was three or four, to the table. The woman was in a pretty black dress that came to her knees and the little girl was wearing what looked like a pretty, new, colorful dress, too.\n\nGabriella said, \"Everyone, I'd like for you to meet this table's star for the night. This is Melody, she just graduated with her associate degree in accounting. And this beautiful, little, precocious cherub is her daughter, Bella. Quite a fitting name isn't it? Zachariah I'm putting them in your care.\" Bella was the only child at the event.\n\nHe was surprised at the request but would do his best. The mother was seated next to Cassie and Bella sat next to him. He introduced himself to both of them, as did the rest of the table.\n\nBella, in her booster was NOT shy. She told Zach all about her momma, and where they lived, and the new shelter they were building nearby, and her momma had a new job, and they got the new dresses they were wearing, and some more new clothes, and a new used car, and....on and on.\n\nZach loved it, though. She was a fun little girl. She kept most of the table cracking up. Cassie said, \"Quite the salesperson you've got there, Melody.\"\n\n\"Don't I know it. I used to try to reign her in, but I've discovered that it is better to let her wear herself out.\" The rest of the table laughed at that.\n\nFor entrees, everyone had their choice of chicken parmesan, spinach and cheese manicotti or filet mignon. Soon the food and drinks were brought out and Bella was ready to eat, too. She was working on her breadstick when they brought out her manicotti, which she loved until she saw Zach's filet. She tugged on her mother's sleeve and said, \"Momma, can I have some steak.\" Her mother had selected the chicken and Cassie had the manicotti.\n\nBefore Melody could reply, Zach offered, \"If it wouldn't bother you, I could give her some of mine. I don't mind.\"\n\n\"Please, Momma! Please!\"\n\nThe look Melody gave Zach communicated, \"I'm sorry.\" She said, \"Just a couple of bites, Bella. He needs to eat, too.\"\n\n\"Okay.\" Then turning towards her new friend, she said, unsolicited, \"Thank you, Mr. Zach.\" She was too adorable.\n\nZach gladly carved off a nice sized piece of meat and began cutting it into tiny, munchkin appropriate bites like he had seen his sister do for her kids many times. She did very well with her fork and had good manners for her age. While her mother may have been one of the stars for the night, Bella was definitely the hit at the table.\n\nAfter dinner and before dessert Gabriella took to the podium, and she asked the new graduates to join her. She gave a short speech where she uplifted the achievements of the eight graduating women there that evening. Each of them had been either homeless or abused less than three years previously. Each woman standing next to the podium was recognized and applauded for her efforts. Almost all of them had already found employment. There were several races represented, and except for Melody, most of the women looked to be in their thirties, but some looked older. One of them looked Gabriella's age.\n\nAfter the ceremony, the dessert carts were rolled around, and Bella's eyes were as big as saucers. Melody allowed Bella to select a dessert for herself. When the coffee was served, Bella asked, \"Can I have a drink?\"\n\nWhen the waiter told Melody the selections for children, Zach asked, \"Could your chef whip up a hot chocolate or two?\"\n\nThat had Bella's attention. Her puppy dog eyes pleading with her mom had everyone but Melody snickering.\n\nMelody sighed, \"One hot chocolate, please.\"\n\nZach added, \"make that two, please, and I have a request.\" He motioned the waiter over and whispered a few instructions to him. The waiter nodded his understanding and returned to the kitchen.\n\nZach told Bella, \"Be patient a few minutes because it takes time to do a good job. Does your mother ever braid your pretty hair?\" She nodded. He continued, \"For it to look nice, that takes time, right?\" More nodding. \"This is just like that. It takes a few minutes, but the hot chocolate should be worth the wait.\"\n\nIn the meantime, she was enjoying her warm chocolate and peanut butter brownie covered with hot fudge and whipped cream.\n\nWhile waiting for their hot chocolate, some slow dance music began playing softly and Sam had Gabriella up and dancing. Before long, several of the other senior managers were out dancing with their spouses. Zach wondered if that was a command performance or not.\n\nZach leaned towards his new partner in crime and asked, \"Bella, ask your mother if you and I can go dance.\"\n\nMelody gave Zach a strange look but let him take Bella to the floor. He had her put her feet on top of his and he held her hands while they danced around the floor. They had quite the audience, including a smiling Gabriella, Sam, and those at his table. After being out there a few minutes, he whispered into her ear again and she nodded her head in return. Zach picked up Bella and put her on his hip to return to the table.\n\nHe told Melody, \"She wants you to come dance with us.\"\n\nMelody smiled at this man who had taken a sudden interest in her daughter. Zach had watched his brother-in-law do this with his sister and their daughter one time. He hoped he could too. Basically, with Bella on his left hip and Bella holding Melody's right hand, he only had his right hand on Melody's waist and her left hand on his shoulder. They certainly weren't Fred &amp; Ginger, but Bella seemed to enjoy herself. Zach spent most of his time chatting with the adorable Bella. Melody spent most of her time looking at Zach.\n\nThey talked while they danced, and he found out that Melody was going to be working for MCDI in their accounting department. She was extremely excited and nervous. Zach said, \"Did you know that Gabriella used to work in the accounting department there?\"\n\n\"I do. She and Mr. Ortiz interviewed me together.\"\n\nThat caused Zach to smile. \"Yes, they are two of the most wonderful people I've ever known. I think you'll like working there.\" He was lost in his own thought for a moment wondering how much longer he would be there.\n\nHe also discovered that Melody was looking for a daycare for Bella that would be close to MCDI. Zac was certain Mindy's Montessori school could help with that. He might even be able to get the company or the charity, or some combination of the two along with himself to help out. The school also gave 'scholarships' to help with those that had more difficulty paying.\n\nAfter several minutes of dancing, they heard, \"Do you mind if I cut in?\" It was Cassie.\n\nZach told Bella, \"I can see our hot chocolate on the table.\" That had the desired effect, and she happily led her disappointed mother back to the table.\n\nAfter they had been dancing together silently for a minute Cassie, asked, \"Are you trying to make me jealous?\"\n\n\"What!? No. I...um...I wouldn't do that. I was just being nice to Bella, so her mom could relax.\"\n\n\"I know. I'm teasing. You've been very nice. I think you've made too good of an impression.\"\n\nAfter a few seconds of thought, he dove in headfirst, \"I don't understand. I've not received any indication during the past two months that you would be jealous, anyway.\"\n\nShe paused before replying, \"Well, I am. I like seeing this side of you.\" Zach was stewing. Another moment passed and she continued, \"You hurt me, Zachariah. It was only one weekend, but I cannot tell you how much I was looking forward to the next one. When you closed yourself off to me, I was crushed. If you don't believe me, you can ask my mom and dad.\"\n\nIt took him a moment to figure out how to respond. \"I know, and I knew it while I was doing it. I'm so sorry. I was hating myself the whole time, but I had a reason, which I'd like to tell you about later, after this event is over, if you'll let me. Everything. The whole sordid truth, and then you will have a reason to not speak to me.\"\n\n\"I'm a big girl, Zachariah. I think I can handle it.\" So, he was Zachariah again.\n\n\"I desperately hope so.\"\n\nShe squeezed the hand she was holding and pulled him back to the table, where Bella had a chocolate and whipped cream mustache.\n\nGabriella was eyeing the two of them dancing, reveling in the appearance that her scheme was working. Sam said, \"That was rather clever putting Bella and Melody next to Zach. Feeling rather proud of yourself, Gabby?\"\n\n\"Oh, shush. We haven't won the game yet, but it looks like the momentum has shifted in our direction.\"\n\nSam gently kissed his cunning wife, briefly, knowing that she wasn't crazy about public displays of affection. She was in such a good mood that she did not complain.\n\nContinuing to entertain, Zach made a point of sipping his syrupy thick hot chocolate to have a mustache of his own which caused Bella to giggle. As the night wound down, Bella began to get drowsy which was Melody's cue to leave.\n\n\"Thank you, Zach, for entertaining Bella tonight. I can tell she had a great time.\"",
        "\"It was my pleasure Melody. You should bring her with you into the office from time to time. I'd love to see her, and I'm sure the important people, which would be Cassie and her parents would love to also. Can I help you get her into the car?\"\n\nShe hadn't picked up on the jealousy vibe from Cassie until she cut into dance, but she was aware of it now. Not wanting to piss off the CEO's daughter's, she smartly, but kindly declined.\n\nSeveral minutes later, Zach walked over and whispered to Cassie, \"Did you ride with your parents?\" She nodded. \"Can I give you a ride, so we can stop somewhere to talk?\" She nodded again.\n\nZach walked over to the Ortizs and said, \"Cassie has agreed to let me give her a ride. Since she came with you, I just wanted to let you know.\" Sam was rather stoic, but Gabriella back in proper, finishing-school form had an amused look on her face and nodded her assent.\n\nAfter Zach left their table, Gabriella was beaming.\n\nSam said, \"You're gloating.\"\n\nBarely keeping her glee under control, Gabriella replied coolly and huskily, \"I know.\"\n\nHe asked, \"You do realize, if things go according to your plan, he'll probably spend the night at her place.\"\n\nShe said, \"I trust our daughter to do the right thing. If his staying the night is the right thing, I have no problems with that.\"\n\nHe laughed, \"You amaze me sometimes.\"\n\nShe kissed him on the cheek and said, \"I have to keep you on your toes.\"\n\nIn the car Zach said, \"My current place is my parents' house, so it's either a restaurant, your place or this car. It's up to you.\"\n\nShe said, \"I think I would prefer my place.\"\n\nThey drove west out of downtown, past Rice University and the Galleria towards the general area where most everyone that worked for MCDI lived. The conversation was rather subdued, focusing mainly on what a nice event that was and how amazing the charity was for helping those women and the ones working to graduate the following year.\n\nWhen he pulled into her place, he could see that she had a nice, but small townhome that looked relatively new. When he got out of his car, he grabbed the PI folder that had been in his back seat.\n\nOnce inside she asked, \"Would you like something to drink?\"\n\n\"No, thank you. I need every brain cell for this. Though I reserve the right to kill off most of them later.\"\n\nShe poured herself a glass of wine, and they sat in her living room. With a sweep of her arm, she said, \"Okay. The floor is yours.\"\n\nHe asked, \"What do you know about my divorce from Lisa?\"\n\n\"Ah, ah. This isn't about querying me. This is your story to tell.\"\n\nHe let out a long sigh. \"Fine. This may take a while.\"\n\nHe told her about everything, from the night they first met, to falling in love, he thought. He explained the quirkiness he felt from her when he returned from his trips, her reluctance to play the violin anymore and how Mindy's pregnancy sparked Lisa's interest in maybe their starting a family. Then he told her about the call from his brother, the picture in the newspaper and the PI report.\n\nHe said, \"I brought the report on shithead, so you can see what kind of person he was. I can point to two lives that he's destroyed plus several others that he's hurt. He leaves misery everywhere he goes. I do not understand why he was celebrated so much. Before I tell you what happened next, I'd like for you to take a minute to look at the PI file on him.\"\n\nShe looked him dead in the eye and said, \"No. That's okay. If you tell me the man is poison, I believe you.\"\n\nHe thought 'poison' was a curious choice of words, but he forged ahead. \"Okay. So, on that statement, here we go. As was said, the man is poison. He'd hurt countless people, pushed one woman over the edge, no telling what he did to Lisa, beyond crushing her love for playing music, and was admittedly complicit in the destruction of my marriage. I wanted him to pay for crimes for which he would never be convicted, and for which some in even 'higher circles' applauded him. Call it what you want: revenge, retribution, justice, or something else.\n\n\"So, with the help of a few others, we formulated a plan to get justice on him and keep me out of jail. It didn't go quite according to our plan. Please don't ever reveal the names of my coconspirators. Your mother and father supposedly sent me on a trip overseas. My brother was the one who went on that trip because I needed to be the one that performed this act, and his going through immigration while I did it, gave me my alibi. He supposedly worked from home that day. I even made a quick dash into his office early that morning to get some files so 'he' could work from home and so the security cameras would see 'him' at his office.\n\n\"I caused the gas explosion at Gerald's house. My intent was for it to kill him, but he must be a tough old bird because he survived, badly damaged, but alive. This means that while I'm not technically a murderer, I am an attempted murderer. My final revenge is that Lisa went with him to Austin to try and help him recover. Why? I don't know. But I know something she doesn't. I have a recording of him saying things that would likely cause her to leave him, but I'm getting to punish her by letting her stay with the miserable bastard.\n\n\"Afterwards, I just wanted to get away, because I wouldn't be able to stand the pity while I was so miserable. Your dad let me go to Germany, where I was miserable until the day you showed up. Then when you left, I was miserable all over again, but for a different reason. I wanted to go to Barcelona, too, but while in Belfast, I realized that I needed to have this conversation with you.\n\n\"If you were just a date or someone who I knew I couldn't get serious with, then it wouldn't matter, but after our time in Vienna, I knew I could get very serious with you. I didn't want to waste your time being with someone who you would probably reject because of what I've done. I could NOT build our relationship on a foundation that hid such a huge secret.\n\nHe finished with, \"So, that's everything, all of it.\"\n\nWhile watching him, she to a long sip of her wine and then asked, \"So, that's it? Nothing else you need to tell me about?\"\n\n\"I just told you I tried to kill someone, how does anything else compare?\"\n\n\"What about in high school? You and the quarterback?\"\n\nHe squinted at her for a moment and asked, \"Who told you about that?\"\n\nShe replied, \"For someone that knows my family so well, I'm surprised that you aren't connecting all the dots, yet.\"\n\nZach sighed and shook his head, \"Obviously, you have me at a disadvantage, and I'm emotionally exhausted. Could you please fill a clueless guy in?\"\n\n\"You know my mother loves you, right? She does. Do you have any idea how long I've been hearing about you? She's wanted you and me to be a couple for a long, long time, since well before you met Lisa. There were times when I thought you sounded interesting and times when I didn't want to hear another word about you. Zachariah, Zachariah, Zachariah was all I heard. Then you became engaged to Lisa. My mother was crushed...crushed.\n\n\"I went from hearing all about you to nothing. Then after I started with the company, I was seeing more of mom and dad, and you, too. Right before you left for Germany, I could tell something was weighing on her. Remember the night I saw you after you had dinner with my parents? That was when I found out about your divorce. She wept for you when she found out about Lisa's affair, because she was hurt too. She missed you so much while you were gone and kept telling Daddy to bring you back. When I needed to go to Vienna and Munich for work, she enlisted me to check on you.\n\n\"I didn't mind. I'd heard glowing things about you for years, so I knew you were a good guy. Most everyone in the company likes you too. Some think you are a brown-noser because they think you suck up to my mom. The people that matter don't think that because you don't suck up to my dad. We hadn't had much interaction since I joined the company, but you were always polite and friendly.\n\n\"Hence, I was curious about what I was going to get when I arrived in Germany. Before I left, Mother and Daddy sat me down for a talk to prepare me, because for years all I had heard were glowing reports, and now they were genuinely concerned about you. They told me everything they knew.\n\n\"I must admit, I was a little surprised. Believe it or not, I was less surprised by them than I was about you. My parents are fierce defenders of family and their moral code is to always try to do the right thing. Maybe that's why you and she get along so well.\n\n\"After our first day spent together, it took a great deal of willpower not to pull you into my room and screw your brains out all night long. That would have been the only way that day could have been better. Of course, had I done that, we wouldn't have seen much of Vienna. By Saturday night, when we were riding in the back of that carriage under that blanket, again, I was wanting our hands to wander all over each other. Those few days in Vienna was perfect, and I was already falling for you.\n\nI promise you, had we gone to Barcelona, we may or may not have seen the cathedral, because I had only booked one room, and I wasn't planning on our leaving it very often. I hope that tells you where my mind was at.\"\n\nHe shook his head, \"I can't believe you've known all this time and could still have feelings for me.\"\n\nShe said, \"I have, but this was your secret to share. As you said, we shouldn't start a relationship with such a huge secret, but you had to be the one to tell me. I was angry and frustrated because I wanted more, but if you couldn't muster the will to have this conversation, then we could never be anything.\"\n\nHe replied, \"I'm sorry for hurting you, but I didn't know how to overcome this.\"\n\n\"Always trust me, and I'll always trust you. THAT is how we will start.\"\n\nHe thought that was a damn good place to start. \"I like the sound of that. So where do we go from here?\"\n\n\"Well, no more making me jealous by doing such cute things with someone else's daughter.\"\n\n\"I told you I didn't know I could make you jealous at the time. No more dating doctors or anyone else for you.\"\n\nShe came and sat by him, \"I promise you, that wasn't a real date, but it served its purpose, which was to get back to you, to hopefully get you moving. Also, if you and I are to become something, then you need to be careful regarding how tightly my mother has you wrapped around her finger.\"\n\nHe laughed at that. \"That could be difficult, but if it's any consolation, I spent a lot of time while you were in Europe wishing I was wrapped around you instead.\"\n\n\"You did?\" She leaned in and kissed him. It was a nice kiss on the lips.\n\n\"I did.\" Then he kissed her back, enthusiastically, and the feelings they had while together in Europe zoomed past rekindling and exploded. It was a good thing no one could see into her place because it took them about twenty seconds to get naked on her couch. While they both cared for each other, there wasn't much love involved at the moment. Their lust was driving their passions, which quickly ended up with Zach on his back on the couch and Cassie riding him.\n\nAs he was getting close, he said, \"I'm about to cum.\"\n\n\"I'm on the pill, and don't stop until I drop.\"\n\nIt had been a long time for him, so he felt like he pumped a gallon into her, but even after he came, he stayed hard long enough for her to climax and collapse on top of him.\n\n\"Oh God, I needed that. Mmm, that was very, very nice.\" She gave him a quick peck on the lips and said, \"Come on. Before I start dripping everywhere, come wrap yourself around me like you said you would, but let's do it in my bed.\"\n\nHe did.\n\nOne more time that night and twice the next morning, and they were both sore and very sated.\n\nAfter lunch, her phone rang. Caller ID told her it was Gabriella. She laughed and said, \"My mom's checking in. I'm almost surprised she didn't call you.\"\n\nShe answered her phone, \"Hey, Mother how's it going?\"\n\n\"Quite well, thank you. Did you and Zachariah have a chance to talk things out?\"\n\n\"We did. I think we've decided to give it a try.\" She winked at Zach.\n\n\"Oh, I'm so glad to hear that. Would the two of you be able to join us for dinner tomorrow night?\"\n\n\"I can probably find a way to ensure that he's there, but I need to call Zachariah first.\"\n\nShe heard a disappointed, \"Oh,\" through the phone.\n\nCassie yelled, \"Hey, Zachariah, can we have dinner with my parents tomorrow?\"\n\nAfter a short pause, Gabriella said, \"Feeling rather full of yourself aren't you Cassandra?\"\n\n\"I am.\"\n\n\"I'm glad, very, very glad. Give my love to your new man.\"\n\n\"I intend to, as often as he can.\"\n\nShe definitely wasn't her mother. Zach knew this was going to be fun.\n\n_______________\n\nAround a month later, early in the morning, Zach was in Austin at a rehab facility waiting until it was time for a little visit. Once he knew Gerald would be in therapy, he pulled the large bag from the car's trunk and went inside to the waiting area, where Lisa was sitting. She looked so much older than he remembered. She had lost several pounds. Her auburn hair wasn't as kept as it was when they were married. Most of all, she looked very, very tired, as if something, or someone, had sucked the life from her.\n\n\"Good morning, Lisa.\"\n\n\"Zach! What are you doing here? Wait a minute. If you are here to gloat, don't bother. I know how I wound up here.\"\n\n\"No, Lisa. I'm not here to gloat. I'm here to apologize and to forgive you.\"\n\n\"I don't think I deserve your forgiveness, but an apology? For what?\"\n\nHe said, \"Not long after we last saw each other in the hospital, I learned some things. I could have shared them with you sooner, but I chose not to. A good friend has encouraged me to do the right thing and forgive you. We're hoping that what I'm about to share will help you.\"\n\n\"You want to help me?\"\n\nHe replied, \"I do. I need you to listen to this recording. You'll understand once you've finished.\"\n\nZach played the recording from his conversation with Gerald for her. It wasn't long. Afterwards her response wasn't what he expected, which was for her to get angry, either with Gerald for saying it or him for not sharing it with her sooner. Her expression was simply one of sadness.\n\nShe asked, \"Why bring this to me now? You could have let me spend the rest of my life, or his, taking care of him.\"\n\n\"Because I met someone who I care about dearly. She reminded me that it's always important to do the right thing, even when someone isn't looking. I know that. It doesn't bother me that I hurt Gerald. He deserved it, but because I love you, then I shouldn't let him continue to hurt you.\"\n\nShe said, \"I always suspected it was you that caused the gas explosion, but I wasn't going to try to get anyone to prove it.\" That statement told Zach that her helping Gerald was more a sense of obligation than love.\n\n\"I...\" then he thought better of what he was about to say, not wanting to dwell on what he did. He changed course, \"I had planned on waiting three years before sharing that tape with you, which is how long we were married. I was made to see that over the years you've already paid an extremely high price for being involved with him. You've suffered enough.\n\n\"Do you remember hearing about the young lady that killed herself after his devastating review of her performance? What if he had been that way after our divorce towards you? He doesn't care about anything or anybody. All he does is use people to make himself look superior. He uses you to make him look better because you're beautiful and people see you with him. Don't let him use you anymore. He doesn't deserve you, and you are letting him continue to hurt you, when he doesn't care about you...nor your music. All he cares about is himself. However, we, my family, our families, do care for you and want you to be rid of him because he's hurting you. It would be terrible if he succeeded in turning you into being just like him.\"\n\nLisa wondered how much of her life had she poured into that sad man? How had she allowed herself to be so easily duped and for so long? His snarkiness wasn't some kind of enlightenment. It was simply some self-superiority he felt he had, and other had supported. For some reason many of the Texas papers had allowed his familial position, his teaching position and his cute commentary to help sell papers. Remembering the young lady who killed herself, she realized that she was one of many that had enabled Gerald. He got off on hurting others and putting them in their place as he did to her. She had allowed it and even had encouraged it at times. She wouldn't any longer.\n\nShe looked at Zach, who she had loved so dearly. She still loved him, and a tear ran down her face. She asked, \"What's in the bag?\"\n\nThis is from my entire family to you. I'm not sure why you left it behind, but I hope you'll learn to love it again and think kindly of us when you use it. He pulled her violin case from the bag, and she couldn't hold it in any longer. Her parents had paid a small fortune for that violin when she made the first chair in the Houston youth orchestra. They had been so proud. She had left it behind because she knew she would never play it around Gerald.\n\nShe broke down and held on to Zach while she cried for all of the lost years, her lost music and her lost marriage. He didn't fight her or try to push her away. He wrapped his arms around her and held her until she was calmer. He genuinely hoped she could get her life straightened out, away from that piece of shit.\n\nSeveral minutes later, after she had composed herself, she said, \"I should go. Where I don't know, but I'm getting away from him. I'm sorry that I hurt you so much that you would do what you did to him and allow me to stay with him knowing what you know. I'll always be sorry for hurting you. Thank you for coming Zach. I will always love you.\"\n\nShe took the case, walked out the door and drove away.\n\nHe loved her, too.\n\n_____________\n\nA week after Zach returned to Houston, Miriam checked in on Lisa and found out that she had left Gerald. In fact, she never saw him again, and he never made it out of the wheelchair.\n\nThe reason Miriam went to see her was because she wanted Lisa to teach her children the violin. Lisa refused at first, but eventually Miriam, her husband and the kids wore her down. She remembered how much Zach's family had complimented her on her playing early on and the joy she could give others either by playing or teaching. She wished she would have listened to them sooner.\n\nHer rediscovery of her music and her teaching helped Lisa tremendously. Seeing the smiles on the kids and Miriam's face brought a smile to her own. She became friends with Miriam and her family, who helped her immediately after leaving Gerald. They even encouraged her to reconnect with Mindy and Robert. She apologized to Robert for getting Mindy involved in her affair.\n\nThey accepted her apology and invited her to come and meet their daughter. It was a good reunion. She hated that she had missed so much in the last year. Eventually she moved back to Houston, and with a little help began transitioning to teaching violin full time. Also, she sought out help from her hospital to understand why she would have allowed Gerald to hold such power over her. Once she had regained her playing skills, she even played some with the Houston symphony and would occasionally pull in a few of her colleagues from there to play for a new charity foundation that had started in Houston called the WoW Foundation.\n\n___________\n\nZach and Cassie, of course, were married.\n\nAt the reception, while dancing with Gabriella, Zach asked, \"Mrs. Ortiz, I was born in the south and raised by some rather strict southerners, so I don't think I'll ever be able to call you Gabriella. However, if you would let me, I'd be honored to call you Mother.\"",
        "Upon hearing that, her eyes swelled with pride, and tears. She kissed his check and said, \"I've been wanting to hear you call me that for years.\"\n\nThe newlyweds honeymooned in Vienna, exploring even more of the city and sights, and feeling right at home. Over the years, they had three children who were loved profusely by both sets of grandparents.\n\nThe new products they developed performed very well in the marketplace. They performed so well, that one of the mega-corporations that they competed against eventually purchased a share of MCDI to sign an exclusive marketing and reselling agreement with them.\n\nThe large sum of money from the sale was used to fund the charitable foundation which Gabriella started, but was later taken over by Cassie. Sam said that he would only agree to give her the money for the foundation if he could name it. He named it the Walk on Water (WoW) Foundation because like Zach, he genuinely thought his wonderful wife could walk on water, and he thought that it would be a good name for a charity.\n\nWithin a couple of years of the agreement, and cash windfall, Sam handed the company over to Zach to run. He had earned that right over the years and had helped to not only grow the MRI servicing business but to help manage the growth of many new products as well.\n\nAlas, they lost Sam in his 75th year. He had an aneurysm one night, and he didn't wake up, but he and Gabriella were together when he passed, which is how he would have wanted it. After Sam died, Cassie began helping her mother with the foundation, and eventually took over its day to day management.\n\nThe foundation's primary focus was on helping Houston's homeless and abused women. It built a new, larger building to help and house those women in need and their children, trying to turn their lives around. They repurposed the old building into a Montessori school serving kids from birth to sixth grade, which allowed the women to pursue their education or skills training. Mindy was hired to run the school.\n\nLike the earlier charity did for those first eight graduates, the foundation helped clothe and feed the women that came through its doors, while they worked to get the skills necessary to stay off the streets or out of abusive relationships. They also got them started in their new lives by helping them get a reliable used car, some work clothing and helping them get set up in a new place of their own or one to share with another graduate.\n\nThe model was so successful that it was emulated in several other cities. Now, Cassie was being celebrated for her running of the WoW Foundation that her parents started.\n\nLisa could always cajole a few of her colleagues and students to come out and play for a good cause. To make up for the hurt that Gerald had caused, and that she and others enabled, she felt driven to write encouraging articles for the Houston paper, lauding and applauding the efforts of the town's musicians, and rallied the patrons to also provide positive feedback and encourage the development of youth programs to support budding musicians. She continues to receive nice letters from those that appreciate her kind words, including former conductors that had performed there.\n\nMindy sung at the charity celebration that evening for her friends and rarely turned down an invitation to do so. Her eldest daughter was one of those playing the violin that evening. Bella was playing, also. Her mother, Melody, ended up marrying Cassie's younger brother Tom, and they were incredibly happy together.\n\nAfter the speech, applause and thanking many people for coming out, Cassie had finally worked her way towards where her husband and mom were talking. But of course, they were always talking. She was quite sure that he loved her mother more than even her brothers did, and that was saying a lot.\n\nShe asked, \"Mother, why is it that whenever I'm away from Zachariah for more than a few minutes, you are always next to him when I return?\n\nShe replied, \"Because I thought I lost him at one time, and I'm never going to allow that to happen again.\"\n\nZach replied, \"You'll never have to worry about that, Mother, because ever since Vienna, when she saved me from my isolation, Cassandra has had my heart. No matter where I am, I will always come home to her and my family.\"\n\n___________\n\n***********\n\nTo everyone that got this far, thank you. I started out writing a story where Gerald dies in the gas explosion while Daniel is Zach's twin &amp; alibi, but I ended up writing a feel-good story which included a wonderful woman/mother like Gabriella. It's weird the way the keyboard will take you some days.\n\nI know that some of you will feel that his retribution or intended punishment of Gerald was too severe. Again, this is a work of fiction. Some of you will think Lisa wasn't punished or punished enough. I disagree. Being with Gerald for so long was, in a way, its own punishment. Also, having to help care for someone as petty as Gerald, who is wheelchair bound, for a year would be pretty tough.\n\nAlso, forgiving Lisa allowed Zach to pursue his relationship with Cassie free of any ghosts of Lisa.\n\nThanks again.\n\nWant to read something really good? Take a look at look at dtiverson's Jacob's Ladder. I've probably read it four or five times and it always brings a smile to my face.\n\nStay safe out there.\n\n***********\n\n \n"
    ],
    "authorname": "jmmj5",
    "tags": [
        "affair",
        "cheating wife",
        "classy",
        "consequences",
        "divorce",
        "family",
        "justice",
        "revenge",
        "vienna"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/his-guiding-light"
}