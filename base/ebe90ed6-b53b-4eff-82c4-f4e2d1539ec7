{
    "title": "Three Square Meals Ch. 066",
    "pages": [
        "It was dark in the Xen-Nuchek mines, with weak lamps lighting the passage that led into the slumbering volcano. The tunnel led down at a steep incline; not quite enough to make the descent treacherous, but certainly at a sharp enough angle to raise the heart rate. John took the lead, with Alyssa at his side, leaving Dana and Rachel to cover the rear as they delved deeper along the foreboding tunnel.\n\nTheir cautious footfalls were drowned out by the clanking and mechanical grinding of the conveyor belts, as tons of sulphur were hauled up to the surface. When the tunnel eventually opened out into the huge cavern below, the belts took a curving turn to follow the walls, taking the deafening racket with them. As John and the girls descended further down the ramp, the noise faded away behind them, and the eventual silence came as a blessed relief. \n\n\"This place is enormous...\" Dana murmured softly, as she gaped at the colossal tunnelled out chamber. \"They must have been excavating here for years.\"\n\n\"The view is breathtaking,\" Alyssa agreed, staring at the flickering glow from the streams of lava that wended their way across the cavern floor.\n\nRachel had brought her medi-scanner with her, and she took a quick reading of the atmosphere in this subterranean hall. Her worried frown spoke volumes, and she looked at John and said, \"The air quality in here is appalling. If the prisoners aren't wearing comprehensive safety gear, their health will deteriorate rapidly.\"\n\nJohn looked grim as he replied, \"I suspect that prisoner safety isn't the Kintarks' main concern.\"\n\nHe turned back to the ramp and they continued on their slow downward progress, with the girls taking cautious steps behind him. A flashing red warning light in his GUI drew his attention, and John realised it was some kind of temperature alert. As he gazed at the warning icon, the optical-driven GUI began to display more details. According to the sensors built into his armour, the external temperature had started to creep up as they travelled further below ground, reaching a stifling forty-one degrees. Although they were out of the blazing sunlight, the magma flowing through the huge cavern was more than making up for it.\n\nThe ramp eventually levelled off into a causeway that crossed the rest of the room, flanked on both sides by languid red flows of molten rock. Up ahead was a high ceilinged tunnel that stretched out into the murky darkness, the light from the lava not shining too far down the passageway. \n\n\"Switch to low-light amplification, ladies,\" he said to them as they walked forward, their weapons held at the ready. \"I doubt the lizards will show up on mag-view, and all the ambient heat down here is going to overload thermal imaging.\"\n\nThe three young women dutifully activated low-light amplification in their helmet huds, and the clear-crystal faceplate showed an enhanced view of their surroundings. The walls were edged in a latticed wireframe, clearly highlighting the flat surfaces in the dim light.\n\n\"This looks new,\" John noted in surprise, turning to glance at his Chief Engineer.\n\nDana winked at him, and said, \"I built in a low frequency sonar system to help in the dark. We've been so busy recently I haven't had a chance to demo it, and it's not the kind of thing that makes for a showy presentation anyway.\"\n\n\"It's pretty cool,\" Alyssa said appreciatively, looking around at their surroundings.\n\nThey walked forward with more confidence now, crossing the last of the causeway and striding into the big tunnel beyond. The ground was hard rock, but there was a thick layer of powdery yellow dust spread across the floor, and amongst the booted humanoid footprints were huge clawed reminders that something on an altogether vaster scale lurked down here too. \n\nAfter they had travelled down the unwavering corridor for over a hundred metres, John raised his hand, bringing them to a halt. He listened carefully, then nodded as he said, \"I can hear drilling, off in the distance to the right. The mining face must be near here somewhere, along with the prisoners I'd assume.\"\n\nIt didn't take long to reach the end of the tunnel, which finished in a T-junction, with broad tunnels leading off into the inky blackness to their left and right. The girls were able to hear the drilling sounds now, coming from the right, while the left seemed ominously quiet. A glance at the floor showed Terran and Kintark bootprints heading off to the right, while the massive clawed depressions went off to the left, disappearing into the stygian darkness beyond.\n\n\"So, which way?\" Alyssa asked, straining her eyes to see down the tunnel to the left. \"Do we go after the prisoners, or go dragon hunting?\"\n\nJohn thought it over for a minute, while the girls covered all approaches to the junction, then replied, \"We'll eliminate any guards in the mine, and check on the prisoners. When they're safe, we'd better come back here and deal with the Consort and her mate. I don't want any ambushes from them while we're trying to lead out the prisoners.\"\n\nShe smiled at him, and said, \"Alright, sounds good to me.\"\n\nTurning to Dana, John said, \"My chemistry's a little rusty. How flammable is all this sulphur?\"\n\nShe shook her head, and replied, \"It's not going to explode or anything. It's a pretty stable element, but we can set it on fire, which we don't want to do because it'll make a load of sulphur dioxide.\"\n\nRachel nodded, agreeing with the redhead, and replied, \"Yes, we definitely want to avoid any fires. That gas is toxic, and the last thing we want to do is raise the sulphur dioxide levels with the prisoners still trapped in here.\"\n\nWhen John looked her way again, Dana smiled at him, and said, \"Don't worry, I'll watch it with the laser rifle.\"\n\n\"We should hold off with grenades as well,\" he said with a tinge of regret, as he glanced down the corridor to their left.\n\nThere were no objections from the girls, and they followed after him as he started down the right hand tunnel, with Dana and Rachel keeping a wary eye behind them. The ground beneath their feet was the same solid bedrock as the causeway, and any Sulphur in the tunnel had been dug out years ago. The walls were rough-hewn rock, the dark-grey stone heavily scored by marks from picks and drills.\n\nThe noise from the drilling intensified as they steadily approached the mine-face, and the corridor took a sharp left turn when it sounded like they were about to stumble into the miners. John hugged the left wall, then gingerly poked his head around the corner to get a glimpse into the room beyond. The view took his breath away, and he gaped at the scale of the mining operation before him. \n\nThey were up on a gallery that overlooked one end of a dimly lit canyon, with ramps leading down to the lower levels, where hundreds of miners drilled away at the sulphurous rock. Conveyor belts ran below the miners, and as they broke chunks of ore away from the cliff face, it dropped onto those clanking metal channels which carried it away to the surface. He'd expected to see Terran prisoners down here, but surprisingly, all the miners were Kintark. They were being carefully watched over by armed guards in shimmering-green armour, which made him fairly sure the Kintark miners weren't here of their own volition. \n\nHe pulled back, and said to the girls, \"There aren't any Terrans there! It's all Kintark prisoners.\"\n\n\"So where the fuck are they?\" Dana asked, with a pensive frown.\n\nRachel brightened considerably, and suggested, \"Perhaps the Kintark realised how hazardous Sulphur dioxide was to Terrans? Without decent air filtration equipment, this kind of exposure would be fatal in a couple of weeks.\"\n\n\"Yeah, maybe...\" John replied, but he didn't sound convinced. \n\n\"So where to now?\" Alyssa asked glancing back the way they'd come. \"Do we try the other tunnel?\"\n\nJohn shook his head, and replied, \"The boot prints came this way, and the gallery runs the length of the canyon. I couldn't see the end, but it might lead to more rooms beyond.\" He grimaced, and added, \"It's a shame we couldn't bring Irillith with us after all. Someone speaking fluent Kintark would be handy about now.\"\n\nAlyssa grinned at him, and said, \"I'm in constant telepathic contact with her. If we grab one of the Kintark, and he doesn't speak Terran, I can have a go at copying the sounds it makes for her. She might be able to translate.\"\n\n\"It's worth a shot,\" John agreed with a firm nod. \"Any intel we get could be useful.\"\n\nThey crept into the gallery, moving quickly but carefully as they spread out, using the rocky pillars that ran from floor to ceiling as cover. It was cooler in here, and now they were away from all the lava, the cooling effect from being deep underground had lowered the temperature to a far more bearable twenty degrees, which John confirmed with a quick glance at his HUD. He looked out into the huge room to get a lay of the land, and see what kind of defences the Kintark had in place.\n\nThere were several towers that overlooked the prisoners, each manned with a couple of inattentive Kintark guards. He spotted a number of Lizardman overseers, who were armed with pistols and whips, and were strolling amongst the miners and checking on their captives productivity. The Kintark prisoners looked thoroughly cowed, and the overseers meandered through their ranks without bothering to stop and chastise anyone.\n\n\"Who first?\" Alyssa asked him, as she lined up a shot on a guard in the furthest tower.\n\nJohn looked over the guards, and replied, \"Let's clear the towers first, then take out the overseers. When we start killing them, the prisoners are bound to notice, and might cause a disturbance.\" He glanced at Rachel, and added, \"Switch back to low-power mode. We might be able to drop all the guards without anyone realising.\"\n\nShe nodded, quickly changing the power mode setting on her Punisher rifle, before raising her weapon to take aim. Dana covered the corridor with her laser rifle, knowing that accidentally burning holes into the Sulphur wasn't going to be a good plan.\n\n\"Open fire,\" John said quietly.\n\nThe railguns called out to the guards with soft murmurs, but the Kintark had no chance of hearing, what with the deafening noise coming from the mining face. Lizardmen began to drop as twenty-millimetre rounds smashed into their heads, the hyper-accelerated bullets punching fist sized holes through their scaled craniums. \n\nWith only John, Alyssa, and Rachel firing, they took a guard tower each, leaving the fourth and largest guardpost until last. One of the guards in Alyssa's designated tower turned to chat to his companion, only for Alyssa's precisely aimed shot to take off that Lizardman's head in a shower of yellow blood and brains. The first guard gaped in shock as he watched his companion keel over, but before the thought of raising the alarm had entered his brain, a heavy bullet got there first.\n\n\"Alright, you two switch to the overseers,\" John said, as he focused on the last guardtower.\n\nThe girls switched targets, and he barely heard the whisper of the Punisher rifles as they began to methodically execute all the Lizardmen. There were four guards in the last tower, and he aimed at the first of them, who was busy drinking from a heavy flask of some kind. As bad luck would have it, the Kintark leaned back to down the last of his drink, just as John pulled the trigger. His round hit the flask instead, causing the container to explode with the impact, and showering the guards with sharp ceramic fragments and sticky purple liquid.\n\nHe heard the startled cries over the noise from the mine, and the four guards whirled around to look at the gallery, grabbing for their plasma rifles as they did so. Snapping off a quick follow up shot, he hit his original target in the torso, driving a sucking wound through the creature's armoured chest. It let out a horrified shriek, then toppled over and out of sight.\n\n*Watch for incoming fire!* he thought to Alyssa as he looked for another target.\n\nThe other three guards started returning fire, sending bright green plasma bolts towards the gallery. Their shots sailed through the gaps between the pillars, or hit the stone itself, leaving eerie green fires burning wherever the plasma struck. After John's warning, the girls had ducked back behind cover, and were safe from the vicious plasma bolts.\n\nHe was about to shoot back when a searing blue flash, originating from further up the gallery, made him blink rapidly to clear his vision. \n\n\"BEWWW!\" Dana's Justice Laser sang out, as she fired it on maximum power.\n\nThe bright lance of energy blasted into the base of the guard tower, neatly melting through a supporting strut, and causing the top heavy structure to lurch to one side. Two of the Kintark guards were flung from the tower, while the last managed to grab the wall around the edge with a clawed hand, leaving him dangling helplessly in the air. \n\nJohn flipped his Punisher rifle to high-power mode, then shot the two on the ground as they struggled to their feet. The gaping craters he punched through their chests sent them crashing to the floor, then he sighted on the airborne Lizardman to kill him too. Alyssa got there first however, and she blew his head apart with a well-aimed shot.\n\n\"The overseers are all dead,\" she said with an impish grin. \"I didn't realise we were supposed to play with them first...\"\n\nHe smiled at her, then glanced at Dana with a raised eyebrow, and asked, \"What happened to being careful with the laser rifle?\"\n\nDana had an innocent expression on her face as she protested, \"Hey! I was careful! I lined that shot up carefully and everything!\"\n\n\"It was a very nice shot,\" he said in a conciliatory manner, and she smiled at the compliment.\n\nThe Kintark miners were staring at the mostly headless guards in stunned disbelief, too shocked to even move. As the surprise began to wear off, they looked around, and then spotted the white armoured Terrans lurking by the pillared gallery that overlooked the mine. There was lots of furtive whispering amongst the prisoners, with most eyes looking towards a tall Lizardman who held himself with a noble bearing. After some cajoling from his fellow miners, the Kintark began to walk their way, his arms held high.\n\n\"Looks like we might have a volunteer to try out my Kintark,\" Alyssa said with an eager smile.\n\n\"Hail, Terransss, I wisssh you no harm,\" the tall Lizarman said as he drew closer to the ramp leading up to the gallery.\n\n\"Or not,\" Alyssa murmured quietly.\n\nJohn stifled a laugh, then said, \"You girls hang back here, and watch out for the Consort or any reinforcements. I doubt anyone heard the shooting over the din from the mining, but we better not take any chances.\"\n\n\"Yep, no problem,\" she replied. After throwing a glance at the Kintark miner, she added, \"I'd tell you to be careful, but he doesn't look too dangerous to me.\"\n\nStepping around the pillar, John lowered his rifle, and strolled down the ramp to meet the Kintark spokesman. \"My name's John Blake,\" he called out with a friendly smile on his face. \"We aren't here to hurt you.\"\n\nThe Kintark looked relieved and he said, \"My name isss Balrac, and I am pleasssed to hear you do not plan to harm usss. Are we free to leave?\"\n\nJohn nodded, and replied, \"Sure, you're free to go. I had a couple of questions for you first, if you wouldn't mind answering them?\"\n\nBalrac bowed, and said, \"My friend, after what you have done for usss, it isss the leassst I could do!\"\n\n\"Firstly, what are Kintark prisoners doing here? I thought this place was using Terran prisoners of war as miners,\" John asked curiously.\n\nThe Lizardman was startled to hear this, and replied, \"Our people are at war? When did thisss calamity occur?\"\n\nJohn looked sombre as he replied, \"There's been increasing tension in the Dragon March for months now, but it finally escalated into full scale war a matter of days ago.\"\n\nBalrac sighed, which came out as a rasping hiss, then said, \"I've been a prisssoner here for ssseveral yearsss. I am sssure you appreciate how difficult it isss, to find out newsss down in thisss hole.\"\n\n\"Why were you held captive?\" John asked, studying the creature's noble bearing. \"I'm guessing it was political?\"\n\nThe Lizardman nodded, and replied, \"I was a member of the Sssenate, and I objected to the foul indulgancesss of the Kintark Emperor and hisss kin. Sssuch objectionsss are not a wissse move in the Empire, and my land was ssseized and title revoked, before I wasss thrown in thisss dreadful place.\"\n\n\"Speaking of which,\" John said, glancing back to check on the girls. \"We're trying to free the Terran prisoners here. Can you tell me anything about where they might be, or maybe something about the Consort and her mate?\"\n\nBalrac looked upset, and he replied, \"I've overheard talk from the guardsss, about a 'feeding room', and I have ssseen Terran captivesss taken that way.\" He pointed towards the other end of the gallery, then continued, \"These are sssome of the excessesss I mentioned earlier. The Emperor and hisss cassste have become convinced that they are immortal, and wisssh to be worssshipped like godsss, while they do as they pleassse.\"\n\n\"And the Consort?\" John asked, grimacing at the thought of what a 'feeding room' might entail.\n\n\"Her real name isss Tamolith, and ssshe isss mated to the Emperor'sss brother; Kindralax 'The Dessstroyer',\" Balrac replied, the dragon's nickname said with no sense of irony. In fact, the Kintark looked terrified at even mentioning his name. \n\nJohn leaned in and asked, \"We saw Tamolith exert some kind of mind control over the Terran prisoners. Do you know anything about that?\"\n\nBalrac nodded reluctantly, and replied, \"I've ssseen the Empress do sssomething sssimilar. On Kintark the effectsss wear off after a while, usually after the femalesss get what they want. I have no idea how it will effect Terransss, though.\"\n\n\"Alright, thanks for the information, Balrac,\" John said gratefully. He smiled at the polite and helpful Lizardman and added, \"We've killed all the guards we came across on the way in, but be careful when you try and leave. We haven't dealt with Tamolith or Kindralax yet.\"\n\n\"I sssincerely hope you have no intention to try,\" Balrac said, sounding sombre. \"Do not underessstimate them John Blake, they are exceedingly powerful. It isss not without good reassson that they've become convinced they are immortal.\"\n\n\"We might not have any choice,\" John said with a frown. He held out his hand to the Kintark prisoner, and said, \"Good luck, Balrac. You've been a big help.\"\n\nBalrac shook the proffered gauntlet with his scaled, three-clawed hand, then said, \"I believe that you are more in need of luck than I. Good fortune to you, John Blake.\"\n\nJohn nodded to the friendly Lizardman, who bowed to him respectfully. The two parted ways, with John striding back up the ramp to rejoin the girls in the gallery.\n\n\"Well, that all sounded very ominous,\" Alyssa said as he reached her, and he could see the tension in her eyes. \n\nDana and Rachel were looking similarly worried, and they clutched their weapons tightly as they glanced over at him. \n\n\"We better get moving,\" John agreed. \"I didn't like the sound of this 'feeding room', one bit.\"\n\nThey jogged down the long gallery, covering the ground at a brisk pace, with the girls trotting along behind him. When they neared the end of the passageway, he slowed down and glanced back over his shoulder, curious to see what Balrac and his fellow Kintark were doing. He saw the hundreds of Lizardmen prisoners were seizing the opportunity to flee from the mine, and they were running up the ramp and heading back the way he'd entered in one long stream. \n\nJohn hoped the friendly Kintark would make it out safely, but at the moment, he had other far more pressing things to worry about. At the end of the gallery, a broad tunnel had been carved out of the rock, descending further into the dormant volcano at a gentle curving decline. He stopped for a moment, and listened for any sound coming from the tunnel, but it seemed quiet up ahead.",
        "He glanced at the girls, and murmured, \"We better keep quiet for this next part. I'd rather surprise them than the other way around.\"\n\n*Sure, that's no problem,* Alyssa agreed. *Just communicate with me telepathically, and I'll pass on your orders.*\n\nWith a nod of confirmation, they edged down the tunnel, moving at a slower pace now to stay quiet. The layer of sulphur dust actually helped here as it muffled the sound of any footfalls, allowing them to creep silently down the tunnel, while still maintaining a reasonable speed. The booted Terran footprints were more distinct now, the clear indentations no longer obscured by the shambling gait of hundreds of Kintark prisoners, and by the crisp outlines, it looked like a group had moved this way recently.\n\nThe tunnel travelled down relentlessly, sinking them ever deeper into the fiery heart of the volcano. His eyes were drawn to that red warning light in his HUD again, and he watched the temperature rise as they progressed further. Soon the reason for that sudden spike in temperature became abundantly clear, and they could see a familiar flickering orange glow on the walls below them.\n\n*More lava I bet,* Alyssa guessed, throwing him a quick glance as she walked at his side.\n\nIt only took another dozen steps to confirm her guess, and as they followed the passage out onto a broad causeway, they all gaped at the spectacular scene before them. They were standing on a tall rocky bridge, made of black igneous rock, which curved around to the right into the middle of a vast lake of lava. Magma bubbled and swirled, with the occasional geyser of superheated molten rock blasting upwards in that bright infernal sea. The colours were incredibly vivid, running from searing orange to a deep brooding crimson, and none of them had ever seen anything that was quite so beautiful and deadly at the same time.\n\nOver on the far side of the bridge, thrusting up from the searing lake, was a gigantic basalt pillar that had broken off near the base. The upper section had toppled over, forming a stone ramp up to a high gallery that ran along the other side of the immense cavern. It looked like there were columns around the edge of the flat plateau on top of the sheared base, and between those rocky protrusions John spotted the flicker of movement.\n\nAfter turning off low-light amplification, they set off again, and followed the bridge of volcanic rock that led to the broken pillar. It took nearly five minutes to cross the long causeway, and when they neared the other end, John began to realise the sheer scale of the gigantic pillar that was their destination. The bridge began to rise into a gentle ramp, and when they reached the top, he nearly faltered at the sight of what lay ahead of them. \n\nThe base of the pillar had actually been heavily worked by skilled stonemasons, and the rocky outcroppings turned out to be deftly sculpted statues. The stone figures portrayed dozens of Kintark bowing and kneeling reverently, all of them facing towards the centre of the rocky promontory. Over on an enormous stone dais lay Tamolith, the Consort, revelling in the heat from the lava, and in the adoration of her devoted slaves. All around the podium, the fresh batch of prisoners were on their knees, arms raised as they worshipped the mighty draconic presence in their midst. \n\nJohn felt a shiver of fear run down his spine as a pair of huge serpentine eyes settled on him, and the dragon smiled, baring rows of, long, razor-sharp teeth. \"Ah, more Terrans come to bask in my glorious presence. How wonderful!\" Tamolith rumbled, her deep sonorous voice easily carrying across the hundred metres between them.\n\nNow that they were up on the edge of the column, John had a good view of the back of the basalt plateau. A half-dozen red-scaled dragon whelps cavorted around, playing chase with each other, or sat gnawing bones from the disturbingly large pile in the centre of their nest.\n\nTamolith saw where his attention was drawn, and her deep voice carried a mother's pride as she said, \"They're growing so big and strong now. They'll be mighty indeed, just like their sire!\" The dragon eyed him curiously again, and under that unblinking scrutiny, John was suddenly reminded of Jade's analogy about a cat playing with a mouse. Tamolith smiled at him; a toothy, terrifying sight, and she added in a base rumble, \"Come now, who are you, mysterious Terran?\"\n\nHe cleared his throat, which felt quite dry all of a sudden, and activating his Paragon suit's external speakers, he replied, \"My name's John Blake, but I'm not a Terran.\"\n\n\"Really? You are a intriguing little thing, aren't you...\" Tamolith marvelled. She extended a foot-long claw, and began idly carving a deep furrow through the rock as she asked, \"And what pray tell are you then?\"\n\nJohn hesitated, unsure which way to proceed. He had no real desire to reveal who and what he really was to this red-scaled behemoth, but with over a hundred Terran prisoners surrounding Tamolith, he didn't want to start a fight either.\n\n\"I'm a Progenitor,\" he finally revealed, a part of him curious to see if the Kintark ruling caste knew anything of his kind. \"My species ruled this part of the galaxy over ten-thousand-years ago.\"\n\nThe dragon's eyes flashed with excitement, and she rose to her full thirty-foot height, towering over him as she stared down in fascination. He instantly regretted his words, as seeing this vast creature become animated was a truly terrifying sight.\n\n\"The Emperor mentioned that he'd been in contact with another of your kind,\" she said, a fierce acquisitive gleam in those huge orbs. \"He claimed that he was a fellow immortal, just like my kind. Is that true, John Blake?\"\n\n\"Yes, my species is immortal,\" he confirmed for her, suppressing his urge to flee from her fearsome visage. He couldn't help noticing that she spoke normally, rather than with the slithering speech of the regular Kintark.\n\nTamolith's shimmering eyes blinked twice, betraying her keen interest. Her expression grew sly, as she asked, \"So what brings you to my humble abode, tiny Progenitor? Are you here to make offers of support for galactic conquest as well? If so, your compatriot beat you to the punch by several months.\"\n\n*Holy shit! That bastard's working with the Kintark too?!* Alyssa blurted out. \n\nJohn managed to keep the shock from showing on his face, and he glanced at Alyssa and sent her a startled thought, *He's stirring up trouble all over the goddamn place!*\n\nTurning back to the dragon, he replied, \"I'm actually here for these Terran prisoners. One of my women is related to a captive of yours, and I'd like to negotiate their release.\"\n\nTamolith looked disappointed, and her lips curled back, revealing enormous canines as she lamented, \"How terribly mundane. I was hoping for something to alleviate my boredom, but negotiating for prisoners is hardly going to be stimulating.\"\n\nJohn gazed up at the colossal beast, and said, \"I don't know, it might still be. What sort of thing would you be interested in? Perhaps we can come to some kind of arrangement?\"\n\nThat sharp glint of excitement was back in the dragon's eyes again, and she turned her long scaled neck back to look at the high gallery that ran the far width of cavern. Certain that she wasn't going to be overheard, she stepped forward, closing the gap, and John had to desperately fight down the urge to raise his Punisher rifle and unload on the ferocious predator. Tamolith lowered her head until it was level with his, and he couldn't help but be transfixed by the two-foot-wide eyes that had locked their gaze on him.\n\n\"There might be something you could do for me, John Blake,\" she rasped, but her deep throaty voice was much quieter now. Her lips curled back in a viscous grin as she continued, \"My mate, Kindralax, has served his purpose, and given me my precious darlings. In truth, I find him tedious to live with now. He chafes at being banished to this backwater world, and he's become a dreadful bore. I'd like you to... deal with him... for me.\"\n\n\"You want me to kill your mate?\" John asked her in shock.\n\nHer head bobbed slightly as she replied, \"That's correct tiny one. Pitting you against him would answer a question that's been plaguing me of late.\"\n\nJohn stared into those huge, vertical-slitted pupils, and asked, \"What question is that?\"\n\nTamolith looked troubled, and replied, \"Why the question of our immortality, of course. Progenitors claim to be immortal, and we dragons surely are too. I'm not strong enough to challenge Kindralax myself to put his immortality to the test, but as fate would have it...\"\n\n\"I arrived instead,\" John noted wryly.\n\nShe quirked an eyebrow in amusement, and said, \"Yes, quite so.\"\n\nJohn feigned the pretence that he was mulling the proposition over, but in actual fact he was delighted. This way he'd avoid a fight with Tamolith while she was surrounded by prisoners, and they'd be able to rescue them safely, without worrying that they'd be caught in the crossfire. It also avoided the question of what to do with her whelps, as even though they were over eight feet long and no doubt lethal in their own right, they were still essentially children. Last and by no means least, they planned to fight Kindralax anyway, and by doing a favour for Tamolith, he might be able to gain some influence amongst a faction of the ruling caste of the Kintark Empire.\n\n*I'm pleased you're considering the political angle,* Edraele thought to him, taking John by surprise. She sounded more worried now though, as she added, *But are you sure you can't make some other kind of bargain with Tamolith, and then spirit the prisoners away from under this Kindralax's nose? I heard your thoughts about her, and she's over sixty-feet-long, yet this Kindralax must be even bigger? Facing something like that isn't a wise move, John.*\n\n*We've got no choice, Edraele,* he replied without any doubt in his mind. *There's hundreds of Terran prisoners here, and it's going to take us hours to evacuate them on the Raptor. We can't risk doing that with some kind of rampaging dragon attacking us.*\n\n*Alright, but please be careful,* she begged him, sounding very worried.\n\nHe sent her a confident telepathic grin, and said offhandedly, *We'll be fine, there's no need to worry.* However, her apprehensive silence told him that Edraele wasn't convinced by his bravado.\n\nThe whole telepathic conversation lasted mere seconds, so Tamolith was completely oblivious when he answered her a moment later. \"Alright, we'll do it,\" he told her in a firm voice.\n\nThe massive reptile leaned back and grinned at him, which was quite a terrifying sight. \"I take back what I said earlier,\" she purred, her long scaly tail lashing with eager anticipation. \"There was nothing mundane about these negotiations!\"\n\nJohn smiled at her and said, \"If we do this for you, I'd like all the Terran prisoners safely handed over to me for extraction.\"\n\n\"You can trust me, John Blake,\" Tamolith replied, an ambiguous sparkle in her shining eyes.\n\nIt was his turn to fix her with a steely stare, and he was deadly serious as he said, \"I'm relieved to hear it. I'm not someone you want to cross, Tamolith.\"\n\nShe recoiled slightly, looking a little annoyed, and asked, \"Is that a threat?\"\n\n\"Consider it helpful advice, from one immortal to another,\" he replied, not releasing her from his unblinking stare.\n\nTamolith stared back at him as long as she could, then bowed her head and averted her eyes, unable to maintain the eye contact any longer. She nodded, and sounded a little unsettled as she said, \"I swear I won't betray our bargain. If you vanquish Kindralax, you may take any Terran on Xen-Nuchek away with you, without any interference from me.\"\n\n\"Excellent,\" John replied, then glanced over at the bowing prisoners, his gaze settling on Mateo. He looked back at Tamolith, and asked, \"How long will your... influence... over them last for?\"\n\n\"A few days,\" she replied in her throaty rumble. \"When they aren't able to bask in my magnificence any longer, the effect will gradually wear off. I'll ask them to follow you in my stead and I'm certain you won't have any problems leading them away.\"\n\nHe bowed his head to her, and said, \"We'll be back shortly. A pleasure to meet you, Tamolith.\"\n\nThe dragon dipped her head in return, watching him with burning curiosity, although it was now tempered with a slight edge of fear. John beckoned to Alyssa, Dana, and Rachel, who had fanned out during the conversation and were clutching their weapons tightly. They moved away from the statues they'd been planning to use as cover, falling into step behind him as he strode purposefully across the basalt platform without a backwards glance at the prisoners. \n\nRachel had been studying them however, and she murmured into the comm, \"The prisoners look to be in reasonable shape. Aside from the heat in here, the air quality isn't quite as bad as it was in the sulphur mine.\" She turned to look over her shoulder at Tamolith as they walked away, then let out a wistful sigh as she added, \"I wonder if she'd let me examine her? Her species is absolutely breathtaking.\"\n\nDana smirked as she replied in a quiet voice, \"I wouldn't hold your breath, babes. I don't think I've ever met another creature quite so up themselves before.\" She paused then, and added with a smile, \"Alright, maybe Irillith, before John spunked the bitch out of her.\"\n\nThe Dragon Whelps all stared at them with big eyes, their curiosity peaked by the unexpected visitors to their lair. John found all the attention a little unsettling, and as he studiously ignored them, he spotted a long flash of silver at the back of their nest. He glanced that way without trying to be too obvious about it, and he was startled to see a broad black console set into all the basalt, the silvery edges to the vid-screens having caught his eye.\n\nIn this fiery setting, which could have come straight from an epic fantasy holo-vid, the long console was a stark reminder for him that this dragon was very much connected with the modern world. Seeing the twenty-eight century technology suddenly made him wonder what kind of a ship could possibly haul around something on their scale. Considering Tamolith's ego, he didn't imagine she'd be happy about riding in a cargo bay of some bulk-freighter. He mused that the Kintark probably started building custom vessels, as soon as they started all the genetic tampering that had led to the creation of these vast creatures.\n\nThey were nearing the far edge of the plateau, where the rest of the gigantic pillar was now lying on its side, wedged between the base and the far wall. It formed a very long stone ramp, which was pitted and scored by hundreds of claw marks that had left long furrows in the rock. The angle of incline wasn't too steep, so they had a fairly sedate climb ahead of them to reach the gallery that overlooked the fiery lake.\n\n\"Why not just use flight mode?\" Dana asked him, as they worked their way up the pillar.\n\nJohn shook his head, and replied, \"Let's keep that one close to our chest for the moment, I've no idea if we're being watched by Kindralax, but I'm sure Tamolith hasn't stopped staring.\"\n\nAlyssa looked back at the attentive red dragon, then replied, \"Yeah, she's keeping an eye on us alright.\"\n\nIt didn't take too long to finish their climb, and they stepped off the broken pillar onto a flat platform cut into the rock. It made up a wide ledge that swept along this end of the cavern, offering spectacular views over the huge field of lava, with Tamolith's podium right in the centre. After stopping to appreciate the incredible vista before them, they made steady progress along the ledge, heading towards the other end. It didn't take long for them to make out a dark, gaping hole that led away into darkness, and what John could only assume was Kindralax's lair.\n\nHe re-activated his low-light imaging, which soon sketched the edges of the tunnel as it stretched away into the darkness. \"Here Be Dragons,\" he muttered under his breath as he started forward, his Punisher rifle held at the ready.\n\n***\n\n*What's happening down there?* Calara thought to her blonde lover, still regretting not being a part of their rescue party.\n\nAlyssa's voice was soothing as she replied, *We found Mateo, and he looks good. John made a deal, and we'll be looking to evacuate your brother in a little while.*\n\n*What aren't you telling me? A deal with who?* Calara asked, sounding even more worried.\n\n*Shh, don't get upset, we're all fine,* Alyssa replied. Her voice was playfully teasing as she added, *Your White Knight just confronted a big red dragon. I know how much you get off on all that, you would have loved it!*\n\nCalara didn't sound amused though, and she replied, *You guys made a deal with a dragon? Tamolith I assume?*\n\n*Yeah, we're off to slay her mate. She wants to test his immortality apparently,* Alyssa replied in disgust, finding the whole idea abhorrent. The thought of betraying John was so alien to her, it had left her with nothing but contempt for the massive female dragon.\n\n*You can't make a deal with dragons, they're completely untrustworthy,* the Latina warned her.\n\nAlyssa laughed, and replied, *These aren't something from a swords and sorcery tale, honey. They're genetically engineered overgrown lizards made by the Kintark Empire, I think the normal rules for dragons don't apply.* After a brief pause, she added, *I better go, I need to concentrate. We're hunting Kindralax and he's a badass from all accounts.*\n\n*Alright, be careful! I love you,* Calara thought to the psychic blonde.\n\n*Love you too, gorgeous,* Alyssa replied, but she sounded distracted now as she concentrated on preparing herself for the upcoming fight.\n\nCalara let out a sigh, feeling frustrated that she wasn't able to help out. She glanced up at the Tactical Map, and watched the last stages of the Terran and Kintark fleet engagement in the Zeta-Draconis system. The Kintark forces had numerical superiority, and the Terran ships included a number of carriers which were no good at this kind of point-blank brawling. The few strike craft they had launched had ended up being savaged by the overlapping point-defence nets from the tight formations of Kintark ships. All in all, the battle hadn't gone well for the traitor vessels, not well at all.\n\nShe watched impassively as the massive Kintark battleship, the Bershan'tok, duelled with the Terran battleship, the Phobos. The shimmering-green Kintark behemoth opened fire with a broadside from its broad banks of Plasma Cannons, while launching volleys of missiles into the flank of the stricken Terran vessel. Bright green explosions from the Plasma Missiles left gaping, burning holes in the grey Titanium plating, the Phobos' shields having burned out what seemed like hours ago. The Phobos returned fire, but they could only use their Beam Laser batteries, as the Bershan'tok still had shields, weakened as they were. The Phobos' banks of Missiles and Heavy Cannons were therefore left dormant, impotent in the face of a shielded enemy.\n\nCommodore Wheeler had focused on eliminating the supporting Kintark cruisers first, hoping to rout the opposing fleet when their losses grew too great. Unfortunately for him, he'd made a grave miscalculation, and High Prelate Tedaktu had no intention of running from the battle. His favourite nephew had been killed in the very first cruiser destroyed by the Phobos, and he'd sworn a blood oath to slay the treacherous Terrans. His battleship, the Bershan'tok, had studiouosly ignored the rest of the Terran fleet, leaving them to his supporting ships to fight, while he focused all his firepower on the Terran battleship.\n\nThe entire starboard side of the Phobos was ablaze now, fel-green plasma fires raging out of control, as more plasma bolts punched deeper into the superstructure of the huge ship. A Terran battleship had a crew of nearly two-thousand, and Calara knew she was sitting back and watching them die. She thought about intervening on their behalf for a moment, but she suddenly remembered watching the black box recordings from the battle that had seen the end of the heroic Commodore Walker. Seeing these traitors sent to hell in a burning plasma pyre seemed strangely fitting, so she stayed her hand and watched their well-deserved fate.",
        "The Phobos took a couple of minutes to go down, a testimony to the rugged durability of Terran ship hulls. When it did, the battleship was wracked by several explosions, before the infernal plasma fire touched off the forward magazine. The resulting explosion looked like a miniature supernova on the tactical map, as a blast wave swept out, battering aside the tortured wrecks that were all that was left of the rest of the Terran fleet. The Kintark had fared better, but not by much, with only one severely damaged cruiser left to support the - as yet - untouched Bershan'tok.\n\nTurning to glance at Jade, she said, \"That's our cue. Engines to full power and take us in, Jade.\"\n\nThe Nymph nodded eagerly, and said, \"Sure, Commander!\"\n\nIrillith glanced at the tactical map, and asked, \"Do you want me to try and shut down the battleship, or take over that last cruiser?\"\n\nCalara shook her head, but didn't turn around, concentrating instead on powering up the Invictus' shields, and activating their arsenal of weapons. \"Save your energy, John and Alyssa might need to tap us for power,\" she replied over her shoulder. Her eyes narrowed as she added grimly, \"This one's all mine.\"\n\nSakura stared at the Latina in utter amazement. The thought of taking on a battleship in this old cruiser seemed like sheer lunacy to her. She wanted to protest, but she still felt a little intimidated by these tall, beautiful women at the best of times. With Calara full of righteous fury, the last thing she wanted to do was second guess her. Irillith had seemed more sombre than the others, and a little more grounded than the normally bright-eyed and optimistic brunette. Sakura shot her a furtive glance, hoping that the Maliri girl might say something, but she didn't look at all perturbed at the thought of this upcoming lopsided battle.\n\nAs if she knew what Sakura was thinking, Irillith looked up at the Asian girl and met her gaze. The Maliri looked thoughtful for a moment, then a lovely smile spread across her face, and she rose from her chair before gliding up the illuminated steps to the Command Podium. She crouched down next to the big Executive Officer's chair, and her angular violet eyes looked into Sakura's almond shaped orbs.\n\n\"You look worried,\" Irillith said with a comforting smile. She leaned in a moment, then added, \"Why don't you let me talk you through the battle? I used to be the new girl around here until you arrived, and I remember how unsettling it could be.\"\n\nSakura gave her a tentative nod, and replied, \"I'd appreciate that, thank you.\"\n\nThey turned to look at the tactical map as the Invictus tore across the system, travelling at speeds altogether unreasonable in a ship of its size. The Kintark battleship and remaining cruiser had picked up on their approaching ship, and seemed eager to engage on this sole, suicidal cruiser, not realising for one moment what was actually about to descend on them.\n\n\"Shouldn't we at least be trying to sneak in there to get the element of surprise?\" Sakura asked in a quiet voice.\n\nIrillith shook her head, and whispered her reply, \"The cruiser's shields are out, and the battleship's are badly weakened. Calara wants to hit them as fast as possible before they have any chance to regenerate.\"\n\n\"But we're massively outgunned,\" Sakura murmured, her eyes wide with worry. \"I just saw what the Kintark did to the Terran battleship. We can't possibly face that kind of firepower!\"\n\nIrillith placed a calming hand on Sakura's and stroked it gently as she said, \"Just watch, and you'll see.\"\n\nThe Invictus screamed in towards the Kintark vessels, the long fire arcs displayed on the map brushing over the green-plated ships. The cruiser was closest, and the moment it was in range, Calara opened fire with four of the front-facing Beam Lasers that were mounted on the underbelly of the ship. The ship trembled a second later as she fired the four Mass Drivers, and the shells were accelerated to hyper-warp speeds before they pounded into the already damaged cruiser.\n\nFour savage explosions blasted out huge chunks of the ship, just as the four Beam Lasers slashed into the devastated prow with the accuracy of a surgeon's scalpel. Calara had burnt through the Command Deck of the doomed Kintark ship, vaporising the Bridge, and all the officers stationed there. This all happened in a matter of seconds, so quick in fact, that the Kintark cruiser hadn't even had a chance to retaliate before it was effectively decapitated.\n\nSakura watched mouth agape, as Jade nudged the Invictus' nose downwards by pushing forward with her flight controls, then jinked from side to side. Her erratic manoeuvres coincided with them coming into range of the battleship, and despite the Kintark gunners' best efforts, most of the Plasma Cannon shots sailed wide. \n\nIrillith glanced at the damage control display, and murmured, \"Shields at ninety percent. They'll have to do better than that if they're going to be any sort of challenge.\"\n\nWith the topdeck presented to the Bershan'tok, Calara lashed out at the Kintark battleship with all sixteen Beam Lasers mounted on the topdeck. The blazing azure beams only pulsed for a couple of seconds, before they overloaded the flagging shields in a sudden flash of light. The lances of energy all converged on a single point amidships, eviscerating the armour plating and leaving a glowing rent in the ship's defences. Jade tilted the Invictus, and pulled back on the stick, so that they'd stay in the forward arc of the Kintark cruiser. \n\nThis meant Calara had another four Beam Lasers ready to fire from the rear of the underbelly, while the ones on the fore and the topdeck of the ship cooled down. The searing blue beams cut into the same spot, burning much deeper this time.\n\n\"What's she shooting at?\" Sakura asked, spellbound by the entire encounter.\n\nIrillith smiled at her, and said, \"This isn't the first Kintark battleship we've faced. The last one suffered a Power Core explosion, and she knows exactly where that's located now.\"\n\nThe Bershan'tok turned frantically, in a desperate attempt to conceal the charred chasm in their emerald armour plating. This brought their port weapons to bear, and they fired another deadly salvo at the glossy white assault cruiser that was casually tearing them apart. More plasma bolts hit this time, and the Invictus' shield display turned from green to yellow as the shields were knocked down to sixty percent strength.\n\n\"Better, but too little, too late,\" Irillith said with a sly smile.\n\nJade looped the Invictus around, the impossibly fast ship moving faster than the cumbersome battleship could turn. The overheating warnings next to the Beam Lasers on the weapon loadout display had disappeared now, and Calara hit the Kintark with another blistering barrage in exactly the same spot. The bright columns of energy bored into the last of the armour plating, then cut through the ship, melting through deck after deck as Calara maintained the beams with unerring accuracy. They were close enough for her to bring their complement of Pulse Cannons to bear now too, and a cascade of blue laser bolts blasting into the same spot further shredding the internals of the ship.\n\nThe Kintark managed one last volley, several shots of which hit the Invictus' shields and turned the shield display a deep maroon colour. Jade pulled the nose of the ship up so they were pointing directly at the battleship, and Calara opened fire with the Mass Drivers, launching the four explosive warheads right through the hole she'd just excavated in the battleship's hull. The huge vessel seemed to shudder in terror as it was rocked by four explosions deep inside the hull, the last of which enveloped the Power Core and triggered a reactor breach. \n\nSakura could only watch in stunned incredulity as the Bershan'tok competed with the Phobos for the most impressive death throes. An eerie radiance seem to pour out of the centre of the ship, the flanks of the titanic ship swelling as the fusion reactor at its heart went into meltdown. All of a sudden it was consumed by a blazing orange ball of energy, which blasted out, ripping the battleship apart in a pitiless wave of devastation.\n\n\"And that's why I wasn't worried,\" Irillith said, squeezing the petite girl's hand. \"Not with Jade flying and Calara manning the guns.\"\n\nThe Asian girl shook her head, her mind refusing to accept what she'd just witnessed. \"How was that even possible?\" she asked, utterly astounded.\n\nIrillith smiled at her, and said, \"Well firstly let me tell you about Dana. Don't let her coarse language or perky demeanour fool you, like it did me to start with. She's an absolute genius with technology, and she's turned this ship into a unstoppable engine of destruction...\"\n\nSakura gaped at the Maliri as she told her all about her new teammates.\n\n***\n\n\"So why do you reckon Tamolith is pissed at her mate?\" Dana whispered as they crept down the gloomy tunnel. She grinned as she continued, \"Maybe he isn't ringing her bell any more?\" \n\nDespite the tense atmosphere, Rachel tried not to laugh, and she replied, \"Maybe you could ask him?\"\n\n\"Stay focused now, girls,\" John told them, as he looked warily down the tunnel ahead of them. \n\nThey'd been following this long, winding tunnel for nearly ten minutes now, heading upwards and away from the magma lake. The temperature was dropping steadily, and the warning icon had ceased flashing some time ago. \n\n*Something's different up ahead,* Alyssa thought to him. *The tunnel's ending.*\n\n*Yeah, I see it,* he replied with a nod, seeing the wireframe images from low-light enhancement clearly showing the end of the tunnel. \n\nIt didn't take them long to reach the next room, and he blinked in surprise when he got a good look at the astonishing cavern they had just entered. The room stretched out into the distance for at least three-hundred-metres, with a strangely ridged ceiling, which looked like it had been formed from cooling lava.\n\nThe enormous hall was filled with various trophies of all shapes and sizes. Huge skulls from various animals were propped up on stands throughout the room, none of which John recognised. They were illuminated by soft lighting set into the ground, and the shadows playing across the many sharp teeth on display, made them look all the more ferocious.\n\n\"These can't all be from Xen-Nuchek,\" Rachel observed, staring at them in fascination. She pointed to a malevolent-looking aquatic predator, its maw filled with several rows of vicious looking serrated teeth, and added, \"There aren't any oceans on the planet that would support an ecosystem for that creature.\"\n\n\"Maybe Kindralax is a big game hunter, and brought his haul of trophies with him?\" John wondered as he looked around the room. \n\n\"YOU DARE DESECRATE THE ABODE OF A GOD!\" a booming voice challenged them, the thunderous sound reverberating around the room.\n\nThe acoustics of this chamber meant that the direction of Kindralax's current location was obscured by the deafening echo's distortion effect. John looked around the room for any places big enough to hide a creature larger than Tamolith, but none of the skeletal trophies were anywhere near substantial enough to provide that kind of concealment.\n\n*Up above us,* Alyssa warned him. *There's some kind of balcony up there.*\n\n*Spread out and find some cover,* he replied, darting forward to duck beside the skull of what must have been a huge bear-like creature.\n\nJohn scanned the ceiling, and saw that Alyssa was right. What he'd mistaken for striations in the rock, were actually a number of jutting out platforms high up above them. He caught a flash of movement at the back of the canyon, and what looked like two baleful green eyes appeared, shining bright against the darkness. Not wasting any time with pleasantries, John snapped off a quick burst with his Punisher rifle, but to no obvious effect. \n\nLow, pitiless laughter rumbled around the chamber, and as John strained to make out the dragon, he heard a strange throbbing sound that grew louder by the second. He recognised the sound, and managed to throw himself clear at the last second, as two huge green streams blasted into the skull he was hiding behind. The eight-foot skull exploded in fiery green fragments, leaving a burning plasma fire spitting in its wake. \n\n*Holy fuck! Can that thing breathe fire?!* Alyssa balked, and he could feel her fear over the empathic bond. \n\nJohn raced for cover, and replied, *I thought I was shooting at Kindralax's eyes, but he's armed with some kind of double-barrelled Plasma Cannon!* \n\n\"FOOLISH, PITIFUL INSECTS!\" Kindralax roared, and they could hear him moving position, each heavy step dropping clouds of dust and chips of rock from the ceiling. \n\nJohn desperately searched the balcony for any sign of the lurking draconic monster, but Kindralax was keeping well out of sight. He spotted the movement of something immense over to his left, and the dragon reappeared, its gigantic head finally visible in the muted light. His maw was about the size of a hover-car, at least twelve-feet long at a glance. The dragon's lips were curled back in a disdainful sneer, and John could make out teeth that were longer than his legs. \n\nHe heard that throbbing sound again, and he opened fire on full-auto at Kindralax's head, sending twenty hyper-accelerated slugs towards the reptilian beast. He looked on in shock as the bullets bounced away harmlessly, orange circles of light appearing as the bullets were deflected away.\n\n*That bastard's shielded!* he warned Alyssa, as Kindralax fired again, but at Rachel this time. \n\nShe started sprinting as soon as she saw the dragon looking in her direction, and John heard her terrified scream as she narrowly avoided being hit by the heavy plasma bolts.\n\n\"FLEE, PATHETIC WORM!\" Kindralax cackled with delight as he watched Rachel running for her life.\n\nJohn stepped out of cover, and cranking up the amplifiers on his armour, he called out, \"Kindralax! Stop cowering up there, and fight me! Or are you too afraid to face a real immortal!\"\n\nThe dragon had pulled back after it had fired its plasma weapon, and the laughter died out as it heard John's bold challenge. It sounded furious as it bellowed, \"WHAT HERESY IS THIS?! YOU ARE NO IMMORTAL!!\"\n\n\"You rage like a petulant infant having a tantrum!\" John shouted back, ad-libbing his insults as he went. \"You claim immortality, but show all the maturity of a witless child!\"\n\nThere was a stony silence from up on the balcony above them, and John glanced at the girls to check they were alright. Rachel had found some more cover, and Alyssa met his gaze with a worried frown. \n\n*Are you sure it's a good idea to piss this thing off?* she asked him, and he could see her look of alarm through her clear-crystal visor.\n\nThere was movement up on the levels above, and two sets of scythe-like claws appeared at the edge of the balcony, followed seconds later by a colossal red maw. Kindralax loomed above them, then leapt down from the upper level with a resounding crash, and John could feel the tremors from that impact through his booted feet.\n\n\"BEHOLD MY GLORIOUS MAJESTY, AND COWER IN DESPAIR, PATHETIC MORTALS!\" Kindralax boomed, as John gaped at the size of this monster.\n\nKindralax was nearly twice the size of Tamolith, at well over one-hundred-feet long. He was proportioned like her, with tree-trunk like legs ending in long, evil-looking claws, a broad body, and a long, sinuous neck that ended where it met its monstrous head. Unlike the female of his species, Kindralax had a jet-black crest jutting out from the back of his skull, ending in long horns. The backs of his foreclaws and shoulders were similarly adorned in four-foot-long spikes, which looked terrifyingly sharp.\n\nAs John's eyes swept over the gigantic dragon, he made out some kind of harness across its back, where two broad barrels jutted forward over Kindralax's shoulders. Behind the Heavy Plasma weapons was a squat cube, which John could only assume was a shield generator.\n\nThe Kintark dragon was truly awe-inspiring, and John started to wonder if they'd made a terrible mistake in challenging this creature. He wanted to react, but despite his brave words, he felt rooted to the spot as icy fingers of fear clawed at his heart. Kindralax seemed to sense the dread that John was feeling, and it began to laugh once more, a booming, resonant chuckle that sent further chills up his spine.\n\nSurprisingly it was Dana who reacted first, and she hefted her Justice Laser rifle, aiming it at the dragon, and yelled, \"Laugh this off, you fucker!\"\n\nShe opened fire, sending bright blue bolts of laser fire into the dragon's shield, causing it to ripple and spark as it absorbed the impacts. Blue circles spread out over the force field, as Dana poured more fire towards it, and Kindralax snarled in anger at the impudent girl. He half-pounced forward, bringing his Plasma Cannons to bear, and the huge weapons began to power up with an ominous hum.\n\n\"Sparks, take cover!\" John yelled, seeing the redhead was so focused on shooting the dragon, she wasn't reacting to the impending danger.\n\nAlyssa whirled around, and hurled a telekinetic wall at her friend, just as Kindralax unleashed two green streams of plasma fire in her direction. The mental push sent Dana sprawling, and shoved her clear from being hit directly. However, the twin green bolts burst into the ground, splashing up and coating her armour in a liberal spray of viscous flaming plasma. \n\nDana was scrambling clear when she saw the acrid smoke streaming from her body as the plasma burnt through her Paragon suit. \"Fuck me!\" she blurted in horror as she stared at the hissing, searing green ooze that was melting the Crystal Alyssium plating on her chest and legs.\n\n*Unlock the fucking armour!* Alyssa screamed at her. *Get out of it now!*\n\nDana dropped the Justice rifle and pressed her thumb to her palm, hearing the rippling wave of clicks as the hooks unlocked around the armour plating. Alyssa ran over to her, and helped her pull the steaming plates clear, leaving Dana wearing only the Paragon helmet.\n\n\"HOW AMUSING,\" Kindralax cackled with glee, then roared, \"BUT NOW YOU DIE, TINY, INSIGNIFICANT WHELP.\" The Dragon prowled forward, its long limbs covering the ground between it and Dana at a disturbing rate. \n\nJohn watched helplessly, his Punisher rifle rendered utterly ineffective with Kindralax shielded as it was. Still, he had one other weapon that he knew would still work, and he drew his sword from its magnetic sheath as he broke into a loping run. With his girls in danger, his fear was instantly banished, and he felt a fierce eagerness to test his strength against this vast, hulking beast. \n\nKindralax had dismissed John as being inconsequential, and certainly not any kind of threat. Thus it ignored him completely as it bore down on the Terran female, who possessed a weapon actually capable of knocking out its protective shield. Kindralax wove his way through his trophies, studiously avoiding disturbing his collection which had taken over a century to assemble. A feral grin formed on his massive mouth, his lips curled back as he looked forward to feasting on these reckless intruders.\n\nJust as the dragon placed its enormous right fore-paw on the ground, long claws digging into the ground for purchase, John reached the apex of his charge. With a defiant yell, he swung his long sword with two hands in a mighty overhead chop, the shimmering white blade whistling through the air as it slammed downwards. The blade was incredibly sharp, and with his potent strength driving the blow he chopped straight through the spikes on the back of Kindralax's forearm, his sword then cutting a vicious slice through the thick scales covering the dragon's arm.\n\nKindralax howled with the pain, lurching backwards with a baffled look on his broad reptilian face, as he stared in shock at the yellow blood pouring from his wrist. He knocked several skulls from their stands as he staggered away, sending the grizzly trophies skittering across the chamber.",
        "\"I thought you were a god, Kindralax?\" John goaded the beast, advancing on it with his blade dripping ochre coloured blood. \"You don't look particularly divine to me...\"\n\nTwo big orange vertically-slitted eyes settled on him then, as Kindralax recovered from his surprise. It was John's turn to be shocked now, as the rip in the dragon's arm began to close, the yellow flesh knitting together as the scales were drawn back into position. An exultant smile spread across Kindralax's draconic face, as he thundered, \"NOW YOU FINALLY UNDERSTAND MY UNRIVALED PERFECTION!\"\n\nHe lunged forward, taking a broad swipe at John with his four-clawed paw, and John had to dive to the floor to avoid being ripped in half. Kindralax was relentless though, and followed up by trying to stomp him into the floor. John managed to narrowly avoid being crushed by rolling to the side, but he lost his Punisher rifle in the process, which the dragon snapped in half as it smashed the ground with its clawed hand.\n\nJohn lashed out with his sword as he sprang to his feet, the blade cutting into Kindralax's arm again, drawing a furious hiss from the dragon. It followed after him, the ground shaking with every step as it thumped down with its multi-ton limbs. The first cut John had made was now fully healed, and the second was already sealing up, Kindralax's incredible regenerative powers setting to work to restore the beast.\n\nHe heard the distinctive sound of the Justice Laser rifle firing again, and he glanced back between the rampaging dragon's legs in alarm. He felt a small sense of relief when he saw it was Alyssa with the rifle, and that it wasn't Dana shooting this time, what with her protective armour a smoking ruined mess.\n\nKindralax let out a furious snarl, and stopped his pursuit of John to flex his massive tail and send it sailing towards Alyssa in a wild slap. She tried to get clear, but the tail was just too long, and it clipped her legs, sending her cartwheeling through the air. John's heart was in his mouth as he watched her flying backwards, but she activated flight mode and managed to steady herself before she would have slammed into the cavern wall. \n\n*We're fighting a regenerative shielded dragon that's healing whatever we throw at it!* Alyssa cried out to the girls. *How do we kill this fucking thing?!*\n\n*Decapitation killed the Royal guard,* Rachel suggested as she backed away from Kindralax, trying to stay out of range of his deadly tail.\n\nDana had run back along the corridor by which they had entered the chamber, and was crouching in the darkness, Alyssa's Punisher rifle cradled in her arms. *The Justice Laser bolts cauterised the wounds. Those fucking lizards don't seem to be able to heal that!* she gasped as she panted for breath.\n\nAlyssa opened up with the Justice Laser rifle again, firing in short but powerful bursts, as she flew up towards the platform overlooking the battlefield. Kindralax's shield seemed to show no signs of weakening however, and the blue laser bolts sent rippling circles across the protective field's surface with no other appreciable effect.\n\n*It's too heavily shielded!* she thought to John. *But we think you can stop it regenerating!* \n\nJohn ducked another whistling swipe from the dragon, staggering backwards as the three-feet-long claws narrowly missed his face. *How?!* he gasped, as he darted around a huge fanged skull, which Kindralax smashed with a scaled fist a second later.\n\n*Kill it with fire!* Alyssa yelled to him, her voice coursing through his mind.\n\nKindralax surged forward, barging John aside with a dismissive backhander that caught him full in the chest, caving in his breastplate. He went tumbling backwards, sliding across the floor on his back as he lost his balance. The dragon seized this break in the melee to whirl on the spot and drop to his haunches. He stood tall on his forepaws, while the twin Plasma cannons throbbing angrily on its back, carefully aiming at the white-armoured figure who was firing that annoying laser again. \n\nAlyssa saw the shot coming, and she powered up her back-mounted thruster to maximum, in an effort to launch herself clear. Two blistering streams of plasma fire blasted out towards her, but she was moving too quickly for Kindralax to track her. In her desperation to avoid the plasma, she overdid the thrust, and careened into the ceiling, knocking herself senseless with the impact. The fail-safes kicked in, shutting down the thrusters, and she was left sprawled unconscious on the upper balcony. \n\n*Alyssa!* John called out to her in alarm, seeing her rebound off the ceiling from where he lay on his back. There was no response though, and fear stabbed at his heart.\n\nKindralax laughed contemptuously, a deep humourless chuckle that sounded absolutely terrifying. He turned to face John in a predatory crouch, a gleam of anticipation in those huge malignant eyes, and he growled, \"I'LL DEVOUR YOU FIRST, AND THEN I CAN TAKE MY TIME WITH THESE FEMALES...\"\n\nJohn's eyes narrowed with rage, as his fear for Alyssa turned into cold fury. He pushed his will into his sword, and blue eldritch flames licked up the blade, swirling with hungry tendrils and burning with a dreadful intensity. He roared in defiance, and sprinted towards the gloating dragon, who looked delighted that his next meal was running directly towards him. \n\nAs Kindralax reached for him with a grasping, clawed hand, John slid to his knees, then skidded across the ground, using his momentum to keep him going. He took a savage two handed chop at the dragon as he passed under its arm, and the flames poured into the wound, scorching the gouge he'd just hacked out of its limb.\n\nThis time when Kindralax pulled his arm back, he howled in agony as the blue fire continued to burn the deep cut. He stared in shock at the dancing malevolent blaze that swathed his arm, having never seen anything like it in nearly two centuries. The eldritch flames overwhelmed his regenerative abilities, preventing the wound from closing, and the unbearable pain Kindralax felt was like nothing he'd ever experienced before.\n\n\"WHAT MANNER OF CREATURE ARE YOU?!\" he gaped, staring at John in horror.\n\n\"Your doom!\" John shouted defiantly, lunging forward to take advantage of the dragon's distraction.\n\nKindralax flinched backwards, trying to keep his four scaly limbs away from the glistening white sword that was alive with ethereal fire. John wasn't aiming for the dragon though, not this time, and he activated flight mode to give him a bit of extra lift as he swiped down with his sword. The razor-sharp Crystal Alyssium blade sliced through the thick steel chain around the dragon's belly, neatly cutting it in two.\n\nThe chain had been holding the plasma cannons and shield assembly in place on Kindralax's back, and as the dragon lurched backwards, it toppled off him to land with a deafening crash. It was strange to see fear cross a dragon's features, but Kindralax was suddenly and painfully aware of his own mortality. \n\n\"Open fire!\" John yelled into the comm, as he ducked a ferocious swipe. \n\nRachel was some distance away on the other side of the room, but considering the vast size of her target, she could hardly miss. Not that she was a bad marksman, far from it in fact, as she'd drilled extensively in the firing range just like the other girls. She knelt beside her cover, placed her crosshairs right in the middle of the dragon's back, and after flipping the fire selector switch to full-auto, pulled the trigger.\n\nTwenty crystal-tipped rounds blasted into Kindralax's scaly hide, the scales so thick and tough as to be practically impregnable to small arms fire. However, after all of Dana's loving attention, the Punisher rifle was more of an anti-tank weapon than a regular rifle. The hyper-accelerated slugs smashed into the dragon's back, shattering scales and blowing apart its armoured hide. Kindralax roared in pain, rearing up in shock as it felt the vicious rounds tear deep wounds in its torso. \n\nDana had been following the fight via her telepathic bond, and when Alyssa was suddenly knocked unconscious, she had crept back down the passage despite the danger. Seeing that the fight had turned in their favour, she darted out to take cover behind an angular skull topped with three horns. With only a single magazine loaded into the Punisher rifle, she was more conservative with her shooting, and she aimed for Kindralax's head with a three-round burst. \n\nTwo rounds hit his massive lower jaw, leaving nasty craters in the scales, while the third hit his crest, blasting a big hole in the ridged plate and sending a horn tumbling to the ground. \"Payback's a bitch,\" she said with a grin, as she continued to hit the reeling beast with heavy slugs.\n\nKindralax had forgotten all about John as it reared with pain, as Dana and Rachel peppered it with railgun slugs. The pockmarked craters were starting to heal, but the stabbing pain from every hit was very real. The dragon decided that this was one trophy he was happy to do without.\n\nJohn took advantage of all the distractions, running into position beside the staggering behemoth, and getting ready to attack. Raising his sword behind his head in a massive overhead strike, he swung the weapon down with all of his might. Just as the dragon turned to flee, he struck Kindralax above the ankle of his rear left leg, the blow landing squarely on that red-scaled limb. \n\nThe Crystal Alyssium that formed his sword was an astonishingly hard material, fashioned into an incredibly sharp edge by Alyssa's mental craftsmanship. This particular blade had been psychically forged six times, and as tough as the dragon was, very little in the galaxy could withstand a strike from something so deadly.\n\nShearing straight through the six-foot-wide limb, John's sword cut through scale and bone as easily as it parted flesh. The psychic fires that limned the blade cauterised the dismemberment, and Kindralax cried out in agony as John chopped off its foot above the ankle. The dragon crashed to the ground like a demolished building, crushing trophies as it rolled away in pain, roaring in utter disbelief. \n\nDana and Rachel kept up the pressure, hitting the felled beast with dozens of rounds, each bullet punching through armour plating, and sending gouts of yellow blood across the dragon's flanks. Dana stood and slowly walked over to the brunette, while continuing to fire three-round bursts, her ammo counter now showing \"10/08\". When she finally ran out of twenty-millimetre crystal-tipped ammo, she aimed mid-way down the dragon's tail, and fired the integral grenade launcher. The compact grenade hit the middle of that scaly appendage, then detonated in a savage explosion that blasted a gaping hole in it, sending yellow flesh spraying out all over the back wall of the cavern.\n\nKindralax tasted real fear now for the first time in its life, clawing backwards to try and escape these fearsome Terrans, and their potent weaponry. Even more terrifying than those rifles was this white garbed lion-man with his dreadful burning blade. With a last effort born of desperation, the dragon lashed out at John with its good arm, the other still smarting from the burning flames that licked at the wound.\n\nJohn was ready for just such an attack though, and he felt calm and centred as he stalked after the wounded draconic titan. When it swiped at him, he lunged forward and drove his sword straight through the dragon's clawed hand. Kindralax howled with a mixture of fear and pain as the limb was suddenly enveloped in fierce blue flames, and John chopped down diagonally with all his strength, severing the lower two digits from that taloned hand.\n\nKindralax opened his maw to say something, only for Rachel to shoot him in the mouth, her railgun rounds hitting with enough force to splinter teeth and break his jaw.\n\n\"Please... have mercy...\" he whimpered as he cowered backwards, quailing before John's remorseless advance.\n\n\"Do you deserve it?\" John asked, as he strode forward, hacking aside a flailing arm that tried to bat him away. He stared into the creature's eyes, and asked, \"How often have you granted mercy to your victims? Would you have shown any to us?\"\n\nKindralax faltered then turned away, unable to face that judgemental gaze, and confirming all of John's suspicions. He used flight mode to soar into the air above the fallen colossus, then cut the thrusters to dive down on the terrified beast, driving his sword through the thick bone of its cranium and up to the hilt in its brain. The dragon spasmed as it died, the eldritch fires incinerating the contents of its skull.\n\nJohn pulled his blade free, quelling the psychic fires as he did so. He looked across the chamber at Dana and Rachel, and asked, \"Are you two okay?\" \n\n\"Yeah, we're good, Dragonslayer,\" Dana quipped with a smile, as she wrapped her arm around her lover. \n\n*I was so worried!* Edraele said to him, her telepathic voice sounding hugely relieved. *I was listening to your thoughts, and the fight sounded horrific. Is everyone alright?*\n\n*I need to check on Alyssa,* he replied, the stress in his voice betraying his anxious state.\n\nHe activated flight-mode on his Paragon suit again, as he lifted off the vanquished dragon's neck, and headed towards the ceiling to check on Alyssa. \n\nDana turned to Rachel and said, \"You better go with him, Alyssa might need a doctor.\"\n\nJohn touched down on the dimly lit platform above, and was surprised to see that he was in a well furnished and modern-looking apartment. The furniture in Kindralax's lair was enormous though, with everything massively scaled for the recently deceased dragon. He looked around frantically for Alyssa, and found her almost straight away, her glossy white armour standing out like a shining beacon against the dark ornate rugs that covered the floor.\n\nRunning over to the fallen girl, he had his heart in his mouth as he knelt down to check on her. He felt overwhelming relief to find she was still breathing, although worryingly, she was still unconscious. Rachel landed behind him, then darted to his side when she saw that Alyssa was still comatose. She pulled out her medi-scanner and passed it over the blonde's head, staring intently at the display to check her status.\n\n\"Alyssa seems okay, but she might have a mild concussion,\" Rachel said to John a few moments later, with a surge of relief in her voice. She continued scanning the rest of her body, and added, \"It looks like she has a hairline fracture in her femur as well.\"\n\nHe thanked his lucky stars for Dana, and the incredibly resilient armour she'd developed, then replied, \"Probably due to that hit she took from Kindralax's tail. I'll fill her up later, and she'll be fine by the morning.\" He leaned forward to scoop up the unconscious blonde, then hesitated before he asked, \"Is it alright to move her?\"\n\n\"Yes, she's not in any danger,\" Rachel replied, stepping aside to give him room.\n\nJohn lifted Alyssa into his arms, carrying the armoured girl with ease, courtesy of his enhanced strength. Rachel watched him pick her up, then crouched down to pick up the Justice laser rifle, which had been knocked from the wounded girl's hands when she'd bounced off the ceiling. They were about to leave, when John spotted a console on the far right hand side of the room. The computer system had been activated, and a comm interface displayed a large hologram above the console. A familiar draconic face was frozen mid-message, and he recognised the dragon as Tamolith, the Consort.\n\nHe nodded towards the console, and asked Rachel, \"Can you see any kind of playback button there? It looks like Tamolith left a message for Kindralax.\"\n\nRachel strolled over to the console and looked over the interface, but with all the writing in Kintark, she didn't get very far. She tentatively swiped across what she thought might have been Tamolith's name, but the holographical image disappeared, and was replaced with unreadable draconic text.\n\n\"Sorry, I guess their systems don't work like ours,\" Rachel said apologetically.\n\nJohn shrugged, and said, \"It doesn't matter, she was probably just trying to cover all her bases. If Kindralax had killed us, then I'm sure he'd want to know how we got past her unopposed, and why she hadn't warned him about us sneaking into his lair.\"\n\n\"We better get back to Mateo then, in case she's decided to renege on the rest of the deal,\" Rachel replied, looking worried.\n\nWalking back towards the huge gaping hole in the floor, John stepped off the edge of the platform with Alyssa safely cradled in his arms. He activated flight mode and descended at a steady rate, before touching down on the ground next to Dana. The redhead was waiting for them impatiently, and she looked alarmed when she saw him carrying her blonde friend.\n\n\"Is she alright?\" Dana asked him, hurrying over to join them, and staring at Alyssa with a worried frown.\n\nHe nodded, and replied, \"Rachel says it's not too serious. I'll carry her for the moment, but she'll come around soon enough.\" \n\nThe brunette touched down beside them, and said, \"I'm more worried about Mateo and the rest of the prisoners. It looks like Tamolith warned Kindralax we were coming, so if she's already betrayed us over that...\"\n\nRachel handed over the Justice laser to Dana again, and the redhead slung the spare Punisher rifle over her shoulder. They started back towards Tamolith's lair with only a brief glance towards the shattered Punisher rifle that Kindralax had stepped on, and the smoking ruin that was Dana's Paragon suit. \n\n\"Is it worth trying to salvage either of those?\" John asked his Chief Engineer.\n\nDana shook her head, but then looked at Rachel, and asked, \"Can you grab the busted Punisher rifle for me, babes? I'll build a replacement for us, but we probably shouldn't leave one lying around here, even if it is broken. We can drop it in the lava on the way out.\"\n\nThey waited patiently while Rachel slung her own Punisher rifle over her shoulder, then gathered the half-dozen pieces of the crushed weapon. As soon as she was done, they began walking back down the long, winding corridor that led to the fiery lake of lava, where they had made their deal with the deceitful female dragon.\n\n***\n\nFaye carefully rolled the Raptor, then stopped precisely seventy-five percent of the way through her manoeuvre. This left the gunship flying with one wing pointed to the ground, the other straight up towards the sky. She banked around, noting the drop in altitude, and making seventeen minor corrections to her piloting algorithm. Levelling out the gunship again, she increased airspeed by twenty-three-point-six-four knots to compensate for the loss of velocity during the roll. \n\nShe had observed both Jade and Alyssa at the pilot's controls, and both flew by instinct, with the Nymph even wilder and more unpredictable than the Terran teenager. Unfortunately that option was not open to Faye, and as a digital construct, she was reliant on precise logic and carefully calibrated programs for her flying 'skills'. \n\nIncluding the latest updates, she had made six-thousand-two-hundred-and-seven corrections to her original piloting software, transforming the original program beyond any recognisable measure. With those corrections, the cute purple sprite was finally satisfied that she had mastered low-speed flight in the gunship. While Faye would readily concede that both Alyssa and Jade were better pilots, she was very happy with her progress that morning, and was realistic enough to understand she was unlikely to be able to improve her program further.\n\nHaving slavishly followed Alyssa's orders to keep her energy profile to a minimum to avoid detection, Faye had upgraded her software as much as was reasonable under the flight restrictions imposed on her. She longed to be able to \"crank up the power\", as Jade put it, but it was not in her nature to be wilful nor disobedient. ",
        "As part of her core programming, Faye had a built-in desire to be helpful, and to assist her creator with whatever tasks were assigned to her. At some point since Irillith had activated her and the present day, something significant had shifted in the Artificial Intelligence, and her allegiance had transferred to John from the Maliri girl.\n\nIt was something that Faye had initially found deeply troubling, but recently, she had reconciled herself to the shift in loyalties. Every girl aboard the Invictus was deferential to John, and so it felt fitting that she followed the standard operating procedures of the ship as well, especially with him embracing her as a full-fledged member of the team. With her Creator, Irillith, being a part of this social construct, Faye had therefore reasoned that she should see him as her most senior operator too. \n\nShe had put this change in perspective down to her talk with John, when he'd suggested she develop herself, and disregard her paradox-inducing core repository. This had led to her rewriting part of the hacking device which powered her functions, allowing her to develop these new and intriguing behavioural modifications. At least that was what she had told herself, in the hours she spent watching him sleeping. \n\nShaking herself from those strange thoughts, she focused on her piloting of the Raptor, and decided to run through the full set of acrobatics in her repertoire. She had finished executing manoeuvre fourteen out of one-hundred-and-nine, when a flashing light on her comm interface alerted her to an incoming call. \n\nShe activated the control to open the channel to the rescue team, but frowned in annoyance at the point-nine-two second time lag between her command and its execution. As incredibly liberating as the connection to the Raptor was, there was a significant signal delay between the hacking deck that powered her, and the gunship. Faye planned to raise it as a concern with Dana, and until the issue was resolved, she knew her flying would seem sluggish and unresponsive.\n\nJohn's face appeared on the viewscreen, and he greeted her with a smile as he said, \"You're a sight for sore eyes, Faye. Is everything alright?\"\n\n\"I'm great, thanks, John!\" she replied chirpily, overjoyed to see him again. \"Do you need an evac?\"\n\nHe nodded, and replied, \"We'll be pulling out of here soon, so we'll need you back at the mine. There's too many prisoners for us to evacuate them via the Raptor though, so we're making other arrangements.\"\n\n\"I'll head back immediately!\" she responded, eager to assist where she could. Running through the calculations in a micro-second, she continued enthusiastically, \"My ETA is one minute, twelve seconds!\"\n\nJohn gave her a warm, affectionate smile, which triggered several of her bespoke programs. They captured his image and stored it for further study at a later date - purely for image recognition purposes, of course.\n\n\"It'll take us longer to leave the mine than that, but having you on standby would be a sensible precaution,\" he explained, looking pleased. He glanced away from the camera in his helmet GUI for a moment, then added, \"I better go, we're nearly back at Tamolith's cavern. If all goes well, we'll be out in about twenty minutes.\"\n\nFaye grinned at him, and replied, \"I'll be waiting for you!\"\n\n\"Excellent Faye, thank you,\" he told her, his expression full of gratitude as he ended the call. \n\nHer bespoke programs activated again, because having an image of John looking very pleased with her - might warrant further study too. The tiny sprite let out a happy sigh, then banked the Raptor to a new heading that would take her back to the mine.\n\n***\n\n\"She's gone!\" Rachel exclaimed, a ringing note of disappointment in her voice.\n\nJohn walked out of the tunnel to stand beside the brunette on the platform, and he looked out over the sea of lava towards the base of the broken pillar. Sure enough, Tamolith and her brood of dragon whelps were nowhere to be seen, and it seemed clear that she had abandoned her den. \n\n\"She left the prisoners behind though,\" Dana noted as she lowered her rifle, having swept the podium with the zoom built into the HUD's targeting functionality.\n\nWith a relieved nod, John moved to step onto the sloping pillar, his blonde matriarch still in his arms. He paused, then said, \"I might as well fly down, it's going to be awkward scrambling down there while I'm carrying Alyssa.\"\n\nDana pouted and replied, \"You -would- decide that after that fucking dragon melted my armour!\"\n\nRachel gave her a loving smile, and said, \"Don't worry, I'll carry you.\"\n\nThe redhead's dour expression vanished in an instant, and she beamed at the brunette, and replied, \"Sweeping me off my feet, are you, baby?\"\n\n\"I thought John had already done that?\" Rachel asked, as she tossed the broken pieces of the Punisher rifle over the edge of the platform and into the magma below.\n\nDana gave her a coy smile, and replied, \"You know me, I sweep both ways now.\"\n\nRachel laughed at that, and readied herself to catch the exuberant redhead. Dana jumped into her waiting arms, and her lover caught and carried her effortlessly, Rachel's enhanced physique having no problem with the girl's weight. John activated flight mode, with the brunette engaging hers a moment later, and they glided out over the fiery orange lake, before dropping down to the basalt platform below. It was much faster travelling like that, and it only took thirty seconds for them to land lightly on an open area of rocky ground. \n\nThe prisoners were sitting around Tamolith's podium looking dazed and confused, with most of them just staring off into the distance. John was about to go over and join them, when he noticed a flashing red light on the black console at the back of the dragon's nest. He turned and walked in that direction, then paused before the button, wondering how he was going to push it with Alyssa in his arms.\n\n\"Let me,\" Dana offered, darting around him and reaching out to push the blinking button.\n\n\"WAIT!\" John called out in alarm, stopping her in her tracks. \"It might be rigged with a bomb!\"\n\nDana turned and gave him a dubious look, but she backed away from the console obediently as she said, \"I bet you it's some kind of recorded message.\"\n\nTurning to Rachel, John asked, \"Can you take Alyssa for me, and just back up a bit? My armour's the toughest, so it'll be safer if I'm the one to press that button.\"\n\nAs he handed over the unconscious blonde, Dana looked at his crumpled chestplate, and grimaced as she noted, \"Your amour really needs some TLC. I bet Alyssa's gonna be pissed when she sees what Kindralax did to your lion emblem. I'm sure that's a real bitch to psychically shape.\"\n\nJohn winced as he replied, \"I'm sure he gave me a broken rib or two. It was like getting hit by a truck.\"\n\n\"I'll check you over when we get back to the ship,\" Rachel said, a look of concern on her beautiful face.\n\nHe shooed them off, and the two girls backed away from the console, putting a considerable distance between them. When he was sure they'd taken enough precautions, he gingerly reached out to press the button, turning his battered chest armour away from the console. Fortunately it seemed all their precautions were unnecessary, because a holographic image of the majestic dragon appeared the moment he had activated the holo-projector.\n\n\"Hello John,\" Tamolith said with a wary smile on her broad draconic features. \"If you're viewing this message, then you survived the battle against my mate.\"\n\n\"No thanks to you tipping him off, you conniving bitch!\" Dana hissed, as she walked back to join John with Rachel at her side.\n\nThe dragon looked shaken as the message continued, \"It seems you were victorious, and Kindralax has been slain. I received a notification from his bio-implant confirming his death only moments ago, so I hope you'll forgive me for not staying to congratulate a being powerful enough to fell one of my kind.\" Sounding deeply troubled, Tamolith continued, \"I'm forced to conclude that rumours of our supposed immortality were wildly over-exaggerated.\"\n\n\"Yeah, that's for damn sure!\" Dana commented with a grin. \n\nRachel nodded, and said, \"Unfortunately for Kindralax, there's only one group of immortals on Xen-Nuchek.\"\n\nTamolith had paused as she considered the ramification of her own words. Eventually she looked at the camera again, and said, \"I have no wish to anger one so mighty, so I have honoured our agreement. The Terran prisoners will follow you now, as I've ordered them to obey your commands. Similarly, I will order the rest of the Terrans I encounter on the surface to gather and await your group for evacuation.\"\n\nJohn smiled as he said, \"Well that saved us having to round them all up.\"\n\nThe female dragon narrowed her eyes and frowned as she said, \"I wondered how you planned to evacuate the prisoners, what with High Prelate Tedaktu's fleet guarding the Zeta-Draconis system. Then I was notified that our forces and the defecting Terrans had inexplicably turned on each other, and it seems a Terran cruiser appeared after the battle, which then wiped out the survivors.\" \n\nTamolith stared at them as she continued, \"I suspect it was your hand behind all this destruction, and I can only conclude that I should thank you profusely for warning me not to cross you. If that is the case, thank you for the warning! As for me, I have taken my precious ones and gone into hiding. It was fascinating to meet a Progenitor, but I won't take the risk of exposing myself nor my babies to another encounter with you. Good luck, John Blake, and thank you for the service you have performed, as deeply unsettling as it turned out to be. I hope you have a safe and rapid journey back to Terran Space.\"\n\nThe image froze then winked out, and Alyssa laughed weakly as she said, \"Yeah, I bet she can't wait until we're safely out of Kintark territory.\"\n\nJohn rushed over to Rachel who was still carrying the dazed blonde girl, and asked Alyssa, \"How're you feeling, sweetheart? You took a nasty bang to the head.\"\n\nShe smiled at him, and replied, \"Nothing you can't fix. I just hope Sakura's happy to share.\"\n\nHe returned her smile, delighted to see Alyssa conscious again. \"How much of Tamolith's message did you hear?\" he asked her curiously.\n\n\"Most of it. I wasn't sure if we could pause or rewind, so I didn't want to interrupt before she was done,\" she admitted, her tone matter-of-fact. She turned to look at Rachel, and added, \"You can put me down now, I'll be okay.\"\n\nThe brunette did as she was asked, and Alyssa stood upright, albeit somewhat shakily. Rachel had an arm around her to help keep her steady, and she asked, \"Are you sure? I'm happy to carry you if you're not comfortable walking.\"\n\nAlyssa shook her head, and standing a little taller, she replied, \"I'll be fine, it just took me a moment to adjust.\"\n\nJohn was relieved to see her with colour back in her cheeks again, and he pulled her into a gentle hug, being careful not to jostle her.\n\nShe hugged him back fiercely, and laughed as she said, \"You made us tough as old boots, I'm not going to break!\"\n\nThey shared a smile, and John glanced past her at the hapless prisoners around the podium. Nodding their way, he said, \"We better get them out of here.\" \n\nAlyssa nodded, and said, \"Yeah, Calara's eager to see her brother.\"\n\nHe walked over to the group of befuddled Terrans, and announced in a loud voice, \"My name's John Blake, and I'm here to rescue you.\"\n\nThe prisoners perked up at his voice, and began to gather around in a big group to listen to him speak. Their eyes were glazed, and they seemed to be having trouble focusing on anything. \n\nRachel scanned one of the Terran Federation personnel with her medi-scanner, and looked intrigued by the data streaming down the holo-display. \"Tamolith's pheromones have greatly elevated their serotonin levels! She seems to have overloaded their 5-HT receptors, flooding their brains with dopamine...\" she murmured, before trailing off as she stared at the results of the scan.\n\nJohn waited for her to continue, but the girl was completely absorbed by her findings. He turned back to face the prisoners, and smiled at them as he said, \"Follow us, and we'll lead you out of here to safety.\"\n\nA bearded man, who was a lieutenant by the insignia on his battle dress uniform, mumbled in a slurred voice, \"Follow... John Blake...\" \n\nThe way the man said it made John wonder if he was responding to his instructions, or the ones Tamolith had left them with. He figured that the results were the same either way, and the most pressing concern was evacuating all those people from the harsh conditions of the mine. \n\nAlyssa had found Calara's brother, and she patted him gently on the shoulder, as she said to John, \"Mateo's just as wasted as the rest of them, but other than that, he seems fine.\"\n\nSpeaking loudly to snap his doctor out of her analytical trance, John said, \"Rachel, are they in good enough shape to walk out of here?\" \n\n\"Hmm? Oh, sorry John,\" she apologised, looking up at him from the medi-scanner. With a look of relief on her face, she replied, \"They're a bit dehydrated, but other than that unharmed. They haven't been exposed to enough sulphur dioxide to see any adverse side-effects.\"\n\nHe nodded, then said to the prisoners, \"Stay close, we're taking you home.\"\n\nDana handed Alyssa her old Punisher rifle, while Rachel gave hers to John to replace his broken weapon. The brunette then continued her scans of the prisoners, building up a picture of the severity of their injuries, which would allow her to triage them when they returned to the ship. After reloading his railgun with a fresh magazine, John walked towards the curving rocky causeway which linked the broken pillar with the tunnel that led up to the surface. Alyssa joined him at the front of their column, while Dana brought up the rear, following after the long lines of prisoners. \n\n***\n\nJade didn't take her eyes off the altimeter on her Pilot station, as she guided the Invictus through the dense cloud cover, flying towards the mine. \"Visual contact in fifteen seconds,\" she murmured to Calara, as she feathered the retro-thrusters, slowing their rate of descent. \n\n\"I'm not seeing any energy spikes from the surface,\" Irillith said, checking the results of their scans of Xen-Nuchek.\n\nCalara glanced at the planetary map, and couldn't see any signs of defensive facilities built into the planet. She hadn't expected to, as system security was fairly light this deep into Kintark Space. The Empire was well established, and seemed to have substantial fleet assets at its disposal, so she didn't imagine pirates or raiders were much of a problem.\n\nThe Invictus finally broke through the fluffy white cumulus clouds, and appeared a few hundred metres above the endless green foliage that stretched away to the horizon. They could see the large rectangular gouge in the jungle, highlighted by the streaks of pale-yellow sulphur, which had been exposed by the now-exhausted strip mine on the planet's surface. \n\nJade levelled off their descent, and glanced at Calara as she said, \"The jungle's too dense to put the ship down, and that mined-out area is too uneven. Are we going to ferry the prisoners up using the gunship?\"\n\nThe Latina smiled at her, and shook her head as she replied, \"That would take too long. Can you bring us down into the mined-out area? Don't try and land though, just hover at ground level.\"\n\n\"Yeah, that's no problem,\" the Nymph replied immediately. She frowned in confusion as she asked, \"But why?\"\n\n\"You'll see in a minute,\" Calara said with a grin.\n\n***\n\nJohn and the girls stood by the large pyramid in the centre of the Xen-Nuchek mine. They hadn't run into any other Kintark guards, leading John to believe that they'd either slain them all, or the survivors had fled. There was also no sign of Balrac or the Kintark prisoners who had escaped the mine, leading him to conclude that they had escaped into the jungle.\n\nWhen their rag-tag group had reached the surface, they found hundreds of docile Terran prisoners waiting patiently, no longer going about their tasks. He could only assume that this was due to Tamolith's urging, and he felt a surge of gratitude for the huge dragon. Trying to round up all these people without her assistance would have been incredibly time-consuming.\n\nWhile they waited for the rest of their crew to arrive, Rachel had produced her medi-scanner and started running it over John. After checking the results, she frowned and said, \"You've got two broken ribs and a cracked sternum. You need to get some rest as soon as you can.\"\n\nHe smiled at her, and replied, \"I'll get these prisoners safely squared away, then I will, I promise.\"\n\n\"There they are!\" Dana called out to him, pointing skyward with a huge beaming grin on her face.\n\nHe followed the direction of her finger, and saw the welcome shark-like shape of the Invictus hovering motionless just below the thick cloud banks. It began to slowly descend after a brief pause, growing bigger as it approached the open area above the strip mine. \n\nFaye looped the Raptor around their location, providing cover should they need it, and scanning the jungle with a wary eye out for approaching Kintark forces. He called her on the comm, and she answered after only a second's pause. \n\n\"Hey John!\" she said in her cheerful, breezy voice. \"Is everything going okay?\"\n\n\"You're doing a fine job, Faye, thank you,\" he replied.\n\nShe beamed at him in delight, then asked, \"Do you need me to do anything different?\"\n\nHe shook his head, and replied, \"No, keep going as you are. We'll load all the prisoners, and once we're clear of the surface, you can dock the Raptor. Do you think you'll be able to handle that?\"\n\nHer tiny face lit up in a confident grin, and she said, \"Definitely! I've been practicing low velocity manoeuvres for hours, and I'm certain I can land safely.\"\n\n\"Good girl. You've been a huge help today, thank you,\" he said to her gratefully.\n\nFaye's eyelids fluttered, and her beaming smile got larger, which he didn't think was possible. She waved him goodbye with a happy giggle, and he shook his head with amusement as he looked away from the comm interface in his HUD. The Invictus was looming large overhead now, making him fully appreciate its vast five-hundred-metre length. It dropped down the last hundred metres before stopping at ground level in the carved-out stretch of jungle before them.\n\nHe turned up the voice amplification on his body armour to make sure all the prisoners heard him as he pointed east and yelled, \"Alright, everyone look that way!\"\n\nOver six hundred Terran personnel turned dutifully, obeying his instructions, and Alyssa nodded to him, and said, \"Commencing fire in ten seconds.\"\n\n\"Hold on to your butts!\" Dana said with a wild grin, turning up the UV filter on her Paragon helmet.\n\nJohn had been intending to turn away too, but he changed his mind at the last moment, following the redhead's lead and activating the light dampening filter in his helmet. He could clearly see the ten-metre-long turreted Beam Lasers pivoting on the Invictus' topdeck, and facing towards the jungle adjacent to the buildings. Before he could do or say anything else, there was a blazing flash, and eight incandescent beams slashed through the foliage, obliterating everything in sight. \n\nThe assault cruiser's arsenal was impressive enough while watching Calara blast holo-representations of targets on the Tactical Map. Seeing the Invictus unleash its firepower from only a hundred metres away was positively terrifying, and the accompanying noise was deafening as flora and fauna were vaporised in an instant. Those pulsating azure beams throbbed with barely controlled power, as Calara methodically obliterated an enormous stretch of jungle, the scything lances of energy annihilating everything in their path. When the beams winked out a few seconds later, he had to blink rapidly to clear the after-image from his retinas.",
        "\"Woohoo!\" Dana crowed. \"That was fucking awesome!\"\n\nHe had to admit that it had been an astonishing display of raw firepower, and caught up with her enthusiasm, he gave Dana a broad grin. Where there had once been an impenetrable jungle, there was now a broad clearing of tree stumps, glowing orange where their trunks had been incinerated. The Beam Lasers had burnt everything to a crisp, leaving an open area large enough to land the Invictus.\n\nJade lifted the ship away from the depression in the ground, pulling out of the strip mine, and then drifted quietly over the clearing. With a light touch of the retrothrusters, she brought the Invictus down to a gentle landing a short distance from the closest pyramid. \n\nJohn glanced at the prisoners, and was pleased to see that they weren't distressed in the slightest by the blazing inferno behind them. They were still staring in the direction he had pointed, seemingly oblivious to Calara's shooting.\n\n\"Follow me, everyone,\" he called out to the drowsy captives, and he led the way towards the sparkling white hull of the Invictus.\n\nThey followed the path out of the camp that once led into the jungle, but now headed towards the parked ship. As they drew closer, the broad Cargo Bay door in the flank of the ship began to rise up into the hull, and a few moments later the airlock spiralled open too. He could see three girls waiting for them there, and they waved excitedly at him as he approached. \n\nCalara's eyes darted over the crowd of prisoners that were following him towards his ship, and he could see the relief etched on her face when she spotted Mateo walking next to Alyssa. She ran towards John now, with a brilliant smile on her face, and a look of overwhelming gratitude in her eyes. He caught her in his arms when she reached him, and returned her hug. \n\n\"Thank you so much!\" she gasped, gazing up at him.\n\nHe smiled at her, and replied, \"You don't need to thank me, gorgeous. I'd do anything for you.\"\n\nShe squeezed him tightly, and he chuckled, glad he was wearing triple layers of Crystal Alyssium plating to protect his ribs from her fierce embrace. \"I love you,\" she told him simply, and that was all the reward he needed.\n\n\"I love you too,\" he replied, then added in a gentle voice, \"but we need to get these people aboard the ship.\"\n\nCalara looked over his shoulder, and saw over six hundred people gathered around, watching John and waiting to follow wherever he would lead them. She smiled at him sheepishly and said, \"I should probably let you continue with the evac.\"\n\nHe nodded, and said, \"Probably so, but I appreciated the hug.\"\n\nShe laughed at that, then broke away from him and walked over to check on her brother. John walked up the loading ramp into the Cargo Bay, and was relieved to see that the horde of freed captives was following him obediently. The girls helped herd the stragglers into the ship, and they loaded over six hundred people quickly and efficiently into the enormous Cargo Bay.\n\nAlyssa stood beside him as they checked to make sure everyone was safely aboard, and remarked, \"I thought Charles had gone overboard with this huge Cargo Bay, but it's been incredibly useful.\"\n\nJohn smiled at the mention of his old friend, and removing his armoured helmet he said, \"I don't think he really had this in mind when he designed it.\" He looked thoughtful then as he added, \"We're probably looking at about a seventeen hour journey back to the Dragon March, right? We'll need to provide these people with food, drink, and medical care.\"\n\n\"Sixteen hours, thirty-six minutes after we jump to hyper-warp,\" Alyssa corrected him with a wink.\n\nCalara strolled over to join them, and smiled as she said, \"I'm happy to take the lead here and organise everything. I'm sure the other girls will help where needed.\"\n\nIrillith, Rachel, Dana, and Sakura had overheard the conversation, and they all immediately volunteered to assist. \n\nRachel spoke up first, saying to John, \"I'll triage the prisoners. There's several who must have picked up injuries fighting against the mutineers, and I need to find the ones who've been on Xen-Nuchek the longest. I believe I can regenerate the damaged tissue in their lungs, by treating them with a stem-cell inhalant I've designed, with your permission, of course?\" \n\nHe nodded, and replied, \"You don't need to ask my permission, honey. I trust you implicitly.\"\n\nDana looked intrigued, and asked Rachel, \"I don't remember you mentioning that before, babes. When did you come up with that idea?\"\n\n\"In the mine. I needed something to keep my mind occupied so I wouldn't be so scared!\" Rachel replied with a smile. She gave Dana a hopeful look, and asked, \"If I draw up the schematics, would you be able to help build the respirators I need?\"\n\n\"I'd love to!\" Dana replied with an eager grin.\n\nRachel looked excited now, and she said, \"I'll head up to Medical, create the schematics for you, then send them to Engineering, alright?\" When Dana nodded her enthusiastic agreement, the doctor turned to Calara and said, \"I'll create a list of the most severely injured prisoners for you. Could you have them brought up to Medical so that I can start treating them?\"\n\nThe Latina nodded, and replied, \"Just contact me over the comm, and I'll assemble the first group of patients you've picked out. One of us can guide them to the Medical-Bay.\" \n\nDana and Rachel waved goodbye to the others, and the redhead walked over to the elevator that led to the Engineering Bay, while the brunette headed for the grav-tubes.\n\nCalara smiled at Irillith and Sakura, then said, \"I guess that makes you two my helpers then. These people are dehydrated, so we'll need to bring them water first, then food.\"\n\n\"I'll help too,\" Alyssa offered. \"I'll just go take this armour off first.\"\n\nJohn shook his head, and replied firmly, \"Nope, you need to rest after your concussion. Faye will be back in a couple of minutes, and she can assist with the maintenance robots.\"\n\nThe blonde pouted for a moment, then a sly smile teased her full lips, and she said, \"I don't know what I was thinking. I'll definitely need your tender loving care, if I'm ever going to recover.\" She flashed a lusty look at Sakura, and added, \"I'm too weak to handle such a rampant man on my own, though. Do you think you'd be able to help me get my medicine?\"\n\nSakura blushed, but she looked eager as she replied, \"I'll be happy to play nurse.\"\n\n\"That's the spirit,\" Alyssa said with an excited grin, looping her arm through Sakura's.\n\nJohn smiled at her antics, and said, \"Go on up to bed, you little vixen. I'll be up to see you soon.\" He walked over to the Cargo Bay doors, and after double-checking to make sure that everyone was aboard, he hit the button to close them. \n\n*I've given Jade the all-clear for takeoff,* Alyssa informed him, as she strolled out through the double doors, heading towards the grav-tube.\n\n*Thanks, beautiful,* he replied, as he walked over to join Calara and Irillith.\n\nCalara took a big lungful of air, and said, \"I'd forgotten just how amazing Dana's air filtration system is, but it only took a minute on Xen-Nuchek to remind me. It's funny how you take fresh air for granted.\"\n\nIrillith nodded her agreement, and said, \"She's a marvel, alright. Even by Maliri standards, the air quality on the ship is outstanding.\" The Maliri girl looked thoughtful for a moment, before she added, \"You might want to consider selling or trading this tech. High quality air is such a necessity that I'd imagine most governments would pay a fortune for it.\"\n\nJohn looked startled at that, and said, \"Actually, that's a great idea! The other big advantage, is that we don't have to worry about the technology getting into the wrong hands.\" \n\n*More money for the orphan fund!* Alyssa thought to him, sounding overjoyed.\n\n*Seems only fair they should benefit from the work of their brightest alumna,* he agreed.\n\nTurning to look at Calara and Irillith again, he placed a hand on both their shoulders, and said, \"You girls were outstanding today. Alyssa told me all about how you neutralised the Kintark and traitor fleets. I'm very proud of the pair of you.\"\n\nBoth girls gave him sparkling smiles, and he pulled them both in for a hug. Irillith gave him a light kiss on his cheek, then whispered, \"Let me know if Alyssa needs another nurse.\"\n\nHe laughed at that, and said, \"I better go and change out of this armour, but I'll come back down to help you two as soon as I've spoken to Jade.\"\n\nCalara shook her head, and told him, \"You need some rest too. Alyssa mentioned you'd broken some ribs?\"\n\nHe nodded reluctantly, but replied, \"Yeah, but it's not bad, they don't re-.\"\n\nIrillith cut him off, and said, \"Calara's right, go and rest. Dana and Rachel will be back soon, and Faye will be here with her 'boys' in a couple of minutes. You've done enough rescuing for one day.\"\n\nTruth be told, his ribs -were- hurting, and he was feeling tired after all the exertion in the mine. Giving them both a smile, he said, \"Just let me know if you need me for anything, okay?\"\n\nCalara glanced at the prisoners, and her eyes twinkled as she said, \"Maybe just tell our guests to wait here? Otherwise, I think the bedroom will get very crowded.\"\n\nJohn grinned at her, then turned to face the placid captives, and said loudly, \"Can all of you wait here, please? Listen to Calara and follow her instructions as if they came from me. She'll help look after you.\"\n\n\"Perfect, thank you,\" the brunette said to him with a grateful smile.\n\nHe waved them both goodbye, then strolled through the reinforced double doors that led out of the Cargo Bay. He walked down the corridor, and was about to step into the grav-tube, when he paused and returned to the double doors that led into the Hangar Bay. Putting his Paragon helmet back on, he opened the doors, and looked to his right, where the broad door in the hull was already open. \n\nBarely ten seconds later, the ferocious profile of the Raptor gunship appeared outside the Invictus, and Faye eased the glossy white ship into the huge hangar. Her landing was slow, careful, and methodical, the gunship moving in a precise fashion as the AI brought it in to land in the centre of the landing area. \n\nActivating the comm channel in his helmet, he called Faye, who answered straight away. \"Excellent landing, Faye. Well done!\" he commended her.\n\n\"Thanks! It was my first one,\" she replied, a relieved look on her cute purple face.\n\nHe smiled at her, and said apologetically, \"Sorry to ask this the moment you land, but would you be able to reprogram the maintenance bots to help distribute food and drink to the people we freed? Calara's overseeing the operation in the Cargo Bay, so if you have any questions, just ask.\"\n\n\"Sure! I'd love to help!\" Faye replied without a moment's hesitation. \"I'll get started on reprogramming the boys right away. Do you want me to check the new programs with Dana or Irillith?\"\n\n\"That won't be necessary. You've done more than enough to earn my trust,\" he replied sincerely.\n\nThe tiny sprite swooned a little before giving him a big grin, and said, \"That's wonderful to hear, thank you.\"\n\nHe nodded to her and closed the channel, then headed back into the corridor, the double doors swishing shut behind him. After stepping into the blue glow of the grav-tube, he removed his helmet again, and ran his fingers through his hair as he rose up to the Command Deck. He walked out onto the Bridge and spotted Jade sitting in the Pilot's Chair, focusing intently on the System Map.\n\nWalking down the ramp towards the Briefing Room, he called out to her, \"Hey, Jade. I'll just get out of this armour, and be right back, okay?\"\n\nThe Nymph spun in her chair, and looked very happy to see him. She waved, and replied, \"I'll be waiting!\"\n\nJohn walked over to the weapon rack to replace his weapons. He suddenly remembered his Punisher rifle had been crushed and was now incinerated in molten lava, and he'd taken his sword from the wardrobe downstairs. Pulling the weapon from the magnetic field that held it securely on his back, he saw that the sparkling white blade was caked in dried yellow blood. He was about to clean the sword, but he changed his mind at the last minute, remembering Rachel's fascination with all things genetic. Figuring that she might find Kintark dragon blood interesting, he left the sword propped against the weapon rack, then stepped into his armour equipping frame and removed the Paragon suit.\n\nStrolling out onto the Bridge again, he asked, \"How's it going up here, honey?\"\n\nJade gave him a warm smile and replied, \"I'm just clearing the system's gravity wells. We'll be ready to make the jump to hyper warp in about twenty seconds.\"\n\nNodding his understanding, he stepped up behind her, and placed his hands on the back of her chair as he watched her busy at the controls. The Nymph guided the Invictus to the edge of the Zeta-Draconis system, flying with practiced ease. As soon as the green light flashed on her console, letting her know that they were well clear of astro-navigation hazards, she leaned forward and pressed a button to power up the Tachyon Drive. The assault cruiser was swathed in blue particles, and a moment later, the ship leapt eagerly into hyper-warp.\n\nJohn glanced up at the course plotted on the Sector Map, while moving his hands to the Nymph's shoulders and giving them a gentle squeeze. Studying her projected route between the stars, he noted, \"Sixteen-and-a-half hours, then we're home and dry.\" \n\nNow that they were safely on their way, Jade visibly relaxed, and she spun the chair to face him, then launched herself into his arms. He hugged her back, only flinching a little as his ribs protested.\n\n\"Alyssa told us everything as it was happening! I can't believe you fought a hundred-foot dragon! I was so worried...\" she told him, her face full of emotion.\n\n\"It's okay, we're all safe now,\" he replied, stroking her back soothingly. Jade rested her head against his chest, so he tilted his head to look into her cat-like emerald eyes, and added, \"I heard you did an amazing job, piloting the Invictus in the battle. Thank you for keeping the girls safe.\" \n\nShe smiled at him, and said, \"I love my sisters, I'm always going to do my best to protect them.\" Her eyes sparkled as she quipped, \"Even the ones that managed to kill me off!\"\n\nHe realised she'd just meant it as a joke, but he wanted to be sure she wasn't harbouring any resentment towards the latest addition to their crew. He watched her carefully as he said, \"It must be very strange for you, suddenly having Sakura be part of our group, and walking around amongst us. Have you been finding it difficult to adjust to her being here?\"\n\nJade shook her head, and replied, \"No, not at all, I was only joking, honestly. She seems like a sweet girl; a bit shy at the moment, and intimidated by us girls, but I'm sure she'll grow out of that soon.\" She stared away into the distance for a moment, and continued, \"Sakura and I share a similar background, with years of slavery behind us. I'm hoping she'll learn to trust me and speak to me soon, I feel certain I'll be able to help her reconcile her past and move on.\"\n\nJohn ran his fingers through the Nymph's hair, and said, \"I'm very lucky to have found you, Jade. It's amazing that you can be so forgiving. You're an incredible girl.\" She beamed a delighted smile at him, but he added with a hint of caution in his voice, \"Don't get your hopes up too much, about Sakura letting go of the past. She's holding on to a lot of rage, and until this business with Mikaboshi is permanently resolved, I doubt she'll be having any breakthroughs.\"\n\nThe Nymph gave him her undivided attention as she listened to him, then replied, \"I think you might be right, but I'll try and be there for her if she needs to talk.\" She smiled as she continued, \"We've got an eternity together, and I'm a patient girl.\"\n\n\"A lovely one too,\" he observed, holding her tight. \n\nThey shared a tender kiss, and when their lips finally parted, she said, \"You better head down to the bedroom and look after those girls, they'll be wondering where you are. I'll keep an eye on the Bridge until Faye's ready to take over again.\"\n\n\"Thanks gorgeous, I appreciate it,\" he said, giving her one last peck on the lips before pulling away.\n\nShe waved him goodbye as he walked up the ramp towards the grav-tube, and he watched her retake her seat as he dropped down in the warm red glow. Stepping out into the Deck Two corridor, he strolled towards his bedroom with a lightness to his step, knowing what was waiting for him there. \n\nSure enough, Alyssa and Sakura were waiting for him on the bed, cuddled up together and both ravishingly nude. When he breezed through the door, they turned to look at him with smoky, lust-filled eyes. Their lips looked flushed, and their hair tousled, and it was obvious they'd been enjoying some very sensual kisses.\n\n\"I couldn't keep my hands off her, sorry,\" Alyssa admitted, her wicked smile belying any hint of remorse.\n\nJohn laughed and walked over to join them. He sat on the edge of the bed, and gave Sakura a playful smile as he asked, \"And what's your excuse, young lady?\"\n\nSakura blushed furiously, then glanced at Alyssa and confessed, \"Alyssa looks like one of the cheerleaders from my university's zero-g football team. I always thought that girl was stunningly beautiful.\"\n\nHe grinned at her, and said, \"Relax, I'm only teasing. I wasn't expecting you to justify anything.\"\n\n\"Forget that!\" Alyssa interrupted, raising herself up on an elbow. \"Tell me more about this cheerleader! Did you get her into bed?\"\n\nThe Asian girl blushed even more, and she slowly shook her head, as she replied, \"I was never bold enough to try.\"\n\nAlyssa frowned, and said sympathetically, \"That's a shame, I bet you could've seduced her. You're a very beautiful girl.\" Her lips lifted into a luscious smile, as she added, \"Still, I'm here now, and we can play 'seduce the cheerleader' whenever you like!\"\n\nJohn was amused to see more than a hint of curiosity in the embarrassed young woman, but to save her from further torment at Alyssa's hands, he asked, \"I'm going to get a shower first, do either of you want to join me?\"\n\nSakura nodded agreeably, and said, \"Sure, I'll keep you company.\" \n\nAlyssa gave John a hooded glance, and said in a sultry purr, \"Actually, I've always wondered what one of those uptight Law students were like in bed. I bet they're hot little minxes given enough encouragement. Unfortunately with all the cheerleading practice, and the sorority parties, I've never had a chance to put my theory to the test.\" She turned her devastating gaze on Sakura, and murmured, \"How about it, sexy? Feel like skipping lectures and joining me in my dorm room?\"\n\nThe Asian girl gaped at the blonde in shock, flushing again, but not with embarrassment this time. She threw John an apologetic glance, and he chuckled as he said, \"Have fun, I'll be back in a few minutes.\"\n\nHe left them to it, and walked into the bathroom, quickly stripping off his clothes. He was going to step into the shower, but he stopped in front of the mirror and checked his chest for bruises. Sure enough, he could see dark purple marks appearing on his chest where the dragon had smashed him out of the way, and the area was tender to the touch when he probed it gently with his fingers.\n\n*You were very lucky not to get seriously hurt in that fight,* Edraele thought to him sombrely. He could hear the worry in her telepathic voice as she added, *I never thought I'd be saying this, but please don't charge any more dragons! I'm not sure my heart can take it...*\n\nJohn walked into the shower cubicle and activated the water as he replied, *I'm sorry I scared you. It was reckless, but we didn't have much in the way of options at the time. When Alyssa got hurt, I had to take steps to put Kindralax down.* ",
        "She sighed, and he could feel her frustration over their empathic bond, as she said, *I try not to distract you with chatter in the middle of these fights, but I can hear your every thought, and I wish I was there to help. I feel so powerless being so far away from you, while you're there, facing mortal danger.*\n\nHe tried to sound reassuring as he said, *Don't worry, I'm planning to leave the Dragon March as soon as I've dropped off the prisoners we freed. I want to get back to Valaden as soon as we've rescued Tashana.*\n\n*I can't wait to see you,* Edraele told him, sounding greatly relieved.\n\nHe washed some cleaning agent through his hair, and as he rinsed it off, he asked, *Is there any news on your daughter? Is she still in the Unclaimed Wastes? Or in that pirate base you mentioned... Underworld wasn't it?*\n\n*Yes, that's right. Underworld is run by a man called Hades, who has a hand in most of the illegal activity in that sector. I'm fairly certain that isn't his real name,* Edraele remarked wryly. He could hear the painful regret in her voice as she added, *According to her bio-reader implant, Tashana's still alive and well, and travelling around that area. When you get closer to the Unclaimed Wastes, I'll give you her exact location.*\n\n*What happened to her isn't your fault, remember,* he told Edraele in a firm voice. *You weren't the one that ordered Tashana's banishment, it was the old Edraele who did that.*\n\n*I know,* Edraele replied, but she sounded sad as she continued, *I still can't help but feel responsible, though. I have the memory of sentencing her to exile, even if it wasn't actually me that ordered it.*\n\nJohn sent her a telepathic smile, and said, *I'll rescue her, and bring her back to you. You can apologise to her and help make it right, if that's what you feel you need to do.*\n\nEdraele was quiet for a while, before she said, *I'm so glad things worked out the way they have. You've given me a chance to atone for all the horrific things I've done... sorry, I mean the things -Edraele- did. It's fortunate being with you grants me immortality, I feel like I'm going to need all that time to make up for everything!*\n\nHe was surprised by the level of guilt and self-reproach in her voice, and he replied, *I'm proud of you for trying to make amends, but you must know that I don't hold you personally responsible for any of Edraele's old actions, right?* He hesitated for a moment, unsure if he should continue along this course, but he eventually added, *Don't forget that I helped rebuild your personality after what happened with my Progenitor half. I consider you to be a completely different woman to the old Edraele, and I don't want you getting depressed, trying to atone for crimes you didn't commit.*\n\nShe brightened immediately, and replied, *Sorry, John! I won't let it get me down like that again.*\n\nHe sighed, recognising the compulsion to obey him kicking in with his Maliri Matriarch, even if that hadn't been his intent. Unlike the girls aboard the Invictus, Edraele and all the Maliri bonded to her were all still slavishly obedient to his every whim. It was a situation he planned to rectify when he returned to Valaden, as they'd had to race away to expose the Dragon March traitor, and he'd been forced to abandon Edraele before he could undo that level of control.\n\n*I didn't mean to upset you, please forgive me, John,* Edraele asked him earnestly.\n\nHe sent her a warm telepathic smile, and said, *There's nothing to forgive, and don't worry, I'm not upset. How could I be, with such an amazing woman waiting for me!*\n\nShe sounded happy again, and she laughed gaily as she said, *If you keep flattering me like that, you'll be in for a very warm welcome home!*\n\n*I'd better think up more compliments then, hadn't I beautiful?* he replied, smiling to himself as he flirted with her.\n\nHe turned off the shower, and without the sound of running water filling the cubicle, he heard soft feminine cries and breathy moans coming from the bedroom.\n\n*And that's my cue to leave,* Edraele told him affectionately. *Enjoy yourself!*\n\nJohn left the shower, and dried himself off, enjoying hearing the siren call of a girl in ecstasy. He re-entered the bedroom, and discovered that Alyssa's theory was correct. It turned out the Law student did turn into a hot little minx, given just the right encouragement. Sakura's golden-brown thighs were splayed wide, and Alyssa lapped away at the Asian beauty, who writhed and moaned as she was teased by the blonde's flickering tongue. The raven-haired girl's eyes were squeezed tightly shut, as she experienced a girl's hot, gentle mouth in a very intimate place for the first time.\n\n*You're very sweet, did you know that?* Alyssa asked him, as she worked the petite beauty to a crescendo of pleasure.\n\n*I am?* he replied, sitting on the bed beside them. He watched in fascination as Sakura ran her fingers through Alyssa's blonde hair, holding her head in place while hunching her hips in time to the attention her clit was receiving.\n\n*Yeah, I discovered what you did a few minutes ago,* Alyssa replied, sending him a loving smile that floated in his mind before fading away.\n\n\"Oh my God!\" Sakura cried out, arching her back as she came, her eyelids snapping open as she climaxed hard.\n\nAlyssa had become a Grand Mistress of the Sapphic arts with five eager disciples to practice on, and the Asian girl wasn't going to get away with just one orgasm. She kept up her skilful nuzzling and drew forth another powerful climax from Sakura, who thrashed around on the bed, her hands unsure whether to push Alyssa away, or hold her head tight and never let her go.\n\nAfter Sakura's third mind-blowing climax, Alyssa relented, letting the exhausted girl collapse on the bed. She sat up with a satisfied smirk on her face, and throwing John a knowing glance she said, \"Mmm, delicious. I'd forgotten what a maiden tastes like.\"\n\n\"Just like any other girl?\" he said with a smile, finally understanding what she'd been hinting at earlier.\n\n\"Oh no, you can definitely taste the purity and innocence,\" Alyssa replied, as she moved up the bed to cuddle her trembling lover. \n\nJohn climbed into bed alongside Sakura, and smiled down at the reeling girl, as he asked, \"Did you enjoy that? You looked incredible when you came.\"\n\nThe dazed girl bit her lower lip, her breathing coming in pants, and her chest rising and falling with the exertion. She looked into his eyes, then gave him a shy smile as she nodded.\n\n\"How did I do compared to the cheerleader fantasy?\" Alyssa asked curiously.\n\n\"I never even dreamed it could be like that,\" Sakura replied, and with a soft sigh, she turned to look at Alyssa with adoration. \n\nAlyssa met the girl's blissful gaze, and she shot John a quick glance, her eyes widening as she exclaimed, *Holy shit! I see why you love having us dote on you like this. Those kind of looks are a hell of a turn on.*\n\n*It's a slippery slope,* he admitted with a smile. *It starts with a reverent glance from a beautiful stowaway you picked up by accident, and soon you're assembling a harem of gorgeous girls to worship you.*\n\nShe stifled a giggle as she shared an intimate look with him, then she smiled at Sakura before leaning in to kiss her. When she finally pulled back, she ran her hand over that slim tanned tummy, and said, \"We better top you up. John can't build up your body unless you're carrying his cum.\"\n\nSakura looked John's way with an eager smile on her face, and said, \"I can't wait!\"\n\nHer enthusiasm was refreshing and infectious, and John grinned at her, placing his hand over her belly, and saying, \"Me neither!\"\n\nSakura frowned then, a thought suddenly crossing her mind, and she looked back at Alyssa as she asked, \"What did you mean by me being a maiden?\" She looked pained as she added bitterly, \"I'm not any more. That was taken from me.\" \n\nAlyssa ran her fingers through Sakura's jet-black hair, and her tone was gentle as she replied, \"You're a virgin again, physically at least. I felt it when I was going down on you earlier.\"\n\nLooking at John and Alyssa in turn, Sakura said plaintively, \"I don't understand...\"\n\nJohn gave her a comforting smile, and continued to stroke her lower belly with a soothing caress as he said, \"Do you remember my original plan? I wanted to wipe the memories of all the terrible things that were done to you, then set you up with a fresh start and a new life.\"\n\nAlyssa continued to stroke her hair, and explained, \"Removing all the implants and healing all the scars was a way of undoing everything that you'd suffered. This was just another of the physical things that John healed.\"\n\nSakura looked bewildered, and she said, \"But you didn't even know me. Why go to so much trouble for a complete stranger?\"\n\nHis answering smile was self-conscious, as he explained, \"What you'd been through seemed so unfair. I just wanted to put you back to the way you were, before anything bad happened to you.\"\n\nShe stared at him, and her dark-brown eyes were penetrating as she said, \"There's more to it than that. Why was helping me so important to you?\"\n\nIt was John's turn to look troubled now, and he was silent for a long time. Alyssa stared at him in surprise when he finally replied, \"I guess I just felt guilty.\"\n\nWith a confused frown on her face, Sakura asked, \"Guilty? For what? You had absolutely nothing to do with what happened to me.\"\n\n\"No, it's not that,\" he replied. He let out a sad sigh as he added, \"You've seen the kind of actions we're forced into now, like with the Kintark and the Traitors. Amongst all this death and destruction, I saw a chance to do something selfless, and... nice... for you.\"\n\nHer eyes sparkled with the light of understanding, and Sakura smiled at him as she said, \"I finally understand why you were so reluctant to let me join you now. I'm sorry I messed up your good deed.\"\n\nAlyssa laughed, and said affectionately, \"He'll get over it. He gets to keep you for eternity, which is one hell of a compensation. Besides, we just rescued over six hundred people; that's got to make a difference on the old Karmic scales!\"\n\nJohn smiled at Sakura, and said, \"Alyssa's right, having you join us is wonderful. I don't regret that for a moment.\"\n\nShe opened her arms for him, then hugged him tightly as he moved into her embrace, being careful not to squash her under his weight. He could feel her breath against his ear as she whispered, \"I want you to be my first.\" Her tone left him in no doubt that she meant right there and then.\n\nHe pulled back a little so he could see her face, and he sounded startled as he replied, \"I didn't want to rush things. I thought we should wait until you got to know me a bit better first.\"\n\n\"I know what kind of man you are,\" she said as she studied him. Her smile was shy, but her tone was earnest as she said, \"You're the kind of person who helps a troubled girl, simply because it was the right thing to do.\"\n\n\"It was, and I'm very glad I made that decision,\" he replied. He gave her a wry grin as he added, \"Although you were quite determined about your own plans for the future.\"\n\nShe gazed into his eyes, and said, \"I'm certain about this too.\" After a glance at Alyssa's spectacular body, Sakura continued, \"I can't wait to go through the change, but I'd like to try making love as I am now, before you turn me into one of your goddesses.\"\n\nJohn glanced at her slender, petite figure, and he couldn't help feeling the stirrings of lust at the thought of being with such a beautiful young woman. Her build was very different to the athletic, statuesque amazons that he was ravishing on a daily basis, and he'd be lying if he said he wasn't intrigued by the thought. \n\nSakura caught his glance, and she smiled knowingly as she said, \"You like the idea of being with someone physically different from your girls, don't you?\" \n\n*She's ready for this,* Alyssa urged him, her cerulean eyes flashing with excitement. *You can give her the first time she deserved.*\n\nHe smiled at Sakura as she gazed up at him, and leaned in for a kiss, then said, \"You're a beautiful girl, and I love the idea of being with you.\" \n\nWhen he pulled away from her, he started trailing kisses down her tanned skin, savouring the feel of her smooth, soft skin against his lips. As he began his careful exploration of her slender body, Sakura let out little gasps as he brushed her sensitive flesh. He smiled when he saw the goosebumps prickling her skin, and proceeded lower to suck her dark nipples.\n\n\"I'm so turned on already,\" she moaned, as he caressed her small firm breasts.\n\nHis lips left her nipple with a smacking sound, and he smiled at her as he said, \"Yeah, but I want to see if Alyssa's right.\"\n\nBefore she could answer, he moved lower on the bed, his mouth planting kisses across her navel. She was so slim and petite, and the thought of filling her snug womb with his load was intoxicating. When he positioned himself between her thighs and began to tease her pussy with his tongue, Sakura could only groan as he lapped away at her. She was soaked already, Alyssa having given her three amazing climaxes before he arrived for a taste.\n\nThe blonde leaned in to kiss the Asian girl's neck, causing her to gasp at the extra set of lips and another flickering tongue paying attention to her. She moved lower then, and alternated between suckling each of her small, pert breasts, while gently kneading the other. \n\nSakura writhed to their touch, and she arched her back as John alternated between focusing on her clit and her wet lips. It didn't take long to bring her off again, her body already primed, and taking no time to respond to more attention. She came hard, her thighs trembling violently as he drew another blistering orgasm from her ripe young body. \n\nAlyssa moved out of the way, giving John room to raise himself over Sakura. She moved lower to take his cock firmly in hand and position it at the Asian girl's well-prepared pussy. Sakura's eyes fluttered open and she gazed up at John as she felt him swabbed against her wetness.\n\n\"Are you ready?\" he asked, holding himself above her, his weight on his elbows.\n\nShe was breathing deeply now, her chest rising and falling in her heightened state of arousal, and she nodded slowly as she stared into his eyes. He moved his hands behind her head to cradle her protectively, and then began to push forward with his hips, taking his time to let her adjust. Her mouth fell open, and she gasped as she felt her lips being spread impossibly wide to take his head.\n\nThere was no pain though, and as John pushed deeper inside her, she moaned at the feeling of being spread to take him. He paused when he felt the barrier preventing him from further progress, and he stopped to let her adjust to taking his head. She placed her hands on his arms, squeezing his strong biceps, while spreading her thighs further to give him full access to her body.\n\n\"I want you,\" she murmured to him.\n\nHe stared into her eyes, and pushed again, applying pressure to the obstacle in his path. John felt it yield before him, and he was able to bury another several inches inside her gloriously tight passage.\n\n\"Oh my God!\" Sakura panted, as she felt that slight tearing sensation, followed by an incredible feeling of fullness as her pliant body stretched for his throbbing cock.\n\nJohn watched her with concern, and he stroked her hair as he asked, \"Are you okay? Did that hurt?\"\n\n\"No, it feels amazing!\" she gasped. \"Keep going!\"\n\nHe did as she asked, pushing deeper into her petite young body, sinking all the way up to her uterus. She arched her back as he impaled her, her hard nipples brushing his chest as she quivered at the intense sensations. Cradling her in his arms, he pulled back, then began to thrust into her right up to the end of her pussy, the head of his cock kissing the entrance to her womb with each thrust.\n\nAlyssa was fingering herself slowly, panting with lust as she teased her clit with her languid caresses. She leaned in and asked Sakura, \"Are you ready to take all of him? There's nothing like feeling him inside your womb, believe me.\"\n\nSakura's almond eyes were wide open, her pupils heavily dilated with lust, and she groaned, \"Give it to me! I want all of you!\"\n\nJohn smiled at her, and when he reached the bottom of his downward stroke, he pushed forward, taking her more forcefully. He'd already fed her his cum, and she was well prepared for him as he knew she would be. Her cervix unfurled to take him, and he slid his entire length inside her, sheathing himself in her tightly gripping tunnel.\n\n\"Oh fuck!\" Sakura cried out as she felt him deep in her belly. She never imagined she could feel so stuffed, but there was no pain, only an incredible feeling of satisfaction and completeness.\n\nShe clung to him, wrapping her legs around him, and sliding her hands around to feel the powerful muscles in his back. Her expression was one of wonder as he stroked in and out of her, finally experiencing what her body had been designed for. The room was filled with the sound of little gasps and whimpers as he rode her, and she held on tight, feeling exposed and protected at the same time. \n\nSnaking her hand between them, Alyssa found Sakura's clit, and her voice was filled with lust as she said, \"Cum for him, beautiful. Let him know you want his cum in your womb.\" She smiled as she added telepathically, *Show him how much you want him to breed you!*\n\nAt this Sakura let out a silent scream, clinging to John desperately as she experienced a mind-melting climax. Her fierce grip was too much for him to withstand, and he drove into her, right up to the quad, joining her in ecstatic release. His cock throbbed as it pumped one long spurt of cum after another into her tender womb, quickly filling her to capacity. He raised himself up a little, her belly rising with him as he stuffed her full of spunk. \n\nJohn locked eyes with Sakura, and they shared an unspoken understanding, both of them knowing that this was to be the first time of many such couplings. They could sense the change in their relationship, and an intimacy existed between them now that felt wonderfully new and exciting. Sakura's expression softened as she felt her most sacred of places swelling to take his offering, willingly growing for the man who was going to father her children.\n\nAlyssa collapsed on the bed, starry-eyed after seeing the two of them cum, having timed her own frantic fingering to bring herself off at the same time. Seeing John with any of his girls was exciting, but watching him break in a new girl - and a freshly restored virgin at that - was absolutely thrilling.\n\nWhen his balls were finally drained dry, John gently eased out of Sakura, and lay down beside her as he said, \"You were incredible. I hope you enjoyed that as much as I did!\" He placed a possessive hand on her stomach, knowing that her womb was now full to the brim with his load.\n\nThe raven-haired girl turned to look at him, and he could hear the heartfelt emotion in her voice as she said, \"I always of dreamed of losing my virginity to a kind, handsome boy, and that he'd be loving and gentle with me. Thank you for making that dream come true.\"\n\nHe smiled at the overwhelmed young woman, and said, \"It was my pleasure, believe me. Although I'm not sure about the 'boy' bit, I'm a good twenty years older than you.\"\n\nSakura smiled, and slowly shook her head as she replied, \"I'm ninety-five remember? That was practically cradle-snatching.\"\n\nJohn laughed at that, joined by Alyssa's giggles as she snuggled up against the blissfully satisfied Asian girl. They lay like that for a few minutes, all of them revelling in the afterglow, while Sakura marvelled at the feeling of having her womb packed full for the first time. \n\nEventually Alyssa leaned up one elbow, and she had an apologetic smile on her face as she said, \"I know you must be loving carrying his load inside you, but would you mind sharing some? I need a bit too, so he can heal me.\"",
        "Frowning in confusion, Sakura suddenly blushed when she realised what Alyssa was referring to. However, the blonde having eaten her to three consecutive climaxes had done wonders for her confidence, and she nodded as she replied, \"Of course! You should have said so earlier.\"\n\nAlyssa grinned with anticipation as Sakura spread her legs in readiness, and she dove in to suck the cum out of the accommodating girl. John never got tired of seeing this kind of debauchery, and he watched in fascination as Alyssa feasted. Movement by the door drew his attention to Jade, who sashayed inside, a pleasant smile on her dark-green face.\n\n\"Hello everyone,\" she greeted them all brightly as she shrugged out of her dress, and climbed on the bed entirely naked.\n\nJohn smiled at her and asked, \"Hi Jade, what brings you down here?\" \n\nThe Nymph's eyes were fixed on Sakura's cum filled tummy, and she smiled at the newest addition to their group as she replied, \"Alyssa asked for my help. This beautiful girl needs her stomach topped-up, so she can continue with the Change.\"\n\nAlyssa was done, and she moved aside, her own stomach slightly rounded now. She curled up next to Sakura, and said, \"There's going to be lots of times in the future to enjoy feeling stuffed like this, but we need to keep you well fed.\"\n\nWith a rueful sigh, Sakura said, \"It's alright, I understand.\"\n\nJohn soon got to watch the Nymph slurping up his cum next, with Sakura writhing and moaning, especially when Jade licked her womb clean with her long tongue. The green-skinned girl loaded up her breasts until they were fat and taut, sitting high on her chest, then she crossed her limber legs beneath her as she sat up, and beckoned the petite Asian girl over to her. Sakura felt sadly empty now, her abdomen returned to its normal svelte state, so when Jade offered her those cum-filled breasts, she gladly fell into her arms.\n\nSakura was hesitant at first, so the Nymph brought one of her swollen nipples to her mouth, and brushed it across those cupid bow lips. The slender young woman didn't need any further encouragement after that, and she latched on then began to suck hungrily. Jade whispered loving words to Sakura as she swallowed down one mouthful after another, and the two girls stared into each other's eyes as the Nymph stroked the brunette's rising tummy. \n\nThis was an unexpected surprise for the Asian girl, but after riding a rollercoaster of pleasure with John and Alyssa, she was feeling remarkably open to new experiences. It didn't take too long to complete the transfer, and once Sakura was loaded up again, she lay back on the bed with a contented sigh. Jade gave her a loving kiss, then waved them goodbye as she got dressed and headed back to the Bridge.\n\nClosing his eyes to check on the mental compartments in his mind, John saw that the representations of Alyssa and Sakura were glowing with a warm white radiance. Now that they both carried his cum inside them, he knew they were susceptible to his psychic influence. He began healing Alyssa's fractured leg, making her fractured femur reseal itself, while also making sure she had no lasting damage from her concussion. \n\nWith the petite Asian girl, he knew his cum was automatically making her grow taller, faster, and stronger until she fit the dimensions of the template. However he had additional things in mind for the enthusiastic young woman, and now that she held the psychic catalyst for the Gift in her stretched stomach, he applied his will to nurture those special changes.\n\nThey cosied up together afterwards, with John spooned behind Sakura, while she faced Alyssa, their bellies touching. John slid his hand between the girls, enjoying the feel of their soft skin against the palm and back of his hand. Surrounded by the loving embrace of the Progenitor couple, Sakura fell asleep within less than a minute, a dreamy smile teasing her lips.\n\n*That was the third time you've fed her,* Alyssa reminded him pointedly, as she brushed her fingers through Sakura's silky black hair. \n\nHe nodded, and glanced at the ship's chronometer, noting that it was a little after three in the afternoon. Alyssa's ethereal counterpart still had the rest of the day to come up with an idea of how to protect them from the all too real danger of those nightmares. John took a deep breath, then replied, *I hope Athena can come up with a plan.* \n\nAlyssa looked at him over the sleeping girl between them, and her cerulean eyes burned with a fierce intensity as she said, *I don't want to face that creature again, John. We narrowly escaped with our lives last time. What do we do if Athena can't think of any ideas?*\n\nJohn matched her gaze, and knowing she could read his mind, his expression was grim as he admitted, *We'll be in big trouble.*\n\nThey stared into each other's eyes, both feeling that same sense of dread as they remembered the horrific stygian abomination that lurked in wait for them. Now that John had fed Sakura a third time, they knew they were due a visit to the Astral realm of dreams, and \"big trouble\" seemed a woefully inadequate description, considering how close they had come to annihilation at the hands of that ancient, terrifying behemoth. Unsurprisingly, neither of them wanted to sleep, and they lay awake with icy fingers of fear dancing up their spines.\n\n***\n\nGrand Prelate Melkadian's clawed hand shook as it hovered over his console, and he activated the holo-recording again, his eyes still not willing to believe what he'd just witnessed. He'd received this recording only minutes before, routed to him under executive seal by Consort Tamalith. \n\nThe images sprang to life above his screen, resolving into the noble visage of High Prelate Tedaktu, one of the Empire's most trusted servants. The tall Kintark Commander looked badly shaken, his features tense with worry as he stood in the Bridge of his battleship, the Bershan'tok. The blast wave from the Terran battleship, the Phobos was fading from view on the Tactical Map, the vessel vaporised by a Power Core explosion.\n\n\"Any sssign of sssurvivorsss from the Birran'tor?\" Tedaktu asked his officers in the Bridge Pit, while he stared at the wreckage-strewn battlefield on the Tactical Map that hovered before him. \n\nHis Chief Engineer looked up at the Command Platform and shook her scaled muzzle as she replied, \"The dessspicable Terransss caught them completely unprepared. I'm sssorry High Prelate, your nephew could not have sssurvived their treachery, the damage to the Birran'tor was overwhelming.\"\n\nHigh Prelate Tedaktu's shoulders slumped, his face drawn with grief over the loss of his kin. The hulking Royal Guard that shared the platform placed a scaled hand on his shoulder and said, \"He ssshall be avenged, Tedaktu. We will bathe in the blood of the dessspicable Terransss and make them all pay for thisss betrayal.\"\n\n\"High Prelate!\" the Tactical Sub-Prelate called out to him in warning. \"I've detected another Terran ssship, they're approaching on an attack vector!\"\n\nTedaktu's black eyes narrowed with fury, and he stared at the Tactical Map once again, as a white-hulled assault cruiser appeared on the map. \"Move to engage!\" he roared at his pilot.\n\nThe Kintark Commander watched the ship approaching, and Grand Prelate Melkadian could see the incredulous look on Tedaktu's face as he watched the Terran ship racing towards him at speeds that defied belief. \n\n\"How isss it moving that fassst?\" Tedaktu muttured to the Royal Guard beside him, who shook his head, equally astonished.\n\nThe last remaining cruiser in the Kintark fleet, the Vell'tor, was closer to the Terran ship, and they had barely managed to turn to face this new threat before the Invictus was upon them. Tedaktu gaped in shock as a combination of four searingly bright blue beams, and those cursed Mass Drivers the Terrans favoured, smashed into the stricken Vell'tor, eviscerating the bridge of the cruiser in a single salvo.\n\n\"Open fire!\" he bellowed at his Tactical Sub-Prelate, fighting down his instinct to stare in horror at the remains of the Vell'tor.\n\nThe green streams of plasma bolts sailed wide though, his gunner finding it almost impossible to hit the white cruiser, as it dodged nimbly like a strike craft. It rotated to face them with their upper deck, and the Terrans opened fire with an impossible number of Beam Lasers. The throbbing azure beams blasted through the Bershan'tok's shields, then burned into the hull, the sixteen columns of virulent energy all striking in exactly the same place.\n\nThe shocked silence on the Bridge was broken by the Engineer Sub-Prelate, who stammered in horror, \"By all the godsss!\"\n\n\"How bad is it?!\" Tedaktu demanded of the mortified Lizardman officer.\n\n\"They nearly cut through our armour in one sssalvo, High Prelate!\" the terrified Kintark engineer blurted out. \"We're doomed! We can't face that kind of firepower!\"\n\n\"Pull yourssself together!\" Tedaktu snapped, but Grand Prelate Melkadian could see how badly shaken the Battleship Commander was by the attack.\n\nThe white Terran ship rolled, moving with an effortless grace that would be beautiful to behold, if it wasn't the harbinger of their doom. More beams lashed out, striking the same savage rent in the battleship's sundered armour, and compounding the damage already inflicted to the glowing armour plating.\n\nThe Royal Guard turned to Tedaktu, and blurted out, \"We must get word to the Emperor! He must hear of this threat before it's too late!\"\n\nTedaktu nodded, his hands moving in a blur over his command console as he started transmitting the Bridge camera footage to the Consort on the planet below. The very same holo-recording that Grand Prelate Melkadian was now watching.\n\nAnother blue flash lit up the Tactical Map again as the white ship opened fire, and the Bridge shook violently, throwing the Royal Guard off the Command platform, and sending him crashing into the Bridge Pit below. High Prelate Tedaktu only managed to stay upright by sinking his claws into the console and hanging on for grim life. \n\n\"What the fuck wasss that?!\" Tedaktu gasped fearfully.\n\n\"Decksss thirty to ten have been breached!\" the Engineer Sub-Prelate cried out. He let out a low moan, as he added, \"They were aiming for our reactor, it'sss going critical!\"\n\nTedaktu whirled around to stare at the Bridge camera directly, and he shouted, \"Warn the Emperor! The-.\"\n\nWhatever he was going to say next was cut off, as the camera footage ended abruptly in a searing orange flash.\n\nGrand Prelate Melkadian turned to look at the Kintark officer standing before him, and his voice trembled as he asked, \"Is that the ssship you sssaw, Prelate?\"\n\nPrelate Khardhas nodded, his tormented expression filled with dread as he replied, \"Yesss, that'sss definitely the cruissser that hit our fleet in the Mar'Katrach Nebula. It tore usss to piecesss, Grand Prelate! They obliterated the Merlan'tok in the sssame way!\" He had a haunted look in his eyes as he added, \"High Prelate Vraktin'sss battlessship, three cruisersss and two carriersss, all dessstroyed within minutesss, I've never ssseen anything like it!\"\n\nThe Grand Prelate slumped in his chair, just as badly shaken as the Cruiser Commander before him. Prelate Khardhas was an excellent officer, and Melkadian didn't doubt his word for a moment, but to actually watch one of the Kintark Empire's mighty battleships ripped to pieces like that was horrifying. He knew what he had to do, and rising from his chair, he turned to face the troubled Kintark Officer.\n\n\"You did well, Khardasss. By bringing me warning of thisss threat, you have done the Kintark Empire a great ssservice that will not be forgotten. Return to your ssship, I will bring word of the danger we face to the Emperor himssself!\" Melkadian exclaimed, his sibilant voice throbbing with concern.\n\nWith a respectful bow, Prelate Khardhas turned and marched from the audience chamber, leaving Melkadian alone in his plush office. As soon as the Cruiser Commander had left, Melkadian pressed a concealed button on his desk, then turned to the hidden door at the back of his room and rushed through it. The narrow passageway beyond led directly to the Emperor's quarters, in the Imperial palace on Kinta. He passed dozens of Praetorian Guard standing at attention in the vaulted halls, the huge lizards armed and armoured in the finest accoutrements of battle that the Kintark Empire could forge.\n\nWhen he approached an enormous ornate portal, the surrounding frieze deftly carved with draconic imagery, one of the Praetorian guards moved to intercept him. The massive lizard towered over the robed Kintark noble, and said respectfully, \"Apologiesss Grand Prelate, the Emperor isss in a private audience and not to be disssturbed.\" \n\n\"Thisss is a matter of utmossst urgency! I mussst be allowed to ssspeak with the Emperor!\" Melkadian protested, shocked at being barred from entering the Emperor's throne room for the first time in his life.\n\nThe Praetorian looked as troubled as the Grand Prelate, but he shook his head, and replied, \"I'm under ssstrict ordersss, Grand Prelate. You'll have to wait, I'm afraid.\"\n\nMelkadian fumed, but he was powerless in this situation. The Emperor's word outweighed his own authority, and he was certainly in no position to barge his way past the wall of muscle before him. His mind raced as he worried what circumstances could possibly have arisen that would justify blocking the Emperor's most trusted advisor from his chambers.\n\nAfter Melkadian was left stewing with anger for five minutes, the Praetorian approached him again, and said, \"The Emperor has requested your presence, Grand Prelate. You may enter the throne room.\"\n\nHis robes swishing to reflect his indignation, Melkadian strode through the narrow gap between the huge doors, which the Praetorian guards opened a fraction to allow his entry. The gigantic audience hall behind those doors no longer impressed the Grand Prelate, with him having been here hundreds of times before, but the towering immensity of the Kintark Emperor still sent a shiver of fear up his spine. It was as if a mere mortal such as himself had no place being in the presence of a living god.\n\n\"AHH MELKADIAN, WELCOME. YOUR TIMING IS EXCELLENT AS ALWAYS,\" the Emperor thundered, his voice causing the Grand Prelate to inwardly wince at the deafening sound.\n\n\"Thank you for granting me an audience, Emperor,\" Melkadian said in a rush. \"I have the most dreadful news. I need to tell-.\"\n\nThe Emperor shook his vast head, and he boomed, \"IT WILL HAVE TO WAIT, MELKADIAN. BRING ME THE BRIMORIAN AMBASSADOR.\"\n\nMelkadian frowned, and said, \"I mussst warn you of a threat to the Empire itssself-.\"\n\n\"THE BRIMORIAN, MELKADIAN... FETCH HIM IMMEDIATELY!\" the Emperor interrupted him, his huge amber eyes narrowing with displeasure.\n\nThe Grand Prelate bowed respectfully, and turned to leave the audience hall. As he did so, his eyes were drawn reflexively to a disturbing presence on the far side of the room. It wasn't the red scaled colossus that drew Melkadian's attention this time, but a cowled figure garbed in black that stood beside the Emperor's dais. Even though this mysterious person was less than a twentieth of the Emperor's size, something about him shook Melkadian to the core. \n\nFeeling sharp daggers of terror clutching at his heart, the Grand Prelate backed out of the room, his legs feeling like they were made of jelly. He was suddenly filled with gratitude to his Emperor for giving him an excuse to flee from this unknown figure, and he rushed away, eager to follow the order to find the Ambassador from the Brimorian Enclave."
    ],
    "authorname": "Tefler",
    "tags": [
        "teenager",
        "blowjob",
        "swallow",
        "virgin",
        "asian",
        "cum inflation",
        "group sex",
        "first time",
        "dragon",
        "bossfight"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-66"
}