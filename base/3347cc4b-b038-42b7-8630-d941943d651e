{
    "title": "The Art of Divorce",
    "pages": [
        "It took me a while, but I've finally discovered what's wrong with women. Men; no doubt about it, men are the problem.\n\nAs I sit here in this bus stop shelter, smelling the leftover piss, from the derelicts that sleep here when no one is around, I can see all of my mistakes, and they're crystal clear in the rear view mirror of my mind. \n\nI've got about an hour, so I can tell you about this chunk of my life. My life isn't exactly going the way I'd hoped. In fact right now it's an absolute disaster. I've been forced to take a long hard look at the way I live and treat people. But I'm still relatively young, so I can come back from this.\n\nMy biggest mistake was in believing that men would do the right thing. Neither of the men involved in my story did the right thing. Truthfully my idea of the right thing, is whatever is best for me, but I guess neither of them realized that.\n\nMy other mistake was in believing that other women would also act according to the rules and principles that I think keeps life organized. The other woman in the story was not supposed to just swoop in and grab my toys before I was done playing with them.\n\nSo now I find myself taking this embarrassing bus ride back to my parent's house to try and rebuild my life in the hick town that I was so eager to escape from. I'm sure those small town tongues will be wagging when I get there. It will definitely not be the triumphant return that I expected, but it's not all my fault. \n\nI'm a victim of conditioning. People are supposed to act a certain way around me, and when they don't I guess I don't make good decisions.\n\nMen have always told me the same stuff since I was a little girl. \"Oh Kathy, you're beautiful; I'd do anything for you.\" \n\nThey call me Kathy because that's my name. I'm an apple in a world of pears and that makes me stand out. Being an apple means that my tits are bigger than my ass. Don't kid yourself, look around there's lots of pears out there but not too many apples.\n\nAnyway my long naturally straight blonde hair and crystal clear blue eyes don't hurt me much either. My daddy always said that I was destined to do great things and be a success in life.\n\nThroughout my life thus far there has only been one boy for me Raphe Jenkins. He was the cutest boy in my school, and therefore in town. I latched onto him in the first grade and just never let go. He wasn't as driven as I was, but he always played his part. When we got to high-school and I became a cheerleader, he had to get on the football team, or lose me. He didn't like football much, so I had to motivate him to excel. He was a running back so I'd just tell him that when he got the ball that I'd stand under the goal-posts, and anybody that stopped him from reaching me could take me out on a date. That lit a fire under him, because Raphe loved me, and he hated sharing. By our senior year, Raphe had more touchdowns than any other player in the school's history. He probably could've gone to college on a football scholarship, but that wasn't in my plans.\n\nRight out of high-school, we got married and moved to California. Raphe was a very good carpenter, and he got a lot of jobs around the city, so he could put me through college. While there I got my associates degree in business, and started working at the bank to gain experience. The first experience I gained was the fact that some of the people who worked in the bank, spent more money in a week on lunch than we spent on rent. They wore beautiful clothes, and drove expensive cars instead of pickup trucks. In short, they were living the life that I wanted. I'd spent a lot of time in school cultivating the correct image and losing my southern accent, now was the time for me to make my mark.\n\nI started having Raphe drop me off, a block away from the bank in the morning, and pick me up a block away as well. That way no one would ever see me getting out of his old truck. Raphe was a good guy and I loved him in my own way, but there was no way I wanted anyone to see me in that truck.\n\nOne of the officers at the bank took a liking to me, and started helping me to develop into the person I wanted to be. I in turn helped him with a little problem he had whenever he was around me. It wasn't that big of a problem; his dick just seemed to stand straight up whenever I was around. Like I said it wasn't that big a problem since it was only about 4 inches long. I hardly even felt it when we had sex so I didn't really think of it, as cheating. I knew that Raphe wouldn't see it that way so I was careful that he never found out.\n\nAnyway he started introducing me to the right kinds of people, and finally introduced me to Smith Benson. Was that classy or what, the man has 2 last names. Even his first name is a last name. Anyway Smith (that's his first name) fell for me in a big way. He was an account executive for an entertainment representation firm. They handled all kinds of stars and athletes in a number of fields. I didn't care which field it was as long as there weren't any crops growing in it. Smith drove a Silver BMW. It was the most beautiful car I'd ever seen. He got me a job as his assistant, no more days as a bank teller for me. \n\nFrom the very start I knew that Smith was interested in me, after all he was a man. I watched his progress trying to get into my pants and realized that as rich and powerful as he was, or as I thought he was, that I had power over him. For the first few weeks, I kept everything above board and business like. But I had to be careful too, because if I made him wait too long, he'd replace me with someone who would give him what he wanted. I intended to give it to him too; I just wanted something in return.\n\nHe took me to lunch in a different fancy restaurant every day. He got my hair done, and even started to buy me clothes and things. I explained to Raphe, that Smith was just trying to make sure that my clothes and manners didn't call adverse attention to me, in the company we were keeping at work. Raphe, the jealous little boy that he was, had threatened to bust Smith's ass, if he so much as laid a finger on me.\n\nI think he followed us a couple of times as we went to lunch so I had to do something to get him off of our track. Raphe still didn't like the thought of sharing me with anybody else, go figure.\n\nSmith and I had one of his mysterious clients coming in, she was an artist from France, and had a big following all over the world. She was coming to the United States for the 1st time for a show. She was going to be here for a month before the show to finalize her new pieces. This presented an opportunity for us, I told Smith.\n\n\"What's on your mind Kathleen?\" he asked.\n\n\"Where is Amanda staying when she gets here?\" I asked him in return.\n\n\"We have an apartment/studio rented for her,\" he replied.\n\n\"Do you have any carpentry work that needs to be done there?\" I asked again.\n\n\"Well there are a few things that could be done, why?\" he asked.\n\n\"Because, if you hired my husband to do it, we'd know exactly where he was, and when, so we'd be able to be together without worrying about him finding us, and busting your ass.\"\n\nSo Smith called Raphe and had him come over for a meeting 2 days later. They worked out all of the details, and Smith gave Raphe the keys, and they shook hands as Raphe left.\n\nSmith then came over to me and told me to pay him for hiring Raphe. I knew exactly what he wanted, because his payments usually involved my 2 friends, Kneel and Bob.\n\nEverything should have been perfect. Smith had gotten us a room, at a motel clear across town from the apartment complex Raphe was working at. \n\nWhat was Raphe doing near the motel? You can train a puppy not to shit on your rugs, but you can't train a man to do anything. Raphe was driving past the motel, because the motel happened to be located near the only fucking Burger Queen restaurant in town. When he saw Smith's BMW, he waited outside the motel and saw us coming out.\n\nOf course Smith and I didn't know Raphe had seen us, we thought we had gotten away with it. Smith was happy, and I was disappointed but happy as well. I was disappointed because by now I had cheated on Raphe with 2 big city types and neither one of them had any idea that they hadn't rung my bell. Sex with Smith was every bit as boring as with Mr. 4 inch Jones at the bank. At least I could have my cake and eat it too.\n\nI could let Smith warm me up whenever we got together, then go home and let Raphe fuck the living shit out of me.\n\nRaphe\n\nI couldn't believe that I saw Kathy coming out of a motel with that slimy ass boss of hers. I guess she was just too fancy for me now. She had been spending so much time with al of her big city cohorts that she was just too sophisticated for a country boy.\n\nWell if that's what she wants she's welcome to it, I won't bother her. I called a friend of mine back home and he said I should call a lawyer about a divorce, so that's what I did. It's gonna be kind of expensive, so I'm gonna have to keep working. It's like that joke from the dukes of Hazard movie. \"Why are divorces so expensive? Because they're worth it.\"\n\nThe lawyer had set me up with a Private investigator to get evidence, to prove my claim. He also told me that since we had no kids, and were both working that if I could prove infidelity, I wouldn't have to pay Kathy any kind of alimony or support. That's what I wanted, just to be free of her. \n\nAt the same time I still loved her so much. I just couldn't imagine why she would do this to me. Yeah, I could, why should I lie to myself. From the first grade, me and Kathy had both been in love with the same person, her. We always did, what she wanted, only this time I guess what she wants, she needs someone else to help her get.\n\nI drove over to the apartment that I was supposed to be working in. I hoped that they'd have a microwave there so I could warm up my food from Burger Queen. \n\nThis should be an easy job, but it would be time consuming. I had to build a series of easels and stands in different rooms of the apartment, and a few on the deck out back. This was so the person that was going to live here could paint or do whatever they did, where ever they wanted. I was also supposed to look around the place to see if anything needed to be repaired. If I could do the repairs, I was supposed to do them and bill Slimy Smith for the work. If it was outside of my capabilities or comfort zone, I was to notify Smith so he could have it done before his client arrived.\n\nAs I opened the door, I noticed that it squeaked and kind of stuck when I tried to open it. I'd put that on the bill, and charge Slimy Smith fifty bucks for a shot of WD-40.\n\nIn the kitchen, among all of the state of the art appliances I found a microwave.\n\nIt was a really nice one too. As my burgers were heating up, I sat down at the table in the breakfast nook. I started thinking about Kathy again. There was no way I wanted to stay married to her, she was a..... Try as I might even now I couldn't think of anything bad to call her. I guess I wasn't wired that way.\n\nI was pulled from my revelry by a sound. I wasn't quite sure I'd heard it, maybe I imagined it. But it sounded as though someone had gone up the back stairway really quietly, like they were only wearing socks.\n\nI probably did imagine it. I ate my burgers while the smell of charcoal grilled beef permeated the apartment.\n\nI measured all of the open walls in the rooms that I was told to put the easels in. I had a better idea in a couple of the rooms it made more sense to build racks in front of the walls.\n\nOnce I had all of the measurements done for the interior, I looked at the outside. I had an idea here too. I thought I build the easel out here inside of an enclosure so that wind or rain or dust wouldn't damage any pictures or whatever was going on. After that I cleaned up my mess and went home.\n\nKathy was there already. She was wearing one of those slinky night sets that she liked to lounge around in. I remember when she used to look just as good, if not better, in one of my old shirts or T-shirts. But she was too sophisticated for that now.\n\nShe came over towards me, and I pretended to have to put my tool belt away as she reached for a hug.\n\n\"Raphe did you eat, yet Hon?\"\n\nI wondered why the hell, she was asking me that. She can't cook, and I don't smell any food that she brought in.\n\nWhat if I was hungry, was she just going to pull my dinner out of her ass?\n\n\"Yep\", I said, \"I had Burgers.\"\n\nI guess I was hoping that she'd remember that I only liked Burgers from 1 place.\n\nShe knew that even though there was a McClowny's restaurant on every corner, I only liked Burger Queen. The only one in town was right near the motel she'd spent part of her afternoon in.\n\n\"Well good,\" she said, \"Maybe we can spend some quality time together then.\"\n\nI noticed 2 things right off the bat. The first was that her fake city accent was gone, and she was talking like she did when we first got here 3 years ago. That meant that she wanted something. The 2nd was that she smelled like she'd just taken a shower, and cleaned herself up. Getting rid of the evidence I guessed. She'd just been out fucking old Slimy Smith, did she really need even more sex, or was this just her way of fooling me into thinking that nothing was going on. I'm not as sophisticated as Kathy and Smith, but that doesn't mean I'm stupid.\n\nI could have gone to college, I did have a lot of scholarship offers, and my grades were better than Kathy's, but when we got here, I had to make the money so she could go to school.\n\nShe sashayed over to the bedroom door and just leaned in the doorway. I guess I was supposed to trip over my dick running after her. I just played it cool instead. I spread out my measurements on the kitchen table and pretended to go over them.\n\n\"Sweetheart I have to make sure that all of my figures are correct for this job,\" I said.\n\n\"If I do anything wrong, it would reflect badly on you, to your boss.\"\n\n\"And we wouldn't want that, now would we?\" I asked.\n\n\"I'll be in soon,\" I said.\n\nShe pouted but she went on into the bedroom anyway. She wasn't used to not getting her way, but soon enough she'd be able to do things any way she wanted because I'd be gone. My heart ached, but I knew this was the right thing to do. My daddy had always told me that when you're in a bad situation, the right thing to do was usually the one that hurt the most.\n\nKathy\n\nI couldn't believe that Raphe, my Raphe was making me wait to have sex. He should have jumped in here at the first glance. Normally as soon as he came through the door he was looking at me like a stallion in heat. And now not only was he not all over me, he was making me wait. Smith, and every other man I know, would do anything to get between my legs and I've got Raphe making me wait. I lay down on the bed with my legs just slightly parted. I wanted him to see the matching top and also the thong panties of the night set I was wearing. This set was perfect it was baby blue to set off my eyes. My breasts were barely contained in the top and it could be released with one tug, my ass like I said, wasn't anything to write home about but the right frame makes any picture better, and these panties were the right frame. They were so tiny they made my ass look fuller.\n\nSmith had loved the way I looked in this set. Unfortunately, the whole thing had only taken about 10 minutes. We checked into the room, he had to make a couple business calls while I changed. He came in saw me, took his clothes off, pulled the string of the panties aside stuck his dick in me, grunted and thrust about 8 times and then just laid down next to me. I thought he was taking a break or switching positions but he was done. He even came inside me, what a fucking prick. He was starting to fall asleep until he saw the way I was looking at him. Then he just looked up at me and asked me if I wanted to do it again.\n\nWhen I said \"Oh yeah, I can hardly wait,\" he didn't realize that I was being sarcastic.\n\nThere was no foreplay, no touching, Raphe usually spends more time just eating my pussy, than Smith and I spent in the motel. I think it takes me longer to suck Smith's dick than we spent in the motel. Shit, Raphe had better hurry up and get in here.\n\nI started imagining exactly what I wanted my husband to do to me, and I must have dozed off because the next thing I knew it was 3 a.m. and Raphe was already in bed beside me. The unusual thing was that normally even if I went to bed first, when I awoke the next morning Raphe would always be spooned up behind me. Even if we'd had one of our rare arguments, it was just how we slept. He used to say that we gravitated towards each other in the night. But not only was he not next to me, he was all the way on the other side of the bed, and he was facing away from me. I slowly rolled towards him and put my leg over his leg and hip, but he didn't react. I gently tapped him on the shoulder, no result. Finally when I shook him awake, he yawned and asked me what I wanted.\n\n\"Nothing Raphe, just go back to sleep,\" I said angrily.\n\nI'm not sure but I think there was a hint of a smile on his lips, as he turned back away from me. This should have been a wake-up call for me that something, other than the things I had done, was wrong in my marriage, but I failed to see it.\n\nThe next morning when I woke up to get ready for work, Raphe was already gone. \n\nFor the first time that I could remember he hadn't kissed me goodbye or said anything to me before he left. It was one of those things I could never cure him of. He always told me that if he got hurt or died, or I did, he didn't want us to go into the next life without having told me he loved me, or kissed me one last time. Raphe was a puppy; he wasn't a complicated entity so I never thought that he had any kind of plan or that anything was going on. But he had never refused, or said no to sex with me. \n\nI've heard that every man has times when he can't perform, and we are in our mid twenties now so maybe last night he was just tired. But why was he sleeping away from me. I still needed Raphe in my life, and in my own way I loved him, more than anyone else in the world. I knew I loved him far more than any feelings I had for Smith. But Smith was my ticket to the life I needed, and Raphe would never find out about him.\n\nRaphe\n\nI got out of the house as early as I could. I was really worried that Kathy would want to have wake up sex. It was strange, that I could go from totally enraptured, to total revulsion in 24 hours but here I was. Stranger still was the fact that emotionally, I still loved her so much and wanted for us to fix this. But the thought of having sex with her; the thought of putting my lips, or even my dick anywhere near that hole she gave Smith made me want to throw up. \n\nSo I found myself driving over to the Home Depot near the apartment before the sun came up. It was open at 6 a.m. I ordered my materials from contractor supply, and went to get coffee while my order was filled. I looked through their Tool section and got new blades for my jig saw and my circular saw. By the time I was done there, they were calling me to tell me that my order had been filled. I got receipts for all of the items to present to Smith for re-imbursement, and then I drove to the site.\n\nAs I pulled up in front of the apartment, I could swear the light was on, on the upper floor. I pulled into the driveway and when I looked again it was off. Maybe I'd mistaken which unit was lit up. It didn't matter anyway since they were all dark now.\n\nThe person that Smith was leasing the apartment for wasn't due to be there for a few weeks, so no one should be here now. \n\nI got the keys out and started unloading my materials. First I moved everything from my truck to the large living room area. Then using the sketches and measurements I'd taken the previous day, I divided the load up into smaller packages and moved each package into the room it was designed for. The remaining materials, for the outdoor deck, stayed in the living room. I'd probably do the deck last and I didn't want my wood ruined if it rained.",
        "After all of that unloading and lugging heavy pieces around, it was time for a break. So I sat down to drink my coffee. I probably should have kept moving because as soon as I sat down my mind went back to Kathy. I imagined her doing all kinds of things with Smith that I was too dumb and countrified to know about. I remembered back when we first got to California, how I'd had to work for a contracting firm until I got my license and was barely able to keep food on our table, and pay Kath's tuition. For that first year, every time she took another class we ate tuna or bologna for a week or two, so we could buy her text books. She was becoming a success and leaving me behind. I didn't regret a single one of the things I'd done or given up for her. It just hurt so bad that she'd betray me like this. I couldn't help it, the thought of living the rest of my life without her, had me desolate. Before I could stop them the tears started rolling down my cheeks and I had to bite my lips hard to stifle the urge to just break down and really cry.\n\nIt was OK for a few stray tears to escape under situations of extremely high emotion, but to just sit here bawling, was just not manly. Since my daddy didn't raise no bitches, I wasn't going to start crying now. As I wiped the tears away, I swear I saw movement at the top of the stairs. When I got my eyes clear, there was no one there.\n\nI went back out to the truck to get my tool belt, and strangely enough felt better after the emotional release. The vibration at my side scared the shit out of me, and I nearly jumped through the ceiling. It was only my cell phone. I looked at the display and saw that it was Kathy, so I didn't answer it. I needed to start preparing myself for the time when she'd no longer be in my life. I didn't let myself think about where she was, or what she'd be doing. I'd know everything she did and with whom by the end of the day anyway. The PI would give me daily reports until we had enough hard evidence to go to court with.\n\nI started framing the rack in the living room. The way I designed it the rack would be able to support canvasses and framed pictures in almost any width or height. There'd be adjustment bars every 3 feet so two or more pieces of differing dimensions could be viewed or worked on next to each other. For the living room I thought I would do one rack on the west wall and one opposite it on the east wall. If I built them that way the racks wouldn't interfere with either the entry way or the fireplace. I started cutting the lengths of wood I'd need, then I drilled holes for the screws and bolts to assemble them.\n\nI decided against cutting and drilling all of the wood at the same time, because I wanted to see how well the first one would work before I committed and possibly wasted all of my materials if the design was flawed. Also I started thinking that it might be good to have at least one rack complete just in case this guy got here early. Artists were known for being flaky so who knows what could happen.\n\nBy this time it was nearly lunch time and I knew where I wanted to go. Back to Burger Queen, damn those burgers were good. \n\nSo I got back in my truck, and headed over to the drive through, on the way over, I noticed Smith's car parked outside the motel again. This time in a fit of rage I stopped, I caught myself though as I remembered my lawyer's advice on doing anything stupid. \n\nI crept slowly over to the expensive car, looking around to see if anyone was watching me. I removed a sharpened punch from my tool belt and punctured both rear tires. Then I went forward and flattened both of the front tires. I know it was childish, but boy did I feel better. Then taking the same punch I deeply scratched a line down the side of the car. I got back in my truck and drove off, feeling electrified. \n\nI ordered my usual from the Queen, and decided that from now on I'd have to order less. Too many burgers and I'd have trouble replacing Kathy, when the time came. \n\nWhile I was there another thought went through my head. The damage I'd done to Smith's car would affect him about as much, as having to drive out and buy these burgers had affected me. It was a bit of an inconvenience, but nothing more. This sobered me up, and knocked the wind back out of my sails.\n\nI was trading in the girl I'd loved since the 1st grade, for a few scratches and tires.\n\nBy the time I got back to the apartment I was nearly in tears again. I went back in ready to eat my burgers, and it just kept hitting me. There had to be something wrong with me, for her to treat me this way. Obviously yesterday wasn't a one time thing. I now saw that they had only given me this job to keep track of my whereabouts during their time together. This could get really ugly really fast. There was really nothing I could do to save my marriage. Kathy had always been driven towards the good life. She wanted maybe even needed, things that I was never going to be able to provide. The fact that I loved her, and loved only her, didn't matter. And in Smith she'd found someone who could not only provide those things, but was the kind of person she really wanted. The only thing for me to do was get out of their way.\n\nI really thought that I'd hit bottom about all of this yesterday, but here it was again only worse. There was no way I'd ever get her back. It was like someone had just backed up a dump truck full of concrete, and then just dropped the whole load on me. I fell to my knees and just sobbed.\n\nEvery emotion I'd ever felt just oozed out of me, it was the most desolate sadness I'd ever experienced. Time had no meaning, I was overcome. I'd heard people talk about wanting to die when a loved one passed or left them, and I now knew how that felt. It was as if everything moved in slow motion, every action, every thought required my consent, and I couldn't see a reason for any of it. Should I breathe in? Why? Why shouldn't I just stop breathing and let go of the pain. If I died maybe she'd understand why I just gave up on life and feel sorry. Maybe everything would start over again and she'd never hurt me like this again. Maybe she was just a cold hearted snake, who had never loved me and never would. She'd probably just laugh when she found out I was dead, because it would save her and Smith the trouble of having to get rid of me or divorce me. My death would be the last gift I'd give her.\n\nIt was about that time that I felt the hand on my shoulder. I'm a pretty big guy, but I have to admit that hand, though it was tiny, completely scared the shit out of me. I jumped nearly through the roof. My heart was beating so fast, I got light headed. When I turned around, I saw a girl. Well maybe she was a woman, she was just frigging tiny. \n\nKathy is small compared to me, but this woman was tiny. She was barely 5 feet tall, if that. She had curly brown hair that cascaded down her back, stopping where it was blocked by her shoulders and spilling over the front. It wasn't all of that hair that stopped me in my tracks though it was the expression on her face. I'd never seen so much concern in one expression. Her eyes were hard to describe, they were kind of a grayish green, that were piercing and inviting at the same time. They appeared to take in every detail of every thing they gazed at. The eyes didn't appear to form opinions, there was no right or wrong in her gaze, it only measured and compared details. As if after seeing someone this way she could easily, replicate any and all objects she saw. And right then she saw me.\n\nAs my brain reconnected with my mouth, and I realized that I could talk, words started coming out.\n\n\"Hey, who the hell are you, and why are you here?\" I snapped.\n\n\"You are so sad,\" she said, with the thickest accented English, I'd ever heard.\n\n\"This is my house,\" she said. \"You make my, how you say, picture stands. Only I think you do better job, with these, what you call them?\"\n\nI was speechless, and words simply would not come out.\n\n\"I was on the 2nd floor hiding and I smelled the food again,\" she said smiling.\n\n\"I was dying to just come down and eat with you. But no one is to know that I am here. I work day and night, but I have no ideas, only paintings with no, vision. I could do as well with a camera. This is not art.\"\n\n\"And as I watch, you are consumed by this sadness. It threatens to take you away. You must tell me about it, maybe I can help?\"\n\n\"Come let us sit down, we will talk about it.\"\n\nShe led me over to the same table I'd been sitting at for a couple of days. All those times I'd thought I heard something, I guess I had.\n\nShe was again very tiny, and also obviously French. She was the person that Smith had rented the apartment for. So I guess technically that mad her, my employer's employer. Or basically, she was, my boss's boss. \n\nShe was nothing like that bastard Smith though, she seemed really nice. She was concerned and caring. Those were not the words I'd use to describe Smith. Well you could, because he was concerned with fucking my wife, and he cared enough about fucking her, to give me something to do, to keep me from busting his ass, when I found out about it.\n\nShe opened the bag and looked inside. Her little face lit up.\n\n\"Oh good,\" she said, \"You have enough for two.\"\n\nShe busied herself spreading plates and silverware out, and ran back upstairs and came back with a bottle of wine of some sort. In a matter of minutes, the fast food looked like a sumptuous meal. It wouldn't have surprised me more if she'd whipped out candles and a violinist. \n\n\"Amanda Anderson,\" she said in that accent that I was beginning to like.\n\n\"That's not a very French sounding name,\" I said.\n\nAnd you are?\" she said with a smile.\n\n\"Raphe Jenkins,\" I said shaking her tiny outstretched hand.\n\nThen we sat down and ate my Burger Queen. We talked about a lot over the next hour or so. We talked about her paintings. We talked about the fact that she loved my rack system, both for displaying her completed works and for painting the ones that were in progress. She swore me to secrecy, regarding the fact that she was already here. She wasn't supposed to arrive for almost a month. I promised her that I'd tell no one.\n\nAfter a while it became obvious that we got along well. We also both had our own sadness. Neither of which we had yet seen fit to describe or talk about. I gathered that hers was about her work. I didn't have much to do with art or painting but I was sure she was good at it. I had to admit though, that I probably wouldn't know good art from bad.\n\nBy the time I paid any attention to the time, my cell phone was ringing, and I noticed that it was past the time I should have been leaving. I didn't know how the time had just slipped away, but I felt better than I had in days. Amanda wasn't Kathy, but she was a woman and a pretty one at that. If she didn't think I was worthless, maybe there was life after Kathy after all.\n\nKathy\n\nBy the time I got home, I was expecting Raphe to already be there. I'd taken the time to shower at the motel, to get Smith's smell off of me. It was kind of exciting doing this; I guess that the excitement was far better than the sex. Let's face it what woman, especially one who needed her sex, would rather have it with an over 50 balding vanilla man like Smith, when she had a hunky husband like my Raphe. A big part of it was also the fact that Smith just used me. Like he was paying for it, and it was his right, to do it. Raphe on the other hand loved me dearly, and wanted to please me. \n\nThen of course there was the control factor, with Raphe I was the one in control. If I wanted him to do something, or get me something; or if I wanted him to stop doing something, I just rationed out the pussy until I got my way. With Smith, he just looked at his watch and said let's go. There was no debate; we didn't even have nice lunches any more. The nice treatment was obviously just to get into my pants. Now that he was there, I was simply his staff whore and that was it. He didn't introduce me to people any more, or try to teach me things. I didn't even get to go to meeting with him anymore. And the sex was the same as it had been the first few times. No foreplay before, no cuddling and romance after, he just stuck it in me, grunted a few times, squirted into his condom, rolled over and fell asleep, leaving me extremely frustrated. \n\nHe might've been a high class gentleman, in society, but in the bedroom he was a fucking caveman. These past few days had made me want Raphe like never before. There were so many things I'd taken for granted about him, like the way he ate my pussy for what seemed like hours. He also had this way of nibbling my back, when we did it doggie style. I couldn't wait for him to get home and erase these bad memories.\n\nI decided to call him and hurry him along. After all he didn't get any last night either, so he had to be as horny as I was. Raphe didn't even have to be horny to want me, all it took usually was for him to see me, and he was ready. Smith had gotten me worked up, and the more I thought about wrapping my legs around Rape's neck, the hornier I got. But after that, I really needed for him to just pound me into submission, the way that Smith was apparently incapable of doing. I was rubbing my pussy raw, thinking about Rape.\n\nI hit the #1 on my cell phone and it called him. His phone kept ringing and finally went to voice mail. He must be really busy for him not to take my call. I got up and decided to try and cook something. This would be an adventure because I really didn't know how to cook much. I looked in the refrigerator and saw a plate with several steaks marinating on it. This would be pretty easy; I'd just put them in the oven to broil, and microwave some kind of vegetable. I turned on the TV and found a cooking show. This was perfect, even though the old fat woman on the show was making chicken, she was broiling it, like I am. She was broiling baked potatoes with her chicken. I could do that as well. Then I'd just make a small salad and voila, dinner. Raphe would be so proud of me.\n\nI couldn't believe I was doing this. My face was actually flush from the warmth of the oven. I felt like some kind of pioneer woman. About an hour later Raphe came in. He kind of half smiled at me and went into the bedroom. He was walking with kind of a limp and I had trouble reading the look on his face. I'd known that man all of his life and he wasn't that complicated, something was bothering him. When he looked at me, no matter what we were going through, all I ever saw on his face was love. When my daddy told him, that he was disappointed that I'd picked some ex jock/carpenter to spend my life with, and I hadn't said anything to defend him, Raphe looked a little sad, but I could still see the love for me in his eyes. It was always there, under even the worst conditions. But right now, when I looked at him all I could see, was pain, and sadness. In the back of my mind I knew something was wrong. \n\n\"Raphe honey, are you hungry?\" I asked.\n\n\"I made us dinner\" I said proudly.\n\n\"It smells good,\" he said quickly, \"I hurt my back falling off the ladder.\"\n\n\"I had to go to the emergency room. They gave me some pills for the pain, they've got me so sleepy, and I almost couldn't drive home. I'm going to bed,\" he said. Then he disappeared into the bedroom and closed the door. I turned off the oven and didn't know what to do with the food, so I just left it on the table. Raphe would handle it later or tomorrow. We'd had sex under worse conditions, so I'd just wait for his pain to lessen then he'd want me.\n\nI went into darkened bedroom and got under the covers. I could feel the warmth radiating from Raphe's body. I was starting to get wet already in anticipation. I turned to Raphe for a kiss and found myself staring not at his face, but at his feet. I shook him, and he screamed.\n\n\"Raphe what's wrong?\" I asked.\n\n\"Any movement hurts my back,\" he said.\n\n\"Well why are you lying that way?\" I asked.\n\n\"I'm using the pillows to elevate my feet over my head to promote blood flow,\" he said.\n\n\"Do you want me to get on top?\" I asked\n\n\"I'm tired,\" he yawned, \"The pain pills have knocked me out.\"\n\nI just laid there for a while, part of me was so frustrated that I thought about going out and getting my self off, the other part sensed that something was wrong.\n\nFinally when I was almost asleep I said \"Good night Raphe, I love you.\" The next thing I knew I was wide awake. For most of my life, Raphe had always told me he loved me. He was the first of us to say it. And on the rare occasions that I did say it first, and believe me there weren't that many, he always said it back within microseconds.\n\nThis time he just mumbled something that was almost unintelligible. Though my conscious mind couldn't really make out the words, my subconscious picked up on it and was wide awake. Raphe's mumbled reply sounded a lot like, \"Tell it to Smith.\"\n\nAll of a sudden, my mind was firing on all 8 cylinders. There were 2 possibilities here. One was that Raphe was getting more than a little jealous of the time I spent with Smith, and was avoiding me and sulking, like the little boy he'd always been. The 2nd and worse scenario was that Raphe knew about me and Smith. \n\nI couldn't get to sleep; my mind just kept going over all of the facts that I had. I flipped over and turned my head near his. I tried to snuggle with him as gently as I could and as soon as my hand touched him he jerked away from me. I dozed off for a second and when I woke up he was gone. He couldn't have gone to work, it was only 3 a.m.\n\nI finally found him stretched out on the sofa in the living room. I went back to bed, but set the alarm to wake me early in the morning. I woke at 6 a.m. to find that he was already gone. I still didn't know whether or not he knew, but he was definitely avoiding me, and it didn't feel good.\n\nI went back to sleep and woke up at my usual time so I could be in the office at 9 a.m. When Smith arrived at 10, I took him his morning Latte and scones and waited to talk to him. Smith drank his coffee and scanned the financial pages, I was supposed to simply wait for him to finish. This was another thing I didn't like about him, his needs were so much more important than any one else's. Was this the way I treated Raphe?\n\nI'd never realized before now how much he must love me to put up with it.\n\n\"Is there something we need to discuss, my sweet,\" he said.\n\n\"I think Raphe knows about us,\" I said quickly.\n\n\"Good,\" he said, \"That should help to speed things up considerably.\"\n\n\"What?\" I said\n\n\"Yes, that means you can divorce him when it's time and be with me. You and I are alike in so many ways,\" he said.\n\n\"We both enjoy the finer things in life. We both are motivated to excel. We are compatible in everyway, we belong together,\" he said.\n\n\"You've outgrown the hay seed carpenter. He simply can't do the things that I can for you. He isn't my equal anywhere,\" he continued. I was shocked, so I started nodding my head as if I agreed with him, while I walked back to my desk. I needed to think about this. What Smith had said would have pleased my father, and up until yesterday me, to no end. My father had always thought that Raphe was beneath me. But Raphe had never shown me anything except love. He had constantly sacrificed to be with me. Smith on the other hand kept me around as a convenience. I was Raphe's entire reason for living, his world revolved around me. Smith's world was centered on himself, and he occasionally found time to fuck me. \n\nRaphe never failed to curl my toes up, he made getting me off a priority when we had sex, and until a few days ago, our sex life was everything I wanted. Smith had yet to satisfy me. Raphe constantly told me how much he loved me; he'd do anything for me. Smith had never told me even once that he liked me or that I was pretty even. Even this morning all he said was that we belonged together. As if it was a merger of companies, to ensure both of better revenue.",
        "Raphe\n\nI got out of my truck, and pulled two bags after me. I walked up to the door of the dark apartment and juggled the bags and my keys. I turned on the lights and put the bags down on the table. I gently knocked on the door, leading to the upper still hidden level of the apartment. Almost instantly it opened as if she'd been waiting for me.\n\n\"I was not sure you would return,\" she said.\n\n\"I wasn't sure you'd open the door again, or even still be here,\" I replied.\n\n\"I have to trust you,\" she said stepping into the kitchen.\n\n\"What have you here?\" she asked.\n\n\"Well I don't know what you normally eat for breakfast? Or what you've been eating while you're hiding out here. But I brought you this,\" I said pointing to one of the bags.\n\nShe opened the bag and smiled. I'd brought her a double sized Mocha Latte, and a croissant with a selection of toppings she could add.\n\nShe nearly doubled up in laughter, and looked in the other bag. She looked dubiously at my Breakfast McClowny, as if it would leap off the plate and bite her. She also smiled when she smelled my strong black coffee.\n\nThe Breakfast McClowny was a totally American invention. It consisted of one of those synthetic egg patties, four strips of bacon, American cheese, and a sausage patty, all crammed between the halves of a sliced English muffin. Most people got fatter, just looking at one. Eating one was known to completely harden the arteries and clog them full of greasy fat deposits. The breakfast McClowny, was the reason America was so damned fat. Burger Queen had nothing like the Breakfast McClowny.\n\nShe shook her head as she gazed in wonder at the decadent sandwich. Then she ran around the kitchen turning the lights on and setting up plates as she had the night before. She for some reason got out knives and forks, and 2 cups. Then she ran back upstairs and came down with a small bottle of orange juice. She got glasses out of the cabinet as I sat in wonder.\n\nAs she was doing all of this running around, I took time to really look at her. Seeing her clearly in the light now, brought a couple of things into sharp focus. One was that this was a truly beautiful woman. \n\nNot in that Las Vegas, California, blonde silicone bimbettes style. She was just a truly beautiful woman. She was the type of woman that, as she aged and grew lines in her face, and maybe sagged a bit here and there; would never have to worry about it, because all of these supposed flaws, would add character to her face. Instead of serving as the signal to head to the nearest plastic surgeon for Botox, the wrinkles and imperfections would add to her beauty. From the cascading curls to the wide spaced eyes and upturned nose; and especially her lips and mouth, this was a true beauty. I could spend hours describing her smile, the impish way that one side turned up and the other slightly down at the same time. Or the way she crinkled up her lips to express, both joy and confusion, within heartbeats of each other. \n\nThough tiny, she was also very proportionate. Her proportions, created the illusion of size where there was none. Her breasts, when measured in terms of volume, were no where near Kathy's but when placed on her tiny frame appeared larger. I've always heard about French women's incredible legs and the reasons for them. I've heard it's because they walk everywhere instead of driving, or from walking up the stairs of the Eiffel tower, but I had never seen legs like those anywhere. And at the top where they met, was the most perfect ass I'd ever seen. I have heard about men who have a foot fetish, hell I've even seen videos of guys jacking off between a woman's feet. Until this moment I had never even considered the feet as an object of sexuality. But I could understand it now. \n\nMy Kathy would have seemed as big and ungainly as a cow, standing next to this woman. And dressed up in fancy clothes, it would not even be close.\n\nAgain I marveled as she took the items I'd presented and turned them into a feast instead of a meal, and seemingly enjoyed doing it. As we sat down across from each other, she quickly bowed her head for a few scant seconds and then raised it, smiled and began stuffing food down her throat with a gusto that had to be seen to be believed.\n\nI looked at my plate; she had destroyed my Breakfast McClowny. She'd cut it in half and separated the components into 2 breakfasts. We both had a couple of slices of bacon, half of a sausage, and egg patty, a half of an English muffin that she'd spread jam on. We also each had a small glass of juice, and a cup of my black coffee.\n\n\"I hate that sweet, fake coffee you brought me,\" she said, \"It tastes like sheet, why do you all drink it?\"\n\n\"I don't drink it\" I said, \"But people here, think that you drink it like that in Europe.\"\n\n\"I need strong black coffee when I work,\" she said as she bit through a slice of bacon. \n\nShe reached for one of my pieces of bacon, and my hand reached out to stop her.\n\nAs our hands touched, an electric feeling went through me at the contact.\n\nShe smiled again and then playfully took my bacon. \"We'll share it,\" she said with mischief in her eyes.\n\n\"Wait,\" I asked \"Why are we sharing my bacon?\"\n\n\"Because Raphe Jenkins, I already ate mine,\" she smiled.\n\nI had never heard my name sound so sexy before. When she said Raphe Jenkins, I knew why my mom had given me that name. When she said Jenkins, it came out like jean-cans; and my dick just got harder than a bar of steel. \n\nThe only woman I had ever been with in my entire life was Kathy, and she'd never affected me like this. The thought of Kathy brought my mood down again, and Amana noticed.\n\nIt felt really strange, first I get a hard on from some French artist simply saying my name; meanwhile the thought of some half bald 50 year old asshole's dick, in my wife's mouth, made me want to gag every time I saw her or thought about her.\n\n\"So what will you do while I work today, Rape Jenkins?\" she asked.\n\n\"I'm going to frame out the enclosures, on the deck, so you can work inside and I won't disturb you\" I said.\n\n\"Why do you not work on the racks you have started in the great room? That way we could talk while we work,\" she said.\n\n\"That would be fine\" I said, surprised.\n\nI'd always imagined that artists would be temperamental and standoffish, like that fuck head Smith.\n\nAmanda seemed so grounded and down to earth, that it was hard to imagine her as a famous artist.\n\nI went out to my truck and got my tool belt and tool box. I brought the things I'd need into the living room. As I started to work I noticed that Amanda had already got a canvas from somewhere and was hurriedly adding shapes to the blank page with a small brush. It was fascinating and I thought I could watch her forever. She seemed to alternate between very deliberate and carefully measured strokes, and furious haphazard ones. Again it was not the behavior or the style I'd expect from a famous artist. I think the thing I loved watching the most though was the way her butt jiggled as she painted. \n\nI was afraid to start my saw, I thought the noise might distract or startle her. When I saw her sit down in front of her canvas and look at it, I raised my hand and pointed towards the saw. She smiled and nodded that it was OK. She came over and watched me line up the pieces and then cut through them. \n\nWe started to talk and she told me why she was here early. It seems that she didn't like any of the pieces she'd done for the show. They were just more of the same thing she'd already done. She didn't think they were inspired, and felt like she was just selling out. The buyers and collectors would of course be happy because she'd panted a lot of things that looked like they were \"Amanda Anderson\" paintings, but she felt as if she should be breaking new ground, and continuing to explore her art. So she'd come in early to review her new pieces and try and do something different, hoping that the change in location, culture and environment, would set her creative juices flowing.\n\nI in turn told her about my sham of a marriage. I left out the names, unsure of how she'd handle finding out that her agent was screwing my wife. She was very sympathetic. It was actually cathartic for me to get it out. I hadn't told anyone about my situation except for the lawyer and the PI.\n\nAs afternoon rolled around, we went out to eat. We found a nice little restaurant down by the river. As good as it was, I couldn't handle another Burger Queen meal for a while.\n\nAmanda as I expected was great company, she made me laugh, and pointed out several of the differences between life in our country and in hers. \n\nSo it went for the next few weeks, I spent all of my days in the apartment with Amanda, turning it into the perfect studio for an artist. At night I arrived home barely in time to slip into bed and then get up before Kathy, and get out again first thing in the morning. The few times we did actually run into each other were hellish. With Kathy asserting that we need to talk, and me claiming to be too busy or too tired.\n\nFinally 2 weeks before Amanda's show, she \"officially\" arrived in town. She told Smith after seeing it that she loved the apartment and the rack system and outdoor enclosures for her work. She also requested that the craftsman responsible for the work be present, because there were changes and ideas she had, that she would like handled by him as well.\n\nSmith told her he'd see to it.\n\nI was happy about this development because it meant that I'd get to spend more time with Amanda, and that we'd be able to go places without worrying about someone recognizing her. Little did I know that my little bubble of happiness was about to burst.\n\nI got a call from Smith requesting that I meet him in his office. I knew what that was about already. He was going to ask me to do the work that Amanda had requested,\n\nThe thing I wasn't expecting was that when I got there early, I walked in on Smith, with his hand up Kathy's dress inside her panties. Even though I had DVD's and pictures of them together, seeing it right there in front of me, was different. I'd really thought that all of my emotions on the subject of the two of them were contained. It felt though as if someone had just ripped my stomach out through my throat. Smith had this look of lust on his face that was beyond description. Kathy looked as if she was just putting up with it.\n\nWhen Smith finally noticed me standing there he snatched his hand out so fast that I thought he'd break his elbow. And Kathy immediately started with the classic line,\"Raphe, it isn't what you think.\"\n\n\"Let me guess, Kath,\" I said, \"Smith's hand is frostbitten by your icy demeanor, so he had to stick it in your pussy to warm it up.\"\n\n\"It's just a medical emergency, and you didn't mean to break your husband's heart.\"\n\n\"Come now old man, there's no need to be trite about this,\" said Smith.\n\nIt was the wrong thing to do, because at that point, I crossed the room and busted Smith in the face. There was a sickening crack, almost a popping sound as my fist contacted his nose. He fell over the desk and landed in a heap behind it. I started to go around the desk after him but stopped short. Neither of them was worth it.\n\n\"I told you if you ever touched her, I'd bust your ass,\" I hurled at Smith, \"She's all yours.\"\n\nHe was curled up behind the desk holding his nose and crying.\n\n\"Raphe wait,\" yelled Kathy, following me out of the office, \"We can fix this, it doesn't mean anything.\"\n\nI got into my truck and just drove away. I spent the next hour or so just driving around aimlessly. I had to get myself together, but I couldn't. I decided to do what the guys on TV always did in similar situations; you know go home and pack as much of my stuff as I can carry, then check into a motel. It didn't work, as soon as I pulled up the bitch came towards me. I put the truck into reverse and pulled back out onto the road with her running after me screaming. \n\nI decided that my best bet would be to just go do something I still felt good about. I needed an activity that would let me think while I did it. I also didn't want to check into a motel yet because with Smith's money it wouldn't take him long to track me down. So I'd check into a motel just before I went to sleep and check out as soon I woke up. If I used a different place each night, they would have a lot of trouble tracking me.\n\nNow that I knew, and they knew I knew, I needed to file first, so I called my lawyer and told him to make sure the papers were ready.\n\nThen I drove over to Amanda's apartment to work. When she opened the door, and smiled, it was like the sun coming out after a long, long rainy night. Her infectious good mood almost took me away from all of it.\n\n\"I was wondering when you'd get here,\" she said brightly, \"You are late.\"\n\n\"Come and see what we have to eat,\" she said.\n\nThat was the thing about Amanda; perhaps it was a European, or even a French trait. She was all about comfort. Eat, drink and be merry, no stress, the problems will work themselves out. \n\nShe had a breakfast spread that looked like it was waiting for a king. There were all sorts of muffins, and biscuits, coffees, teas, and juices, butters in differing flavors, jams and jellies, and spreads, cold cuts, bacon, sausages and ham. There were bowls of different types of fruits and melons, it was bizarre. If this was what she was used to, she must still be laughing at sharing my Burger Queen meals with me. \n\n\"What is all of this for?\" I asked\n\n\"All of this is for us,\" she said smiling.\n\n\"I called the agency, and told them I would need breakfast for 2. Come we eat, then you, tell me what has you so angry.\"\n\n\"No,\" I said, \"I don't want to talk about it, I just want to forget.\"\n\n\"Okay,\" she said, setting her mouth in that little pout she got sometimes.\n\n\"Then we just eat!\"\n\nAs she said this she nodded her head, one time as if she had just settled a major dispute, it was adorable.\n\nWith only 5 days left before the show, Amanda had a lot of work to do to get her new pieces ready. Besides that she had several sketches she was doing, that might or might not make the show. She still hadn't decided on a theme for the show. Sometimes she didn't have one, she simply showed off her latest works, and offered them for sale through a gallery or broker. Her last show, had taken in over 600 thousand dollars, with the agency getting thirty percent and other fees she'd netted about 290 thousand after taxes. Her goal was to make a couple of million dollars and then retire. Part of the problem she had was, she just couldn't resist traveling and buying things. It was as if she was looking for something, but she didn't know what it was.\n\nSo after eating, Amanda made me promise to finish the racks in the smaller room upstairs that she used for working. The great room, as she called the living room would be used for an impromptu preview, for some of the gallery owners and art critics before the show. Amanda would work in the great room, giving final touches to her finished or almost finished pieces in the great room, while I gave her places to hang or position the things she was working on now.\n\nI got my tool belt from the truck, and climbed the stairs. The first room I looked into, was not the studio, it was her bedroom. I don't know what I was expecting but this wasn't it. Kathy always had everything arranged neatly, and made sure I kept it that way.\n\nAll of her cosmetics and clothes were, lined up and organized according to item and color so she could put together outfits at the drop of a hat. Amanda's room in comparison was chaos. It looked more like a teenaged girl's room. There were things strewn all over everywhere. On the desk, a computer with a drawing program was turned on. A laptop with another graphics program running was on the bed, forgotten. The radio was on, and clothing and socks and shoes and panties and bras, and notebooks, and random sheets and scraps of paper were everywhere. I wondered how she ever found anything in the mess, but then it hit me. This randomness was like her, it hinted at all kinds of possibilities. It said that if you looked for it, you could find anything, but you had to commit yourself and look. It said don't count on things just being the way you wanted them to. It said don't make plans, just live.\n\nI closed the door and smiled for the first time that day, and went in search of the studio. I found it a few minutes later and wished that I hadn't, surprise, shock, and pain all vied for supremacy in my consciousness. The potent mixture of emotions brewed like soup in a kettle, and exploded out of me as rage. For the 2nd time that day I went off.\n\nAmanda had a nearly photographic memory for details, she had been doing character studies of the faces and people she found interesting. There was a large canvas of the homeless woman, we had seen in the park. The guy from the drive-thru window at Burger Queen was there, in all of his greasy pimple faced teenaged glory. There were a couple of me as well, and she obviously saw me, in a different light than reality did. But then there were several of Smith, and of Kathy. And there was another painting of Smith and Kathy together. I wondered when she had seen them.\n\nDid Amanda know about them? Did she know who they were? Maybe she'd been part of this whole thing from the start.\n\nSeeing those images just brought the scene from earlier this morning back me in all of its intensity. A red haze covered my vision and I just reacted. Amanda worked sometimes in water colors and there were large jars of paint in many different colors that she used for mixing her paints. I grabbed a full can of paint and threw it across the room where it exploded against the large canvas, splashing paint all over a couple of pictures of that smirking and snarky bastard, Smith. Without even thinking about it I screamed in rage and unloaded yet another can of paint against Smith and one against the pictures of my unfaithful wife. \n\nBy this time Amanda had come running up the stairs to see what was going on, there was a man with her, he was horrified. Amanda took one look at what I had done and reacted decisively. She stepped into the room and handed me another can of paint, and then pointed at the still untouched painting of Smith and Kathy together. Then she nodded and stepped back. I opened the can and this time more deliberately splashed the paint on the canvass.\n\nThen Amanda started giving me smaller cans of paint and I just threw them, ad hoc, towards the paintings until I couldn't lift any more. I fell to my knees completely drained. Amanda sat down next to me, rubbing my head and shoulders.\n\n\"This is what you are so sad about, is it not?\"\n\nI nodded my head, I couldn't face her. At this point the little man recovered from his shock and began yelling at me.\n\n\"Do you know what you have done?\" he yelled.\n\n\"Each of those paintings was worth probably 20,000 dollars. You'll spend the rest of your life paying for them\" he screamed, \"Oh, and you can't get away with this, the security system has video of you doing it. Just wait until I get you in court.\"\n\n\"You may not even be able to start paying her until you get out of jail,\" the man was furious.\n\n\"Why are you so angry?\" Amanda asked him calmly.\n\n\"These are my paintings, not yours,\" she said, \"There will be no court, no charges, and no payment.\"\n\n\"And if your only concern is your commission, perhaps we can arrange it so you don't have to worry about receiving compensation for any of my work in the future,\" she continued.\n\n\"Perhaps you did not notice that, in the end I helped him throw the paint.\"\n\n\"But I was just,\" began the little man.\n\n\"You were just leaving,\" finished Amanda.\n\nKathy\n\nThis part of my, of our story is, as my daddy always said, where the rubber meets the road. When Raphe walked in and found Smith's hand in my pussy, I felt like my life had ended. Lately Smith had been using me more and more, but it was always the same.",
        "The comparisons between him and Raphe were not only inevitable, but clear.\n\nSmith just fucked me, and not even that well. To Smith I was something he could use as he wished, because he had paid for me. No, he didn't pay me to fuck him; but he gave me things and hinted at a life outside of work. The life I'd always thought I wanted. He never told me he liked me, let alone that he loved me. In retrospect, I realized that he didn't love me. He expended time and effort on me because like his car or his watch, or any of his other possessions, I was the best available at the time that he could afford. I reminded me of one of those things you see on the internet, the men's version of the vibrator. I was his pocket pussy, only I was a walking talking, breathing one. Instead of paying 10,000 dollars for a lifelike sex doll, Smith was paying more than that for his own sex doll, me.\n\nThat morning was just another example of it. Our, or should I call it \"his\" sex life was nothing more than us going to a motel, or lately it had been his office, he'd pull up my skirt or dress (I could only wear skirts and dresses, I wasn't allowed pants) he'd stick it in me, pump me 7 or 8 times then grunt and squirt, done. I always expected him to say \"get out bitch,\" or hand me 5 dollars after we were done, and I was getting sick of it. I no longer felt like myself. I was used to being sought after, and appreciated. I was used to being loved. I was used to Raphe, damn it I missed him. \n\nIt was then that I realized that after all of our lives, after all of that time; that I actually did love Raphe, far more than I wanted to admit. I had simply taken him for granted, because he had always been there for me in any way that I needed him.\n\nI missed his puppy dog eyes, every time he looked at me. The way he would do literally anything I asked him to. I missed, the way that he put me first, even over his own needs. I remember waking up late, one morning when I had an interview, I called Raphe and told him that my clothes weren't ready. He came home from work, made me breakfast and ironed my clothes, while I showered and put on my make up. Smith would never do anything like that for me. I didn't even know where Smith lived. How could I have been that dumb? My daddy had obviously raised one stupid child.\n\nThose were the thoughts going through my mind as Smith just simply stuck his fingers in my pussy. He didn't kiss me, or touch me; he just pulled up my skirt, stuck his fingers in my panties, found the hole and stuck his finger in. It hurt, he didn't even lick them first for lubrication, and since I wasn't aroused, I wasn't making any of my own. When I moaned it was from pain not from being turned on, I guess he didn't know the difference, or just didn't care. I wanted to yell out \"My pussy tastes really good, just ask Raphe,\" but I didn't dare. He barely even shut the door and didn't lock it. It was as if he didn't care if we got caught. I was his property, he could do whatever he wanted to me, whenever he wanted and he wanted people to know it.\n\nI had been trying all week to talk to Raphe. He wouldn't talk to me at all. He knows that I need a lot of sleep (he should, know it because he's been taking care of me for so many years) he always comes in long after I'm asleep, and leaves well before I'm awake.\n\nSometimes he doesn't even sleep in the same bed with me. I can't believe we've gone so long without making love. I was even more certain now, that Raphe not only knew about Smith and me, but had conceded me to Smith. From the way that he looked at me now, he tried to hide it, but his puppy dog eyes and expressions of unending love were gone.\n\nSometimes from across the room when I caught him looking at me, all I saw in his eyes was disgust. Raphe had always been one of those gentle hearted, \"good ol' boys,\" he didn't have a harsh word to say about any one. Now he always had a much harsher expression on his face; a cynicism that hadn't always been there. I knew that this was my fault. I had taken a good thing, a good man and ruined him.\n\nI know that most of you won't believe this, because the picture painted of me so far makes me seem like a heartless, cheating, cold hearted snake of a bitch; but I swear to you that I was right then and there, getting ready to tell Smith to get his 50 year old, cold fish,wrinkled, liver spotted, arthritic hand, out of my husband's pussy, when Raphe walked in and everything changed.\n\nI was in so much shock, that I don't remember any of the words that were said. I remember Smith yanking his fingers out of me and saying something to Raphe.\n\nI remember sitting there on the desk with my legs open, so I jumped down and closed them. I know I said something really stupid, and I remember Raphe, with pain etched on his face, fighting a battle to retain his control and then turning to leave. I remember as Raphe did turn to leave he turned back and hit Smith harder than I could even imagine. I still remember Smith flying over the desk leaving a trail of blood and just lying there, crying. I remember chasing Raphe, trying to get him to talk to me, so I could tell him how I felt. I needed to tell him that I was wrong, that we could fix this. I would do anything he wanted, live anyway he wanted, but it was too late he was gone. Had Rape actually said the words, \"She's all yours?\"\n\nI went back into the room to get my keys and found Smith still lying there whimpering.\n\n\"Is he gone?\" he asked, with obvious fear on his face.\n\nSmith looked as if it hurt, to talk. His nose was swollen badly, obviously broken.\n\nI helped him to his feet and told him to call his doctor. I drove him to his doctor's office and waited while they examined him. I sat there while Smith lied to his doctor. He told his doctor that he had walked into a door that he thought was unlocked, but it wasn't. When the doctor looked at Smith, he looked as if he didn't believe him. Smith then came up with lie number 2; he told the doctor that he'd taken up boxing. The doctor told Smith that at his age he should have picked a different sport. He gave Smith an injection to numb the area, and set his nose. This involved a lot of screaming, which I thought still wasn't enough for the pain that Smith had caused Raphe and I. He gave me a prescription for more pain meds for Smith, and I drove him back to the office. It seemed strange under the circumstances that Smith wouldn't let me drive him home, but I didn't have time to think about it. I knew that Raphe would eventually go home and I needed to be there when he did.\n\nI was in luck; I got there before he did. I could tell because everything, including \n\nAll of Raphe's things were still there. I paced the floors thinking of exactly what I would say to him. I counted on years of him doing exactly what I wanted him to, to get him to listen to me. I was willing to do, to give him anything he wanted, just to forgive me.\n\nThank God for Ford trucks, I heard that truck pull up even before it got to our drive way. I ran out to meet him, which was probably a mistake. Raphe looked up and saw me and immediately backed out of the driveway. H didn't even slow down as I chased him down the road.\n\nI went back into the house and just started crying, this wasn't characteristic of me. As I've said before my daddy raised me to do great things, I was a driven success oriented person, not some whiney little mouse. But in this case, I thought of everything I'd done all my life, and I couldn't see anything great that It had gotten me. If Raphe and I were to save our money and be careful, he could have a successful contracting business, and I could be great in business. Maybe we'd be rich or at least well off, but in the end, the greatest thing we had going for us, was each other. When old people, be they rich or poor looked back on their lives, the things they talked about the most weren't the things they had, or the things they'd bought. They talked about the things they'd done and the people they'd done them with. In trying to grab for myself the life that I thought I wanted, I had almost given up the person that sharing that life with would've meant the most.\n\nThe people that Smith had introduced me to, the rich and important people, they hadn't really accepted me as one of them, as an equal, they had accepted me as Smith's employee. I didn't think any of them men or women would have recognized me again if they fell over me. Maybe the men might've recognized my tits, they spent enough time talking to them, and staring at them. So why did I need them? I didn't, what I did need was to talk to Raphe so I could start getting our lives back together.\n\nI looked at the clock, over 2 hours had passed, and I couldn't believe that I'd spent that much time, crying in my beer. I needed to figure out a plan to get my man back.\n\nMy cell phone started ringing; I picked it up, while I looked into the mirror.\n\nI looked like shit; my make up had run down my face, giving me a clown-like appearance. If anyone could see me like this they'd wonder what had happened to me. I was supposed to be pretty. If they saw me like this they'd be joking about it forever. The face that launched a thousand quips. \n\n\"Hello\" I said, my voice giving a strength and determination that I didn't feel.\n\n\"Kathleen, where are you?\"\n\nI'm at home where do you think I am?\" I replied.\n\nIt was Smith, of course.\n\n\"We have problems, something has happened to Amanda\" he said\n\n\"I'll be right there\" I said into the phone. This would give me the chance I needed to quit working for Smith. I wanted to do it in person, I wanted be professional about it. I also wanted to keep any emotional involvement out of it. I supposed that he'd want the same thing. To keep this all quiet. After all he had his reputation to look out for, as well as the fact that being in an affair with a married subordinate couldn't be good for his career.\n\nWhen I got to the office, it was all I could do to keep from laughing. If I'd thought that I looked like a clown with the make up running down my face, at least I was able to wash my face, and re-apply the make up. Smith looked far worse. His nose had swollen up so much that it looked like he had a balloon sticking out of his face. His cheeks were also swollen, and his whole face was red. In the hope of maintaining professional decorum, I resisted my urge to laugh.\n\n\"What's wrong with Ms. Anderson?\" I asked.\n\n\"Her personal manager called me and told me something about some ruffian destroying some of her pieces,\" said Smith.\n\n\"I called her before I called you, and she said that the matter had been settled to her satisfaction, and everything is fine,\" he said.\n\n\"If everything is fine, why the hell did you have me come over here?\" I snapped.\n\n\"I have a marriage that is on life support.\"\n\n\"Which is why you should be here,\" he said.\n\n\"If you want to get him back, though I can't imagine why you would, this is what you need to do,\" he told me.\n\n\"You need to threaten to divorce him. Really scare the hell out of him, and make him come crawling back to you. If you present a strong front, fool him into thinking that we're going to be together then he'll come, running back with his tail between his legs. Then you can dictate the terms of your marriage, and not the other way around.\" he said.\n\nIn my weakened emotional state what he said made sense. I didn't even notice that he'd said, fool him into thinking that we'd be together.\n\n\"We need above all, to keep this quiet until the show is over,\" he said.\n\n\"If this show goes well, I'm on my way higher up the ladder and you'll be with me,\" he continued.\n\n\"But shouldn't I get a lawyer?\" I asked weakly.\n\n\"Heavens no,\" he said as if in shock.\n\nHis reaction to that question alone should have set off warning bells, but it didn't.\n\n\"We need to keep this quiet,\" he said.\n\n\"And don't worry, he can't do anything either, he has no proof of anything. He has only what he saw, or thinks he saw. And if he comes up with any accusations, I'll simply charge him with assault and use you as a witness to make him drop any divorce proceedings,\" he said confidently.\n\n\"Then after the show is over and that little French bitch, is on her way out of the country, the 3 of us will sit down and discuss this calmly. I'm sure we can come to terms one way or another,\" he said.\n\nRaphe\n\nOnce I'd had time to calm down, I realized the enormity of what my anger had gotten me into. We were sitting in lounge chairs out on the deck facing each other. Amanda amazingly enough was gently rubbing my temples with her fingers. She was doing some kind of a head massage. It felt wonderful, and I didn't want her to ever stop.\n\n\"Amanda I'm really sorry,\" I said.\n\n\"Sshhhhhhhh,\" she replied.\n\n\"If it takes me forever, I'll pay you back,\" I said.\n\n\"Shhhhhhhhh.\"\n\n\"Any arrangement you can think of,\" I said seriously. \n\nAmanda looked into my eye at that point; I swear I thought she was going to kiss me. \n\nThere came a timid little knocking at the door, followed by a very feminine voice.\n\n\"Oh there you are sweetie. I was wondering where you were,\" he said.\n\nIn the doorway staring at us and smiling was the largest man I had ever seen, and probably the gayest.\n\nHe approached us, and Amanda rose and hugged him, hard. Boy was I jealous.\n\n\"Victor Wang, meet Raphe Jenkins,\" she said happily.\n\n\"Now I know why you've been hiding,\" said Victor. As he spoke he looked at me, and I had the urge to put on more clothes, even though I was fully dressed.\n\n\"So what do you have to show me?\" he asked, \"Show me something new and exciting and brilliant.\" he pronounced it, \"Berrrrillleeeeannnnt!\"\n\nAmanda and Victor went into the great room, and looked at her work. I followed them and watched, sensing that Amanda and I still had things to discuss. He went quietly from painting to painting, and looked them up and down; he seemed to give no more than a cursory glance at each one.\n\n\"Hmm,\" he said, looking quickly at a landscape.\n\n\"Ah,\" he said, looking at what I thought, was a beautiful painting of 2 small children.\n\n\"Well,\" he said, \"You painted em.\"\n\nHe had kind of a snarky expression on his face. The expression alone told me that he didn't like any of them.\n\n\"What do you think?\" asked Amanda.\n\n\"Well honey, as I said you painted em; that alone will bring you a bunch of money from the rich idiots who think they can own art.\"\n\n\"But,\" said Amanda\n\n\"But, between us honey, just looking at them bores the shit out of me; and not in a good way.\" He paused for a moment and then began speaking again.\n\n\"It's kind of like when old rock stars can't come up with anything new and they put out a greatest hits album, sometimes when they haven't even had any greatest hits. Kind of like a dash for cash, before they settle down and become music teachers,\" he added.\n\n\"Have you got anything else?\" he asked in a dubious voice, \"Anything new and original?\" \n\n\"Well I was working on a set of character studies, but they've been irreparably damaged and will probably not be recovered,\" said Amanda timidly.\n\n\"Any chance of you just re-doing them?\" he asked.\n\n\"Well if you look at them, I'll think about it but, no I think the subject matter is too painful on a personal level,\" she said.\n\nIf I hadn't realized that I was falling in love with Amanda before, it became obvious now. This guy was some kind of art critic, who, though he was supposed to be her friend had told her, pretty much what she told me. He thought the work she'd brought with her from France sucked. Oh they were good paintings and would sell for thousands of dollars, but they would do nothing to advance her reputation as an artist. Even knowing this, she was nearly refusing to repaint the works upstairs for fear of hurting me. And even as she said it, her eyes locked with mine.\n\n\"If you like them, if you think they're good, she'll redo them,\" I said quietly.\n\n\"Well sugar let's take a look,\" he said loudly.\n\nAs he passed his bulk through us, he looked at both of us in turn, and then held his hands up between us as if cutting, or karate chopping something. \n\nAmanda and I looked at each other, we were both puzzled. She shrugged her shoulders in the universal \"I don't know what the hell that meant,\" gesture.\n\nWe followed his bulky figure up the stairs, with Amanda pointing the way to the studio as we reached the top.\n\nVictor stepped into the room and looked at the carnage that was left from my rampage. He looked very slowly at the room, pausing and staring intently at certain items; then he backed up nearly knocking us out of the room. He shook his head negatively and looked at me. I sheepishly looked at my feet with my hands jammed firmly into my pockets.\n\n\"Get the fuck outta here!\" he said in a high pitched tone that rose as he spoke.\n\n\"Why didn't you show me this first?\" he asked excitedly.\n\n\"Amanda you have to find a way to duplicate this room in its entirety,\" he yammered excitedly.\n\n\"The rage, the raw emotion, the angst, just the pain,\" he practically screamed.\n\nThe only pain I understood was the headache his voice was giving me.\n\n\"This is what you've needed girl, this is it! Obviously you had something to do with this,\" he said pointing at me.\n\n\"You're not hitting her are you?\" he asked.\n\n\"Of course not,\" I snapped.\n\n\"Why would you ever think that?\" asked Amanda\n\n\"Well sweetie, the tension between the two of you is so thick, you can touch it,\" he said, \"So I thought that maybe, you'd had a fight, and this was the result of it.\"\n\n\"Make sure you do your next set of paintings after a round of make up sex!\"\n\n\"Can I get a crew over here to start taking pictures for my article, or will you give me exclusive access before the show?\" he asked excitedly.\n\n\"Uhm, before the show,\" said Amanda, \"We have things to discuss and to work out.\" Victor waved at us and headed for the door mumbling loudly as he left.\n\nAmanda just stared at me, while I stood there like a deer caught in the headlights.\n\nI didn't understand anything that was going on and I was hoping she'd explain it to me. But in typical Amanda fashion she merely looked at me and then went very carefully back into the room, and examined everything. Every detail of the room fell under her scrutiny. Then she dashed out telling me not to move. She ran into the jungle that she called her bedroom, then, I heard things flying around the room, while her voice excitedly swore in a mixture of English and French. \n\nShe emerged a few moments later with a very sophisticated looking camera. Maybe it wasn't that great, but what do I know about cameras? She paused right in front of me, stretched up onto her toes and kissed me. She kissed me right on the lips, I was shocked. Other than my mother, Amanda was only the 2nd woman to ever kiss me. It was only a brief peck, but it spoke volumes for what could possibly follow. The events of the past few moments had caused all of my problems and pain to be temporarily forgotten.\n\nI watched as she took photos of first the entire room from nearly every angle imaginable. Then she went back and took photos of every painting from every angle imaginable. She was making little cooing sounds as she worked. Then she put the camera down and started taking measurements of the rooms dimensions, the placements of the windows, she even pulled out a gizmo that measured the intensity and direction of the light in the room. She held up one tiny but determined finger, to hold me in place, so I didn't move. She pulled out her cell phone and punched in some numbers. When the connection was made, she started speaking in rapid fire French to whom-ever was on the other end, then she waited. When she began speaking again it was in English.\n\n\"No I cannot talk to him about this, and it must be done immediately,\" she said.\n\n\"I am sending you pictures in the next few moments. I will also send measurements, the room must be duplicated in its entirety exactly as is,\" she said.",
        "\"We will have 2 rooms. The front entry will be the normal gallery and will feature my new French collection. Further back we will have the special room; it will contain my new works,\" she continued. \"Entry to the main hall will be normal policy with an extra admission cost for the 2nd room.\"\n\n\"We will work out all of the details when we meet tomorrow. We will need to change the contracts as well.\"\n\n\"Well, our agreement was only to show the paintings I brought with me from France, so it seems like the new paintings must require re-negotiation. But if you do not agree, we can do the show with the French works only as previously agreed upon and I can arrange for another showing of my other work with another agency,\" she said in a no nonsense tone. I had gotten used to Amanda the woman and Amanda the artist. But Amanda the business woman was a completely different animal.\n\n\"I have found several of your employees to be...how do you say it in English?...lacking.\" she said.\n\n\"Yes yes, we will meet tomorrow,\" she snapped, and then she hung up the phone and went into the bedroom. There she fed her sheets with the measurements into a scanner, and sent them somewhere. She followed this up by taking the memory card out of the camera and uploading some of the pictures somewhere.\n\n\"Raphe Jenkins, where shall we eat tonight?\" she asked me.\n\nHer smile was very different from the way she normally looked. There were far more teeth showing, but the overall expression wasn't happiness, it was victory, and conquest, and a hundred other more subtle emotions all rolled into one facial expression. It was like a hungry wolf staring at a cornered rabbit. \n\nAs she faced me, the smile morphed back into the expression I was used to seeing from her. This smile had fewer teeth and the sadness in her eyes was back, or maybe it was sorrow for me.\n\n\"I know you are not feeling very good right now,\" she said. \"I will do whatever I can to make it better for you. But right now there are many, many things we must discuss, and as you know I like to talk over food.\"\n\n\"So where shall we eat?\" she asked smiling.\n\n\"Texas Roadhouse\" I laughed.\n\nKathy\n\nRaphe didn't come home at all that night. Though I had listened to Smith's ideas on how to handle him, I had my doubts. My idea was to try and talk to Raphe anyway, and use Smith's plan as a last resort. What Smith didn't know was that Raphe had 2 things going for him. He had used these 2 things successfully even back to his high-school football days. The first one was luck, maybe it was because Raphe was a good guy at heart, so good luck just seemed to follow him. Even when it would seem like he'd screwed the pooch, it always seemed to work out for him, and usually by extension me. But this time it seemed that we were at odds so I couldn't count on that luck helping me out. \n\nRaphe's 2nd benefit was the fact that he was unpredictable as hell. Even on the football field, defenders had a tough time tracking him because he just never seemed to run where they thought he would, or do what they thought he'd do. Smith should have known that from yesterday. I was sure that somehow Raphe would end up smelling like roses, and I'd be covered in shit.\n\nSo I waited up for him, to make sure he didn't do his little, slipping in after I'd gone to sleep trick, I stretched a blanket and pillows out in the doorway and slept there. That way he couldn't even open the door without waking me. I still tossed and turned all night. I woke at the slightest of noises looking for him. Finally at 3 a.m., I realized that my husband wasn't coming home. I also realized that I had driven him away from me.\n\nFor the first time in a very long time the tears rolled down my cheeks, and I couldn't stop myself from crying. I didn't want to be a tough strong woman any more; I just wanted my husband back. \n\nI got into the office later than usual and there was a flurry of activity. Everyone from the temps to the secretaries to the agents, were scurrying around as if their jobs depended on it. I wanted to scurry too, but I really didn't understand what my job entailed other than sucking Smith's dick on demand. I wondered then what my daddy would think of my destiny for greatness. I know how my mom would feel though. She'd say quietly, because my mom never yelled, or even raised her voice, Well Kathy, you've succeeded and you've failed at the same time. Mom always liked to lead with something positive.\n\n\"You've succeeded beyond your widest dreams in a couple of areas, so kudos to you girl. You did fail in one minor area, though, so next time we'll have to be more careful there,\" she'd say.\n\n\"Let's look at your successes first. In terms of chasing away the only person who loved you more than your daddy and I do, you've succeeded, good job!\"\n\n\"In terms of becoming the biggest whore the county ever produced, you've succeeded, good job.\"\n\n\"In terms of holding your marriage together, well we're probably going to have to write that one off as a loss, but we'll do better next time.\" I could hear my mom saying it, as if she was standing right next to me.\n\nBefore I could start crying again the door to Smith's office opened and I heard screaming coming from inside as one of the secretaries fled the room closing the door behind her.\n\n\"Don't go in there,\" she warned, \"One of the partners, a family member is chewing Smith's ass out.\"\n\n\"I thought Smith was a partner,\" I said.\n\nThe woman scurried away laughing. A few moments later the door opened again and I heard a fragment of the conversation.\n\n\"And do something about your fucking face!!\"\n\n\"You look a goddamned circus clown!\"\n\nI saw Smith come out, following a smaller man. The man had graying hair and was wearing what appeared to be a very cheap suit. His shoes weren't expensive or shined. Next to Smith he looked like a bum; but he radiated a sense of power like I'd never seen. He politely spoke or nodded to every one he passed, regardless of their function. He was even polite to the elevator operator. Where had I seen behavior like that before?\n\nIt was the way Raphe acted, he was polite to everyone we met. I used to be that way too, before I became important. Smith saw me and motioned for me to join him in his office.\n\n\"Who was that?\" I asked.\n\n\"We don't have time for questions right now,\" he snapped.\n\n\"For some reason we've been cut out of the loop. Something major has happened with Amanda, and as her representative from the agency, I should've been the first to know and to handle the problem.\"\n\n\"That little idiot Marcel came in here and told me something was going on, but when I called the bitch about it, she told me everything was fine. Now there've been new developments, she wants to re-negotiate, and she called the main office.\"\n\n\"Brandon was just here, he smells money and he is never wrong,\" said Smith.\n\n\"The fact that she wants to re-negotiate also means that she has something new,\" he said, hesitantly.\n\n\"According to Brandon, she hinted at going to another agency because we're not doing our fucking job. I have to do something to fix whatever happened, but I don't know what it is. If I can somehow make the little bitch happy again, I can still make this a success. But if I can't or God help me I lose this account, I could be out on my ass,\" he said seriously.\n\n\"But what would you do?\" I asked.\n\n\"What would we do?\" he snapped.\n\n\"If I'm gone, so are you, so get your head out of your ass worrying about your red-neck husband and let's get to work,\" he spat.\n\nIt was the first time he'd ever spoken to me in that tone or in that manner. I didn't like it, and again the comparison between him and Raphe was obvious. Smith, the sophisticated, rich man I'd idolized, when upset by business concerns started talking down to me with veiled threats, like I was a piece of shit. Why did this matter to him anyway, he'd told me so many times that this was all just a game. He had millions of dollars and he didn't need any income. \n\nOn the other hand even when Raphe's life was crashing down around him, caused by my betrayal, he'd never spoken to me like that. I realized that Raphe probably had known about Smith and I, and had continued coming home and had to sit there and be civil, even knowing what I'd done to him. He did it just hoping, I'd come back to him. I was a fool.\n\n\"Maybe she called and needed something and we weren't here. It could have been yesterday while we were at your doctor's office,\" I said.\n\n\"Yes,\" said Smith, \"That is entirely possible.\"\n\n\"And that's the angle we can play up,\" he said trying to smile, \"My face may actually help us.\"\n\n\"I'll go over there, and let her see me like this, she's not like you; she's a woman so she'll be sympathetic,\" he snapped.\n\n\"I'll explain to her that this injury was why I wasn't available to her,\" he said.\n\nSmith sat back in his chair and motioned me over to his desk. He swiveled his chair around to give me access and pointed towards his zipper.\n\n\"Smith, we got caught last time, just yesterday,\" I whined.\n\n\"Then lock the door and get over here,\" he said.\n\n\"But,\" I started\n\nSmith cut off the rest of my statement with a look. I should have expected it. The little man, Brandon, had taken Smith's balls, taken his power, so Smith needed to lord it over someone else, to feel good about him-self in turn. It wasn't about sex, I told myself, but even so, I knew it was wrong.\n\nThe hard knock on the door saved me. I turned quickly and opened it. The woman from before came rushing in carrying several papers.\n\n\"This was all I could get,\" she said excitedly, \"Apparently she has a new concept, and a partner for something very radical.\"\n\n\"How radical can painting be?\" asked Smith.\n\n\"I don't know, they won't give you any information,\" said the woman.\n\n\"You mean they won't give \"you\" any,\" snapped Smith.\n\n\"Nope, when I mentioned \"your\" name they clammed up,\" said the woman, \"Before that everyone was all excited, and talking.\"\n\n\"They're building a separate room and charging more to get into it. The 2nd entrance fee will be donated to a big charity. So there's lots of buzz about it,\" she said. \n\n\"A couple of the critics who've seen pictures of the exhibit are raving. And she and her new partner threw this together over night,\" said the woman.\n\n\"Maybe Ms. Jenkins can help you\" said the woman pointing at me.\n\n\"How the fuck, can she, help?\" asked Smith.\n\nThe woman turned around and got ready to leave the room, she stopped only when Smith bellowed \"where are you going?\"\n\n\"I don't have to take that kind of abuse from you Mr. Benson, I don't work for you, I work for the firm,\" she said curtly.\n\n\"I'm sorry,\" said Smith, \"Please, I'm just upset, forgive me,\" he whined.\n\n\"Well Ms Jenkins' husband is overseeing the construction of the special exhibit room,\" she said.\n\n\"I guess they need a good contractor to make sure they do whatever Amanda wants,\" she continued.\n\n\"He's so nice\" she said smiling at me, and then she left. Apparently everyone except me could see that my husband was special, I thought.\n\n\"He's so nice,\" mimicked Smith after the woman left. \"If he's so fucking nice, why'd he do this to me?\"\n\n\"OK you go over there and try to get whatever information you can get out of Lil Abner,\" said Smith.\n\n\"I'll go and try to charm my way back into the bitches' good graces. If there is money to be made here and we can pull this off, we'll come out on top,\" he said viciously.\n\nI drove over to the Art gallery on the east side of town where the exhibit would be held in 3 days. There were a lot of vehicles outside of the venue, and people were running around looking busy. I approached the door to go in and was stopped by security.\n\n\"What do you want, the venue is closed to the public,\" said a very cultured sounding man in a tight suit. The suit was tight because the man was a giant.\n\n\"I'm from the agency that represents Ms. Anderson and we need some information,\" I said showing my ID badge.\n\n\"Ms Anderson is not on sight,\" said the man \n\n\"Can I see Raphe Jenkins?\" I asked.\n\n\"Mr. Jenkins is very busy,\" said the man\n\n\"Tell him, it's his wife,\" I said, showing my ID badge again.\n\nHe looked at it again then took my badge and gave it to another giant man, spoke to him briefly and left. The 2nd man looked at me as if he was waiting for me to move so he could crush me. As I waited at the desk I thought about the irony of the situation. I neglected my husband and alienated him, finally betraying his love for me in the worst possible way. I did it because I wanted to be like Smith, and thought that Raphe just didn't have what it took to make it in that world. And now I had to wait begging for him, to agree to see me.\n\nIn a few moments the first giant returned, the expression on his face gave me no information. He politely returned my ID badge to me and smiled and told me to have a nice day.\n\nAs I moved towards the door, he blocked my entrance.\n\n\"Mr. Jenkins doesn't want to be disturbed,\" he said.\n\n\"But\" I sputtered.\n\nI got ready to start trying to plead my case, and watched as a teenager pulled up and got out of a car, with bags from Burger Queen and went right into the building.\n\nRaphe had obviously sent out for lunch.\n\n\"But\" I began again.\n\n\"Have a nice fucking day, ma'am,\" the guard re-iterated more firmly, through clenched teeth. \n\nAs I walked away dejectedly a car pulled up to the doorway. It was brand new 2011 Shelby GT 500 Mustang convertible. The car was so loud the engine's exhaust note drowned out the stereo. A tiny little woman jumped out, she was wearing a long blue smock-like shirt with a green t-shirt under it, pink jogging pants and purple fuzzy slippers. Her face was angelic and beaming, it was Amanda. Only Amanda could dress like that in public and get away with it. \n\n\"Nice car Amanda,\" said the giant.\n\n\"It's not mine,\" she smiled, \"It's a gift for my new partner.\"\n\nAmanda disappeared into the building, if she saw me waving at her she gave no sign, but I was sure she saw me. That meant that Smith's conclusion was correct, he was being frozen out for some reason, I wonder why I was included in that.\n\nWell at least I had some information for him and an idea to talk to him about later.\n\nWhen I got back to the office to compare notes with Smith, he was in an awful mood. He looked apprehensive as he saw me come into his office.\n\n\"So what did \"Joe Redneck\" have to say?\" he asked.\n\nI stiffened visibly at hearing the way he referred to Raphe, inside I wondered how he referred to me when I wasn't around.\n\n\"I couldn't get in to see him,\" I said softly.\n\n\"What?\" bristled Smith \"We pay his fucking checks, how dare he refuse to see you? And you're his wife,\" he snapped, \"No wonder you're so crazy about me.\" \n\n\"What did Amanda tell you?\" I asked\n\n\"The bitches' assistant's assistant told me that she was busy,\" snapped Smith.\n\n\"Well did you try to talk to her by phone?\" I asked.\n\n\"The assistant's, assistant's flunky, is handling all of her phone calls, and told me she was out, and to call her private cell phone,\" said Smith tensely.\n\n\"So did you?\" I asked again.\n\n\"I don't have that number,\" he sneered. \"Apparently with all of the increased publicity generated by the buzz about the new material, only those she considers important to the show are given the number.\"\n\n\"People like, Brandon, who I won't call to ask for it\" you've seen how that would go. Her head of security has it. Her assistant has it. Her new partner has it,\" said Smith.\n\n\"And\" he snapped at me \"Your fucking husband has it.\"\n\n\"Well that brings me to my idea,\" I said.\n\n\"You have an idea?\" said Smith incredulously.\n\nI wondered as he started at me, if he thought I was such a moron, why did he hire me?\"\n\n\"Yes,\" I said firmly.\n\n\"All artists and performers have managers and agents, right?\" I asked.\n\n\"Yes, of course,\" said Smith.\n\n\"Who represents her new partner?\" I asked.\n\n\"I don't know\" said Smith; I could see that the wheels in his mind were turning.\n\nHe reached across the desk and pulled me to him. He started trying to undo my top again as we sat there. I pulled away as if I had another idea. It was fortunate because the door opened and Brandon stepped into the office.\n\nSmith went white, seeing Brandon.\n\n\"I don't believe I've had the pleasure,\" said Brandon politely extending his hand.\n\n\"Brandon Benson, this is my assistant, Kathleen Jenkins,\" said Smith formally.\n\n\"Ah Jenkins, any relations to Mr. Raphe Jenkins,\" asked Brandon.\n\n\"He's my husband,\" I said.\n\nBrandon looked at me a lot more intensely then and simply said \"Interesting.\"\n\nI got the idea suddenly that he'd seen me before, or knew something that I didn't know. \n\n\"Would you excuse us Ms. Jenkins?\" asked Brandon.\n\n\"If you haven't got your dress for the show tomorrow, or need to do anything related to it, you might want to take the afternoon off to do so,\" he said.\n\n\"I wasn't aware that I was going to the show,\" I said.\n\n\"Oh yes, you really must attend,\" he said.\n\n\"I have a feeling that one way or another, you're going to be there so why not look your best,\" he added.\n\nAs I closed the door I heard Brandon's voice change as he started yelling at Smith again. Maybe he was just hard on Smith because they were related. Smith was probably the black sheep of the Family and they expected the best from him and were harder on him as a result.\n\nBut his idea was a good one; I did need to look my best if I was going to the show. Especially if there was a chance that Raphe would be there. I didn't think he would, after all he was just the head of the team of contractors, just an employee. But maybe he'd be there working, and If he saw me all dolled up, he'd realize that he still loved me.\n\nThen I could promise him that I'd changed, and that things would be far better between us.\n\nRaphe\n\n\"Amanda I don't want a suit\" I whined.\n\n\"But you must have this one,\" she said.\n\nI had already realized over the past couple of days, that if Amanda wanted something, she got it.\n\nThat Morning I'd gotten a hair cut, and not at a respectable Barber shop, either. It'd been at one of those frou-frou salons, where they serve cappuccino and all that crap.\n\nI had to admit though that my hair and face did look far more presentable. My scraggly half shaved face was a clean as a baby's ass. And Amanda had hidden my truck. She said I could have it back after the show. That was how she got me to go to the show in the first place. Right now I was driving her around in an amazing car. A Mustang you had to see to believe. This was a midnight blue, Shelby GT 500 convertible. To tell the truth I really didn't miss the truck while I drove it.\n\nBeing with Amanda had taken my mind off of all of my problems with Kathy. Her lawyers were working with mine to assure that everything, about the divorce would go smoothly. She, with her artistic nature had seen to it that I'd have my revenge against Smith, without having to bust his ass again, and still keeping mine out of jail. It would also be a more long lasting revenge that was far more satisfying. He'd taken the thing that was most important to me, my marriage and destroyed it. So we'd take the things that were the most important to him and do the same. \n\nBut back to the suit; \"Amanda, George says he never wears suits to anything, even when he met the President,\" I said.\n\n\"Very well Raphe Jenkins, when your band sells 50 million dollars worth of recordings, you can stop wearing suits too,\" she said smiling.\n\n\"But for now this is your first show as an artiste, and you must make a good impression. And this suit will look perfect, with our overall impression.\"\n\n\"The blue color of the suit really brings out the lighter blue of your eyes,\" she said staring at me.\n\n\"I'm an artist?\" I said, \"When did that happen?\"\n\n\"Zee other day when you set the art world on fire, by completing my paintings,\" she said.",
        "\"Why else did you think we've been doing all this?\" she asked.\n\n\"I thought I was working as your chauffer to help pay you back for ruining the paintings,\" I said, \"I thought that was why you had me driving your car.\"\n\n\"Raphe Jenkins, you are amazing,\" she said laughing.\n\n\"What's so funny?\" I asked.\n\n\"This is not my car\", she said, \"It is yours.\"\n\n\"My, car\" I said, \"I can't afford a car like this!\"\n\n\"Your share of our first painting will more than pay for the car,\" she said, \"If it does not, it will be my gift to you. Now try on the jacket.\"\n\n\"No ties Amanda, I'm not wearing a tie,\"\n\nKathy\n\nThe night of the show felt ominous. I now knew what my old high school teacher meant when he spoke about the sword of Damocles hanging over one's head. My dress though bought at the last minute was perfect. It was a shade of green that complemented my blonde hair. My back was exposed all the way down to my waist so there was no chance of wearing a bra under the dress. The front was very low cut as well. It caressed the under sides of my breasts and lifted them while concealing very little. \n\nRaphe used to say that I had an open drawer full of titties and I was showing them off, when I wore dresses like this one. I hoped that he'd be there tonight to see them. Even if he couldn't forgive me yet, I was going to play every card I had. If he saw me like this and wanted to fuck me, we'd do it right there on the side walk in front of everyone. I just wanted, no, needed my husband back. If he wanted me to, I'd quit my job, we could move back home and just start having all those kids he wanted. Whatever it took, from tonight onwards, my main focus would be him.\n\nWhen I bought the dress I did notice something, perhaps it was the beginning of middle age, or my sedentary lifestyle, or just too much rich food, but I was bigger around the middle and had to have the dress let out. The seamstress also added an elastic band around the middle to help tuck my tummy. My ass had never been a great feature of mine, but now it was a bit lower than before, and less springy. It didn't matter I'd hit the gym tomorrow, Tonight I looked good.\n\nSmith picked me up in a Limo. He had affected that bored rich guy look that I'd originally thought was so cool. You know how some people can be going to, or doing the most exciting things, and blow it off like they're not having a good time. They act like they're too cool for the room. Well tonight seeing it up close, I wonder what I ever saw in him. I mean how fucking stupid was I. He's 50, he's balding, I'm stronger than he is, and he's boring. He doesn't care a bit about me, and he uses me like a belonging. I gave up my young sexy husband, who used to worship the ground I walked on, for this. When he pulled the divider closed in the limo and reached for my breast, I pulled away from him, his time was over but he just didn't know it. He spent the rest of the trip sulking, and I could tell that he was on edge. Not getting any pre-show pussy was the least of his problems and he knew it too. We were both hoping for a miracle, but they weren't necessarily the same ones.\n\nOur first problem occurred when we got to the venue and didn't have VIP passes that meant that even though we got there early, our limo couldn't pull in front of the building. There were TV crews and reporters there filming and taking photos of the actors, rock stars and art critics etc. who did have VIP passes. We ended up having to walk nearly 4 blocks, and then had to go in the side entrance. From where we waited to get in we could see the VIP entrance. I saw several people that I recognized from TV etc.\n\nI even thought that I saw George Solomon the leader and lead singer or the Rising Rocks. They were my favorite band. He had some 6 foot tall 90 pound Swedish super model with him. I didn't get a chance to look because there was a distinct rumble and people started screaming. Then out of nowhere that midnight blue Mustang flashed into view. The top was down, and the Valet opened the doors and Amanda got out and took off the beautiful blue silk scarf she'd worn to protect her hair-do. Her hair was gelled back and had glitter in it. Every time the lights hit anywhere near her you could see reflections off of it. Her make-up was perfect, but not overly done. Deep blue eye shadow matched her dress, and that fucking car. Her dress was raw silk and beautiful. It molded to her every curve and accentuated what she had, and down played what she didn't. Her breasts though not large, where perfectly displayed, and even though I'm not gay, I wanted them. Her ass though totally covered was clearly present, every step she took only served to notify onlookers that it was there. The dress was a few inches longer than mid calf but a daring split up the back gave tantalizing views of her perfect legs. Except for a small window at breast level, the woman was totally covered from neck to just above the ankles but she still made me look like both a whore, and a nun at the same time. This was clearly her show and everyone could see it. I have never before been jealous of a woman, but tonight I was.\n\nWhen I saw Amanda's date, presumably the mysterious new partner that no one knew about, warning bells went off in my head. I only saw him from the rear profile as he got out of the vehicle and lovingly took Amanda's hand, as if it was the most precious thing in the world. I recognized that in both the gesture, and the way he held it. She looked into his eyes with complete abandonment, no one else here mattered except the two of them.\n\nI was surprised when George Solomon ran over to the 2 of them and patted the new partner on the back and then they began fake punching each other for the reporters. They were obviously having a good time here unlike some people, I thought looking at Smith. These people knew how to live.\n\nAmanda's new partner was probably more than just her partner, and he hung around with rock stars and God knows who else. His hair was cut just right. And his suit, it had a very long jacket almost frock coat like. It was the same midnight blue raw silk as Amanda's dress.\n\nAs we finally got into the building, I couldn't stop thinking about Amanda's man. Shit, I thought to myself, why the hell, am I worrying about Amanda's man when I should be trying to find mine.\n\n\"Smith, I'm going to look around the back of the venue for a few minutes,\" I said\n\nHe just grunted, and nodded his head; he was looking around for something or someone as well.\n\nI went behind the curtains and tried to get into the VIP room, and couldn't get in yet. Smith and I, as representatives of the agency would be in the VIP room for the special exhibit but were not allowed into the early viewing of the new works before the actual show. That was reserved for the beautiful people, and the very rich. Who cared, I was tired of rich people any way.\n\nI tapped one of the guards on the shoulder and asked him if any of the contractor's staff would be on hand tonight in the event of an emergency.\n\nHe said \"Nearly all of them were.\"\n\nHe also told me I could find them downstairs on the lower level playing cards and laughing at their boss.\n\nI wondered why they'd be laughing at my husband, but they were probably a bunch of good old boys making fun of Raphe being nervous about the show. I had failed him again because I was so busy worrying about my own ass, that I hadn't considered that this was what he'd dreamed of. This was what he'd consider to be success; having his own contracting business and doing important things like tonight. And I hadn't been here to share any of it with him.\n\nI went downstairs and got a few whistles and wolf calls at my dress. I smiled despite myself. It was always good to be appreciated. I wondered again what Raphe would think when he saw me. I looked around but didn't see him.\n\n\"Hey guys, is Raphe Jenkins around?\" I asked.\n\n\"Not down here with the working stiffs tonight,\" one of them said.\n\n\"Yeah Raphe's doing his other gig,\" they all laughed.\n\nAs I walked away I could hear them talking about me.\n\n\"Damn Raphe's getting all the women tonight,\" said one of them.\n\n\"And all kinds,\" said another.\n\n\"That's my type though, I like 'em slutty,\" said a voice.\n\nI kept walking.\n\n\"Yeah, she's OK, nice tits anyway, but her as is saggy, and her gut is soft,\" I heard someone say.\"2 more burgers and that bitch'll be a porker.\"\n\nI made my way back to our section, and watched as people continued streaming in. Most were looking at Amanda's paintings. They were beautiful, and most of them were already sold even though the show in the other room hadn't begun. I made my way over to Smith.\n\n\"What's wrong,\" he snapped, \"You couldn't find Barney Fife?\"\n\nI didn't say a word; I just stood there and stewed. Raphe was worth a thousand Smiths. I was just thinking about how glad I was that Raphe had knocked this ass, on his ass, when a voice over the intercom announced that the special show was about to begin.\n\nAll those present, with tickets to the VIP event lined up at the entrance to the inner room and showed their tickets and filed into the room. This room was set up differently. As opposed to many paintings like the other room had, there were only 7 paintings here. These painting were covered so we couldn't see them yet.\n\nI almost stopped breathing when I saw George Solomon sitting in the first row that was roped off. Apparently even in the VIP room there were different sections. I wondered how much money it cost to be seated in that first row. \n\nThe Master of ceremonies began speaking.\n\n\"Often, the thing that separates a great artist, from one who is merely good,\" he then paused.\n\n\"Is the ability to imbue their works with emotion, and the ability to reach out and grab their viewers; these artists have the ability to make people react and experience personal feelings when they look at a painting or see a sculpture or hear a song,\" he said.\n\n\"Artists like this come along very rarely,\" he continued.\n\nI could see hundreds of camera flashes going off and see video cameras angling for a better view. The doors had been left slightly open and people outside were peeking in. I know that this had been done on purpose because all of the four doors to the room were similarly semi-open. This would make the ones outside pay twice as much next time to be here, and the ones that were here now would have memories of this forever. Smith seemed to be staying as far away from me as his seat would allow, that was weird even for him. He was usually trying his best to let other men know that we were together.\n\n\"Tonight,\" continued the announcer,\"We have the privilege of being here for the unveiling of the latest works, of one of these extremely talented artists, who is herself at a crossroads in her career.\n\n\"I give you, the one, the only Amanda Anderson.\"\n\nAs Amanda's tiny form appeared on the stage every eye in the place followed her. She stepped up to the podium holding some cards to read from. It was almost as if she was at an awards ceremony and had a lot of people to thank. She radiated confidence, her every gesture was photographed and would be discussed over water coolers around the world tomorrow. She smiled broadly, which set off another storm of flashbulbs then stepped out from behind the podium so they could again photograph her from all angles.\n\nScreams of \"Amanda,\" echoed throughout the hall as everyone there tried to get her attention. \n\n\"Tonight I offer you my latest and greatest,\" she said in heavily accented English.\n\nI'd heard Amanda speak several times and knew that her accent was not normally that thick. She was obviously playing up the exotic French artist riff to the hilt.\n\n\"Tonight I will show you a total artistic experience that will give you raw emotion in several paintings. But before we begin the auction I must first bring up some of the people who have supported us and made it possible for us to be here this evening,\" she said.\n\n\"From the Benson Management Agency could we please have Brandon Benson, Smith Benson, and Kathleen Jenkins, come up on the stage?\" she asked.\n\nI couldn't believe Amanda had mentioned my name. I got up as if in a daze and headed towards the podium. Smith was smiling from ear to ear. He waved at a camera, and whispered to me \"The bitch is giving us credit, this might turn out OK.\"\n\nWhen we got to the stairs Smith walked straight up the steps and onto the stage while Brandon bowed and motioned for me to precede him.\n\nWhen we got on the stage a few cameras flashed and I looked straight into the lens of a television camera. I hoped that Raphe, and maybe my family back home could see me now. There were also I noticed lots of giant screen TV's all over the room to show the goings on, on the stage. I noticed that there were a few more people on the stage than Amanda had called, but I didn't worry about it. They seemed to all have large manila envelopes in their hands. Maybe there were going to be some kind of awards given out. I got into the spirit of the event and waved to no one in particular. Amanda began speaking again.\n\n\"When I arrived in California 2 months ago,\" Smith went white when he heard her say months ago. We thought she'd only been here for a week or 2. That was probably part of the reason she'd been upset at us.\n\n\"I was distraught,\" Amanda continued, \"My career was at a standstill, and I didn't know what to do next. I had painted in France a lot of paintings that were sold earlier tonight, they are good and at the time I was proud of them but I knew that I needed to take the next step.\"\n\n\"But alas, I did not know what the next step was, until the man you are about to meet came into my life.\"\n\nI was tingling all over at the thought of standing next to Amanda's mysterious partner. There I go again, I thought, creaming my panties over someone else's man when I should be looking for Raphe.\n\n\"The first thing he did was to give me a friend she said,\" the crowd gasped and oohed.\n\n\"Then he showed me the joy in simple things, and the magic of different tastes. He taught me to appreciate, uhm, what is it?\" her accent was so thick I could barely understand her, boy was she rocking this.\n\n\"How do you say it...Burger Queen\" she said.\n\nMy head snapped around and I turned towards Amanda. Some of the people around us noticed and Smith grabbed my hand. I was reeling, and I had a bad feeling that me and this bitch would soon be on the floor.\n\n\"May I present to you, my new partner, hopefully in more ways than one,\" she smiled into the cameras.\n\n\"Raphe Jenkins,\" she said.\n\nMy head exploded, Smith's mouth dropped open, and I almost collapsed all at the same time. Brandon elbowed Smith and pointed furtively at a short fat woman, in a rumpled suit, with wrinkled stockings at the edge of the other side of the stage. Smith visibly blanched, and I swear I could hear his heart beating.\n\nMy husband Raphe walked out onto the stage, smiling. He looked better than I'd ever seen any man look. His hair looked like a million dollars, his scruffy beard was gone and his handsome face was smooth. Those steel blue eyes lit up the room and they only seemed to see Amanda. Then I saw him give the thumbs up to George Solomon and settle in next to Amanda. He hadn't even given me a passing glance. I tried to start moving away from the podium but I was hemmed in on both sides.\n\n\"Raphe taught me how to add raw pain and emotion, in \"my\" or \"our\" art,\" she said.\n\nAs soon as Amanda said this, Raphe raised his hands. I noticed 2 things As soon as Raphe raised his hands the veils over the paintings slowly began to rise and the coverings on the floor receded. The 2nd thing was that as Raphe's hands came down Amanda took his hand in hers. Smith turned to look at me as I heard someone growling. Then I realized that it was me.\n\nThe crowd gasped as one. The tableau before us was both grotesque and amazing. It was powerful it was beautiful; it was a mess, all at the same time. There was a long, almost too long moment of silence; then the crowd rose up on its feet as one and began cheering. Amanda had little tears rolling down her face and the cameras were eating it up.\n\nI couldn't believe this shit. This was art? What the fuck. There were paintings that weren't even finished, of me, and Smith and one of us together. There was one that looked like it was of a Burger Queen server. And there was one of that rumpled little woman who was standing at the other end of the stage. They were all splashed with big blotches of paint. Some were splashed with many colors, others with only a single color. I did not fucking understand this. But every time I looked at them, it grabbed my heart somehow.\n\n\"View if you will,\" began Amanda, \"The spectacle of love gone wrong. Of a loving and faithful man whose whore of a wife, willingly spreads her legs for a worm of a man not fit to kiss his ass,\" Amanda spat viciously.\n\n\"View also the wife of the worm, see her pain, feel her sorrow, as her love is forsaken for the last God Damned time,\" Amanda was milking the crowds reaction.\n\n\"See the pain the simple act of betrayal gives them all,\" she said as if in pain herself. The woman was a master showman and she had the crowd in the palm of her hands. The only thing that I could think of was that the little bitch needed two ass whippings, one for stealing my husband, and the other for calling this shit art. I had to get of out there, and quickly.\n\nThere were oohs and ahs all over the room. Then people began to recognize us, and stared evilly at Smith and myself. Again, I tried to run from the room, but was stopped.\n\n\"Where are you going Kathleen?\" asked Amanda from the podium.\n\n\"There is much here to do yet, and we have presents for both of you later.\"\n\nAs she said this I saw the giant security people come forward to stand behind Smith and myself to assure that we couldn't leave. Brandon was glaring at Smith, with fire in his eyes. \n\n\"Asshole,\" began Brandon, \"You're fired,\" he said the last part so loudly that everyone heard him. The rumpled little woman, walked over to Smith, and slapped him so hard that it echoed across the room. She reached for me but was unable to get around the security giants.\n\nThe first painting of Smith started the auction. The opening Bid was 100 thousand dollars. The picture sold for almost twice that. The picture of the rumpled little woman, who I finally realized was Smith's wife, sold for a quarter of a million dollars. The other pictures including the 2 of me were also big sellers. The one that didn't increase over the opening bid was the Burger Queen boy, then Amanda offered dinner with herself and Raphe, along with a personal explanation of how the boy tied into the story, and suddenly the bidding went ridiculously high for it as well. Then Amanda waved her and Raphe's hands up again and the room went quiet,\" before we begin the evening's finale,\" said Amanda.\n\n\"We would like to present the piece de resistance.\" The lights came up and the last painting, one of Raphe standing alone and anguished, with only a few intense splashes of color marring it. The cameras went off immediately. Several Oh's and oh shits, were heard. This was obviously the masterpiece of the collection. Amanda had clearly exceeded her previous level of technique, on this painting. I swear I could see it breathe and feel the pain in its eyes. When I saw this painting I realized how much I had hurt him. I also realized that I had no chance of ever getting him back. Who could forgive someone they loved as much as he loved me, but treated him as badly as I had. I didn't deserve his forgiveness.\n\nThe bidding for the painting of Raphe started at a million dollars and went for nearly 1.3 million. At the conclusion of the bidding some of the audience members got up.\n\nThey were returned to their seats by Raphe's voice.",
        "\"We have one more item up for bids tonight,\" he said, \"One that even Manda, doesn't know about.\"\n\n\"I'd like you all to take a look at the screens around the room,\" he said.\n\nAs we watched a video played, it showed a room, and in the room you could clearly see the paintings mounted on easels, as if they were being worked on.\n\nRaphe came into the room, and saw the paintings; you could see the pain and shock on his face as he looked from painting to painting. I knew that it had to be the day that he'd caught Smith with his hand up my dress, because I recognized, the same look he'd had then. Next you could see Raphe grab an open can of paint and throw it at the canvass.\n\nYou could hear him scream as he did it again, and then collapsed onto the floor. Then you saw Amanda come into the room and not even look at the paintings, at her work. She looked only at the man in front of her, and how she could ease his pain. Everyone in the room gasped as she handed him another can of paint and painted towards the work she'd put her heart and soul into. Raphe threw can after can at the paintings and she just handed him more paint until he was spent. Then she sat down next to him and started caressing his head. Then the video stopped, and Raphe said \"This is actual security camera footage of the creation of these paintings.\"\n\n\"It is art in itself,\" he said, \"There is only one copy, and it will not be reproduced.\"\n\n\"It would make a great addition to the collection of someone who already has one or more of the paintings,\" he continued, \"But it would also make a great stand-alone piece.\"\n\nThe video went for 2 million dollars to the guy that bought the painting of Raphe.\n\nAmanda re-took the podium, and the army of little people in suits rose as well.\n\n\"We now have special gifts for some very special people,\" said Amanda.\n\nA snappy looking woman stepped up to the podium and said \"Kathy Jenkins.\"\n\nI was far too shocked by the events of the night to react, so someone pointed me out to her. She stepped in front of me, and handed me the envelope.\n\n\"You've been served,\" she said.\n\nAnother person called out Smith's name, and did the same thing.\n\nThen my name was called again, and so it went.\n\nRaphe was divorcing me, on the grounds of infidelity. He was also suing Smith for alienation of affection leading to the break-up of our marriage. And he was suing the Benson Agency for not enforcing their non fraternization clauses.\n\nSmith's wife was doing the same thing to him, and to me, but she wasn't suing the firm. She was a Benson. She was part of the family. When she married Smith, he had taken her name. He was not truly a Benson. Under the terms of his divorce he even had to go back to his original last name. She also had an iron clad pre-nup. He would be penniless, homeless and jobless. He didn't even own his car. \n\nRaphe had filed for divorce as soon as he found out about Smith and me. That was long before I thought it was. As such I would not get a penny of his earnings tonight from the art auction. I would get basically half of our assets before he filed which would amount to nothing. I'd get half of whatever he sold his truck for if he sold it. Or he could just give me half of its value, which would be pocket change to him now.\n\nI sat there crying as I looked at the contents of the envelope and saw photo after photo of Smith fondling me, or fucking me. The worst was the one of his dick unloading one thin line of come in my face, as I just sat there with an unreadable expression on my face.\n\nI tried for the next few weeks to get Raphe to talk to me. He refused. His lawyers made it clear to me that if I fought the divorce, even though they couldn't do so legally, they'd release all of the pictures and videos that they had, not only on the internet, but they'd mail a copy of the file to every person in my hometown, including my parents. I signed the papers. I thought that I could talk to Raphe when he came to the house for the rest of his stuff, but he never did. I did see him and that little French homewrecker a lot, they were all over TVand in lots of magazines and newspapers. Raphe was living the life I'd always wanted and more, only without me.\n\nI sank into a long depression and stayed there until my money ran out. Then I decided to do the only thing I could do, go home. I called my dad, and he was cold to me on the phone. It turned out that Raphe's lawyers never needed to release the files. The art show had been shown on TV worldwide. Clips of it were all over the internet. Of course the photos of Smith and I hadn't been seen but everyone knew the story. I'd never be able to show my face anywhere again.\n\nRaphe being true to himself had gone home and told both sets of our parents the story and the reason for our divorce, to break the shock to them before it became worldwide news. His parents loved Amanda, far more than they'd ever loved me. Even my parents liked her. Last I heard Amanda was pregnant, and they had rented a boat and were slowly sailing around Europe before getting ready for their next big art sale. It was going to be her last because Amanda had finally found what she'd been looking for, unfortunately for me, it was my husband.\n\nWell gotta go, my bus is here. Like I said the biggest thing wrong with women, is men. The good ones are hard to find, and the shitty ones are always in your face, pretending to be something that they aren't. As I said most of this really wasn't my fault.\n\nWas it?"
    ],
    "authorname": "StangStar06",
    "tags": [
        "cheating",
        "romance",
        "art",
        "mustang"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-art-of-divorce"
}