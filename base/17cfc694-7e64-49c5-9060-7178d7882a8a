{
    "title": "Dark as Ivory Pt. 02",
    "pages": [
        "Content warning... again: There's still some things that might be considered harder fetishes, depending on a person's relative definition. Have fun!\n\nIvory\n\nShe was trying to drive me insane, I was convinced of it, and wondered if she hadn't already succeeded. The night she sent me the watersports videos I might as well have been her slave. I loved watersports, fucking loved them and adored using them as humiliation play because that was hotter than hell. And she had messaged me with such eagerness for that kind of debasement while I thought about how the dress I'd gotten her wasn't enough and never would be. She had me enthralled by my heart strings and I didn't even fucking do love.\n\nI knew she was going to keep playing too, was eager for it. She was going to be a dirty, bad little girl in some way. What exhibitionist behavior would she taunt me with now? What would make me want her, crave her, even more than I already did?\n\nIt turned out I wasn't ready for what she wanted to do. Oh, I should have been. The game she played was something I would have been all over with every other playmate I had ever had because sharing my submissives turned me on. I got off on watching them cum all over another guy's cock so I could shame them for it and watch them break down sobbing when I made them feel like a filthy whore.\n\nAnd then I could lick the tears away and praise them for being uninhibited and for their bravery in their hedonism with me. I loved it.\n\nI loved it until I got involved with Tuesday, anyway.\n\nShe knew I was watching her through the weekend after our spree of fetish messages. Little Tuesday wasn't an idiot and she was learning me in similar ways that I was learning her. I couldn't play these games with her and not have her learn me. It might have been a strange long distance start and continuation but we had a relationship and there was no denying that. So she was being a playful little thing when she brought another guy home, someone who wasn't even into fetish. She used him to play a game and she still had Flatline Whore on her tits when she took her shirt off for him. Of course I knew it was really for me because she was facing the window and he stared while she shoved him back, laughter on her face. She dominated him easily like I knew she could likely dominate the hell out of anyone who couldn't handle her and her unbridled desires. He didn't know what to do with her, a college kid that she had found for a playful one night stand. He looked like he thought he was using her when she was using him for something far worse like the little devil I knew her to be under that sweet face.\n\nThe setup was insanely perfect. It was everything I should have loved to play through. My dick wanted me to message her while she was fucking so I could watch her lift the phone to read my instructions and filthy profanities while trying to hide it from someone who had no idea what fire he held in his hands.\n\nBut the rest of my body wouldn't let me. My mind seethed with the thought that he wasn't mean enough or hard enough to deserve her. She didn't even orgasm though she faked it. And my blood burned hot with the thoughts that she was mine. She was fucking mine and it was the stupidest thought I had ever fucking had.\n\nI stared at my phone blankly instead of playing, my sexuality finally broken and I closed my eyes because I knew why. It wasn't a good thing. It was a bad thing.\n\nI had loved before, though I didn't love easily. Which made it sound like my love was a kind of rare gift, but that wasn't the case.\n\nNot even close.\n\nMy love was a terrible thing, a torturer's love. I had heard doms talk before of how they had been so hardcore and then fallen for a girl and they'd been tormented with thoughts like \"if I love her why do I hurt her?\" They'd go softer, walking a line between their need to care for their loved one and their desire to give the partner all the hard kink games they had come to enjoy.\n\nThat hadn't been the case for me. I turned worse, far worse, with my love. My attention on one girl? It was consuming, life altering, and it was terrible. If I only playfully tormented with a playmate, I started to torture them when my feelings rose. If I had tortured them already?\n\nI made to break them. I commanded them to orgasm denial until they started to beg me for the cane so that the pain would help distract them from the terrible frustration build. It was one of my favorite games. In my mind I saw Two kneeling and her eyes tearful as I coldly commanded her to another week of denial. After the first week, her eyes would get that tortured, hopeless look. She wouldn't even beg me to let her cum anymore with that same hopelessness. She would start miserably begging for torture in my dark dungeon instead, her days turned to hell. I would so thoroughly break her that it would be more punishment to not give her pain than it would be to cane her so hard she screamed.\n\nIt scared me. I was already in the darkest, deepest waters with Two and I already enjoyed things like turning her name into a number and raping her in her back room when she didn't know it was me. And I knew what my act was. I knew that, while it had been a game, she didn't know that. It had been fucking dangerous and I couldn't be careful enough to play that way. It was so dubiously consensual that when it was happening, it could be called rape and that wasn't a wrong term for the sheer violence of what we'd done, what I'd done.\n\nThis was the girl I had fallen for. I knew that. I knew that now because I got so fucking violently angry when I saw her with someone else that it was painful. It actually hurt how hot my blood went and while I was a violent person, a deviant fuck, I was rarely an angry person. So I knew that I had fallen for Tuesday Holter and fallen hard. Somewhere in watching her for my games and flirting with her and fucking with her head while I talked to her of heavy metal CDs, I had fallen to some kind of feelings.\n\nAnd what would I do to Tuesday, who was already so far down the edge line with me that it was hard to be careful enough? When my love was a torture that made me wilder, what would I do to this girl who was already dangerous? No one else had suffered through my affection, if it could even be called that. No one else had ever been able to handle my Valentine's Day when it involved finally introducing them to my dungeon. Because no playmate had ever elected to go back a second time to my dungeon. Even if I sent pictures beforehand, they didn't like the actual acts that happened there.\n\nHow the fuck could I ever expect Tuesday to suffer me when my Valentine card for her would be the worst I ever sent? I remembered her words when she thought I was gone after I made her kneel on the floor while waiting for my permission to take her blindfold off. \"But I already belong to someone.\" She had whispered it so brokenly before she had had time to think through the trauma of my crime and realize it was me. It had made me stop and stare at her where she knelt so obediently because I knew she was talking about me owning her.\n\nGod, it wasn't fair. My phone vibrated with her messages in between her fucking with the college kid who was touching what I apparently considered mine even though I hadn't collared her and wasn't dating her. My cock couldn't even get hard enough to play and I ignored the messages, closing my eyes and suffering this torture because I deserved it for loving her when she was a diamond, a treasure, and deserved a dom who would eat her little pussy out so hard and often that she could orgasm on command.\n\nBut in the back of my mind I had another thought. That type of dom wouldn't satisfy her and she'd walk all over them just like she's walking all over her one night stand.\n\nAnd then right on the heels of that thought was another. I'm sorry, Tuesday.\n\nSorry. Not because I was fallible to emo shit but because I knew she was going to suffer so much harder than even I had planned. She hadn't signed on for this shit. She hadn't said she wanted a relationship at all, had even talked about how her relationships had all been failures because she liked it a little too rough and it caused things like insecurity problems in her partners. I wouldn't have issues with that but she might be relationship wary if her heart had been wounded.\n\nI closed my eyes, ignoring my phone, and covered my face with my hands instead. I fell asleep with the pump of violence choking me, the need to tame and punish my wayward submissive for daring to let another touch my body. Harsh lust beat me senseless and my dreams were wild things that were on the verge of murderous. But they weren't quite because I knew in my soul that I would never be able to maim or kill little Tuesday. Even in my dreams I couldn't think of her dead, though I had gone through my fair share of snuff fantasies and necrophiliac play with submissives who didn't mind ice and thought it was as hot as I did. But not Tuesday. No, I wanted her beautiful eyes open and filled with tears whenever I had the urge to see them. I wanted the glow of her face when she came so fucking hard from my torture that her cunt constricted my cock. I wanted to see her struggling in ropes in my dungeon, alive with fear and wondering where she'd been kidnapped to when I invariably had her blindfolded the first time I took her there. I wanted to wait in hiding for her and have to cover her terrified scream when I assaulted her in her own apartment, wanted to feel her writhing and shaking in more of that delicious terror that warmed me to my heart.\n\nPretty Tuesday. Hardcore Tuesday. My Torture Toy Tuesday.\n\nI didn't answer her. I couldn't. Instead I lay still and collected myself and let the feelings bathe me, rethinking my games with her.\n\n\u2014\u2014\u2014\u2014\n\nTuesday\n\nHe wasn't answering and it was terrible. I remembered what he'd said when he played off my orgasm denial as punishment. That he wasn't so cruel as to cut me off. But he was cutting me off now and it was even worse than it would have been then. I was sad without my playmate, worried that I might have done something to hurt him and hating that I didn't know. Would he ever talk with me again? Had I severely fucked up with my slutty little game? I wasn't sure but knew that I missed him, a lot. I missed having someone to talk with about things like how awesome Pantera was. And I missed having someone who understood how much of a freak I was. Because where every other dom or relationship I'd been with had eventually slipped up with something judgmental or shocked, Flatline hadn't been shocked about anything. I could throw things like piss play fetishes at him on a spur of the moment horny spree and he wouldn't judge at all. He would play back. I had never had someone to talk with so freely and now that he wasn't talking I felt the absence. It was only four days but by the fourth I wore my cuffs sadly, for comfort. It was stupid if you considered I didn't know who he was and didn't even know his name, couldn't even visualize him in my head because he wouldn't let me see him. I worked with my automatic customer service but inside I thought of my cuffs and how I would give all of his gifts back if he would just give me one message or sign that he was still alive and didn't hate me. I was sorry, so sorry I had crossed whatever line had been crossed and I'd never do it again. He didn't have to fuck me and he didn't have to ever let me see him if I had wounded him. But I wanted his talking back so I could have a friend who understood again.\n\nThe day was boring but productive. During the middle of it I didn't have my phone calls or my texts to give me something to think about while I sorted Magic cards and comics and that depressed me a little bit. I wasn't trying to be totally dramatic. Even if Flatline had just gotten what he wanted and left I would have recovered. It would have felt weird because I didn't think he was that kind of guy at all. He was the opposite of that, confrontational and right in the face in the most abrasive way possible. He would have told me to my face if he just wanted to fuck.\n\nThe phone rang while I was closing and I jumped with both hope and fear. It's probably not even him and you're going to be disappointed so get hold of yourself. I tried and it was harder than I cared to ever admit. I answered with my greeting, my voice soft with the longing I was trying to control.\n\n\"Take your sweatshirt off. Go back to the same fucking bookshelf, get the mask, put it on, and wait. And no fucking bullshit, Tuesday, because I'll torture you if you do.\" My head snapped up from the first word because it was him, but there was something as intense as fury in his voice and somehow it made me even more scared than I'd been when I wasn't sure who it was.\n\nObediently I went to the shelf, sitting the phone on the table because he'd tersely said his command and hung up. The mask this time was serious leather and I staggered through figuring out the straps with shaking hands, trying to be quick because he didn't sound like he felt all too patient. I had pushed my luck, I realized now, and that thought was terrifying. I hadn't meant to make him angry. It seemed like the kind of games he would love so why did my stomach feel sick with what might be coming?\n\nI jumped to the sound of the lock, too scared to say anything, but wanting to say I was sorry a thousand times over. I had always been a pleaser personality but college had at least made me a little tougher, a whole lot less of a coward. I could handle confrontation now, things like that.\n\nBut he made me a little coward again. I turned into a mouse with him, a squeaking, frightened mouse. So I didn't say anything because he hadn't told me to say anything. He was all over me when the door was locked and the shutters closed though, one hand locking my wrists behind me. Again, he manhandled me, shoving me forward with all his roughness and he had so much of that. I staggered in front of him blindly, knocking into a shelf when I panicked and tugged against him in confusion. \"Helpless little fucktoy.\" He used his other arm to make a kind of cage around me after that.\n\n\"Please...\" I whimpered it even though it terrified me to say anything at all. But it escaped, a single little plea for some mercy because his energy and the words when he said them indicated a black mood, so dark it made me tremble. He was pissed at me.\n\nNo that wasn't right. There was no real anger in his voice. It was heavily controlled, but there was hard violence and stern ferocity. \"Shut your fucking mouth, Tuesday. I'll tell you what to say when I want you to talk and you better mimic the words I give you like a goddamned recorder.\" When he stopped walking with me, he released me only to start ripping through my clothes again. \"I think you got the wrong idea about some things, Tuesday, so we're going to correct those things.\" I felt the knife and whimpered, shivering. My hands raised to my stomach in a self protective instinct, but I didn't dare lift them to try to stop him. He laughed and merely cut through my bra. The jeans and shoes he pulled off too until I stood bared for him, and blinded, shaking.\n\nHe shoved me forward, forcing me into position against my spare table again, but this time I felt rope quickly tying my ankles to each table leg. I might not have been in the same panic as before, but when I was tied and felt hot dread at his wrath I thought the panic might have been preferable over this slow building terror. This was a sense of foreboding, a sense that intensified with his every action and word. Something bad was coming.\n\nI flinched when his hands reached up to cup my tits and then slap them harshly. He was like a dark cage behind me, a wall again, so big while I was small. At first I moaned when his fingers touched my nipples but then he cinched them and I yelped and bit my lip, quieting myself. When he stopped I heard the clink of metal and my foreboding intensified.\n\n\"Cup your tits.\" He said it softly and it was more frightening than his normally so commanding voice. \"I want you to offer them up to me for punishment.\"\n\nMy pussy ran wet even while it was so mean, but my hands lifted to obey anyway. They were shaking, but I cupped them around the base of my breasts and tentatively lifted. He reached around me, cold metal brushing me and then there was a pause while he opened the clamps. When they fell, it was the worst I had ever had. I had experienced clover clamps before but I knew they came in larger sizes and I had no doubt that an evil motherfucker like him would use clover clamps, but these were something out of a nightmare. I choked at the shock of how much pain there was, actual bile rising in the back of my throat, which had never happened to me before, literally never. My pain tolerance was goddamned high. The second clamp closed and I sucked in air through my teeth, my body vibrating while I danced on my toes. \"That's it, breathe through it.\" His voice was calm, but menacing, and I felt the chain between my breasts tugged hard while something heavy swung against my chest. I was already crying because even while he soothed me with his evil voice, he was adding weights to the worst clamps I'd ever experienced. A second weight followed and then a third and by that point there was so much pain I wasn't even sure another weight would matter, but he stopped there anyway, while the chain swung heavily, each arcing curve a trial for me. I didn't even pay attention when he twisted my arms behind me and locked my gorgeous cuffs together. He pressed me over the table and I was left cold for just a moment. And then I heard a skittering on the tile floor that almost made me wet myself. I knew what that skittering sound was. It was horror and fire hot pain. That sound had been bad with other playmates. What would he do to me? He, who had clamps larger than any other and then had still added weights?\n\nI choked out a sentence in a sense of surreality, a sentence I was barely aware of that was a thought I didn't even remember having. \"The table isn't sturdy.\"\n\nHe chuckled behind me. \"Oh, I'm well aware. I've got you.\" And, indeed, his hand was at my wrists, holding me, and he was a dark force behind me and to the side and I knew he really did have me.\n\nI didn't hear a thing before I felt the first cane track, didn't have a warning, but I had been right to be afraid of it in his hands. It was hellfire, like something out of a nightmare and he connected it with the most tender area on the backs of my thighs. I couldn't even scream from the shock of the first one and that was just fucking one. And he made it clear he had no intention of stopping. The second was right at the seat of my ass and his hand had to hold my wrists tighter to keep me from kicking the table off balance. The third was right in the middle of my cheeks. The fourth was somewhere in the middle of those two and by that one I felt like I should be bleeding. I had seen bloody cane tracks in videos and I wasn't sure what it felt like but the farther he went the more it seemed this must be it. This was the feeling that went with those torture porn videos. I was crying, actually sobbing with terror and agony. He couldn't see my eyes and we had never set safe words and I wondered now how I could have been so stupid as to not ask him about them. How would he know if he was breaking me? How would he know if it was too much and I didn't come back from it okay? Five left me breathless for a second so I couldn't draw my protest and he was still playing. Six. Seven. The number went up. I finally managed to talk after eight.\n\n\"Please!\" It was choked, a jagged screech. \"Please, you said you wouldn't hurt me!\"\n\nBut it was a weak protest. I knew why he was hurting me. He hadn't liked my game over the weekend, hadn't liked it at all. I thought he would stop at ten, but he didn't. I had to focus like hell to keep my cries down and it was the hardest thing I'd ever done, but I was terrified of being too loud and raising his ire. He continued my caning without answering me and I sobbed, losing any hope that he'd ever stop and that this would be the last thing I ever felt.",
        "\"Please,\" I whimpered when he paused. \"Please...\" It was so soft and weak and pathetic. I thought we were at 20 but didn't know for sure anymore. I had lost track.\n\nI heard the ripping sound and for all of 20 seconds I had hope that he was done with hurting me. The weights from my clamps shifted under me across the table and I breathed deep breaths, thinking of how bad they would hurt when he removed them. But then all my hopes were shot to hell when I felt his fingers thrust in my asshole with lubricant and then felt the broad head of the cock that had caused so much pain in my pussy, but now it pressed to my asshole.\n\nI panicked, seriously panicked. The cane stripes were like lines of fire all over my ass and thighs and he was big, too big. I struggled and he laughed at my efforts. \"Go on, then, fight me. But this lube will let anything in that little hole and besides, you're such a whore that you want this. But if you keep fighting I'm not going to let you cum.\"\n\nI went dead still, instantly, shaking. I didn't know what this was but it felt like one hell of a punishment so I hadn't dared hope for an orgasm. When he suggested I could have one I grabbed hold of the thought like a lifeline and even managed to arch for him. He laughed behind me at my acquiescence and pressed inside my hole while I tried my best to relax and take it.\n\nI definitely didn't do a very good job. His cock felt like it was ripping me apart, lubricant or no, and he pressed inch by inch... by inch. He was merciless and slow, while my world narrowed down to nothing but the cock that was the most massive thing I'd ever felt. It was a hundred times worse than the toys. I moaned when his balls tapped my pussy, the feel of the denim of his jeans inflaming cane strikes that flared with his movements.\n\nI vibrated beneath him and I couldn't think. All I had was feeling and all of that was feral. He lifted me from the table, holding me up by my hair while he taunted me, his voice cruel and unforgiving. \"Now, let's correct some things. These tits? These are my fucking tits, Tuesday, do you understand?\" He yanked the heavy chain so that I squealed in torment.\n\n\"Yes, sir! Yes, master!\"\n\nHe released the chain but then he did something worse and caned the tops of my breasts three times quickly before he switched to the tender underside. My asshole pulsed on his cock with every torture. \"Tell me then. Whose tits are they?\"\n\n\"They're your tits! They're yours!\" I shouted it and I'd sing it if he wanted me to. If it would please him so he would show me mercy.\n\n\"That's right. Mine.\" I choked when he released the clamps, my world spinning behind the blindfold. Before I got my bearing he pulled partially out of my ass and reached down to pinch and twist a cane track, a particularly brutal one by the way it felt. \"Now, you little fucking whore, whose tortured ass is this?\"\n\nHe shook me by my hair, his intensity and furious command rising. \"Yours, master.\" I mewled it desperately. \"It's your tortured ass.\"\n\n\"Good girl.\" But he gave me more pain instead of a reprieve, squeezing and slapping my asscheek before he abruptly thrust inside my asshole. He fucked in a punishment rhythm, possessing me more than words with his cock and his hands still holding me still. He worked me into a painful frenzy before he stopped and I moaned in protest. \"Whose gaping, foul asshole is this? Whose tight little hole am I ruining?\"\n\nHis words sizzled through me after his brutality and cruelty. I felt enslaved and owned, filthy and desecrated. There was a tempest burning through me, a dangerous storm that felt like it wouldn't stop building until it killed me and burned out my nerve endings. \"It's your gaping, foul asshole. Your tight little hole to ruin.\" It came out breathy and surrendered.\n\n\"Good girl. And whose dripping, greedy cunt is this? Whose horny little pussy am I ignoring to hurt you instead?\"\n\nI squealed when his fingers brushed over the slit of my sex, forgetting that I was even capable of feeling pleasure in the midst of all the torture but I felt a lot of pleasure. I felt a fucking ton of pleasure.\n\n\"Yours!\" I shouted it, eager and needy, squealing desolately for him to keep going and finish this and I didn't even care how he did it anymore. I just knew he would and could. I just knew that I was lost in that whirlwind inside me but he had the keys to the kingdom. \"It's your dripping, greedy cunt to ignore to hurt me instead!\"\n\n\"Good girl.\" It felt like I had earned those two words and I savored the way they felt rolling across my body. The way they made me arch to him in impossibly deep, mindless submission. He laughed and gave me a few more thrusts before he stilled again. \"And what about this swollen little clit? Whose is that?\" His fingers were on my pussy again, spreading me. They brushed across my lips and I squealed, eyes going wide when he flicked my piercing. But then he lifted my ring and I felt pain with whatever clamp device he applied right on my clit.\n\nI pant through the answer, fucking myself back on his cock as a coping mechanism. \"Your swollen clit, master! It's yours!\"\n\n\"Good girl.\" He banged into me, making me pant and struggle in my cuffs, his body an unforgivable force while he held me and hurt me harder. His cock had passed the point of pain and was into a wide, terrible stretching pressure that transformed my subspace into something hotter and blissful. My nerve endings screamed and he didn't give me an ounce of pleasure. He fucked my asshole with dominant possession and all of me hurt from his punishment.\n\nI sobbed, trembling when he stopped and lifted me by my hair again, holding me up at an angle. I heard something opened on the table, rustling that made me both salivate for whatever came next and shake with dread for the pain that went with it. \"Once again, so I know you understand it, one more time. Whose tits are these?\"\n\nBefore I could answer I felt him use one hand to hold my breast still and felt something touch the top. And then torture and pain lanced through me as whatever he held was punctured and forced into the flesh of my breast. I cried harder, struggling. \"What are you doing? Don't, please, don't! Oh God, no!\" I screeched it because another pressure started, followed by the sharp, hot pain, and I couldn't do anything to escape.\n\n\"I'm torturing you,\" he answered softly, amused, and again I felt that sharp hatred of his amusement, that he could feel it so cruelly when my world was being ripped apart by his smallest whims. \"I thought of nailing these tits and being meaner but there wasn't much to play with you here, so nice, pretty needles will have to do through the meat of them instead.\" His words were deliberately nauseating and I choked on bile again when I felt another on the other breast, sweat coating me as the pain rose and fell in such sharp shocks. \"And why am I piercing these tits? Whose tits are they?\" He said it almost pleasantly, conversationally, and I felt something that made me cry all the harder even while he pierced me again.\n\nHis cock was turning even fucking harder inside of me with his arousal. He was horny as fuck from what he was doing to me, from the hell he was giving me. From the fact that I was sobbing in actual misery for him. \"I- it's...\" I couldn't fucking think to give him what he wanted. \"Please.\"\n\nHe growled softly. \"I was going to be kind and stop at two through each since that's a nice, even number and you really have been such a good girl. But it seems you need some more torture to help you think.\"\n\nI squealed when he added another needle and my teeth chattered. And there was something else. I arched back on that harsh cock inside of me and there was something like an abyss on the verge of swallowing me, like I was approaching a timeless event horizon. Nothing mattered anymore, nothing at all. There was only pain and my dark, horrible world of surrender to him and he felt more like my master and cruel owner than he ever had. That event built ever higher and I was almost scared of it.\n\nA needle went through my other tit and he paused, waiting. \"Well, little Tuesday? I asked you a question.\"\n\nI gasped, panting. I knew the answer. I could think enough to say it, too. So why didn't I?\n\n\"Alright, then, naughty little whore.\" Another pierce that made me cry and whimper. I wondered if there was any blood to them and my cane tracks, hoped there was. I wanted these marks of his to be terrible and harsh to look at in the mirror. I wanted to be able to see my body and flinch at the sight of them when they garishly reminded me of this wild possession. \n\nAnd then there was the second pierce, always in the same place on the other tit, always even. \"They're your tits to hurt and pierce and nail.\" It came out a hoarse whisper, a lost little sound that was only capable of parroting him.\n\n\"That's fucking right.\" He shoved me forward and pulled out of me to slap my ass, pinching a cane track before he slapped again. His cock brutalized me when he started again and his fist was in my hair, painfully holding me. \"My tits, Tuesday. My cunt, my clit, my asshole, my ass. Those are my lips and my throat and my tongue.\" He reached around to grasp my throat with his other hand, releasing my cuffed wrists and suffocating me instead. \"My air to take from you.\"\n\nI barely whispered the words with the last of my breath. \"Yours, master. Yes, master.\" I wasn't sure he even heard and I didn't even care because I was lost to him. That dark abyss was growing more demanding in its pull and my body was chanting his, his, his, his... his cunt and clit. His everything. He could have killed me then and I wouldn't have even been aware enough to protest him. I realized he had released me to let me breathe and couldn't remember when. He was flicking the clip on my clit instead, railing my asshole so hard that I didn't think I'd ever be the same.\n\nThe orgasm roared through me, shrieked like a demon inside of me. I heard hard laughter over the roaring in my ears and felt my mouth covered but I didn't care how loud I was, didn't care that he was laughing at me, didn't care about anything except every last shudder of exquisite agony.\n\nI don't know what was after that for a few minutes. Maybe I passed out or was simply lost to orgasm aftershocks. What I did know was I came back to him and he was growling through his own wild orgasm and that growl set me off again in a smaller shock of pleasure because it wasn't his usual growl. It was harder, laced with feral animalism. And it thrilled me how that growl owned me. Those sounds of his were punctuated with soft breaths of amusement when he felt me squeezing on his cock some more.\n\nI went still on the table when he pulled out of me but my legs collapsed like last time and I had a brief terror that the table wouldn't hold me and I would bring it down. But that didn't happen. He held me up with a calming shush sound and I felt the knife at my ankles, cutting through the ropes. He removed the clit clip and I fell at his knees, my head falling in a bow of exhausted submission, my asshole sore. I felt a tugging at my breasts, but no pain, and it took me a full minute to realize he was removing the needles. \"Don't move, pretty little whore. You be a good girl while I clean the blood you've given me.\" \n\n\"Yes, master.\" I kept my head bowed, respectful, afraid of him, in awe of him.\n\nWhen he came back I leaned to his touch, lifting to him with a soft whimper while he cleaned the tops of my breasts. I was practically liquid in his hands, moving how he guided me, falling forward when he gently nudged me so that he could clean my ass with the soft cloth he used. He washed my pussy and hurting asshole afterwards while I shivered. \"Now, what lesson did I teach you?\"\n\n\"It's your tits you're cleaning and your pussy and ass, master.\"\n\n\"That's right, Tuesday. This is my body to use and abuse, no one else's, understood? I give you pain and make you cum. Those orgasms are gifts from me and I say how much they hurt and how much torture you take. From now on this is mine, sweet little whore.\" His hands rattled the chain tethering my cuffs and I shuddered with the harsh gesture, at odds with the gentle way he pet my hair.\n\n\"Yes, master.\" I was happy to agree to it, thrilled with what he had done in a way that almost horrified me. How could I like that? And yet I did. I loved him a little bit for what he'd done, for how cruel he had the balls to be while he was so careful at the same time. So, being his? It hadn't been planned but I didn't give a shit. \"I'm yours.\"\n\n\"Good girl. I'm going to make you my pain craving slut. I'm going to condition your body to need it to even be able to cum, baby. And it's going to be a nightmare that others would dread and I'm going to make you love every second. Your little boy toys don't deserve a chance to touch you anyway.\"\n\n\"W-what?\" Didn't deserve it? How was I supposed to take that?\n\nHe kissed my head. \"You heard me. You would be wasted in a vanilla relationship. Now, same rules as before.\" He removed the chain from my cuffs and I wasn't sure I was ready for him to let me up from the bondage. But he wasn't quite done either and I was grateful for it. He bent me forward to rub cream on my ass and then on my breasts and I lifted my head in the direction I thought he was, wondering if I was pleasing to him now. \"Sweet little whore. See how nice I can be when you behave?\"\n\n\"Y-yes, master.\"\n\nHe chuckled and settled me back on my knees, placing the phone in my hands. I cradled it and there was a smile in his voice. \"When it rings you may take off the blindfold, but until it does stay right where you are.\"\n\n\"Yes, master.\"\n\nThere was silence for a long time like last time while I shifted on my knees and waited quietly, feeling a strange feeling. It was kin to the last scene he'd done, where I'd felt hollow and emptied by his force. My body was sore in a hundred places but every shift that ignited some heat left me hot and needy. I sniffled, a few tears leaking from the blindfold, because I loved it. I loved every sore feeling and my caned tits and the needles and holy hell, the needles. The phone broke my reverie and I lifted it.\n\n\"Hello,\" I said softly.\n\nLike the last time, he didn't answer and I swallowed nervously, tearing the blindfold off, wondering if he would be waiting to get in a party with me again when I got home. But then that thought scattered because I saw what he'd left me.\n\nIt was the kind of dress I only dreamed about, a red dress with chiffon gracefully making a cover skirt, and a matching shawl went with it. It was a soft delight when I put it on and immediately never wanted to take it off. He had left my jeans this time and that made me laugh and feel grateful. They would fit just fine in my backpack and I'd start running out if he kept taking them. I had way too many shirts but not as many jeans and little to no skirts or dresses. I pranced in my new one, using the shawl to cover the lettering I had put on my tits since it hadn't fully faded. I cleaned over my back room and closed up, rushing to get home even while I danced and turned a circle. I felt owned and sexually charged. Someone knew how fucked up I was and that someone didn't just accept me. He enjoyed it and reveled in it. He was just as bad. This felt like cloud nine and I thought about his voice in my ear, thought about how rough he was and his scent. Because he smelled like my own personal aphrodisiac. Or maybe that was because he already so aroused me. I didn't message him even though it was hard to refrain. I just didn't want to break the spell. I wanted to feel his lead some more, like a rope around my throat, like the way he'd taken my breath.\n\nI still wore my cuffs even with the gorgeous dress because they made me happy. All of it made me happy. He hadn't abandoned me, hadn't left. No. He had been even hotter and harder than before, owning and possessive of me and I loved that.\n\nThe violence that had sparked in his fingertips from the first time had been slower this time, but somehow worse, harder, more intense. It might have sounded crazy, but it felt like a form of romance. Instead of the capricious use from before, this had been an obvious build of desire and kind of dance, carefully measured in its steps. I wondered if that was an anomaly for him, if it was because I had raised his ire with my game gone wrong, or if this was something I could keep expecting. He had talked about owning me like it was something I should keep expecting. But would it be like that? Hard pain lessons that would change me? Because I had to admit to myself that this level of intensity would indeed change me. How could it not? Whatever he wanted me to learn when I was in that hell with him would be lessons that would remain with me due to the pure sensation that accompanied them.\n\nIt was scary, kind of, when I also considered his threats of conditioning me because now he had given me absolute proof that he could. Even if he walked out of my life, I would feel like his possession for weeks after this.\n\nI walked in my door and locked it and then went to my PlayStation. I knew he wouldn't talk about this act with the kink messenger because he still kept the two personas separate to play a black game and I wouldn't dare break that. It would feel like sacrilege and even worse than wrong in this mood, where I waited eagerly for him to take my reins and guide me where he willed. But as soon as I logged on, there was an invite already waiting for me from him.\n\nMy heart fluttered with excitement and I put on my headset. \"Hello.\"\n\nHe was smiling when he answered. I could hear it and it made me smile too. \"Hello, little Tuesday.\" He paused and when he spoke next it was quite soft. \"I have to ask you a question before we continue, baby. I don't mean to break the game or the fun and I know you love it when you're not asked and just taken but there are some things that require confirmation. Are you alright with being exclusive together?\"\n\nI curled up gracefully in my dress because it was so delicate feeling that it made me feel soft and dreamlike when I was wearing it. \"It wasn't the plan, but I'm okay with it, yes. Does that mean I get all of your terrible attention as well?\"\n\n\"Yes. And that's what I was going to say. If this is the case, it's not just you who doesn't see anyone else. It's me as well and you'll be the vessel I go to whenever I have any urges, any at all. I haven't tried that very much before because while one playmate can deal with some types of pain and kinks, they might not be able to handle another. While one playmate might be okay with sitting in ice water and laying still while I eat and fuck her cold pussy for a necrophiliac game, another one shudders at the thought but can get into having her tits nailed. I have a wide array and if you agree to this, all of that attention goes to you.\"\n\nI shuddered at the thought because I knew he had dark arrays and they were wildly varied. He loved everything from hard piss humiliation to body suspension with needles when his partner wasn't willing. But I was still smiling and I laughed a small breathy sound, weak and wry. \"I'm... yes, I'm okay with that, master. Even if I don't like something, my masochism makes me like to suffer it all the more. It's kind of a plight, to be honest. It's something I could never find the words to explain to other partners, especially soft dom types. They wanted someone to come to them willingly and I understood but I wanted to be forced too. I wanted to not like it, to hate them even. I first noticed it as a kid, so I think I'm just... wired that way. But yes, that's okay.\"\n\nHe sighed in my ear. \"I love the way you are. It makes perfect sense to me, to want the struggle, to crave the rape fantasy to be as close to real as you can make it. Alright, baby, I'm glad to hear it. We'll give it a try. You said you noticed it as a kid. Tell me.\"",
        "It was a command again, no more questions. He had laid out my one choice so if I wasn't okay with it anymore I would have to tell him, but that was it. No more. He was master and I felt like a slave, though I didn't have a collar or his name or his face. But I felt his ownership still and answered because it was the obedient thing to do. \"Needles, funny enough. I used to be terrified of shots and blood work, like kicking and screaming petrified. Well, one day I went to get one of my shots as a kid and hyperventilated like always, but I had come to know what to expect, so there was this new feeling. I was like six or something close and couldn't look away from the needle when it pierced me. I watched it with this sense of sickness and thrill. It was awful.\" I laughed nervously because he was the first person for me to confess that to. But he made me feel so sexually confident that he was the priest and I expiated myself on his painful altar. \"It was super confusing when middle school happened and other people were discovering the joys of Sports Illustrated's swimsuit edition and I was reading the Inferno instead and... well, you know the rest.\"\n\nHe chuckled. \"I imagine it was confusing. What part of the Inferno, Tuesday?\"\n\nI grinned. I still remembered because I had no idea why the parts had aroused me when it did, but now I knew enough to understand. \"Two parts actually. The first was the sinners being boiled in the Phlegathon river while the centaurs tortured them with arrows if they dared rise above what their guilt demanded. And the second part was the boiling tar when the demons ripped apart any sinner who tried to lift above.\" I laughed. \"For years I didn't know why that aroused me until I went to a fetish club and was playing a predicament game with clover clamps where they were the only tether I had but they were chained through an O-ring so if I moved... the pain.\"\n\nHe groaned. \"Christ and you didn't even know why these things got to you. I know you already said that but... well, people's words run together sometimes.\"\n\n\"They do, but I have been trying to be absolutely honest with you.\" I giggled. \"Even when sometimes I think I'm crazy for telling you the things that turn me on because you'll give them to me.\"\n\nHe laughed. \"The plights of a little masochist,\" he teased.\n\n\"They're such a hellish thing.\" I mock sighed and got up to get a little wine.\n\nAnd he kept talking to me and for once he wasn't terrorizing me. He asked about my past relationships, asked me about the Chris Osgood jersey he had seen me wear one day. There was something nice to all of this. Something that made my stomach flutter even while I curled up as small as possible in my chair because he had made me feel so delicate and submissive.\n\n\u2014\u2014\u2014\u2014\n\nMy happy glow followed me through the days while I spoke with Flatline through messenger so that on Friday I decided I felt frisky and wanted to check out his favorite fetish club. It was a little more exclusive than most but they had open nights and that Friday happened to be one of them so I decided to leave Tate and Jackson a little earlier and go. I didn't dress to play, being casual instead, just another kinky voyeur bored on a night out.\n\nThe place was nice as hell when I found it, too. It was the obvious kind of nice, down a strip of loud dance clubs but off to itself in a beautiful, old building. I walked in and signed at the door as a guest, giving my license and signature as required. And when I walked in, it was obvious why Flatline would like it so much. It was casual, but it also allowed for a wide variety of kinks, both soft and hard. There were even private rooms in the back that could be rented between consenting parties, but those weren't for the casual players like me. Those were for vetted players. I wondered if Flatline was one of those vetted players, wondered if he had done scenes in those back rooms.\n\nMore likely he was one of the exhibitionists on the floor who used all the equipment where anyone could watch. I looked at some of the scenes with a shy grin, studying the types of people there were and there were all types from all walks of life. Some of the men wore suits, some wore jeans and a T-shirt, some had statures that broadcast rough threat and some were clearly more on the gentle side. I saw people sitting at a small bar area with drinks and behind that area were pictures and posters. I wondered if they were owners or specially vetted players because they all had that experienced look to them. One was a slight, dark haired man who, while not large of stature, still exuded fierce dominance in a picture. Another was a larger man with cruel amusement in his face, his hair dark as well, and his features sharp as the look in his eyes. And there were females, one a little shy submissive type who was stunning to look at. With blonde, vibrant hair and glittering eyes, she was obviously a happy submissive. If I saw any of those people, I would definitely consider them way out of my league. Even though I was pretty hard core, they just didn't seem like something I would have enough brave masochism to flirt with.\n\nMy phone went off with a vibration alert and I lifted it, smiling at Flatline's message.\n\nWhat are you doing on my turf, little girl?\n\nI looked over my shoulder briefly, grinning, and turned back to my phone. Just being curious about you and the places you mentioned, master.\n\nI see. I know you were probably going for the casual look, Two, but you look far too innocent and it's getting my little whore stares.\n\nStares? He was imagining things. I looked around me though and realized there were actually a few doms glancing at me. I fidgeted, not expecting this. I'm sorry. I didnt mean for that. I can leave. Also, hey! What are you doing here then?\n\nI followed you, believe it or not. And don't go, actually. You know where the front desk is with the keys to the private rooms?\n\nI blinked, nervous now. I hadn't anticipated playing but was ready for it if he was. I tugged my ponytail where it hung. Yes, master.\n\nGo to it and give your name. Tuesday Holter. He'll give you a key and tell you which room.\n\nI answered with another polite agreement, his favorite agreement I had learned because his cock had given hard thrusts when I gave it to him while he hurt me. I didn't know this place and I was nervous but obediently went to the desk. \"Tuesday Holter,\" I said softly.\n\nHis eyes widened a fraction, though he was obviously used to working in this place because he made whatever he felt more discreet than I could make my shock when people came into my store. And there was no real judgment from him based on appearances. What he did say was perfectly kind and in such a voice that there was no way to be insulted by it. \"God, one day I'll get used to the bravery you S types hide behind shyness, if you know what I mean.\"\n\nI laughed a tinkling, happy sound. \"I do know what you mean. We're a strange breed sometimes.\" I didn't ask questions, didn't ask why he reacted this way because I could take guesses if Flatline's play style was known here and I showed up asking for a key to a room he had gotten. It just wasn't necessary, when the vague gist was so clear. All it would do would be to tell me more about Flatline that I would rather hear from the man himself. So I merely read through the agreement, which was very straightforward with the safety rules and disclaimers and consensual signature, and signed. I appreciated the whole thoughtful setup, enjoying the fact that Flatline would like it. This was just with him vetting me too. I had no idea what went into actually starting. My own adventures into night clubs had been in the ones that were less exclusive but it was easy to see how that had definitely been a mistake on my part. More exclusive opened the door for things like pressing the edges a little more, based on the agreement I had read.\n\nThe guy gave me the key and smiled, pointing the way. \"He said you were a newbie, so you need to go down that hallway and to the last door on the left. He also said I could tell you that it's his favorite room.\"\n\nI laughed, enjoying the playfulness, and went back to where I'd been told, taking a minute to message Flatline. I think I shocked the door guy a little.\n\nIgnore him. He's seen too much so I'll have to kill him soon anyway. I laughed at that. Playful, dark humor Flatline? Of course he was always playful in his own way but this time had different energy and I enjoyed this. He was evidently in strange spirits and it made me bounce on my toes with anticipation. What would wait behind the door? I was never disappointed with him. He sent another message. What's the matter, little girl? If you have the key, unlock the door and go inside.\n\nI used the keys to both locks and pushed the door open, curious as hell as to what could have him acting this way. On first glance, I could instantly tell why it was his favorite room. It was dungeon style with no softness at all. It wasn't as harsh and cruel as his private sanctum, but it was still harsh, especially for a fetish club. The house music still penetrated the walls a little bit, just the smallest amount, and it sent a dark rhythm of lust vibrating through the body. It was a delight and this room had a huge padded dungeon bed with straps of all kinds at different places attached to bolted O-rings. That took up the most space but there was also a Saint Andrews cross and archway rack against the walls and a spanking bench in front of the bed. An armoire was right beside the door and that was the first thing that drew my eye though. Because I knew what went in chests and armoires like that. I opened the doors of the top part and grinned at the whips and small canes, went to the drawers and looked at the amount and variations of clamps, my eye catching on one that was a Y shape that I knew would go on the nipples and then down to the clit. And there were some toys I didn't even recognize. I remembered them to look them up on my phone later.\n\nBut then I closed the door and my eyes went to the bed. There was a single red rose on it along with a set of clover clamps that were huge.\n\nAnd a collar.\n\nI stared at it in shock, at how it made me feel to see it. It was a discreet day collar, but it was barely discreet. The actual collar was a slim black band with silver metal making a smaller band overlay. It was much like my beautiful cuffs actually, only smaller scale to be more publicly wearable. A heart padlock even went to the back of it. But what was more, there was a silver O-ring in the front with a charm that showed a bow and arrow and the letter IL in the smallest engraving because even the charm was delicate and discreet. My phone vibrated and I grabbed it, reading.\n\nBe my submissive for real and wear my collar. Fair warning, you don't get the keys for this one. If you want out you have to come to me for that.\n\nI laughed and answered easily. You're stalking me! I have to come to you anyway, master. I hesitated and sent another. It's so beautiful.\n\nI'm breaking from something but it doesn't really matter now. Go to the armoire's second drawer down and get the eye mask there. Put it on. Lift it up to message me when it's on, then wait.\n\nI laughed happily, obeying, eager to feel his touch again and not having expected this at all. His collar.\n\nHis collar!\n\nI fit the eye mask and did exactly as he said, lifting it only to type a quick one word message that said Done and lowering it back, kneeling in the floor and waiting. My phone vibrated but I felt like it was a test to see if I would break his commands so I didn't look or answer it. I just waited through the minutes. Maybe before I would have been nervous at the passing of time but he had already done this, making me wait for that phone call, so I knew better.\n\nI jumped when I heard the door, heart leaping. For a long while I just knelt there and after the door I didn't hear anything at all. I didn't break the silent reverence of the moment because it would have been a sin. I just waited while he studied me in this room for his pleasure and in my heightened sexual state I had zero doubt that was what he was doing. It was in the energy, in the collar waiting for me to wear it, in the red rose that was romantic, but not. All of it screamed of his style and pleasure. And mine too.\n\nIt was a while before I heard footsteps and then shuddered with fear when I felt him lean down behind me, his hands stroking my shoulders. I jumped and then lifted to his touch and he chuckled. \"Next time, spread your knees wider. Even if you're wearing clothes, you show respect and show your availability for me. Like this.\" He reached down to spread my legs and I moved obediently.\n\n\"Yes, master.\"\n\n\"There's a good girl.\" I grinned and he laughed and I discovered that it was beautiful when it wasn't at my expense for his cruelty. \"Little slave heart. I think that might be your one weakness that I've discovered, baby. You have such a slave heart that I have to watch myself in what I call punishment.\" He pet me, stroked my hair. \"Did you know that I generally don't keep slaves? I have submissives and playmates and I have dated three times, but I've never had any of those fall in a slave category. They were pre-arranged scenes, each time planned and agreed on. But you, little Tuesday, have such a slave like stance that I sometimes amuse myself imagining you kneeling in supplication to serve me my coffee. Think, pretty girl. One last warning. You play with fire. So one last chance. If you say you're not ready and you just want to keep playing like we are I will not judge or hold it against you at all. I'm overbearingly controlling, jealous, possessive, and violent. Would you like my collar?\"\n\nI lifted to his touch because he still stroked my shoulder. He was so warm behind me and his tone spoke of caring even while I knew his warning to be warranted. I had already seen his possession, had suffered at its song. And I knew he walked dangerous edges and that he tortured, not light pain play, but the kind that made me almost throw up, the kind that almost ruined me, but never quite did. I obeyed him, considering the thought of his commands taking more precedent. And I ended up down the thought of what would happen when we finally did have dates or something like it and he commanded me to something for his pleasure, something like making his coffee. How far along might that moment be when I found myself sleeping in a strange place? Would he sleep beside me or would he insist I follow a slave protocol and have a slave cage or bed? Would it annoy me to sleep next to someone and deal with sharing a bed when I never really had before or would it hurt my feelings to not get to feel him beside me?\n\n\"I have concerns,\" I finally said softly.\n\nThere was a smile in his voice. \"Good girl. I'd be worried if you didn't. Let's talk about those. Tell me.\"\n\n\"So, I don't actually mind the thought of slavery or serving coffee. I like it. But how deep of slavery do you mean? What if I would like to... I don't know. Um. Something stupid. Like if we ended up dating and I wanted to sleep in a bed or something? Would you command me no matter what in that case? What I mean is, is it total slavery or do I get input or... yeah, that's my question.\"\n\n\"You'll get a lot of input actually. You have your own life and a job that you're wonderful at and enjoy. I wouldn't take that from you. By slavery, I suppose I should say more accurately you would be a submissive that occasionally indulges my fancies of having you serve me like a maid.\" He kissed the back of my head, gently, and I realized that his gentleness left me somewhat breathless. It wasn't like other people's gentleness because it was hard to earn it and he very rarely seemed to give it.\n\n\"Oh! Okay, then. Yes master, I would like to wear your collar, please.\"\n\nHe made a soft joyful sound and disappeared from behind me, grabbing the slim collar. It was cool when he placed it gently on my neck and I heard the clasp shut and realized that he had a collar that, like the cuffs, he adjusted to me perfectly. There wasn't a breath of space between my neck and it, but it didn't choke at all. I felt him turn the band so the charm was center in the hollow of my throat and then heard a click of the heart lock being snapped closed.\n\nAnd now his voice changed. From serious to that playful sadism. \"Such a pretty little whore I have. I think I want to see a little bit of you tonight while we're here in this room. Lift your arms for me, won't you? I don't have clothes for you to change into tonight so I can't rip your pretty black shirt.\" I lifted my arms with a nervous laugh and sighed when I felt the knife edge against my flesh next, a soft sound of desire. He had already started to train me to equate those knives of his and the threats he made with them with erotic delight. It wasn't just the knife threat either. It was becoming any threat at all. \"But I can rip this bra apart. It's a cute little bra, don't get me wrong, but I don't see a reason for a little whore like you to wear a bra anymore tonight. Do you?\"\n\n\"No, master.\"\n\n\"Good girl. I'll sometimes command you to not wear one for the day, since I don't like them coming between me and my tits. And these are my tits, aren't they Tuesday?\"\n\nI shuddered at the words, remembering the lesson. \"Oh yes, master, they're your tits to punish and clamp and pierce.\"\n\n\"Good girl. Speaking of clamps, did you like my other present for you? I remember you saying that you didn't have a set of your own and I use these clover clamps almost every time, baby, so I thought I would give you a pair of your own. You'll be practicing with them sometimes while talking with me so I can be sure you never lose track of time and leave them for more than 10 minutes.\"\n\nI moaned at that. \"Every time, master?\" God, his clamps were hell. And the weights...\n\n\"Oh yes. Aren't I a kind master giving you these toys and training exercises?\" There was a wicked little tone to his voice when he came back to me and slapped my tits.\n\n\"Yes, master. Thank you, master.\"\n\nHe laughed softly at that and cinched my nipples again, hurting them so I made soft cries. But my dread only grew when he stopped because I knew what came next. The clamp fell closed and I gasped at the sudden torture that never failed to take the breath away. \"Oh God, oh please.\" I finally managed to inhale quietly, soft little pants, while the other clamp fell closed. \n\n\"Look at how sweet you are, little girl. With such pretty black and silver jewelry on your tits and throat.\"\n\n\"Thank you, master,\" I gasped through the pain.\n\nHe laughed at that and I heard his footsteps, heard the armoire as he opened it and got whatever torture toy he was feeling. When he came back, he flicked my chest with the riding crop and I shuddered. \"Tits out and shoulders back, little whore. Show them off to me when I dress them with jewelry.\"\n\nI obeyed even though all my body wanted to do was curl in on itself for some protection. But my submission to him was becoming more and more heightened, it seemed, and it was easier to ignore that instinct in favor of obedience. I lifted my head and forced my chest out and he took advantage of it, giving me rough strikes with the crop. I squealed when he slapped right on the nipples, knowing he was pacing by the sound of his footsteps, looking at me from different angles. My pussy felt alive, my hood ring rubbing me with every shift, with the thought of being the object at his knees. I shifted and squirmed because I couldn't stay still through the torment, though it was so kind compared to the cane, but it was okay and I knew that. I knew he didn't want me totally still beneath him. It pleased him to see my soft little movements, but there was a limitation. I could only move so much and by that rule I did succeed in following him, gritting my teeth and whimpering when I needed to. But I didn't beg. He had warned me I was playing with fire and had said he didn't want any whining about it, so I didn't.",
        "And he wasn't merciful at all. He had chosen a light toy so the crop licks went on and on. It started to connect with me then that he would choose some toys like that for a lengthier session where he could layer and build the pain up to levels that would have me jumping to obey at every miserable touch. For instance, the cane he couldn't do that with because it would break me but the strap or the whip or the crop? He could layer strikes upon strikes, upwards to 50 or more without fear of me breaking from that. It would take a lot of repetition to break me and he would be satisfied with my screams long before that moment.\n\nI realized that and felt a sense of foreboding. How long would he hold me down one day and make me take his paddle or a short, gentler whip? How much pain would he make my world become with a steady build? I wanted him to do it too, to push me up and up and up with torment and agony until I went out of my mind with it. I wanted him to layer the smaller pain with all the care he displayed so that I could find those darkest edges of my pain tolerance and feel my sanity start to fray, feel myself become terrified of the slightest touch even while I craved the touch of his cock abusing my ass more so that I could cum.\n\nI moaned with those thoughts, lifting up for him, for more. I moaned again and the crop traced the tops and underside of my breasts. \"Ah, those soft little tracks with the cane on your tits are already fading. Tell me, is your ass still pretty and marked from my pain?\"\n\n\"Yes, master.\" I knew this easily because I had obsessed over those marks. \"The bloody parts are all healed but there's still the bruising. And my wrists are healed without marks. I used the cream and antibiotic when you told me to. I love my marks,\" I added softly. \"I like pressing them while looking in the mirror or wearing one of the dresses so I can lift them up and see for myself.\"\n\nThe crop licked me cruelly some more in rapid little strikes. \"Little masochist whore. But such a good little girl you are, and so obedient.\"\n\n\"Yes, master.\" I gasped through the bites he left right on my already tortured nipples, the chain swinging between my breasts. \"Would you like to see them?\"\n\nHe chuckled. \"No. I hate to disappoint but this isn't a scene, baby. You're not getting cock tonight and I'm not making you cum for me. I'm going to send you home suffering in arousal and you're not allowed to cum tonight at all actually. I could be kind and strip you and whip your pussy to make it easier and chase away some pleasure, but I don't think I want it easier for you. I think I want my new little submissive to spend the first night with her collar burning alive for me and how hot I make her.\"\n\nI moaned with fear and a different suffering at that. His denial trial had been difficult, to say the least. But I had survived. I was always a sexual person and there had often been times where I would be aroused but doing something and busy and wouldn't have a chance to get myself off. Frustration was no stranger and it was manageable, but not comfortable at all. \"Can I... can I use my new clamps again tonight?\"\n\n\"No. God, no. You have to give them a break, baby.\" His voice was amused. \"A good thought though so if you can find other ways, safe ways, to hurt yourself, you may ask me for permission to do those.\" And still the crop fell on me as we spoke together, so that now I felt more and more pain with every strike.\n\n\"Yes, master.\" It came out a soft pant. \"Thank you, master.\" I was deep in subspace from the steady rhythm of pain, desire pulsing through me in a countermelody to his crop.\n\n\"You have been a good girl for me tonight, with such lovely slave posing, though. So I will make you a kind offer. If you edge yourself for me with your vibrator and send videos of you playing without coming and if you torture yourself bad enough to satisfy me and if you message me in the morning and ask in a very polite, begging way to orgasm, I might have mercy on you. But you would have to satisfy me with enough misery first.\"\n\nGod, yes, this was why I had taken his collar. \"Oh yes, master. Thank you, master. Does it take away from my chances if I ask you for ways to hurt myself?\"\n\n\"Not if it's to help you take more edging, of course not.\"\n\nI moaned, already so hot it was cruel and he knew it. He chuckled and the crop stopped finally when my breasts felt heavy and swollen to twice their size, when my abdomen was singing with sharp little stings. He released the clamps from me and set them aside. \"Open your mouth, Tuesday.\"\n\nOh god. I wasn't sure I could take his cock but obeyed without protest, trusting him. And it wasn't his cock he forced into my mouth. It was two of his fingers that he brushed across my tongue rings. \"Ah. Forgive me, but I had to feel these some way. I'm going to get you a nice huge cock toy to work on to train you up to take me, understood?\"\n\n\"Yes, master.\" It was garbled around his fingers but he understood anyway. For a minute he just fucked my mouth with them, softly ordering me to suck him, which I did, curling my tongue so my three rings pleasured him. It was why I had those rings, to please my partners and him I wanted to please more than anyone.\n\n\"Fuck me, this is why I haven't fucked your mouth yet, baby. I could force you to learn on my cock how to open wide and breathe through your nose when you choke. But if I'm being honest, I'm saving this. I don't know what for yet but I know I've been dreaming about these hot little rings since you sent me pictures of them.\" My lips curved up and I moved my head, suckling. \"Come here, little whore.\" And then he withdrew and did something else I never would have expected.\n\nHe kissed me. I don't know why I never expected kisses from him but I really didn't. Things like the crop licks felt more his brand of kiss. But now he did, his lips pressing mine apart with the same kind of possession that he fucked me open with. He worked his tongue around mine and I cried out for him to taste my desirous pain, needing him to taste it. And his kiss turned all the deeper, like he was trying to feed me his brutality and arousal. He cupped my tits, then slapped them while I moaned and writhed under his assault.\n\nWhen he finally pulled away he was chuckling again. \"Now, it's nearly time for you to go home and start your own private suffering show for me. First, I'm going to let you wander around alone and enjoy your night for a bit, now that you're collared. Wait right here in the floor until you hear your phone vibrate with my message and only then are you allowed to take off the blindfold. Understood?\"\n\n\"Yes, master.\" And then, blushing, I added, \"I'll miss you, master.\"\n\n\"Aww. I'll miss you too, baby. Now, wait right there.\"\n\nI obeyed, listening for the door which seemed loud enough for me to notice, but somehow the minutes passed again and I didn't hear a thing until I heard my phone vibrate. I tore off the blindfold and looked at the message first.\n\nIt was a picture of me blindfolded and kneeling, waiting in submission with my jeans, my shirt to the side and my bra cut into useless ribbons in the background. My tits were decorated with small little red bites and my pretty new collar glittered at my throat, the charm perfectly centered.\n\n\u2014\u2014\u2014\u2014\n\nIvory\n\nI'd had the collar with me while I followed her, unsure of how to propose this question to her and curious as to what she was doing on a \u202aFriday night\u202c when she had off because it was rare that she got those. And then she'd ended up at Sulfur's, of all places. My fetish club. Well. It was partially mine, but mostly my brother, Ash's. He did most all of the work while my ownership relied a lot on my capital and my entrepreneur experience. He would call me sometimes for advice or for whatever random help he needed, but he also understood that my jewelry chain was my main business and that Sulfur's and my fetish wear shop were hobbies.\n\nGrant you, they were rather important hobbies.\n\nSeeing her in the club I partially owned and helped set up and oversee? It had been too much of an opportunity for me to pass it up even if I did have to improvise. At first I was unsure since my games thus far had required a lot of planning, but then I'd watched her look around curiously, I watched her study my picture where it hung behind the bar and smiled to myself when there was no recognition at all in her. But I had noticed other things, too. Like how she didn't realize it but a couple of the regular doms looked her over with obvious interest and curiosity. She wore clothes that were too deliciously innocent looking, jeans and a black tank top and tennis shoes. She was real and down to earth and she didn't wear makeup and her hair was in a sporty ponytail. At the same time, all of her was very well kept because she was a successful business owner in customer service. She had an aura of invitation and a pretty little stature that taunted a dom to nurture and control and hurt.\n\nI both enjoyed seeing my little submissive get stares and misliked that the stares were covetous. She didn't wear my collar so when she was looked at it was as a potential playmate, not in appreciation of my sub. And I knew why she was actually there, as well. She very obviously couldn't care less about any other dom in that place, so the only other option was that she had come because I talked about it so often as my favorite place to play in public.\n\nThere was something perfectly poetic about collaring her there. It was purely spur of the moment, but when I saw her kneeling, blinded and trusting and collared so sweetly with the charm that had my initials on it I couldn't regret a thing. She could come back to Sulfur's all she pleased because as soon as anyone saw that collar and looked closer at it, it would be like a big \"fuck off\" stamp all over her. I had played there on exhibition sprees so hard and often that everyone regularly there knew me. Only the wildest subs came to me and I was a terror in the night. I don't know why or how that reputation had come to me. Well, okay, I knew a little bit of why and how. I did have a hellish play style and all that but it was strange too. Ash said when I was there, even the doms were better behaved and I had no idea what the hell that was about. And then it'd come back to me that submissives used my name as a point of pride, as if surviving my dungeon was a right of fucking passage into the knighthood of kinky badassery or some shit, which made me feel a little odd. It didn't hurt my feelings or anything, don't get me wrong. They all came to me for themselves, chasing their masochistic desires, and there was no other pretense for enjoying each other's company or dating or anything. It just felt weird.\n\nBut with her marked as mine I was glad that my name held that. I commanded her to enjoy the club and watch the scenes for a little while before she went home to edge herself. It would arouse her to watch and I thought that the reactions to my collar might arouse her as well. I was curious about those myself, so I watched her wander from the balcony. It was a joy to watch her too. Little Tuesday knew the things she liked, which was immediately apparent. She didn't stop and look at each scene like some people did. No, she heard the crack of a whip and turned her head, smiling with mischief and going to it instantly. I knew she was thinking of the video I'd sent her too and I had to smile. Besides that she had a good eye. The dom dancing with the six foot single tail while his submissive screeched behind a gag was a friend and he had beautiful whip scenes. Also, he loved an audience.\n\nAsh sat beside me while I watched her and he had a smile that would normally make me laugh. I knew that smile and it usually went with hard core memories of sharing a masochist and driving her wild together. \"Deirdre is here.\" He grinned. \"Come and play. I need someone to use to humiliate her with. She hates being shared.\"\n\nI laughed. \"No she doesn't. She's playing a game with you. She's always loved double penetration in every way. But she loves being forced more, so do that instead.\"\n\n\"Or you could come play as per the original suggestion.\" Ash was in a playful mood it seemed, because he was eager. My little brother was a strange type, even stranger than me in some ways. Oh he wasn't as intensely overbearing or threatening. No, he was slighter, smaller, far more charming and filled with playfulness.\n\nBut if you talked to him enough? It became clear that he was just this side of real sociopathy. I might be frightening on the surface, but of the two of us I thought Ash was far more dangerous. Normally I'd be all over playing with him, but of course...\n\nMy eyes fell on Tuesday. One of the guys who'd been looking at her followed her to the whip scene and he was noticing her collar. He spoke to her and she smiled, her guileless eyes lifting to look up at him and now that pleased me. \"I can't, Ash. You'll have to indulge without me.\"\n\nThe don traced his hand over her collar, eyes widening in just a smallest amount. It was subtle but it gave me no end of power trip pleasure. \"What's up with you lately? You haven't played with anyone for weeks now. Lily said you wouldn't play with her anymore and she's the hardest masochist I've ever seen. You loved her.\"\n\n\"I enjoyed her,\" I said gently. \"And I'm guessing Lily told you all this.\"\n\n\"Maybe.\" He leaned back in the chair, hands behind his head in a relaxed manner. Most people couldn't hold my brother's eye for long. They didn't know why because he didn't exert a particularly dominating gaze really. But his eyes were... empty. Charming and playful, yes, but there was no depth at all in them. There was little depth at all, in fact, to his character. I wasn't sure what had happened to my brother in the years when we'd been parted but I thought something terrible might have occurred, something that had seriously damaged him. Whatever was missing or broken in him made most people uncomfortable to be around for long. I was used to it. \"But it's true anyway, Ivy. If you don't play then you turn mean, so why won't you?\"\n\nAlright that was fair. If I didn't release some sexual violence on occasion, I did turn into a dick and Ash was the closest thing I had to a best friend so he suffered the most from it. \"I'm seeing someone.\" Even when I said the words, they still made me want to cringe. Poor Tuesday. She had stared curiously at the dom, who politely disengaged from her, and turned back to study the whip scene again.\n\nAsh followed my gaze to who I looked at and then stood with a laugh. \"Fuck me, you're already playing.\" He laughed again, harder. \"Oh, this is the best. A girl with your collar and monogamy? Poor little thing.\" But his teasing was playful and not mean at all. \"Be careful, Ivy, please? You know how you are and all that and how the past few have gone.\"\n\n\"I do and I will.\" My answer came shorter and a little more terse than I meant for it to, but I didn't want to think about my past heartaches. He was right, but it wasn't something I wanted to talk about. My last try had seemed to be going well. I had been talking everything out as carefully as possible because I was getting darker and darker with her. And then one day she just didn't show for our date. She disappeared, blocked me on her phone, on every interface I had connection to her. At the time I had been carefully integrating harsh training and conditioning with her day to day life and set it in time limits, adding more and more power play to the dynamic. And when she dropped me without a trace or a reason why?\n\nLet's just say I hit a wall of a dom drop in the same way a sub could drop. The darkest kind of depression hit me because I couldn't see her or talk to her or make sure she was cared for. The sexual training we had been doing had come with a kind of integrated aftercare that I steadily gave like a stream and I had thought it'd been enough to feed both of our needs.\n\nI still didn't know if it did or not. And that was the worst part of it. I thrived off control and held myself to an impossible standard. If I fucked up I learned and obsessively got better because that was a form of control. And when it was ripped from me? I got dark, blinded in a void.\n\n\"Hey.\" Ash was gentle. \"Seriously, Ivy, I'm happy for you. Keep playing. I just meant to be careful. Stop being emo and go terrorize your little sub.\"\n\n\"Fuck off. Emo, my ass.\n\nHe laughed and left me alone. Ash was probably the only person who knew me well enough to know that he couldn't always cheer me up. And he had no problem in leaving me be with what he knew could cheer me up. He didn't try to play the part of my keeper.\n\nI turned my attention back to little Tuesday, smiling again. When the whip scene had ended, the dom had gone on to fucking the submissive who writhed in her chains. And Tuesday was carefully looking at everything else, her face red with shyness. She went to her phone instead and I waited for the vibration.\n\nWhat kind of reputation do you have?! Everyone knows you but no one will talk about you. It's just the collar and the reactions are weird.\n\nIt made me forget the dark memories from my brother's words. The truth was there was something different about Tuesday. She was cut from the same exact cloth as I was and she was game to play anything dark enough. Don't tell me you've been trying to ask questions about me, little Tuesday. You wouldn't be such a naughty girl, would you?\n\nI smiled when she shivered and answered instantly. No! No, master, I swear. I wouldn't ever. I just meant that they don't let anything slip. I'm glad they don't. I want your name and all that from you if you want to give it to me... or... I mean, you know, whatever.\n\nI laughed at her deliberately awkward trail off, already thinking about my next game with her and how I would do it. Good girl. I think I'm satisfied with showing you off by letting you wander. Why don't we both go home now so you can get to work on being a good little horny fucktoy? And don't be sad. If you keep my collar you'll get to come back here eventually and I'll show you off while you scream for me all you like.\n\nOh, yes please, master.\n\nA fair warning. If I feel like seeing you suffer for one of my friends too, you'll just have to take all the more pain that I feel like making you take. Also, did you get your tests and sexual health papers sent?\n\nNo, master. Should be mid week though.\n\nThank God. I was dying to feel her around me without a condom. It was something we had talked about after the night I had caned her and shoved needles through her tits. It had been years since I'd fluid bonded with anyone, but now I had a single partner to suffer all my lusts and I wanted to addict her to the taste of swallowing my cum.\n\nSpecifically, I was eager to addict her to the taste of it after I fucked her asshole.\n\n\u2014\u2014\u2014\u2014\n\nI had to start doing things for my next game days in advance. I started commanding her which clothes to wear to work, making her send me a picture for my approval. Honestly, that kind of control wasn't usually my thing but I needed the rhythm of it, so that it wouldn't seem odd when I commanded her to wear a cute little skirt she owned to work on Thursday after we traded sexual health information. The devil was in the details, especially when it came to rape fantasies and making them as real as possible and I wanted everything to be absolutely perfect for Tuesday. There was a kind of romance in this for me. It might be sick of me to say it, but I felt about these games the way other people sometimes talked about planning on asking their girl to marry them. They spoke of how the surprise had to be so carefully planned and perfected.\n\nThat was me on Thursday after she sent me the health information. I started the day with a phone call to my brother and spoke to him in our native language, Russian. At first he asked \"What the fuck?\" And I answered in Russian, smiling. \"Don't worry about it. I just need to talk.\"",
        "\"You're fucking weird, Ivy.\"\n\nBut he let me carry on, let me talk about random shit. I talked to him throughout my check on the jewelry store until the language was curling gracefully across my tongue. \"Alright. I think that's good for now, Ash. Can I call you later to talk more?\"\n\n\"Yeah, sure. I'll just set the phone next to a wall and you can tell it stories for all I care.\"\n\nI laughed. \"Thanks, Ash.\"\n\n\"Sure.\" He hung up and I went to ask one of my jewelers a question. I grinned when I did.\n\nMy English was thick with a heavy accent that I didn't usually have. Which was good. I kept speaking Russian to myself, reciting anything I could think of while working. I kept my office door locked because I knew it would have looked crazy as all fuck if anyone saw this. But the accent was great and the thicker I could make it, the better. I had started using it Friday when this next game first came to me but again, the details had to be perfect.\n\nAnother reason why it would have looked crazy? I was beside myself with eager energy. My sadism and sexuality were a whirlwind inside of me, dying to get out, but that monster only hungered for little Tuesday right now. He was showing his teeth though. I noticed that early on, that when I rode a certain wave while out in public, other people reacted differently. Oh, nothing dramatic. Stupid things, like when I ordered my coffee and the little college barista wouldn't quite meet my eyes, keeping their gaze lowered instead. It was as if the wolf inside me was growling out a warning. To me, it was heady. It fueled my power trip over her, because it was all centered on her. I wasn't a narcissist and I didn't care about anyone else, but when other people acted like that too, it turned my thoughts and desires hotter for her.\n\nI went home a little early that day to take a shower with different body wash and shampoo, using scentless hunting versions of both. I dressed in jeans and a long sleeved shirt, put on form fitting leather gloves, put on different cologne, used different aftershave. And of course I grabbed the box that had her gift in it. And that last I opened to inspect it.\n\nWhen I had seen her in the last red dress, I had discovered a joy in seeing her wear the color. The deep color of blood offset her blue eyes so brightly that they appeared purple. She looked like a goddess of lust in red. So I had chosen another red one and this one was sleeveless, an evening dress that went even darker down the length and it would end at her knees. It was perfect and the box was perfect with a ribbon that tied around it when I placed the lid back.\n\nI glanced my reflection over, making sure I didn't look like a fucking serial killer since I was about to do some shady shit. And my appearance was quite good actually. I mean that would change when I covered my face with the soft ski mask I also had but by then the night would hide everything. I had had to do some scouting work to find a place to do this too, but the spot I had found was perfect.\n\nLast but not least, I got my hiking backpack and used it for toys. Instead of the butterfly knife I used to terrorize Tuesday previously, I placed talon knives in the front, made sure I had zip ties, scissors, tape, some small flechettes, eye mask, ball gag, a particularly cruel shock prod, and anything crude that might or might not be useful. Also, my Beretta, in its holster and with its safety on, but that wasn't for Tuesday. Look, let's just say that the kind of place that it took to play these games and not get caught wasn't exactly the safest place around, but I was pretty sure I was the baddest fucker in that valley of death, scum, and villainy, as Tuesday would say.\n\nSafety hazards aside, it felt to me like a Rubik's cube sliding finally into its solved place or like a puzzle with the last piece completing it. It was perfect, all of my forethought and everything I had in it. And she would love it. Well, alright, she definitely wouldn't love it at first. This might even be more intense than that first night I had raped her, but I remembered how sexually alive and confident she had been after that.\n\nAnd she had cum so fucking hard that night. My arousal turned into a dark thing when I remembered it as I hid her gift in an abandoned parking garage. This time, I didn't accost her at her work where I could watch her if she tried to lock me out. I would have to wait for her but that was thrilling for this game and I liked the thought of baiting my little submissive so she could play the part of my prey. The darkness fueled my playfulness, only put me in an even higher headspace. She wasn't even here yet and my power trip ride was sky high. Do you know the parking garage by the gardens to the east of you?\n\nThe message flashed the ... and there was a hesitation but the answer made me smile where I sat on the wall. I didn't but I do now thanks to google. Do you mean this one, master?\n\nShe sent me a map link and I smiled. Good girl. Yes, I mean that one. There's a gift for you on the third floor of the garage. Why don't you go and find it after work?\n\nI knew she'd be smiling her mischievous fae grin, eager to play and excited.\n\nYes, please, master! Give me five minutes. Almost done.\n\nI waited, speaking under my breath in Russian and toying with a talon knife. After enough time I covered my face with the silky ski mask. I had briefly considered something more terrifying and theatric, like a demon mask, but that would give her too much of a tip off, just like if I brought a cane or a whip. I had to be crude, but that was fun in its own way.\n\nI thrilled when I heard her, staying out of sight behind a pillar, exhilaration pulsing through me. I grinned when she looked nervously over her shoulder. I couldn't see her face but had a feeling she was smiling with nervous energy, knowing that something terrifying was going to happen, anticipating my assaulting her.\n\nShe wasn't wrong but I had carefully set things up that she would soon think she was wrong, if all of my timing was right. I held the one knife in my hand and the other was in the backpack which sat by a closer pillar to where her box lay, perfectly out of sight. She turned around, fearfully, and then went slowly to where I had commanded her to find the box in my more specific message. I could tell when she found it, her attention caught by it. It was what I'd been waiting for, just one moment of an opening.\n\nI darted to her, grabbing her by her hair and clasping my hand quickly over her mouth. She froze in my grasp, the gloves masking the hands she knew, my scent changed so that she was disoriented. I could practically smell the start of real fear working through her.\n\nTime to amp that fear into panic. \"And what's this then?\" And my voice was perfect, motherfucking perfect. It was deeper with my Russian use through the days and the accent made it guttural, that accent she hadn't heard yet because my English had become so dominant.\n\nShe screamed behind my palm and I had to control myself to keep from laughing because even through the panic there was a chance she'd know the laugh. A natural fire took hold of me, a fire to keep her screams silent and to subdue her wild fighting and my God did she fight. She writhed and I decided it was time to cross a few boundaries, but first thing was first. I struggled against her, forced to use one hand to grasp a wrist while she thrashed but eventually I got the other wrist and trapped them in front of her. \"Fucking cunt.\" I forced her forward to the wall, trapping her wrists in front of her body with her weight while I lifted the talon knife to her eyes.\n\nShe screamed again behind my hand, shaking, and I snarled, dragging the knife's sharpest point down her chest, down the v-neck angle, leaving a cut that made her go still. And when she was subdued with such fear, I placed the knife on the wall to choke her with a hand around her throat. She sobbed and shook while her world faded. I let go instantly when her struggling stopped, feeling her breath on my wrist when I moved my hand from her mouth.\n\nCare. Such great care for these darkest games. And I worked quickly, using a zip tie from my pocket to secure her wrists together. Instead of the ball gag I used the duct tape over her mouth, holding her while she was passed out from my choking. And I didn't end up using any of the toys because it didn't feel right. This crudeness and pure violence was the right flavor just the way it was.\n\nCarefully. Christ, carefully. Hurting my little fae would be a sin I wasn't sure I could live through anymore.\n\nI slapped her face, holding her so she was passed out over the side of the wall, one hand in her hair and the other to slap her one more time.\n\nShe jolted awake and all in all it was about thirty seconds my breath play had taken out of her. She shouted behind her tape gag and struggled with the zip ties.\n\n\"Should we fucking go again?\" I hissed it in her ear, clasping my hand around her throat.\n\nShe snorted and I had to ease off a little because I knew the sound of when bile rose in her throat and didn't want her throwing up from the terror. Careful.Yes, careful. I walked a tightrope.\n\nThere it was. She swallowed down the bile and shook her head in frantic terror.\n\n\"That's good.\" It rolled off my tongue with menace in every syllable, Russian poetry. \"I'd much rather have you awake for the cuts I give you. Just don't think about afterwards and you might even enjoy some of it.\"\n\nHer tears soaked my gloves when I pulled her up by her hair, taking up the talon knife again. She snorted breath through her nose while still struggling, but the terror had eaten her strength and it was little more than trembling in my arms. We tussled for just a second and then we were locked tighter than lovers ever would be, her as the angelic victim and I as the infernal violator. My cock was harder than it'd ever been but it felt that way with every game I played with her. She was like a sacrifice offered for immolation on the altar of my worst demons.\n\nIt was in that way I held her and cut her again while she whined behind the duct tape. Even my legs were interlocked with hers, binding around her. It was hard to tell where I ended and she began. We might as well have been one flame in the moment. I cut her again, slowly dragging the talon to see her blood. The red color reminded me again of her vibrant eyes and it drew my flames higher. They were the shallowest cuts imaginable, the tiniest lines of red. None of them would scar, but they showed me those tantalizing little glimpses of her life force. God, the amount of fucking care. Have I mentioned that? How easy it would be for me to break her and kill her?\n\nI was flooded with power trip adrenaline and arousal, so drunk on it that it almost made me sick. I drew the knife one more time up her tits before I shoved her brutally over the wall, lifting her skirt to thrust my fingers into her sex.\n\nEven with gloves I could tell how drenched she was. Her body naturally reacted to terror, I knew, and I had fueled her with a ton of it. She squealed behind her gag, shaking her head frantically and struggling all over again. So I smacked her ass, vicious spanks, and pumped her little cunt again. \"What a fucking slut.\" I made the words as cruel as I could, delighting in it.\n\nBut then I ended the terror game. I could make the build up as horrible as I wanted, but there was one part that would turn the tide in all of it and change her horrible nightmare into bliss. There was one thing I could do to drag her from my carefully crafted hell and show her the gates to the stars.\n\nI fed her drenched pussy my cock.\n\nShe froze and I finally let myself laugh behind her because I knew, fucking knew to my heart's depths, that there was zero way I would ever be able to carry on this game when I finally slid inside of her. Her body hadn't had my cock often but it had been in nearly traumatizing ways. It knew me far too well.\n\nA different little snort escaped her and I laughed again, ripping off her tape gag so that she could squeal. \"Holy fuck!\"\n\n\"Hello, little Tuesday.\" This time my voice was in my flawless English accent. It was far easier to fall back into it than my Russian. I railed her pussy raw even while I spoke, needing her and the fire she had that made me feel so warm.\n\nBefore she could answer she came and I had to cover her mouth to smother her cries from the intensity of it, her pussy squeezing my cock so fucking hard with the pulsations of her pleasure that it was bliss. I never wanted to leave her silken center. Being inside her, nothing between us? I closed my eyes and breathed in the scent of her hair, pumping her, enjoying the sounds it made. She was so fucking wet around me...\n\nI lowered my hand when her cries quieted, wanting to hear her words. \"Oh, my God. Oh, my God. Oh, please! Please more, please don't stop.\"\n\n\"I wouldn't dream of it.\" I doubted I could have if I wanted to. So much pleasure was racing hot through my blood that it held me slave. I wrapped my arm around her shoulders and braced my other hand against the wall, fucking her harder and faster but I forced myself to alternate my rhythm too because I refused to come too soon. She lifted her zip tied hands, but it wasn't to fight me this time. Instead she held my arm closer, riding my rhythms with frantic, out of control paces of her own. She came again but it was a silent orgasm while she choked on pure euphoria in my arms. Sweat covered both of us. Her next orgasm barreled on the heels of the second and her pussy was a pulsing vice on my cock. She felt like fucking heaven, riding the waves of relief from the hell I'd given her.\n\nShe was whimpering by the end of it, a beautiful mess for me, her cream having squirted around me.\n\nI gasped, feeling the pleasure rise too hot and too fast, ripping control from me. \"Close your eyes. Turn around and kneel with your mouth open.\"\n\nShe obeyed instantly, staggering around and more falling to her knees than kneeling on the dirty ground. She opened her mouth and I used my thumbs to press her open wider, gaping her jaw. I forced my cock past her lips, needing to feel those rings on it.\n\nThe feeling was even more than I could have ever dreamed, those three metal balls curling around my cock, stroking it with smooth silver. I finished with a growl on her tongue, baring my teeth, delighting in the sight of her brought low and degraded on filthy concrete at my knees. \"Swallow it, Two. Swallow every last drop I feed you.\"\n\nShe moaned a low, throaty sound and if refractory period wasn't a thing, I would have wanted to fuck all over again. As it was I satisfied myself with watching the spasm of pleasure shake her body while she swallowed. I placed my palm over her closed eyelids so that she wouldn't open them in her satiation and see me, watching her throat work and seeing her lips curve in pleasure and delight.\n\nHer smile widened when she could speak again. \"That... was very mean.\"\n\nI laughed and leaned forward to kiss her. \"Well, forgive me, Two. But you did say you wanted to hear more about me from me so I decided to give you some information. Like how my family is Russian. I can't help it if you didn't like the way I told you.\" But the words were playful and satisfied.\n\nShe giggled in mischief. \"It was worth it.\"\n\nI kissed her cheek next, licking at the tears she'd had when she'd thought I was going to kill her. And then kissed her forehead where it was still flushed from her panic and wild arousal. I wanted to lave her body in kisses, from her head to her toes, and stroke her all over. Instead I said, \"Keep your eyes closed until you feel the blindfold in place.\"\n\n\"Yes, master.\"\n\nShe obeyed me and then when she was blinded I sat beside her against the wall, pulling her into my arms so that she laughed. My backpack was just in reach and I grabbed it, careful to not let her go. \"Open your mouth.\" She shuddered at the command and I grinned, knowing she was thinking of something sexual all over again.\n\nInstead I fed her, pressing a chocolate protein bar to her lips. She laughed again, breathless and delirious, drunk on the adrenaline. She eagerly took what I gave her, eating the bar and drinking water when I lifted it to her lips, curled into my chest with her zip tied wrists since I hadn't cut those yet. For a long while we were peaceful together. We spoke a little bit but the mood was delightfully calm silence. After a little bit, though, she said in a soft voice. \"Oh. Crash.\"\n\nAnd I kissed her because I knew what she meant, what was happening. \"It's okay. I'll take care of you. Let go if you need to.\"\n\nShe was out in minutes, lax against my chest, her breathing deep and even. I lifted her to carry her to my car first, where I had parked a little ways away. It was a decent walk and carrying a person wasn't exactly the softest task but I also didn't give a shit. If I had needed to carry her twice as far I wouldn't have cared. It was a stupid price to pay for something that was more precious than any jewel I shaped for a living. I buckled her into the passenger seat with a blanket from my back seat and the temperature on a comfortable setting, locked her in for just a moment while I went and cleaned up. I moved as fast as I could because something was happening to me. Chasing her and playing terrible games and stalking her was making me both crueler and more cautious and I was loathe to have her out of my sight, though she was certainly safe.\n\nShe slept through the ride to her apartment and I used the key she had on a lanyard to carry her inside and put her in her bed. I took a moment to copy that same key in a mold I had in my car - and don't be coy and wonder why I had that there - and then tucked her in, leaving the dress by the side of her bed.\n\nI waited and listened to her breathing, having cut her zip ties so that she was free but still masked. I wanted to make sure she was alright, listen to her wake up.\n\nWhen she started to rouse, I silently left, smiling to myself as I did.\n\n\u2014\u2014\u2014\u2014\n\nTuesday\n\nFlatline started a strange routine and I would get phone calls when I was closing the store on random nights, whenever it struck his fancy to come and use me. The first time after he'd nearly killed me of a heart attack in the parking garage, he called and his voice was smiling. Of course as soon as I heard it, I was too.\n\n\"Put the mask on and wait for me, baby.\"\n\nThat was it and he'd commanded me to start keeping the second mask he'd given me in my backpack so I had it along with my cuffs no matter where I was. I had laughed at that command, messaging back to ask him if he was worried about running out. And of course he'd message back with an emoji rolling its eyes at me and said that no, he wasn't, but it made things easier and he had the leisure to command me to make his life easier.\n\nI remember answering that at least he got something from owning a slave because the rest of the foresight work seemed goddamned stressful. He'd laughed on the microphone over psn chat to no end at that response.\n\nBut it wasn't the same as his presence. I smiled when the door lock bolted, turning to his direction. I was getting used to being blind during our encounters, used to listening to where he was or his tone of voice since I couldn't see his facial expressions. The thought of one day not being blinded with him scared me in a way. If I reached that day, I knew that having my sight to see his expressions and watch what he did would make things even more intense than they already were with the addictions he was creating inside me. When things were already this intense, it felt like something I might not come back from the same.\n\n\"Hello, master.\"\n\nHe laughed at my greeting and walked to me, wrapping me in his arms and lifting my face for a kiss. \"Hello, Tuesday,\" he purred against my lips. And then his tongue was down my throat and his hand was fisted painfully in my hair and the other squeezed around my neck, covering my pretty collar. I moaned up to him, turning breathless when his kiss deepened and turned darker. It didn't matter if his actions ever started as gentle. When his lust rose, violence came with it, sparking from his fingertips, and his tongue lashed me with possession and fire.",
        "I remember one thing odd from that night, one thing off. He paused that kiss, stiffening for a moment, and lifted his face from mine. I waited in my blind, dark world, face still curved up to him, still held by him. If it were some other guy who'd stopped a kiss like that, I would have turned wary, looking to see what was up, if something caught their attention. But with Flatline, I couldn't even summon a concern or worry. If something was wrong, he had me safe. I knew that without thinking about it or considering it after the amount of care he'd had with his terrible games.\n\nWhatever it was, he turned back to me and it was gone and out of my mind with his next words. \"I thought that now you're wearing my collar we could have a nice, hard training session together.\"\n\nI shuddered even while my knees went weak. He laughed and it was wicked this time and I learned why when he took me back to my storage room and stripped me, then cuffed my hands behind me. He introduced me to a short nightmare of a whip and by training session he meant pain training so I could take more for him.\n\nHe worked me over until I was a mess, layering strikes and crisscrossing them to compound more and more pain. When I sobbed and begged for his mercy, he said \"Okay,\" in such an evil voice that I cried from it, dreading whatever horrible thing he was going to do to make things worse. And I wasn't wrong. He tortured me a different way, holding me captive in his arms, while he held a vibrator to my pussy and edged me to hellish pleasure, pulling away before I could come over and over. He'd wait a while and then do it again until I was begging for mercy.\n\nAnd again he acquiesced easily. \"Anything you like, pretty fae.\" And switched back to the whip.\n\nI begged again. And again. Pain turned to pleasure turned to agony turned to ecstasy. My world started to spin into chaos while he held me and covered my mouth and whipped my tits and my pussy, my ass and my thighs. My body became a symphony of heat even while I couldn't think past the burning demand in my pussy that screamed for relief.\n\nEven that he didn't give. He fucked my ass instead, railing me, but it didn't matter. He didn't even touch my clit, not even to slap it or whip it, carefully making sure that nothing at all touched my cunt. And it didn't have to. \"Come for me, you wanton little fuck.\" It was a guttural snarl by then and I squealed behind his palm, thrashing from the anal orgasm, my hole milking his cock. I fell into his arms while he held me up, banging his own orgasm into my ass while my world faded for just a moment or two from his pure force and aggressive use. I was dimly aware of the full feeling in my ass when he finished inside of me and moaned when he forced a butt plug too, speaking over me in perverse satisfaction. \"There we are. Coated in marks like a second skin and with an asshole holding all my cum. That's better, isn't it?\"\n\n\"Yes, master.\" I moaned it beneath him, trembling and needing his control. He was right. The marks were like a second skin. Fuck me, but the pain was becoming like a second skin. He stroked his hands up my body and I fell back to his touch, as hot and sore as any touch made me.\n\nBut he only chuckled in deep pleasure. \"That's it, little Tuesday. Just sink down into the pain and let me rule you. There's so much of it to fall under, so you can get nice and cozy into subspace for a while.\" And I obeyed gladly because subspace was a fanfuckingtastic place to be.\n\nHe stayed for a while, petting me while I knelt in the floor at his knees. For a while we were quiet.\n\nAnd then we talked. Just like that with me still kneeling because it felt like the perfect place to be even if the rules were a little more relaxed and we were speaking casually. The submission didn't leave. It stayed on a deep level, but he was fast becoming more than my master. He was becoming my best friend. When I talked to him about the business and the random shit I learned from owning one, he answered back with knowledge. I didn't know what he did for a living yet but his intellect followed the wavelength mine did.\n\nIt was then when we were talking that he quietly said, \"Someone saw us when we kissed earlier.\"\n\nWhich must have looked weird. Me closing my store up and wearing a blindfold to kiss this man, and I didn't know his appearance but I knew he was a fucking monster of a man and muscular as all hell too. \"Ah,\" I said softly. \"I'm sorry.\"\n\n\"What the hell are you sorry for?\"\n\nI laughed at the question. \"For you being seen like that I mean.\"\n\n\"I... Jesus, Two, I don't give a fuck. I was worried about you.\"\n\n\"Yeah, no, I don't particularly care. It probably looked weird but it's a gamer store with a mostly adult clientele in a liberal city. I'll survive.\"\n\nThat had been my approach for most of life actually. That I'd survive. Awry kink relationships, ups and downs... My life was pretty charmed and my stresses were ones I'd happily handle. Flatline kissed my forehead. \"I suppose that's fair. You'll tell me if you have any problems, won't you, Tuesday?\"\n\nHis voice turned cool, commanding as it had been during his training, and his finger curled through the O-ring of my collar threateningly. \"Yes, master,\" I said, voice going needy just from that touch of his.\n\n\"That's good, little Tuesday, because if I thought you had problems that I might have part in and didn't come to me about those, I would be very upset. And then, well, I'd have to take all of my frustration to you and reassure myself with the sounds of your pretty screams and the feel of your flesh under my cane. It would be the kind of thing that might take a nice, long while to make me feel better about it.\"\n\nHis voice was ominously intense, his threat laced with promise. There wasn't the playfulness he usually had, instead replaced by seriousness. \"Yes, master.\"\n\n\"Good girl.\"\n\nBut I didn't have any problems, not a one. All of my regulars kept coming as always and no one brought it up to me. Flatline and I kept up our constant communications and I reassured him that his threat was not forgotten, but so far as I was aware, there were no problems from the incident. He was satisfied.\n\nAnd he had me take pictures and videos often. I kept his dresses in a separate part all of their own in my closet, messaging him with that picture that made him laugh. I had zero problem in telling him that I had no tastes when it came to that kind of thing, but I could appreciate it when someone else did. I loved my jeans and gamer T-shirts, but I also loved prancing in his dresses, spinning like a princess in front of the mirror. Hilariously, I told him I loved his green dress he'd given me. To which he replied he hadn't gotten me a green dress. I took a picture of the last dress and he messaged back to tell me it was red.\n\nSo hi, I'm Tuesday and I'm colorblind.\n\nHe didn't even have to ask me if I was being serious. He answered instantly. That's why you don't wear makeup.\n\nAnd he was right. It was. He started making me tell him random other facts about myself, to which I confided that I could play blindfold chess.\n\nThe night after he found that one out, he called the work phone again with the same command to put on the blindfold. But this time he told me to go to the back room and wait for him instead and I knew it was because there were no windows there.\n\nHe tied me down naked to a chair, roping my hands on the rests and my ankles apart. For a moment, he chuckled and slipped his fingers inside of me so that I moaned, then begged. \"Please hurt me.\"\n\nIt had changed from begging for his cock to begging for his pain because the pain was the only way I could earn orgasms. I was starting to learn that. I was scared one day I would slip up and beg for his cock and he would happily agree, fucking me in the best way, right up until he laughingly said, \"No coming, Tuesday,\" and left me to burn for nights because I didn't ask for his pain first.\n\nBut that time he only laughed. \"Sorry, baby, but we're playing a different kind of game tonight.\"\n\nWe did play a different game. We played fucking chess. He spoke the board square designation where he sent his pieces and I commanded where to send mine, blindfolded and tied down while he moved both sides. But it was chess with a twist that I discovered after losing the first piece. He stood from his chair and circled behind me and I cried out when he placed a vibrator to my pussy, teasing me. He edged me to torment and stopped when I was close to orgasm, not letting me go over, so that I was shaking in his arms. \"Sorry, little Tuesday, but I think sacrifices should hurt, don't you?\"\n\nThere was only one answer. \"Yes, master.\"\n\nWhen I lost - and yes, I lost. Don't judge. It's hard as fuck to concentrate with what he did - he mockingly sighed while I quivered. \"Oh, no, little Tuesday. If sacrifices should hurt, then so should losing. No more orgasms for three days.\"\n\nI moaned with dread, quaking so hard from his edging that he had to keep me tethered and stand behind me, petting me with condescending shushes under his breath. It was terrible, even worse because he had my absolute compliance. I craved more than anything to obey him for many reasons. One, I was his submissive and he had played the greatest goddamned games I'd ever been part of, so he had my gratitude and respect. He commanded. I obeyed. Two, I never wanted to break the magical spell of obedience and how much it soothed my submissive nature. And three?\n\nI knew it meant I'd probably see him the night of that third day and he'd blow my world apart with whatever he'd do. With days of edging, he'd rock me with some kind of fear fuck or torture and then beyond that was his satanic wonderland where I'd forget my name.\n\nI wasn't wrong but had to suffer through those three days without going mad while he messaged and commanded me to edge myself on video for him and he did that often. My life turned into a hell of desire wherein I distracted myself by reading every goddamned chess strategy I knew again and again until it was drilled into my mind. I practiced against any AI version available to me on the most difficult settings. I begged him to let me wear the clamps at night to make wearing the plug more tolerable. He wanted me to beg him for pain, I knew, and it became very easy to give him that.\n\nI dove for the work phone when he called and knew he saw when he laughed in my ear as soon as I answered. \"Why, little Tuesday, you look antsy. Go to the back room and put your mask on.\"\n\nFuck me, but I couldn't leap to obey fast enough. I waited for him in hopeful excitement, having thought endlessly of what he might do for this. And he didn't disappoint. He never did. \"Hello, master,\" I said when I heard him.\n\nIt was becoming a ritual. \"Hello, little Tuesday.\" He was smiling like always and he kissed me with that same fire that made me go weak at the knees every single time. \"Do you want to cum, pretty girl? That was so mean of me, wasn't it?\"\n\nI moaned against his lips. \"Yes to both, master!\"\n\nHe laughed. \"It'll cost you. And what do you think it costs you?\"\n\nI practically glowed with exhilaration and delight. I knew this answer easily. \"Pain, master. Lots and lots of pain.\"\n\n\"There's my girl.\" My emotions were a turmoil fueled by the madness of the past three days. I felt dread, oh yes, but also a thundering excitement, a terrible arousal on a tether with his torture, a tempestuous desire...\n\nAnd love. I don't know why that hit me then, at that exact moment, but it did. I was in love with Flatline and I hadn't even seen him yet. \"First things first.\" He undressed me, his fingers pausing only to tease my nipples and casually caress my sex. \"Hands above your head, pretty sub.\"\n\nI lifted them obediently and felt him working, pressing me against the door, and realized he'd made makeshift bondage with straps on my back room door when he tethered my cuffs and pulled the straps tight. \"So creative and resourceful.\" I dared to say it, playfully and with respect though. Always respect. I no longer dared to speak with anything less than that with him and I always used my manners now, so much that it was starting to bleed into my day to day life.\n\nHe nipped me, biting my bottom lip. \"Well, I do have such an inspiring little submissive to get some credit. Now, let's see how high your threshold is when it's so wonderfully aided by all this hot arousal you have. If you can impress me with it, then I'll let you come. If not... well, then, I obviously didn't edge you high enough, but we'll make sure to spend the next few days correcting that.\"\n\nI moaned with some fear at that thought, even though it was a silly fear. I knew I'd take what he gave me. He had never given me a safeword or an out and now with the acknowledgement of just how much adoration I felt for him, I also knew he could flay me with his whip and I'd let him. \"Yes, master.\"\n\n\"Good girl.\"\n\nIt was the short whip again. He held one hand around my waist and started at my thighs, making me hold my legs apart for his punishment. And I did. The pain washed over me while I considered how terrible that whip was. It wasn't like the cane and wouldn't break me too quickly. No, with the braided whip, he could play his song of pain for as long as he liked. If he were careful enough, he could play with it for hours. It was a terrifying thought because he was careful enough, an experienced sadist who had more knowledge of my body than maybe even I did now.\n\nHe worked up the front of my body, flicking at my hips and abdomen, upwards to my tits. Those he decorated with terrible little strikes, building up the pain in the way he preferred, drawing the soft little cries from my lips. I wasn't sure I could ever be good enough to be totally silent but also knew he would never want that. He loved it when I made sounds for him. Every single time his breath and his words reacted with his excitement and pleasure at my involuntary pain sounds.\n\nHe started the circuit over again, starting at my thighs and working up. I sank to the torment, enduring what he wanted me to.\n\nOn and on. The whip felt like it would never end and I didn't care. My thoughts went back to the time he'd been possessive, calling my pussy his and my tits his, hurting me with his cane. His, his, his. It pulsed through me with the whip, with his breathing, with the same rhythm with which my pussy throbbed for release.\n\nIt was only broken by his pause and command. \"Time for the other side of you.\" He undid the straps attached to my cuffs and refit them when my ass was to him. \"And I almost forgot. You need some pretty jewelry.\"\n\nI waited for the clover clamps, amazed at the feeling I had. It was total surrender. If my experiences before Flatline had taken me to subspace, this was a slave's headspace. I was flying higher than high. And then the clamps made me throw my head back and squeal and it felt even hotter and higher. I went still, breathing to take it, the pain like my wings when it was tethered to the hellish need.\n\nAnd the whip was back, on the backs of my thighs and ass. He loved to mark my thighs because I danced with those from how tender it was and it made the heavy chain from my clamps swing. Ow. Ow. Ow. Oh, please! But I didn't say those as words, just kept giving him pathetic cries. Like the night with the vibrator, time lost meaning. Everything lost meaning. My sanity started to fray as the flames went higher, burning me alive like Helen held by Candyman. Tears streaked my face beneath my mask.\n\nHe was finally the one who had to end it when I wouldn't say once that I couldn't take anymore. He growled by my ear, holding me still and he set the whip down, grabbing me instead. \"Fuck, Two. Just... fuck.\" The cuffs were free again and he lifted me, taking me to the table where he bent me over it. I was like liquid again, lost to him. Please, I love you. Please, did I please you? My cries rose to keens when I felt his cock against my entrance, pressing. He spread me open like he always did but this time he was slow, filling me inch by inch while I moaned into the table.\n\nWhen he was seated, he sighed above me. \"Good girl, baby. Such a good girl. I'm so proud of you. Take all you need and want from me.\"\n\nI didn't know what made me happier. His pleasure or the reward. He fucked me more intensely than he'd ever done, though it was slower. And I came.\n\nAnd then I came again. With a third, smaller one on the heels of that one. And one more time when he snarled out his wild orgasm, banging into me. He fell over me for a moment, his hands covering mine on the table while his cock was still inside me. \"I don't know what that energy was,\" he said softly, \"but it's killing me that we aren't in my dungeon where I can make you crawl at my side for the next few hours and use your asshole later while I make you cum again. And then make you drink and eat from a dog bowl. Christ, Two. Look at you. The things you let me do, the games you let me play.\" He pulled out of me but so carefully supported me while I fell to my knees, leaning against his legs for support. My body glowed and I felt dazed, not entirely present. His pain still held me, enhanced by my blindness.\n\nI moved where his touch suggested, tilted my head when I felt his hand at my collar. \"Pretty girl, I'll have to choose a perfect leash for you next time, but for now...\"\n\nHe knotted rope through the O-ring and tugged, clicking his tongue. I automatically crawled to the sound, resting my head against his leg again so that he laughed. Flatline hummed, actually hummed, and pet me, sitting down in one of the chairs and maneuvering me so that I could lay my head at his thigh and he could continue his strokes. I don't know how much time passed and something seemed to suggest that he didn't either and neither of us particularly fucking cared.\n\nHe did break the spell eventually though and for that I was grateful. One of us had to. The only other alternative was for him to pull off the blindfold and use the full force of his gaze and growl at me instructions that ended up with his holding me kidnapped in his dungeon. It would have worked too. That moment, after the emotion involved in that game? It would have. And I for damn sure didn't even have a shred of willpower strong enough to break it.\n\n\"I've been meaning to ask you.\" His voice held a note in it that made me shiver, as if he were being overly light, covering up whatever dark thoughts he had that held hands with the ones I'd just had. \"What the fuck is this tattoo?\"\n\nIt worked. I laughed, still nuzzled against his thigh, but answered and it was in a more aware voice. My tattoo. \"It's Eminem's tattoo. The mausoleum that says rot in pieces.\" It was on my right thigh, the one that my favorite rapper had around his belly button.\n\nMy answer worked to break his spell too. He was silent for a pause. But then he laughed and it was that full sound that made me grin to feel it through his body. \"Fucking shit, Tuesday, why the fuck even?\"\n\n\"Because it's amazing and he's amazing and the reactions are great when people find out I have it and what it is. It's the best tattoo ever for a conversation.\"\n\nHe laughed again. \"It doesn't fit and yet it does so perfectly that it's actually kind of beautiful, damn it.\"\n\nI kissed his thigh and stroked him over his jeans, massaging him. God, I needed to bake him cookies or some other stupid shit. \"I have others in mind to get. Lamb's bird with the bullet in its mouth, that BDSM triskele thing made of roses, the Empire's sigil from Star Wars. There's a ton of them but I've been trying to find someone to brand me or do scarification work first. It's nigh impossible though. At least for me it's been a lesson in frustration. It also might be stupid to get since my skin tone is light.\"\n",
        "He let me talk even if it was just inane ramblings, even if I talked too much sometimes. But there was a grin in his voice when he answered. \"Edgy little fuck.\"\n\nI laughed and hugged him as best as I could feel and he had started to allow me those touches. Sometimes it still felt strange to give them to him. \"Master, I...\" I paused, thinking for the words. \"Thank you.\" It didn't feel adequate but I wasn't about to say those other three words until I was sure of them and of these exclusivity rules.\n\nHe chuckled. \"You can say that and I'll say you're welcome, but it was all purely selfish.\"\n\nI grinned, thinking, a sudden terror starting in me. Okay, so, what if I had gotten this all wrong? How did this go? What was I doing? What if this wasn't in the cards?\n\nFull disclosure? I gamed with guys, hung out with guys, played fantasy football with guys, had fun kinky forays with guys, occasionally dared to date a dom or two.\n\nBut never exclusively. This was the first real dating I had ever done.\n\nHe left me the same way he did every night, eventually, giving me a kiss before he said goodbye. I was still a little owned, still under the waters some, but I was enough back to talk and flirt and tease. I was also a little bit of a coward, afraid of that feeling inside of me.\n\nWhen I pulled off the blindfold he had left a gift that made me laugh in delight even when my chest hurt a bit. It was a stuffed Tauntaun. He'd also left me a message. You were in danger there for a bit. I almost didn't feel like letting you go home to your place tonight, Two.\n\nDanger, from you? Surely not.\n\nBe careful, little girl. Taunt me enough and maybe I'll change my mind and kidnap you anyway.\n\nChloroform.\n\nHa! Bad little thing. Now I know not to use that.\n\nIn answer, I sent him a meme of a girl sitting on a toilet with a guy standing over her while they both pissed together. It said #teamwork at the top and #relationshipgoals at the bottom.\n\nYou're trouble, little fae. And one hell of a temptation to me.\n\nIt was a long while before I got up and left. I was distracted by messaging him, but then realized he was distracted too when he sent me one that said Are you ever going to go home?\n\nI cleaned and took my Tauntaun and left at that, teasing him some more for stalking me and how he obviously hadn't left himself if he knew I hadn't.\n\n\u2014\u2014\u2014\u2014\n\nIvory\n\n\"Thank you,\" were the words she'd said that special night but I'd heard other thoughts in her voice. I didn't press those thoughts because I understood all too well why she wouldn't put voice to them. Even when she'd taken so much of the whip that I'd finally had to stop it with the realization that she'd have let me keep going all night. She'd have let me break her and break her some more. The energy had been pure and deep, a place I hadn't gotten to feel very often. There was a difference in the desperation and wild delights that went with my usual games and that kind of depth, the dark, seductive waters she'd drawn for both of us with whatever reverence she'd felt in her heart. It hadn't been a fast kind of game or even a particularly inventive game. It'd been straightforward impact play at the end of her denial period, but it was still something I wasn't likely to forget.\n\nGod, when she'd looked up at me while I roped her collar for a makeshift leash, I'd considered something illegal. Yes, I know it wouldn't be the first fucking time and that I'd trespassed the hell out of her life, but even so. It would have been breaking the order of things as I had pre-considered them. So I hadn't broken that yet just as I hadn't used the copy of her key yet. Sometimes it was hard to have patience but planning these fun little forays out had taught me the value in being patient. So I let her go that night with her other thoughts and words unsaid because she didn't have to say them. I understood why she didn't. It was terrifying and from our conversations, I'd learned that Two didn't have a very traditional dating life. It had been sporadic and promiscuous and she was used to her space. She'd seen movies like anyone else and traditional dating standards had ruined that idea for her. Her scathing comments on things like Valentine's Day and missionary sex made me laugh. My little Tuesday hated puppies, children, romance in movies, and thoughts of tradition. Cats she could deal with, apparently. She said they were twats like her so she could get along with them easier, but anything needy? Nope.\n\nSo it made perfect sense why she didn't say those words. And she never had to say them first if she didn't want to. I'd say them first if it came to that. Of course, my language wouldn't be in three letters and she wouldn't answer back with a \"too\" at the end. She'd answer back in screams and tears and terror.\n\nFor the time though I kept playing with her by calling her at her store and commanding her to her blindfold. One night I made her hold a mouthful of my cum while I used a play piercing kit to place decorative needle after decorative needle down her legs and through her pussy. She had been snorting in pain while forced to hold what I'd given her. Another time I connected her to a low setting vibrator with a foot pedal control that turned it off. I harnessed the toy inside of her, placed her in strict bondage around her ankles, knees, thighs, and wrists behind her. And for the final touch I placed my worst clover clamps on her with the three weights that made her cry out and sweat in torture. But I gave her an option to relieve herself of the weights by making her kneel in front of a chair, pleasantly pointing out the fact that she could settle down on her heels and let the weights hold on the surface in front of her. \"You can even cum as much as you like during the next ten minutes but I suggest you get it out of your system. You'll be in another three days of denial training afterwards.\"\n\nOf course I didn't tell her that the stop pedal was taped right beneath the weights. I just sat back and watched her try it, laughing when she gave a miserable cry behind her tape gag.\n\nBut this was Tuesday. She managed to cum three times anyway. And she obediently suffered those three days. I was hell on her, absolute torture during those specific three days. I made her sleep with a vibrator harness, with too soft of a setting for her to get off on, and the butt plug. I sent her messages about how I still hadn't actually eaten her hot little pussy yet and felt her swollen clit on my tongue. I talked about how the next time I played with my needles through her cunt, I'd have to make her hold a mouthful of my piss instead of cum because she enjoyed my semen too much. It was pure cruelty. She begged me to use her clamps day and night, even once asked if I would consider it if she asked for a caning. Poor little Tuesday. I didn't give her that mercy.\n\nBut there was a reason and I had promised to make every time she suffered for me worth it for her. This wasn't any different. I had a surprise for her again.\n\nIn one way I was terrible on her. In another way, I wasn't sure if I could have done these things in real punishment anymore but I also wasn't sure Tuesday would ever drive me to real punishment. She was too playful and infinitely adventurous. And she obeyed thus far, trusting me so much that it sometimes floored me.\n\nAnd of course I had another gift for her. I stared down at the necklace I had chosen for her, caressing its case. I sometimes hated owning a jewelry chain because the type of high class people who would occasionally come in and thoughtlessly buy a random diamond piece for a significant other or mistress. It was a rich person's equivalent to buying chocolate or some other bullshit. And it was always diamond. It drove me crazy with the lack of thought for something that offered the chance for so much perfection and consideration.\n\nFor instance, the necklace I had for Tuesday? It wasn't an overly rare stone that I had ended up with and certainly not as expensive as a diamond. But the choice hadn't been about cost in the end. Just like it hadn't been with the dresses. The black dress I had bought her first had been the most expensive, sure, but definitely not the most beautiful on Tuesday's fae form.\n\nLikewise the necklace I'd ended up with had the signature stone of garnet in small tear shapes that were circled with diamonds. But the diamonds weren't the most beautiful part of it. They served to enhance the deep red of the garnet.\n\nI had gone through a ton of ruby pieces too before I ended up on this one and if someone had told me that garnet, of all goddamned things, was where I'd end up? I'd have said bullshit a few weeks ago. But there it was. It was a softer stone, easier to hurt, and far less coveted.\n\nBut it was the color that stole me. It was darker and deeper than the ruby pieces, like teardrops of glittering fae blood. The shine to it was a little more translucent and it would match with my favorite red dress for her like an exquisite dream. And most often gold went better with the red stones but that had been a problem too because gold didn't work on Tuesday. But the shimmering diamonds resting beneath her dark hair, framing the crimson that turned her eyes purple? Now that would work.\n\nEven so I still might not have settled for garnet. This was Tuesday we were talking about and I went through everything I had across all of my stores, searching to see if there was actually a better ruby because I had my heart set on red.\n\nBut then something else occurred to me. Another distinguishing factor of garnet? For the most part, that vibrant appearance was natural. It didn't require many enhancement procedures because it just glittered. And that's how I really ended up with a generally considered lesser stone was that sappy metaphorical bullshit because this girl was getting to my heart that damn much.\n\nI closed the box and put on my day suit jacket before I left, sending a teasing little message to my playmate.\n\n\u2014\u2014\u2014\u2014\n\nTuesday\n\nI was more than ready for the end of the night that third night after his evil predicament game. It had been one of his shortest games too and yet it had been freaking awful of him. My store was immaculate from the days that followed because I was in an endless state of restlessness, organizing and cleaning every chance I got. And by the end of the third day, I was updating the little tablet I used that connected to my register, making sure everything was ordered and cared for while Tate ran the register up until closing. He was in higher and higher spirits the closer it got to quit time too and the mood was infectious, so despite my frustrations, I had turned sassy through the night and he was laughing at every turn.\n\n\"I'm really glad people pre-build MTG decks online and share them because I feel like that's where most of our freaking revenue comes from.\" I said it while finishing with the tablet and heard the door open right as closing time was about to hit for Tate to go home. And I had already established that he could just leave and I'd handle any other last minute customers or events.\n\nBut he never just peaced out. Instead, still laughing at my statement, he asked, \"How can I help you?\"\n\nAnd then another voice answered, the voice from my worst nightmares and best dreams, the voice that tortured me. It was soft and smiling and not over the phone to greet me. \"Tuesday already knows and has it.\"\n\nMy world seemed to stop. I shot upright from my chair over the tablet but didn't immediately turn around. Which probably made me look psychotic, but I was scared to.\n\nTate turned to me. \"Tuesday... you know what's up?\"\n\nTurn around, I told myself, you have to turn around. So I did, slowly, lifting my eyes to the man who stood so casually in my gamer store, wearing a suit without a tie, the undershirt casually unbuttoned at the top. I tried to remember to breathe but couldn't think past the fact that I had seen this man's face before. His eyes stared into mine with that same sharp look, eyes so fucking green they looked ethereal. Even I could tell what color they were. Like a demon or a creature. And the size of him... I had anticipated that but still. Seeing it made my knees go weak.\n\nI had to force myself to look to Tate, like nothing at all was happening while my heart wanted to leap from my chest and I could hear my blood in my ears. \"Yes, I got it. You can go ahead.\"\n\nI barely heard the words I said, but evidently it came out with my years of customer service creating some normalcy because Tate said something and I said something back and I waved but would never remember much of that because...\n\nThose eyes. God, he shattered my dominant radar, smashed the hell out of it and left nothing but a mess. \"Your picture- it's- it's behind the bar at- at-\"\n\nThank god Tate had been eager to have fun on a Friday night. He had left us easily and I could fall the hell apart with my stuttering. Flatline smiled, watching me suffer with a faint amusement glinting in those eyes that I never wanted to look away from now that I'd seen them. They were... my god, he called me a fae? He leaned casually against the counter and he was so damn huge compared to me. \"Behind the bar at Sulfur's? Yes. I own it with my brother.\"\n\nHe was beautiful as Lucifer was said to be, deviance crackling beneath that smile, I knew. He let the silence draw for a moment before he laughed again. \"Little Tuesday, I might start thinking that you're being rude to me.\" His finger crooked through my collar ring and pulled me to him until he was so close, almost kissing. \"And you don't want me to think you rude, do you?\"\n\nHoly god, I had been right to be scared of seeing him. He had been intense before? He was extraordinary now. \"No, master,\" I answered automatically, fearfully.\n\n\"Such a scared little fae. Did you bring the red dress and shoes like I commanded?\"\n\n\"Yes, master. Wait. You- you own it? You own a fetish club?\"\n\nHe was laughing again and this time I got to watch him go to my door and lock it. He paused with something he saw at one of the windows, thoughtful, before he continued and this time he closed all my shutters so that we were hidden. \"Yes, Two, I own a fetish club, among a few other things. Which is something I wanted to talk to you about by the way. Have you considered that you could do the same? Your clientele would go hand in hand with a vape shop or something like it.\"\n\nBusiness? He wanted to talk freaking business after he just walked in and stared at me? Was he crazy? He laughed again at whatever look he saw on my face. \"Oh, Tuesday, you're the most fun I've had... ever, I think. But we're on a little bit of a schedule tonight and, well, you don't want to ruin my fun plan, right, Tuesday? That would make me rather upset and then I'd have to comfort myself with things like your continued denial training and eating your pussy without letting you cum for a few days.\"\n\nThat made me collect myself. At least a little. My arousal was still torturing me from his nightmare of training for the past three days. \"Y-yes, master. Er. No, master?\"\n\nHe smiled. \"Close enough. Come on, let's get you dressed.\" His eyes sparkled with amusement and he moved like nothing was out of place or different.\n\nFucking everything was different. I let him take over because I didn't want to think straight. I wanted to look at him some more and think about how this was the man I'd thought so far out of my league that our spheres would never touch, about how this was who had spent three days making me beg and plead and suffer for his amusement, because he had a whim to do it.\n\nHe took me to my back room where I stared more because he looked way out of place in my little world of games and toys and comics and Linux obsession. But his threat held deep sway because when he commanded it somehow registered and I somehow obeyed. \"Strip, little Tuesday.\"\n\nI did so, quickly, because I didn't know what agenda he had or what time constraint went with it. He had made sure in advance that this wasn't one of my tournament nights and that the closing time would be slightly earlier than usual and it had been, amazingly so actually. Usually I was there with friends for hours after the store closed but it was summer so most of those people were busy. Flatline watched me with that playful little smile I learned went with the exact tone of voice I had always imagined it to. \"Such a pretty little sub.\" He approached me with a wicked glint to his eyes and stared down at me with dominating force while his fingers thrust inside my pussy, making me cry out. My head fell back and I grasped his shoulders, letting him do whatever he wanted to cause me pain, if only so I could stare up into those eyes some more and see the fire and satisfaction that went with my pain and hurt. My god, it was the hottest thing I'd ever seen, now that I knew how terrible he was and had a face to go with it. \"With such a horny little cunt.\"\n\nI moaned up for him, but he pulled away, laughing, and turned from me to grab something else. \"Now, you'll wear this under your dress.\"\n\nI turned like his doll while he dressed me, lifting my hair at his command, lifting my feet when he said. He dressed me in deep red lingerie. A sheer lace bra covered my tits with straps that dipped down the valley and connected together. The thong was even more sheer with a garter belt that went over it and straps that he left loose like ribbons down my thighs. Each piece made me feel more like a sexual object, but then I already had that energy because it was-\n\nChrist, it was Flatline. He smiled when I turned, his eyes caressing what he'd dressed me in, appreciation all over his face. But it was a kind of appreciation that made me shiver, with dark sparks dancing in the depths of his eyes too, as if the beast inside only decorated me like a delicacy so it could rip through the lace and eat me alive later. \"Your eyes are amazing,\" I whispered.\n\nHe kissed me, his amusement coming back in that laugh of his. \"Thank you, little Tuesday. So are yours. Now, where's the dress?\"\n\n\"Box.\" I pointed to the table and he went and got it while I just stood there like an idiot, still stricken.\n\nHe owned a fetish club. No fucking wonder people had looked at his collar with recognition. And then right on the heels of that thought was how badly I wanted to run my fingers through that short cut dark hair, how I wanted to trace those sharp features of his that looked so dangerous they could cut me like his knives. But then he turned back and slipped the dress over me, then fit my heels, and I was lost to his eyes again.\n\n\"Now for the last piece. And all in good time too.\" Had it been? I was glad he was keeping track. It felt like an eternity to me with how fast my thoughts raced. And then all those thoughts went out the window with the jewelry box he opened.\n\nAnother disclaimer? I don't have classy style because I never gave a shit enough to. I owned a business where I could wear jeans and a T-shirt and still be well off and I avoided events with dress codes. But Flatline's dresses and gifts had made me start to want to know more about it, so I'd gone through dresses and the matching of jewelry and shoes with outfits until it seemed overcomplicated and I finally lost my patience but there was something in me for feeling so delicate and pretty. I just couldn't match goddamned colors to save my life so my eyes didn't follow. And I for damn sure hadn't gone overly deep into the world of jewelry. I had my silver piercings and that was it.\n\nBut Flatline's gift made my eyes go round. It was beautiful, the red of the teardrop gemstones set against glittering diamonds. I knew instantly why he had chosen it. He loved me in red, adored the color, and called me his malicious fae hidden under innocent appearances. He held it out for me to study, his teeth flashing bright like those diamonds, like wolf's teeth. \"What do you think? Like it?\"",
        "\"It's beautiful,\" I answered quietly. To which he winked and circled me, placing the necklace around my throat and clasping it like a perfect gentleman. Fuck me, he looked like a gentleman.\n\n\"I had a fit over this piece for a little while. You see, I loved it as well, but it occurred to me that your collar didn't match any of this at all and you couldn't wear that tonight.\" I jumped at the key in the heart lock, at the feel of the collar I had become so used to being removed from my throat. \"But as beautiful as you are? I'd be doing everyone who sees you an injustice by messing up this outfit. Come on, little Tuesday. Is there anything else you need to do before we leave? You'll need your driver's license and bag, baby.\"\n\nI grabbed it, thinking about the fact that in all my years I hadn't once neglected closing down the night of, but I didn't have to do it. It could all be done the next morning and the day had been smooth and easy. I would have to forego a little sleep depending on how tonight went but I was down for that, shellshocked and amazed at whatever the hell was happening. \"No, master. Nothing that won't hold until morning, although I'll have to come in a little earlier.\"\n\nHe kissed me again. \"I'll make sure you're here earlier. Come on. Let's have a fun little date, Tuesday.\"\n\n\"A date?\" I squeaked it. \"What... what do you mean, a date?\"\n\nHe was already pulling me along, with my neck glittering with jewels instead of my collar, and locking the door for me. \"You know what a date is, Tuesday.\"\n\n\"But you don't date. I don't date. Like going out, date? Are we dating?\"\n\nHe was laughing while he led me and I didn't have any willpower left to me so wherever he led I didn't even pay attention to. \"Listen to you, Tuesday. You're a mess for me. A beautiful little mess. Yes, a date as an going out somewhere together. A date as in, we're dating. And obviously, we both do that now.\"\n\n\"Okay.\" It was an agreement but it still came out squeaky while I trailed after him.\n\nA date. With Flatline. And no mask. Like a date, date.\n\n \n"
    ],
    "authorname": "Payne_Hall",
    "tags": [
        "femsub",
        "male dom",
        "dominant",
        "fetish",
        "lingerie",
        "rough sex"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/dark-as-ivory-pt-02"
}