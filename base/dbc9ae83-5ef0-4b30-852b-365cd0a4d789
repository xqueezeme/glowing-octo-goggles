{
    "title": "While We have This Moment Ch. 03",
    "pages": [
        "I hadn't been home in almost three years. I opted for one long drive all-day Sunday, arriving in the early evening. My parents were coming back from Tampa late that night. I was surprised that my mom was OK with cremation, but I think it was the only practical and expedient option for getting him back \"home.\" There was to be a small memorial service on Tuesday, and on Wednesday the three of us would scatter his ashes somewhere. \n\nI settled in to the guestroom and went to bed before my parents returned; I was weary from driving. I had needed to take two long cry breaks during the drive down. \n\nThe radio woke me up in the morning -- the familiar voices of Johnny's House on my favorite station. I wondered how many mornings this same alarm had gone off in the guestroom while no one noticed. It probably shut off automatically after ten minutes and no one was the wiser. \n\nA week at home with my parents was a very good thing, even considering the circumstances. At the very least, it gave my parents a welcome distraction. Dad talked to me about the fishing in the nearby lakes and about how he fought (unsuccessfully) to pull his line out of the mouth of a gator that had grabbed the same fish my dad was reeling in. Mom spent the week fussing over me and my health and my job and my future and my wardrobe and anything else that she could find to get her mind off Brett. \n\nThe memorial service was interesting. I didn't expect to see many people there, but at least several dozen showed up. Some of the guests were clearly people in various stages of drug addiction. Brett apparently had interesting connections in every city he spent time in. The man who gave the eulogy was a stranger to me, but he seemed to actually have known my brother. I found him after the service -- he was a clean, well-spoken, nice man. He was married (I looked for a ring) and I learned that he was an Anglican priest over near Tampa. Brett had spent some time there, and the priest, whose name was Leon, spent a lot of time working with the homeless and drug-addicted guys on the street. When Leon learned where I was living now, he asked if I knew Ernst, who turned out to be an old friend of his from before we all moved away from Florida. We had apparently both been at Macy and Ernst's wedding years ago, though neither of us recalled meeting. \n\nAfter swapping a few stories about our mutual friend and joking about the smallness of the world, I asked Leon if he thought there had been any hope for Brett or guys like him. At this point, I was thinking more about Aaron. Our kiss and what might have followed dominated my thoughts when I wasn't overwhelmed thinking about Brett. If it weren't for Aaron's struggle with drugs, I would be very ready to forge a future together with him. \n\n\"There's always hope,\" Leon said, \"but for Brett, if I can be direct, I didn't think he had what he needed to start changing things.\" \n\n\"What did he need?\" I asked, taking the bait. \n\nLeon's expression was meditative. \"People struggling like that really need someone or something they love more than they love themselves. If they have that, then it's my experience that they have a chance to keep coming back from the bottom. Sometimes, it's enough to keep them from ever getting there in the first place. I sadly didn't see that it Brett. Maybe he was too far gone by the time I met him, but he was only interested in satisfying his own craving and couldn't imagine anything coming before that.\" \n\nI thanked the priest and returned to where my parents were sitting. They were eager to be finished, and the guests were mostly gone, so we headed back to the house. I lay awake for a few hours that night, thinking about Aaron and the kids and whether or not I could picture a future that included them. I found it only too easy to do so, but not without a fair deal of chiding myself about so quickly taking up the domestic life I had rejected in Jared's plan. \n\nMaybe it was because Jared wasn't the right person for me. And neither was Tim. \n\nMaybe when you find the right person, it's easy to picture whatever future includes them. \n\n******* \n\nSo propriety be damned, I was eager to see Aaron again. I was ready to push forward and see what we could be. I knew it would have to be handled delicately for the kids' sake, but I thought we really had a chance. I knew he loved his kids, and I believed that that love had been a powerful force in staving off his self-destruction. And I hoped that I could have a role in that, too. \n\nLess than three years, he had said. That was how long he'd been using. That was just a year or two after his wife had left, by my calculation. Long enough for the grim reality of his new life to set in. Long enough for despair to drive him to any form of consolation. \n\nBut if we could change those circumstances, remove the loneliness and despair, add a good deal of physical intimacy... \n\nBut an addict is still an addict, I had to remind myself. They don't need a reason, just an opportunity. \n\nBy the time I had driven back to my house, it was Sunday evening again. I had texted Aaron in the middle of the week to tell him I would be back on Monday. His terse reply (\"OK\") bothered me a bit, as did the lack of any other communication during my absence. But I figured he was trying to give me space until we could talk. \n\nI spent Monday morning trying to reorganize the supply closet and filing system at the clinic. In my week-long absence, the nursing staff had been Kara, still in la-la land after her honeymoon, and two new hires -- Juliette and Raul -- who didn't know our system very well. I felt a little like my mom used to say she felt after Mother's Day: it's nice to have a little time off, but not if I have to work extra hard to make up for it once I get back! \n\nBy the time I got to Aaron's house to greet the kids after school, I was exhausted but excited. I flittered about with nervous energy, counting down the minutes until Aaron got home. I guided the kids through homework, started some dinner, and was just setting the table when Aaron came in. I wanted to hug him but knew that I couldn't. We spoke politely, casually. Aaron showed me no warmth or extra attention. I watched in vain for a stolen smile, a wink, something to tell me that he was as happy to see me as I was to see him. Once dinner was over, I lingered, hoping for a chance to talk. The kids stayed close by, however, and Aaron made no move to get us alone. I started to feel hurt, and then I warned myself to stop reading into every little thing. \n\nWhen I knew I couldn't wait any longer to head home for the night, Aaron walked me to the door. My stomach was twisting in knots. Before I opened the door, I turned to face him, expectant. \n\n\"So... next Monday I'm taking the day off. You won't need to come in that day, OK?\" \n\n\"OK...\" I answered, confused. He seemed to have nothing else to say. \"Aaron, what about... last time?\" \n\nHe closed his eyes and inhaled deeply. \"Like I said, it was inappropriate. I'm sorry, I shouldn't have... You were in a vulnerable state and I should have been more mindful of-\" \n\n\"I liked it,\" I interrupted him. \"I don't regret it. I think it was a good thing.\" \n\n\"It's a bad idea Denise. We'll talk more about it later.\" His last phrase was hushed and hurried in order to get out before the footsteps behind him got close enough to allow curious ears to hear. I shot Aaron a frustrated look and headed out the door. \n\n******* \n\nThe rest of the week continued like that. Aaron was cold and distant, confusing me. He avoided being alone with me. He never said he didn't like me or that he didn't enjoy the moment we shared. All he said was that it was a bad idea and we shouldn't do it. Well, thinking we shouldn't do something and not wanting to do it are very different things, and I tried to find a way to force him to confront his heart's (and body's) desires. \n\nI chose, of course, Friday. The weather was beautiful with just a hint of nippiness in the air, so the kids and I spent the late afternoon at the creek fishing. I prayed and prayed for a good catch. Maya finally got one we could cook. Aaron arrived while we were cleaning the fish, and Derek managed to observe the whole process without incident. We pan-fried it with a mix of seasonings, Maya insisting on being allowed to help. I stayed for dinner, then hurried the kids upstairs for baths. Taking all fish-smelling clothes to the laundry room, I started the wash. Aaron cleaned the dishes and I got the kids ready for bed. \n\nI had hoped Aaron would be making us tea, but I was disappointed. Even as I was putting clothes in the dryer, he had gone upstairs, presumably for the night. Well, that suited me just fine. I said nothing when he had poked his head in the laundry room to remind me to lock up when I left. I tidied up a few more things downstairs, waiting both to make sure the kids were asleep and to work up the nerve to follow my plan. \n\nAs the grandfather clock chimed the hour, I crept up the steps. Reaching Aaron's door, I tapped lightly. \n\n\"Come in?\" he said. \n\nI opened the door and slipped inside, locking it behind me. Aaron was sitting at his desk, looking at some papers, and envelopes. He looked up at me in surprise. \n\n\"Denise? What the hell? Why haven't you left yet?\" \n\n\"Because I'm not finished here,\" I stated, quickly crossing the distance between us. Aaron stood as I approached and opened his mouth to speak. I hurried to deny him the opportunity. His body was tense and he resisted me at first, but after a few seconds, he melted into the kiss. His shoulders sagged and his hands came up to hold me gently. My heart raced with the excitement of vindication. \n\nI slowly turned my body and he turned with me, connected at the lips. I inched backwards towards the bed, my hands tugging at his elbows. When I felt the mattress against the back of my legs, I tumbled backwards, pulling Aaron down onto me. I felt him slowly press against me, his gym shorts doing little to hide his arousal. I was pretty sure I was ready to go as far as he would take this. \n\nOne hand caressed my thighs while the other held my face close. My hands slipped under his t-shirt and felt the tensing and relaxing of his back muscles. I started to wiggle away, trying to move us all the way onto the bed. But no sooner had I released his lips than Aaron straightened up and backed away. \n\n\"Dammit!\" he cursed. Because of the kids asleep across the hall, even his angry profanity was just a loud whisper. \n\n\"What?\" I asked, still moving into position on his bed. \n\n\"You have to leave, Denise. This... this is not right.\" \n\n\"I've been thinking about this for two weeks now. This is very right, Aaron. What are you talking about?\" \n\n\"No... No, we shouldn't be doing this. It... it's a very bad idea.\" \n\n\"Bullshit,\" I hissed back. \"Tell me what's wrong with it!\" \n\nAaron paced back and forth at the foot of the bed, one hand tapping his forehead and the other planted on his waist. \"Think about it... Think about the long-term, Denise. Not just tonight but what comes after. It's the wrong call and you know it.\" \n\n\"I know what you think,\" I shot back, adjusting myself until I was kneeling on the bed. \"And this is not about Brett!\" \n\nAaron paused his pacing around the room and his face twisted in confusion for a few seconds, apparently trying to place the name. It was clear when he suddenly realized who I meant. \"What the hell does that have to do with anything?\" Aaron asked, staring at me in bewilderment. \n\n\"Nothing! That's my point! This isn't about him?\" \n\n\"I never said it was,\" he replied, squinting. His anger seemed to be giving way to confusion. \n\n\"Good, so we agree,\" I said confidently. \n\n\"Yes, I think.\" Then he leaned back against the bedroom door. \"Wait, what are we talking about now?\" \n\nI smiled in relief. \"You... me... us... the future...\" I looked at him expectantly. \n\n\"But we agree...\" \n\n\"Yes, we agree...\" \n\n\"That it's a bad idea,\" he concluded sadly. \n\n\"No,\" I pushed back, standing up and moving towards him. \"We agreed that it has nothing to do with my brother and that it is the right call and that we should give it a try.\" By then I was almost face to face with Aaron and fully expected him to lean forward and kiss me again. My heart was racing in anticipation. \n\n\"Now you're just making stuff up,\" he said, slipping around me and pulling the door open. \"I would never agree to that.\" \n\n\"Why are you so afraid to give this a try?\" I whispered, moving my head to try to make eye contact, to try to solve the mystery of his reluctance. \n\nHe closed the door most of the way but still kept his hand on the knob. \"Think about what the next few years will be like, Denise,\" he said. His eyes met mine and I saw no hint of fear, only sadness. \"You have to know how bad it will be.\" \n\n\"What are you even talking about?\" \n\nIgnoring my question, he went on. \"I can't put that burden on you. I can't believe I... I shouldn't have even started this.\" Aaron balled up his fist and put it against his forehead as he squinted and looked up. \"God, what was I thinking?\" He seemed genuinely very distressed, and I knew there was no chance of salvaging the evening. \n\nHe sighed, dropped his arms to his sides, and opened the bedroom door again. Without looking up at me, he said, \"Please, Denise, please. You need to leave. We can talk later. But you need to leave now.\" \n\nConfused, frightened, and utterly dejected, I left the room, left the house, and went home. \n\n******* \n\nFor two days I stewed. I didn't want to talk to anyone. Macy called and I let it go to voicemail. Kara called and the thought of talking to her just made me feel nauseated. My parents forgot our Sunday evening call, which was fine by me. I watched movies. I went for a jog. I ate a lot of ice cream. And I tried and tried to make some sense of Aaron's reticence. \n\nHe talked like a man who had no hope for the future, like a man who had given up. But nothing else I saw in his life communicated that. The way he fought for his kids, ensuring they wouldn't end up in a bad situation with his ex-wife. The way he continued to work hard. The way he diligently protected his kids -- not just their physical well-being but also their happiness. The way he was even willing to try new things. The way he kissed. God! the way he made me feel when we kissed. I hadn't felt like that since... since Tim. Perhaps not even then, because 10 years ago I lacked the experience, self-understanding, and perhaps desperation that made me more capable of opening myself up to a man. Funny how being on more solid ground can make us easier to be moved when we want to be. \n\nBy the time the weekend was over, I had decided what to do. If Aaron needed to be pushed towards happiness, then I would have to be the one to push him. \n\nSunday evening, I called in a favor. Now that we had a new nurse in the rotation, I figured I could take a day off, even though I had just left for a week. Since it was October and I had not taken off any time other than my recent trip to Florida, nobody complained. Raul could fill in for me on Monday. \n\nI knew the kids would be in school. And I knew Aaron had taken off work. He wasn't planning on me coming in that afternoon, much less that morning. I took a risk that he would actually be home, but I figured, even if he was out, I could wait all day. I had a key to the house. Might as well make myself at home. It turned out not to be necessary. Aaron's car was there. \n\nI debated using my key and walking right in to confront him, but my more civilized instincts prevailed and I knocked on the door, waiting to be let in. I saw Aaron look through the window at me, and I knew he was hesitating to open the door. When he finally did open it, he didn't make enough room for me to pass through at first. He stood there blocking my way. \n\n\"Denise, what-\" \n\n\"You said we could talk later. It's later,\" I stated confidently. \n\nAaron sighed in exasperation. He looked at his watch, then closed his eyes. \"Yeah, I guess there's time,\" he said. Stepping to the side, he let me in. He was wearing only a white t-shirt and a pair of boxers. Seeing my eyes on his lack of clothing, he explained, \"I was getting dressed. I have somewhere to be a little later, and I was going to head into town early.\" \n\n\"Well, not to be arrogant or anything,\" I said, still clutching my purse, \"but I think this is more important than whatever else you were going to do.\" \n\nHe looked at me skeptically before dismissing my confidence with a huff. Then, with a self-satisfied expression he began, \"I'm about to start my next-\" \n\n\"I love you,\" I cut in. He closed his mouth and looked away. I tossed my purse on the nearest chair and crossed my arms. \"Looking back, it almost seems inevitable,\" I continued. \"I mean, here you are, this wonderful guy and these two wonderful kids, and I spend hours every day getting to know all three of you better. Anyone could have seen it coming. And I know you've got some...\" I waved my hand in the air, \"...baggage. Some issues. Some complications...\" No word seemed quite right, and his pained expression with each effort showed me how poorly I was hitting the mark. \"But I don't think that should matter.\" I paused and waited for him to look at me. \"Not if you feel the same way.\" He took a deep breath, his lips tight. \"And I think you do. Feel the same way... I mean.\" OK, so I started strong but kind of puttered out in the end. I didn't sound as bold as I had wanted to, but I had made my point. The ball was in his court. \n\n\"Dammit,\" he whispered, forcing his eyes shut, squinting to hold back a tear, it seemed. \"You weren't supposed to be single,\" he said, almost to himself. Then looking straight at me, his eyes filled with fear, he said, \"I love you too, and that's why you need to leave. I shouldn't have dragged you into this. I see that now.\" \n\n\"No,\" I said, stamping my foot in frustration while also relieved that I was not a fool in thinking he loved me, too. \"I'm not going to play the 'We'll talk about this later' game anymore. We talk about it now.\" \n\n\"I'm not saying you should leave for now. I'm saying you should leave forever. Now. It was wrong of me to bring you into this.\" His voice was shaking but his expression was calm now. \"I can... I'll pay you for the rest of the month. I'll explain it to the kids, or your can come back and say goodbye to them this evening, but just... This has to stop.\" \n\n\"That... is such... bullshit,\" I said, raising my voice when I remembered we didn't have to worry about the kids hearing. \"Why are you so certain that this will end badly? Why would you deny yourself, deny us, this chance of a life of happiness?\" \n\nAnd now he was raising his voice. No longer leaning against the couch, he stood tall and imposing, waving one arm in agitation. \"Not a life of happiness, Denise, but a moment. That's all we'd get. And at what cost? A moment and then what?\" \n\n\"How can you be so sure?\" I yelled back. \"Why are you so convinced that you'll end up like Brett? It doesn't have to be that way! You have a choice!\" \n\n\"What the hell do you mean? Why do you keep bringing your brother into this?\" \n\nI was trying to control my voice, but being on the verge of tears it was easier to yell than to speak softly. \"Because I watched him be destroyed by drugs and I saw him just give up hope and stop fighting and I don't want you to give up that fight and-\" \n\n\"It doesn't matter how much I fight, Denise,\" he said angrily. Then his voice and mannerisms suddenly went calm. \"Cancer is cancer, and we can't change that.\" \n\n******* ",
        "What... \n\nthe... \n\nhell? \n\nI felt like I had been punched in the stomach. This made no sense. \n\n\"You... cancer?\" was all I could get out. I needed to lean against something, to sit down. I found the couch. Aaron followed me. We sat at opposite ends of the couch, facing each other. \n\n\"You said you knew,\" he said, confused. \"You said Dasha told you.\" \n\n\"Dasha told me the drugs made you sick sometimes. And she didn't even know the word drugs, I had to... Oh, God, I suggested that because I already suspected something was wrong.\" \n\n\"Well, technically it is the drugs,\" he said with a small laugh at the morbid humor. \"I'm on something experimental, a different kind of chemo. That night a few months ago, when Dasha brought me home, I had gotten really sick at my last treatment of the latest round. The next round starts this afternoon and lasts a few weeks.\" \n\n\"Shit,\" I whispered, then asked \"How long?\" \n\n\"Less than three years,\" he said, just as he had before. \n\n\"Had it for less than three years or... you have less than three years?\" I clarified. \n\n\"The second one,\" he said softly. \"Diagnosed about a year ago.\" \n\nIt was like buying your dream home and then watching it burn to the ground the next day. Yes, I knew what less than three years meant. It meant that within that time, he'd waste away, and the final year would be devastating, painful to watch. I asked for details about where he was affected, what treatments he had received, where he'd gone for second opinions, and all the things my nurse brain needed to know. \n\nI wanted to run away and think and cry and scream. \n\nI wanted to pull off my clothes and take him to bed and never let go. \n\n\"So...\" he said softly, startling me from my introspection, \"now you understand why I say this would be a bad idea.\" \n\n\"Yeah... yeah, I get that now,\" I said, dazed. Then shaking my head clear, I asked, \"The kids?\" \n\n\"They don't know yet,\" he explained. \"I wanted to wait until a few rounds of this treatment were done and we had a better idea what the prognosis is.\" \n\nI renewed my tears, putting my hands to my face. I couldn't imagine having to tell Maya and Derek that news. \n\n\"I'm sorry Denise,\" he apologized, \"I was going to tell you eventually, but not until I knew a little more.\" \n\n\"Yeah, I get that,\" I said, nodding. \"And Aaron, I'm sorry if even subtly... or not so subtly... I was a bitch to you. I thought you had a drug problem that you were hiding, and I was both worried and self-righteous. And you were so casual about it, like it was no big deal that you did this and kept it secret. I mean, when the Russian mafia is driving you home semiconscious-\" \n\n\"They're Ukrainian,\" he smiled, \"And they're not gangsters. The bar is a little seedy and I wouldn't take my kids there, but Dasha is a waitress there, and she's the closest family I have here now.\" \n\nI breathed deep and tried to reorganize and recategorize my memories. Everything I had seen after the word \"drugs\" came into the picture had been shaded by that. \n\n\"But anyway,\" he began, standing up and walking towards the kitchen, \"like I said, all we could hope for is just a moment of normalcy, maybe a short time to enjoy, but that's it. Then it gets ugly, as you know.\" \n\nAlone on the couch, I stared out the window. I could barely see the stream through the curtains. I pictured the four of us spending many relaxing evenings out there. Even a moment of happiness could transform someone. And for Aaron, a moment might be all he had. \n\nI stood up and followed where he had walked. He was in the kitchen, pulling some meat out of the freezer to thaw. \"I was thinking of grilling some burgers for dinner, if I have the energy. If not... I'll order a pizza.\" He smiled faintly. \n\n\"You said you love me,\" I stated softly. \n\n\"Yeah, but that was before I knew you thought I was a crack-head,\" he teased. \"I'm not sure I can love someone who thinks so poorly of me.\" \n\n\"Ass,\" I shot back. \n\n\"Hm... now, is being an ass better or worse than being a meth-head?\" \n\n\"You seriously need to stop,\" I said, contradicting myself with a smile. \n\n\"No,\" he sighed as his smile faded. \"That's my line. Do you see now why I've been telling you this needs to stop?\" \n\nWe both stood silently in the kitchen, Aaron fidgeting with some things on the counter while I looked around and tried to process all this new information. Surprisingly, my first instinct was not to leave what would obviously be a heartbreak down the road. Or maybe that wasn't so surprising. I had concluded that I loved him. Love doesn't just give up when cancer enters the scene. Sure, most couples have more time to solidify their bond and to \"strengthen the muscle of commitment\" (as I once heard Dottie say) before those bonds are tested, but that didn't make what I felt towards Aaron any less real. \n\n\"I was ready to...\" I began, \"I was hoping we would end up making love today. While the kids were out. After I had convinced you that... that happiness is worth fighting for.\" \n\n\"Denise...\" he sighed, shaking his head. \n\n\"I still think it is,\" I ventured. \n\n\"Think what is?\" \n\n\"Worth fighting for. Happiness. Even if it's just a moment of it.\" \n\n\"Don't you get it?\" he countered, frustrated. \"Fighting doesn't work; we're talking about a death sentence, and I-\" \n\n\"Not yet,\" I interrupted. \n\n\"Excuse me?\" \n\n\"You're not dead yet. Don't let death steal the life you have left,\" I said with more confidence than I felt. \n\n\"OK, Miss Fortune Cookie. Explain your riddle,\" he said. I could tell he was at least listening. \n\n\"I mean... I think... that...\" I fumbled for the right words. \"I mean that you can't just give up on having good things now just because you know they won't last. And I think you know that. You still love Maya and Derek, and you are making the most of your time with them. Why deny yourself... and me... a chance at love... at something else... even though it may only be for a short time? You're letting the...the... the shadow of death spoil your life before death itself is actually here.\" \n\nAaron stared at me, expressionless, for at least ten long seconds. \n\nNot sure what to do with the silence, I went on. \"I think you're scared and you're being selfish.\" \n\nAaron walked around the kitchen island and stood almost toe to toe, staring down at me. I leaned back against a counter and put my hands on the edge to keep myself from tumbling backwards. \"Damn right I'm scared,\" he said, his voice firm and intense. \"In a few years, I'm going to die. I have every right to be scared.\" \n\nI was holding my breath, intimidated by his forceful presence. Yet my physical desire for him was also stirring afresh. \n\n\"But I'm not being selfish,\" he continued, his body visibly relaxing and backing off slightly. \"Do you really think that I don't want you, Denise? That I don't want to squeeze out of you every hour that we could possibly have? That I haven't thought about you and lusted after you and longed to sit by the creek on an old blanket and watch the kids fish while we just hold each other and talk about what you did at the clinic that day?\" \n\n\"Wow,\" I said. \"That was... very specific.\" \n\nAaron blushed. \"Some of my fantasies are very domestic,\" he mumbled. \n\n\"You see,\" I replied, trying to press my advantage, \"you do want this.\" \n\n\"Of course I want it!\" he snapped, then calmed himself. \"But it's because I love you that I'm saying we can't. I don't want to put you through what a future with me would be like. You could have your happily ever after for years and years with... with someone else.\" \n\n\"I don't love someone else,\" I whispered. I put one hand over his heart and moved closer. \n\n\"You will,\" he replied. \"You're old enough to know that, aren't you? That the heart heals and moves on? That you don't get just one chance? Don't waste your-\" \n\n\"You... are not... a waste,\" I said, fighting the beginning of an ugly cry. The words started to rush out, trying to be heard before tears conquered coherency. \"Everyone dies sooner or later and just because you'll be sooner doesn't mean that the years you have left are any less valuable because it could be car accident next month or a heart attack next year or something else that we don't see coming and we would still cherish the time we have and maybe even more so when we know there's not a lot of time so I...\" \n\nThen he kissed me. Not a long, passionate kiss, but a soft, intimate kiss that calmed me down, stopped the coming tears, and -- most importantly -- shut me up. \n\nAfter a few seconds he pulled back and said, \"You might be right, but it just feels cruel to do this to you. Like I tricked you into it or something.\" \n\n\"But you didn't,\" I objected. \"And you have to respect me enough to let me make my own choices.\" \n\n\"It doesn't seem like you're showing me that same respect,\" he said, as the corner of his lips curled up enough to show me he was teasing. \n\n\"Well your choices are wrong,\" I said with a shrug. \n\n\"Yes. I can feeeel the respect,\" he said dryly. Aaron backed up a little and found a chair to sit in. I remained leaning against the counter. \n\n\"So now what?\" I asked. \n\n\"Well, I think we finally agree,\" he said. \n\n\"Yes. I think we do.\" \n\n\"We agree that this is way more complicated than either of us wanted to admit.\" \n\n\"No, we agree that I'm right and you're wrong and that if you don't kiss me like that again I'm going to...\" Aaron raised an eyebrow, curious where my threat was going. \"I'm going to take the next fish I catch and hide it somewhere in this house where you won't find it until the stench is so bad you have to camp out in the back yard.\" \n\nMy words may have been playful, but my heart felt desperately serious. I needed him. I pictured him standing up and saying Well, we can't have that, now can we? as he walks over and picks me up in his arms and... \n\n\"Denise,\" he began, then paused until he had my attention. \"I need to think about this. This is... this is a lot.\" \n\n\"Yeah,\" I said, my heart still fluttering with nervous energy, \"I understand.\" \n\nI wondered if I should leave. I wondered how long he would need to think about it. I wondered... \n\n\"You were really planning that we would... you know... today?\" His awkwardness was endearing. \n\n\"Have sex?\" I answered frankly, trying to elicit a deeper blush from his cheeks. \"Yes. I mean, I was hoping. And I was emotionally ready. And I shaved my legs.\" \n\nAaron looked at the floor and laughed. I wiggled an exposed knee in his direction and he laughed harder. It was the happiest I had seen him in a while. \"You're not making this easy, Denise,\" he said, shaking his head. \n\n\"I'm not trying to make it easy,\" I replied. \"In fact,\" I tried to contain my own laughter, \"I'm trying...\" \n\n\"Don't say it,\" Aaron warned with more laughter... \n\n\"...to make it hard,\" I spat out before surrendering myself to a fit of giggles. \n\nOnce we had composed ourselves, Aaron took a deep breath and said, \" I really want you, too, you know.\" \n\n\"Don't say 'but,'\" I pleaded. \n\n\"Bu-u-ut,\" he went on as I sighed in frustration, \"not right now. I need to... I don't know, get used to the idea. To the possibility. To the implications.\" \n\n\"How long will that take?\" I asked. \n\n\"I don't know,\" he answered. \"Maybe a few hours, maybe a few weeks. My mind can't just shift from 'Denise the beautiful but untouchable nanny' to 'Denise, the beautiful and available woman who wants to be with me,'\" he explained. \n\nI nodded sympathetically, then walked over to where he was sitting. Settling onto his lap, I put hand behind his head and drew his lips towards mine. Our lips touched gently a few times, then parted. His tongue carefully explored the space between us, brushing gently against my own. One strong hand gingerly touched my side, and I consciously kept myself from flinching out of insecurity at having a man caressing the part of my body that I still thought needed the most improvement. \n\nI felt that deep hunger that wanted to expose myself more fully to him, to be touched more thoroughly by him, to be filled by him. But I knew the time wasn't right. So I pulled away. Aaron remained motionless, his eyes closed and lips slightly parted. \n\n\"Well...\" I whispered. Aaron didn't move, save for raising his eyebrows to show he was listening. Putting my lips just next to his ear I breathed, \"Next time your mind is thinking I'm untouchable, just think about that instead, OK?\"  \n\nInstead of answering, Aaron wrapped his arms around me and pulled me into a strong embrace. I circled my arms around his neck and lay my cheek on the top of his head. \n\n\"Spend the day with me?\" he asked, after a comfortable silence. \n\n\"Can I spend the night, too?\" I replied. When he didn't answer right away, I added, \"No strings attached. Just... just like this is fine, even. Or more, if you're ready.\" \n\n\"Can you be discrete about it?\" The question could have been insulting, but I understood his concern. Lifting his head up a bit, he explained, \"I mean, the kids are used to you being here at night sometimes, but if they saw you in the morning, too...\" \n\n\"I start work at 6 a.m.,\" I explained. \"I'd be gone by 5:30.\" \n\n\"That'll work,\" he said, burying his face in my chest again. \n\nI listened to him breath for another minute, then said, \"Well, now that I'm not as horny, I'm starting to feel hungry.\" \n\nI felt rather than heard him laugh. \n\n******* \n\nAaron wasn't allowed to eat before his treatment, so when we got downtown I got a slice of pizza from a hole in the wall restaurant. I quickly consumed it so that Aaron wouldn't have to watch me eat. We walked to the park and talked casually as we watched leaves begin to drop from the trees. To simply sit next to him, his arm around me in comfortable silence, was the happiest I had felt in ages. \n\nI sat in the room during his treatment, observing everything with a nurse's eye at first, but soon starting to feel the intimidation of the room as experienced by a patient or loved one. I even began to consider what we could do at our clinic to make the examining rooms more comforting. \n\nAaron was mostly silent as he reclined in the big, soft chair, the mysterious and little-understood chemicals dripping slowly in through an IV. We were there for almost an hour, and every now and then he would look over at me and smile before closing his eyes again. \n\nI drove us back to my house, and Aaron rested in the car while I grabbed a few items for an overnight stay. Then we went back to his house, arriving about an hour before the kids were due back. I urged Aaron to take a nap while I tidied up. He seemed so tranquil and just went along with whatever I suggested. He slept peacefully even after the kids got back. They were excited to see me, having originally been told I wouldn't be there. Upon seeing them, I felt a suddenly stronger affection for them, a love that I wasn't at liberty to explain to them yet. I realized I was still assuming much about the future, since Aaron and I hadn't talked about it yet, but I suspected I was not assuming in error. \n\nAaron joined us for dinner, looking refreshed but somewhat weaker than he had in the morning. When we had an opportunity to stand close to one another at the grill, out of sight of the kids, he leaned close and said, \"Don't worry, I'm mostly just hungry. I should be fine later.\" \n\n\"And I need to know this information why?\" I teased. \n\n\"No reason,\" he smiled. \"Just didn't want you to worry about me.\" \n\n\"Oh, because I thought you might be making insinuations about your plans for tonight,\" I said softly. \n\nHe chuckled, glancing in the direction of the kids. \"I am. And I'm saying...\" \n\n\"That for a sick, old man you may be able to exceed my expectations?\" I interrupted. \n\nHe paused, looking carefully to make sure the kids were out of earshot, then whispered, \"That I'm going to make sure that after tonight you won't think of calling me a sick, old man again for some time.\" \n\n\"You're going to make me eat my words?\" I asked with a raised eyebrow. \n\n\"Or something,\" he replied, dropping a slab of meat on my plate. He planted a quick, silent peck on my cheek before rejoining the kids at the patio table. It might have been the early evening chill, but I couldn't help but shiver. \n\nLater that night, Maya gave me a funny look as I helped the kids go through their bedtime routine. \"Are you spending the night?\" she asked. \n\n\"I'm staying a little later to talk with your dad,\" I said, giving a half-truth. \"I won't be here when you wake up in the morning, if that's what you're asking,\" I said, carefully wording my facts. \n\n\"OK,\" she answered. \"Cuz if you spend the night, you have to be in my room, cuz I'm the girl.\" \n\n\"Well,\" I paused, thinking as quickly as I could, \"when I spend the night, I promise it won't be in your brother's room.\" \n\nSatisfied with that, she went to her room, where Aaron was waiting to read the kids a story. \n\nI had already cleaned everything that needed to be cleaned downstairs, so I careful crept up the steps and into Aaron's room, not wanting to alert the kids to my presence. I started to change into my nightgown, then had a better idea. Looking through Aaron's drawers, I found a large t-shirt and slipped that over my naked body. Even if he wasn't up for anything that night, it would feel good to sleep next to him like that. I crawled under his sheets, breathing in his scent that was all over his pillow. I stretched out my limbs and rolled around a few times. I could hear their voices in the distance -- soft, higher voices and one lower voice -- but no distinguishable words. Soon, the voices died down, and not long after that, Aaron entered the room. \n\n\"Lock the door,\" I whispered, unable to suppress a giggle. He did so, and spent a few minutes in the bathroom before joining me in bed. He slipped his arm under my shoulders and I rolled towards him, my leg spreading across his midsection. We both sighed. No words were spoken. None were needed. \n\nI had intended to rest a few minutes before mounting him, but it was so nice to be lying in his embrace like that. A few minutes became a few more, and my urgency to be joined sexually gave way to the pleasure of being joined as we were. I'm not sure who fell asleep first, but neither of us made a move to stop it from happening. \n\n******* \n\nSo accustomed was I to sleeping alone, that even the slightest touch at night seemed to startle me awake. But after a few times of awaking to find myself still in Aaron's arms as he slept, I was able to settle down and truly rest. \n\nSometime during the night, though, I woke up to a different sensation. I was no longer in Aaron's arms, and I couldn't make out his form next to me, but I felt his touch nonetheless. He was kissing my waist and tenderly caressing my thigh. I looked over at the clock -- it was still about an hour before I would need to get up and leave for work. Perfect. I stretched out my arms and legs, being careful not to bump Aaron's face as I did so. Then adjusting myself flat on my back, I spread my legs and smilingly whispered, \"Proceed.\" \n\nInstead, Aaron moved up so that his lips grazed my ear. \"I've been breathing in your scent every time I woke up. May I?\" \n\nWithout waiting for my obvious approval, he pushed the covers aside and began kissing my inner thighs. As with this morning, he took his time and brought my arousal from simmering to scorching. I felt myself getting close, and my gut was starting to tingle, but I had other plans. \n\n\"On your back,\" I whispered loud enough to be heard. \n\n\"Hm?\" Aaron asked, popping his head up to look at me, and licking his lips. \n\n\"On your back,\" I instructed again. \"I want you inside me.\" \n\nHe grinned broadly and did as I requested. He was still wearing the plaid boxers he had worn to bed, though he had lost his shirt at some point during the night. I tugged his boxers down and tossed them away. His penis was resting to the side, seemingly only half-firm. I gave him a playful grin and lowered my face to his crotch. With a single long, slow lick, I covered the length of his cock with saliva. By the time I passed the tip, he was reaching full rigidity. But since I was already down there... ",
        "I tried to remember how this used to go. I started by putting my lips around the tip and then slowly worked my way down. Once I had him halfway in, I pulled back and started stroking him with just my mouth. I tried to move a little further down, finally engulfing at least three-quarters of his length. I tried sucking as I pulled up, and Aaron's grunts affirmed that technique. As I lovingly attended to his cock with my mouth, I used my fingers to keep my own arousal a little below the boiling point. Once I had teased myself to the point of frustration, and just as Aaron seemed to be trying to urge me to help him finish, I pulled my mouth off, slowly withdrawing him with one prolonged suck. Aaron groaned as the cool air contrasted with the undoubtedly warm haven my mouth had provided. \n\nBut I had another warm place in mind for him. \n\nStraddling his hips, I slowly rubbed the length of his manhood beneath me. \n\n\"Are you sure this is OK?\" I asked -- not to tease, but to ensure I wasn't rushing things. \n\n\"Damn sure,\" he rasped, his eyes darting from my face to my chest and back again. I reached between us and carefully wrapped my hands around his shaft. I had forgotten how warm a cock would feel, especially when hard. \n\nI looked at his face. Aaron's expression was a mixture of uncertainty and excitement. Or maybe that was just what I saw because it was how I felt. I pulled his member slowly up, forcing him to adjust his position until he was poised at my entrance. I was as ready as I would ever be. \n\n\"It's been... a long time,\" he said sheepishly as I guided his tip between my lips. \n\n\"Oh God,\" I groaned, \"Betcha it's been a lot longer for me.\" \n\n\"I'm just warning you that-\" \n\n\"Don't care,\" I said, pausing to lean down and kiss him. \"Plenty of time to go again later.\" \n\nAaron opened his mouth to respond, then changed his mind and instead began pushing up into me. He paused whenever I took a sharp breath at the unfamiliar fullness I was experiencing. I felt long-neglected muscles stretching to welcome him. I knew I was tight, even if I was sufficiently wet and ready, and it took several combined efforts for me to sink all the way down. Finally, my tingling lips nestled snugly around his root. \n\n\"Holy-... Denise, there are just no words for this,\" he whispered in my ear. \n\nIn agreement, I put my tongue to other use. For several minutes our lower bodies held still, accommodating themselves to a sensation that I hoped would become very familiar. Our kissing was slow and tender. Any elevation of the passion between us would make our bodies start moving, and neither of us seemed ready for that yet -- Aaron to delay the inevitable and me to give my pussy a moment to adjust and get comfortable. \n\nI straightened up a bit and took deep breaths. I rubbed my hands slowly across his chest, noticing how muscular he was, even after losing weight to his disease. I raised my hips up a bit and then pushed down, both of us straining in pleasure as were were joined. As I sank down, I rubbed my clit, bringing myself closer to the edge. Eleven years of waiting had made me quicker on the draw now that I had flesh and blood to get me there. Flesh and blood that was now fully inside me. I hunched over a little, trying to angle myself so that his pubic bone could take over the work my fingers had been doing. Finding the right spot, I groaned softly and began swiveling my hips in small circles. \n\n\"Ohhh, babe,\" Aaron grunted. \"I'm not going to be long. You got me so close with those sweet lips.\" \n\n\"Race ya,\" I whispered, shivering as I felt that delicious pressure right where I needed it. \n\nWith that, Aaron lifted his head and buried his face in my breasts. His tongue circled my nipples, which had hardened in my lust. My thrusting sped up, and I pressed harder onto him. Aaron rubbed and cupped my breasts, tweaking with his fingers whichever nipple was not in his mouth. The sensations overwhelmed me and my thighs started to tense up. I feared I would get a cramp before I could cum, but those fears turned out to be unfounded. My pussy clenched, and I squeezed my PC muscles to keep that pressure going. Feeling Aaron's rock-solid cock inside my intimate grip gave me the physical and emotional boost I needed to boil over. Lunging forward, I pushed him flat onto his back as I spasmed around him. \n\n\"I win,\" I gasped, my arms squeezing and rubbing erratically all over his body. \n\n\"Tie,\" he grunted, gripping my waist and forcing my body harder onto him. I felt him surge a little deeper and heard the shout he tried to stifle. My awareness of the kids across the hall and the need for discretion barely registered as I moaned in pleasure. I felt overwhelmed with love and desire. I felt connected and safe. I felt the delicious agony of my body seizing up and finding Aaron's body everywhere around me. Even as I coasted down from my peak, I felt Aaron still prolonging his. I shivered with the last tightenings of my tunnel, which seemed to elicit a few last swellings of Aaron's rod in response. \n\nWorried I might be crushing him, I moved to roll away. But Aaron's arms wrapped around me and prevented my escape. \n\n\"In a minute,\" he said. \"This feels too good.\" \n\n\"Take all the time you need,\" I said, then added, \"until 5 o'clock.\" The reality was, I needed to shower, and the drive to work from Aaron's house would be considerably longer than I was used to. \n\n\"Plenty of time,\" he sighed. It couldn't have been any later than 4:30. I rested my head on his chest, listening again to his heartbeat and breathing, instinctively assessing his vitals. I thought back to the last time I had been checking his breathing, fearing he was in some drug-induced danger. Then I thought back to how unimaginable this scene would have been to me when we had met 8 months earlier. \n\n\"Well I'd say your nanny search worked out pretty well for you,\" I said, lifting my head to smile at him. \n\n\"This wasn't supposed to happen,\" he said, clenching his eyes shut, as if thinking of something painful. \n\n\"What wasn't?\" I asked, knowing the answer, but wanting only to keep listening to him talk. \n\n\"You... Me... This...\" he sighed deeply, his breath hot on my face as our noses nearly touched. \"It was the opposite of what I planned.\" His eyes opened again and searched mine, seeking something like forgiveness, but for a sin I couldn't identify. \n\n\"You can't plan these things, doofus,\" I chided him. \"Of course it wasn't supposed to happen, but it did. And is that so bad?\" I asked, my voice cracking slightly, wishing I knew why he was still so conflicted over this. \n\n\"It is,\" he said softly. \"Because I was using you. But not for this. This wasn't what I intended.\" \n\n\"And what exactly did you intend?\" I whispered, running my hand across his brow to wipe away the sweat. \n\n\"Something I hope you don't hate me for,\" he confessed. \n\n\"Do you think that's possible?\" I asked, worried what he might still be holding back. \n\n\"Well, if things had gone according to plan, you wouldn't have had the chance to. But now that... now that we've gone down this path...\" \n\n\"You better start making sense soon,\" I said, sliding slowly down his side and shivering as his length slipped out of me. I curled up next to him and watched as he stared at the ceiling and explained. \n\n\"I was never supposed to be a part of the equation. Once I got my diagnosis, and once the doctor said we were most likely looking at three years, five max, my only thought was for my kids. What would become of them? I couldn't bear the thought of Amber having custody, and I had no family in the U.S. that I would want them around.\" \n\n\"Yeah, Dasha doesn't seem like the motherly type.\" \n\n\"You'd be surprised,\" he mused. \"But she's had a hard life and doesn't really want my help, so... I guess it is what it is.\" \n\nI felt momentarily sad for her and embarrassed of my quickness to judge. \"Go on,\" I prompted him in the darkness. \n\n\"Hm? Oh. Yeah. So, since I needed some after school help, especially on days when I had treatment after work, I thought, Maybe I can kill two birds with one stone. What if I could find a nanny who would get so attached to Maya and Derek, that she'd want to adopt them? I could sign over custody before I died. My original plan was to find someone married with no kids, or maybe with kids old enough to be leaving the house. I hoped she'd have at least a few years with Maya and Derek and grow really fond of them. I was even considering asking someone to take them once the cancer got bad, before I was helpless.\" \n\nI was struggling not to feel manipulated. What he was describing wasn't exactly wrong in any way I could pinpoint, but neither did it seem to be the right way to go about it. \"Why did you hire me?\" I asked when he paused. \n\n\"You seemed perfect. A nurse, stable, great with the kids. You were the first one that actually engaged them and interacted with them to the point that they wanted to be around you. And, to be honest, I think I was under the impression that you had a serious boyfriend... that you were at least headed that way. I think that's how I justified hiring a single woman.\" He sighed. \"Anyway, the point is, you weren't supposed to love me, you were supposed to love the kids.\" \n\n\"And you didn't anticipate that it might be both?\" I asked with some disbelief. \n\n\"No, not if I kept my distance.\" \n\n\"Fool.\" I said it as a rebuke, not as a joke. \n\n\"Probably,\" he conceded. \"But in any case, from that point on I was preoccupied with positioning you to become their mother -- not through marriage but through, well, taking over once I was really on my way out.\" \n\n\"That's a lot to throw at a girl, Aaron. I mean... damn.\" I felt a strange mix of sympathy and frustration. \n\n\"I wasn't planning to throw it at you all at once. I hoped it would be more gradual, maybe in a year, once my diagnosis was a little clearer.\" \n\n\"You don't plan very well, do you?\" \n\n\"When you're at the end of your rope, any thread of hope can look like a plan.\" \n\n\"And how did you think I would react to being deceived and manipulated into something I never asked for?\" \n\n\"Life is a whole series of things we never asked for,\" he replied, voicing some hurt. \"I certainly didn't ask for a tumor.\" \n\n\"Fair point,\" I said softly. \"But my question stands. Did you think I would just be OK with you forcing your kids on me? And you lying about why you hired me?\" \n\n\"I never lied, really. I just didn't tell you everything.\" \n\n\"Splitting hairs,\" I mumbled grumpily. \n\n\"And I couldn't force you to take the kids. I just... I just hoped you would. All I could do was set it up so you'd actually want to. That's why I put the fliers up at places that I thought would attract the kind of woman with a lot of sympathy and compassion -- churches, day care centers...\" \n\n\"And a women's shelter in a poor neighborhood? Interesting choice. But I guess a lot of the women who pass through our doors are looking to make some changes in their lives...\" \n\n\"What?\" \n\n\"The clinic. You put your flier up in our clinic.\" \n\n\"No... I definitely didn't do that.\" \n\n\"Well how do you explain me seeing it there?\" I asked, confident he had just forgotten. \n\n\"I promise I didn't put one there. I still haven't been there.\" \n\n\"Well, you're wrong,\" I said, ready to drop the subject. \n\n\"The mysterious hand of fate at work,\" Aaron said softly as I crawled out of bed and headed towards the bathroom. \n\nAfter I started the water running for a shower, I poked my head back into the bedroom and said, \"Fate doesn't hang up fliers!\" \n\n******* \n\nEvents moved quickly, probably because we felt the urgency of the limited time given us. We waited a week to tell the kids that I would be around a lot more, planning to tell them in another week or so that I would be staying. Maya upended that plan, though, while we were telling them that I would be around more. She was studying my face intently as Aaron spoke, then she suddenly asked in hushed awe, \"Did my Daddy give you true love's kiss?\" \n\nApparently our blushing faces were answer enough. Maya tearfully embraced me in a way she never had before. Derek just went along with it, true to his nature, never really excited but calmly expressing his approval with two thumbs up. \n\nI found it a little awkward to be asking for yet another few weeks off to get married that winter. I only requested two days, planning to just make a long weekend of it. When Dottie and Thomas asked to meet me in her office late one afternoon, I was a little worried that I had gone too far in asking for that much. Dottie sat behind her desk, her silver hair smoothed and flowing over the shoulder of a sparkling black dress. It was not her usual work attire. Thomas stood by in his white coat, stethoscope still around his neck. His large, dark frame towered over us, but his gentle demeanor kept him from seeming threatening. \n\n\"Thomas, dear, did you bring your tux or will we need to run home first?\" Dottie asked as we settled down. It still baffled me to think of them as husband and wife, and not just because of the age difference. \n\n\"It's in my office, Dot. I'll be ready to go in plenty of time,\" he assured her with a smile. \n\nDottie looked at me and said, \"Fundraising dinner. I wish Gina would handle all of these things herself, but...\" As she spoke, she shuffled some papers around to clear space on her desk. I knew why Gina wanted her there. Not only was Dottie a compelling spokesperson and fearless negotiator, she often played bad cop to Gina's good cop. Dottie brought the guilt and shame to those who did nothing about our city's problems, and Gina brought the bright picture of what it could look like to get involved in the solution. Dottie had the stories, Gina had the bar graphs. \"Anyway, what's with these two days off you're requesting?\" \n\nI wiggled in my seat and tried to sound confident. \"I have the days saved up, I'm sure of it. And Kara will be there both days to oversee-\" I glanced up at Thomas, who was suppressing a laugh. \n\n\"Denise,\" Dottie said sternly, \"A four day weekend is hardly enough time to host a wedding and to be alone with your new husband. I insist you take at least two weeks.\" \n\nMy nervousness shifted almost imperceptibly to excitement. \"Two weeks? Are you sure that-\" \n\n\"No one is indispensable, Denise. We love you and value your work, but we'll survive without you.\" \n\n\"Thank you, Dottie,\" I said with restrained enthusiasm. \n\n\"Besides, we're going to need to get used to having you gone for a while if you're serious about that nurse practitioner degree.\" \n\n\"Oh, I think that might still be a ways off,\" I said, realizing Aaron and I hadn't talked about the details and timing of that yet. \n\n\"It'll be easier to do now than later, I think,\" she said softly. \"But that's your choice, of course.\" \n\n\"Well, thank you, I'll consider that,\" I was bouncing my leg in eagerness to call Aaron and tell him to start making different plans... \n\n\"Please, Denise, enjoy the time you have,\" she said, her eyes glistening. \"My last years with Glen were... they were very special. But we had a history, too, that you don't have yet with Aaron. Death... It clarifies our priorities and helps us cherish what we otherwise take for granted.\" \n\nI couldn't respond. I felt like I would cry if I opened my mouth. \n\n\"We're happy for you, dear,\" she concluded, standing up. As she stood, she opened a drawer and pulled out a familiar piece of paper. \"And Thomas and I feel a certain responsibility for you and your husband.\" She handed me a folded up copy of the flier that had been posted in our clinic. I gave her a questioning look, still too emotional to speak. \n\nThomas's deep voice spoke up. \"As soon as she saw this posted in our church, Dottie thought of you. I agreed. But neither of us could explain why. So we moved it to the clinic where you would see it and left the rest to...\" \n\n\"Fate?\" I laughed. \n\n\"Well, I would say Providence,\" Dottie corrected, \"but it's the same idea.\" \n\n\"Sometimes Fate needs a hand,\" Thomas commented. \n\n\"Or a flier,\" I mumbled thoughtfully. \n\n\"Now shoo!\" said Dottie. \"We've got business to attend to and you've got a fianc\u00e9 to talk to.\" \n\nI smiled as I made my way out to the car, carefully putting the folded paper in my purse. The moments left to us may be limited -- they always are -- but I was determined to make sure that we didn't waste a single one. \n\n******* \n\nThe End"
    ],
    "authorname": "nageren",
    "tags": [
        "drama",
        "bareback sex",
        "confessions of love",
        "single father",
        "nanny",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/while-we-have-this-moment-ch-03"
}