{
    "title": "Superman Fucks Gotham Ch. 16",
    "pages": [
        "I got kind of sidetracked on this one and it takes a while to get to the payoff. I didn't change this during edits, because I think there's value in doing it this way, but just FYI. If you're not as serious with comics, you may want to look up Stephanie Brown's costumes as the Spoiler, Robin, and Batgirl. Also, the chapter kind of assumes that you know that DC really jerked around her character regarding her death.\n\nAs always, both comic book logic and crazy sex fantasy rules are in effect.\n\n*****\n\nThe first time Stephanie Brown walked up to the new city hall, she did so in her civilian clothes. Not even fun ones, just a shapeless blouse and sweat pants. It got her absolutely nowhere. Though the new building that had seemed to spring up from nowhere was the seat of a new provisional government, backed by Superman's power, it contained most of the same community leaders Stephanie already knew. \n\nWhen she managed to talk to them, they said that they had more resources to do their work and the promise that Superman would enforce order, but otherwise things hadn't changed. Since people were trying to rebuild their lives, it felt awkward to be getting in the way with her snooping. As Stephanie Brown, there was nothing else she could learn from the place. \n\nThe second time, she went as the Spoiler. It had been too long since she'd donned the purple outfit, but it still felt great. Maybe her name no longer applied, or maybe she'd find out there was something nefarious going on under the surface and she could spoil that. Plus, the costume made her feel sexy as hell. \n\nShe slipped inside that evening, easily evading the simple security. There were several computers running on a generator and cabinets filled with files when those weren't working. Stephanie avoided them all, since they were just doing their best to make Gotham a better place. Everything she saw suggested that the new city hall was exactly what it appeared to be... \n\nAt least on the first floor. \n\nAfter a complete circuit, she realized that there simply were no stairs to the second level. That made the mystery of what exactly went on in the upper floors all the stranger. Rumors suggested that there were women working in city hall who seemed entirely too well-armed and well-trained to be simple civilians. Somewhere above, there was the mystery of Superman's control of all this. \n\nEventually Stephanie found a panel that looked like it could open into the second floor. She used her grappling hook to get nearby and began to experiment with the panel, only to find that it opened immediately at her touch. Not like a trap, more like an automatic door. Well, maybe that made sense for Superman. \n\nRegardless, she used the opportunity to flip herself up to the second floor. She didn't retract her grappling hook in time and it got caught, but the panel opened again when she touched it. Then she was inside. \n\nThe second level was much nicer than the first, lushly furnished with carpets and furniture that could have been taken from a mob boss's headquarters. Probably had been, she realized. If Superman had really conquered so much of the city, then he'd captured quite a bit of stuff. But was he really living amid it all like a boss? That didn't sound anything like the hero she'd known, but then again, neither did most of the rumors. \n\nJust when Stephanie was starting to think the floor was empty, a shadow detached itself from the others and came to stand in her way. It was a woman wearing all black, rather similar to the League of Assassins garb. \"That's far enough. You shouldn't be here.\" \n\n\"Just taking a look around.\" Stephanie stepped back and put her hands behind her back in a disarming posture that put her fingers close to her utility belt. \"Does Superman really live here?\" \n\n\"He's working at the moment. If you have ordinary business, please raise it downstairs during business hours. If you want to discuss superhero business, there are better channels for that than breaking and entering. If you remain here, I will be forced to restrain you.\" \n\nWhile the other woman spoke, Stephanie got a better look at her. She definitely had the ninja vibe going, and she carried herself dangerously, but Stephanie no longer thought she was a League member. Her outfit was cut to reveal cleavage and thigh, and while the League sometimes dressed like that, in this case it seemed like something that had been chosen. Though the cowl made it harder to see, the ninja was definitely wearing some makeup. \n\nOverall, she looked like a woman who had her eye on a boy or girl she liked and was dressing for their sake. That wasn't much like the League at all. It didn't look like she was going to give much in the way of answers, though, so Stephanie crawled her fingers toward the side of her belt where her staff lay retracted. \n\n\"So, if I wanted to make an appointment with Superman...\" \n\n\"It doesn't work like that. Leave, now.\" \n\n\"Fine, let's do it this way!\" Stephanie grinned as she whipped her staff from her belt and it snapped out to its full length. Maybe there was a better way to resolve the problem, but she was itching for a fight. \n\nThe other woman reacted immediately, knives cutting at her with deadly intent. Stephanie was able to keep her at bay with her staff, but it was a closer thing than she'd expected. Her opponent was League material, at least, forcing Stephanie to brush off all her old skills. \n\nThey exchanged several more blows, neither able to get the upper hand. Yet while Stephanie was still grinning, the other woman seemed worried. Abruptly her eyes shifted, the slightest of reactions not quite suppressed by training, to something behind her. \n\nStephanie whirled, her staff stabbing directly toward her attacker. It was a good move, she thought, one of her best, yet the staff didn't connect. Her opponent was a black blur, disarming her effortlessly and tossing the staff aside. Though Stephanie raised her fists, she paused in shock as she realized she was facing someone familiar to her. \n\n\"Cass?\" Stephanie knew she should be more suspicious, but her heart swelled at the idea of seeing her old friend again and she couldn't bring herself to doubt. Cassandra was wearing a variant of her Black Bat costume, as stark and ominous as always. \n\nHer head tilted to the side slightly. \"If it's really you, show your face.\" \n\n\"Cass, it's me, Stephanie!\" She pulled the cloth from the lower half of her face and lowered her hood. \"What's going on?\" \n\nFor a moment she was afraid, but then Cassandra's posture relaxed. She raised one finger to Stephanie and then turned toward the ninja woman. \"This is an old friend. Thank you for intercepting her, but I will deal with this from here.\" \n\n\"Of course, Mistress.\" The ninja bowed and vanished into the shadows, leaving them alone. \n\nAfter a long pause, Stephanie made a noise of disgust in the back of her throat. \"Cass, I know you're probably going for this, but that mask is creepy as fuck. Can you...\" \n\n\"Hello, Stephanie.\" Cassandra removed her mask and smiled at her, and Stephanie felt a rush of relief and warm friendship. \n\nShe'd been worried that something had happened to her friend after she had to flee from the League of Assassins. But now Cassandra looked healthy, her skin vibrant and her hair glistening. More than that, she looked happy. Something seemed to have filled the spaces that had once been empty pain. And based on how fast she'd disarmed her... \n\n\"Am I just really rusty?\" Stephanie sighed and walked to her fallen staff. She rolled it up onto one boot and then kicked it up to her hand. \"You've always been better than me, but I thought I could put up more of a fight than that.\" \n\n\"I don't think you've deteriorated. But I've become significantly better.\" \n\nStephanie's eyebrows rose. \"You don't seem to have any trouble speaking, either! I'm really happy for you.\" \n\n\"Thank you, Stephanie.\" Cassandra gave her another one of her quiet smiles. \"If I'd known you were active as Spoiler again, I would have contacted you. What are you doing here?\" \n\n\"I should ask you that.\" Stephanie retracted her staff and flopped down onto one of the plush couches. It felt as nice as it looked and she sank into it. \"But I guess it's on me to answer first, since I broke in here. I'm not sure I really believe that Superman is rebuilding Gotham. Is something suspicious happening?\" \n\n\"I wouldn't put it that way.\" Cassandra gracefully sat in a chair opposite her. \"The first floor is exactly what it looks like. We conduct more clandestine business from the second and house many of our team members in these rooms.\" \n\n\"And the third? What's up there?\" \n\n\"Nothing.\" \n\nStephanie cocked an eyebrow. \"Right, that's not suspicious.\" \n\n\"I spoke the truth. It is there to give the impression this is Superman's headquarters, while our actual base of operations is elsewhere.\" \n\n\"So Superman is behind this.\" \n\nCassandra gave her a thoughtful look. \"I've answered many of your questions, Stephanie, but I have many of my own. How have you been, since...\" She trailed off instead of bluntly stating that Stephanie had been fired from her position as Robin by Batman. Her social skills really had improved, then. \n\nSince she'd wanted someone to talk to anyway, Stephanie gladly told her about everything that had happened to her. Her attempts at another kind of life that never seemed to go her way, her depression as the world seemed to darken, and finally her new drive to prove herself again. \n\n\"I figure what I need to do is get a big win on my side.\" Stephanie brushed back her blond hair, wishing it didn't get so tangled under her hood. \"I thought maybe this whole Superman government would be a scam I could unveil, but apparently not. That's okay, though, I have a backup plan. Part of the city that's still lawless is controlled by a criminal called Black Mask. I have files from the computer on him, so I think I should be able to take him out, no problem.\" \n\nThough Cassandra had been a perfect listener, utterly without judgment, now she frowned slightly. \"Do you think that's wise?\" \n\n\"Sure. Come on, Cass, what's the worst that could happen?\" \n\nAnother slight frown, then Cassandra removed a small black box from her belt. \"Would you mind if I scanned with you with this? There is... residual radiation in Gotham and you may have been exposed.\" \n\n\"Okay, sure. Do I need to get up, or - okay, I'll lie here. I didn't think you were the sciencey type.\" \n\n\"This is for Barbara.\" \n\nStephanie sat up, smiling again. \"You're working with Babs? That's great! Can I meet her?\" \n\n\"I'm certain you will, but there are several key decision that need to be made.\" Cassandra frowned at the box's readout. \"And she will want to see these results.\" \n\n\"What? Am I sick?\" Stephanie hopped over to look over her shoulder and saw a dizzying array of numbers and symbols. \"Wow, how can you underst... wait a minute! Can you read now?\" \n\n\"I can.\" \n\n\"That's wonderful!\" Stephanie embraced her warmly. Though Cassandra slipped her arms around her back, she spoke in a fairly cool tone. \n\n\"It is truly absurd that I wasn't taught the skill early on. It is a rather crucial skill to lack, yet I went without it for years. That... does not actually make any sense. I see.\" \n\n\"What on Earth are you talking about?\" Stephanie pulled back, her hands on her friend's shoulders. No response. \"Okay, fine, you don't have to tell me if you don't want to.\" \n\n\"It's not that, Stephanie. I need time to think and consider several things. Please, don't do anything foolish like entering Black Mask's territory. I'll find you soon and perhaps then we can discuss everything.\" \n\nThey exchanged contact information and hugged again before Cassandra led Stephanie out through an exit that was a perfect choice for grappling away. As Stephanie sailed through the air, her heart as light as air, a bit of doubt began to creep in. \n\nThough she'd been glad to see her, Cassandra had avoided the key questions. She was withholding information - Stephanie still wasn't a real member of the Bat Family. Not in any cruel way, more like a concerned older sister. The idea of having an older sister sounded great, but Stephanie wanted to be closer to equals. \n\nWell, she could show them. She'd execute the entire plan on her own and then they'd have to acknowledge her. Stephanie grappled toward Black Mask's domain. \n\n&nbsp; \n\nX X X \n\n&nbsp; \n\nWhen Cassandra returned to the Batcave, she found it pleasantly quiet. Their group was more spread out now, which suited her just fine. It seemed fitting that the growing harem shouldn't be confined to a small area, plus it made small and intimate encounters easier. \n\nThose thoughts faded almost immediately as she reached the central computer. Barbara was there, typing an email to one of her contacts, but she looked up immediately when Cassandra approached. Instead of greeting her, Cassandra raised the scanning device. \n\n\"This data needs to be analyzed and cross-referenced with yours. It may be important.\" \n\n\"Sure.\" Barbara set it near the receiver and swiped the data into the main computer. \"Hmm, these are pretty high m-waves, even for a superhero or villain, but you came back alone. What exactly happened?\" \n\n\"I met Stephanie.\" Cassandra pulled one of the chairs closer and sat down, watching the computer process the scan. \n\n\"Oh!\" Barbara smiled as soon as she heard the name. \"Did she seem alright? I worried about her, given that Bruce seemed... unusually harsh with her.\" \n\nThat thought had been working in the back of Cassandra's mind, but hearing Barbara state it that way made things much clearer. \"In my opinion, Stephanie has always been competent, and no more impetuous than many of Batman's other wards. Does her treatment strike you as unfair?\" \n\n\"Possibly, but I didn't blame Bruce because there was so much going...\" Barbara's eyes widened just slightly. \"Ah, I see. You think the Writers were responsible. Well, when the computer finishes crunching the data we'll at least have suggestive evidence.\" \n\nThey sat in silence for a time, watching the progress bar inch along. As troubling as it was to think that extra-dimensional beings could manipulate everything about them, Cassandra had begun making the assumption that it was true. It would explain her life up to that point... except that she didn't see what benefit the changes could possibly produce. \n\nPerhaps she was viewing the problem from the wrong angle. These Writers clearly cared nothing for human lives, so they must have other goals. Barbara thought they fed off of the c-waves for unknowable reasons, but Cassandra wasn't so sure. Saying that these beings were beyond their understanding stopped all future questions. She preferred to keep wondering, hoping that another way of thinking could provide an answer. Harley might be helpful, but- \n\n\"What's going to happen to Stephanie?\" Barbara wheeled to face her with a serious expression. \"If there is otherworldly manipulation, then Superman could probably neutralize it. But you didn't bring her back here.\" \n\n\"I didn't.\" Cassandra closed her eyes. \n\n\"You don't want her to join us?\" \n\nThe problem was that Cassandra did, desperately, to the point where she'd nearly tied up her friend and delivered her straight to Superman. But Stephanie was no threat who needed to be removed, she was just a young woman. \"Is Stephanie still dating Tim?\" \n\n\"I'm not sure, but it's hard to believe they would have continued that relationship.\" Barbara sat back and watched her carefully. \"I thought you were comfortable with all this.\" \n\n\"I am. But I'm uncomfortable with how easily Superman's power would be to misuse. Reforming villains and making people happy is one thing, but I'm certain he could just as easily take every woman. The moment we start severing relationships...\" \n\n\"I can understand that, though I personally feel like I set aside moral qualms when I joined a harem of supervillains.\" \n\n\"Be serious, Barbara.\" \n\n\"I'm just taking a moment to think.\" She rolled back to get in range of her coffee mug and took a slow drink. \"This isn't really very different from any other power. There's just as much potential to create relationships as to destroy them. And if someone has to have that much power, I'm glad it's Superman. Maybe... maybe that's why Bruce called him first, though-\" \n\nBarbara cut off as the computer beeped to signal the completion of its work. As the numbers came on screen, Cassandra half-rose from her seat without knowing why. Her instincts were screaming something, but... \n\n\"I've seen numbers like these before,\" Barbara said. \"It definitely supports your theory of outside manipulation. But that's odd, these are more e-waves than w-waves. I'm not sure what to make of that...\" \n\n\"Death.\" Cassandra stiffened as it all came together for her. Though it defied logic, her combat instinct that detected fatal blows was clearly telling her that Stephanie was heading directly toward one. \"They've marked Stephanie to die.\" \n\n\"Are you sure?\" \n\n\"No, I don't have concrete proof, but I'm not willing to leave it to chance. Let's not take any risks, call Superman and-\" \n\nBarbara winced. \"He's off planet. Talia has been using League resources to track down more Kryptonite and he just took another batch.\" \n\nThey stared at each other for a split second, then came to the same decision without speaking. Cassandra sprinted toward the hanger at top speed. Her mind offered her images of Stephanie dying, but she forcibly quieted her imagination. \n\nNormally they avoided using the vehicles, partially because Superman was a faster method of transportation and partially because they were avoiding the Bat brand. But now that time was of the essence, Cassandra leapt into the sleek Batplane and fired up all systems. It was made to fly almost immediately but the engines still took a moment to warm up, so she attempted to call Stephanie. Nothing, her communicator was off. \n\nSoon the plane shot out of a hidden hanger entrance and arced over the city. Cassandra tapped her comm-link. \"Stephanie has disabled communication. Can you track her?\" \n\n\"I'm trying, but if she removed the batteries there won't be a signal.\" A map popped up on screen. \"I've marked Black Mask's territory and suspected locations of his headquarters. Give me a moment and I'll indicate which ones Stephanie might know about.\" \n\nTime to think had only reinforced Cassandra's impression of impending threat. The feeling dissolved when she tried to examine it directly, but she felt increasingly confident that she was right. Perhaps this was how Harley saw the world, grasping at larger truths she wasn't meant to comprehend. \n\nWhat could anyone gain by sending an innocent girl to her death? Asking the question that way didn't bring her any answers and there was no time for deeper reflection. Whatever the case, one thing had become crystal clear for Cassandra: she'd do whatever it took to prevent Stephanie's death. \n\nAs she swept over Gotham outskirts, she worked together with Barbara to rule out some of the locations. Eventually she had to hover between two likely candidates. Her instincts did her no good with such precise issues, so she kept them quiet and reasoned through the problem. When Barbara finally detected activity from one of her long distance microphones, Cassandra leapt into action. \n\nShe slid down the rope from the plane so quickly that she could feel the burn through her glove. Cassandra stopped her momentum just before she hit the skylight, crashing through at a less suicidal speed and coming down into the building in the middle of a hail of glass. \n\nWhile still in the air, she scanned the room. Black Mask at one end, near a firmly tied Stephanie. Eleven of his subordinates lurked around the room, most carrying guns. They were only just now starting to look up toward the breaking glass, however, so they weren't a threat. What mattered was convincing Black Mask that running was a better tactic than using Stephanie as a hostage. ",
        "Cassandra came down on top of one thug. Even as his head was smashing into the floor she leapt off him and struck the nearest two men in the throat. Normally she tried to disable her opponents elegantly, but now she used nothing but the most brutally effective tactics. In a matter of seconds she'd taken down all the men and was advancing on Black Mask. \n\nHe'd been taken off guard, but he still raised a gun to fire on her. Cassandra could see the exact path his bullets would take and shifted just slightly when she saw the muscles in his hand move to pull the trigger. It created the illusion that she could dodge bullets and she saw the burning red eyes widen. After a pause, Black Mask turned tail and ran. \n\nShe let him go, instead rushing to Stephanie. A tray of bludgeons, knives, and power tools sat beside her, but it didn't look like any of them had been used on her. In fact, she looked untouched, except her clothes... \n\nFor just a moment Cassandra hesitated. Stephanie didn't merely hang from her chains, they forced her into a position with her back arched. Both her ass and her breasts seemed about to burst from her costume. The torture would likely have been incredibly sexualized and Cassandra felt as though she was on the verge of understanding... \n\n\"Cass?\" Stephanie looked up at her and her eyes blazed back to life. \"Oh, thank God! He was going to do all kinds of horrible things to me!\" \n\n\"Stay still, I'll free you.\" It didn't take long to remove the chains. As soon as Stephanie got her balance, however, she began moving for the door. \n\n\"Let's go before he gets away!\" \n\n\"Stop!\" Cassandra grabbed her wrist and held her back. \"This is the middle of his territory. He'll have more subordinates in seconds and we won't have the element of surprise next time.\" \n\n\"I've gotta stop him! That's the only way you'll all respect me!\" Stephanie actually struggled against her grip, still trying to throw herself to her death. Except it wasn't a death wish, Cassandra knew those well enough. \n\n\"Stop and think, Stephanie. You don't need to-\" \n\n\"Let go! I have to do this!\" \n\nReasoning with her wouldn't work, Cassandra realized. Perhaps the younger woman was truly that impetuous, but Cassandra imagined she could see the m-waves emanating off her. There was nothing logic could do against that. Well, she was no Superman, but... \n\nCassandra pulled Stephanie into her arms and kissed her directly on the mouth. Stephanie struggled in shock for a moment, then went still. She pulled back after a moment, blushing and staring at her in astonishment. \n\n\"Um... I like you a lot, Cass, but I don't really like girls that way...\" \n\n\"That doesn't matter. Just stop and think about what you're doing.\" \n\n\"I know what I... huh.\" Stephanie frowned for a moment and stepped away, no longer trying to escape. \"I still have this driving need to prove myself, but I see what you mean about that being suicidal. Maybe... what if we fought the Scarecrow? He's still at large, so we could prove we-\" \n\n\"No.\" Cassandra grabbed the front of her outfit. \"Think!\" \n\n\"I'm trying, but I feel... like there's two forces battling inside of me. I'm scared, Cass. I don't know what I'm supposed to do.\" She looked very young and frightened at that moment, so Cassandra took her into her arms and held her for a while, stroking her hair. \n\nSo it seemed like her kiss had had some effect. Cassandra knew that she didn't generate energy like Superman, but Barbara said that their levels spiked whenever Superman fucked them, so her own levels should have been high. Apparently some of the effect could rub off, though it wasn't as effective. Well, if that was what it took... \n\n\"Stephanie, are you still dating Tim?\" \n\n\"What? Is now the time to-\" \n\n\"It's more relevant than you think.\" Cassandra shot a grappling hook through the skylight and fortunately Stephanie copied her. When they leapt up to the roof, Stephanie answered her question. \n\n\"We broke up a long time ago. After I got fired, he started getting really condescending. Am I really not good enough, Cass? Wait, I know - would it be a good idea to fight the Joker to prove-\" \n\n\"No!\" \n\n&nbsp; \n\nX X X \n\n&nbsp; \n\nAfter several hours flying through the depths of space, Superman's cock was hard as steel. Well, it always was, but now it was aching to be inside someone. Had he really gone so far that a few hours without a fuck left him feeling sex-starved? Well, it was probably for the best, given the number of women who wanted him desperately. \n\nMost of the trip had actually been rather pleasant. Space was quiet and peaceful in a way nowhere on Earth could really be. Some time alone with his thoughts had done him good. But given enough time, his urges had become undeniable. Now even all his discipline couldn't soften the hard rod in his trunks. \n\nAnd that didn't really bother him. \n\nWhen he reached the periphery of Earth, he began orbiting, considering his options. He could quench his burning erection at any of the sites they were working at, so it was probably best that he visited them logically. While only a short time had passed, he didn't want to risk not being where he needed to be just because of his base desires. \n\nBut before he could finish his plan, another signal reached his ears. Not an emergency, but there was an urgent signal from the Batcave. They hadn't used that one before, since they could call him from almost anywhere. Superman approached Gotham while staying in the upper atmosphere, just in case things had gone very wrong and it was a trap. \n\nYet when he swept his gaze through the Batcave, he didn't see any signs that things were amiss. The signal came from the main computer, so he looked toward it. He saw Barbara and Cassandra there, sitting with a slightly younger woman. Stephanie Brown, he realized after a moment, one of Batman's shorter-lived sidekicks. It looked as though she had just recently been crying, but they'd comforted her. \n\nMaybe he shouldn't intrude, then. He focused his super hearing on the scene far below and managed to filter out everything but their voices. \n\n\"Thanks, both of you.\" Stephanie wiped her eyes clear and smiled. \"I feel a lot better, but are you sure I don't need to-\" \n\n\"Yes,\" both of them said simultaneously. \n\n\"Fine, fine... then can you finally explain what's going on here? We've been talking for such a long time and you haven't mentioned Superman even once. Is that all a bluff? Or, like, he spends most of his time in Metropolis and just lends his name to the new government?\" \n\nThe other two women exchanged a slight smile before Barbara answered. \"Far from it, he just hasn't been relevant yet. But if you really want to know...\" \n\n\"I do! I've been hearing all kinds of ridiculous stories, like that Superman has a harem of... oh my gosh, is it true? Don't give me that look, Babs, answer me!\" \n\n\"I've been sleeping with Superman, yes.\" \n\nStephanie's head whipped around, blond hair flying. \"You too, Cass?\" \n\nCassandra nodded quietly. \"Please don't be alarmed, this is-\" \n\n\"Superman has had sex with both of you? T-together?\" Stephanie clapped her hands over her face to hide a rising blush. \"That's so fucking hot.\" \n\nFrom space, Superman raised an eyebrow. Well, that hadn't been quite the reaction he was expected. There was no way he was having an impact on her from this far away and he hadn't met her any time recently, so there was no outside interference. Apparently she was a dirtier girl than she looked from the outside. \n\nMeanwhile, Barbara and Cassandra both seemed only slightly surprised. Barbara tilted her head to the side. \"You're... taking this rather well.\" \n\n\"Was I right? Seriously? Both of you together?\" Stephanie watched them eagerly and when they nodded, she giggled wildly. \"God, it's like the kind of thing I'd fantasize about. What's it like? Does he make you kiss and act all like porno lesbians?\" \n\n\"Of course not,\" Cassandra said sharply, but her expression immediately softened. \"It's... very familiar, very intimate. I'm such good friends with Barbara, there's no jealousy, just sharing something wonderful. And Superman... well, there's no way to really describe that. But he can encompass our desire easily and it makes the whole experience incredibly fulfilling.\" \n\n\"Wow, that sounds... but no faux-lesbian stuff? Aww...\" \n\nBarbara rolled her eyes. \"If you want that, talk to Poison Ivy and Harley Quinn. They definitely seem to get off on it.\" \n\nStephanie's eyes went wide. \"We have them, too?\" \n\n\"They're not in the Batcave right now, but we have quite a rogue's gallery. It would take a while to explain, but remember how Superman was always trying to bring out the best in villains? Well, now he can do that with his cock.\" \n\nThat got another snicker, but Stephanie's breath was coming heavier and her pupils dilating. \"Can I get in on this? You wouldn't taunt me with details if you were keeping me out, would you?\" \n\n\"Stephanie...\" Cassandra took her hand gently. \"Is that what you really want?\" \n\n\"Hell yes it is! Have you seen Superman? Wait, stupid question. But I'm serious, I've gotten off so many times thinking about him. That body would be enough, but the fact that he's pretty much the ideal superhero? Irresistible. I'd jump his bones right now if he was here.\" \n\nThat would have been a perfect entrance line, but Superman held himself back. He had no problem adding another girl to the harem, especially one hand-picked by Barbara and Cassandra. For some reason he'd gotten a negative impression of her from Batman, but he realized that even if that had been accurate, it didn't have to be relevant. \n\nWith that in mind, Superman took another look at her. Blond hair lay tousled around her shoulders and cherubic face. Her sleek black and purple costume hugged her body tightly, and when he checked its composition he was surprised to see it offered her almost no support. Her breasts were that high and her body that tight without any assistance. \n\nAll of his women had tight and pert bodies, but Stephanie was achingly perky. Her body practically radiated youthful beauty. Her pussy was shaved clean, and he'd seen that she had a dirty mind, but there was still a playful innocence to her face. His cock couldn't possibly get any harder, but now it was burning specifically for her. Yes, he had no problem with adding Stephanie Brown to the harem. \n\n\"Do you think he really wants me?\" Stephanie was saying. \"I mean, he has so many hot women already. I know what I'll do, I'll prove-\" \n\nCassandra forcibly pushed her back into her chair while Barbara massaged her forehead. \"Jesus fucking Christ, someone up there really wants you dead.\" \n\nThat seemed like a better time to intrude. Superman shot down like a rocket, slowing only enough to avoid causing damage to the world below. He shot through one of the entrances to the Batcave and came to a halt just behind them in an instant. As usual Cassandra noticed, but it took the others a moment to turn toward him. \n\n\"Hey, Superman!\" Stephanie greeted brightly. \"We were just talking about you, do you - oh my gosh, is all of that really your dick?\" \n\n\"Nice to meet you too, Stephanie.\" \n\n\"Err, sorry, don't mean to treat you as a piece of meat, haha. But the Batgirls here just explained what's going on and I'd be pumped to get in on it.\" She flipped her hair out of her face coyly and shifted her stance to emphasize her body. \"And you want some of this, right?\" \n\n\"I'd like all of it.\" Superman pulled her into a chaste embrace, but it still took Stephanie's breath away. She stared at him for a moment, gasping, then she grinned and kissed him eagerly. Though she was an inexperienced kisser, she left no doubt about her sincerity. \n\nWhile they were still kissing, Superman heard Barbara speaking in a barely audible voice. \"The Writers seem to want her dead for some reason. I'd like to get data on this, so stay inside the monitored zone. Otherwise... just fuck her until she stops trying to get herself killed.\" \n\nThat was something he could do. \n\nThe others started to leave the room, prompting Stephanie to pull back. She kept a death grip on him, hands tangled in his hair, but she twisted to look at them. \"You guys can watch, if you want!\" \n\nBarbara just shook her head and left, but Cassandra walked closer to them. \"Your first time with Superman should be between the two of you. There will be time for other things later.\" Her fingers caressed the side of Stephanie's face and then trailed across Superman's chest and shoulder before she left. \n\nThere was a large bed in one corner of the Batcave for emergency fucks, so Superman floated her there. He sat down and leaned back, leaving Stephanie straddling him. She could practically support her small body on his, which she seemed to enjoy. When she settled down and felt his bulge between her legs, however, her expression became more serious. \n\n\"I'm ready, but... don't be too hard on me, okay?\" \n\n\"I'm not going to hurt you.\" Superman held the side of her face and kissed her again. She was young... but she was definitely a woman. Her tight young body could take him, provided he was a little patient. Blowing off steam with someone else first might have been a good idea, but it was too late now. \n\n\"So, uh, how do you want to do this? I love your costume, but I'd like to see you out of it...\" \n\nSuperman lifted her just slightly and removed his costume so quickly that when she fell back against his body he was nude. His cock sprang up and bounced off the back of her ass, making her squeal. But her attention was soon captured by his body as she ran her hands over his chest, enraptured. \n\n\"Wow, you're even hotter than you look in the suit...\" Her eyes rose to his, pupils yawning darkly. \"How do you want me? This is my Spoiler costume, but I've also been Robin, and Batgirl for a while, so you can take your pick.\" \n\n\"Right now, I'll take just Stephanie Brown.\" He pulled the same trick, leaving her momentarily naked in midair, still not realizing that he'd stripped her. Though he'd seen her tight young body briefly through the costume, he hadn't really drank it in before. \n\nA second later, after he'd fully enjoyed the sight, she fell against him. Stephanie giggled and buried her face against his chest, which let him feel her body. It let her feel him, too, and she soon pushed herself back, body flushing. \n\nShe crawled off him and between his legs so she could take his cock in both hands, which made them look even smaller. \"Shit, is this thing the normal size? I haven't seen too many... no, of course this would be a super cock. That makes sense.\" Stephanie hesitantly moved her face closer and licked it, then smiled. \"Hey, that was pretty good!\" \n\nFor a minute she gently stroked him with both hands while her hands and lips explored his length. It wasn't what Superman really wanted, but it felt incredible and so he was more than willing to let her experiment. But she soon pulled back, hands still on his cock but face looking at him again. \n\n\"I, uh, I've actually done a lot of oral sex with my boyfriends. And to be honest, I'm not very good at it - there's no way I can do a good job with this pole. But I'm seriously burning up - is it okay if we just fuck now?\" \n\n\"Is it okay?\" Superman repeated wryly. In an instant he had her flat on the bed, his body looming over her. As soon as she caught up to the movement, her breath quickened even more. \"You have some strange insecurities.\" \n\nStephanie wriggled beneath him, her hips lifting up toward his cock and immediately retreating when she felt his hardness. \"Sorry, but I'm pretty sure that comes with being a girl.\" \n\n\"Well, let go of them. You have one of the tightest young bodies I've ever seen.\" Still holding himself away from her, his hands showing his appreciation directly. Touching her nipples almost seemed to be too much for her, so he paid more attention to stroking the rest of her body. When he slid one hand between her legs with no more pressure than a feather, she bucked and came right then. \n\n\"Shit...\" she breathed. \"Shit, that's way more intense than I... don't touch me directly, alright? That cock is already going to be way more stimulation than I can handle.\" \n\n\"If you want to lead...\" \n\n\"No, I don't think I could handle it. Just be gentle.\" She nervously looked down, so he began nuzzling the head of his cock against her lower lips. That was almost too much for her as well, but he gradually began to penetrate. \n\nAs the head reached the flaring rim that seemed to be too much for her, so he pulled back. Stephanie took in deep gulps of air, but wrapped her arms around his neck and urged him on, her angelic face focused on his. He teased her with just part of his head for a while before finally slipping it in. \n\nImmediately Stephanie threw her head back, releasing a series of curses that were decidedly non-angelic. With just the head of his cock inside her, Superman already felt like she was gripping him like a vise. He eased in just a little more and then pulled back, letting her channel relax to levels where sex would actually be possible without breaking her in half. \n\n\"Can,\" she had to gasp for breath, but she managed to speak, \"can I try leading now?\" \n\nSuperman flipped them over, putting her down on his stomach before lying on his back with his hands behind his head. Stephanie grinned down at him and stretched her arms above her, giving him a perfect view of her body. Her slit felt hot and incredibly wet against his abs. On a whim he clenched his superhuman muscles there and she gave a little moan. \n\n\"D-don't tease me. I want this too.\" She shakily lifted herself up and climbed onto his cock again. It didn't take her long to get his head comfortably inside her, but she moved very slowly with the rest of his shaft. \n\nAfter some time she tried her first bounce. When his cock went a little deeper inside her Stephanie yelped and her legs buckled. She would have plunged down his cock if he hadn't caught her. Stephanie breathed a sigh of relief. \n\n\"Thank you. Just... give me a little longer...\" She began moving, or at least trying to move and his hands didn't provide any resistance, so that she was practically hovering over his cock. With each movement she took in a little more of the hard length. \n\nWhen she had taken three quarters of it inside her, she seemed to reach her natural limit. She fit him like an incredibly tight glove, and though Superman could have pressed further, he knew she couldn't take the rest without pain. \n\nStephanie began bouncing up and down eagerly without taking any more of his length. Her pace increased incredibly fast, soon becoming frenzied as she came again. She collapsed against him with only about half his length still inside her. It had been enjoyable, but Superman needed more. She knew that too, and slowly propped herself up on her arms. \n\n\"That was already way bigger than anything I've had inside me. I'm going to need your help to take the rest of it.\" \n\nSuperman sat up and pulled her against him in a tight embrace. She clung there while he moved his hands to her hips and began rocking them back and forth. Bit by bit, he worked more of himself inside her. Her arms never loosened, so her breasts pressed hard against him rubbed their way up and down his chest. \n\nIt took a long time, but eventually he was fully seated inside her, her small hips against his, her pussy impaled on his cock. Stephanie couldn't speak for a while, trying to catch her breath. She was so tight, it was pretty satisfying just being inside her. Backed up as he was, Superman could probably have come then, but he wasn't done with her yet. \n\n\"Come on, Superman.\" Stephanie grinned at him to hide her nervousness. \"It's going to take me years to get used to this cock. I want to feel a real fuck now, not then. You can do that and still be gentle, right? Come on, fuck me!\" ",
        "That invitation from the nymph on his cock was too much for him. Superman began to move her forcibly, bouncing her up and down on his shaft. She immediately screamed and grabbed him tighter, but she didn't try to resist or stop him. \n\nStephanie's pussy could just barely take his full length, so it wasn't easy to fuck her without reservation. After several minutes of experimentation, Superman figured out a better method. He couldn't pummel her cervix like with Barbara - that would break the poor girl. What he could do is use his strength to move her the perfect distance on his cock, thrusting fully inside her without battering her. \n\nThat took her over the edge soon, and Superman wasn't far behind. Not only did it feel incredible, it didn't hurt that he was using this taut young woman as a sleeve for his cock. And through the rapture on her face, he saw real joy there. Yes, he was definitely going to fuck her repeatedly. \n\nFor today, though, he pulled her hips hard against his and began spurting inside her, jet after jet of cum filling her up. She screamed her ecstasy and collapsed against him. He held her gently and realized that she was asleep when she began snoring. \n\n&nbsp; \n\nX X X \n\n&nbsp; \n\nStephanie woke up slowly, the world coming back to her in a haze of memories and fantasies. At first, she was sure that it had all been a wonderful dream. She had spent too long planning her investigation of city hall and her subconscious had gone overboard. Now she was about to wake up, don her Spoiler costume, and investigate for the first time. \n\nThen she moved her hips and the reality of it ached deliciously through her. \n\nHer entire body felt pleasantly wrung out. Superman had been just as overpowering sexually as he was physically. She'd been able to tell that he could have broken her, but he didn't want to do that, instead bringing her to orgasm after orgasm. \n\nAnd the sticky cum filling her and drying on her thighs was proof that it had been good for him, too. Stephanie smiled happily to herself. In this one field, at least, she could hang with beautiful, incredible women with Babs and Cass. \n\nWhen she rolled over and opened her eyes, Stephanie saw Cassandra standing in the doorway. Stephanie smiled lazily and her friend smiled back. \"How are you feeling?\" \n\n\"In-fucking-credible.\" Stephanie stretched slowly. \"How long have I been out? I feel like I slept for days.\" \n\n\"It hasn't even been ten minutes. When Superman heard about Black Mask, he decided to look through your files so we can advance into his territory next.\" \n\n\"Aww, no cuddling?\" \n\n\"Ask him to stay with you and he will.\" Cassandra came and sat down on the bed beside her. \"I'm glad you're with us now.\" \n\n\"Believe me, I'm even more glad right now.\" Stephanie lay peacefully for a while, only then remembering that she was completely nude. She realized that she didn't care, since she'd probably be nude with Cass a lot in the future, but it did get her thinking... \"Hey, can you help me find my old Robin costume? I think Superman would really enjoy fucking me in it.\" \n\nCass tilted her head slightly. \"Are you implying that Superman wants to fuck Robins? Because all the rest of them have been underage boys, so...\" \n\n\"What? No! I just think that outfit really made my tits pop, you know? I always felt sexy as fuck in it, but I never had anyone around who wouldn't just glower at me. Ooh, that's just the start. There are so many good ideas...\" \n\n\"There will be time for that later. For now: are you still going to go run off after Black Mask to try to prove yourself?\" \n\nMemories of those desires, so recent, came back to Stephanie like from the distant past. \"No, I... what was I thinking? That almost feels like a different person...\" \n\n\"Yes.\" Cass's smile broadened just a little. \"Yes, we get to choose who we are. You can finally join us as an equal member of the family.\" \n\n\"I'd like that too. Really, the sex is great, but feeling like I belong...\" Stephanie couldn't put it into words, but looking into Cass's dark eyes, she realized that she didn't need to. \n\nThey sat in companionable silence for a time until Superman floated past the room. He was wearing his costume again, which was disappointing in some ways, but it made Stephanie want him all over again. She waved cheerfully. \n\n\"Hey, Superman! I won't make you nervous by asking to go along when we take out Black Mask, but can you at least let me know once it's over?\" \n\n\"It's over.\" \n\nShe blinked. \"What?\" \n\n\"It seemed like you'd be asleep for a few minutes, so I flew across town and captured him and his men.\" \n\n\"Just like that, huh?\" \n\nSuperman shrugged. \"Well, your files had the locations of his bases, so that made it easy.\" \n\n\"Well, if that's resolved already, I have something else in mind...\" Stephanie tried to adopt a sexy pose, but just then her stomach rumbled. She snickered, then hopped out of bed. \"We have a kitchen here somewhere, right? Does anyone want waffles? Because I'm totally making waffles.\" \n\n*****\n\nOh, man, maybe this came off as a rant against DC. Well, I do think DC editorial deserves some ranting. In any case, hopefully you're all fine with it because the point is to set up a ton of sex. I'm not sure when, but I'm definitely going to write a Batgirl foursome before I'm done."
    ],
    "authorname": "SierraLeeAuthor",
    "tags": [
        "superman",
        "gotham",
        "harem",
        "stephanie brown",
        "batgirl",
        "spoiler",
        "robin",
        "cassandra cain",
        "barbara gordon",
        "batgirls"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/superman-fucks-gotham-ch-16"
}