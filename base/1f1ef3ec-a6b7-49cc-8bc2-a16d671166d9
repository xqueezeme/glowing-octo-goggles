{
    "title": "Lost Soul",
    "pages": [
        "Satan stood at the wooden door, a pitch black cloak concealing all that he was to the murky midnight air and surrounding marshy swamp. It was rare for him to leave his castle in the metropolis of Inferno without any sort of entourage, as is the life of the Devil King, leader of all demons; but this was not of normal circumstance. His hand went to knock, only lightly, for fear of breaking the whole decrepit home in half if he used even an ounce of power. \n\nAfter all these years, nothing has changed.\n\nThe door pulled open before his hand made contact, revealing an older devil, his horns large and imposing, arching backward and down before curling forward and framing his face much like his own. The being stood muscled, but unlike Satan, he had a litany of old battle scars and wrinkles seemed to flirt from every possible crevice with his hair reminding of heated coal, jet black with splatters of grey ash.\n\nSatan offered a crooked smile as he lowered his cloak from his horns, his fiery red hair flowing down to his shoulders as he did. \"Kalitas; it does me well to see you, Old Friend.\"\n\n\"Yes, Your Eminence. I wish it was under better circumstances.\" Kalitas stepped aside to allow Satan to enter.\n\n\"I came as swiftly as possible. An urgent message from you can never be ignored.\" Satan took a step inside the small home, a meager fire showcasing all the humbled living quarters. From a small, circular wooden table with two chairs, a bed that appeared it would break if Kalitas laid on it, to the bookshelf with several grimoire's lining them; it was the home of a devil with few wants or needs - an oddity for a being whose primal instincts are to desire and create desires in others.\n\n\"The final two humans I corrupted have succumbed to their fate and their souls have been harvested.\"\n\nSatan took a breath. Kalitas had been his greatest asset - from corrupting and harvesting souls, his unparalleled magical power, but most importantly, as the very mentor his Father brought in to personally teach and train him. Kalitas will not be easily replaced.\n\nSatan's smile widened as he placed a hand on Kalitas' shoulder. \"Congratulations, Old Friend. There has never been a more deserving devil of retirement. From being a war hero and going shoulder to shoulder with my Father in the Holy War battles against God and his angels to being the highest rated devil in terms of harvesting souls thereafter, you truly are a living legend amongst our ranks. Every devil and demon knows of the great Kalitas Khmer and wishes to achieve your accolades. Yes, you are a beacon of...\"\n\n\"Wwwaaaaaaahhh!\"\n\nSatan's eyes raised at the interruption. \"Kalitas; what was that?\"\n\nA baby boy crawled out from under the bed, a patch of brown hair adorning his scalp. It's head tilted, a pair of chocolate pupils fixed their sights briefly onto Satan in a curious manner before staring at Kalitas and crying again.\n\n\"The final two souls I collected, a Mother and a Father, both heavily addicted to drugs, overdosed. At the scene was this child, who I also thought was dead due to the parents having supplied him with drugs as well. I rapidly went to work in hopes of leaving before the angel, Azrael, came for the childs soul. Apparently, the child had breath still in his body and grabbed my cloak as I crossed the dimensional rift back here. I immediately healed him, for if he had parished while in hell, our treaty with God would have been nullified and Archangel Michael would have sent his battle angels to fetch the soul causing a war neither side could afford. Without death, we are still in compliance with the treaty, though I am thoroughly convinced if I try to take the child back, an ambush would await me on Earth.\" Kalitas bowed his head as he kneeled. \"I have failed you, Sire. I am prepared to take responsibility for my recklessness.\"\n\nSatan looked at Kalitas, knowing that any prospect of damaging the fragile treaty in place was a sentence of execution for any devil. But there was no provision for simply taking a human to hell. An intriguing loophole as no angel would have thought a devil would dare do so and one he will definitely remember. \"Raise your head, Old Friend. Your swift instincts have served you well.\" Satan moved to one of the chairs and sat down. His fingers went to his chin in contemplation as he stared at the human child. \"Now what to do with him?\"\n\n\"Sire,\" Kalitas stood. \"If not with my life, allow me to take responsibility for my transgression and care for the child.\"\n\n\"Here in hell?\" Satan was taken aback. He never would have asked that question if it were not for the sheer surprise of Kalitas' statement. Satan knew, perhaps more than anyone, how much Kalitas hated repeating himself. \n\nKalitas did not answer. \n\n\"Yes, very well then,\" Satan gave a small nod as he stood. \"Care for the child, teach it no less then you taught me. But, above all else, protect him well. A human in a devil's world would be easy prey. His death will spell war for us all and I fear our fellow devils, especially amongst the seven noble families, have fallen too comfortable in the competition of luxury to survive.\" \n\nKalitas watched as Satan left before another hungry cry came from the child. \"Yes, very well then; retirement will have to be delayed.\" He picked up the baby boy and cradled him in his arms. He used his index finger and tickled the childs stomach eliciting a playful snicker from both participants before turning over his hand and opening his palm just as a bottle appeared. The child quickly latched onto the offered nipple, \"Now what to call you?\"\n\nKalitas stared at the baby who was staring at him. He cracked a smirk which caused the baby to smile around the bottle and wave an arm at him. It warmed his heart. His facial expression fell to one of abject seriousness, his words became a life pact, \"I swear to you, I will train you in unarmed combat. I will teach you in academia.\" He then glanced to the grimoire filled bookshelf, \"And I swear I will teach you in the ways of magic.\" He paused briefly, almost surprising himself with his next words, \"And you will be loved, Barclay.\"\n\n*\n\nEighteen years later:\n\nKalitas stood fifteen paces away from a brash teenager. His adversary was toned muscle in his typical t shirt and jeans ensemble with his feathered brown hair blowing gently in the breeze and his brown eyes piercing his own, echoing a seriousness in what was soon to come. \n\nQuick as an eagle, Kalitas flung first his right arm forward followed by his left, both generating fireballs that hurled toward Barclay. Not content with just two, he continued the onslaught.\n\nBarclay waved his hands, each generating a shield of water. He spun to the left as the fireballs evaporated one by one and, with a slight nod of his head, sent a hurricane sized wind at Kalitas.\n\nThe slight angle change caught Kalitas off guard and he fell onto his back, and much to his surprise, roots from the ground wrapped tightly around his body.\n\nBarclay darted forward, taking three steps before leaping in the air. His predetermined landing zone was his right knee to the face of his opponent.\n\nThe eyes of Kalitas went wide before he flexed every muscle he had with enough force to break through the vines. At the last moment, he rolled to the right to dodge the attack. He outstretched both of his legs and spun; an attack while using his momentum to spring to his feet.\n\n\"My dear Barclay, I dare say that last attack would have broken my nose.\"\n\n\"Merely an offer at an improvement, Uncle,\" Barclay jumped back and away from the kick before stepping forward with a fire encrusted punch.\n\n\"Your sarcasm never ceases to amaze.\" \n\nKalitas pivoted left and pushed at Barclay's forearm with his left hand while his right fist sought the teens back. \"How disappointing? You are wide open.\"\n\n\"Now Uncle, you know you taught me better than that,\" Barclay smiled as a block of water manifested behind his back. The punch did connect, but as it had glided through the liquid barrier, its force dissolved to nothing. He spun around, connecting with a punch of his own, splitting Kalitas's lip. \"Now give up this charade; you know you cannot possibly defeat me.\"\n\n\"An arrogant, prideful statement spoken like a true devil,\" Kalitas took a step back to dodge a second punch that would have blown up his eye. He was one hundred percent on defense now, blocking and dodging a repeated barrage of fists and elbows as his feet kept giving ground. The constant pressure too much to even allow the use of his magic.\n\n\"Fact is not pride, Uncle. It is truth.\" Barclay smirked as he cast a water spell as he kept forcing Kalitas back. \"And I am not a devil.\"\n\nTwo shuffled steps in reverse and Kalitas knew he was in trouble. The solid ground gave way to a heavy, sinking mud as if the ground had suffered a month of flooding. In his consternation, another punch had landed, followed quickly by another before the solid earth around the small mud hole rose and encased him like a tomb. \n\n\"Well played.\" Kalitas took the slight reprieve to cast a wind spell, one that exploded the earthly coffin into dust. He took a step out of the mud to see Barclay smiling devilishly. \"What?\"\n\nThe explosion was great as it came in a circle around Kalitas. The power knocked him to the ground, unconscious. \n\nBarclay cringed, \"Oops; too much force.\"\n\n*\n\nKalitas grimaced from his headache as he sat up in his bed. His hand wiped at his face, \"That kid is insanely powerful. It has been nearly two years since I bested him in combat... Three if we do not count our 'no use of magic' fights.\"\n\n\"Uncle; you are finally awake,\" Barclay ventured through the front door with a smile and his fishing gear, a few fish caught in a net. \"Let me get you some water. He set down all he carried and pulled out a cup before filling it with water and handing it to his mentor. \"Allow me to apologize; I was testing your chemistry lesson and must have pulled too much hydrogen out of the water before I ignited it with a fire spell.\"\n\n\"It was a well devised strategy,\" Kalitas sipped at the water. \"You must be careful, however. If your intent was not to kill, you did a poor job. I am only alive because I have healing magic in my arsenal.\"\n\n\"Yes, Uncle,\" Barclay nodded. \"I will try to be more cognizant of my actions.\"\n\nKalitas gave a soft smile, \"I have trained you well. Even I am amazed that your body accepted the infusion of magic spell, let alone that it would develop with you. I feel fortunate to have even discovered that spell, and now that I know its might; its secret will perish with me. I know you will respect its power; and I also know others will not.\"\n\n\"You have my word, Uncle.\"\n\n\"Very well.\" Kalitas took another drink followed by a content breath. His body was healing. \"Time is fleeting. Have you made a decision on your future?\"\n\n\"With great debate, I have.\"\n\n\"Excellent,\" Kalitas nodded. \"Oxford, Harvard, Korea Advanced Institute of Science & Technology?\"\n\n\"I choose,\" Barclay then smiled, \"Brimstone University.\"\n\n\"What?\" Kalitas vehemently coughed in exasperation.\n\nBarclay chuckled.\n\n\"Barclay,\" Kalitas shook his head, his tone serious. \"You are a human; you belong in the human world.\"\n\n\"That is where you are wrong, Uncle,\" Barclay stared at his mentor. \"You insist that because I am human, I belong on earth, but this is my home. It is all I have ever known... and since I am not a devil, I cannot open the dimensional rift. I could never come back. You are my only family, and though you told me I should call you Uncle, you are my Dad. I love you.\"\n\n\"I love you too, Barclay,\" Kalitas engulfed the teen in a fierce hug before releasing him. \"But no human has ever lived in hell, and if you were to be found out, it would spell disaster. I wish you would reconsider.\"\n\n\"I will be fine. I have a permanent spell to give the appearance of horns and if anybody else has issue, I will just have to pull more hydrogen from water.\"\n\n\"Hell help us if that is required,\" Kalitas rolled his eyes at Barclay's attempt at humor. \"It is not only that, but Brimstone University also makes it mandatory to attend magical classes, and battle other students in which you are over qualified. Most devils can only harness one element and perhaps dabble into another spell, but you command all, as well as the healing magic I have instilled in you.\"\n\n\"But I am also at a disadvantage,\" Barclay interrupted. \"Though it depends on their power, devil's can naturally conjure items, whilst I cannot.\"\n\n\"There is also the issue of class,\" Kalitas rebuked. \"Devil's are an elite, arrogant lot; you will be mocked for not being a noble, and separated into a class for peasants. Your station will be predetermined.\"\n\n\"If separated, then I will have a haven to shun those who wish to do me harm.\"\n\n\"But what will you study?\" Kalitas tilted his head, \"Certainly you do not wish to major in soul harvesting?\"\n\n\"Are you not the one who always states that humans need to take responsibility? Sure devil's offer the means, but we only harvest souls if they deserve it and you always say that a fair payment in respect to what was offered is mandated. A soul is not the only obligatory compensation.\" Barclay shook his head, \"But no, not soul harvesting. At first, I wanted to go into medicine, especially with healing magic on my side, but now I was thinking of majoring in diplomacy.\"\n\nKalitas' forehead crinkled in consternation.\n\n\"Think of it, Uncle,\" Barclay grinned broadly. \"What better person is there to negotiate between angels and devils over the rights of humans than a human?\"\n\n\"It appears your mind is determined,\" Kalitas chuckled. \"Besides, what kind of devil would I be if I kept you from your desires?\"\n\nBarclay laughed.\n\n\"Since your decision lies with hell, remember this,\" Kalitas continued. \"Devils have desires and act on those desires without a second thought. They are also attracted to power, and you are powerful. Males will wish to fight you at every turn to prove they are your better. As for females, take heed. Ensure both parties have the same goal beforehand or your heart may be the victim... But that is not to say they do not believe in love; love from a devil is meaningful and profound as they mate for life, but lust always comes first.\"\n\nBarclay laughed again, \"Is this the devil's version of the sex talk?\"\n\n\"Laugh now,\" Kalitas stared down Barclay. \"And the answer is no. In hell, lust is an indulgence; there is no need for a sex talk, except that it better be mutual as the penalty is death. I am simply giving a warning to keep you from being hurt, as is my rightful duty as your guardian.\"\n\nBarclay nodded, \"I will be careful.\"\n\n\"Very well,\" Kalitas sighed. \"Enjoy college.\"\n\n*\n\nBarclay stood in awe. Looking down Sulfur Hills Boulevard; dormitory houses stood on both sides, sixteen in all. The male and female dorm rooms for the members of the seven noble families, Envy, Gluttony, Greed, Lust, Pride, Sloth, and Wrath, were made of gold and adorned with fine statues, fountains, and gardens, as well as a seperate servants quarters behind them, whilst the driveways were littered with fancy Italian cars and limousines - estates fit for kings and queens. The last two paled in comparison with the most basic of dormitories under the guise that the non royalty students should feel lucky they even have a roof over their heads. \n\nIt was also easy to spy who was who. Every member of royalty was dressed as if it were a competition, who could wear the newest fashions and expensive trends, while the commoners wore typical teenage attire.\n\nRegardless, Barclay was used to the simple life and had zero problems with the meager accommodations. He was just happy to have his own room that already had a bed, dresser, and a nightstand as well as a desk that he can place the laptop Kalitas had given to him as a present. With so few items, mainly clothes, it was a quick unpacking, allowing him plenty of time to arrive at orientation. \n\n*\n\n\"Look at that loser commoner freshman over there.\"\n\n\"My, someone thinks highly of himself to head to orientation an hour early.\"\n\nThe first devil's voice got louder, \"Yeah, you piece of shit... You're nothing, you hear? The only thing you might be good for is carrying my bags!\"\n\nBarclay ignored the taunts.\n\n*\n\nBarclay sat in the well worn red seat, his back touching the wall. \n\nEven the auditorium was segregated. On the main floor were the royals, with the seniors closest to the stage, while the upper level was reserved for the less than hierarchy, with the freshman in the back. \n\n\"Hey, are these seats taken?\"\n\nBarclay glanced to the voice to see a pair of devils. A male with black hair done in an unkempt tussled way with an average build and a female with curly, shoulder length auburn hair and a lithe frame who seemed to be doing her best to hide behind her friend. Both their hands showed a ruggedness from last minute magical training.\n\n\"By all means,\" Barclay gestured to the two open seats to his left.\n\n\"Thanks,\" the male slid into the seat next to Barclay allowing the female to be on the aisle.\n\n\"No thanks needed,\" Barclay allowed them to get situated before adding with a slightly cracked smile, \"That will be fifty in cash... each.\"\n\nBoth paused before the male noticed Barclay's expression, \"Funny.\" He shook his head. \"The name's Brand and this is Maren. We're both from Prosh, a small farming village in Sloth's territory. I take it from your joke you're from Greed's territory?\"\n\nBarclay thought for a moment. None of the seven noble families actually claimed the swampy marsh area in which he lived. No one ever wanted it. \"Actually, it was in Wrath's area.\" It was the closest, anyways. \"It's a pleasure to meet you both. \"I understand you specialize in fire?\"\n\n\"Yeah,\" Brand nodded. \"Though it's more of a work in progress.\"\n\n\"And, Maren, your specialty is water?\"\n\nMaren jumped in her chair at being brought into the conversation. She glanced briefly at Barclay, but with his eyes fixated on her, she looked down. \"Yeah, water.\"\n\n\"Aw, Maren,\" Brand put his arm around her shoulder and shook her briefly. \"I thought you wanted to work on that?\"\n\n\"That was me working on that,\" Meren shrugged with a small grin. Her voice no longer meek as she spoke with her friend. \n\n\"Sorry, man, she's been shy since forever. It took me three years before she even spoke with me, and that's because I pried like a crowbar,\" Brand shook his head before he turned toward Barclay. \"Say, how did you know what type of magic we used?\"\n\nBarclay gave a sly smile, \"You have burn marks on your hands and hers are covered in wrinkles as if they were held in water for long periods of time.\"\n\nMaren looked at her hands and then looked back at Barclay, impressed at his observation.\n\n\"Hey, that's a great trick,\" Brand laughed. \"Let me see your hands so I can guess what your magic is.\"\n\nBarclay held out his hand. It was smooth as he had learned long ago how to protect himself from himself.\n\n\"Hmm,\" Brand stared for any clue. \"What do you think, Maren?\"\n\n\"I'm not sure.\" Maren then looked to the stage to see Dean Aber, a tall, imposing devil in a suit. \"Why do they put the freshman in the back? You'd think they would put the people who haven't been here before in a place to be able to hear the speakers.\"\n\nBarclay pulled his hand back with a chuckle, \"Yes, keep all the new students in the dark so all the nobles have a reason to get mad at us.\" \n\nBoth Brand and Maren laughed.\n\n\"Ain't that the truth,\" Brand smacked at his leg.\n\n\"Still,\" Maren shook her head, \"This is the most prestigious University, and I feel fortunate I got accepted at all.\"\n\n\"Especially coming from Prosh,\" Brand finalized the conversation as the Dean began to speak.\n\n*\n\n\"Now then, the next three speakers, and all from the noble family of Pride, will be the elected Student Council President, Elio Dempsey,\" - a hulking devil, his black hair gelled to perfection with muscles that threatened to destroy his shirt, stood, \"Resident Advisor and final arbiter in student disputes, last years top student in academia, Tempest Bellerose,\" - a long, strawberry blonde devil with everything styled to perfection and a body that oozed of sophisticated sex appeal, stood, \"and, of course, last years top student, the first ever champion of the Warpath Tournament that was not a senior, Wystan Beaufort,\" - a toned muscled devil with a crop top of red hair and a smug look strewn across his face, stood. ",
        "\"Wystan's legit. He was absolutely amazing in last years finals,\" Brand whispered. \n\nMaren then added, \"I heard after he won they offered him his dream position of colonel in the army, but he choose to come back to school to be the first ever two time champion in Warpath.\" \n\n\"First to the microphone, President of the Student Council, Elio Dempsey,\" Dean Aber gave a small amount of applause as he stepped away from the microphone. \n\n* \n\n\"Thank Satan that's over,\" Maren sighed as the final speaker concluded his speech.\n\n\"Whoo,\" Brand stood, stretching his body as he did. \"That was long and boring. I can't believe how long... Oh there's Coach Starosta,\" he pointed to the lower level. I know soccer tryouts aren't until spring, but I'm going to go introduce myself. Wish me luck.\"\n\nBarclay raised his eyebrows, \"Soccer?\"\n\n\"You don't know what soccer is?\" Maren would have been less intoned but the question surprised her out of her shyness.\n\n\"No.\" Barclay stood effortlessly, \"Never heard of it.\"\n\nMaren snickered as she stood as well. \"It's a team sport in which you kick a ball into a net.\"\n\nBarclay nodded. \"Well, it was a pleasure meeting you, Maren. Have a good rest of your day.\"\n\n\"You too.\" Maren smiled. \"I'm glad our first friend here was you. Even Brand was worried about people's reactions to us being from such a small village.\"\n\nBarclay paused... Friends? A grin pierced his lips at the newfound revelation. He never had friends before. \"Yes, friends. I look forward to the three of us hanging out soon.\" That's what friends say and do; right?\n\n\"Absolutely,\" Maren's smile went wider. \"Brand will be thrilled.\"\n\n*\n\nThe late summer heat was pounding the city of Inferno, with every step Barclay took breaking up a heat shimmer mirage on the concrete as he wandered aimlessly through the metropolis. Kalitas had taken him a few times to the city when visiting Satan, but this was his first time alone and it all seemed so new. With no destination planned, he sputtered through the town as if he were a tourist, witnessing the sights and window shopping just the same.\n\nAs day turned into early evening, Barclay found his way back onto campus, walking down Sulfur Hills Boulevard. There appeared to be a party at the Envy Estates, with the music echoing down the block.\n\n\"Say you're sorry, stupid Bitch!\"\n\nThe male blonde haired devil that could have doubled for a cologne ad hounded over Maren.\n\n\"I did... I did say I'm sorry. I'll say it again, I'm sorry.\" There was a sense of fright curdling from Maren's lips.\n\n\"Well, sorry ain't good enough!\"\n\n\"Is there a problem?\" Barclay called out as he approached from across the street.\n\n\"Yeah, there's a big problem, this Cunt got in my way as I was going to the party. She doesn't understand that when you bump into Vulcan Fury of the house of Wrath, there are consequences.\" The devil finally turned toward Barclay. \"And now we have a problem if you don't mind your own fucking business and get lost.\"\n\n\"I will leave you to your party then,\" Barclay gave a slight bow of his head.\n\n\"At least one of these newbies gets it,\" Vulcan turned his head toward Maren.\n\n\"Come on Maren, we have wasted enough of Vulcan's time,\" Barclay put his arm around her shoulder and turned her so he would be between Maren and Vulcan as he nudged her down the street.\n\n\"Hey,\" Vulcan fumed. \"That's not what I meant. Come back here!\"\n\n\"Oh?\" Barclay turned around, leaving Maren behind him. \"You asked us to leave and now you wish us to stay?\"\n\n\"I meant for you to fucking leave...\"\n\n\"All right, I will leave, again,\" Barclay cut him off and turned around. \"Let's get to our dormitories, Maren.\"\n\n\"You're seriously pissing off the wrong guy, Asshole.\" Vulcan sneered sinisterly. \"Be prepared to get your ass kicked.\"\n\nBarclay turned back around, still putting Maren behind him. \"So you want me to stay again?\" Barclay raised his eyebrows in contemplation. \"I am glad you are attending school because you seem to have a troublesome time coming to a solitary conclusion.\"\n\nVulcan growled in anger as he raised his palms. He could feel the flames start to...\n\nBarclay summoned an air spell centered around Vulcan's hands. It created a bubble not allowing oxygen in the vicinity.\n\n\"What the?\" Vulcan tried with all his might, but his flames didn't heed his call. \"I don't understand?\"\n\n\"Ah, performance issues... Just cannot get it up, I see,\" Barclay shook his head. \"I hear there is a blue pill that will help with your situation.\"\n\n\"What's going on here?\" \n\nTempest had finished her duties as Resident Advisor, ensuring the party was safe - safe to a devil's standards, anyway - and was making her way back to the Pride dormitory; as if any member of the Noble house of Pride would be caught at an Envy party. The only point of the party is to have everyone be envious of Envy and the Pride household is too proud for any of that nonsense. However, upon exiting that personal hell, she encountered a new dillemma that required her immediate attention.\n\nAt the intervention, Barclay discontinued his spell and two fiery flames rose from Vulcan's hands.\n\n\"Ha, ha!\" Vulcan screamed excitedly. \"Now you're in deep shit.\"\n\n\"Vulcan Fury, put those flames out this instant,\" Tempest put her hands on her hips. \"You know very well that the use of magic is forbidden amongst students unless it is a formal duel... and for you, a senior to attack two freshman is deplorable.\"\n\n\"Let us go,\" Barclay whispered into Maren's ear. The two quickly exited the scene as Vulcan tried to plead his case.\n\n*\n\n\"I can see you're going to be very popular around here,\" Maren laughed as she stood at the door to her dormitory. She turned to face Barclay, all smiles.\n\n\"My Uncle says that any confrontation you walk away from, is a successful one. That is all I accomplished.\"\n\n\"But in the most insulting way possible.\"\n\n\"He insulted me in how he treated you.\"\n\nMaren was taken aback at the seriousness of Barclay's statement, an ember of an inferno beginning to develop in her loins. She giggled again, hoping her charms were enough to entice as her lustful desire was starting to rage - overwhelm even - and it was pushing her shyness to the background. Unfortunately, she didn't have much practice in flirtation and it felt awkward. \"We're lucky he had trouble casting his spell; which is your signature element, anyway?\"\n\n\"I don't have one.\"\n\n\"Oh, I've heard of devils without magic, but never actually met one.\" Maren then batted her eyes, \"Still, how devilish of you to save me without magic.\"\n\nBarclay gave a soft smile, \"Good night then.\" \n\nMaren had enough time to formulate the word \"Wait.\" Her hand reached out but it was too late as Barclay was already back to the sidewalk. She took a deep breath, her devilish desire of lust was nearly crippling, her body on overdrive. Her last thought as she entered the door was \"I need a cold shower.\"\n\n*\n\n\"You there... Freshman,\" Tempest called out.\n\nBarclay made the turn onto the walkway to his dormitory when he heard the voice call for him. He turned around, looking Tempest straight in the eye, \"Yes?\"\n\nThe look caught Tempest by surprise. It was the first time since perhaps middle school that a male she just met didn't spend even a moment ogling her body. Her breath caught slightly before offering a cough to compose herself. \"I'm sorry, but Vulcan won't let it go and has formerly challenged you to a duel. As Resident Advisor, I have to acknowledge the request. I tried to talk him out of it but he wouldn't listen.\"\n\n\"You better get your ass over here and take your ass kicking like a devil!\" Vulcan screamed as he approached Barclay.\n\nTempest put her hand to her forehead in irritation. \"I'm really sorry about this.\"\n\nBarclay looked over Tempest's shoulder to see the rage Vulcan was displaying, \"It seems your job is quite challenging.\"\n\nTempest was touched at the thought of that statement and gave a faint smile, \"You have no idea.\"\n\n\"Since it obviously does not matter whether I accept or not, what are the rules?\"\n\n\"You can't use lethal force, you can't start casting a spell before I start the duel, and it lasts until one party is unable to continue or concedes.\"\n\n\"That is it, huh?\" Barclay paused before chuckling, \"I concede.\"\n\nTempest openly giggled, \"You may be the first devil that I've ever met that didn't rush into a duel to save their pride. But regardless, you can't concede until after the duel begins.\"\n\n\"Very well,\" Barclay walked toward Vulcan with Tempest at his side, stopping fifteen paces away. \"Start the duel.\"\n\nVulcan got his hands ready to cast his signature fire spell, second guessing it for the briefest of moments at its futility earlier before standing firm. \"This time I'm going to squash you like a bug to the windshield.\"\n\nTempest held her hand between the two combatants, \"Are both participants ready?\"\n\n\"Yeah,\" Vulcan sneered. \"You're dead meat, Maggot.\"\n\nBarclay stared down his foe, \"Of course.\"\n\nTempest dropped her hand, \"Begin.\"\n\n\"I concede,\" Barclay immediately called out.\n\n\"Winner,\" Tempest couldn't contain her laughter. \"Vulcan Fury.\"\n\n\"What?\" Vulcan stood dumbfounded. \n\n\"Congratulations,\" Barclay turned around to head back to his dormitory. \n\nTempest put speed in her step to catch up to Barclay. \"You know, you're pretty entertaining.\"\n\n\"Actually, I would say Vulcan is the entertaining one.\" Barclay sighed, \"Most buffoon's are.\"\n\nTempest snickered again, \"Might I get your name?\"\n\n\"My apologies. My name is Barclay Khmer, Ms. Bellerose.\"\n\n\"So formal?\" Tempest grinned, \"And you already knew my name? But please, just call me Tempest.\"\n\n\"I was at orientation, yes; great speech, by the way, and after dealing with that idiot, you deserve formalities.\"\n\nVulcan shook his hands in a furious rage. \"That Chicken Shit, piece of Fucking Garbage.\" He stared at Barclay's back, which exponentially exploded his anger. He darted forward, his arms firing two firebolts toward his adversary. \"You will fight me!\"\n\nDuring his conversation with Tempest, Barclay had his head tilted slightly toward her. It allowed for him to show interest in the discussion, but more importantly, it allowed him to keep Vulcan in his peripheral vision. \"Look out,\" Barclay tackled Tempest to the ground to avoid the firebolt.\n\n\"Tempest, would you say Vulcan was in complete violation of the rules and that the force he exhibited could be construed as a lethal attack and therefore, henceforth, I am acting in self defense?\"\n\n\"Yes, and one I intend to correct right now. Hey, where are you going?\" Tempest sat up as Barclay stood. \"No freshman has ever beaten a senior. I'll take care of...\"\n\nBarclay manifested a water barrier just as another wave of firebolts came forth. It was wider than what he would use with his Uncle, as Vulcan was far more imprecise with his attacks and his dormitory was behind him. \n\n\"So you're a water type?\" Vulcan laughed sinisterly. \"How unfortunate for you as my fire will evaporate your defense!\"\n\nThe firebolts came fast and furious and Barclay knew his air trick wouldn't work as the fire in Vulcan's palms was already out of control. \"So be it.\" Barclay jumped in the air, using a gust of wind to propel him toward his adversary. \n\n\"Ha, ha! You just lost your advantage,\" Vulcan aimed and fired.\n\nBarclay conjured another wind spell, this time using the force of air to redirect the attack past him and down, the firebolts disintegrating into his water barrier.\n\n\"What the?\" Vulcan stood confused as Barclay landed his fist into his cheek, knocking him down to one knee.\n\nBarclay was not done. The exposed leg was a prime target as he slammed down with his left foot just above Vulcan's knee, breaking it with a snap while following that attack with a spin to the right, raising his elbow just in time to dislocate his jaw.\n\nVulcan was a pile of heap on the cement.\n\nBarclay walked over to Tempest, extending his hand, \"Did I hurt you?\"\n\n\"What just... How did...\"\n\n\"Are you hurt?\" Barclay interrupted.\n\nTempest took a moments breath before putting her hand into his. \"I'm fine, but...\"\n\n\"I am glad to hear it. I thought my weight would be too much to bear as we landed on the concrete.\" Barclay pulled Tempest up gently. \"Now I have to take care of this idiot.\" He walked over to Vulcan, kneeled, and began to cast a healing spell.\n\n\"Wait, you can't kill...\" Tempest stopped mid sentence as she stood behind Barclay. \"Your healing him?\"\n\n\"I would not want this waste of space on my conscious.\"\n\n\"How are you able to do that? As a freshman, I mean? You haven't taken a single medical class? It took me all four years here to specialize in what you're doing and you haven't had a single magic class and you can not only heal, but use multiple elements. How?\"\n\n\"Practice.\" Barclay stood, \"There, he is stablized, but he is going to need to rest. However, if I carry him to his house, that would most likely provoke many more fights. He will be fine right here. Would you like me to walk you to your home, Tempest?\"\n\n\"Actually, Pride Estate is right there,\" Tempest pointed directly behind her. \n\n\"Very well,\" Barclay gave a soft smile before turning around, \"Good night then.\" \n\n\"Barclay?\"\n\n\"Yes?\" Barclay paused, looking over his shoulder as he did.\n\nTempest tilted her head, her eyebrows narrowed in thought, \"If you are able to fight as you do; why did you concede?\"\n\nBarclay started walking forward, \"Only a fool goes to battle without reason. Good night, Tempest.\"\n\nTempest stood in awe. She had never met a devil like him in her life. There was no ego. There was no attempt at manipulation. He didn't even eye her lustfully. It was as if he was immune to his devil desires. Was it pride? It didn't appear to be as his state of dress was a far cry from vanity, even for a commoner - and he had conceded the duel. With nobles, it was easy to classify them as they tended to exude their family name more than any other sin, but with commoners, it was far more difficult to quantify. Tempest smiled as she watched Barclay leave, a twinge of regret in her soul at not accepting the walk to her home, short as it may be.\n\n*\n\nMaren stared at herself in the mirror. She had tried to sleep, but never before had her desire for lust been so great. Usually a cold shower and simply sleeping it off was the perfect antidote, but this time it was more than she could bear. She immediately started feeling better just enacting a plan and now, she stood staring at herself clad in a red bra and panty set that was far from exotic, but she wasn't powerful enough to conjure something like lingerie, yet. Her hair was styled, and then tussled and with her lipstick matching her outfit. \"Well, here goes nothing.\" She threw on a t shirt and jeans, truly wishing she had been more vain when selecting clothing in life and set forth to the men's dormitory.\n\nMaren arrived to find three other devils looking at the myriad of names that corresponded with room numbers, each one on a mission to quell their desires without being rejected. She bit her lip as it became her turn, and found the name she was seeking. \n\nBarclay Khmer: Room 523\n\nMaren stepped into the elevator a nervous wreck. \"Figures he's on the top floor.\" Not that it truly mattered, it just made her patience run that much thinner. With each ding of the elevator, her foot began tapping, slow at first and then faster and faster before finally she arrived to the fifth floor. She hussled down the hallway, finally arriving at room 513. Her hand formed a fist and quickly knocked lest she flee.\n\n\"Hello? Oh wow, yes come on in!\"\n\nMaren stood in confusion. She looked past the devil that answered the door, \"Is Barclay... here?\"\n\n\"Should have known you weren't here for me; we've never met.\" The devil then sighed, \"Barclay's room is 523. I only know that because he's got a weird...\"\n\nMaren didn't wait for him to finish. She quickly arrived at room 523. Her hand formed a fist, and she paused. \"This is it... if I have the right room.\" Her hand put a firm, solitary knock on the wood.\n\n\"Maren?\" Barclay rubbed his eyes. \"What are you doing here?\"\n\nMaren smiled flirtatiously... or at least she hoped so. He looked good standing in only his green boxer shorts. \"I couldn't sleep, so I was wondering...\" What is the best way to proposition him?\n\n\"Why don't you come in?\" Barclay moved to the side to allow the entry.\n\n'That was easy.' Maren sat on the bed with a smile... 'Or not.' Her smile fell when Barclay moved his office chair from his desk to in front of her before sitting in it.\n\n\"Someone else bother you? It cannot possibly be that Vulcan idiot again.\"\n\n\"No,\" Maren's voice became timid. \"That's not it.\" She shook her head briefly before her eyes locked onto Barclay's. \"I... I... I...\" With each stutter, her head moved closer before finally the sentence \"I need you,\" escaped her breath in one syllable as her lips attached to his.\n\nBarclay's eyes lit up at the unexpectedness of the kiss before kissing back. They kept their attachment for a few seconds before mutually pulling away. Maren chewing on her lower lip in fear of rejection, while Barclay sat wide eyed.\n\n\"Wow,\" Barclay chuckled, lightening the mood. \"I assume your lustful devil desires are in control?\"\n\nMaren nodded.\n\n\"For me?\"\n\nMaren nodded again.\n\n'This is what Uncle was talking about... It is not love, so the question is do I want my first time to be with Maren? Or more appropriately, am I ready for my first time?' As an eighteen year old male, the answer was undoubtedly yes. \"Just a warning, Maren, I do not have any experience in this area.\"\n\n\"Neither do I.\" Maren smiled, \"Let's find out together.\" She stood in a rush and took off her shirt and pants. She reached back and unfastened her bra. \"I wonder why people put so much effort into their underwear before sex when they are just going to take it off?\"\n\nBarclay laughed as he stood. \"Interesting observation.\" He slid down his boxer shorts and paused... Maren was naked. Her skin seemed to radiate a smoothness, a patch of auburn hair hid her sex, but most alluring were the teens breasts. They looked soft and pliable, two small orbs of wonder topped with a pair nipples pointing directly at him as if to say \"hello.\" He couldn't help but admire.\n\nMaren's desires became an avalanche at seeing Barclay in the nude. She felt so wanton and brazen. She may not have had experience in these matters, but her body was saying to stick his Tab A into her Slot B and to do it as soon as possible. She grabbed Barclay's hands and pulled him toward her as she fell back onto the bed. Her hand reached between them and took hold of her prize, drawing it to her entrance.\n\n\"Whoa,\" Barclay exclaimed in surprise at the force of Maren's actions. Gone was the shyness he had known and in replace was someone debase in a carnal desire. Lust scorched in her eyes as he was pulled closer to her.\n\n\"Fuck me Barclay,\" Maren's voice became crude and husky.\n\nBarclay shuffled forward, the tip of his erection barely cracking Maren's canal. The feeling caused him to shiver in delight, pausing for the briefest of moments before pressing further. Inch by inch, more of his member dissolved into Maren's sheath. The velvety smoothness clutching at every slight movement, the vast wetness coating all his pores causing a sensation nothing short of euphoria.\n\n\"I said fuck me, Barclay,\" Maren thrust her midsection in the air, forcing Barclay to the hilt. \"Yes!\" She bucked again, and then again. Lust possessed her every move and was being gratified with sweet bliss.\n\nBarclay tried to time his movements with Maren. It just wasn't plausible. He pulled back and jerked forward once by the time she did so thrice. It didn't matter. Pleasure was all that existed... And he was close to exploding.\n\nMaren's head shook from side to side, her hair splaying in all directions as the heat of passion was taking her to the extreme. She came oh so hard, her body clutching at the invader as if it were its meaning of life, her body quaking in glorious rebirth. ",
        "It took a moment for Maren to focus, quite difficult as Barclay was still rocking against her body. Her lust was finally dissipating, allowing her conscious to finally be in control. \n\n\"I'm not on anything, Barclay. Make sure you pull out.\" Maren's eyes pleaded the same.\n\nThe words barely registered through the fog of rapture Barclay was experiencing, but at the last possible moment, as he let out a gutteral sound, he pulled out of Maren's quim. It was the culmination of ecstasy and he couldn't stop it as he sprayed spurt after spurt of his seed onto her stomach.\n\nMaren breathed a sigh of relief. She made it through her first lust desire without facing possible consequences. She then thought about the act itself and she couldn't help her smile. She was going to have to get on the pill. 'I wonder with who it will be with next?'\n\nBarclay couldn't stand anymore. He fell onto the bed next to Maren, exhausted. It was truly a wild ride and one he couldn't wait to experience again. It was an insane high. All those years of masturbating and nothing could compare. He couldn't help the grin that stretched far and wide on his face. \"Wow.\"\n\nMaren faced Barclay, \"You're telling me.\" She leaned over and lightly pecked at his lips - that's just courtesy, right? I've got to go. My first class is eight in the morning.\"\n\nBarclay rolled to his right and pulled several pieces of tissue from the box on the nightstand and handed it to Maren. \"I understand, but allow me to ask, why me for your first time?\"\n\nMaren took hold of the offered tissues and cleaned herself up. \"I don't know, really. It's just that when you protected me from that noble, my body kind of responded.\" She stood and clasped her bra.\n\n\"With how close you seem, I just assumed you would have had sex with Brand by now.\"\n\n\"Brand?\" Maren stopped after putting on her pants. The mentioning of his name squandered all movement. Her mouth moved but nothing came out.\n\nBarclay sat up, \"You do like him, do you not?\"\n\nMaren looked away.\n\n\"Then why did you come to my room?\"\n\nMaren took a breath as she grabbed her shirt, \"Devils mate for life; if he said no after I acknowledged my feelings; where would that leave me?\"\n\n\"Makes sense,\" Barclay gave a slight nod. \"But if you are always afraid, you will never find out.\"\n\nMaren put on her shirt, \"But...\"\n\n\"Allow me to put it this way... which will be worse; knowing the truth or having him believe you are not interested and he finds someone else?\"\n\nMaren's head jerked torward Barclay. \"I... I need to go.\" In a flash she left the room and ran to the elevator.\n\nBarclay collapsed onto his mattress. He wished Maren well, especially after all that she had done for him. A smile percolated his lips as he put his hands behind his head. Sex was no longer a myth.\n\n*\n\nBarclay stared out the window, bored. So far, his classes had been less than informative as every subject, from math to science to history, was all the same: education he had already received from his Uncle.\n\n\"Good afternoon, students, and welcome to your first magic class ever.\"\n\nBarclay stifled his laugh at the older, balding, overweight, with a pair of wireframed glasses on the tip of his nose that Professor Zephyr Lehrer was sporting, before looking around at the giddiness of his fellow students. \n\n\"Now, I know you all have dabbled at manipulating your element of choice, so what I want to see is where everyone is as far as progress. We'll start with the fire users. Please make the largest fireball you can.\"\n\nBarclay's mouth seemed to drop, \"But Sir, is that not dangerous inside a classroom?\"\n\n\"Not at all,\" Professor Lehrer chuckled. \"And raise your hand next time.\"\n\nBarclay immediately raised his hand. \n\n\"Yes; what is it now?\"\n\n\"Just to be clear, you want us to make the largest fireball we can in this limited space?\"\n\nProfessor Lehrer crossed his arms, \"Yes. Why is that so difficult? Every other fire user is already doing it.\"\n\nBarclay glanced around to note that a quarter of the class had small fireballs in their palms, and the strain on their faces showed even that was a chore.\n\nBarclay raised his hand.\n\n\"Young man, what's your name?\"\n\n\"Barclay.\"\n\n\"Well, Barclay, I require you to stop interrupting my class so I can continue the lesson. If you can't make a fireball, then we'll start at the basics with you.\"\n\nThe students erupted in laughter.\n\n\"I can make a fireball.\"\n\n\"Great, fantastic; show me.\" Professor Lehrer's eyes stared down the teen.\n\nBarclay looked around, concerned. \"Can I at least create it outside the window?\"\n\n\"My, aren't you cocky.\" Professor Lehrer rolled his eyes, \"If that will finally get you to shut up, sure.\"\n\nBarclay walked to the window, and after a few clicks, opened it. Being on the third floor, a nice breeze filtered through. He glanced over his shoulder to his Professor, \"Due to limitations...\"\n\n\"Let me guess,\" Professor Lehrer mocked. \"Now the wind will blow out your flame?\"\n\nBarclay started, unfazed, \"Due to limitations in space, this will not be the biggest fireball I can conjure.\" He then proceeded to cast a spell.\n\nProfessor Lehrer chuckled, \"That's an air spell, Einstein.\"\n\n\"Yes, Captain Obvious,\" Barclay rolled his eyes. \"I have to quell the wind so the fire does not blow back into the building which would force me to use a water spell to extinguish the flames and you to pay for the damage on your porous salary.\"\n\nThe Professor went to respond only to be shocked into silence at the largest fireball he had ever witnessed. Its circumference expanded from the building to quad, where if it had gone further, it would be in downtown Inferno, and from barely above an inch from the ground to its peak tickling the clouds.\n\n\"Is that large enough, Professor Lehrer?\"\n\nThe Professor stood in mouth agape awe. The other students seemed to rise in their seats and filtered around Barclay in amazement. \n\n\"Professor?\" Barclay glanced over his shoulder. \"Professor!\"\n\nProfessor Lehrer shook his head, \"Uh, yeah, that will do.\"\n\nBarclay nullified the spell and attempted to sit back at his desk. It was a chore simply moving the ten feet as the sea of classmates hounded him.\n\n\"How did you do that?\"\n\n\"Where did you learn that?\"\n\n\"Can you show me how?\"\n\nThe questions were fast and furious and they only stopped when Professor Lehrer smacked a ruler against his desk, \"Class!\" The sound and accompanying echo finally calmed the crowd. \"To your seats, please. I still have to evaluate the rest of you.\" As the students did as instructed, he added, \"Barclay, I require a word with you in my office after class.\"\n\n\"Certainly, Sir.\"\n\n\"Now everyone who is proficient in water magic, I would like you to put as much water as you can inside these buckets.\" As Professor Lehrer finished, plastic buckets appeared on everyone's desk who didn't complete the fire exercise. \n\nBarclay raised his hand with a smile.\n\n\"Remember, this isn't a pass or fail; it's just to see where everyone is at.\" Professor Lehrer focused on another student who was struggling creating a few drops. \"After class, Barclay.\"\n\nAfter the water exercise, Professor Leher conjured potted soil.\n\nBarclay immediately raised his hand. \n\n\"Now for this exercise, everyone except Barclay who is proficient in earth magic; I want you to mold the soil into something... anything. Do your best.\"\n\nThe class began their activity as the door swung open. An out of breath Dean Aber huffed twice.\n\n\"Ah, Dean Aber,\" Professor Lehrer nodded at the intruder. \"I have a feeling I know why you are here.\"\n\nDean Aber straightened his appearance, \"There are a flood of reports from eye witnesses of a gargantuan fireball that originated in this classroom.\"\n\n\"Yes, and it is handled,\" Professor soothed and then glanced at the clock. \"It would also be in your best interest to be in my office in twenty minutes.\"\n\nDean Aber eyed his Professor carefully. \"Twenty minutes.\"\n\n*\n\n\"So what on hell happened?\" Dean Aber not so subtly announced as he stepped into Professor Lehrer's office. \"The reports I have state a fireball nearly broached the city.\"\n\nProfessor Lehrer pointed at Barclay, \"This young man is quite proficient.\"\n\n\"A student did that?\" Dean Aber exclaimed in shock before staring down Barclay. \"Do you know what kind of damage you could have caused? The winds alone could have destroyed not only the University, but the metropolis as well.\"\n\n\"He had thought of that,\" Professor Lehrer had a beaming smile, just waiting for his boss to come to grips with the truth. \"He cast an air spell prior to prevent such a happening and had a water spell on hand just in case.\"\n\n\"No matter the precautions, it was reckless. It doesn't matter if you had an air spell in use and a water spell on standby, a fireball that large...\" Dean Aber trailed off as he finally understood. One student had done this; and he not only had the ability to command the largest fireball to have ever been recorded, but to use two other elements as well. It was unheard of.\n\nProfessor Lehrer looked to Barclay, \"Show the Dean a spell from each element, and please, make them minor.\"\n\nInstantly, Barclay levitated the desk, generated a flame, filled a glass on the desk with water, and lastly, lifted soil out of a potted plant, shaped it into a hand, and used it to straighten the Dean's tie.\n\nDean Aber rubbed his chin and shook his head, thoroughly impressed. \"That's enough.\"\n\nBarclay obliged.\n\n\"As you can see, Barclay is quite advanced.\" Professor Lehrer shrugged.\n\n\"Barclay, is it?\" \n\nBarclay looked up to the Dean, \"Yes Sir?\"\n\n\"What's your last name?\"\n\n\"That's the best part,\" Professor Lehrer chuckled. \"Tell him, Barclay.\"\n\n\"It's Khmer, Sir.\"\n\nThe wheels in Dean Aber's head started to churn, \"Khmer?\"\n\n\"That's right! Barclay is not only related to the great Kalitas Khmer, he was taught by the greatest devil that has ever lived.\" \n\nProfessor Lehrer stood, \"I resolve that Barclay be admitted into the nobles senior class to continue his training. Only there, would he might learn something.\"\n\n\"I think there might be consequences to that suggestion,\" Dean Aber cringed. \"The nobles will have issues with this.\"\n\nProfessor Lehrer then applied pressure to Dean Aber's devil family name, \"We could always give Barclay a refund on his tuition if we cannot properly teach him.\"\n\n\"All right, starting tomorrow, Barclay, you will attend the magic class with the senior nobles in the Coliseum at the same time slot as you would have attended your current class. Be prepared, this is an intense course, complete with televised matches that determine the top student in the school, otherwise known as the Warpath Tournament. This normally is offered only to third and fourth years, but since you will be a member of the class, we cannot exclude you, either.\"\n\n\"Understood, Sir,\" Barclay nodded.\n\nProfessor Lehrer smiled, his pride showing. He found this youth. It was his recommendations that set him on the path; and he will reap the popularity and rewards through television, radio, and internet interviews that will propel him to become Dean. Not to mention, that since the class Barclay will enter is Professor Meara Keen's, that means the lovely but brutish devil would owe him. Yes; he could see it all laid bare before him.\n\n*\n\n\"That took forever.\"\n\nBarclay had exited the Professor's office to find a stunning, raven haired devil leaning against the door on the opposite wall. Her body was shaped like an hour glass with seemingly extra wide proportions in the breast and ass areas. Her outfit was a black micro mini dress stretched to the extreme which made the fabric see through. Her make up of ruby red lipstick and matching nail polish was a hard contrast to the smoky look surrounding her midnight pupils. Everything about the devil screamed sex and her voice oozed a thirsty hunger. He stared in bewildered awe at the sight.\n\n\"I take it you like what you see?\"\n\nBarclay shook his head to compose himself. \"You are from class, right?\"\n\n\"The name's Gali, and yes.\" \n\nBarclay offered a smile, \"It is interesting how different someone looks while sitting down on the other side of a room.\"\n\n\"Just means you're too far away,\" Gali then lifted her leg, putting her foot flat against the wall and then turned it to the right. Her dress rode higher, exposing her glistening pussy for Barclay's enticement. \"I have an itch that needs to be scratched; come closer.\"\n\nAs Barclay took two steps, Gali opened the door she was leaning against, revealing a janitor's closet and stepped inside. The weighted door didn't even have time to shut before Barclay hurriedly entered.\n\nGali wasted no time in attacking Barclay's pants, undoing the button and zipper with a practiced effort before pulling them down. She turned around and bent at the waist, giving Barclay a truly fantastic view.\n\nBarclay admired briefly before his hand went to Gali's ass in a soft caress. \"Nice.\"\n\nGali craned her head back, \"Don't make me wait.\"\n\nBarclay understood and lined his cock to her excessively lubricated pussy. With a small thrust, he slid completely into Gali.\n\n\"Yes, Barclay,\" Gali pushed back as much as she could to encourage the implement as deep as it could go. \"Fuck me.\"\n\nBarclay slid back and thrust again.\n\n\"Harder.\"\n\nBarclay did so once again, but as he bottomed out, he pushed harder into Gali's canal.\n\n\"Faster, Barclay,\" Gali pleaded. \"Lay into me.\"\n\nBarclay tried again, this time moving his hips faster as well as bottoming out hard against her ass.\n\n\"Yes, keep going!\"\n\nBarclay rocked again, and then again, each time eliciting a hiss of delight from his partner. He soon became unsteady, and braced his hands on Gali's firm and luscious ass. He pounded ferociously, sawing into her depths with reckless abandon.\n\nGali reached her breaking point and came in a flurry, her body offering spasm after spasm of unbridled bliss. Her arms tightened against the wall as she craned her head back once again, \"You almost done back there?\"\n\nBarclay looked at Gali as he kept pushing into her pussy. He didn't know what to say. \"Almost.\"\n\nGali sighed, \"Hurry up.\"\n\nBarclay concentrated on the feeling, ignoring Gali's words. It felt good. Really good. The soft silk massaging his erection, the ripple of liquid from her own cum manifested a wonder of warm pleasure. He rocked again, this time a strain echoing on his face.\n\n\"About time,\" Gali shook her head.\n\n\"Do you need me... to pull out,\" Barclay struggled with that sentence as he was fighting a losing battle with his pleasure.\n\n\"Fuck no. Only an idiot of a Mother would send their daughter to college without birth control.\" Gali then flexed her internal muscles, milking Barclay for all he was worth.\n\nIt worked. Barclay's head fell back as the building pressure released from the now broken dam. It seemed endless as Gali kept up her tightening and releasing with each spurt into her abyss.\n\nOnce Barclay was finished, he braced himself against the wall, his legs a shaky disaster.\n\n\"You're weird, Barclay.\" Gali slid her dress down. \"Most devil's enjoy their desire, sure, but are quick to fulfill it. You take your time. It doesn't make sense.\"\n\nBarclay knew the truth about not being a devil was never going to be the right statement in any situation, so he fell onto another truth as he smiled. \"I was appreciating that someone of your beauty wanted to be with me.\"\n\n\"Beauty? No; this is pure slutty.\"\n\nBarclay tilted his head as he buttoned up his pants, \"I was trying not to offend.\"\n\n\"I don't carry a House of Lust name, so when my lustful desires arise, and, as it is my primary desire it does often, I need to be able to entice and fast... And after the power you displayed in class? I have a feeling we're going to get to know this closet a lot this year.\"\n\n\"I am not so sure,\" Barclay chuckled. \"I was just transfered to a senior class.\"\n\n\"Thank Satan,\" Gali sighed as she opened the door. \"You may be powerful, but you sure take your sweet ass time. It would have been a hell of a battle between my lust versus my patience every day.\"\n\n*\n\nBarclay was lost in thought as he meandered toward his dormitory. He was enjoying sex, but will he always be thought down upon afterward because, as a human, it takes him longer to be fulfilled? It was a quandry that had no answer. He couldn't change being a human and the girls couldn't change being devils. \n\n\"There you are!\" Brand ran up from behind Barclay, putting his arm around his shoulder with a laugh. \"I've been looking everywhere for you.\"\n\n\"Brand,\" Barclay offered a chuckle of his own. \"How was your first day of classes?\"\n\n\"All right considering all I could think about was that you laid into my girl.\"\n\nBarclay stopped as Brand turned and faced him.\n\n\"Hey, Barclay,\" Maren finally caught up from when Brand bolted from her side to catch up with Barclay.\n\n\"Maren,\" Barclay gulped.\n\n\"Listen,\" Brand put his arm around Maren. \"I'm not mad. Maren told me everything, so I'm actually grateful. I don't know if either of us would have admitted our feelings if you hadn't said what you said, but,\" his eyes turned from jovial to serious, \"if we're to remain friends, then my pride as a devil won't let me rest unless we duel. I know I shouldn't care with the way devil's are; maybe because we got together only five minutes after what you two did, so it's your call. Friends with a duel, or we just walk away.\"\n\n\"Is that all?\" Barclay sighed in relief. \"I understand how you feel. We can duel.\"\n\nBrand let go of Maren and got into a fighting stance, \"All right, um... how do we start this?\"\n\n\"First,\" Barclay pointed to the Pride Estate. \"We need to get Tempest, the Resident Advisor, to sanction and judge. Her results will make this official. I will be right back.\"\n\n\"Oh,\" Brand shrugged. \"I've never actually dueled someone and since Meren said you don't have a signature element, I thought I'd just hit you with a light spell and we'd be done with it.\"\n\n\"No worries, Brand,\" Barclay called over his shoulder. \"This will be better.\"\n\n\"If you say so,\" Brand called back.\n\nBarclay stared at the doorbell in awe. It was a facial recognition scanner trimmed in the most vibrant violet with a slightly darker shade for the button on the bottom which Barclay lightly pressed.\n\nAn older devil wearing a tuxedo opened the door, \"May I help you?\"\n\n\"Yes, I was hoping Miss Tempest Bellerose was present to sanction a duel between myself and a fellow student.\"\n\n\"Barclay!\" Tempest ran half way down the stairs, quite impressively considering her short, pink Chanel dress and matching heels, before remembering her station and gliding elegantly the remainder of the way. \"What brings you here?\" There was a sense of giddiness in her voice.\n\n\"I have been challenged to another duel.\"\n\n\"Really?\" Tempest giggled as she followed Barclay down the walkway. \"You keep this up, I may have to start charging you for my time.\"\n\n\"Neither of these were of my design,\" Barclay chuckled. \n\nMy design... Temptest smiled at the words. She loved how eloquent Barclay spoke. \"I have a feeling that nothing will ever be your fault.\"\n\n\"You said it, I did not,\" Barclay gestured to Brand, \"Tempest, I would like you to meet Brand and Maren. Friends, this is Tempest, our Resident Advisor and official for the match between myself and Brand.\"\n\n\"Nice to meet you,\" Maren smiled.\n\n\"Yes,\" Brand echoed. \"Nice to meet you.\"\n\nTempest looked to Barclay, \"This is much more cordial than a typical duel.\"\n\n\"Sometimes even friends need to settle disagreements now and then.\" Barclay took his position, \"I am ready.\"\n\n\"That's no reason not to be civil about it,\" Brand took his position. \"Me too.\"\n\n\"All right,\" Tempest raised her hand before dropping it. \"Begin!\"\n\n\"I concede,\" Barclay immediately announced.\n\nBrand was starting to cast a spell when he heard the declaration. He let the spell dissipate and laughed as he walked toward his friend. \"I guess that is better than what I had planned,\" He jumped in the air and landed on Barclay's back. \"C'mon buddy, Maren and I want to take you out to dinner; our treat.\" He then started to run to his dormitory, \"Just let me get my wallet!\"",
        "Maren faced Barclay with a peculiar smile, \"Just so you know, I have no regrets about our time together... Neither does Brand. So please, I don't want you to, either. It was fun.\"\n\nBarclay nodded in acceptance, \"I am truly happy the two of you realized your love for one another.\"\n\n\"Thank you,\" Maren turned and started walking toward the men's dormitory, not wanting to be apart from Brand any longer than needed.\n\n\"Are you ever going to win a duel?\" Tempest laughed. \"Your record is a dismal zero and two.\"\n\n\"My self esteem is not predicated on winning a pointless duel. I fight based on necessity alone; for instance, last night. I gave Vulcan the win but he still wanted to put your life in danger and that was something I could not allow.\"\n\nTempest shivered at the care Barclay displayed for her. She was why he fought, at least last night, though she'll skip that part when she thinks about it. Imagining Barclay fighting just for her was far better. \n\n\"Here I come,\" Brand shouted. \"Just pick something cheap, okay!\"\n\n\"Will do, Brand,\" Barclay called back.\n\n\"Enjoy your dinner,\" Tempest smiled.\n\n\"Thank you again for your time, Tempest,\" Barclay gave an appreciative nod of his head. \"Truly have a marvelous day.\"\n\n*\n\nTempest couldn't hold in her smile as she walked toward the mansion. There was just something about Barclay. He was powerful, yet reserved; funny, yet eloquent. He was truly unique. \n\n\"You're not succumbing to lust; are you Tempest?\" Elio came from Pride's male dormitory and intercepted Tempest on the pathway. \"I would hate to see such a prominent member of the House of Pride debase themselves with a petty desire. Unlike Wystan's desire for Wrath, which can be harnessed in his fighting, the only place lust has in our lives, and frankly expected, is after you have found your mate. Do not tarnish yourself. I see the way you look at that commoner.\"\n\n\"Goodness, no,\" Tempest waved Elio off with a laugh. \"Barclay is just,\" how do I describe him? \"Unlike any devil I have ever met and I enjoy talking with him.\"\n\nElio stood firm, \"As the next head of the family of Pride, I just wanted to be sure you weren't entertaining any lustful thoughts. That boy is beneath your dignity and we have our reputation to uphold. Might I remind you that you are already on thin ground for your misstep of asking to advance into the medical field? Luckily, Lady Pretorius convinced you that your prominent air magic has a more useful purpose for the clan; though, I am unsure why you continued to take those classes; it was forgiven.\" \n\n\"No, it's not like that,\" Tempest begged off. Was it?\n\n\"I apologize then for thinking that way,\" Elio turned to go back to the men's dormitory. \"But understand, I had to ask.\"\n\n*\n\nBarclay rounded another corner. It was becoming frustrating and the simple solution would be to just blow a path to the Coliseum field, but he doubted the Dean would appreciate his approach at his own ineptitude. Still, the inner workings of the architecture was profoundly confusing, and he was late. \n\nBarclay found a ramp that lead to the stadium seating, and, without other options, simply hopped the wall. The majority of the class was sparring, with several other students off to the side enjoying beverages. \n\n\"You're late,\" Professor Meara Keen didn't take her eyes off her class as Barclay approached. Her long brown hair was unbothersome as it waved in front of her face, her disciplned blue eyes not missing a single strike or call to magic. As a former member of the military, her toned body stood at perfect attention, her stance seemed impenetrable. \n\n\"Yes, my apologies,\" Barclay sighed. \"I got lost in the underbelly of the Coliseum.\"\n\n\"Next time, just enter directly onto the field,\" Professor Keen pointed to the right where the large circular stadium had a gate that was open, which offered direct access to the field. \"Now, I'm not thrilled that I have to babysit a freshman, especially when our first match in the Warpath Tournament is only a week away...\" She paused, changing her thought process, \"You do know this is a competition class, right?\"\n\n\"I do.\"\n\n\"And that students fight against each other to earn their rankings, which raises that devil's standing, which, in turn, affords the victor a guarantee at landing their dream job? It's not only individually, either, but if our class wins overall, we get a week long party to celebrate, and I get a hefty bonus? As a matter of pride, we've finished second three of the last four years with the off year being third. Did I mention these matches were televised nationally over the next four months as we whittle down the bracket?\"\n\nBarclay shrugged, \"I do now.\" \n\nProfessor Keen hung her head at the response. It was her first acknowledgment at what she deemed as a hopeless situation. \"I know you came highly recommended by Dean Aber and Professor Lehrer, but don't get comfortable. Just get out there and show me you won't get killed,\" she finished by slapping Barclay's back, nudging him forward.\n\nVulcan paused as he was about to counter his friend, Bayu's, wind attack... as if he really needed to dodge. Bayu was a year younger in the house of Wrath and knew he was better off letting Vulcan win.\n\n\"What the fuck is he doing here?\"\n\nBayu stopped as well, and turned to where Vulcan was staring. \"Who's that?\"\n\n\"That stupid freshman commoner idiot that lost to me in a duel the other day,\" Vulcan chuckled. \"Hey, Asshole, did you come back for another ass kicking?\" His cockiness only existed to show off to Bayu, because he knew the school wouldn't let a freshman into this class.\n\nTempest turned from the water cooler to see Barclay and unconsciously smiled. Her eyes then briefly glanced at Vulcan in awe. She couldn't believe his audacity. Sure, Vulcan won the duel, but only because Barclay conceded. It was painfully obvious, as in a broken leg and dislocated jaw obvious, that Vulcan would have been outmatched, as he was just two minutes later. Still, her eyes fell back to Barclay, simply happy to see him.\n\n\"Careful,\" Elios leaned in to Tempest. \"You have that look of lust again.\"\n\n\"Oh stop,\" Tempest didn't take her eyes off Barclay. \"It's nothing, really.\"\n\n\"I need a volunteer to fight the newbie!\" Professor Keen called out.\n\nVulcan immediately dropped to one knee to tie his shoe that was not untied.\n\nNo one stepped forward.\n\nTempest didn't want to fight Barclay, but as seconds ticked by, she also wanted to end his humiliation of waiting. She went to take a half a step forward. \n\n\"I'll do it,\" Beaumont Afolayan, an average devil in every way, but known for always playing the odds, stepped forward. \"If you put some coin behind it.\"\n\nProfessor Keen rolled her eyes. \"Anyone else?\"\n\n\"I'll take that wager,\" Tempest raised her hand. 'Why did I just say that? Is it personal feelings for Barclay? No, he beat Vulcan, he can beat Beaumont.' She went up to Professor Keen and handed her several bills, \"A hundred dollars is all I have on me.\"\n\n\"I suppose a hundred will have to do,\" Beaumont shook his head as he handed over his money to Professor Keen. \"Since this match won't last five minutes.\"\n\nTempest held in a giggle, 'Yes, Barclay should win in five minutes against that House of Greed scum... unless he concedes?' She then held in her cringe.\n\n\"Combatants, ready?\" Professor Keen stood between the two as they took their positions.\n\n\"Let's get this over with,\" Beaumont smiled. \"I have money to spend.\"\n\n\"Of course,\" Barclay gave a small nod.\n\nAs soon as Professor Keen lowered her hand, Beaumont cast an earth spell to disrupt the ground in which Barclay was standing. He smiled knowing his foe would soon collapse in the rubble and then he'd bury him.\"\n\nBarclay quickly responded with an earth spell of his own with two pillars now fortified under his feet. As the rest of the ground gave way, he then cast an air spell directly behind Beaumont, the severe gust of wind pushing his adversary, flailing arms and all, straight towards him. \n\nBarclay's right arm became encrusted with flame as he punched Beaumont with a sweeping punch across his jaw and followed that with a hard, water encrusted left punch which dampered the fire from the previous attack and left his opponent unconscious. He cast another earth spell to replace the ground before kneeling to administer first aid.\n\nTempest took the money from a seemingly paralyzed Professor Keen, who was mimicking the rest of the class with her awe, before she walked to Barclay. \"You're healing him?\"\n\n\"Stabalizing, really.\" Barclay held his hand over Beaumont's chest. \"I did not do much to cause any physical damage to him, unlike the other night when you were in harm's way.\"\n\n\"Here, you deserve this.\" Tempest smiled as she handed the money to Barclay, \"For you.\"\n\n\"Keep it,\" Barclay stood.\n\n\"But...\"\n\nBarclay smiled, \"It was your bet.\"\n\nTempest giggled slightly as she put the money in her purse, \"After I made the bet, I got nervous thinking you were going to concede.\"\n\n\"These duels have purpose. If we do not train, we will never get better. It is only fighting without purpose that should be avoided.\"\n\nTempest nodded in agreement before being pushed to the side by Professor Keen along with most of the other students in the class. \"Four elements?\" The teacher excitedly exasperated as she rushed Barclay. \"You can command four elements?\"\n\n\"Yes,\" Barclay responded casually.\n\n\"Ha - ha!\" Professor Keen laughed as she nearly jumped on the teen before composing herself. \"All right, Barclay, now I want to see your level of control of each.\"\n\nFor the rest of class, Barclay showed his prowess in each element, and then all elements at once. It was a jaw dropping exhibition.\n\nProfessor Keen couldn't help her smile as the bell rang signaling the end of class. \"With you, our class may actually win Warpath this year; and you may very well become the top student as a freshman. She put a hand on Barclay's shoulder, \"After three to four years, every other devil knows the power levels and elements of the others, but as a freshman, you'll be at a disadvantage without that knowledge, especially since your display here will undoubtedly be gossiped about to all your opponents. I think we should meet up for strategy sessions.\"\n\nBarclay glanced to all the students leaving. Professor Keen was absolutely correct; every word from every lip of all his fellow classmates was something about him. \"Knowledge breeds wise decisions; when and where?\"\n\n\"An hour after class, each day in my office. We have less than a week before the first match, so I recommend as soon as possible, even today.\"\n\n\"Let's get started.\"\n\n*\n\nBarclay stood in the center of the arena, the crowd of sixty thousand devils muted around him. Mere moments ago, the audience was raucous in jubilation for the opening match of the Warpath Tournament despite it starring a junior nobleman with well known deficiencies in magic from the Lust house, Seb Laska, and a freshman commoner. It wasn't expected to be a good match, but it should be fun to heckle both participants at their combined ineptitudes. What transpired, however, defied logic.\n\nIt was a flawless victory... and in record fashion. The shortest duel in the history of the Warpath Tournament... and Barclay didn't even use magic. His opponent fumbled at the start and he realized it was simply faster to move his body. It was over in half a heartbeat with a single strike to the nobleman's temple, rendering him unconscious.\n\nIt started with a single clap and a whistle and then grew exponentially. The spectators erupted at the witnessing of history, Barclay turning the condemnation of his birth rite into admiration, at least for this match.\n\nTempest had started running toward Barclay before controlling herself into a normal walk, \"Congra...\"\n\nProfessor Keen ran past Tempest, stopping her student in her tracks. \n\n\"Yes!\" Professor Keen jubilantly slapped Barclay on the back, \"I swear, if we devils didn't mate for life, I'd fuck you right now in the middle of the Coliseum. I have a feeling my husband is going to enjoy the time after your matches in the upcoming months.\"\n\nTempest watched on as Barclay got mobbed by their fellow classmates. She got the distinct impression someone was eyeing her, and with a swift swivel of her head, found Elios's stare. He raised his eyebrows in warning. \n\nWas it wrong that she wanted to give Barclay congratulatory praise for the amazing feat he had just performed? She recoiled back under the gaze of the future clan leader, but not without taking one more glance over her shoulder to Barclay, subconsciously offering a yearning smile he did not see. She faced to where Elios was, \"It's nothing; I swear,\" she mouthed.\n\n*\n\n\"Since when did you become such a bad ass,\" Brand smiled as he jumped onto Barclay's back in the cafeteria. \"You sure had me fooled with that no signature element nonsense. Three wins in a row!\"\n\n\"Well, since I command all four equally, I do not really have a signature element,\" Barclay shrugged. \"And as for the first part, my Uncle has had me in training ever since I could stand.\"\n\nMaren set her tray down, \"You were amazing Barclay.\"\n\n\"Well, if I was in the tournament, I'm sure I could take down a few,\" Brand laughed. \n\n\"They do not judge on soccer techniques,\" Barclay chuckled. \n\n\"Harsh man,\" Brand's tone was of depression, but he nodded in agreement to the statement. \"All right then, I got until my junior year to get up to snuff for the Warpath Tournament with my best friend as my teacher to do it.\"\n\n\"You want me to teach you?\" Barclay's eyebrows raised in surprise. 'Can I teach?'\n\nBrand put his arm around Barclay's shoulder, \"You've been training since you were three, certainly you could show me something.\"\n\nBarclay thought for a moment... \"Sure.\"\n\n\"Really?\" Brand's smile went wide. \"Awesome!\"\n\nMaren's voice was far more meek, \"Do you mind if I train with you, as well?\"\n\n\"Of course you can train with us, Maren. \n\nSomeone has got to keep Brand from slacking off.\" Barclay grinned, \"We will start with cardio. Meet me in front of the dorms at four thirty in the morning.\"\n\n\"Did you just say four thirty? In the morning? As in A.M.?\" Brand's eyes went wide. \n\n\"We'll be there,\" Maren took a drink of her soda.\n\nBrand was nearly pale, \"What did I get myself into?\"\n\n*\n\nTempest pictured exactly what she wanted in her mind. Being highly skilled in magic, conjuring was easy... but transforming took precision. Long black hair to replace her strawberry blonde, brown eyes instead of hazel, a slightly paler complexion, and a complete wardrobe change - gone are the name brand clothes, replaced by a hoodie and sweatpants and to finish the look, a pair of glasses. The goal: if she was seen, she would be forgotten just as quickly. \n\nTempest snuck out of the Pride Estate and made her way to the male freshman dormitory. At eleven-thirty at night, she hoped to be quick and uninterrupted. \n\n'Why is it bothering me so much that I haven't been able to congratulate Barclay? Match after match he has been so dominant, using not just different elements, but also different variations of those elements, that he is immediately hounded by everyone thereafter. It seems the only time I can see him now is during his interviews on television... and they have it so wrong every time the reporter says, \"You did well, but next time...\" Barclay is going to the finals. I just know it.' Tempest shook her head, 'But why am I going through all this trouble at such a late hour on a Tuesday when I have a class at eight in the morning? Why am I compelled to talk to him?' She found his room number on the board and pressed the up arrow on the elevator. \n\nA loud ding announced Tempest's arrival to the fifth floor.\n\n\"What the...\"\n\nTempest looked in wonder, stopping herself from being the Student Advisor she truly was in her incognito ensemble. She shied her head down, using her long hair as a curtain as she passed girl after girl that was in line down the hallway... And was that Professor Cordelia Calloway?\n\nRoom 523.\n\nThe line started at Barclay's room.\n\nTempest walked passed the room, unsure to what could possibly be transpiring, though the muffled groans and creaking of the bed did offer some insight. But that didn't explain the line. Instead, she knocked on the neighboring door, hoping for answers in a more discrete setting.\n\n\"Well, hello there,\" The brown haired devil with a toned frame answered the door with a suave demeanor. \"Do come in; Strom here knows exactly why you're here.\"\n\n'Great, a devil so arrogant he refers to himself in the third person,' Tempest rolled her eyes as she stepped into the room. \"Actually, I was hoping you could tell me what's going on. What's with the line of girls in the hallway?\"\n\n\"Can't you hear what's going on?\" The devil shook his head, \"The guy who lives next to me likes to take his time, so the girls line up to quench their fire and he eventually gets off after five or six of them.\" Strom stepped right up to Tempest with a lecherous smile, \"But don't you worry, Strom knows how to truly take care of you.\" He leaned in for a kiss.\n\n\"Ew,\" Tempest took a step back. \"That's not why I'm here.\"\n\n\"Sure it is.\" Strom took another step forward, his hands grasping Tempest by the waist. \"Strom knows you can't resist Strom.\"\n\nTempest slapped Strom, \"I said no.\" She took another step back to create some distance, but her legs bumped up against the bed, causing her to sit on it.\n\n\"Bitch,\" Strom eyed Tempest evilly. \"You come to Strom's room just to insult Strom and then you hit Strom before offering yourself to Strom on Strom's bed?\" He pushed Tempest fully on the bed, holding her by both wrists, \"Strom knows how to warm up those cold feet of yours. You'll be thanking Strom in about three minutes.\"\n\n\"Get off of me!\" Tempest went to summon an air spell as the door burst open.\n\nBarclay didn't hesitate. He grabbed Strom by the back of his neck and pulled the teen savagely off of Tempest. \"The lady said no.\" He punched Strom repeatedly, \"Allow me to try to get through to that amoeba sized brain of yours.\" He spun him around, forcefully releasing him into the dresser. He turned to Tempest, extending his hand, \"Are you all right, Miss?\"\n\nTempest stared in awe. 'Barclay had done it again... for me again... The acts were so simple and pure. No other devil I have ever met has thought so selflessly.'\n\n\"Miss?\"\n\nTempest took a breath to collect herself. She offered a flirtatious grin, \"Still so formal with me? Old habits do die hard.\"\n\nBarclay eyed the woman suspiciously, before catching her eyes. His head tilted slighty, \"I apologize, I was not trying to offend.\"\n\nTempest giggled as she accepted his hand, allowing Barclay to pull her to her feet. \"You know, you're formalities do lose some of their luster when you're naked.\" She took a quick glance downward, subconsciously licking her lips.\n\nBarclay ran a hand through his hair, 'no point in trying to cover up now.' \"Well, I am afraid I would have been too late if I took the time to get dressed.\" He turned to the door where the line of girls had congregated to watch the fight. \"We are all done for tonight, ladies.\"\n\nA unified disappointed groan erupted from the hallway. \n\nProfessor Calloway pointed at Barclay, \"I'll be seeing you in my office after class tomorrow, Barclay. We definitely need to discuss what didn't happen this evening.\"\n\nBarclay sighed, \"Yes, Ma'am.\" He then glanced over his shoulder, \"If you give me a moment to get dressed, I will walk you home.\"\n\nTempest couldn't help her smile, \"Thank you.\" She waited a moment for the doorway to clear out before she headed out of the room herself, giving a satisfying kick to Strom's side as she passed. \n\nBarclay got dressed as quickly as possible; jeans, shirt, and shoes, and rejoined Tempest in the hallway. \"Are you sure you are all right?\"",
        "Tempest nodded, \"Honestly, I was only a second away from taking care of the situation myself. Last year I finished fifth among juniors in the Warpath Tournament.\"\n\n\"Glad to hear,\" Barclay hit the down button for the elevator. \"Do you wish to file a grievance? I would be more than happy to serve as a witness.\"\n\n\"No; I think he learned his lesson.\" Tempest could only imagine what the Pride family's reaction would be if they found out she visited a freshman commoner boys room. Forget Elio's disapproval, no, this would have far reaching consequences to the entire Bellerose family name. \n\n\"I am not so sure with Strom,\" Barclay shook his head. \"I really did not have the time or the crayons to truly spell it out for him.\"\n\n\"No, I guess not,\" Tempest snickered. \"You seem to be popular? Even Professor Calloway?\"\n\n\"Well, I will not lie and say I do not like having sex,\" Barclay shrugged, \"But that is more the girls trying to deal with their lust for me. If I were to chase after someone, I think I would prefer someone who I would be able to connect with on a more personal level... Something more permanent than a \"hey, I'm horny, let's do it,\" which is the exact phrase Adamina had propositioned me.\" Barclay stopped in front of the Pride Estate, \"Well, good night, Tempest.\"\n\n\"Thank you, again, for the escort. Good night.\" Tempest took two steps before her eyes lit up, \"Wait, how did you know it was me?\" She turned to find Barclay was still watching her, ensuring she got inside okay.\n\nBarclay's lips twitched slightly into a knowing grin. \"You can change a lot of things about oneself, but never what is behind one's eyes.\"\n\nTempest's face turned to one of abject horror. She took the steps separating them swiftly, \"Let me tell you why I was in his room.\"\n\n\"It is none of my business.\"\n\n\"No, I need you to know I wasn't there for him.\" Tempest's head shied down, ashamed at being caught in another man's room, although she didn't understand why... or maybe she did but knew it could never be. Still, she didn't want Barclay to see her as anything less than what she was. \"I actually came over to see you... I wanted to congratulate you on your victories; but then I saw the line of girls at your door, and I had to ask someone why.\"\n\n\"I believe you.\" Barclay felt a twinge of disappointment... He had truly thought Tempest was different from the other girls who also wanted to \"congratulate\" him.\n\nTempest's head lifted with a relieved smile.\n\nBarclay continued, \"The why is because I got tired of being bombarded at school. This arrangement allows for the girls to quench their lust in an organized manner while still allowing me to focus on school.\" 'And not deal with the complaints of taking too long...' \"I take it the disguise was to protect your pride so you would not be recognized in the commoner dormitory?\"\n\n\"Yes,\" Tempest sighed as she undid all her transformations. \n\nBarclay smiled affectionately, \"Ah, so much more beautiful than that facade.\"\n\nTempest blushed, \"But it's not just that; if I were to be seen by any of my fellow Pride family nobles, I'd be in serious trouble.\"\n\n\"How I do not envy nobility,\" Barclay shook his head. \"For being apart of a race that is all about facilitating desires only to be prevented from those desires because you are nobility is nothing more than being a slave to your family. The lack of acceptance in royals, even of their own kin, astounds me.\"\n\nTempest was taken aback... The words rang true and contradicted all she was taught. \"Still, it's not all bad.\" She glanced over her shoulder to the mansion. \"We do live in amazing comfort.\"\n\nBarclay nodded, \"That you do.\"\n\nTempest felt a little better at Barclay's acceptance of her existence; as if it gave her life meaning. \n\n\"But I would rather have happiness.\"\n\nTempest went to speak but couldn't find the right words. \n\n\"Good night, Tempest,\" Barclay smiled before he took a step away. He glanced over his shoulder, \"Try not to let your lust guide you into anymore precarious situations.\"\n\nTempest stared at Barclay in awe as he walked away. The last words finally digesting in her brain... \"I wasn't being lustful!\" It was too late as he was gone. She turned toward the mansion, \"Great, that couldn't have gone any worse.\" She shook her head, truly upset at herself. She was just about to lean her face to the door scanner when a light flashed in the upstairs window in the Pride male mansion. It was Elio, and he looked remarkably angry as he looked down at her. She sighed as she opened the door, \"I guess it did get worse.\"\n\n*\n\nBarclay was grateful the lesson with Professor Keen ended late. He was becoming notorious, not that he minded the lust induced encounters now that the girl's disappointment in his stamina has been nullified by having them line up; however, the male students seemed to be a far greater concern. Many a devil have formally declared duels, enough to where Barclay's record was a school worst zero and sixty three, but for some, that never seemed good enough that he would just concede. Whether it be pride or envy or wrath, many left those duels unfulfilled with anger in their hearts.\n\nSo the late evening, cool night air provided a quiet to enjoy the stroll to his dormitory. It was a welcome sanctuary from all the hassles of being hounded. \n\nBarclay smiled into the night, enjoying the peace. \"This is nice.\"\n\n\"Is it?\" A male voice responded from behind.\n\nBarclay turned to face the baby faced, black haired teen. He recognized him immediately from his first match in the tournament. \"It is, Mr. Laska.\" \n\n\"For us,\" Seb smiled sinisterly as six other devils surrounded Barclay. \"For you, well, I suppose if you enjoy getting your ass kicked.\" He then pointed at Barclay, \"I owe you for the humiliation you caused me.\"\n\n\"You should not blame others for your ineptitude.\" Barclay eyed the six teens circling him. \"Did you really recruit six freshmen for this?\"\n\n\"You're awfully cocky for someone who is outnumbered seven to one.\" \n\n\"Oh, you intend to fight as well?\" Barclay pretended to think, \"Well, I suppose I will finally get to have that duel with you since the last time you fell asleep after six seconds.\"\n\nSeb huffed, \"Get him!\"\n\n\"Oh, you have got to be kidding me,\" Barclay rolled his eyes before side stepping to the left to avoid a water spell - which hit the firecaster behind him as he was preparing a firebolt.\n\nAn earth user attempted to cause a sinkhole under Barclay's feet as a wind user also shot a wave of air in his direction. \n\nBarclay jumped, slinging his backpack off his shoulder and placing it under his feet, riding the wind spell as if he was surfing. \"Wow, this is great; you would be awesome at a carnival!\"\n\nAs the spell dissipated, Barclay stepped off his backpack and to the ground.\n\n\"Screw the long range attacks, you idiots!\" Seb ordered. \"Just beat his ass!\"\n\nThe six freshmen moved in closer.\n\n\"I seriously do not recommend this, guys.\" Barclay shook his head with a sigh at realizing his words had zero affect. \n\nBarclay moved slightly right to avoid one punch and then pushed the teen in his back, forcing him to collide into two other assailants. He then stuck his foot out to cause a fourth to stumble carelessly to the ground. \n\n\"Oh there is where I left my backpack,\" Barclay kneeled to collect his bag as two punches flew above him, one from each side, both connecting into their fellow attacker. He stood, slinging his backpack over his shoulder. \"Are you sure you guys wish to continue?\"\n\nFor the next eight minutes, the six freshmen attacked, and for the next eight minutes Barclay simply dodged while offering slight nudges to ensure their ineptitude only was inflicted on each other. At the end of the fight, only Barclay was still standing, the rest huffing deeply from exhausting their energy and nursing their wounds. \n\nBarclay looked around, verifying every one who was attacking was staying down, \"Huh, I do hope the school does not give me a fine for littering. This is quite a bit of garbage.\" He then stared down Seb, \"I appreciate the warm up; are you ready?\"\n\nSeb ran.\n\n\"I guess not.\" Barclay stepped over one of the fallen, \"Keep practicing... oh, and a plan of attack would not hurt.\" He took a deep breath, \"It really is a nice night.\"\n\n*\n\nTempest did all she could to be invisible to Elio. She went to school an hour early, avoided the typical routes to her classes, tried a new take out place for lunch, and flat out skipped her magic class before staying out late, just in case. Still, she hid behind a tree, glancing in every direction multiple times to ensure the coast was clear to get into her dormitory.\n\nTempest had a sigh of relief as she opened the mansion door. Her eyes looked around curiously, \"Where is everybody?\"\n\n\"I've been waiting for you.\" The voice came from the parlour room to the right.\n\nTempest's face fell to one of true dejection as she stared at Elio, his arms folded in a non negotiable wall of dictatorship, his face the resolute authoritarian.\n\nTempest's only thought was a preemptive strike. \"I know what you're going to say, and nothing...\"\n\n\"Don't you dare lie to me.\" Elio thundered. \"I warned you to control yourself with that commoner. He is beneath your station and as a scion of the esteemed House of Pride, you cannot succumb to your lust for a low born, second rate...\"\n\n\"It's not lust!\" Tempest screamed before collapsing to the floor. She held her head in her hands, the tears uncontrollable.\n\nElio was taken aback, \"If it is not lust, then why are you always staring at him?\"\n\n\"Please don't make me say it, Elio.\" Tempest looked up and into his eyes, \"If I say it I'll be forced to admit it to myself; it'll ruin me.\"\n\nRealization dawned on Elio. \"You can't be serious? How far will Pride fall in standing if such a high ranking member even considers a commoner? No, Tempest. This must end now.\" He shook his head in disgust. \"You better forget about him, and soon. I will not let you take our noble house down with you. I already spoke to Vega Pretorius regarding this issue and she agrees that our name means so much more than you.\" Elio turned toward the door, \"You will be excommunicated, Tempest.\"\n\nThe door slammed ending the conversation. \n\nTempest started crying again. \"The head of all of Pride is the last word... and I am a slave to the family,\" she sputtered through the tears.\n\n*\n\n\"I concede.\"\n\nTempest snickered as she shook her head knowing that will never get old. She would have spoke to Barclay about it, except Elio has been keeping a keen eye on her since her reprimand.\n\nThe belligerent devil, Orestes Morehead of the House of Gluttony, was prepared for the concession. As Barclay went to step away, a sinister smile pursed his lips, \"I formally challenge Barclay to a duel!\"\n\nBarclay stopped in his tracks, \"You just won a duel against me?\"\n\nTempest tilted her head, \"Huh?\"\n\n\"There's nothing that says I can't duel someone I just dueled and you, Tempest, as Resident Advisor, must acknowledge my formal request.\"\n\n\"But...\" Tempest paused unsure of what Orestes was trying to pull.\n\n\"C'mon man,\" Brand shook his head, \"It's too early for this and we need to get to class.\"\n\nMaren sighed, \"We're going to be late.\"\n\n\"Start the duel,\" Orestes ordered.\n\n\"It's all right, Tempest,\" Barclay gave a reassuring smile that melted her heart.\n\n\"Okay; begin!\" Tempest dropped her arm.\n\n\"I concede.\"\n\n\"I formally challenge Barclay to a duel.\"\n\n\"Seriously?\" Brand exasperated. \n\nBarclay eyed the smiling devil carefully. \"Mr. Morehead, the world would have been a better place if your mother would have swallowed.\"\n\n\"Start the duel, Tempest,\" Orestes smugly put his hands on his hips, ignoring the insult. His plan was working perfectly.\n\nTempest just stared at the devil.\n\n\"I said start the duel, Tempest!\"\n\nTempest dropped her arm, \"Begin!\"\n\n\"I concede.\"\n\n\"I formally challenge Barclay to a duel.\"\n\nTempest huffed, wishing there was some rule that she could use to save Barclay this irritation.\n\n\"Somewhere out there, there is a tree whose single purpose in hell is to replace the oxygen you waste. Go find it and apologize.\" Barclay turned and started walking away, \"Go ahead, Tempest.\"\n\n\"Begin.\"\n\n\"I concede,\" Barclay shouted as he, Brand, and Maren started for campus grounds.\n\n\"I formally challenge Barclay to a duel,\" Orestes ran after them, pulling Tempest by the wrist.\n\n\"Let go of me,\" Tempest cast an air spell to knock Orestes' hand from hers.\n\n\"Go ahead, Tempest.\"\n\n\"Begin.\"\n\n\"I formally...\"\n\nBarclay pivoted and let loose one solitary punch that landed squarely in Orestes' temporal lobe, knocking him out cold. \"Do not ever touch a woman without permission.\"\n\n\"I really don't think he heard you, Barclay,\" Brand laughed.\n\nMaren half cheered, \"Congratulations Barclay, you finally won your first duel!\"\n\nTempest had also wanted to congratulate Barclay... and thank him, and hug him, and everything else, but knew Elio was still watching.\n\n\"Well done, Barclay.\" A clapping came from a bench in the quad. \n\n\"Uncle!\" Barclay grinned as he ran to Kalitas, giving the elder devil a strong embrace.\n\n\"Barclay,\" Kalitas stood, looking at his charge proudly. \"It is good to see you, too.\"\n\n\"What brings you here, Uncle?\"\n\n\"Tomorrow is a big day; the man I raised is in the finals of the Warpath Tournament, and I would not be here?\"\n\n\"Thanks for coming, Uncle.\" Barclay turned to his friends, \"Allow me to introduce to you Brand and Maren of the Village of Prosh.\" He turned to the judge of all his duels, \"And this is the Resident Advisor, Tempest Bellerose.\" He then turned to the man who raised him, \"And my friends, this is my Uncle, Kalitas Khmer.\"\n\nThe three devil's mouths dropped at the declaration. \n\nMaren's mouth opened, but no words came out.\n\nTempest stared to where Elio was watching, her eyes wide in shock. \"Oh my Satan,\" she mouthed.\n\nBrand shook his head to collect his thoughts, but all that came out was, \"Why didn't you tell us your Uncle was the legend, Kalitas Khmer?\"\n\nBarclay raised his eyebrows, \"Does it matter?\"\n\nBrand went to say \"yes\" but stopped himself as that answer was not the truth, \"No.\" He then chuckled, \"But the insane training schedule you have me and Maren follow makes sense now... It takes a lot of hard work to be notorious.\"\n\nKalitas tilted his head, \"You two can keep up with Barclay?\"\n\nMaren raised her finger, \"Try to keep up,\" she clarified.\n\nKalitas looked at his protege.\n\nBarclay shrugged.\n\n\"Anyways,\" Kalitas continued. \"As for your other matter, Barclay tends to be like me. He is not one to gloat.\" Kalitas nodded to his own statement.\n\n\"That's an understatement,\" Tempest smiled subconsciously. She cringed briefly at her mistake... she did not intend to further conversation.\n\n\"Oh?\" Kalitas looked inquisitively at the young devil. \"Sounds like there is a story in that statement.\"\n\n\"Yes,\" Tempest giggled. \"He may be in the finals of the Warpath Tournament, but his record in duels is an abysmal one and eighty six.\" She then looked thoughtfully at Barclay, \"I'll never forget when he told me that only a fool goes to battle without reason. It was unlike anything I have ever heard from a devil.\"\n\nKalitas eyed Tempest knowingly before he put a hand on Barclay's shoulder, \"Win or lose, know that I am proud of you Barclay.\"\n\n\"Thanks, Uncle.\"\n\n\"And regardless of the outcome, I am taking you out for a steak dinner to celebrate.\" Kalitas turned toward Barclay's friends, \"Of course, the three of you are also invited.\" His focus then fell upon Tempest, \"I do hope you are able to come.\"\n\n\"Uh,\" Tempest's eyes found Elio's in the distance; his anger obvious. \"I'm not sure I can.\"\n\n\"Oh, well,\" Kalitad shrugged. \"Nature will have to take its course without my help. Barclay, I hope you don't mind, but an old friend of mine will also be attending.\"\n\n\"Of course, Uncle,\" Barclay smiled. \"A friend of yours is a friend of yours... However, I am surprised you still have old friends? At your age, I assumed you were the last remaining.\"\n\nKalitas smacked Barclay's back in jest, \"Your mouth never ceases to amaze, Barclay... You are fortunate I taught you how to defend yourself well.\"\n\nTempest forced a smile; she hated having to turn down an offer to go out with Barclay. \"I've got to go; class is about to start.\"\n\n\"Yes,\" Barclay agreed. \"We all do. It was good to see you again, Uncle.\"\n\n*\n\nElio stood firm, \"As Resident Advisor, I understand you must sanction duels, but once that was complete, you needed to walk away.\"\n\nTempest pointed in the direction she had come, \"Do you even know who that was?\"\n\n\"It doesn't matter.\"\n\nTempest exasperated, \"You're saying I should be rude to...\"\n\n\"Commoners do not matter!\" Elio took a breath, \"Just go to class. It is uncouth for a member of Pride to be tardy in her academics, especially since you wasted your chance in the Warpath Tournament.\"\n\nTempest lowered her head in shame as she walked toward her first class.\n\n*\n\n\"Combatants, begin!\"\n\n\"This is new,\" Barclay had prepared to dodge a wall of stalagmites thrust from the ground and toward him, which Wystan uses to disorientate his opponent, before sending more, a constant surge always coming forth in an attempt to narrow the playing field, trapping his adversary before finally finishing the duel. But that was not occurring. 'Is he using wind magic as well as earth? No, he used his earth magic to kick up as much sand in the air and is controlling it thusly.'\n\nBarclay went on the offensive, sending an air spell at the debris, pushing it back while sending a fireball at Wystan, and dashing forward.\n\nA wall of earth sprung from the ground to block the fire, Wystan then spun around, preparing to now fire off his stalagmite spell only to be caught having to deflect a punch, just grazing his jaw.\n\nBarclay kept up a flurry of punches and kicks, all being evaded or blocked with only minimal effect.\n\n\"Finally, someone who knows what they are doing in this tournament,\" Barclay smiled, as he cast an earth spell of his own, weakening the ground under his opponent. \n\nWystan's knees buckled, before falling backward. As Barclay attempted to jump upon him, Wystan conjured a bo staff, plunging it into Barclay's stomach and throwing him into his flying debris.\n\nBarclay landed with a thud. He blinked his eyes repeatedly as the sand attacked his pupils, his sight becoming non existent. 'Well played.'\n\n\"My turn, you over rated piece of common trash!\" Wystan roared with an evil sneer as he conjured more wooden bo staffs, his earth magic controlling the wood as he sent them all hurdling through air into the sand storm.\n\nBarclay barely found his footing before getting pummeled, each staff hitting hard and on target as they searched him out. He rolled left, right... nothing mattered as he couldn't see, and the longer he was in the storm, breathing was becoming an issue as well.\n\n\"There's nowhere to hide!\" Wystan burned with fury, his rage fueling the demise of his opponent. \n\n*\n\nSatan stood in his luxury suite, preparing to bark out the order to end the contest.\n\nKalitas put his hand up to Satan's shoulder, \"Wait.\"\n\nSatan looked down at his mentor, \"If that boy dies it would be the start of...\" He stifled the rest of statement at the determination he saw on Kalitas' face.\n\n\"Come on, Barclay,\" Kalitas tightened his fist.\n\n*\n\nBarclay grimaced at the latest hit against his body. His efforts were on healing himself, but he was being overwhelmed. 'No, I must attack to stand a chance; but this sandstorm... yes, that is it, this sandstorm... I must increase the partical collisions.' His hand went up as he cast an air spell to increase the speed of the sand in the air.\n\nWystan noticed the air spell against his earth magic controlling the sand, \"You think that will save you? You're just helping me now, you Fool!\" ",
        "Barclay gave a faint smile as the sand particles were becoming polarized. 'Now to temper the force before using air to create an arc discharge to induce the strike to a physical location, and...'\n\nWystan's expression was contorted in maniacal laughter. He knew he had won... He wasn't letting up, not against this upstart, not against anyone wanting to take his crown. He peered through the debris, at something unknown. \"What is...\"\n\nLightning shot forth from the sandstorm in a flash of white, an arc of energy grappling onto Wystan as a spider to its prey causing a shriek of electrified anguish before dissapating just as quickly.\n\nThe sandstorm collapsed just as Wystan did. All spells evaporating in a blink of an eye.\n\nA hushed silence overtook the crowd.\n\nSatan looked at Kalitas, hoping for the answer to everyone's unspoken question.\n\nKalitas took a moment for himself, a quirky smirk relishing on his countenance as he stood. \"I knew he could do it.\"\n\n\"Kalitas,\" Satan's eyes raised in a curious awe. \"How did he do that? How did Barclay control lightning? No devil has that power... How did he just accomplish that?\"\n\nKalitas merely shrugged, still smiling. \"I am not sure, Sire.\"\n\nThe clapping thundered from the Coliseum, as the announcer's voice echoed, \"Winner, Barclay Khmer!\"\n\nBarclay tried to stand, but was only able to make it to one knee. At the hearing of his own name, he collapsed to the ground.\n\n*\n\n\"Elio Dempsey.\"\n\nElio bowed to the large screen monitor and to the devil Vega Pretorius, the picture of vanity and the reason Pride's name is synonymous with greatness. Her beauty was only surpassed by her cunning, her eyes often the only indicator of her devious ploys and currently was no exception.\n\n\"Yes, My Lady.\"\n\n\"Wystan lost to a commoner.\" Vega's words were more than a statement. They were a deep query expecting answers.\n\n\"Yes, My Lady. Wystan lost to a commoner, but I'm afraid Barclay is much more than what he is perceived. He is the nephew of the great Kalitas Khmer and he was taught a such.\"\n\n\"And this Barkey, or whatever, actually manifested lightning?\"\n\n\"Yes, My Lady,\" Elio nodded. \"Though we are still unsure how. Due to the circumstances of limited visibility, Wystan was unable to deduce how it was done himself.\"\n\nVega tapped her fingers on the ornate chair she was sitting upon. \"I want him apart of Pride... Tell me, does the scion of Bellerose still harbor feelings for the lad?\"\n\n\"Yes, My Lady; though she has been respecting your wishes in regards to the matter.\"\n\n\"It is simple, Elio,\" Vega's smile became devilish in nature, \"Offer her to him. It's so rare I can force a marriage to increase Pride's position with someone who actually wants the person they will be marrying. She gets what she wants, salvaging her position from her medical debacle, and I get what I want. Make it happen. I want his power.\"\n\n\"As you wish, My Lady.\" Elio bowed as the connection ended. \n\n*\n\nThe first feeling Barclay had was of the mattress. It wasn't soft, not quite firm, and definitely not his own. He groaned, his body not so much in pain as it was sore, as he first creaked his left eye open followed by the right to find himself in a hospital bed.\n\n\"Good morning, Barclay; I see you are finally awake. How do you feel?\"\n\n\"Yes, Uncle,\" Barclay scooted nimbly up in the bed, giving a small, yet sarcastic smile, \"I feel like how you feel when I failed to adjust my power correctly. How is Wystan?\"\n\n\"He is well. You did perfect in using only enough force to win the fight as he was better after only an hour of first aid, unlike you who required two days of rest.\"\n\nBarclay nodded, relieved he adjusted enough.\n\nKalitas continued, \"And what did you learn?\"\n\n\"Not to underestimate a devil's ability to conjure. It was a weakness of mine that was easily exploited.\"\n\n\"Good.\" Kalitas gave a proud smile. \"If you would have said that you now know how to manifest lightning, I would have been disappointed.\"\n\nBarclay gave a cat ate the canary grin, \"I can do it again, Uncle. It's a mere application of an earth spell and two air spells.\"\n\n\"Do not get too cocky, Barclay,\" Kalitas shook his head. \"Though it won this battle for you, can you apply it swiftly during a fight without becoming incapacitated again? Do not forget that it is important to not only know the spell, but to call upon it with haste.\"\n\n\"Of course.\" Barclay eyed his caretaker with mirth, \"And you do not forget, Dear Uncle, you owe me a steak dinner.\"\n\n\"I have not forgotten,\" Kalias smiled. \"Due to your incapacitation, our guest had other business to which to attend. He will be free again in four weeks, and you will have your dinner. Honestly, preparing for your studies tomorrow should be more important than food.\" \n\n\"School tomorrow?\" Barclay exasperated. With how his body was feeling, he doubt he felt up to that challenge. \n\nKalitas laughed, \"What? Did you think just because you won the Warpath Tournament you did not have to attend class? You still have much to learn. Now that you are cognizant, as your head physician, for obvious reasons, you will be released later tonight. Why should you not attend your studies.\"\n\nThat decision was quickly settled.\n\nKalitas stood, \"You must be famished. I know it is not steak, but I heard the meatloaf here is good.\" He then chuckled, \"Good for hospital food, that is.\"\n\n*\n\nElio was sitting in the lobby, waiting for Kalitas to leave. Upon seeing the elder devil leave for the cafeteria, he approached the door, giving a firm knock against the hospital room door. \n\n\"Come in,\" Barclay yawned before giving a look of confusion. \"Mr. Dempsey, to what do I owe the pleasure of your company?\"\n\n\"May I sit?\"\n\nBarclay gestured to the yellow cushioned chair.\n\nElio sat, crossing one leg over the other, \"I'll be frank, Barclay; your defeating of Wystan has upset the balance of Pride's truth: that we are the best in all that we do.\"\n\nBarclay rolled his eyes at not only how superficial that sounded, but that it was meant that way. \"I'm sorry to hear about your troubles.\" Not really.\n\n\"All joking aside, you are an unaffiliated devil and we were hoping that would change.\"\n\n\"You want me to join Pride?\" Barclay couldn't help his chuckle. He then noticed Elio stayed firm. \"No thanks. Hard pass.\"\n\nElio's eyes narrowed as he tilted his head, \"Not even for the likes of Tempest Bellerose?\"\n\n\"Are you referring to marriage?\" Barclay's eyes went wide. \"You can't be serious?\"\n\n\"The two of you are both eligible, and I assure you that she comes from one of the finest families Pride can offer.\"\n\nBarclay could hardly believe his ears. \"How dare you, and all of Pride? You would just throw a family member into a relationship without considering her feelings?\"\n\n\"Actually,\" Elio stared intensely, \"I believe you're the one not considering her feelings.\"\n\n\"Only because you are forcing her. Tempest is just another slave to your family and I refuse to be treated as such as well.\" Barclay shook his head, \"I would love to see things from your perspective, but it is impossible to get my head up your ass that far.\" He then pointed, \"There is the door; use it.\"\n\n\"I'll talk to you again when you're in a better mood.\" And when I don't want to strangle you... Elio stood, \"Feel better Barclay.\"\n\n*\n\nBarclay took one look at Tempest and felt horrible, and it wasn't because Orestes brought her all the way to the quad and over to him, certain that as long as he didn't touch Tempest, he'd score several easy victories against the top student. \n\n\"I formally challenge...\"\n\nBarclay gave an angry stare as he stepped forward, his face a mere papers width away from Orestes. \"I have too much rage to concede.\"\n\nOrestes didn't hesitate and backed off a step followed quickly by another. He turned and ran.\n\n\"Well done,\" Tempest giggled, before putting her hands to her yellow sundress as a gust of wind threatened her hemline. \n\nThat hurt Barclay even more... she was so cute when she giggled. His eyes softened, \"Tempest, I do not know how to tell you this, but Elio offered me your hand in marriage just to manipulate me into joining Pride. I am so sorry.\"\n\nTempest's eyes went wide, \"He... he did?\"\n\n\"Yes.\" Barclay put a hand to Tempest's chin, ensuring eye contact to echo his thoughts, \"I am sorry.\"\n\nTempest pushed into the touch, forcing Barclay's hand against her, savoring all that he was. \"What did you tell him?\"\n\n\"I turned him down, obviously.\" Barclay pulled his hand away, flexing his fist as he did, his hatred of the situation showing. \"It made me so angry that Pride would use you like that. You may be used to being a slave to your family, but I most definitely am not.\" He then shook his head, \"I will not be bribed, especially without that person's consent, and you deserve the right to choose to whom you wish to spend the rest of your life.\"\n\nTears developed in Tempest's eyes. Her emotions were a hot mess; Barclay didn't reject her, but it felt like he did as her family's acceptance was her only hope; but it was also such a sentimental moment. Barclay was being this strong, capable, and protective devil for her sake... again. How could she not feel what she doesn't want to name for him. She took a deep breath. The family approves, so I am free to pursue - my way. But will Barclay be with her despite being a member of Pride? A smile percolated her lips as there is only one way to find out. \"Barclay, let me take care of Elio; until then, we're going to be late for class.\"\n\n\"You are right,\" Barclay took a deep breath to compose himself. \"I just wanted you to be aware that your family was plotting against you.\"\n\n\"Come on,\" Tempest reached out, taking hold of Barclay's hand. \"Class time.\"\n\nBarclay didn't pull away at the contact, but he was conflicted... It was the first time a girl has touched him in a nonsexual manner. It was simply a hand hold; and the best part was that Tempest showed not a hint of lust. Peculiar. \"Why are we at the Coliseum? I have math which is completely in the other direction.\"\n\n\"Our class won Warpath,\" Tempest snickered. \"We're exempt from our regular classes and get a week long party in the large lounge in here. There is food, drinks, and...\"\n\n\"Apparently, an orgy,\" Barclay let out a shocked sigh.\n\n\"This devolved into chaos even earlier than yesterday. Hell, even Professor Keen brought her husband for the festivities today.\" Tempest looked to Barclay, \"Hey, I have an idea. Let's get out of here, get some lunch and have a day in the city. It's what I did yesterday when the party became... this,\" She waved her hands to inside the room. \"I'll tell Professor Keen we're here, and she won't care. We just need to report to excuse us from our normal classes.\"\n\nBarclay nodded, \"Sounds good.\"\n\nTempest walked up to Professor Keen as her husband was pounding fiercely into her pussy. \"Professor, I'm...\"\n\n\"Sign in sheet on the desk.\" Professor Keen moaned, \"Yes, right there!\"\n\nTempest signed both her and Barclay in, and, as she turned, she saw Elio getting ridden by some devil with red hair. Disgust ravaged her being as she marched to where he was and couldn't help but slap him in the face, \"You could have told me!\"\n\n\"I'm busy Tempest... and you will mind your superior. You will not be reminded again.\" Elio took hold of the girls hips, \"And he said no. He doesn't want you.\"\n\n\"Hey Tempest,\" Vulcan smiled lavasciously. \"Why don't we find a corner somewhere and...\"\n\nTempest threw her hand into Vulcan's face, \"Back off Vulcan, there isn't enough lust in hell for me to spread my legs for you.\"\n\n\"I'll do it,\" a devil with blonde hair came from behind and caressed Vulcan's body.\n\nTempest brought her attention back to Elio. She was upset, prepared to yell again because he obviously didn't understand why Barclay had said no as it wasn't about her, but the family. As she stared at his visage, something changed. It made her feel sorry for him. 'Just another slave to the family. I have better things to do.' She gingerly walked around the couplings and out the door.\n\nBarclay smiled, \"So you passed on the celebratory sex yesterday?\" \n\n\"No one in there interested me.\"\n\n\"Glad to see you have got your lust under control.\"\n\nTempest shook her head, \"That night, it wasn't lust. I genuinely just wanted to say congratulations to you. We had been close enough with all those duels of yours that I had to be a witness for, all the conversations, all the walks, that I was truly happy for you. It wasn't lust; it was so much more.\" Tempest took hold of Barclay's hand, \"Come on, let's start our date.\"\n\n'Date?' Barclay gulped. He had heard of such a thing, but never been on one. The girls only used him to quench their lust, never because they wanted to be with him. Barclay smiled at now knowing the difference. His hand embraced Tempest's in a soft understanding. \"Lead the way.\"\n\n*\n\nThe day was full of laughter and fun. Whether it was lunch, the historical museum, dinner, or the movie that followed, conversation flowed between the couple, each topic delving into either a laughing fit, a poignant view of life, or somewhere in between, but all enjoyable.\n\n*\n\n\"Do you want to stop here?\" Tempest bit her lip as she asked.\n\nBarclay looked up to the hotel, a nervous expression donning his brow. Was all today just a precursor to Tempest's lust?\n\nTempest saw the dilemma in Barclay's eyes, his emotions becoming easier to understand after truly getting to know him. All those girls who used him just for their own purposes hurt him. \"I am not in a fit of lust, Barclay, but I do want to do this... with you. I promise I won't leave you afterward.\"\n\nBarclay tilted his head; Tempest seemingly had read his mind. After the day they had, she did so much to prove she was different. 'No, she is different.' \"It's not that I minded sex...\"\n\n\"Shh,\" Tempest smiled. \"It's okay. Please let me show you I am more than what those other harlots were.\"\n\nBarclay stepped forward, his hand caressing Tempest's cheek. \"You already have.\"\n\nTempest shivered. \"Is that a yes to the hotel room?\"\n\nBarclay gave a singular nod.\n\nBarclay's and Tempest's hands came together, a unification of acceptance of what was going to occur.\n\n\"One room, please,\" Barclay was nearly hoarse with anticipation.\n\nThe clerk, a middle aged female devil with a nametag which read Anemone Clark, immediately began typing on the keyboard, \"For a half hour or the night?\"\n\n\"The night,\" Tempest interjected with a smile.\n\nAnemone looked at Tempest with a knowing smirk as she handed over the key. \"Congratulations.\"\n\n\"Thank you,\" Tempest held Barclay's hand a little tighter.\n\nBarclay looked at Tempest curiously, \"Congratulations?\" \n\nTempest shrugged, a knowing little grin still etched on her face, \"It's nothing.\"\n\n*\n\nThe door closed, Barclay turned to Tempest, slightly nervous. It felt different without Tempest simply throwing herself at him like the other girls. \"Where do we start?\"\n\nTempest leaned in, her lips connecting with Barclay's. The connection was hypnotic as she wrapped her arms around Barclay's neck. Her lips parted, her tongue sneaking out, pressing against the barrier.\n\nBarclay was unsure, but fell into the kiss. It was unlike anything he had experienced prior... It felt so intimate. He felt Tempest's tongue brushing against his lips, and it took a stubborn minute to realize to part them.\n\nOnce past the tender barricade, Tempest explored all of Barclay's mouth, her tongue dancing and parading with jovial delight upon all things erogenous. \n\nBarclay moved his hands to Tempest's waist and, despite being cloth covered, it felt like home. So many thoughts swirled around his head as the kiss seemed to deepen, extracting all his emotions in a cavalcade of mystery. 'What is this swelling in my chest?'\n\nTempest pulled away, a satisfied little smirk adorning her face, \"For all your experience, I'm surprised that was your first kiss.\"\n\n\"Second, actually, but neither of us knew what we were doing.\" Barclay ran a hand through his hair, \"The other girls, well, they were always after something else.\"\n\n\"We'll get there,\" Tempest pulled at the hem of Barclay's shirt, raising it up and over his head. \"Yummy.\" She placed her hand on his pectoral muscles and grazed down to his abs, each sculpted in a toned definition from years of working out. \"I don't think I will ever get used to seeing you without a shirt.\"\n\n\"Be careful,\" Barclay gave a subtle reminder of his worry. \"That implies you want to see me again.\"\n\n\"Always and forever,\" Tempest leaned in and gave soft, placating kisses to the exposed flesh while her hands took issue with Barclay's belt and pants.\n\nBarclay's hands went to Tempest's back. He explored the fabric, searching.\n\n\"What are you doing?\" Tempest snickered.\n\n\"I am trying to figure out how to get you out of your dress, but I cannot seem to find a button or a zipper anywhere.\"\n\nTempest giggled, and to Barclay, it was still adorable. \"Is that all?\" She took hold of the bottom of her dress and pulled it over her head, revealing a matching black lace bra and thong.\n\n\"Come on, Sweetie,\" Tempest pulled Barclay by the hand, and he stepped out of his pooled pants to avoid tripping as he followed. \"There's a comfy bed over here.\" She kissed him again, reaching back and unsnapping her bra before sitting down.\n\n\"Breathtaking,\" Barclay admired, causing Tempest to blush. He pulled down his boxers with his erection springing from its captivity, its hardness wavering in the air until the soft caress of Tempest's touch.\n\n\"For me?\" Tempest looked up to Barclay doe eyed. She batted her eyes playfully before lowering her head, her tongue snaking around the mushroom head.\n\n\"Ooh,\" Barclay involuntarily exhaled.\n\nTempest licked the underside of Barclay's shaft from the bottom to the tip, eliciting another shivered response from her lover, \"I take it you like?\"\n\nBarclay blinked at the sensation, \"Wow; hell yes, I...\"\n\nTempest cut him off by taking Barclay fully, her mouth tantalizing his very being. She gently lifted up before dropping again, developing a small, euphoria inducing rhythm. On each down stroke, she used her tongue to tickle and curl, creating a heavenly palate from a devil, while on every upstroke, she sucked heartily, doing her best to collect his soul through his cock.\n\nBarclay was on shaking knees, the pleasure intense, his moans echoing in the small room.\n\nTempest took a breath as she placed her hands on Barclay's hips to steady him. She stared into Barclay's eyes, and saw the fire burning behind them. \"Uh - oh, I think I'm in for it now,\" she giggled.\n\nBarclay leaned down and gave Tempest a lovers kiss, doing all that she had taught him in what seemed so long ago. He put his hand on her shoulder, easing her back upon the mattress, never relinquishing their shared passion. \"That was amazing, but it is my turn.\"\n\nTempest gave a loving smirk, \"Be careful Barclay, your lust might be guiding you into a more precarious situation.\" \n\nBarclay tilted his head at having his words thrown back at him. He pulled down Tempest's thong and positioned himself between her legs. \"This is not lust... It is, I am actually not sure, but I would not call it lust.\"\n\n\"Oh?\" Tempest asked, which quickly turned to an, \"Oh!\" as Barclay thrust forward.\n\nBarclay was in awe. Tempest was so tight... and oh so wet. He thrust forward again into her sheeth feeling the velvety silk encompass his girth as he penetrated to the hilt. It felt amazing as he pulled back, her pussy seemingly begging for the intruder to stay, only to be rewarded as he slid forward again as Tempest orgasmed around his shaft.\n\nThree strokes. That's all it took for Tempest to rupture into unbridled bliss. Her breathing was heavy, her smile grand, and her scream of indulgence nearly hell shattering.\n\nBarclay braced himself for the inevitable rejection Tempest will soon display after she calmed down from her heights.",
        "\"Keep going, Sweetie.\"\n\n\"Sorry,\" Barclay started pulling out.\n\nTempest wrapped her legs around Barclay, pulling him completely inside her channel, \"Sweetie, where are you going? Keep going.\" She massaged his length flexing her internal muscles with a content little groan to make her point. \"I'm not through with you yet... In fact, I'll never be through with you.\"\n\nBarclay's frown turned into a grand smile. His eyes locked onto Tempest's hazel orbs and saw the truth in her words... and he couldn't stop staring as he pierced forward again, rocking into her wonderous canal of pleasure.\n\nTempest lifted her hips, matching Barclay's strokes, encouraging all that he was. Her legs still locked around his waist, not wanting even a chance of separation of occurring. She bucked back repeatedly, each a glimmer faster as the tempo was increasing, her eyes never faultering from his gaze - and she could see her future set with the man she loved. The joys, the laughter, even a few arguements sprinkled in, but all with Barclay. It was a future she knew she would cherish.\n\nBarclay saw the outpouring of something in Tempest's eyes. As he continued to thrust, he felt it too - a connection into her very soul. It was as if, for the first time, a girl accepted him for him, which allowed him to expand his views of the girl. Tempest was something more, something so special she should worshipped - and heaven help anyone wanting to hurt her. He truly felt his soul bursting at the seams only to be reimagined in succinct harmony with hers.\n\n\"Tempest, I am going to...\"\n\n\"Me too,\" Tempest tightened her legs even further around Barclay, insisting he complete their unification.\n\nBarclay thrust one final time with a strangled moan, his manhood exploding deep within Tempest's depths.\n\nTempest's hips flung upward and held as her body tightened, an elongated wail escaping her throat as her climax, so powerful in nature, wracked her being.\n\nBarclay breathed, his smile mirroring Tempest's as he stared lovingly into her eyes. \"That was amazing.\"\n\nTempest put a hand to Barclay's cheek, \"Yes, you are.\"\n\nBarclay leaned down, giving Tempest a soft, romantic kiss, \"I have never felt anything like that before.\"\n\nTempest's smile went wider, \"Neither have I.\"\n\nBarclay slid off to the side and Tempest turned to face him, not wanting to relinquish their eye contact. It didn't take long for them to succumb to sleep.\n\n*\n\nThe whispering of words tantalized Tempest's groggy state into consciousness. Her hand reached out to find she was alone in the bed. Her eyes creaked open, noting Barclay hanging up the phone, standing only in his boxers.\n\n\"So you're telling me you are like every other guy; willing to fuck a girl and leave?\" Tempest playfully grinned.\n\n\"Three things,\" Barclay chuckled. \"First, I would be arrested if I was leaving only in my underwear. Second, I would not classify what we did last night as fucking. And third, only an idiot would leave a woman as wonderful as you.\" He walked over and gave a brief kiss to Tempest. \"I was actually ordering room service.\"\n\n\"Sounds great.\"\n\nBarclay smiled, \"I pity those other guys who ditched you. They were absolute imbecils.\"\n\nTempest shrugged, \"I honestly wouldn't really know. I mean, yes, I've had sex before, but for the woman noble of Pride, we must be selective. Sex doesn't happen too often.\"\n\nBarclay's head crinkled as a thought then trickled to the forefront, \"So, if you are not normally, you know, sexually active, are you on some sort of birth control?\"\n\n\"No,\" Tempest shook her head. \n\nBarclay took a breath, upset at himself for just now asking. \"So, was last night a safe day?\"\n\n\"I dont know, but it doesn't matter,\" Tempest grinned with a slight shrug. \"I'm graduating next month; I already have a job, though not one I really want to be doing as it's with one of Pride's best companies but it pays extremely well, a house lined up, but none of that even matters, either.\"\n\nBarclay tilted his head, \"What matters then?\"\n\n\"All that matters is that I love you, Barclay.\" Tempest smiled at finally being able to admit it. \"I have for awhile now.\" She then nibbled her lower lip in nervous anticipation, \"So, how do you feel about me?\"\n\nBarclay sat, collapsing on the bed, stunned. \"When devils love they...\"\n\n\"Mate for life,\" Tempest nodded. \"And I did with you.\"\n\n\"What have I done?\"\n\nTempest was taken aback... she was hoping for a \"yes,\" expecting a \"no,\" would have settled for a \"let's see where this goes,\" but not an admission of guilt.\n\nBarclay felt horrible. What made it worse was his feelings for Tempest. He steeled himself as his eyes locked with hers. \"Tempest, I love you.\"\n\nTempest's joy skyrocketed, her arms embracing Barclay tightly. \"You have no idea how happy you made me.\"\n\n\"But...\" Barclay shook his head, not even sure how to lay out the truth.\n\n\"I don't care about the but,\" Tempest pulled back, tears in her eyes. \"We can get through anything as long as we are together, I promise.\"\n\n\"I need to tell you something.\" \n\nTempest eyed him expectantly. \n\n\"I am not sure I am allowed to love you.\" Barclay took a deep breath, truly hoping her promise was true. \"I am not a devil, but a human.\"\n\n\"What?\" Tempest pulled back slightly. \"What does that even mean?\"\n\nBarclay put his hand upon Tempest's, \"Uncle; I mean, Kalitas, adopted me. My parents were drug addicts on Earth, even going as far as putting me under the influence, when they died. As Kalitas was harvesting their souls, I, as a baby, grabbed his cloak and transported back to hell with him. So to not start a war, he healed me, and then took care of me as it would have been too risky to take me back.\"\n\nTempest didn't want to believe Barclay; he had to be lying... but his eyes - his eyes - held truth. \"You're serious, aren't you?\"\n\n\"Yes,\" Barclay gave a slight nod. \"Tempest, I do love you and I...\"\n\n\"Don't say that to me,\" Tempest scrambled to get out of bed, her tears cascading uncontrollably. She found her dress quickly enough. \"Oh Satan; I can't believe I just mated with a human... I'm ruined. What will the rest of Pride say?\"\n\nBarclay stood, \"I don't care what they say, and neither should you. They are using you and you should go after your dream job; I love...\"\n\nThe door slammed shut.\n\n*\n\n\"I told you that he didn't want you.\"\n\nTempest looked up from the bench, eyes full of tears, \"Elio?\" She glanced around noting that in her blinded sorrow, she inadvertently sat down on a bench in the vicinity of the Coliseum. \"I've mated.\"\n\nElio shook his head in disgust, \"I told you he didn't...\"\n\n\"And Barclay fell in love with me.\"\n\nElio's eyes lit up, \"You did it, Tempest. Our Lady Pretorius will be most pleased to hear we have Barclay in clan Pride. Well done.\"\n\n\"But he's...\" Tempest paused. She may not understand the formalities of being a human, but as a devil, there was still zero chance she'd be able to let the one she mated with's secret become public knowledge. If nothing else, she will be loyal until the end. \"Different.\"\n\n\"Yes, he has very little respect for nobility.\" Elio nodded as he sat next to Tempest. \"I already spoke with Lady Pretorius regarding this matter. It's simple, really; after he explains how he is able to wield all four elements and his use of lightning, we will bury him in diplomacy. He'll be sent as far away as possible so he won't be able to embarrass Pride.\" Elio put his arm around Tempest, \"Don't worry, you have fulfilled your duty and will be appropriately taken care of.\"\n\nTempest stared at Elio. Clan Pride was going to make Barclay a slave to them and then get rid of him like trash, just like they were willing to do to her. Something about that - All of it - actually, did not sit well with her. She thought about Barclay, and all his charms. Did he deserve that future? \n\nNo... \n\nWould I be okay with this? \n\nNo... \n\nHer thoughts then led full circle to herself. In his honesty, did he deserve someone running out on him? \n\nNo... \n\nIf not, does it really matter he's a human? \n\nNo... \n\nIf that doesn't matter, then what about me? Do I still love him? Is there a solution? A smile percolated Tempest's lips.\n\nElio chuckled as he stood, \"I'm glad to see you are on board. I had a glimmer of worry.\"\n\nTempest stood, feeling free for the first time in her life. She knew exactly where her loyalties lied. \"I formally renounce my rights as a member of clan Pride.\"\n\nElio's face contorted to shock, \"You can't just...\"\n\n\"Yes I can.\"\n\n\"But Pride's reputation...\"\n\n\"After all the flak everyone gave me about wanting to be a pediatrician - what's the problem with wanting to help kids, anyway? - which is exactly what I'm going to do now.\" Tempest turned to run back to the hotel, hoping she wasn't too late. \"Fuck Pride's reputation!\"\n\n*\n\n\"Barclay,\" Tempest stormed into the hotel room. \"I love you! I'm sorry I...\"\n\nThe room was empty.\n\nTempest's face fell. She sat on the bed as she started crying into her hands. \"How could I be so stupid... He certainly hates me now... He trusted my love and I threw his aside like it was nothing.\" She shook her head, more determined than ever, \"Wherever Barclay went, I'll find him and beg for his forgiveness. I'll...\"\n\nThe toilet flushed in the bathroom which was quickly followed by the hand sink. Tempest's eyes went wide as Barclay stepped out of the restroom.\n\n\"I did not go far, and it would be uncouth for a woman of your stature to beg.\" \n\nTempest ran over and embraced Barclay.\n\n\"And I would never classify anything you do as stupid,\" Barclay smiled as he held Tempest tight. \"How would you have been able to prepare yourself for something like what I told you? I am just sincerely grateful you came back,\" He leaned in, giving her a kiss full of a cherished promise, \"Because I love you, too.\"\n\nTempest contentedly sighed in Barclay's arms, as if she were truly home.\n\n\"Now,\" Barclay gave a light chuckle, \"I just need to figure out how to temper my anger at the people of Pride. I will respect your wishes in the decisions you make regarding your noble family, but there is no way I will agree that...\" He tilted his head at Tempest's giggling. \"What?\"\n\nTempest's lips arched upward, \"I renounced my noble rights.\"\n\nBarclay hugged Tempest with the thought of never letting go, \"I am so proud of you... and I fully support your decision to become a pediatrician.\"\n\n\"So you don't mind mating with a broke, homeless college student until I can get a job?\"\n\n\"Never,\" Barclay laughed. \"And you will be staying with me in my dorm room. I do not care who I have to electrify to make that happen.\"\n\nTempest pulled back from the embrace, a glint of playfulness in her eye, \"You sure I wouldn't get in the way? You tend to have quite a few female callers at night.\"\n\n\"They are going to be in for a rude awakening,\" Barclay chuckled. \"If they do not listen to my \"no's\" I am sure my woman would have no qualms about using her air magic to send uninvited guests out the window.\" He leaned in and kissed Tempest.\n\nTempest let out a contented little mewl before her look became sultry. \"I have an idea,\" she started to push Barclay to the bed, \"Let's stay in bed all day.\" \n\nBarclay fell onto the mattress as Tempest straddled him. \"The food is already cold, but would you care to eat first?\"\n\n\"If it's cold now, it'll be cold when we're done too.\"\n\n\"All right, I am convinced. You win that one.\" Barclay lifted Tempest's dress up and over her head, \"You know, you may be a devil, but you are an Angel to me.\"\n\nTempest was swift at disregarding Barclay's belt followed quickly by the zipper. In only a mere moment did she have her prize through the hole of his boxers. \"I'm not sure that's a compliment or an insult.\"\n\n\"You accepted me as no one else would,\" Barclay moved Tempest's thong to the left. \"Definitely a compliment.\"\n\nTempest gasped at the penetration as she lowered, fully impaling herself on his erection. \"But I seem to be lowering myself to depravity.\"\n\n\"Yes,\" Barclay raised his hips to meet Tempest as she lifted and dropped again. \"But you are also sending my happiness to new heights.\"\n\n\"In the most sinful way.\" Tempest began rocking her body against Barclay's manhood, \"Mmm.\"\n\n\"That feels so good.\" Barclay reached up, massaging Tempest's breasts, \"It is divinity from where I am positioned.\"\n\n\"You're not going to let this go, are you?\" Tempest leaned down and kissed Barclay. \n\n\"Hey, you won the last one,\" Barclay smiled as he kissed Tempest this time. \"I just want it to be fair.\"\n\nTempest sat up with a seductive smirk, \"So if you win this one, you'll stop messing around and fuck me already?\"\n\nBarclay raised his eyebrows in surprise at the crude language; it excited him further. But he still wanted to keep some semblance of control. \"Yes, my Angel.\" \n\nTempest swelled with pride at the pet name. Honestly, she was ecstatic at receiving the title from the beginning and was just giving Barclay a hard time... But his other hardness was becoming distracting to keep up the ruse. \"Okay, I concede. Fuck me.\"\n\n\"As you wish,\" Barclay took hold of Tempest's hips and threw her to the side. He finished by rolling her onto her stomach, and lifting her ass slightly in the air, \"My Angel.\"\n\nBarclay inserted himself into Tempest's channel, the velvety wetness so tight around his shaft was glorious. He slid deep before pulling back, leaving just the tip inside. \"My woman wants to be fucked, and so she shall.\" He punctuated his statement by slamming fully into her abyss.\n\n\"Oh my God,\" Tempest was becoming a daze at the relentless assault. Each piston causing a small orgasm that wasn't so small as it built to something mammoth.\n\n\"Your calls to God are just more proof you are an Angel,\" Barclay wrapped his arms around Tempest's body, his hands fondling her soft orbs as he pounded sweetly.\n\n\"Fuck,\" Tempest shouted, her body doing all it could to keep up with the invading bliss. \"I was referring to you...\" she groaned, her pussy clenching against his cock.\n\nBarclay felt what was coming; with Tempest constantly milking at his manhood, it was an inevitable conclusion. He pushed forward with all his strength, all his passion, and groaned something fierce as he let loose in a torrent, unloading all he was into her eager quim.\n\nTempest howled, her voice painting the air with an indelible roar of ecstasy as her built up dam burst into a flood of her being, euphoria coated her body and soul in a pleasure induced harmony.\n\nBarclay slid to his side, pulling Tempest with him, holding her tightly in the most treasured manner. \"You were so dirty with your words... I really liked it.\"\n\n\"Now that was my lust showing.\" Tempest snuggled even further into Barclay's chest, not wanting to leave her own personal heaven.\n\nBarclay gently kissed the back of Tempest's head, \"I cannot wait to start our life together, My Angel.\"\n\nTempest couldn't agree more.\n\n*\n\n\"There's not much more you can learn at Brimstone University, Barclay,\" Satan took a sip of his wine.\n\nTempest smiled at the compliment to Barclay, her hand holding his under the table. She had been so nervous that she, a former noble turned commoner, was to be dining with the Devil King himself. But Satan applauded her on her decisions to uphold what being a devil is truly about - having desires and following her desires. Now she was nervous because his attention was on her mate and she was worried for her human love, which he surprisingly knew about.\n\nBarclay took a poignant glance at Kalitas at the remark... but his Uncle's returned stare was far more intmidating. His point was clear - a person should always pursue knowledge. \n\n\"As winner of the Warpath Tournament,\" Satan continued, \"you now have the right to take on any job you wish. Normally, the Dean of the University would inquire what your future plans were, but due to your circumstances, as well as my relationship with Kalitas, I wanted to hear it for myself.\"\n\nBarclay took a breath; it wasn't everyday that one dines with the Devil King. Satan's look always seemed intimidating, even when he was not meaning it to be... not too much different than Kalitas. With that knowledge, the breath did Barclay well; just be himself - without the sarcasm.\n\n\"The University may not be able to teach me much more in combat or spell training, but I am wanting to become more than a pawn in a war. I want to prevent that war by becoming a diplomat in the negotiations between heaven and hell.\"\n\n\"Yes, with your circumstances, I believe you would be a fine asset in those peace talks. Satan burst out laughing, \"I can't wait to see Archangel Michael's face when you come to the bargaining table.\" He then shook his head, \"I promise you this, when you feel you are ready, your position will be available; however, may I suggest an alternative?\"\n\nBarclay took a drink of water, \"Any suggestion from the Devil King is an honor.\"\n\n\"Instead of college, as your transcripts are more than enough proof you are far beyond where your studies will be, even three years from now, come work for me at my castle. You will be an asset as a diplomat in helping handle disputes between the seven great devil families and it would serve you well as a stepping stone in preparing you for future negotiations with heaven.\"\n\n\"Your Eminence,\" Kalitas offered a worried tone. \"I am afraid Barclay may not be ready for such a position. He has only now begun being around people his own age this past year.\"\n\n\"Which means he is not poisoned by the seven devil clans arrogant ways. He will be perfect as a non affiliated arbiter.\" Satan then chuckled, \"Besides, this also means he would be disqualified from entering any future Warpath Tournaments, which, if anything should happen, could start a war. It is a very favorable compromise for all.\"\n\nBarclay thought for a moment. \"What about Tempest? If I accept, what would happen to her?\"\n\nTempest blushed. She knew Barclay loved her, but he was not bound by the mate for life devil parameter she endures... Yet, he still thought of her. It made her love him more.\n\nSatan gave off a quizzical stare, \"Barclay, do you think my diplomats have not mated? Every one of them live in a home with their families, and I am confident that the local doctor's office is in need of a highly qualified pediatrician.\"\n\nBarclay looked at Tempest, her eyes told him everything. All she wanted was for him to be happy. It was his career. If her eyes weren't enough, her hand held firm of his under the table, signaling that they were in this together.\n\n\"I accept.\"\n\n\"Excellent,\" Satan raised his wine glass.\n\nKalitas nodded as he too raised his glass, \"Barclay, I am proud of you.\"\n\nBarclay leaned over to Tempest, \"You are sure you are all right with this?\"\n\nTempest nodded with a grand smile, \"As you fully support my dream, I fully support yours. I'd love you even if you wanted to be a bum.\"\n\n\"Your Eminence,\" Barclay smiled, \"I just wanted to thank you for making all the dreams I had for my life come true...\"\n\n\"No,\" Satan shook his head. \"You earned all of that on your own.\" He then offered a blunt smile. \"Most impressive considering your lineage.\"\n\n\"I feel I have it all,\" Barclay could hardly contain his joy, \"A diplomat, a wife...\"\n\n\"A child,\" Tempest added.\n\nEveryone's eyes went wide at the news.\n\nTempest gave a slight shrug as she rubbed her stomach.\n\nBarclay excitedly raised his water glass in the air, \"And so the dream begins.\""
    ],
    "authorname": "fgmntfmgnshn",
    "tags": [
        "devil",
        "doggie style",
        "love",
        "magic",
        "missionary",
        "teen",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/lost-soul-5"
}