{
    "title": "Christian College Sex Comedy Ch. 09",
    "pages": [
        "*Domestication may be our second greatest accomplishment, exceeded only by Fire*\n\nThank you Frontma for editing yet another one.\n\n(Yes, this tale is supposed to be somewhat humorous and outrageous too. While not always comedic I'd like to think it is mostly a good-natured romp.)\n\nMaking Mistakes \n\n\"Back up, all you horny bitches,\" Rio growled. \"Clearly he's on life support.\" I would have asked her to be more polite but my only real desire was to crawl back into bed at that moment. I must have looked like hell because everyone actually did what Rio ordered, and I'm pretty sure Opal could beat Rio into next week if she desired.\n\nAs it was, my ladies stood watch over me with a compassion and tenderness most of them couldn't have imagined holding for me a week ago. I showered, and by unspoken consensus, Iona got to towel me off and fixed said towel around my waist so I could go back to my 'room'. That warm fuzzy feeling got my fires going where hot water had failed. I probably saved us a whole lot of headaches too -- for them anyway.\n\nRhaine, Mercy, and one other of her group were leaning against the far wall when I came through the bathroom door. Without being obvious, I let the door shut then slammed my heel against it.\n\n\"No more games,\" Rhaine gloated, as the three of them came off the wall. Bump, bump, bump came from the far side of the door. Rhaine looked at me with curiosity, not sure what that noise was. \n\nLucky for me, the first person who would have followed me out the door was Iona, thankfully blessed with good hearing, and despite smacking her face into the door, she managed to both not curse and to keep the others quiet when they walked into her.\n\n\"Was there someone in there with you?\" Rhaine interrogated me. I arched an eyebrow.\n\n\"Yeah,\" I grinned. \"Lots of people love to wake up and get wet before 6:00 a.m., but why don't we go in there to make sure? Answer me one thing, though; what color is your bra?\"\n\n\"That's none of your business, you pervert,\" Rhaine shot back angrily.\n\n\"I'm just saying that if it is white, you are going to look pretty naked when I get you under that showerhead,\" I smiled lasciviously. It wasn't hard; Rhaine had a tight, hot body and if it wasn't for that bitchy personality...wait, am I looking for even more sex? Someone please shoot me.\n\nRhaine had clearly heard something and was trying to make up her mind if she could both check it out and keep me contained when I decided to change her train of thought. I gave an exaggerated sigh, took off my towel, threw it over my shoulder, and headed to my room.\n\n\"Put...put...put...put that towel...back on,\" Rhaine stammered.\n\n\"Why? There are not supposed to be any girls out on the fifth floor at this hour. It is all mine, according to the Chancellor herself,\" I said over my shoulder. \"Now, are you coming along or do I get to shut my door in your face?\"\n\n\"We don't care,\" Rhaine tried to recover the momentum, \"we have a key.\"\n\n\"I don't believe you,\" I accused her as I stopped and kept looking over my shoulder. Barbie Lynn must be right, I have a really fine ass, because that was what they were all staring at.\n\n\"Well, I have one,\" she taunted me as she brandished it in my face -- from ten feet away. I just had to beam a smile her way. \n\nHer key was silver; mine, which hung around my neck on a light chain, was bronze, as were all five of the original keys. Someone was giving out copies of my room key; what a bunch of fuck-nuts. I turned and walked right up to her, which entailed backing her into a wall since she was trying to backpedal away, her eyes torn between my fiery gaze and awakening erection.\n\nThe other two made to grab me but were flummoxed by my lack of clothing. I took the opportunity to press myself into Rhaine, who was giving me the deer-in-the-headlights look, ran a hand along her jaw and curled a lock of hair. I tickled her cheek with that lock, causing Rhaine to blush and her eyes to flutter.\n\n\"Thanks, Rhaine. You are helping me out more than you know. If there is anything...I mean anything...I can do for you, let me know,\" I softly growled with a wolfish hunger to her, but still loud enough for her companions to hear. I stepped back and strutted away again, my semi-rigid rod swaggering back and forth.\n\n\"Let's go to my room,\" I laughed.\n\n\"Weren't we supposed to hurt him if he tried anything like that?\" one girl whispered.\n\n\"But he was naked,\" responded Mercy quietly. \"What would happen if...you know...we touched...IT?\"\n\n\"We are not going to your room with you,\" Rhaine shouted at me.\n\n\"Fine, suit yourself, because it isn't like I'm going to avail myself of any of the three fire escapes that lead off the roof,\" I chortled. \"Also, touching IT can lead to blindness and sterility in the elderly under twelve and children over 65,\" I purposely attempted to confuse them. Children over 65...sometimes I need to show the whole world that I'm not getting enough sleep.\n\nI was still laughing at my screw-up as the door swung shut. At the last second I failed to hear the 'clunk' of the latch hitting home, though I was already to my bed, when I heard the first hesitant footfalls on steps. I was well into my morning meditative trance, lotus style, when Rhaine crested the stairs. My eyes were shut but I could tell by her sharp intake of breath where she was and what she was staring at.\n\n\"Put on some clothes!\" she barked. I remained blind and silent. \"I said 'put on some clothes',\" she repeated. I hardly had more reason to do so now than I had a second ago. \"Put on your clothes,\" she now sounded petulant; no response. We remained silent for almost a minute -- I normally remain still for ten minutes -- when she said the magic word. \"Would you please put some clothes on?\"\n\n\"Please?\" I responded, cracking open one eye. \"Come over right now and give me a kiss; then I'll get dressed. Otherwise, you have to wait nine more minutes while I remain in prayer.\"\n\n\"Prayer?\" whispered Mercy; strangely, I prayed to the Christian God when I meditated, drawing upon Psalms and the Songs of Solomon mostly.\n\n\"I will not kiss you; you sex...sex...sex fiend!\" Rhaine shouted with disgust. I closed my eye and went back into my own little dream demi-plain.\n\n\"Get dressed,\" she insisted once more. I could keep this up for another eight and a half minutes. Finally, in frustration, she stalked up to the side of my bed, the other two in tow. \"If we need to, I'll escort you straight to the gymnastics facility where Coach Gorman can administer another lesson in humility.\"\n\nSince I hardly felt humiliated by our last encounter, I felt no necessity to slip out of my Center. My carpets were thin cast-offs from an earlier college epoch so they hardly aided any stealth attempt. Rhaine walked up to me, weighed her options, then pushed me lightly.\n\n\"Get dressed, Zane,\" she said, neither convincingly angry nor commanding.\n\nThat didn't work so she repeated the phrase and pushed harder. The third attempt used more strength but got the same results. Rhaine decided that her problem was in the application of force, not her message, so to increase her push, she placed a knee on the bed and pushed harder.\n\n\"Get dreee...\" she squealed as I fell over, grabbing her wrist and pulling her with me.\n\nI leapt on top of her even as she rolled from her stomach to her back. Rhaine's eyes were wide as I dove in for a kiss. Her lips were locked shut so nothing more happened. She was still struggling for words when Mercy and the other girl grabbed my arms and yanked me up and back.\n\n\"Get off of me,\" Rhaine shouted, a little too late to be effective or believable. Experienced leg-breakers usually keep their victim's arms up or to the side; they never stick them between their thighs. As it was, I was being pulled back on my knees, pinning Rhaine's shins to the bed and my hands merely inches away from their pussies. Was it Christmas already?\n\nSo much of life is about leverage of one kind or another and in this case, the leverage was all in my captor's favor, so I needed to change things up.\n\n\"Let go of me!\" I shouted, struggled, and slipped my hands higher up their thighs. I'm not going to win an Oscar but I did make Rhaine smile at my feigned discomfort, to the point she propped herself up and grinned wickedly at me.\n\n\"Now you are going to do what I say,\" she gloated.\n\n\"Oh, I don't think so,\" I grinned right back. I rolled my arms in my shoulder joints and launched my upper body toward Rhaine. For those fans of physics, when the shoulder goes down and they've made the elbow a pivot point, then the lower arm goes up...science is my friend.\n\nI rolled my fore- and middle finger into one stiff rod and prodded Mercy's and her partner's perineums. They yelped and pulled back, drawing my fingers onto their slits and along them until I flicked their slumbering clits. Their faces flushed crimson as they stumbled back and released my arms. This allowed me to descend on Rhaine unimpeded. Her mouth open in a surprised 'O', our lips met and then our tongues touched inside her mouth.\n\nI was quick enough to wrap my arms around her before her back hit the bed.\n\n\"Mmmmm\" she protested inside our oral embrace. \"Mmmm\" she mumbled, before...\"mmmm...\" she ended up moaning. I was a bit curious why Mercy and the as-of-yet named accomplice weren't all over this, breaking us apart, when I felt Rhaine's legs move from beneath me, to up my sides until they crossed over my ass and locked me in.\n\n\"Is that...your...I'm not sure what to call it...penis?\" she whispered between kisses. How she had become oblivious of her cohorts was beyond me.\n\n\"I prefer the term cock,\" I responded with great gentleness but with a hungry stare, \"but if penis works for you,\" I added with a slow, steady, downward pressure with my hips upon hers.\n\nRhaine groaned from deep within, her head lolled back, and her eyes became somewhat unfocussed.\n\n\"Ooohhh, yes,\" she mouthed, barely audible.\n\n\"Rhaine?\" Mercy inquired.\n\n\"Get...get off of Rhaine,\" the third girl said weakly. \"Please?\"\n\nSince she said please, I obliged. I flipped us over so that Rhaine was on top. I'm not sure how happy the girl was because Rhaine showed no haste in dismounting me, though we did stop kissing once more.\n\n\"Would you...would you please get dressed now,\" Rhaine panted. I would have been more impressed, and able, if Rhaine hadn't been humping me at the moment. Clearly, my cock had wedged itself right against her panty-covered love box, her lips divided and her clit rubbing along my shaft.\n\n\"You really are quite beautiful,\" I complimented her, as I brushed some loose hairs out of her eyes. Her face softened and she gave me her first compassionate smile. She also ground down on me harder, biting her lip as she did so. The two companions decided something...technically, it could be called a rescue mission, but I never really figured out who was being rescued as they grabbed my arms that encompassed Rhaine.\n\nThe unnamed girl grabbed my unresisting hand and pulled it to her chest and kept it pinned tightly there. Mercy made even less pretense of actually helping out. She grabbed my other hand and put it in her lap. This would have been minutely more believable if her skirt hadn't 'accidentally' ridden up her thighs so that when I curled in my fingers, my hand slipped between her thighs.\n\nAny guess as to what happened when I flexed them again? As best as I could tell (I was still dealing with a face full of Rhaine), she had raised her closest thigh to block her friends from seeing what she was doing and was thrusting my hand into her crotch like it was some sort of fleshy dildo...with the 'finger-tickler' function.\n\nHeavy breathing, five seconds grinding my hand in deep, fifteen seconds figuring out that I was working my fingers underneath the elastic bands of her panties, twenty-two seconds. After that, she spread her thighs open slowly and as wide as she hoped she could get away with without being caught. She remained absolutely still as I slipped two fingers underneath her virginal armor and into her cream-covered labia while rubbing my thumb against her clit from the outside.\n\nBack to Rhaine: \"I hope...ugh, ugh...you have learned...ugh, ugh, ugh...oh, God...your lesson...ugh, ugh...and we won't...Oooohhhhhh...have to force ourselves on...oh, yeah...ugh, ugh...you again.\" By this time, Rhaine had soaked her panties so thoroughly that she was making squishing noises as she rode me.\n\n\"If you give me one more kiss,\" I grinned at her, \"I'll do what you want and get dressed.\" I've rarely seen someone so arrogant and conceited so utterly baffled about what they should do. Obviously, if she kissed me and I stood up, we would stop having 'safe sex,' but she was truly, in her heart, trying to enforce her will on me too.\n\n\"Fine,\" I saved her, \"if you kiss me until I surrender to you, I'll go quietly and do what you say all day long.\" At no time was it ever discussed between us what it would take to make me surrender; she never gave me the chance. She grabbed my head with both hands and proceeded to suck the air out of my lungs and use her tongue to wrestle my tongue into submission.\n\nNo-Name Girl wasn't humping me like a kitten on speed or pretending I was blind and her cunny was Braille -- imparting knowledge by touch; she was playing the nervous virgin. I gave the slightest nudge toward her left breast -- she stopped me. I repeated the motion and she stopped me again. On the third try, she controlled my gradual migration over her breast and centered my fingertips over her nipple.\n\nMind you, I still had a face full of Rhaine so I couldn't see what I was doing, but I've had sex on moonless nights and I've even had sex blindfolded once (we both were and it was really fun), so I had some experience at sexual navigation by touch alone. I didn't grab, grope, or shake her orb around; I palmed the breast and slowly contracted the hand up, letting the fingers and thumb bring the areolas and nipple into a tantalizing squeeze -- then re-extend hand and repeat.\n\nHer nipple was pretty average but it soon made an appearance, so on the seventh stroke, I migrated my hand toward the middle of her chest. She groaned in disappointment until I tapped on two of her buttons rapidly before going back to the breast. She understood right off the bat and that shirt got unbuttoned in three seconds flat. Another squeeze and I rolled like a gentle breeze back to the sternum, under the shirt, and to her surprise, under the bra, and started tweaking the nipple and letting her breast roll in my palm.\n\nYou know, it would be easier to tell my friends from my enemies if they weren't both trying to fuck me to death. I guess all my girl-'friends' do it out of love; my enemies are trying to bring me closer to God...as long as I get there from outside the campus grounds. There are a million worse ways to die and I shouldn't complain; the most important point is that I do have friends after all.\n\nMaking the Most of Punishment\n\nI had barely gotten Nameless to suck two of my fingers and my thumb to slippery goodness and returned them to working her nipple when I heard someone not on the bed speak.\n\n\"Do you think we have enough footage now, Iona?\" Rio purred in a lethally seductive voice.\n\n\"In the words of the immortal Rio Talon,\" Iona recited, \"these bitches are toast.\"\n\nDedicated readers will recall how I once claimed that I didn't live in the real world; I lived in Crazy Town. I still do. Rhaine rolled off me, into Nameless, and they clutched each other to avoid tumbling off my bed. (I have a newer, far bigger bed on order for the very reason that I'm tired of lovely ladies nearly taking headers off my favorite sexual encounter spot.)\n\nRhaine was bosom to bosom with a girl whose shirt was wide open with one boob pulled out of her bra. My hand was yanked free in the exchange so I rapidly pushed myself into a semi-reclined position. Why was I not getting all the way up, you ask? Reference: Crazy Town - Mercy decided that being secretly included in a sex video was a huge turn-on.\n\nShe started riding my two fingers like they were a mini-cock and she was going off like gangbusters.\n\n\"Yes, yes, yes, yes...aaaaaaaaaaaahhhahhhhhhh.\" Mercy's whimpers kept rising in volume.\n\n\"Oh, here it comes,\" was Barbie Lynn's assessment, based on deep personal experience with me.\n\n\"Aaaahhhhhhhh,\" Mercy continued with even more vigor.\n\n\"Don't you worry, Barbie Lynn,\" Rio patted her on the shoulder, \"she's not nearly as loud as you are.\"\n\n\"Uh, uh, uh, uh, uh, uh,\" Mercy's whimpers became hiccups as I redoubled my efforts on her clitoris.\n\n\"She's no Leigh either,\" Opal pointed out.\n\n\"Ai, ai, ai, ai, ai, ai,\" Mercy began yelping louder still.\n\n\"What is he doing to her?\" Brandi gasped in wonderment.\n\n\"Ba, ba, ba, ba, ba,\" Mercy's diaphragm began building up a terrible tension deep inside.\n\n\"Ask him to show that to you in the shower tomorrow,\" Opal sighed, reliving her own tactile experiences under my care. \"I'm not fixated on his cock; if I can't have it, I'll settle for his hands and mouth on me whenever I can get it.\"\n\n\"MOTHER FUCKER!!!!!!\" Mercy's head rolled back and she howled at the ceiling, killing all conversation in an instant. Silence hung over the room.\n\nMercy started to fall forward but I caught her and let her drop onto my chest. I held her close until I felt her breathing start to come under control. She pushed up enough to look at me with eyes brimming with tears.\n\n\"I'm ruined,\" she told me in a tired, raspy voice, then put her face into my shoulder and began wailing uncontrollably. \n\nI stroked her back and hair with my free hand. My other hand was covered in Mercy's fluids, and while some chicks might get off on being covered in their love juice, I doubted Mercy was into that kink; and besides, she was in her school uniform.\n\n\"You are fine,\" I cooed. \"No one is showing that video to anyone so you are safe. You are one of us and we'll protect you.\"\n\nThat last bit was pulled 'outta my ass' so to speak. Every one of my friends up here had their own idea what our relationship was about and I could hardly speak for any one of them, much less all of us.\n\n\"Speak for yourself, Numnuts; I'm going to sink these skanks,\" Rio growled.\n\n\"Rio -- please,\" I requested in a calm and tender voice. She glared back with ill-concealed rage.\n\n\"Do you have any idea what these bitches have been doing to me and the other freshmen?\" Rio spat back.\n\n\"Only the vaguest. And I am not saying they shouldn't make amends but there are two things we should consider,\" I began. \n\nIt is a testament to how close Rio and I had grown that she permitted me to continue talking uninterrupted.\n\n\"If we turn them in, we are precisely the type of people they think we are, immoral degenerates. This is supposed to be fun and liberating; if we start breaking people because they cut loose, actually express themselves and have fun, we become what they are and what we despise. I'll leave first,\" I told her.\n\n\"Also, as strange as it sounds -- probably more to you and me than anyone else on campus -- we are Christians,\" I continued. Rio scoffed and clearly thought I'd lost my mind -- or sold out.\n\n\"You don't bend, Rio. You know right and wrong, and while you often choose wrong, you don't make excuses about it, and I've never had a better friend because I know you mean what you say and say what you mean, no matter how cutting,\" I explained.\n\n\"You have clearly lived a socially deprived life...\" Rio taunted me, but her words cracked under her emotional turmoil \"...if I'm what you consider to be a good friend, you stupid bitch moron cocksucker.\"\n\n\"Let's put it to a vote,\" Iona volunteered the notion.\n\n\"I think that's a good idea,\" Barbie Lynn stated, with Brandi and Opal agreeing.\n\n\"Fine, whatever,\" grumbled Rio.",
        "\"Okay. We are voting on whether or not we use the video as leverage against Rhaine, Mercy and...\" I looked to the nameless girl.\n\n\"Joy,\" she provided. \"Joy Jefferson.\"\n\n\"Okay, and Joy Jefferson,\" I finished. \"I vote 'no'.\"\n\n\"I vote 'No',\" Barbie Lynn went first, but Iona was right behind her with the same vote.\n\n\"I'm actually with Rio on this one,\" Brandi said. \"They are trying to get rid of Zane. I vote 'Yes'.\"\n\n\"I vote 'Yes' as well,\" Opal agreed. \"They shouldn't even be in our dorm or in Zane's room.\" The most surprised person in the room was now Rio. She clearly expected all the girls who had 'fallen under my spell' to do what I said, leaving her to be in the too familiar spot of being the Odd Woman Out.\n\n\"I vote 'Yes' for both those reasons,\" she beamed hate at Rhaine, \"plus I am Evil and I want your parents' heads to explode when they see you humping a guy in his dorm room while your lesbian buddies hold him down.\"\n\n\"It is a tie,\" Iona pointed out. \"What do we do now?\"\n\n\"It isn't a tie,\" I countered. \"Not every FFU student has voted.\"\n\n\"Oh, fuck no,\" Rio snapped. \"They don't get a vote. I'll run and get Cappy and she'll sink their asses.\"\n\n\"Okay,\" I told her. \"I'm sure you can relate to having your fate boned by forces beyond your control. You go out and get as many people as you think are necessary to get them expelled and possibly tossed out by their parents. Take your time; there is nowhere they can run.\" \n\nRio got halfway down the stairs before she came storming back up in a fury that would make a tornado proud.\n\n\"Move, Bitch,\" she screamed at Mercy. I pushed Mercy out of the way because I knew what was coming while she had no clue. I scooted to the edge of the bed closest to where Rio was charging. SLAP! Oh, fuck, that hurt.\n\n\"You motherfucking, cock-smoking, son of a bitch,\" she seethed. SLAP! resounded from my other cheek. \n\nI caught a glimpse of Iona coming to my aid but she was corralled by Barbie Lynn in time. Opal looked concerned and Brandi was totally stunned.\n\n\"Don't you ever talk to me like that,\" she screamed -- SLAP! \"I am not the Better Person. People fuck with me and I make them burn! Do you hear me?\"\n\n\"I understand,\" I responded with quiet, sincere intensity. Rio hauled off to hit me again and stopped.\n\n\"Give them to me, Zane. Don't fight me on this. You'll be sorry,\" she threatened.\n\n\"I'm doing this because I am your friend, Rio. From 6:00 a.m. on Day One, it has been you and me, and in four years when we earn our release, it will still be you and me,\" I related.\n\n\"I don't fucking need you or your fucking pity, Shit For Brains,\" she growled.\n\n\"Did it ever occur to you that I'm doing this for me, not you?\" I explained. \"Look around you right now; mostly really special people but none of them have lost their family and been sent off to live in exile.\"\n\n\"My family is not dead, Zane,\" she replied, her anger misting away like fog before the Sun.\n\n\"They may live and breathe but you lost them some time ago just the same,\" I prodded her. Rio said nothing for the longest time, then a lone tear escaped down her cheek.\n\n\"Sorry, Bro,\" she stroked my tenderized cheek.\n\n\"I'm seriously awake now, if that's any consolation,\" I smirked.\n\n\"Smart ass,\" she chuckled back.\n\n\"Are they okay now?\" I overheard Brandi asking the other three girls on my side.\n\n\"Oh, they are fine, Brandi,\" drawled Barbie Lynn. \"They are like feuding twin brother and sister...somewhat incestuous, mind you, but they are about as close to kin, without being kin, as anyone I've ever seen, save Christina and Heaven.\"\n\n\"Rio?\" I requested once more.\n\n\"Fine, the dumb bunnies can vote,\" she snarled, \"but I am praying to God they screw it up anyway.\"\n\n\"How do you ladies vote?\" I looked to Rhaine but addressed them all.\n\n\"Um, 'No',\" Rhaine said quietly. When no one said anything, Joy rapidly agreed. That left everyone looking at Mercy not that her vote mattered to the final outcome; Rhaine and company were safe by at least one vote no matter what.\n\n\"I,\" sniff, \"okay, yes,\" gak, \"I mean No!\" she corrected, then added, \"thank you.\"\n\n\"The Noes have it; the video will be archived, not to be seen again until my funeral, which might convince Rhaine to let me live in peace,\" I teased. The three seniors sighed with relief.\n\n\"Now for the punishment,\" Barbie Lynn pronounced.\n\n\"What?\" Rhaine blanched. \"I thought we covered that. Are you going back on your word?\"\n\n\"No,\" Barbie Lynn smiled. \"The video is out of bounds but there is still the matter of this being my dorm and me finding you in one of my student's rooms sexually molesting him. Re-read the Handbook if you doubt me or my authority, Rhaine.\"\n\n\"We were told to be here by Dean Gorman,\" Rhaine countered.\n\n\"Coach Gorman told you to go into Zane's room, sit on his lovely piece of male reproductive perfection, and ride it like you were in the Pony Express?\" Barbie smirked. Rhaine, Joy, and Mercy realized that they had no plausible defense and too many witnesses.\n\n\"What about you all being here?\" Rhaine reposed desperately.\n\n\"We heard his cries for help,\" Rio beamed. \"I think Zane's cries went something like, 'Help, help, I'm trying to remain pure but these scantily clad babes are tearing off their clothes and partaking of my muscular, well-toned man-flesh'.\"\n\n\"But that's a lie,\" Rhaine wailed.\n\n\"Rhaine, we just salvaged your college career, if not your entire life, and you are worried about Rio's colorful recreation of events?\" I inquired. \n\n\"What is the punishment?\" I looked to Barbie.\n\n\"Spanking,\" she declared. \"Three swats from each of us should do it - barehanded.\"\n\nRhaine, Joy, and Mercy looked unhappy but not horrified. They looked decidedly less happy when Rio perked up.\n\nMorphing Intentions\n\n\"Iona goes first,\" Rio said gleefully. \"And it has to be on the bare, naked bottom -- no panties; three spanks from each of us on each of you, no more than three minutes between the first and last.\"\n\n\"No way,\" Rhaine snapped. She moved to the edge of the bed and stood up.\n\n\"Fine. Let's go to Gorman's office right now,\" Barbie Lynn declared. \"Zane, you come along as soon as you get dressed.\n\n\"I'll do it,\" Mercy sniffled. \"I'll take my spanking.\"\n\n\"Me too,\" Joy joined in. Rhaine looked around for some lifeline but there was none.\n\n\"Very well; let's get this over with,\" Rhaine conceded. The three girls took off their panties...which probably needed replacing anyway...turned around, bent over, and put their hands on the bed.\n\n\"No, no, no,\" Rio denounced their efforts. \"All three of you, on the bed, hands and knees with your knees at the edge.\" When Rhaine looked ready to object, \"You agreed to this, Ladies. It is this or else!\" The Condemned looked at one another, then slowly obeyed, but Rio wasn't satisfied. She pushed their tushes around and forced them to spread their legs farther apart and generally harangued them until she was happy with the arrangements.\n\nIt didn't take a 'Dr. Ruth' to figure out what Rio was really doing but the three victims, plus Brandi and Iona, had no idea what they were in store for.\n\n\"Iona, you first; give them something to remember you by. I'm next, followed by Barbie Lynn, Brandi, Opal, and Zane bats clean-up,\" (snicker) Rio directed.\n\nBarbie Lynn walked down the line, lifting up each skirt onto their back while I scrambled off to get dressed. (Okay, I walked six feet to my wardrobe and dresser.) Iona stood somewhat timidly behind Rhaine, took a deep breath, and...did a rather lukewarm smack. As soon as it fell Iona flinched, and she looked over to a glaring Rio.\n\nThe next smack was hard enough to make Rhaine give a startled jump but not really cruel. The third, on the other cheek, was about as forceful. Iona stepped down the line and administered her share of the punishment. When she shuffled over to Rio, she looked embarrassed.\n\n\"I'm sorry, Rio. I'm not sure about all of this. I don't want to hurt them,\" she explained.\n\n\"It's cool,\" Rio soothed her. \"You did exactly what I wanted you to do. Now,\" and whispering followed. Iona shrugged, raided my towel shelf, and headed downstairs quickly. Now it was Rio's turn. She walked up behind Rhaine, knelt between her legs, pressing them apart.\n\n\"What the...\" Rhaine began.\n\n\"Shut up and take it!\" Rio growled with such menace that Rhaine turned forward and lowered her head in shame. When Rio placed a hand against Rhaine's rump, it wasn't in anger, though, but to rub it softly.\n\n\"Very soft,\" Rio purred sensually. \"Did Iona hurt you?\"\n\n\"Ah...not too bad,\" Rhaine stammered, confused by Rio's sudden affection.\n\n\"I see a handprint,\" Rio told her. She was seeing something the rest of us were missing was all I could think. She leaned in and kissed that invisible mark, which caused more of a reaction than any of Iona's slaps.\n\n\"Hey, what are you doing?\" Rhaine squawked. SLAP! \"Ow!\" cried Rhaine. She tried to pull away but Rio grabbed her hips with two hands and pulled back.\n\n\"You agreed to this,\" Rio threatened her. Rhaine shuddered but she stopped trying to escape. \"Are you going to behave so we can get this over with or do we need to make up an excuse for why we missed breakfast?\"\n\n\"Fine, fine, let's get this over with,\" Rhaine said dejectedly.\n\n\"Good girl,\" Rio cooed. She began massaging Rhaine's right ass cheek with one hand while holding tight with her left hand on Rhaine's left hip. Rio placed a kiss on the cleft between the thigh and ass; Rhaine gave a tiny gasp, twitched, and tried to incrementally pull away.\n\nRio was having none of that.\n\n\"Bad girl,\" she murmured, but there was no slap this time. Instead, she slithered between Rhaine and Joy and whispered into Rhaine's ear. \"Would you please get on your elbows, Sweet Rhaine?\"\n\nI'd have bet money that Rhaine would have shot off her mouth if not physically resisted, but Rio was Mistress of the Moment and Rhaine meekly complied. Rio was so dominant, she even kissed Rhaine's ear and nipped the earlobe before resuming her station at Rhaine's posterior.\n\n\"Is this punishment?\" Brandi whispered.\n\n\"Just you wait and see, Brandi,\" was my reply. Rio reached out with her hands, separated her butt cheeks, and soaked in the view. Right when Rhaine started to look underneath herself, Rio pushed her face into her cunt and made a loud sucking sound.\n\n\"AH!\" Rhaine gasped, startled yet aroused.\n\n\"Mmmm,\" Rio slurped, as she rubbed her face deep into Rhaine's Love box. I recognized the tongue technique of darting deep into the vagina, alternating with a vigorous suction of the clitoris. Instead of trying to get away, Rhaine went from resting on her elbows down to her chest touching the bed, her arms crossed, and her head resting on them. SLAP!\n\n\"OW!\" Rhaine whined, \"That hurt.\" Rio was too busy giving Rhaine's cunt a world class swirly so it fell to Barbie Lynn to explain.\n\n\"That's why it is called punishment, Rhaine,\" she said, but Rhaine was already moaning in ecstasy. A thin sheen of sweat had just started covering Rhaine's exposed flesh when Iona returned with a wicker basket full of wet cloths.\n\nI was buttoning my shirt and enjoying the show when I caught Joy and Mercy studying Rhaine with some concern and exchanging worried glances with one another. Rio seriously worked over Rhaine's pussy for another minute, then launched one more stinging slap. This time Rhaine screamed into her arm instead of out loud and didn't protest.\n\nRio stood up and kissed the small of Rhaine's back.\n\n\"You have one hot cunt, Bitch. I look forward to tearing another piece of you off later,\" Rio told her, voice heavy with heated passion. \"Iona -- towel.\" Iona tossed her a towel; Rio caught it one handed and used it to wipe off her face. She smiled at Barbie as the blonde came up and knelt behind Rhaine.\n\nBarbie Lynn's first spank was hardly brutal but it did get Rhaine's attention. She then began kissing each cheek as her hands parted the Senior Class President's (presumptive) butt cheeks. Her attentions wandered between the twin sets of firm muscle, her tongue flicking along Rhaine's pink, puckered star.\n\n\"Gak!\" Rhaine gasped. She followed it up with a serious tremor throughout her body. Barbie Lynn glanced over to me, gave me a devilish grin, and flexed her eyebrows in sheer delight. Barbie returned to Rhaine's rump and set to work using her extensive skills on her pussy, parting her lips with the fingers of one hand, pinching her clit between the thumb and forefingers of the other hand, and licking along her entire slit with her tongue.\n\nBetween Joy's thighs, Rio was putting on a performance that would make Jenna Jameson proud, maybe even envious. Apparently her teenage exploration of the Arizona nightlife had not been the waste of time her parents thought it was. I doubt it mattered to Joy, who was already pushing her ass against Rio's face. On this victim, instead of spanking, Rio was biting her ass hard enough to leave marks and make Joy squeal.\n\nTwo minutes into this round, Rhaine lost it and squirted all over Barbie Lynn's face. This was apparently her first squirter because Barbie tried to back away from the eruption, which only guaranteed that it splashed all over her body from eyebrows to both bodacious breasts.\n\n\"Rhaine,\" Barbie Lynn scolded her fellow senior, \"you could have warned me.\"\n\nRhaine didn't respond; her face nestled down on her arms and her whole body wracked with waves of orgasmic bliss and her lungs fighting for air - she was in no state to respond. As Barbie stripped off her shirt, I gave her a washcloth and one of my white shirts. I tossed Rio her second cloth of the morning and motioned Brandi forward.\n\n\"She's...she's still having her orgasm,\" Brandi questioned.\n\n\"That's why this is called punishment,\" I explained with a knowing smile. Brandi opened her mouth in surprise, followed by understanding, and then a race to get between Rhaine's legs and take her first lick of Rhaine's quivering quim.\n\n\"Aaahhh...aaahhh...aaahhh... Barbie Lynn...I've...\" Rhaine finally articulated \"...never done that before, I swear. I am sorry.\" That was all she could muster; right after that, her fists crumpled up the quilt on my bed and she bit down on the folds in an attempt to stifle the increasingly slutty moans Brandi was bringing forth.\n\nBarbie Lynn decided not to put on my shirt, maybe not comprehending that her lacy beige bra had been rendered virtually transparent by Rhaine's ejaculate. Besides myself, Opal was also fixated on the view of her pendulous orbs and gorgeous engorged nipples. The blonde took a different approach with Joy. She lifted up the girl's hips, elevated her to the point Barbie could lick her from pubic mound to ass and back again.\n\nI knew Barbie Lynn was strong, but I'd never exploited that quality in that manner. I made a note for experimentation tomorrow night.\n\n\"No, no, no, no,\" Joy repeated in a desperate effort to fight off the sensations that were pulsating in an irresistible current surging up from the wellspring of her womanhood. \"I can't do this,\" she sobbed. \"Lord, please save me.\"\n\nI hurried around the bed and slid beside Joy's head. I took her by the chin and made eye contact.\n\n\"Joy, if you really want this to stop, it will end right now,\" I promised her, though I was sure I was getting a dirty, if unseen, glare from Rio. \"You gave your word but if you honestly believe you have been punished enough, take my hand and I'll escort you out of here.\"\n\nI offered my hand to her and she stared at it.\n\n\"Get me out of here,\" she panted, tears trickling down her cheeks and gathering at her chin.\n\n\"No, you get yourself out of here. Give up and agree to leave Mercy and Rhaine to take the punishment you agreed to.\" \n\n\"Take my hand, abandon them, and I'll clean you up and escort you back to the fifth floor. That will be the end of it and nothing more will be said,\" I defined my terms. Barbie Lynn was still going to town on Joy's clit and the poor victim so desperately wanted to escape her nearly impossible battle with her own incendiary sexuality, which was no longer begging for release but tearing its prison down brick by brick.\n\nJoy almost reached my hand but fell short at the last moment.\n\n\"God forgive me,\" she wept. He breathing began spiraling out of control. \"Ugh, ugh, ugh...oh, please, stop...I beg...beg you.\" Divine intervention or not, Barbie Lynn's session ended and Joy was given breathing room. She even had a moment to look up at me and give a weak smile as if she had gained some small triumph.\n\nHer self-deception was made evident to her the moment Brandi exploded onto her scene. What the girl lacked in technique and experience, she more than compensated with raw, hungry enthusiasm. Joy's eyes grew as wide as limpid saucers, \"Oh, No!\" she wailed. Gurgling came next, and finally, \"This can't be happpppeeennnniiiiinnnng. God Forgive Meeeeeeeee!\" and what may have been her first sexual climax.\n\nShe did grab my hands then and pulled them to her. Her face was slack, her mouth open and panting, and her eyes had this far-off look, so I lowered my lips to her face and licked her lips before settling my lips on hers and basically coaxing her tongue as it struggled to deal with several more waves of orgasm. I kept her kiss going with the occasional rest break so she could continue to breath.\n\n\"Thank you,\" she whispered to me as she started to stabilize.\n\n\"We FFU have to stick together,\" I both reminded her and boggled her shaken mind at the same time. Half an hour ago she had no doubt I didn't belong here and wasn't really FFU material, male and immoral. In her regard for me, I could see her blind acceptance of traditional FFU dogma weakening.\n\n\"I've got to go now; it is almost my time to start punishing Rhaine,\" I softly informed Joy. Her hormone-trampled mind struggled to grasp that she was halfway through her torture. Brandi would finish soon, then it would be Opal, and then it would me, a male; me, face first at the gateway to her sacred womb. \n\nHer virginity would be spared from extinction by my will alone and I could tell that scared the hell out of her. She'd been chosen for her belief that Zane was a corrupter and that extraordinary measures were necessary to drive him out...no matter how sinful they may appear...and now she was face down and bare ass up, surrounded in his room by him and his friends. The most terrifying thing of all may well have been that we had made her feel more like a woman than she'd ever felt before.\n\nWhere Rhaine had divorced her feelings and pleasure from her grasp of reality, and Joy was beating herself up every step of the way, Mercy had completely submerged herself in the transformation her body was going through. Mercy had already experienced one orgasm and come crashing down into doubt and self-loathing, only to be shown that her life wasn't over and no one thought the worst of her for actually enjoying sex.\n\nShe didn't feel like a tramp or a slut; she felt alive and burning bright, so when Rio gave her that first hard spank, she'd moaned instead of crying out, and when the 'felon' gave her first few licks, Mercy reached under her body with one arm and started rubbing her slit in tandem with Rio's face dance. Even Rio's snicker didn't dampen her ardor, and when Rio took Mercy's hand and pushed two of Mercy's fingers deep in, Mercy thrust back with her hips so that her fingers touched her hymen.\n\nWhen Rio pulled Mercy's hand out of her twat, Mercy whimpered in need, but when she felt her fingers go into a different damp, warm orifice, she stopped, and when Rio's mouth started sucking the juices off of those fingers and twirling her tongue around each individual digit, Mercy couldn't help herself from wiggling her hips like a bitch in heat.\n\nWith the fingers clean, Rio inserted them, along with two of her own fingers, back into Mercy's cunt, extremely stretching it out. Rio then came around the far side of Mercy, away from the others, and whispered into her ear. Later she related what was said:",
        "\"You like that don't you?\" Rio teased. Mercy nodded vigorously. \"Come to Zane's room tonight and I'll fuck you all night long. You'll be my bitch. Do you understand that?\" Another vigorous nod. \"I've got to leave you soon to these other girls and Zane, but don't you forget you are mine now; my property, my mate. Don't make me hunt you down and put my brand on your ass -- clear?\" One final, excited nod.\n\nI live in Crazy Town. On par with that information was the fact that I had promised the night to Heaven and I had no clue how in the hell that was going to work out. My bed barely held three people -- four was asking too much. If you made one of those people Heaven with her secret, the term 'impossible' came to mind.\n\nAt the start of the line, Opal met Rhaine. She landed two very loud, wet smacks on Rhaine's behind, causing the senior to rock forward. Having gotten most of the 'cover story' (the spanking) out of the way, Opal rolled Rhaine onto her back with only the weakest of protests. She started a few gentle teases and kisses with her lips to Rhaine's cunt while Rhaine's legs dangled off the floor.\n\nOnce she got Rhaine back into an erotic state, Opal began lifting Rhaine's thighs up and out until she'd pushed Rhaine's knees almost back to her breasts and feeding like a ravenous succubus on every inch of thigh, cunt, ass, and stomach. Opal hadn't been gentle with Brandi, but she'd been absolutely gentle, kind, and caring compared to the treatment Rhaine was getting.\n\nRhaine held it in as long as possible but when she cut loose, she cut loose in a big way. Her fists pounded the bed repeatedly, her head swept back and forth, and her lower torso kept thrusting off the bed and into Opal's mouth, lips, and tongue.\n\n\"Damn!\" she screamed through clenched teeth as her body expended one last spasm.\n\nOpal succeeded in catching most of Rhaine's fluid eruption, rolled the heavily panting Rhaine to one side, and administered the proscribed last spank.\n\n\"You're up, Zane,\" she winked with a smile, before cleaning her face and moving on to the nearly as devastated Joy. I settled between Rhaine's legs and began administering kisses.\n\n\"Please, Zane,\" she begged, \"it hurts. I'm so sore. Please just spank me.\"\n\n\"Sorry, I can't do that,\" I told her sternly. Rhaine closed her eyes and muttered some kind of prayer, though she made no attempt to shield her body from me. I doubt she even knew I was lying beside her until my first kiss played upon her eyelids.\n\n\"You are not going to...to me?\" she inquired with a desperate hope.\n\n\"No. I'm going to spank you so hard you can't sit for a week,\" I threatened, \"unless I forget my three-minute time limit. I can't imagine what would possibly distract me, though.\" It took Rhaine's sexually fatigued mind a moment to catch on but when she did, she clasped her hands on either side of my face and kissed me with an inspired intensity.\n\nI let my fingers play along her breastbone and stroke her breasts through her shirt and bra. About a minute into this little game, I discovered Rio leaning over us, clearing her throat.\n\n\"This monster made us jump out a second-story window,\" she stared intently. Fear crept back into Rhaine's eyes as she glanced from Rio to me.\n\n\"I am biting her tongue, I promise,\" I grinned.\n\n\"I'm not joking, Zane,\" Rio warned me.\n\n\"Fine,\" I groaned. \"Rhaine, roll toward me,\" I instructed, as I propped myself up, and she reluctantly rolled toward me. I put a hand on her hip, hiked up her skirt and rolled her farther to me until I got a good look at her rump.\n\n\"Rio, take a look at this, please,\" I motioned to Rhaine's butt. Rhaine blushed and lowered her head. I doubt having her ass naked and on display on my bed was what she intended or even imagined possible when she got up this morning. I ran a hand along her spine to the cleft between her cheeks and squeezed the upper one tightly.\n\n\"This is a thing of beauty,\" I told Rio, but clearly wanting Rhaine thinking about what was being said. Rio knew me too well to think I'd turn that butt cheek red so she took the other path. Rio reached out and stroked it too.\n\n\"Okay, Zane; it is damn sexy,\" Rio acknowledged grudgingly.\n\nI took Rhaine's hand in my own and placed it on her side, just below the ribs, and led it in a wandering trip to her lower back, then to the cheek I'd displayed to Rio.\n\n\"See, Rhaine, you have a fantastic ass. God knew what he was doing when he made you,\" I told her. \"It is a pity we can't see you in shorts or a bikini from time to time.\"\n\n\"That is sinful and leads men into the Sin of Lust,\" Rhaine said with absolute conviction. \"This is the work of the Devil, not God.\" Rio ground her teeth but I grinned.\n\n\"Did God create the male peacock?\" I questioned, while I kept hold of Rhaine's hand and stroking her ass from tailbone to the dip into the bottom of her sopping wet pussy.\n\n\"Yes,\" she cautiously replied, her breath coming faster and faster.\n\n\"Yet we don't run around putting them in garbage bags because they are enticing to the eye,\" I reasoned. \"You make it sound like it isn't a man's fault that he can't control his own impulses, even though he is supposed to lead his household.\"\n\n\"God made you beautiful and he made me with will enough to look at you and respect any decision you make about your body,\" I hammered away. \"I'm not going to say I don't want to have sex with you because that would be a lie, but the important thing to me is that you took a Purity Pledge and I have to respect that.\"\n\nRhaine had nothing to say at that moment. I was clearly a randy bastard who preyed upon good Christian girls and tricked them into surrendering to my dark desires.\n\n\"You are trying to trick me,\" she panted, while I leaned in and kissed her neck and ear.\n\n\"Rhaine, I've been trying to avoid you since we first met. You are the one who cornered me in my dorm,\" I pointed out. \"You came into my room when you knew I was either naked or getting dressed. You chose to crawl onto my bed when I was sitting down, meditating and clearly naked. I was hoping my blatant sexuality would make you leave me alone, not attack me.\"\n\n\"Don't blame Rhaine,\" Rio joked to me. \"Rhaine, Zane's like sex candy,\" she directed to Rhaine. \"You won't be the first bunch of Christian bitches we've had to rescue Zane from. It is not his fault; it is ours. He's masculine, kind, and available. You know that he has been in three fights since coming here; right?\"\n\n\"Uh...uh...uh...yes,\" Rhaine panted. \"It makes him dangerous -- he's a man.\"\n\n\"Really?\" Rio chortled. \"Two of those fights were to save me from you ladies, and he stopped fighting the moment I was safe. The third fight was caused because two of our girls were being set upon by those University guys and Zane put his body in the way -- they hit him first.\"\n\n\"I...is this true?\" she said with a heavy breath.\n\n\"Ask Mercy to tell you the truth, not what they've told her to say. Ask Cappadocia about that first fight and the fight off campus. You may not like Iona but she wouldn't lie to you and she knows how that second fight started,\" Rio sounded so reasonable.\n\nI slowly rolled over onto Rhaine while I kissed her neck and shoulders.\n\n\"Aaahhh...ewwww...yes,\" Rhaine cooed passionately. \"Tricking me...\" she sighed but that didn't stop her from slowly moving her arms and legs around me.\n\n\"Do you want to be on top?\" I whispered to Rhaine.\n\n\"I...uh,\" she stammered, then nodded. We rolled to the very foot of the bed and started a serious make-out session. I began rubbing down her mid- and lower back for a bit before moving to her ass cheeks and giving them a firm squeeze.\n\n\"That doesn't hurt too much, does it?\" I asked compassionately.\n\n\"Mmmm...no, feels good,\" she managed to get out between kisses.\n\n\"Okay,\" Rio smirked as she tapped Rhaine's shoulder. \"Tap out; your time is up. Now get off my bitch (meaning me). He's got two more of you to go through before we can leave.\"\n\n\"Huh? What?\" Rhaine sounded confused, then, \"it's over?\" Her eyes betrayed how little she wanted this to stop right now.\n\n\"Good,\" Rhaine sighed sadly. She began sliding down my body. When she saw that I was rising slower than she was receding, Rhaine waited until our lips met before continuing. We remained lip-locked until we stood up, my hands cupping her ass (now covered by her skirt once more) and her arms wrapped around my neck.\n\n\"Have you learned your lesson?\" I inquired when we finally came up for air. Rhaine looked at me for several seconds, unsure what to say.\n\n\"Joy's waiting,\" Barbie Lynn reminded us both. Rhaine let her hands drop to her sides and stepped back. Barbie Lynn pressed something into her hands which turned out to be a fresh pair of panties. \"I doubt you want to put on your old pair,\" Barbie Lynn pointed out, \"and these are fresh out of the bag.\"\n\n\"Thank you, Barbie Lynn,\" Rhaine said with embarrassment.\n\n\"Here is a washcloth,\" Iona added as she handed one over.\n\n\"You can go behind my wardrobe to change,\" I offered. The thought of any of the girls going behind a veil to avoid exposing themselves as they cleaned up and put on underwear might appear pointless, but after everything those three had gone through, handing them back a piece of their dignity was a kindness we could all afford.\n\nRhaine disappeared from sight and I turned to Joy. Opal was still giving her a seriously hard time despite the time limit expiring and gave me a wink as she went to displace Brandi on Mercy. I put a knee on the bed and lifted Joy up. She squealed but didn't squirm and I carefully maneuvered her onto her feet.\n\nI held her tight while she reoriented.\n\n\"Are you okay?\" I voiced my concern. Joy gave a brief nod. \"Are you ready for your last punishment?\" Joy looked me in the eyes, then gave the tiniest acknowledgement. \"Now stand on your tiptoes, put one hand around my neck, and use the other to hold up the back of your skirt while you press tightly against me.\"\n\nWhen she had done as I directed, I looked deep into her eyes. I spanked her cheeks...left-right-left...drawing forth a sharp breath, gritted teeth, and tears brimming in her eyes. I had not been gentle but sometimes a person needs punishment to forgive themselves for feeling good about something they've been told is wrong. That was the pop psychology I was running on at the moment. If I got it wrong, forgive me; I'm only eighteen.\n\nNo sooner had Barbie Lynn and Iona supplied Joy with her parting gifts did Mercy howl. Her further outbursts were muted by her grabbing my much abused pillow and using it as a muzzle. Her body tensing and recoiling time and again was both frightening and erotic combined, and I was suddenly trying to remember if anyone close by knew CPR.\n\nOpal fell back on her butt and looked at the rest of us.\n\n\"That was wild,\" she smiled, and licked her lips, \"but I think I need to go change.\"\n\nI helped Opal stand and we exchanged a rich yet messy, sticky kiss.\n\n\"Best intervention ever,\" Opal joked with me, then skipped off down the stairs. I turned to Mercy and plopped down beside her. A quick examination showed a sweaty, tired young lady with a sensual smile on her lips.\n\n\"I think she's had enough, but\" ...I swatted her butt lightly three times and stood up. \"Breakfast anyone?\" "
    ],
    "authorname": "FinalStand",
    "tags": [
        "college",
        "humor",
        "fingering",
        "tease",
        "spanking",
        "lesbian",
        "group sex",
        "cunnilingus",
        "punishment"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/christian-college-sex-comedy-ch-09"
}