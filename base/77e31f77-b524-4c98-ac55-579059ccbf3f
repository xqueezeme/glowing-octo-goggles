{
    "title": "A Boy's Last Summer",
    "pages": [
        "This is my entry for the summer writing contest. Please remember to vote at the end and I hope you enjoy the story!\n\n-------------------------------------------------------------\n\nBeing awoken by his alarm clock was usually bad enough, when his mother got in on the act it was often decidedly worse, and on this particular morning, David Cross enjoyed the distinct displeasure of both things happening. The first, because even though he had graduated the night prior, he had forgotten to switch the alarm off and it did its duty by trying to wake him for a non-existent school day. The latter, because he had left his cell phone sitting on the kitchen counter after staggering in from a graduation party at four a.m.\n\n\"David! This silly thing has rung at least four times in the last hour. Why don't you try answering it!\" snapped his annoyed mother after she burst into his room unannounced.\n\n\"Jesus, Mom! What time is it?\" he grumbled from beneath the covers. \n\n\"11:00 A.M., and high time you got up,\" she replied, tossing the phone onto his bed and going over to raise his blinds. \n\n\"Holy crap!\" moaned David, who caught a burst of sunlight even through the sheet covering his eyes.\n\n\"David! Language!\"\n\n\"Sorry...\"\n\nHis mother moved off muttering to herself what sounded like a list of grocery items. \n\nDavid stayed in his bed and slowly lowered the covers. He drew in a breath as his eyes adjusted to the light feeling the urge to continue sleeping drain away. The phone on the bed seemed heavier than usual as he lifted it in one hand just in time for it to ring loudly, nearly startling him into dropping it. The name flashing on the display said \"Christopher Michaels,\" and David answered the call with a sigh.\n\n\"Good news travels fast,\" said David in a voice still tinged with exhaustion.\n\n\"So it's true,\" came the voice from the other side of the call. \n\nThe voice belonged to one of his best friends, and the only one not to attend the party the previous night. \n\n\"How are you taking it?\"\n\n\"How am I taking my girlfriend of almost three years dumping me on graduation night for the guy I hate the most on the planet? Gosh, I don't know, Chris, how do you think?\" \n\n\"I know, that was seriously cold. She could have at least waited until after the party.\"\n\nDavid's heart already seeming like a lead weight in his chest gained a few more ounces sinking toward his feet.\n\n\"Yeah, I had to stand there and pretend like it wasn't bothering me while she and Alex hung all over each other.\"\n\nHis mind drifted back to the festivities he had attended after graduation. Everything had started wonderfully. The party had been thrown at his friend Stacie's house. Her parents had a gigantic, multi-story dwelling just outside the city and after the usual dull high school graduation ceremony at Randolph High, seemingly everyone he knew had gathered there to celebrate. It should have been the pinnacle of his young life, but within a short time of his arrival, the whole thing had gone down the tubes in a big way.\n\nHe had been standing in Stacie's large backyard talking to her about her plans for the summer when his girlfriend, Heather Andrews arrived. She was looking beautiful as always, her curly blond hair falling around a small, round face highlighted by a cute upturned nose, and brilliant blue eyes. They had been dating ever since hooking up for the first time the summer before their sophomore year. \n\n\"Excuse me, Stacie,\" he had said, politely stepping away from her and going over to join Heather on the back porch. Stacie's parents had set up several tables covered with snacks, and Heather stood by the bean dip looking at him nervously as he approached. \n\n\"Hey, Gorgeous. Where have you been all my life?\"\n\nThis ridiculous come on would ordinarily have rated at least a small giggle from his usually gregarious girlfriend, but tonight she only frowned.\n\n\"David...I wanted to talk to you before the party, but you left the graduation so fast.\"\n\n\"Sorry about that. Kevin needed a ride and wanted to stop by his parents so he could change before we came over here,\" he explained while moving closer, trying to get his arms around his girlfriend's waist even as she slipped back a step avoiding his move.\n\n\"Is there something wrong?\" he asked, not understanding her sudden skittishness around him.\n\n\"David, I wanted to tell you this in private before the party. You know...I care a lot about you...\"\n\n\"You love me. That's what you've always said,\" cut in David.\n\n\"I do love you, but...\"\n\n\"But?\" said David raising an eyebrow while a feeling of dread started to spread through his body.\n\n\"I...We...didn't mean for it to happen, but we got put on this project for Economics, and we started to spend so much time together...one thing led to another...\"\n\n\"Wait! Who are we talking about? Did you meet someone else? What's going on here?\"\n\n\"David...I\"\n\nBefore Heather could explain further, a third person joined them on the porch. He was taller than David by a couple of inches, which was saying something because David himself was six-foot-one. The other boy had tight, curly black hair with a dark complexion consistent with his Italian heritage, and an arrogant smile that David had considered knocking off his face more than once.\n\n\"I hope I'm not interrupting anything?\" \n\n\"This is a private conversation, Alex,\" snapped David before Heather could answer.\n\nAlex Romero had been a teammate of Davids on the Randolph High School swim team, but the two had never become friends. They had been rivals for years competing for team captain, and for medals at events around the state. David had gotten the upper hand more often than not much to Alex's displeasure. It didn't help matters that Alex came from a wealthy family and wasn't above flaunting his privilege. For his eighteenth birthday, his parents had bought him a Porsche. It was used, but still, it annoyed David that he had been forced to work to afford his clunker of a car while Alex had his handed to him on a platter.\n\n\"Alex,would you give us a minute,\" said Heather in a placating tone.\n\n\"Sure, I'll be over here,\" he said with a grin.\n\nDavid's eyes grew wider as the other boy moved off.\n\n\"No...Please, for the love of God, Heather, tell me it's not Alex!\"\n\n\"I'm sorry, David, like I said it just happened. You know you've been so busy lately with your job and clubs and stuff. We've hardly seen each other for the past four months.\"\n\n\"So this is all my fault? I told you I wasn't going to work this summer so we could spend more time together, but I needed to save money before then...Jesus, Heather! How come you didn't come to me before this and tell me you weren't happy?\"\n\n\"I tried, but you always brushed me off with some excuse about how you would make more time for us, but then you never did.\"\n\n\"So you jump into Alex's arms? We've been together for almost three years!\"\n\n\"I know...I'm sorry, David...I don't know what to say. The heart wants what it wants...\"\n\n\"Are you fucking kidding me! I can't believe you're falling back on the most clich\u00e9 line in the book!\"\n\nAlex was suddenly back at Heather's side, glaring at David.\n\n\"You need to stay cool, Cross. I don't want to see you yelling at Heather,\" he said menacingly.\n\n\"Oh! This is so classic. You can't beat me in the pool, so you snake my girlfriend behind my back,\" shouted David.\n\nThe two boys glowered at each other while Heather looked around uncomfortably not sure how to diffuse the situation she had sparked.\n\n\"If you had been treating her right, she would still be your girlfriend,\" growled Alex.\n\n\"Fuck you, Romero.\"\n\n\"I may not have beaten you in the pool, but I'm about to beat your ass on this porch!\" said Alex tightly.\n\n\"Guys...Can't we discuss this inside...\" said Heather quietly with fear in her eyes.\n\nIt looked as if the two young men were going to come to blows, but the crisis was averted when Stacie's father appeared on the porch alerted by some of the other kids that trouble was brewing.\n\n\"Everything o.k. out here?\" asked the older man looking down at the two boys. Stacie's dad was a former Marine and very intimidating. David looked away, barely concealing his anger.\n\n\"Fine...just fine...\" he grumbled.\n\n\"Heather and I were just going inside to try some of that delicious-looking cake your wife made,\" answered Alex slipping his arm around Heather's waist and guiding her toward the back door. All David could do was watch them go feeling helpless his fun graduation night sinking like the Titanic.\n\n\"It's a good thing Stacie's dad showed up. I can only imagine the carnage that was about to ensue,\" came Chris's voice jerking David back to the present.\n\n\"Yeah, I was so ready to knock that moron on his ass.\"\n\n\"Well...Look at it this way you guys were probably going to break up by the end of the summer anyway. Heather is going out of state to college, and you're still planning on attending city college, right?\"\n\n\"We could have made a long-distance thing work,\" offered David.\n\n\"Said every jilted college freshman ever...\" replied Chris.\n\n\"Thanks for trying to make me feel better. I hope you don't plan to become a therapist because you suck at it.\"\n\n\"I hear you, Man. I know you're hurting right now, but think about how much fun it could be to be a free agent this summer. We could hit Wave World and check out the babes!\"\n\nDavid grimaced at the name. Wave World was about the only attraction worth attending in their small town, a local run water park that featured numerous slides and a lazy river as well as the wave pool that gave the park its name. David had worked there two previous summers. It was also the place he and Heather had hooked up for the first time, so it now held a bittersweet spot in his heart.\n\n\"You do know Wave World is where Heather and I met, right?\"\n\n\"I was there, of course I know that, but it's also the best place to meet someone new.\"\n\n\"I don't know, Chris. Let's see how the summer goes, and we'll fall off that bridge when we get there.\"\n\n\"Don't let this thing with Heather taint things for you, David,\" cautioned his friend.\n\n\"I hear ya.\"\n\n\"I have to go. Chin up, Buddy!\"\n\n\"Right...\" said David cutting the connection. \n\nHe sighed tossing the phone aside, staring up at the ceiling.\n\n\"What a shitty way to start the summer,\" he grumbled under his breath.\n\nHe got out of bed a short time later conscious of the fact that if he didn't, his mom was going to come looking for him again. A quick shower chased out some of the cobwebs, and he managed to force a smile onto his face as he joined his family for lunch. \n\nDavid's mom and dad were already at the table. His father, William Cross, Bill to his friends, was an accountant who worked at the High Rock nuclear plant outside of town. A tall man with thinning hair and a face that always seemed to be on the verge of a frown, David's dad watched his son pull up a chair while stirring the steaming bowl of stew in front of him.\n\n\"Got in kind of late last night,\" noted Bill Cross as his son settled himself.\n\n\"It was graduation night,\" replied David as if that summed up everything.\n\n\"Yeah...How was the party at Stacie's?\"\n\n\"Fine,\" said David shoveling a large bite of stew into his mouth to preclude any follow-up questions about it.\n\n\"I thought you looked so handsome in your cap and gown last night. I can't wait to post the pictures,\" said David's mom, Joyce, as she joined them at the table.\n\nDavid winced at the thought. He had felt he looked particularly dorky in the outfit himself.\n\n\"Are you off today?\" asked David not used to his dad home on a Friday.\n\n\"Doctors appointment this morning, but I'll probably take the rest of the day off and get the oil changed in the car. It's too far to drive into work this late.\"\n\nDavid nodded, knowing that the plant lay forty miles outside of town for safety reasons. It made for a long commute for his Dad, who usually left for work at the crack of dawn.\n\n\"Who was calling you all morning?\" asked his mom.\n\n\"Chris...He didn't make the party last night, but wanted to hang out this weekend.\"\n\n\"Best get some fun in this weekend before work starts up for you on Monday,\" said his dad as he lifted a glass of water to his lips.\n\n\"Right...I thought next week I might hit Wave Wor...Wait...What did you say? What work?\"\n\n\"I have good news for you, Son. I got you a summer job working as a paid intern in the Office Services department at the plant.\"\n\nDavid slowly lowered his spoon, \"You did what? This is my last summer to hang out with my friends! How am I going to do that if I'm working forty miles out in the middle of nowhere?\"\n\n\"It's time to grow up, David. You're eighteen and graduated from school. It's high time you got a taste of working a real job not lounging in a chair watching girls in bikini's stroll by,\" said Bill Cross referring to David's usual summer employment as a lifeguard at Wave World.\n\n\"Dad! Come on! This isn't fair. You could have at least asked me what I wanted to do!\"\n\n\"Like you would have said, 'Yes,' to working ten hours shifts from six a.m. to five p.m. all week for the summer? Not to mention you need to be up by 4:30 to get out of here in time to make the drive.\"\n\n\"Jesus...Way to shit on my summer, Dad.\"\n\n\"I'm going to let that pass because I can see you've got a bee in your bonnet about something, but you be careful how you talk to me,\" said his dad with a hint of menace in his tone.\n\n\"I can't believe this...\" grumbled David as he pushed back from the table.\n\n\"Don't you want to finish your stew?\" asked his mom.\n\n\"I lost my appetite...\"\n\nDavid left the room with his head down.\n\n\"Maybe we should have told him sooner so he could get used to the idea?\" said Joyce.\n\n\"He needs to see what it's like to work a real job. Maybe it will help motivate him to do well in school, so he doesn't have to work at a job that he doesn't like so much. Heck, when I was his age, my dad had me running a rice picker in his fields now that's a shitty summer job!\"\n\n\"I know, Bill, but this is his last summer maybe we should have let him have it.\"\n\n\"We talked this over already, Joyce, that boy is going to work at the plant, and that's all I want to hear about it.\"\n\nDavid slumped on the end of his bed looking at the floor. First, Heather, and now this news that he was going to be spending the lions share of his summer with a thousand sweaty guys. \n\nThis was not how he had envisioned his last summer before college.\n\n\"I think the Universe is trying to tell me something...like it hates me.\"\n\nTHE NUCLEAR BOMB -\n\nIf David had thought his mom could be insensitive in how she woke him up in the morning, he quickly discovered she had nothing on his dad. His primary method for rousing someone turned out to be switching on the lights and ripping all the covers off the bed.\n\n\"Rise and shine, Lazy Bones! The early bird gets the worm!\" said Bill Cross in a voice that had far too much enthusiasm in it for 4:30 in the morning.\n\n\"Christ! Dad! It's still dark outside...No one should be getting up when it's dark,\" groused David.\n\n\"I've been getting up in the dark most of my adult life. Don't be such a whiner. You got thirty-minutes to shower and dress then we hit the road.\"\n\nHis dad vanished back out the door, leaving David to stare bleary-eyed up at the ceiling.\n\n\"Just shoot me now...\" he mumbled, forcing himself to a sitting position.\n\nHe just managed to pull himself into shower groaning as the hot water splashed across his face. He moved quickly to clean up, rubbing soap through his dark brown hair and promptly moving on to his slender, athletic young body made lean and hard from years of high school sports. Like his dad, David had sprouted hair early, and though he had the face of a teenager barely on the verge of manhood, his chest was already covered with curly black hair as was his abdomen leading down to the thick forest of pubic hair forming a nest around his penis. Heather had certainly been very complimentary about his male equipment, not that he would hear those words from her any longer.\n\n\"I bet Alex has a tiny prick,\" thought David maliciously as he soaped up his own.\n\nHis swim coach had wanted him to remove his body hair at one point, but his dad had thought that ridiculous and refused to let him. David hadn't cared one way or the other, he never had any illusions about becoming an Olympic class swimmer and just enjoyed hanging out with his friends and competing.\n\n\"Get a move on, Son!\" came his dad's voice through the door.\n\n\"O.K.!\" he shouted back.\n\nThe only bright side to his morning turned out to be his mother kindly making his lunch for him and handing him a freshly baked banana nut muffin to eat on the road.\n\nDavid's dad wasn't much of a talker, and they rode in silence except for the background noise of the local country music station coming out of the car radio. The long drive took them out past the city limits, and they soon left the comforting rows of suburban houses behind trading the view for one of scrub brush and cactus. \n\nThe High Rock nuclear plant had been built ten years before and provided power for cities all over the state. It sat at the end of a long dirt road surrounded by tall barbed-wire fences on a desolate plot of land at the edge of some low slung mountains. The three central units that housed the reactors towered over the rest of the facility that seemed to comprise a few permanent two-story office structures and a lot of trailers being used as office space. \n\n\"I'm going to drop you at the Personnel Office. Just tell them who you are they should have received your hiring packet, and they'll process you through and get you where you need to go. I'll come to find you at the end of the day when it's time to go home.\"\n\nDavid had been busy staring out the car window at the mix of dirty looking workers in blue hard hats walking by with an occasional more well-dressed person in a white hard hat mixed in. He noted that his dad had a white hard hat sitting on the back seat with his name, \"William Cross\" stenciled across the back.\n\n\"I'm not going to get radiation sickness or something right?\" said David, only half-jokingly.\n\n\"This plant has an excellent safety record, so I wouldn't worry about it. Do as you're told and follow your supervisor's instructions and you'll be fine.\"\n\nThe car slowed in front of a trailer with a sign marking it as, \"Personnel Trailer 1\" posted on the door.\n\n\"This is it. Good luck, Son, and try not to embarrass me.\"\n\n\"Dad...When have I ever given you anything to worry about?\" replied David with a sly smile.\n\n\"O.K. Smart-ass. See you later.\"\n\nHis dad drove away, leaving David in a cloud of dust. It was scorching hot outside, and he bound up the steps to get out of the desert heat. The air-conditioning was a welcome relief, but he had to stop to let his eyes adjust to the dimmer interior.\n\n\"You lost, Kid?\"\n\nDavid turned to find himself looking up at an enormous man in beige coveralls holding a blue hard hat in one hand and glaring at him.\n\n\"Um...No, Sir...I'm starting today...Uh...\"\n\n\"You're going to work here?\" asked the hulking man whose face reminded David of a stone gargoyle he saw once carved into a building.\n\n\"Yeah...I was,\" began David, but the big man cut him off again.\n\n\"White hat or blue?\"\n\n\"Excuse me?\"\n\n\"You heard me, Kid. White hat or blue? You look too skinny for real work, so I'm guessing white.\"\n\n\"Leave him alone, Lyle. Why don't you find something to weld, like your mouth,\" came a new voice from deeper in the trailer. A second later, the owner, a slender middle-aged woman with short graying hair came walking in from out of a corner office.\n\nLyle grunted like an angry bear but managed a half-smile that considerably softened his face.\n\n\"Fine...Get the kid his white hat while I go do the real work that needs doing.\"",
        "With one last baleful glance, the bigger man strolled out the door, leaving David alone with the newcomer.\n\n\"Don't let Lyle bother you. He's all bark,\" she said.\n\n\"What was he talking about? White hats and blue?\"\n\n\"It's how we designate the salaried office workers from the laborers around here. The guys in the office wear white hard hats, and the folks in the field wear blue. I'm afraid it also creates a bit of a class system, the laborers tend to turn their noses up at the guys in the offices. They see them as desk jockeys too afraid to get their hands dirty doing a days work.\"\n\n\"Working-class heroes, Huh?\"\n\n\"Something like that. I'm Linda Newkirk by the way, and I'm betting you're Bill Cross's boy.\"\n\n\"David. It's nice to meet you, Ms. Newkirk,\" he said, holding out his hand.\n\n\"Likewise. Your dad told me you'd be coming in today. I got your paperwork processed already, so we just need to get you a badge and a hard hat. It'll be white since you'll be working in the office, so I guess you don't get to be a hero.\"\n\nDavid laughed and followed Linda over to her desk in the corner where she had a camera set up against a white backdrop to take security photos.\n\n\"Looks like you'll be reporting to Roxy Doyle over in Office Services...Oh Boy! This will be a fun summer job for you.\"\n\n\"Something I should know?\" asked David warily.\n\n\"Not really it's just...Well, Roxy is kind of a pistol as my momma use to say. She's good at her job, but she doesn't cotton to any nonsense, and she can have a bit of a temper if you get on her bad side.\"\n\n\"I'll keep that in mind.\"\n\n\"Don't worry,\" offered Linda seeing his worried look, \"she is kind of like Lyle her bark is worse than her bite.\"\n\n\"Thanks, so which way do I...\"\n\n\"Hang on. I'll get someone to show you where the Office Services department is located. This plant is a bit hard to find your way around in until you get your bearings. Hey! Rebound! Get your ass in here!\"\n\n\"Hold your horses, Linda. I'm coming...\"\n\nA moment later, another fellow joined them from an office in the back. This time it was a short black man who barely came to David's chest. He had graying hair and a huge friendly grin plastered on his face.\n\n\"Rebound?\" asked David.\n\n\"It's an ironic nickname. You see that a lot around here. I love to play basketball, but trust me I can't rebound for shit,\" said Rebound with a hearty laugh that was so infectious David joined right in.\n\n\"Take David here over to Office Services he's reporting to Roxy,\" said Linda.\n\n\"O.K. Come on, Kid, times a wasting and it's only going to get hotter outside.\"\n\nDavid pulled on the hard hat that Linda handed him as he stepped outside in Rebound's wake squinting into the glare of the sun. The shorter man led him over to a battered white pickup, and he climbed into the passenger side as the engine cranked over with a throaty growl.\n\nDavid was looking at the badge Linda had handed him. The picture wasn't half bad. He might not have been a model, but he was still a good-looking kid with dark hazel eyes and a square jaw like a young Brad Pitt. He flipped the plastic square looking at a long list of safety instructions on the other side.\n\n\"It says here if I hear three loud whistles followed by a constant alarm I should report to evacuation area five. Where is that?\"\n\n\"If you hear three loud whistles followed by a constant alarm that means there is a radiation leak and you should follow procedure S.Y.H.B.Y.L dash A.K.Y.A.G\"\n\n\"What does all that mean?\"\n\n\"It means 'Stick your head between your legs and kiss your ass goodbye!'\" said Rebound who cackled loudly at his own joke.\n\n\"You're kidding me, right?\" asked David trying to laugh himself, but feeling apprehensive as they drove into the shadow of one of the big containment units.\n\n\"I'm just fucking with you. This place is plenty safe. I've been here since the first unit went online and other than losing my right testicle to cancer I'm fine.\"\n\nRebound burst out laughing again at the look on David's face, and eventually, David joined in though without nearly as much enthusiasm.\n\nThe parking area in front of the Office Services building was full, so Rebound swung around to the side, finding a shady spot next to a low concrete wall. They exited making their way toward the double glass doors that led inside.\n\n\"So let's go introduce you to the 'Nuclear Bomb'\" said Rebound.\n\n\"Nuclear Bomb?\"\n\n\"That's what the guys call Roxy, but don't ever say that to her face she hates it.\"\n\n\"Is it because of her temper?\" asked David.\n\n\"Not exactly...\" replied Rebound mysteriously.\n\nThey entered the building together, walking down a long hallway with offices on both sides before eventually arriving at a wood counter in front of a sliding glass window with a heavy steel door to one side. Rebound went up and pressed a button next to the window setting off a buzzing noise that was audible through the glass. A head popped up from beneath the counter belonging to a blond-haired young man not much older than David, who slid back the glass his face breaking into a smile.\n\n\"Mr. Rebound! To what do I owe the pleasure?\"\n\n\"Thomas. I brought you some help. This here is David. He is going to be interning this summer like you. Is Roxy here?\"\n\nThe young man that Rebound had identified as Thomas gave David a once over then nodded toward the room behind him.\n\n\"She's in her office. I'll buzz you in...\"\n\nRebound threw open the door next to the glass window after Thomas gave them entrance and waved at David to follow. The room beyond was quite large and filled with seemingly endless rows of shelves covered with every kind of office supply imaginable from manila folders to notepads, bins of staplers, and pens to computer monitors and typewriters. David looked around at the amassed inventory as they made their way to the back where a single office stood in one corner. Rebound stopped and knocked politely on the door.\n\n\"What!\" came the short reply from the other side.\n\n\"Roxy? It's Rebound. I got another intern here for you.\"\n\n\"Just what I needed another kid for me to babysit.\"\n\n\"She's thrilled to have you,\" whispered Rebound over his shoulder to David.\n\n\"Well..send him in.\" \n\n\"Go on!\" prompted Rebound stepping back away from the door.\n\n\"By myself?\" asked David not quite able to keep a trembling out of his voice.\n\n\"It's not the lion's den, Daniel. You'll be fine. That said I'm not going in there...\" replied Rebound.\n\nSwallowing slowly, David reached for the door handle and stepped into the office, shutting the door behind him.\n\nThe small room beyond contained just a desk with two chairs facing it and a bookshelf on one wall covered with all kinds of corporate manuals. It's occupant clearly liked her space to be immaculate and well organized since the desk itself was clutter-free. David took a step forward, clearing his throat to introduce himself as the sole occupant of the office turned around. In a day already full of quirky surprises, this one took the cake. Given what he had seen and heard so far, David was fully prepared to face what he had expected to be a gruff, middle-aged, chain-smoking woman with a face to match, what he got was one of the hottest women he had ever seen in his life.\n\nRoxy Doyle rose up from her chair, sticking out her hand. A tall woman at close to five-foot-ten-inches she looked to be maybe thirty with strawberry-blond hair that fell in tight ringlets around her long, high cheek-boned face. She had piercing green eyes that seem to see right through David and made him feel instantly nervous. \n\nHe froze in place, finding it hard to breathe before finally realizing that she was still holding her hand out to him and he was gaping at her like an idiot.\n\n\"David Cross,\" he said, shaking her hand and trying not to stare at her well-endowed chest that looked like it was going to burst out of the flannel shirt she was wearing.\n\n\"Roxy Doyle,\" she growled just managing to put a hint of a smile on her face that made her full, generous lips twist ever so slightly upward.\n\n\"Have a seat,\" she said, gesturing at one of her guest chairs.\n\n\"Your dad's Bill Cross.\"\n\n\"That's right.\"\n\n\"Good man. Always fills out every blank on his requisitions.\"\n\n\"That's what I've always liked about him,\" confirmed David.\n\n\"You trying to be funny?\"\n\nDavid squirmed in his seat, \"No...Ma'am. I was...\"\n\n\"I take running this place very seriously, David. It's not a complicated job. People want office supplies, and we have them, but they better have their forms done right! Not one pen, pencil, or sticky note goes through that glass window if the forms aren't right and I don't care if Jesus H. Christ himself is looking for some toner he better have a correctly executed authorization form or he ain't getting shit! Do you catch my drift?\"\n\n\"Yes, Ma'am.\"\n\n\"Don't call me ma'am it makes me feel like a grandmother. It's Roxy or Ms. Doyle if formality is more your thing.\"\n\n\"Yes, Ma...Roxy...\"\n\n\"Thomas will show the lay of the land and help you get started. If you have any questions, ask him.\"\n\nIt took David a second to realize that was it, but he finally snapped when she stared at him for a good five seconds without saying anything. He rose tentatively from the chair and watched as she pivoted back to her computer. He put one hand on the door, but her voice stopped him before he could open it.\n\n\"Oh...and, David...Welcome aboard...\" she said in a slightly softer tone looking at him over one shoulder. Her face in profile looked even more beautiful than dead-on, and David could only manage a nod before he darted out of her office.\n\nRebound was standing on the other side leaning up against a shelf. He grinned as David emerged, shutting the office door behind him.\n\n\"Well, you still have all your limbs, so I guess it went o.k.\"\n\n\"Yeah...I guess...\" muttered David throwing a look back over his shoulder, \"the Nuclear Bomb, huh...\"\n\n\"Yep, but don't waste your time on that fantasy. Nearly every able-bodied man in the plant has tried to get her attention, but she wouldn't give them the time of day. Word on the street is she had a crap husband she divorced some years back, and he put her off men in general. Too bad if you ask me since she is a knockout, but what can you do?\"\n\nThey returned to the front desk where Thomas starting showing David the various forms that were used for requisitions and how to check that they were filled out correctly. Rebound excused himself to return to his office, leaving with a wave.\n\nIt turned out Thomas was only a year older than David and back from his first year of college.\n\n\"My dad got me this job for the summer to make extra money for school. It beats flipping burgers, I guess,\" said Thomas.\n\n\"I have a similar story. My dad is in the accounting department.\"\n\n\"Bill Cross, I know. My dad works in the I.T. department.\"\n\n\"When did you get here?\"\n\n\"The middle of last week, so I guess that makes me an old hand compared to you,\" laughed Thomas.\n\n\"What do you think of our boss?\"\n\n\"Roxy? She's intimidating at first, but to be honest, I think a lot of her bluster is just for show. If you do your job and follow her rules, you'll be fine.\"\n\nAs if just speaking about her had summoned her like a ghost at a s\u00e9ance Roxy suddenly appeared right behind them carrying a hard hat in one hand.\n\n\"If you two ladies are done jawing I'm going to take David on a copier run and show him how we handle it,\" she said.\n\n\"Copier run?\" asked David.\n\n\"Yep. In addition to handling office supplies, we are also responsible for maintaining all the copiers in the various offices and trailers. We check them once a week to see if they need toner, or are having any maintenance issues. We also get a page count on all of them. Their leased and the company pays for how much use they see, so grab that clipboard behind you so you can write down the numbers.\"\n\nDavid snagged a clipboard off the wall that contained lists of all the copiers at the plant and their locations with a blank space to write page counts next to each one. He fell in behind Roxy who led him out the secure door and up the hallway through the double glass doors in front.\n\n\"You drive,\" she said, tossing him a set of keys, \"might as well start getting to know your way around.\"\n\nRoxy walked over to a company pickup that was just as dirty and battered as the one Rebound had driven. David climbed into the drivers side slipping the key in the ignition, but then stopped with a frown.\n\n\"What?\" asked Roxy seeing the confused look on his face.\n\n\"Uh...It's a stick shift.\"\n\n\"Very observant. I can see you're as sharp as a tack. So what?\"\n\n\"Well...the thing is I...\"\n\n\"Don't know how to drive a stick?\" she finished for him.\n\n\"No...I don't,\" admitted David feeling embarrassed at coming up short the first time his new boss asked him to do something.\n\n\"Wonderful. Every vehicle we have is manual so you're going to have to learn and it might as well be now. It's not that hard. The speed limit is no more than twenty inside the plant so you'll never get out of second gear anyway.\"\n\nShe ran over the basics with him showing him where the clutch was and how to shift gears then switched places long enough to back out and get them going in the right direction before stopping at a crossroads a few buildings away.\n\n\"Your turn, Sport. Impress me with how quick you learn,\" she said, getting out while David scooted across the seat and got back behind the wheel.\n\nHe took a deep breath and tried to emulate what he had seen Roxy doing. It was hard to concentrate with her staring at him, and the smell of her perfume in the small confines of the truck was equally distracting. Not surprisingly, his first attempt was a disaster as the gearbox howled at his effort to shift and he mistimed releasing the clutch causing the truck to lurch forward awkwardly.\n\n\"Jesus! You don't jerk the gearshift like it's your dick!\" snapped Roxy.\n\n\"Sorry...\" mumbled David trying to get back into neutral.\n\nA loud horn sounded, and David's head snapped around to see a bulldozer headed right in their direction.\n\n\"I would just as soon not die in this intersection, Hot Shot. How's about you get this thing moving,\" said Roxy calmly.\n\nDavid's face lit with panic, but he managed to get it close to right this time, and although the truck shuddered more than once he got them moving forward. He blew out a breath he hadn't realized he was holding as they pulled away headed down the dirt road.\n\n\"See that wasn't so hard. Maybe you won't turn out to be completely useless after all.\"\n\n\"Your confidence in me is overwhelming,\" quipped David.\n\n\"Don't let it go to your head,\" replied Roxy in such a deadpan voice he couldn't tell if she had caught his sarcasm or she was choosing to ignore it.\n\nThe pair spent the next several hours visiting various trailers and offices around the plant. David noted that people seemed to give Roxy a wide berth, and based on what he had seen so far he wasn't surprised. A few times he noticed some of the men checking her out, but the minute she looked in their direction they quickly turned away. \n\nHe tried a few times to engage her in conversation, but she relegated most of her answers to one or two words killing any opportunity to get to know her better. \n\n\"Why don't you concentrate on your driving,\" was about the longest statement she made all morning.\n\nBy the time they finished their rounds, it was lunchtime, and David ended up carrying the meal his mother had prepared for him to a large cafeteria building which appeared to be mostly populated by large men in blue hard hats. Feeling a little intimidated, he chose a table far away from the main crowd settling into a chair and pulling out a chicken sandwich wrapped in cellophane.\n\n\"Glad to see you're still alive,\" said Rebound dropping into a chair across from him.\n\n\"Oh...Hey. Yeah, Roxy hasn't eaten me yet. Maybe she saves that for dessert after lunch.\"\n\nRebound chuckled looking around the bustling room, \"So what do you think of our plant so far?\"\n\n\"I think it's freaking hot enough to melt lead outside, that I can't get phone service out here, and my boss is as warm as a stone statue.\"\n\n\"But other than that its awesome, right?\" \n\nDavid smiled and took a bite of his sandwich, \"It's the job of my dreams. Why would I trade this for sitting in the shade watching bikini-clad girls at Wave World?\"\n\n\"Why, indeed. Look, this place grows on you after a while, and besides you're getting paid way better am I right?\"\n\n\"I suppose,\" conceded David.\n\n\"That's the spirit! Now...How about you let me have some of those chips? I do love me some sour cream and onion!\"\n\nDavid laughed, passing over the bag.\n\nThe rest of the day, he spent thankfully inside taking in and fulfilling requests for everything from paperweights to desk calendars. It was a surprisingly exhausting first day, and he fell asleep in the car on the way home. His dad shook him awake when they arrived, and he walked into the house in a daze barely mustering the energy to eat dinner before he headed to his bedroom and collapsed on top of the covers. He was half dozing even though it was scarcely 8:00 P.M. when his phone rang.\n\n\"Yeah...\" he grumbled into the receiver.\n\n\"David? You sound terrible, are you sick?\"\n\nDavid sat up in bed, wiping at his eyes, heart racing at the sound of Heather's voice on the other side of the call, \" No...Just tired. My dad got me a summer job at High Rock.\"\n\n\"I heard. Chris told me. I guess that must be hard work.\"\n\n\"You got that right,\" he replied, trying to put some life in his voice. He wondered if she was calling to tell him the thing with Alex had been a colossal mistake, and beg him to take her back. Of course, he would be kind about it after a suitable period of groveling, but it turned out that wasn't why she had called.\n\n\"David...I wanted to apologize for how things went down at the graduation party. I meant to tell you beforehand, but it was harder than I thought.\"\n\n\"I can't imagine why we were only together three years,\" replied David, not able to keep the anger out of his tone.\n\n\"Don't be this way, David. I was hoping we could still be friends.\"\n\n\"Friends.\"\n\nDavid let the word roll around in his mouth, finding it tasted particularly bitter.\n\n\"Yeah...I'm working at Farley's Ice Cream in the mall this summer if you want to come by some time. I might be able to sneak you a free chocolate chip cone,\" she added, mentioning his favorite ice cream flavor.\n\n\"You trying to bribe me into being your buddy?\" \n\nHeather grew quiet on the other end before, \"I can see you're not ready to be mature about this, so I'll let you go. I hope you can forgive me someday. I do want to be friends.\"\n\n\"Doe's Alex want to be my friend too?\"\n\n\"He's not as bad as you make him out. Maybe we could all hang out at Wave World sometime? Alex could get us in free.\"\n\n\"Alex is working at Wave World?\" asked David, knowing employees could get two friends in free on off days.\n\n\"Yeah...He's the head lifeguard at the wave pool.\"\n\nDavid felt a pang of jealous anger well up inside him. He had been the head lifeguard at the wave pool the last two summers. Alex had not only taken his girl but his cushy summer job as well.\n\n\"Son of a bitch! I can tell you it will be a cold day in Hell before I take charity from Alex fucking Romero!\"\n\n\"I'm going to let you go, David. Maybe we can talk later...\"\n\nHeather broke the connection before he could say anything else, and as soon as her voice vanished, he felt instantly guilty for his outburst.\n\nDavid dropped the phone onto the bed.\n\n\"Just perfect...\" he thought, wondering how this summer could get any worse.\n\nFIRST LESSON -\n\nThe following morning was even harder than the previous, and David wondered how anyone got used to waking up this early. He barely managed to make it into the car on time, and his dad gave him a dirty look as they pulled away from the curb. A lecture might have followed, something about accepting responsibility, but David was asleep before they hit the first stop sign at the end of the street. His dad roused him from his slumber when they got to the plant gate and dropped him off a short time later.",
        "Thankfully, Thomas had a pot of coffee going and David managed to pull himself together enough to begin his day. The morning was filled with supply requests as well as the thrill of getting to inventory the facilities closet where he got to take an accounting of every mop, broom, and box of toilet paper.\n\n\"Double check those boxes,\" threw in Roxy, \"the vendor loves to short us a couple of rolls, and we don't need people wiping their asses on the furniture.\"\n\n\"Right, Boss,\" said David thinking this day couldn't end soon enough.\n\nThough he had discovered the first day his cellphone service was mostly non-existent, he had determined he could sometimes get a signal if he went up to the second-floor break room and stood right next to the window. When he had an opportunity later that morning, he went straight there and tried to dial Heather hoping to apologize for the way their last conversation had turned out.\n\n\"Heather? Can you hear me!\" he called into the phone.\n\nThe connection was terrible and kept cutting in and out.\n\n\"David...David, is that you? I can barely hear you,\" came her distant voice.\n\n\"I just called to say I'm sorry.\"\n\n\"What? You're breaking up really...bad...\"\n\n\"Heather? I said, I'm sorry! Heather...Jesus,\" moaned David shaking his phone in frustration.\n\n\"I'm sorry! I still love you, and I'm sorry!\" he said louder leaning closer to the window.\n\nThere was nothing but static now, and a second later the call dropped entirely. David was looking down at his phone, angry and sad when a shadow fell over him.\n\n\"You were supposed to be back from break five-minutes ago,\" said Roxy standing with her arms crossed.\n\n\"What? Oh...Sorry.\"\n\n\"You say that a lot. It makes me wonder if you really mean it,\" observed Roxy.\n\nDavid's eyebrows knit together in confusion not sure if Roxy meant in this particular instance, or had she been listening to his conversation.\n\n\"Look, I just needed to make a call,\" he added.\n\n\"I heard. You want to suck up to some piece of ass do it on your own time, not the companies.\"\n\n\"Heather is not a piece of ass,\" retorted David.\n\n\"Oh...Heather...So the piece of ass has a name. How wonderful...I'm sure you two can kiss and make up when you're not working.\"\n\n\"I doubt it she left me for a guy I hate.\"\n\n\"Really? I would love to hear all about it, but if I wanted a teen soap opera, I would have stayed home and watched Nickelodeon with my kid.\" \n\n\"Wow...you could have a little compassion...\" mumbled David under his breath as he tried to brush past his boss. \n\n\"Compassion? See how much of that you have when your husband comes home drunk for the umpteenth time after losing his job...again...You know what just get back to work!\" yelled Roxy.\n\nDavid froze in place suddenly feeling ashamed at his outburst. \n\n\"Roxy...I didn't know about...I mean I know that must be...\"\n\n\"Save it. Just get downstairs we got a field inventory to do in the lay down yard.\"\n\nRoxy turned on her heel and marched out, leaving David red-faced behind.\n\nDavid had no idea what a \"lay down\" yard was, but he quickly got acquainted with the concept when he found himself facing row upon row of steel desks stack three high on pallets and covered with tarps. The massive collection seemed to stretch on for hundreds of yards and would have been impressive if he hadn't been sweating bullets in the burning desert heat.\n\n\"What is it we're doing out here again?\" panted David.\n\n\"We have to check the serial numbers on all this crap before it gets removed from company inventory. This is all old shit that will be donated to charity.\"\n\n\"Isn't that nice,\" said David wearily.\n\nHe stood behind Roxy along with Thomas and a pair of blue hatted laborers who were there to help.\n\n\"Go around and untie the tarps on each pallet and check the serial numbers on the desks against what's on your clipboard,\" instructed Roxy.\n\nNot wanting to give her an excuse to get angry with him again, David wiped a good bit of sweat from his brow and moved off to the closest pile. He spent the next hour working his way along in the sweltering heat thinking no amount of money was worth this misery. The second pallet he came to was a real struggle to uncover with the ropes that held the tarp in place dried from the sun, making undoing the knots a pain. When he flipped back the tarp to expose the first desk, a shadow darted from underneath, and David found himself face to face with the biggest spider he had ever seen. \n\nThe hairy tarantula reared on its back legs waving its front ones in defiance, and David did what came naturally to a young man with an unnatural fear of spiders.\n\nThe scream that followed brought everyone else running, and they discovered David crouched on top of the desk looking down at the pissed off arachnid.\n\n\"You're kidding me, right?\" asked Roxy looking at her trembling employee.\n\n\"It came out of nowhere...\" said David his wide eyes not leaving the giant creature.\n\n\"You realize you outweigh that tarantula by more than a hundred and eighty pounds?\" observed Roxy.\n\n\"It doesn't look intimidated to me,\" whispered David.\n\n\"She was probably nesting under there. If a giant were crouching on top of my babies, I'd be pissed too.\"\n\n\"What do I do?\" he said his tone laced with fear.\n\nRoxy's expression softened as she realized he was genuinely petrified, and she took a step toward him, drawing his gaze. Her daughter was afraid of spiders, and she was all too familiar with the look of terror on David's face.\n\n\"David...It's o.k....I want you to get up and jump to me. It's going to be fine...\"\n\nHe nodded and slowly stood on the desk, his body shaking. It took him three tries, but at last, his feet left the desktop and he lept over the spider to land in Roxy's arms. She held him, and for a brief instant, he felt her soft hands on his arms. \n\n\"You o.k., Tiger?\" she said, looking worriedly into his eyes.\n\n\"I'm...I'm fine...\" he managed to croak out.\n\n\"Watch out, David! She's coming after you!\" called Thomas, making David jump backward and stumble. The group of men burst out laughing, drawing an angry frown from Roxy.\n\n\"Knock it off, idiots! Get back to the inventory!\"\n\nShe went over to help David up.\n\n\"I'll take this pallet. You move onto to the next one o.k.?\"\n\n\"Thanks,\" he said blushing in embarrassment, \"I'm sorry. I have a thing about spiders.\"\n\n\"It's alright, David. Everyone is afraid of something,\" said Roxy patting him on the shoulder.\n\nHe shook himself and walked off, taking one last look at the tarantula which had calmed down now that he was moving away.\n\nThe rest of the day went by without incident, and David was grateful when the final whistle blew, and he could go home and get the sweat cleaned off of himself. Much like the previous night, he fell asleep almost before his head hit the pillow only to be pulled from his bed seemingly no time later by his dad who signaled to him that another morning was already upon him. \n\nRoxy took pity on him after the incident from the previous day and left him to cover the supply window while she and Thomas went to finish the inventory in the lay down yard. It was a slow day with just a handful of people coming by, and it seemed like forever before lunch arrived. David retrieved his lunch pail from the employee's locker room and walked over to the cafeteria to find a cool place to eat. As soon as he opened the lid a big, shadowy looking thing dropped from the top. David lept backward so quickly he caught his legs under the table, and he fell sprawling half under it as everyone around him broke into laughter.\n\n\"What's a matter? Did the big bad spider try to get you?\" laughed one of the same men who had been on the inventory crew the day before as he lifted the rubber spider from the table.\n\n\"Very funny...\" groused David as he got back to his feet.\n\nThe laughter continued as the massed group watched David jump back when the laborer waved the fake spider in his face. Ashamed of his fear, David grabbed his lunch pail and ran out of the building were he stood almost hyperventilating on the walkway outside.\n\nHe was bent over, trying to catch his breath when a truck pulled up right in front of him.\n\n\"You O.K.?\" called Roxy from the cab.\n\nDavid straightened and walked over. \n\n\"I'm fine...\" \n\n\"Thomas tipped me off that the guys were going to pull a prank so I thought I should drive over and check on you.\"\n\n\"It's O.K.\"\n\n\"You don't look o.k. you look white as a sheet.\"\n\n\"Seriously, I'm fine. Thanks for checking, but I'm just going to go eat in my office where it's safer.\"\n\n\"Get in. I have a better idea.\"\n\nDavid went back and got his lunch pail before piling into the passenger side of the truck.\n\n\"Where are we going?\" he asked.\n\n\"Relax. I promise there won't be any spiders,\" she said.\n\nRoxy drove them half-way around the plant and out the rear gate that was usually used for freight deliveries. She followed a dirt road that ran off into the desert before turning off at a fork onto an even rougher surface that curved up into the low slung mountains that surrounded the plant. They climbed a short distance before turning again into a canyon that ended at a yawning black cave entrance.\n\n\"What the heck is this?\" asked David stepping out.\n\n\"Old gold mine...There are a bunch of them in these mountains. Back at the turn of the century, men poured out here by the hundreds hoping to make their fortunes but most didn't find squat.\"\n\nDavid started toward the entrance, but Roxy waved him off.\n\n\"I wouldn't if I were you. These mines aren't safe. The timbers are rotted, and they're the perfect haven for rattlesnakes.\" \n\n\"Why are we here then?\"\n\n\"Follow me.\"\n\nDavid grabbed his lunch and hiked after Roxy as she took a trail that ran passed the mine and up through a notch in the rocks. On the other side, David was surprised to find a bubbling spring that had formed a pool at the base of a large rocky outcropping. A few scrub trees had sprung up around it, and Roxy went over to sit in the shade of one kicking off her work boots and shoving her feet into the cold water.\n\n\"I happened across this place a few years back looking for some peace away from all the leering eyes. I used to take lunch up here when I had had my fill of men trying to hit on me my while I downed my ham and cheese,\" she said.\n\n\"It's beautiful,\" said David taking a seat next to her and emulating her by removing his boots and soaking his feet. \n\n\"Would you like some of my sandwich?\" \n\n\"Thanks,\" she said as he handed her half his roast beef on rye.\n\n\"So...This, Heather...I take it you two were together a long time?\" asked Roxy.\n\n\"I thought you didn't want to hear a teen soap opera?\"\n\n\"Sorry about that, Kid. I can be a little harsh sometimes.\"\n\n\"No...I should be the one apologizing. You were right to call it that...We weren't married, and it was the first relationship for both of us. I guess it would have been a little silly for me to think I was going to meet the right girl the first time out of the gate.\"\n\nRoxy kicked at the water, making ripples that spread outward.\n\n\"It's not silly. Sometimes adults call that first relationship 'puppy love,' but at the end of the day, it's still love, and it still hurts when it ends.\"\n\n\"Yeah...\" admitted David.\n\n\"I didn't mean to bring you down more. This is my lame attempt at cheering you up,\" said Roxy seeing the pain on his face.\n\n\"It's fine. I appreciate the thought. Can I ask? When did you and your husband meet?\"\n\n\"Oh...Are we playing true confessions now? I ask you about your girlfriend so now you get to pry into my life?\" said Roxy with a raised eyebrow.\n\n\"Sorry, I wasn't trying to pry.\"\n\n\"Don't worry about it.\"\n\nThey sat in silence the sounds of their chewing the only noise other than the wind through the distant canyon.\n\n\"I was nineteen,\" she said suddenly not looking at David but staring off into the water.\n\n\"His name was Todd. We met at a bowling alley on a rainy Friday night, and he walked me to my car because he had an umbrella and I didn't. I thought it was pretty thoughtful of him at the time. We dated for two years and got married at the county courthouse. A year later, I got pregnant with our daughter, Emily. Things were o.k. at first, but Todd always liked to party, maybe a bit too much. In retrospect, I should have seen it coming. His dad was an alcoholic, and so was his grandfather, so it ran in the family. When Todd wasn't drunk, he was a decent husband and a good father, but as the years went by those times became fewer. So one day, I had my fill, and I kicked his ass out. There...Now you know more about me than just about anybody at the plant and I have no idea why I just told you all that.\"\n\n\"My mom says I have one of those trustworthy faces,\" said David and for some reason Roxy found this uproariously funny her laughter breaking the silence.\n\nDavid finally joined her, and they both enjoyed a good laugh before he finished his half of the sandwich and offered her some chocolate chip cookies.\n\n\"Heather and I met at Wave World the summer before our sophomore year of high school. She was with a group of six other girls, and I made a fool of myself trying to get her attention.\"\n\n\"Every man has made a fool of himself at least once for that reason,\" said Roxy.\n\n\"I suppose. Anyway, our first date was at the ice cream parlor at Fair Oaks Mall, and we hit it right off. I guess maybe I did think at times she could be the one even if we were just kids.\"\n\n\"The only thing I can say to that is to make damn sure of your choice. You don't want to get stuck with a lemon, not when it's forever. Hell, I can't even get my Ex to pay his child support on time, and he is always letting Emily down not being there for her birthdays, or paying for her swim lessons like he promised.\"\n\n\"I could teach her to swim,\" blurted David without thinking.\n\n\"What?\"\n\n\"Oh...I'm good in the pool. I was on my high school swim team and made all-state last year. I can swim like a fish.\"\n\n\"I don't know...I can't afford to pay you anything.\"\n\n\"That's alright. You did me a good turn today, and I don't mind.\"\n\nRoxy looked away. It was clear she wasn't comfortable taking what she saw as charity, but she finally nodded.\n\n\"Emily would like to learn, and I can't teach her I suck in the water.\"\n\n\"Then it's settled.\"\n\n\"O.K., Sport. I'll text you my address, and you can come by this weekend o.k.?\"\n\n\"Deal!\" said David grinning.\n\n\"Come on we need to get back to work, and don't leave any of your garbage behind this is my place and I intend for it to stay nice!\"\n\nTHE DEEP END -\n\nThe week ended finally, and it was with a sense of relief that David got to sleep past sunrise. He rose late feeling refreshed for the first time in days and true to their agreement he received a text later that morning from Roxy giving him her address and a time to show up. \n\nHer apartment wasn't hard to find though it was definitely in a poorer part of town than where he and his parents lived. Still, for all that, the complex was well maintained and seemed to have a good mix of older couples and young families just starting. David identified her apartment number but went on by since she had told him they would meet at the complex pool. He spotted Roxy immediately sitting poolside in shorts and a tank top showing off more of that fair-skinned beauty he thought he was never going to get used too. She was there with a young girl maybe seven years old with hair just like her mothers but much straighter falling like a waterfall down her small back. \n\n\"Right on time. At least you're punctual for something,\" commented Roxy as he came through the pool gate.\n\n\"I was only late to work that once, and it's not my fault my dad was the one driving.\"\n\n\"Excuses, excuses,\" said Roxy with a shake of her head.\n\n\"Who is this, Mommy?\" asked the young girl across from her.\n\n\"This is the guy I was telling you about who is going to teach you to swim. His name is David. Say 'Hi,' to David, Emily,\"\n\n\"Hi, David!\" she said in a high-pitched voice.\n\n\"Hello, Emily. It's very nice to meet you.\"\n\nHe shook her small hand, noting that she also had her mothers piercing green eyes. \n\n\"Do I have to go in the deep end?\" asked Emily looking apprehensively toward the far side of the pool.\n\n\"Not to start and not for a while yet. I'm going to show you the basics, and the first thing is to teach you how to float.\"\n\n\"Like a balloon?\" she asked.\n\n\"Something like that...Come with me.\"\n\nDavid stripped off his shirt, exposing his chest and removed his shorts to reveal the swimsuit he had on underneath. He wasn't sure, but he thought he caught Roxy staring at him for a moment checking him out, but when he looked up she appeared engrossed in a book she had brought with her, and he quickly dismissed the idea. Emily followed him over to the steps leading down to the shallow end, and he led her down into the water both of them shivering a little as they got used to the cooler temperature. \n\nThe truth was that David had never tried to teach anyone before, let alone a child, but Emily proved to be a quick learner with the same kind of razor-sharp focus that her mother possessed. He had also been worried about dealing with a kid since he had minimal experience with children but Emily put him at ease with her surprisingly mature manner for one so young.\n\n\"Mom says you're the funny one,\" she said at one point as she floated on her back.\n\n\"Is that right?\" said David keeping his arms just under her in case she sank.\n\n\"Yeah...She says Thomas is the quiet one, and you're the one who tries to be funny but has a smart ass.\"\n\nDavid chuckled and looked over at Roxy, who was still fully engaged in her book.\n\n\"What else does your mom say about me?\"\n\n\"She says you swim like a fish.\"\n\n\"I do...like a shark!\" said David reaching up to tickle Emily as she broke out in a fit of giggles.\n\n\"I see you two are getting along.\"\n\nRoxy was suddenly standing at the edge of the pool looking down at the two of them.\n\n\"Emily is a quick study. Did you see how well she floats?\"\n\n\"I sure did. If you don't mind, I need to go inside and get ready for a date. Can you keep Emily here with you?\"\n\n\"Yeah, sure,\" replied David.\n\nAs Roxy left the pool area, David continued the lesson teaching his young charge to doggy-paddle across the shallow end.\n\n\"So your mom has a date tonight,\" he said casually wondering what type of men Roxy would let into her world given the level of contempt she seemed to have for the guys at the plant.\n\n\"Yeah, he has a big nose, but mom says he's got potential,\" was all Emily would say about the man in question.\n\nDavid chuckled again, especially at Emily's use of a word with more than two syllables.\n\nA short time later Roxy returned, and he had to fight down an urge to whistle as she breezed through the gate in a short cotton dress that revealed her gorgeous muscular legs, and dropped low enough to give David his first real view of the creamy white flesh of her huge breasts. \n\nShe stopped at the edge, looking down, \"I guess you guys can take your time. My babysitter just canceled on me so I won't be going out tonight after all.\"\n\n\"Ah! No, Mrs. Foster...\" said Emily with some disappointment.\n\n\"Sorry, Sweetie. Mrs. Foster caught a cold.\"\n\nDavid rubbed his jaw in thought, wondering why he suddenly felt so selfless, but deciding to go with it.\n\n\"You know if you want I could babysit Emily tonight while you go on your date?\"\n\nRoxy pursed her lips together, turning her head to one side not sure how to take this new offer of help.\n\n\"I don't know...How does Emily feel about that?\"\n\n\"David is fun,\" was all she said, splashing the water.\n\n\"With qualifications like that, how can I say no,\" said Roxy with a shrug.\n\nDavid helped Emily out of the pool and went to dry himself while she did the same. Roxy stepped closer, giving him a nose full of her alluring perfume.",
        "\"Are you sure you want to do this? Emily has been pretty well behaved so far, but she can be a handful when she's tired.\"\n\n\"It's no problem. I have a way with kids,\" he lied, knowing he had never babysat before in his life.\n\n\"Well...thanks I guess. Don't think I'm going to go easier on you at work just because you're doing me a favor though, and I will be paying you for this one.\"\n\n\"Sure...that's fair,\" he said with a shrug.\n\nThe three of them returned to Roxy's apartment, which turned out to be just as well organized and immaculate as her office. David stepped into the restroom to get his regular clothes back on returning to find Emily sitting at a small table in the kitchen, eating a bowl of steaming chicken soup.\n\n\"Her bedtime is 8:00 P.M. on the dot and no sugar before you put her down,\" instructed Roxy.\n\n\"Ahh man...I wanted to bake cookies...Mrs. Foster bakes cookies,\" lamented Emily.\n\n\"Mrs. Foster's got an ass like a Mac Truck,\" whispered Roxy under her breath making David smile.\n\n\"You can do without the cookies tonight we don't want to make things too hard on David.\"\n\n\"Actually if you have all the ingredients I know how to make a mean chocolate chip cookie.\"\n\n\"Well, aren't you the Renaissance man,\" said Roxy with a smirk, \"you can do cookies then, but nothing after seven.\"\n\nEmily clapped her hands in triumph as David followed Roxy to the door.\n\n\"Call me if she gives you any trouble, and don't let her sucker you with that cute smile I've seen her wrap Mrs. Foster right around her finger.\"\n\n\"We'll be fine. Go have a good time doing...whatever it is you do,\" said David making Roxy flash a rare smile.\n\nAfter she departed, David helped Emily clean herself from dinner, and then the two of them spent the next hour mixing up a batch of cookies that turned out pretty well.\n\n\"What do you like to do for entertainment around here?\" asked David as they each chewed on one.\n\nEmily popped up from the floor and ran over to a cardboard box that sat next to the T.V. returning with a DVD case that had seen better days. David took it from her his eyes going wide as a flood of nostalgia poured into his brain.\n\n\"Captain Marauder! I watched this when I was a kid!\" he exclaimed with delight.\n\n\"Captain Marauder! Hero of the spaceways!\" yelled Emily striking a pose with her hands on her hips.\n\nDavid popped the old DVD in the player, and hearing the intro music transported him back to his childhood, watching Captain Marauder fight to save the Universe from evil. They watched several episodes of the old space saga until it got close to Emily's bedtime and they were forced to call a halt to the fun. He got her to brush her teeth and slipped her into bed.\n\n\"Will you read me a story? Mom always reads me to sleep,\" she said quietly.\n\n\"What kind of a story would you like?\" he asked, glancing around the room looking for a bookshelf.\n\n\"What stories did you like when you were a kid?\" she asked curiously.\n\n\"My dad used to tell me stories sometimes before bed,\" replied David remembering how his father used to spin tales of dragons and knights seeking adventure for him.\n\n\"Can you tell me one?\"\n\nHe cleared his throat, trying to recall precisely how one of them went and ended up telling her a story about a great green and gold dragon named Charcoal that protected the land from an evil snow witch. Emily listened with rapt attention.\n\n\"I wish I could ride a dragon-like that...\" she said sleepily as he turned off her light.\n\n\"It would be awesome, wouldn't it. Why don't you try to get some sleep now and maybe you'll have a dream about a dragon.\"\n\n\"I hope so...Goodnight, David.\"\n\n\"Goodnight, Emily. Sweet dreams,\" he said just as his parents had said to him for so many nights when he had been no bigger than her.\n\nDavid returned to the kitchen, feeling proud of himself for pulling off his first attempt at babysitting with such ease. He started cleaning up the kitchen washing the bowls and utensils they had used to make the cookies and ended up nicking his finger on a kitchen knife. It bled quite a bit, and he tried to staunch the flow while hunting around the kitchen for a band-aid. Failing in that, he moved on to the bathroom poking around in Roxy's medicine cabinet without success. Three drawers ran down one side beneath the sink, so he tried there next finding a box in the back of the second one down. Hoping it was a first aid kit he opened the nondescript container only to be confronted by a very large dildo. It was at least ten inches of silicone rubber topped with a thick fake cock head.\n\n\"Jesus, Roxy, if that's your expectation no wonder you find so many guys wanting,\" he said, closing the box and carefully putting it back.\n\nHe eventually found what he was looking for in the bottom-most drawer and with his finger repaired; he returned to the living room to watch T.V. and await Roxy's return.\n\nIt was a little after midnight when a key hit the front door, and David sat up from the couch, putting the remote aside.\n\n\"Why do men suck?\" were the first words out of her mouth.\n\n\"I'm going to guess that the date didn't go well,\" observed David.\n\n\"It started o.k. but as usual at some point he decided that pawing my breasts would be more fun than watching the movie,\" said Roxy flopping down on the couch next to him.\n\n\"I'm sorry it wasn't everything you were hoping for I guess he didn't have all that much potential after all.\"\n\n\"I can see you've been talking to Emily. How did that go by the way? She drive you crazy?\"\n\n\"Not at all. She was a perfect little sweetie all night and went right to bed when I asked.\"\n\n\"Amazing. Mrs. Foster always has trouble when it comes to lights out. You'll have to tell me your secret.\"\n\n\"Tricks of the trade. I can't give away all my mysteries right off. How will I keep you in suspense?\" he said with a hint of sarcasm.\n\n\"Are you trying to be funny?\"\n\n\"Maybe...Is it working?\"\n\nThis time her usual stone face cracked slightly, and she looked away with a faint smile playing on her lips, \"Maybe...\"\n\nThere was an awkward moment of silence before David slapped his leg and stood up.\n\n\"I should get going.\"\n\nRoxy walked him to the door, fishing some money out of her purse.\n\n\"You don't have to pay me.\"\n\n\"We had an agreement,\" she said in a no-nonsense tone shoving the cash into his hand.\n\nHe shook his head, pocketing the money, and turned to go.\n\n\"David...\" \n\nHe stopped looking back over his shoulder.\n\n\"Thanks for taking care of my little girl. I'm glad you were here.\"\n\nThe light from the lamp post outside illuminated Roxy's face as she stood in the doorway, making her look even more beautiful than usual, and David swallowed hard before he could reply.\n\n\"My pleasure...I'll see you at work,\" he managed at last.\n\n\"Yeah...See you,\" she said, closing the door.\n\nThe following week David was back at the plant, and discovering that his body was slowly acclimating itself to the earlier schedule since at least he hadn't fallen back to sleep in the car on the way. Roxy had them doing a file purge of all the old requisition forms that were more than three years in the past, and he was sitting cross-legged in front of a filing cabinet with piles of paper lying around him when she came to check on his progress.\n\n\"How is it that you guys haven't digitized any of this crap?\" he asked, waving at the stacks.\n\n\"I've been bitching about that for years, but the company has other priorities I guess. Thanks for raising the parenting bar for me by the way.\"\n\n\"Huh?\" \n\n\"All week long it's been, 'I want stories about dragons and princes,' every time I want that toot to go to bed! You know how much bullshit I've had to make up off the top of my head?\"\n\n\"Maybe I could write down some stories for you,\" offered David with a laugh.\n\n\"I should make you do that, but we have bigger fish to fry. Just keep purging, Paper Boy!\" \n\nShe left him to his work, and Thomas was kind enough to bring him another box from the storage closet brimming with old forms.\n\n\"Thanks...\" moaned David unhappily.\n\n\"Anytime! I like to see a guy earning his keep,\" said Thomas with a grin that David instantly wanted to smack off his face.\n\nAn hour later cramps in both his legs forced him to take a break getting up off the floor for the first time all morning. He was making his way to the security door to hit the bathroom when a booming sound loud enough to make his ears ring broke the relative silence of the building and seconds later the walls rattled as if a God-like hand was shaking it.\n\n\"Holy Crap! It's a fucking meltdown,\" thought David seeing his whole short life pass before his eyes and wishing instantly that he had enjoyed way more sex than he had. His brain locked and he couldn't remember a single thing from the safety video he had been shown in orientation so he did the only thing he could think of and dove under a nearby desk. As he sat there shaking and contemplating just how painful death by radiation exposure must be, Roxy's head suddenly appeared from above.\n\n\"So it's loud noises...and spiders?\" she asked.\n\n\"Didn't you hear that? Why aren't we evacuating?\" asked David in a rush.\n\n\"We aren't evacuating because that wasn't the reactors, Bozo. They're purging excess steam off the turbines. Didn't you watch the orientation video?\"\n\n\"I might have fallen asleep during it,\" admitted David sheepishly.\n\n\"Oh, for Heaven's sake...Just get out from under there before someone sees you cowering like a whipped dog. You keep this up, and they're going to quit calling you 'Spider-Man,' and start calling you, 'Duck and Cover,'\"\n\n\"They call me Spider-Man?\" ask David to Roxy's back.\n\n\"Don't worry. I wouldn't let them stencil it on your hard hat,\" she said over her shoulder.\n\nDavid felt a hand on his arm, and he turned to look at Thomas.\n\n\"Hey! 'Duck and Cover,' want me to bring you another box?\"\n\n\"This day just keeps getting better...\" muttered David as he shrugged off the hand and went in search of the restroom.\n\nThankfully, the afternoon that followed was free of embarrassing moments, and the approach of the final whistle was a welcome relief. David had placed the last of the file boxes back in the closet the contents much reduced in size from when he had started when Roxy came walking up looking slightly uncomfortable.\n\n\"David...I was wondering if I could ask you another favor?\"\n\n\"Uh...Yeah, sure.\"\n\n\"Feel free to say 'No,' it isn't a big deal,\" Roxy started to say making David wonder what was going on since he had never seen Roxy Doyle beat around the bush ever.\n\n\"O.K.,\" he said, looking suspicious at what was coming next.\n\n\"See...The thing is Emily has called me three times today because she is doing this play at day camp, and...uh...she keeps asking if you'll come.\"\n\n\"Oh,\" said David in surprise not expecting this at all.\n\n\"As I said, don't feel obligated or anything I just had to ask...\"\n\n\"No...I mean, it's fine I'd love to go.\"\n\n\"Are you sure? We aren't talking a Broadway musical here.\"\n\n\"I get it. It's fine. I wouldn't want to let Emily down.\"\n\n\"You wouldn't be the first...\" she said under her breath.\n\n\"Excuse me?\"\n\n\"Never mind. It's at 6:30...I'll text you the address.\"\n\nEmily's day camp was actually in an old Methodist church that wasn't far from the apartment complex where she and Roxy resided. David arrived a bit late having gotten caught in traffic, but he found that Roxy had saved him a seat right alongside a rather rotund, older, gray-haired woman who turned out to be Emily's regular babysitter, Mrs. Foster.\n\n\"Emily speaks very highly of you,\" whispered Mrs. Foster as she shook his hand.\n\n\"Thanks,\" David replied taking a seat. \n\nThe skit was short and sweet, based on a parable that David remembered well from school about a lion with a thorn in its paw. Emily played the part of the girl that removed the thorn and did it with quite a bit of talent as far as David was concerned. He clapped along with the other parents while the kids took their bows like real professionals.\n\nAfterward, the adults filed outside to await the release of their children.\n\n\"I think you have a future Academy Award winner on your hands,\" said David.\n\n\"I should be so lucky. If she makes it big maybe she will buy me a house, and I can retire,\" said Roxy.\n\nThe smile that adorned her face fell a second later, though when something over David's shoulder drew her gaze.\n\n\"Shit...\" she grumbled, moving toward the parking lot.\n\n\"What?\" asked David, but she was already passed him with a head of steam up.\n\n\"Todd,\" said Mrs. Foster from where she stood nearby.\n\n\"Her ex-husband Todd?\"\n\n\"The same. She told him about this, and he said he would come, but he is late as usual. At least he showed up at all.\"\n\nDavid took a few steps closer, not wanting to look like he was trying to eavesdrop, but dying of curiosity at the same time. He got close enough he could make out their conversation.\n\n\"I said 6:30, Todd, did they not have a clock in the bar?\"\n\n\"Hey! I just got stuck at work, that's all. Totally not my fault.\"\n\n\"Bullshit! I can smell the beer on you from here.\"\n\n\"O.K. so I stopped for one lousy beer to take the edge off a long day. It's not the end of the world, so don't make a Federal case out of it.\"\n\n\"One beer, Todd! I think it was a lot more than one, and anyway, you missed the whole damn thing.\"\n\n\"What? Huh? I guess it took longer than I thought, but at most, it was two beers o.k.? Where is Emily? I want to see her.\"\n\n\"Not when you've been drinking. I've told you that before!\"\n\n\"Give me a break! You don't have to be a bitch every day of your life, you know!\"\n\nDavid felt a bolt of anger shoot through him, and before he even realized he was going to do it, he was by Roxy's side facing her ex-husband. Todd was shorter than him by a good four inches, but broader across the chest with tattoos adorning both arms and reeking of cheap malt liquor.\n\n\"Is there a problem?\" he asked, glaring at the shorter man.\n\n\"It's fine, David,\" said Roxy in a tight voice.\n\n\"Who the Hell is this, Roxy?\"\n\n\"This is David. We work together.\"\n\nTodd looked him up and down then turned his head to spit a gob of phlegm onto the pavement, \"Jesus, Roxy, you dating grade school kids now?\"\n\nDavid started to snap a comeback, but Roxy beat him to it.\n\n\"Let me tell you something! This kid is already more of a man than you'll ever be, Todd. At least he was here for your daughter, which is more than I can say for you!\"\n\n\"Whatever...Take some advice, Kid. Enjoy the tits and then run. She'll make your life Hell if you stick around too long.\"\n\nIt ended up being David that had to hold Roxy back as she tried to kick Todd who beat a hasty retreat jumping on his motorcycle and roaring off in a cloud of dust.\n\n\"Easy there, Tyson. I think your opponent has left the ring,\" said David as he let her go.\n\n\"Mother Fucker!\" \n\nShe turned a complete circle in place, finally shaking her shoulders and groaning in defeat.\n\n\"Man! I don't know what I ever saw in that prick!\"\n\n\"Couldn't have been his winning personality,\" deadpanned David.\n\nRoxy looked at him still huffing and puffing in anger than let out a laugh shaking her head.\n\n\"Come on! Let's get some ice cream! I need a sugar fix!\"\n\nIt had been a while since the last time David had been in a booth at Farley's Ice Cream Parlor, and this was nothing like the crowd he usually had with him. On one side of the table sat a seven-year-old girl with more ice cream on her face than in her mouth while next to her was a large older woman making a massacre of her dessert. Next to him, Roxy was pressed almost uncomfortably close in the tiny booth, close enough he could feel the heat coming off her skin, and it made him more than a little nervous.\n\n\"Something wrong with your ice cream?\" asked Roxy noticing that David had only taken a few bites.\n\n\"It's good. I'm just watching my weight. Got to protect this girlish figure,\" he said which sent Emily into a fit of giggles.\n\nMrs. Foster and Roxy joined in, and soon, the whole table was filled with the sounds of their mirth.\n\nDavid looked around the restaurant happy that it appeared they had arrived on a night when Heather wasn't working. He wasn't ready to deal with seeing her again at this point. The mall was reasonably quiet for a weeknight. They had the ice cream parlor mostly to themselves although the food court across from them seemed to still be doing a brisk business. There were quite a few teenagers and college-age kids roaming around the multiple available food options, either standing around talking or sitting at the many open tables sharing French fries and gossip in equal measure. As David looked on the crowd parted near the sandwich shop, and his spoon stopped in mid-air.\n\n\"What's wrong,\" asked Roxy, \"you having a stroke?\"\n\n\"Heather...\" was all he said.\n\nThe gap in the crowd had revealed a table where it seemed as if every friend David had was sitting around. Right in the middle of the group sat Heather with Alex by her side, his arm draped around her shoulders.\n\n\"So that's the infamous Heather. I thought she'd be taller,\" commented Roxy.\n\n\"Whose Heather?\" asked Mrs. Foster.\n\n\"His old girlfriend,\" said Roxy.\n\n\"Why, she's a lovely girl.\"\n\n\"She cheated on him with another guy.\"\n\n\"Dirty hussy...\" amended Mrs. Foster.\n\n\"You should go say hello,\" counseled Roxy between bites of her desert.\n\n\"You're nuts! I don't want to talk to her.\"\n\n\"Come on, David. Be the bigger person. You guys were together for three years. Don't you at least want to see if she's pining for you?\"\n\n\"How will I be able to tell?\"\n\n\"You'll know just watch her eyes.\"\n\n\"I don't know...\" said David waffling, but Roxy elbowed him in the side forcing him out of the booth.\n\n\"Fine...Fine,\" he said, rubbing his hands together and trying to still his racing heart. \n\n\"If this goes badly, I'm blaming you,\" said David as he moved off toward the food court.\n\nThe closer he got to his group of friends, the more he thought this had been a horrible idea, but once they spotted him, there was no turning back. \n\n\"Hey Guys!\" he said, stepping into their midst.\n\n\"Wow! It's our missing man! How is High Rock? Do you glow at night?\" asked Chris Michaels with a grin.\n\n\"I don't think so...\" said David trying to force some enthusiasm into his voice and failing. He couldn't take his eyes off Heather, but she wouldn't meet his gaze looking mostly down at her plate. Alex, on the other hand, made a big show of pulling her closer while giving David a fake-looking smile.\n\n\"Don't you miss your old job?\" asked Stacie from the other side of the table.\n\nBefore David could answer, Alex did for him.\n\n\"You don't need to worry about Wave World, David. Nobody misses you there...I got it covered.\"\n\nDavid frowned but was too nervous to think of a good comeback.\n\nPete McCormick, another of David's teams mates from swim team, chimed in, \"We're all going to the 4th of July Festival at Wave World next weekend. You should come, David.\"\n\n\"Maybe...\"\n\n\"You should come,\" said Alex enjoying David's discomfort, \"I can't get you in though my free passes are spoken for, right Babe?\"\n\nHe squeezed Heather's shoulder, making David wince.\n\n\"He looks like he's dying out there,\" said Mrs. Foster sympathetically from where she sat.\n\n\"Mrs. Foster. Can you take Emily to the bathroom and get her cleaned up? I'll be right back.\"\n\n\"Where are you going, Roxy?\"\n\n\"To help a guy out,\" she said with a wicked smile.\n\nDavid was feeling more and more like he should have never come over as the tension in the air seemed to get thicker by the second. He felt foolish now and wished he had just stayed in the ice cream parlor.\n\n\"There you are, Sweetie! I'm sorry that took so long, but the bathrooms in this place are so hard to find.\"\n\nDavid turned in confusion as Roxy came out of nowhere and sauntered right up to him, throwing an arm around his waist.",
        "\"Who is this, David?\" asked Chris as everyone at the table sat up a little taller intrigued by this newcomer, especially Heather whose eyes found David for the first time since he arrived.\n\n\"Oh...This is my...\"\n\n\"Girlfriend,\" finished Roxy, \"I'm David's girlfriend, Roxy. It's so nice to meet you all. I'm guessing you must be Heather. You are just as pretty as David described you.\"\n\n\"Um...Thanks...\" said Heather hesitantly not sure what to make of this turn of events.\n\n\"You know I should be thanking you. Why if you hadn't decided to move on from old David here my summer would have been a lot less happy I can tell you that...\"\n\nThe entire group of teens looked on with mouths agape.\n\n\"So you and David...\" said Alex, his voice incredulous.\n\n\"What can I say I know a good thing when I see it! Anyway, I left my purse at the ice cream place so I will meet you back there. Don't be long. It was nice to meet all of you!\"\n\nDavid followed Roxy a few steps away as she took his hand in hers.\n\n\"What are you doing exactly?\" he whispered.\n\n\"Jealousy is a powerful motivator,\" she replied, \"Is Heather looking at us?\"\n\n\"They're all looking at us.\"\n\n\"Then just trust me and go with this...\"\n\nBefore David could ask exactly what she meant, Roxy suddenly threw her arms around his neck and pulled him into a warm, wet kiss. Her full lips were just as soft as he had imagined they would be, and after a moments shock, he did what came natural slipping his arms around her waist and pulling her close as their mouths slid hotly together in an embrace that left his knees shaking.\n\nWhen they parted, there was a brief moment where they were looking into each other's eyes, and Roxy let out a quiet sigh.\n\n\"Damn...Heather doesn't know what she's missing,\" she thought.\n\nThen she was gone leaving David stunned and barely with the presence of mind to turn back to his friends.\n\n\"Jesus! David! Where did you meet the supermodel?\" asked Chris in an awestruck voice.\n\nDavid struggled to answer, but even in his addled state, he was still observant enough to note that Heather's eyes were flashing with jealous anger.\n\nShe did not look happy at all.\n\nRoxy returned to Farley's just in time to meet Mrs. Foster and Emily coming out of the bathroom. David joined then a short time later, still looking more than a little stunned by what had happened at the food court.\n\n\"Did you have a nice visit with your friends?\" asked Mrs. Foster.\n\n\"It was fine...\" mumbled David his eyes on Roxy who was doing her best to look innocent.\n\n\"I bet you left them with a lot to talk about.\"\n\n\"You could say that.\"\n\nWhile Mrs. Foster took Emily to the car, Roxy returned to the table to leave a tip with David in tow.\n\n\"Why did you do that?\"\n\n\"I was trying to help. If I know women at all, I bet it got under Heather's skin. I wouldn't be surprised if she's checking up on you before the weeks out.\"\n\n\"They invited me to a 4th of July celebration at Wave World next weekend.\"\n\n\"Even better...\"\n\n\"Better how?\" asked David puzzled.\n\n\"If you want to win Heather back this could be the perfect opening.\"\n\n\"I don't understand?\"\n\n\"You will next weekend,\" she said mysteriously, walking away.\n\n\"What the Hell?\" thought David, not at all sure what was happening.\n\nFIREWORKS -\n\nAll through the work week that followed, Roxy refused to talk about the upcoming weekend and what her plan was for David in regards to the Wave World party. Her silence drove him nuts, and he found it very difficult to concentrate on his job. Finally, on Friday afternoon, she stopped him shortly before the end of their shift.\n\n\"I'm going to meet you at the water park at 4:00 P.M. just try to be around the wave pool, and I'll find you.\"\n\n\"Wait! You're coming to the party tomorrow?\"\n\n\"David! What kind of girlfriend would I be if I left you alone on the 4th of July,\" she said with a smirk.\n\n\"So you're my girlfriend now?\"\n\n\"As far as Heather is concerned, I am, and there is nothing that drives a girl crazier than to see her Ex has traded up.\"\n\n\"This seems just a little lame, don't you think? Kind of like a bad teen movie.\"\n\n\"There are reasons that clich\u00e9s exist, and it's because more often than not, they're true. I'm ready to bet you fifty bucks that Heather is calling you after the party begging to see you again.\"\n\n\"I don't know...It all seems a little dishonest.\"\n\n\"What have you got to lose. If it doesn't work, the worst thing is you get to spend an evening with a hot older woman rubbing it in your friend's faces.\"\n\n\"Has anyone ever accused you of having an ego?\"\n\n\"All my life!\" admitted Roxy with a laugh.\n\nDavid could only shake his head.\n\nIt had been not quite a year since the last time David had set foot in Wave World. The place hadn't changed. It was still noisy, crowded, and overpriced. He wasn't used to having to pay his way in either, and he saw why people complained about both the ticket prices, and the rudeness of the cashiers at the front. After his arrival, he had gone and gotten a locker to stow his regular clothes in changing into a pair of swim trunks and a tank-top. The asphalt near the wave pool was scorching hot, and he was glad he had some sandals on as he made his way out onto the loose sand that surrounded it. He spotted his friends right off and was happy to see that Alex wasn't among them although Heather was there talking to Stacie. \n\nSeeing her in her usual emerald green bikini brought back a host of memories. They had spent a great deal of time together on this very same stretch of fake beach and shared their first kiss while standing in the wave pool. \n\n\"Hey! David! Glad you made it, Man! I feel like I've hardly seen you all summer,\" exclaimed his friend Chris as he walked up.\n\nChris clapped him on the back, and they were joined by Pete and a couple of other guys from the swim team, Roger Taylor and George Weller.\n\n\"Chris was telling us you've got some kind of movie star girlfriend now? Is she here?\" asked Roger looking around.\n\n\"She'll be along,\" confirmed David noticing that Heather had turned at the mention of Roxy and was giving him a look he couldn't quite read. \n\n\"Is Alex here?\" David asked, trying to sound nonchalant.\n\n\"He has to work until five I think, but he will join us later,\" offered George.\n\n\"Joy...\" replied David sarcastically.\n\nHeather tore herself away from Stacie and started to come over to him, prompting his friends to scatter for the moment not wanting to get caught up in whatever drama might unfold next.\n\n\"David,\" she said quietly looking up at him with her blue eyes catching the reflection of the sun off the water. He couldn't help but remember all the times he had spent staring into those pretty eyes, kissing those sweet, pert lips. \n\n\"Heather. It's good to see you. I'm sorry about how things went the last time we spoke.\"\n\nShe smiled, looking slightly less nervous, \"It's o.k. I dropped a bombshell on you, and you had every right to be upset. I'm glad you came today.\"\n\n\"I decided you were right. I would rather us be friends than nothing given all we've been through together.\"\n\n\"Friends...Yeah...\" echoed Heather, but there was a definite hesitation in her voice.\n\n\"You know they re-opened that old slide, The Blaster. We should try it later?\" mentioned Heather.\n\nThe Blaster was a slide that two people could ride at the same time side by side. It ended with a short drop off that plunged you into a pool surrounded by palm trees and a waterfall. It had been the first ride they had gone on together in the park. \n\n\"Um...That would be...\"\n\n\"Holy shit!\" called Chris from behind him, cutting off his reply.\n\nDavid turned to see what Chris was looking at and decided that his exclamation was not uncalled for at all.\n\nHe had seen Roxy mostly in jeans, flannel shirts, and work boots except for the previous weekend. Those outfits in no way prepared him for the woman that was coming across the sand toward him now. Dressed in a red bikini, Roxy was drawing looks from several men around the wave pool. Her hair was pulled back accentuating her long, beautiful face, and her smile, far friendlier than any David had seen adorning her features to this point, lit up her eyes and showed off her rich, full lips. The suit clung to her like a second skin, exposing quite a bit of her body to an appreciative audience. She halted in front of David and Heather towering over the latter.\n\n\"Hey, Sweetie,\" she said, leaning over to kiss David on the cheek. \n\nHeather tried to remain impassive, but he knew her well enough to see how uncomfortable she was in Roxy's presence.\n\n\"Good to see you found me o.k,\" he said awkwardly, putting an arm around his boss.\n\n\"I hope I wasn't interrupting anything?\"\n\n\"No...David and I were just catching up. He hasn't been around much this summer,\" said Heather.\n\n\"I try to keep him busy,\" said Roxy in a suggestive tone.\n\n\"She certainly does that...\" laughed David feeling that at least this wasn't a lie.\n\n\"Hey! Whose hitting the wave pool!\" shouted Roger waving his arms and charging toward it with Chris and George right behind him.\n\n\"Come on, Heather,\" called Stacie.\n\nHeather gave David one last look and ran after her friend.\n\n\"Did you see the way she was looking at us? This is going to be like shooting fish in a barrel.\" \n\nDavid nodded, still not sure this was the way to go. He tried to pull Roxy toward the pool, but she resisted.\n\n\"Is something wrong?\"\n\n\"I told you I suck in water as in I can't swim. I'm afraid at water parks I'm merely decorative.\"\n\n\"It's o.k. It's shallow unless you go past that red line on the side. It's perfectly safe, and I used to lifeguard here, so I am fully qualified to save you if you start to drown.\"\n\nReluctantly, Roxy took David's hand and walked toward the water, which quickly covered her feet and was surprisingly cold, making her shiver. David tried not to stare, but it was clear that Roxy had some very substantial nipples as they hardened and shown prominently through the cloth of her top. He guided her out into the water, keeping one hand on her as it grew deeper until they were in up to their waist.\n\n\"Here it comes...\" he said cryptically.\n\nA deep thumping sound filled the air, and the water quickly grew choppy as the artificial wave maker under the surface started to send ripples back toward the shoreline. The waves grew strong enough to lift Roxy's feet from the bottom, and she suddenly latched onto David. \n\n\"Everything is fine. You protected me from the spider I'm not going to let you sink,\" he said, trying to keep his tone light and bantering. In the short time, he had known Roxy she had always appeared in control and absolutely fearless, so it startled him to see her look so vulnerable. He pulled her tighter against him while they bobbed up and down.\n\n\"It's o.k. I promise...\" he whispered into her ear.\n\nRoxy clung not only to David's body, which she had to admit was not bad at all, but to his calm, deep voice. Slowly she relaxed, and started to enjoy the sensation of being swept along by the current, boosted and carried like she was floating in the air. \n\n\"This isn't so bad...\" she admitted quietly.\n\n\"I told you,\" said David.\n\nHe managed to unwind himself from her and took both her hands in his showing her how they could time the bounces of the waves and move higher by jumping with them. Her hair bounced on her head, and she started to laugh like a woman far younger than her twenty-nine years. \n\n\"See...just go with it...\" advised David.\n\nThey stayed in the pool for a while, and eventually, Roxy got comfortable enough to venture out a bit further on her own, but David stayed close by watching over her. It made her feel safe, knowing he was there. It had been a while since a man had made her feel that way, and she hated to admit it, but she missed that feeling. \n\n\"Come on. Everyone wants to go get some shaved ice,\" said David swimming up closer to her. \n\nHe retook her hand, guiding her out of the pool, and they joined the rest of the group in line at the shaved ice stand. Roxy went with a wild cherry flavored one, and David liked the way it stained her lips the same color. Briefly, he wondered how nice it would be to taste the cherry flavor coating her tongue, but he quickly dismissed the thought, reminding himself that this was just a fake date to make Heather jealous. \n\nSadly, Alex arrived to join them not long after, and the tension between the two young men threatened to bring the mood of the whole party down. Stacie suggested a turn on the lazy river to give everyone a chance to chill out, and Roxy soon found herself floating on a two-person tube with David.\n\n\"This is more my speed,\" she admitted as they drifted in the gentle current. Alex and Heather had a tube of their own and were some distance away leading the pack. \n\n\"How is it you never learned to swim?\" asked David.\n\n\"I don't know. I just never got around to it. We live in a desert you know it's not like drowning is a big problem.\"\n\n\"I suppose not. I could teach you if you like? We could do joint lessons.\"\n\n\"Oh! Emily would love that. She would have a field day making fun of her mother.\"\n\nThey both laughed with David enjoying the sound.\n\n\"You know Emily didn't fall far from the tree. The two of you not only look alike; you have the same laugh.\"\n\n\"I think I've laughed more since I met you then I have in years.\"\n\n\"Emily said you thought I was the funny one, although I think how she put it was more like you thought I was a wise-ass.\"\n\n\"I should have told her not to repeat that, but don't let it bother you. I like your sense of humor.\"\n\nDavid appreciated the compliment, \"I think you like to come off as a hard ass, Roxy, but deep down, you're nicer than you let on.\"\n\nThe way he looked at her then made her squirm in the inner tube. She got looks from guys, but she always felt like they were looking at her body and not seeing her at all. The way David looked at her right then was different, like he was seeing the woman beneath all that skin-deep beauty, and it made her feel special in a way she hadn't in a long time.\n\n\"Thanks, but don't spoil my rep. I need the guys at the plant to fear me.\"\n\nAt the next bend in the lazy river, David noticed everyone getting out to pull their tubes to the side, and he and Roxy joined them.\n\n\"Blaster time!\" said Alex indicating the tandem slide with a nod of his head.\n\nHeather looked at David as if she was going to suggest they go together, but Alex grabbed her hand and pulled her into line with him.\n\n\"For the sake of appearances we should go,\" said Roxy warily regarding the tall slide with something akin to dread in her eyes.\n\n\"Are you sure?\" asked David seeing her fear.\n\n\"You can save me, right?\" she half-joked.\n\n\"I'll be right next to you all the way,\" he confirmed, taking her hand and squeezing it.\n\nThey joined Heather and Alex in line watching them go first.\n\n\"Fucking Hell! Why did I say I would do this...\" thought Roxy looking at the long plunge down to the bottom.\n\nDavid reached over to pull her head around so that she was looking at him.\n\n\"Close your eyes until you start to move, and gravity will do the rest. I'm right here.\"\n\nShe nodded not trusting herself to speak at this point afraid the best she could do would be to curse a blue streak which would offend all the young kids clustered nearby. Then it was their turn, and just like that, they were flying down the slick surface of the slide which rose up slightly at the end tossing them into the air. The water of the pool beneath came up fast smacking Roxy a bit roughly, but she recovered bouncing up from the bottom. The current from the waterfall pushed her straight to the side, so there was no real need to swim, but her legs were so wobbly from the adrenalin rush she couldn't stand until a pair of strong hands yanked her to her feet.\n\n\"Holy shit, I'm alive!\" she shouted into David's face as he steadied her on her feet.\n\n\"I know!\" he shouted back, making fun of her palpable relief.\n\nRoxy's heart was racing in her chest, and without thinking, she pulled David into a fierce hug just thrilled to be at the bottom. David thoroughly enjoyed the feel of her large breasts crushed up against him. They pulled back from each other with Roxy still shaking in his arms. Her eyes were wide with excitement, and he had never seen a woman look more beautiful than Roxy Doyle at that moment. This time it was David's turn not to think he just went with what felt right kissing her on the mouth in front of a few dozen people standing at the edge of the pool. She seemed surprised at first, but she quickly joined him in a very hot embrace their lips rubbing sweetly together.\n\nHe could faintly taste the cherry of her shaved ice as they parted. \n\nRoxy glanced over, seeing Heather standing on the side shooting daggers at the two of them with her eyes.\n\n\"Oh...Uh...I guess you timed that right,\" she said indicating Heather with a tilt of her head.\n\n\"What? Right...Yeah...\" he replied, thinking that until then he had had no idea that Heather was still around, but not wanting to embarrass himself by admitting as much.\n\n\"This isn't a real date,\" he thought, kicking himself for momentarily forgetting. \n\nA lifeguard snapped at them to move it along since they were blocking the pool for the next pair to come down. \n\nThey formed up with the rest of the group to return to the lazy river and eventually made their way in a circle around the park to wind up back at the wave pool again. \n\nAs night fell, and it got later, the tired but happy crew ended up laying on towels to watch the fireworks display put on by Wave World in honor of the holiday. Roxy shared a towel with David sitting between his legs and putting her back to his muscular chest. He wrapped his arms around her for good measure, and she sighed, enjoying the feeling of being held like this maybe a bit more than she should. Out of the corner of her eye, she could see Heather and Alex in a similar embrace, but Heather only had part of her attention on the fireworks turning her head more than once to look over at David.\n\n\"That girl is dying to be where I am right now,\" said Roxy, although at the moment she wouldn't have wanted to give up this spot for anyone.\n\n\"You think so, Huh?\" \n\n\"Absolutely.\"\n\nDavid knew he should be thrilled by this outcome, but frankly, he was too comfortable holding Roxy to care. Her soft hair tickled his cheek, and her warm body felt nice and snug against his.\n\n\"Whoa! That was a pretty one!\" exclaimed Roxy as a series of rockets burst into all the colors of the rainbow. \n\n\"Not half as pretty as you,\" David wanted to say, but held himself in check, just a little sad that this was all for the sake of getting Heather back.\n\n\"What am I thinking, anyway? I'm just some immature kid to her...\"\n\nLater in the parking lot, he stood by Roxy's car as patrons poured out on their way home. \n\n\"Thanks for doing this. I guess I owe you one,\" remarked David.\n\n\"You don't owe me anything. Just keep teaching my kid to swim, and don't give me shit when I give you crappy work to do at the plant.\"\n\nDavid laughed again, and Roxy realized how much she was coming to enjoy that sound. \n\nA breeze kicked up and she shivered. David was suddenly close wrapping his arms around her using his body to shield her from the wind. The warmth he generated felt nice on her chilled skin.\n\n\"You don't have to keep up appearances, Heather's not here,\" said Roxy softly.\n\n\"I know,\" answered David.\n\nEven with her hair wet and bedraggled, Roxy looked stunning in the moonlight, a single strand had fallen half over one eye, and David couldn't resist the urge to brush it back out of her face letting his fingers run down her silky soft cheek. There was an awkward pause where they were staring at each other, and as one they started to move forward lips parting as Roxy's eyes began to flutter closed.",
        "A loud horn startled them both, and they jumped back.\n\n\"David! We're going out for pizza! You coming?\" yelled Chris out the driver's side window of his car.\n\n\"Yeah...Sure.\"\n\n\"I'll let you go...Good luck,\" said Roxy blushing, and glad it was too dark for David to see.\n\n\"See you at work,\" he said, regretfully. \n\nRoxy got in her car cranking the engine over and pulling away, leaving David in her rearview mirror.\n\n\"What the Hell was that Roxy?\" she said to the empty car.\n\nFor just a moment she had felt an overwhelming urge to kiss David, and not just for the benefit of some scheme, but because she had wanted too. She shook her head and turned on the radio, trying to drown out the voices in her head that were telling her she should have kissed him anyway. \n\nMrs. Foster was waiting up for her when she arrived back at her apartment, having taken care of Emily while she had been out.\n\n\"She give you any trouble?\" asked Roxy as she sat her purse down on the couch.\n\n\"Emily was a little angel. She went to bed right on time.\"\n\n\"Thanks for watching her. I appreciate it.\"\n\n\"Certainly, and how did your date go?\"\n\n\"I told you it wasn't really a date. I was trying to help David get his girl back.\"\n\n\"So you didn't have a good time?\" she prodded.\n\n\"I didn't say that...\" \n\n\"I would have been surprised if you hadn't that David seems like a nice young man, and easy on the eyes!\"\n\n\"Mrs. Foster! You should be ashamed that boy is barely eighteen,\" said Roxy even as she laughed and winked at the older woman.\n\n\"Is age always the measure of a man?\" asked Mrs. Foster in a suddenly serious tone.\n\n\"I'm not sure what you mean?\"\n\n\"Don't you? I've seen the way you look at David, Roxy Doyle, and whether you want to admit it to yourself or not, there's more there than you let on.\"\n\n\"I have no idea what you're talking about,\" lied Roxy.\n\n\"I'm just saying that I've lived a long time and I know when a woman is interested in a man, and you are doing a piss poor job of hiding it.\"\n\n\"David's just a boy. He's way too young for me,\" she said defensively.\n\n\"When does a boy become a man, Roxy? I think it's when he reaches that point in his life when he can see beyond himself. When he learns to value the happiness of those around him more than his own. When he is willing to sacrifice to make their lives better...to care for them. By that measure, David is more of a man now than Todd ever was, you even said that yourself.\"\n\n\"I know what I said...\"\n\n\"I'm just saying that I've watched you these last few years treating any man who so much as glances in your direction with contempt. I know Todd hurt you plenty, and you've been reluctant to trust any man since, but it's different with David, isn't it? I bet you don't even understand why you just feel it when you're around him.\"\n\n\"He has a trustworthy face...\" she said under her breath remembering their conversation by the spring.\n\n\"What?\"\n\n\"Nothing...Look, David is a sweet guy, but I can't imagine he would want to have to deal with all my shit! Life and love are complicated enough without throwing age differences, kids, and ex-spouses into the mix.\"\n\n\"Love is easy, Roxy. It's people who make it complicated.\"\n\n\"I can do without the fortune cookie philosophy. I'm just trying to do what's best for David.\"\n\n\"Doesn't he get to make that decision? You don't have the right to take that from him. All you can do is decide whether or not you trust him enough to offer him a way into your life. Whether he chooses to take it is up to him.\"\n\n\"This is absurd. I'm tired, and I'm going to bed. Thanks for the analysis, Mrs. Foster.\"\n\n\"Any time, Dear. Just think about what I said.\"\n\nRoxy closed the door behind her neighbor chaining the lock and turning out the light, but in spite of her exhaustion, it was a long time before she fell asleep.\n\nWhen her phone rang early the next morning, it took her three tries to get her hand on it, and she nearly pushed if off the end table and onto the floor before finally snagging it in her grip.\n\n\"This had better be a lawyer telling me I just inherited a million dollars,\" grumbled Roxy into the receiver.\n\n\"Roxy? It's David. Did I call too early?\"\n\n\"What do you think?\" she snapped, sitting up in bed to rub her eyes.\n\n\"Sorry...I just wanted to let you know it worked. Heather called me and wants to see me next Tuesday night. She was practically begging me on the phone to go out with her again.\"\n\n\"Oh...Ah...That's good news, David. I'm glad to hear it...\"\n\n\"You don't sound very excited.\"\n\n\"At this time of the morning, the only thing that would excite me is a big cup of coffee, or for you to hang up so I can sleep four more hours.\"\n\n\"Right...Well, sorry to bother you I...I'll see you at work tomorrow.\"\n\nRoxy cut off the connection laying back in her bed. Her mind drifted to the conversation of the previous night with Mrs. Foster, and try as she might she couldn't get the thought of how handsome David had looked at the water park out of her head, how comfortable she had been around him, and how perfect his lips had felt on hers.\n\n\"This is bullshit...He's just a kid, and I'm an idiot...\" she tried to tell herself, but that didn't stop the pain that suddenly flared in her chest or the tears that started to flow down her face.\n\n\"Mommy? Why are you crying?\" asked Emily appearing at the end of her bed with the same uncanny stealthiness that Roxy herself had displayed on more than once occasion.\n\n\"It's nothing, Baby. I just got something in my eye. Hey! You want waffles for breakfast?\" \n\n\"Oh! I love waffles!\" shouted Emily.\n\nRoxy wiped the tears from her eyes and followed her daughter into the kitchen, trying to put the phone call out of her head.\n\nTHE MEASURE OF A MAN -\n\nDavid pulled the comb through his hair again annoyed at the stray hair in back that flatly refused to lay down. He slapped some cologne on his face and grabbed his keys off the bathroom counter.\n\n\"Where are you heading out looking so fine?\" asked his Mom from the couch where she was reading a novel.\n\n\"I got a date with Heather,\" he said, stopping to tie his shoe.\n\n\"I thought you two broke up?\"\n\n\"We did...but she's having second thoughts.\"\n\n\"Good for you guys! I always thought you made a cute couple.\"\n\n\"Thanks. I'll see you later,\" he said over his shoulder as he headed out the door.\n\nHe found traffic to be a little heavier than usual for the time of night, and he slowed turning the radio on to relieve the boredom as he crawled forward. In the distance, a glowing billboard advertising the latest ride at Wave World dominated the skyline. A memory popped into his head unbidden of Roxy walking toward him in her red bikini, the sunlight falling on her reddish hair, lighting it like a fiery halo. His heartbeat picked up as more images flashed through his mind, Roxy laying with her bare feet in a desert spring, Roxy breathing hard with excitement after their plunge down the slide, Roxy kissing him...\n\n\"Shit!\" he yelled as he slammed on the brakes nearly hitting the car in front of him that had come to a stop.\n\n\"What's a matter with me? This is ridiculous. A couple of kisses that didn't really mean anything and now I can't think straight.\"\n\nHe resolved to put the older woman out of his mind as traffic finally picked up and he exited a short time later pulling into Heather's neighborhood.\n\nThe number of times he had pulled up into this same driveway were too numerous to count, and he looked up at the big, white, two-story house recalling all the parties and events he had attended here. He was just about to get out of the car when his cell phone rang, and to his surprise, it was Roxy's number on the display.\n\n\"Hello?\" he said into the phone wondering what she could want from him now. She knew he was going to be on his date with Heather tonight.\n\n\"David? It's Mrs. Foster.\"\n\n\"Mrs. Foster? What are you doing with Roxy's phone?\"\n\n\"Oh, she would be mad as a hornet if she knew I called you, but I felt like you should know. Emily had an accident today, and she's in the hospital.\"\n\n\"What happened?\" said David as a cold chill gripped him.\n\n\"She fell on the playground at her day camp. They think it might be a concussion, but they're not sure. We're at the hospital now. Roxy is pretty torn up about it, and she could use a friend. I told her to call you, but she wouldn't do it, so I got her phone out of her purse while she was at the nurse's station. I can't talk long she'll be back any second.\"\n\n\"Which hospital are you in?\"\n\n\"Park Side General. Oh! I have to go. I can't stay with her tonight, and she could use a shoulder. Todd is nowhere to be found.\"\n\n\"I understand...\"\n\nDavid took another look up at the big house and then put his car in reverse even as he dialed Heather's number with his other hand.\n\n\"Heather? I'm sorry I'm going to have to cancel our date tonight.\"\n\nRoxy sat by her daughter's bedside, holding her tiny hand in hers fighting back the tears that she knew would have only served to frighten the little girl. The doctors had assured her that the concussion was mild, and though they were going to hold her overnight for observation, she should be able to go home in the morning. The fear that had gripped her when the people at the day camp had called hadn't been lessened by that prognosis, however, and she still felt it like a weight sitting on her heart. \n\n\"My head hurts, Mommy\" whispered her little girl.\n\n\"I know, Baby. The nurse is going to be back in a minute to give you something to make it feel better.\"\n\nThe door to the room opened, and Roxy turned expecting the nurse wondering for a moment if the one time she had smoked a joint back in college was coming to haunt her because it appeared that a giant Teddy bear was pushing its way into the room.\n\n\"You know they really should let you use the freight elevators when you have a load this big,\" said David as he carried the stuffed bear in front of him.\n\n\"David...Is that for me?\" asked Emily her headache forgotten for the moment.\n\n\"I thought we could call him, Bonk, after what you did to your noggin,\" said David grinning.\n\n\"I love Bonk!\" said Emily pressing her head to the enormous bears stomach after David situated it in the bed.\n\n\"Where did you find that monstrosity?\" asked Roxy in surprise.\n\n\"In the gift shop. He looked lonely, and I thought I knew the perfect home for him.\"\n\n\"I'm going to have to get a bigger apartment,\" she said in fake irritation as she pulled David aside.\n\n\"What are you doing here? Aren't you supposed to be with Heather on your big date?\"\n\n\"Yes, but Mrs. Foster called me and told me what happened. I canceled my date with Heather. We can still do it tomorrow night, no big deal.\"\n\n\"I'm touched David, but you don't have to be here. Emily is going to be alright, and there's no reason for you to miss your date.\"\n\n\"You're here alone,\" he observed.\n\n\"Yeah...I tried to call Todd, but I'm sure he is passed out under a pool table somewhere.\"\n\n\"I'm not going to leave you alone in a big hospital dealing with this by yourself. My date can wait.\"\n\n\"David...You really don't have to be here,\" she insisted. \n\nHe took her hand looking into her eyes, \"Roxy, I'm right where I want to be.\"\n\nDavid looked so much older all of the sudden like he had matured in front of her eyes, though she suspected a part of her had always seen him this way.\n\nShe fought down another urge to cry as she hugged him close whispering, \"I'm glad you're here...\"\n\nHe gave her a tight squeeze drinking in the softness of her cheek on his before he took a step back and smiled at Emily.\n\n\"Now!\" said David dramatically, \"who wants to hear a story about dragons!\"\n\nEmily eventually got sleepy from the meds the nurse gave her and dozed off clinging to the soft fluffiness of the over-sized bear in her bed. Roxy sat next to her, stroking her hair.\n\n\"You look tired,\" said David in a low voice.\n\n\"It's been a long day,\" she admitted.\n\n\"Why don't you rest in the chair? I can watch over Emily for awhile. I promise I'll wake you if anything happens.\"\n\n\"I would argue, but I'm too tired,\" she admitted changing places with him.\n\nIt wasn't easy to get comfortable in the narrow chair, but she managed to find a position that didn't hurt too badly. As she started to drift off, her last clear image was one of David holding Emily's hand and singing softly to her while she slept. \n\nIn the morning, Roxy brought David a steaming cup of coffee, waking him from where he was dozing. They had changed places during the night, and though she had offered to let him go home, David had insisted on seeing things through now that he was here.\n\n\"I'm pretty sure my boss will give me the day off,\" he said yawning before he curled up in the chair.\n\n\"Smart-ass...\" she whispered.\n\nEmily was looking much perkier, and the doctors kept their word discharging her into her mothers care. David stayed with her while Roxy brought the car around to pick her up at the main entrance, and once she was buckled safely in the back seat, they shared another hug on the sidewalk.\n\n\"Thanks again for being here.\"\n\n\"I was happy to do it. I thought after I get some rest I might stop by and check on her later. I could bring a pizza or something. What kind does she like?\"\n\n\"Don't you have a date to worry about?\" \n\n\"I can go out with Heather anytime.\"\n\n\"If you wait too long she might lose interest and just stay with Alex,\" cautioned Roxy.\n\n\"If she holds me in no more regard than that, then she wasn't the right girl for me. Now about that pizza?\"\n\n\"David...I don't want you to throw away all the effort we went too. Isn't this what you wanted?\"\n\n\"I'm not sure anymore...I've been thinking about someone else lately.\"\n\nDavid was looking at her so intently it made her nervous like a girl about to be asked on a first date. She thought about what Mrs. Foster had said to her, but deep down, she wasn't convinced that this was the right thing for him. He was so young and had his whole life ahead of him to meet someone without the kind of baggage she was carrying. Someone closer to his age.\n\n\"I...I think you would be better off concentrating on Heather.\"\n\n\"Is that what you want me to do?\"\n\nRoxy swallowed hard a part of her wanting to say, \"No! I want you to be with me...\" but she couldn't get over the feeling that she was being selfish.\n\n\"I need to go we're blocking the pickup spot. Enjoy your date tonight, David.\"\n\nShe got into her car before he could say another word and pulled away from the curb. In her rearview mirror she could see him staring forlornly after her until she lost sight of him at the next turn.\n\nDavid stood on the now empty sidewalk and sighed.\n\n\"I guess I was reading too much into this whole thing,\" he thought, but it had sure seemed to him that she was hesitating, that she wanted to say more. Still, she was right about one thing he couldn't keep Heather waiting indefinitely. He pulled his cell phone from his pocket, dialing her number.\n\n\"Hi, Heather. I'm sorry about last night. Do you have some time?\"\n\nWith his phone pressed to his ear, David began walking back to his car.\n\nGrove Glen Park had been the sight of he and Heathers first date after their hook up at Wave World all those years ago, and it seemed like the perfect place to talk. David parked his car in the visitor's lot, and walked down a long, winding paved pathway that ran between a pair of little league fields and into a grove of trees ending at a pond. Heather was sitting on a bench flicking bread to a small crowd of ducks that waddled frantically around her legs.\n\nDavid stopped a dozen yards away just to watch. She looked so cute dressed in a pair of denim shorts and wearing a loose-fitting white cotton top. Her laughter filled the air reminding him of the picnic they had shared her three years ago. It had been a more innocent time, and he could never have forseen how things would end up for them.\n\nA short distance away was Juniper Hill. There, on a summer night after they had celebrated Heathers eighteenth birthday that had come just one month after his own, they had made love for the first time. It had been a magical moment about as romantic as a young couple could have hoped for with the moonlight shining down on their naked bodies. They had waited until after the park closed, but there was still an element of risk, and he recalled how nervous he had been that they would get caught.\n\nHeather spotted him standing at the edge of the trail, and her face broke into a smile.\n\n\"There you are! I was starting to think you were going to stand me up.\"\n\nShe tossed her last piece of bread, and the ducks parted before her like she was royalty as she strode toward him.\n\n\"Heather,\" he said by way of greeting not trying to hug her or even offer his hand, not yet.\n\n\"I love this place. A lot of memories here.\"\n\n\"Yeah. We had some good times you and I.\"\n\n\"Maybe...we could have more?\"\n\nDavid didn't answer but started walking over to the edge of the pond with Heather falling in beside him.\n\n\"Where did you meet her?\" she asked.\n\n\"Roxy?\"\n\n\"Yeah.\"\n\n\"She works at the plant,\" he replied evasively.\n\n\"She's beautiful.\"\n\n\"Yes, she is,\" David agreed.\n\n\"Quite a bit older than you though...\"\n\n\"I hadn't noticed,\" he said, making Heather frown.\n\n\"I would think a relationship like that would be...challenging?\"\n\n\"At least I feel like I can trust Roxy. I know she wouldn't run around on me.\"\n\n\"David, I tried to explain what happened between Alex and me.\"\n\n\"I remember. As I recall, it was mostly my fault.\"\n\nHeather looked away, embarrassed.\n\n\"How long had you been seeing each other before graduation?\"\n\n\"Let's not do this, David. Wouldn't it be better to talk about where things could go instead of dredging up the past?\"\n\n\"I'll take that to mean it had been a while.\"\n\nShe turned back around, stepping between David and the pond forcing him to look down into her bright, blue eyes. \n\n\"I made a mistake. I admit it. Alex was exciting to be around, but he and I have never had what you and I shared. I miss you, David. Don't you miss me?\"\n\n\"I miss the girl I kissed at Wave World. I miss the girl I laid with on Juniper Hill. Things have changed since then though, haven't they? Neither one of us are those kids anymore.\"\n\n\"Would you rather be with Roxy? What kind of relationship could you have with her in the long run, David? I know she could never love you the way I do.\"\n\n\"How do you love me?\"\n\nHeather reached out and took his hand, touching him for the first time. He could feel the softness of her skin.\n\n\"With all my heart. It will be dark soon. Lay with me tonight on Juniper Hill just like we did. Let's be that couple again. The one everyone else envied.\"\n\nThe sun was setting behind his shoulder, lighting Heather's face in a warm, yellow glow. She looked more beautiful than he had ever seen her look before in the three years he had known her, but somehow it was all different now. \n\n\"Would you still feel this way if Roxy hadn't come along?\"\n\n\"I never stopped loving you, David,\" she replied, but he thought he caught a subtle hesitation in her voice.\n\n\"That wasn't an answer,\" he pointed out.\n\n\"I don't want to talk about Roxy or Alex. It's only the two of us that should matter. Do I still matter to you, David?\"\n\nThe ducks had quieted. The air was still, and David Cross squeezed the hand of the only girl he had ever loved.\n\n\"I think we both have a lot to learn.\"\n\n\"Are you comfy enough?\" asked Roxy to her daughter, who was currently stuffed into a blanket on the couch.\n\n\"Yes...Can we watch T.V.?\"\n\n\"Sure...What do you want to see? How about a Disney movie?\"\n\n\"I want to see Captain Marauder!\" shouted Emily.\n\n\"Oh Boy!\" said Roxy with a wince trying to sound excited at the prospect of hours of poor special effects and over the top acting.\n\nShe started leafing through the DVD box when a knock came at the door.",
        "\"Is the pizza here?\" asked Emily.\n\n\"I don't think it could be we just ordered it,\" replied Roxy sounding puzzled.\n\nShe pulled open the door to find David grinning on her stoop.\n\n\"Good evening, Ladies! I came with a gift for the girl with a broken head.\"\n\nBefore Roxy could react one way or the other, he stepped past her holding out a DVD to Emily.\n\n\"Season 2 of Captain Marauder,\" he said proudly handing it down to her.\n\n\"Oh! Wow! All-new adventures!\" said Emily happily as she tore at the plastic wrapping.\n\nRoxy took the DVD and slipped it into the player waving David into the kitchen.\n\n\"You didn't have to do that.\"\n\n\"I know. I wanted to. It's not every day you meet a fellow fan who appreciates the cinematic wonder that is Captain Marauder.\"\n\n\"By 'cinematic wonder,' do you mean low budget piece of shit?\"\n\n\"Only to the unenlightened,\" said David managing to sound serious.\n\n\"Why aren't you on your date with Heather?\"\n\n\"You know I spent some time today thinking about that, and I decided I just couldn't bring myself to break up with my current girlfriend.\"\n\nRoxy rolled her eyes, \"We're not together, David.\"\n\n\"Aren't we?\" he said quietly taking a step closer to her.\n\n\"It was just a thing to get your girlfriend back,\" she replied, but her voice was starting to tremble.\n\n\"Was that all it was? You never once had any real feelings for me?\"\n\n\"I...I was trying to help you...\" she said, looking away not able to meet his eyes.\n\n\"I think you're lying.\"\n\nHe tilted her head back up with his fingertips forcing her to meet his gaze. Her eyes were shiny in the low light of the kitchen, tears forming in the corners.\n\n\"The first time we kissed was for show, so was the second. I want this kiss to mean something.\"\n\n\"David...My life is so messed up. You deserve better...\"\n\n\"What I want, Roxy is you.\"\n\nHis face was hovering just inches from hers, and Roxy's heart was beating so fast in her chest it seemed as if it would break free. \n\n\"If you don't want this, I'll stop,\" he whispered.\n\n\"No...I want you to kiss me,\" she answered.\n\nThey came together gently, lips slowly touching, softly rubbing. A kiss that sent a steady warmth flowing through them both until Roxy groaned in the back of her throat and threw her arms around David's neck giving him the hungry kiss she had been dying to since the parking lot at Wave World. Their mouths mashed together tightly, and he pulled her close feeling the heat of her body. It was a kiss that left them both shaking when they finally parted.\n\n\"Now that was the kiss I was looking for,\" said David with a grin.\n\nRoxy laughed leaning in to give him another when a knock sounded at the door.\n\n\"Pizza,\" she said.\n\nThe timing could have been better, but the pizza was delicious, and the three of them enjoyed it thoroughly. They sat on the couch watching episodes of Captain Marauder with Roxy doing her best to keep her criticism of the production values to a minimum. As soon as side one ended, she ordered Emily to bed much to her young daughter's disgust. It took some time to get her to settle down, but at last, she dozed off snoring quietly in the glow of her night light. Roxy shut her door and came back down the short hallway finding David sitting on the couch.\n\n\"She's asleep.\"\n\n\"I can go if you want you're probably tired after spending the night at the hospital last night,\" offered David.\n\n\"I don't want you to go,\" she said softly.\n\nThe light switch was on the wall by her hand, and she switched it off, leaving just the hallway light to provide a dim view of the room.\n\nDavid looked on with eyes that grew a bit wider as she sauntered toward him, reaching down to unbutton the cotton dress she was wearing. By the time she was a step away from his sitting form, she had half the outfit undone exposing the lacy pink bra that enveloped her large, firm breasts. David stood up from the couch and helped her release the last few buttons letting the whole thing slide off her shoulders and onto the floor. Her arms looped around his neck pulling his mouth to hers and they fell back into the hungry kiss that had been interrupted earlier only this time it grew even hotter and more passionate as their tongues joined in the action. Roxy's lips felt so perfect on his, so full and soft sliding all over, making his body shiver. Her tongue swirled around the inside of his mouth in perfect counterpoint to the movements of her head, leaving him breathless and shaking.\n\nHe slid his hands up the smooth skin of her back until his fingertips encountered the broad swath of cloth containing the restraining hooks that held her bra in place. They slid apart with surprising ease, and the weight of her substantial breasts forced the silky garment away from her where it fell to join her dress. David hugged her tighter to him, kissing her deeply, returning her passion with his own, letting his tongue flick sensually across hers. She sighed in the back of her throat, loving the feel of his hands running down her back. He pulled back brushing his nose against hers, kissing her forehead.\n\n\"You are so beautiful, Roxy,\" he whispered.\n\nThese weren't words she had never heard before, but somehow they sounded different coming from David. Many men had told her she was beautiful, but what they had meant was that she had beautiful breasts,\n\nor her ass looked good in her tight jeans, her legs were sexy in her shorts...that her face was attractive in the light of the bar. When David said it she realized he wasn't looking at those things, his eyes weren't even open, and for the first time, a man was looking at her, not her body. \n\nJust like at the water park, David was looking at the woman, Roxy Doyle, and he thought she was beautiful.\n\nA trickle of tears ran down her cheeks, and David frowned.\n\n\"Did I say something wrong?\"\n\n\"No,\" she laughed softly, \"you said something exactly right.\"\n\nHe looked confused, which just made him appear even more attractive, and Roxy pulled him into another kiss this one more fierce and needful than the last. When they parted, they were both breathing hard.\n\n\"Take me to bed, David,\" she begged.\n\nThe stumbled back up the short hallway kissing and touching, stopping periodically so that David could shed another article of clothing so that by the time they arrived at the bed he was down to his blue cotton boxers. Roxy sank to her knees, rubbing the obvious bulge on the front of his underwear with her fingers. He drew in a sharp breath as she lowered them, letting his long, thick penis swing into the air. It had been longer than Roxy wanted to admit since she had been in this position with a man, and she prayed her skills had not eroded. Slowly, watching his eyes, she took his cock into her mouth, feeling the warmth of the head slipping across her tongue. David shuddered and let out the breath he had been holding.\n\n\"Jesus...Roxy...\" he groaned.\n\nShe took his groan as a good sign and began to slide her head up and down his penis, getting the shaft all wet, making it shine. David groaned again, much louder when she started to stroke him in time with her head bobs feeling his vein covered pole get even harder in her loose grip. \n\nDavid slipped one hand into Roxy's curly hair feeling her movements. He was not totally inexperienced, but other than Heather he had never been with a woman this way, and Roxy was much better at this than Heather had ever been. The urge to release was already torturing him, but he fought to hold it back, wanting this first time to last. She wasn't making it easy as she released him from her mouth but stroked his wet cock even faster in her hand massaging and squeezing the tip. His scrotum surged, cum starting to force its way up his shaft, and desperate to delay the inevitable he pulled Roxy to her feet covering her mouth again with his before forcing her up onto the bed. He lay next to her, putting one hand on the side of her head while bringing his lips down over hers kissing her slick lips then letting that same hand drift down to her chest. \n\nHeather had been a very petite girl with breasts commiserate with her size, tight, perky mounds about the size of his palm that David could comfortably hold. Roxy was not remotely in the same ballpark. Her breasts were enormous by comparison. Big, round, much too large to hold easily her tits were still surprisingly firm and David loved the way her wide, light pink areolas were darkening into a deep rosy red as her excitement grew. He started to kiss his way down her neck, letting his tongue run over her upper chest and down one long slope aiming at the hard peak of her thick, firm nipple.\n\n\"David! Ah! It's been so long...\" she hissed as he hit home sucking her stiff nipple into his mouth and letting his tongue run circles around it.\n\nRoxy closed her eyes and arched her back slightly as waves of pleasure rolled through her stomach, making her pussy run wet. David was playing with her breasts with just the right mix of pleasure and pain, torturing her with slow licks that turned into hard love bites that made her gasp every time. Then he was on the move again, kissing his way across her stomach, hooking his fingers into the corners of her pink panties and carefully sliding them down. \n\nThe odor of her damp womanhood filled his nostrils, and David nuzzled Roxy's soft, curly pubic hairs teasing the top of her vaginal hood with kisses before he pushed her legs apart and moved between them. \n\nHe was greeted by the wet, swollen flesh of her labia, and he slipped his tongue between the folds running it upward. Roxy gasped and arched her back even more, grabbing at David's head. \n\n\"Right there...Oh! Sweet Jesus! David!\" she moaned.\n\nHe took the hint flicking his tongue around the top of her hood, making her whimper and thrash on the bed. \n\n\"Oh...oh fuck! OH! Fuck! David...David...Ah! God! Yes! YES! OH! DAVID!\"\n\nThe orgasm came out of nowhere catching Roxy entirely off guard. She twisted on the bed, feeling a wave of pleasure so strong crash through her body it made her feel dizzy for a moment. \n\n\"God, I don't remember the last time I came like that...\" she whispered still shaking a little.\n\nDavid slid back up next to her, and she reached out to stroke his face with her fingertips.\n\n\"Now it's your turn,\" she said, leaning over to plant a hot, deep, French kiss on his mouth pushing him over onto his back.\n\nRoxy pulled herself on top, throwing one leg over to straddle David's hips all the while still kissing him with long, sensual thrusts of her tongue. When she rose up, he had a perfect view of her naked body rising above him, and the sight of her took his breath away. She pressed her dripping slit onto his penis, rubbing it back and forth as David squirmed beneath her.\n\n\"You're so hard, David...I love the way you feel against me...I want you inside me so bad...\" she teased.\n\nHe slid his hands up across her stomach to cover her breasts, running his fingers over her hard nipples, and she bit her lower lip.\n\n\"You like this, don't you?\" \n\nShe nodded, \"My nipples are my kryptonite...if you play with them too much things happen.\"\n\n\"Like this?\" he asked, twisting them roughly.\n\n\"Oh, FUCK! David,\" she cried, throwing her head back.\n\nWhen she looked at him again, her eyes shown with wild lust.\n\n\"I am going to ride the cum out of you...\"\n\nShe took hold of him and guided his rock hard prick into her body, lowering herself onto his dick until it sank completely into her pulsing vagina.\n\n\"Ah! Oh...shit...SHIT!\" she gasped, biting her lip again.\n\n\"Are you o.k.?\" he asked not quite able to tell if she was enjoying it or in pain.\n\n\"It's good...It's just...been awhile...\" she gasped, letting her pussy settle onto his girth, she wouldn't want to buff his ego too much, but he was considerably bigger than Todd. \n\nSlowly she began to move, grinding her clitoris on his shaft and taking him with slow rolling movements of her hips. David caught on to her rhythm and pushed on her downward arc meeting her thrusts, pressing his cock deeper into the warm, slippery insides of her love hole. They both began to breath harder, grunting, groaning, crying out to one another. David touched her face, and Roxy took his hand, sucking on one of his fingers, turning him on even worse. The pressure was becoming unbearable between his legs, and he doubted he could hold back much longer. He used his free hand to play with her breast again rubbing and pinching her thick nipple.\n\n\"Oh! FUCK! David! I warned you about that...It makes me want to cum so bad!\"\n\n\"Cum for me, Roxy...\" he begged, pulling on her nipple.\n\n\"Oh...Oh...Oh! Fuck me! David, I'm going to cum again! Ah! AH! David! DAVID! Ahhhh! God YESSSS!\" she cried, throwing her head back and shaking the bed.\n\nHe couldn't recall ever feeling Heather cum like Roxy did right then, her pussy squeezing his cock so hard he could feel it like a fist milking him. The sensation hit his balls and the surge he had been barely holding back cut loose in a hot eruption of semen.\n\nThere was no stopping it this time.\n\n\"Roxy! ROXY! God, Baby, I'm cumming!\" he cried, gripping her breasts tightly as his cock swelled and jerked between her legs filling her to bursting with his seed.\n\nIt took quite some time for the ripples of pleasure to subside, but eventually, Roxy slipped free of David's slowly shrinking manhood and joined him back on the bed cradling her head on his hairy chest.\n\n\"Damn, that was good...I had forgotten it could be like that...\"\n\nDavid wrapped his arms around her basking in the afterglow, stroking her hair while Roxy ran her fingers through his chest hair.\n\nThe sound of a ringing cell phone startled them both.\n\n\"Sorry...It's Todd,\" whispered Roxy glancing over at the nightstand where her phone was flashing. She untangled herself from David and picked it up.\n\n\"Hello? Oh...So now you're calling. It's about twenty-four hours too late, Todd, we're already back from the hospital. I left you six messages for crying out loud! No, Emily is fine if that matters to you. Don't make excuses; it belittles us both. We know where you were and why. Fine...You can see her tomorrow, but you had better be sober when you get here, or I won't let you past the door.\"\n\nShe put the phone back grunting in disgust. David swung around to slide up behind her, putting his arms around her once again.\n\n\"I'm sorry,\" he said quietly in her ear then kissed her shoulder.\n\nRoxy touched one of his hands smiling in the semi-darkness, \"You may not have the years to your name, David, but Mrs. Foster was right you're already a better man than Todd Freawinkle will ever be.\"\n\nDavid's head came up, and he bit his lip to keep from laughing, but she could feel his body shudder with his attempt to hold it in.\n\n\"Your married name was...Freawinkle?\"\n\nA laugh escaped his lips in spite of his efforts, and Roxy smacked his thigh in mock annoyance.\n\n\"You know we're having a moment here and you're ruining it.\"\n\n\"Sorry,\" said David trying to calm his laughter, \"but...seriously, Freawinkle?\"\n\n\"You're lucky I like you so much,\" said Roxy turning her head and looping an arm back to pull his mouth to hers, silencing his laugher with a soft kiss. David squeezed her tighter as the kiss grew deeper, their tongues gently touching and adding to the fire.\n\nThey ended up back on the bed, but this time, David rolled Roxy onto her back sliding between her legs.\n\n\"Ready again so soon?\" she asked.\n\n\"I can't get enough of you, and also this is the advantage of dating the young guy.\"\n\n\"I can see that...\" she said, feeling how hard he was already, his long shaft slipping through her pubic hairs to rub up against her juicy slit.\n\nHe brought his mouth down to her chest, teasing the stiff peaks of her nipples that he now knew to be her weak spot. Roxy groaned, slipping a hand into his wavy hair.\n\n\"David! I love that so much...\"\n\n\"I want you, Roxy.\"\n\n\"I need you, David...right now.\"\n\nThey both cried out as David pressed himself back into her body, joining their flesh again. Roxy ran her nails across his back, reaching down to squeeze his tight, muscular ass while he drove himself into her over and over. Her breasts bounced with his thrusts as they got harder and more desperate. He rose up, looking into her frantic eyes.\n\n\"I'm so close...\" she whimpered clinging tighter.\n\n\"God, Roxy. It feels so good with you!\"\n\n\"Cum with me, David. I...Uh...I want us to go together...\"\n\nThe bed started to creak beneath their thrashing bodies, groans and lust-filled cries echoed in the small confines of the bedroom until both of their bodies snapped taunt at the same time David exploding again inside her adding to the cream that already filled her vagina. Roxy held him tight to her loving every moment while her body convulsed in one hard orgasm after another until they were both spent and fell together onto the covers.\n\n\"Best boyfriend ever,\" she whispered in his ear.\n\nEpilogue -\n\n\"Hurry up! I want to see them feed the elephants!\" said Emily.\n\nHer short legs were carrying her along at a surprising clip forcing Roxy and David to break into a near run to keep up.\n\n\"Still think dating an older woman with a kid is fun?\" she gasped.\n\n\"It definitely helps keep you in shape,\" replied David.\n\nThe zoo was packed with families, small children darting to and fro. The trio reached the elephant enclosure where a trainer in a gray uniform was feeding two of the mighty pachyderms. Emily ran up to the edge of the sidewalk, almost putting her nose to the fence and hopping up and down with excitement. \n\n\"Can you hold her balloon for me?\" ask Roxy who handed the string attached to it to him, and David looped it over his wrist while his girlfriend went to boost her daughter up so she could see better.\n\nHe watched them from where he stood thinking back to the beginning of summer when his life had seemingly taken a miserable turn. In a short time, he had lost his girlfriend to a guy he hated, his summer job to the same fellow, and been forced away from his friends to land in a position he was sure he was going to hate. Two months later, he had a beautiful new girlfriend with a daughter who never ceased to amaze him, a brand new adventure in college right around the corner, and that job he had been poised to hate hadn't turned out to be so bad. If nothing else it had brought Roxy into his life, and that alone made those ridiculously early mornings worthwhile.\n\n\"Can I have an ice cream cone?\" asked Emily, pointing at the stand that she could see from her high perch.\n\n\"I guess, but no more sugar after that,\" said her mother easing her to the ground.\n\n\"Can we go to the water park sometime? I'm swimming real good now.\" \n\nRoxy looked uncomfortable for a moment glancing at David.\n\n\"I don't know...\"\n\n\"Sure we can, maybe next weekend,\" cut in David.\n\nEmily walked ahead with a smile as the couple fell in behind.\n\n\"Are you worried about my friends seeing us with Emily?\"\n\n\"A little maybe. I mean before I was the mysterious hot chick. Now I'll just be the Cougar mom.\"\n\n\"I think you have to be over forty to be considered a Cougar.\"\n\n\"If I were over forty, this relationship would be even weirder.\"\n\n\"I like this relationship exactly how it is,\" said David as they stopped at the ice cream stand.\n\nRoxy put an arm around his waist while they waited in line.\n\n\"Are you sure?\" she asked.\n\n\"Mommy is scared of the water,\" said Emily thinking they were still talking about a trip to the water park.\n\n\"That's o.k. she's decorative,\" replied David leaning over to kiss his girlfriend.\n\nRoxy returned his affection reaching up to touch his face.\n\n\"Maybe a beard would make you look a little older?\"\n\n\"I'm old enough,\" he remarked, stepping up to buy them some cones.\n\nRoxy looked on as he handed a cone to Emily patting her on the head, despite her worries she had no doubt he was right. "
    ],
    "authorname": "darkoverlord6",
    "tags": [
        "first time",
        "hot oral sex",
        "mature romance",
        "milf",
        "older woman",
        "romance",
        "sexy red head",
        "younger man"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/a-boys-last-summer"
}