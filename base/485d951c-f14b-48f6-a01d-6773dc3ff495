{
    "title": "Pie Thief",
    "pages": [
        "This is a submission for the 2020 Winter Holidays event. I hope you enjoy it.\n\nSince the characters are Canadian, I've tried to use Canadian spelling within the story. If I inadvertently introduced some Americanisms, I apologize to my northern neighbors (or neighbours, as the case may be).\n\n\u2014C\n\n<center>\u2022 \u2022 \u2022</center>\n\nAt first, I thought Chessie had gotten out of the barn. But once my eyes adjusted to the dark, I realized it was the wrong size and shape. Then I thought it was a white-tailed, but it silhouetted itself against the stars for a second and I saw the rack. That wasn't a deer. Caribou. I'd seen them from a distance, of course, but we'd never had one stray in so close.\n\nI must have made some sound because the head came up and it froze, looking right at me. After a long staring contest, it lowered its head and went back to nibbling on the hay we kept outside for Mom's horse. That was okay. We had plenty and Chessie wasn't territorial.\n\nIt was still there in the morning, watching the activity up by the house and barn. It stood motionless by the far fence, its grey, brown, and cream coat an effective camouflage.\n\n\"Hmm,\" was all Mom said when I pointed it out. \"Far gate must be open.\"\n\nI reddened. I'd forgotten again. The gate was sticky, and sometimes I just shoved it and assumed it latched. More than once I'd heard, \"If Chessie gets out, you're the one bringing her back.\" More than once I'd spent hours doing just that.\n\nI sighed and started across the field. \"Leave it,\" she said. \"Otherwise, it can't get out. I'll put Chessie in the other field.\"\n\nOne day became two, became three. Once, from the kitchen window, we watched in amusement as Chessie and it touched noses across a fence before they whirled to gallop away from each other in response to something we couldn't perceive. And of course, the hay in the rack on the side of the barn diminished regularly.\n\n\"Looks like we have a semi-permanent houseguest,\" Dad said. \"Free food and he'll never leave&nbsp;... just like your Uncle Martin.\" The sly jibe at Mom's relative earned him a snap of the kitchen towel against his rear.\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"God damn it, you good-for-nothing\u2014\" You could hear the howl all the way across the yard and inside the barn. \"\u2014dirty, farting\u2014\"\n\nI poked my head out and started laughing. You have to admit: a 350-pound animal galloping in a panic to escape a 110-pound woman, its dark eyes bulging wide, legs churning the grass into divots, white muzzle coloured with what was either blood&nbsp;... highly unlikely&nbsp;... or the filling from Mom's newly baked cherry pie was pretty funny.\n\nMake that pies, plural, I thought, glancing over at the kitchen window and seeing both tins lying on the ground outside it.\n\nShe finally wound down with, \"\u2014flea-ridden, shedding-everywhere, poop-everywhere-else pie thief!\"\n\nI thought the flea-ridden part was unfair. He wasn't, but the rest was pretty accurate. And somehow, from that day on, \"the caribou\" became Pie Thief.\n\nHe lived up to his name. Pies on the windowsill to cool? Gone. Cookies left on the seat of a truck with the window open? Gone. Birthday cake freshly iced on the kitchen table? Back door somehow jiggered open and&nbsp;... gone.\n\nIt didn't matter if the paddock gate was latched or the mudroom door closed; it was constant warfare between him and Mom. The only evidence would be a \"Who me?\" look and a trace of fruit syrup or stray cream cheese icing caught on the hair around a lip.\n\n<center>\u2022 \u2022 \u2022</center>\n\nSnow hit, catching us prepared-but-unprepared as was so often the way when it came in October in Ontario. Firewood had been laid by; snowmobiles had been untarped and tuned up, ditto snowblower; winter tires were on the vehicles. But as always, there was still stuff to be brushed off and put away in the barn, and that fell to me.\n\nWhile I was working on it, I noticed that Pie Thief was hanging around, not disappearing for long periods like he sometimes did. It struck me that he thought the barn a pretty nice place out of the wind and snow. And one with good proximity to Mom's kitchen.\n\n\"You think the hay is enough?\" I asked my father. \"Do we need to get him any supplements?\"\n\n\"You mean like your mother's ginger cookies?\" We both laughed. \"I don't know. Maybe talk to Mr. Coulombe at the TSC.\"\n\nI had my chance when Mom sent me into town for a large bottle of Vitamin D to get us through the dark months.\n\n\"I don't know, Jed,\" Mr. Coulombe said. \"You might talk to Kerstman. He owns a farm a way out of town with some herds&nbsp;... not cows, other stuff. I've heard he has some bison, some caribou. My wife buys this goat kefir he sells. I could give him a call for you.\"\n\nI nodded.\n\n\"Kerstman? It's Rene Coulombe. I've got young Jed Webbe here, and it seems he's acquired a caribou calf and could use a little advice.\"\n\nHe listened and then hung up the phone. \"He says he'll stop by in the next week or so.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nI heard what sounded like a bicycle bell. It came again and then a rhythmic crunching was added. I poked my head out of the barn. Coming up the drive was a middle-aged guy in a beat-up black sledge pulled by two caribou. Trailing behind was a bright orange, plastic something. \n\nIt was a bicycle bell I heard: when he saw me, he reached over to one screwed onto the&nbsp;... I didn't know what to call it&nbsp;... the gunnel, I guess&nbsp;... of the sledge and gave the lever a couple of firm pushes to produce the \"tzzing, tzzing, tzzing.\" He gave a little click of his tongue and pulled to a smooth stop.\n\nIn the stained and faded brown coveralls, the old knee-high Kamiks, and the Canadian Tire toque perched on his head, the wiry little man could have been any local out for some firewood or mending a fence. But the animals gave him away.\n\n\"Mr. Kerstman?\"\n\n\"That's me.\" He looped the reins and hopped down, extending a hand. The clean-shaven face was ruddy from the cold and his blue eyes\u2014the kind Mom called \"dreamy Paul Newman eyes\" when she wanted to tease Dad\u2014crinkled as his face split in a grin. \"Just call me Kerstman. You're Webbe?\"\n\nI wasn't used to being called that. If anything, that was my dad. \"Uh, yeah, I guess.\"\n\nHe laughed. \"Good that you know who you are&nbsp;... I guess.\" It was hard not to smile along with him. His attention swung to the paddock. \"There's the boy.\"\n\nI turned and saw Pie Thief hanging over the fence, studying the three newcomers intently. He made his grunting sound and was answered by one of those behind me. Kerstman walked over and reached into his pocket. From the sudden, rapt attention on Pie Thief's face, I knew that it emerged with some kind of treat. What, exactly, I wasn't sure since it disappeared in one quick inhale. Kerstman clambered over the fence and walked around Pie Thief, one hand maintaining contact all the time.\n\n\"Looks like he's close to full grown; weight seems okay. He's having no problem finding grass and lichen?\" Kerstman glanced back at me as he asked.\n\n\"We don't close the far gate\"\u2014I gestured\u2014\"so he can get out any time he wants. We just close this one to keep him from the house. Not that it helps much,\" I muttered.\n\nHe laughed again. \"Coulombe told me about how he got his name.\" He reached out and ran a hand down Pie Thief's neck. \"Sugar's not the best, but I don't think he's hurting from it. If he knows where to get food now, he'll be okay in the snow.\"\n\nI looked over at the animals that had come with him. \"They're a lot bigger than Pie Thief.\"\n\n\"He looks like a barren-ground caribou. They're smaller. I have some of them. But those guys over there are boreal woodland caribou, the largest type. The one on the left is called Thunder because\u2014\" Just then a monstrously loud cervine fart ripped through the air. \"Well, I guess it's pretty obvious why. And just for symmetry, that makes his partner Lightning.\"\n\n\"I've never heard of a caribou farmer.\"\n\n\"Well, there are some up north, mostly subsistence.\"\n\n\"Why do you do it?\"\n\nHe shrugged. \"There's a market, so someone will. It has less than half the lactose of cow's milk, which attracts the business types who've noticed that low-lactose products have doubled in sales. Where there's a demand, there's always someone willing to make a buck off it.\" He smiled at the way of the world. \"And artisanal cheesemakers love it because it's twenty-two percent milkfat. That's five or six times what you get out of a cow.\"\n\nHe turned back to Pie Thief. \"He's still got his antlers. That's unusual for a male this time of year. Males tend to lose theirs about now, females in the summer. They regrow them every year.\" I noticed both of his still had theirs. He saw me notice and shrugged. \"There are exceptions who don't shed on schedule.\"\n\nHe clambered back over the fence. \"I brought you a sled. It'll let you get around in the snow.\"\n\n\"Umm&nbsp;... I kinda like my snowmobile.\"\n\n\"I get that. But when it's thirty or more below and it won't start because you forgot to set the choke before stopping the last time, or forgot to plug in the block heater, well&nbsp;... And hauling a trailer of firewood behind a snowmobile is awkward.\" He gave me a speculative look. \"Besides, don't you sometimes just like to hear yourself think out there? You can when it's quiet.\"\n\nAnother loud fart split the silence and we both burst out laughing. \"Well, usually it's quiet.\"\n\nHe tipped his head. \"Come on. Take a look. This is a pulk.\" I peered at the orange contraption that looked something like the rescue sled you saw at ski places crossed with a rowboat. \"It was developed by a band called the S\u00e1mi and has the advantage of working in just about any kind of snow.\"\n\nHe shook out an arrangement of leather, canvas, and wood. With a few deft moves, he unhooked Lightning from his sledge and showed me how to harness him up: some straps around his chest and belly, and then a long single rope stretching back underneath and out between his legs to the pulk.\n\nThen I tried it with Pie Thief. He thought the whole apparatus looked rather sketchy. It didn't look like a grey wolf or a bear intent on caribou tartare, but&nbsp;... \n\nTrying to buckle a strap on an animal half-again as big as you are, and who keeps sidling sideways and spinning to put his antlers toward you&nbsp;... umm, no.\n\nKerstman laughed and took the harness from me. Brushing his hands down the wiry fur, he murmured softly as he slowly worked. \"This is called a round collar. Don't use a chest collar because they put all the pressure on a small area.\" He picked up a wooden yoke-thingie and let Pie Thief sniff it. \"This is the hame. It&nbsp;...\" The quiet voice droned on, lulling, as he named each part and described what it was for.\n\nWhen he was done, he reversed the process. Then he handed me the collar. \"Slowly. Talk softly as you do it. Remind him what each piece is for.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nShe was small and dark, with hair like a raven's wing that she wore in a long plait down her back. I was lost the moment she told me to get my goddamn feet off her coat.\n\nPoor Angus was up from Hamilton, playing one town over from where we lived. There weren't a lot of local bands and even fewer that were much good, though that didn't stop me from getting out and listening. When one came in from farther away, I made it a point to go. As long as it wasn't total thrash-metal, I could generally have a good time.\n\nMy buddies and I were wedged around a tiny table just like everyone else in the bar, my back to it so I could face the platform. Her coat had slipped halfway off the back of her chair, and I hadn't noticed that fact nor where I was putting my feet. \n\n\"Sorry,\" I muttered, suddenly tongue-tied.\n\nShe pointedly brushed the footprints off the sleeve, giving me a tight smile that said, \"No problem,\" on the surface and, \"Idiot!\" underneath.\n\nAt the set break, I took a breath and bent forward. \"Can I buy you a beer to make up for stepping on your coat?\"\n\n\"I'm not drinking.\"\n\nEven if I couldn't see the half-empty draught sitting in front of her, the giggles from her tablemates would have made the brushoff obvious. I sat back and ignored the sounds of crash-and-burn my friends made.\n\nThen I leaned heavily into my liquid courage and bent forward again. \"Since you're done with that beer you're drinking, can I buy you a coffee to make up for stepping on your coat?\"\n\nBoth tables went quiet, waiting. \n\n\"I don't like coffee.\"\n\nThe wide-eyed looks from her tablemates told us all that was a lie, but the message was clear. I shrugged and turned back to my table, my friends now silently raising eyebrows in commiseration at how unnecessary she was being.\n\nThe second set passed in a blur. My eyes kept wandering to the right to study the quarter-profile. I think she knew it, maybe caught me out of the corner of her eye, because she stared fixedly ahead.\n\nIt was hard to let it go, but I managed, although I used a couple of Creemore lagers to help the process. Luckily, I wasn't the one driving tonight. \n\nWe came around the corner of the bar heading for the parking lot and, of course, there they were in a little pack. I saw her face tighten as our eyes met.\n\n\"I'm\u2014\"\n\nI didn't get any further than that. \"Are you clueless? Have you and your buddies got some kind of 'Who Can Nail the Squaw?' game going that you can't take a hint?\"\n\nThe ugly epithet drew me up short. While cries of \"Whoa, Nadie!\" and \"Girl!\" from her crowd, and \"What the fuck, bitch?\" from mine echoed, I took stock of what I was facing. I ignored everything but the brown eyes staring fiercely into mine.\n\n\"I was just going to say sorry if I spoiled your evening. I only asked a second time 'cause I couldn't take my eyes off you.\"\n\nOne of her friends wrapped an arm around&nbsp;... Nadie?&nbsp;... and pulled her away. \n\n\"Sorry,\" I heard one of the other girls say to one of my friends. \"She got dumped this morning and she's had a few.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nI didn't see her for a couple of weeks. Then I had to go over to Ville-Claire to pick up a part for my dad. While I was there, I stopped in at the bakery\u2014a croissant and some coffee would hit the spot\u2014and there she was behind the counter.\n\nMy first thought was to duck back out of the place as quickly as possible, but two things got in the way. The first was that she'd seen me. She looked once as I came in the door, frowned slightly as if she couldn't place the face, then looked again and stiffened. The second was that I felt the same thunderbolt light up my nervous system. There was nothing to do but tough it out.\n\n\"Almond croissant and a large coffee, black, please.\"\n\nShe silently filled my order. \"Four fifty,\" she said, setting the paper bag in front of me. \n\nI dug out the coins. As I slid them across the counter, she said quietly, \"And I'm sorry.\"\n\nI looked up to meet those intense eyes again. I gave a little \"whatever\" shrug and started to turn, but the jolts of electricity in my system wouldn't let me. I turned back.\n\n\"After you get off, can I buy you co\u2014\" I started to say coffee and then realized where we were standing. \"\u2014something to eat to make up for stepping on your coat?\"\n\nShe gave a half-exasperated snort. \"You don't give up, do you?\"\n\nNerves made me honest. \"I can't take my eyes off you.\"\n\nHer forehead tightened, then relaxed. \"I get off at one.\" She nodded with her chin out the window at the place across the street. \"They make an okay burger. If you show, you show.\"\n\n\"So,\" she said when she settled across from me. I'd spent half an hour picking up the part for my dad, and twice that killing time. \"So, why can't you take your eyes off me?\"\n\nI looked at her blankly.\n\n\"I've got a boy's hips and no chest. My face isn't going on any magazine covers. What kind of line is that?\"\n\n\"I\u2014\" I stopped. I tried again, \"I\u2014\" and got no further. \"I don't know. I just couldn't.\"\n\n\"Couldn't or can't?\"\n\n\"Couldn't then, having trouble now except you're making it easier by making me uncomfortable.\"\n\nThat got a small chuckle. \"I don't even know your name.\"\n\n\"Jed. Jed Webbe.\" \n\nShe stuck out her hand. \"Nadie Simard.\"\n\nAnd my second encounter with Nadie Simard likewise passed in a total blur. The only thing I remembered clearly was the conversation when we walked out.\n\n\"Can I see you again?\" I asked.\n\n\"Okay.\"\n\n\"What's that big land mine I need to watch out for?\"\n\n\"What do you mean?\"\n\n\"At the bar, you kinda got all extra and there might have been a slur shouted.\"\n\nI could see the light inside her shut down, her upset remembered and soaking in anew. I felt bad about that, but I needed to know. I waited.\n\n\"My last boyfriend.\" The words came out reluctantly. \"He pushed me and after a while, I gave in. After I slept with him a couple of times, he dumped me. One of my friends heard from one of his friends that he just wanted to see if it was any different.\" At my puzzled look, \"Sex with a First Nation chick. Well, part-First Nation.\"\n\n\"Okay.\" \n\nI could almost see her puff up like a howler monkey.\n\n\"It's NOT fucking okay! I\u2014\" \n\nI cut off the outrage. \"Okay, as in: okay, I can work with that.\" She shut her mouth. \"Okay, as in: you can call the shots. I won't push anything. You'll do the asking.\" She deflated the rest of the way.\n\n\"What does that mean?\"\n\n\"Exactly what it sounds like. If you want a kiss or anything, you'll have to start it.\"\n\nI ignored the sputter&nbsp;... only semi-outraged because it didn't get to her eyes. A glint of humour had replaced the anger there. \"Pretty sure of yourself.\"\n\n\"Nope. Not even a little sure. But hopeful.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nIt took two more dates before she ended the evening by rising onto her tiptoes, which put her lips still a long way from mine. \"Will you kiss me?\" \n\nI obliged; of course I did. It was a stupid promise I'd made. Well, stupid as far as the major part of my brain was concerned, the part that had fantasized about a kiss&nbsp;... and more&nbsp;... for weeks. A little part was rubbing its hands together in glee because what guy wouldn't get a thrill about being told they were wanted?\n\nTwo weeks in which I tried to find out everything I could about her. In which I found out she didn't just work behind the counter at the bakery, she was the assistant baker. \"I'm going to either buy that shop or open my own someday.\"\n\nIn which I found out that her father wasn't in the picture\u2014she was not forthcoming on what that meant: dead or just gone, so I assumed gone\u2014and her mother had mixed feelings on her daughter's dating life. \"She'll be nice unless she thinks I'm being used. Then she's nasty as fuck.\"\n\nTwo weeks in which I dreamed about those eyes and thought about how great it would feel to hold her up against me by that tight little butt as I kissed her. So now, would I kiss her? Damn straight I would! Even though my hands on her butt didn't figure into it, it was still great.\n\nAnd then she turned back from putting her key in her door, gave a little run-hop, and ended up with her arms around my neck for another, and my hands reflexively grabbed her butt. The wiry, weigh-nothing body in my arms in contrast with the soft lips&nbsp;... let's just say it met all expectations.\n\nOf course, that brought its own issues: if you're on first base, then it's only natural you set your sights on second. And so, my nights got no calmer because I'd made that promise and couldn't even find out if second base was a possibility.\n\nThe worst was when I invited her to our family's ritual Saturday dinner. My older sister, Jess, was up for the weekend from Toronto this time, and Mom said, \"Why don't you invite your friend?\" And then it was late, and snow was blowing, and there'd been a glass or two of wine. \"Nadie, you probably shouldn't drive. We can make up the guest room for you.\"",
        "\"Thanks, Mrs. Webbe.\"\n\nAnd so I got to lie there, fantasies running amok. Two doors and the width of a hallway away. What does she wear to sleep? T-shirt and underwear? Naked like me? Was she thinking about me two doors and the width of a hallway away? What would happen if I knocked? I had promised not to find out.\n\nThe morning came\u2014an entendre I tried not to think about\u2014and I lay there until I heard voices. I found Mom listening avidly to Nadie. \"So, while the pears are poaching, you pulse the Gruy\u00e8re with the flour, salt, and sugar in&nbsp;...\" \n\nOther than a my-ears-only, big-sister, \"Jed's in lerrrvvv\" tease from Jess, it was astonishing how normal Nadie's presence felt. It was like when Jess's boyfriend came up, and they'd been dating for almost three years, and we all knew he was going to propose as soon as she graduated.\n\n\"Once you take them out of the oven, just put them in your mudroom to cool for\u2014 What?\" She broke off as the four of us burst into laughter. \n\n\"Not if we want to eat them,\" Dad said. \"You need to meet Pie Thief.\"\n\nAnd so she did. And then she saw my workroom in the barn where I fixed and restored old furniture for spending money. I was taking a gap year so my parents didn't have two in university at the same time, but I was already accepted at McMaster. The thought of that was suddenly not as rosy as it had seemed months ago.\n\n\"I should get going,\" she said. \"Mom'll want to grill me while pretending she's not.\" She went back inside to say goodbye to my parents and sister. \n\n\"Come again whenever,\" Mom said.\n\n\"Can I?\" she asked me as we walked out to her car.\n\nAnd so, she became a regular at the Saturday table. She'd show up about two or three, just as I was finishing out in the barn. Mom would insist on taking her backpack up to the guest room while Nadie laid out whatever she'd brought for that week's baking spree. I'd clean up in the shower, and then we'd walk or just hang out if the weather was bad. We'd have dinner and then my parents would tactfully go upstairs or hang in the kitchen, ceding us the living room.\n\nUntil the week when something different happened. I came out of the shower and found Nadie's backpack on my bed. I was halfway through dressing when I heard a tap on the door. She slid in. She followed my gaze from her face to the pack and back. \n\n\"I talked to your mother. She said they're okay with it.\"\n\nThat night wasn't my first time. I'd had sex with a girlfriend in high school. I knew what a blowjob felt like, and found I enjoyed returning the favour. What I hadn't done was take my time like this: half my experience had been in cars or the barn, worried about my dad needing something from his toolroom; the other half were moments grabbed when her folks weren't home. \n\nWhat I hadn't done was do it with someone who electrified me the way Nadie did.\n\nThis time, after a can't-quite-meet-Mom's-eyes \"we're going to the other room,\" I took Nadie's hand and headed upstairs. It was winter dark outside, only a little light filtering in from the barn spots. She was nervous; so was I.\n\nShe was also bashful. I could tell. After she kissed me her shoes came off quickly, but the socks followed less so, and the hands slowed dramatically as they pulled at the hem of her sweater. I remembered her self-description. I reached over and stilled her hands.\n\n\"Let me?\" I asked. \"I want to.\"\n\nShe froze and then nodded. \n\nI took my time because I had already played this scenario out in my head during night after night of feverish imagination. I knew exactly how I wanted it to go, exactly how I wanted to extract every morsel for her so that she didn't have that dismissive tone when she said \"slept with him\" that she had when she told me about her last boyfriend.\n\nI kissed her mouth as I held the sweater up over her head and she worked her arms free. I kissed her neck and that place behind her ear as I did the same with her shirt. She wasn't wearing a bra, so I kissed the dark buds that I could just make out in the shadow of her body, refusing to hurry. I wrapped my arms around her hips and lifted her, pivoting to lay her on the bed, then kissed her mouth again, and then her eyelids\u2014\"Close them. Just relax.\"\u2014and then down her collarbone to bring her nipples back to full attention.\n\nI traced a line of kisses down her belly, pausing to pop the button and work the zipper on her jeans. They weren't tight and I stepped back and grabbed the cuffs and drew them down her legs, revealing the triangle of white lace beneath. \n\nI started from the other end this time and kissed my way up from her ankles, calves, turning her leg to catch the back of her knees, evoking a little giggle and squirm of ticklishness. Kisses, little nips too, as I worked my way up her thighs, entranced by the sound of her breath quickening. Then the juncture of leg and hip, where I hooked my fingers in her panties and drew them slowly down, letting one hand take them off her ankles while the other stroked her hip.\n\nThen I kissed a circle around the tuft of blackness darker than the night sky&nbsp;... and paused. Her hips rose. I repeated the circle of kisses. She made a sound somewhere between a moan and a whine. Another suggestive bump of her hips.\n\n\"That's not the agreement,\" I said.\n\n\"What!\"\n\n\"The agreement is I can't do anything until you ask. You started the kissing, so that was okay, but this&nbsp;...\" I hoped she could hear the laughter in my voice.\n\n\"Jed!\"\n\n\"I'm not picky about how you say it. I mean, since you're a baker, maybe, 'Jed, how 'bout eating my muffin?' But I can't\u2014\"\n\nShe pulled me by the hair so that our eyes met. \"Jed, please.\"\n\n\"Close enough.\" \n\nI listened to her breathing, tried to read the shifts of her hips and the gentle pressures of her hand. I tried to give her exactly what she wanted. I succeeded&nbsp;... at least enough that her breathing went into overdrive and then her entire body clenched and clenched again.\n\nI sat back on my heels and waited. She pushed down with her elbows and raised her upper body until she could look down its length at me. There was just enough light to see the satisfied smile. Then it twisted into something broader as she threw bashfulness to the wind.\n\n\"Will you please take your goddam clothes off, and come here and fuck the hell out of me?\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nChristmas came. Mom declared it the best one ever, mostly because she'd gotten the one thing she'd always dreamed of: a professional oven. I'd heard Nadie and her talking as they worked on Saturday afternoons: \"... always wanted&nbsp;...\"&nbsp;\u2014 \"I think electric because&nbsp;...\"&nbsp;\u2014 \"Convection or deck?\"&nbsp;\u2014 \"Well, Wiesheu or Unox, maybe Convotherm&nbsp;...\"\n\nBut there weren't any stores like that up by us, nor any bakeries going out of business, and Mom declared they were too expensive, and it wasn't worth going down to Toronto to find one, and she loved her presents just fine. And so it remained her little fantasy, one fueled by Nadie's \"Oh, wouldn't that be wonderful!\"\n\nUntil Kerstman heard them talking. He stopped by every once in a while to check on Pie Thief&nbsp;\u2014 \"I've taken a liking to your little fella.\"&nbsp;\u2014 and was never averse to stopping in the kitchen for a slice of pie or a cookie or three.\n\nHe nodded me aside as he was leaving. \"Tell your dad I know where we can get one.\"\n\nAnd that Christmas morning we heard the \"tzzing, tzzing, tzzing\" followed by the crunching of hooves through the snow. When we all piled out, Mom shrieked when she saw the large stainless box on the back of the sledge with the giant red ribbon tied around it. And then, of course, nothing else would do but we menfolk carted an unused sideboard out of the way in the kitchen and, lo and behold, revealed a 220-volt outlet Dad and I had run in when Mom was out for a day.\n\n\"Get a room, you two,\" Jess said as Mom and Dad's clinch went on.\n\nWhen Nadie showed up that afternoon, I tried not to be jealous that the first thing she exclaimed over was the new appliance and not seeing her boyfriend. She made up for it when we had a moment alone, making sure I knew that, while a man might not be quite as interesting as an oven, when it came to men, I was certainly her favourite, and besides, did I like the present she had for me?\n\nI unwrapped a leather holder for my wood chisels. \"You said you hated keeping them in a wooden box. I stitched it. My uncle did the tooling,\" she said shyly. \"He's really good at it.\" He was. The outside of the wrap had traditional symbols beautifully cut into the leather and my name embossed.\n\nShe pointed to the corner. \"He showed me, and I did that part.\" A heart, \"N.S.\" and another heart.\n\n\"I love it,\" I said, meaning it. I gave her what I had made for her.\n\nI'd taken samples of various woods that I'd cadged from a specialty lumber yard the last time I was down south. I'd shaved them thin and then inlaid them into two sheets of mahogany in the form of sunbursts: the lightest of bird's-eye maple leading to the darker beech and larch, moving to the rich tones of gum and mesquite. I'd built spacers and added brass hinges and then hour after hour with shellac to put a French polish on it. The results were the covers of a photo album. \n\nOnly the first page had anything on it: a picture of the two of us taken out in the midst of a grove of evergreens, untouched snow clinging to the dark green, she tucked into the circle of my arms, my chin on her hair. I'd written \"Heaven\" as the caption.\n\nShe stared at it a long time, then pulled me down for another long kiss. \n\n\"Geez, everybody needs to get a room around here,\" my sister observed from the hallway.\n\n<center>\u2022 \u2022 \u2022</center>\n\nThe thought of leaving Nadie for months at a time was almost unbearable. She worked Saturdays and alternate Sundays, so even though it was only about five hours down to Hamilton, our chances of much time together while I was at university were slim. My parents understood. Unlike when Jess went off, there was no shared excitement over \"time to spread your wings.\" Instead, there was a quiet recognition that it would be hard for me, and \"hopefully it will be midterms and then Christmas break before you know it.\"\n\nBut while I loved the Near North, I didn't want to work on a farm or in a store; I wanted to do software, and that meant a degree. So I packed for McMaster.\n\nNadie came over to say goodbye. She handed Mom a large rectangle wrapped in foil. \"A blueberry buckle. I made two of them this morning.\" She turned to me. \"And half of the other one for your drive. Watch your shirt; I used a lot of berries.\"\n\nI smiled even though I could feel the upset welling inside.\n\n\"The other half's to keep me going. You lead, I'll follow,\" she said.\n\n\"Huh?\"\n\nSuddenly she started giggling. \"Surprise! You didn't think I was going to leave you all alone, did you? I'm moving to Hamilton for the next few years.\"\n\nWhile I did my fish-out-of-water impression, she and Mom shared a huge grin.\n\n\"What's going on?\"\n\n\"That student housing assignment your mom 'accidentally' opened? Yeah, that's fake. I have a tiny, tiny apartment I rented, and your parents are paying the utilities instead of dorm fees.\"\n\n\"But your job&nbsp;...\"\n\n\"A bakery in the city has hired me. Ambe! That means 'Let's go!' Lotsa miles.\" She was looking at me with a curious expression on her face. I suddenly realized she was nervous, scared that she'd overstepped and that I wanted to go spread my wings unencumbered.\n\n\"This is the best surprise of my entire life!\" There was no doubting the honesty in my voice. \n\nShe beamed.\n\n<center>\u2022 \u2022 \u2022</center>\n\nAt midterms, we went to her mother's for Thanksgiving. I'd been pushing for everyone together out at our place, including her mother, but Nadie had said no. \"I've spent a lot of time out by your folks. She wants some time with us.\"\n\nI'd met her mother a few times, but never for very long: hellos the few times when I picked Nadie up at her house; dinner there once, very polite and friendly on the surface. But I had felt myself being examined. \n\n\"Did I pass?\" I'd asked Nadie later.\n\n\"The jury has not yet voted to convict.\" Seeing my expression, she had given me a quick kiss. \"She knows what happened with wankstain\"\u2014I got a kick out of the names she gave the guy on the rare occasions she mentioned him\u2014\"and she's from a generation that had to deal with that shit even more. Trust me, she's cautious, but you're doing great.\"\n\nI was somewhat quiet as we ate the turkey and all the trimmings. Nadie didn't press me to talk; she understood without a word being spoken. She filled the space, chattering away about the apartment, about the things we did, about friends we'd made. We ended with a three-berry and apple pie that had me surreptitiously loosening my belt. \"Thank you. This was wonderful,\" I said.\n\nHer mother smiled. \"Miigwech, we say.\"\n\nI repeated it. \n\nLater, we were sitting in the living room finishing the bottle of wine I'd brought. I noticed the delicate, drop leaf gateleg table against the wall. One of the legs had clearly been broken, and someone had mended it with some bad gluing and by bodging on a steel brace.\n\nNadie's mother noticed me notice. \"That was the first piece of furniture my husband\u2014Nadie's father\u2014and I bought that wasn't second hand. It&nbsp;... It broke but I couldn't bear to throw it out.\"\n\nThere was dead silence. I didn't say a word, unsure of this ground. I glanced at Nadie, but she was looking at her mother.\n\n\"It's okay to say, Mom.\"\n\nHer mother looked away from her daughter and met my eyes. \"He got badly hurt at work when Nadie was young. The doctors couldn't completely fix him, and instead, they started him on opioids. He got addicted. He couldn't kick them because then the pain came back. He got weaker and weaker, couldn't hold a job. One night, he collapsed, falling against this table.\" She gestured toward the broken leg. \"He went into rehab, and Nadie and I struggled to get by. But in the end, the drugs had ruined his immune system. He got sick and died.\"\n\nThere was something about the way she spoke of him, some little note in her voice that said, no matter how bad those times had been, the man she remembered was the one who had fathered her daughter, not the shell at the end.\n\n\"I kind of ruined it,\" she said ruefully, looking at the repair.\n\nI debated. Finally, very tentatively, I said, \"I can fix it, make it look almost like new.\"\n\nShe looked startled.\n\n\"You should let him, Mom. He's good at this kind of stuff. Not like fuckweasel who totally screwed up even the simplest\u2014\"\n\n\"Nadie!\" her mother cut her off. \"Language.\"\n\n\"Well, he was one,\" my girlfriend insisted. Mother and daughter locked eyes, and then suddenly both broke in laughter.\n\n\"Yes, he was,\" her mother said.\n\nI worked hard that entire break, ignoring even homework. I broke the bad glue joint, cleaned it, sanded, re-glued, and clamped. I cut plugs from an old piece of cherry to fill screw holes. I tested solvents to find the finish and carefully touched up raw wood with stain before applying varnish. I waxed and buffed.\n\nWhen I carried it in the door of Nadie's house, it glowed with a deep rich shine, better than new because age had given the wood some patina. Her mother stared at it and dabbed at one eye. \"Miigwech,\" she said with a smile.\n\nLater, I was carrying suitcases out and could hear them in the kitchen. \"I wish you could stay longer,\" Nadie's mother said to her daughter. \"The bakery here would take you back. Everyone says things aren't as good now.\"\n\n\"I know, Mom. But Jed's got to get back to school, and I can't bear to be away from him.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"Gi-zaagi`in,\" Nadie murmured quietly into my neck.\n\nThose words upset me. Those words elated me. \n\nI was upset because I had wanted to say exactly that first. I had looked it up and thought myself so incredibly clever. I'd planned when I would say it&nbsp;... and that time was maybe three minutes from now. But she'd stolen a march on me. Now saying those words would be a stupid \"yeah, me too\" kind of thing.\n\nI was elated because there was nothing more in the world I wanted to hear. \n\nElation won and I turned toward her. The expression in her dark eyes wasn't what I expected. It wasn't entirely warm and tender.\n\n\"I saw your browser history,\" she said.\n\n\"Oh.\"\n\n\"I'm not some exotic pet. I'm not gonna wear a jingle dress or take you to a powwow. I don't even go to them myself. If you have something to say to me, then I'd like it to be in your words.\"\n\nPoint taken. \n\n\"I love you, Nadie.\"\n\n\"I love you too, Jed.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nThe years passed. We married in a quiet ceremony up north. Mom cried. Nadie's mom cried. Jess cried. Nadie didn't. She just looked beautiful and radiant and determined and proud&nbsp;... and did I mention beautiful? We honeymooned in the Bahamas, where she left me a wreck every night.\n\nAnd the years passed.\n\nWe moved back up north. I could work anywhere since it was all remote, and Nadie had finally convinced the owner of the bakery in Ville-Claire to sell. We lived in town for a while, keeping Nadie's mother company. But then Mom broke her hip, and Dad asked us to come stay and help for a while. One thing led to another and soon we had built a large addition on the back of the house that was ours, with extra room for the family we wanted.\n\nNadie would get up early to head to Ville-Claire, and I'd get up at the same time so we could have coffee and a cinnamon bun together. Those couple of hours before I had to log on allowed me to work on my latest project: replacing that butt-ugly, orange monstrosity of a pulk with something more beautiful. It was a lapstrake design I'd found on the web, made of ash and birch, and trimmed with cedar and marquetry from shed caribou horn that Kerstman gave me.\n\n\"That's a work of art, Jed,\" he said.\n\nThen we decided it was time and Nadie went off the pill.\n\n<center>\u2022 \u2022 \u2022</center>\n\nEnvironment Canada, like any weather service, has trouble getting the forecast one hundred percent right. \n\nWombs aren't baking ovens, despite the common metaphor, and don't turn out a baby in precisely forty weeks at 37\u00b0C.\n\nPut those facts together and maybe we should have moved back with Nadie's mother in town a few weeks before her due date, but no one expected the storm to stall over central Ontario.\n\nThere was no need for panic. Mrs. Curry lived about a mile from us, and she was a midwife. \n\n\"When it's time, come get me,\" she'd said. \n\nWhen the snowfall turned heavy and didn't stop, she called us, \"Maybe we don't wait for her water to break. If you want, I can bunk in your guest room.\" \n\nIt was a lively thirty-two hours. Nadie baked non-stop until the entire house was redolent of cinnamon and clove and nutmeg. \n\n\"My goodness,\" Mrs. Curry said, biting into a schnecken. She grinned slyly. \"Maybe you'll need someone to stay around and just make sure everything's okay postpartum for&nbsp;... I don't know&nbsp;... maybe six months?\"\n\nWe laughed. And Nadie's water broke.\n\n\"She's failing to progress,\" Mrs. Curry said hours later.\n\n\"What does that mean?\"\n\n\"The baby's not moving down the birth canal.\"\n\n\"What causes that?\"\n\n\"Doctors don't know.\"\n\n\"So, what do we do?\"\n\n\"I can give her some oxytocin, but it's a drug that can cause harm.\"\n\n\"Define harm.\"\n\n\"Impairment of foetal heart rate, hypoxemia, acidemia, excessive uterine\u2014\"\n\nI cut her off. \"No. Next suggestion?\"\n\n\"I can try a forceps delivery but that can injure the baby\u2014\"\n\n\"No, dammit! And her name is Ann, not baby!\"\n\n\"Jed,\" Mom said, laying a quieting hand on my arm. \"We're all upset. It's to be expected. But try not to snap at people who are only trying to help.\"\n\nShe was right. I took a deep breath. \"What is the ideal thing?\"",
        "\"A hospital and a doctor. They can monitor reactions to drugs and perform a Caesarean if needed.\"\n\n\"And if not?\"\n\n\"Those are the options.\"\n\nWe'd already run out of other choices. We were in marginal cell-tower range at best of times, and with this much coming down, we couldn't even get a bar of service. We did get through to one of our neighbours, the Tremblays, on the CB, but they were on the same side of the river as we were and said they had no better luck with phones than we did. Calling for an ambulance was out.\n\nEven if we could make a call, they told us that trees were coming down all over from the weight of snow and ice, and one was blocking the bridge where the road crossed the river. \"You'll have to divert up through Saint-Denis and cross there,\" Mr. Tremblay said. \n\n\"That'll add a couple of hours.\"\n\n\"In this weather, at least that,\" he responded. \"Good luck.\"\n\nDad and I started up the truck. Fortunately, we decided to do a test run down the road before we dragged Nadie out. Fortunately, because we couldn't get far. It needed something like a municipal truck with a big blade on the front, not a quarter-ton pickup with a driveway plow and cinder blocks in the back for traction.\n\nThoughts about centuries of women dying in childbirth started running through my mind. I lived in the twenty-first century, but I might as well have been in the seventeenth for all the good that did me right now, stuck in the middle of the biggest fucking snow-and-ice storm for a decade.\n\nIt was time to take the initiative away from that son-of-a-bitch storm.\n\n\"Dad, pull the CB from the truck. I'm going to get one of the snowmobiles running. Hopefully, I can get around that tree that's blocking the bridge. I'll go until I can raise someone on the CB or until I find someone with a working phone. I'll get an ambulance to start toward the bridge. Once I've got them started, I'll come back, and we'll get Nadie across even if I have to carry her.\"\n\nHe nodded. \"Good idea. Just one change. I'm going on the snowmobile. You're staying with your wife.\" The tone wasn't brooking argument, and there wasn't time anyway. I nodded and headed to pull the CB.\n\nThe wait was excruciating. It wasn't helped by the whispered conversation between Mom and Mrs. Curry.\n\n\"What?\" I demanded.\n\n\"Her blood pressure is climbing. There are signs of foetal distress.\"\n\nThat set my blood pressure climbing too, but I didn't say anything. We went back to waiting.\n\nThe base unit for the CB squawked. Mom went to answer.\n\n\"Oh my God!\" I heard Mom wail. \"Is he all right?\"\n\n\"What?\" I yelled. \n\nShe ignored me and hunched over the headphones the way people do when they're trying to hear better. I continued to demand to know. Finally, she said, \"Wait one,\" into the headset's microphone and turned to me. \"Jed! Shut the hell up. I'm trying to find out what's happened to your father.\"\n\nThe shock of hearing that from my mother, who never talked that way, did its job and I shut up. I waited until she signed off.\n\n\"The bridge is completely blocked. Your father couldn't get across it. He tried to go down and cross the ice.\" I could feel the sudden grip on my heart. \"The ice didn't hold. He got to shore and managed to get to the Tremblays on foot. He was soaked and hypothermic, but they think he got to them in time before frostbite set in.\" She collapsed onto a kitchen chair and started crying.\n\nI turned to Mrs. Curry. \"It's not going to get better on its own? With Nadie, I mean. Right?\"\n\nShe shook her head. \"Probably not.\"\n\n\"Right. Put her in her warmest clothes. Then get the sleeping bag in my closet and grab some comforters. Mom, get a big plastic sheet from the basement to keep snow from soaking in. I'm taking the other snowmobile with the pulk behind it.\"\n\nMy mother started to protest. \"The bridge is\u2014\"\n\n\"I'll cross at the footbridge up by Miller's Creek. I think it's wide enough for a snowmobile. If not, I'll cross up at Saint-Denis. Nadie is going to the hospital.\" Without waiting for answers, I went for my coverall and snow boots.\n\nThe universe wasn't done. I pressed the starter button. Not even a click. I checked the kill switch. I checked that the key turned fully. I tried again. Not even a click. I looked at the combination charging station and block heater. The little green light was out. We'd been without hydro for almost twenty-four hours, and the generator only ran the house. The cold was brutal. This was the older machine, the one with the older battery.\n\nThen I lost it.\n\n\"YOU MOTHERFUCKING, SHIT-EATING, DICK-FACED FUCK-STAIN,\" I screamed up at the storm. \"YOU ASS-LICKING, MOTHERFUCKING\u2014\" I broke off at the shocked expression on the faces of two of the women, the ones supporting the third who was looking at me with an expression that was three-quarters gone.\n\nAnd one-quarter saying, \"I believe in you.\"\n\nFrom that look, a sudden calm took hold of me. I looked at the motherfucking\u2014my mind now said that in lowercase\u2014machine that wouldn't start. Words from years ago replayed:\n\n\"But when it's thirty or more below and it won't start because you forgot to set the choke before stopping the last time, or forgot to plug in the block heater, well&nbsp;...\"\n\nI looked at the two older women. \"Put her in the sleeping bag and then in the pulk. As far to the front as you can. Pack the comforters around her. Put the plastic over it. Let's go. Now!\" \n\nI grabbed what I needed and stepped outside. I gave a particular two-tone whistle. As if he had been waiting all this time for me to get around to noticing him, Pie Thief stepped out of the dark. Years of practice made my hands swift. \n\nAs Mom and Mrs. Curry watched silently, I slid in so that Nadie was between my legs and snapped the reins. \n\nTwo years of trying and refining and rebuilding had worked. The keel and strakes made the pulk run true. We went.\n\nAt the turn-off for Miller's Creek, I leaned, and the edge carved a long turn in the snow like a kayak. I could have enjoyed this first real test if it weren't for why I had to do it. I talked to her, telling her I loved her. \n\n\"I love you too,\" she said.\n\nI told her we'd make it.\n\n\"I know,\" she said.\n\nI told her of passing landmarks.\n\n\"It's hard for me to talk, Jed. I'll just listen,\" she said.\n\nThat scared me. \"Nadie.\"\n\nNo answer.\n\n\"Faster,\" I urged and gave the reins a snap. Pie Thief broke into a trot.\n\nWe could hear the soft cracking of branches giving up the fight against the weight of ice and snow; sometimes the longer, dragged-out cry of a tree doing the same. Those sounds and the howl of the wind, the muffled pocks of Pie Thief's hooves punching through the snow and the ssshhh of the hull were the only noises in the blanket of stillness.\n\nWe started down the long hill toward the footbridge. My eye judged what it could see in the darkness. Pie Thief would fit. I was pretty sure the pulk would also. \n\nThen the ice took down another tree to our left. With a loud bang of suddenly released tension and a rending screech, it toppled our way. It wouldn't have hit us, but it was too late: Pie Thief jerked and bolted to the right. Not a hard turn toward the high banks of snow but down toward the river.\n\nFor three long seconds, I thought it might work. In the moonlight, the ice looked unbroken.\n\nAt the last second, I saw it: the dark line of blackness running jaggedly down the centre. Highlights glinted on it in the bright moonlight, poisonous green and blood red. I tried to draw back on the reins, but I'd looped them and Pie Thief was in panic mode.\n\nIf time had slowed as everyone claims it does in car crashes, maybe I could have done something&nbsp;... unwrapped the reins, pulled Pie Thief to the side. But it didn't. It accelerated into a blur of impressions. I caught a glimpse of the drifts along the bank edge as they rushed toward us and could only hope the wildly-slewing pulk would capsize on one of them, that I could somehow cushion Nadie against the impact.\n\nI crouched over her, even in desperation making sure not to press on her belly, and wrapped my arms tightly about her. I cradled her head into the hollow of my neck and shoulder, and whispered, \"I love you,\" so that it would be the last thing she heard.\n\nThe pop of a root passing under us, the soft thud of bouncing off a snow-cushioned rock. Then quiet. And then a BANG! like the universe was ending and my head slammed into the side of the pulk. It rolled and threatened to dump us, and I suddenly wanted to vomit. Through the disorientation and the pain, I waited for the dark, cold water to fill and take us under. And then I did vomit.\n\n<center>\u2022 \u2022 \u2022</center>\n\nI half-woke to various voices\u2014\"... blood&nbsp;... one fifty over ninety&nbsp;... page Doctor&nbsp;... saline IV&nbsp;...\" then I faded out again. I'm not sure how long it was before the world came back a second time. It took a few seconds for things to make sense.\n\n\"Back with us, Mr. Webbe?\" a cheerful voice asked.\n\nI looked over to see a nurse. \"Where's Nadie? I need to see\u2014\"\n\n\"She's fine. But I'm afraid you can't see her right now.\" She put up a calming hand as she saw my upset skyrocket. \"She's fine. But she's in surgery right now. They needed to do a C-section. And you need to lie back. You're under concussion protocol.\" She pressed back on my shoulder as I tried to sit up. Like nurses the world over, she was stronger than she looked, and back I went, regretting the sudden move as my head pounded. \n\n\"She's fine,\" she repeated.\n\nI lay back and counted ceiling tiles&nbsp;... and fretted. And fretted some more.\n\n\"Congratulations, Mr. Webbe.\" It was a different nurse. \"You're the father of a beautiful little girl. Mother and daughter are doing well, and as soon as everyone's cleaned up, we'll take you to see them. Your wife's in recovery and will be kind of groggy, but she's perfectly fine.\"\n\nI sat in the recovery room for an hour, a tiny miracle bundled into the curve of my left arm, my right hand clutching my other miracle.\n\n\"Thank you for getting me here,\" she murmured weakly before drifting off again. Finally, they moved us to a maternity room where we had a visitor.\n\n\"I came because I thought you might need some help,\" Kerstman said. \n\nI nodded, still reeling from adrenaline-fueled shock after adrenaline-fueled shock, not even questioning how he heard or how he'd gotten here. \n\n\"I'll get Pie Thief home for you.\" He smiled. \"The front desk says they'll validate his parking.\"\n\nI laughed and then regretted when my head complained. I knew Nadie and I were the talk of the hospital, if not the town, having arrived semi-conscious in a caribou-drawn sled. A security guard told me they'd tied his reins to the fence where he could reach some grass, but they had no idea what else to do. \n\n\"Thanks.\"\n\nI spent the night uncomfortably on the bedside chair that pushed back into a recliner but unwilling to have it any other way. They discharged me in the morning but were keeping Nadie for a few days. I didn't want to leave but, \"Go,\" she said. \"Bring Mom back and my blue nightgown\u2014she'll know which one\u2014and a brush and&nbsp;...\" The storm had finally broken, and the downtown streets were being cleared.\n\nI stayed at Nadie's house with her mom. My parents grumbled that all they got those first two days were a bunch of cellphone pics, but it was good-natured. It took another full day for the roads to be plowed out to our house. Then they brought my truck over so I had some way to get home, and they spent a joyous day with their first granddaughter.\n\nKerstman returned, finding me outside grabbing a breath of fresh air while Nadie napped with Ann. The grandparents had all left a bit ago. He grinned. \"Born on 21 December, the feast day of Peter Canisius. He was a leading voice for tolerance and a great scholar. Maybe she'll be a professor.\"\n\n\"Or maybe a musician since it was 2112 and seeing as how we live in Ontario.\" I was pretty sure he wouldn't get it\u2014he seemed more the Whitney Houston type\u2014but he grinned.\n\n\"Let me guess. You were about fourteen when you discovered Rush?\"\n\nI thought back. \"Yeah, fourteen. I got Moving Pictures that Christmas.\"\n\nHe rootled around with his pipe as we enjoyed the last light of the day. \"Quite a ride you had.\"\n\n\"I don't know how\u2014\" I tried again. \"I have no idea how we got here. It's a blur. The river&nbsp;...\"\n\n\"You jumped it.\"\n\n\"No,\" I scoffed. \"Somehow we got lucky and found a finger of ice.\"\n\n\"There are no fingers of ice there, Jed. You jumped it.\"\n\n\"That's impossible.\"\n\n\"Yes. But not that ride. Pie Thief took you over.\"\n\n\"No.\"\n\n\"Yes. Occasionally, when the time is right, someone like him comes around.\"\n\n\"What? What does that mean? No. It's impossible.\"\n\n\"It is?\" \n\nHe let it lie. I marvelled at how peaceful it seemed after the chaos of getting to this point. I could hear the wind and the creak of ice, but no cars were driving by, no people other than us, and the distant road noise was silenced by the blanket of snow. Even the sounds from the hospital were taken away by the wind. There was no man-made noise except our breathing.\n\n\"Let's go see for ourselves, shall we?\" he asked. \"Nadie will be asleep for a bit. Take your truck. I came by sled, so I'll meet you there.\" \n\nI did. I got there first&nbsp;... or I thought I did until I saw the faint gleam of an ember-lit face a way off, sitting on a fallen tree trunk. He smoked and let me be. I turned back to the sight in front of me and&nbsp;... just&nbsp;... let it soak in. \n\nThe snow leading down, hoofprints brushed almost out of existence by the hull of the pulk sweeping over them. Then the gleaming blanket of untouched white. The dark rush of water, lace-edged with knives, singing of cold and destruction. Another pristine expanse. Finally, the explosion of snow, cast out in waves from impact, skewing first right then left then right again before straightening to track true. \n\nThe utter impossibility. I had to turn my head to take it all in. Far longer than I could even conceive of sending a rugby ball.\n\nI trudged through the drifts to his side. He stood, rapped the pipe against his bootheel, and stowed it away. He looked different in the fading twilight than he had just a half an hour before. Shaggier.\n\n\"You going back to stay with Nadie?\"\n\nI nodded.\n\n\"I have to get going now. You're okay to drive?\"\n\nI nodded again. I heard a noise in the shadows, a familiar grunt. I peered off to my right, looking for the sledge that had brought Kerstman here, wondering why he had Pie Thief with him.\n\nDespite the trees and the fast-disappearing light, it was bright enough that I could see. Pie Thief was using his sharp winter hooves to dig up a morsel from under the snow. Behind him: the high-curling metal runners instead of the flat skis; the cheerful red paintwork with its gold trim that twinkled the light back to me instead of the beaten, black, utilitarian finish. The mounded tarp in the back and the eight-in-hand drawing the sleigh, all standing quietly. \n\nI suddenly understood. Funny; the only surprise was how little surprised I was. Was it something about this quiet time&nbsp;... this moment where we seemed to stop in the gap between seconds? Somehow, magic could happen in those not-moments; I could feel it.\n\nI glanced at the figure next to me\u2014Kerstman but not the Kerstman of the bicycle bell and Canadian Tire toque\u2014watching me with a quiet smile. I looked back at the eight. I named them.\n\n\"No,\" he said, as I got to the second.\n\nI looked at him in surprise.\n\n\"Dancer last came out with us in 1939. She'd been at it a long time.\" He smiled at some fond memory. \"A long, long time, and there was someone ready to take her place the next year. She's home in the warmth.\" He looked at me. \"If you ever meet her, we call her Tanssija. It was the name given to her ages ago by the woman who cares for her. Dancer is the English version.\"\n\nHe walked down the side of the eight, his gloved hand stroking necks in affection. When he got to the pair attached to the pole, the ones who would brake and turn, not merely draw, he turned to me with a twinkle. \"The wheeler pair. You've met Thunder and Lightning.\"\n\n\"Donner and Blitzen,\" I said.\n\n\"Yes. The author thought their real names sounded less bombastic than the English versions when he wrote the poem.\" \n\nThunder's\u2014 I mentally adjusted. Donner's signature blast cut through the quiet, causing us both to laugh.\n\n\"And Kerstman?\" I asked.\n\nHe shrugged. \"Lots of names out there. Like caribou: exact same animal as the reindeer; it just matters which side of the world you're on as to what you call it. There are a lot of folks of Dutch descent in these parts, and Kerstman doesn't sound so strange.\"\n\nWe stood and stared into the dark. I didn't know what he was thinking. Perhaps he was remembering years and decades and centuries of nights like this. I was thinking that it was only the twenty-fourth, but I had received my presents early. Two of them: wife and daughter, forever precious and loved.\n\nKerstman broke it first. \"Well, I have to go. Now that he's started, I'll take him with me to get used to it. He can run alongside.\" I knew he didn't really mean run.\n\n<center>\u2022 \u2022 \u2022</center>\n\nNadie looked quietly at the tracks in the snow: the ones leading down; the others across the dark water and up the other bank. They were somewhat obscured by a week's light flakes, but you could still see them on the crisp January day.\n\nWe had looked at my ordnance map. The blue line for water was 2 millimetres and a hair wide on the piece of paper: over 50 metres, that represented. Plus the embankments on either side. Staring at it in real life was so much more&nbsp;... intimidating. She took it more easily than I had. She stared long and hard at the dark water and then turned to me.\n\n\"You must have been petrified.\"\n\nShe looked beautiful there in the brilliant sunlight. We'd gotten off the pulk for the last little bit, obeying doctor's orders for some gentle walking each day. The exertion had put a gleam of sweat on her forehead and she'd unzipped her parka, but she insisted she was fine and thrilled to move after days in a hospital bed.\n\nI shook my head. \"Only of losing you. It's why I didn't see what happened. I was wrapped around you, hoping we'd dump on a snowdrift or something before the water, and I could cushion you.\"\n\nHer expression melted into something warmer. Much warmer. She leaned up and kissed me. \"Thank you. I believed in you.\" \n\nThen she leaned into Pie Thief, who had ambled along behind, and wrapped one mittened hand up over his withers.\n\n\"Pimisaywinenen,\" she murmured toward a large ear that twitched in her direction.\n\nI raised an eyebrow in question.\n\n\"Flying man.\" She ruffled his fur, leaned in to kiss the furry check. \"My big flying man.\" Then she burst into laughter as Pie Thief's snuffling for possible treats popped open the top two buttons of her shirt. \"You taught him to do that.\"\n\n\"No.\" I laughed with her. \"That's all him. But it makes him a great wingman.\"\n\n\"Well, he needs to unlearn it because you're not allowed a wingman.\" Her voice was stern, but I could see the dark eyes dancing. She grinned at where I was looking. \"Just your luck. I finally get some curves and our daughter has them reserved.\"\n\n\"Ann and I could share.\"\n\n\"Eww! That is not sexy, mister. That's baby milk.\" She relented at my expression. \"I can't right now, Jed. I have to heal; six weeks more the doctor said. But when I have, I'll be asking.\" She reached up and pulled my head down for a kiss, full of tongue and promise. \n\n\"And if someone were to be really, really good about middle-of-the-night wakeups and diapers, maybe I could be really, really good about something else.\" Her tongue traced a slow arc across her lower lip then, with a wink and a chuckle at my involuntary catch of breath, she pulled back and refastened the flannel.",
        "Two hours later, I saw the inevitable head pushing open the mudroom window, drawn by the smell of baked apples. Before I could say anything, Nadie slid a plastic plate onto the windowsill. \"Of course I have one for you, Pim.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nAnn was joined by Ethan, and they were joined by William and Ruth. And then spouses, one by one, our family extending and grafting on. Those pairings led to Griffin, Sophie, little Nadie, Michael, the twins Christopher and Christine, Alice, Emma, Jeb\u2014I nixed a Jed Junior\u2014and finally Janey&nbsp;... whom I admitted I spoiled even more than I spoiled all the others because I thought an \"oops\" should be extra-specially-loved.\n\nThrough it all, birthdays and anniversaries and Thanksgivings were wonderful times, but Christmas was the best. Somehow, despite our constant complaints about empty nests and \"What do we need this much room for?\" and some sad memories about the loss of parents, we kept the house. It never felt crowded for the holidays, just lovingly filled with twenty and more people bustling about.\n\nAnd each twenty-fifth, as the darkness closed in and turned the snow bluish under the night sky, Nadie and I would make our way outside. We'd hear the noise of distant traffic fade away, every man-made sound quieting, leaving only the silent night. We'd see the parallel grooves running through the snow, the ground between churned with prints, a single set of them running alongside. We'd watch the antlered figure prance out from behind the barn's bulk, hooves making small crunching sounds in the crust as he returned home from his night's journey.\n\n\"Heya, Pie Thief,\" I'd say, and laugh while he nuzzled for the biscuit he knew was in my pocket. \"Welcome back.\"\n\n\"Hello, Pim,\" she'd say, and give him the cinnamon-baked apple she carried.\n\nAnd the years passed.\n\n<center>\u2022 \u2022 \u2022</center>\n\nI could hear Nadie on the phone with Ethan. For once, I didn't want to be on the call with the kids. Let them have their unguarded moment.\n\n\"Sweetie, if you could come a bit earlier, all of you, it would be good. Talk to your brother and sisters.\"&nbsp;...&nbsp;...&nbsp;... \"It's your father.\"&nbsp;...&nbsp;...&nbsp;... \"No, it's bad. Months at most.\"\n\nThe news had come like a bullet out of the darkness, but what could you do but accept it?\n\nNobody said a word about the elephant that day. Nadie seldom laid down the law in our family, but when she did, it was as if it came down from the mountain graven in stone. She made it clear: keep it light and happy.\n\nIt was just the way Christmas should be: shrieks and giggles from teenaged voices; quieter laughter along with liquid Yule cheer for the older. The late-morning visit to the shelter where we all donned aprons and took our turns dishing out a holiday meal. Sophie's husband, who was from the States, endured the good-natured razzing about Americans \"needing their NFL fix,\" and pointed out that all of his brothers- and sisters-in-law were sitting around watching the Christmas game right alongside him.\n\nNadie sat beside me the whole day, quiet herself. She was moving more slowly these days and was content for others to manage dinner, tame the chaos, and bring in wood for the fire. Making the morning's schnecken had been enough.\n\nWhen the time came that evening, she helped me to my feet. It was snowing. I was glad that I got to see that a final time. Once more the familiar quiet descended as I saw Pie Thief peering at me over the paddock fence.\n\nI stroked the wiry hair along his spine as the velvety nose nuzzled into my neck and then burrowed into my coat pocket for the treat he knew would be there. Then there was a sound, not the wind in the trees or the crack of ice breaking free, a man-made sound. The jangle of a harness. I looked over toward the barn.\n\nKerstman pulled aside the tarp at the back of the sleigh and emerged with an armful of leather and buckles. \"This is called a pickaxe arrangement.\" He shook the straps out, disconnecting and reconnecting with the sure, quick movements of practised hands until there were three abreast in the front, followed by two, two, and two. \"Your fella will run in the front. It's the easiest. Next year, he'll be ready to take Dasher's place alongside Rudolph.\"\n\nHe reached into his pocket and produced a carrot. \"Somebody's looking forward to nothing but a warm stall and all the apples he can steal. Right, old boy?\" Dasher's big head turned and snuffled, and the carrot disappeared as if by magic.\n\nThe Kerstman gave a little chirrup and Pie Thief moved up to take his place in the centre. I helped with the hame buckles while Kerstman did the belly band. He gave a final shake to the leather that set the little bells attached all over a-jingle and then climbed up into the sleigh. He brushed the powdering of snow off the seat and held up a thick, green blanket. He looked over at us. \"Ready?\"\n\nNadie and I looked at each other in confusion and surprise.\n\n\"Someone has to keep him brushed, his hooves oiled, and sneak him treats. In between, there's a workshop where we can put those nimble fingers to use for many years to come, Jed.\" He turned those bluest blue eyes toward Nadie. \"And Missus will be thrilled with someone who knows their way around cinnamon the way you do.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nThe younger Webbes\u2014adults who felt like children again at this time of year, their children, and even Sophie's tiny baby, first great-grandchild to Jed and Nadie\u2014came down early on Boxing Day. They were surprised that there was no smell of coffee or baking.\n\n\"Just let them sleep in,\" they said.\n\nIt was later that morning that Ethan said, \"I'll just go check.\"\n\nHe came back and caught the eyes of his brother and sisters. \n\nThe four stood at the foot of the bed and looked at the couple, lying with hands clasped. They saw the joyful expressions on their faces and how they looked somehow&nbsp;... younger.\n\n\"They never wanted to be apart,\" Ann said. The others nodded and smiled through their tears.\n\n<center>&#10052;&#10052;&#10052;&#10052;&#10052;&#10052;<br>Happy Christmas to all, and to all a good night.<br>&#10052;&#10052;&#10052;&#10052;&#10052;&#10052;</center>\n\nI hope you enjoyed the story; thank you for reading. Also, thanks to MsCherylTerra, norafares, and OneAuthor for reading and feedback while it was baking.\n\nAuthor's note: The poem attributed to Clement Clarke Moore that gave names to the reindeer was published in 1823. Robert May's coloring booklet introducing Rudolph came out in 1939, given away to children who visited Montgomery Ward department stores.\n\n\u2014C"
    ],
    "authorname": "chasten",
    "tags": [
        "canada",
        "christmas",
        "devotion",
        "reindeer",
        "santa claus",
        "santa event 2020"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/pie-thief"
}