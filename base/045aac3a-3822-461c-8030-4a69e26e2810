{
    "title": "Don't Judge Me Ch. 01",
    "pages": [
        "Disclaimer: Like all lit stories this one would fit in multiple categories. This story has light playing between friends, exhibitionism, and lots of light bondage. If those aren't your thing, stop now and find another story.\n\n*****\n\n(Estrella)\n\n\"ARE YOU FUCKING INSANE?\" I screamed. \n\nI looked around the room and nobody was smiling. This can't be happening, there was no way this was happening. \n\nShaking my head, I yelled, \"NO, NO FUCKING WAY!\"\n\nNobody moved as I glared at my ex-boyfriend Brent. He shrank from my anger but didn't say anything and looked around the room. There were three other men and they'd just made me an offer that was so insulting it was hard to think straight. I focused my attention on \"Nicky Mouth\" the leader of this little scenario, he was dressed in black slacks and a silver button up shirt with a black jacket, the clothes fit him too well not to have been tailored. He was medium height, slightly chubby with short thick grey hair, thick eyebrows and dark beady eyes that watched me, he never moved during my rant but just stared at me with cold dead eyes. \n\nBreathing hard from being so mad, I matched his stare for minutes before he casually glanced at the man on his left and nodded his head. \n\nI swear the two men on either side of him were half gorilla, both wore dark sweat suits and had thick gold chains around their necks, they each had short black hair and similar dark features. I mentally named them thug one and two, they had arms as big as my legs and I was sure their combined weight was closer to 600 than 500 pounds. \n\nThey casually moved to Brent and thug two placed his hands on his shoulders, it almost looked like a fatherly gesture if the air wasn't so filled with menace. My heart sped up and I clenched my fists. I started to say something but Nicky just held up a finger. Thug one carefully reached down and gripped Brent's wrist and brought it up, he then reached in a pocket and produced a collapsible baton and with a flick of his wrist opened it. \n\nI moved forward an inch but the thug with his arms on Brent's shoulders narrowed his eyes and tilted his head. I froze, spellbound as Brent whimpered but didn't move and I knew if I interfered things would get much worse. Nicky was impassive as thug one brought the baton over his head and down in a bone shattering crash between his elbow and his wrist, I flinched as he screamed in pain and both thugs released him. I ran to him as he held his arm sobbing.\n\n\"I'M A FUCKING COP YOU ASSHOLES.\"\n\n\"I know,\" said Nicky. \"Why don't you ask your boyfriend if he wants to file a complaint.\"\n\nBrent was shaking his head no as I cradled his arm. I knew he'd never say a word against them but I was just now understanding the danger we were both in. I realized that they knew exactly who and what I was when I'd been brought here and they didn't care. As a cop I knew of Nicky as a capo of the Bonanno crime family, dangerous didn't begin to describe him. \n\n\"Fuck you, you fucking assholes.\"\n\nThey all remained silent as I tried to tend Brent's arm. We didn't have a sling or bandages or anything so there wasn't much I could do. I got him to stand up and took a step toward the door when thug one stepped in my way.\n\nLooking at Nicky I said, \"I'm taking him to the hospital, he needs medical attention.\"\n\nNicky gave a small shake of his head, \"I think Brent wants to stay with us, don't you Brent?\"\n\nBrent whimpered and started to answer, \"I... I.\"\n\nIgnoring Brent's attempt at speech Nicky continued, \"Otherwise we'll have to go looking for you,\" he paused then emphasized the next words carefully, \"maybe at your mom's house, or your sister's. Who knows who we'll have to talk to if we can't find you?\"\n\nBrent's face drained of blood as he shook his head, \"I'll stay here Estrella, I'm good.\"\n\nFrustrated I looked around the room, we were in the lowest level of a five-star hotel in New York. There were heating units and laundry machines all around us but nothing that would help us, I didn't have my gun or anything. The hum of machinery covered Brent's cries so nobody would hear us, nobody would come to our aid, and even if they did, I doubt it'd matter. With one sentence Nicky just told me what he'd be willing to do even if we managed to leave now. \n\nThe irony in this whole scenario was ridiculous, I'd broken up with Brent three weeks earlier, but he'd called and asked me to meet him for lunch I agreed and we'd met outside on the sidewalk and then come downstairs to meet Nicky and his flunkies. I realized something was wrong with the whole scenario but I hadn't understood how wrong until too late. Apparently, Brent had gotten in pretty deep to a bookie and he was going to be an example if I didn't agree to a favor. Of course, said favor involved me being extra special friendly to an important business associate of Nicky's for the next few days.\n\n\"And me?\"\n\n\"You?\" Nicky asked, looking genuinely surprised, \"Why officer, you're free to go anytime you want.\"\n\nI stewed, I knew I if I left now, I'd be unlikely to ever see Brent again. That suited me fine, in the year we'd been together he'd cheated on me, stole from me, and was what I generally believed the biggest mistake of my life. The problem was if I left, I doubted anybody would ever see him again. \n\nI looked sideways at him, Brent was good looking and had once had a very athletic body but he'd let himself go in the year we'd been together, always drinking with his buddies. He'd always been clean cut and his clothes immaculate but now he had a patchy beard and looked like he'd worn and slept in the same clothes for a week straight.\n\n\"And if I do this?\"\n\n\"Then your young man will be forgiven and all will be well.\"\n\n\"I also want assurance that he'll be denied credit forever, and I don't want to see him again. If he mentions me as an escape, I want you to make sure and break his fucking jaw.\"\n\nNicky smiled, it wasn't friendly but it was understanding, he nodded. \n\n\"For the record I broke up with this idiot weeks ago.\"\n\nBrent looked at me, \"I'm sor...\"\n\n\"No,\" I snapped. \"You don't get to talk, if you say another word I walk.\"\n\nBrent put his head down.\n\n\"So, I want to know exactly what I have to do.\"\n\nNicky nodded to thug one, he immediately came over to me.\n\n\"Spread your arms.\"\n\nI did what he said and thug one frisked my body thoroughly, he wasn't shy as he felt my tits, ass, legs, and everywhere in between but he wasn't lewd either, despite my embarrassment thug one was professional as he checked me. He pulled my phone out of my back pocket, turned it off and tossed it to thug two. I turned bright red as he pulled up my shirt and brought it over my head leaving me in jeans and a sexy black bra. He kept the shirt but turned to Nicky and nodded while walking back to stand next to his partner. \n\nNicky looked me in the eyes, \"You will be the sexual plaything to a very important associate of mine for the next three days. If you fail, Brent will disappear, if you try to make an issue of this afterward Brent will disappear. You may be a cop and therefore killing you would be more trouble than it's worth. Brent is not, his family is not, there will be no trace to me and you will not be able to protect them all forever. Sooner or later one will disappear and you'll know why. So do the job, do it right, and you'll never see me again. I'll even throw in the favor of making sure Brent never contacts you again.\" \n\nHe turned to Brent, \"As of this moment you're cut off from credit and if I ever hear of you contacting Officer Cruz again... I will be displeased. Do you understand?\"\n\nBrent whimpered and nodded. \n\n\"Why me?\"\n\n\"My friend does not do whores, and since you are obviously beautiful, I thought you'd be a good fit for him. Plus, he's a little bit of a fitness freak.\"\n\nI nodded understanding, I was a novice bikini body building competitor and liked to work out six days a week. I stood 5'6\" and weighed about 130 of toned strength. I'd probably be crazy with muscle but I was able to keep my curves feminine by the fact that my diet was horrible. I inherited my mother's black hair and light brown Latina skin tone and my father's blue eyes. I knew most men considered me very pretty. \n\n\"When do we start?\"\n\n\"Now,\" he said. \"Take off your pants.\"\n\nHis words stunned me, \"Now, you mean right now?\"\n\nI looked around, fuck, I was about to get raped by Nicky and his thugs. I clenched my fists, I wasn't going without a fight.\n\nNicky read my look and held up his hands, \"Nobody here is going to touch you, my friend is staying in this hotel and I'll be bringing you to him. Now take off your pants or leave.\"\n\nI visibly relaxed but was weary, still, it wasn't like I had much options. When Brent had called me, I'd braided my hair, put on my tightest jeans with a sexy black top and black high heels and just to feel sexy I'd worn a sexy sheer matching black bra and panty set. I steeled my will and unbuttoned my jeans and peeled them down. I took me a second or two of balancing on one leg to get them off but afterward I looked at the thug holding my top and tossed them to him. \n\n\"I want those back, and don't do anything creepy with them.\"\n\nIt was like talking to a wall, he caught them but didn't say a word or otherwise move. I stood straight and faced Nicky, he had a smile on his face and gave me a nod as he looked at my body while I glared at him.\n\n\"Good, good,\" he nodded. \"Now turn around,\" he said.\n\nBlushing, I did what he said fully aware that my panties were a G-string. Heat rose to my face as I felt all three criminals' eyes on my ass. I glanced over my back and found all of them staring at my butt. Despite how pissed and humiliated I was I felt a small sense of satisfaction at the fact that I'd impressed them, ha, eat your heart out fuckers! \n\n\"Put your hands behind your back,\" Nicky said.\n\n\"What? Why?\"\n\n\"Because I'm going to handcuff you, he has a thing for this, like fifty shades of grey or something. Now shut the fuck up and do as you're told.\"\n\nMy heart raced and I was near panicked, the thought of being handcuffed and at their mercy was terrifying, this could be some stupid trick to get me helpless so I could be gang-raped or sold to slavery or any number of other nightmares. I looked at Brent off to the side, I almost said fuck it and ran to the elevator but I understood if they really were going to do something else it was too late, I could never get away from them at this point. Resignedly I put my hands behind my back and felt the cool metal of handcuffs placed on them and ratcheted down. \n\n\"Now open your mouth.\"\n\n\"What...\"\n\nAs soon as I spoke a black silk sash was placed between my lips and wrapped around my head twice before they tied it off in the back. I shook my head trying to dislodge the gag but it was too tight and all I could do now was make little grunting noises. \n\nI glared at them but Nicky said, \"Not sure if he's into gags or not but you talk too much and since we're about to bring you through the lobby and I don't want to hear any more of your lip it seemed prudent.\"\n\nMutherfucker! I don't talk too much, I swear I would kill Brent for this if I ever saw him again. Wait did he say lobby? You've got to be kidding me. \n\nThug one and two each grabbed an elbow and moved me toward the back elevator while Nicky led. \n\nBrent whimpered, \"What about me?\"\n\nNicky looked over at him as if he'd forgotten he was there, \"You still here? I'd suggest you disappear cause if I ever see your face again it'll be the last time anybody ever sees your face. Leave town.\"\n\nThen he turned away and we marched toward the elevator. I heard the ding of arrival and I walked on. The last image I saw of Brent, he was cradling his arm and slinking toward the outer stairs. He looked so pathetic it infuriated me, he gets a broken arm but I have to go whore myself out for him! I swear if he ever crossed my path again, he'd regret it.\n\n\"Don't worry, I meant what I said, I'll make sure he never sees you again.\"\n\nThe elevator was mirrored on all the walls and doors, my eyes flicked to Nicky's in the mirror, my emotions must've been too easy to read. I resolved not to show any more feelings. I stood straight, the bra and panty set I was wearing was a combination of lace and sheer panels that barely covered my tits on my C sized chest, it was easy to make out the dark circles of my nipples and if you looked close could even see the lips of my shaved pussy. We rode the elevator in silence to the ground floor.\n\n\"This is a maintenance elevator, we have to switch to a regular one to get to the suite, I wish we could take this to the top but we can't. Don't act stupid and it'll all be over soon.\"\n\nI wasn't sure if he meant the whole scenario or just marching me through the lobby gagged and handcuffed in my panties but it didn't really matter either way. The door opened and we stepped out into the hotel lobby. It was decorated in rich dark wood and deep maroon fabrics, crystal cut chandeliers and ornate carved side tables beside lavish chairs. I barely took it all in as we marched past the dozen or so startled guests, a few raised their eyebrows but nobody said or made a move toward us. The employees I saw look up immediately looked down at whatever they were doing. We made it to the regular elevators and Nicky produced a card that he swiped on the call button. A small group of men who were waiting for an elevator open mouthed stared at me. I kept facing straight ahead but out of the corner of my eye I saw one pull out his phone and hold it making it was obvious he was taking a picture.\n\n\"Dude, New York is so wild.\"\n\nThug one never said a word but just walked over to him and casually covered the hand with the phone with his own. He'd made no threatening gestures so the idiot didn't comprehend until too late the danger he was in. Thug one squeezed the hand holding the phone till the man was red faced and whining.\n\n\"Jesus, I'm sorry man, I'm sorry.\" \n\nFinally, thug one must've released enough pressure to let him slip his hand free but he kept the phone. The man nursed his hand as thug boy dropped the phone on the ground and brought his foot up to smash it repeatedly.\n\n\"Aww man,\" the idiot said, as he nursed his hand, his two friends held up their hands in a complacent gesture as Nicky looked over at them. \n\nAn impish impulse came over me and I faced the group directly, letting them see me completely, I shook my head no as I brought my hands from behind me to the side and held one finger up moving it back and forth in a NO gesture. I turned to show them my backside and glanced over my shoulder at them while wiggling my butt. The elevator dinged and thug one left them as we all moved to the elevator. I nodded bye to the group of idiots as the door closed. \n\nOn the elevator Nicky looked at me for a few seconds with a smirk, \"Own what you do.\" Then he turned away from me to face forward. \n\nI looked to the sides and noticed thug one and two each had a grin on their face. It seemed maybe they all had a sense of humor. The elevator dinged at the top floor and we exited to a small lobby and one door. Nicky knocked and glanced up at the camera next to the door while we waited, in less than a minute the door opened to a man. \n\nDear lord, this is who I was being given to? He looked about high twenties in age, six foot, muscled with dark military cut hair and an inner strength that showed immediately. He was wearing dark slacks with a white short sleeved shirt that showed off his toned arms, he was very good looking with clean cut features but the darkness of a five o'clock shadow gave him a dangerous appearance. His eyes were brown with specks of gold and he had a long thin scar on his neck. \n\nI realized I'd been staring because thug two pushed me inside by the elbow. I followed Nicky as we moved to the inside of his suite. He walked to the center area with giant glass windows that looked out over the city, white leather couches, next to glass and silver tables adorned the room, I noted that he had a black handgun in a hip holster. Nicky took a seat and motioned to thug one, who moved to the small side bar and fixed a drink. \n\n\"Chase, how are you? How have you been?\"\n\nThe man called Chase took a seat on the couch opposite Nicky and smiled, \"I've been great, just working on some last small details.\"\n\nNicky nodded, thug one handed him a drink of amber liquid in a crystal cut glass.\n\n\"To what do I owe the honor?\"\n\n\"I come bearing gifts,\" Nicky replied.\n\nChase looked at me as I stood there.\n\n\"It's an interesting gift, definitely beautiful. Is it used?\"\n\nI fumed on the inside, USED, USED, fuck you mutherfucker! I'll show you used!\n\n\"Oh, that got a reaction, did you see her eyes?\" Chase said.\n\nLaughing Nicky explained, \"No, she's not 'used' in fact her name is Officer Cruz...\"\n\n\"What?\" Chase exclaimed half rising, his hand moving toward his hip, both thug one and two moved their hands toward the inside of their sweatshirts. \n\nMy eyes went wide as I grasped the fact that they were probably reaching for guns too, I was about to be at the center of the OK corral if this continued.\n\n\"HOLD ON,\" Nicky held up his hand and raised his voice only slightly but everybody froze. \"Chase, let me explain first.\"\n\nChase looked hard at Nicky for a minute, then he glanced at me and uneasily sat back down, the thugs relaxed as Nicky lowered his hand. \n\n\"Damn kids, you all get excited too easily, relax. As I said, I know you don't like used products so I took the liberty of finding you something special. A close friend of hers owes a significant debt, in order to make reparations she has agreed to take care of you till Friday.\"\n\nChase looked dubious, \"But she's a police officer.\"\n\n\"Yes, but she's only a beat cop and she understands the consequences of her failure.\"\n\nChase looked over at me, \"Turn around.\"\n\nI turned to show him my ass and heard a low whistle of approval. \n\n\"Well, I must say she is definitely a 10.\"\n\nI turned back around.\n\n\"Till Friday you say?\"\n\nNicky nodded.\n\nLooking down Chase nodded to himself, \"That could work\" he said quietly.\n\nLooking back up, \"Is her debt clear after this?\"\n\n\"Does it matter?\"\n\n\"If I choose to use her again it does.\"\n\nWhat? Fuck that you little weasel, nobody is using me again. \n\nNicky thought for a moment, \"Yes, her debt will be clear after Friday.\"\n\nChase nodded, \"Well, I guess I have till Friday then.\" \n\nLooking at Nicky, Chase asked, \"And for this service...\"\n\nNicky held up his hand, \"Compliments of the house my friend.\"\n\nMinutes later Nicky and thugs left and I was alone as Chase showed them to the door. He walked back into the room, looked at me for a full minute before turning and leaving into another room. He came back out with a small black leather duffel bag, then motioned me to the side where a decorative dark wooden table and three extravagant navy blue plush wooden chairs sat in a dining area. Past that was a room with a giant inground spa, at least I thought it was a spa, it could have been a small pool it was so big. Two iron pillars with latticed screens bracketed the entrance. The water was perfectly still and the clear water showed the white marble with black swirled trim on the sides and a shallow grade leading into the water. Motioning me to the pillars he set the duffel bag down and had me stand between them.\n\n\"Are you hungry? Do you want me to get you something to eat? I was about to have lunch myself.\"\n\nI shook my head no as he uncuffed one of my hands.\n\nHe simply nodded at my response and then cuffed my hand at head height to one pillar, he produced another matching black handcuff and then cuffed my hand to the other pillar, with my arms stretched wide I could just barely touch the pillars, I tugged at the restraints but there was no give at all in either the cuffs or the fixture. I stood perfectly displayed as he stepped back looking at me for a second before his doorbell rang. ",
        "\"One second,\" he said. \n\nI realized I should've told him I wanted to eat, maybe he'd have let me sit down, now it looked like I'd be in this position for a while. A young Latino busboy wheeled a silver tray in toward the table about six feet in front of me. His eyes went wide as he saw me but he never broke stride or said anything as he uncovered his meal. I blushed red as my predicament set in, arms stretched out, handcuffed, gagged in the sexiest black bra and panty set I owned. I could care less about being half-naked but the cuffed and gagged was an embarrassment. The busboy set out a plate with a steak and lobster tail, some asparagus and mashed potatoes with a small loaf of bread, he reached under the clothed cart and produced two bottles of Blue Moon beer which he set next to the meal. \n\n\"You sure you don't want anything?\" he held another small black bag. \n\nI almost nodded yes but I didn't want him thinking that I was anything other than an unwilling participant. He needed to understand this was simply a job to me so I closed my eyes and shook my head no. He shrugged and signed a paper for the busboy who gave one last look at me and quickly departed. \n\nChase stood in front of me and reached behind, I felt the gag loosen and fall away.\n\n\"Let's have a talk shall we.\"\n\nDropping the bag in his hand to a chair he walked around me ducking under my arms and inspecting me, when he reached the front again, he grasped the front clasp on my bra and unsnapped it. I gasped as it fell away exposing my tits to him, my nipples became hard and I shifted in place. He casually found the hooks that kept the straps over my shoulder and undid them allowing my bra to drop to the ground. Again, he moved behind me and said, \"Nice,\" as I felt a finger stroke my ass. Hooking two fingers into my panties he slid them down to my black heeled sandals. I hissed in reaction as he moved back in front and took a seat at his table. With a flick of the wrist, he snapped a white linen napkin out and placed it in his lap. He picked up a steak knife and fork and cut a small piece of the steak off. \n\n\"Mmmmm, Kobe beef, medium rare, exquisite.\"\n\n\"Have you ever had Kobe beef?\" he asked.\n\nI shook my head no.\n\n\"It's a particular brand of beef raised by the Japanese, grain fed and massaged, they have strict standards about what is considered Kobe.\"\n\nHe chewed slowly as he studied me. I was acutely aware of my nakedness and squirmed a little under his intense gaze. Frustrated with myself I straightened and let him see me. I had what men referred to as a body made for sin. My ass had been voted \"A work of art\" by the fellow officers in my precinct, you'd think that nowadays guys wouldn't say things like that or they'd get hit with a sexual harassment charge but I had a habit of wearing tight black booty shorts to work out in so when I found out about the title it had apparently been unanimous with the girls too. I actually had more than a few propositions from both sexes but I was focused on making detective so I didn't want the drama of a workplace romance. They'd even somehow talked me into posing for a picture in our gym that they'd made into a poster and had me autograph so they could hang it for \"motivational\" purposes. On top of a great ass I had long muscled legs with thighs that were much thicker than most girls due to the fact I did squat and thigh workouts every other day. My stomach was flat and held good muscle definition without quite being a full six pack. My pussy was shaved smooth and was what most males called innie lips. My chest was a good 36C and my nipples were small, pert, dark brown and stood out when I was excited. Which was annoying me because they wouldn't go down right now proving on a certain level I was turned on, stupid body. \n\n\"Let's talk.\"\n\n\"About what?\" I asked.\n\n\"How did you end up here?\"\n\n\"You heard Nicky.\"\n\n\"Yes I did, but that doesn't explain a few things.\"\n\nHe reached for the bag he'd set on the chair beside him and ruffled through it before he pulled out my wallet. I realized the bag held my clothes and phone. He thumbed through the wallet and took out my ID card.\n\n\"Estrella Cruz,\" he said, reading the name and looking at me. \"For instance, you said he was no longer your boyfriend, so when did you break up with him?\"\n\n\"Three weeks ago.\"\n\n\"And the last time you had sex with him?\"\n\nI paused a while before answering, Chase was patient but I eventually spoke, \"Three months ago. Why does it matter? Am I too used?\" I asked sarcastically.\n\nSudden fire came into his eyes, his voice became low and menacing, \"Have a care, I understand your predicament but don't mistake that for giving a fuck. I don't mind strong, but I won't tolerate disrespect, if you keep that attitude up, I'll uncuff you, walk you to the door and you can leave. I'll let Nicky know you didn't live up to your bargain and you can deal with your own consequences.\"\n\nI swallowed, I don't know why but somehow, I'd made the mistake of thinking this man wasn't as dangerous as the others. \n\n\"Do you understand me?\"\n\nI nodded.\n\n\"Say it.\"\n\n\"I understand,\" I said quietly. \n\n\"Good, now let's see if we can't make this less unpleasant for you. You say it's been a few months, did Nicky bring you clothes to wear?\"\n\nI shook my head no. \n\n\"Now see that's interesting, you say this Brent called you and told you to meet him here at a five-star hotel and you dress in very sexy and revealing lingerie.\"\n\n\"I'm never getting back with him,\" I said.\n\n\"I don't doubt that.\"\n\n\"And I wasn't going to before this either.\"\n\n\"I don't doubt that either, but maybe you thought he'd try and maybe you thought he'd get a nice room and a nice meal and maybe you thought you'd have one last romp of breakup sex.\"\n\nThis man was entirely too smart for my liking. I knew Brent was shady and I did think he'd try something like the scenario he'd just described and it'd been a long time without sex so I had considered it and was probably willing to go with it.\n\n\"That's not what I planned,\" I said.\n\n\"No, but it seems like you took the consideration into possibility, which makes me assume you're at least a little bit frustrated sexually.\"\n\nI didn't say anything as we looked at each other, he smiled after a while and let the matter drop.\n\n\"You also seem to be in very good shape, even for a police officer.\"\n\n\"I'm a bikini competitor.\"\n\nHe frowned at that, \"Like in Hooter's or something.\"\n\nI rolled my eyes, \"No like in it's a class of female body building.\"\n\nHe still looked dubious so I continued, \"There are five categories of female class body builders, Bikini, Figure, Physique, Fitness, and Bodybuilding.\"\n\n\"Really?\"\n\nContemptuously I said, \"Yes, I've never in my life or would I ever compete at a Hooter's.\"\n\nHe pulled out an iPhone and tapped a few keys, \"Well what do you know, you learn something new every day.\"\n\nHe tapped a few more keys, \"And look at this, here you are, and first place too.\" \n\nHe looked up at me, \"How many have you won?\"\n\n\"I've placed in six out of six competitions I entered, two firsts, one third and the rest seconds.\"\n\n\"Well call me impressed, and I can definitely see why.\"\n\nHe smiled as he looked me over yet again. \n\n\"Is there anything I can do Officer Cruz to make this situation more palatable?\"\n\n\"Uncuff me, let me get dressed and walk out the door and tell Nicky I did my job.\"\n\nChase shook his head no, \"I don't think so, but if you relax you might enjoy it.\"\n\n\"I doubt that.\"\n\nChase just stared at me and finally put his napkin on the table and stood. He walked over to me and took a key from his pocket and undid the cuffs from the pillars but left them on my hands. He took my hand and walked me to his bedroom. This close I smelled a faint musky odor from him, it was a pleasant combination of leather and clean linen. The bed was huge, larger than a king size with engraved dark wood and metal vines weaving all around. There were dark red satin sheets, with a black silk comforter with hand stitched red roses covering it. He pushed me to the middle of the bed and moved between my legs before he moved my arms toward either corner vine and then cuffed them spread apart. I pulled against them but the vines must've been bolted or part of the bed because I couldn't get it to so much as twitch, I'd swear I was chained to a wall the bed had that little give. My sex was pressed against the smooth fabric of his slacks and my nipples were hard. My arousal levels had been going down as the casualness of our lunch conversation reduced my passion but now, they sprang back to life. \n\nChase slowly pulled his shirt over his head and tossed it to the side. Despite myself I stared, he had smooth hard muscle across his chest and a flat stomach with light covering of black hair below his belly button. I had a flaring desire to see where that treasure trail went. He pushed my legs wide as he shifted his body lower, with a start I comprehended what he was about to do. I almost moaned in delight before his tongue even touched my pussy. Brent never liked eating me out, he thought it was nasty but he'd ask for a blow job every night of the week.\n\nI closed my eyes as I felt Chases' warm breath on the inside of my thigh, he teasingly licked the crease between my leg and my pussy making me moan. He traced his tongue up my crease, across the top of my pussy then down the other crease. He paused and I felt his hot breath against my lips, I tried to close my legs but he used his strength to keep them spread, his lips were soft as he kissed my mound repeatedly. Finally, he ran his tongue slowly up then down and back up again. I closed my eyes as the next minutes he spent focusing on using his tongue to bring me pleasure. Despite myself I writhed and twisted, gasping and moaning the whole time. He never kept his pace steady, he would increase his movement, thrusting his tongue inside of me, till my hips moved to his rhythm. Then he would let his licks become shorter, slower, deeper, and my hips matched his rhythm as I slow thrusted against him. He thrust his tongue even deeper inside of me, making me gasp and let out another groan as I tried to thrust my hips forward. My excitement was contagious and he doubled his efforts to please me pushing his tongue up and down the length of my pussy sending me over the edge as we both moved faster. His tongue found my clit and my world exploded into white light as my back arched and I cried out. He kept his tongue pressed against my clit as my body pulsed and trembled. After a minute, he released my legs and pulled away from me while I dazedly recovered from my orgasm. \n\nI lay watching as he hopped off the bed and unbuttoned his slacks. They dropped to the ground to reveal sexy black boxer briefs. He glanced at me and smiled as he hooked his thumbs in the waistband and slid them down his legs. He stood up straight and motionless as I looked at his body. The light treasure trail beneath his belly button extended to short trimmed hair encircling his thick penis. It was obvious he manscaped which highlighted his above average size, right now he was rock hard and looked to be about nine inches of length. He moved toward me and I spread my legs to allow him easier access. I was still so wet after my orgasm that he slid into me without any trouble. We both held still as our bodies adjusted to one another, then he began to glide in and out of me. \n\nHe bent his head down and licked my neck sending a shock of surprise through me. His chest pressed to mine as he alternated between light kisses and gentle nips on my neck. My moans were a constant noise as he pushed in and out of me. After a minute he pushed against me to lean back, I looked up at his incredible body as he gently put his hands under my knees and brought them up and together against his chest. He wrapped his arms around my legs holding them in place and used his thumbs to guide my ankles till they were over his shoulders. I whimpered when I understood what he was doing, the anvil was practically my favorite position because it allowed the shaft to go deep in my body. He slowly leaned forward till I was almost bent over and pushed into me deep and steady, slow thrusts that I swear went farther in me each time. I was mad with passion, thrashing my head and straining my body against him, usually with my strong legs I could push a man back in this position if I needed but with my arms cuffed, I couldn't gain any leverage. His powerful body kept me pinned with little effort, turning me on even more as he dominated me so fully. He kept this up for minutes and I felt myself building toward another orgasm as I lay sweating and thrusting against him. He opened a hand and showed me the handcuff key as he pushed forward and held himself still. I was desperate to keep fucking him but he was uncuffing me so I lay as still as possible, he flexed inside me and I whimpered and reflexively pushed back jostling him.\n\n\"Better quit moving or you'll never be free.\"\n\nHe flexed again and I had to bite my lip and clench my fists to keep still.\n\n\"I really fucking hate you,\" I said.\n\nHe laughed as one hand came free and I brought it around to grip his ass, he moved to my other arm and quickly unlocked that one too. He brought his hand over my legs and pushed them back down leaving us in missionary position while I used both hands on his ass to keep him pressed inside me. He bent down and pressed his lips to mine hungrily, I kissed him back with raw passion as he pushed deep inside me. He hooked one leg into mine and leaned over in a roll bringing me with him and placing me on top. Then he pushed me back till I was straddling him. He placed his hands on my hips and thrust up into me repeatedly. I loved cowgirl for making love, I placed my hands on his chest and gripped him with my legs. I took control of our speed as I bounced up and down on his cock. I pushed back and put my hands in my hair as I let myself be impaled on his manhood. Suddenly he stopped, I tried to move but he held my hips tight. \n\n\"What...\" I breathed.\n\n\"If you're not enjoying it, feel free to get up and leave. I'll tell Nicky you did your job.\"\n\nI was speechless, I'd gotten so worked up I'd forgotten what I was doing but he reminded me forcefully. Fuck, it felt so good and it'd been so long, what was a couple of days, I wasn't breaking any laws or anything. \n\n\"But if you stay, I expect that petulant little child attitude to disappear. I've got too much shit to do and too dangerous of a lifestyle to deal with stupidity. That means I want to enjoy you, not deal with a little girl who's mad at what happened to her.\"\n\nHe reached up and pinched a nipple, I slapped his hand away. He pulled both hands away from me and let them drop to his sides. I looked into his eyes for a minute then I bent forward and grabbed his face as I crushed his lips to mine. Fuck it, if I'm going to hell, I'm going to enjoy it. With all restraint gone we crashed our bodies into each other, he didn't hold back as he grabbed my hips and thrust into me. Our kiss was raw desire as our tongues met and danced. I dug my nails into his body. One of his hands reached back and slapped my ass and I growled, he did it again and I thrust harder against him. I barely felt the pain as I gripped him tight. He kept spanking my ass until finally I cried out as my orgasm overtook me, he came a second later and I felt his body pumping his hot load into me. I threw my head back, arching my back and cried out as he came. One second stretched and I noticed everything in that moment, the sweat of our bodies, the musky smell of our desire, the smoothness of the sheets and the warmth of his skin, the way my ass was on fire from his spanks and strands of my hair were plastered to my face. I saw the skyline of the city outside his bedroom window, and red raw scratches I'd left on his chest. Time moved forward again and I fell limp against him. \n\n*****\n\nI woke and sat up disoriented in a strange bed. I immediately noticed the shower running and could see an open door to the bathroom. Memory came flooding back and I lay back on the bed. I quickly recounted the events of the last few hours. The clock on the wall showed it was five o'clock, had it only been five hours since this whole thing began? I contemplated getting up and putting on my clothes and making a run for it. Chase had already given me permission to leave without diming me out but truthfully, I'd enjoyed it so far and I told myself why take the chance he'd go back on his word. I suddenly realized my butt cheek was sore and I hopped up from the bed and looked at the full-size mirror on the side wall. My ass was bright red on my left cheek where he'd been spanking me during sex. I gingerly touched it and felt the warm heat of my skin. Strangely it brought a smile to my face as I walked to the shower. I paused in the doorway to watch Chase wash, his back was to me and he was rinsing his hair. His body was beautiful with a muscular back and shoulders without being too broad, and a light dusting of black hair on his toned legs. As he rinsed, he turned around and saw me, motionless we looked at each other for a minute until I broke the spell and walked to the glass door.\n\nI stepped inside as fog rolled past me, his shower was stunning, it was all black and white marble walls and glass doors, the floor was grey pebbled and his entire bathroom was as big as my living room. Everything was expensive looking, the dark wood cabinets with more black marble tops, the silver fixtures, there was even a giant screen television playing a basketball game on the far wall. The shower alone had a half-dozen waterfall nozzles and was probably as big as my bathroom. Wordlessly he took my hand and brought me underneath the warm water. Gently he pushed me in the center and let the water flow over my body. He took some shampoo that smelled like green apples and squirted some in his hand. He pulled my hair back out of the water and massaged the shampoo into my scalp. I closed my eyes as he proceeded to wash my hair thoroughly, afterward he took another bottle of body wash and continued to lather my body. His touch was gentle as he washed away the sweat and sex from before. His hands explored every inch of me, trailing down my legs and traveling up the inside of my thighs, sliding his fingers in the crevice between my legs, not lewdly just with courtesy and care. He cupped my breasts and ran his hands over my stomach, after he finished my front he moved to the back where he kneaded my muscles and scrubbed my ass. He took his time as the warm water ran over our naked bodies. Finally, he turned me around and grasped my chin, pulling me forward his lips met mine in a tender kiss. Our tongues danced as our bodies melded. I brought my hands around his neck as his cupped my ass. The kiss seemed to last forever but was still too short as we broke. \n\nAfter the shower we toweled each other off, once again taking the same care to dry each other as we'd used to wash. On a whim I took his hand and led him back to the bed, I gently pushed him down on the edge and straddled his legs. Looking him in the eyes I bent forward and licked the head of his dick. I ran my tongue in a slow circle around the head, teasingly taking my time. He closed his eyes and moaned while when I took him fully into my mouth. I loved the control when I give a blow job, it's so sexy to see a man get weak, watch his orgasm face, make him go crazy with lust! I used one hand to form a ring around the base of his dick with my fingers and rotated in slow circles as I bobbed up and down on his shaft. Every so often I popped my mouth off and gave cat like licks up and down his shaft. I rubbed his dick against my cheeks and across my lips while my free hand grazed my fingernails down his thighs. I twirled my tongue around the head of his dick as he gasped and muttered \"Jesus Christ\" repeatedly. I tried not to laugh as he thrust his hips up trying to get me to deep throat him again, ha, that's what I thought fucker, not so tough now are you? I owned his ass, he should thank god for this kind of treatment. I loved the power I had over him, I finally took him fully into my mouth again and deep throated. He thrust his hips up and I could tell he was getting ready to cum, I don't swallow so I started to pull away when his hand grabbed the back of my head. I squealed and used my hands to push away when he grabbed my wrists and rolled us both over, now his weight was on top and he pinned my arms above my head with one hand. I struggled and squirmed but his free hand entangled my hair and held me there as he pumped faster and faster literally fucking my mouth. I was furious and turned on at the same time. I never let a man cum in my mouth and this guy was about to force it. I tried to push against him but all we did was slide around on the satin sheets, I spread my legs to gain leverage and push up but I was helpless. My struggles were making him even harder in my mouth and an involuntary moan escaped me, I was so turned on my nipples hurt. His dick pulsed in my mouth and I felt a gush of his warm seed on my tongue. I sucked harder and had the satisfaction of hearing him cry \"Oh fuck\" as he continued to pump into my mouth. We were both locked in place as I kept sucking and I felt his body weaken, as if I was literally drawing the energy out of him. He finally let my hands go and relaxed his body so I flipped him back over while keeping his dick in my mouth. Now he was trying to pull away and I kept my lips wrapped around him. This is what you wanted asshole, deal with it. He tried to push himself away on the bed but I kept sucking and bobbing up and down. He cried out, \"Enough, enough, dear god\" as he collapsed. Satisfied that I drained him dry I opened my mouth and let my tongue slide up his shaft as I moved to straddle him.",
        "\"Jesus fucking Christ,\" he exclaimed.\n\n\"That's what you get you big jerk.\"\n\nWe stared at each other panting, he looked down at my heaving chest, my nipples were still rock hard.\n\n\"Have you ever done that before?\"\n\nI shook my head no and his eyes took on a different light. Despite the fact that he'd just cum his dick had only softened a little, now he was looking at me with raw hunger and I saw his dick twitch.\n\n\"So nobody has ever...?\"\n\nI shook my head no again.\n\nHe reached for my hips and I pulled away and rolled back off him, I moved toward the edge of his bed as he scrambled after me. I made a foot and most of my body off his bed but he managed to catch my ankle and pull me back making me shriek. He jerked my body completely back on the bed face down, I tried to push away but he straddled my back so I threw my elbow back to get him off. He caught it and twisted it till my hand was in the middle of my back so I swung my other elbow to try and get free. He caught that one too and in seconds had both hands pinned to the small of my back. I thrashed futilely as he easily held me, he grabbed my hair with his free hand pulled my head back causing my struggles to weaken. I was kicking my legs but that died as he dominated me. \n\n\"Fucking asshole,\" I growled.\n\n\"Maybe, even probably, but we both know it's turning you on.\"\n\n\"Fuck you.\"\n\nI hated the fact that he was right, I'd never been challenged by a man the way he was challenging me. My body was on fire with passion at the way he was treating me. I don't want to be abused or have daddy issues or anything like that but the way he controlled me was breaking every barrier I ever held about myself. I prided myself on my strength but his skill and strength brought me down with ease. He was very quickly turning into a weakness my body couldn't handle. He held me tightly, not quite painfully with my head arched back and my hands pinned to my lower back. I felt him shift and his thickness entered me doggy style. I was embarrassed that I was so wet that he slid into me full length without any problem but I couldn't help how turned on I was. My legs again kicked futility as pushed deep inside me.\n\n\"Fuck you huh? How about I do just that?\"\n\nI tried to talk but he thrust against me and all I could do was groan. He changed from pulling my hair to grabbing my neck firmly and pushing my face down while still keeping my arms pinned. He proceeded to shove into me hard and deep as I lay pressed to the bed. I moaned and cried out in pleasure getting louder and louder as he grew harder and drove deeper. I must have gotten too loud because he released my neck for a second, shoved a pillow under my head and grabbed my neck again. I bit down on the pillow to stifle my cries as I lay helpless while he fucked me. Just to tease him I squirmed and struggled a little, every time I did, he strengthened his grip and thrust deeper making me bite harder on the pillow to smother my cries. Once I tried to pull my head back to tell him off but he shoved my face in the pillow and slammed extra hard into me making me cry out. His legs locked around mine till all I could do was wiggle my ass and squirm, having just cum I thought he'd last forever and he lasted long enough that I was starting to wonder if he might actually fuck me to death when unexpectedly his body locked and I felt his load inside me again. It turned me on so much that my own orgasm ripped through my body like lightning. I loved struggling against him and making him tighten up on me as I thrashed and he held me in place as my body pulsed in orgasm. \n\nWe lay on the bed naked and panting looking at each other. \n\n\"I really need to rest a little before we go another round.\"\n\nHe looked at me and nodded.\n\n\"Big jerk,\" I said, punching him on the arm.\n\nHe raised his eyebrows in question.\n\n\"I was saving that for my husband, I've never let a guy do that before.\"\n\n\"Sorry,\" he said offhandedly, but I could tell by his grin he wasn't. \"I've never actually done that before either.\"\n\nNow I raised my eyebrows.\n\n\"It's true, no girl has ever made me cum from a blowjob so trust me, you're the first I've had swallow.\"\n\nI just narrowed my eyes and gave him a quick, \"humph\" as I got up. Inwardly I was exhilarated, I don't know why but I felt like a little girl that had just been told how good she did at school. The fact that nobody had ever made him cum with their mouth gave me ridiculous pride and turned me on yet again. \n\nI kept my face neutral as I said, \"I'm going to take another shower and brush my teeth and then I assume you'll take me to dinner.\"\n\n\"There's extras underneath the sink, I'll shower after you and yes we'll go to dinner.\"\n\nI stood in the doorway of the bathroom, \"You're not going to join me?\"\n\n\"I thought you wanted rest.\"\n\nI nodded but once again a surge of pride went through me, he found me irresistible, ha, eat your heart out bitch!\n\nWe each got ready and a half hour later I was getting dressed in my jeans and blouse. He'd changed to a blood red silk shirt and patterned silk tie with black slacks and loafers. I felt drab as he put on diamond cufflinks and a platinum watch. He looked up from dressing and for the first time since I'd met him, I felt embarrassed as I looked down at my clothes. \n\n\"Hey,\" he said quietly.\n\nI looked up into his eyes.\n\n\"Clothes don't make the person.\"\n\nI swallowed, he'd understood what I was feeling, I smiled. \n\n\"But since where we're going does have a dress code and you need some clothes if you're going to spend some more days with me, I think we need to get you a few things.\"\n\nHe walked over and grabbed his iPhone off his dark wood dresser and punched in a number.\n\n\"Yes... Daniel, how are you today... excellent, I need a favor. I have a beautiful young lady staying with me the next few days and she's going to need a few things.\"\n\nHe looked at me, \"Dress size?\"\n\n\"Six.\"\n\n\"Bra, panties?\"\n\nThirty-six C, medium.\"\n\nHe repeated the numbers on the phone, \"And we'll need a cocktail dress for tonight, black, sexy, ridiculously short if possible or at least backless.\"\n\nHe laughed as the other party said something, \"Exactly. Plus, two pairs of panties, two bras, a pair of shorts, t-shirt or blouse of some kind, one set of walking shoes, two sets of dress shoes... Yes, one of those will be for tonight.\"\n\nHe looked at me.\n\nI looked back.\n\nRolling his eyes, he pointed at my shoes questioningly.\n\n\"Six.\"\n\n\"Size six, oh yeah, and a white athletic sport bra and panty,\" he said to the phone. \"Also have the car ready in thirty.\"\n\nI was a little intimidated by the laundry list of clothing he'd rattled off without a second thought and I almost protested the need to get me more clothes but two things held me back. One, I wasn't a totally willing participant in this scenario so maybe some new clothes would be cool. Two, as much as I had just enjoyed what he did I really didn't want him to take me home to get more clothes and find out where I lived. \n\nHe listened for a few more seconds and hung up the phone, looking at me and then his watch, \"Hurry, we can't dawdle, need to get a move on. \n\nWalking toward the door he grabbed my arm in stride and walked through the suite without a backward glance. \n\nOn the elevator he started texting and ignored me. I felt self-conscious just standing there with him oblivious, so to amuse myself I began to make weird faces at him just to see if he'd ever notice. He hit a button and snapped the phone to his ear and looked over at me just as I had my eyes crossed and tongue stuck out at him. Mortified I wiped the look off my face while he stared at me with a mystified expression. Somebody answered his call and he turned from me and whispered a few sentences. I only caught a few snatches of mostly, \"uh huh,\" and a final \"just do it\" before he hung up.\n\nHe faced me fully with a quizzical expression, \"You're not on any medication, are you?\"\n\nGiving him my best innocent look while pretending not to know why he asked I shook my head and answered, \"No, why?\"\n\nStill studying me, \"No reason, just wondering.\"\n\nI faced forward as if nothing was out of the ordinary and the elevator dinged and the door opened to the first floor. A man and a woman both dressed in business casual stood in front of us. \n\n\"Daniel,\" Chase said, while reaching out to shake the man's hand. \n\nDaniel smiled and took the hand then introduced the girl on his left, \"This is Monique miss, if you'll just follow her.\" \n\nI smiled as Monique took me by the arm and guided me away. In seconds we were in a classy boutique attached to the hotel. Beautiful dresses lined the walls and we stood at a raised marble dais with two chairs on either side and three full length mirrors standing before us. The two side mirrors were angled to allow a person to see an outfit from as many angles as possible. \n\n\"You need a sexy cocktail dress?\" Monique asked, she had a slight Italian accent and was drop dead gorgeous. A blonde with a thin model's body I instinctively wanted to hate her but she was so nice and humble I warmed to her instantly. \n\nI nodded and she held up a dark blue velvet dress.\n\n\"I was told black but I think this dress would look stunning on you.\"\n\nI nodded as my eyes glistened, I'd never owned anything so pretty. It was a simple soft crushed velvet dress with spaghetti straps. She took my blouse and raised it over my head helping me out. I was in shock and remained still as she unzipped my pants and slid them off my legs, she unhooked my bra and left me standing in my panties.\n\n\"You'll need to remove those too,\" she said.\n\nI nodded and mechanically slipped them off as she handed me the dress.\n\nJust then I heard Chases' voice as he rounded the corner with Daniel beside him\n\n\"Have the rest sent to my suite and make sure to take care of Monique.\"\n\nDaniel nodded and they both looked up at me. I froze with the dress in my hands, I didn't quite have my full back to them but nonetheless they were both getting a great view of my ass. Neither man so much as twitched at the sight of my nudity. I expected Daniel to at least try to look away but he looked at Monique and me as if nothing was out of the ordinary. \n\nChase saw me staring and rolled his fingers in a hurry up motion, \"The clock is ticking you know, I'm hungry.\"\n\nI nodded and faced forward while slipping the dress on, I could see them both in the mirror so Daniel was at least getting a partial view of my tits too. \n\n\"Hello Monique,\" Chase said.\n\n\"Hello sir, I hope you don't mind, I took the liberty of changing the requested color.\"\n\nThe dress slipped on my body and into place as if it'd been made for me. The fabric clung to my body and highlighted my own curves. I knew I was considered pretty but I looked stunning in this dress. I struck poses at various angles to see how it looked. The right side had a slit up to mid-thigh that went beyond daring. If I wore panties with his thing on the world would definitely know what color. Monique came forward with a matching silk choker and tied it around my neck.\n\n\"Excellent choice Monique.\" \n\nShe blushed and nodded her head.\n\n\"If you'll have a seat, I'll get you the heels that I picked out.\"\n\nI nodded and sat down, making sure to keep my legs close together while both men watched. The side slit made me feel wicked as I was sure at the right angle a man would be able to see far more than I was comfortable with but Daniel and Chase watched with stoic expressions as Monique came and slipped on black high heels with rhinestones. \n\nWhen I finally stood, I knew that all men's eyes would be on me that night. I struck a pose before them.\n\n\"Well?\" I asked.\n\n\"Epic,\" Chase said, while Daniel just gave a short bow of his head in agreement.\n\nI walked to Chase and he led me outside to a waiting black limousine and we slipped in the back seat. \n\nThe next few hours were special and almost made me forget the situation I was in as we dined in a five-star restaurant. He let me taste expensive French wine, veal with truffles and a chocolate dessert that was the definition of the word sin. Then he took me for a carriage ride through the park where many of the trees had white Christmas lights giving the springtime mood a magical quality as the smell of pine and honeysuckle filled the air. Other couples smiled and walked around, with the drone of the nighttime city and the clip clop of nearby horses laying background to our conversation. \n\nI held onto his arm as we walked and talked about inconsequential things. As we strolled in the park, we saw a foot patrolman a small distance in front of us. Chase seemed perfectly calm as he paused to let the officer walk by us. He raised his eyebrow at me in question but I shrugged and took his arm as we continued to walk. \n\n\"Accepting your fate?\"\n\nI nodded and we continued on in silence.\n\nA minute later, \"So tell me about yourself.\"\n\n\"What do you want to know?\"\n\n\"Well, let's start with your job.\"\n\n\"I'm a police officer, I just finished my bachelor degree and am ridiculously in debt but now I can take the detective test and hopefully get promoted. I work security gigs as a side job to help relieve some of the debt but it makes it hard to study.\"\n\nHe nodded as I explained procedures and what I wanted to do. I told him how long I'd been an officer and the dumb mistakes I'd made, Brent being number one. \n\n\"What about you?\"\n\n\"What about me?\"\n\n\"How did you get to be doing what you're doing?\" I said, while trying to think of a delicate way to address what he did.\n\nSmiling, \"What do you think I do?\"\n\n\"Knowing the reputation of Nicky Mouth, it could be anything from guns, to drugs, to sex slavery.\"\n\n\"I'm a businessman, that's all.\"\n\nI raised an eyebrow.\n\nHe laughed and said, \"Let's leave it at that and drop my business so we can be civil toward one another. Don't judge me and I won't judge you, but you inadvertently bring up something I should mention. I've watched you tonight, you act like a cop.\"\n\nI bristled at his tone, \"I am a cop.\"\n\n\"Yes, and you act like it. I personally don't care either way but if you do meet anybody else while you're with me you need to stop acting like that.\"\n\n\"Acting like what?\" I said defensively. \n\n\"Always checking your six, watching your surroundings, sizing people up.\"\n\n\"It's a hard habit to break.\"\n\n\"Well break it,\" he said forcefully. \n\n\"Or what?\"\n\nHe paused and turned to face me while disengaging my arm, his face lost all expression and he said in a soft tone, \"Or they'll never find your body.\"\n\nA shiver ran from the top of my head to my toes, I mentally kicked myself. He was so charming and seductive that I kept forgetting that I was playing with fire. I gave him a small nod and we continued our walk, this time I didn't take his arm and he stayed quiet. \n\nWe walked back to the limousine and drove back to our hotel. When we entered his suite, he took me to his bedroom and I saw the clothes he'd ordered stacked and hung neatly on a small couch by the door of his bedroom. We hadn't said a word since the park or as he undressed. I took his cue and slipped out of my dress and heels and stood there as he dropped his black silk boxer briefs. He looked at me for a full minute as if trying to decide something.\n\n\"You can stay in here or go to one of the other bedrooms.\"\n\nWithout another word he slipped into bed and closed his eyes. I stood for a few seconds more reminding myself why I was doing this. At this point I was pretty sure he wouldn't tell Nicky anything but at the same time I'd already sold my soul, I may as well finish the game. It would suck to go this far and then not finish and have him dime me out, that'd make everything I did so far for nothing. Still, he'd given me the option of sleeping elsewhere, he couldn't complain if I did. I thought about it for a minute, and decided no. I'd follow the old saying, keep your friends close and your enemies closer. Best to just keep reminding myself what he was. I slid under the covers and moved beside him, he adjusted and soon I fell asleep with my body pressed against his.\n\n*****\n\n\"So where is the rest?\" I asked.\n\n\"That's all I got you.\"\n\n\"Seriously?\"\n\nHe smiled at me.\n\nI was standing in his home gym, which was roughly the size of my apartment and held every type of workout machine imaginable. The weights were chromed while the machines were matte black and there were mirrors on all the walls. Music played from the speakers, I recognized the lyrics to a song by Three Doors Down. The place was a dream come true, we'd both woken early and he asked me if I wanted to work out. I'd said yes so, we got ready. I'd met him in the gym, he was looking good wearing black basketball shorts and a forest green sleeveless muscle shirt. The problem was my outfit, or lack thereof, he'd told them to get me a sport bra and panty set so now I was standing in front of him wearing white underarmour style bra and thong and my sneakers. No shorts, no shirt, just my underwear. \n\n\"You act like anybody but me is going to see you,\" he said.\n\nI rolled my eyes, \"Kind of not the point.\"\n\n\"Kind of is,\" he said sarcastically.\n\nI sighed but decided fuck it, let's do this. I started working out and getting my groove on. The music continued to play upbeat rock-n-roll music as we both bent our backs to some weights. I was impressed, while he occasionally paused to watch me, Chase threw down some serious weights and his workout form was clean. He didn't try to impress me with mega weight or anything but he did work up a hell of a sweat. His hair plastered to his skin and his shirt was soaked, not wanting to be outdone I put forth the same effort. We spent two hours and by the end my clothes were practically transparent from all the sweat glistening on my body.\n\nHe moved to a small set of mats and did some light stretching exercises as well as some martial arts moves.\n\n\"You any good?\" I asked.\n\nHe shrugged.\n\nFeeling cocky because I'd recently earned my black belt in judo, I decided to see what he was made out of. I walked over to the mat and stood in front of him. He raised one eyebrow and I did the same. Shaking his head, he slowly circled me and I dropped into a defensive stance. He launched a lazy swing that I caught, brought over my shoulder, twisted my hip and flipped him over me. Ha, eat that fucker!\n\nAs he flew head over heels his free hand gripped my shoulder and his trapped hand rolled over mine and gripped my wrist. Too late I realized I'd been set up from the start. Trying to roll free as his feet hit the mat and he used his own momentum to bring me forward over his extended leg. He saw my adjustment though and flexed his hip faster to throw me off. He used my own weight to pull himself up and suddenly I was flying over his body. I landed on my back with an oomph and barely had time to register his body looming over me. I rolled over to bunch up and planned to jump up but once again he anticipated me. He'd never let go of my wrist so it was simple to pull it away from me and bring it behind my back as he straddled me. I tried to move my free hand under me but he slipped his free hand to the inside of my elbow just as I pushed up, he gave a quick tug and my weight collapsed and my arm slipped behind me, he grabbed my wrist and now both hands were locked behind me to the small of my back. I had no weight, no leverage and was pinned helpless. I relaxed my body, it was useless to struggle.\n\n\"Give,\" I said through clenched teeth.\n\nHe put his face next to my ear, \"As victor I decide what I win right?\"\n\nI nodded.\n\n\"Your clothes please.\"\n\nI looked over my shoulder and glared, he had an insufferable smirk on his face as he let me go and stood up. I was breathing hard yet he wasn't showing anything. I stood and faced him and he pointedly looked at my hard nipples clearly visible through my sweat soaked bra. I hated the way he turned me on, my body needed to start listening to my orders and quit getting so worked up. I angrily took off my top and then slipped my fingers into my panties and tugged them low enough to let gravity take them. I kicked them off as they dropped to my ankles.",
        "\"Happy?\"\n\n\"Very.\"\n\nHe closed the distance between us and wrapped his arms around me as he kissed me. I growled as I crushed my body to his, our sweat mingled and we each strained our muscles to the maximum to keep each other close. Our lips devoured each other and his hands dropped down to cup my ass. I instinctively wrapped my arms around his neck and gave a little bounce to show I was about to hop up and wrap my legs around his waist. He caught me but dropped to his knees and leaned forward to push me down to the mat. I brought my hands down and tugged his shirt off throwing it to the side, moving them instantly back to tug his shorts low enough that my feet could hook them and tug them the rest of the way down. He pulled back and adjusted his dick at my entrance. As soon as his head was in line, I pulled his body forward with my legs, impaling my body on his shaft. I dug my nails into his chest making him hiss as his full length went inside me. He glared at me and flexed inside me making me groan, he let his weight come forward and I shifted my hands to his back and dug my nails in. He put his weight on me and cupped my ass in an iron hold as he pumped violently in me. I raked my nails down his back as he crashed into me repeatedly.\n\n\"Bitch,\" he whispered in my ear.\n\n\"Fuck you,\" I said back.\n\nOur bodies slammed into each other as we each sought to mix our pleasure with the other's pain.\n\n\"Fucking whore,\" he breathed, as he used all his strength to crush my body to him.\n\n\"But not your fucking whore,\" I said, using all my strength to wrap my legs tighter around him. \n\n\"That's exactly what you are, my personal fucking whore,\" he said, then bit my ear. \n\n\"Fuck you,\" I said, digging my nails in his back.\n\n\"Say it,\" he said, biting my lip and kissing me.\n\nI bit back till I tasted blood, \"No fucking way.\"\n\nHe thrust hard and deep into me repeatedly, \"Say it.\"\n\nMy breath was coming in gasps and I was seeing stars, I knew we were bruising each other and I dug my heels in tighter keeping him as deep as I could inside me.\n\n\"Fuck you,\" I snapped. \n\nOne hand left my ass and slid up my body to my hair as he wove his fingers into it and yanked back making me hiss in pleasure pain. \n\n\"Say it,\" he growled.\n\nI shifted my hands and dug my nails into his ass as he violated me. I could see black edges in my sight and I feared I was about to pass out.\n\n\"Say it.\"\n\n\"Yes, yes,\" I cried.\n\n\"Not good enough,\" he said as I felt his dick throb, I knew we were both seconds away from climax.\n\n\"Say it.\"\n\n\"I'M YOU'RE PERSONAL FUCKING WHORE,\" I screamed.\n\nAs if the words were a cue, we both felt the orgasm rip through our bodies. My vision went white as my body spasmed. I almost broke my back from arching as waves of pleasure washed over me. His body felt like steel as his muscles locked, I felt each pulse of his dick as he throbbed inside me, each wave sending another pleasure jolt in me each slightly less than the last till my body unlocked and I collapsed in a limp pile on the mat. His body fell on top of me as we both lay panting while we recovered. \n\nAfter a while we moved to the shower and soaped and rinsed each other's bodies. Each wrapped in a towel we walked to the living room where he snapped his phone and tapped a few buttons. \n\nLooking up at me, \"Join me in the spa?\"\n\nI shook my head no.\n\nHe shrugged but motioned me to follow him as he walked from the living room to the spa.\n\n\"Since you don't want to join me...\"\n\nHe grinned as he produced his handcuffs and once again proceeded to stretch my arms and cuff me to either pillar. This time I was facing the water, he tugged my towel off leaving me standing naked as he entered the water.\n\n\"So why don't you want to join me?\"\n\n\"I was going to get dressed and go get us some breakfast,\" I said. \"I'm starving and would kill for a coffee. Plus, the more we're around each other naked I swear one of us is going to kill the other.\"\n\nHe laughed, \"That does seem to be the case, but as for breakfast or brunch since it's a little late, I already took care of that.\"\n\nAt that moment I heard the door and looked over my shoulder to see the same busboy wheeling in another cart. Great, this kid had seen me in my bra and panties yesterday now here I was naked and showing him my ass. At least I wasn't gagged this time. Sure enough, he was staring at my butt the whole time he wheeled the cart forward, he almost tripped because he wasn't paying attention to where he was going. After that he took his eyes off me and arranged our meal. \n\nI resigned myself to the whole situation and faced Chase as he lounged in the waters. \n\n\"You could've told me.\"\n\nHe shrugged but didn't say anything as he dropped underwater, a minute later he surfaced as the busboy finished. \n\n\"Anything else sir?\"\n\nI glanced back at him and once again he was staring at my ass.\n\nI almost told him to take a picture but realized Chase might just let him so I kept my mouth shut.\n\n\"No thank you Kenneth.\"\n\nHe nodded and turned away, leaving the room quickly and quietly. I looked back at Chase as he left the water. Rivulets flowed down his body as he stood naked in front of me. My eyes involuntarily moved over him, his body was beautiful and despite myself I stirred at the sight of it. My nipples got hard and I struggled to keep my breathing even and eyes neutral as he toweled himself off. He casually uncuffed me after wrapping the towel around his waist, I reached for my own towel on the ground but he gently grabbed my hands.\n\n\"Uh uh, no clothes for you right now.\"\n\nI narrowed my eyes but a small smile played across my face as we sat down. It was a boost to my ego that he wanted me naked so much. I'd even admit to enjoying it but never to him.\n\nAfter breakfast he took me to the bedroom to get ready.\n\n\"Where we going?\" I asked as I dressed in the red high waist shorts and black halter top that had been left for me. \n\n\"I thought I'd take you to the Met or we could go to the zoo, your choice,\" he said, as he put on black knee length jean shorts and a white tank top. \n\nThe rest of the day was spent wandering the city and enjoying ourselves. We didn't hold hands or go arm-in-arm like lovers but we had a good time and despite my reservations Chase was very easy to talk to and practically a walking encyclopedia of knowledge with a good sense of humor. As we walked around, we made our way into the high-end shopping district. One window happened to have a mannequin wearing a black and burgundy trim demi-bra and panty set. I paused to admire it and Chase stopped.\n\n\"You'd look spectacular in that.\"\n\nI nodded, \"Yeah, but that's a little out of my price range.\"\n\nI pointed to the tag, \"$500.\"\n\n\"Jesus Christ! Are you kidding me? I've seen more cotton in the top of an aspirin bottle and that's $500?\"\n\nI laughed at his joke.\n\n\"One second, I've got to see this.\"\n\nHe grabbed my hand and we walked into the store and found a clerk.\n\n\"My friend would like to try that set in the window,\" he said, pointing at the display.\n\nI blushed as the little blonde looked me over with an appraising glance. She took my hand and walked me back to the huge curtained dressing room. \n\n\"I'll go get it,\" she said.\n\nI stripped out of my clothes and waited, a hand brushed the curtain aside and a Chase poked his head in. He gave a quick glance up and down at my nudity.\n\n\"For the record I like this outfit best.\"\n\nI laughed and struck a pose with a bent leg and hands on my hips. \n\n\"Oh yeah, is this how I should walk around the rest of the day?\"\n\n\"If only,\" he laughed. \n\nThe clerk walked up and entered from the other side of the curtain and helped me get dressed while Chase watched. The bra was all black lace and low cut enough that the tops of my aureole were visible. It did support from underneath and helped push my boobs up making my tits look even bigger than normal. The bottoms had cutouts on either side of my lips showing plenty of skin and barely covering my pussy. The backside was just a string. I admired myself in the mirror as I got everything settled in place. I glanced back at Chase to see his phone out and taking a picture.\n\n\"Front side now please,\" he said.\n\nI froze for a second as I thought about a criminal having half-naked pictures of me but realized if he wanted to mess with my career it was too late for me to stop it. Fuck it, If I'm going to hell I thought. I gave him a big smile and began to pose front and back for him as the clerk watched.\n\n\"Does that mean you'll take it?\" she asked.\n\nChase nodded yes and she walked away to ring it up.\n\n\"I only have one condition,\" he said.\n\n\"What's that?\"\n\nHis face became serious, \"Think of me when you wear this.\"\n\nWe locked gazes for a minute and I felt something thrilling and scary pass between us. I looked down but nodded meekly. \n\nThe next two days passed quickly, we went back to his penthouse and a few people in suits came by. I left them alone and made sure to act as dumb as possible whenever his guests were around. He took me to dinner again and the final morning I woke to him already dressed. I gave him a sleepy smile while he sat on the edge of the bed. \n\n\"So, here's the deal. I got a trainer coming by in the next few minutes, he's going to run you through a workout and then a masseuse is coming by to give you a full body massage, after that brunch will be served.\"\n\nGroggily I tried to wrap my head around what he was saying, unexpectedly I felt a pit in my stomach, \"What about you?\"\n\nHe kept his expression blank and his words crisp, \"I'll be gone the rest of the day and am leaving the area for a few weeks.\"\n\nWe stared at each other and I realized tears were forming in my eyes. It wasn't like I cared about this creep it just hurt to be so callously dismissed. \n\nI got my emotions in check, \"Don't bother, I'll get dressed and leave in five.\"\n\nHe shrugged and without emotion said, \"I've had the clothes I got you put in a suitcase,\" he gestured at a small case by the bedroom door. \n\nI nodded, refusing to speak because my voice might crack, I looked down to prevent him from seeing the pain and rage on my face. \n\nHe pulled out a thick envelope and tossed it next to me, I looked inside, it was stuffed with $100 bills.\n\n\"I don't want your damn money,\" I said sharply.\n\n\"I didn't think you did, but that should help you by letting you stop having to work extra to get out of debt, now you can study to pass your test.\"\n\nHis face still held no emotion. I hated myself for it but I snatched up the money and held it to my chest with the bedsheet. \n\n\"Do well Officer Cruz,\" he said and turned away. Walking to the door he never looked back, seconds later I heard the front door close. I thought about his offer to stay, work out and get a massage but for some reason I was on the verge of tears and the thought of being in his rooms any longer was intolerable. I got up, dressed, grabbed everything and left.\n\n*****\n\nThe next few weeks were a blur, despite my initial hurt at his dismissal I quickly got over it and spent the time getting my life together. Brent never contacted me and I used the money I earned from the incident to quit my second job allowing me to get some much-needed study time for my detective exam. At first, I felt dirty about the five thousand dollars Chase had given me but I felt I'd truly earned it and I put it to good use to ease my conscience. \n\nEven though my morality allowed me to use the money what I found more disturbing was the thoughts of Chase that refused to go away. We'd barely known each other and I still thought of him all the time after a month had gone by. Worse, I used a vibrator almost every day and my fantasies always centered around him. It wasn't just sexual, I found myself missing him more than I cared to admit.\n\nOne Tuesday night I got home from work and found a handwritten packet addressed to Officer Estrella Cruz taped to my doorstep. Frowning I opened the note, five crisp $100 bills were inside. Written in beautiful calligraphy was a message.\n\nI need you another three days, same thing as last time. Be at my place tomorrow 5 pm sharp, enclosed is money for needed wardrobe, bring equal to what you had last time. Wear burgundy mini dress, black thigh high boots, rhinestone choker, no bra, no panties when you show up. \n\nA weird surge of joy flashed through me followed by annoyance, who the hell did he think he was? I wasn't at his beck and call; did he think I'd just come running for the money? I got madder as I stood there. Finally, I went inside and fumed. I ate dinner and worked out the whole while thinking about what I'd tell him. I'd write a letter and leave it on his doorstep and see how he liked it. No, better yet I'd go in person and tell him to fuck off as I slapped his face. Ha, yeah, that was it. Or even better, I'd pretend to do what he said, bring clothes, dress like he wanted, then when I was inside his suite, I'd crush him. I'd tell him to his face to fuck off and that he'd never touch my body again. Yeah, that was it, I was going to show him what he would never get again.\n\n*****\n\nThe following day standing in front of his door I started to consider this might not be the smartest way to handle the situation. I had butterflies in my stomach and my mouth was dry, I was considering leaving but he opened the door just as I made up my mind and turned to leave and I realized I'd look foolish if I walked away now. He smiled as he looked me up and down.\n\n\"Come in.\"\n\nI followed him to the living room, he was barefoot and dressed in jeans and black t-shirt that clung to his body, damn he looked good.\n\n\"I just came to tell you,\" I squeaked. \n\nI caught myself and cleared my throat. In a normal voice I said, \"I just came to tell you that I'm not your personal whore.\"\n\nHe stopped and faced me in the middle of the living room, the windows were open to his balcony and I could hear the bustle of the city, the lights of nearby buildings and skyline made a beautiful background. He kept the light in the living room dim and I saw a small glass of whiskey in ice next to his white leather chair facing the outside. \n\nHe nodded in understanding, \"Actually we had that argument and I think you lost.\"\n\nI blushed red at the memory and shifted my legs at the surge of electricity that went through my body, hardening my nipples. \n\nHis infuriating grin toughened my resolve, \"Doesn't matter, I just came to tell you I'm not for sale.\"\n\nHe slowly walked around me, \"Yet you came here dressed exactly as I asked. Outrageously sexy burgundy mini dress, black thigh high boots and a rhinestone choker.\"\n\nI felt like a baby seal on ice as it watches a shark fin circle around it in the water. I kept my hands to my side and tried to avoid shifting my legs too much, \"I just wanted to show you what you wouldn't get.\"\n\nHe moved closer until I could smell his fresh clean scent, as if he'd just showered. There was just a tease of spicy cologne underneath it. He whispered into my ear making me flinch and my stomach tighten, \"Have I told you how much I love your hair? So black and lustrous and beautiful.\"\n\nI shook my head no.\n\n\"Let's play a game,\" he said.\n\nHe grabbed my hand and led me toward the spa, once there he took one hand and pulled out handcuffs from his pocket and locked my hand to a pillar.\n\n\"How many of those things do you have?\" I cried. \"What, do you buy them in bulk?\"\n\n\"For you, yes, it's the easiest way to keep you in line.\"\n\nMy eyes narrowed as he grabbed my other hand, he tried to lift it but I kept it firm to my side forcing him to apply more pressure to move it. I kept resistance against him but didn't struggle or jerk away as he slowly moved my arm into position and locked it in place to the opposite pillar. Once again, my arms were stretched to either side just above head level making my very short dress pull up enough that I'm sure a little bit of ass cheek would be showing. \n\nShaking his head, \"Always defiant.\"\n\n\"Like I said, I'm not your per...\" was as far as I got before he slipped a rhinestone studded ballgag into my mouth. \n\nI glared as he tightened the leather strap behind my head. He gave a low chuckle at my defiance and I flipped my middle finger at him. \n\nShaking his head, he stood back to look at me. I admit to enjoying the admiration and lust I saw in his eyes but it was still infuriating the way he just took control as if I were his plaything.\n\n\"You say one thing but your body says another,\" he said, as he stroked a rock-hard nipple through the fabric of my dress. \n\nI groaned and tried to turn my chest away from his probing fingers but he was relentless as he teased me increasing my arousal. \n\nDucking under my arm he moved behind me, his fingers trailed lightly over my butt sending shivers up my spine and causing goosebumps on my body. He moved his hands down my thigh then slid back up moving under my dress, his fingers leaving heat trails across my skin as he lifted my dress a few inches while he traced his fingers back and forth on the cheeks of my ass. \n\nHe placed his lips on my ear, \"So, here's the deal, I'm going to hike this dress up as high as I can. If as you say, you just came to show me what I won't get then I'm sure you wore panties despite the fact I told you not to. If that's the case I'll uncuff you and send you on your way and you can keep that envelope on the table over there.\"\n\nI noticed another thick stuffed envelope like the one he gave me last time.\n\n\"But if I don't find anything but bare skin then we'll both know the real reason you came here and I'll act accordingly.\"\n\nMy head dropped in defeat, I knew what he was going to find. I hated myself for my weakness. I kept telling myself I was just here to tell him off but deep down I knew better. I was stupid and one day it was going to get me in a world of trouble, possibly right now. \n\nHiking my dress up he found bare skin, my ass was on presentation and even though he'd seen it before he was taking his time admiring it now. Both hands grabbed my hips and trailed his fingers across the front and back of my thighs. Moving his foot between my legs he pushed my feet to more than shoulder width apart. Sliding his fingers up my sides to cup my tits from behind, he hooked a finger into the fabric and stretched it down below my boobs exposing my chest to the open air. Moving back and forth he pulled all the fabric under my tits making sure it wouldn't slide back and cover them. His fingers teased my nipples making me groan. I was pushed forward as his hands moved to my back then down to my ass.\n\nJust then the door opened and young blonde female busboy wheeled in a table with silver trays, or is that a busgirl? I wasn't sure but it hardly mattered as I blushed red at the embarrassing position I was in. Her eyes went wide as she looked at me but she had a small smile as she moved the tray toward us.\n\n\"I brought dinner as requested sir.\"\n\n\"Thank you, Jessica, that will be all.\"\n\nShe nodded and gave me a quick wink as she left without a word.\n\n\"I swear you get so wet when you're seen.\" \n\nI heard a zip and rustling and then his naked body pressed to mine. I arched my butt and felt his cock at my entrance. I was so wet he was able to enter me without any resistance as he buried himself deep. I hooked my fingers around the chains of the handcuffs and strained against him. He took his time and smoothly slid back and forth inside me. \n\nThe next few days passed just like before, he took me to nice restaurants and I had a nice time. The sex was raw, passionate and intense. Despite our differences, we each filled a role in each other's lives. At the end like last time he left early after leaving a fat envelope with five thousand dollars by me on the bed. Less upset this time I took him up on his offers, I worked out, had a nice meal and massage then got dressed and left. ",
        "*****\n\nTo be continued...\n\nNote: Comments always appreciated."
    ],
    "authorname": "storm_usmc",
    "tags": [
        "tied",
        "panty",
        "gagged",
        "police",
        "mob",
        "criminal",
        "handcuffed",
        "gym",
        "sexy",
        "shower"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/dont-judge-me-ch-01"
}