{
    "title": "Love Knows No Color Pt. 18",
    "pages": [
        "We sat on the back porch of the farmhouse, on a warm spring morning, the five of us. Mom and Shavonda were chatting about a little of everything, as I rubbed Shavonda's bare back. She was wearing a leopard print halter dress, and the open back was a temptation I could not resist. Grandma and Edie were also relaxing on the porch. The baby had been fed and changed, and was sleeping peacefully in her carrier at our feet. Looking out over the backyard, with the mountain towering above, it occurred to me that this would have been a perfect place to live if not for the backward attitudes here towards couples like us. \n\nWhile racism wasn't an everyday thing Shavonda and I experienced, it was always there, lurking just beneath the surface, ready to rear its ugly head. Just that morning, I had been attacked by a former high school classmate who'd taken offense to my wife. As dumb luck would have it, I didn't have to defend myself. When he took a swing at me, I'd ducked and he hit a metal door frame instead. I was sure he had broken some fingers. It was fortunate in that it saved me the trouble of defending my wife and myself. Not knowing where we stood in the small Virginia town, we'd fled the scene in our car, driving across the West Virginia border to my parent's farm. \n\nIt was the day before Mother's Day, and our intention all along was to spend the day with her. We'd dragged Edie along with us, not telling her where we were going until she figured it out on her own. Shavonda and I had hatched the plan in order to get Edie together with Kenny, who we expected to show up at any time. Hopefully, they'd be able to patch things up. But I knew something that none of the others knew. Kenny had taken the buyout, and was prepared to move north to be with Edie.\n\nAround lunchtime, Kenny did show up. Being in the back of the house, we hadn't heard him pull up. We didn't know he was there until he walked onto the back porch.\n\n\"Edie,\" he said, \"I have something for you.\" He held out a small box. Edie took it and opened it. Inside was a beautiful diamond ring that had to set him back a couple of thousand. Edie looked at the ring, then at Kenny, tears in her eyes. \"Will you marry me?\" he asked.\n\nEdie almost said yes, then her jaw clenched. \"Not unless there's a moving van parked out front,\" she said. Kenny grabbed her by the hand. \"I have something to show you,\" he said softly. We followed as he led her by the hand to the front porch. There, parked in front of the house, was a U-Haul truck. He'd done it. He'd given up all he had for Edie.\n\n\"Yes,\" Edie said softly. \"The answer is yes.\" Kenny held her tight as she sobbed into his chest. The separation was over. Now they could start to rebuild their relationship. \n\nSitting on the front porch, Shavonda and I discussed the future with the newly engaged couple. Kenny was expecting two years' salary in the buyout, but had sacrificed his pension. As of yet, he had applications pending in Pittsburgh, but no one had offered an interview yet. \"You can start tomorrow,\" Shavonda said. \"We are losing one of our employees, and you can fill her spot if you want. I can't pay much, $10 an hour, but at least you will have steady work until you can find something in your field.\"\n\nWe also offered the use of one of our spare bedrooms, if Edie wasn't ready to live together just yet. That was something only they could decide. After two weeks where Edie had not talked to Kenny, letting others tell her what Kenny's intentions were, I suspected she'd need a little time to get back to normal.\n\nAfter lunch, Kenny and Edie took off for his parent's house down the valley. The newly engaged couple would spend the day with his mother, then return here for the night. Kenny had already turned in his apartment key to the landlord, and had nowhere else to go. We let him borrow the Jeep so he wouldn't have to drive the moving van around. And tomorrow, when we left for home, Shavonda and I would take the van. Since I was used to driving larger vehicles. Kenny would drive my Jeep. I made sure to get the two-way radios out of the glove box, and plug them into their chargers. We'd need them for the trip north. \n\nShavonda and I sat on the porch with Mom and Grandma, and the conversation turned to the baby playing at our feet. \"Has she started teething yet?\" Mom asked. \"She should be about due.\"\n\n\"Not yet,\" Shavonda replied. \"And I'm not looking forward to it. I don't want her biting me every time I feed her. So we've started her on cereal. I figure if I can get her eating solid food I can cut down on the pain she inflicts on me.\"\n\n\"She takes bottles now,\" Mom said. \"You have been pumping your milk all along, so you can still feed her your milk without getting bit.\"\n\n\"It won't be the same,\" Shavonda said. \"Breastfeeding is a special time for me. I feel so close to her when I do it. It's something I never thought I'd be able to do.\"\n\n\"I can understand that. Jason was breastfed, and you see the bond we have.\" Mom was right. Even though I'd moved away, we had kept in close contact over the years. And sometimes it was like Mom knew what I was going to do before I did it. Take Shavonda for example. The first time we'd come here Mom had let us sleep together, but insisted we keep the door to the bedroom open \"Because you're not married yet.\" She knew I'd found the love of my life even then. She was also the first one to know Shavonda was pregnant, when everybody else thought she was incapable of childbearing.\n\n\"I'm looking forward to when Miracle can walk and talk,\" I said. \"There is so much I want to teach her.\" Miracle sat on the floor making cooing sounds, happily trying to chew on her chubby little hands.\n\n\"See, she's starting to teethe already,\" Mom said. \"When you see babies start to chew on things, it's a sign their teeth are coming in.\" She changed the subject. \"So, Von, have you been a good girl lately?\"\n\n\"How is Jason going to flood the world with my babies if I am a good girl?\" Shavonda laughed. \"Truth is, we are trying to make a little boy. I don't know if I can have another baby, but I'd like a boy to name after Jason. Honestly, just being around that man drives me crazy. I've never been so attracted to anybody in my life. And I know he feels the same way. So even if I wanted to, I couldn't be a good girl around him. He brings out my naughty side.\"\n\n\"Y'all make me laugh every time you come here,\" Mom replied. \"Your love is a beautiful thing. I've never seen a bond like you two have.\"\n\nI have,\" Shavonda told her. \"My Grandma and Grandpa were this close. When he died, she never got over his death. She wasted away, and a year later she was gone too. I know, I took care of her that final year. It was a sad thing to see. When he died, part of her died with him. Like us, they'd been through hell together. But theirs was worse. They were originally from Alabama, and they were right in the middle of the civil rights fight. That church bombing in Birmingham killed one of their cousins, she was only a child. That's when they decided to leave the south and moved to Pittsburgh. Grandpa chose it because he had been a laborer in the steel mill in Birmingham, and he knew he could get a job in the mills in Pittsburgh. Yeah, we've had it rough, but not like they did. And like us, it made them closer rather than driving them apart.\"\n\n\"Sounds like they were wonderful people,\" Grandma said. She'd been quiet all along, as she usually was. \"I would have loved to have met them and heard their stories. I had a hard time, being Seneca, but nothing like what they went through. I remember the trains, with the coaches divided down the middle, colored on one end, whites in the other. I'm glad that isn't happening now.\"\n\n\"They did have it easier in the North,\" Shavonda said. \"Grandpa was able to work his way through school, and got a degree in electrical engineering. That got him promoted in the mill, and he ended up as a supervisor. He had enough time in that when the mills started to close down about the time I was a baby, he was able to keep his job. He was also able to put Daddy through school, and Daddy found work on the railroad. They did well enough to buy land and have a house built. That's the house we live in now. It has a lot of history in our family.\"\n\n\"I never knew that,\" Mom said. \"I know Jason worked hard to buy his, even after the divorce, in the hopes he'd have somewhere to raise the kids. And now, you two have a nice place together in the city. Jason, whatever happened to your house?\"\n\n\"Tamika, Von's maid of honor, is renting it from us with her fianc\u00e9 until they can get a loan to buy it,\" I replied. \"Tamika and Brian are getting married in August.\"\n\n\"Was she the chubby girl?\" Mom asked. I nodded. \"She's beautiful,\" Mom continued. \"I'm glad she is doing well.\"\n\n\"Tamika manages one of my stores. If it weren't for her and Velma, I don't know where I'd be. They have been there to keep things afloat during some hard times. And when I was pregnant, they ran the day to day operations. I worked as much as I was able, but they did the heavy lifting for me. Jason helped out too. He did a lot of the prep work on the jewelry, as well as gave us photos to sell.\" Shavonda explained. \"Tamika has been there from the beginning. She started working for me when she was still in high school.\"\n\nShavonda decided to change the subject. \"What has Kenny been like the past couple of weeks?\"\n\n\"He has been really down,\" Mom said. \"You know he loves that girl, right? He's been trying to talk to her since the last time you were here, and he even quit his job over her.\"\n\n\"Told ya so,\" I said. \"Your sister just about blew things up for them.\"\n\n\"I know,\" Shavonda shook her head sadly. \"I was so mad at you about yelling at Shaunice I never stopped to ask why.\"\n\n\"Wait,\" Mom said in surprise, \"did you two have a fight over this?\"\n\n\"Yes,\" I truthfully replied. \"Von's sister said all sorts of bad things about Kenny, and that's why Edie wouldn't talk to him. Edie was told Kenny only wanted to use her for sex. It was also insinuated that he would replace her with a white girl. I knew that wasn't true, and I told Shaunice a thing or two about herself.\"\n\nMom shook her head. \"Kenny wasn't dating anybody else. Where would Shaunice get that idea? If anything, Kenny would stop dating if he lost her. She's the only one he wants.\"\n\n\"That's what Jason said,\" Shavonda explained. \"He thought Shaunice might be jealous of Edie, or had a crush on Kenny but Edie beat her to him. He also said that after Edie, Kenny wouldn't give Shaunice the time of day even if she threw herself at him. I honestly don't know why my sister acted the way she did, but she almost destroyed any chance they had of getting back together. Edie about threw a fit this morning when she realized where we were going.\"\n\n\"At least they're talking now,\" Mom said.\n\n\"OH, you don't know?\" I asked. \"They're engaged!\"\n\n\"What? When?\" Mom was shocked.\n\n\"This morning when Kenny arrived,\" Shavonda said. \"You were sitting right here when he gave her the ring. She followed him out to the front and when she saw the truck she said yes.\"\n\nMom shook her head. \"It's all your fault, Jason.\" She laughed. \"Von, you know he's the black sheep, right?\"\n\n\"I kinda got that feeling.\"\n\n\"Even back when they were kids, he was the one who did his own thing. Kenny followed him devotedly. Even though Jason is a year younger than Kenny, Jason set the pace. Kenny told everybody he was just trying to keep Jason out of trouble, but wherever Jason went, Kenny followed. They were everywhere in these mountains. One day, up on the mountain, Jason climbed a rock and got scared and couldn't get down. Kenny came running back here, and we got the forest ranger to rescue Jason with a rope. Another time, they were climbing trees and Jason fell. He'd have hit the ground head first if his foot hadn't got caught in the crook of a branch about six feet off the ground. Kenny ran back here, again. When we got there, Jason was hanging upside down from the branch screaming his head off. He sprained his ankle in the fall, and couldn't walk for a few days, but that branch probably saved his life.\" Mom was on a roll, talking about my childhood adventures.\n\n\"Jason was the odd duck around here,\" Mom continued. \"In an area where all the boys hunt and fish he did neither. Said he couldn't stand to kill the animals. Instead, he was interested in the rocks. Him and Kenny loved looking at maps, too. When they grew up, Jason was going to be a geologist, then he decided to be a civil engineer, he wanted to plot out where things like roads or pipelines would go. Kenny wanted to be a surveyor, so he could lay out Jason's plans in the real world. They wanted to have their own partnership. But it never worked out for them.\"\n\n\"So that's why Jason went to school for geology and civil engineering,\" Shavonda said.\n\n\"Yep,\" I answered. \"I'd have tried to get work down here, and dragged Rose with me. But I couldn't pull it off.\"\n\n\"So you see, Von,\" Mom said, \"your husband has had a profound influence on this family, even if he doesn't realize it. We see things differently because of him. When everybody else was asking why he was asking why not. He really shocked us, though, when he brought you here. Although, in hindsight, it shouldn't have surprised us. If anybody was going to bring a black girl to meet the family, it would have been Jason. He just doesn't see the world the same way most people around here do. And when he brought you around, it forever changed how we see people in this family. Understand that we taught the kids to judge people on their character, and that's why Jason fit in so well with your family. Because your mother has the same outlook as Jason. She sees people for who they are not what they are. And we're proud to call all of you family now. And once again, with Edie, Kenny is following in Jason's footsteps.\"\n\n\"If Kenny thinks he and Edie are going to have the same kind of relationship we have, he's in for a surprise,\" Shavonda replied. \"Edie is a lot different from me. She is the only child of a single Mom. Her daddy died years ago. She doesn't let many people get close to her. He's going to have to nurture her, she can be very insecure. Sometimes she's her own worst enemy.\"\n\n\"But I understand about Jason's influence,\" Shavonda continued. \"I am dark-skinned, very dark-skinned. Jason was the first of my boyfriends to tell me my black was beautiful. I knew I was pretty, but until Jason I never thought I was beautiful. You see, among us black folks there is a feeling that the darker you are the less beautiful you are. I've had to deal with that all my life. To Jason, my darkness is part of what makes me beautiful. And he tells me so every day.\"\n\n\"I think he's right,\" Mom replied. \"Von, you ARE beautiful. You also have an elegant air about you, just like your mother and father. But you also have that playful side as well. I have to admit I loved watching you turn the tables on Kenny and Nora during the times you were here before. They both tried to embarrass you, but you refused to back down, and turned whatever they said back on them. Like last time when you insinuated you shared your breast milk with Jason. Nora was so uptight she about had a heart attack.\" We all laughed, remembering Nora's reaction. \n\n\"I am glad you are with Jason,\" Grandma said. \"It took me a while to accept you being with Jason, but I always liked you. We were always told it was wrong for races to mix like you two do. I remember my parents having a hard time when we moved here. They didn't take kindly to a Seneca woman being with a white man. But as bad as they had it, it was far worse for couples like you. It was just the way things were, and few challenged it.\"\n\n\"I meant to ask you sometime,\" Shavonda said. \"How did a Seneca woman get to Appalachia anyway? The Seneca nation is in New York.\"\n\n\"My father met my Mom while working near the reservation in Salamanca. They got married there, and moved here to work on the rural electrification. Eventually, they bought land near Hot Springs. I met and married Jason's Grandfather, and we moved on his family's farm. Been here ever since.\"\n\nI'd known my great grandfather had worked for the power company, but hadn't known he was putting in the very first electric lines in the area. I was learning as much about my family as Shavonda was. I'd known the Waites had lived in the area since the 1700s, but hadn't realized that Grandma's family had arrived much later. \n\nI was also glad we lived in the present day, where I could openly take my wife anywhere, instead of the 1950s and 1960s, when we could have been arrested in Covington, for simply being married. Conditions in West Virginia would have been a little better, but our marriage would have still been illegal. It just wouldn't have been actively prosecuted. Miscegenation laws didn't go away here until the Supreme Court rules them unconstitutional in the 1960s.\n\nShavonda whispered in my ear. \"Want to go up to KR by the tunnel?\" She was referring to the spot where the railroad crested the mountain with a tunnel bored through the summit. It was a special place for us, one we tried to visit every time we came here. \"I want to be alone with you.\"\n\n\"Sorry,\" I said, meaning it. \"Kenny took the Jeep. I'm not taking the truck up there and get it stuck with all Kenny's stuff inside. Maybe we could take a walk down to the iron bridge instead?\"\n\n\"I got a better idea,\" Shavonda replied. \"Why don't we go to the treehouse?\" I felt the stirring in my pants as I realized what she wanted. \n\nTurning to Mom I asked, \"Where do you keep the spare blankets? Shavonda wants to go for a walk, and I don't want to get her dress dirty when we sit down.\"\n\nShe looked at me with a knowing expression. \"Upstairs, hall closet by the bathroom,\" she said. \"We'll watch Miracle for you.\"\n\nShavonda and I padded barefoot to our room. We almost always took our shoes off when we were here. On the way, I got the blanket from the closet, and helped strap her sandals as she sat on the bed. I put on my comfortable old Velcro sneakers, and we started on our walk hand in hand, blanket slung over my shoulder. \n\n\"I wish I had love like that,\" I heard Mom say to Grandma as we walked away from the house.\n\n\"I did,\" Grandma replied. I smiled at my ebony goddess. Grandma understood. Even though she'd resisted our relationship until we were married, she understood what we felt for each other. I wondered how much that had to do with her change of heart.\n\nWe walked through the pine and oak forest to the treehouse. The underlying soil in this spot was a rocky shale, on which few things would grow, except patches of grass and a few small bushes. The shale barrens like this one were common in the ridge and valley, and the lack of undergrowth always gave them a parklike feel to me. \n\nArriving at the treehouse, I helped Shavonda up the ladder, my hands on her booty for support. As she climbed out of my reach, I watched her ass sway as she ascended. She was wearing no panties. She wiggled her ass as she reached the top of the ladder. \"See anything you like?\" she teased. \"Boy, you better come get you some.\" In a flash, I was up the ladder and into the treehouse. Shavonda reached around the back of her neck and untied the halter strap on her leopard dress as I hastily spread the blanket on the treehouse floor. I watched in awe as the front of her dress fell away from her breasts. She slid the dress over her hips and let it pool on the blanket. My ebony goddess stood before me, naked and ready. Though I had seen her body a thousand times before, I still had trouble getting my head around the fact that this delectable creature wanted me, of all people. That she was just as in love and lust with me as I was with her, and that we were one now. \n\nHere we were in this special place, one that I had built with my cousin, this place that represented my childhood. And my lovely wife wanted me to take her, on the spot. Shavonda turned her back to me and bent over, hands spreading her ass cheeks as she looked back over her shoulder at me. \"No,\" I said. \"Not like that.\" Shavonda looked disappointed. \"Von, I am not going to fuck you here. This place is way too special for that.\" I pulled my t shirt over my head and unbuckled by jeans. \"We make love here, or we don't do it at all.\"",
        "I stepped around in front of her, holding her naked body against mine. I was hard as a rock. Kissing her, I grabbed her ass and pulled her into me. I felt the soft wool of her pubic hairs against my penis as she ground herself into me, never breaking the kiss. Breaking our embrace, I guided her down to the blanket. I placed my clothing under her head for a pillow, then kissed my way down her body, nibbling at the spots I knew drove her wild, but avoiding her breasts and pussy. My hands rubbed and massaged her as I kissed my way down to her feet. Damn, I wish I'd have thought to bring some baby oil or lotion. Never mind, I'll make do without it. \n\nI gently kneaded the arch of each foot before taking each of her toes into my mouth for a quick suck. Shavonda's sharp intake of breath, and moan of pleasure told me all I needed to know. I licked and kissed the arches of her feet before slowly working my way up her legs toward the object of my desire. As I kissed my way up her legs past her knees, she spread her legs wider. And there it was, in all its dark brown glory, glistening with her arousal, lips slightly parted to reveal the pink inside. My own private slice of heaven. God, I would have done anything for access to that spot, anything she wanted. But as luck would have it, all she wanted was my undying love and it was mine. I ran my finger along her lips, feeling her clit quiver as I grazed it. I pulled my hand away, and licked the juices that coated my finger. \n\n\"Tell me how much you love my taste, big boy,\" Shavonda said breathlessly.\n\n\"It would kill me if I couldn't taste you,\" I said. \"Your body is like the air I breathe. Your juices are better than honey. And you smell so good too. I get turned on just thinking about licking your juices.\" I buried my head between her legs. My lips found her clit and I gently sucked on her tender bud. Shavonda rolled her hips beneath me as I licked at her most tender spot. Her moans became more insistent, as she neared her release. I moved my tongue to her moist hole and swirled my tongue inside her opening. She grabbed the back of my head and held me in place as she arched her back and ground into me. \"Ohhhhh, Jason!\" she cried out as she came. Her hands were clenched in my hair as she squeezed me with her legs. \"Damn, boy.\"\n\nI crawled up beside her as she lay breathless, panting, on the blanket. We held each other as she came down and her spasms subsided. Her hand found my dick, and she idly stroked my length. \"I want you inside me, now,\" Shavonda purred as she straddled me. \"Mama wants to ride.\" She guided my head to her opening, rubbing it over her clit a couple times before slipping it inside her. Her walls pulsed gently around me as she lowered herself onto my lap. She paused, adjusting to the feeling of my manhood buried deep inside her. My hands found her hips and I squeezed them gently as she started to move against me. She leaned forward, her milk laden titties dangling in my face as she rode my swollen penis, a look of sheer lust on her face. I took a chocolate nipple in my mouth and sucked, savoring the sweet taste of her milk as she rode me. \n\nOur lovemaking was short, intense, and mind-blowing. Shavonda screamed and moaned in pleasure as she came again, her walls milking me to my own release. I held back as long as I could, enjoying the sensations of unendurable pleasure before I could hold back no more. Shavonda wasn't letting me still her movements with my hands the way she often did, so that I could pull back from the edge of orgasm. No, she wanted it NOW, and she wasn't going to let me delay my release. As I shot my nut deep within her, I thought about how we were feeding each other at the same time, her warm, sweet milk flowing into my mouth at the same time my seed was flowing into her womb. Funny, the places your mind takes you.\n\nLaying in each other's arms afterward, we talked. \"I just love it here,\" Shavonda said. \"If I didn't have the stores, I'd want to move to Waiteville.\"\n\nI smiled at her. \"Von, baby, if you want to live here you have to get the pronunciation right,\" I teased. \"Waiteville rhymes with plateful. There is no 'ville' around here.\"\n\n\"Boy, you know what I mean!\" she snapped back in mock irritation. Softening her tone, Shavonda continued, \"When I first saw your profile online, with the background photo of the lake, I thought to myself, this man has been to some beautiful places. I never dreamed you'd show me them in person. Thanks for letting me into your world.\" \n\n\"Thank you for letting me into yours,\" I replied. \"I can't imagine sharing my world with anybody else. And just because you have the stores to run, doesn't mean we can't come down here whenever we want. We are always welcome here. And eventually, when we retire, this will all be ours.\"\n\n\"I know and appreciate that, Jason, but it would still be nice to have our own place in the mountains.\"\n\n\"Have you ever thought of us getting a cabin somewhere in Central Pennsylvania?\" I asked. \"We probably have enough money to get something cheap. And since it would be closer to where we live, we could spend more time there.\"\n\nWe lay there, holding each other, talking about our future getaway spot for a long time. Eventually, though, we realized we had to get back to the house. Dad would be home from the paper mill soon, if he wasn't already. Reluctantly, we put our clothes back on and headed back to the farmhouse, hand in hand. We were both smiling. Everything just felt so natural. This was how life was meant to be.\n\n\"Did you enjoy your 'walk' as you put it?\" Mom asked with a smile as we walked up the steps to the back porch. Her fingers curled in air quotes as she said the word walk. Grandma smiled at us. \n\n\"Hey,\" Shavonda shot back, \"Don't start. We're trying to make you a grandson.\"\n\nMom and Grandma both laughed. \"Feisty as ever,\" Mom said. \"No wonder we love you so much.\"\n\nLater, after dinner, Kenny and Edie returned. We built a bonfire out back in the fire ring, and toasted marshmallows as we listened to Wilco softly playing on the portable cd player. We kept the volume low, so as not to overpower the sounds of the rapidly approaching nightfall. The spring peepers were peeping over at the pond, and the usual fleet of night trains were climbing the mountain. It was at times like these I wondered why I had ever left this place, but if I hadn't, I'd have never met my queen and we wouldn't be sharing this moment now.\n\nKenny's family was ecstatic over his engagement to Edie. I had suspected they would be, they'd embraced Shavonda with open arms. And Edie wasn't exactly a stranger to them, they'd met her before several times. The newly engaged couple hadn't set a date yet. First, they had to work out the logistics of their new life together. The immediate concern was what Kenny was going to do for a living, and how to get his pickup to Pittsburgh.\n\n\"Calvin said he'd bring my truck up next weekend for the anniversary party,\" Kenny said, \"but until then I am without wheels.\"\n\n\"Are you taking the job with my store?\" Shavonda asked.\n\n\"Yes, at least on a temporary basis,\" Kenny replied. \"No disrespect to you Von, but I can make a lot more money in my field once I find a job there.\"\n\n\"No offense taken,\" Shavonda said. \"I'm trying to keep some money rolling in for you while you get settled in. And you're welcome to stay with us for the next week until your truck arrives. I know Edie has to work early, and if you're staying with us I can take you to work every day.\"\n\n\"Wait a minute,\" Edie protested. \"Why can't he stay with me?\"\n\n\"Nobody said he couldn't,\" I answered. \"I think we assumed that since Kenny would be at our place you would be too. You know you're always welcome there. And it's only temporary.\"\n\nIt was settled, Kenny and Edie would stay at our house for the next week, until he had wheels again. Shavonda would ride him to work, where he'd train under Beth before she left. Afterwards, the rest of us would continue the training, each teaching him the things we were good at. \n\nIt was late when they left. Kenny wanted to spend one final night with his family before saying goodbye in the morning. \"No later than nine,\" I called out as they pulled away in my Jeep. Shavonda led me by the hand to the room, where we once again tried to conceive. Our passion wore Miracle, who was also hungry. I watched as Shavonda breastfed our daughter, sitting naked on the bed. When the baby was asleep, she offered me the other breast, and I fell asleep with her nipple in my mouth.\n\nWe arose early the next morning, heading for the kitchen. It was Mother's Day, and we were happily cooking breakfast in the kitchen when Mom came down the stairs. \"I would have done that,\" she said. \n\n\"We know,\" Shavonda said. \"But today is your day. We can't stay long, but at least we can cook for you for a change.\"\n\nWe'd made pancakes, bacon, scrambled eggs, and even a couple of steaks we'd found in the refrigerator. We took our food out to the back porch, the six of us, Mom, Dad, Grandma, Shavonda, Miracle and me, and gazed out at the mountains in the chill of the morning air. It was one of the nicest breakfasts I've ever had. After breakfast, Kenny and Edie arrived, and we loaded our things into the Jeep. We kept what we thought we needed for the journey home with us. Due to my experience driving big trucks, Shavonda and I took the moving van, while Kenny and Edie followed in my Jeep. We used my two-way radios to keep in contact, stopping at rest stops when we needed to. Making good time, we were in Summerville by lunchtime, and stopped in a diner for lunch before continuing on our way. I'd had Edie call her mother and tell her to meet us at our house. She could share Mother's Day dinner with us. \n\nWe had just pulled off the interstate at a rest area near Fairmont when the phone call I had been dreading came. Looking at my phone, I was an unfamiliar number pop up, with Virginia listed where the name should be. \"Hello,\" I answered.\n\n\"Mr. Jefferson Waite?\" the voice on the other end asked.\n\n\"Speaking,\" I said.\n\n\"Mr. Waite, you are a hard one to track down. This is Officer Brody of the Covington police. I've been trying to get ahold of you for two days. Do you have a few minutes to answer a couple questions?\"\n\n\"Sure, fire away,\" I said, hoping he couldn't hear how nervous I was. \n\n\"Mr. Waite, I am calling about an incident at the Food Lion yesterday morning. Don't worry, you're not in any trouble. We have the store surveillance video that shows what happened. The store security guard took down your plate as you left the scene. I just need your side of the story. First off, do you know a Randy Patton?\"\n\n\"I went to school with him. He was in my graduating class.\"\n\n\"You went to Monroe County High?\" the officer sounded intrigued.\n\n\"Class of 99,\" I said.\n\n\"How come I don't remember you? The only Waite I remember was Jason.\"\n\n\"That's my nickname. Wait a minute,\" I replied, \"Jimmy, is that you?\" Jim Brody had been in most of my classes, and though not a close friend he was certainly not an enemy. \n\n\"Yep. How you been, man?\" the officer replied.\n\n\"Been great, got married last year.\"\n\n\"Was that your wife with you in the store? Didn't know you went that way.\" Jim was cordial now.\n\n\"That's my goddess,\" I said. \"I'm lucky to have her.\" Shavonda looked at me and mouthed \"who is it?\" I held a finger to my lips and mouthed \"tell you later.\"\n\n\"I have the store video pulled up right now. Care to walk me through what happened? I see you two walking toward the door. Randy comes up to you, what was said?\"\n\n\"He recognized me and asked me who I was with,\" I explained. \"I told him Shavonda was my wife.\"\n\n\"Ok, that's where she holds her hand out to him.\"\n\n\"Yes, she was showing off her ring. She's very proud of it.\"\n\n\"OK, Then I see the smile on her face disappear, and you clench your fists. What did Randy do?\"\n\n\"He complimented her on the ring, then said 'too bad you wasted all that money on a nigger.'\"\n\n\"Man, is he a low life,\" Officer Brody remarked. \"Then I see you say something to him.\"\n\n\"I told him my wife was beautiful, and had all her teeth. I asked him how many teeth his wife had.\" I could hear the laughter on the other end of the line.\n\n\"Serves him right. By the way, your wife is beautiful, and you were right on the money about Randy's wife. She doesn't have many teeth left. Randy probably knocked them all out. We've had quite a few domestics with him and her. What you said would explain why he took a swing at you.\"\n\n\"Yes, and when he grabbed my shoulder I ducked and he hit the door frame instead.\"\n\n\"So why didn't you wait for us to arrive?\" Brody was curious now.\n\n\"Shavonda and I had an incident not far from you with a county sheriff who thought because we were a mixed couple we were running drugs. We didn't know where your head was at regarding our marriage, and we didn't want to take the chance on being railroaded because of it.\"\n\n\"As far as I'm concerned, you shouldn't have worried. In my town, you're always welcome. Randy, on the other hand, is not. He has a criminal record a mile long. That whole family's bad news and Randy's the best of the bunch. His younger brother and sister are strung out on drugs, the oldest brother was killed in Iraq, and the other brother was also in the war and hasn't been right since he came back. Randy has a long history of domestic abuse, and bar fights. He's been a problem for us ever since he moved to town. Right now, we have him charged with disorderly conduct. We wanted to talk to you to see if you wanted to pursue assault charges.\"\n\n\"Right now, no. I really don't want to have to come down there to testify in court. But you can give him a message for me, off the record of course. Tell him that he's lucky the door got him before I did. And that if he ever does that again, I will press charges. After I defend myself and my wife of course. Once he throws the first punch, anything I do to him will be self-defense.\"\n\n\"Are you threatening him?\" Brody asked.\n\n\"Nothing of the sort. Just telling him I will defend myself. If you've ever noticed, back in school the Pattons never got into a fight they didn't start, and usually by grabbing somebody from behind. They're nothing without the element of surprise.\"\n\n\"Never thought of that, but now that you mention it...\"\n\n\"Jimmy, understand something. Shavonda and I don't go looking for trouble. We won't start a fight in your town, or any other. All we want is to be left alone. You don't ever have to worry about us,\" I reassured him.\n\n\"Well, next time you're in the area, feel free to stop by the station and chat. I'd like to meet you and the wife. By the way, are you going to the reunion this summer?\"\n\n\"We were planning on it. I haven't seen most of y'all in many years,\" I replied.\n\n\"Ok, then I guess I'll see you two there,\" Brody hung up the phone.\n\nI turned to Shavonda. \"One of my old school friends is on the police force in Covington. They are charging Randy with disorderly. We're in the clear. And next time we go there, we don't have to worry. Matter of fact, he wants us to stop in and see him next time we're down.\"\n\n\"So if we'd have hung around the store we would have been all right?\"\n\n\"Yes,\" I said. \"But we had no way of knowing that. Randy is being charged with disorderly, and I was asked if I wanted to pursue assault charges. I told him not at this time, but if Randy ever tries that again, I will, after I kick his ass.\"\n\nShavonda smiled. I think she liked seeing her man ready to fight for her, in the same way I was turned on when Shavonda had fought Rose.\n\nWe walked over to the Jeep to check on Edie and Kenny, then we all hit the road for Pittsburgh again. We made good time, arriving home shortly before 5 pm. Althea, James and Shaunice arrived with Edie's mother, Lorraine, shortly afterwards. We were all sitting in the backyard waiting for the coals in the grill to heat up when they arrived. Edie gave Shaunice an icy stare as she walked out the backdoor. \n\n\"What's Kenny doing here?\" Shaunice asked.\n\nEdie showed Shaunice the engagement ring on her hand. \"He is now my fianc\u00e9,\" she said. \"No thanks to you. Say something else and I'll snatch that weave off your head.\" Shavonda quickly moved between the two women, who stood glaring at each other.\n\n\"What was that all about?\" Althea asked.\n\n\"I'll tell you in private,\" I said. \"Shaunice, I told you to butt out of it. Now you can't be mad at Edie for being mad at you. If I were you, I'd just lay low for a while.\"\n\nEdie returned to the chair she was sitting in, and grabbed Kenny's hand. \"We have an announcement to make,\" she said. \"We're getting married. Kenny has moved here to be with me. This man loves me enough to walk away from the life he had.\" Everybody congratulated the happy couple on their new life together. \n\nBy this time, the coals were hot enough I could throw the food on the grill. We had steaks for whoever wanted them, as well as chicken, burgers and hot dogs for those who didn't. I tended the food, sipping at the cherry rum and Dr. Pepper Shavonda had made for me, while the ladies fawned over a laughing Miracle. In no time at all the food was done, and we all sat down to eat. Shortly afterwards, Barbara showed up with Brittany and Ethan, and we invited her to eat with us.\n\n\"Barbara,\" I said, \"Can you warn your daughter for us? She's going to be getting a notice from Family Court shortly. Tell her not to worry. We won't need her to appear in court, and the hearing is going to help her.\"\n\nShavonda and Barbara looked at me. \"Jason, what's going on?\" Barbara asked.\n\n\"Shavonda and I discussed our situation regarding the child support Rose owes us. Von said whatever I decide is fine. I've thought about it, and if we leave the existing order in place, Rose will come out of prison about $40k in debt to us. She seems to be a changed person now, I think the prison term has given her a wakeup call. And I want to do everything I can to make it easy for her whenever she gets out. So, I've decided to have the court terminate the support order. She'll still owe us for the time until we get the order suspended, but they will take a couple of income tax checks from her when she gets out. She won't spend the rest of her life in debt to us. But I don't want her worrying when she gets the registered letter in the mail.\"\n\n\"I'm sure she will appreciate that,\" Barbara said. \"She also gave me this for you two.\" Barbara handed us a letter. \n\nDear Jason and Shavonda,\n\nThank you for allowing Mother to bring the kids to see me for Mother's Day. I really appreciate you letting me see them while I am here. They brighten my world for a little while, and I can better deal with things here after I've seen them. They give me a reason for hope.\n\nMother also tells me that Miracle is growing and can sit by herself now. She also tells me the baby is playful, and from the picture she showed me, Miracle is a beautiful baby. I hope you'll let me meet her when I am finally released from prison. \n\nThe counsellors I am seeing here are helping me to deal with the rage I had towards the two of you as a couple, and Shavonda in particular. As you may have guessed, part of it was losing you to another woman, but I have also had problems dealing with the fact that Shavonda is black. I knew what I was doing was wrong, but I couldn't control my rage. For that I am truly sorry. \n\nMother has told me that Shavonda's family are wonderful people who have accepted her and the kids with open arms. Althea, in particular, would have invited me into the family without hesitation. I am hoping that once I have learned to deal with my feelings, and am released, that will still be the case. The children are well taken care of and loved, and that's all I could want for them while I am here. \n\nEthan tells me you are building him a tree house in the back yard. He sounds so excited. Will you please send me pictures of it when you are done with it? The kids also tell me that you play music now, instead of just listening to it. They also tell me Shavonda has a beautiful voice. If you ever record your music, can I have a copy?",
        "I know I have made a lot of requests here, but I have nothing but time on my hands. We don't hear a lot from the outside world in here. Any news of how you and the kids are doing helps me to cope with my confinement.\n\nThank You,\n\nRose\n\nI was glad to see that Rose was making progress. It made me feel good about my decision to suspend child support. She was working hard on controlling the things that had gotten her in trouble, and if we could remove another roadblock to her ultimate success, then that's what we would do. I had previously requested the Monday off, to help Kenny get situated. Yes, Shavonda and I knew what was up with Kenny. And yes, we'd planned this, including taking Edie to Appalachia to see with her own eyes that Kenny was serious.\n\nBut now there was a change in plans. We would take Kenny to the store, where he would train under Beth. Then, we would head downtown to Family Court to file the paperwork suspending child support for Brittany and Ethan. We knew there would be a hearing on the matter in a couple of months, but with Rose unable to attend, and the fact that we were voluntarily doing something to benefit her, I doubted there would be any objection to what we wanted to do. \n\nLater, after we all had eaten, Althea pulled me to the side. \"Tell me, Jason,\" she said, concern in her voice, \"What is going on between Shaunice and Edie?\"\n\n\"Long story short,\" I replied, \"Edie and Kenny had a spat over him living in Virginia. She wanted him to move here, and he balked. Shaunice inflamed the situation by telling Edie bad things about Kenny. She said he only wanted Edie for sex, and that he'd leave her for a white girl. Edie was listening to Shaunice, and it almost broke them up permanently. Meanwhile, Kenny didn't want to lose her, and was wrapping things up in Virginia. But because of what Shaunice said, Edie wouldn't even talk to him. We had to take Edie on a mystery getaway to my parent's farm in order for them to patch things up. Edie is mad because she realizes how close they came to losing each other.\"\n\nI could see the anger in Althea's eyes as I told her what had happened. She pulled Shavonda and Edie to the side and asked them the same thing. Each one confirmed what I had said. I wouldn't have wanted to be in Shaunice's shoes that night. Even though she was 36 or 37 years old, Shaunice was on Althea's shit list now. And Shavonda and I knew how bad that could be. I only hoped Shaunice would wise up and stay out of people's business in the future. Because if she ever said anything bad about Kenny again, Edie would beat the hell out of her. It had almost happened here tonight.\n\nWith the air cleared, we sat around until about 11 pm, enjoying each other's company. It was ironic. Our families were completely different from each other, yet we felt equally at home with either family. We were more than welcome, we were wanted in either place. It was a good feeling.\n\nKenny and Edie left in Edie's car, which she'd left at our house for the weekend, to run back to her place for some clothing. She would be staying with Kenny in one of our spare rooms for the next week until Calvin brought Kenny's pickup to Pittsburgh. We waited up until they got back, then bid them goodnight. I am sure they wanted their privacy. They had a lot of making up to do. I know we needed ours. We had a baby to make.\n\nThe trip to Family Court was uneventful. After we left Kenny with Beth at the Carson Street store, we caught the bus downtown. We paid the filing fee for the case, and submitted the paperwork. The clerk who looked over our paperwork gave us a funny look and said, \"This has to be a first. Filing to suspend child support without also filing to terminate parental rights.\" We explained the situation to her. She was incredulous when she heard the mother was in prison for hate crimes against us, yet we still wanted to give her a break. \"I don't think I could do that,\" she said. \"Anybody who did to me what she did to you could rot in hell, but I'd still want my money.\"\n\nShavonda spoke for us. \"As a fellow sista, I understand where you're coming from. But what would be the point? She can't hurt us where she is. She's being punished for what she did. The children will be almost grown before she's released. Why make her pay the rest of her life? If the kids are the most important thing here, we can raise them not to hate. We have enough money coming in that what she's paying in support doesn't make a difference. The only reason for us to keep the support order in place is vindictiveness. And that's not what we want the children to learn.\"\n\nI couldn't have said it better myself. My queen truly was one in a million. \n\n\"I guess having your children raised by the very people you hate is punishment enough,\" the clerk said. We were given a court date the first week in July, but knowing the case would be uncontested made us breathe easier. We'd been through far worse than this. Honestly, I could see no way what we were doing could turn against us.\n\nWe returned to the store to see how Kenny was making out, then ordered lunch for everybody. With South Side such a bustling place, we had plenty of restaurants to choose from. We ended up ordering from two separate places. Kenny, Shavonda and I opted for a pizza, and the rest wanted Chinese. I took the Cruze to pick up the food, staying with the car while Shavonda ran in to get the food. I circled the block while she did so, because parking spots were hard to come by. Soon we were back at the store. Ebony and Andre were taking turns working the register, while Beth was showing Kenny the basics of making the items we sold. \n\nWe all sat down in the back room to eat, allowing the bell on the door to alert us to any customers. Luckily, today was a bit slow. The busy period for Carson Street was usually later in the week, with Saturday evenings the most lucrative time. \n\nAfter lunch, we transferred Kenny's stuff from the truck into a storage unit he'd rented, and dropped off the U-Haul truck. We also took him to Penndot to have his driver's license changed over to Pennsylvania. It was now official. Kenny was a Pennsylvania resident.\n\nThe rest of the week went smoothly. I worked my usual runs, coming in tired in the evenings. With Kenny now here, we usually played a little every evening, working on learning a couple of new songs. At Edie's request, we listened to Nikki Minaj's first album, and settled on the song, \"Right Through Me\" to learn. Edie was far more into hip hop than any of us, and brought a freshness to the music we performed. She would do the rap parts of the song, while Shavonda would sing the chorus. It wound up being a very beautiful song the way we did it.\n\nIt was Kenny who first brought up the idea of performing professionally as a group. I was resistant to the idea at first. For one, I still didn't think we were good enough. Second, we all had day jobs, and I didn't want our music to interfere with our livelihoods. Third, we did these songs for fun, and I didn't want to lose that. But in the end, Kenny told us about performing with Calvin as The Carbaughs. He pointed out that we could control which gigs we played, and that we could play as many or as few as we liked. Plus, it would put a little extra money in our pockets.\n\nIn the end, Kenny prevailed. He would look into getting us gigs, checking with Shavonda to make sure they didn't conflict with the festivals we had booths at. Now we needed a name. I wanted to perform as 'The Catastrophe' but I was overruled. In the end, Shavonda suggested the name 'Swirl' as a homage to who we were, two swirl couples. We took a vote and it was unanimous. Swirl it was.\n\nHaving Kenny around also meant the railroad was getting used more. Ethan and Brittany begged \"Uncle Kenny\" to go downstairs and play trains with them. Kenny was impressed with the extension on the layout, which was nearing completion. He instantly recognized many of the placed on the new line. Through creative design, I was able to incorporate most of the mountain climb near Waiteville, including the lower and upper horseshoe curves, the summit at KR, Ray tunnel, and the old iron bridge on the family farm. Due to the layout of the basement, KR was over the doorway to the game room, and I had to build an elevated floor so people could view it. But that worked in my favor, as the climb from the existing portion of the layout to above the doorway was long enough to fit both horseshoes in. If I'd have designed things a different way, I'd have had to settle for only one of the horseshoes.\n\nWith Shavonda helping me, and a little extra help from our regular crew, we had the basic landforms in, along with many of the trees. Shavonda had taken it upon herself to make many of the trees for me as soon as we showed her how. The deciduous trees were easy to make, but the pines were a problem. To be honest, nobody could come up with a way to make trees that had that scruffy, natural look I wanted. We ended up finding a place that custom made trees that looked just like the ones native to the ridge and valley, and ordered several hundred at considerable expense. With them, I would be able to add shale barrens in several places. \n\nI had originally intended to make generic rock outcrops along the line, but Kenny had a better idea. He had walked and photographed much of the area we were trying to represent. We could use his photos for reference. Even better, both Edie and I had some vacation time we could use in July, and she suggested that we could stay with my parents for a week, and walk the entire section of railroad, taking photos of the actual rocks as we went. With my Jeep, and Edie's car, we'd have two vehicles to use. We could knock off 5 or 6 mile increments of the line each day, parking one car where we intended to end the day's hike, and driving the other to our starting point. I knew Shavonda was up for the hikes, but Edie really surprised me. It turned out, she had grown to love the railroad, and the mountains, as much as any of us. It promised to be a wonderful and productive week.\n\nWe usually ran the trains on the original section, as I hadn't fully cut over the trackage to the new section yet. But on Tuesday night, the kids had finally talked me into letting them run on the new track, and we made test runs on the new line. Kenny had taken his boxed-up locomotives and cars, and assembled a couple of 20 car test trains, and we ran them over the mountain with various locomotives, working out how many cars each would pull and marking that information in one of my notebooks for future use. To calculate pulling power, we'd start out with one locomotive and a full train, knowing it wouldn't make it to the top. We'd then drop cars until it could make the climb, and that was its tonnage rating. Ethan was our primary test engineer, and he took his role seriously. Brittany ran a train around the original track, having a blast. Friday evening, as our guests started to arrive, I finally connected the new section into the old track. We were ready for business.\n\nAs was usual when my family arrived, we divided them amongst Shavonda's family. This time, my Mom, Dad and Grandma were invited to stay with Shavonda's parents for the weekend. Evidently, they'd really hit it off. We knew about Mom and Althea becoming good friends, but I hadn't realized the close bond James had forged with Dad. And Grandma had embraced everybody with open arms once she decided to accept Shavonda as family. Calvin and his wife and kids stayed with us, while Kenny moved in with Edie. Ethan and Brittany were thrilled to death to be able to play with their cousins. My sister Sally and her husband accepted the invitation from Tamika and Brian to stay in my old house. Uncle Walt and Aunt Penny, as usual, opted to stay in a nearby motel. They were hesitant to impose upon our hospitality even though we assured them we'd make room even if it meant Calvin's kids slept with mine.\n\nSaturday morning was spent doing last minute things for the party, such as assembling the rented canopies in the backyard, setting up tables and chairs, and a quick trip across town to Weiss for fresh meat. Edie and Kenny helped out by making a trip to Oakmont to pick up the cake. Once everybody was back, we dug out the old wedding cake topper, the one that looked like Shavonda and me, and placed it on the cake. We let the kids play in the backyard as we waited for the guests to arrive. Shortly before noon, Darren and Minnie arrived to set up their dj equipment, and we did a quick sound check. The grill was filled with Kingsford and lit, and we threw the first of the meat on the grill as the guests started to arrive. \n\nShavonda looked positively radiant in a tie-dyed sun dress I'd never seen before. With her dark chocolate skin tone, bright colors looked good on her, and the multi colored swirl pattern of the dress positively glowed against her skin. She wore a pair of dark brown sandals that were unobtrusive, they were chosen for comfort and the fact that they didn't draw attention away from the dress.\n\nWe were pleased to see that Beth had brought her family to meet us. We were going to miss her. She'd been an excellent employee, the only one so far to take the initiative to learn the intricate cutting and fitting required to make the pendants. She had literally learned to make everything we handmade in the stores, from pendants to candles. Whereas the other employees generally specialized in one or two items, she could do it all. More than anybody else, she'd picked up the slack last year when Shavonda cut back her hours because of her pregnancy.\n\nShavonda's friend Patty brought her two kids, and Ziggy brought his as well. They joined the others in the backyard, where the unfinished treehouse was like a magnet to them. Meanwhile, our dj friends had started the music, and some of the younger guests began to dance on the grass. I already had my shoes off, and Shavonda quickly kicked off hers as well and pulled me out on the grass. She looked positively radiant, her loose curls accented by a fresh rose we'd picked up on the way. She wore a form fitting red dress that came just above the knee, and showed her curves and cleavage nicely. We danced for several songs, with me admiring the way she moved. I'd never been much of a dancer before Shavonda, but now I enjoyed it because of her. \n\nIn midafternoon, Ramona made her appearance with her fianc\u00e9 Thomas, who we'd never met. We were glad she decided to spend the day with us. Ziggy knew her from her work on the Pittsburgh police vice squad, and we all sat and talked for a while about her work. We found out that Officer Shoemacher had only gotten two years in prison. \"What an outrage,\" Shavonda exclaimed angrily, and I couldn't blame her. \"The woman who made the fake phone call that had him looking for us got 12 to 20.\"\n\n\"If you hadn't testified, he probably would have walked,\" Ramona replied. \"Wait, what's this about the phone call? Did you know the person who made it?\"\n\n\"My ex-wife,\" I replied. \"She took offense to Von's color and caused us no end of trouble. She'd made 17 phone calls to 911 reporting a prostitute and giving Von's description.\"\n\n\"By the way,\" I continued. \"See that older gentleman over there, the one who looks a bit like Von? That's her dad. He doesn't know about this incident and we'd like to keep it that way. If he'd known, he'd have tried to kill Shoemacher. Don't get me wrong, he's a good person, but he takes his family seriously. So we've kept this from him. If he asks how we know you, you are one of Ziggy's friends. Ziggy's been a good friend of mine for many years.\"\n\n\"Well, that wouldn't be a lie,\" Ramona said. \"I have a lot of respect for him. You know he really stuck his neck out for you two. There are some on the force who resent what he did in calling attention to your situation. But I think he made the right call. People like Shoemacher should never be police officers. And the mentality that some have, that we need to protect our own no matter what, is what lets people like him get away with what he did. This job is hard enough without people like him making it even harder for us.\"\n\nI looked around at the crowd gathered. Everybody seemed to be enjoying themselves. It occurred to me that people were mingling without regard to race. And I realized that this was due to the influence of Shavonda's parents, mostly Althea. After our initial meeting, when I'd won her over. She, and by default the rest of the family, had accepted me with open arms. And last year, the day before the wedding, she had insisted on having a cookout at her house so that our families could get acquainted before the ceremony. Lasting friendships had been formed at that cookout. Both my parents and Shavonda's parents had become friends, Kenny had met Edie that day as well. And Grandma had hit it off with Shavonda's aunts. To Althea, everybody was a potential friend, or family member. \n\nOne thing I noticed throughout the day was Shaunice. She hung out with Danny mostly. None of the family wanted to be around her. They were all mad at her for trying to get between Kenny and Edie. I hoped she'd learned her lesson, and I also hoped the families would eventually forgive her. It had to be a lonely day for her.\n\nI asked Thomas, who had been quiet up to this point, about Ramona's job. \"How do you deal with knowing what she does for a living? I know I would be insecure knowing my wife was out on the streets posing as a hooker. No insult intended, Ramona.\"\n\nThomas thought a minute before replying. \"Ramona is a strong woman. She truly believes she is making a difference out there. I don't necessarily like what she does, but I will support her 100%. I am not one of those men who are afraid of strong women. In fact, her strength is what attracted me in the first place.\"\n\nI could relate to that. Shavonda was strong as well, and intelligent. And those qualities were what I had fallen in love with. Thomas and I had a lot more in common than people would think. And we both stepped back and let our women do what they needed to do, providing emotional support when they needed it. But mostly just cherishing the gems we had found.\n\n\"You two have the cutest biracial baby,\" Ramona said, changing the subject. \n\nShavonda rolled her eyes knowingly. \"You just got him started,\" she said.\n\n\"Miracle is not biracial,\" I said. \"I am biracial. She is triracial. I am Seneca.\"\n\nRamona took a long look at me. \"Now that you mention it, I can see that.\"\n\nShavonda explained the situation for me. \"Jason is a little sensitive about that. There were and still are people in his family who think race mixing is wrong. Yet they never said anything about the Seneca blood in the family. He actually had to tell his grandmother off about that, and she's a quarter Seneca.\"\n\n\"You mean that sweet old lady having a blast with the other older ladies?\" Ramona was incredulous. \"She fits right in here! I never would have guessed.\"\n\n\"It's cool now,\" I said. \"Grandma always liked Von, but it took a while before she accepted us as a couple. I actually had to tell her if race mixing was wrong her whole life was wrong. It made me so mad. She could see Von was wife material, yet she had trouble accepting our relationship. But she gave us her blessing on our wedding day. But my mother's side of the family still won't accept us. Von's only met one of them, and the sparks flew.\"\n\nShavonda excused herself, and walked to the DJ table. After talking to Minnie, she took the microphone. I knew what she was up to, and quickly moved to her side.\n\n\"I would like to thank you all for coming out to help Jason and me celebrate our anniversary,\" Shavonda said. \"Two years ago I met the man of my dreams in person for the first time, one year later we got married. A lot has happened in the last year.\"",
        "Althea, anticipating the speech, had brought Miracle to the table. Shavonda picked her up and continued her speech. \"Six months ago, I brought this beautiful baby girl into the world. Jason was by my side, holding my hand, as I gave birth to Miracle. She is the baby we thought I could never have.\" The crowd clapped as she showed off the baby.\n\nHanding Miracle to me, Shavonda continued. \"But this party isn't just about Jason and me. It's about all of you as well. How people from vastly different backgrounds can come together and enjoy each other's company. We can learn so much from each other.\"\n\n\"With that in mind, I would like to give a shout out to a couple of people near and dear to me. Kenny is Jason's cousin, and Edie is one of my closest friends. They met at the picnic before the wedding one year ago today. As of last weekend, they are engaged to be married. Let's give them a hand.\" The crowd clapped and cheered. Kenny looked embarrassed, while Edie had a big beautiful smile on her face. \"I'd also like to congratulate Beth on her graduation from college this past week. Beth worked for me in my store, and was a quick learner, and one of the best employees I could ask for. We're going to miss her. So everybody, please make Beth and her family members feel welcome here. And Beth, you know our phone numbers. Do not hesitate to call us. Keep in touch. You will always be welcome here.\"\n\n\"Last but not least, during the past year, Jason and I have been playing music together. I'd like to think we've gotten pretty good at what we do. When he was around, Kenny has played with us, and Edie can sing very well. Together we've decided to perform the occasional gig. We have taken the name Swirl for our band, and tonight will be our debut performance under that name. We have our instruments set up in the game room downstairs. If you'd like to hear us play, meet us downstairs. If not, stay up here and enjoy the party. Our DJs Darren and Minnie will continue to spin music up here.\"\n\nTen minutes later, we were ready to perform a short set of four songs. The first one we did, the one we'd all been working on, was Nicki Minaj's Right Through Me. Edie effortlessly did Nikki's rap, while Shavonda sang the song's chorus. \n\nYou see right through me.\n\nHow do you do that shit? How do you do that shit?\n\nWe followed it with my favorite Bob Marley song, The Sun is Shining. I really loved the bassline in that song, it went places most reggae didn't go. Rihanna's Umbrella, and Smashing Pumpkin's Pug rounded out our set. We had chosen our songs to showcase the different types of music we could and would play. \n\nAfterward, we all went back outside for the cutting of our anniversary cake. By this time, Shavonda and I had each had several drinks. We'd gone through a fifth of black cherry rum, and were starting in on our second bottle. We danced barefoot in the grass, mingling with the guests between dances. All in all, it was a good party, and I was glad we could host it. Things didn't start to wind down until after midnight, when we bid our guests goodnight one by one as they left. We weren't kicking anybody out, we just let them leave when they wanted. As the crowd thinned, I helped my queen put the leftovers in the refrigerator, and we cleaned up a bit before we went to bed around 3am. \n\nFinally alone, I gazed upon Shavonda. She was as beautiful as the day I had met her. I never got tired of her exotic look, and I hoped we would always be this much in love. \n\n\"Thank you for the two most amazing years of my life,\" I said. \"You came into my world, and I am a far better person for it.\" Shavonda hugged me tight as tears streamed down her face.\n\n\"Jason, you've made me the happiest woman alive,\" she said, pulling back and kissing me. We were both a little tipsy from all the rum we'd drunk. I helped her pull the sun dress over her head, then stood back to admire her in her strapless black bra and panties. She never failed to turn me on. More importantly, she'd changed who I was attracted to. I'd first realized a year ago, at my bachelor party, when the guys took me to a strip club, that I was no longer interested in white women. And that while I was turned on by black women in general, that was because they reminded me of my queen. She was the standard of beauty to which I compared every woman I met.\n\n\"You wanna do the honors?\" Shavonda asked. \"I need a favor. My tits are full, and if I pump them I have to throw the milk away. It's got alcohol in it, and I can't let Miracle drink that. Would you like to drink my milk?\" In response, I held her, reaching around to unsnap the bra. Letting it fall to the floor, I sat on the bed and pulled her to me as I took her swollen nipple in my mouth. I let her sweet milk fill my mouth, suckling her as she moaned in pleasure. I loved when she let me do this. I knew I'd better enjoy it while I could. Miracle was now eating some solid food, and it wouldn't be long before she no longer needed mother's milk. Finishing one tit, I moved to the other as Shavonda sat on the bed, my head in her lap. \n\nAfter I had drained her, she said. \"Thank you. I feel so much better now.\" Shavonda helped me remove my clothes, and stepped out of her panties. \"Now, it's my turn,\" she said, taking my rock hard dick in her hand. \"God, I missed this.\"\n\nWe'd fallen into a routine. With Shavonda serious about becoming pregnant again, she carefully calculated her ovulation. From the end of her cycle the ovulation period lasted seven days. During this time, she took me as often as possible. We had sex at least twice a day. Because fertilization was the goal, we only did enough foreplay to get us both aroused. Then it was hard and fast while she stroked her clit with the finger vibrator. Neither of us tried to hold back, and as the stimulation took her over the edge, her muscles milked me dry. Every last drop of nut my body could produce went into her womb, and by the end of the week, I was exhausted. It took a couple of days to recover. While sex with her was always a pleasure, hard and fast wasn't my preferred method. I liked it slow and easy, with lots of oral and foreplay building to a mind-blowing climax for both of us. During ovulation week, there was very little oral. And with that coming right after her period, by mutual agreement a time of abstention, we went two weeks straight without indulging in one of our favorite sexual acts. \n\nBut now that ovulation was over, and I'd recovered, Shavonda was hungry, and so was I. She quickly straddled me as I lay back on the bed. I felt her lips wrap around my head and work their way down my shaft, as I nibbled her clit with my lips. God, this was going to be good, but I was so tired. We shifted position so we were on our sides, and believe it or not, we both fell asleep with our head buried in the other's crotch.\n\nWe were rudely awoken by the alarm clock going off. We'd set it for 8am, because Althea was having a farewell breakfast for my family at 9. That gave us enough time to jump in the shower, and get the kids dressed. Nice thing was, we were already naked. Even nicer was the private entrance to our shower. But best of all was the feel of our hands on the other's soap slick body. It didn't take long before we were both aroused, and we made love standing up in the shower, my queen bent over while I entered her from behind. Because of the time constraints, we did hard and fast. Our slow and easy marathon lovemaking would have to wait until later.\n\nThe kids were already dressed and ready to go when we emerged from the bedroom. We'd both opted for casual clothing, with me wearing jeans and a t shirt, while Shavonda wore booty shorts and a tank top. Thus made presentable, we helped Calvin and his wife load up the car for their long journey home, while the kids all played in the backyard. Miracle was still asleep, so we grabbed the diaper bag and strapped her into the carseat. With the kids also strapped in their seats, we took off for the short drive to Althea's with Calvin following us. \n\nAlthea and Mom had breakfast ready when we got there. The food was set up on the kitchen table, buffet style. There were simply too many people, about 20, to serve them individually. The spread included Bacon, pancakes, scrambled eggs, hash browns, fried potatoes, biscuits, and surprisingly chicken wings. We loaded up our plates and joined the rest of the family out on the patio. \n\nAll too soon, breakfast was over, and my family bid everybody goodbye. They had a long drive ahead of them, but at least they could travel together in a convoy. Before they left, I asked my parents if we could come down for a week's vacation in July. \"Of course,\" Dad said. \"We'd love to have you.\" \n\nAfter they left, we spent the rest of the morning with Shavonda's family. Edie and Kenny had shown up late, they'd slept in. But they got here just in time to say goodbye to the family as well. But all they had to eat were the leftovers. There wasn't much left by the time they got here.\n\nA little later, Shaunice stopped by. She knew about the breakfast, but had opted to skip it. I know she was still upset about being shunned at the party the day before. \"Good,\" she said. \"I'm glad you are all here. I just wanted to apologize for the way I acted. Kenny, I shouldn't have tried to question your intentions towards Edie. I see now you love her enough to give up your life for her. Jason, Shavonda, thank you for getting them back together. Von, I should never have put you in the position of having to choose between me and your husband. Jason, I should have realized that Kenny was like a brother to you. And Edie, will you please forgive me for what I said. I was mad because you were hurt, and I should have found out the whole story before I said anything. Will you all forgive me?\"\n\nWe all nodded, and Shavonda answered for all of us. \"Shaunice, I can forgive you this time, but if you do this again I don't know if I can get past it. I don't know what made you act so petty, but whatever it is has to stop. We all need each other. We shouldn't be fighting among ourselves over some bullshit.\"\n\n\"Understand something,\" I said to Shaunice, \"I don't appreciate being forced to choose sides between family members. But if I am forced to choose, I will choose the one who is trying to do the right thing over the one who is petty. If I had thought you were right, I'd have defended you to the end. But you were petty. What you tried to do to their relationship was just wrong. And it's going to take me some time before I can trust you again.\"\n\nBefore the situation could devolve further, James asked Kenny and me to meet him inside. \"Kenny,\" he said, \"What's your taste in music? Do you like funk?\" I knew what he was up to. It was the same thing he'd done with me the first time we met. He had Kenny and me pick out several cd's from his collection, and we pulled a huge ancient boom box out onto the patio to play music. \"Here's one I think you should try to play. Jason, I've watched you improve on the bass over the past few months, and I think you're good enough to pull it off. Kenny, you're already there.\" He hit play, and we listened carefully to \"Strawberry Letter 23.\" James was right, I did feel confident enough to play the bass part of this song. \n\nAs we listened to the music the subject changed to the women. \n\nJames turned to Kenny. \"Kenny, you know you got a special one there. Her dad was murdered when she was thirteen, and because of that she been afraid to get close to anybody. She very insecure about losing somebody she's gotten close to. You'll have to spend a lot of time with her, convincing her that you aren't going anywhere. But she be worth it.\"\n\n\"I knew she'd lost her dad, but she never told me the whole story.\" Kenny wanted to know what really happened.\n\n\"It was 1994, and there was a gang war going on,\" James explained. \"Ty was in a barber shop getting a haircut. Also there was a kid the gang had a beef with. Somebody saw him in the shop, and they came in and opened fire. When it was over three people were dead including an 8-year-old boy, and Ty. The kid they were gunning for survived. After that, the police cracked down on the gangs and things calmed down. We sort of adopted Edie after that. She'd always been Von's friend, but after the shooting, we looked out for her and her Mother. She's like a daughter to me.\"\n\nI looked around at the family. Brittany was helping Shavonda spoon feed the baby, while Edie looked on. Althea and Shaunice were engaged in conversation of their own. \n\n\"Jason, I just want to say thank you for taking care of my babygirl. You two have been through some rough times, but you were always there for her.\" James said, smiling.\n\n\"I have to be there,\" I said. \"She's my queen.\"\n\n\"Interesting choice of words,\" James replied. \"No wonder I like you. As you know, Von's a creative person, and when Althea and Velma first told me about you, I could tell you were a creative too. Velma was impressed with your photos the first time she saw them, and you won Althea over when she met you too. The first time I met you, and we discussed music I wanted you to be the one. I'm glad you are.\"\n\n\"By the way,\" James continued, \"I know all about Von and the cop.\" I turned white as a ghost. James was never supposed to know about that. \n\nTo be continued..."
    ],
    "authorname": "bwwm4me",
    "tags": [
        "bwwm",
        "wmbw",
        "black woman",
        "white man",
        "engagement",
        "anniversary",
        "interracial romance",
        "lactation"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/love-knows-no-color-pt-18"
}