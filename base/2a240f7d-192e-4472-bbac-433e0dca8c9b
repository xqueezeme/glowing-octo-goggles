{
    "title": "The Dark Room Ch. 03",
    "pages": [
        "Hey, it's Nikki here. The Dark Room has always been one of my favourite stories and for a long time I felt bad that I'd left it hanging. I've finally done something about it. Some 8 years after I originally published this story on Literotica, you can now read the final instalment.\n\nI hope you enjoy it and I certainly hope that the continuity works as it picks up immediately after Chapter 2. If you haven't read the first 2 parts, do yourself a favour and start there.\n\nlicks and kisses,\n\nnikki\n\n***\n\nAll characters in this story are 18 years or older.\n\n*****\n\n\"Are you serious?\" Dave asked. His voice faltered nervously.\n\n\"We'll yeah, I mean it was so hot Dad. I loved the plug in my bum and seeing how wide Sarah stretched herself was awesome.\"\n\n\"Just when I thought my little girl couldn't get any kinkier,\" Dave mused aloud.\n\n\"So is that a yes?\"\n\n\"Yes,\" Dave replied. She returned the smile that spread across his face as he adjusted his rock hard cock.\n\nJo smiled and quickly pulled at his boxers. She dragged them down so that his big cock was exposed, ready to play with. She seized it in one hand and lowered her mouth over the tip and sucked noisily.\n\nShe heard him groan as she worked his cock. She wrapped a hand around the shaft and pumped it to enhance the pleasure.\n\n\"If you do that too much, I'll explode before I get anywhere near your bum,\" he moaned.\n\n\"Well we can't have that!\" Jo exclaimed, and ceased immediately.\n\n\"Maybe I didn't quite think that through,\" he laughed.\n\n\"So where do you want to do this? I don't really want to do it here on the couch,\" Jo said to her father. \n\n\"Your bed?\" Dave suggested. \n\n\"Mine? Not yours? Mine is only a single.\"\n\n\"Yes, but there's something extra sexy about the thought of fucking you in your bed,\" Dave told her.\n\n\"Ok, my bed it is then.\"\n\nJo stood up and made her way from the room. She glanced back over her shoulder with a 'follow me' look on her face. She giggled when her father leapt up with a start once he managed to drag his gaze away from her panty-clad bottom. Jo sprawled out on her bed and as her father caught up with her, stretched luxuriously so that her hard little nipples thrust against her white t-shirt.\n\n\"Come to tuck me in Daddy?\" She purred at her father. \n\n\"Maybe a good night kiss?\" Dave replied and advanced on the bed.\n\nJo held out her arms for a hug, just like she used to do when she was little. Dave sat on the edge of the bed and bent his head to hers. It was a very different kiss from any goodnight kiss they'd shared when Jo was little. Their tongues entwined together and played in each other's mouths. Dave rested his hand on Jo's hip and stroked her lightly. His fingers found their way under the t-shirt to connect directly with her skin. \n\nJo moaned into the kiss. Her nipples tightened further and she took great delight in the sensation. She slowly reclined back to the bed and her father followed her to maintain the kiss. He had to adjust his position and soon lay beside her, his generous cock rock hard and pressed against his daughter's thigh.\n\n\"Did I do this to you Daddy?\" Jo teased and slipped a hand between their bodies to grasp his erection.\n\n\"You know you did,\" he grinned. \n\nJo felt her father's firm hand slip up over her ribs to close over her breast. She thrust it at him. She loved the way his palm grazed lightly over her nipple. He pinched it between thumb and finger harder with each repetition. She gave a little squeal when she couldn't take any more. \n\n\"I'm all wet Daddy,\" she cooed at him and ground her soaked panties against herself. \n\n\"And what would you like to do about that?\" Dave asked. \n\n\"Kiss it goodnight...\"\n\nJo gave her father a big smile as he climbed on top of her. He kissed her again before he slid down the narrow bed. He paused to lick and suck each of her nipples through her t-shirt before he moved further south. He hovered with his pursed lips over her panty-clad mound and looked up to meet her gaze. Gently he pressed his lips to the panties covering her pussy. Jo sighed. \n\n\"Goodnight little pussy.\"\n\n\"Not there Daddy, here,\" Jo said as if she coached him. \n\nShe showed him with her finger that she wanted his kiss right on the wet patch that was so evident in the red material of her panties. Dave breathed in the aroma of his daughter's pleasure and then placed a kiss exactly where she'd asked for it.\n\n\"Don't tease me, lick me,\" she demanded. \n\nDave ran his tongue over the crotch of her panties before Jo grabbed them and pulled them aside to reveal her wet lips. \n\n\"More!\" \n\nShe felt him slip his tongue between her slick lips and run up her slit and back down again. He thrust it into her tight hole and wiggled it about. Jo ran a hand through her father's hair and wordlessly voiced her pleasure. His finger began to pleasure her as well. It slid into her pussy as his tongue moved to concentrate on her clit. She held her panties to one side of her pussy, head back in the throes of pleasure. Her father's tongue felt so good between her legs. She wanted to feel his cock in her butt, but what he was doing at that moment felt too good to stop him. So she didn't. It seemed that the seed she'd planted in his mind had taken route though. His finger slid from her pussy and slipped down and around her puckered anus. Jo squirmed and wriggled on the bed as the finger teased at her tight little butt hole. She pushed back at it, wanting to feel it penetrate her. She gasped when her father did exactly that. He pushed his finger into her tight ring. The combination of his finger in her bum and his tongue on her clitoris was enough to cause her to orgasm.\n\nHer body convulsed and she threw her head back. She felt the muscles of her pussy spasm and contract. Her sphincter clenched around his finger. She could only imagine how good it would feel when it was his cock buried in her.\n\nWhen she'd recovered a little she opened her eyes and watched as he quickly discarded his boxers and moved between her legs. She felt his cock poke at her wet pussy. She flinched at the contact, her pussy still sensitive as she enjoyed the last pleasure of her orgasm. She gasped out loud as he thrust his cock into her pussy and drove it deep inside. He thrust urgently in and out. It felt intense and Jo instinctively pushed back to match him. She purred as he repeatedly drove his cock inside her and stretched her lips around its girth. \n\nAgain she thought about the fact that she really wanted to try and take it in her bum but again struggled to ask him to stop. His cock felt too good in her pussy. If he came, so be it. He'd just have to do the right thing and get it up again for her!\n\nJust as she thought it she felt him pull out. He gasped and panted from the rapid, energetic effort. \n\nHe almost looked apologetic and Jo sighed when he stopped.\n\n\"Sorry, but I didn't want to finish just yet. I want to feel your tight little butt from the inside.\"\n\n\"Daddy wants it dirty,\" Jo teased him. \"Go on then, put your cock in my bum Dad.\"\n\nShe rolled over onto her hands and knees and thrust her butt back and into the air, to present him with a perfectly tempting target.\n\n\"God, maybe I should have cum, I don't know that I'll last long enough to really appreciate this!\" Dave moaned and she grinned back over her shoulder to see him survey her tush.\n\nJo reached back and ran her finger over her anus to tease him further. She sensed his urgency. He knelt behind her and his cock speared back into her pussy. She felt it slide out and he wiped it down over her anus. She cooed in pleasure as his slick shaft brushed over her asshole. He pushed back into her pussy and then, when he withdrew a second time; she felt the head of his cock poke at her anus.\n\n\"Oh yeah Dad, push it in,\" Jo encouraged him.\n\nDave pushed firmly and watched as her anus stretched slowly around the bulbous head of his cock. He felt Jo push back. He leaned forward slightly and she pushed back again. She used her movements to control the rate of his penetration.\n\n\"Fuck, it's so fucking big,\" she exclaimed as the head disappeared inside. \"Go slow Dad.\"\n\nDave held himself still and allowed Jo to determine when to push back. He saw his cock start to slip again and then with a gasp, Jo pulled forward and he popped out.\n\n\"I need lube Dad. Its too dry.\"\n\nDave bounced off of her bed and fetched some from his room. He returned and stood beside the bed. He squeezed Lube over his cock, and then stroked it up and down to ensure the whole shaft was coated. \n\n\"It turns you on knowing this is going in my arse, doesn't it?\" Jo asked him.\n\n\"It sure does. Does it turn you on too?\"\n\n\"So much!\" Jo replied with a grin.\n\nDave returned to his position behind her and rubbed some lube on her anus. When he was happy he again pushed his cock up her back passage.\n\nWith ample lubrication things progressed a little quicker. Jo still controlled the pace, but Dave now saw his cock slide deeper, each inch slowly swallowed by her delectable ass. \n\nWhen he was half inside her, he felt Jo begin to rock back and forth and his cock would slide out before she pushed back and took more inside. Dave couldn't believe how good it felt in her tight hole. He didn't last long at all. \n\nHe came in a rush. Jo had barely rocked for a few moments when he lost control and cried out and erupted.\n\nJo squealed with delight as she felt the warm semen spurt deep into her anus. She worked her clit with her fingers and rubbed it expertly until she came, just as her father's cock went soft enough to slip out. She felt cum ooze from her butt hole and dribble down over her bare pussy lips as she collapsed on the bed. She shuddered with pleasure. \n\n\"That was amazing,\" Dave whispered in her ear as he knelt beside her bed.\n\n\"Thanks Dad, now I'll always know that yours was the first cock in my bum,\" she told him happily.\n\n~~~~~~~\n\nDave was surprised by the late night knock on the door. He hurriedly pulled his pants on, conscious of his erection. He minimised the window on his computer to hide the porn and made his way to the door. He pulled the curtain aside so that he could peek through the window to see who was there. He was surprised to see that it was Allison. She gave him a nervous smile through the window. He opened the door.\n\n\"Hi Mr. Johns.\"\n\n\"Hello Allison, I'm sorry but Jo isn't home. She went to Sarah's for the night.\"\n\n\"I know.\"\n\n\"Oh,\" he said, suddenly curious as to why she would be there.\n\n\"Yeah, I came to see you.\"\n\n\"Me?\" he asked lamely. He surveyed her body. She wore a tight pair of black yoga pants and a cropped white t-shirt that both bared her belly and did nothing to disguise the lack of a bra. The look did nothing to deflate his already aroused cock.\n\n\"Can I come in?\"\n\n\"Sure.\" Dave stepped aside and let Allison walk into the entry hall. Once she'd moved past him, he closed the door and then led her to the living room.\n\n\"Would you like a drink?\"\n\n\"Sure, thanks.\"\n\n\"Water, coke ...\"\n\n\"Vodka?\" Allison asked hopefully.\n\n\"Really?\"\n\n\"Yeah, I'd really like some thanks.\" He studied her for a moment and noticed that her makeup wasn't really at its usual standard. It wasn't that it was bad, it was just that he was used to seeing her perfectly made up. It showed signs of having been hastily applied.\n\n\"Is something wrong Allison?\" He asked belatedly and mentally kicked himself for not having spotted it immediately.\n\n\"Um, kind of,\" she replied a little hesitantly. Her eyes began to glisten with moisture as tears threatened her. \n\n\"Let's get you that drink, then we'll talk about it.\" As he stood in front of her, he noticed her glance at his crotch. His erection was far from fully subsided and in his haste to answer the door he hadn't put underwear on. His track pants didn't exactly hide his state of arousal.\n\n\"Lemonade with the vodka?\" he asked.\n\n\"That would be great, thanks.\"\n\nDave poured himself a scotch and then brought it out with Allison's drink. He passed her the vodka and sat opposite her on the couch.\n\n\"So, what's up Allison?\"\n\n\"I don't quite know how to start. Maybe I shouldn't even mention it.\"\n\n\"Do your parents need to know that you're safe? Do they know you are here?\"\n\n\"They're away, so no and no. I've been with my brother all week and we're just fighting all the time.\" Allison didn't mention that it was because she wanted to fuck him and he wasn't letting her.\n\n\"Is he causing you problems?\"\n\n\"Not really, its just the fights. I think we need a break from each other. I'm sure once Mum and Dad come home we'll be back to normal, but I just needed to get out of the house.\"\n\n\"Do I need to let him know you're here?\"\n\n\"No, he thinks I've gone to Sarah's and if he wants me he'll text me anyway.\"\n\n\"Ok, just so long as you're sure.\"\n\n\"I am. Could I stay here for a couple of days? Mum and Dad will be back soon anyway.\"\n\n\"Sure you can Allison. I'm sure Jo won't object to one of her best friends staying for a few days.\" Allison smiled at him, clearly relieved by the answer. \n\n\"I um, have some things in the car. I didn't want to seem too presumptuous ...\"\n\n\"It's fine, let's go get them.\" Dave followed her out to her car and tried hard not to fixate on her gorgeous butt as he followed her. He wasn't very successful. They came back in and Dave told her to set her things in Jo's room. Given she wasn't home anyway it was the easiest solution for the first night.\n\n\"So was I interrupting anything?\" Allison asked when they'd both sat back on the couch with their drinks.\n\n\"No I was just finishing up some work. You can turn the telly on if you like. I'll just shut down my computer and then join you if there's something worthwhile on.\" He passed the remote to Allison and left the room. When he returned, she was sitting watching an episode of NCIS Los Angeles. Dave joined her on the couch and was surprised when she immediately snuggled closer to him.\n\n\"Thanks so much for letting me stay Mr. Johns.\"\n\n\"No trouble Allison.\"\n\nAs the episode played on Allison gradually moved around on the couch. Before long she was curled up alongside her teacher but with her head on his thigh. Dave was all too conscious of her body and his cock hardened again. He struggled to find somewhere to put his left hand and after resting it on the back of the couch for a while, settled it on her hip. She appeared to sigh with contentment when he did so. She moved her left hand so that it was beneath her head and resting on his thigh. Dave couldn't help but think about how close her fingertips were to his rock hard cock.\n\nDave struggled to focus on the TV. He wondered if Allison had really fought with her brother or whether she had just used it as a ruse given her knowledge that Jo wasn't home. The thought kind of appealed to him, that she might want him badly enough to go to such effort. His hand slipped from her hip to her waist and made contact with her wonderfully soft, smooth skin.\n\nAllison shifted a little and her hand moved from beneath her head to very deliberately grab Dave's cock. She squeezed and massaged it gently. She did no more than that, just periodically gave it a reminder, a bit of pressure. Dave suppressed a moan as he glanced down to watch Allison's hand on his cock. It felt great. He wished he had the guts to rip his pants off and demand that she suck him, but something held him back. He still felt he needed her initiation of any sexual act to justify it; no matter everything that had transpired in the dark room.\n\nAllison wriggled a little. Her hand released Dave's cock and he quickly took his hand from her waist and moved it to her breast. Dave squeezed. He didn't think he'd ever tire of feeling an eighteen-year-old girl's firm but supple breast. Allison's hard nipple pushed against his palm. She squeezed his cock again and started to stroke it.\n\nThe TV show ended and Allison rolled onto her back. She looked up at Dave, his cock now pressed against the back of her head. He saw her smile as his fingers teased her nipple.\n\n\"I've always wanted to do you with the lights on Mr. Johns.\"\n\nShe moved quickly. Dave suddenly found himself with the young girl between his legs, tugging at his pants as she knelt before him. He lifted his butt and they were quickly pushed down around his ankles. He watched as Allison grabbed his cock and then sucked it deep into her mouth. It was a hungry, desperate suck. Her head bobbed rapidly up and down.\n\nDave had been aroused for hours and could barely take the intensity of her blowjob. Allison captured the head of his cock and sucked at it with her lips. She pulled back until he was released from her mouth with an audible 'pop'. Dave reached down and took Allison's wrists to pull her up to him. She went willingly and he moved her until she sat astride him. He took her face in his hands and kissed her.\n\nThe kiss was hard and passionate. It burned with the desire that had been building. Allison ground down on his rock hard cock and Dave's hand went to her perfect, pert tits. He pulled her t-shirt off and resumed their kiss as his hand delighted in the feel of her breast.\n\nHis kiss travelled from her mouth to her neck. Allison threw her head back and whipped her long blonde hair out of the way as she offered her neck as if to a predatory vampire. Dave kissed and nibbled at her tender flesh and slowly descended. He kissed and sucked but resisted the temptation to mark and claim her with his mouth. He found her breast and drew her nipple deep into its warmth and flicked his tongue across the wonderfully hard nipple. He captured it in his teeth and pulled it gently, then harder as her pleasured moans encouraged him. \n\n\"Fuck me, fuck me hard ... Daddy,\" She purred in his ear, trying out the sound of it again as she ground against him and circled her hips.\n\nDave relinquished the breast he sucked and allowed Allison to stand. She grabbed the waistband of her yoga pants and started to pull them down. He watched her as she flicked a mischievous grin at him and then turned and slid them over her butt, bent forward, knees locked straight. She slowly slid them to her ankles.\n\nDave relished the view. He loved the way she slowly revealed her hairless lips as they peeked from between her thighs, her bubbly little butt an irresistible target. Before she could stand or change position he swatted her right buttock. It was playful but hard enough to sting a bit.\n\nAllison yelped in surprise and nearly fell, but Dave caught her by the hips and steadied her. He slapped her other buttock.\n\n\"Ow,\" Allison complained. She didn't protest though. He saw her wiggle her butt at him instead and administered two more swats. Then she quickly discarded her pants and turned to face him again. She had said she wanted him to fuck her hard, but didn't give him the chance. She straddled him again. She grabbed his cock and guided it into her pussy. Allison sighed and Dave groaned. In a couple of quick movements she had impaled herself on his rock hard member. \n\n\"Fuck your cock is amazing,\" Allison cooed as she began to ride up and down on his shaft.\n\n\"And your pussy is to die for,\" Dave growled. He took her nipples in his fingers and pulled.\n\n\"It feels so good Daddy.\"\n\n\"You feel incredible on my cock baby.\"\n\nAlison plunged her tongue into her teacher's mouth and kissed him hard. He felt her work her body on him the whole time. They fucked like that for a while before Allison insisted that it was time to get fucked from behind.\n\nShe dismounted and turned to kneel on the couch, arms over on the back. Dave stood behind her and enjoyed the view. He ran his hand over a tight butt cheek then teased her with a finger. He slid it over her slick pussy lips. He spread her butt cheeks with his other hand and ran his finger up and over her anus to give it the briefest tickle.\n\nDave knelt behind her and used both hands to part her again. He drove his tongue into her pussy and licked and lapped. Allison cried out in pleasure. She told him just how much she enjoyed his oral attentions. He tongue-fucked her until she begged him to bury his cock in her. Dave gave her a final, long lick up her slit. He swirled his tongue around her puckered little anus and was rewarded with a squeal of delight. He then stood with his throbbing cock poised to impale her.",
        "Dave guided himself between her lips and drove his cock deep inside. He fucked her hard and fast, hands on her hips to pull her back against each thrust. \n\nAllison reached back and spread her butt cheeks wide, her weight supported by her tits on the back of the couch. Dave released her hips and grabbed her wrists instead. He used them to pull her back against him as he fucked her harder and harder.\n\n\"Fuck yes Daddy, make me cum, I'm so fucking close!\" Allison screamed.\n\nDave fucked her even faster, his cock a piston in her pussy. She screamed again and her body shook as her orgasm ripped through her body. It was too much for Dave and he drove himself deep and held still as his cock erupted inside her. He panted hard in the aftermath of his exertion.\n\n\"Daddy?\" Allison said after they'd cleaned up and were headed for bed.\n\n\"Yes Allison?\"\n\n\"Can I sleep in your bed with you?\"\n\nDave looked her up and down. She wore a cute thong and a loose t-shirt. She was adorable and sexy at the same time. What did he have to lose? He'd already fucked her.\n\n\"I think I'd like that baby girl.\" Her face split into a broad grin and she followed him to bed. \n\n\"Which side is mine?\"\n\n\"That one,\" he replied and indicated the side furthest from the ensuite bathroom. Allison hopped into bed and pulled the quilt up under her chin. Dave hesitated.\n\n\"What's wrong Daddy?\"\n\n\"Oh, I just don't normally wear anything to bed.\"\n\n\"Well don't change that on my account,\" Allison laughed. She tugged her t-shirt up over her head. \"Naked sounds like the perfect way to sleep.\" She threw the t-shirt to the side of the bed and worked her panties off as well. The sight of her clothing suddenly strewn about his bedroom caused Dave's cock to expand again. He quickly climbed into bed.\n\n\"You know its a long time since I've slept with a woman in my bed, I hope I don't push you out in the middle of the night.\"\n\n\"I'm sure we'll be fine. It's actually the first time I've slept in a man's bed at all you know. Normally I'm well gone before its time to sleep.\"\n\nDave ran his fingers over Allison's naked body. It was a tender touch that lacked the urgency and passion from earlier in the night. He took advantage of the time to be intimate rather than just fuck. Allison sighed contentedly. Dave kissed her gently and felt her touch his body as well, though she notably avoided his cock. Occasionally it would bump against her but she seemed content with just being intimate. That was fine by Dave. After long minutes of gentle touches and kisses, Dave turned her away from him and snuggled up against her back, his rock hard cock nestled between her butt cheeks.\n\n\"Not sure I can sleep like this,\" he whispered to her and gave a gentle thrust with his cock to let her know what he meant. \"But I'm willing to try.\"\n\nAllison took the hand that was draped over her side, moved it to her breast and covered it with her own.\n\n\"I hope we can sleep like this,\" She said happily before drifting off.\n\n~~~~~~~\n\nAllison woke first and stretched, confused for a few moments before she remembered where she was. She smiled to herself and turned to watch Dave as he slept next to her. She lifted the covers to peek beneath and admire his body. Excited, she decided to wake him the best way that she could think of. She slithered down beneath the covers and gently sucked his cock into her mouth. It slowly hardened as she worked her lips and tongue over and around it. \n\nDave stirred, and Allison found herself suddenly exposed as he threw back the covers. She paused long enough to smile at him.\n\n\"Good morning,\" she said and then resumed.\n\n\"Good morning indeed,\" Dave moaned. \"You know, as much as I'm enjoying that, I really need to pee.\"\n\nAllison sucked up and down his cock quickly for a few moments. \n\n\"I can let you do that, but you'll have to be quick because I need to too!\" Before Dave could get off the bed she'd made a dash for the bathroom.\n\nDave followed her in, lead by his large stiff. He didn't rush too much as he could already hear that Allison had beaten him. He leaned against the wall and watched.\n\n\"Do you always watch girls pee?\" she asked, a little embarrassed by his presence.\n\n\"Only when they beat me to my morning relief,\" he replied.\n\n\"Kind of looks like you need all sorts of relief,\" Allison teased and dropped her gaze to his cock.\n\n\"Then the quicker you get up, the easier it will be for me.\"\n\nAllison reached for the paper and wiped before she quickly stood and flushed. She stepped aside to let Dave pass. She enjoyed the feel of his erect cock against her as he moved past. She stood and watched. The sight of her teacher naked with his cock aimed at the toilet excited her. \n\n\"Do you mind?\" Dave asked after several moments of inaction.\n\n\"Not at all,\" Allison laughed. She didn't move though.\n\n\"I can't do this with you here, its too much of a distraction,\" Dave complained. \"I have to go down a bit before it works.\"\n\n\"Oh well ok, I'll see you in bed then.\"\n\nDave sighed as he watched her perfectly formed buttocks depart the bathroom. It still took a while for him to be able to pee. The thought of her naked in his bed was hard to remove from his mind and threatened to thwart his efforts.\n\n~~~~~~~\n\n\"Hey Jo, are you awake?\" Sarah asked quietly.\n\n\"Yeah, can't seem to sleep.\"\n\n\"Mind if I join you?\"\n\n\"Of course not.\" \n\nJo moved over as she felt the single bed shift. Sarah snuggled in against Jo, who turned toward her friend.\n\n\"So what's keeping you awake?\"\n\n\"Sylvia.\"\n\n\"Sylvia?\" Jo asked, surprised at the response.\n\n\"Yeah, I think I love her.\"\n\n\"Wow.\"\n\n\"I know. Its messing with my head. I mean after everything that's been going on lately it was the last thing that I expected.\"\n\n\"What made you realise?\"\n\n\"The fact that you were here all day and I didn't fuck you,\" Sarah laughed lightly.\n\n\"I did wonder about that.\"\n\n\"Sorry. I mean, I know you probably expected a bit of fun today, but every time I thought of doing something to you, I thought of Sylvia. It wasn't that I didn't want you, I just... I dunno, it was weird; I just wished Sylvia was the one here but only for the sex bit.\"\n\n\"So, like if I touched you now,\" Jo teased, and ran her fingers over her friend's breasts, \"You wouldn't want me to?\"\n\n\"No, its not like that, it still feels nice and you're still an amazing friend, its just that if you had your head between my legs I'd probably lean back and imagine it was Sylvia doing the licking.\"\n\n\"Wow,\" Jo said again. \n\n\"Yeah.\" \n\n\"And what about cock?\"\n\n\"What about it?\"\n\n\"Do you still think about it? Like if you were in the darkroom would you still let my Dad fuck you?\"\n\n\"Well maybe. I mean, I'm still horny all the time,\" Sarah laughed. \"But like if he didn't do anything and I had Sylvia there, I'd be perfectly happy.\"\n\nJo continued to trace circles on Sarah's boobs with her finger. Sarah sighed.\n\n\"So are you going to ask Sylvia to be your girlfriend or something? Are you going to go exclusive?\"\n\n\"I don't know,\" Sarah admitted. \"That's the sort of shit that keeps me awake at night.\"\n\n\"Know what always helps me sleep?\" Jo asked and propped herself up on her elbows.\n\n\"No, what?\n\n\"A good orgasm,\" Jo giggled. She quickly moved on top of Sarah and kissed her hard. \"And if you are going to go exclusive, I'm going to give you one before I'm not allowed to!\" Sarah laughed and returned the kiss. It didn't take long for Jo to work her way down between Sarah's legs. Her own hung off the bottom of the bed. She delved between her lips with her tongue to tease and please. She stoked her friend's pleasure and enjoyed the sound of her sighs as she did so. She teased Sarah's clit with her tongue and slid it gently back and forth while swirling it around. At the same time she teased the entrance to Sarah's pussy with her finger. When Sarah was well lubricated, Jo moved her finger to her friend's anus. Her digit circled and probed gently. She felt Sarah push against it. She clearly wanted to be penetrated. Jo happily obliged and pushed her finger deep into Sarah's anus. She loved the pleasured moans that it drew from her friend as she attacked her clit with her tongue.\n\nJo wiggled her finger in Sarah's ass and sucked down hard on her clit. Sarah's thighs clamping about her head as she came rewarded her. She giggled between Sarah's thighs until her friend had the good grace to release her. \n\n\"Fuck that was good Jo,\" Sarah cooed to her as Jo lay beside her on the bed again.\n\n\"Well you deserve it.\" Jo assured her, \"Given all the fun you've given me.\"\n\nShe felt Sarah's hand stroke her cheek and turned to face her. Sarah kissed her gently; little more than a peck on the lips. \n\n\"Thank you for being such a good friend Jo.\"\n\n\"Anything for you Sah's.\"\n\n\"Before we sleep though, I want to give you an orgasm too.\"\n\n\"Well I'm not about to say no,\" Jo grinned in the darkened room.\n\nSarah moved on the bed and Jo felt her take a nipple in her mouth. It was sucked hard and bitten gently even as Sarah's fingers plunged between her pussy lips. Jo parted her legs and spread her knees wide as first two, then three fingers plundered her depths and Sarah moved back and forth between nipples.\n\nJo felt Sarah leave a trail of kisses and licks down her body. She thrust against the fingers buried inside her until they were removed to accommodate Sarah's tongue. She sighed at the contact. It was gentle at first, but quickly hardened. She felt Sarah's hands slide beneath her butt. They lifted her from the bed slightly and pushed her hips back toward her chest. Jo bent her knees and felt Sarah's tongue driven deep between her lips. A finger played at her anus and she pulled at her own nipples. \n\nSarah's finger pushed at her asshole. It worked a little inside before it was wiggled about and withdrawn. Jo gasped when she felt Sarah's tongue swirl around her puckered little hole. It licked and lapped and pushed. Jo gasped in amazement when it actually slipped a little inside her ass. Sarah's' thumb rubbed her clit firmly and she felt her tingling desire build. Sarah kept licking and rubbing until Jo exploded.\n\n\"God Sahs who knew you were so fucking kinky?\" Jo whispered to her after she'd recovered.\n\n\"I know right?\" Sarah laughed. \"I'm a regular deviant.\"\n\n\"Sylvia is very lucky.\"\n\n\"I'm just not sure how she'll react if I like ask her to be my girlfriend,\" Sarah sighed.\n\n\"I'm sure she'll be thrilled and excited and like, ecstatic,\" Jo assured her.\n\n\"Well first I have to work up the courage to ask.\"\n\n~~~~~~~\n\nAllison adjusted her school dress so that the skirt barely covered her ass as she waited for Mr. Johns to finish getting ready for school. She was excited that she would get to ride in his car on the way there and determined to make it a ride that he wouldn't forget.\n\nDave hesitated when he saw Allison by the front door. The dress barely covered her ass and the buttons weren't all done up. She looked ready to fuck.\n\n\"Um, I hope you don't plan on being dressed like that when you get out of the car,\" he said to her, conscious that his cock had hardened.\n\n\"Why not? Don't you like me like this Daddy?\" she asked.\n\n\"Its not exactly appropriate for school young lady,\" he replied. \n\n\"Well, how about I make sure I'm ok by the time we get there?\"\n\n\"I'm sure that will be fine. Of course, there's a risk that you'll make me crash if you sit next to me dressed like that,\" he said as they made their way out to the car.\n\n\"Are you willing to risk it Daddy?\" Allison asked as she settled in her seat and slid her butt forward to expose her lack of underwear. \n\nDave stared at the bare pussy in the seat next to him. He swallowed hard.\n\n\"I am baby girl, I am.\" He wasn't sure what it was about being called daddy by her that turned him on so much, he only knew that it did. He wondered what she'd think if she knew that he'd fucked his own daughter. Would she mind? She'd fucked Jo herself and she seemed to get off on calling him daddy but would she share? He saw Allison's hand go to her pussy and forgot about it as he struggled to keep enough attention focussed on the road and still catch glimpses of her playing with herself. As he watched the road Allison took his hand and put it between her legs. She pushed his fingers against her wet lips. Dave slid his finger up and down her slit. His finger slid ever so slightly between them. Then Allison took his hand and brought it to her mouth and sucked her juices from his fingers. Dave groaned.\n\n\"Daddy, can I suck you on the way to school please?\" she asked as her hand closed over his rock hard cock. \n\n\"No princess,\" Dave groaned. \"Its peak hour and you're in your uniform. As much as I'd love it, it would be too risky.\"\n\nHe glanced across and saw her pout. Her legs closed and she pulled her dress into order. He was surprised when she was quiet for the last of the ride to school.\n\n\"Everything ok Allison?\" he asked.\n\n\"Yeah, fine.\"\n\n\"Is it because I didn't let you suck me?\" he asked, surprised at the moody turn.\n\n\"A bit,\" she replied.\n\n\"Well, we have photography in third period baby, you can suck me then if you still want to.\n\n\"I wanted to do it in the car. In public.\"\n\n\"I'm sorry, I would have loved it, but ...\"\n\n\"Yeah, I know, too risky,\" she sighed. Dave watched Allison climb from the car and head off into school. He sighed and grabbed his things and went to start his day.\n\n~~~~~~~\n\nThe dark room lights went out and Sarah stood there, undecided. Her conversation with Jo hadn't left her any closer to a decision. Was she ready to go exclusive with Sylvia; to ask her to be her girlfriend? If she did, what would she do during the dark room escapades? She loved that she didn't really know who did what when the lights went out. She thought about that for a few moments and realised that she hadn't even had Mr. Jones' cock in her pussy. That realisation made her decide at least one thing. \n\nShe waited until she sensed him near her, and then reached for him. She found his cock and freed it from his pants then dropped to her knees to suck it into her mouth. He wasn't completely hard when she started which enabled her to take him deep. She loved the feel of his cock as it expanded in her mouth as she held him. When he was totally solid she worked her mouth up and down and then stood. She felt him move as if to go and so quickly grabbed hold of him again in a minor panic. He must have thought she was finished. She held his cock, turned and rubbed her butt against him. She smiled in the dark when she felt his hands lift the skirt of her dress up over her hips and then slide her thong down her legs. His cock pressed against her butt and she bent over the workbench and spread her feet. She felt her teacher's hands part her butt and then his cock eased into her pussy. She held still as he worked deeper with a series of short thrusts. Sarah moaned as his large cock filled her pussy. He was so deep!\n\nThe speed of his thrusts increased and Sarah had to bite down on her arm to restrain a cry of pleasure, especially when she felt a finger tease her anus. Sarah wondered about where she should let him cum. No doubt if she did nothing to change things she would get a pussy full of hot sperm. Then a cheeky nasty thought occurred to her. She pushed back and let Mr. Jones know that she was done with the sex, but before he could move away, quickly grabbed him again. She squatted down, stroked his shaft with one hand and then sucked him back into her mouth. She worked him urgently until she heard him grunt and felt him thrust at her mouth. She took him deep as his cock exploded and his seed filled her mouth.\n\nShe held it and stood. Mr. Jones moved away. Sarah turned to her left and sought out whoever was next to her. She had no idea who it was, but she found the girl's cheek with her hand and brought her in for a kiss. As soon as the other girl's mouth opened, she thrust her tongue and a load of cum into it. She felt the other girl stiffen in shock and cum dribbled down her own chin. After the initial shock the other girl kissed her back and her tongue probed tongue in her mouth. \n\nWhen Mr. Jones announced that the lights were going to go on, she quickly wiped her mouth and chin and hoped there wasn't be any cum on her dress. Back in position, the lights came on.\n\n~~~~~~~\n\n\"Which one of you dirty fuckers kissed me with a mouthful of cum?\" Lucy demanded at lunchtime.\n\nIt didn't take long for them to determine that it had been Sarah. Jo looked at her in shock, then quickly checked Sylvia's reaction. She didn't seem particularly upset, which Jo felt strangely relieved about. Then she had the belated thought that Sarah could have kissed her in the dark rather than Lucy.\n\n\"Fuck Sarah, what if you had kissed me?\" she demanded.\n\n\"Holy shit,\" Sylvia said.\n\n\"Wow,\" Allison moaned. Jo looked at her funny. That wasn't the reaction she'd expected, but Sarah's answer had distracted her.\n\n\"Then I guess you would have had a mouthful of cum. It wouldn't be the first time.\"\n\n\"It would have been my Dad's cum!\" Jo protested, even though she couldn't help but think how hot it would have been.\n\nSarah just shrugged and Jo punched her on the arm.\n\n\"That really wouldn't have been cool Sarah,\" Lucy said, in an attempt to support Jo. \"I mean, would you want a mouthful of your Dad's cum?\"\n\n\"Fine, I get it, I went too far!\" Sarah pouted. She stood up from the group and walked away. Sylvia jumped up to follow her.\n\n\"Are you ok Jo?\" Lucy asked her as they watched the others depart.\n\n\"Yeah, I mean, nothing happened, but fuck, that could have been ... well just ... you know.\"\n\n\"Yeah, I get it,\" Lucy reassured her. Allison remained strangely quiet.\n\nAt the end of the day, Allison waited by Mr. Jones' car. Jo, who had been driven to school by Sarah, joined her.\n\n\"Hey Allison, what's up?\"\n\n\"Oh your dad hasn't told you?\" Allison asked a little nervously.\n\n\"Told me what?\"\n\n\"I'm staying at your place for a couple of days. Gary is being a dick and I had to get out of there.\"\n\n\"Aren't your parents away?\"\n\n\"Yeah, that's why I had to get out of there.\"\n\n\"Oh, okay, that's cool,\" Jo replied, even as she lamented the fact that she'd be unable to fuck her Dad while Allison stayed over. She was unsure how she should treat things after Allison's reaction at lunchtime too.\n\n~~~~~~~\n\nDave smiled when he saw the two girls by the car even though he wondered how things would play out. He wondered if Allison was still shitty from that morning and if Jo would be ok with the fact that Allison had spent the previous night with him.\n\nThe ride home seemed pretty quiet to Dave and he wondered whether he'd been right to allow Allison to stay. He had no choice and so hoped that things would sort themselves out. Hopefully he would have a chance to talk to Jo and make sure he hadn't crossed a line for her. \n\n~~~~~~~\n\nAllison checked that Jo was ok after what Sarah had done in the darkroom.\n\n\"Jo, are you okay? I'm sure Sarah just got really horny. I'm sure if it had been her Dad's cum that she would have reacted the same way.\"\n\n\"Thanks Allie,\" Jo replied and gave a reassuring smile. \"I freaked out a bit was all. This whole dark room thing messes with my head sometimes. I mean, I'm happy for my Dad. He hasn't been this happy around the house for ages; probably not since Mum fucked him over, but I just don't want anything to go wrong, you know?\"\n\n\"I get it, Jo, I really do,\" Allison replied. She pulled her friend into a hug. \"I'm glad you're okay.\"\n\n~~~~~~~\n\nDave called them for dinner and they left it at that. The conversation over dinner was a lot happier and flowed freely. Dave was relieved that whatever had gone on in the car had obviously been a blip rather than something larger. He had another issue to struggle with. Whenever he was left alone with either of the girls, they teased him. ",
        "Allison would rub his cock with whatever she could reach him with; typically her foot, while Jo would flash her tits at him. Between the two of them they had him rock hard by the end of the meal. He offered to take care of the clean up and let them go, but they both insisted they would help. \n\n~~~~~~~\n\nJo watched Allison as she rubbed herself against her father whenever she thought she wasn't being watched. Jo was surprised to realise that she felt jealous. It was one thing to share her father with her friends in the dark room where nothing was really going anywhere, but this was her time. This was the time when she normally had her father alone and was able to do what she wanted. Allison's intrusion on that time hit her in a way that she hadn't expected. Part of her wanted to retreat to her room, but she figured that if she did that Allison would have him to herself. So she stayed and simply tried not to give Allison too much opportunity.\n\nAfter the dishes were done, Dave retreated to his study. He needed a break from the constant tease. It had driven him nuts. He was horny as hell, knew that both of the girls in the house would happily fix that situation and yet because of who they were, couldn't.\n\n~~~~~~~\n\nJo and Allison turned on the television in the living room.\n\n\"Are you okay Jo? You seem kind of quiet?\" Allison asked her during an ad break.\n\n\"Yeah, I guess its just weird seeing you flirt with my Dad in the kitchen like that.\"\n\n\"But like, you know what happens in the dark room and like, there was that whole thing around the pool,\" Allison replied, caught by surprise. \"I thought you were okay with it?\"\n\n\"Yeah I know,\" Jo answered. \"That's what I keep telling myself. It shouldn't be any different, but for some reason, it being just the two of you ... I dunno.\"\n\n\"Well if it makes you uncomfortable, I won't do it,\" Allison replied. Jo could tell that she didn't really want to say it and appreciated the fact that her friend had offered to stop for her benefit.\n\n\"Its okay, if you want to, you can, I just need to adjust my thinking is all.\"\n\n\"You're amazing Jo,\" Allison replied and Jo found herself seized in a bear hug.\n\n\"I am, aren't I?\" Jo teased back. She slid her hand along Allison's thigh. \"You'll have to make it up to me though.\"\n\n\"Oh, and how am I supposed to do that?\" Allison asked with a grin.\n\n\"You could start by kissing me,\" Jo suggested. \n\nAllison turned to face her and leaned in. Jo met her half way and their lips pressed together before they parted to allow exploratory tongues to dance together. They kissed for long minutes and their hands started to explore and caress each other's bodies.\n\nWhen the kiss broke apart, Jo said to Allison, \"Did you know that's the first time that you've kissed me?\"\n\nAllison blushed.\n\n\"Did you know that's the first time that I've actually kissed a girl?\"\n\n\"No way! What about all the others?\" Jo asked, surprised.\n\n\"Um, well as much fun as we've all had, other than fucking you and Sarah with the hair brush, I haven't done anything to anyone. I mean Sylvia did lots to me, but I let that happen and didn't really return the favour.\"\n\nJo's eyes lit up. \"So if you were to lick me, I'd be your first?\"\n\n\"Yeah,\" Allison replied. Her eyes flicked to Jo's crotch.\n\n\"Are you going to?\" Jo asked.\n\nAllison nodded, biting her lower lip. Jo kissed her hard. She drove her tongue between her friend's lips and pushed her back on the couch, her body crushed against Allison's. She pushed her hands up under her friend's skirt and pulled at her thong. She dragged it from Allison and drew it down her legs.\n\n\"I thought I was supposed to lick you,\" Allison said with a smile as she watched her underwear disappear down her legs.\n\n\"Doesn't mean I don't want to taste you too,\" Jo replied with a grin. She pushed Allison's legs apart and took a few moments to admire her friend's bald pussy. She ran her fingers over it gently and listened to Allison moan. She ran them up and down, over the smooth flesh, then slipped one between her friend's lips. She pushed it deep and slid it in and out a few times before working a second in along side it. She turned her hand, curling her fingers toward Allison's front wall and rubbed her thumb against her clit. When Allison squirmed on the couch, Jo replaced her thumb with her tongue and licked the erect little button firmly.\n\nAllison squealed before she quickly bit it back.\n\n\"Shhhh,\" Jo giggled before she licked Allison's pussy in earnest. She licked and lapped until she knew she had her friend close to orgasm, then stopped. Allison groaned her disappointment. Jo simply climbed back on top and kissed her again, her tongue coated with her juices.\n\nShe felt Allison's hands slip up under her skirt and cup her butt. They squeezed as she kissed her hard. Then Allison pushed her off. She moved and let her take control. She was pushed back on the couch as she had done to Allison. Allison attacked the buttons down the front of her school dress. She seemed to be in a rush and fumbled in her attempt to undo them. When the final button was released, Allison parted the dress. She didn't even bother to remove it properly. It opened out and revealed Jo's bra and panties. Allison's hands thrust up under the wire of the bra and cupped her tits as her knee pressed between Jo's legs. Jo pushed against her in turn and enjoyed the pressure against her pussy. \n\nShe returned the kiss that Allison planted on her lips and then wiggled around as her friend's hands sought to release the clasp of her bra. When that had been achieved it was pushed up toward her neck and Allison used her lips and tongue to pleasure Jo's nipples. Jo thrust them at Allison's mouth and urged her to suck and bite them. Allison responded readily and Jo moaned in pleasure.\n\nAs her nipple was treated she felt Allison's fingers slip under her panties and caress her pussy. Two fingers were driven inside and worked hard as Allison continued to suck on first one, then the other nipple. She would have been happy to let Allison please her like that for hours, but it wasn't long until she felt her panties tugged off. She lifted her butt to aid in their removal, and then lay back on the couch as Allison pushed her knees wide and knelt between her legs. \n\nJo's breath quickened with anticipation as she felt Allison spread her pussy with her fingers and then gently run her tongue the length of her slit. The tongue danced around. It teased her labia, her clit, dipped inside. Jo gave herself over to the pleasure as Allison explored her pussy. She adored the fact that it was the first time that her friend had done so.\n\nSoon any thought but pleasure was gone from her mind as she was driven firmly toward orgasm. Allison had clamped her mouth down on her clit and sucked and licked it with abandon. Jo cried out when she was driven over the edge and electricity shot through the pleasure centres of her body.\n\n~~~~~~~\n\nDave heard the cries of pleasure from the living room and moaned. His cock was still rock hard and he desperately wanted to go investigate. He didn't. Even though it seemed the girls had sorted out whatever issue may have bothered them, he doubted that they'd want him there at that moment. He was left alone in his study and wondered what the right time to leave it would be. He waited until the noise had died down and decided that that would have to be it. He wandered out through the kitchen to find the two girls seated on the couch. Their clothes were dishevelled but respectable. \n\n~~~~~~~\n\n\"Hey Dad, want to join us?\" Jo asked when she saw him in the doorway.\n\n\"Sure, why not,\" he said as he took a seat in the spare chair. Jo turned her attention back to the television. Dave attempted to, but the thought that the two girls had recently been having sex on the couch they were perched on proved to be something of a distraction. It didn't help that every time he glanced in their direction Allison would tease him. She'd either lift her skirt and flash him and reveal her lack of panties or make blowjob motions.\n\nJo wasn't completely oblivious to what was going on, especially because her father had to keep adjusting his hard cock, but she was conscious of the prior conversation that she'd had with Allison and wanted to try and let things go a bit. She tried not to be the stick in the mud that ruined things for her friend and her father. After all, in a few days Allison would return home and she'd have him to herself again.\n\nBy the time the program was done, Jo suspected that her father was ready to explode. His cock was clearly erect and Allison all but moaned on the couch next to her. She did them both a favour and announced that she was off to bed as soon as it was done. She said that she'd see Allison when she made it to bed. It gave her friend unspoken permission to stay later.\n\n~~~~~~~\n\nAllison nearly flew between the couch and the chair where Dave sat as soon as Jo left the room. \n\n\"Careful,\" Dave hissed quietly as she bounded onto his lap. She wasn't sure whether he meant because of Jo or because he was worried that she'd land on his cock. \n\n\"Of this?\" she asked and grabbed it through his pants. \n\n\"Well that too. It could go off at any second, but actually I meant of Jo coming back in.\"\n\n\"I don't think she will,\" Allison said to him. Her fingers already worked at his pant fastenings in a frenzied attempt to free him.\n\n\"Well I think we should be careful, she seems okay now, but earlier I was worried that maybe you being here had upset her.\"\n\nAllison sighed. \"We talked about it. It did a bit, but I think she's okay now like you say. I mean she made it pretty clear that I could stay out here with you.\"\n\n\"Well I just don't want to push it,\" Dave told her. \n\n\"But Daddy, I want to sleep in the big bed again,\" Allison pouted. Her hands had worked his cock free and she slipped to the floor to kneel in front of him. Before he could even form his answer properly she had her mouth over the head of his cock.\n\n\"Oh fuck. I'd love to have you in my bed Allison, but I think tonight you should sleep in Jo's room.\"\n\nAllison plunged down the length of his cock and Dave struggled not to moan out loud. Her mouth slid up and down his shaft before she paused and looked up at him with pleading eyes. \"Please Daddy? I really want to sleep with you.\" Again Allison's mouth slid slowly down Dave's cock. She took as much as she could then slowly sucked her way back up until she trapped the head between her lips. \n\n\"You know that I'd love to, but no.\"\n\nAllison pouted again. \"Fine, but you will fuck me Daddy.\"\n\n\"When its right I will baby.\" He watched as Allison stood up and left him, pants around his ankles and cock about to explode. He wondered if he was stupid to let her go or whether he had done the right thing.\n\n~~~~~~~\n\nJo was surprised to hear the door open so soon after she'd left Allison with her father in the living room. She'd expected Allison to fuck him and take some time to arrive.\n\n\"You're here quicker than I expected,\" Jo said quietly with genuine surprise.\n\n\"Quicker than I expected too,\" Allison complained. \"I think he's too worried about what you might think.\"\n\n\"I'm sorry Ally.\"\n\n\"Its ok, I guess it means I'll just have to wait for tomorrow's photography lesson to feel his cock in my pussy again. At least I can hope that its me and not one of the others.\"\n\n\"If its any consolation, you can share my bed,\" Jo suggested. She felt the covers move in response and Allison slid into bed with her. She felt Allison snuggle in behind her and spoon against her body, her breasts pushed against her back. One hand slipped over her breast and caressed it through the t-shirt that Jo wore. Jo slid a hand back over Allison's thigh and found her naked. \n\nThey lay together for a while. Each listened to the other breathe. Their fingers stroked each other's skin without being overtly erotic.\n\n\"Ally?\" Jo whispered.\n\n\"Yeah?\"\n\n\"What was so bad that you had to leave your house? What did Grant do?\"\n\nJo could sense that Allison held her breath. She felt her body stiffen a bit. She heard her slowly breathe out before she said, \"Nothing to worry about, it was just stupid, never mind.\"\n\n\"It must have been more than that ... or was it just a ploy to get into my house when I wasn't here?\"\n\n\"No, actually it wasn't, that didn't come to me until I drove off. When I got in the car I didn't really know where I'd end up.\"\n\n\"Sounds like he must have been a right prick.\"\n\n\"It will be ok Jo, I just needed space.\"\n\nJo paused. She didn't believe Allison, but she didn't want to push her too far either. She figured that if Allison changed her mind and wanted to talk, she would. Something else had been gnawing at her though.\n\n\"Ally, where did you sleep last night?\"\n\nThere was a delay in the answer. \n\n\"You slept with my Dad, didn't you?\" she probed.\n\n\"Uh huh,\" Allison eventually confessed.\n\n\"And you fucked him too?\"\n\n\"Yah.\"\n\nJo lay there, Allison's hand very still on her breast as she processed her friend's response. \n\n\"Jo, are you ok?\" Allison asked after an extended silence.\n\n\"Yeah, I think so.\"\n\n\"I promise it wasn't planned when I left home.\"\n\n\"Okay.\"\n\nSilence enveloped them again. Allison's hand squeezed her breast gently and Jo listened to her friend breathe, conscious of how close their bodies were, conscious that just the night before Allison had been this close to her father. She realised she was jealous of the fact that although she'd fucked her father, she hadn't spent the night in his bed. She hadn't had that same level of intimacy.\n\n\"Is his cock really that good?\" Jo asked. She rolled over so that she was on her side and faced Allison.\n\n\"God yes,\" Allison replied immediately. \"But it's not just his cock.\"\n\n\"Oh?\" Jo asked, surprised. \n\n\"No I mean it started out as that, but I really like your Dad Jo. He's good looking, he's smart and he treats us like adults. I don't get a lot of that I guess. I know you probably don't want to hear it, but last night ... he made me feel special. He cared about my well being before anything sexual happened.\"\n\n\"Yeah I guess he is pretty good like that.\"\n\nJo slowly processed what Allison had told her. She could hear Allison's breath only inches away. She wondered what was going through her friend's mind. Tentatively she reached out and found her friend's hand. Their fingers entwined. \n\n\"Jo?\"\n\n\"Yeah?\"\n\n\"There's something I can't get from my mind.\"\n\n\"I don't know if I'm brave enough to ask,\" Jo replied.\n\n\"You know how you freaked at me at school today?\" Allison queried.\n\n\"Yeah?\"\n\n\"I can't get out of my mind the thought of kissing you with your Dad's cum in my mouth. It um ... well ... fuck, it turns me on.\"\n\n\"You're kidding?\" Jo asked in shock.\n\n\"No. I don't know what it is, but it completely turns me on,\" Allison sighed.\n\n\"You're a freak,\" Jo teased.\n\n\"I know,\" Allison laughed. \"But, like, it totally turns me on. Have you ever even thought a little bit about maybe grabbing your Dad's cock in the dark room? Like no one would even know if you did it. Fuck, even saying it out loud is making my pussy wet.\" \n\n\"Oh my God Allison,\" Jo said. She felt her take her hand and put it between her legs. She caressed her friend's pussy and it was indeed totally soaked. She felt Allison push back against the pressure. \n\n\"You should totally do it,\" Allison said to her huskily. \"\"Fuck, if I were you I'd probably even suck it.\"\n\nJo teased Allison with her fingers.\n\n\"Have you thought about it?\" Allison pushed. \n\nJo hesitated. Did she admit it? Could she?\n\n\"Maybe,\" She said in the end, surprised her voice only caught slightly.\n\n\"Maybe? That totally means you have!\" Allison hissed.\n\n\"Don't you fucking dare say anything to anyone!\" Jo warned. She could have protested, but she knew that she wouldn't have held out. Allison could be relentless when she wanted something badly enough.\n\n\"I promise I won't.\"\n\n\"I will kill you if you do,\" Jo threatened.\n\n\"No way would I do that to you Jo. I mean, you should so totally do it though. Fuck, it feels so good. He get's so fucking hard. The way that massive shaft feels in my hand, the skin sliding over it, God, if he'd let me I'd go in there and fuck him right now.\"\n\n\"You probably could,\" Jo said. \"I'm sure if he thought I was asleep and you just like started sucking him he would fuck you.\" She scarcely believed she'd even suggested it. \n\n\"Don't tease me,\" Allison moaned as Jo pushed two fingers into her pussy.\n\n\"You have my permission,\" Jo sighed. \"Go fuck Dad.\"\n\nShe felt Allison's fingers probe between her legs. She rolled onto her back and spread them to give her access. She moaned as Allison penetrated her. Slowly but surely, her desire was stoked. She had her clit teased, caressed and rubbed. She just lay back and enjoyed it. She knew it would be the only satisfaction she'd get while Allison was there. Allison took her close to the brink of orgasm. Her nipple was taken deep into Allison's mouth and sucked it hard.\n\n\"I'm going to sneak into your Dad's room next,\" Allison whispered as Jo felt her continued to play. \"And when I'm riding him, I'm going to put my fingers in his mouth. He's going to smell you on them. He'll think it's from me of course, but I'm going to feed him your juices on my fingers and make him smell you as he fucks me.\"\n\nJo exploded. She didn't know what to say and before she came up with anything, Allison had quickly kissed her and slipped from the bed, headed for her father's room.\n\n~~~~~~~\n\nSarah pulled up outside Sylvia's house. Her heart pounded as she paused before she opened the screen door and knocked. She waited impatiently as she heard Sylvia call out that she was on her way. As the footsteps approached, her heart rate quickened.\n\n\"Sarah!\" Sylvia called out happily when she saw who was at the door.\n\n\"Hey Sylv,\" Sarah replied. She stepped into the entry hall as Sylvia made room for her.\n\n\"I wasn't expecting to see you today\" her friend said and hugged her quickly. Sarah saw her quickly mouth that her mother was home. Sarah pulled back from the raunchy kiss she'd been about to plant on her. Instead she followed Sylvia through the house. She said hi to her mother when they passed through the kitchen, happy that Sylvia kept going to her bedroom. The door was closed behind her when they had both entered.\n\nSarah hesitated but Sylvia grabbed her anyway. She was pushed up against the back of the door and kissed passionately. She returned it with equal passion.\n\n\"So not that I'm complaining, but what brings you over?\" Sylvia asked when the kiss broke apart.\"\n\nUm, I have something to ask you?\" Sarah said hesitantly.\n\n\"Are you ok?\" Sylvia asked. \"I mean, you could have just called.\"\n\n\"Well yeah, I'm ok and could have called, but it was kinda more important than that.\"\n\n\"Now you're freaking me out Sah's,\" Sylvia said, biting her bottom lip.\n\n\"Oh God, it's not that bad!\" Sarah laughed. \"I just, well, I wanted to know if you'd go out with me.\"\n\n\"Of course, where did you want to go?\"\n\n\"No, go out with me like, be my girlfriend and stuff,\" Sarah said. She felt a furious blush colour her face.\n\n\"Oh!\" Sylvia said as the true meaning dawned on her. \"Wow.\"\n\nSarah stood nervously as she watched Sylvia process the question.\n\n\"Of course I will!\" Sylvia said after barely a moment of hesitation. Sarah all be leapt on her friend as relief and joy crashed through her system. They ended up falling back onto Sylvia's bed, arms and legs tangled together as they kissed.\n\nThey lay together for some time. Neither tried to do more than kiss the other. Somehow it seemed a better way of cementing their new status than by getting naked and fooling around. \n\nEventually Sarah announced that she'd have to head off home. \n\n\"You can't stay?\" Sylvia asked, clearly disappointed.",
        "\"No sorry, I told my parents I'd be home and we have school tomorrow.\"\n\n\"School ... what about the dark room?\" Sylvia asked.\n\n\"What about it?\"\n\n\"Well we're dating now. Are you going to do anything in there? Are you going to suck or fuck Mr. Johns?\"\n\n\"Oh, I hadn't really thought about it. What do you think?\"\n\n\"Well, it would seem weird if we're going out and yet doing that in the dark room wouldn't it?\"\n\n\"What if he grabs me though? If I push him away it might ruin it for the others.\"\n\n\"I guess ...\"\n\n\"How about,\" Sarah suggested, \"That given there's only like four weeks of school left, we let what ever happens in the dark room happen, but outside of it, we're exclusive?\"\n\nSylvia only gave it a moment's thought. \"That sounds perfect!\"\n\n\"Awesome!\" Sarah replied and kissed her new girlfriend.\n\n~~~~~~~\n\nAllison slipped into Dave's bed. She was as quiet as possible in an effort not to disturb him. She wanted him to wake because his cock was in her mouth, not just because the bed moved. She held her breath and lay still beside him. She didn't touch him at all. She listened intently and waited for a sign that would betray if he'd woken or not. She felt him stir and roll toward her slightly, but his breathing remained regular and deep. She was convinced he was asleep. She wriggled her way down the bed and moved her face to his crotch. She had to roll him a bit to gain the access she needed, but managed to do so without waking him. She sucked his flaccid cock into her mouth, able to take all of it and roll it around. At first nothing happened, but before long she felt it start to grow. She moaned as it expanded to the point that she was unable to hold all of it any longer. She continued to suck him. She heard him moan. His hips thrust toward her and she took him as deep as she could. \n\n\"Jo?\" she heard him mumble, clearly not fully awake. Then the covers were ripped back and she was exposed to the dim light of the dark room.\n\n\"Allison!\" he exclaimed with a hiss. \n\nAllison sucked her way to the tip of his cock and let him slide from her mouth. \n\n\"Daddy, did you just call me Jo?\" she asked, intrigued.\n\n\"I ... no ... what? Did I?\" he stammered. \n\n\"I'm sure you said Jo when you woke up,\" Allison teased.\n\n\"I was dreaming,\" he replied a little too hurriedly.\n\n\"About Jo sucking your cock?\" Allison asked eagerly.\n\n\"No!\" Dave insisted, \"It was really abstract, but I was really horny, I don't even know how to explain it.\"\n\n\"That's ok, I don't mind,\" Allison giggled and again sucked his cock into her mouth. She continued for a few minutes before she pushed him onto his back on the bed. She climbed over him and mounted him. She groaned as his large cock speared into her pussy. She placed one hand on his chest to help in her bouncy movement. She teased his mouth with the other. She knew that he'd smell pussy on them. She knew that he'd assume that it was hers; that he'd think she would have masturbated before coming to his room. She knew that he would be wrong and that the taste he enjoyed would be Jo's. \n\nJust thinking about it drove Allison wild. She ground hard down on his cock, impaled and stretched as she circled her hips. She felt his teeth on her fingers, his hands on her breasts. She was going to cum. She rubbed back and forth and leaned forward to ensure contact with her clit. She came. She held still on Dave's cock and her pussy clenched and released as pleasure coursed through her body. \n\nDave continued to thrust up at her. She held on and whimpered from pleasure. She felt Dave explode and flood her insides. She squealed quietly in glee. As his cock pulsed she crushed her tits against his chest and kissed him. \n\n\"Thanks Daddy,\" she whispered. \"I'd better get back to Jo's room in case she wakes up.\"\n\n\"Well thank you sweetie,\" Dave groaned as Allison slipped from his cock and his bed. \n\n~~~~~~~\n\nJo listened to Allison's footsteps in the hall as she approached. Her door creaked ever so slightly as Allison came in. She expected her friend to get into the made up bed on the floor and sleep, so was shocked when she felt her own bed move and Allison joined her.\n\n\"Have fun?\" Jo asked.\n\n\"Hell yes,\" Allison sighed. Jo felt Allison's hands on her body. They roamed over her belly and breasts, her hips and legs. Fingers teased at her pussy. Allison moved on top of her and a thigh thrust against Jo's pussy. Jo found herself unable to say no. Soon Allison had moved again and Jo found her friend move so that their pussies scissored together. Allison was completely soaked. \n\n\"Wet much?\" Jo giggled as her friend mashed their lips together. \n\n\"Cum does that to my pussy,\" Allison whispered back. \n\n\"Wait, Dad filled your pussy and you're scissoring with me?\" Jo asked, shocked. \n\n\"Uh huh,\" Allison replied. \"Know what he said when he woke up with a mouth on his cock?\"\n\nJo went still. Allison continued to grind, but Jo couldn't move.\n\n\"What?\"\n\n\"Your name. There I was with his cock in my mouth and he said your name. He said he was dreaming. I like to think he was dreaming about you sucking his cock.\"\n\n\"What? That's so wrong,\" Jo protested feebly.\n\n\"Its so wrong that it's fucking hot,\" Allison replied with a moan. She ground her cummy pussy against Jo's. Jo responded ever so slightly.\n\n\"Ally, ... I ... oh fuck I don't know what to think,\" Jo moaned. The pleasure of the contact destroyed the coherency of her thoughts.\n\n\"Don't think, just enjoy,\" Allison suggested.\n\nJo went with the suggestion and slipped her hand down to tease her clit as Allison continued to rub against her. It wasn't long until she came hard. She wanted to tell Allison that it wasn't the first time that her father's seed had been mixed with her juices, but she couldn't bring herself to do it. \n\nIn the end, after Allison had orgasmed as well, the two girls drifted off to sleep together in Jo's bed.\n\n~~~~~~~\n\n\"Jo, I have to tell you something,\" Allison said. She'd woken early and been left with her own thoughts for too long.\n\nJo turned, surprised by the tone of Allison's voice. \"Wow, sounds kind of ominous when you say it like that.\"\n\n\"Fuck, I have to tell someone and you're the only one that I think might have some chance of understanding me.\"\n\n\"Okay ...\"\n\n\"Just don't interrupt until I'm done, okay?\"\n\n\"Sure,\" Jo replied. She wondered what on earth she could expect.\n\nAllison launched into the tale of how she had attempted to seduce her brother and exactly what had happened. Jo listened, enthralled, shocked and amazed as Allison told her the full story right up until the fact that she'd fled the house when he'd refused to have any more to do with it.\n\n\"And that's how I ended up here the other night. I'm a freak.\"\n\n\"Shit.\"\n\n\"I know. I understand if you think I'm a pervert and want nothing to do with me,\" Allison said with a heavy sigh.\n\n\"No, that's not it at all,\" Jo said as she pulled her friend into a tight hug. \"You know how you asked me if I've ever thought about grabbing my Dad's cock in the dark room?\"\n\n\"Yeah?\"\n\n\"Well, um, shit, that's ... well I've done more than think about it. Like, a lot more.\" Allison's face light up and wondered given the situation whether it was hope or lust that she saw.\n\nAllison wanted to know more, but Jo found herself unable to tell the story. Eventually they drifted off to sleep.\n\n~~~~~~~\n\n\"Come on girls, get it together, we'll be late for school!\" Dave's shout startled both girls and they jumped to scramble to be ready on time.\n\n\"You have to tell me more,\" Allison insisted as she buttoned up her blouse.\n\n\"After school,\" Jo promised.\n\n\"After school? But that's fucking ages away!\"\n\n\"Well that's when it has to be,\" Jo insisted. \"None of the others can know this Ally. None.\"\n\n\"I get it,\" Allison replied. \n\n~~~~~~~\n\n\"Room going dark in 10 seconds,\" Dave advised the girls lined up along the bench. They all grinned back at him.\n\nAllison watched Dave as he counted down the last 10 seconds. Specifically, she watched his crotch as his cock swelled in anticipation of what was to come. She licked her lips and dragged her gaze away from him. She'd positioned herself next to Jo and was determined to keep track of where she went. As soon as it was dark she tapped Jo on the shoulder so that they swapped spots. The tricky bit came when she was then trapped on the shoulder from the other side. She swapped and tapped again, immediately switching back. Then she tapped what she hoped was still Jo and switched with her again. Everyone settled down at that point. \n\nAllison turned to the girl that she hoped was Jo and kissed her. She tried to judge whether the kiss was the same as those that they'd shared the night before. The style certainly seemed right. She slid her hand up under her friend's skirt and felt a thong. She had watched carefully when Jo dressed, not with the intent of memorising what she wore, but just because it turned her on. She knew that Jo had worn a nude coloured thong. Inspired, she quickly knelt down and pulled it down her friend's legs, happy when the girl stepped out of it. She shoved it in the pocket of her skirt and grinned to herself in the dark. \n\nAllison nearly jumped out of her skin when a pair of hands fumbled about her head even as she knelt in front of Jo. She felt Dave's cock bump against her and quickly turned to take him in her mouth. She teased him with her lips and tongue. She swirled her tongue around the head of his cock, tickled at the sensitive underside and slid her lips up and down his length.\n\nShe used one free hand to reach to the girl that she now assumed to be Jo and slipped it under her skirt again. She found the girl's pussy and fingered it. She had to resist the urge to moan as she pushed her head down her teacher's cock. When she could feel him thrust at her, she stopped. He tried to pull her to her feet, but she moved away and made it clear that she was done. He moved on, but only as far as the girl next to him, to Jo. \n\nAllison hovered and sensed movement. She couldn't be sure what happened though. She wanted to know. She reached out and found Dave with her hands and pulled herself in behind him, crushed up against her back. Then she slid her hands under his shirt, to grip his chest from behind. She moved them down his body, past his belt. She grabbed the base of his cock and found another hand already there. A thrill shot through her body as she realised that the girl she assumed was Jo had taken up where she left off. Her Dad's cock was in her mouth! Allison wanted to turn the lights on.\n\nDave stepped back and Allison had to go with his movement. She wondered what had happened. She stroked the base of his cock with one hand. She continued to hold it and felt her hand move up against the other girl's butt. She quickly felt around and confirmed her suspicion that Dave now had his cock in the other girl's pussy. Jo's pussy! Dave was fucking his daughter! Allison moved enough that she could play with herself as well as hold Dave's cock. She desperately wanted to feel his cock pulse, to know that he'd cum in her pussy, but before that happened, he pulled out and made to move away. Allison let him go reluctantly. She finished herself off with her fingers, as a picture of Dave's cock buried in Jo's pussy fuelled her imagination.\n\n~~~~~~~\n\n\"Um, I have an announcement,\" Sarah stated as the girls all sat around at lunchtime.\n\n\"Oh?\" Allison replied on behalf of the group.\n\n\"Yeah, Um, Sylvia and I are going out.\"\n\n\"That's awesome!\" Jo replied. \n\n\"Wait, what do you mean, going out?\" Lucy asked.\n\n\"Like dating,\" Sylvia laughed in response. The girls all laughed at Lucy as she caught up with what had been said.\n\n\"Oooooooh,\" Lucy replied, and then laughed along with everyone.\n\n\"Congrats you guys,\" Allison said and hugged each of them in turn.\n\n\"So, does that mean that like, we have to avoid you in the dark room?\" Jo asked. \"'Cause you know, its fun and all and I can't have the D in there, so ...\"\n\nAllison bit back an exclamation at Jo's statement about not having the D. She'd watched carefully and had managed to sneak a glimpse up her friend's dress. Nothing had been said about the fact that Allison had kept someone's panties and the glimpse had confirmed that Jo no longer wore any.\n\n\"Um, no that's ok,\" Sarah said. \"We decided that since there's not much time left in school that whatever happens in there is okay. We're going exclusive everywhere except the dark room.\"\n\n\"Well good for you guys,\" Jo smiled. \"Even if it spoils some of the fun.\"\n\n\"I'm sure you'll survive, Jo,\" Lucy said to her friend. \n\n\"Of course I will. If there's nothing else, I can always entertain myself,\" Jo laughed. \n\n~~~~~~~\n\n\"Tell me everything,\" Allison demanded as she dumped her school bag in Jo's room.\n\nJo laughed at her. \"Geez, give me a chance to at least get changed Ally.\"\n\n\"Sorry, but I've been thinking about what you said all day and I'm horny as fuck. Especially since I've been holding onto these since photography!\" She dangled the nude thong from her finger. \n\n\"I wondered who nicked that!\" Jo declared. \"I couldn't exactly ask either, you sneaky bitch.\" \n\n\"Well I wanted to know who was next to me, because I wanted to know what you would do if it was you. And now I know that you've sucked your Dad's cock and had it in your pussy. So spill!\"\n\nJo sat on her desk chair and told Allison to sit opposite her on the bed. Slowly she told Allison how it had all happened; how the opportunity of the dark room had originally lured her and then how she'd come to fuck her Dad at home.\n\n\"Holy shit. That's so amazing. You're so fucking lucky!\" Allison gushed when the tale was done.\n\n\"Yeah well, so sorry if I was a bit rude when you showed up here. I mean it kind of put a damper on what I could do around the house.\"\n\n\"I'm sorry Jo. Fuck, I mean your Dad is so awesome and I love fucking him. How could I have ever known that I'd be getting between the two of you like that? Now I feel bad for coming here.\"\n\n\"Don't,\" Jo interrupted, \"I'm glad that you at least had somewhere you felt safe to come to, even if it did mean changing things. I mean, what Dad and I have ... it can't really last anyway. That doesn't mean I'm not going to enjoy it while it does, but ... well ...\"\n\n\"I have another confession,\" Allison said.\n\n\"Oh really? What on earth could that be I wonder?\" Jo asked.\n\n\"Well its not as bad as having had sex with a relative,\" Allison replied.\n\n\"Come on then, surprise me.\"\n\n\"When I fucked your Dad last time, I kind of called him Daddy.\"\n\nJo laughed in response.\n\n\"What?\"\n\n\"Oh I just can't believe that I'm actually having this conversation with you. I mean, first I tell you that I've fucked my Dad and now you're telling him you're calling him Daddy like you're my sister or something. I shouldn't be surprised though. Not given the way you asked for Daddy to fuck you when Sarah did you with the hairbrush. Having said that, I thought if anyone ever found out what I'd done with my Dad they'd be so freaked out they'd never talk to me again and ... well wow.\"\n\n\"Yeah, well what can I say? I'm a freak too? Unlike most people, the thought of seeing you fuck your dad blows my mind in a good way. I mean, you should feel how fucking wet I am just from talking about it.\"\n\nJo reached to her friend and pushed her back on the bed and slid her hand under her skirt. Her fingers found the damp crotch of Allison's underwear.\n\n\"You are wet, aren't you?\"\n\n\"Fuck yes,\" Allison purred and she leant back on her elbows and spread her legs.\n\n\"I bet you taste good too, yeah?\"\n\n\"Uh huh.\"\n\nJo grabbed Allison's panties and pulled them from her legs. Without ceremony, she moved under her friend's skirt and ate her pussy. When Allison had exploded, she lay beside her on her bed. \n\n\"Imagine if we were really sisters,\" Allison purred. \"Fuck that would be hot.\"\n\n\"It would be,\" Jo agreed. \"And I don't think Dad would mind if he had two daughters to fuck. Especially if he got to watch them have sex with each other as well.\"\n\n\"That is such an amazing thought. I would love to be your sister and have sex with you for him. I think I'd want him to join in though.\"\n\n\"Oh hell yes,\" Jo agreed. Allison slid her hand between Jo's legs and fingered her dripping wet pussy. \n\nJo spread her legs and Allison worked her way down to bury her head between her friend's legs and brought her to orgasm. \n\n~~~~~~~\n\nLucy waited in the dark for her opportunity. She felt someone move past her and reached out, happy to have snagged Dave. His cock was already out of his pants and she wrapped a hand around it. It was moist. Someone had sucked or fucked him, possibly both. \n\nLucy had been feeling a little left out over the last couple of days. Sarah and\n\nSylvia had announced their relationship and for some reason Allison had been staying at Jo's house. The two of them had become particularly chummy after that and Lucy hadn't been able to work out why. So she was determined to do something that she could brag about to the others, something that she wasn't aware of anyone having done in the dark room.\n\nShe dropped to her knees and sucked Dave's cock into her mouth. The taste of pussy told her where it had been. She worked her panties down her thighs as she sucked him, then to her ankles. After a few moments she stood again and turned as she guided her teacher's cock between her legs. She pushed back as he thrust at her and worked her way down his hard shaft. She rocked back and forth on his cock. She loved how it filled her. Then she decided it was time for the main part of her plan. She pulled herself forward and slid off of his cock. She'd prepared herself in the break between lessons. It wasn't exactly something that she could just do without some sort of forethought. She reached behind herself and grabbed hold of Dave's cock. She pulled him toward her and felt the head bump against her anus. She pushed back. \n\nIt felt huge, but she was determined. She pushed and held his cock as the head started to slide inside her lubricated anus. She gasped as it popped inside a little. She pushed again and felt him slip deeper. Big was barely the beginning of how she would have described how it felt; it could have split her in two. She held still for a moment before she resolutely pushed back again. The cock slipped further inside. Again she stopped and allowed her body to adjust. She felt Dave pull back a little and then push forward. She allowed his movement to slowly drive his cock deeper. It started to feel good.\n\nLucy rocked back and forth on her teacher's cock. It slid in and out of her anus and caused her to moan at the intensity. She felt him put his hands on her hips and he began to fuck her. He drove his cock in and out with long slow strokes. She heard him grunt when most of it was inside her. His pace quickened and Lucy resisted her need to squeal. She bit down hard on her lower lip as his cock slid back and forth. She slipped a hand between her legs and fingered her clit. Her orgasm came hard and fast. Her pussy convulsed and her anus grasped the hard cock within it. She felt Dave shove his cock deep inside her butt and then hold there. She sighed as the warmth of his seed flooded her ass. Spurt after spurt of warm cum filled her.\n\nThe cock withdrew and Lucy hurriedly pulled her panties back up her legs. She felt the cum seep from her ass into the cotton. Dave announced the restoration of lighting to the room and Lucy blinked as her eyes adjusted to the light with everyone else's. \n\n~~~~~~~\n\nDuring lunch she quietly mentioned the state of her underwear to Allison. \n\n\"So you're the lucky one,\" Allison sighed. \"He didn't even get near me today.\"\n\n\"Well I'm pretty sure that after he filled my ass with cum he wouldn't have wanted his cock going near anyone else,\" Lucy replied.\n\n\"Your ass? Holy fuck! You took that massive cock in your ass?\"",
        "\"Uh huh,\" Lucy laughed with a goofy grin, satisfied that she'd managed to surprise Allison, who seemed to be the most adventurous of her friends when it came to what she was prepared to do in the dark room.\n\n\"How? Like, didn't it like tear you in two?\" Allison asked.\n\n\"Well I made sure I was well prepared before I went in there,\" Lucy told her. \n\n\"Prepared?\" Allison asked.\n\n\"Yeah, with lube. I went to the toilets, lubed up my ass and used a marker to start stretching it open.\"\n\n\"Oh my God Lucy!\"\n\n\"What?\" Lucy laughed. \n\n\"I guess I just never expected that from you,\" Allison replied. \n\n\"Well maybe I just don't advertise so much,\" Lucy said. \n\n\"You really stuck a marker in your ass?\"\n\n\"Yeah. Haven't you ever played with your butt?\"\n\n\"Actually no,\" Allison replied.\n\n\"Really? It feels so good, you should try it.\"\n\n\"I dunno,\" Allison replied. \n\n\"Come on, I dare you, come with me,\" Lucy said. She enjoyed having her friend on the back foot. She took Allison's hand and dragged her to the nearest bathroom, happy that Allison wasn't reluctant. Once ensconced in the cubicle Lucy had Allison bend over the toilet and put her hands on the top of the cistern. She pulled her friend's panties down and flipped up her skirt to expose her. \n\n\"Mmm, you have such a pretty pussy Ally,\" Lucy purred as she stroked her fingers over her friend's bare pussy lips and teased at the inner lips that poked slightly from between the outer. She knelt down behind Allison and slipped a finger between Allison's hairless lips and pushed it deep. Allison pushed back against her and sighed pleasurably. \n\nLucy spent some time with her finger buried in the welcoming warmth before she withdrew it and used her tongue. Allison gasped in response to the contact. Lucy grinned to herself and then licked her tongue up toward Allison's asshole. She teased but didn't actually lick it. \n\n\"Let's lube this little baby up,\" Lucy whispered as she poked gently as Allison's anus with a finger. She took the tube that she'd brought to school from her bag along with a sharpie and then squirted some onto Allison's anus. She rubbed it around with her finger before pushing gently against the opening. She felt Allison flinch and urged her to relax. She kissed her butt cheek and pushed again. Her finger slid in to the first knuckle. She wiggled it around and pushed again. She felt Allison breathe carefully and then relax. As the muscle of her ass relaxed, Lucy pushed again and her finger slid wholly inside. She wiggled it around again. When she felt Allison push back against her finger, she knew it was time for the marker. She pulled her finger out and picked it up. It was a fat marker, nowhere near as big as Dave's cock, but certainly bigger than her finger. \n\n\"Ready?\" She asked when she had the curved end poised against Allison's anus.\n\n\"Yes,\" Allison gasped in reply.\n\nLucy pushed and watched her friend's ass swallow the marker. When she had it in a bit she pulled it back and then pushed it in again. Each time she worked it a bit deeper until it was buried. Then she started to rub Allison's clit with her other hand as she worked the marker back and forth. She loved the sight each time it disappeared into her friend's ass. \n\n\"Do you like that Ally?\" she asked quietly.\n\n\"Fuck yes,\" Allison groaned in reply.\n\nLucy continued to rub her friend's clit and work the marker in and out of her ass. She thought she had her close to orgasm when the bell for the next lesson went.\n\n\"Fuuuuck,\" Allison complained when Lucy quickly pulled the marker from her ass.\n\n\"Sorry,\" Lucy said, \"I have to be on time or Mr. Wrent is going to be so pissed. I was late twice last week.\"\n\n\"Its ok,\" Allison replied as she restored her uniform to rights. \n\n\"Tomorrow?\" Lucy asked. She had training after school and knew that she wouldn't get a chance to catch up with Allison until then.\n\n\"I guess so,\" Allison sighed. They both headed off to class.\n\n~~~~~~~\n\n\"So are we going to do it tonight?\" Allison asked Jo as they finished off their homework.\n\n\"Do what?\" Jo asked.\n\n\"Fuck Daddy together.\"\n\n\"Oh, that,\" Jo laughed.\n\n\"Of course that, it's all that I've been able to think about since we talked about it.\"\n\n\"That's the only thing you've thought about?\" Jo laughed.\n\n\"Well that and what Lucy did to me,\" Allison said with a cheeky grin.\n\n\"What Lucy did to you?\" Jo asked as her ears perked up.\n\n\"She um, fucked my ass with a big fat sharpie.\"\n\n\"Hang on, Lucy did that to you?\" Jo asked with surprise.\n\n\"Yeah, it was kind of hot actually. I mean I know you had your butt fingered and all, but this was much bigger than the finger. The only thing that sucked was that I didn't get to cum.\" Allison replied.\n\n\"Oh that does suck. I'm surprised that it was Lucy though. I mean if you had told me Sarah had done it to you I wouldn't have been surprised, but Lucy?\"\n\n\"Yeah, but that's not all. She told me she had your Dad's cock in her ass in the darkroom today.\"\n\n\"Holy crap!\"\n\n\"I know, I can't believe she can even walk!\" Allison said with a grin.\n\nJo returned her smile and pushed her friend back on the bed. \"Want me to finish what she started?\" she asked Allison. \n\n\"You know I do,\" Allison replied, sucking on the tongue that had been slipped into her mouth.\n\n\"You want to be my little anal slut hey?\" Jo giggled, rubbing her thigh firmly against Allison's crotch.\n\n\"Yes.\"\n\n\"Because you want Daddy to put his big fat cock in your dirty little ass, don't you?\"\n\nAllison nodded. \n\n\"Strip for me Sis,\" Jo demanded as she moved to allow Allison to stand. Allison all but leapt from the bed and shed her uniform. Jo watched. She salivated at the sight of her friend's exposed body and crushed her thighs together as she thought about the fun she would have with her.\n\nAllison returned to the bed and Jo told her that she wanted her on all fours, doggy style. She went to her dresser and picked up her smooth, wooden handled hairbrush and some lube. She ran her fingers over Allison's pussy. She teased her lips and dragged her fingers over them. She slipped one between them and when it was deep enough, pulled it out and drove a second in beside it. \n\nAllison dropped her head to the bed as Jo caressed her pussy and then teased her clit briefly. Jo grinned to herself and drizzled saliva over Allison's butt and then teased her anus with a finger. She felt Allison push back against her finger and worked it inside. She pushed it deep. Allison groaned in response. Jo worked the finger in and out until she was able to get a second finger in beside it. Once she could slide them both smoothly in and out she pulled them out and lubed up the handle of her hairbrush.\n\n\"Are you ready for Daddy to put his cock in your ass Sis?\" Jo whispered.\n\n\"Oh please. Please put it in my ass Daddy,\" Allison begged.\n\nJo pushed the hairbrush and watched the handle slip inside her friend's anus. The end of the handle was wide but tapered smoothly toward the brush. Once the 'head' of the handle slipped inside it was like the rest began to be sucked in. Jo pushed it deep. \n\n\"Fuck yes,\" Allison moaned. Jo worked the handle in and out. She loved the way Allison responded to the ass fucking. She moved a hand between her friend's legs and rubbed her clit. She moved her fingers in gentle circles on the excited little nub as she slid the hairbrush smoothly in and out of her ass.\n\n\"Faster,\" Allison gasped. Jo responded and increased the speed of her thrusts in and out of her friend's ass. She wrapped her fist around so that when she rammed the handle in her fist would slap up against Allison's perky ass cheeks.\n\n\"Yes Daddy, yes, fuck my ass,\" Allison demanded. \n\nJo worked Allison's clit hard as she fucked her friend's ass. It wasn't long until Allison screamed in ecstasy and exploded. \n\n\"I can't wait until Daddy gets home,\" Allison panted with a grin up at Jo.\n\n\"That makes two of us,\" Jo smiled at her.\n\n~~~~~~~\n\nDave walked into the house and found the two girls cooking dinner for him. He couldn't help but stare as he took in the fact that they both wore tight little lycra sport shorts and body-hugging t-shirts. The way their nipples speared at the tight t-shirts made it eminently clear that bras weren't part of their outfits.\n\n\"Hey Daddy,\" Jo said and turned toward him. Dave opened his arms to her when she came at him for a hug. He pulled her close and she held him tight. He was a little surprised when she very deliberately rubbed her body against him in front of Allison. He tried to negate his body's automatic response. He wasn't entirely successful.\n\n\"Yeah, welcome home ... Daddy,\" Allison said as if to echo Jo's statement as a joke. The look on her face said something else though and he found himself in a hug with her as Jo stepped back and laughed.\n\n\"Go get changed Daddy, we'll finish getting your dinner ready,\" Jo suggested as she turned back to the stove.\n\nDave left the room and went to change as suggested. His cock rose as his mind replayed images of their butts in their tight little shorts and how they had felt in his arms. Something was up. He knew that, but he didn't know what. He was both nervous and excited as he pondered what the two girls might have planned.\n\nWhen he returned down stairs, Allison handed him a beer. Her hand lingered on his arm, a light touch full of meaning. Dave wanted to say not there, not then, but didn't want to state it so blatantly in front of Jo. Regardless of what Jo knew, he simply couldn't bring himself to say anything in front of her.\n\nDinner passed pleasantly, though both girls filled the conversation with innuendo and suggestion. \n\n\"Do you want to watch a movie with us after dinner?\" Jo asked as the two girls cleared away the dishes. \n\n\"That sounds like a nice idea,\" Dave replied. He stood up from the table to help the girls. He filled the sink in order to wash up. The girls grabbed tea towels and loitered as they waited. As he stood at the sink and washed, each of the girls would take a dish to dry, but as they moved around the kitchen he'd feel them rub against him, or even more blatantly grab his butt. At one point Allison even reached around in front of him to stroke his semi-rigid cock. He flinched and quickly glanced to Jo, but she wasn't looking. That seemed to be the pattern. Whenever he'd look, it was clear that if Jo grabbed him Allison wasn't looking or vice versa. When they were finally done, Jo said that she needed to get the movie from her room and said that she'd meet Allison and her father in the living room. \n\nDave wiped his hands dry on a tea towel. As he turned to head toward the living room he found Allison plastered against him. She pressed her lips against his and her tongue sought entry to his mouth.\n\nDave kissed her in return. His tongue met hers and explored her mouth. She pressed herself hard against his body and his cock was crushed between them. Dave moaned as she ground against it, and then protested with disappointment when she quickly stepped away. He took in her grin and shook his head. Clearly he was being toyed with. He resigned himself to his fate, sure that at worst he'd likely be teased all night but hopefully be given relief before he was sent off to sleep.\n\nJo called out from the living room. Allison took his hand to lead him in. Jo turned and he saw her grin at him as she patted the seat on the couch beside her. He returned her smile and sat next to her. Allison sat on the other side of him. Jo pulled a blanket from beside her and offered it across him to Allison who pulled it across so that they were all covered.\n\nJo pushed the remote button and the movie started to play. Dave felt a hand on each thigh and his cock responded as the opening scenes began. He resisted the urge to say something when he realised that they were to watch Lost and Delirious. Even before anything happened on screen the thought of young schoolgirl lesbians had him hard. His focus on the movie didn't last long anyway as the girls took it in turns to tease him. A hand would linger on his crotch and grope and stroke. \n\nHe felt Jo nestle against him and draped an arm around her. Her hand took his and placed it on her breast. Dave glanced across to see if Allison had noticed, but her eyes were focussed on the screen. He felt Jo's hand squeeze his own, an encouragement to fondle her. He caressed his daughter's breast. Allison's hand stroked his cock. Hard didn't begin to describe his state.\n\nAfter a couple of minutes Allison's hand released him and he moved his free arm around her and rested his hand on her breast as well. His mind spun as he thought about the fact that he held Jo's breast with one hand and Allison's with the other. Jo's hand slid over his thigh to take up on where Allison had left his cock. \n\nDave waited for the girls to change their attention, to take things further, but they didn't seem to be in any hurry. Eventually Allison attacked the zipper of his shorts and freed his cock. He felt the warmth of her hand close around his shaft and stroke him. He instinctively groaned as his cock throbbed in response to the attention.\n\n\"You ok Daddy?\" Jo asked him.\n\n\"Oh yes,\" he replied. He didn't trust himself to say more. He felt Allison give him an extra firm squeeze. \n\nBy the time the closing credits rolled down the screen precum was oozing from his cock. Both girls at different times had used it to lubricate their hand as they stroked him. \n\n\"Did you enjoy the movie Daddy?\" Jo asked as he packed his cock back into his shorts. \n\n\"I did, did you girls?\"\n\n\"I sure did,\" Allison replied. He saw her finger go to her mouth and watched as she sucked it. His cock twitched as he watched. \n\n\"I did too,\" Jo replied. \"Its a pity its over really, I wanted more.\"\n\nAllison stood up from the couch and stretched. Her t-shirt rode up and exposed her belly and the movement thrust her breasts against it. Dave stared. \n\n\"God you look sexy Ally,\" Jo said, suddenly standing. She moved to stand in front of her father. He watched her eyes roam over her friend's body. \"Did you like seeing those girls kissing as much as I did Ally?\" \n\n\"Oh yes,\" Allison replied. \"I think your Dad enjoyed it too.\"\n\n\"Did you Daddy?\" Jo teased. \"Did it make you hard when those girls kissed each other?\"\n\n\"Jo...\" Dave started to respond. He stopped because the two girls began to kiss. It wasn't a tentative kiss. It was far from exploratory and clearly not the first time they had done it. He saw their hands roam and touch and squeeze. He was tempted to pull his cock out and take matters into his own hands, but was too enraptured to go through with it. Not for the first time that day he wondered what Allison might know about his relationship with Jo. \n\n\"Know what I think he liked even more than seeing them kiss Ally?\"\n\n\"What?\" Allison asked.\n\n\"Seeing their tits. I still remember how he looked at you all during the pool party. I think Dad really likes looking at tits.\"\n\n\"You think?\" Allison giggled as she glanced down at Dave. \n\nJo grabbed Allison's t-shirt and dragged it up over her friend's head to reveal her firm tits. \n\n\"Aren't they sexy Daddy?\" Jo asked, taking Allison's breasts in her hands. She squeezed them and then tweaked her pale nipples. Before Dave could even consider a response he saw his daughter bend her head to take one in her mouth.\n\n\"Fuck that feels good,\" Allison said.\n\nDave met her gaze over the top of Jo's head. \"Want to suck one ... Daddy?\" \n\nJo stopped sucking.\n\n\"Come on Daddy, suck Allison's nipple with me\n\n\"I really need it sucked Daddy,\" Allison said. She pulled and twisted it\n\nDave stood. His cock strained at his pants. Jo stepped aside enough for Allison to offer him her breast. Dave slipped his hand around Allison and rested his palm on the small of her back. He eyed the nipple, stiff with excitement and then captured it in his mouth. He sucked it deep and flicked his tongue back and forth across it. Allison moaned and then Jo was beside him.\n\n\"Oh fuck I love this,\" Allison purred as father and daughter each sucked one of her nipples. Dave worked a hand between her legs and rubbed her tight lycra shorts against her crotch. He could feel the heat of her loins as her legs parted to accommodate the attention.\n\n\"I need to lie down or something,\" Allison moaned.\n\nDave and Jo each stepped away. Allison stood topless before them, her pale nipples swollen with excitement, her face flushed. She pushed her lycra shorts down to her knees, then bent and stepped out of them. \n\nDave watched as she sat down on the floor. She lay back on her elbows and spread her legs.\n\n\"Fuck me Daddy?\"\n\n\"Go on Daddy. Fuck her,\" Jo said. \"I want to watch you fuck her.\"\n\n\"Really?\" Dave asked, his surprise genuine.\n\n\"Yes Daddy, I want to watch you slide your cock into her pussy. I want to see you fuck her like she's my sister.\"\n\n\"Come on Daddy, fuck me hard,\" Allison begged.\n\nJo stepped in close to her father and kissed him. He felt her tongue dip into his mouth.\n\n\"That's so fucking hot,\" Allison moaned from the floor. \n\n\"That's nothing,\" he heard Jo say when she stepped back and dropped to her knees. \n\nDave's shorts were quickly stripped from him and his rock hard erection sprang free. Jo seized it and sucked the head into her mouth. Dave stared. He didn't think he'd ever tire of the sight of his daughter's lips on his cock. Apparently it turned Allison on as well as she had moved from her preparatory position on the floor to kneel next to Jo.\n\n\"I can't believe how hot it is to see you do that to your Dad,\" she purred.\n\n\"Share with me Ally,\" Jo said and held her father's cock for her friend to suck.\n\nDave watched Allison lick her lips and then take him in her mouth. He felt her tongue swirl around the head before her lips glided down his shaft. She sucked up and down as much of his cock as she could.\n\nJo's hand closed over his balls. She cupped them and squeezed. Dave groaned again. Allison sucked her way back up his cock and offered it back to Jo who took over. \n\n\"If you don't stop I'm going to cum,\" Dave moaned after minutes more of their doubled attention.\n\n\"Not before you fuck me,\" Allison answered. The girls abandoned his cock and Allison lay herself back down on the floor. \n\nDave needed no further encouragement. He knelt between her legs and guided the head of his cock to her soaked opening. Her lips were already swollen with arousal and it took little effort to drive his cock between them.\n\nThey voiced their pleasure together. Dave slid back and forth in Allison's tight pussy. He held himself over her and thrust with his hips. He groaned again when he saw Jo kneel beside them. She tugged her own t-shirt off and kissed first Dave and then Allison.\n\nDave knew he was only going to last moments longer and quickened his pace.\n\n\"Wait, not yet,\" Jo said. \"I want to suck it.\"\n\nDave sat back on his heels. His cock glistened under the flickering light of the TV and both he and Allison watched, enraptured as Jo bent her head and took him in her mouth, slick with Allison's pleasure. Jo sucked him clean of her friend's juices and then told him to fill her. \n\nDave drove his cock back into Allison's pussy and thrust hard and fast. Moments later he exploded. Allison panted beneath him, hips thrusting to try and extend the pleasure. \n\nJo kissed both of them in turn. \n\n\"I need to move,\" Dave advised Allison as he continued to hold himself over her. \n\nAllison moaned in disappointment but did nothing to stop him. Dave rolled to the side then watched in amazement as Jo moved between Allison's legs. \n\n\"Allison thinks it would be really hot if I kissed her after you came in her mouth, but I think she's going to explode big time when I lick her now that you've filled her with cum.\" \n\nDave stared, amazed. Jo lowered her face to her friend's pussy and did exactly as she'd suggested. She used her fingers to part Allison's lips and then dragged her tongue between her lips and up over her clit. He watched Allison prop herself up to take in the sight of Jo between her legs and then lay back down again, eyes almost glazed over with pleasure. ",
        "Minutes later Allison came hard. She squealed with pleasure. Her torso shook and her thighs clamped against Jo's head. Dave found his own breathing had quickened and his cock hardened as he'd watched. \n\nWhen Allison relaxed her legs enough for Jo to move, Jo slithered up her friend's body and kissed her. \n\n\"Daddy's all hard again,\" Allison said to Jo when the kiss broke apart. \"I want to see you with your Dad's cock in your pussy. Will you fuck him for me Jo? Can I watch you fuck Daddy?\"\n\nDave looked from one girl to the other. Despite what had happened thus far, he was incredulous. He heard the words out loud and was reminded of just how wrong it was, but it also turned him on. He wanted it. When he looked at Jo and saw pure lust in her eyes, he knew that she wanted it too. \n\n\"Fuck her Daddy,\" Allison purred. \"Fuck her like you fucked me.\" She moved to where Jo sat on the floor and pushed her onto her back. She kissed her hard and then moved down her body. She paused at Jo's tits and sucked first one, then the other. Then she moved lower. She peeled Jo's lycra shorts down her legs. Dave noted the signs of Jo's arousal on the crotch. It was wet and creamy. He gasped when Allison pulled them off, brought them to her face and licked.\n\n\"Fuck, I feel so kinky tonight,\" Allison giggled as before her tongue flicked back and forth through the cream in Jo's pants.\n\n\"That's because you fucking are,\" Jo laughed. Allison responded by tossing the shorts aside and running her fingers over Jo's pussy. She stroked the bare skin and then plunged two fingers into the well-prepared hole. Jo arched her back and groaned in response. \n\n\"Put your cock in her mouth,\" Allison told Dave.\n\nDave looked to Jo to confirm that she was okay with it. A slight nod gave him permission and he went and knelt beside her head. Jo's hand grabbed and stroked him before he was pulled within range of her lips. Once again he marvelled at the sight as his erect cock disappeared into Jo's mouth. \n\nAllison worked her two fingers in and out of Jo's pussy then pulled them out and sucked them clean. Then she lowered her mouth and used her tongue and continued to build Jo's pleasure.\n\n\"She's getting me ready for you Dad,\" Jo mumbled around her mouthful of cock. \"Does it turn you on that my sister is prepping my pussy while I suck your cock? Does it excite you that you're going to fuck me in front of her? It turns me on so much. At first I was jealous when I realised Allison was here. I knew you were fucking her and thought that meant that I'd miss out, but this is so much better.\"\n\n\"Oh fuck,\" Dave replied, incapable of a more articulate response.\n\n\"Fuck her Daddy,\" Allison said as she came up for air. \"Your daughter's pussy is so ready for you now. Look how wet it is.\" Her fingers teased at Jo's lips. She wiped the juices over Jo's bald labia. Dave glanced at Jo and saw only acceptance and desire. He moved between her legs as Allison made room for him. He went to aim his cock but Allison took control. She steered him toward his target and watched intently as the tip came to rest against Jo's entrance. Dave pushed. The head of his cock slipped into Jo's pussy. Three moans echoed through the room. He pulled back and pushed in deeper, then repeated the process until he was buried within her. \n\n\"Oh my God, you're really fucking her,\" Allison cooed. She didn't sound shocked. She sounded excited. She panted as Dave started to fuck Jo properly. As he had when he'd fucked Ally, he held himself over her and slid his cock in and out with long smooth strokes.\n\nAllison kissed Jo, then sucked on her tits. Jo moaned and Dave felt her thrust her hips to meet him as he drove inside her. He quickened his pace as he fucked her and Allison moved around them. She touched them when and where it suited her. \n\n\"I want to roll over,\" Jo announced breathlessly after they'd fucked for a while. Dave moved and repositioned himself once Jo was on her hands and knees. Once again Allison grabbed his cock to guide him in. Dave took Jo by the hips and pushed hard so that he slid deep inside. He was close to cumming again and the room was soon filled with the noise of them fucking.\n\nAllison wasn't about to be left out and wiggled her way beneath her friend's body. Dave couldn't see what she was doing, but there was little doubt in his mind once Jo started squirming even as he fucked her. \n\n\"You like that, don't you Jo? A cock in your pussy and a tongue on your clit?\" he asked.\n\n\"Fuck yes Daddy, its awesome,\" Jo cried out in response. Dave watched his cock slide in and out over and over. He stared down at the junction of their bodies and at the puckered little hole above where they were joined. He allowed saliva to run from his mouth and drip down over her anus, and then pushed his finger inside.\n\n\"Oooo he's fingering my ass Ally! Daddy is poking my dirty little butt. Ally wants your cock in hers Daddy. She's an anal virgin and she wants you to take it from her.\"\n\nDave thrust deep in his daughter's pussy and lost his load. \n\n\"I think he liked the thought of that Ally,\" Jo giggled as she felt her father's cock spurting deep in her pussy.\n\n\"He's not the only one,\" Allison giggled from beneath her friend.\n\n\"Well you're going to have to wait,\" Dave panted, his cock slowly losing its hardness inside Jo.\n\n\"Oh that's ok Daddy, we've got all night to get you hard again,\" Allison suggested.\n\n\"Speak for yourself, some of us can't go all night anymore,\" Dave lamented.\n\n\"Well I'm sure you'll manage one more, Dad,\" Jo suggested. \"You know when Allison wants something its going to happen.\"\n\n\"Yes, I have sort of noticed that,\" he laughed in return. His flagging erection slipped from Jo's pussy and Allison squealed as cum seeped out and dripped onto her face. \n\nJo rolled off of her friend and laughed.\n\n\"Huh, its not funny,\" Allison pouted.\n\n\"Come on, we can wash you off in the shower,\" Jo said and helped her friend to her feet. \"Coming Daddy?\"\n\n\"Seems likely to be the best thing going to happen in the house in the next half hour, so why not.\"\n\nThe shower went a lot longer than Dave would normally have approved of and the space was crowded with the three of them in there, but the proximity of the two girls bodies and their ready touch more than made up for the excess water use and he emerged from the shower hard.\n\n\"Ohhh, looks like I might get my butt fucked after all,\" Allison teased as she grabbed him and pulled him toward the bed. \n\n\"So eager!\" Jo teased her friend.\n\n\"Yeah, well the hair brush felt good, but I'm sure that Daddy's big cock will be even better!\"\n\n\"Hairbrush?\" Dave asked.\n\n\"Yeah, well I kind of experimented with her butt a bit,\" Jo said with a blush.\n\nDave's cock twitched at the thought and Allison giggled. \"You like the thought of a hairbrush in my ass do you Daddy?\" she teased as she stroked him. \"Do you want to watch Jo slide the handle of her brush in my naughty little ass? Would you like to have her prep me for you? Get me ready to take this big fat cock in my tight anus?\"\n\n\"God yes,\" Dave replied. He shook his head at how happily Jo skipped off to her bedroom. As she left the room, he took Allison's hand then pushed her back on the bed. He knelt at the foot and parted her legs. Allison grinned down over her body at him as he buried his tongue in between her sweet lips and devoured her.\n\nHe heard Jo return and gave Allison a final lick along the length of her slit, then stood again. \n\n\"Damn, I didn't want that to stop,\" Allison said with a sigh.\n\n\"Oh I'm sure you'll be fine with it once Daddy's cock is in your ass,\" Jo told her.\n\n\"Good point!\"\n\nAllison rolled over onto her stomach and then raised herself onto her hands and knees. Jo waggled her hairbrush at her father. She climbed onto the bed and knelt beside her.\n\n\"Hold her open Daddy.\"\n\nDave pulled Allison's butt cheeks apart and Jo squirted lube over the tight, puckered little hole. She worked it into Allison's anus with her finger then told her father to have a turn.\n\nDave released Allison's butt cheeks and Jo spread them for him. He worked a finger into the young girl's ass as she encouraged him to push it deeper. With Jo encouraging him he soon worked a second in so that she'd be prepared for the brush handle. He heard Allison sigh with disappointment when he pulled them out.\n\nJo rubbed the end of the brush handle against the tight little hole and he saw Allison push back eagerly. He stared in fascination as the smooth wooden handle slipped into her anus. Allison mewed eagerly as Jo pushed it deep and then pulled it back again. She pulled until the widest part of the handle was at the entrance and then slid it back in again.\n\n\"Does it make you hard watching me get my ass fucked Daddy?\" Allison moaned, her head down on the bed. \n\n\"God yes,\" Dave replied.\n\n\"Let me suck you while she does it to me Daddy,\" Allison suggested.\n\nDave moved so that he knelt in front of her, his cock once again rock hard.\n\n\"God you're cock is awesome,\" Allison said happily as she wrapped her hand around the base and lowered her mouth over the head. \n\n\"So is every part of you,\" Dave moaned in response. He stared over Allison's body as Jo slid the handle in and out of her ass. Before long he thrust at Allison's mouth desperately. The sight of his daughter thrusting the handle of the brush into her ass drove him wild. \n\nAfter a few desperate thrusts, Allison withdrew her mouth from his cock. Saliva strung from her lips to the head of his cock. \n\n\"Put it in my ass Daddy,\" she demanded. Dave groaned. \n\n\"Come on Daddy, fuck her ass with your big cock,\" Jo cooed. Dave moved from the bed to position himself behind Allison. Jo moved out of the way but left the hairbrush buried in Allison's ass. Dave grasped the bristles and pulled. He watched intently as it slowly slipped from her back passage. He moved to position his cock head at her puckered hole and Jo grabbed him and squirted lube over his shaft. Her hand stroked him and smeared it all over. \n\nWhen she released him, Dave used one hand to position himself then pushed as the head of his cock pressed against Allison's little starfish. It slipped inside and he groaned at how tight she was. \n\nAllison voiced her pleasure as her ass was spread even further. Dave pushed again and the first inch of his cock eased inside. \n\n\"Oh fuck, it's so big!\" Allison cried out, hands thrust in front of her on the bed.\n\n\"Isn't it awesome?\" Jo asked, her eyes fixed on the point where her father's cock penetrated her friend's ass.\n\n\"Fuck yes,\" Allison replied. \n\nDave pulled back then pushed again and eased deeper inside. He repeated the move again and again until almost all of his cock was seated deep within Allison's ass. Then he fucked her. He grabbed her hips and slid his cock in and out. Allison wailed her pleasure. Jo played with her tits and teased her nipples as Allison pushed back against the member that invaded her butt. \n\n\"Daddy's cock feels good in your ass, doesn't it Ally?\" Jo asked.\n\n\"Yes, yes, it feels amazing,\" Allison moaned.\n\n\"You want him to fill your dirty little butt with a load of hot sticky cum don't you?\"\n\n\"Oh God yes.\"\n\n\"Tell him what you want Ally, he needs to hear it,\" Jo hissed. She worked her clit hard with one hand as she instructed her friend.\n\n\"I want your cum in my ass Daddy! I want it full of hot, sticky, dirty cum!\" Allison wailed as Dave responded with an increased thrust rate. \n\n\"Give it to me Daddy, give me your cum!\"\n\nDave thrust deep and exploded. Allison screamed. He felt her ass convulse on his cock as she came in response to his orgasm. Allison fell away from him and collapsed on the bed. His cock slipped from her anus and he watched as his seed seeped from it.\n\n\"God that was hot,\" Jo said. She pulled her father to her and kissed him. Dave felt his daughter's tongue thrust deep in his mouth and kissed her back with the same energy. Allison rolled over to watch. \n\n\"Fuck I love watching you two together,\" she sighed. \"I wish I lived here full time.\"\n\n\"Well maybe I'll let you spend the night with him,\" Jo suggested. \n\n\"Oh that would be awesome,\" Allison said. \"Are you sure you don't mind?\"\n\n\"It's fine. I've never actually slept in his bed anyway. I like to fuck and run.\"\n\n\"You don't have to though,\" Dave said to his daughter.\n\n\"I know, but for some reason, that's the line I like to draw.\"\n\nDave smiled at her and gave her a hug, her breasts crushed against him. \n\n\"Right, well I need another shower before bed,\" Allison said as she clambered from the bed, one hand clutched to her butt. Jo giggled as she watched her friend scramble into the bathroom. Dave followed and cast an enquiring glance over his shoulder to Jo to see if she too would join them again. He saw Jo smile and move to follow. \n\n~~~~~~~\n\n\"So, tomorrow's our last ever lesson in the dark room,\" Allison sighed. \n\n\"Yeah, that's true,\" Sarah replied.\n\n\"Are we going to go out with a bang?\" Sylvia asked her friends.\n\n\"God, what could you possibly do that you haven't already?\" Jo asked with feigned disgust.\n\n\"Strip you naked and point your father at you?\" Allison giggled. \n\nJo glared at her friend.\n\n\"Ally!\" Sylvia declared, clearly shocked by the suggestion.\n\n\"Don't worry, its just a joke,\" Ally laughed.\n\n\"Kind of hot though,\" Sarah mused.\n\n\"Sarah!\" Jo shouted.\n\n\"It kind of is in a freaky, dirty kind of way,\" Lucy chimed in.\n\n\"You are all fucking disgusting,\" Jo accused them.\n\n\"And you love us. After all, who'd give you all those lovely orgasms if it wasn't for us?\" Sarah laughed at her.\n\n\"Humph,\" Jo shrugged, unable to find a witty response.\n\n\"Seriously though, what are we going to do? It should be something epic,\" Sylvia prompted. \n\n\"I have an idea,\" Lucy said. \"I'm not sure if its epic, but it should at least be fun.\"\n\n~~~~~~~\n\n\"So are you going to tell us why we're all in here?\" Sylvia asked.\n\n\"Well, I thought of something that might add to the fun a bit,\" Ally replied. She dug around in her school bag until she found what she sought. She brandished it proudly to her friends.\n\n\"What is it?\" Sylvia asked at the same time Sarah laughed.\n\n\"A butt plug!\" Ally said. As it turned in her hand, the jewelled end sparkled in the light. She reached into her bag again and pulled out more of the plugs. \"I got us one each, even you Jo.\"\n\n\"How thoughtful,\" Jo laughed, \"I'm surprised you went with metal ones, what's wrong with silicon?\" \n\n\"These are prettier. See, I even got us each our favourite colours! Ok, panties down and bend over everyone,\" Ally commanded. \n\nSarah and Jo reached under their dresses and wiggled their panties down and bent over.\n\n\"Come on Sylvia it will be fun,\" Sarah told her girlfriend.\n\n\"Yeah, come on, you too Lucy,\" Jo said. \n\nThe two girls hesitated, clearly unsure. The other three girls egged them on until they gave in and agreed to participate. \n\nAlly produced some lube and one after the other slid a plug into her friends' bums. \n\n\"Ok, who's going to do me?\" She asked, holding up the last one as her friends all pulled their panties back on. There was a bit of wiggling as they adjusted to the toys.\n\n\"Me!\" Sarah and Jo said at the same time.\n\n\"You do it,\" Jo suggested.\n\n\"Naah, we get to have all the fun in the dark room, you do it to her,\" Sarah told her. \n\nJo grinned and took the butt plug from Allison, who slipped her panties down and bent over. Jo lubed up the butt plug and parted her friend's cheeks. She poked the end of the plug against her asshole and wiggled, then pushed. She watched as Ally's sphincter parted around the stainless steel. She pushed harder until it spread around the widest diameter and then popped inside. \n\n~~~~~~~\n\n\"Ok girls, last time ever. I'm turning off the lights,\" Dave announced. He heard them all move around and waited for the shuffling to stop. None of the girls had even brought a camera of film into the dark room, their intent clear. It ensured that he was hard from anticipation before he'd even turned off the light. \n\nHe was just about to move down the line of the bench when Lucy spoke.\n\n\"Excuse me sir, but I've been really naughty, I need to be punished. Spank me? Please?\"\n\n\"Um, sorry?\" he asked as he struggled to process what he'd heard.\n\n\"I need to be spanked please sir,\" Lucy said. He heard some snickers from deeper in the lab. He felt a hand touch him in the dark. He assumed it was Lucy's. It found its way to his hand and guided it. He felt her ass. The hand holding his guided him. It took his hand away from her bum and then back down against the cheek. It wasn't hard and barely made a sound, but indicated exactly what was wanted. The pressure that held his hand was released and he experimented with a light smack on Lucy's bottom. \n\n\"Harder Sir. I've been really bad,\" Lucy said. \n\nHe hit her harder. \n\n\"Like you mean it Sir,\" she purred in the dark. \"I've been so bad. I even sucked a teacher's cock Sir.\"\n\nDave's cock twitched in his pants at the statement. Even though he knew all about it, it was an incredible turn on. He hit her again, harder, the sound of the smack ringing in the small space. \n\n\"She even fucked him Sir,\" Ally said from beside them and Dave smacked her again. He felt her flinch under each impact, but he also heard her moan. After the next smack his hand lingered and stroked her panty clad ass. The panties shifted and were pulled down. He smacked her bare skin. \n\n\"I've been naughty too Sir. You need to spank me too,\" Ally said from beside him. He felt her hands on his chest even as he smacked Lucy one more time.\n\n\"And me Sir,\" he heard Sylvia say from deeper in the room.\n\n\"And me,\" Sarah chimed in.\n\n\"I've been naughty too Daddy,\" Jo said.\n\nHe heard the girls all gasp at that and his cock pulsed.\n\n\"So you'll have to spank all of us,\" Allison added and pulled him toward her. He reached for her ass blindly and found it devoid of panties. He placed one hand on a bare butt cheek to orientate himself and then swung his other hand until it connected in the dark. \n\n*Smack*\n\n\"Ohhh!\" Allison moaned. \"I've been naughtier than that Sir.\"\n\nHe spanked her harder and then hit her again. His palm stung with the impact but Allison made no complaint. He imagined how red her ass would be, imagined a perfect bright pink handprint on her pale skin. He hit her several more times until Sylvia suggested that it was time for her punishment. He felt Allison turn from the bench and envelope him in a hug before he could move.\n\n\"That made me so fucking wet. I bet my ass is like totally glowing now Daddy,\" she whispered huskily in his ear.\n\nShe released him and he moved along the line, feeling for Sylvia in the dark. HIs hand closed over her butt. Her skirt had been lifted out the way and he felt the strip of her thong as it disappeared between the cleft of her butt cheeks. He started in surprise when he realised that there was something under the material. Before he spanked her, he probed with his fingers and felt the shape of the head of a plug. He tugged it a little and drew a gasp of pleasure from Sylvia as he threatened to pull it out. \n\nInstead he slapped her butt cheek. He started gentle as he had with the others. \"Harder?\" he asked.\n\n\"Yes please Sir,\" Sylvia replied. \n\nHe hit her again and increased the force of his strike. He repeated the process several times until she said no. He remembered what Allison had said about how wet it had made her and after spanking her a dozen times, ran his fingers down between her legs and pressed the crotch of her thong against her pussy. It was indeed wet and he could feel the heat of her pussy. She moaned at the pressure, but Sarah told him she needed to be punished. \n\nHe moved on. Before he spanked her he ran his fingers over her bum and then between them, curious. He found the butt plug and wasn't sure whether he was actually surprised or not. He wondered if Allison and Lucy had also had plugs in their asses. He decided that it was highly likely. ",
        "He began to spank Sarah and was stunned at how hard she demanded it. His hand truly stung after only 6 spanks and he moved so that he could swap hands. As he had with Sylvia, when he was done he reached between her legs and felt the dampness of her panties. \n\nThen it was Jo's turn. He was already rock hard, but there was something about the fact that he knew it was her even though he couldn't see her. That and all the other girls would clearly know what was going on. \n\n\"I've been really bad Daddy,\" Jo said loud enough for everyone to hear. He positioned himself behind her. His fingers explored and found her butt plug. They didn't find underwear. His heart thumped in his chest and his cock strained to break free of his pants. \n\n*Smack*\n\nHis hand hit his daughter's ass. Gasps echoed through the dark room. \n\n\"I've been MUCH naughtier than that Daddy.\"\n\n*Smack!*\n\n\"I've been making out with girls Daddy.\"\n\n*Smack!*\n\n\"I've had sex with girls Daddy.*\n\n*Smack! Smack!*\n\nEven though Dave knew all about his daughter's antics, hearing her confess in the pitch-black room and knowing that her friends were listening heightened his excitement.\n\n\"Fuck I wish I could see this,\" Sarah muttered from beside them.\n\nShocked gasps muttered around the room as the light switch was thrown and they all tried to come to terms with the sudden brightness. \n\n\"Sorry,\" Allison said, \"But I'm with Sarah, I so want to see this.\"\n\nFour sets of eyes turned to where Jo was stretched out over the bench, her cotton panties stretched across her thighs, ass exposed. The light reflected off the end of the blue jewelled butt plug nestled between her cheeks, the right of which glowed pink.  \n\n\"Spank her,\" Sarah purred. \n\n*Smack*\n\n\"Harder!\" Allison demanded. Dave looked at the faces of the other girls as he hit Jo's ass harder again. Jo cried out and the other girls in the room echoed her cry, though theirs were more cries of lust and arousal. \n\n\"Take her over your knee,\" Sarah suggested and nodded to the solitary chair at the end of the long narrow room,\n\n\"Oh yes Daddy, please,\" Jo begged, the idea lighting a fire within her. \n\nDave moved to the chair and took on the role the girls demanded.\n\n\"Over my knee young lady,\" he instructed. \n\nJo walked the couple of small steps toward him and draped herself over her father's knee. He'd never punished her like this in his life and that only made it more appealing. He could feel his cock pressed against her as he flipped her skirt up to expose her again, her ass pointed back toward her friends.\n\n*Smack*\n\nJo's four friends moved closer and crowded around. Dave glanced from his daughter's glowing butt to the four girls. Allison stood and fingered herself shamelessly as she watched. Sarah and Sylvia stood side by side, Sarah's hand clearly busy behind the Asian girl, but out of Dave's sight. Lucy stood watching, her bottom lip caught between her teeth as she watched. \n\n*Smack*\n\n*Smack*\n\n\"Does it make you wet Jo?\" Ally asked. \"Does your Daddy spanking your ass like the naughty little bitch you are make your pussy quiver?\" \n\n\"Fuck yes,\" Jo replied even as her father's hand impacted her fair skin again.\n\n\"I want to suck you Sir,\" Lucy said.\n\n\"We all want to suck you Sir,\" Allison said. \n\n\"And feel your big hard cock in our cunts,\" Sarah added. \n\n\"Especially that,\" Sylvia agreed. \n\n\"Its ok Daddy, I said they could,\" Jo said from over his knee.\n\n\"We want to give you a helicopter,\" Lucy told him.\n\n\"A what?\"\n\n\"A helicopter. We all kneel down around you and you turn around like a helicopter. When that delicious cock points at us we get to suck it.\"\n\nDave stared as four schoolgirls all knelt around him as best they could in the confined space. Allison attacked his pants. Jo moved away, back toward the door and the light switch. Allison grabbed his cock and leaned in. Her mouth swallowed as much of his cock as she could and sucked up and down for several seconds before Sarah started to turn him. Allison moaned with disappointment as she was forced to release him. \n\nFor the next five minutes, as Dave periodically turned, each girl took him in their mouth and sucked him. He was conscious of Jo who watched the entire time. Whenever he faced Lucy and Allison he would stare over their heads to where she stood. There was no doubt in his mind that what she saw turned her on. She teased him and played with herself. Sometimes she'd face him and flash her pussy or finger it. Other times she'd have her blouse pulled up over her tits as she teased her tight nipples. She even turned and played with her butt plug at one point. He wanted to stride over and fuck her. He wanted to claim her in front of her friends. He settled for fucking her friend's mouths as she watched. He knew he'd have his chance to bury himself in her tight pussy at home. \n\n\"I think it's high time for the fucking to begin,\" Allison announced as Dave turned from her to sink his cock into Sarah's mouth. Sarah bobbed up and down his cock a couple of times before she released him and agreed. Dave watched as four school girls lined up along the bench, bent over and flipped up their skirts to reveal their butts, some covered with panties, some bare. As if choreographed, the girls all reached behind themselves and parted their cheeks to reveal their glittering butt plugs; green, red, pink and yellow. Dave groaned.\n\n\"Come on Sir, we all need your cock in our pussies,\" Lucy said. She was the closest to him. He stepped in behind her and sank his cock into her. He felt her push back and grabbed her hips. He was conscious of the other girls watching him and fucked Lucy with long, smooth strokes of his cock.\n\n\"My turn Sir,\" Sarah demanded after some interval that Dave had no track of. He slipped from Lucy's pussy and moved to Sarah. \n\n\"Wait Sir,\" Lucy said before he was able to continue his journey. He turned back to find out what issue there might be. Lucy bent her head and quickly sucked him. \"Now its nice and clean for her.\"\n\nDave turned back to Sarah and guided his cock between her swollen pussy lips. He stared at the red head's freckled back, admiring the arch, the slim curve of her hips. On impulse he took her red ponytail in one hand and placed the other on her hip and fucked her. The slap of their bodies crashing together echoed through the room. \n\n\"That looks fucking hot,\" Allison announced from her position at the end of the line. \n\n\"God yes,\" Lucy agreed. Dave looked back to the last girl that he'd fucked and saw that she'd hopped up onto the bench. She had her legs spread and her fingers were busy between them. \n\n\"Hey, we know you can't cum for all of us, but that doesn't mean we don't get off,\" she said with a grin. He continued to pump is cock in and out of Sarah's pussy. He found the sight of her lips intoxicating as they clung to him every time he pulled out. She pushed back against every thrust. \n\n\"Don't finish him,\" Sylvia almost pleaded as he continued to impale her. \n\n\"I wouldn't do that to you sweetie,\" Sarah moaned, pushing Dave away. \"Time to fuck my girlfriend Sir.\"\n\nSylvia gave him a strangely shy look at the statement, but still turned and bent herself over the desk. No one made any move to stop him and so he plunged into the young Asian girl's pussy. He glanced down at the green butt plug and wanted to play with it, but he was already struggling with his arousal. He was close to the end and knew that he wouldn't be forgiven if he failed to fuck Allison. \n\nAllison clambered up onto the bench next to where Sylvia was bent over. She spread her legs and started to play with herself. \n\n\"I need to make sure its nice and wet for you Sir,\" she said to Dave and licked her lips. Dave switched his gaze back and forth between Allison as she fingered herself and the sight of his cock as it plunged into Sylvia's pussy. When he felt his orgasm become imminent, he pulled entirely out of Sylvia. He gasped and grabbed the base of his cock to forestall his explosion.\n\n\"So close?\" Allison asked. She reached leaned back further on the bench and pulled her right leg up toward her chest then spread so that the butt plug was clearly visible. Then she grabbed hold of it and pulled slowly. The plug stretched her ring until it popped out and left her agape. Dave stared and Allison grinned at him before she jammed the plug back in. \n\n\"Come on Sir, you need to fuck me,\" Allison insisted. Dave stepped between her legs and drove his cock inside. \"Fuck that's so good. Don't worry if you cum, I'll be fine.\"\n\nDave just grunted a response. The girls watched him fuck Allison but just when he was ready to explode, Jo flicked the light switch off. Dave was left with an after-image impression of Allison laid out on the bench before him as he speared inside. He thrust into her again, but felt hands on his hips. They pulled him back. He went with them, not quite sure what was happening. Then he was turned toward the door and a mouth swallowed his cock. \n\nHe knew it was Jo. He lost control almost immediately. He exploded down her throat as the girls lamented the fact that they couldn't see his explosion. When his final pulse ended, Jo stood from the floor and moved in front of him. He had no idea what she did, but when the lights came back on, he saw cum drip down Allison's pussy. \n\n\"No fair, I wanted to see that!\" Lucy protested as the girls crowded around and saw the cum on Allison. \n\n\"I wanted to wear it,\" Sarah complained.\n\n\"Well you can always eat it if you like,\" Allison suggested. Sarah grinned in response and moved quickly between Allison's legs. She slurped at the cum and then buried her tongue in her friend's pussy as the others looked on. \n\n\"That looks like fun, doesn't it Sylvia?\" Jo asked. \n\n\"What the licking, or the being licked?\" Sylvia laughed in response.\n\n\"Both!\" Lucy said. \n\n\"Which would you prefer?\" Jo asked Sylvia.\n\n\"Right now, being licked,\" Sylvia purred.\n\n\"Then let me lick you.\"\n\nSylvia climbed up next to the blonde haired Allison and Jo knelt between her legs. \n\n\"Feeling left out?\" Dave asked Lucy.\n\nLucy smiled at him. \"Not if you're offering what I think you are.\"\n\n\"Get up there with them,\" Dave told her. Lucy wasted no time and mounted the bench. She spread her legs and Dave joined those on their knees. He drove his tongue into Lucy's pussy. He worked his tongue with every trick he knew and took pleasure in the mewls and gasps that escaped her mouth as he ate her. Similar sounds echoed down the narrow confines of the lab as Sylvia and Allison enjoyed their pleasure in turn. \n\nSylvia was the first to cum. She all but thrashed on the bench top as her thighs clamped around Jo's head. Her hands tangled in Jo's hair. Allison came a minute later. \n\nDave continued to work Lucy. He played her pussy with care and attention, like an instrument until she all but sung with the explosion of her orgasm.\n\n\"Everyone change,\" Sarah demanded after she'd given her three friends a little time to recover. \"I want your tongue in me Sir.\"\n\nNo one protested and Dave knelt between Sarah's pale thighs. He was barely aware of the others as they changed places. Jo sat herself beside Sarah and Sylvia moved between her legs. Lucy and Allison looked to each other, both of them having just been on the receiving end.\n\n\"Rock Paper scissors?\" Allison suggested. \n\n\"Just get up there, I'm fine for now,\" Lucy told her. Allison grinned and spread her legs for her friend. Lucy happily knelt to administer the pleasure. After several minutes Lucy stopped. Allison sighed with disappointment and looked to see why. Lucy just winked at her and moved quickly to the light switch. She plunged them into darkness again. \n\nDave blinked in surprised as he was robbed of his vision, but recovered quickly to continue. He had a good enough memory to provide mental images of the beauty of Sarah's pussy, especially the colour of the minimal hair that adorned it. When Sarah's hands pulled at his hair and he felt her body convulse before him, he knew he'd succeeded.\n\nNot long after that the other two girls made it very clear that they too had cum.\n\n\"Ok girls, everyone up on the bench, legs spread,\" Jo called out. \"Dad, you're going to fuck them all one last time.\" \n\nThe room echoed with the sounds of movement as the four girls all took up position on the bench again.\n\nDave moved to the far end of the room and positioned himself between the first of the girl's legs. His cock needed no encouragement to reach full stiffness. That had been readily achieved whilst he knelt between their legs. He felt the girl's hands grab his cock and guide it home. He thrust and plunged into the slick pussy. As he pulled back and thrust in again he felt hands on him from behind. \n\n\"Fuck her Daddy,\" he heard Jo whisper from behind. She grabbed his butt cheeks and felt them. She pushed and pulled with his thrusts as he rammed home again and again. \n\n\"Next,\" Jo said, loud enough for there to be no doubt as to where in the room she was. Dave felt her hands assist his movement toward the next girl. Before he found his way he was stopped long enough to feel a mouth slide down his cock and suck him clean. Then he was steered to the next pussy. So it continued down the line until he'd had his cock in all four pussies and each time Jo had sucked him clean. \n\n\"Lay down on the floor Dad,\" she instructed. \n\nDave was shocked. The last thing he'd expected was for Jo to take control and instruct him on what he was to do. From the noises the other girls made, they too were surprised. He wasn't about to object though and lay himself down on the floor. \n\n\"I don't know if you've ever had a threesome Dad, but if ever there was a time, I'd say this is a good one,\" his daughter told him.\n\nHe lay upon the floor and Jo told Sylvia to mount him. \"And Sarah, you have to sit on his face. I know that you and Sylvia will find plenty to do while you're both pleasured.\"\n\n\"What about us?\" Allison asked.\n\n\"Well, you, Lucy and I get to feel whatever we can get our hands on,\" Jo giggled. \n\nAfter some careful placement in the dark, Dave found himself with a pussy ground against his face and his cock enveloped. He could hear the sounds of the girls as they kissed and played with one another. He thrust desperately upward. He needed to cum, to release his seed.\n\n\"Swap!\" Jo called. \n\n\"What me and Sylv or everyone?\" Sarah asked through a moan.\n\n\"Everyone,\" Jo said. \"Find somewhere that makes you happy with my Dad.\"\n\nDave sighed as his cock slipped from Sylvia's pussy. \n\n\"Shotgun the cock,\" Lucy said loudly.\n\n\"Damnit,\" Allison laughed. \n\nOnce again Dave found himself subjected to exquisite pleasure as he found himself ridden top and bottom. He was just reaching the point of orgasm when Jo again called for a change.\n\n\"No shotguns and no discussion,\" she added to her instruction. \n\nEveryone moved. Dave felt a heavenly pussy slide down his shaft and slipped his tongue into the pussy that was thrust against his face. He plunged his tongue deep. He was again on the brink of orgasm when the light suddenly flashed on.\n\n\"Holy fuck!\" Lucy cried out from near the doorway.\n\nSounds of surprise and shock echoed around the small lab as everyone's eyes adjusted to the light and the girls realised that Jo had mounted her father's cock. Allison was astride his face.\n\n\"Jo!\" Sylvia gasped.\n\nDave's eyes adjusted to the light, but he couldn't see past Allison's butt as she ground her pussy in his face. He felt the girl riding on his cock increase her movements as she rubbed back and forth frantically. \n\n\"You're fucking your Dad!\" Sarah announced. It may have been redundant for the girls that watched but it served to alert Dave to exactly what had happened. He knew he should make her stop. It was the only solution. Unfortunately his body picked that moment to release the tension that the girls had stoked. He exploded into Jo.\n\n\"Oh fuck yes!\" Jo cried out as he erupted. He grabbed Allison by the hips and left no doubt that he wanted her to move. She appeared reluctant as she ground against his tongue a final time, but she did move.\n\n\"Jo!\" he said as his eyes found hers. He came up with nothing else to say.\n\n\"That was so fucking hot!\" Lucy declared.\n\n\"Amazing,\" Allison agreed.\n\n\"You mean outrageous,\" Sarah suggested. Dave looked to her to see if he could detect a true meaning. She was grinning. \n\nSylvia was the only one that stood quietly and said nothing. \n\n\"Jo, I need you to move,\" Dave said. \"This lesson is over.\"\n\nUniforms were quickly restored and everyone moved out of the dark room and back into the classroom proper. \n\n\"Okay girls, clearly a line was crossed today,\" he said quietly. \"We all know that the fun we've had this year can't be spoken of and in particular, nothing can ever be said about what Jo just did. Do I have your agreement? Can we trust each other not to say anything?\"\n\nThere were nods of heads and quiet affirmation around the class. \n\n\"I think we should swear an oath,\" Sarah said with a grin.\n\n\"Sounds like fun,\" Allison replied. They came together in the middle of the class room and Sarah lead them as they all held hands and agreed to keep the dark room as their secret.\n\nDave looked at each of the girls in turn and hoped that it was true. He knew that when it came to secrets, the best number was one, but he had no choice. They'd made the bed and now they had to lay in it.\n\nJust as the bell rang to announce the end of their final lesson, Dave remembered to tell them that he had assigned them all A's for the class. The girls exclaimed their happiness and hugged him on their way out the door.\n\n\"Are you okay Sylvia?\" he asked as she was the last to leave the room.\n\n\"Certainly shocked, but yeah, I'm okay,\" she replied. \"Are you okay?\"\n\n\"I am excellent thanks Sylvia, it has been one hell of a year.\"\n\n\"Epic even,\" Sylvia agreed.\n\n~~~~~~~\n\nEND"
    ],
    "authorname": "nikki_2021",
    "tags": [
        "oral",
        "anal",
        "incest",
        "dad daughter",
        "lesbian",
        "cum swallowing",
        "cummy kiss"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-dark-room-ch-03"
}