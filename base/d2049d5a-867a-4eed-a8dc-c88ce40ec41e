{
    "title": "Thank You, Janie Ch. 02",
    "pages": [
        "\"Win this one and I'll make all your dreams come true,\" Janie whispered in his ear. He had already placed first in the forms part of the competition. \n\n\"I don't see how you could top the last tournament,\" Jason smiled at the memory of something called the \"Spanish Corkscrew\" that rendered him unable to move or see straight for a good half hour. \n\nShe lifted herself up on her tiptoes and kissed him quickly on the cheek, in full view of everyone gathered around to see the final match of the men's first degree black belt sparring contest. No one said a word, although Jason was the envy of most every other guy (and some of the girls) at the tournament. \n\nHis first round was against a guy from Bradenton who had been a red belt three weeks before, and Jason won easily. \n\nThe next challenger was Aaron Byrd, who was only a few points behind Jason in the regional rankings. \n\nAfter bowing in, Jason took the first point with a quick kick, followed by two more points with a kick to the head. Aaron got in two points of his own before Jason dispatched him. \n\nThrough the padded headgear, Jason could hear the people from his school cheering for him, but it was Janie's voice who rang the clearest. \n\nThe semi-final challenger was also no match for Jason's laser focus on winning, both for his chance at winning the title of National Champion and for the promise of mischief and love in the arms of Janie Collins. \n\nRight before the final match, he steeled a glance over at his lover. A sizeable crowd was gathered. They were one of the later black belt groups to compete and with both Jason and Aaron in it, it was a chance to see competitors who were in the top 20 within their organization. Janie winked and blew him a kiss. \n\nJason couldn't suppress his smile, even with his mouthguard in. His pulse raced, knowing that before leaving the hotel for the tournament, he had filled Janie with his cum. \n\nHis opponent was skilled, but no match for the flurry of kicks and punches in Jason's arsenal. It was over after only a couple of rounds. \n\nThere was short trophy presentation, then his tournament group was dismissed. \n\nJanie pushed her way through those gathered to congratulate him. She jumped into his arms and gave him an eager, but socially-appropriate kiss. Jason was equally quick to show his affection for Janie, but after a quick hug, made sure to shake hands and high-five those who came to see him and share his victory. \n\nAs he packed away his sparring gear, Mike Keller came up to him and flipped his iPad around. \"You're basically locked into the top ten in your division. With Nationals only a month away, you've got a six point lead on Aaron in seventh place and nine points on that kid from Iowa in eighth place. The four guys behind them would have to go to five tournaments in four weeks to knock you out. Now we just have to get you to St. Louis . . .\" \n\n\"We're going to Nationals,\" Janie interrupted. Jason smiled and shrugged. He didn't know how they were going to pay for it or get time off, but Janie's tone made it clear the issue was not up for discussion. \n\nOver the past couple of months, it seemed they had spent their weekends at taekwondo tournaments. Most were within driving distance, although there were a couple of overnights in there, too. Jason didn't know how they were paying for the trips; Janie didn't tell him and he didn't ask. Master Robertson had made arrangements to cover his entry fees. After all, each tournament only cost him twenty five dollars, but having a national champion at his school could be a nice selling point. \n\n\"So are we,\" Janet reached out to give Jason a congratulatory hug. \"We'll figure everything out.\" \n\nThe tournament was just down the road in Lakeland, so they didn't bother with a hotel. Janie sat in the passenger's seat; Jason drove. After little over an hour, they pulled into the garage just as the sun was setting. \n\nJason dropped the bags with their sweaty sparring gear in the laundry room, and both stripped down to put their uniforms in the wash. The girls were with their dad and wouldn't be coming back until the next day. \n\nHis eyes lingered on Janie's soft curves. She playfully swatted at his hands when he reached out to grope her. \n\n\"Shower first,\" Janie giggled. \n\n\"Why? We're just going to get dirty!\" \n\nShe wiggled free from his half-hearted attempt to pin her naked body against the door frame. His gaze locked on to the seductive sway of her hips and he followed her back to their bedroom. \n\nThey took a quick shower, washing away the sweat and the grime, their hands lingering on one another. \n\nUnder the hot water, Jason took Janie in his arms. Their bodies pressed together. Both seemed content to stay there, safe in one another's embrace, the cleansing water massaging their sore muscles. \n\n\"I want to give something to you,\" she whispered in his ear. \n\n\"Okay,\" he returned gently kissing her neck. \"What is it?\" \n\n\"A surprise,\" Janie winked. She turned the water off and stepped out of the glass-enclosed shower. The floor tile was cool as they dried off. \n\nNeither bothered to dress. \n\nJanie took him by the hand and led him to the bed. \n\nThey fell on to the soft mattress, their bodies intertwined. Jason cupped Janie's breasts and he kissed his way down her neck. \n\n\"I love it when you do that,\" she purred dreamily. He started to grind his hips against her, but she pulled back. \n\nSensing his bewilderment, Janie giggled. She arched her back and reached for the nightstand, drawing more playful pawing at her body from Jason. \n\n\"I want you to have something special tonight.\" Jason's eyes got wide when she handed him a tube of lube. Janie rolled him off of her and turned, presenting the perfect globes of her rear end to him. \"No one has ever had me back there.\" \n\nHis hands caressed her firm ass cheeks, his touch both eager and nervous. \n\nIt took him a moment to form a response. \n\n\"Are you . . . are you sure?\" \n\nJanie winked over her shoulder. The pink folds of her pussy peeked out from between her legs, and her tight puckered rosebud seemed to invite him inside. \"I am, Jason. I want you to be the first man to put his cock in my ass . . . I want you to be the only man who will ever fuck me in the ass.\" \n\nTo both of their surprise, he tossed the lube aside and pounced on top of her. \n\nThey collapsed on to the bed, his lips raking the back of her neck. Their fingers intertwined. She reflexively spread her legs and Jason's hard cock rubbed in between her cheeks. \n\n\"Fuck me, Jason,\" she panted. \"I want you to fuck me in the ass.\" \n\n\"I will,\" he whispered in her ear. One hand grasped her by the hair and pulled, drawing a squeal of delight. He turned her head and they kissed eagerly. Hungrily. \"But not tonight.\" \n\n\"But\u2014\" \n\nJason pressed his cock against her backside, but he made no move to enter her. \"I love you, Janie. I want you more than anything in the world. But I don't want that . . . not yet.\" \n\n\"Why not?\" There was curiosity in her voice. And a tinge of fear. \n\n\"Because I want you to save something for our wedding night,\" he replied gently. \"I know I will never be your first. And we . . . um, you were mine . . . but I want to have something special on the first night . . . that, um . . . that you're my wife.\" \n\n\"Oh, Jason,\" Janie breathed, and she began to cry softly. \n\nJason lifted his weight off of her, and she rolled over on her back. Then she pulled him to her. She was crying and laughing at the same time. \n\nShe kissed him again, hard and joyously. Jason cupped her face with his hands. Their foreheads touched and they brushed noses. \n\n\"I love you,\" she whispered over and over. \"I love you. I love you. IloveyouIloveyouIloveyou!\" \n\nThey stayed like that for a long time, holding one another. Content. \n\nA little while later, their bodies covered in sweat, they still lay in the big bed. Janie curled up on his shoulder, cum leaking out of her pussy. \n\nHer breath was warm on his skin. He traced the outline of her shoulder with his fingertips. \n\nNeither spoke for a long time. \n\n\"So . . .\" Jason began, as if unsure of where to start. \"Do you want to pick a date?\" \n\n\"For what?\" \n\nHe blushed. \"For our wedding.\" \n\nJanie's eyes got wide. It took her a second to find her voice. \"You don't . . . I mean . . . Were you serious?\" \n\nPulling her to him, Jason drew Janie in for a long, slow kiss. \"Yes. I want that more than anything.\" \n\nHer hands started to shake. Excitedly. Nervously. \n\nJason's fingers intertwined with hers. \"Janie Collins, will you marry me?\" \n\nTears formed again in her eyes, but she brushed them away. Jason's heart raced, unsure what he had said that was so wrong. \n\nJanie pulled away from him, and sat back against some of the pillows on the bed. She took a deep breath, as if to calm herself. \n\n\"Jason, I want nothing more than to be your wife,\" she started, but then her voice faltered. It took her a second to compose herself. \"But that is way beyond where we are right now, don't you think?\" \n\nHis stomach seemed to jump into his throat. \n\n\"I mean . . .we're doing well right now. The girls like you. But you're still a long way off from graduation. And then . . .\" \n\nJanie's voice trailed off. \n\n\"You're thinking too much,\" Jason said gently. He reached out and took her in his arms. She seemed to resist at first, but snuggled up to him. \"Let me love you forever.\" \n\nHe stared into Janie's eyes. He could see confusion and anxiety there. But also hope and love. Jason could see the gears turning in her head, as if her internal monologue was warring with itself. \n\nShe took a deep breath, and then smiled gently. \"Okay.\" \n\n********************* \n\n\"Why can't we go to St. Louis with you?\" Caroline asked. The girls were lounging around on the big bed in Janie and Jason's room. One of the Harry Potter movies was on the TV, but no one was paying much attention to it. \n\nSuitcases were half-packed. Their sparring gear was in separate bags. \n\n\"Because you can't miss three days of school,\" Janie called from the bathroom. She emerged a moment later with a travel kit with some toiletries in it that promptly went into one of the suitcases. \n\n\"School's almost over,\" Olivia pouted. \"It's not like we're going to do anything.\" \n\n\"No missing school.\" Janie's voice was firm. \"Besides, Bahba and Dzed will be here tomorrow to watch you while we're gone.\" \n\nThat seemed to placate the girls, since their grandparents doted on them with neither shame nor apology. \n\nJason buzzed about nervously, even though he was mostly packed. It would be the first time meeting her parents, and the reality of that was just sinking in. Compared to the prospect of meeting her father, competing for the national championship would be easy. \n\nThe girls went to bed a little while later. \n\n\"Stop worrying,\" Janie chided. \n\n\"What if they don't like me?\" \n\n\"Well, you're not my ex-husband, so that gives you an automatic leg up.\" \n\n\"But I'm just a college kid.\" \n\nJanie took his shaking hands. \"They'll love you. You treat me well. You treat the girls well. Don't worry about anything. It's not like they're going to threaten you or anything. They're both pacifists. That's why they got kicked out of Russia.\" \n\n\"Really?\" \n\n\"Yup.\" Janie cuddled up to Jason. The TV was on, but neither really cared about what was on. \"They were Orthodox Christians who were labeled as dissidents in the sixties, so they and their parents were exiled.\" \n\n\"Where did they go?\" \n\n\"Well, first to West Germany, and they came to the US in . . . 'Seventy-five, I think. Some of their friends were sent to Siberia or were executed by the Communists. I was born in 'Eighty-three, and my brother in 'Eighty-six.\" Janie's fingers wrapped around Jason's. \"I think I know something that will help you forget about meeting my parents tomorrow.\" \n\nHer other hand strayed down Jason's leg. She started to rub his cock under the topsheet. \n\nJason fell back into the pillows as Janie's hands ran up and down his cock. He hardened in her able grasp. \n\n\"What do you want me to do?\" she stuck her tongue in his ear. \n\n\"Suck my cock,\" he whispered. \n\n\"How do you ask?\" \n\n\"Please suck my cock!\" Jason moaned. \n\nWith one swift motion, Janie pushed his boxer shorts down. Jason's swollen cock flopped out. \n\nHer mouth enveloped his head almost immediately. \n\nJanie's skillful oral ministrations worked magic on Jason. Her head bobbed up and down on him. \n\nIt was all he could do to resist the urge to push her head down as he thrust his hips up. \n\nShe suckled on the tumescent head of his cock. \n\nHer teeth raked the sensitive underside. She cupped his balls in her hand. \n\n\"Don't stop!\" he pleaded. \n\nJanie's hair fell over her face, tickling his belly. \n\nReaching underneath her chest, Jason groped at her robe, which fell open. \n\nShe squealed with delight when Jason pinched one of her rock hard nipples through the thin nightie. \n\nStroking him, Janie brushed her hair out of her face. Her eyes locked on to his. \n\nMaking a big show of brushing his cock against her lips, Janie smiled evilly. \"Do you want me to suck you or fuck you?\" \n\nHis eyes rolled back into his head, and Jason was unable to choose. \n\n\"I want to fuck.\" Janie's eyes shone with desire. She tugged at Jason's t-shirt before tossing it to the side. \n\nWith a roll of her shoulders, the robe fell to the bed. Her hand never left his cock, caressing him. Stroking him. \n\nJason gasped as she rubbed his sex between her labia, which were slick with excitement. \n\nJanie bit her lip to keep from crying out as she guided Jason inside her. Soon enough, she had taken his entire length and slowly began to gyrate her hips in a slow, wide circle. \n\nHis hands brushed her thighs, then worked their way up her body, his fingertips gently brushing her skin. \n\nShe leaned forward and he cupped her breasts in his hands. Her arms crossed only to draw the nightie up before throwing it across the room. \n\n\"Do you like this?\" Her eyes hooded over with pleasure. \"Do you like watching me ride you, Jason?\" \n\nHe devoured her with his gaze. \n\n\"Do you like watching my tits bounce? Or maybe you want to suck on them . . . oh, just like that!\" \n\nAfter paying proper attention to both of her breasts, the two fell into an easy and familiar rhythm. \n\n\"Touch yourself,\" Jason whispered. \n\n\"Do what?\" \n\n\"Touch yourself while I'm inside you,\" he repeated. \n\n\"Do you like watching me play with my clit? Does that make you hot?\" \n\nJanie sat back, cupping a breast in one hand, the other straying down between her legs. \n\n\"Everything you do makes me hot,\" Jason breathed. \n\nHer fingers rubbed against her neatly-trimmed pussy, as she squeezed his cock with her tight vaginal muscles. \n\n\"Tell me what you want,\" Janie whispered longingly. \"Tell me what to do, Jason.\" \n\n\"Fuck me,\" he croaked. \n\nHis hands grasped his lover's hips and he bucked up into her. Janie cried out, \"Oh!\" \n\nShe pressed back against his thrusts. \n\nJason's head started to spin. His toes curled up. \n\n\"Don't you dare cum yet!\" Janie wailed. Her hips were a blur, matching his pace. \n\nIt was all he could do to hold back. She wrapped her fingers and around his, pressing his arms above his head and into the pillows. \n\n\"Oh, Jason!\" she gasped, and then fell forward into his arms. \n\nHe felt her pussy contract around him, then flood with warmth. \n\nBoth of their bodies began to shake uncontrollably. \n\nJason wrapped his arms around Janie as they rode out their orgasm. \n\nThey fell asleep in one another's arms, fully content. \n\n********************* \n\nThey dropped the girls off at school and then headed to the airport to pick up Janie's parents. \n\nShe held his hand as they waited in the sitting area. When she stood, Jason's heart rate, which had previously been under control, jumped into overdrive. \n\nJason recognised her parents from pictures on the mantle. Both were slender but fit, and in their mid-sixties. \n\nWhen they saw Janie and Jason, their faces broke into wide smiles, and they rushed forward. \n\nJanie gave both her parents a warm hug. They greeted one another in excited Russian. \n\n\"Jason, these are my parents, Fyodor and Stasya. This is Jason.\" \n\nNot really knowing what to expect, Janie's father reached out and gave him a bear hug of an embrace and a traditional double cheek kiss. His accent was thick, but his English was clear. \"It's so nice to finally meet you.\" \n\n\"It's my pleasure,\" Jason breathed. \n\nHer mother was next and she was equally affectionate. If her parents were upset or unsure of their daughter's current relationship, they didn't show it. \"We've heard so much about you!\" \n\nThey went to the baggage claim area. Stasya hooked her hand into the crook of Jason's arm as they walked. Janie and her father walked several steps ahead. \n\n\"You are at the university, yes?\" she asked. Jason nodded. \"What are you studying?\" \n\n\"I'm just in my first year,\" he said nervously. \"I want to get in to the physical therapy program.\" \n\n\"Good, you'll do well!\" Stasya beamed. Jason couldn't tell if she was trying extra hard to be nice, or if she was naturally friendly. \n\nThey made small talk while waiting at the baggage carousel. Neither of her parents seemed to be prying, but a couple of times, Janie said something in Russian, as if to scold her parents for asking Jason too many questions. \n\nThe car ride back to their house was quick. Jason drove, with Fyodor in the front passenger seat. Janie and her mother rode in the second row captain's chairs. \n\nAlong the way, Janie gave her parents instructions on the girls' schedules, which friends they were allowed to stay with and how much time on their iPads they were allowed. \n\nJason was relieved that both of her parents seemed to like him. Around noon, Mike and Janet stopped by to pick them up. They loaded up their luggage and headed back to the airport. \n\nThe four of them were staying at a hotel near the arena where the national championships were being held. The spring semester ended two weeks prior and he managed to get a long weekend off from his jobs. He was very relieved that Janie could support him, although there was a part of him that felt like he was freeloading. \n\n\"I've been working full-time since you were in kindergarten,\" she reminded him one time. \"I'm supposed to make more money than you. Besides, I need you in school so you can get a high paying job after graduation; you're my retirement plan.\" \n\nThey had booked a flight from Orlando to St. Louis as a package deal through the taekwondo organisation. It was Jason's first time on an airplane. He sat next to the window, wide-eyed as he watched the ground receding beneath them, with Janie's fingers intertwined among his. \n\nAfter landing, they split a cab to the hotel, which was overrun with people there for the taekwondo tournament. They picked up their registration packets and tournament badges. \n\nMike somehow had secured them a suite on the top floor of the hotel. Jason didn't know exactly what he did, but he traveled a lot and seemed to have a ton of connections. The room had two separate bedrooms, a shared living area and a small kitchenette. The room definitely wasn't cheap, and Jason wasn't sure who exactly was footing the bill. \n\n\"When are we up?\" Janet asked as they settled into the room. \n\n\"Opening ceremonies tomorrow morning, then juniors and white belt adults.\" Janie flipped through the schedule booklet. \"The fourth, fifth and sixth degree black belt testings are tomorrow night. Do we want to go to that? Friday is the lower rank adults and junior black belt divisions.\" \n\n\"So we're on Saturday?\" \n\n\"Yeah, the rest of the adults and non-contention black belts are on Saturday.\" \n\n\"So the Big Deals are on Sunday?\" Mike was already digging into the minibar. ",
        "Jason held the number six ranking in the country, and he was the only real reason why the four of them were at the national championships. Although Janie had attended a number of tournaments, she was well outside the top 50 and only the top sixteen were invited to the seeded tournament. Mike and Janet didn't earn their black belts until a couple of months ago and they were well short of the qualification deadline to compete for the national championships. \n\nIt helped that some of the people who would have been in Jason's division had already tested and earned their second degree black belts, so they were in another division. \n\n\"Yes, it looks like Jason will be going early.\" All of them knew better than to take the time on the schedule seriously. \n\n\"Are we on the judges list?\" Janet asked. \n\n\"Jason's exempted. I think I'm on for a kids ring tomorrow. I think you were listed as alternates.\" Janie hunted around in the stack of registration papers. \"Other than that, I don't think we have anything we need to do.\" \n\n\"Then let's go out for dinner and celebrate your engagement!\" Mike said boisterously. \n\nJason blushed. \n\n\"You're wearing a new ring,\" Janet laughed as Janie squirmed uncomfortably, but smiled with unmitigated delight. \"Congratulations!\" \n\n\"We won't tell,\" Mike winked. \n\nThey ended up at a sushi and teppanyaki restaurant. The ring Janie wore wasn't anything special. It was on special at a local jewelry store. It came in a set of three: an engagement ring with his and hers wedding bands. Altogether they cost about $300. \n\n\"A ring isn't what makes us married,\" Janie told him when they picked them up from being sized. She could tell that Jason wanted to get her something nicer and flashier. \n\n\"So have you picked a date?\" Janet asked conversationally. \n\n\"Not yet,\" Janie replied. \"Maybe next year. After things settle down with school and the kids.\" \n\n\"I guess it's a good thing we gave you two the room with the big bed and the jacuzzi tub,\" Mike laughed. \n\n\"We're happy for you,\" Janet rolled her eyes at her husband. She took Janie's hand. \"You did very well, Jason.\" \n\nHe could only smile. \n\nThat night, Janie and Jason made love in the king-sized bed in the penthouse suite. Then in the hottub. Then under the stars on the rooftop patio. \n\nThey woke up and showered. \n\nAs they were drying off, Janie pounced on him. \n\n\"I want to feel you inside me all day long,\" she whispered in his ear. When he finished, she got dressed and went off to judge one of the children's tournament rings. \n\nJanet also went down to the tournament floor to help wrangle the kids and help the adults run the show. Jason and Mike moved all of the furniture around the living area of the suite and spent most of the day practicing forms and sparring. \n\n\"Now that we're at nationals, all of the points are reset.\" Mike briefed Jason as the slowly went through the motions of his form. \"The higher seeds will go later in the forms, and they'll get any byes in the sparring part. But otherwise, everyone has an equal chance to win. One of the guys down at the check-in told me only eleven of the top 16 guys in your division had registered.\" \n\n\"So the worst I can be is number eleven in the country?\" \n\nMike snorted. \"In the forms part, each region will be represented by one judge who is at least a third degree black belt. So there will be nine judges instead of the usual three. Your score will be the sum of your scores from eight of the regions. The judge from your region will not score your form. Oh, and all the scoring will be done by secret ballot. No one will know their scores until everyone has gone.\" \n\n\"What if there's a tie?\" Jason balanced on one foot, moving his arms in a slow, wide circle. \n\n\"You will be asked to perform a lower level form.\" \n\n\"Any one in particular?\" \n\n\"Nope, whatever the head judge wants. And if there's a three-way tie, they may ask you each to do a different form.\" \n\n\"What about sparring?\" \n\n\"It's the standard setup. The head judge will probably be a fourth or fifth degree. They'll also rotate so none of the judges are from your region.\" \n\n\"Why did they make it so complicated?\" \n\n\"A couple of years ago, there were some guys from Iowa and Minnesota who tried to rig the second degree ring for one of their people,\" Mike shook his head in disgust. For an organisation that preached integrity and honour, a cheating scandal at the national championships was a big deal indeed. \n\n\"So they crapped on everything for the rest of us?\" \n\n\"Yup. Check your plant foot when you go for the front-kick/round-kick combo. Your heel wants to come off the ground to get some extra height.\" Mike wasn't the best martial artist in the world, but he had a good eye and was an excellent coach. \"After the forms and sparring, you'll be indexed with your combined places in each. First place will get sixteen points, second place gets fifteen and so on. So if you take first and third, you'll have thirty combined points.\" \n\n\"What if there's still a tie?\" \n\n\"There will be a five point head to head sparring match. I think there are provisions in the rules for round robin sparring if more than two people are tied for first place, but I don't think it's ever come to that.\" \n\nJason's phone went off just before the next combo. He went over to check the text message. It was from Janie. Almost done here. Janet and I are starving. \n\n\"The girls are hungry.\" Jason told Mike. Should we meet u somewhere or are you coming back here? \n\nWe need to change. Janie's text replied. What do you want to eat? \n\nYou. \n\nLOL. Later. \n\nMike's text ringtone also sounded off. \"What do you want for dinner?\" \n\n\"I dunno. What's nearby?\" \n\n\"There's steakhouse over by the river. It's only a couple of blocks from here. Or what about Italian? \n\nSteak or Italian? Jason asked. \n\nItalian. Carbs. You'll need lots of energy tonight. \n\n\"Janie says Italian. Is that okay?\" \n\n\"We always like Italian.\" Mike was also furiously texting away. \"Janet says they'll be here in ten minutes. I'm going to call and get a reservation.\" \n\nMike calling restaurant. Jason sent. \n\nHer reply made his heart skip a beat, and sent a surge through his balls. Get in the shower. Be ready for me. Love you. \n\nJason and Mike went to their rooms to change. He was in the shower when he heard the door open. \n\nJanie was already half-undressed and she left a trail of clothes from the door to the large glass stand-up shower. Jason's cock sprang to life at the sight of his naked lover. \n\nShe threw her arms around him and gave him a quick kiss as the warm water covered them. \n\n\"I missed you,\" she whispered in his ear. Jason's hands cupped the perfect globes of Janie's rear end. \"It looks like you missed me, too. . . . You have to hurry.\" \n\nWith that, Janie turned and stuck her backside out towards Jason. She braced her hands against the wall and spread her legs. \n\nHis cock was already hard and he pressed into her eager pussy. \n\n\"Fuck me,\" Janie hissed, pushing back against him. \"Just fuck and cum, sweetheart. Cum inside me right now.\" \n\nThe sounds of the water cascading around them was interrupted only by the slapping sounds of Jason's hips against Janie's ass. \n\nJason's fingers dug into her soft cheeks. \n\nHe didn't last long. \n\n\"I'm cumming!\" he gasped. \n\n\"That's it, baby,\" Janie cooed. \"Cum inside me.\" \n\nWith one final thrust, he held his cock as deep as he could go and tried not to fall over. \n\nWhen he was done, he took a deep breath and stepped back, his cock falling out. \n\nJanie reached for the soap and quickly cleaned herself. Everything except her pussy. \n\nAll Jason could do was watch, mesmerised by the lithe beauty in front of him. Finally, she shut the water off and reached for the towels. \n\n\"I love you,\" she stood up on her tip toes to kiss him gently on the cheek before stepping out of the shower to get dressed. \n\nMike and Janet were ready to go when they emerged from the bedroom. Jason got a wink from Janet and a knowing grin from Mike. \n\nThe walk to the restaurant went quickly in the warm evening air. The Italian restaurant was on the eighth floor of one of the office buildings on the riverfront. They were seated outside on the patio, giving them a spectacular view of the Gateway Arch. \n\nAfter they ordered dinner and some wine, Janie took a sip from her glass. \"Want to hear the latest scuttlebutt?\" \n\n\"What have you got?\" Jason asked curiously. \n\n\"Jeremy Arbaugh, the guy from Arizona who's in third place in your division, got pulled over for drunk driving last night,\" she said a mischievous smile. \"Master Santiago's head exploded. He ordered him not to compete and sent him home.\" \n\n\"One down!\" Mike's boisterous laughter drew the attention of the people at nearby tables. Within the schools, the masters took great pride in the accomplishments of their students. But when one of the students screwed up, it was an embarrassment to the master. And none of them wanted one of their contenders for a national champion to be a DUI offender on the night before the tournament. \n\nThe rest of the conversation was spent talking shop. The adults got deep into a second bottle of wine by the time the entrees arrived. \n\nJanie was an affectionate drunk. None of them had any obligations or competition on Friday. For those who were interested, there were workshops and panels on philosophy, teaching methods and the business aspects of running a taekwondo school. \n\nAside from their own upcoming competitions, none of them were interested in that side of the event, so they continued to eat and drink. \n\nFor Jason, the dinner was an odd experience. In the past, even among his adult taekwondo friends, he always felt like he was being treated like a kid. It wasn't necessarily patronising, but he had been a high school and then college student. Now, at least with Mike and Janet, he felt like they saw him as more of an equal, or someone their own age. It probably was because of his relationship with Janie, who treated him as her partner, not her child or sexual plaything. \n\nHe noticed that Mike was teasing him less and seemed to take him more seriously. The conversation strayed into more adult topics, including a smattering of politics and religion, but there was also a fair amount of gossip about the goings-on at the taekwondo school. \n\nThe meal ended and the four of them walked back to the hotel. \n\nJanie wrapped herself around his arm. They returned to their hotel suite. The adults opened up another bottle of wine. Jason declined, even though no one would find out and he wasn't driving anywhere. \n\nThey only finished about half of the bottle when Janie started to nod off. \n\n\"I guess we kept her up past the 'frisky' stage,\" Mike chuckled. Janie stuck her tongue out at him. \n\nJason only smiled as he helped his lover to her feet. \n\nThey closed the bedroom door and headed back the bathroom. Neither seemed to be in a hurry. Both of them brushed their teeth and cleaned up. Jason made sure the curtains were drawn. \n\nThey undressed and crawled under the covers. Janie snuggled up to Jason, her head resting on his shoulder. \n\n\"I love you,\" he kissed her gently on the forehead. \n\n\"I love you, too,\" she whispered back. \n\nHer hands began to stray over his body. Not aggressively. Not sexually. Just gentle caresses all over him. \n\n\"How did I get so lucky?\" she wondered aloud. \"I love the way you hold me.\" \n\n\"I love holding you.\" \n\n\"Can I ask you something?\" Janie propped herself up on one arm and looked into Jason's eyes in the soft light coming through from behind the curtains. \"Why are you so good to me?\" \n\nHe reached up and touched her cheek. She turned and suckled sweetly on his finger tip. \"Because I love you. Are you complaining?\" \n\n\"No, silly,\" she giggled drunkenly. \"I just wonder why you want to be with me.\" \n\nIn response, he playfully grabbed a handful of her backside. \n\n\"You need to do that more,\" Janie slurred. \n\n\"Do what?\" Jason asked, genuinely curious. \n\n\"Grab me . . . spank me . . . take me,\" Janie's eyes were glazed over. \"I love the way you make love to me. And I appreciate that you treat me so well in front of the girls and everyone else.\" \n\nShe leaned in and gave him a tender kiss before biting his lip teasingly. \n\n\"But sometimes . . . I don't want you to make love to me . . . I want you to fuck me.\" There was a little extra emphasis on the word \"fuck\". \"I want you to have your way with me. I want you to bend me over and do it hard and fast. Or I want you to tie me down and slap me on the butt.\" \n\nJason's heart began to race. \n\n\"I want you take this thing,\" she wrapped her hand around his rapidly-hardening cock. \"And put it in my mouth and then push my head down on it. I don't want that all the time . . . and I don't want you to stop loving me . . . but it's okay if you just take what you want from me. I'm yours, Jason. All of me.\" \n\nIn one motion, Jason flipped Janie over on her back. She spread her legs expectantly. \n\nHe entered her. His previous cum had left her slick. \n\n\"Oh! That feels good,\" she gasped as he bottomed out. \n\nThey kissed hard and passionately. He withdrew and then thrust himself into her again. She cried out and then her body went limp. \n\nHer eyes rolled back in her head. After a long moment, she was snoring softly. Jason brushed the hair out of her face, wondering if she really meant what she had just told him, or if they were just the words of a drunken woman who had too much wine. \n\nJason withdrew from Janie, and then rolled her on to her side. His cock slid into her once again as they spooned. \n\nHe wrapped his arms around her and fell asleep, her breasts clutched in his hands and the sweet smell of her perfume filling his head with pleasant dreams. \n\n********************* \n\nJanie and Jason spent Friday as tourists in St. Louis. They went out on their own for much of the day, including the obligatory trip to the Gateway Arch. Janie coaxed him into a quick walkthough of the Art Museum. They ate lunch along the riverfront. \n\nAll the while, holding hands and stealing kisses when they could. \n\nMike and Janet met them for dinner again. Then they met some other folks from the tournament for an impromptu soft training session in the hotel lobby. \n\nAfterwards, they took a shower and made love under the moonlight that shone through the open windows. \n\nSaturday was competition day for Mike, Janet and Janie. Jason shuffled around the floor to see each of them compete in their respective rings. Mike took second in sparring. Janie earned second place in forms and third in sparring. Janet didn't place in either event. All of them had a good time, though. \n\nIn between matches, they met new friends and caught up with the handful of others from their school who had made it out to the National Championships. \n\nThey were all finished by mid-afternoon. \n\nThe nerves, which Jason had mostly suppressed so far, finally caught up with him after dinner. He began to fidget. \n\n\"You'll do fine,\" Janie whispered in his ear at dinner. Her gentle touch had a somewhat calming effect, although he continued to absently tap his foot throughout the night. Mike mostly left him alone, knowing Jason didn't need to be riled up any further. \n\nTo try and exhaust him, they had sex several times, but it was still well after midnight before Jason faded into a restless sleep. \n\nWhen Jason awoke, Janie was curled up between his legs, her mouth expertly working his cock over. \n\n\"Good morning,\" she stroked him. \n\nJason smiled feebly and blinked the sleep out of his eyes. \n\nHe was rock hard in Janie's able hands and mouth. Her head bobbed up and down lazily, both of them enjoying their private morning tryst. \n\n\"Do you want to be inside me?\" she teased. \n\nSlowly kissing her way up Jason's body, Janie continued to stroke his tumescent sex. She pressed her breasts against his chest and lifted her hips to mount him. \n\nThe head of his cock entered her labia, which were slick with excitement. \n\n\"I want you\u2014oh!\" She let out a surprised yelp when Jason flipped her over on her back and pushed forward, entering her all the way in a single thrust. \n\nWith one hand, he pinned her wrists above her head. She put up cursory resistance, but gave in as Jason's strokes came harder and deeper. \n\nShe bucked her hips to meet his. \n\n\"Oh, Jason,\" she whispered. His other hand cupped one of her breasts. Janie cried out when he pinched her nipple. \n\nHe built a fast, steady rhythm. \n\nShe was still wet from the night before. \n\nJason's jaw clenched. Janie pulled against his strong grasp. \n\nLeaning in, he kissed her hard. Their tongues intertwined. \n\n\"Don't stop!\" she wailed, which only egged Jason on. \n\nThrowing her head back into the pillows, her eyes fluttered. \n\n\"Fuck, fuck, fuck!\" she chanted. Jason's pulsed raced at the string of obscenities coming from his lover. \n\nThe woman of his dreams. \n\n\"I'm cumming!\" he gasped. \n\n\"Yes! Yes! Cum inside me,\" Janie cooed in his ear. \n\nHe released her hands from his grasp, and she reached around to cup his backside, pulling him inside her. \n\n\"Cum in me . . . cum all over me.\" \n\nHe collapsed on top of her. Their hearts pounded together. Their breaths came in short spurts. \n\n\"I love you.\" Janie kissed him tenderly behind his ear. \n\nThey lay in one another's arms for a long time. Finally, they untangled their bodies, rolled out of bed and into the shower. \n\nEmerging from their room, they found Mike and Janet unloading a room service cart. It had some hotcakes, home fried potatoes, eggs, bacon and fresh fruit. \n\n\"You need to eat,\" Janet chided him in \"mother\" mode. \"You've got a big day today!\" \n\n\"I ordered room service for a couple of the other guys with a super-sized helping of Ex-lax,\" Mike joked. \n\nJason was quiet, his brain and the butterflies in his stomach working overtime. \n\nHe dressed in his uniform, mentally running through his form and any that he might be asked to perform. \n\nJanie and the others didn't press him. They left for the arena about an hour before the competition was to begin. \n\nAlmost all of the competitors had already arrived and were loosening up and stretching. The stands in the arena were filling with those interested in seeing the national championship contenders. \n\nThe first degree black belts were the initial group to compete, with adult brackets for ages 18-29, 30-40, 41-50, and over 50, with separate divisions for women and men. \n\nJason was ushered to his ring with the remaining nine contenders who had made the trip to the national championships. Janie, Mike and Janet found seats off to the side with a good view of Jason's ring. \n\nShe blew him a kiss and winked. \n\nThe ten black belts in Jason's division lined up and bowed in. A panel of nine judges sat behind a long table. Jason recognized Angie Tinsley, a fourth degree from the Southeast Region on the panel, but didn't know any of the others other than by reputation. The head judge was a big, burly man named Reno Okunda, a fifth degree who had been the third degree National Champion himself many years before. \n\nLooking up and down the row of young men, Jason sized up his competition. He didn't recognise any of the others. Aaron was eligible, but couldn't make it to nationals. All of the others were pretty much just like him: young, fit and ambitious. \n\nThey would be called up to demonstrate their forms based on their point standings, with the lowest seeds going first. In sixth place, Jason was going fifth in the order. \n\nThe first of the competitors instantly took himself out of the running when his mental preparation and muscle memory failed him. Halfway through the form, he had a complete meltdown, having to pause for several seconds, then completed the wrong sequence of moves. ",
        "He was in tears as he returned to his place along the line of competitors. A part of Jason was sympathetic to him; they had all spent hundreds of hours training and doing the same movements over and over. Then to have a year's worth of hard work evaporate due to a mental lapse seemed crushing. \n\nThe next three performed. Jason saw they were good, but he mentally nitpicked them apart. \n\n\"Jason McGlinn!\" the Mr. Okunda called. \n\nSpringing to his feet, he only vaguely heard people cheering for him. Janie's voice stood out in his mind. He sprinted around the perimeter of the ring to the spot directly across from the judging table, then out to the center of the ring. \n\nHe bowed. Closed his eyes. \n\nBreathe in. \n\n\"Ready?\" \n\nBreathe out. \n\nTime seemed to slow to a crawl. Jason's left foot stepped, and his arms fell to his sides. \n\n\"Begin!\" \n\nHis movements were crisp. Practiced. Relaxed. \n\nHe didn't think. Didn't count. \n\nJason just moved. His arms flowed from punch to block. \n\nJump kick. Knife-hand strike. Outer-forearm block. Counterpunch. Pause. Sweep kick, low block. Roundhouse kick. \n\nEverything faded away. \n\nHis body moved with a feline grace. Automatic. \n\nEighty six moves complete, he held his final position. \n\n\"Return!\" \n\nAssuming the ready position again, Jason breathed in and blinked himself out of the trance. \n\nThe judges were scribbling notes on their clipboards. At a regular tournament, they would have announced score right then. But this was different. Probably to build tension and make everyone sweat a little more. \n\n\"Dismissed.\" \n\nHe bowed, then backed out of the ring before sprinting back to his spot. \n\nJason steeled a glance over a Janie, whose smile beamed with pride. His heart raced, but he willed himself to calm down. \n\nFive competitors later, Jason was confident that he was better than most of the others. He just didn't know where he fit into the grand scheme of things. \n\nThe judges were conferring among themselves. The head judge had collected the scoring cards and was coming to the final tally. \n\nA red belt stood by with a large dry erase board. There was a palpable tension in the air. \n\nJason could hear the blood pounding through his veins. \n\nThe head judge began writing on the board. The other eight judges formed a circle around him so no one could read what was being written. \n\n\"Are we agreed?\" Jason heard Mr. Okunda ask. \n\n\"Yes, sir,\" the other eight replied in unison. \n\nThe board was flipped over so it was facing down on the table. \n\n\"Fall in!\" \n\nThe ten young men lined up. \n\nMr. Okunda stood. The other judges remained seated. His deep voice was firm, but surprisingly kind. It carried even without a microphone. \"First of all, let me congratulate all of you on reaching this far in the competition. The scores for the forms were tallied and there are no ties in among the top three. Each of you was scored by eight of the judges on a scale of one to nine. Since this is the national championships, the scoring was more rigorous than you are probably used to. The highest score was seventy-one and the lowest was forty.\" \n\nThe judge paused for a moment to let that sink in. \n\n\"Step forward if your name is called.\" Mr. Okunda looked down at his note card. \"In third place . . . Jason McGlinn, Orlando.\" \n\nA part of Jason was happy to place. Another part was disappointed. But he stepped forward and smiled anyway. It meant he had a chance at actually being the National Champion. There was some polite applause, but he heard the distinct sound of Mike and Janie cheering for him. \n\n\"In second place, Jayesh Nibhanupudi , Portland.\" More applause. \"And taking first place in forms . . . Jeremy Bechtold, Newark!\" \n\nJason heard cheering, but the gears in his head were already churning. \n\n\"There will be a five minute break to prepare for the sparring round.\" \n\nAs some of the other judges began to prep the ring for sparring, Mr. Okunda set the white board on an easel. Jason saw his score was 68 out of a possible 72. The other two in front of him had scored 69 and 71. \n\nA second easel was posted with the sparring bracket. \n\nEven though he was the sixth seed in the national points standings coming in to the competition, two of the people ahead of him didn't make it, so he was the fourth seed in terms of the actual bracket. That meant in a ten person, single elimination bracket, he was going to get a bye. \n\nJayesh was seeded seventh, so he would be sparring in the first match, and Jeremy was seeded third and was also getting a bye. \n\nWith their foot pads, gloves and headgear on, the young men lined up for inspection. Mr. Okunda walked down the line checking to make sure all of the competitors's sparring gear was in order, and assuming that they were all smart enough to be wearing cups. \n\nJason took a seat at the side of the ring with an eye on the bracket and who he might have to face when it was his turn. \n\nJayesh made it out of the opening round, as did the number nine seed, but he looked sloppy. \n\nAt most, Jason would have to spar in three matches. \n\nHis first match was against a kid named Lambros Petrakis. He was a tall, lanky kid who was surprisingly agile for his size. He had a long reach with his arms and legs, but wasn't nearly as fast as Jason. They exchanged points for a couple of rounds, but Jason won by a score of five to two. \n\nJeremy also won his opening round. Carlus Benardo was the number two seed and he easily beat the number nine, a kid named D.J. Covington. \n\nGoing last in the first round was Quan Nguyen, who was ranked first by points coming in to the tournament. He finished fifth in forms and knew he needed a lot of help to win out. \n\nHe was ferocious against Jayesh, and scored his five points quickly. \n\nOne down, Jason thought to himself. Jayesh could finish no better than fifth in sparring, while Jason could do no worse than fourth. \n\nHe hated to actively root against anyone, but on the inside, Jason cheered for Carlus to beat Jeremy, which happened in the next round. \n\nTwo down. \n\n\"You control your own destiny,\" Jayesh congratulated him as he got ready to face Quan. \"Do well.\" \n\n\"Thank you, sir,\" Jason clasped the other young man's hand and bowed. Then he jumped around a couple of times to loosen himself and get his blood pumping. \n\n\"If you could control it, they wouldn't call it 'destiny',\" he said to himself. \n\n\"Next up: Jason McGlinn, Orlando. Quan Nguyen, Beaufort.\" \n\nThey bowed in, first to the head judge, then one another. One of the judges tucked a red piece of cloth into his belt, marking him for scoring purposes. \n\nQuan was short and compact. Jason also got the distinct feeling that the other boy didn't like to lose, and not placing in forms had left a bad taste in his mouth. \n\n\"Ready?\" \n\nJason dropped into his sparring stance, his right foot forward and his hands up. \n\n\"Begin!\" \n\nAs expected, Quan immediately lunged forward, but Jason anticipated this and stepped back, then rushed forward with a quick counter combination, scoring with a kick to the head. \n\n\"Two points red!\" the chief sparring judge called. The judges were rotating, so that no one from the same region as one of the persons in the ring was in a position to award scoring points. \n\n\"Ready? . . . Begin!\" \n\nJason again backed out, relying on Quan's aggression to be his weakness, and it paid off with a punch combo to his chest, and another point. \n\nQuan scored a point, but Jason closed out the match by switching his tactic and getting two points with a jump kick to the shoulder, winning five to one. \n\nAs they bowed own, Quan was formal and courteous, and Jason could tell that the other boy's anger was directed inward at himself for not placing in forms and getting beaten in the sparring ring. \n\n\"There will be a five minute rest before the final match,\" Mr. Okunda called from the judging table. \n\nJason dared to glance over at his friends, who were seated in the first row of the arena's lower deck. Mike and Janet waved, and shouted encouragement though he could not hear them. His heart raced as Janie blew him a kiss and winked. \n\nTaking a deep breath, he shut out the rest of the world around him. Then noise. The lights. The other judges. It all faded away. \n\n\"Jason McGlinn, Orlando, red! Carlus Benardo, Dagsboro, white!\" Mr. Okunda called the finalists forward. \n\nHe bowed in and shook hands with Carlus. The other young man was half a head taller with thick muscular arms, the opposite of Quan. \n\n\"Ready?\" \n\nInhale. \n\n\"Begin!\" \n\nJason let out a fierce yell, intended to startle his opponent, then jumped forward, both feet springing off the ground. \n\nHe caught Carlus just above the belt. \n\n\"Point!\" all three judges yelled. Jason and Carlus returned to their starting marks. \n\n\"Score?\" There was some hesitation from the judges, who were probably trying to decide whether Jason's kick counted as a jump kick or not. \"Two points red, two points red, one point red!\" \n\nThe three scoring judges huddled up. Mr. Okunda clearly wanted there to be a consensus in the final match. They talked for a long moment, but came to an agreement. \"Jump kick above the belt: two points red!\" \n\n\"Ready?\" \n\n\"Way to go, Jason!\" Janie's voice cut through the noise of the crowd. He was distracted enough that Carlus got the drop on him when the signal to begin came. \n\nHe fought off a flurry of punches. \n\nCarlus was strong and powerful, and certainly not slow, but he wasn't as fast as Jason. He was taller, too, which meant he had greater reach. \n\n\"Point!\" one of the side judges called. \n\n\"Score?\" \n\n\"One point white, no see, one point white.\" Mr. Okunda looked to the scoring table. \"Score: one point white.\" \n\nJason chided himself for allowing Carlus's foot to brush his shoulder. \n\n\"Ready?\" \n\nInhale. \n\n\"Begin!\" \n\nJason's jump kick was fast. His back foot pushed him forward as his lead food snapped up towards Carlus's headgear. It missed by a fraction of an inch, but Jason followed it with a quick series of punches to the chest. \n\n\"Point!\" \n\n\"Score? . . . One point red, one point red, one point red! Score: one point red. It is now three to one, red!\" \n\nTwo more points. The notion that he was two points away from being national champion made Jason's heart skip a beat. He could still win if Jeremy lost, but Jason would prefer not to need anyone's help. \n\n\"Ready?\" \n\nInhale. \n\n\"Begin!\" \n\nLetting out another yell, Jason's foot twitched, drawing an involuntary flinch from Carlus, whose arms reflexively blocked down. \n\nA fraction of a second later, Jason jumped into the air again, his foot snapping up high. His toes brushed the side of Carlus's sparring headgear. \n\n\"Point!\" \n\n\"Score?\" Mr. Okunda gave Jason a congratulatory smile. It was all a formality now. \"Three points red, three points red, three points red! The score is six points red, one point white!\" \n\nBoth young men bowed to one another. Mr. Okunda took both their hands before raising Jason's. \"Winner, Jason McGlinn, Orlando!\" \n\nCheers rose from the section around Mike, Janet and Janie. There was a smattering of applause from the rest of the arena. \n\nThe nine other competitors in his division stood to give him high fives and pats on the back. Placing third in forms and first in sparring ensured him the national championship. \n\nJason stripped off his sparring gear as Quan and Jeremy fought for the third place trophy, which Quan won. \n\n\"Fall in!\" Mr. Okunda's clear voice rang out in the arena once all the scores were tallied. \"Congratulations to you all for making it this far at the National Championships. Unofficially, the First Degree Black Belt Men's National Champion, age eighteen to twenty-nine, is Jason McGlinn, Orlando, Florida!\" \n\nA cheer went up around the arena, and no one's voice was louder than that of Janie Collins. \n\nJason grinned sheepishly, immensely proud of himself, but also humbled by the recognition of his peers. \n\nThe group bowed out, and Jason made sure to thank each of the judges individually. \n\n\"I'll watch for you next year in the second degree ring!\" Mr. Okunda clapped him on the shoulder. \"I've got a couple of kids who will give you a run for your money.\" \n\n\"I'm sure they will, sir,\" Jason replied with a smile. \n\nHe gathered up his gear and left the tournament floor. Janie jumped into his arms. \n\n\"You did it!\" she laughed with pure joy. She pressed her lips against his. Jason spun her around and squeezed her tight. \n\n\"We did it!\" he spoke loud enough that everyone around him could hear clearly. \"I couldn't have done it without you!\" \n\nJanie only winked. \n\nSetting her down only to greet the others from their school, Jason navigated through the crowd of well-wishers. \n\nThey left the arena, and headed back to their hotel room. His phone buzzed as news of his victory made its way around Facebook and text message chains. \n\nHe and Janie held hands all the way. \n\n\"There will be a formal presentation this afternoon after the fifth degrees finish up. Master Robertson said it's casual,\" Mike said. \"After that, we just need to get packed up for the flight home tomorrow.\" \n\nJason changed out of his uniform and into a pair of comfortable paints and one of the school's polo shirts. \n\nThey grabbed a quick bite to eat then headed back to the arena to watch the higher ranking black belts compete. \n\nJanie didn't say much, but the smile never left her face. Her fingers intertwined with his. \n\nThe formal presentation was held on the arena floor. Like the others, Jason was presented with a black belt with his name embroidered on one side and \"National Champion\" in both English and Korean on the other. \n\n\"We're going out for dinner,\" Janet said as the arena. The National Champions for the higher ranking black belts were being announced, so most of the first degrees took that opportunity to slip out the back. \"Our treat.\" \n\nThey didn't go back to their room. Janie slipped Jason's new black belt into her purse and they caught an Uber outside the arena. They went to Broadway Oyster Bar, which had come highly recommended by one of Mike's business associates. It was just down the road from the arena, but it would have been a long walk. \n\n\"To our National Champion!\" Mike raised his glass and the others follow suit. \n\nJason blushed and smiled appreciatively. He was overloaded from the day's events, but still happy to share the moment with his friends, even if they were all older than he. \n\nAfter dinner, they got another Uber ride back to their hotel. \n\nJanet winked as soon as they were through the door. Mike just laughed. They retreated into their room. \n\n\"So now that you won the National Championship, what can I give you?\" Janie threw her arms around Jason's neck. \n\n\"You don't have to give me anything,\" Jason said quietly. And truly, in that moment, he wanted for nothing. \n\nJanie pressed him up against the door. They kissed gently at first. Then harder. \n\nHe reached around and cupped her perfect rear end. \n\nShe nuzzled up to him, her lips grazing his neck. \n\n\"What do you want?\" she nibbled on his earlobe, sending a chill from his head to his toes. \n\n\"I want you in my mouth,\" Jason gasped. \n\n\"And I want you in mine.\" \n\nThey began undressing one another on the way across the room. \n\nJanie pushed Jason down on the bed, her naked body pressed against his. They kissed eagerly. Hungrily. \n\nShe began to stroke his cock. He was already tumescent. \n\nThey maneuvered into the middle of the bed. Jason ran his hands over his lover's body, lingering in all the sensitive spots. \n\n\"Eat me,\" Janie whispered. She kissed him gently, then pulled back and swung one of her legs over his chest. \n\nJason reached up and cupped the globes of her perfect rear end and brought her pussy to his mouth. \n\nShe straddled his face, her hands grasping the headboard on the bed for support. \n\nLapping at her labia, Jason listened to Janie purr with delight. Her hips gyrated slowly as Jason sucked on her clitoris. His tongue entered the soft folds of her pussy. \n\nBoth were in heaven. \n\nReaching up, Jason gave one of her breasts a gentle squeeze, then pinched her nipple. Janie let out a surprised squeal. \n\nShe smiled, her eyes hooded over with desire. \n\nJason continued to pleasure her with his tongue. He bathed the nub of her clit with soft kisses. \n\nJanie pressed herself down on Jason's face until she shuddered. \n\n\"Oh, Jason,\" she gasped. Janie rode out the orgasm, then sat back on his chest, her breathing heavy. \n\nReaching back, she grasped his still-hard cock in her hand. \n\nThen, carefully turning over, Janie presented herself to Jason again as she moved into a sixty-nine with him. \n\nJason's body shivered as she took him in her mouth. He turned his attention back to her clit, wanting nothing more than to make her cum again. \n\nHis hands dug into her backside. He felt Janie cup his balls with hers. \n\nThey lay like that for a long time, making love to one another with their mouths. \n\nSeveral times, she brought him to the brink of orgasm, only to back off. \n\nHe continued his oral ministrations until his face was covered in her juices. Her thighs were coated with a thick layer of her pleasure. \n\n\"That feels so good,\" Janie mumbled. She continued to stroke Jason's cock, but from the dreamy tone in her voice, she sounded content to let him continue to eat her out. \n\n\"Right there, baby,\" she purred. \"Just like that . . . yes! Yes! . . . Don't stop!\" \n\nJanie's thighs tensed around his head. Then her buttocks clenched. \n\nHe never let up. \n\nSucking. Licking. \n\n\"Oh, god!\" Janie cried out, then collapsed on top of Jason. \n\nKissing the insides of her thighs, he let her down slowly. \n\n\"You are so good at that,\" Janie kissed his cock, which was still hard in her grasp. \"Give me a minute and as soon as I can move, I'm going to fuck your brains out.\" \n\nHe gave her a smack on the backside. She let out a surprised yelp and laughed. \"I guess that means you're tired of waiting for your turn!\" \n\n\"I'll wait forever for you,\" Jason nibbled along her labia. \n\n\"Don't start that or I'll make you eat me again!\" \n\nJanie drew her body up so she was on her knees, then scooted forward, so she could rub the head of Jason's cock against her sex. \n\nHis hands immediately grasped her ass. It was firm from the regular sparring and working out. He caressed her gently, lingering on the birthmark on the right cheek. \n\nBoth inhaled sharply as she sat down on the rigid cock in her hands. \n\n\"You're so tight after you cum!\" Jason breathed. \n\nJanie slowly slid down his length until he was all the way inside her. \n\nShe reached back and spread her cheeks apart, showing Jason her pink little rosebud. Janie turned and smiled mischievously over her shoulder. \"Are you sure you don't want to put it in my butt?\" \n\n\"You're an evil woman!\" \n\n\"I'm your evil woman,\" she returned. \"You didn't answer my question. Do you want to put your cock up my butt?\" \n\nJason groaned and dug his fingers into Janie's backside. He didn't answer. Instead he started to push Janie's hips into a rocking motion. \n\nBack and forth. \n\nHer pussy slid up and down his cock. \n\nShe leaned forward, supporting herself with one hand. Jason felt the other brush the underside of his cock as Janie began touching herself. \n\nHis gaze settled on the hypnotic motion of Janie's perfect ass. With each stroke, he watched as his cock disappeared inside her, then came out on the return, slathered in her juices. \n\nHer hips moved faster, alternating between forward and back strokes with a circular motion here and there. \n\n\"Oh, Jason,\" she whimpered, working herself over with her fingers, even as she held Jason's cock inside her. \n\n\"Cum for me,\" he moaned. \"Cum all over me!\" ",
        "He felt her pussy flood with warmth and Janie shuddered. \n\n\"I'm cumming!\" she sobbed. \n\n\"Cum for me!\" \n\nJanie fell forward, catching herself on her elbows. Jason thrust up into her as another orgasm coursed through her body. \n\nShe convulsed a couple of times. Her fingers continued to stroke her clitoris, slowing as she brought herself down. \n\nThe only sound in the room was Janie gasping for breath. \n\nJason lifted her off of him, his cock sliding out of her easily. Her body was covered in a thin sheen of sweat. \n\nRolling her over on her back, Jason mounted her. \n\n\"You are so good to me.\" Janie's eyes fluttered dreamily. \n\nHe kissed her deeply and passionately. \"I've been in love with you from the first time I saw you.\" \n\n\"And now you have me.\" \n\n\"I'm never letting you go.\" \n\nIt took great effort, but Janie threw her arms around Jason's neck. Their foreheads touched. \"Promise?\" \n\n\"I promise.\" \n\nJason slowly began to move is cock in and out of her. Janie's nipples were rock hard. \n\nJanie closed her eyes and took a deep breath. When she opened them, Jason lost himself in their depths. \"I am yours forever.\" \n\n\"Then marry me,\" Jason propped himself up on one elbow. He continued his gentle strokes. \"When we get home . . . let's go to City Hall . . . us . . . the girls . . . your parents . . .\" \n\n\"No . . . not tomorrow . . . not this week,\" Janie caressed his cheek. \"When we get married, it won't be us eloping or going to the Justice of the Peace. I don't want another big wedding or some gawd-awful production. But I want all of our friends and family to be there. I want them to share the day with us. I want everyone in the world to know how good you are for me. How wonderful you make me feel. How much I love you.\" \n\nJason leaned in and they kissed tenderly. He brushed the tears out of her eye. \n\n\"I love you,\" he whispered. \n\n\"I love you, too,\" she returned. \"But we need to talk about one more thing . . . Jason . . . I've already got two kids . . . and I don't know if you want to have children\u2014\" \n\n\"Well, I hadn't really thought about it.\" \n\n\"We've got a couple of years to decide,\" Janie smiled warmly. \"But if you want kids, I'll have as many as we can love together.\" \n\n\"Let's talk about that again in a couple of years,\" Jason gave her supple breast a playful squeeze. \"But in the meantime, we can practice making them!\" \n\nJanie's giggles were cut short as Jason pulled out of her. He flipped her over on her belly. \n\nSeeming to know what he wanted, Janie stuck her ass up in the air and settled on to her elbows. \n\n\"Take me,\" she moaned as Jason filled her up in a single, hard stroke. \n\n\"Do what?\" he grabbed a handful of her hair and pulled. \n\n\"Fuck me!\" Janie shouted as Jason bottomed out. \"Fuck my pussy!\" \n\nWith her hair in one hand, and the other clutching her rear end, Jason picked up his pace, building a steady rhythm. \n\nJanie absorbed every blow. Cried out each time he pulled back and then thrust back in. \n\n\"Don't stop!\" she wailed. \n\nAfter Janie's succession of orgasms, Jason wasn't going to last very long. \n\nHer pussy was slick with her excitement. Jason released her hair, and grasped her shoulders. \n\nWith each return stroke, he pulled her to him, impaling her on his cock. \n\n\"I'm going to cum!\" Jason pressed forwards, his weight bearing down on Janie's shoulders. \n\nStill, his cock pistoned in and out of Janie. Her pussy made a lewd squishing with every thrust. The slap of his hips against her ass echoed off the walls. \n\n\"Cum all over me!\" Janie pushed back against Jason's sex. \n\nJason pushed forward one final time, and they fell on to the bed in a tangled heap. \n\nHis cock pulsed over and over inside her. \n\nWith no energy to move, the pair lay like that for a long time. Janie took his hands in hers and kissed the tips of his fingers. \n\nHe fell asleep inside her. \n\nWhen he awoke, Janie had flipped out the lights and turned him around in the bed so they were on the pillows. Both were still naked and curled up under the soft down comforter, desperately holding on to one another. \n\nHer hair had fallen over her face. Jason brushed it away. \n\nSlivers of moonlight shone through from behind the drawn curtains. \n\nJanie smiled in her sleep. \n\nHe kissed her on the forehead, then pulled her close to him. \n\nShe snuggled up to him. The woman of his dreams. The singular object of his desires. \n\nAfraid that the last few months may have been a dream, Jason held on, vowing to never let her go before drifting off to sleep again. \n\n\"Thank you, Janie.\""
    ],
    "authorname": "HLD",
    "tags": [
        "older woman",
        "younger man",
        "taekwondo",
        "first time",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/thank-you-janie-ch-02"
}