{
    "title": "Cousin Pt. 01",
    "pages": [
        "The afternoon was hot and humid, the air thick enough to cut with a knife, as Dan swung the last bale of hay from the pickup onto the stack for pulling up into the hayloft. At least he had it all in near the barn and now just had to get it up into the loft under shelter before it rained. He dropped out of the truck bed and started into the barn to drop the rope and hook from the beam over the open loft door.\n\nDan was not really a farmer. He was a twenty-two year old senior physics student. At least he would be a student again in another six weeks when school started once more. Until then he was \"farm sitting\" - keeping an eye on his aunt and uncle's place while they were finally off on the vacation trip they had been talking about for fifteen years. Actually there wasn't much involved. The \"farm\" was about three hundred acres isolated up in the mountains and was only used now to produce a couple of small hay crops which were sold during the winter. Seventy five - even forty - years ago it had been an active farm, but as most everyone had moved away from the area and as his aunt and uncle had gotten older, it had become less and less of a working farm. Today there wasn't a neighbor for miles and most of the surrounding land had been added to the state or national forests.\n\nDan climbed up the ladder and went to the end of the loft with its large, open door. He threw the rope down and stopped for a minute to look around. From here he could see across the mountain side, but no other buildings besides the farm house were visible. A small, gravel road wound up the side of the hills, in and out of the woods, and ended at the gate. It didn't really end but became a dirt forest road beyond that point. Dan stretched and wiped sweat from his face. He was a fairly large man - about six - one - and the summer working here had built up his muscles. In the heat he wore only a pair of cutoff jeans and work boots, but still felt hot. Looking out again he could see a dark cloud front in the distance. It would be a while yet, but they would get rain this afternoon and it would probably cool things off a little. Then, as he had done when he spent summers here as a teenager, he grabbed the rope and slid down it to the ground. He began hoisting the bales up and swinging them into the loft. \n\nThe hook was designed so that when the bale swung in and dropped, the hook released and he could bring it back for another bale without having to climb back up to the loft. But after a while the pile became large enough that he stopped and headed back up to straighten it out and clear room for the rest. As he finished moving the stack back against one of the walls, he looked out again and saw a cloud of dust along the road. Curious, he watched as a small, red car moved in and out of the tree shadows. In the eight weeks he had been here he hadn't seen a car on that road since he had returned from driving his aunt and uncle to the airport to start their trip. \"I wonder who could be coming up here,\" he thought. \"Maybe it's some gorgeous babe just too hot for my bod to wait.\" He laughed at the thought. After eight weeks isolated up here with only a couple of trips into town, Dan was about to climb the walls. He didn't mind being isolated, but he did miss women. On campus he had an active dating life and, like most twenty two year old males, he only thought about sex about three million times a day. It had definitely been a long summer.\n\nIn a couple of minutes the car rounded a curve and drove right up through the gate like the driver was familiar with the place. He could see now that it was a small two seat sports car - not at all the typical type found out here in the country. He couldn't tell much about the driver. He thought it looked like a woman, but whoever it was had on a wide brimmed hat which hid her face. Dan slid down the rope again and walked over to where the car had stopped between the house and the barn. As he approached the car, the door opened and out stepped one of the most attractive women he had ever seen. She stood about five eight, had shoulder length blonde hair and flashing green eyes. She was wearing a pair of cutoffs and a sleeveless cotton shirt with the tails tied under her breasts, leaving several inches of bare skin showing. It was obvious she wasn't wearing a bra and had something really nice inside the shirt. She had a figure that Dan thought was incredible with a narrow waist, long, long legs, and a tight ass that exactly filled the cutoffs. She turned towards him and flashed a smile that lit up her entire face. \"I must have been out in the heat too long,\" Dan thought. \"This can't possibly be real.\"\n\nFor a second he just stood there and than came back to reality. \"Hi,\" he said. \"Can I help you?\"\n\n\"I was just looking for Tom and Mary. I haven't seen them for a while and just decided to come by. Are they around?\"\n\n\"Actually they are out of the country for the next month. I'm just watching the place for them - they're my aunt and uncle - while they're away. I'm afraid you wasted a trip up here.\"\n\nShe gave him a frank apprisal. \"Oh, I wouldn't say it's wasted.\" She let her eyes roam over him and Dan felt himself becoming both confused and somewhat embarrassed. He wasn't imaging this, was he. Then she added, \"It's been quite some time, hasn't it?\"\n\nDan was now completely confused. He was certain that if he had ever seen the beautiful creature before he could not possibly have forgotten. For a few seconds he just looked at her and probably looked even more confused than he felt.\n\n\"You don't know who I am, do you?\" she laughed. He loved the sound of that laugh. But, no, he didn't know. Should he? \"Think about it. It's been seven years, but you really do know me. From right here, if fact.\" Again the laugh.\n\nDan thought back. Seven years? Seven years ago he had been fifteen and had spent his last summer here on the farm. Along with his younger brother, Bob, and two cousins, Lisa and Susan. Well, Sue was his cousin and Lisa was the daughter of his aunt's sister. Dan's father was his uncle's brother. Bob was three years younger and Lisa would have been thirteen and Sue was a year older than Lisa. Sue was short with black hair and looked nothing like the woman in front of him. Lisa? The age was about right, she was a blonde, but she had been a skinny tomboy, usually dirty and scratched. He must have met this woman somewhere else.\n\nShe smiled at him and said. \"Still trying to figure it out, Cousin?\" Cousin? Could this possibly be Lisa?\n\nDan finally spoke - actually almost squeaked out, \"Lisa? Is that you?\"\n\nShe laughed again. \"It's me all right. I guess I have changed a little.\"\n\n\"A little! You are incredible! I remember you as a skinny little kid trying to keep up with us boys.\"\n\n\"Yeah. That was me. Skinny, dirty, usually getting into trouble. And generally tagging around after you. Well, don't just stand there. Aren't we still 'kissing cousins'?\"\n\nDan finally came out of his near trance. He smiled at her and started forward. \"If we're not, I would be willing to change families.\" As he came up to her he suddenly realized how dusty and sweaty he was, but Lisa put her arms around his neck and gave him a kiss directly on his mouth. In a second Dan forgot the dust and returned her hug and kiss.\n\n\"Did you really just come by to say hello to them?\" he asked.\n\n\"Well, I had planned on bumming a few meals and a couple of nights' stay. I'm mainly waiting for school to start and had a couple of weeks to kill. I'm meeting a girlfriend in two weeks and we're going to travel around a little, but right now I just thought I'd bum around a little. What are you doing up here?\"\n\n\"Like I said, I'm watching the place. They finally took that trip they were always talking about and I said I'd take care of the place for them this summer. I've got another six weeks before I go back to school.\" Just then there was a distant roll of thunder and Dan suddenly remembered the hay. \"I've also got to get this hay inside before it starts raining.\"\n\n\"OK. Go ahead. I'll just hang around and hassle like I always used to.\" As she said this she ran a fingernail down Dan's back, causing him to shiver.\n\nAs he broke away and went back over to the pile of hay bales, he looked over his shoulder and said, \"You might want to put the top up on your car - or maybe just run it inside the barn. Otherwise it'll be wet pretty soon.\" Lisa nodded and went back to her car and Dan started lifting the bales again. As soon as she had the car inside, Lisa came back and, true to her word, set about kibitzing. Dan started to pull a bale up and Lisa took a long grass head and tickled him just as he was trying to swing the bale. He dropped it and she laughed. The first time it was funny. The second time, less so. By the time she had caused some kind of trouble four or five times, Dan was beginning to get frustrated. He could see the storm moving closer and he wasn't making much progress getting the hay up into the loft. When he stopped to climb up and rearrange the bales again, Lisa followed him up the ladder and continued to hassle.\n\n\"Look, I've got to get this stuff inside. You're really not helping things too much now. Lay off a little, OK?\"\n\nLisa stopped for a second and then a devilish look came across her face. She waited until he picked up another bail and then tickled him again. He dropped the bale and as he started to turn towards her, she said, \"Just what are you going to do about it? Huh?\"\n\nDan stopped. He turned and started to speak with a scowl on his face. Then he stopped and the scowl changed to a grin. \"You remember how those summers we used to play up here a lot. A lot of different things, but I remember playing pirates quite a bit. I think maybe I'll just tie you up as my captive again.\"\n\nLisa's eyes opened wide. \"You wouldn't dare.\" But it was clear from her expression that it was just that - a dare.\n\nDan grabbed her wrists and held both in one hand as he retrieved a coil of rope from a hook on the wall. He quickly looped it around her wrists several times and tied them together in front of her. Despite her struggles, he then pulled her back into the center of the loft and threw the rope over a beam, pulled it until Lisa's hands were well over her head and tied the rope off on a wall cleat.\n\n\"That should keep you out of the way for a few minutes while I finish.\" With that, and amid her protests, Dan went back down and began once again to swing the remaining bales up. After about twenty minutes he had them all inside and once again climbed back to the loft and began to stack them.\n\nAll during this time Lisa was making sarcastic remarks and trying in general to needle him. Finally when he had finished with the hay, Dan came over towards her. \"You are still a pain in the ass, aren't you?\" His tone belied any real anger, though. \"Still hassling and trying to cause me trouble. You know, I really ought to punish you.\"\n\n\"Oh. And just what are you going to do. Is the big, mean pirate captain going to spank me? Or maybe put me on bread and water? Or make me walk the plank?\"\n\n\"Well, a pirate captain must discipline his captives to keep them in line. Maybe you do need a spanking.\"\n\n\"And just who is going to give it to me? And what with? Are you going to spank me with a frat paddle? That's about the speed for a pirate like you, I think.\"\n\n\"A paddle might be just the thing, don't you think? I'm sure you'd remember it.\"\n\n\"Well,\" Lisa said, \"If that's all you can do, go ahead. Of course a real pirate would whip me with a cat of nine tails.\"\n\nDan stopped for a second. This was getting heavier than he had expected. And awfully fast, too. Was she trying to play games or was it just wishful thinking on his part. Well, what the hell. He'd find out soon enough. \"A real pirate would strip you first and after he whipped you he'd turn you over to his fifty man crew.\" Dan realized that maybe he was reading too much into their banter, but he couldn't seem to stop. Hopefully he wouldn't say anything really dumb and make her mad.\n\n\"Yeah,\" Lisa responded, \"But you don't even have the cat, much less the nerve. Maybe you'd better go ahead and get your frat paddle.\"\n\nDan had been about to bring their little game to a close, but at her words he stopped and then turned towards the ladder and started to climb down. \"Where are you going, coward? Running away?\" Lisa called.\n\nDan didn't answer but went into one of the old rooms down on the main floor of the barn. During the long weeks here, Dan had, among other things, spent time working leather. One of the things he had made, without really knowing why, was a multitailed, braided whip. He got it now and shook out the tails. It was a nice piece of work. The handle was leather covered, about a foot long, and the nine tails were of soft, but heavy leather about three feet in length. Dan picked up his toy and went back up the ladder. As he climbed out on the floor, Lisa was still making insulting comments. When she suddenly saw the object in his hands she became silent. \"It seems that I do have the cat. Do you still want to bet about my nerve?\" Dan asked.\n\nShe stared at the whip and licked her lips. Her breathing had become shallow and quick and Dan realized that both of them were becoming sexually aroused. He decided he had better see if she wanted to stop this now before he got too carried away to quit. \"Well, do you want to bet about my nerve or should I just untie you and let you down?\"\n\nLisa's eyes continued to follow the whip. \"No. I was bad and you really should punish me. Don't you think so, Captain?\"\n\nDan almost wasn't sure if this was real or if he was just imagining the whole thing. \"You do need correction,\" he said. He moved towards her and raised his hand to finger the front of her shirt. \"Is this what you want? Really want?\"\n\nLisa answered quietly, \"I've been wanting this for at least seven years. You have no idea of the crush I had on you. Seeing you again just made it a thousand times stronger. When we played up here I wanted you to really notice me. I thought you were only interested in Sue since she was a year older and filled out a little more. But I wanted you so badly I couldn't help myself. I followed you around all the time and dreamed that one of the times we were playing you would tie me up and not stop there, but go on and do all kinds of things to my body. Maybe at that age I didn't know exactly what I wanted you to do, but I sure wanted desperately for you to do it. So don't stop now.\"\n\nDan looked into her eyes and saw a lust which reflected his own feelings. \"Maybe I didn't notice you then in the way you wanted, but, well, things have definitely changed. He reached again to the front of her shirt and took hold of the neckline. \"Well, maybe you should be punished like a real pirate captive.\"\n\nLisa held her breath. Finally she said, \"Well, we do want to be authentic, don't we? If you're not using a paddle, we should do it right. It's an old shirt.\"\n\nDan unfastened a couple of buttons and Lisa's breathing became faster. He also noticed that his shorts were beginning to stick out and his own breathing had changed. Several fingers found their way inside and stroked the sides of two beautiful breasts. Lisa's response showed her own desire. His fingers roamed a litter farther and found two rock hard nipples. Suddenly Dan grabbed the front of her shirt and bunched it in his hand. \"Are you sure you really want this?\" he asked one more time. \"Have you played games like this before?\" He significantly raised the whip in his other hand.\n\n\"A couple of times. Since you have the whip I guess you have too. Right?\"\n\n\"A little. OK, your safeword is redlight. Are you certain this is what you want?\"\n\nLisa looked into his eyes. \"Yes! You have no idea how much! I told you it was an old shirt. Go ahead.\"\n\nDan's hand ripped down, tearing the shirt apart. A couple of more times and Lisa hung by her wrists, naked to the waist. Her breasts were not huge, but were fairly large and firm and beautifully shaped, tipped by long, hard nipples. Dan pulled her against him, her breasts crushing against his bare chest as his mouth found hers. She opened to him and their tongues hungrily explored each other. Dan stepped back and reached for the waistband of her cutoffs. He unfastened the button and started pulling down on the zipper. He hesitated and looked into her eyes and received a nod in reply. He quickly lowered the zipper and then slid the shorts down her legs. A brief pair of black panties followed and Lisa lifted her feet so he could pull them off. Looking up, Dan saw that she was shaved bare. There was a very small bikini line, but even inside the tanned area there was no hair. She looked more lovely naked than he had imagined. Once more he embraced her, pressing himself against her full length. Lisa could feel his hardness through his shorts and pressed back.\n\nDan stepped back and went to the wall cleat. He loosened the rope holding her hands and pulled it tighter, raising Lisa onto her toes. He then tied off the rope once more and went behind her and shook out the whip. He trailed the tails across her naked body for several seconds and then stepped back. \"Very well, Wench. Now we'll teach you a lesson.\" With this he swung the whip, laying a sudden lash across Lisa's lovely bare ass. Her cry was met with another stroke.\n\nAfter five strokes he stopped. He hadn't struck very hard and her skin was only slightly pink where the leather had caressed it. Lisa looked over her shoulder. \"Is that all the better you can do captain? You must have a really sissy crew it that would keep them in line. Keep it up and I'll probably go to sleep.\"\n\nDan swung again, harder this time, making a small gasp escape her lips. Another crossing in the opposite direction. Now he could definitely see two sets of red lines on her white ass.\n\n\"Worn out already? she teased. \"I should have known that you couldn't handle a real woman. Captain Wimp, is it?\"\n\nDan stepped back a little. \"We'll see about that, Wench. I'll try not to damage your lovely skin permanently, but you'll wear my marks tomorrow.\" Suddenly there was a crash of thunder much louder than any they had heard from the approaching storm. Then the rain broke, coming down in torrents, echoing off the barn roof. Lightening flashes and thunder added a surreal feeling to the scene. Dan then began to whip her in earnest. Each stroke of the cat left a set of red lines across her ass, and then across her back and thighs. Thunder mixed with her cries.\n\nFinally after about twenty more strokes, he stopped and went around in front of her. Lisa was breathing hard but it was obvious she was aroused. In fact he could see her juices dripping down the insides of her thighs. \"Had enough yet, Woman? Are you ready to yield and call me master?\" As he said this he raised the whip and pulled it lightly across her front.\n\nLisa's eyes opened a little wider and she said, \"No way, you pirate! You're probably afraid to whip me properly so I'll just wait until you wear yourself out.\"\n\nDan stopped and lowered the whip. Laying it down, he started over to the wall and said, \"We'll see who wears out first.\" He then collected a couple of pieces of rope and tied the end of each piece to one of her ankles. Using two of the iron tie downs embedded in the loft floor, he pulled her ankles, spreading her legs about two feet apart. Since she was already on her toes, this had the effect of stretching her even more tightly.\n\n\"Now we can really begin,\" he said. He raised the whip and struck her across her stomach. A set of red lines appeared and Lisa sucked in her breath. He continued to whip her, striking her breasts and the fronts of her thighs as well as occasionally moving around to her ass and back again. Lisa was obviously becoming more turned on as the lashes fell. Watching her, Dan thought that she was actually nearing orgasm. He increased the severity of the blows a little and when he thought she was about to go over the top he moved behind her and brought the whip up between her legs, letting the tails bisect her pussy lips and end with a snap on her clit. Lisa pulled tightly against her bonds and cried out as she came. As she started to come down a little she said, \"Don't stop yet. I need a couple of more and then I want you.\"",
        "Dan was happy to comply. He delivered another ten strokes and then dropped the whip and moved a couple of hay bales behind her. He found an old blanket and threw it across the bales. He then loosened the rope holding her wrists and lowered her so she was lying on her back across the bales with her legs still spread and tied to the floor. He tied off the rope to another tie down ring on the floor, leaving her stretched tightly, open and available. Removing his shorts and underwear, he let his hard cock free and approached between her legs. The rain had settled into a steady roar, pelting the roof. Occasionally lightening flashed, producing strange patterns of light and shadow on the lovely girl stretched before him. He looked down at her, and, reading the lust and excitement in her eyes, lowered himself and plunged deeply into her with a single stroke. Both of the young people were so excited that in only a matter of seconds Lisa was coming again followed immediately by Dan.\n\nCousin - Ch 2\n\nTheir cries mingled with the sounds of the storm and, like the storm, gradually became softer. Spent, Dan remained atop her stretched body, but lifted himself on his arms. He lowered his lips to her breasts and slowly sucked and kissed each nipple. Lisa drew in her breath and quivered at his touch. His tongue traced some of the red lines left from the whipping and this too brought a response from the bound girl. With a catch in her breath she said, \"All right, Captain,\" you've kept your word. Now what about the rest of it. Are you going to bring on your crew of fifty?\"\n\nDan smiled. \"Well, I don't seem to have a crew around here, so I guess you won't be getting raped just now.\"\n\n\"Now, Captain, you promised,\" Lisa teased. \"If you haven't got a crew I guess you should just take me fifty times again yourself.\"\n\n\"I don't think even I could recover that quickly. But if you stay around here four or five days, I'm sure you will have your fifty ravishments.\"\n\n\"Four or five days for fifty times? That sounds a lot like bragging, Captain. I've got the five days but I don't think you could really do it,\" Lisa taunted.\n\nDan replied, \"Want to make that a bet? Come on, put your body where your mouth is. Or is that your mouth where my body is, or something like that, anyway.\"\n\nThe fire was back in Lisa's eyes. \"All right, we'll make it a bet. Within five days from now, you will have to take me fifty times. And you'll have to come each time yourself. That's fair enough, isn't it.\"\n\nDan wondered what he was getting himself into. Could he really manage it? It would sure be fun trying, anyway. \"All right, but let's agree on the rules. I \"take\" you - that means penetration with my cock but I won't limit myself to your pussy. And you can't refuse me. If you do at any time you lose the bet. And I'll agree I have to come each time, either inside or on you. And one other thing. I get to keep you as my captive during the time.\"\n\nNow it was Lisa's turn to hesitate. \"OK, but what do you mean by captive? I still get my safeword, right? And refusing punishment is not the same as refusing you. If I get too sore I'm not going to keep letting you whip me. And what are the stakes?\"\n\nDan replied, \"Agreed. Of course you'll have a safeword. In fact, two. Yellow light means to slow down. Red light means stop now. I won't try to win by beating you too much. But I do plan to keep you in some form of bondage most of the time. As for the stakes, you said you had a couple of weeks before meeting your girlfriend, right.\" Lisa nodded. \"Then if you lose you will remain my captive until then. What do you want if you win?\"\n\nLisa smiled at him. \"I can go along with all that. And if I win I want you as my captive. OK?\"\n\nDan was startled. He had played BDSM games with a couple of girlfriends but nothing as heavy as he and Lisa had today. And as for being the captive, he had never tried that angle before. \"All right,\" he replied. \"I agree. Have we got a bet?\"\n\nLisa grinned and said, \"Yes, it's a bet. I'm going to enjoy having you as my plaything. Let me up and I'll move my stuff into the house.\"\n\n\"Not so fast,\" Dan said. \"I have something else in mind first.\" With this he slid down her body and stopped with his face between her legs. He began slowly licking and nibbling at her pussy lips. Soon he was working his tongue in and out of her slit and whipping the tip across her clit. Lisa responded excitedly. As his hands roamed up and tugged at her nipples, he found them hard already. He also found himself getting hard again and soon was busy thrusting in and out of her wet pussy once more. It took a little longer this time - maybe even two minutes! - but soon he was coming again. Lisa joined him and orgasmed herself along with him.\n\nWhen they had calmed down, Dan said, \"forty nine to go,\" and set about releasing her ankles and then her wrists. He helped her to stand - naturally she was a little shaky from being stretched so much. He held her close and stroked her ass. Lisa obviously liked it and pressed herself closer against him. \"I've waited years for this,\" she said. \"And it was even better than I imagined. I almost hope you can win this bet.\"\n\nThe rain had stopped now and the sun was coming out again. Lisa started to pick up her clothes, but Dan stopped her. \"No. No clothes. My captives must remain naked. I may let you have some shoes when we're outside, but no clothing for you for the next five days.\" He wrapped several turns of large, soft rope around her wrists, tying them together. He then attached the rope to the hook on the pulley rope. \"Remember how we used to ride the rope down when we played in here. Well, you are going to get to ride it in a slightly different way.\"\n\nWith this he pulled the rope and swung Lisa out so she was dangling, completely naked, outside the end of the barn high above the ground. He proceeded to lower her, but stopped with her feet still a foot or two above the ground itself. He tied off the rope and then went down the ladder and out the door. He came up in front of Lisa and she immediately noticed his face was on a level with her crotch. Almost as quickly, Dan lifted her legs and placed them on his shoulders. His hands on her ass brought her pussy against his mouth and he started to use his tongue to excite her. He squeezed her ass cheeks and probed deeply with his tongue. Using her juices, which were pouring out of her, he wet his finger and probed at the entrance to her rear passage. For a second Lisa stiffened against the intrusion, but then relaxed and allowed his finger to work its way inside her ass. Within minutes she was going over the top again and coming hard against his mouth. When she finally stopped coming Dan released her wrists from the hook and lowered her to the ground.\n\n\"That doesn't count,\" Lisa said. \"You didn't come.\"\n\n\"Oh, I know that. I said I would ravish you fifty times, but I didn't say I wouldn't do anything else to you, remember?\"\n\nDan lowered Lisa the rest of the way so she was standing on her own feet and then freed her from the pulley rope. However, he left her hands bound together in front of her. \"Let's get what you'll need from your car,\" he said. He picked up her sandals and shorts and found the luggage compartment key in a pocket and then led her over to it. Dan opened the trunk and saw a backpack as well as a larger bag. He looked questioningly at Lisa.\n\n\"Everything I need for a couple of days is in the backpack,\" she said.\n\n\"Probably even more than you'll need,\" Dan replied. He dropped the shorts into the compartment and opened the pack. \"You won't be needing the clothes,\" Dan said, bringing a pink flush to Lisa's face. Does this case have your brush and comb, any medicine you need, and stuff like that?\" He held up a small plastic travel case.\n\nLisa said, \"Yes. I guess I can get by with just that if I have to.\"\n\n\"You have to,\" Dan said. \"But I'll bring in your shoes in case we go outside somewhere, shall we say, off the beaten path.\" He looked at the startled expression on Lisa's face and added, \"You know as well as I that no one comes around here. I haven't seen another person at all in the last eight weeks. You won't have to worry about anyone else seeing us and I'm not going to take you anywhere away from here.\" With that he slammed the compartment lid keeping out only the small case, her sandals, and a pair of running shoes.\n\n\"Now let's go inside. It's getting to be pretty late and I think we both could use cleaning up before supper. Hungry enough for a steak?\"\n\nLisa replied, \"Definitely! I have a feeling I'm going to need my strength in the next few days.\"\n\nDan was using one of the bedrooms upstairs which had its own tiled bathroom. There was a large, walk-in shower and Dan now led Lisa into this. He took the end of the rope holding her wrists and tied it to a towel ring high up on the shower wall. He then stripped off his own shorts and joined her, adjusting the warm spray to cover them both. Dan used a cloth and soap to wash both himself and Lisa paying particular attention to her breasts and crotch and then rinsed her using a hand shower. The experience of having someone else wash her was new to Lisa, but she found it exciting. She was certainly glad she had decided to stop and see Tom and Mary. It looked like she was going to have a lot of fun this week.\n\nDan dried her too, using large, soft towels, and then untied her wrists. He found a clean pair of shorts for himself but, as he had promised, kept Lisa completely naked. Lisa was comfortable with her own body, often wore revealing clothes, and owned several skimpy bathing suits which she had worn to the beach. She had been undressed with several different men. But she was unprepared for the sensation of being nude while her companion wore something and they went about ordinary, non-sexual activities. As she helped Dan get dinner ready, she found she was prone to blush easily, but was also turned on by the entire thing.\n\nAs she was washing some lettuce in the sink Dan came up behind her and reached around to play with her nipples. He surprised her and his touch was almost like a shock, immediately hardening her nipples and releasing a small flood between her legs. His hands closed over her breasts and she pushed herself back against him. Surprise, again! He had somehow shed his own shorts and was as naked as she. His cock was also already hard and the tip began to probe her slit. She responded enthusiastically and soon he was plunging in and out of her. He came with his hands pulling her hips tightly against him while she supported herself on the sink.\n\nAs Dan finally pulled away, he said, \"Forty eight to go. But I think we'll need to write it down. I don't want you to lose count and try to get out of the bet that way.\"\n\nDan handed Lisa a small hand towel to wipe herself with and used another on himself. As Dan slipped back into his cutoffs Lisa thought, \"I bet we go through a lot of laundry in the next five days, even if I won't be wearing any of it.\"\n\nDan then rummaged inside a cabinet and a drawer and found a small piece of white posterboard and a black felt marker. He used a pair of thumbtacks to fasten it to the cork board in the hall and made two vertical marks near the top. He capped the marker and laid it on a nearby table. \"We'll just keep a score card where we can keep track.\" Lisa had to laugh at the idea of Dan \"scoring\" and posting it on the board.\n\nWhen the steaks were ready they took them and a salad out onto a screened-in porch along with a pitcher of iced tea. There was a small table with cushioned patio chairs where they could eat. The day was still hot and Lisa realized she wasn't chilled at all. Well, there wasn't that much difference between cutoffs and a halter top and nothing at all. She still felt self conscious, but was rapidly adjusting to being naked.\n\nWhile they ate the couple talked, catching up on the seven years since they had seen each other. Lisa began, \"After that summer I came back here the next couple of years, but you weren't here. By the time I was fifteen I had begun to fill out a little and wished desperately that you were here too. I was sure that then I could get you to notice me. You wouldn't believe the fantasies I dreamed up. But you would have liked them. Most of them involved you removing my clothes in some fashion or the other. After a couple of years I stopped coming here in the summer, but I've still managed to stop by and see Uncle Tom and Aunt Mary for a few days most years. It's been a little over a year now. I knew they were planning their trip, but I didn't know when. But I'm glad it was now and everything worked out like it has.\"\n\nDan said, \"Well, I stopped coming here during the summers when I started to have a job then. But since I started college I've managed to get here a week or so each year to help out. It's not like Tom and Mary are that old - they're both forty nine, I think - but even though this isn't a full time working farm any more there were still a lot of things that were easier with three of us. Also I like it here. It's quiet and relaxing and after nine months of physics equations, a break like this helps out. It's surprising we never happened to be here at the same time. And, yes, I'm very sure I would have noticed you. You are definitely not the skinny little tomboy any more.\"\n\nLisa asked, \"Do you ever get out to Grandma's beach place? I know Grandma died several years ago, but I still think of it as hers. Actually I believe Tom and Mary inherited it. I usually manage a few weekends there, but generally there's no one else around. It also makes a nice place for a quiet break. You're about to finish school, aren't you? Have you decided what you're going to do?\"\n\n\"You do still jump around a bit, don't you? But, no, I haven't been out to the beach place in years. And as for my plans after graduation, I'm going straight to grad school. I've always wanted to teach college and that means a PhD. So I guess I'll still be studying physics for awhile yet. What about you?\"\n\n\"I've still got a couple of years to go. I'm majoring in Comp Sci and will probably look for a programming job when I graduate.\"\n\nAfter a short silence Dan said, \"Not to change the subject too much, but, much as I would like to claim all the credit for what happened this afternoon, I get the feeling that you are a girl who just plain likes sex. Am I right about that?\"\n\nLisa actually blushed, which, given her state of undress, was an interesting phenomena to observe. \"I guess so. I had my first experience when I was sixteen and loved it. And it's not like I sleep around. I've had several boyfriends, but only one at a time. And sex was always a big part of the relationship, but not the only part.\"\n\n\"Did one of them get you into BDSM - you're familiar with the term?\" Lisa nodded. \"You seem to have had some experience along those lines.\"\n\n\"There was one guy I was going with a couple of years ago. On my birthday he took me out and later insisted on giving me a birthday spanking. Not realizing exactly what he had in mind, I let him. I mean we had been going together for a while and I trusted him. Well, first he put me over his knee and then held my hands up behind my back. This surprised me somewhat, but I couldn't move at all. But then he pulled my skirt up and my panties down. I wasn't expecting it to be a bare bottom spanking. Anyway he proceeded to really beat the hell out of my ass. But the funny thing was that, even though it really hurt, and even though I yelled and screamed, I found myself getting incredibly turned on. When he finally gave me the \"one to grow on\" and let me up, I practically raped him. I think he was surprised by my response but that didn't stop him from taking advantage of it. Over the next few months he introduced me to bondage and spanking games. We used hands, a hairbrush, a leather belt and a paddle and I even spanked him once in a while. We never got to anything as heavy as this afternoon and after a few months we decided to break up. I got one of my later boyfriends to spank me once, but he didn't really like it. Since then it's all been pretty much fantasy. And the games we played here when I was twelve and thirteen provided a lot of ideas for those daydreams. When you said you were going to tie me up this afternoon, I got wet right then and nearly came when you did it. What about you? How did you get into this?\"\n\nDan smiled. \"Well, I've more or less always fantasied about bondage and such. Once I was old enough to know about sex that got added to the daydreams. When I went to college I found a few magazines that talked about that type of thing and raised my interest even more. One of the girls I went out with had just joined a sorority and for awhile she had to carry that silly paddle around with her. One night we got to talking about it and she told me how they used the paddles at pledge meetings to punish the pledges. Well, while we were talking about this we had been necking pretty heavily and she seemed to be getting aroused. I asked her what the spankings felt like. She said something like that I would really be surprised. At the look on my face she seemed to stop for a second and then asked me to use the paddle on her and she would show me. I thought she was kidding at first, but she seemed to be getting more and more excited. When she pulled down her shorts and lay across my lap, I took the paddle and laid into her ass. It was obviously turning her on and after about ten strokes we were tearing at each other's clothes and ended up in one of the hottest times I had ever had.\n\n\"Over the next few months we explored this a little. She tried spanking me once, but she seemed to like being on the receiving end more. We did take turns tying each other up. Mostly we just teased each other while they were bound but once or twice I used a belt on her and she seemed to really like it. We never went as far as this afternoon either, but I created a host of imaginary scenes. I just never had the nerve to really try them out. Did you really like that this afternoon?\"\n\nLisa nodded. \"Yes, most definitely. I wouldn't like to be really hurt. No blood or broken skin. No piercing or brands or anything like that. And I'm not the \"slave\" type. I don't want to be psychologically dominated or humiliated or anything along those lines. But I do like being bound and I like the stimulation of pain as long as I don't have to worry about it going too far. I wouldn't want anyone doing something to me if I didn't know I could stop them. But I've always trusted you completely, so I'm more than willing to try some more of these games if you want to.\"\n\nDan laughed. \"If I want to? You can't imagine how much of a dream come true this is. I told you I had made up all kinds of fantasies and I've still got a lot of things I want to try. I made that whip just as something to do this summer, but in the back of my mind I knew I was hoping for a chance to play some real games with it. You'll also find I've made a few other things to keep myself busy this summer. Some of them might come in handy too.\" After they cleaned up the dishes, Lisa halfway expected Dan to take her on to bed even though it was only seven o'clock. But instead Dan asked, \"Would you like to watch a movie? There's a pretty good VCR system here.\"\n\nLisa looked a little confused. \"Yeah, I guess so. What did you have in mind?\"\n\nDan smiled. \"That depends. I'm betting you're the type of girl who appreciates \"adult\" films. Right?\"\n\nLisa hesitated. \"By 'adult' do you mean X-rated? explicit sex?\" Dan nodded. \"She lowered her head a little and said, with a little embarrassment, \"I've never actually seen one. But the idea sounds exciting. Have you actually got one here?\"\n\nDan smiled. \"No, I haven't got one here. I have a couple of dozen. And most of them are bondage and discipline types. Still interested?\"",
        "Lisa grinned. \"Definitely. I'm sure my education wouldn't be complete without them.\"\n\nDan retrieved a couple of video tapes and took them into a room with a large screen TV. The windows were covered with heavy drapes which could make the room dark even in daytime. Lisa looked around and saw a couch and a chair against one wall, and a single leather recliner facing the TV. As Dan inserted the tape and picked up the remote she wondered where they would sit.\n\nDan came back over to her and pulled a couple of bandanas out of his pocket. \"I think my captive should be restrained a little, don't you. Put your hands behind you. No, wrist to elbow. That's right.\" He then tied her forearms together. Lisa found that this position, while denying her the use of her hands, was not uncomfortable.\n\nDan led her over to the leather chair. \"Now let's make this a little more interesting,\" he said. As he said that he was removing his own cutoffs. Now, naked, he sat back in the recliner and pulled Lisa down onto his lap. She could feel his cock, beginning to harden, between her legs. His arms wrapped around her and his hands slid up to her breasts as he pushed play on the remote.\n\nThe scene on the screen opened with an attractive young woman, dressed in a skirt and blouse, tied to a straight chair and blindfolded. There were two men behind her discussing the situation. From the dialog it seemed that they had kidnaped the woman who worked for a rival firm and wanted to get information from her on a new product. Lisa soon saw that the plot was not the strong point of this film. It wouldn't even have made the level of a Grade B movie. But soon she saw something she had never seen in any movie, Grade B or otherwise. The men proceeded to rip off the woman's clothes and began to tease her sexually. Still blindfolded so she couldn't tell who they were, she couldn't help but respond as they played with her breasts and pulled at her nipples. They then used their fingers on her pussy and Lisa watched wide eyed as the camera clearly showed their fingers penetrating her. When the woman became aroused, the men untied her from the chair, but retied her hands behind her back. She was then \"made\" - she looked to be pretty cooperative, however - to suck them off and finally to ride one man's cock while the other fucked her mouth.\n\nAs Lisa watched the explicit action on the screen she found she was becoming wetter and wetter. The fact that Dan was rolling her nipples between his thumbs and forefingers and wiggling his cock against her own pussy didn't do anything to cool her off either. After about fifteen minutes of this, Dan rearranged her a little on his lap. As he eased her back down, his cock contacted the entrance to her pussy and pushed itself inside. She was sitting, naked, impaled on Dan's hard member, and watching a hardcore sex scene being shown in great detail on the screen in front of her. Not surprisingly in a matter of minutes she was coming again and so was Dan. But afterwards he remained still with his cock still inside her as he gently stroked her body.\n\nThe scenes on the TV continued to unfold. At one point the two men tied the girl so she was bent over the back of a stuffed chair. They then used leather straps and a riding crop to whip her ass and then finally they each fucked her again while she was bound to the chair. By the time the film ended with the two men leaving the woman bound over the chair back with a promise to call her boss and tell him where she was, Lisa was again hot and responding to Dan's repeated thrusts. Again the two of them came in a hot - and loud - climax.\n\nDan had a couple of other videos which were even hotter. One had two women tied spread eagled from a ceiling while they were whipped with cats of nine tails. Another showed a woman's ass being striped with a crop and strap and then showed her being taken anally. Lisa stared at most of these wide eyed, but by the time they were finished at eleven thirty she had come four more times and Dan had once more exploded inside her. She started thinking. He had had her a total of six times in less than eight hours. The first after her whipping and five times since - once more in the barn, once at the kitchen sink, and three times here in the chair while they watched the films. He was already ten percent of the way to winning the bet and it hadn't even been half a day yet. This guy was incredible!\n\nDan finally released her and the couple went up stairs. But first he stopped by the corkboard and, as Lisa watched, added two more vertical lines and a crossing diagonal, recording the evening's activities. They quickly showered together again. This time Dan helped a little but he allowed Lisa to mostly wash herself. Afterwards he led her into the bedroom. He then brought out two pair of soft leather cuffs. \"I told you I made some interesting things this summer,\" he said as he fastened the cuffs about her wrists and ankles. They weren't too tight and were actually not uncomfortable at all He then tied her spread eagled to the bed, but loosely enough so she could sleep without getting too stiff. He turned out the lights and climbed into bed with her. In a minute or so Lisa felt his tongue begin to cress her nipples. She had never had so much sex in a single day before but she immediately responded to his ministrations. In another few minutes they were again wildly thrusting against each other until Dan exploded within her once more and she came with her own noisy climax. Just then she became aware of the hall clock chiming midnight. As she fell asleep, Lisa thought, \"Six. and still less than half a day.\"\n\nCousin - Ch. 3\n\nBy morning the total was up to eight. Lisa was astounded. In fact Dan was a little surprised himself. But having this beautiful creature bound naked next to him had turned Dan on more that he would have thought possible. As they came awake finally around seven thirty, Dan once again began to stroke her and Lisa once again began to respond. Soon Dan turned around, straddled her, and lowered his cock to her hungry mouth and let his own mouth and tongue begin to explore her pussy. Soon they were engaged in a hot sixty nine with Lisa's tongue swirling about the head of his hard cock and Dan sucking on her clit and fucking her with his tongue. A few more minutes of this and he was spurting all over her. Lisa tried to swallow as much as possible, but the constant twisting and movement as he made her come herself let a lot splash all over her face.\n\nDan untied her and the couple headed for the shower. Lisa was surprised how easily she had fallen into the routine of showering with a man. but then again she had known Dan most of her life even if it had been a while since she had seen him last. Besides, if she was becoming comfortable being naked around him all the time, why should it surprise her if they showered together.\n\nThey had breakfast and then Dan suggested they go down to the lake for a swim. The day had already gotten hot and this sounded like a good idea to Lisa. The lake was a dammed up stream and had spread to several acres in size. While there was no sand beach there was a smoothly mown area of grass which went all the way down to the water and a floating platform about twenty yards from the shore.\n\nThey swam naked. Lisa remembered skinny dipping here when they were kids a few times - when their aunt and uncle had gone into town for the day, of course. They splashed and played for awhile - including a little grab ass and some goosing - and finally swam out well beyond the float and then back to it. They climbed up onto the floating platform and stretched out in the sun to rest. Not surprisingly, they soon began to fondle each other and before too long Dan's \"score\" had climbed to ten. Afterwards, lying side by side with their hands occasionally feeling each other, they fell asleep in the sun. Fortunately they woke before becoming sunburned. \"That would sure have put a crimp in our bet,\" Lisa thought. Returning to shore Dan pulled her down on the grass in the shade of the trees a few yards above the shore line and made a dive for her crotch. \"This guy seems to be able to go on forever,\" Lisa thought, not at all unhappily. \"Even if I do lose the bet, I'm going to have a hell of a lot of fun doing it.\"\n\nAfter he had made her come twice, Dan shifted position and Lisa began to suck his hard cock. She let her fingers play with his balls and the sensitive area between them and his anus while tonguing and sucking his member. She wet her finger and, as Dan had done to her yesterday, worked it into his rectum. This pushed him over the top and this time Lisa managed to get all of his come down.\n\nWhen they had calmed down, they had a quick swim to cool down and clean off and then went back to the house for lunch. As they walked with their arms around each other, Lisa smiled to herself and thought, \"This is turning into one unbelievable vacation. Never even in any of the fantasies I've dreamed up have I had anything this hot. And even if I tried to tell anyone, no one would believe me.\" This thought was further reenforced as Dan marked times ten and eleven on the score sheet.\n\nAfter a lunch of cold fruit, bread and cheese, Lisa almost shyly asked, \"You said you had more of those videos?\"\n\nDan grinned, \"So you found you liked hard core films, eh?\" Lisa nodded and actually blushed a little. \"Well, it so happens that I have a total of twenty nine of them here. Some aren't commercial tapes, but ones I've gotten copies of from some guys on campus. These are amateur stuff of them and their girlfriends. The quality isn't always the best, but the tapes are really hot and show some things you probably won't find anywhere else. Want to watch one of these?\"\n\nLisa's eyes had opened wide and her mouth had actually dropped open when Dan described these. \"You mean these are real people you know? And the sex is real, not faked?\"\n\n\"That's right. And the paddling and whipping isn't faked either. Interested?\"\n\n\"Yes! Definitely yes! Let's go.\"\n\n\"OK, OK,\" laughed Dan. I'll get one. But I'm going to tie your hands again. Can't have you getting carried away, now can we?\"\n\n\"Sure we can't,\" thought Lisa. \"He knows damn well that tying me up will just make me hotter. But I'm certainly not objecting.\" She smiled to herself as she followed Dan into the TV room and had her hands in position by the time he got the two bandanas.\n\nDan removed his own shorts again, but this time before starting the film he pulled Lisa into a tight embrace and gave her a long, deep French kiss which left them both a little breathless. Her nipples were hard against his chest and she could feel his cock already hard again pressing against her stomach. In fact he pushed it into her from behind before pulling her down into the leather chair with him.\n\nThe tapes were sharp, clear, and well lighted, but the cinematography left a lot to be desired. Whoever took it was obviously not a professional. But the content was incredible! In the first part there were two good looking girls about nineteen or twenty. One was tied facing an X-shaped wooden frame and the other was bent over what looked like a padded sawhorse with her wrists and ankles spread and tied to the legs. Both were completely naked. Lisa watched enthralled as a man moved into the shot and clamped clothes pins to the nipples of the girl on the sawhorse. He then added what looked like small fishing sinkers to them. This stretched her breasts down and Lisa thought this must have really hurt. But she also wondered what it would be like to experience it herself.\n\nA second man entered and held up a six inch dildo which Lisa could see was shinny with something. He went over to the girl on the X-frame and used his finger and a jar of Vaseline to lube her asshole. Lisa watched the girl twist and squirm, obviously responding to his finger in her rectum. Finally he removed his finger and began to work the dildo into her ass. The girl's breathing became more and more excited and she appeared to really enjoy having her rear stuffed.\n\nThe two men fondled and teased the women for several minutes and then stepped out of the camera view for a few seconds. When they came back one was holding a cat of nine tails and the other had a long leather paddle. They then began to beat the women on the ass. The paddle was applied to the girl on the sawhorse and the whip to the one on the frame. Lisa could see their asses turning red and hear their cries. After what must have been twenty or thirty strokes, the two men switched places and used the new instruments on the helpless women. Some of these strokes must have really hurt, but the women didn't seemed to be objecting. They cried out and Lisa could see tears, but they even asked for more a few times.\n\nFinally the man with the whip dropped it on the floor and took off his own jeans, which were all he had on. He took the Vaseline and proceeded to grease the rectum of the girl on the horse, much to her appreciation. He then lubricated his own hard six inch cock and began to push it into her rear opening. The woman cried out as his cock buried itself deeper and deeper into her ass. It must have hurt, but in a few minutes she began to push back against his thrusts and called for him to fuck her ass hard. Lisa stared open mouthed at this action. She was obviously becoming aroused by it and began to rhythmically squeeze Dan's cock with her vaginal muscles. By the time the man in the video was coming in the woman's ass, Lisa and Dan were coming themselves.\n\nThey continued to sit with his softening cock still inside her as the film continued. Now the girl on the x-frame had the dildo pulled from her ass and was released. She was turned around and retied with her back to the frame. One of the men brought over an adjustable metal stand, somewhat like a short music stand, and screwed a long, thick dildo to the top. He moved the stand between the woman's legs and raised it until the dildo met her body. Lisa looked closely and saw that the dildo was touching the woman's anus, not her pussy. The man then proceeded to raise the dildo, shinny with lube, and penetrate the woman's ass. He raised it until it was fully embedded and then a little more causing the girl to arch and come up on her toes. He locked the stand at this height, stepped back and picked up the cat. He then began to whip the girl's front including her breasts, stomach and thighs. She responded and became more and more excited as red lines appeared all across her front. Finally he laid a couple of strokes directly onto her pussy and she came in a shuddering climax. But he didn't release her. Instead he dropped his jeans and fucked her, standing while she was still tied to the frame and balancing on the fake cock in her ass. She came again just before the man exploded in his own climax.\n\nLisa shivered and Dan asked, \"Did that get to you a little? Find it kind of exciting?\"\n\n\"You know it,\" she replied. I don't think I've stopped dripping since I got here and you keep finding one thing after another to keep me that way. If I'd known what 'adult' videos were like I would have started watching them a long time ago. Are these really just a couple of people you know on campus?\"\n\n\"Well, I actually only know two of them. The girl on the horse and the guy who finally fucked her. The other couple I've heard about but have never met.\"\n\nLisa asked, \"Does she really like taking it in the rear? It looked like she did, but it seems like it would hurt too much to enjoy.\"\n\nDan laughed. \"Yes, she really does like it that way. In fact, from what I've heard, many women find it a real turn on. If it's done right, it won't really hurt. I think maybe I should try it on you. You've never tried it that way?\"\n\nLisa replied, \"No, I've always been afraid it would hurt too much. And I know it's easy to get infections that way. I'm not sure I'll let even you do that.\"\n\n\"You do have to be careful of a couple of things,\" Dan said. \"You must always wash afterwards before the cock goes anywhere else. And I'll have to be sure and take it easy warming you up so you can relax. As for letting me, you're my captive, remember? But, really, you know I would never do anything to hurt you or anything you really don't want me to. OK?\"\n\n\"We'll still have to see,\" Lisa replied.\n\nThat afternoon the couple spent wandering around the place, walking some of the wooded paths, and wading in one of the streams. Once Dan tied Lisa to a tree and spent forty five minutes teasing her to three or four climaxes before taking her again himself. By the time four o'clock had come Lisa realized the he had fucked her fourteen times in the last twenty four hours. There were still four days to go and Lisa was now beginning to believe she was probably going to lose their bet. \"But,\" she thought, \"what a way to lose!\"\n\nAfter supper they watched a couple of other tapes and twice made love on the floor in front of the TV. But by ten they were both beginning to fall asleep. After all the last day and a half had been extremely strenuous, to say the least. Once more they showered and Dan tied Lisa to the bed again. But this time he tied her face down. Their playing around in the shower had made them both a little more awake (and excited) and, even though they were still really tired, both knew there would be at least one more time before they fell asleep.\n\nWhat Lisa wasn't expecting, however, was that after Dan had stroked and played with her, pinched her nipples, and fingered her pussy getting her really hot and worked up, he would use his finger to begin applying lube to her anus. At first she tightened up and tried to keep him out. But he kept at it, continuing to excite her and finally getting her to relax and accept first one and then two fingers in her bottom. Lisa had never had her anus played with very much and was surprised to find how good it felt. Soon she was pushing back against Dan's fingers and squirming to get them in deeper. When he removed his fingers and placed the head of his cock at her secret opening she tightened only for a second and then allowed him to slowly work the head inside. He lay still for a little while as she became accustomed to the intruder. Then he began to move very slightly, always working his hard member deeper into her virgin bottom.\n\nFinally when he was embedded all the way he stopped and just remained still. Lisa had never felt so full or so ... so ... so - she wasn't even sure of what word she wanted. But the feeling was like nothing she had ever felt before. There had been some pain as he was entering her, but now it didn't hurt at all and felt so good. Soon she began to rock back and forth against him and finally could take it no longer and cried out, \"Do it, Dan! Fuck my ass. Hard!\"\n\nDan began to move in and out. Not hard at first - Lisa wouldn't really have liked it if he started off too hard. But he increased the speed and depth of stroke until finally Lisa came in a screaming climax which pushed Dan over the edge so he let his own load go deep within her bowels. They both slowed and then stopped moving and in a couple of minutes Dan began to gently pull out of her ass. As he popped free, Lisa felt a strange emptiness and let out a sigh.\n\n\"Well, was that so bad now?\" Dan asked.\n\nLisa slowly replied, \"No, it wasn't bad at all. In fact I'm not sure I've ever come like that. You were right - it didn't really hurt at all. And the sensations are incredible! And you know what? I think being tied down made it even more exciting. For some reason I think that if I had been free it would still have been fun, but nowhere near as earth shattering. Does that make sense?\"\n\n\"Yes, it makes sense to me. And I'm really glad you enjoyed it. You can count on some more of the same in the next few days.\" Dan yawned, which caused Lisa to yawn herself. \"I think we had both better get some sleep now,\" Dan said. \"I have a lot planned for you tomorrow.\"",
        "Cousin - Ch.4\n\nThe two slept the sleep of the exhausted until Dan woke at about six the next morning. He was used to getting up even earlier than this, but then his activities the last couple of days had been demanding to say the least. \"But I certainly am not complaining,\" he thought as he looked over at Lisa's tight ass as she lay still asleep. As he watched her sleep and thought about their activities, Dan realized he was already hard. Lisa began to stir and Dan took advantage by running his fingers over her body. Soon she was awake and becoming aroused and Dan wasted little time in entering her pussy from behind as she, still tied to the bed, struggled against him to get him deeper within herself.\n\nThey showered together and as they soaped each other they started getting turned on again. They finished their shower with Lisa holding on to the shower with her hands over her head while Dan fucked her against the shower wall.\n\nThis day continued much like the last. They swam, hiked in the woods. This time Dan didn't bother wearing anything except shoes either. They watched more videos. At lunchtime they took a picnic out under the apple trees on the hill behind the house and feasted on sandwiches, fruit, and each other. They slept for awhile in the shade and when they awoke found they were again hungry - at least for each other.\n\nThe following day was much the same. A few more cat naps, but neither seemed to be tiring of the overload of sex. At one point Lisa even said, \"I can't believe I'm still hot for you almost all the time. I know I said I like sex, but I've never even come close to anything like this. I hope I don't wear you out too much to do anything the next couple of weeks - regardless of who wins the bet.\"\n\n\"Don't worry,\" Dan replied. \"I'm a little surprised myself, but I'm still getting hard every time I look at you. Maybe your wanting me all those years has caught up and now I'm feeling the same way. Speaking of which, if you could come sit on my lap and spread your legs a little ... Oh, yes, that's the way. Keep going. Keep going.\"\n\nBy the time supper came, the score sheet showed a total of thirty nine. \"And,\" Lisa thought as she looked at the sheet, \"we're just three days and one hour into the five. I'd better get used to the idea of being his captive for another week or so. Not that I find that prospect too forbidding.\"\n\nThey ate supper on the porch again and talked some more about the past. \"You know,\" Dan said, \"I should really be exhausted, but I'm not at all. It must be the company. I would have thought that by now we'd be like that picture of Tom and Mary in the dining room.\"\n\nLisa looked blank. \"What picture. The only one I remember is the one from their honeymoon with Tom sitting in a wicker chair and Mary standing behind him. I think there were some horses and stables in the background. Is that the one and if so what does it have to do with us?\"\n\n\"That's the one, all right,\" Dan said. You know the story about that? No? Well, they had been out horseback riding all day. When I was about eight I was interested in horses and riding and was up here one summer. I kept asking Uncle Tom about the picture and he told me all about it. How they had been riding all day and he was worn out. Aunt Mary hadn't done much riding before that and was pretty stiff and bruised from sitting in a saddle all day. Well, one time after that a neighbor woman - there were neighbors here then - was over and we were all sitting in the dining room having lunch. She asked about the photo and since I, as an eight year old, was proud to know about something that an adult didn't, explained. Oh course the way I told it was: 'That's Aunt Mary and Uncle Tom on their honeymoon. She was too sore to sit down and he was too tired to stand up.'\"\n\nLisa burst into laughter and nearly choked on her drink. \"I'll bet that went over well.\"\n\nDan had joined her laughter. \"No kidding. Aunt Mary turned fourteen shades of red and spent the next couple of minutes stammering out the rest of the story about riding. At the time I didn't understand what had happened, but I got the idea not to try and talk about the photo any more.\"\n\nAfter a few minutes Lisa said, \"You know I wonder if this interest in BDSM might be genetic. I've had the feeling a few times that Uncle Tom and Aunt Mary might have been doing something like that. Once or twice while I was staying here I'm almost sure the sounds I heard coming from their bedroom could have been spankings. And Aunt Mary always looked so contented and smug the next morning.\"\n\n\"You know, you might be right. Once I thought I heard something like that myself. And once when I was about nine and helping Aunt Mary carry laundry up to her room to put away, I saw a bunch of leather straps lying on the floor. I thought it kind of funny that they would have the horse harness in their bedroom, but who understood adults. Now that you mention it I'll bet those weren't used on horses. I'm sure they had their secrets.\"\n\n\"Speaking of secrets,\" Dan went on, \"guess what I found last week down in the room where they store the canned stuff in the basement.\"\n\nLisa stopped with her fork half way to her mouth. \"A secret door?\"\n\n\"How in the world did you guess? Did you already know about it?\" Dan asked.\n\n\"No. But one summer when I was about nine or ten, before that storage room was there, I was down in the basement exploring. There was a big sheet of plywood leaning against the wall where the shelves are now. I was able to get behind it and found a little combination padlock on what looked like a hidden door. But I left to go home the next day before I could try to get it open and when I came back the next summer there were shelves of canned tomatoes and peaches where the door had been.\"\n\nDan said, \"They didn't move the door. They just built the shelves over it. Last week I went down there to get one of those jars of peaches and stumbled a little when I reached for it. I grabbed the edge of the shelves to catch myself and my fingers hit a little stud behind the support. When I pressed it, the shelves unlatched on one side and swung out of the way. The door and padlock are still there behind them. I'm still deciding it I should try to open it.\"\n\nLisa responded, \"I think that should be our project for tomorrow.\" Then added in a sweet voice, \"That is, if you can find the time between the ten or twelve times you are supposed to be fucking me.\" This was followed by what could only be described as a coy smile, somewhat compromised by the fact that the smile was the only thing she was wearing.\n\nDan suddenly said, \"Why wait for tomorrow? Let's clean this stuff up and try tonight. Unless you're too tired - or maybe to sore?\"\n\n\"No,\" Lisa laughed, \"Come on. Let's see if we can guess the combination or pick the lock or something.\"\n\nThey carried the dishes back through the dining room to the kitchen, stopping to laugh again at the old photo on the wall. When everything was loaded in the dishwasher, they descended the stairs to the basement.\n\nThey entered the storage area and Dan showed Lisa the hidden stud. He pressed it and a latch released allowing them to swing the entire shelving unit back out of the way. This revealed a short, narrow door with a four digit combination lock. \"That's the same door,\" Lisa cried. \"And the same lock, or one just like it. I remember that I had never seen one like it. All the locks I knew about had a single dial that you turned left and right. This one had four numbered dials you could set. I doubt we can pick this one.\"\n\nDan nodded. \"That's for sure. These are good locks. We'll just have to guess the combination if we want to get into it. Well, I guess we can start with their birthdays.\" He tried each with no result.\n\n\"What about in reverse order? \"Lisa asked.\n\n\"Good idea. Let's try.\" But this didn't work either. \"Maybe their wedding anniversary?\" Dan asked. But again no luck.\n\n\"Any other ideas?\" Dan asked.\n\n\"Not that I can think of. No, wait. I remember Aunt Mary once said there was one date she would remember better than her own wedding day. I think it was when she and Tom first met. Or, thinking back on the way she looked when she told me about it, maybe it was the first time they went to bed together. Anyway it was February 4, 1958. They would have been eighteen then, so it could have been either. Let's try that.\" She set the dials to 2-4-5-8, but nothing happened. \"Oh, well, it was worth a try,\" she said.\n\n\"Don't give up so fast,\" Dan said. Try it backwards like you suggested before.\n\nLisa set the dials to 8-5-4-2 and pulled. The lock sprang open and she let out a little cry. \"That's it! Now their secrets will be revealed.\"\n\nBut now Dan hesitated a little. \"Should we really be looking in there? After all, it isn't really ours.\"\n\nLisa slowly nodded, but then said, \"Maybe not. But knowing them I don't really think they would mind. They always believed hard work and ingenuity should be rewarded and were ready to let you get away with something if you did it in a clever manner. Besides, didn't you say they told you to use the place like your own?\"\n\n\"Yes, they did. But this might be stretching that a little. But I think you are right about them not minding. They always were ready to not notice if I was able to be sneaky in a unique way.\"\n\n\"Anyway,\" Lisa laughed, \"we're probably going to talk ourselves into it sooner or later, so let's go ahead and see if they've got a hidden pile of gold or a bunch of bodies buried or whatever.\"\n\n\"Yeah, you're right.\" Dan joined her in laughter and then removed the lock. The little door opened easily and they ducked low to get through it. Inside was a tiny room or hall, just large enough for the two of them to get into. At the other end was a second door, but no lock this time. Dan reached for the second door and pulled, but nothing happened. He pushed, wiggled, and shook it. He could tell it wasn't sealed, but it still wouldn't open and he couldn't see a catch of any kind. The door did seem to be held at a single point, but if there was a catch there he couldn't find any kind of release. He turned and looked at Lisa. \"Any more ideas?\" he asked.\n\n\"Maybe say the magic words?\" she asked. \"No, let's think about this. You have two doors. Why have two if you need to open both to go through. Unless ... Unless you are only supposed to open one at a time. Sort of like an airlock.\"\n\n\"You mean you think it's a vacuum on the other side?\" Dan asked with sarcasm in his voice.\n\n\"No, silly, but maybe they didn't want anyone to be able to see all the way inside from the basement. Here, I'll close the first door. Now try the second.\"\n\nDan tugged at the handle and the door swung easily open. It was pitch black inside and they could see nothing from the small streak of light that made it past the first closed door. Dan felt around the inside of the jam and found a switch. He flipped it and dim lights came on inside. He and Lisa stepped through.\n\nBoth of them stopped and stared, looking around the eighteen by twenty foot room. \"Wow! was all Dan could say.\n\n\"It really must be genetic,\" Lisa finally said. For there in front of them was a dungeon right out of one of the magazines Dan had spoken of. The concrete walls had iron rings set in several places. Chains dangled from the ceiling and they could see other rings in the floor. There was a large, heavy x-frame much like the one they had seen in the film, except that this one was covered with padded black leather. There was a waist high padded leather-covered table and another piece of furniture that looked like some kind of bench. There was also a leather covered vaulting horse such as was found in a school gym. On one of the walls was hung a collection of whips, crops, straps, switches, and paddles. There were also many different straps, cuffs, buckles and bunches of rope for binding the victim. A cabinet in one corner had drawers that probably contained other interesting items. In another corner there was a shower stall along side a sink and toilet.\n\nFinally Dan broke the silence. \"Looks like we're not the first to play these games around here, doesn't it? I'm sure they wouldn't mind if we use this for me to torment my own captive for the next few days.\"\n\nLisa said, \"I wonder which or them is the captive. Or do they take turns. Who knows?\"\n\n\"Well, I know who the captive is here,\" Dan said. \"I think it's time we reminded you of that again.\" He picked up a set of cuffs and put them around Lisa's wrists. He then led her over to the x-frame and bound her with her back to it. He placed another pair of cuffs around her ankles and fastened them to the frame also, leaving her stretched and open.\n\nLisa was already excited and Dan could see the moisture beginning to escape her pussy lips. Her nipples had hardened and Dan caused them to become more taut when he rolled them between his thumbs and fingers. He lowered his head and ran his tongue around her breasts, first right and then left. Then he spent a couple of minutes sucking and teasing her pert nipples. By this time Lisa was breathing rapidly and struggling against her bonds, trying to push her nipples deeper into his mouth. Dan pulled back and let his tongue begin to trace lines down her stomach and around her pussy which sent the poor girl into even higher fits of frustration.\n\nSuddenly he stepped back bringing a groan of protest from Lisa. \"No quite yet,\" he said. First I need to remind you of your place, remember?\" He went over and rummaged in a couple of the drawers. \"Ah. I knew they must have some of these around here somewhere,\" he said.\n\nLisa couldn't see what he had found and was more concerned with getting him back to play with her body than how he might be planning to do just that. Dan came back over to her and once again began to tease her nipples. Suddenly she felt a sharp pain at her right breast and cried out. It did hurt but the cry was mostly surprise. She looked down and saw that he had attached a nipple clamp and held another in his hands. Quickly he added the second clamp to her left tit. The sharp pains began to fade and leave a feeling of sexual stimulation. Lisa had had her nipples squeezed and pinched during sex, but this was her first experience with any kind of clamps. She found to her surprise that she liked them.\n\nThe effect of the clamps was not lost on Dan. But he still had other things in mind. After fingering her pussy for a couple of minutes, he once more stepped back. This time he picked up a multitailed flogger with soft leather lashes about thirty inches long. He swung the instrument, landing the first blow across Lisa's upper thighs. He then proceeded to whip her all over her front, even including her clamped tits. As her excitement rose his blows got stronger and more intense until she finally came from the whipping. But Dan didn't stop there. Dropping the whip he moved in and began to tug on the clamps. Lisa's response became even more animated as she struggled against her bonds. But she wasn't using her safewords. Dan then lifted both clamps and plunged his hard cock into her hot, wet tunnel at the same time. Lisa came again immediately and then a third time a few seconds later as Dan came himself.\n\nDan soon removed the clamps bringing more cries from Lisa as the blood flowed back into her abused tits. But instead of releasing her he began to lightly run his fingers over her ribs. Lisa began to squirm. As the intensity of the tickling increased, Lisa began to laugh and struggle uncontrollably. Dan kept it up until she was gasping for breath. Finally he released her from the frame, but fastened her wrist cuffs together behind her back. \"I'm not done with you yet,\" he said.\n\nLisa smiled at him. \"I certainly hope not,\" she said.\n\nHe led her around the room, looking at all the items. Finally he went to the strange, bench-like frame and stared at it. This was made of heavy wood. It consisted of a three foot piece of 4x6 set about thirty inches off the floor and supported at either end by A-frame sections. On one side and parallel to the beam was a flat bench about eight inches wide and the full length between the A-frame sections. This was located about sixteen or eighteen inches below the main beam and thus about a foot off the floor. There was another eight inch bench on the far side of the main beam, but located just five or six inches below it. Both the benches and the main beam were leather covered and heavily padded. Various straps and rings adorned the device at many places.\n\n\"I think I see how this is supposed to work,\" Dan said. \"Come over here and kneel on this lower bench.\" He unfastened Lisa's wrists and helped her to do just that. \"Now lay across the beam.\" She leaned forward and placed her stomach on the padded leather. Dan gently pushed her shoulders on down and soon her head rested on the second bench.\n\n\"Here. Let's fasten you down now.\" Dan spread her ankles and fastened them to straps at either end of the lower bench. He pulled her arms forward and fastened her wrists to straps attached to a couple of bars on the A-frame sections which stuck out perpendicular to the beam and beyond the upper bench, pulling her taut. She was now stretched and supported on her knees and stomach with her ass sticking up farther than anything else. Dan looked at her a moment. \"Ah. Now I see what these are for,\" he said. He then pulled her knees wide apart on the lower bench and placed a padded peg on the inside of each knee. This caused her pussy and buttocks to open wide and stretched the muscles tightly. \"Now you seem to be in just about the right position,\" he said. \"But one more thing.\" He then put the nipple clamps back on Lisa's tits causing her to gasp. She was supported on her knees and at the waist and her head rested on the upper bench, leaving her breasts hanging free. Dan then took small weights and attached to each clamp with a small spring. This allowed them to bounce around causing to clamps to pull at her nipples in unexpected ways.\n\nThe multitude of sensations was beginning to drive Lisa wild again. When Dan began to lash her ass with the cat she struggled wildly, but not to get away: only to try to bring herself off. By the time he had delivered thirty hard strokes, she had come twice more.\n\nDan put down the whip. He had an idea and found that he could kneel on the lower bench between Lisa's knees and by leaning forward over her back push his cock deep within her. He fucked her like this while pulling on the clamps and making her come three more times before he came himself.\n\nWhen he finally released her, Lisa nearly slid to the floor. Her muscles ached from being stretched, her tits hurt from the clamps, the whip lines, clearly visible across her ass, felt like fine ridges when she let her hand slide over them. But she wasn't ready to quit yet even though she knew she had to take it a little easy or she would be in no shape for games tomorrow. And now that she has tasted some of these things she desperately wanted more.\n\nDan held her close and stroked her back. \"Liked that, didn't you?\"\n\n\"You've no idea how much!\" she said. \"It was incredibly exciting. This is ever so much better than a birthday spanking. I want more.\"\n\n\"Not too much at one time. We don't want to damage you too much for tomorrow. And, for that matter, I expect we'll have the next couple of weeks. Right captive?\"\n\n\"Well, just maybe,\" Lisa smiled. \"But you still have a few times to go to win the bet.\"\n\n\"Oh, I expect I'll mange,\" Dan said. \"But I think we had better let this place go until tomorrow. I can think of a number of things I want to try on you and I'd better let you get some rest so you will be able to take them.\"\n\n\"Not to mention that you might need to rest and recover a little, too?\" Lisa said with a sly grin.\n\nDan looked a little sheepish and said, \"Well, I could use some rest. I am starting to feel a little like Uncle Tom in the photo upstairs.\"",
        "Laughing, the two naked young people turned off the lights and closed the door to the dungeon and made their way back upstairs. They stopped at the corkboard to add marks forty and forty one.\n\nThey made their way up to the shower in Dan's room. As they were washing off the sweat, Dan suddenly found himself yawning and nearly going to sleep under the warm spray. His yawn triggered one from Lisa. This brought on another from each of them. \"I guess maybe I really am kind of tired,\" Dan finally said.\n\n\"Yeah, me too,\" responded Lisa. \"If we go watch another video I think I'll probably fall asleep no matter what you do to me.\"\n\n\"Actually, I'd probably fall asleep too,\" Dan said. \"That would be entirely too humiliating. Would you mind if we just went to sleep tonight? I'm not sure I can handle another time right now.\"\n\n\"No, I don't mind. You must know that I'm loving every second of the sex - and for that matter, the other activities - but there is a limit to how much either of us can do. Besides, you'll still have plenty of time in the next two days to reach fifty,\" she teased.\n\nDan grinned and put his arm around her waist. \"OK, for something entirely new and different, let's go to bed and sleep.\" They walked back into his room and to the bed. Dan turned off the lights while Lisa pulled down the covers. It was still hot and neither wanted even a sheet over them.\n\nLisa lay down and Dan started to crawl in beside her. \"Hey, wait a minute. Aren't you forgetting something?\" she said.\n\nDan stopped and looked at her, a groggy look of confusion on his face. \"What did I forget?\" he asked.\n\nLisa looked away from his face and quietly said, \"I still want to be tied to the bed.\"\n\nDan's face became a little more lively. \"You really like that, don't you? You must be a real natural for this stuff.\"\n\nLisa actually blushed a little. \"OK. Yes, I do like it. In fact I love it! I love being tied helpless and naked so you can do anything you want to me. And even if we're too tired for anything else tonight, when I wake up I want to know that I can't even get out of bed until you've had a chance to use me however you want. Look, Dan, I told you I've played spanking and bondage games a few times and liked them. But these last three days have been incredible! I'm turned on all the time and can think of almost nothing but sex. A lot of it's you - I've said I've had the hots for you for years. But part of it is the things you're doing to me. I know it sounds silly, but knowing you can hurt me and at the same time trusting you not to hurt me too much is the biggest turn-on I've ever experienced. I've daydreamed a lot about these kinds of games, often with you in them, but the reality is a thousand times better than my best fantasy. So, please, just tie me up and tomorrow, when we're rested, fuck the daylights out of me again.\"\n\nDan smiled at her. \"No, it doesn't sound silly. I'll admit that when I made the bet I was bragging and didn't really think I could manage it. But, like you said, I have been more turned on the last three days than I ever have in my life. When you stepped out of that car and I saw you - even though I didn't know who you were then - I was already getting turned on. And it's been getting better and better ever since. I don't think we can say we're in love with each other.\" Lisa smiled and shook her head. \"But I am definitely in lust with you and you seem to feel the same. I've always liked you, even when you were such a pain in the ass those summers. Now I'm more sexually attracted to you than I've ever been to any woman. And finding out you like these games has increased that attraction even more. I think I've been hard more often than not during the last three days. All I have to do is look at you and, even with all the times we've come already, I still start getting aroused immediately. I don't know if this will go anywhere or how long we'll stay this interested, but I'm happy just to take full advantage of it now. So, here, let me put the cuffs on you and I'll definitely tie you up and I guarantee I will use you - at least in the morning.\"\n\nDan tied her wrist cuffs to the headboard, spread her legs and fastened her ankles to the footboard. He then lay down beside her. Rolling onto his side and facing her he let his hand roam over her body for a few minutes. Finally he leaned over, gave her a long and deep French kiss and said, \"Until morning, my beautiful captive.\" The two of them were asleep within a minute.\n\nCousin - Ch.5\n\nDan awoke the next morning with sunlight streaming through the window. The air was already hot and he guessed it must be nine o'clock or later, judging from the angle the sunlight made coming across the window sill. He looked over at Lisa who was still sleeping. His eyes slid slowly over her naked form. With her wrists and ankles tied to the bed she was completely exposed, especially since her pubes were shaved bare. \"She's lovely,\" he thought. \"But even better I couldn't begin to dream up someone more fun sexually and, yes, just to be with.\" He continued to caress her with his eyes, but held his hands in check so as not to awaken her. The patches of sunlight falling on her shifted as her breathing made her shapely breasts rise and fall. Her body was lean and hard, but her curves appeared soft and feminine. Her blonde hair lay around her head like a halo and her legs looked almost too long for her five foot nine inch height. There were still a couple of lines left from the whipping last evening, but most had disappeared.\n\nAgain Dan found it almost too much to believe that the last three days had been real. He had expected to spend the time after that last load of hay was stacked in the loft just lying around reading or maybe watching some of those videos and jerking off. But he never dreamed that not only would he find a real, beautiful woman, but one who wanted him, who loved sex, and even truly enjoyed the type of games he had played only in his fantasies. But she did! They had had more sex and had enjoyed it more than either of them would have thought possible. And she really liked being tied, teased, and whipped. Incredible!\n\nLisa's breathing changed slightly and then her eyes blinked open and stared at him looking at her. \"Hi,\" she said. Her gaze swept down from his face and when she encountered the sight of his cock, already hard and sticking out, added, \"I see you seem to have recovered a little with some sleep. Am I to be ravished again, Captain?\"\n\nDan smiled. \"Hi, yourself. And I don't think I could ever tire of ravishing you, my lovely captive.\" With this he leaned forward and took first her left and then her right nipple inside his mouth. He alternated licking and sucking both and almost immediately her nipples became long and hard. He then ran his tongue down her body and began to lick and suck at her now wet pussy. Soon Lisa was fully aroused, gasping and struggling against her bonds.\n\nLisa began to speak in short gasps, \"Now! Dan, I want it now. Come on, I need it now.\"\n\nDan stopped for a second. \"Just what is it that you need now, Lisa?\" he asked.\n\n\"Damnit, you know what I need. I need you inside me. I need you to fuck me, to fuck me hard and deep.\"\n\n\"Oh, why didn't you say so?\" Dan laughed. But he stopped licking and, moving up her body, shoved his cock all the way inside her with one smooth motion. She was so wet he met almost no resistance. But once inside there was definitely resistance. Not to keep him out, but squeezing him, clamping down, trying to hold him inside of her as long as possible so that the eventual slide out and back in delivered a maximum of pleasure. Within a couple of minutes both Dan and Lisa came in long, hard, and loud orgasms. As her breathing calmed, Lisa sighed, \"I believe that makes forty two, but don't feel you have to quit when you get to fifty, Captain.\"\n\nDan finally pulled his softened member from her hot body. He leaned over and kissed, first each nipple and then her mouth. \"Don't worry, Beautiful. I have no intention of stopping.\" He then untied her and, with their arms around each other, the couple headed into the bathroom for a quick shower and then, both still naked, downstairs for some breakfast.\n\nWhile they were eating, Dan asked, \"What do you want to do today? Besides getting laid, I mean.\"\n\nLisa stopped eating. \"You mean there are other things to do? Well, OK, I'd like a chance to work the kinks out of my arms and legs a little. Maybe we can go swimming again. But this afternoon and tonight I want to explore Aunt Mary and Uncle Tom's playroom some more. I expect you would like to try out some of the other stuff they have down there.\"\n\nDan grinned. \"That sounds just fine with me. I want to see you tied over that vaulting horse while I work over your pretty ass. Among other things. But a swim first sounds nice. I started to say this afternoon will probably get a lot hotter out and the basement might be cooler. But the more I thing about getting you in that dungeon, the more I think it might actually be hotter downstairs.\"\n\nAs they headed out across the grass and down the hill towards the pond with its swimming area and float, Lisa said, \"You know, it's going to be hard to start wearing clothes again. I've never been naked longer than overnight before, but it's been almost four days now. Of course, if this weather ever breaks, I might want something a little warmer, but for now I like the freedom. What about you? Do you think you might want to become a nudist?\"\n\nDan shook his head. \"No. I haven't been undressed quite as much as you have the last few days, and I do like the feeling. But nudists want to be naked to 'commune with nature' or some such. I like being naked with you, but I'm not all that interested in communing with nature - I want sex. If it's a choice between hugging trees and fucking you, there's no contest.\"\n\n\"Yeah, really I agree with you. I like being naked because of the feeling of freedom but also because it means I'm not free. I'm your captive and sexual plaything and being nude keeps me turned on and ready for you. That might sound confusing, but what it really means is I love sex with you. Even rough sex. I want to play the captive, to be bound and tortured - well, play torture, anyway - and to have you use me the way you want. The last four days have been like a dream - a wonderful, incredible, sexy dream. And I'm not ready to wake up yet.\"\n\nThe couple swam out into the pond well beyond the float and back several times. Several times they stopped and treaded water while kissing and feeling up each other. When they arrived back at the float the last time, Lisa started to climb out of the water onto it. \"Wait a second,\" Dan called. \"Just grab hold of the ropes and hang here in the water a minute.\"\n\nLisa took the rope which ran around the side of the floating wooden platform with her left hand. Dan swam across in front of her and she turned to face him with her back to the float and used her right hand to grab the rope on her other side. Dan approached and embraced her, clamping his mouth over hers and letting his tongue begin to explore. Her tongue quickly joined his and she shifted back and forth a little to rub her nipples against his chest.\n\nThe water was warm, not too much below body temperature. And when Lisa wrapped her legs around Dan she felt his cock, already hard, against her stomach. Dan slipped one hand down to her ass and used the other to pull himself harder toward the float and thus tightly against her. Both of the young people were becoming very aroused and before long Lisa helped Dan to slide his cock inside her. This, too, was a new experience for both of them. Ever since he had seen an early James Bond film, Dan had wondered if it was really possible to fuck under water. Now he was finding out. Just as they were both about to come, Dan gasped out, \"Deep breath!\" and drew in one himself as Lisa followed suit. He then clamped his mouth over hers and pulled at her hands. She got the idea quickly and, keeping her legs wrapped tightly around him, let go. They both slid beneath the water, making a real effort to try not to and breathe as their orgasms hit.\n\nWhen they surfaced again, gasping for breath and giggling, Lisa said, \"Wow! That was unlike anything I've ever felt. Have you done that before?\"\n\n\"No, but I saw James Bond do something like that in a movie once and I figured if he could then ......\"\n\n\"Well,\" Lisa said, trying to imitate Double O 7's voice, \"I hope we didn't frighten the fishes.\" With this both of them burst into laughter again.\n\nThey pulled themselves up onto the float and lay in the sun for awhile. Then swam again and finally went ashore to lie on the grass sunning themselves and drying off.\n\nBefore too long they began to feel hungry. \"After all,\" Lisa thought, \"we are burning an awful lot of calories.\" Hand in hand they went back to the house and found some soup and sandwich materials for lunch.\n\nAfterwards Lisa wanted to go immediately downstairs to the playroom, but Dan insisted they had better let the food settle a little. \"Then how about another video?\" Lisa suggested.\n\nDan quickly agreed and soon the couple was settled in the large leather chair, Lisa's hands once again bound behind her, watching as a couple of young, naked women were whipped, tortured and otherwise abused by the evil count in his castle.\n\n\"Not much for plot,\" Lisa giggled, \"but those whip marks do look real this time. And I think that the redhead is really being stretched there, don't you?\"\n\n\"Looks like it,\" Dan replied, but I know of one captive who will be stretched pretty soon. As he said this he let his fingers slide up the inside of Lisa's bare thighs and across her pussy and she shivered in delicious anticipation.\n\nAfter the video was over, they moved downstairs and unlocked the secret door once more. As they turned on the lights and looked again at the various devices in the room, Lisa found herself becoming wet. \"Dan,\" she said, \"before we start I want to say a couple of things. I loved what we did yesterday. I know you'd never really hurt me, but I want you to really work me over today. No real damage. No blood or broken skin or such, remember, but I want to see what it feels like. I've got the safewords if it gets to be too much, but otherwise let me cry or scream or whatever and treat me like the captive who needs to be punished. OK?\"\n\nDan looked at her. \"Are you sure about that?\" he asked.\n\n\"No,\" Lisa responded. \"But I want to find out.\"\n\n\"All right, but don't be afraid to use your safewords. I promise to slow down or stop immediately if you do. Remember, I'm not an expert at this either, but I'll try not to really hurt you, but you're probably going to be kind of sore tomorrow.\"\n\nLisa smiled. \"By tomorrow we'll probably both need to rest and recover a little.\"\n\nAfter placing cuffs on her wrists and ankles, Dan led Lisa over to the leather covered vaulting horse and positioned her at one end. \"Spread your legs,\" he commanded. Lisa spread her legs and Dan attached the cuffs to either side of the horse supports. He then made her lean forward along the length of the padded leather with her breasts hanging down on either side. He pulled her hands wide and down to the supports on the other end and after he had attached them he stood and looked at her. She was pulled very taut and her ass was sticking up making a very inviting target. The height of the horse made her knees bend a little and with her legs spread, both her pussy and anus were exposed and unprotected. Her breasts hung down and her hair fell along side her face.\n\nLisa was breathing rapidly in anticipation of the whipping she now expected. But Dan wasn't quite ready for that yet. He walked over to the set of drawers and picked up a black silk scarf. As he approached Lisa he folded the scarf into a narrow strip and wrapped it over her eyes as a blindfold. Removing her sight caused Lisa to become even more excited. She could hear Dan moving around and retrieving more items, but she had no idea what.\n\nSuddenly she felt the leather tails of a cat being pulled gently across her thighs, buttocks, and back. She sucked in her breath sharply, but the expected blow didn't come. Instead the lashes were drawn across her bare flesh several more times and then stopped. She held her breath, waiting. She jumped against her bonds as Dan's fingers rubbed lightly across her already hard nipples. He continued to rub and pull at them, making them even harder. Then, suddenly, she felt the sharp pain of a nipple clip at her left tit. This was followed by a matching pain on her right nipple. The small, spring mounted weights were soon swinging from the clips, causing unexpected tugs at her sensitive nipples.\n\nDan's fingers continued to trail lightly across her ribs, around her breasts, down her back and along the crack of her ass. He let them stroke lightly over her puckered anus causing another sudden jump which set the weights swinging even more. A second later she felt his finger return to her brown rosebud, but this time it was covered with a slick lubricant. He began to slowly work it in and out, finally pushing all the way inside, twisting it around and bringing incredible stimulation to this sensitive area.\n\nLisa wasn't sure if he was getting ready to fuck her rear hole or not. A couple of days ago she had tried anal sex for the first time and found she loved it. But now she expected some other activities before sex, anal or otherwise. After all, they had the dungeon to play with and she had asked him to work her over really hard. What did he have in mind? Just then he pulled his finger from her rear causing her to clinch her muscles in an effort to keep him embedded. But the finger withdrew, leaving an empty sensation and making her anus twitch. But in a few seconds she felt something else at her small opening. This something seemed smooth and not much bigger than his finger, but was made of plastic. He worked it in and out of her, adding a little more lubricant as it went in deeper. It was definitely longer than his finger and as it entered more deeply, Lisa felt it begin to widen and stretch her opening. Dan continued to push the object in farther and farther until finally the wide area - it felt like a little ball about an inch across - popped inside and the object narrowed once more. The object was now well up into her rectum. It was not uncomfortable, but the enlarged portion would keep it inside unless he pulled on it.\n\nDan wiggled the object several times, each time sending shivers up and down her spine and making her pussy wetter still. Then she felt him doing something - she couldn't tell what - to the end of the object sticking out of her ass. What she must look like! Dan moved around a little rolling something closer to her. Then all at once she begin to feel liquid running into her bottom. \"Oh, no. He's giving me an enema!\" she thought. Lisa hadn't had an enema since once when she was about eight. and she couldn't remember much about it. But the sensation of the warm liquid filling her bowels now was actually turning her on even more. Lisa realized she was experiencing more new sensations in the last couple of days than she had in the last several years. And so far all of them seemed more than pleasant!\n\nDan asked, \"Have you ever played with enemas before?\"\n\nLisa shook her head. \"No. I haven't had one since I was a little kid, and not many then. But it actually feels pretty good.\"\n\n\"Don't worry,\" Dan said. \"I'll see that it gets a little more uncomfortable in a couple of minutes. You've had about a quart. We'll see if you can take a couple more.\"\n\nLisa's head jerked up. A couple more!?! She was already beginning to feel full, her stomach expanding against the leather horse. But the flow went slowly on. Several times Dan slowed or stopped the flow and rubbed her stomach to shift things around a little and then opened the valve once more. He told her when she had taken two, then two and a half, and finally, despite the cramps beginning to torment her belly, the last of the third quart. Dan did something to disconnect the hose, but left the nozzle embedded deep within her taut bottom.",
        "\"Now, Winch,\" he said, \"we'll see about really punishing you.\" Lisa immediately felt the sharp siting of the cat across her bare ass. Now the whipping she had anticipated began in earnest. Dan laid twenty strokes across her bottom, each leaving its pattern of bright red lines. Then he dropped the whip and quickly entered her pussy. The feeling of her blocked and full bowels, of the pain of the stripes across her ass, and the pressure of both his cock inside her and his pubic bone pressing against the nozzle in her rear combined to make her orgasm almost immediately. But Dan lasted a little longer, pounding into her and tweaking the clamps on her nipples until he too finally came, bringing her along with him once again.\n\nFor a minute he stayed inside her and then slowly withdrew. He removed her blindfold and then untied her from the horse. \"I expect you need to make use of the corner,\" he said, indicating the exposed toilet next to the shower stall. Lisa started to stand up straight but then bent back over a little as the cramps in her full belly hit. She began to shuffle over toward the toilet.\n\nLisa wasn't really embarrassed about using a toilet in front of Dan. Maybe because when they were kids around here in the summer going to the bathroom was considered as natural as eating. They didn't bring anyone in to watch, but no one was embarrassed by leaving to go or even ducking behind a tree if they were out in the woods. But, Lisa thought, the enema would probably have made her forty shades of red except that she was too turned on to think about it.\n\nAs she crossed to the corner with Dan beside her, she started to remove one of the nipple clamps. \"No. Leave that on until you finish,\" Dan said.\n\nLisa dropped her hand and went on to the tiled area in the corner. \"Here,\" Dan said. \"Get over the toilet and lean forward a little.\" He then pulled the nozzle from her rear and as soon as the ball passed the round ring of muscle, the rest popped out and Lisa began to release the water.\n\nDan let her empty, but all the while kept up caressing her breasts and sometimes tugging at the clamps. When she had finished Dan took her hands and led her into the shower stall. He tied her hands over her head: There were various rings in the shower, probably for this purpose. He took a hand shower and adjusted the water temperature and then suddenly unclipped both of the nipple clamps along with their weights. Lisa screamed as the sharp pain of returning blood struck her and before the scream even ended, Dan was turning a hard, fine, hot spray from the handheld shower onto her sore tits. He played the water over her entire body, being sure to clean her ass well. Finally he shut off the water, released her, and helped dry her with a large, soft towel.\n\n\"Well, what did you think of that? Dan asked.\n\nLisa put her arms around his neck and kissed him. \"I don't know where you're getting your ideas, but so far everything you've done has turned me on. I would never have thought an enema would be sexy, but it definitely was. Especially being tied down during it.\"\n\n\"In that case,\" Dan said, \"we'll have to try some more of them. I even saw a couple of Bardex nozzles over there.\" Lisa looked questioningly at him. \"I've read about them,\" he said. \"They're nozzles with an inflatable collar inside - sometimes one outside too - that lets you seal it in so you couldn't push it out if you wanted. I'll try one on you next time. But right now I think we need to find some different tortures to use on you, don't you?\"\n\nLisa smiled to herself. That was exactly what she wanted. To be tied up, teased, hurt - but not badly - and used sexually. She was looking forward to spending all the rest of the day down here in delightful torment.\n\nDan put the cuffs back around her wrists and ankles. \"I think maybe we need to open you up a little,\" he said as he led her over to the padded table. He had her lie down on her back and then fastened her hands to the end of the table above her head.. A leather belt was then buckled around her waist holding her down to the table. Dan reached down to the sides of the table and unfolded something. Lisa looked down and gasped. There were stirrups just like at her doctor's. Only these had straps to fasten around her ankles which Dan did. He then adjusted them in such a way that her knees were bent and her legs spread almost impossibly wide, opening her pussy lips and clearly exposing her anus.\n\nDan stepped back and looked at her. Lisa was becoming more aroused by the second and Dan could clearly see the moisture coating her inner lips. \"I see you like having all your charms exposed,\" he said, and began lightly running his fingers across her skin. For several minutes he continued to stimulate her and then began to get a little rougher, pinching and pulling at her nipples and clit and penetrating her pussy and ass with his fingers. Lisa's breathing was coming faster and faster now and she was struggling against her bonds.\n\nSuddenly Dan stopped and said, \"We can't have you coming yet. This is supposed to be punishment, remember?\" He picked up a small whip with twelve inch tails and began to lightly flog her breasts. As the blows got harder and harder, Lisa began to wince and then to cry out as the leather strands struck her nipples and the soft sides of her tits. But from the moisture flowing from her Dan could tell that she was still getting excited by the treatment.\n\nHe switched to her open pussy. Lightly at first and then harder he struck the insides of her thighs and then her open pussy lips. When the tails began to strike inside her slit and on her clit, Lisa screamed but didn't call out her safe words. Dan had placed himself at the head of the table so he could lean forward and whip down between her legs. Now he climbed onto the table with a knee on either side of her head. Leaning forward he brought the head of his hard cock to Lisa's lips. She immediately opened them and began to lick and suck as best she could. As the blows became harder Lisa began to get close to coming herself as well as bringing Dan to the same point. Finally when Dan could hold back no longer and started to spurt into her mouth, he struck one last, vary hard blow, causing the leather tails to strike from her clit all the way down with a single strand slamming directly against her open anus. Lisa screamed at this intense pain but started to come at the same time.\n\nWhen she calmed down a little, she said, \"Dan, that last one hurt like hell. I know it did send me over the top, but what I'm trying to say is that you probably better not hit me like that again if you want me to be able to keep on playing. OK?\"\n\n\"Of course, Lisa,\" Dan said. \"I'm sorry. I didn't mean to really hurt you. I'll be a little more careful. Besides, I do have other things planned for your ass tonight.\"\n\n\"Apology accepted,\" Lisa answered. \"I know you didn't mean to be too rough. I was just letting you know. And I want to keep on playing - all night if we're up to it, so to speak. So go ahead, Captain. I'm yours to abuse.\"\n\nDan climbed off the table, but then continued to apply the little whip to her breasts and pussy for another couple of minutes. He then stopped and got the blindfold from over by the horse where he had placed it when he removed it earlier. He once again bound it around Lisa's eyes and said, \"I think this will be more interesting if you can't see it ahead of time.\"\n\n\"What in the world has he thought up this time?\" Lisa wondered to herself. She heard him getting something from the drawers and then heard a snapping, scratching sound that seemed familiar, but which she couldn't quite identify. A few seconds later she suddenly felt a sharp burning pain at her left nipple. The surprise more than the pain made her cry out. It hurt but the pain quickly subsided. Then another struck lower, on the underside of her left breast. And again on her right tit. Then down across her stomach. By this time Lisa had guessed that Dan was dripping hot candle wax on her exposed body. The drips continued, striking all over the area between the tops of her breasts and the tops of her spread thighs. Not even her open pussy or exposed clit was spared. \"At least there no hair for it to get tangled in,\" she thought. \"It won't hurt so much when he pulls it off.\"\n\nSoon she found that she was at least mostly right. Dan began to pull off the wax and while there was no hair to pull with it, it still hurt.\n\nDan released her from the stirrups and folded them back under the table again and Lisa let her cramped legs relax. He unfastened her wrist cuffs and helped her to sit up. \"Just wait here a second,\" he said.\n\nLisa watched as Dan went over to a far wall and dragged back another piece of their uncle's furniture. This looked like a cross between the vaulting horse and an ordinary carpenter's saw horse. It had the A-frame supports at either end, but the cross piece consisted of a 2x4 heavily padded and covered with black leather. There were various straps and screw eyes placed on the a-frame sections and a two inch leather belt around the beam near one end.\n\nDan anchored the horse to a couple of eyebolts in the floor and then positioned her at one end. He had her lean forward down the length of the beam, her breasts falling to either side. He then scooted her forwards until the end of the beam came just to her pubic bone, leaving her pussy and ass out in space. In this position the leather belt went right around her waist and Dan tightened it there, holding her in position on the beam. He then spread her legs and fastened her ankles to the sides of the a-frame. This left her with her pussy and anus exposed once more and her ass readily available for whatever punishment Dan had thought up. Lisa expected him to bind her wrists to the A-frame at the other end and moved her hands in that direction. But Dan moved off a little, looking for something.\n\nHe came back with a small step stool which he placed near her head. He then took her wrists and , to Lisa's surprise, clipped the wrist cuffs together out beyond her head, but above the beam and not fastened to anything. She was puzzled for a second until Dan used the stool to attach a length of chain to an eyebolt in the ceiling located just above her head.. He then pulled her bound hands up, causing her to bend backwards from the waist. The leather belt held her waist down to the beam and Dan pulled her hands up until she was tightly stretched and arched backwards. He then clipped her wrist cuffs to the ceiling chain. Lisa realized that the strain on her arms, back, and stomach muscles would soon become uncomfortable, but expected that this would probably be the least of her problems.\n\nShe was right. Dan added nipple clamps and weights to her hanging tits. He took a large, ribbed dildo and inserted it into her already soaking pussy. After using a strap to secure this in place, he touched a switch and it came alive, vibrating wildly inside Lisa's hot pussy. He than began using a feather. Up and down the insides of her legs, around her swinging tits, across her stretched stomach, down the crack of her ass. For several minutes Dan kept up the tickling, sometimes adding his finger tips to the lightly dancing feather. Lisa's torment was driving her up the walls. She was stretched so tightly that she could barely move in response to Dan's actions, but her laughter made her strain against her bonds anyway. Any movement was amplified by the swinging weights tugging at her nipples. And the vibrator was also adding to her arousal.\n\nFinally he stopped and Lisa thought she would have a chance to rest. But almost immediately Dan switched from the feather to a cat with eighteen inch lashes. He whipped her ass and the backs of her legs. He wrapped the strands around her taut stomach and across her tortured tits. Lisa's shrieks cut the air in the dungeon and red lines began to appear all over her body. Dan continued until her ass was a bright, solid red. He stopped and Lisa let her head sag forward until suddenly she felt his finger, cool and slick with lubricant, pressing against her anus. He pushed it slowly forward, turning and twisting and coating her rectum with lube. For a couple of minutes he moved it in and out and sometimes Lisa could feel him pushing against the vibrator lodged deep inside her pussy.\n\nThen the finger was withdrawn and Lisa felt the head of his hard cock press against her slick rear opening. Lisa was so turned on that she easily relaxed her muscles and Dan slid all the way inside with little resistance. Lisa sucked in her breath, held it for a second, and then started to come. The heat of her whipped skin, the vibrations from the plastic cock deep in her vagina, the hot, real cock deep in her ass, the pain from her stretched tits, all combined to drive her to a wild orgasm. But Dan simply held in place right through it. As she shuddered to the end of her climax, Dan began to move in and out. At first it was long, slow strokes, coming nearly all the way clear and then pushing as deeply as possible back inside. Then he began to increase the pace. Lisa had responded again from the first stroke, and now was doing her best to push back against him. But given her situation there was little she could do. She pulled desperately against her bonds and in the back of her mind realized she would have a lot of sore muscles tomorrow as well as sore skin. But at the moment all she wanted to do was drive Dan's seven inches as deeply as possible into herself. Her orgasm built and she came again, but Dan didn't stop. And again. Finally Dan, holding tightly to her hips, pushed himself as deeply as possible inside Lisa's tight rear and held himself there, spurting his load into her bowels and sending her into another climax.\n\nHe held himself there until he began to shrink and even as he pulled out, Lisa's muscles tried to hold him inside. Dan removed the vibrator from Lisa's tender pussy and then the clamps from her nipples. As the blood flowed back into them Lisa cried out and Dan increased her torment by rubbing them briskly. Then he lowered the chain and allowed her to unbend from the stressed position. Finally he released her from the horse.\n\nAs soon as Lisa was free she turned to face Dan and threw her still bound hands around his neck. She kissed him deeply, pressing her body against his and rubbing her nipples against his chest, reveling in the pain this caused her sore tits. \"That was incredible! If you've really not done much of this before, I wonder where you're getting all your ideas. Not that I'm complaining. So far I loved all of them.\" She kissed him again and wiggled her sopped pussy against his soft cock.\n\nDan laughed, \"No, I've really done very little of this in real life. Now, my fantasy world is a different story. And I read a lot.\"\n\nLisa laughed back, \"I'm going to have to find some of this stuff you read.\"\n\nDan asked, \"How are you holding up? Do you still want to keep going down here or should we give the dungeon a break? I expect you're going to be a little sore tomorrow.\"\n\nLisa answered immediately. \"No, I'm not ready to quit. I told you I want you to work me over really hard and, yes, if we can I'd still like to play all night. I know I'm going to hurt and that we'll probably have to take it a little easy tomorrow, but not tonight. Maybe a shower might be a good idea though.\"\n\n\"OK, as long as you're sure, I'm game. You have no idea how sexy you look tied and stretched. And swinging a whip against your pretty ass has got to be one of the hottest things in existence.\" He headed over towards the shower corner with Lisa in tow.\n\nDan removed the leather cuffs and instead placed nylon ones around her wrists. \"We don't want the leather getting ruined,\" he said. He then bound her hands above her head to opposite sides of the shower, and began to use the hand shower on her. The hard stream of water hitting her sore tits and pussy caused Lisa to draw in her breath, but she didn't complain. Dan joined her in the shower, rinsing them both.\n\nAs they were drying off Dan asked her, \"Is there anything you would especially like to try?\"\n\n\"Well,\" Lisa began, \"I haven't read as much as you.\" She gave him a somewhat sarcastic look. \"So I don't know as many possibilities. But, remember that first amateur video you showed me the other day? The one with the couple you knew with the girl on the horse and the other girl on the X-frame?\" Dan nodded. \"Well, I keeping seeing the part where the one girl was tied with her back to the frame and the guy used that stand to put a dildo in her rear and then whipped her front. Remember? Well, I get turned on every time I think about it and if you can find some kind of stand or whatever, I think I might like to try it.\"\n\nDan grinned. \"I'm sure with the well equipped torture chamber our aunt and uncle seem to have here, we can probably find something to use. Your tits aren't too sore for that?\"\n\n\"Of course they're sore,\" Lisa answered. \"But that doesn't mean I don't want to try it. Remember I told you I expect to really feel this tomorrow, but as long as you don't do anything that will be too lasting, let's keep going.\"\n\n\"All right,\" Dan replied. \"But if it gets so it seems like too much, tell me.\" Otherwise I'll just keep on tormenting that beautiful body of yours.\"\n\nThey searched around the dungeon and, sure enough, they found an adjustable stand. In fact, there were several. Dan also located a relatively long, thin dildo that would mount on one. He attached it leaving the nine inch dildo sticking straight up. \"All right, Wench,\" he said. \"Time to go on the frame.\" With this he tied Lisa to the X-frame, facing out. He pulled the bindings on her wrists tight, stretching her. Her ankles were fastened at the base of the X, spreading her legs wide.\n\n\"It'll probably be a week before I can get my knees together after all this,\" thought Lisa. But being spread open was once again making her wet. Dan put some lube on his finger and began to apply it to her anus. After several minutes of working it in and out, he lubed the dildo and began to insert it instead. Lisa's bottom was still stretched from their last activity so the dildo didn't meet a lot of resistance. Dan raised the stand, just like in the video, until Lisa was straining to stand on her toes. He then locked the stand in place, picked up a cat with thirty inch tails, and went around in front of her.\n\nBut before he began to use the cat, Dan first teased her nipples and pussy for several minutes, squeezing, rubbing, licking, and nibbling. Lisa squirmed atop the plastic cock pushing against her rectum. All the attention was making her juices drip down the inside of her legs and when Dan applied his tongue the drip became a flood. Finally Dan stepped back and once again picked up the long tailed cat.\n\nThe first blow landed directly across both of her tits. It was quickly followed by one from the other direction landing in nearly the same place. For the next twenty-five minutes Dan varied the location and intensity of each stroke. Some fell so lightly as to almost be a caress. Others landed hard, leaving a pattern of hot red lines. Sometimes the ends of the tails wrapped around to sting her ass or back. Other times the ends sent explosions of pain directly on her breasts or even her pussy lips. A couple of strokes came up between her legs, landing stings along her crack and above. Each one of these strokes caused Lisa to become more excited. Twice during the time a sharp stroke and the dildo pressing deeply into her ass pushed her over the edge into a climax. This, of course, made her nipples and pussy even more sensitive to the following strokes.\n\nFinally Dan landed a series of several particularly severe lashes across her tits. He dropped the whip and pushed his own cock into her wet and hot vagina and proceeded to fuck her to another hard climax. Before releasing her, Dan spent several minutes using his tongue to trace the red lines around her breasts, down her stomach, and across her pussy. Finally he lowered the dildo stand and Lisa was able to relax and let her feet come all the way down to the floor again.",
        "As Dan untied her he asked, \"Well, was it as good as it looked in the video?\"\n\n\"Absolutely not,\" Lisa answered. When Dan looked worriedly at her, she relented, smiled and said, \"No. It was at least a hundred times better.\" Then she frowned slightly. \"You know, I can't believe how much I've gotten into this, mostly since I stopped here. You don't think there's anything wrong with these games do you, Dan? I mean, we're not perverted or anything, are we?\"\n\nDan looked seriously at her. \"No. Definitely not. If you wanted to be hurt to the point where it did serious or permanent damage or if I wanted to hurt you like that, then there would be something wrong with us. What we're doing is just playing games. No different from the games we played as kids, except now those games include sex.\" Then he smiled and couldn't help but add, \"In our case, a lot of sex. But, no, don't worry about it. As long as no one gets hurt and as long as no one wants to be really hurt - or to really hurt - there's no harm. Pain is a form of strong stimulation and strong stimulations enhance sex. I'm sure if we looked hard enough we could find a good scientific explanation. Maybe the pain makes the nerve paths more easily triggered and thus makes the pleasure more intense. Maybe something else. I don't know exactly what and right now I don't really care exactly what the details are. I just know that you look sexy as hell when you're tied and stretched and that watching you shudder when I lay the cat across your hot ass makes me hotter and harder that I would have thought possible.\"\n\n\"OK, I guess I really believe you're right. It's just one of those things that when something seems this wonderful, there must be something wrong with it. But as long as we're both enjoying it, then lay on, Captain, I believe you have a bet to win.\"\n\n\"I believe you're right, Wench. Let's see, when we came down here I believe it said forty- three on the chart. Then there was once during your enema, once on the table whipping your pretty puss, once in your ass, and this last one. That would be forty-seven, right?\"\n\nLisa smiled and nodded. \"Unbelievable,\" she thought. \"In just a little over four days I have been fucked forty-seven times and have probably come several times that. I would never have believed it.\"\n\nDan went on, \"If we carry on until the bet is over, that means another three times. However, there might be a lot more than three things I want to do to you. So, I don't know about you, but if I'm going to be able to continue we're going to have to take a short break and get some supper. Especially if you really want to continue getting tormented all night. Now I suppose in keeping with your position I should give you your supper in a doggie dish and make you eat it with your hands tied behind your back.\"\n\nLisa started to open her mouth and reply, but Dan stopped her. \"Don't worry, I know you aren't into humiliation and, frankly, that sort of thing would be a big turnoff for me. I was just teasing. But I do think we can find something to remind you of your place while we eat.\"\n\nDan looked around a second. \"Ah, I know just the thing. Come over here and bend over the table. That's right, now spread your legs.\" He then went to the drawers and returned with some objects Lisa couldn't see. He proceeded to use his finger to again lubricate her rectum and Lisa knew that she would soon have something inserted there. Sure enough, as soon as his finger left, she felt the rounded tip of some object pressing against her anus. The object was slowly pressed harder and deeper and Lisa could feel it getting wider and wider the deeper it went. Dan worked it in and out, each time a little further, until finally Lisa thought she would be split if it got much bigger. Suddenly, with a sharp burning pain and a startled cry from Lisa, the object slipped in and must have narrowed, because her muscles closed down around it. Lisa could feel a wider flange of some kind, now keeping the object from going any deeper, but she felt even more full than she had with the dildo on the stand.\n\n\"OK, you can get up now,\" Dan said. \"Here's what you have in you,\" he added, holding up a second one. \"It's called a butt plug, in case you didn't know. Gives a nice full feeling, doesn't it? \"Here, let's add these and we can go up for some food.\"\n\nDan held a pair of Ben Wa balls. Lisa had seen these before. A friend of hers had once shown them to her and told her that putting them in a few hours before a date got her really hot. Lisa hadn't had the nerve to ask to try them herself, but she had longed to. Now she would finally get a chance.\n\n\"Here,\" Dan said, \"You look like you know what these are for.\" Lisa nodded. \"OK, go ahead and put them in. I want to watch.\"\n\nLisa's face turned bright red, but she complied, inserting both of the balls into her own pussy while Dan looked on.\n\nThen, still both naked, Dan and Lisa headed upstairs to the kitchen.\n\nCousin - Ch. 6\n\nWhen they came upstairs, Lisa was surprised to find it was already after seven. Down in the dungeon, with no windows and no clock, she had completely lost track of time.\n\nThey looked around for something not too heavy for supper and finally settled on some stir fried shrimp and vegetables with rice. Picking up an apron, Dan said, \"Since stir frying something in your present state of dress would probably not be a good idea, I'll cook. You can just stay over there and look sexy. Better yet, I have an idea.\"\n\nDan picked up a dish towel and used it to bind Lisa's hands together in front of her. He then pulled a short piece of heavy cord from one of the drawers and used it to tie her bound hands above her head to a hook being used for a hanging plant. He didn't really stretch her, but the naked girl was on full display. The plug in her ass and the balls in her pussy were keeping Lisa aroused and she found it impossible to stand still. Her constant squirming and movements only made her look even sexier.\n\nWhen the food was ready Dan released her and they carried the food into the dinette where they sat side by side. Lisa still was excited by the objects embedded inside her and Dan's bare leg against hers didn't do anything to cool her off. He also didn't help anything by sliding his hand up the inside of her thigh every now and then. Their talk was almost entirely about sex and when Lisa moved her own hand up between Dan's legs, she found him already partly hard again.\n\nAfter the food was finished and they had carried the dishes back into the kitchen, Dan said, \"Much as I would like to take you down and start torturing you again right now, we'd better wait a little while. I don't want you getting sick while I'm busy tormenting you. Tell you what. I've got another one of those amateur videos with the same two couples if you're interested?\"\n\nLisa grinned at him and teased, \"Well, I was so looking forward to being whipped again right away, but I suppose you're right. That last video was certainly hot, so let's see this other one. Maybe you could just paddle me a little or something?\" she added in a coy, little girl voice.\n\n\"I'm sure I can find something to make it interesting,\" Dan said as he led her into the room with the TV. He placed the tape in the VCR, brought the remote back to the big leather chair, and then once again tied her hands behind her back, wrist to elbow. Then suddenly he flipped her across his lap and began to spank her with his hand. After a dozen really hard swats he let her up. \"Bend across the chair arm,\" he told her.\n\nLisa, tears still in her eyes, complied. Dan removed the butt plug from her ass and then thrust his now hard cock into her wet pussy in one long stroke. He moved in and out several times and then pulled all the way out. Lisa looked sharply at him over her shoulder.\n\n\"Don't worry,\" he said. \"I have more planned.\" With this he moved in front of the chair and positioned Lisa directly in front of him, facing away. He reached around and teased her nipples for a second and then used his hands to spread her buttocks. Then, holding her hips, he slowly pushed inside her rear until his cock was well inserted. Finally, still holding her close to him, lowered the two of them into the chair. Lisa now sat on his lap, impaled on his hard cock, and her hands bound behind her.\n\n\"Now we can watch the show,\" Dan said. \"You should be able to keep me hard but don't make me come. We'll see how long we can last.\" With this he used the remote to start the tape.\n\nThe tape opened with an outdoor shot of a clearing in a thick woods. The blonde and brunette from the other tape were each standing on their toes below a tree branch, their wrists tied to a rope holding them taut. Both were completely naked. \"They were camping up in the national forest by Summerville,\" Dan explained. \"You hike back in a ways and it's completely isolated. Almost as much as here.\"\n\nThe two men appeared, each holding a wide leather strap, and proceeded to whip each girl's ass. Their squeals came clearly from the speakers. After a dozen blows which left each backside a bright red, the men switched to long tailed cats. For the next ten minutes they lashed the two women, both front and rear, leaving red lines covering them between shoulders and knees. The two women were obviously getting excited from the beating and were egging the men on.\n\nFinally they stopped the flogging and got a couple of more ropes which they tied to the girls' ankles. They then pulled the ropes and tied them to trees in front of them and several yards away, leaving the young women suspended by their wrists and ankles, their legs widely spread and pulled tight enough to raise their pussies about four feet off the ground. The men applied a few more strokes of the cats to their exposed pussies and then moved their mouths to these targets, eating the women to a number of orgasms.\n\nWhile watching this Lisa was becoming more and more excited. As she squirmed on Dan's cock, imbedded deeply in her own ass, he teased and tormented her already sore nipples and played with her clit. But several times as she was about to come, he stopped and let her cool off a little. He was obviously not going to let her come right away and was also trying hard not to come yet himself.\n\nThe tape switched to another scene where the brunette was tied on her back on a large fallen log. Her legs were wrapped around and tied beneath it and her arms were pulled back over her head and part way around the log, stretching her wide open. There were clothes pins on her nipples. Each pin was attached to a string which went over an overhanging branch and ended with small lead weights pulling it down and stretching her nipples upwards. As they watched, first one and then the other man ate her to orgasm and then fucked her. Lisa expected that after she had come these four times, the men would put the blonde in her place and begin to torment her. But to her surprise the blonde appeared with her hands bound behind her. She was placed straddling the log at the brunette's feet and facing her. One of the men then bent her forward and lowered her face to the brunette's sopping pussy. As the blonde eagerly ate the other girl to three climaxes, the men took turns whipping the blonde's ass and finger fucking her pussy and anus.\n\nLisa stared in amazement! Of course she knew that some women liked sex only with other women and she knew that some liked sex with both women and men. But she had never really known any women who talked about it if they liked this kind of thing. The idea that the sexy pair she had seen in these two videos, who obviously liked men so much, could also be turned on with each other, really surprised her. But more surprising was her own reaction. She kept imaging herself as first the brunette and then the blonde, wondering what it would be like. The thought that it was \"just play\" as Dan had said of their own activities, kept surfacing and confusing Lisa's preconceived ideas about the whole woman-woman thing. She also noticed that the action on the screen seemed to be turning Dan on quite a bit too.\n\nThen the scene in the tape switched again. The two women were once again suspended by their wrists from the tree branch, but this time they were tied face to face with their wrists and ankles bound together. Lisa could see their breasts pressing tightly against each other and, upon closer observation, she discovered there appeared to be some kind of connected dildo in both of their pussies. As they hung there, the men first fingered their asses and then used the cats to severely whip them. As the two became more and more excited from the whippings, they began to kiss. Lisa could see that their tongues were going deeply into each other's mouth and that the two women were grinding their pussies with the embedded dildo hard against each other. When the brunette started to come it triggered the blonde's climax and both women shuddered through a long, long orgasm as the men whipped them.\n\nFinally the men stopped the whipping and moved behind the two women. One had something in his hand. This turned out to be a jar of Vaseline which they shared and used to lube the girls' rear openings. The two men then proceeded to fuck the women in the ass until all four came within seconds of each other.\n\nThen there was a scene where one of the men was stretched out on his back on a blanket. The blonde was lying atop him, his cock buried in her pussy. Then the other man knelt behind her and entered her ass, stretching himself out behind her. The brunette appeared and tied all six of their wrists together and then all six ankles. Then as the two men began to move and fuck the blonde, the brunette used the cat to whip all three of them. Watching this Lisa and Dan both began to move hard against each other and soon came with their own shattering climax.\n\nThey remained where they were with Dan's cock softening in Lisa's rear and watched as finally a scene appeared with the two men tied bent across the fallen log. Their legs were spread and tied to their wrists under the log and they were also completely naked. Then the two women appeared, equally naked except for some harness arrangement around their waists. They used the cats to whip the men, first laying a grid of fine red lines and then turning their asses bright red. The men's cries mingled with the slap of leather on bare skin. Then the women put down the whips and began to attach something to the harnesses they wore. Lisa saw at once that the objects they were attaching were some kind of dildos, sticking out like fake cocks. She had heard a couple of girls talking about strap ons once but wasn't exactly sure what they meant. This was the first time she had seen such a thing. Now the two women approached the men and used their fingers to lube the men's anal openings. After fingering them for a couple of minutes the girls used their 'cocks' to fuck the men in the ass. Lisa's eyes were wide and she stared intently at the screen.\n\nWhen the tape was over, Dan reached around and toyed with Lisa's rock hard nipples. \"Did you see something that excited you?\" he asked.\n\n\"Something did,\" Lisa replied. \"In fact I'm not sure what I feel. Everything seemed so sexy and exciting, but I'm not attracted to other women and don't know why that should turn me on. I do think maybe fucking you in the ass might be fun, though.\"\n\nDan replied slowly, \"I'm not sure about that. Maybe we'll try it someday.\" Then he switched tone. \"What about the rest? Does it sound interesting enough to try making it with another woman sometime?\"\n\nLisa twisted around to look at him. \"I don't know what I think about that. I'm not sure I even could do it, much less want to. But I'll admit I do find the idea exciting for some reason. I'm mixed up about that and really don't know what I think. Why? Would you like to see me with another woman?\"\n\nDan looked at her. \"Not if you didn't want to. But I guess almost any man is turned on by the idea of two women together, at least if he gets to have them too. But right now I think we need to get cleaned up and then I believe you have a date with a torture chamber.\"\n\nDan untied Lisa's arms so she could stretch them. They made a quick bathroom stop and then went back downstairs to the secret dungeon. Dan attached the leather wrist and ankle cuffs again and positioned her under a pair of hanging chains. He attached her wrist cuffs high up on the chains so that her hands were three feet apart and she could barely keep her feet on the floor. He then spread her feet and anchored them to the floor about three feet apart also. Next he took a couple of lengths of dark red velvet ribbon. The ribbon was narrow, about a quarter inch across, and each piece was about three or four feet long. He used one piece to tie around the base of her right breast, cinching it tight and winding the ribbon round and round it. He then did the same to the left breast. Very soon Lisa felt her tits swelling with the trapped blood and becoming very taut. Her nipples hardened and stuck straight out.\n\nDan then brought over the stand he had used earlier to hold the dildo while she had been bound to the X-frame. This time he found a very large dildo. It was nearly a foot long and tapered to a maximum of three inches in diameter. He placed just a couple of inches inside her pussy and locked the stand in place. For the next ten minutes he teased and tormented her nipples and clit, stopping frequently to move the dildo a little deeper. By the end of this time, Lisa had over half of the monster buried inside her. Dan picked up the cat with twelve inch lashes and began to whip her. He concentrated on her trapped tits, turning the tender flesh bright red. Then he put down the small cat and used a riding crop to sting her on the ass, on her stomach, on her thighs, and even on her sensitive breasts and tight nipples. While he was doing this, he turned a switch on the huge dildo and it began to vibrate, sending Lisa into sensual fits. She twisted and squirmed on the dildo and finally could take it no longer and screamed into a hard, hard climax.\n\nAs she calmed down, Dan lowered the dildo stand and then released her from the chains. As he removed the ribbons, blood flowed back into her breasts, causing a new wave of pain. \"Let's try something a little less strenuous, at least at first,\" Dan said, as he led her over to the padded table. He had her kneel on the table and fastened her ankles to either side at the end. He then placed a large, thick, triangular shaped pillow in front of her knees and had her lie down over it. This raised her ass higher than the rest of her, especially when he fastened her wrists to the table end and pulled them tight.\n\nHe used a light leather paddle to once again redden her ass and then began to finger her soaked pussy and tight rear hole. He lubed her anus and picked up something Lisa couldn't see. \"I said we'd try one of these,\" Dan said as he pressed the object against her tail. It started in but quickly Lisa decided it was rather large. With a lot of pushing and twisting, Dan worked the object, what ever it was, inside her ass.\n\n\"What have you got in me?\" Lisa asked. Dan didn't immediately reply but she could feel him doing something to the object and to something else near by.\n\nFinally he did something and Lisa heard a sound of rushing air. She also felt the object begin to move inside her. A couple of more times Dan did the something, the object got larger, and Lisa realized he was inflating something lodged inside of her ass. The feeling of fullness increased and finally became a bit uncomfortable. Dan seemed to sense when she had reached her limit and stopped.\n\n\"Is that one of the Bardex devices you mentioned?\" she asked.\n\n\"Right first time,\" Dan said. \"How does it feel?\"\n\n\"Full,\" Lisa replied. \"Kind of funny, tight. Kind of uncomfortable but also kind of good, exciting.",
        "\"Good,\" Dan replied. \"Last time you took three quarts. We'll see if we can beat that now. After all, we don't have to worry about it coming out unexpectedly this time.\" With this he did something and Lisa felt hot liquid begin to flow into her bowels. Dan stopped and started the flow a number of times while frequently teasing her sensitive spots with his fingers and tongue and tormenting her with a short whip. Finally Lisa called a halt, telling him she didn't think she could take any more. He stopped the flow, but continued to leave her there, bound tightly as the cramping began to add to the torment of the whip.\n\nHe made her hold it for twenty minutes while he alternated between torturing her with the whip and teasing the backs of her knees and the soles of her feet with his tongue. Lisa came twice before he finally released her and helped her to the toilet in the corner. When she was emptied he took her to the shower and cleaned her up.\n\nAs he dried her off, Dan said, \"Now I think we should see how you like really being tied up.\" He took her over to a thick mat - or thin mattress - on the floor and had her kneel again. Using soft rope he tied her hands behind her back, palm to palm. He then wrapped the rope round and round her arms, fastening her forearms together up to the elbows. This made her breasts stand far out and he saw her nipples had already hardened. Next he inserted two dildos into her two openings and laid her down on her front on the mat. He used more rope to bind her ankles and legs together all the way up to the tops of her thighs. He then bent her legs at the knee and tied her wrists to her ankles, pulling her into a tight bow.\n\nThe strain of this position was making Lisa sweat. Dan didn't help anything by pinching her nipples and starting both dildos to vibrating. He then used a pair of small clamps connected by a light chain to torment her hard nipples. Then for another fifteen minutes he used the small cat to whip her thighs and stomach and occasionally her breasts. Finally, with Lisa gasping with excitement, he moved to her head and placed his hard cock between her lips. Lisa sucked and licked wildly until finally Dan exploded, spurting down her throat. Rolling her onto her back and tied hands and feet, he than ate her to three consecutive orgasms.\n\nWhen Dan finally released her from her bonds, Lisa moaned as her sore limbs began to feel and move again. \"How are you managing? Dan asked.. \"Do you still want to keep going?\"\n\n\"I still want to try a little more. I know I'm going to hurt like hell tomorrow, but I'm still so turned on I want to keep on going, even if I might be heading for exhaustion.\" This last was accompanied by a grin that told him she was at least partly kidding about the exhaustion.\n\n\"OK,\" Dan said. \"That was number forty-nine. I've got one more thing I want to try on you down here and then I think maybe a really good flogging followed by a really, really intense fuck. First, though, I want to see you ride the leather horse I found over here.\"\n\nDan dragged out a strange looking device. It had a large, heavy base which he made even more stable by attaching it to some floor bolts. It consisted of what looked like a funny shaped leather saddle. The saddle was only about six inches wide and came up to a rounded ridge rather than a smooth seat. There was also an eight inch dildo sticking out of the device. The entire saddle was mounted on stiff springs, somewhat like those found on the playground horses little kids loved to bounce around on. However, as Lisa was soon to find out, these springs were somehow attached to mechanical catches which caused the bouncing to be more sharp and unpredictable. The saddle was high enough that seated on it her legs would be several inches above the floor. Dan placed a small stool on either side of the horse and helped Lisa to mount the saddle. He lubed the dildo and she slowly lowered herself onto it. She quickly discovered that when the large dildo penetrated completely, her sensitive pussy area was pressed against the small, rounded edge of the leather ridge. Lowering her weight onto this hurt quite a bit, so she kept her feet pushing against the stools to protect herself.\n\nNext Dan fastened her wrist cuffs together and ran a chain from them to an eyebolt located in the ceiling and in front of her. This caused her to lean forward, placing even more pressure against her sensitive pussy. Dan added two nipple clamps which bit deeply into her tits and then placed about eight ounces of lead weights on each clamp. Finally he attached a ten pound weight to each ankle and then removed the stools.\n\nAs her weight came fully down against the saddle, Lisa screamed and jerked. The quick motion caused the weights to swing wildly, pulling at her tormented tits. It also caused the horse to begin to bounce unexpectedly which resulted in more sudden, sharp moves, making the cycle begin again. As Dan watched her contortions and listened to her cries he noticed that she seemed to be getting aroused even with the apparent pain. He added to the latter with stings from a riding crop and medium cat.\n\nFor fifteen minutes Dan let her ride the horse. When she learned to control her movements and slow the wild bucking and swinging, Dan would use a whip to start her off again. When it looked to Dan as thought she was reaching her limit, he brought the stools back and helped her off the horse.\n\nWhen he finally released her, she turned to him and wrapped her arms around his neck. He could see from the look on her face that her nipples hurt as she rubbed them against him and that her pussy was tender. But she held him tightly, kissing him long and deeply despite the discomfort this was obviously causing. Finally she whispered in his ear, \"All right, Captain. Whip me so I'll really remember it and than fuck the daylights out of me.\"\n\n\"Very well, Wench. I think we should take you on deck for this.\" He then clipped her cuffs together behind her back and led her from the dungeon back up stairs and out the back door. Lisa was surprised to see that the sun was coming up. They had played all night! Of course the sun came up about five this time of year, so it was still pretty early.\n\nIn the back yard there was a clothes line, or at least the posts for fastening one. The posts were set in pairs about forty feet apart and each pair was spaced about six feet from its neighbor. Dan was used to it now but when he had first seen his aunt using it for a clothes line he had wondered why the posts at either end were four by fours set into concrete. It looked like they could wash the car and hang it up here to dry. Now there was no line attached, but the four posts stood firm. Since finding the hidden dungeon Dan had begun to see other uses for many of the items around the place and the clothes line posts were no exception. He wondered if clothes line was all these were used for and when he found that they had eyebolts on all four sides - not just one for attaching the line - he decided that either his aunt or uncle or both had been tied there in the past. Now it was Lisa's turn.\n\nHe placed her between the two posts, unclipped her wrist cuffs and used short pieces of rope to tie each wrist to an eyebolt at the top of the posts. He then used more rope to spread her legs wide apart and tie them to the bottoms of the posts. Stretched wide and tight, Lisa waited for her flogging. As Dan picked up the cat with thirty inch tails, Lisa said, \"Remember, Dan, make me really feel this. I want you to be really rough unless I call a safeword. I need to see what it feels like.\"\n\nDan asked, \"Are you sure?\", and Lisa nodded. He then raised the cat and let a hard stroke fall across her ass. For the next thirty minutes, Dan beat the naked girl. She cried and screamed. She moaned and jerked against her bonds. She yelled. She tried to frantically pull away. She came three times. But she did not call a safeword.\n\nFinally Dan decided she had had enough and lowered the whip. He grabbed a couple of bean bag chairs from the back porch and placed them behind Lisa. He then released her wrists and laid her back across the bags, arching her pussy up and pulling her very taut. He tied her wrists to stakes in the ground and then began to tease her hot body using his fingers, lips, and tongue. Lisa was soon moaning and screaming like she had under the whip, but this time they were cries of frustration. Finally after twenty minutes of this torturous teasing, Dan entered her deeply and lay atop her bare body, fucking her hard and deep. When he came, she joined him is a loud orgasm which could probably have been heard in the next county.\n\nWhen they finally calmed down and Dan untied her, he asked, \"Well, Wench, do you still say your Captain was bragging, or do you think you have been properly ravished?\"\n\nLisa answered, \"You win the bet, Captain. But I think we will have to discuss the details later. I'm about to collapse and I think you look like you may be approaching that yourself. We had better sleep some. OK?\"\n\nDan agreed and the couple started back to the house, each with an arm around the other. As they entered, Dan said, \"You know, it's probably a good thing that I said I'd turn you over to my crew of fifty. If I'd said a hundred or even seventy-five or sixty, I'm not sure we could have made it, are you?\"\n\nLisa giggled, \"Quite likely not. But I'm also glad you didn't say twenty-five or forty!\"\n\nThey headed upstairs to Dan's room. Once inside Dan closed the heavy drapes, keeping out the newly risen morning sun and making the room dark. Then, with a long, deep kiss, the two young people dropped down on the bed and almost instantly slipped into exhausted sleep.\n\nCousin - Ch. 7\n\nDan slowly opened his eyes. His head felt thick, almost as though he were hung over, and awareness was slow in returning. He was in his own bed, naked, and Lisa, equally naked, was still sound asleep beside him. Sometime one of them must have pulled up a sheet, covering them. He glanced at the clock on the bedside table. It read one twenty-five and Dan had to look a second time to realize it was one twenty-five PM. Then as he remembered that it had been past six in the morning when they finally came up here, it began to make a little more sense. He still felt pretty worn out and wondered just how Lisa must feel. After all, while the last few days had been pretty demanding on him, they had been much harder on Lisa.\n\nHe looked over at her sleeping form and thought again how incredibly sexy she was. Just then she moved slightly and made a soft, indeterminate sound. Looking at her aroused him and he decided that he would wake her with some sexy stimulation. He gently pulled the sheet back, revealing her lovely body. He started to lower his head to her breast when what he saw suddenly stopped him. She was still covered with red lines from the whipping he had given her earlier. Her mouth looked puffy and her breasts - especially the nipples and surrounding area - looked like they were probably still very sore. He hesitated and changed direction, lightly kissing her eyelids instead.\n\nIn a few seconds Lisa blinked. First there was a quick smile and then, as she turned slightly, a distinct grimace. Dan smiled down at her. \"Good morning, or I should say afternoon. How are you feeling?\"\n\nHe could see her muscles tense a little, but she lay where she was and replied, \"I'm fine, except I don't think I can move from the eyebrows down.\" At Dan's look of concern she quickly added, \"I'm OK. I knew I'd be sore and I was right that I'd hurt like hell today. But I wouldn't have missed a minute of the last few days. Just give me a minute to loosen up.\"\n\nDan still looked worried. \"I really didn't mean to hurt you too much. I'm sorry if I got too carried away.\"\n\nLisa stopped him. \"You didn't get carried away. I asked for all of it and I seem to remember I had a safeword I could have used if I'd wanted to. So quit worrying about it. I'd love to try more of that stuff but I'm kind of afraid I may need a little while to recover.\" She looked up and down Dan's bare body and added, \"In fact I feel like raping you right now. But before you start anything I also have to add I don't think I'm up to it. The spirit is very willing, but the body hurts too much.\"\n\nLisa began to slowly stretch and started to sit up. Dan could now see that her back and ass were also covered with a number of red lines and her pussy looked rather sore and swelled. Finally she sat up and groaned. \"I feel like I spent too many hours out in the sun and also I think every muscle I have aches.\" Then she grinned at him and said, \"Sort of like the girl who wanted to become an Eskimo.\"\n\nDan looked at her with a big question mark on his face, as if she wasn't making any sense at all.\n\nLisa laughed and said. \"There's a story about a girl who really loved the Eskimo culture and decided she wanted to become a real Eskimo. So she went to the tribal leaders and they told her that to be officially adopted into the tribe she had to do three things. First she had to build an igloo using no tools. Then she had to kill a polar bear with her bare hands. And finally she had to make love to an Eskimo man. So the next day she set out early and by afternoon came back and took the tribal leaders to the most beautiful igloo they had ever seen. Everyone approved and said she had done the first task wonderfully. So the next morning she again left early. By late afternoon the tribal leaders began to worry a little about her. Finally, after dusk, she came stumbling back into the village. They could see that she was scratched and bitten, her clothes were in tatters and she was limping. She came up to the leaders gathered around the fire and said, 'All right. Now where is this Eskimo man I have to kill.\"\n\nDan broke up laughing and was joined by Lisa. After they had calmed down, he suggested first a hot bath to let her soak away some of the aches. Then he would rub some lotion on her damaged skin. While she was bathing he would get them something to eat and bring it upstairs. Lisa agreed and he helped her to the bathroom.\n\nWhen Dan came back upstairs awhile later, dressed in a pair of cutoffs and carrying a tray, Lisa was drying herself. \"That made a big difference,\" she said. \"But I still hurt a bit.\"\n\nDan set the tray aside and spent the next ten minutes rubbing lotion all over her damaged skin and massaging her sore muscles. When he had finished he brought a small table over beside the bed and set the tray on it. He then drew up a chair on one side and tossed a robe to Lisa where she sat on the bed.\n\n\"If you don't have any objection, I'll leave the robe off,\" Lisa said. \"I've gotten used to being naked and besides I'm afraid anything touching me might irritate.\"\n\nDan stopped and looked at her. \"If I don't have any objection!?! Lisa, you are the most beautiful and sexy creature I've ever seen or imagined. I don't think I would object if you never wore clothes in my presence again.\"\n\nLisa laughed and looked a little embarrassed. \"I'm not quite that good. But I'm glad you think so. And by the way, the same goes for me. You've turned me on since I was twelve and the last few days have been incredible. I love looking at your body and if I weren't so sore I would probably have already had you twice today.\"\n\nThe couple finished their meal and Dan gathered everything back onto the tray and started to take it back down. \"Just a second,\" Lisa said. \"I'll come with you. I want to move around a little.\" Then as she stood and gave a little groan added, \"I just better not move too fast.\"\n\nThey went downstairs, Lisa still naked. As Dan put the tray in the kitchen, Lisa started out the door. He quickly caught up with her as she started down towards the pond. When they reached the grassy slope above the swimming area, Lisa lowered herself to the ground and Dan sank down beside her. She leaned over and put her arms around his neck, kissing him deeply. Dan let his hands roam up from her ass and around to her breasts. As he started to touch her nipples, Lisa pulled back and let out a gasp. \"Ouch! I guess I'm more sensitive there than I thought. Dan, I'm afraid I'm just too sore for much of anything today. I'm sorry.\"\n\n\"Don't be,\" Dan laughed. We've had sex fifty one times in the last five days as well as I've beat hell out of you and tortured you in lots of other ways. I am amazed you held up until now.\"\n\n\"But still I'm sorry,\" Lisa said. \"You won the bet and the bet was that you got to keep me for a captive for the next two weeks. I want you to be able to whip me and otherwise enjoy my captivity, so to speak.\"\n\n\"That's all right,\" Dan replied. \"I don't mind if we let the bet go. I told you the last five days have been wonderful, more than any fantasy I could have imagined.\"\n\n\"But I don't want to let the bet go. You're my fantasy, too, remember? Tell you what. I've got an idea. You have about four weeks until school starts. Right?\"\n\nDan nodded and Lisa continued, \"OK. Suppose I call Diana - she's the girlfriend I told you I was going to meet - and arrange to meet her this week instead. That will give me a week to recover and then I can come back and we can have the next three weeks after that. How does that sound?\"\n\n\"Well,\" Dan slowly replied, \"As long as you come back. I really like you , Lisa, and I don't want this week to just disappear. The sex is fantastic, but more than that I mean I really do like you.\"\n\nLisa looked at him with something like, but not exactly, longing in her eyes. \"Don't worry, Dan. It took me years to get you to really notice me. I'm not going to let you get away that easily. Besides, I think the sex is fantastic, too.\"\n\nThey lay on the grass, resting in the afternoon sun for a couple of more hours. Finally Lisa stood and said, \"Let's grab a swim and then go back for some supper. At least I want to try a swim.\"\n\n\"All right,\" Dan said. \"If you find yourself too sore to swim I'm here to rescue you. Of course, my price might be rather high.\"\n\nLisa stuck her tongue out at him and then ran to the edge and dived into the water. Dan quickly followed her.\n\nFor ten or fifteen minutes the couple splashed around in the water and made several trips out to the center of the pond and back. Finally they climbed out and, dripping wet, started back to the house. \"If I'd known we'd be swimming, I'd have brought a towel,\" Dan said.\n\n\"That's OK,\" Lisa said. \"We can take a shower and then dry off. Don't forget your shorts,\" she reminded him. Dan picked up his cutoffs and they headed back towards the house.\n\nAfter dinner Dan asked Lisa if she was tired enough to go right to bed or if she wanted to do something else. She answered, \"Let's watch that last video again. The one you have of the two couples camping up in the forest.\"\n\nDan laughed, \"You really liked that, didn't you?\"\n\nLisa nodded and looked a little embarrassed. \"It was a pretty good turn on.\"\n\n\"Yeah, well really I think so too. Maybe we'll have to join them and make our own video some day,\" he teasingly suggested.\n\n\"I doubt that,\" Lisa quickly answered. Then more slowly she added, \"Would you really like that? A group sex thing?\"\n\n\"No, actually, I don't think so,\" Dan replied. \"What about you?\"\n\n\"No, I'm not the group sex type. Remember a week ago I had hardly done anything unusual. But you did get turned on by the scene with the two girls together, you said. Does that mean that you might be interested in a threesome?\"\n\nNow Dan looked a little embarrassed. \"I told you that almost all men like the idea of having two women together. But would I really like to try it? I don't know. Maybe, especially if the girls wanted it. Why, have you got someone in mind?\"\n\nLisa turned a little red. \"Not really. I was just asking.\" Then she added, a little defiantly, \"Maybe I should bring Diana back with me after next week. Would you like having two captives?\"",
        "Dan decided to go along with her kidding. \"Sure, why not. But remember not only will I have both of you, but I probably whip you together and maybe even have you make it with each other. How's that sound?\"\n\nLisa looked down, but what Dan didn't realize was that she looked down to hide the fleeting look of excitement she felt at the idea. Quickly she turned and walked towards the TV room.\n\nThe couple cuddled together in the leather recliner and watched the screen. But before the tape ended, their lust had been aroused to where Lisa forgot her sore muscles. She turned and pushed Dan back, reclining the chair. She straddled his hips and lowered herself, sinking his hard shaft deeply inside herself. She then stretched full length atop him and the two quickly forgot the action on the screen. Later Lisa insisted they rewind the tape to see the parts they had missed.\n\nA little after ten they started up to bed. On the way Dan asked, maybe a little hopefully, \"How are you feeling? Are you up to any more games or do you think you need to go right to sleep?\"\n\nLisa answered, \"I feel quite a bit better. But if you don't mind, tonight I'd like to try something a little different.\"\n\nDan had been thinking of tying her to the bed again, but he quickly said, \"As long as it involves us being naked, I'll probably be interested. Just what 'different' did you have in mind?\"\n\nThey had reached the bedroom door and Lisa stopped and turned to face him. \"I want to tie you up tonight. You can be my captive for a few hours.\"\n\nThis took Dan completely by surprise. He had almost always been the dominant one in any kind of relationship and he wasn't sure how he'd enjoy having someone else call the shots. But then again, he couldn't imagine anything with Lisa that he wouldn't like. Slowly he began to nod his head and said, \"OK. I've never done that but I'm willing to give it a try. As long as I can have the same safewords you did.\"\n\n\"Of course,\" Lisa immediately said. \"You said yourself that these are just games.\" Then her voice changed slightly, \"All right, Stud. Make a trip to the bathroom and then get back here.\"\n\nWhen Dan returned, Lisa had dug out the leather cuffs. She proceeded to place these snugly about Dan's wrists and ankles and then had him lie on his back on the bed. She tied him spread eagled, not too tightly, but much the same way she had spent some of the previous nights. When she finished, Dan tested his bonds and found that he really was secured. He couldn't get loose by himself if he wanted. Lisa smiled as she watched him pull against the ropes and realize his actual predicament. She bent and sucked at his nipples and then ran her tongue from the bottom of his balls, up across his hardening shaft, and on up his stomach and chest and into his right ear. Dan strained and his cock began to stick straight out. Lisa pulled back and grinned. Then she stood and walked into the bathroom, leaving a frustrated Dan struggling on the bed.\n\nShe returned in just a few minutes and for the next hour teased her captive relentlessly. Again and again she brought him almost to the top and then stopped long enough to let him cool slightly. She licked and sucked, nibbled and bit, and used her fingers to stimulate every square centimeter of his sensitive skin. Once she climbed atop him, upside down, and spent several minutes in a hot sixty-nine, again stopping short of allowing him to come. Finally with Dan pulling wildly at his bonds and nearly in tears with frustration, she mounted him, impaling herself on his hard shaft, and brought both of them to a screaming climax.\n\nBut that wasn't the end. She immediately began to lick and suck his now sensitive organ causing him to twist and try to pull away from the sensory overload. She kept this up for several minutes and then began to tickle him. Dan laughed and screamed as she relentlessly tormented his sensitive areas, stopping only long enough to sexually stimulate him. After nearly another hour of this she once again mounted him and rode him to another shattering climax.\n\nAs Lisa rolled off of him, Dan said, \"That was incredible! You can definitely tie me up again!\"\n\nLisa grinned at him. \"Maybe sometime again. But I'm not done with this time yet. You can stay there until morning and maybe I'll even use you again before then. Then if you're still up to it, we'll see what we can do.\" With that she turned off the light and snuggled her bare body against his.\n\nAs promised, Dan woke once during the middle of the night to find himself hard and Lisa already impaled on his shaft. Again she rode him hard and when finished, kissed him and, without a word, snuggled against him again and fell almost immediately asleep.\n\nThe next time Dan woke it was to the attention of Lisa's tongue and mouth on his cock. The room was light and Dan guessed it was morning. For forty-five minutes, Lisa tickled, teased, stimulated, and finally fucked him again. Afterwards she released him and the two of them headed to the shower together. Most of Lisa's whip marks were gone and she seemed not nearly so sore. Dan was amazed at how fast she had recovered. As the two of them, both still naked, went down for breakfast, Dan gaze followed Lisa's tight bottom and wondered what was the next act in this surreal play."
    ],
    "authorname": "professorjames",
    "tags": [
        "rope hook",
        "wet dan",
        "dan woke",
        "fifty times",
        "thirty inches",
        "heavily padded",
        "times dan",
        "added nipple",
        "cat thirty",
        "bet dan"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/cousin-pt-01"
}