{
    "title": "Pool Payments Ch. 07",
    "pages": [
        "Chapter 07 - Double the Fun\n\nBeth helps deliver Kayla's next lesson.\n\n----------------------------------------\n\nKayla and Beth worked out the logistics, and we all got together at my place that following Tuesday. Things were easier to negotiate since half the kids were in Rock Climbing camp for the week. My daughter and both of Beth's boys were in class together, and Kayla had dropped off her little one with her mother.\n\nI invited the ladies in and offered them a drink, but it wasn't long before we were heading back to my bedroom. I undressed Beth, and then Beth undressed me while I helped Kayla our of her clothing. Kayla was still acting a little shy, and a little nervous, so we closed the blinds and dimmed the lights.\n\n\"Beth, where do you think we should begin this lesson?\" I asked.\n\n\"That's easy, I'm going to come on the end of your tongue, then you're going to come in my mouth, then you're going to introduce Kayla to oral, and finally I'm going to help her make you come again.\" She was very matter-of-fact about it.\n\n\"Wow, you've really thought this out,\" I joked.\n\n\"Oh, yeah. And Kayla is on-board, aren't you Kayla?\" Beth asked, turning to her pretty blonde friend.\n\n\"Yes,\" she answered softly.\n\nWith the plan laid out for us, I went right to work, putting Beth on her back, her hips braced up with a couple of pillows. I started with kisses at her neck, and slowly worked my way all the way down her lithe body. I teased all around the promised land, giving her bodacious butt a lot of attention, but bypassed the primary target and continued down to her toes. I flipped her over and worked my way back up again, kissing, licking, nibbling, massaging, rubbing, until I reached her breasts which I devoured. I continued up to her lips, kissing her thoroughly. I made my southward journey once more, this time going just beyond the gap between her legs, and working my way back up her inner thighs, until I finally was able to spend some time where I belonged, mouth clamped on her hot pussy.\n\nShe had been a bit giggly, and ticklish to start, but there was nothing funny about the way she was moaning under my ministrations. I had two fingers in her, and was working on a third, while I nibbled at the little man-in-the-boat. She was trembling now, and I went in for the big finish. I clutched a leg in each arm, drove my mouth down, and tongue-fucked her, while I had one finger probing her tight little butt hole. My finger slid into her ass, up to the third knuckle, and I sucked on her clit, causing her to yell out, which was still very unlike her. I kept at it, licking and sucking, until she pushed me away, gasping for air.\n\nKayla was sitting in a chair just off the side of the bed. I looked over to her to see how she was taking it, and she looked in shock.\n\n\"What do you think Kayla?\" I asked, \"Doesn't that look fun?\"\n\n\"Oh, God, I don't know, Alex. It looks so nasty,\" she admitted, but her hands were wedged in between her tightly clamped legs, and I believe she'd been touching herself.\n\nKayla looked at Beth, \"Are you Ok? You looked like you were dying there.\"\n\n\"I could suffer a thousand more deaths like that one,\" Beth laughed between heavy breaths.\n\nBeth hopped off the bed, and positioned me up at the top similar to where she'd been, but off center a bit. \"Come here, Kayla, lay beside us, I want you to get a good look.\"\n\nI was almost painfully hard, as Beth could tell. She positioned herself between my legs, and started playing with my cock, talking about it to Kayla.\n\n\"This shouldn't make you too nervous,\" Beth said to Kayla. \"It's not like you've never seen one of these before,\" she teased, slowly stroking me up and down.\n\n\"Not like that one I haven't. It's scary. I can hardly believe something that size fits inside of me.\" Kayla answered.\n\n\"Come on, that thing's built to pop out a baby, this is nowhere near that big.\" Beth held it out to her and wiggled it, emphasizing its size.\n\n\"No, but it's so much bigger than anything else that's been up there. How big is that?\" Kayla asked.\n\nBeth gave me a questioning look.\n\n\"Just a little over eight inches,\" I told her, but Beth wouldn't take my word for it. She knew our house well, and headed out to the kitchen, returning with a cloth measuring tape.\n\n\"Before I measure this, let's make sure he's at his absolute best.\" She gave a little laugh, and then took me in her mouth. She alternated looking at me and Kayla as she went down on me, sucking me nicely, while using her hands to stroke me. She spent some time working on the boys, before returning to taking me in her mouth. When she had me in the state she was looking for she took out her tape measure and measured along the top of my cock from the pubic bone to the tip. \n\n\"Wow! That's just a hair under nine inches. And that's about as big as I've seen it so far. Hard to believe that Lisa is even thinking about letting you stick that up her butt. God, that would tear me in two!\" Beth laughed, and Kayla's eyes got as wide as saucers.\n\n\"How big around is it?\" Kayla asked softly, reaching out her hand to touch me.\n\n\"You hold it up and I'll measure it,\" Beth told her.\n\nKayla took my cock in her hand, at the base, not quite reaching around it.\n\n\"Almost 7 inches,\" Beth announced, \"And all of it dying to get inside you,\" she laughed.\n\n\"I don't think so, it's hard like that for you,\" Kayla argued. She was still holding it, and her hand was making small stroking movements around the base.\n\n\"Well, it's time to find out,\" Beth replied, and she took my cock from Kayla and put her lips over it slowly pushing down onto it, taking it as deeply as she could.\n\n\"How long does it take her to make you, you know?\" Kayla asked me, watching Beth devour me.\n\n\"She has a very talented mouth, and can usually make me come in just a few minutes, almost always under ten,\" I admitted.\n\nBeth pulled off my cock and laughed. \"He's so worked up now, I could get him to come in under three minutes. Having you for an audience sure makes this work easy.\"\n\n\"Three minutes?\" I asked her, \"Feeling a little cocky aren't we?\"\n\n\"If I can't make you come in three minutes, you can have me however you want.\" She was dead serious.\n\n\"I'll take that bet,\" I told her. \"Kayla, you're the judge, grab my watch off the bureau.\"\n\nShe did, and Beth kept stroking me slowly, keeping me as far along as she could, while Kayla got ready. I guess I could have called that cheating, but that would have been awfully ungrateful of me.\n\n\"Ok, START!\" Kayla announced, and then moved in close for the view.\n\nI've got to hand it to her, Beth did her best. She sucked, she swallowed, she licked, she stroked. She took me half-way down her throat, and when Kayla announced three minutes, we both knew I was only seconds away. Beth refused to give up, and bobbed her head up and down on my cock, one finger in my ass, one hand pumping me, and I finally gave it up, filling her mouth. Beth turned to Kayla, with mouthful of my cream, stuck her tongue out, and said a gargled \"Time!\" before swallowing my gift.\n\n\"Three minutes, eighteen seconds.\" Kayla announced.\n\nBeth finished swallowing, and like a true lady, cleaned me with her mouth, sucking at me, until I was starting to get hard again. Then she pulled away.\n\n\"Shit, I can't believe you lasted that long,\" she gave me a look as if I'd done something particularly malicious.\n\n\"It was hard holding back, and if you hadn't made me such a tempting offer, I probably wouldn't have lasted one minute. But the chance to have you again, that was worth going the extra mile.\"\n\nBeth looked at Kayla. \"So, Kayla. You ready for your turn?\" \n\n\"No. But I guess that probably doesn't matter.\" She was almost shivering.\n\n\"Of course it does,\" I told her, \"If you're really not ready we can do this some other time.\"\n\n\"Are you going to do to me what you did to her?\" Kayla asked me, with a nod toward Beth.\n\n\"Oh no. We're just going to play a while, and I'm going to try to make you feel good. We can do that can't we?\" I asked her, caressing her thigh lightly.\n\n\"I guess so,\" she offered up meekly.\n\nBeth and I moved so that Kayla could have the position of honor, but when I went to get between her legs, she locked up like a safe. Rather than fight the problem I decided to try the end-around.\n\nI laid down next to her, caressing her face, and neck, planting kisses on her face and shoulder. \"Isn't she pretty, Beth?\" I asked.\n\n\"She's beautiful,\" Beth answered, taking my cue, and rubbing her arm on the other side. We had her bracketed between us, and our hands started to wander all over her upper body. I hadn't expected this kind of participation from Beth, but was not about to complain.\n\n\"Do you like her tits?\" Beth asked me, squeezing one, and pinching the nipple.\n\n\"Let me show you,\" I answered, and spent the next few minutes enjoying first one then the other. \n\nWhen I broke free from the far breast, Beth took my place, nibbling on the nipple, and teasing it with her tongue. She looked so incredibly sexy feasting on Kayla's tit, that I had to lean over and kiss her, first gently then deeply. We finished competing for Kayla's nipple.\n\nWhile all the oral attention was focused on her breasts, I let my fingers do the walking, down to the Valley of Kayla. It didn't take much encouraging to get her to spread her legs a bit, and before long I had a finger lodged deep inside her. Beth's hand wasn't long behind, and she managed to work a finger in beside mine.\n\nI left our reluctant newbie's tits alone, and moved back to her face, and eventually to her mouth. We kissed long and deep, while I opened her up for a second finger. Beth wanted to continue playing, so she drifted upward as well, and we shared a three way kiss. It eventually devolved into a hot kiss between Beth and Kayla, that had me hard as a rock.\n\nI moved down Kayla's body, this time with no resistance, and spread her legs apart, settling in between them. I opened her up and let my tongue work up and down her very wet channel.\n\n\"He's doing it, Beth,\" Kayla moaned, while they both watched me go down on her. Beth continued to play with Kayla's near breast.\n\n\"Yeah, isn't it nice?\" Beth answered, giving Kayla another deep kiss.\n\nWhen Beth came up for air, Kayla spoke again, \"It's so dirty.\"\n\nI was teasing her lips, sucking on them, and using my tongue to delve inside her, I'd even licked a little around the top of her pussy, but now I went there with a target in mind. I used my fingers to open her up, and then used my tongue to really give some attention to her lonely little clit. It was as if somebody had applied 200 volts. Her whole body jerked for a second and she cried out.\n\n\"Oh...OH!\" She cried out, her legs clamping around my head.\n\n\"Now you're making me jealous,\" Beth told her, squeezing her tits a little more forcefully, and tugging at her red, erect nipples.\n\nI pulled my face up for a second, and reached out and took Beth's hand and placed it on Kayla's clit. \"Help me, Beth.\"\n\nI lapped away at her pussy, driving two fingers into her, while Beth's hands moved like lightning over Kayla's love button.\n\nMy jaw was tiring, when I heard Kayla cry out, \"Oh God, Oh God, Oh GOD!\" She clamped her legs around my head, and almost jerked it off my neck when she started to roll into a fetal position. Her head rolled back, and she grunted, then shouted one long \"GAAAWD\" before hunching over and trying to push me away from her.\n\nAnd that was how Beth and I made Kayla come for only the second time in her short life. \n\nBeth and I both tried to comfort her, stroking her legs, belly, breasts, and speaking softly to her. She finally relaxed, and laid back spent.\n\nShe looked at me, her eyes large and innocent. \"I love you,\" she whispered. Beth laughed, and I couldn't help but follow. \n\n\"You don't love me, you love being loved,\" I told her, \"and there's a lot more where that came from.\"\n\nA shout from outside had us all sitting up quickly. Jill from next door had let herself into the backyard, taking advantage of the quiet, and had yelled at her brother to get lost, slamming the backyard gate on him. While we watched, she looked around, arranged the lounge chair to face the sun, took her top off, and laid back to catch some rays.\n\n\"The little tramp!\" Beth laughed. \"She thinks you're home alone, and she's putting on a show! Is this a regular thing over here?\"\n\nI was a bit stunned. The high school senior had been growing up, but I only now was seeing just how much. \"Never before,\" I finally managed.\n\nKayla spoke up, \"I never saw her in a bikini before.\"\n\nIt was a good point. Jill always wore a one piece, and was not the kind of girl who wore clothing that was overly exposing. \n\n\"You ought to go out there,\" Beth teased.\n\n\"I should WHAT?\" \n\n\"Go out there. She's expecting it, call her bluff,\" Beth said.\n\n\"She's just a kid,\" I reminded them.\n\n\"She's hardly a kid. Look at her,\" Beth reminded me. \"If you do it, I'll let you fuck Kayla.\"\n\nKayla responded to that. \"Hey!\"\n\n\"Oh shush,\" Beth told her, \"You're going to do it, and you're going to love it.\"\n\nThe two hammered away at me, and before much longer I had pulled on some knit shorts and headed out to pay the neighbor girl a visit.\n\nJill had earphones on and didn't notice me until I was almost standing over her. She tilted her head, took off her earphones, and then slowly covered her breasts with her hands. Very cute breasts, I might add.\n\n\"Hi Jill, didn't mean to sneak up on you,\" I told her.\n\n\"Hey Alex, hope you don't mind me hanging out back here. It's nice and quiet here.\"\n\n\"A nice change of pace isn't it?\" I laughed.\n\nJill uncovered her breasts, giving me a nice glimpse again, then rolled over on her belly. \"Would you mind lotioning my back?\" She turned to me, holding out the bottle of suntan lotion, her raised arm giving me a long look at her sweet young tits.\n\nI took the lotion and started at her shoulders and slowly worked my way down.\n\n\"We're not alone here, are we?\" Jill said softly.\n\n\"Alone?\" I asked, feigning ignorance.\n\n\"I'm not blind, Alex,\" she told me while my hands rubbed the lotion into her lower back. She reached back and rolled her bikini bottoms down a bit, to give me added area to protect. \"I see you go into the house, day after day with a hard-on, and the pretty blonde lady or that skinny woman with the huge tits following you in.\" She giggled. \"A little while later some very satisfied looking mommies come back out of the house.\"\n\nMy hands were working down her legs, but I lost track a moment, after her comment. She spread her legs, giving me easier access to her inner thighs.\n\n\"It's not what you think,\" I started.\n\nShe turned on her side and gestured me closer. When I bent closer, she waved me closer yet. When I was inches from her face she leaned forward and whispered in my ear. \"I'm not a virgin. Haven't been for quite a while. I've had three different lovers, and I've blown ten different guys. My parents think I'm pure as the driven snow. There. Now you know my secret and I know yours. Neither of us is going to tell, right?\"\n\n\"Right,\" I said as she rolled back onto her belly.\n\n\"You missed my calves.\"\n\nDazed, I went back to the lotion job. \n\n\"Maybe someday I can find out why those women look so happy when they come out of your house,\" Jill said softly.\n\n\"Jill...\" I started.\n\n\"Don't worry about it. Just, when you go back in there, if you want to pretend it's me in there with you, that would be kind of cool.\" She sighed, and laid down. \"Thanks for the lotion.\"\n\nI headed back to the house, dazed, and with a huge tent in my shorts.\n\nBeth met me at the door to the bedroom. \"I KNEW it. She's a little slut. She just couldn't stop flashing you, could she?\"\n\n\"Definitely a tease,\" I admitted, not wanting to go into too much detail.\n\n\"And you, you big horndog, got all hard over her,\" Beth noted, pulling my shorts down. \"It would be a real shame to let this go to waste.\" She grabbed Kayla by the wrist, and me by the cock, and led us both back to the bed.\n\nIt wasn't the most technically artful blow-job ever, but it was incredibly exciting. Beth became a teacher, and demonstrated every technique she knew on me, making Kayla take a turn after each of hers. Watching this oral virgin learn her craft on my schlong was an incredible turn-on, as was the view of those two beautiful faces going down on me. \n\nEvery once in a while, a vision of the neighbor girl going down on me would intrude on my good time.\n\nAfter a very long time of this attention, I knew I couldn't last much longer, and I warned the girls. Beth took me in hand and stroked me firmly while giving directions. \n\n\"I'm going to make him come, in my mouth, but he will finish in your mouth. When he comes block the back of your mouth with the back of your tongue or you'll choke. Just take the head in your mouth and let him come there. Then hold it in your mouth. If you don't like the taste or texture, you can spit it out, but not until you've held it for 10 seconds, OK? Just so you'll get over the shock of it when it happens.\"\n\nKayla nodded her assent.\n\n\"You start him up,\" Beth told Kayla. \n\nI watched the pretty blonde work on me, thinking about filling her mouth with my spunk. She was doing very well, and my legs started to tense up, nearing the finish line. Beth recognized the symptoms and took over, taking me deep and doing her best to draw me over that final hurdle. \n\nI let her know it was time and she leaned back, her lips parted, and beat me off into her mouth. Her other hand was behind Kayla's head. When I finally came, Beth allowed two long streams of my cum to enter her mouth (or mostly her mouth), and then squeezed me tight while she pulled Kayla's face roughly in place. She then released her hold on the base of my cock, and stroked me into Kayla's mouth. I didn't think I'd have that much for her, but it was several seconds before the spasms of coming ceased. I'd shot in her mouth about five times when it was done.\n\nBeth slid my cock from Kayla's mouth and held it between them. Then she opened her mouth to show Kayla my cream, and then she swallowed, showing Kayla her empty tongue. She pulled down on Kayla's chin, and we both could see the puddle of cum sitting on her tongue. Beth leaned forward and stuck her tongue in Kayla's mouth, both kissing her, and stealing much of my cum, before finally drawing away. Kayla finally swallowed what was left, and with a decidedly naughty smile, opened her mouth showing her clean tongue.\n\nBeth kissed her again, and then demonstrated cleaning me. Kayla followed her example, and then some. Between the hot action I'd just viewed, the knowledge of the teen temptress just outside, and the alternating sucking I was again receiving from my sex goddess and sex-goddess-in-training, I was getting hard again.\n\nKayla seemed to really get a kick out of my becoming hard in her mouth and really went at me, using what she'd learned so far. Within a few minutes I was hard as nails, and you'd never have guessed I'd just filled both their mouths with my cum.\n\nBeth giggled, \"You've made your bed, Kayla, now you'll have to sleep in it. That one's all yours. I think it's time we kept my promise to Alex here.\"\n\nI laughed, \"I don't think so, remember our deal? I can have YOU anyway I want.\"\n\n\"Oh, shit,\" she laughed, and Kayla laughed with her.\n\nKayla got a second lesson that morning, as I fucked the living daylights out of Beth. Having come twice in the previous half-hour, I was able to go on forever. We tried half-a-dozen positions, with me on top, her on top, on our sides, off the edge of the bed. Kayla was fascinated, touching us all over, and caressing me where I entered Beth. We ended up with me behind Beth, on her hands and knees, and I screwed her for a good 10 minutes. Even then, I wasn't quite ready to come and she was nearly worn out. ",
        "\"Kayla, help me,\" She finally pleaded, begging Kayla to take a turn under me. \n\nKayla was a little hesitant, but agreed, matching Beth's position on her hands and knees. I pulled out of my sweet Beth, and slid over behind Kayla. As I located her opening, Beth rolled over on her side, and heaved a sigh. \n\n\"Thanks, Kayla, I owe you one,\" she said, and then stretched languidly, with a small smile, and watched me take her friend. \"See Alex, I always keep my promises.\"\n\nKayla was ready for me, and once she lined me up, it didn't take a lot of work to sink half my length inside her. She looked delicious, and I enjoyed watching my cock slowly disappear inside her, before I pulled it out just to watch it again. \n\n\"Isn't that nice, the way it fills you up?\" Beth asked Kayla, rubbing her arm.\n\n\"It's amazing, I feel so full, so tight.\" Kayla admitted.\n\nShe did feel tight, very tight, and I picked up the pace, plowing her quickly and deeply. Beth reached over and pulled Kayla's head downward, so her weight was off her arms and on her shoulders and chest. She turned her chin up and gave her a small kiss, followed by a back-rub, while I plumbed her depths. Beth got up and climbed behind me, now rubbing my shoulders, then rubbing my ass and balls. Kayla's arms were spread wide, with her hips lifted high. \n\n\"She looks so hot and sexy like that.\" Beth whispered. She slid around and held Kayla's ass cheeks for me, while I screwed her. I took Beth's face in my hands, and kissed her deeply while screwing Kayla.\n\nShe nuzzled my neck, while I continued the pounding of my new toy. She was a delight to screw, tight and moist, and she was thrusting back against me, meeting my strokes, and taking me deeply.\n\n\"Can you finish in me?\" Beth asked me, while massaging Kayla's rear. I had thought she was played out but I guess she just needed a breather.\n\n\"Ok, with you Kayla?\" I asked her.\n\n\"Please, don't stop yet, that feels so good,\" she pleaded, getting her hands back under her.\n\n\"Let's try something a little different.\" I said, and I pulled out of Kayla, then helped her turn onto her back. I lifted her legs high and wide, and screwed her that way, while Beth switched her attention to Kayla's little fur covered area. She rubbed her while I plowed her, and after a couple of minutes we were rewarded with Kayla's third orgasm of her 24 year old life.\n\nThat was my cue to switch back to Beth, who rode me to my own sweet finish. That final ride only took a couple of minutes, but it brought me the release I'd been seeking for at least half an hour, and I ended up lying in the middle of the bed, one very satisfied lady in each arm, talking about me as if I wasn't there, planning their next \"class\".\n\nI was looking forward to our next lessons, and final exams.\n\n* * * * *\n\nHope you enjoyed Kayla's induction. The next chapter is on its way. "
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "ffm",
        "oral",
        "blow-job",
        "competition",
        "teasing",
        "18-year-old",
        "exhibitionist"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/pool-payments-ch-07"
}