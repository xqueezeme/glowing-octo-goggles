{
    "title": "Tale of Obsession: Courting Daphne Ch. 11",
    "pages": [
        "Soft morning light has already flooded the room when Leander woke up. The curtains of the canopy were parted, so that he had an unimpeded view of the window, next to which Daphne stood, clad in a soft nightdress, looking out to the garden.\n\nThe general smiled, watching the way the light played on Daphne's golden hair, which was tidied up in a single, loose braid. It appeared to him as though the lady had a halo around her head -- an amusing sight, given that he knew her more as a temptress than an angel. Still, when she turned around to face him, her face was as innocent as a babe's, as breath-taking as a goddess's.\n\n\"How did you manage to get up from the bed without waking me?\" he asked, propping himself up on the pillows as her lips curved up in a smile.\n\n\"Magic,\" she answered, slowly walking back to the bed. \"Didn't you know? I am much learned in the dark arts...\"\n\nLeander laughed. \"I should say, given that you have quite enchanted me.\"\n\nDaphne crawled up the bed, slithering on top of him. The impish smile on her lips reinforced Leander's conviction that she was no angel sent to save a man's soul. \"Right. I'm warning you now, General Van Halen: should you try to leave me while I'm still madly in love with you, you would pay quite dearly.\"\n\n\"I am your thrall for as long as you want me to be,\" he murmured before gently pulling down her face so that he could kiss her lips.\n\n\"Perfect,\" Daphne purred as she pressed her body against his. She gently moved to and fro, rubbing against his naked flesh. The reaction of his body was immediate, and there was no doubt that Daphne noticed, for her smile widened even more. \"You as good as promised to stay with me your whole life.\"\n\n\"And I will, given the chance,\" he said, stroking her thighs beneath her clothing. The silky feel of her flesh on his palm fueled his desire. \"But where did you get this dress?\"\n\nDaphne smiled coyly, glancing down between his legs, where his cock was starting to stir up. \"I brought it last night, remember?\"\n\nLeander, in fact, did not remember, yet he deduced that it was the content of the small package she dropped on the floor as soon as she was inside the room.\n\n\"You look much more beautiful without it,\" he told her. Unable to resist the temptation, he started to lift up the hem of her dress.\n\nThe lady giggled and slapped his hand before swiftly moving off him. \"Behave, Leander. Breakfast will be served soon.\"\n\nHe stared at her, disappointment written all over his features. With the disappointment came the feeling of disbelief, for how could Daphne be so naughty as to deny him the pleasure of feeling the warmth of her body, even for a while? The twinkle in her eyes said it all: she was deliberately teasing him.\n\n\"I assume we cannot skip it?\" he asked, opting not to give her the pleasure of hearing his complaint.\n\n\"Not today,\" she replied. \"Papa sent a servant here earlier so that we may know that the two of us are wanted at the mess hall this morning.\"\n\nThat surprised him. \"The Duke knows that you're here?\"\n\n\"I was missing all night,\" Daphne said, rolling her eyes. \"Since you were not shaken awake last night to lead a search for me, Papa knows I was spending the night with you.\"\n\n\"Makes me wonder why he did not order his men to tear down the door of this room and drag you out while I await execution,\" he mused aloud as he, too, got out of bed.\n\n\"He does not want more men to see me naked,\" Daphne said, smiling. \"One is enough.\"\n\nLeander raised an eyebrow, now more surprised than ever. Whatever Daphne and her father discussed the day before might have put the lady's mind at ease. Why else would she treat lightly the whole idea of her father violently opposing her decision of sleeping with Leander?\n\n\"You are worried,\" Daphne observed when Leander said nothing.\n\n\"What man won't be worried when he has his whole happiness on the line?\" he replied. \"I wish I could tell what's going on inside your father's head.\" When he noticed the small smile playing on Daphne's lips, he added, \"In fact, I'd love to know what's going on inside that pretty little head of yours, too.\"\n\nShe walked close to him to wind her arms around his neck. \"It's a secret for now, General. When time is ripe, you will surely know.\"\n\n\"I hate being kept in the dark, Daphne,\" he grumbled, although he took avail of her offered kiss. \"I thought I told you that a long time ago.\"\n\n\"Hmm.\" The impish smile was back on her lips again. \"Don't think of it that way. Just pretend that we have a little surprise for you, and that the longer you wait to know what it is, the sweeter and the better it will turn out to be.\"\n\n\"You, I can imagine doing that,\" he said. \"But your father? If he ever has a surprise for me, it would be anything but sweet and good.\"\n\nDaphne laughed softly. \"You have such low opinion of my father.\"\n\n\"Low?\" He arched his eyebrow. \"Who told you that? How can I look down on the only man on earth I'm afraid of?\"\n\n\"Ah.\" Daphne, now through with the game of slowly torturing him, began pointedly grinding her hips against his. Leander's member responded eagerly. \"You are afraid of my father, yet you are not afraid of me? Or my mother?\"\n\nLeander groaned and kissed her head, savouring the faint fragrance of lavender still emanating from it. He could get used to this. \"Ah. If you ask me about the women I'm scared of, the list will be endless.\"\n\nDaphne giggled, now running her palms on his exposed chest. The touch of her soft flesh stroking its way down to his abdomen made his muscles tense up even more.\n\n\"Afraid of me, then?\" she whispered as she wrapped her fingers around his hard cock.\n\n\"Afraid,\" he repeated, moaning his appreciation when he felt Daphne gently stroking his member. \"Oh, god, yes, very afraid of you.\"\n\nThere was fire in here eyes when she said softly, \"I like the sound of that.\"\n\nLeander groaned once again, pulling Daphne closer so that he could run his hand along her spine. \"I like the feel of that.\"\n\n\"So it seems,\" Daphne agreed, lightly squeezing his shaft. She moaned, apparently enjoying the way his member felt on her palm. A shaky sigh escaped her lips as she whispered, \"My god, Leander. You're so big when you're hard that it makes me ache so much. I want you inside me, hard and hot and wild, filling me completely.\"\n\nHe sighed, bending down to kiss the side of her neck. \"Why don't you lead me in?\"\n\nDaphne took in a sharp breath, moving her face away in order to stare into his eyes. She then said, \"What about breakfast?\"\n\n\"Who the hell cares about breakfast?\" he asked with a grin.\n\nShe smiled coyly, pushing him to the bed. \"Exactly.\"\n\nLeander laughed softly, gladly receiving her in his arms when Daphne crawled over him for the second time that morning. This time, she let him pull the nightdress off her, while undoing the braid of her hair on her own.\n\nIt has been a while since she allowed him see her naked in broad daylight; Leander was once again wonderfully amazed. Gods, Daphne still has the most enchanting body he had ever seen, and that was saying much, as he had been with countless women before. Her curves were all perfect, and she bore herself with a kind of confidence that would make even a queen jealous. She was lovely and she knew it, and -- hell -- she would never let him forget. In fact, she would torture him with that fact, given the chance, for as long as she could.\n\nAs gently as he would hold a crystal glass, he cradled Daphne close, relishing the feel of her body so close to his. The warmth and softness of her skin was enough to make his already stiff member harden some more. The sweet scent that stuck to her was intoxicating. Everything in her was calling out to his inner sexual beast, which was just now raging to be unleashed.\n\n\"Love me, Leander,\" Daphne cooed, looking at him with eyes that reflected the fiery passion that must also be evident in his eyes. \"I need you so much.\"\n\nHe cupped the back of her head, pulling it down for a kiss. Daphne parted her lips without hesitation, completely giving in as his tongue demanded entrance into her mouth. His other hand, he used to cup her breast, using his thumb and forefinger to slowly tease her bud. Daphne moaned against his mouth as her hands became restless, exploring his upper body in near-frantic fashion.\n\n\"Slowly, sweet one,\" he whispered on her ear as he rolled on the bed so as to get Daphne under him. \"We'll get there.\"\n\nThe gaze Daphne trained on him was filled with both longing and trust; Leander did not have to see the small nod she gave him in order to know that she would do as he said, that she would follow his lead. Maybe it was a small thing, but it was stuff like that that brought her ever closer to his heart. To know that a woman would trust him as much as Daphne does -- to a warrior who was used to lies and deception, that was perhaps the greatest compliment of all.\n\n\"My precious one,\" he murmured, burying his face on the crook of her neck. \"My lovely Daphne.\"\n\nShe released an almost inaudible sigh as she put her hands around him, her palms splayed on his back. Meanwhile, Leander touched her mound, gently stroking it. Her fine curls were already wet, and the juices that flowed from her hole were indication that she was more than ready for him.\n\nLeander did not want to make her wait, knowing that, sooner or later, servants would be sent to his room to fetch Daphne for breakfast. But the silky feel of the fluids on his palm was more than irresistible. He wanted to prolong the moment of contact, fan as he was of everything about the woman he held in his arms. With his fingers he sought the bud of Daphne's wonderfully sensitive core, anticipating the groan that came from her later. \n\nHe felt the slightest thrust of her hips as she tried to rub her mound on his palm, seeking for as much pleasure as his hand could provide. Leander granted her desire, slipping a finger inside her as he kissed her bare shoulder. Daphne once again moaned, now moving her hips with clear intent. She wanted more; she wanted it soon.\n\n\"My love, please,\" she sighed, gently combing her fingers through his hair. \"I want you...\"\n\n\"And I want you, too,\" he responded, taking her hand with his free one so that he could kiss its palm. \"I love you so much, Daphne.\"\n\nShe caressed his face, slightly smiling, while her eyes darkened with passion. \"I love you, too, Leander.\"\n\nTheir mouths met, hungry for each other, while Leander continued slowly stimulating her nether region. Daphne moved her legs further apart, hooking one of them on his thighs to grant him better access to her most treasured possession. Leander put in another finger into her hole, caressing her inner walls, further coaxing her juices to flow.\n\nAs their mouths parted, Leander took in a deep breath, inhaling the mixed scents of their sweat and Daphne's essence. A most animalistic desire overcame him as he savoured the intoxicating scents that assailed his nostrils. The sound of Daphne's ragged breathing and continuous moaning did nothing to decrease his desire; if any, it further fueled it.\n\nSupporting Daphne's body, he slowly rolled onto his back, taking her with him. He wanted her on top, where she could do as she wanted to fulfill her longing for his flesh. If the best way to satisfy this woman was to cede control, Leander was more than prepared to do it. Anything to please her. Anything for Daphne.\n\nNow without him to restrain her, Daphne immediately reached for his cock, squeezing it appreciatively before impaling herself on it. Leander had the most exquisite feeling as he was welcomed into her depths, surrounded by her warm wetness. The tightness of her inner walls squeezing his pole of flesh was highly gratifying.\n\n\"You fill me up so completely,\" Daphne purred, taking the hand which had been stimulating her folds a few moments ago. She kissed it, inhaling the scent of her own juices while staring into Leander's eyes. She began gently rocking back and forth, her every movement giving the general immense pleasure. \"I always feel empty without you.\"\n\nLeander groaned her name, his hands dropping to her waist as Daphne began increasing the pace of her ride. He watched as she closed her eyes, her lips parted, her head thrown back, her hair in glorious disarray, cascading down her back in a rich golden hue reminiscent of threads of silk used for the finest gowns. \n\nGods, how he loved her! Leander could not help but close his eyes, drowning in the sensations that each pump of Daphne's hips brought. From outside came the sounds of subdued laughter and barked orders, as the Duke of Wildercross's servants were starting their day's work. Not that either Leander or Daphne cared; after all, lovers in the highest peak of passion were oblivious to the world around them, knowing nobody but each other, aware of nothing but the sensations that assaulted their bodies from the intimate joining of flesh and the imminent release that came afterwards.\n\nAs the heat of the moment ebbed, Daphne rested her head on Leander's shoulder, moving off him to settle by his side. They were both breathing hard, both bathed in sweat, both trying to put their thoughts back in order as awareness of the world started coming back.\n\n\"That was amazing,\" Daphne said.\n\nLeander kissed her forehead and wrapped his arms around her. \"You are amazing.\"\n\nThe lady looked up at him to smile. \"So are you.\"\n\nThey shared another kiss before falling silent, locked in an embrace while they waited for their breathing to calm down. \n\n*****\n\nAs reality sank back in, however, Leander's thoughts led him to the Duke of Wildercross.\n\nIf the Duke was aware that Daphne was sleeping in his room, the confrontation with Daphne's father had to come soon -- perhaps even today. And in spite of Daphne's optimism, Leander had his misgivings. No father as wealthy and influential as the Duke would let such matters go smoothly; the best case scenario was that Leander would be ordered to leave Daphne, never to see her again.\n\n'Can I endure that?' he thought, still extremely aware of the feel of her body against his. She appeared so vulnerable, so feeble, as she curled up beside him like that, and Leander knew that he could never leave her -- not even if there was a threat of painful death looming over him. He would die first before he leaves Daphne.\n\n\"Your mind is wandering,\" the lady commented after a while.\n\nHe did not try to cloak his qualms. \"Your father is sure to talk to me today.\"\n\nHeaving a huge sigh, Daphne propped herself on her elbow so that she could look at his face. Her other hand, she used to trace patterns on his chest. \"You are still apprehensive.\"\n\n\"Until I find out what's in his mind, I will remain so.\"\n\nDaphne flashed a small smile. \"My father has a heart, Leander, and I know that I own a great chunk of it. He will accommodate my wishes. He will not deny me my desire.\"\n\nLeander, too, sighed, as he returned her smile. \"It's precisely because he loves you that he will object to a relationship between the two of us. You are a lady -- \"\n\n\"An illegitimate daughter, if you have forgotten,\" Daphne interjected.\n\n\"Even so,\" he insisted. \"You still have noble blood flowing in your veins, and I am a mere soldier who fights for the kingdom under your father's banner.\"\n\n\"You are not a mere soldier,\" Daphne said, now sitting up. \"You are the man who took care of me since I was a little child -- the man to whom I owe my life. You are the general who saved me from the grasp of an unknown soldier when I was in Elgeshore -- \"\n\n\"A soldier I was supposed to command in the first place,\" he reminded her. \"Besides, I am the same general who robbed you off the very thing that that soldier coveted -- your innocence.\"\n\nDaphne frowned and stared at him for a long time, before asking silently, \"Are you giving up on me, Leander? Just because Papa might not approve?\"\n\nHe sat up, too, leaning against the headboard. \"No, it's not that. I just want you to see the whole picture so that you know what to expect. I don't want you to have such high hopes if they would have to be dashed afterwards.\"\n\n\"I see the whole picture,\" Daphne told him, standing up to retrieve the nightdress he discarded earlier. \"I know that Papa may still decide to keep me away from you, but I choose not to think about that.\" She slipped back into the nightdress. \"Once, when I was younger, Papa told me that one of the greatest powers of the human mind lies in its ability to see the future in a positive light. If you can think that the future will bend to your will, chances are that it will. If there's one lesson from Papa that I dare not ever forget, it's that one. So I want to believe right now. If the future, which some people think is predetermined, could bend to people's wishful thinking from time to time, then, there's a possibility that my father, who most people think never changes his mind, would cave in this one time and let me decide for myself.\"\n\nLooking at her as she tried to make her case, Leander was surprised to realize just how much Daphne has grown. Sure, he never thought her shallow, but he never expected her to have this kind of conviction either. Which was very strange, given that he had seen her resolve before, when she was plotting to get away from him in Elgeshore.\n\n\"Forgive me, little one,\" he found himself saying after a while.\n\nDaphne smiled woefully, bending a little to plant a kiss on his lips. \"Just try, Leander, won't you? I have already talked to Papa, and he was not as scary and authoritarian as I thought he would be. Just try to make him understand, and maybe he will.\"\n\nHe sighed, grinning at her. \"I don't even know why I worry so. He will never succeed in convincing me to leave you, anyway. Even if he throws me away, I will come back to you.\" He took her hand. \"Maybe it's just because I don't want to lose you, ever, even for just a moment.\"\n\nUpon hearing that, Daphne smiled with true mirth in the corner of her lips. \"You will never lose me. Never.\"\n\n*****\n\nThe coat-of-arms of the House of Wildercross hang on the ceiling behind the Duke's imposing chair, and as he waited for the man to arrive, Leander could not help but stare at it. Even now, after all these years, the sight of it still intimidates him. Perhaps because it was a symbol of power, the banner of the house that kept Thersale and the surrounding kingdoms at peace until recently. The war that took place, now won by Thersalians, once again proved the power of this house, and it would be decades, perhaps even centuries, before another kingdom attempts to challenge it again.\n\nNot for the first time, Leander wondered why the House of Southair ruled the kingdom, when it was the House of Wildercross that held all the power. It would not take much for Wildercross to usurp the throne should he want to, having been descendants of the house that contested Southair's claim on the throne centuries ago. But he did not, and Leander was pretty certain that he would never.\n\nIndeed, Daphne's father was a great enigma. He was so hard to discern. Here was a man who could raze a city to the ground with the mere flick of his fingers, yet he did not want to claim the throne - not even if he controlled two-thirds of the kingdom's army, not even if it was his power and influence that kept other kingdoms at bay. He had a reputation for cruelty, yet the love he showed for his illegitimate daughter was even greater than the affection other fathers felt for their legitimate sons.\n\nSo, perhaps there was a basis for Daphne's optimism. The only time the Duke forced his will upon his daughter was when he arranged a marriage for her almost three years ago. But when Daphne ran away, he sent men to look for her -- not to bring her back, but to find out if she was all right. He only sent Leander to bring her back to Thersale when the war broke out.",
        "Leander was still deep in thoughts when the Duke finally arrived, clothed in black as he always was. The general rose to greet him, but the Duke ordered him to remain seated.\n\n\"I have read the reports of your campaign,\" the Duke said without preamble as he sat on the chair at the other side of the desk. \"I must say, I'm quite impressed, especially when you were able to get Northcove to arm for Thersalian cause.\"\n\n\"I'm afraid it's not my efforts that convinced him to do so, Your Grace,\" Leander admitted. \"It was your daughter who recruited Northcove to our side.\"\n\nThe Duke merely nodded, before discussing with him the details of his campaign. A servant came and went, bearing drinks and snacks, and the only things the Duke and the general talked about were the events of the recent war. Leander felt uneasy, knowing that Daphne's father did not ask for a meeting merely to recount his experiences in the battlefield. As each minute ticked by, his apprehension increased, reaching its peak just as they were - finally! - going over the details of what happened in Northcove.\n\n\"I understand that this Sylvia woman had been your mistress?\"\n\nLeander attested to the certainty of the Duke's information. \"She was also the one who sent reports of what went on in our camp to Norcross.\"\n\nThe man's icy stare made him uneasy. \"And this woman, together with the others who aided her, are imprisoned in Northcove right now?\"\n\n\"Yes, Your Grace.\" Gods, why would he not get to the heart of the matter? Surely, he must know the truth in every boring detail of the written reports sent to him? \"The Duke of Northcove has expressed his wish, however, that the prisoners be transferred to Thersalian land as soon as possible.\"\n\n\"Very well.\" Wildercross leaned back on his seat, his eyes narrowing ever so slightly. It reminded Leander of Daphne's habit of doing the same thing, and he was once again struck by the acute realization that she was a Wildercross through and through. \"Am I to assume, then, that things are quite in order now?\"\n\nHe confirmed it. \"As much as they can be put in order in such a short time, Your Grace.\"\n\nWhen the man nodded and his icy countenance returned, Leander knew that the moment has come for them to discuss the real reason why he was sent to the Duke's study.\n\n\"I received information that you are my daughter's lover.\" Wildercross raised an eyebrow. \"Are you?\"\n\nFeeling his guts tightening, Leander nodded. \"Yes, Your Grace.\"\n\n\"Hmm.\" The man stood up, walking to the window, whose parted curtains allowed him to see the view outside. \"When did you become her lover?\"\n\nAs Leander answered the question, he realized where the Duke was heading to. He first claimed Daphne while the armies of Elgeshore and Thersale were at war -- when he was still officially working for the Duke of Wildercross. As such, he was expected to carry out the duties given to him exactly as they were -- at least, when it comes to the Duke's daughter.\n\n\"You are aware, of course, that you disobeyed my command the moment you took her?\" Wildercross asked. \"You were specifically asked to search for Daphne and bring her home. True, I asked you to fight for Thersalian cause, yet, your priority was in finding her. You were allowed to kill as many enemies as you could and to take women as prizes, but you were not to lay a finger on my daughter.\" The Duke paused and glanced back at him. \"Is that right?\"\n\nLeander decided to remain silent. He would not speak to add fuel to the fire raging within the Duke. He knew that even though the man kept his front, deep inside, Daphne's father wanted him dead for what he has done.\n\n\"I trusted you to keep her safe,\" the Duke continued, turning his back on Leander once again. Whatever it was that he found interesting outside must be keeping his attentions. \"I expected you to send her safely home when your duty to the kingdom conflicted with the specific duty I placed upon your shoulders. But, you decided to keep her with you.\" He took a deep breath, perhaps to control his mounting anger. \"Had something terrible happened to Daphne, you would not have been given the opportunity to face me and offer any explanation. You would have been dead a long time ago.\"\n\nThe general knew, of course, that the Duke was right. He placed Daphne's life in danger when he decided to keep her. He even left her in the care of a very few men when he had to fight the army of the son of Elgeshore's king. Leander has realized that months ago, when he left Daphne in Northcove during the last bouts of war. It was the exact reason why he did not let her come with him even though she had begged him to.\n\n\"Forgive me, Your Grace,\" he managed to say. \"It was a lapse in judgment. I wanted to be with her even for a while. I'm deeply sorry to have thought about myself before thinking about her.\"\n\n\"It's in the past, Van Halen. Nothing terrible happened to her, which is lucky for you. But, how many more lapses in judgment will prevent you from doing what's best for my child?\"\n\nHe used the Duke's own words to answer the question. \"As you said, my lord, it was all in the past. To judge my future decisions due to a previous poor performance is rather unfair. I swear on my honour as a man that I will never let anything terrible happen to Daphne.\"\n\nThe Duke faced him again. \"And you expect me to trust you? Like you said, you made a poor performance in the past -- \"\n\n\"And I intend never to do that again,\" he insisted.\n\n\"Ha!\" The Duke returned to the desk, standing across from Leander, looking as irritated as Leander never saw him before. \"A man's promise to the one who fathered his beloved. You expect me to believe that? I have known far too many men to know that not everyone keeps his words.\"\n\n\"Not every one of them is Leander Van Halen.\" He looked straight into the Duke's eyes. \"Give me the chance to prove my words and my honour, Your Grace. You will not regret it.\"\n\nWildercross placed his hands on the desk, leaning forward with narrowed eyes to scrutinize him. \"I won't regret it? I already regret hiring you to bring my daughter home. You talk about honour, yet, what honour led you to claim a woman against her will? Will you try to tell me that my daughter was willing to let you have her when you first took her? Will you, Van Halen? Because, I'm telling, I will not believe it.\"\n\n\"Yet it's the truth.\" He remembered the first time he claimed Daphne. He gave her a choice; she decided to let him take her.\n\n\"Let's say it is,\" the Duke argued. \"Was she sober when she gave you her permission? Or was she drunk with pleasure? Were you seducing her?\"\n\nUnwilling to disclose any detail of his sexual experiences to the Duke, Leander remained silent. The man, it seemed, was not waiting for his response anyway.\n\n\"Tell me!\" the Duke continued to rage on. In all the years of his life, Leander never knew that this man -- the Duke of Wildercross -- was capable of losing such control. He was always depicted as the cold-hearted, icy-faced Duke who never let anyone see through his facade; who knew that the subject of his daughter would show the fire he was hiding inside? \"What honourable man seduces his lord's daughter, especially when she is so vulnerable?\"\n\nLeander did not hesitate on his reply. \"A man desperately in love with her, my lord.\"\n\n\"Love.\" The arching of Wildercross's eyebrows displayed a life-long cynicism -- or so it seemed to Leander. \"You dare to speak of love? Not everything in this world is about love, General. You, of all people, should know that above all, there is duty. For it was your duty to fight for the kingdom. It was your duty to protect Thersalians. It was your duty to guard my daughter.\"\n\n\"Forgive my insolence, but Your Grace, of all people, should know that I spent my whole life fulfilling my duties,\" he responded. \"Yet, I cannot live life that way; I refuse to. Because if I do, I would be labelled inhumane.\" He looked at the Duke levelly. \"Heartless. Cruel.\"\n\nThe slight narrowing of the Duke's eyes told Leander that the man knew exactly how to read between the lines. Strangely enough, he said nothing about the general's attack. Instead, he said, \"The way you are presenting yourself to me, General, I must conclude that you are not a man who can control my daughter. She's got you wrapped around her little finger.\"\n\n\"It will entertain me very much to prove you wrong,\" Leander challenged. \"Besides, my lord, Daphne does not need any man -- anyone -- to control her.\"\n\n\"No wonder why you allow her to run wild,\" the Duke said, now getting back his composure as he sat on his chair. \"Letting her visit you in your room when everybody's watching her every move...\"\n\n\"If it keeps her happy and out of trouble, then, yes, Your Grace, I do let her do that,\" he answered.\n\n\"It is hurting her reputation, Van Halen.\"\n\n\"As long as it does not hurt anything else about her,\" Leander replied. \"Life is more than mere reputation, Your Grace.\"\n\nThe Duke shook his head, getting up from his chair and opening the bottle of wine on top of the nearby table. \"What do you need to leave Daphne, Van Halen? Lands, gold, rank -- name anything and it is yours, as long as you never show yourself to my daughter again.\"\n\nHe never expected himself to cross words with Wildercross, but the circumstances were asking for it. \"You can offer the whole world to me, Your Grace, and I will still refuse. She is worth to me more than life itself.\"\n\n\"Does it never occur to you that I can take that life away from you in an instant?\"\n\n\"I'm sure you can,\" he said. \"But if you want to, I won't be sitting here conversing with you.\"\n\n\"You are an impossible bastard, Leander Van Halen,\" hissed the Duke, who returned to the desk with two glasses of wine, one of which he offered to the general. \"You tempt me to send you to the next available executioner.\"\n\n\"Then do so, my lord, if it pleases you,\" Leander said, shrugging. He could not place what it was, yet, there was something about the Duke's countenance that made Leander think the man was actually amused by the whole conversation. \"But let me love Daphne until my very last breath.\"\n\nThe Duke leaned back on his chair, watching the wine inside the crystal glass as he made it swirl. \"I once loved a woman, too, General.\" He paused to shake his head. \"And you're right. The woman you love is worth more than anything, even everything, in the whole world. But you must keep it in your heart that, when duty calls, you must answer, even if it means letting that woman go.\"\n\nLeander never thought he would be brave enough to pry into Wildercross's life, but there was no other way to keep the conversation going. \"Is that why you let her go?\"\n\n\"I would never have let her out of my sight otherwise,\" the Duke responded. And, much to Leander's surprise, he smiled, if bitterly. After a sip of the wine, he added, \"She was the most amazing woman in this world.\" He paused, raising an eyebrow at the general. \"Daphne is proof of that.\"\n\n\"Did it make you happy?\" Leander inquired. \"Letting her go?\"\n\n\"It was never about my happiness,\" the Duke confessed, sipping from the glass again. \"I had no choice.\"\n\n\"Do you think it made her happy?\" he asked, now remembering Daphne's mother, remembering how the Duchess used to cry for apparently no reason at all.\n\nDaphne's father shook his head. \"Anna understood. She knew there was nothing we could do, regardless of whether she is happy about the arrangement or not.\"\n\nSeeing the sadness that crept into the Duke's eyes made Leander wonder aloud, \"What is worth more than the happiness of the woman you love?\"\n\nAgain, that bitter smile crossed the Duke's face as he counted off his fingers. \"The peace of my kingdom. The security of my people. The future of my daughter.\" Then, looking intently at Leander, \"and of my son.\"\n\nLeander stiffened. Son? The Duke has three legitimate sons by his wife, but, surely, he could not be talking about them? \"Your son?\"\n\n\"Lord Zachary, courtesy Marquis of Leraid,\" came the reply. \"My own flesh; my own blood.\"\n\nThe general merely nodded, drinking his wine. He had seen the styled Lord Leraid before; the boy is the future Duke of Brayhorn, after all. And nobody who had seen the Marquis would doubt that he was a Wildercross, for he was in fact the younger replica of his father. It was a secret everybody knew, although neither the Duke and Duchess of Brayhorn nor the Duke of Wildercross ever confirmed it. Until now.\n\n\"I do hope, my lord, that there are no such duties that prevent you from granting me permission to stay with Daphne and make her happy?\" he asked after a moment of silence.\n\n\"I'm disappointed that there is none,\" admitted the Duke, \"yet, there are things that you need to understand, General.\" He stood up to get the bottle of wine he opened earlier. \"Daphne has spoken her mind to me. I know she favours you, perhaps even loves you. She wants to be with you for the rest of her life.\" He stared at Leander when he finally sat back on his chair. \"But there are decisions that are yours to make alone. Listen to what I have to say, forget your feelings for a while, and use your head.\"\n\nLeander frowned. \"You have me puzzled, Your Grace.\"\n\n\"Good.\" Wildercross poured wine to both of their glasses. \"I hope you have not made arrangements for the rest of the day. There are things we need to talk about.\"\n\n*****\n\n\"Sister!\" Leonard, courtesy Marquis of Raidencourt, heir apparent of the Duke of Wildercross, called Daphne as he and his brothers were heading for the stables. \"Would you like to join us?\"\n\nDaphne, who had been brooding ever since she learned that Leander was called to her father's study, approached the boys. Leonard was fourteen, already looking very much like a man. Tall and fair, his hair as blonde as Daphne's, he was ready to break young girls' hearts. Anthony was two years younger than Leonard, but looking as mature and handsome as his brother. The youngest, Jeremy, was but nine, and was the recipient of his brothers' constant teasing, but the boy was a playful one, too, and never took offense.\n\nShe had observed that none of the three were close to their mother, the Duchess of Wildercross. Not that Daphne was surprised. When your mother was as frigid and dispiriting as Lady Cornelia, you would most likely not want to be with her.\n\n\"Where are you going?\" she asked the boys.\n\n\"Horseback riding,\" answered Jeremy, beaming at her. He then pointed to the north, where a hill as located. \"We will go to the top of the hill, urge our horses to a canter, and then make them run for a race once we're down, or at least when we feel like making them run is not dangerous anymore.\"\n\n\"So, do you want to come?\" asked Leonard. \"The Duke purchased more horses a few months ago, so you have a lot of them to choose from.\"\n\nThe smile on the Marquis's lips told Daphne that her brother has not forgotten her fascination with horses. She smiled back. \"Sure. A warning, though.\" She paused for effect. \"Get ready for a sound defeat.\"\n\n\"Oh, this girl has got guts,\" Anthony said, grinning. \"Don't you need to change into a riding habit first, though?\"\n\n\"Who needs that?\" Daphne asked, leading them to the stables.\n\nA quarter of an hour later, she was sitting sidesaddle on her father's favourite white stallion, Whitespark, amidst the objections of her brothers and the Stablemaster.\n\n\"You know that His Grace's horses are exclusively for his own personal use, right?\" Jeremy asked, urging her to dismount. \"Come on, Sister, you don't want to see him enraged!\"\n\nDaphne would not be dissuaded, though. \"I've always wanted to ride Whitespark, and today seems to be the right time.\"\n\n\"Please, my lady,\" the Stablemaster pleaded, pale and sweating as he tried to negotiate. \"I assure you that His Grace's stable has the finest horses in the land. I will give you the fastest of the lot if only you would not bring Whitespark out.\"\n\n\"No, I'm fine with him.\" Daphne leaned forward and stroked the animal's neck. \"We'll make a great team, won't we, Whitespark?\" Then, turning to the Stablemaster, she said, \"Besides, you already put the saddle on him. It's all right. Papa will probably never know as long as none of you speak of it.\"\n\nLeonard drew a deep breath. \"You are very troublesome, Daphne. If His Grace finds out, we will all miss dinner tonight.\"\n\nShe raised an eyebrow. \"Oh, it's good to fast sometimes so that you may realize how hard it is for most people to earn their meals.\" She turned to the Stablemaster again. \"Worry not. I will tell the Duke that I stole the horse if bad comes to worst.\"\n\nKnowing fully well that Daphne could not be asked to change her mind, the Stablemaster bowed low before leaving the Duke's children.\n\n\"So, are we starting the race or not?\" Daphne asked, urging Whitespark to walk towards the hill to the north.\n\nAnthony burst out laughing as he followed his sister. \"Oh, you really have some guts!\"\n\nDaphne smiled, feeling a sense of triumph as the four of them headed for the hilltop. She only wanted her father to know that she was as stubborn as she had been all those years back. She wanted to tell him through insubordination that, whatever he did, she would not succumb to his wishes -- if he wanted her to leave Leander, that is.\n\nAs soon as they were at the top, Leonard began the countdown for the race. Daphne led Whitespark to a canter, eager for the moment when she could urge him to run.\n\nThe exercise vividly reminded her of her younger days, when she would go out riding with her father and his company. She had been taught how to ride since she was five, and by the time she was seven, her father allowed her to join his hunting party as long as she had two companions who were always riding close to her. Their party would use the top of this hill as starting point, too, riding out to the western part of the duchy where the forest was found. Her favourite part was when they would see a game and run after it, for it was when she could urge her horse to a run and get away with whatever pace she used.\n\nAlways, Daphne found the activity exhilarating. With the cold breeze on her face and the sweet scent of the grass and the earth greeting her nose, Daphne felt as free as the wind itself, unpinning her hair and undoing the intricate style her ladies-in-waiting took pains applying to it.\n\nIt was, for her, still the best way to take her mind off things, and it was on this very moment that she wanted herself to stop pondering the fate of her affair with Leander. She knew that her father called the general to talk about it -- and how long their conversation was! Her worry had turned to brooding silence and restlessness and might have evolved to bouts of anger if her brothers did not provide a way for her to unwind.\n\nShe remembered Anthony Renard's warning, whispered to her the night they arrived at Wildercross, when Leander was busy talking to other generals at the party her father held for Thersalian victory in the war:\n\n\"Your father was outraged when he found out that Leander took you as his lover. My spies told me that it was the first and only time they saw the Duke lose control, and for a time, they were afraid that he would send assassins to kill Van Halen in Elgeshore. The only thing that might have made him reconsider was the fact that Leander is one of his best generals and he needed him. Now, the war's over, and your father can do anything he wishes to Van Halen. If he is as just as I think he is, he will only send Leander away with an order never to return to Thersale. But if he deems the violation of your innocence the highest crime, Leander will lose his head. If the latter happens, may you forgive yourself for convincing him never to leave you, for I'm telling you that I never will.\"\n\nShe dismissed Anthony then with an angry remonstration -- perhaps because she knew that he was right. Anthony was Leander's best friend, and Daphne knew that the two men were like brothers. She knew how Anthony cared for Leander, and how Leander cared for Anthony in return. They shared a bond of friendship like no other, and Daphne understands Anthony's resentment of her, for he thinks that she brought nothing but ill fortune to Leander.",
        "Daphne did not want to believe that last part. Every time Leander holds her in his arms, he would tell her how she had positively changed his life, how she coloured his world, how she provided him with a reason for living. And she believed him, because that was how he affected her, too.\n\nBut if the worst happens, then, Anthony would be right, and she would never be able to forgive herself. That was why, although deeply afraid, she had been relieved when her father talked to her first and told her his every plan for Leander's insubordination. Father and daughter argued vehemently that afternoon, with Daphne fiercely defending every decision Leander took. She never knew that she would find the courage to stand up to her father like that, but she did. Nor did she ever think that her father could get as angry as that, but he did -- and most surprising of all, it was because, she realized, he loved her very much indeed.\n\nBy the end of their meeting, although she never got the Duke to promise that he would not hurt Leander or send him away, Daphne felt a sense of triumph -- for he did not vow to punish Leander either. A sense of dread still followed her around -- something she hid from Leander, not wanting him to worry, too. Her father's action -- lack of it, in fact -- after that gave her hope that perhaps, he would reconsider; perhaps he would cave in.\n\nHer success or failure in convincing her father would be determined at the end of Leander's conversation with the Duke. She fervently hoped that Leander would hold her in his arms and tell her that everything went okay, that the Duke promised to let them be.\n\n*****\n\nShe was first to reach the fence that marked the finish line of their makeshift race, followed by Leonard, and then by Anthony. Jeremy, who finished last, exclaimed, \"This is embarrassing! I was outrun by a woman!\"\n\nDaphne laughed, the joy of the ride still filling her chest. Leonard, who had already dismounted, offered his hand to help her dismount. \"Your Snowflake was outrun by Whitespark. In my opinion, that's a stallion outrunning a mare.\"\n\nJeremy laughed as he, too, dismounted. Patting his horse's neck, he said, \"It's okay, Snowflake. We're close to beating them. You did great.\"\n\nHerself laughing, Daphne approached her youngest brother and hugged him, earning a cry of dismay from the boy. Apparently, he was 'already too old for hugs from his big sister.' Leonard and Anthony's laughter did not help.\n\n\"But -- wow.\" Jeremy was now admiring the great stallion that was the Duke's favourite. \"I still can't believe you took out Whitespark without His Grace's permission.\"\n\nIt did not escape Daphne -- as it did then, before she ran from home -- that her brothers referred to their father as 'His Grace' or 'the Duke', never as 'Papa.' She has asked Leonard earlier, when they finished eating breakfast and the Marquis offered to walk her back to her room; his only response was that the Duke was too indifferent to be called 'Papa', and the one time Leonard did, it annoyed the Duke so much that Leonard decided never to use it again.\n\n\"I can let you ride him on the way back,\" Daphne offered the boy. \"I'm sure both Leonard and Anthony know how to saddle a horse, so they will change our saddles.\"\n\n\"Oh.\" Anthony grinned. \"Finally something I can do that Daphne cannot!\"\n\nLeonard elbowed his brother. \"Say nothing more, lest she asks Mr. Lochard first thing tomorrow for instructions on how to saddle a horse.\"\n\nAs they all laughed, Jeremy asked, \"Will you really do that, Daphne? Let me ride Whitespark? But what if His Grace sees?\"\n\n\"Don't worry about him,\" she reassured the boy. \"I'll take full responsibility for stealing Whitespark.\"\n\nJeremy rejoiced, and Anthony nodded to the direction of the house. \"Look, Sister.\"\n\nDaphne looked, and was turned speechless for a moment.\n\nThere it was, the Duke of Wildercross's estate, looking ancient and grand and breathtakingly beautiful. It sat there on one huge span of land -- all four stories of it, perhaps the greatest building in all of Thersale. And that was talking about the front structure alone, which housed the whole legion of the Duke's personal guards headed by the eldest son of the present Earl of Mavenborough.\n\nEither the upper or lower yards behind the intimidating structure was wide enough to hold half of all the inhabitants of the duchy -- and that was saying much, for the Duchy of Wildercross was one of Thersale's largest. On the northern and southern ends of the yards were yet another pair of buildings reserved for servants.\n\nThe apartments behind the yards were where the guests of the Duke stayed, and beyond that was the famed Wildercross Garden, the most frequently visited part of the estate, with its dozens of fountains and grottoes, its thousands of flowers and its blanket of grass native to the continent. The Duke opened the Garden to the public in exchange for entrance fees that became one of the estate's sources of income. Only those who lived in the Duchy of Wildercross could enter without paying a thing, and the Garden was only closed when there are special celebrations inside the estate -- the way there was now.\n\nBeyond the Garden was yet another building, a two-story one -- the Estate Proper, as it was called by many. There was where the Wildercross family apartments were found. To the north of the Garden was the stables; to the south, the building that held both the mess and the meditation halls, as well as the Duke's study where Leander presently was.\n\nIt might be called an estate, but the Wildercross House was more like a castle -- one which could not be outshone even by the Crown's.\n\n\"It's lovely,\" she said softly, her heart brimming with joy to realize that she was home -- indeed home.\n\n\"If it is such a lovely place, why did you run away from it in the first place?\" Anthony asked. \"You were the Duke's favourite; he wanted all the best for you.\"\n\nDaphne sighed, wrenching her eyes away from their home and smiling at her brothers, all of whom were waiting for an answer.\n\n\"Beauty and comfort are not the only things that matter in life,\" she replied. \"I wanted my own happily-ever-after, one I find for myself, not imposed to me by the Duke. Your sister is a romantic, you see. I want to find a man whom I love and who loves me back. If I have to leave all of these to get that, I gladly will.\"\n\n\"Did you find him?\" asked Anthony.\n\nWith another smile, Daphne nodded. \"Yes.\"\n\n\"Is it General Van Halen?\"\n\nJeremy's question surprised her. Knowing Lady Cornelia, Daphne was certain Jeremy was not supposed to learn gossips for at least the first ten years of his life. The look Leonard and Anthony exchanged told Daphne that it was not the older boys who told the youngest.\n\n\"Why do you ask?\" Leonard asked the boy in return.\n\nJeremy shrugged. \"I heard Sister's ladies-in-waiting talking this morning. They said that the general is Daphne's love. To me, they look ready to take him from her, though, and Lady Cecilia even said so. So, is it really Van Halen?\"\n\nAnthony cleared his throat to prevent himself from laughing. Daphne's blood rushed to her face. If her ladies were talking about Leander, they could not have used the word 'love'; they might have referred to him as her lover, which -- thank the gods! -- Jeremy missed. Lady Cornelia would quite be distressed if she learned that her boy's innocence was almost broken.\n\n\"Yes, it is,\" she admitted, slightly smiling at the boy.\n\n\"Very good choice,\" Jeremy said, nodding his head sagely. \"He looks strong and the Duke said that he's one of the best, so he can surely protect you. I think I like him for you. He was polite to me when he saw me in the Garden once, and he looks kind, too.\"\n\n\"You know,\" Anthony interjected, seeing how Daphne's face reddened even more. \"Why don't you just help me unsaddle both Whitespark and Snowflake, Jeremy? We'll be returning to the estate soon.\"\n\nWhen the younger boys were out of earshot and busily unsaddling the horses, Daphne's eyes were drawn back to the house, where she knew Leander was.\n\n\"Are you afraid for his life?\" Leonard asked.\n\nWith a sigh, she nodded, her eyes not leaving the structure. \"Before we left Elgeshore, Leander told me that his affair with me was, basically speaking, a distraction from his duty and a disregard of Papa's instructions to him. It's punishable by death.\"\n\n\"It is,\" said the Marquis, pausing a while before asking, \"Do you think His Grace will actually order Van Halen's execution?\"\n\nDaphne looked at her brother, then, seeing him as a young man mature beyond his years. \"I hope not. I won't be able to handle it otherwise.\"\n\n\"He won't,\" Leonard assured her. \"As Anthony said, you are the Duke's favourite child.\"\n\n\"Leonard...\"\n\n\"No, listen,\" he said, smiling. \"He doesn't want us calling him Papa because you are the only one he wants to call him thus. Mama told me and Anthony that the Duke married her out of duty, and that his heart, hard and cold as it is, is already owned by another woman. If that's the case, then, that woman is your mother, the Duchess of Brayhorn. No wonder he loves you more than he loves us.\"\n\nShe shook her head. \"Don't say that. You may think him hardened and cold-hearted, but he is not. You said it yourself -- he has a heart, and he knows how to love. If he shows his love to me more than he does to all of you, it's because he doesn't want you to grow soft as men. He wants you to forge a bond among yourselves, as you have done. He may act indifferently, but, I tell you, he cares. He was like that to me once, too.\"\n\nLeonard smiled. \"I know he cares for us, in his own way. But believe it or not, he loves you more than us all, and we're fine with that. We love you more than we love him anyway.\"\n\nDaphne arched an eyebrow, but smiled when Leonard laughed. She knew the truth of her brother's words -- even that last statement. The three boys had been closer to her than to their father, and all three had known about her plans for escape three years ago; none of them betrayed her, even Jeremy, who was only six at that time.\n\n\"So, I tell you,\" Leonard continued. \"The Duke will not kill Van Halen, if only for you.\"\n\n\"You think so?\" she asked with a small smile, her heart filling less heavy now that Leonard has said such a thing.\n\nThe Marquis nodded, smiling back. \"I know so.\"\n\n*****\n\nThe sounds of music and laughter coming from the Garden made Daphne smile. She parted the curtains to look down at the celebration below. Lanterns were hung on tree branches and on poles erected that afternoon. She could make out her ladies-in-waiting amidst the crowd, and most of them were conversing with young heirs and warriors currently residing as guests in the Wildercross estate.\n\nAlthough not inclined to join parties, her father often threw them, ranging from modest gatherings like this one to grand celebrations that become the talk of the whole kingdom for weeks. For Daphne, such affairs showed the warmer side of the Duke of Wildercross -- another proof that her father was not as passionless as people thought.\n\nThe door opened, briefly allowing the scents of jasmine to reach her senses; her smile did not fade.\n\n\"Would you like me to accompany you to the Garden? It will be rewarding to join such a celebration when you had been away from home for so long.\"\n\nShe let go of the curtain and turned to face the newcomer. \"Something tells me that my reward is inside this room, not amidst the crowd.\"\n\nLeander chuckled, walking toward her; Daphne watched him with admiration. Clad in his black armour, he looked exactly like he did when she first saw him. This time, though, she did not turn pale; in fact, she blushed.\n\nHe swept her in his arms, tenderly kissing her forehead. Daphne closed her eyes, inhaling the scent of citrus and musk, mixed with the leather of his armour. She moaned appreciatively, kissing his neck and breathing in his fragrance. She loved it, as she loved everything about him.\n\n\"Something tells me that I won't find sleep tonight,\" Leander observed.\n\nDaphne laughed softly, slightly moving away so that she could look him in the eye. \"Is there something wrong with that?\"\n\n\"What can possibly be wrong with that?\" Leander replied, grinning. He pulled her body even closer, resting his forehead on hers. \"If I get to enjoy you every minute of it, I'm willing to forgo sleep.\" Her laughter bubbled from within, kept there by Leander's mouth when he sought hers. She looped her arms around his neck, kissing back. He tasted of wine -- her father's wine, which left her wondering what the two men talked about.\n\n\"I need you now, my love,\" Leander murmured against her skin as he kissed her neck.\n\nShe smiled, moving away to look into his eyes. \"You have all night to claim me.\"\n\nLeander moaned, kissing her again before moving away to take off his armour. Daphne walked to his bed and watched him reveal more of himself to her hungry eyes. Once he had the leather-and-plate armour off, Leander shed off his shirt, leaving nothing but his breeches on.\n\n\"How did the conversation with Papa go?\" she asked when Leander joined her on the bed.\n\n\"Very well,\" he answered, wasting no time in pulling her down to the bed. His fingers nimbly undid the lace that kept her gown tightly wrapped around her body. \"He gave me the deeds to both Gildenrose Court and Heathergreen Lodge, and the lands around them.\"\n\nUpon hearing his answer, Daphne gasped, propping herself up on an elbow even as Leander continued teasing off her gown. \"Gildenrose and Heathergreen! Do you jest?\"\n\n\"I'm serious,\" Leander answered, finally succeeding in stripping her down to her shift. \n\n\"What have you done to my father?\" she cried, her eyes wide. \"Those are the properties he is most loathe to part with!\"\n\nLeander chuckled, lovingly pinching her chin. \"They were supposed to be his wedding gift to your mother had things gone according to plan, I believe.\"\n\nDaphne knew all too well of the truth of his words. Lady Cornelia had drilled that into her brain since she was a child. That's why the Duchess of Wildercross hated the properties so much, especially since those were the only lands of the Duke that were not accessible even to his own children.\n\n\"How come he gave it to you?\" she asked, calm yet bewildered.\n\nThe general laughed beneath her, stroking her thighs so that the hem of her dress rode up, bunching around her hips. \"They're not mine technically. I'm merely the deed-holder. They're to be my wedding gifts to my future wife.\"\n\nAs a grin crossed her lips, Daphne took her position on top of Leander, planting her knees on either side of his narrow hips. \"For me, then?\"\n\nHis left eyebrow shot up, but his blue eyes danced with mirth as he said, \"Well, what do we have here? A very conceited woman! Who told you that you're my future wife?\"\n\nDaphne moaned, leaning forward to kiss the tip of his nose, thus brushing the tip of her breasts lightly against his naked chest. Her nipples were already erect beneath the silk of her dress, and the teasing strokes of Leander's palms on her bare thighs were causing her core to melt, causing the essence of her femininity to flow.\n\n\"I did,\" she said huskily, lightly licking along his jaw. \"What made you think that you'd get out of my father's estate without asking him for my hand in marriage, Leander Van Halen? Hmm? How dare you!\"\n\n\"What made you think that I shall choose you among the hundreds of women I have already bedded?\"\n\nAlthough she could not see his face -- oh, she would not look, for she was having so much fun licking her way down his neck! - Daphne knew Leander smiled; the tone of his voice said so. The jest was there, the teasing -- deliberate attempts to provoke her, to wake her wildness, to challenge her female ego. And, aware though she was of his intentions, Daphne also knew that he was succeeding.\n\n\"Oh, you will know soon enough,\" came her promising response as she rose on her knees, towering over his lying form, proud and wanton and very much in the mood to take control. \"Blessed be the day you decided to keep me as your lover, you will say.\"\n\nLeander's laughter sounded in the room, mingling with the sound of music and celebration coming from below. Daphne grinned, biting on her lower lip as she bent forward, ready now to begin their game. It would be such an entertaining night.\n\n*****\n\nShe kissed him full on the mouth, savouring the taste of him before moving downward, kissing his bare shoulder as her hands played further down, wandering close to but not quite touching, his erect manhood. The groan that sounded deep in Leander's throat urged her on, as did his gentle hand gripping the back of her head, fondly squeezing from time to time.\n\nIt would be so easy to give in to her desires, to sate their thirst for each other with one swift gesture, yet Daphne was willing to wait -- indeed, she was intent upon it, knowing how much more fulfilling it would be if she prolonged the wait a little more.\n\nMastering her own emotions, she took her time, kissing every inch of Leander's body from the chest downward, lower and lower until her breasts were already touching his stiff member. Leander moved, half-sitting on the bed to get a better view of her.\n\n\"You're a sweet little devil, my love,\" he chuckled when she looked at him from under her lashes, the seductive gesture coming to her as naturally as her own breath. How could she not have known sooner of the power a single glance held over a man?\n\nLeander gathered a fistful of her hair as if he meant to crush it. But knowing that such a thing would not happen with his bare fists alone, Daphne understood that he merely needed to feel its softness, for unless he tugged on it fiercely there could be no smelling it anyway.\n\nNot that she needed to know every small thing her lover had in mind. She was herself busy thinking about what pleasures she ought to subject him to tonight. Surely, a man who has come out of her father's study alive and well needed a reward of some sort...\n\nDaphne gently licked between the rigged muscles of Leander's stomach, taking pleasure in hearing the groan it elicited from the general. She took her time, merely running a finger along his manhood to further stimulate him. Not that she thought he needed anymore of that; he was as hard and as huge as he could be.\n\nShe glanced up at him to see the frown on his face as he tried to control his urges. Daphne's heart gladdened at the sight -- not because she thought she was torturing him, but because she knew that Leander would not hurry her along; he would let her do as she pleased even if it cost him pain.\n\nHerself groaning, Daphne finally decided that it was time she rewarded him for all the things he did and would never do. Gently massaging his balls, she ran her slick tongue around the tip of his manhood, watching as Leander threw his head back with a growl. His grasp on her hair tightened, but instead of hurting her it further aroused Daphne.\n\nHe was so hard -- so ready for the coupling that would inevitably come. Daphne ran her tongue along the underside of his shaft, taking glory in the moment, when she knew that he was trusting her with his vulnerability. Again and again, she licked him, loving the feel of him against her tongue. Leander was virility personified; how could she not fall in love with him?\n\nLicking and sucking, she pleased him with her mouth, now acquainted with the subtle power she had over him. She loved the way he felt in her mouth, hard and soft at the same time. Yes, so vulnerable...\n\n\"Come here, my sweet,\" Leander groaned, his eyes the colour of the darkest blue as he stared into hers. \"I want to taste you.\"\n\nDaphne made a sound at the back of her throat. Gods, did he really? She squirmed, momentarily pausing the wonderful act she had given her attention to so that she could change her position, making it possible for her to continue her pursuit while giving Leander the chance to taste her, too.",
        "Leander did not wait for her to once again wrap her lips around his manhood: his mouth found the hot, wet spot between her legs as soon as she has settled her knees on either side of his face, just above his shoulders. His tongue flicked to the swollen bud hidden under the folds, making Daphne cry out.\n\n\"Like it, my love?\" he asked, his voice husky with desire.\n\nDaphne had to take a deep breath to quench the growing need to rub her molten core to his waiting mouth. She could only moan her agreement.\n\nThe general chuckled, his hands kneading the cheeks of her backside. \"Gods, you are wild, Daphne. Very much so.\"\n\nWhat could she say to that? Daphne merely sighed in contentment when she felt his mouth upon her again, licking, teasing, sucking.\n\nIn front of her, his manhood stood, proud and erect, its slickness reminding her of how it had felt between her lips. Daphne's mouth watered. She wanted to taste him -- again and again and again.\n\nSo she did. It was not like her to deny herself anything, really, as those who have encountered her during her most determined moments would know. Why should she deny herself now -- when having Leander in her mouth was just as infinitely enjoyable as having him teasing her sex?\n\nHis mouth greedily drank her juices, his tongue possessively laying claim to her very soul. Daphne felt as if she would burn, but if she ever would, she wanted to make sure that she'd take him with her.\n\nAlthough new at it, she wanted to make this work for him as it was working for her. She twirled her tongue around the tip of his cock before taking the head into her mouth. Her one hand, she used to keep herself propped up, the other she used to grasp the base of his manhood, slowly stroking it up and down while she took more of him into her mouth until the tip of his shaft hit the back of her throat. She then deliberately pulled her head away, causing her lips to slowly stroke all the way back, until only the head was inside her mouth -- after which she pushed onward again.\n\nShe felt his groan reverberate from the point of contact between his mouth and her sex, so Daphne guessed he was liking it this way. She herself was squirming under the careful ministrations of his mouth, as every bold stroke of his tongue, every gentle suck of his lips threatened to take her over the edge of sanity. Her knees were trembling, threatening to make her collapse on top of him. \n\nGods, how would she be able to hold herself up on her hands and knees above him when her body felt as though it was turning into liquid? But she wanted to provide Leander the same kind of pleasure she was receiving from him...\n\n\"Daphne.\" She heard his sudden intake of breath, felt the tightening of the muscles in his thighs as her mouth stroked his rod of flesh for the fourth time. \"Will you let me have you? Will you lead me into your sheath? My love?\"\n\nHe did not have to ask her twice.\n\nNot even bothering to face him, Daphne impaled herself on his shaft, letting out a loud groan as she felt his whole size inside her. It was so easy to forget how much he could fill her, until the maddening moment when he was sheathed in her warmth and all that her brain was telling her was that she wanted more -- she wanted so much more of him!\n\nShe threw her head back, causing her hair to spill on his stomach. Daphne heard Leander groan as she felt his hand grasping her hair. She leaned back further, planting her hands on either side of his waist as she let out a throaty groan, clenching her muscles around him. \n\nLeander hissed, perhaps trying to control himself, while Daphne started riding him, biting her lower lip all the while. Grinding her hips in a circular motion from time to time, she tried to ride him as fast and hard as she could manage. Yet, it seemed that it was not enough.\n\nThen, Leander snapped. \"Gods, woman, you will kill me!\"\n\nWith a growl, the general suddenly moved -- so fast that Daphne shrieked, caught by surprise. In a matter of seconds, he had her on her hands and knees again, but this time -- this time, he was kneeling behind her, his hands on her hips, firmly keeping her in place.\n\nDaphne once again gave out a loud cry when Leander slammed his manhood into her -- so fast and so deeply until he was buried to the hilt. A low growl followed, sounding as if it had been wrenched from deep within her. Leander pulled out completely, before once again slamming himself back, again and again and again. And every time he did so, Daphne cried out, so loudly that, in a remote corner of her mind, she wondered if the whole household could hear her, if everyone could even guess a little of how pleased she was, of how delightful it was to have Leander driving in and out of her in such a fashion.\n\nAs she neared the peak, Daphne buried her face on the bed, afraid that she would scream her heart out and wake the whole household. It was one thing to let everybody gossip about her outrageous behaviour, quite another to give them proof that she was indeed so wanton, especially since she was still living under her father's roof.\n\nWhen it came, the climax shook her to the core, so raw and primal that it left her breathless in its wake, her cries thankfully muffled by the bed. Leander, too, reached the peak only seconds after her, planting his seeds in her womb. As he always did. Not that Daphne cared. She was not afraid to carry a child while still unwed; she feared no condemnation.\n\nShe shivered in the aftermath, panting heavily and sweating profusely, yet glad at heart. Leander lifted her body up gently so that she knelt on the bed with him just behind her as a pillar of support. Daphne leaned against him completely as she let out a shaky sigh.\n\n\"You win, little devil,\" the general murmured against her skin as his hands caressed the part of her body just below her breasts - slowly, gradually, once again building her passion. \"I need you. I love you. I cannot live without you.\"\n\nShe groaned, reaching back to touch his face even as she closed her eyes and reveled in the sensation his strokes were subjecting her to. \"I know.\"\n\nThey stayed in that position for a while, before Leander finally tumbled her to the bed, covering her nakedness with the clammy sheets, but not before he has studied her body so thoroughly that it made Daphne blush.\n\n\"I hope I was not too rough on you?\" he asked softly, stroking her cheek with his thumb.\n\n\"No.\" Daphne smiled, still feeling sweet soreness between her legs, an ache to remind her of Leander's lovemaking skills. \"It felt -- \" she paused, trying, yet failing, to find the words that would adequately express what she felt. Finally, she settled for \" - magnificent.\"\n\nLeander grinned, making her heart skip a beat before he settled beside her, lifting her head off the pillow so that she could rest it on his bicep instead. She felt his lips on her hair.\n\nWith him beside her, everything just felt... right. Daphne smiled.\n\nIt had been a good day, after all. Perhaps, she was just like everybody else: she really did not understand her father much. The Duke might be cruel and heartless, but, when it came to his daughter, he was...\n\nWhat was he? Magnanimous? \n\nDaphne giggled, unable to relate the picture of a Duke with icy-blue eyes and stony expression with that of a magnanimous individual. Gods, it just could never be!\n\n\"Would you care to share the joke with me?\" Leander asked quietly. She could almost hear the smile in his voice.\n\n\"I just can't believe Papa is letting you get away with this,\" Daphne answered, draping her arm and leg over Leander's body. \"He doesn't strike me as the kind of man who will be so generous that he make the King's magnanimity pale in comparison.\"\n\nAnd that was saying much, considering that King Darius was supposedly the most altruistic king Thersale has ever known.\n\n\"You don't know your father very well, then,\" Leander commented with a chuckle, as if he knew her father very well!\n\n\"He never let us get the chance to know him,\" she sighed, kissing Leander's shoulder and wishing to the gods that her father never change back to his very detached exterior. \"He was almost always indifferent to us...\"\n\n\"Hmm.\" Leander began stroking her hair. \"He certainly knows how to keep his distance.\"\n\nA moment of companionable silence enveloped them, before Daphne broke it.\n\n\"Are you falling asleep yet, Leander?\" she whispered.\n\nLeander chuckled. \"Are you kidding? You promised me a night of no sleep, lady!\"\n\nShe giggled, inching closer to him as she shivered. Leander thankfully held her more tightly, the heat emanating from his body keeping out the cold..\n\n\"Are you cold?\" he asked, the concern in his voice enough to light a fire in her heart.\n\n\"Not when I'm in your arms,\" she replied. With a sigh, she added, \"I've been thinking...\"\n\n\"Hmm?\"\n\nShe let out another sigh, as if what she would say next was important. In truth, she merely wanted to tease him. \"Flowers and fruits, honey and cheese. They will be nice when you propose to me.\"\n\nThe laughter was evident in Leander's single reaction. \"Oh.\"\n\n\"And a fire,\" she continued as Leander shook with silent laughter. She could not help but smile, too. \"So make sure you propose at night, either inside the house near a fireplace or outside, where you have to build the fire yourself.\"\n\n\"You are making demands of me now, naughty witch,\" he said, still laughing as he tilted her chin up and kissed her lips. \"I'll be very afraid indeed to have you as my wife.\"\n\n\"Oh, Leander!\" She pushed on his shoulders so that he lay on his back and she was on top of him. \"A Wildercross always makes demands, didn't you know? Brattiness runs in our blood. As for the issue of you being scared of me, we can make that work.\" She straddled him again, running her fingers on the hard planes of his chest. \"Promise me undying love and devotion, and I'll be as nice as I can be.\"\n\nLeander's grin was priceless. He took a handful of her hair and tugged gently. \"And how nice is nice?\"\n\n\"Ranging from naughty to nice, in whatever mood you want me to be,\" she answered, meaning every single word. She leaned and touched her forehead to his, whispering, \"If I make love to you again, will you reconsider? Will you ask for my hand in marriage then?\"\n\nThe general weaved his fingers through her hair, keeping her head close. \"Will you say yes?\"\n\nDaphne laughed, kissing his lips before moving her face away. \"Nice try, Van Halen. That's why you'll have to propose.\"\n\nIn a quick manoeuvre, Leander had her pinned underneath him on the bed. \"You're still going to make it hard for me? After everything we've shared?\"\n\nShe arched her eyebrows. \"Who said he was not going to marry me in the first place?\"\n\nAs Leander laughed, so did she. He then kissed her lips gently, almost reverently, before whispering, \"I'll think hard about it. I don't know if I want you as my wife...\"\n\n\"Mm-hmm.\" Daphne recognized the jest for what it was. She touched his face, smiling as she traced the outline of his lips. \"Either way, you're stuck with me. Forever.\"\n\nLeander took her hand and kissed the fingertips. \"Yes. Forever.\""
    ],
    "authorname": "silver_firefly",
    "tags": [
        "duke",
        "warrior",
        "lady",
        "make love",
        "intimate",
        "romance",
        "fantasy adventure",
        "candlelight",
        "jasmine",
        "lavender"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/tale-of-obsession-courting-daphne-ch-11"
}