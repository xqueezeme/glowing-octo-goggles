{
    "title": "Apple Cove Ch. 03",
    "pages": [
        "This is a story of fiction, all portrayed as having sex are 18 or older.\n\nIf you haven't read parts one and two part three will make no sense, the story picks up right after Toby proposes. I've had several requests for the story to continue with more chapters, unfortunately there's no way to do that without expanding the number of characters and the family dynamics, at that point it takes an entirely different avenue. I realize some will be disappointed, but I think it's best to let Apple Cove end with this short chapter. \n\n*****\n\nIn the morning the house was full of excitement and jubilation. The three of us went about preparing breakfast as we waited for Toby to arrive, a few minutes after eight his truck turned into the driveway. Clara was the first to hug his neck, followed by Tricia and finally me, holding me tight and sweetly kissing me hello. \n\nThere were questions about wedding dates, where would we live, would I sell the house in Boston, how soon would I be calling the other kids. Jeepers, it seemed like Trish had sat up all night thinking of things to ask. The pat answer was, *we don't know yet*, because we didn't. Lunch time central standard was the best time of day to call Washington State and then to skype Guam, both kids and spouses were happy and excited. My daughter in Guam told me that if we didn't want to wait until they took leave to come home in June to go ahead with a ceremony but to please skype it so she could watch real time. \n\nMy son said he'd like to do the same, they were planning to take vacation in June to see everyone and, plane tickets to Wisconsin would be less than flying into Boston, we could all be together at Aunt Clara's, the two older kids hadn't been here in over ten years. Toby had been a part of the conversations and felt more at ease by the time we were done, with that out of the way I packed a few things for overnight asking Toby to take them to the truck, he would have supper with us before we left. \n\nAfter supper Clara wanted to talk with Toby and I, Jerrod was taking Tricia out after milking, she was busy getting ready which gave us some privacy. \n\nClara looked at us intently, \"You kids have any idea who's gonna do what in this marriage? Are you moving here Claude, or is Toby moving to Boston? How much longer are you planning to farm Toby? Claude, if you move here do you think you're ready to be a farmer's wife, you been a city girl since birth.\"\n\nToby may not come across as the brightest bulb in the pack but little, and I mean little, escapes him. He's actually very smart and articulate, you don't manage a farm the size of his and make money otherwise. He put up his hand for her to stop.\n\n\"What do you have in mind Clara? Stop circling the airport and just land the plane.\"\n\nShe himmed and hawed and stuttered, drew a deep breath as she put her head back, leaned forward as she exhaled and said. \n\n\"Okay, now hear me out before you say anything. I'm getting older and running this place gets more difficult every year, I'd like to sell it but most young people don't have money and those who do don't want to work as hard as this place demands. The fourty somethings all think they should be getting paid five hundred grand a year and that isn't gonna happen on an apple orchard. Which got me to thinking, why don't you kids buy it and when you're old you can hand it down to your kids.\"\n\nMy mouth was hanging open, I'd lost my breath and I damn near crapped my britches listening to Toby's reply. \n\n\"We'll think on it Clara, give us some time to talk and we'll get back to you. Right now though, we're going to the farm for the night, she'll be back tomorrow afternoon, Claude go tell your baby girl goodnight, I already told Jerrod he's to have her back here by midnight.\"\n\nAt the farm we wasted no time, we were stripped and in the shower with our hands exploring as we washed the other, I especially loved him being behind me, his arms beneath mine, hands caressing and playing with my breasts, rolling the nipples as he bent down kissing and lightly biting my neck, then along my shoulder. I was pushing my butt back into his stiff cock wanting it to be buried inside, to feel his body slam against my ass as he took me from behind, there were so many positions I wanted, it tormented me knowing I would have to wait for that dream to be fulfilled. After all, you can't do them all in one day. Turning to wash his dick and scrotum I told him I wanted to suck his cock in the shower, he lifted my chin, kissed me and shook his head.\n\n\"Not tonight Claudette, we'll have lots of time for that, tonight I want to be deep inside you again, I've wanted to rip your clothes off, lick you wet and pound your sweet, sweet, pussy since the moment I saw you this morning. You mentioned something about twice tonight, let's see if we can't make that dream come true.\"\n\nI reached over, turned off the water, tossed him a towel as I dried and told him to carry me to our bed. I immediately got into position on all fours, wiggling my ass, pussy pushed back winking at him between my legs waiting to be invaded, I was smiling back over my shoulder, my tits hanging waiting to be played with or swing back and forth when he wasn't fondling them. When he got into position, I put my hand on his thigh and squeezed lightly, he put his hands on my hips and stopped as I looked back.\n\n\"Toby, I want you to make me yours again tonight, I want you to ride me hard and own my pussy, claim me as yours once more. Paint the inside of my pussy with your cream, I can't get pregnant, pump as much inside me as you can, I want to feel every shot hit my cervix. Take me baby, use me.\"\n\nTurning my head back to the front I whispered, \"Now Toby, take me now.\"\n\nHe stroked slow a minute or so, when I was ready I lowered my tummy arching my back, which in turn opened me wide, he kicked it into gear and began to pummel my body with hard deep thrusts, I wanted more and moved my legs out slightly opening me even wider. At the same time, he stopped, put one leg up and then then other, with one his hand on my waist he gently pushed my shoulders down to the bed with the other and proceeded to fuck me flat footed. I'd read of and heard others talk of this position but had never tried it, deep, deep, oh so deep, he was pushing into me with what seemed like every bit of strength he had.\n\nI didn't last three minutes before my body convulsed, my hips were rocking up and down, I was squeezing my tits so hard they hurt, and my ass kept pushing back into his thrusts. Just as I was beginning to come down from my first climax he yelled, \"CLAUDE\" and grunted repeatedly as he pushed tight to my body unleashing a torrid of cum deep inside my body. That was enough to put me back into orbit as I came a second time, this one caused my entire body to quake and twitch, I was still humping on his cock involuntarily as my body began to relax. \n\nHe pushed me forward as he lowered himself onto the mattress, he was panting, as I looked back I could see sweat beading on his chest hair and running down his abdomen. His face was drenched, sweat was dripping off his nose, his mouth was open breathing deeply. Though he was hard as a rock physically and in excellent health I was concerned. \n\n\"Honey are you alright? You look like you're out of breath.\"\n\nFlopping next to me he took in a deep breath, exhaled and Frenched me. \"Damn woman, you about wore me out, I'm active but it aint nothin like havin your sweet pussy suck me dry. How did I do, did I reclaim you, are you mine?\"\n\nI stroked my hand along his beard, \"I'm yours Toby, only yours, and yes, you own my pussy. In fact, you own all of me.\" \n\nToby, my sweet loving Toby, washed me, cleaning up the mess we'd made between my legs, then himself. Sleep captivated us quickly once that was taken care of. When I woke I was pleased, although I was a bit swollen I wasn't sore, which was a good thing because I was horny as hell. Toby had his hand in my panties, softly rubbing across the mound, letting the hair drift through his fingers. I smiled when he whispered to me. \n\n\"I love your pussy, I can't seem to keep my hands off it. Do you mind?\"\n\nI shook my head. \"Would you like to try a different position this morning?\" With bright twinkling eyes he nodded. \"Okay, let me get on my back, you get on top and inside me.\"\n\n\"Well that isn't new, we've done it like that lots of times.\"\n\n\"Just mount me, it'll be different, you'll see. When you're all the way inside me stop, I'll tell you what to do next.\"\n\nI needed no external lubrication I was so wet there were droplets of my juice on the few hairs covering my entrance. As he pushed past the outer and inner labia, I lifted into him wanting him deeper and deeper inside me, when our pelvis touched, I stopped him. \n\n\"Okay, sit up but don't pull out, put my ankles on your shoulders, now lean forward a little and make love to me. I love this position it goes so deep. Split me in two with that fat cock of yours.\"\n\nI knew from years past he was more than seven inches and I reveled in every last fraction of it before I exploded internally, Jeff and I had used that position many times but I never came as hard as I did on Toby's cock. Truth be told, because Jeff wasn't as wide it often took a position like this for me to get off, with Toby it was different, he got me off every time. That morning was no different, with him leaning forward my legs were almost parallel to my body while he pounded with vigor and determination. Reaching the end he dumped another of what seemed like a bucket of cum inside me as I relished the feelings and sensation of his warm, creamy, thick sperm painting the inside of my vagina. I imagined his sperm fighting their way through my cervix only to find no egg. \n\nHe skipped milking that morning, we were going to make love again until I begged off, my 48 year old formerly unused cunt was worn out for the immediate time being. Instead I cooked a nice breakfast, followed by a talk session on the couch curled up in his arms. We talked about the realities of him not farming and us taking over the orchard as Clara had talked about. The longer we talked the more we convinced ourselves it could work, I'd sell my place in Boston first, while it was on the market he and I would begin devising a way for him to no longer have to be on the farm every day. Once we'd convinced ourselves it was what we wanted to do it was now time to talk with Clara. \n\nToby went to the barn mid-morning and talked with Ron making sure they wouldn't need him the rest of the day, he wanted to spend time with me. After supper we sat with Clara at the table telling her of our plans if she was serious about us taking over the orchard. We would have to buy it at fair market value or the taxes would eat us alive, she didn't want it all at once but spread out over the next fifteen years and she wanted to live in the house until she died. We were in agreement with that and contacted a lawyer the next day to get the ball rolling. \n\nToby decided he wanted to come with me to Boston, he hired another hand to help Ron and Casey with Ron being in charge. We listed my house going through all my personal things as we waited on possible buyers to see the house. I arranged for a mover to transport my family heirlooms and antique pieces, what the kids wanted went into storage and the rest we sold or gave away. Within six weeks I had a solid offer to purchase from a businessman who didn't need financing, we knew it would be them when his wife went nuts over the originality of the woodwork. \n\nThe house had been paid for years ago, after capitol gains taxes I still had a large sum of money. We put my things into conditioned storage and began figuring out what to do next. It was already March, we decided to wait until spring break to marry, that way Tricia could be here and be my maid of honor. Toby and I moved in together as soon as we returned from Boston, our love life was wonderful, there were some positions he didn't know about that I taught him, I started wearing sexy undies again along with my trademark stockings, he had his hands under my dress almost as much as he didn't. \n\nWe married in the chapel of Faith Family Church, we expected a few folks to be in attendance, what we had was half the valley, the place was packed. We aren't sure how Trish and Jerrod figured out how to film and skype the ceremony at the same time, but we didn't need to understand it to be pleased with the end result. I wore a ruby broach that had been my grandmothers as something old, Aunt Clara's wedding veil of oh so many years ago as something borrowed, Ruby earrings I'd had made to match the broach as something new and the sexiest tiniest little blue panties I could find as something blue. My dress was of a heavy cream colored material and showed nothing beneath, as if there was much to show. \n\nWe decided to skip a honeymoon at that time, we had the entire house to ourselves, we didn't need to go off somewhere to be alone and screw each other's brains out. Before we knew it April was upon us along with all the spring projects and fieldwork. Having procrastinated we still hadn't reached a decision on whether to sell the farm or not until a Saturday at the pizza place, Toby reached over, took my hand and looked me in the eye. \n\n\"Why don't we quit deed the farm to Ron and Casey, they want it but don't have enough for the down payment the bank wants. We could accept what they have saved as their down payment, the place is paid for, we could self finance, even with lawyers fees we'd still be helping them and us.\"\n\nMy first thought was, \"What would we do for a place of our own? I don't want to live with Clara long term.\"\n\n\"With the money we'll have together why don't we build a retirement home, you know, a simple three bedroom with all the amenities, including a three car heated garage and in floor heat. It doesn't need to be big, we're gonna have to clean it when we get older, may as well build with that in mind. I know a local builder who is not only good but has integrity, if we contact him now I'll bet he'll start as soon as the frost is out of the ground, which will be any time now considering the amount of snow we've had. He'll be glad to have early work, any thoughts?\"\n\nI pondered a moment, \"Okay, but I want a three sided wrap around porch and a garden.\"\n\nHe laughed, \"Gee, you sure drive a hard bargain.\"\n\nWe talked over our idea with Clara who thought it was an excellent plan, a small grove of old trees had been removed near the middle of the driveway, we were welcome to build there if we would want to. The next hurdle would be Ron, Casey, and the farm. Having invited them to supper one evening after milking they knew something was in the wind. Following dessert we sat at the table, Toby steered the conversation in the direction we wanted to go. \n\n\"Okay, here goes. I need you guys to listen until I'm done, after that you're welcome to ask or say anything you'd like. I want to sell the farm, and I want it to go to you if you're interested. We'll work with you concerning the down payment you have and then self finance, we'll quit deed it to you so all is above board and legal. Since you'll be paying us directly we'll work out payments you can live with until you're on your feet and comfortable. Alright, I'm done, fire away.\"\n\nThey hung onto each other as tears streamed down their faces, Casey finally spoke. \"We thought you were going to tell us the farm was sold and we had to leave. If we do this can we move into this house?\"\n\nI smiled as I patted Casey's hand, \"Honey, if we do this you can live anywhere you'd like as soon as our new home is finished.\"\n\nThree weeks later all the legal shmegal stuff had been taken care of and Toby no longer needed to be in the barn unless he wanted to. As anticipated a warm spring was upon us, causing the snow to melt and the ground to thaw, by the third week of April they had broken ground and were putting up forms to pour the basement walls. We chose to go with a newer concept of using styrene forms to pour the walls which meant they had two inches on the outside and two inches on the inside with concrete poured between. There would be little to no heat loss through the foundation. \n\nIt was in the final stages of completion when all the kids and families were home late June, we found room between Clara's and our farm house to put everyone. The kids loved Toby, the grandkids began calling him gramps almost right away, they loved the fact that he took them on tractor rides. They were with us through the Fourth of July, the little ones had never seen a small town parade and walked away with bags of candy. Our son and wife broke the news that they were four months pregnant before flying home, it was sad to see our oldest daughter and family leave, I so wanted those grandbabies around a bit longer. When they left they went to visit his folks before returning to Guam. \n\nSince the time the kids took over the farm in May Toby and I had been putting our time to good use at Clara's as we watched our house being built. Painting where it was needed, new siding and a metal roof on the gift shop, since we were now supplying two stores and three restaurants with pies we expanded the pie kitchen to accommodate more production, we replaced the outdated ovens with newer models, and tidied up in general. Toby had all the machinery working tip top by sweet corn time, we sold more that year than they had in the last five. When we moved into our new home the end of July it was too late in the year for me to get a garden in, which was alright, there were usually enough veggies that hadn't sold at the store for me to take what I wanted to the house. Since I hadn't had time to plant a garden Toby had another idea one evening after we'd done the supper dishes. \n\n\"I know you didn't have time for a garden this year, maybe we could make up for that somehow, if you didn't mind I could plant some fresh seed in your hot little love box.\" He was raising and lowering his eyebrows like Groucho Marx. \n\nI reached down for the hem of my dress lifting it to my waist. \"On your knees stud, take these panties off and bury your face in my cunt, oh, and don't stop until I push you away.\"\n\nHe did as I instructed, somehow it was so damned hot and sexy watching him do as I'd commanded, he wasn't a wimp in any way, he simply wanted to make me happy. He grabbed the dress from my hands holding it up while I unbuttoned the top, moved my bra up exposing my breasts and began playing with my nipples. Toby was looking up into my eyes, he pulled back, kissed the top of my mons and dipped back in between my folds, sucking, licking, gently sucking my clit. I could feel it building in my groin and spreading throughout my body, this was going to be an epic orgasm. \n\nLetting go of my nipples I grabbed the back of his head and jammed his face into my pussy as euphoria encapsulated my body, my hips were pumping back and forth, my stomach was so tight the muscles hurt, the yell that came from my mouth could have startled the entire valley had the windows been open. The cum literally shot into Toby's waiting mouth, I hadn't squirted but it was heavy, Toby lapped and sucked until I couldn't take it any longer. \n\n\"Toby stop, STOP, oh my God I can't take any more.\"\n\nI felt my legs begin to tremble and shake, in a flash Toby was on his feet with me cradled in his arms, I was in a daze as he carried me to our room. Slowly ever so slowly he finished undressing me, kissing me all over just as he'd done decades ago in the hay mow, with me completely naked he slipped his tongue into my pussy gently lapping. \n\n\"Baby I'm too sensitive, I won't cum again like that. What I would like is you to bury your cock deep within my very hungry horny pussy and fuck the shit out of me, pretend I'm a new heifer that's in heat for the first time and you're the bull to breed her. Can I have all of your creamy goodness my love?\"",
        "Watching him disrobe I let my fingers slip between the labia still soaked from my orgasms, I let them slide up and down slowly smiling at him. \n\n\"You sultry little bitch, you need a good fuckin that's what you need. Spread um baby, knees back, feet pointed to the ceiling.\"\n\nToby rode me mercilessly for over thirty minutes, missionary, doggy, on my side and finally missionary again looking deeply into my eyes as he stroked. I was worn out and starting to get sore, \"Honey are you close, I've cum three times, my pussy is getting sore and I'm exhausted. Can you cum for me baby? Cum in my pussy Toby, let my pussy know you own her.\"\n\nThat seemed to be all he needed to hear as he pushed hard into my body, his cock spewing shot after shot of semen deep within me. It felt so hot and thick, I have always loved the creamy feeling inside me when he fills my pussy with cum, my body shivered as I felt the sperm hit my cervix. I felt sorry for women who didn't have a husband like mine, a husband whos sole desire was to please me in every way possible. As we lay together in the dark he began to sing a few lines from an old Gerry Rafferty song. \n\n\"When I wanted you to share my life I had no doubts in my mind, and it's been you oh mama right down the line.\"\n\nI hugged him even tighter, \"Toby you couldn't carry a tune in a bushel basket but thank you for singing to me, I do love you so.\" \n\nWe instituted something new that apple harvest, a pick your own deal where the apples were reduced in price if they picked their own. We would take them to the area ready to be picked and then charge by the pound instead of by the bushel, it was not only a hit, it was a goldmine. I think we sold as much in extras while people were there to pick as we did to those who weren't interested in picking, there wasn't a day that went by we weren't out of pies. The ladies at the bake shop got to where they would bring one to me at least once a week, I appreciated them dearly. \n\nTricia stayed with us that entire summer until it was time to go back to school, it was also the summer she learned how to cultivate corn on the old Farmall, something she's talked about for years. She would rise early with Toby and I, get the tractor fueled and greased where it was needed, put ice in a water jug, fill it, make a small lunch, toss those items and some toilet paper in the tool box and head for the fields. We wouldn't see her until late afternoon, sweaty, dirty, hair pulled back into a ponytail sticking through the back of her ball cap and smiling like one does when they know they have accomplished something. \n\nIt was also the summer Tricia gave Jerrod her virginity, I knew it the night it happened, I recognized that look and walk from so may years ago when Toby and I had done the same. She'd been on the pill for months so there were no worries in that department, but being a mama watching her baby girl transcend into a woman put me on pins and needles for a few days. By summers end they were engaged, Trish had a final year of college and Jerrod was working full time for Ron and Casey. They squeezed kisses through the phone and face booked a lot managing to keep the romance alive. \n\nThe summer after Trish graduated she and Jerrod married in the same chapel Toby and I had. They were living at Clara's to begin with. Shortly after their wedding Aunt Clara's health took a significant turn for the worse, without going into great detail she passed from this world into the next that fall. The last day I'd spoken with her in the hospital she told me she was tired and ready to go be with Ted, by the next morning she was gone. I remember saying *I'll see you tomorrow*, she smiled and told me, \"You'll see me but I won't see you, I'll be with Ted.\" \n\nTricia and Jerrod moved into Clara's house and decided to start a family right away, we proposed Jerrod come to work for us at the orchard, he chose to do just that. Trish took care of the paperwork and ordering for the orchard which worked out perfectly considering she was pregnant within three months of them moving into Clara's, planning to one day take over the business. Our daughters husband got out of the Air Force and now flies cargo planes for UPS, they live in the cities (Minneapolis/ St Paul) where he flies out of weekly. We get to see them and the grandbabies every six to eight weeks. With all the kids married and grandbabies galore our lives have reached a pleasant realm. \n\nOur son is the proud father of four, (took um long enough but once started they popped them out left and right) and the CFO of the company he works for. We've attempted to lure them to the Midwest to no avail, they and their family are settled, it would be nice if they were closer, but they aren't. We visit them for two weeks twice a year, at least the kids know who grandma and grandpa are other than pictures on a wall. \n\nWith Trish and her three kids living right next door there isn't a day goes by I don't have a grandbaby visiting, looking for a cookie or whatever else they can com me out of. Trish and Jerrod have basically taken over the day to day operations now, recently adding some of the newer varieties of apples to the orchard while making sure the long time staples remain as well. This summer their oldest will be ready to learn how to cultivate corn, Toby and Helen (granddaughter) are excited and anxious, talk about coming full circle, the memories overflow my mind at times. \n\nToby and I are sitting in the living room watching the deer in the orchard digging through a light snow looking for any apples on the ground. It's the first snow of the year and the flakes are the size of nickels as they softly float to earth. I often find myself wondering if this is what life would have been if I had married Toby decades ago. Though my first marriage was good, it was never as fulfilling as this one, then again, if my marriage to Jeff hadn't been good, I'd have never married a second time. \n\nOur love life remains intact, though we have slowed down to two or three times a week depending on how our bodies are feeling. The affection shown and desire to be with one another has never been stronger, we may not have been together all our adult lives after our first summer of romance and passion, but the second time around is as good or better than the first, of that there is no denying. \n\nLike the old Foreigner song says, \"Feels like the first time, feels like the very first time.\""
    ],
    "authorname": "R410a",
    "tags": [
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/apple-cove-ch-03"
}