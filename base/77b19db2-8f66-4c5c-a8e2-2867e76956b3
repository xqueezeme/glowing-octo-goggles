{
    "title": "The Relationship Game Ch. 02",
    "pages": [
        "Scott's apartment was quiet when he walked inside. That was no surprise\u2014a college guy's apartment was a dead and silent place at 7:30 in the morning. His one early-bird roommate was out the door by 6:30, and the rest of them didn't believe in morning hours in the single digits.\n\nScott stumbled a little through the darkness until he found his room. He closed the door firmly behind him, and fell on the bed without undressing. \n\nHe was in that same position when his phone alarm went off three hours later.\n\nScott jerked awake, wiping drool from his face and checking the time. His first class that day was in 40 minutes.\n\n\"Hell with that,\" he said, sinking back down. Erika had kept him up most of the night, and then kicked him out early. He let his eyes drift closed again. He'd be okay missing this class one time. After all, half the reason he took it was...\n\nScott's eyes shot open, and he jerked upright. He yanked out his phone again, and stared at the app he now had shortcutted on his home screen:\n\nRG. The Relationship Game.\n\nScott felt a small thrill go down the skin of his back and a stirring in his pants. \"No way I'm missing that class today,\" he grinned. \"Not when I've got this.\"\n\nHe immediately slid off the bed and got to the floor, digging around a bit until he pulled out his backpack. More rooting with a hand produced a couple of textbooks and his power bank. He opened his bag, replaced some of the books that were in there with the new ones, and zipped it shut. Then he plugged his phone into his charger, just to be safe, and took a quick whiff of himself. He smelled... he smelled...\n\nHe smelled like sex. \n\nNot the worst smell in the world, but it could be off-putting to certain people in certain circumstances. So he quickly stripped down, dumped his clothes in a laundry bag, grabbed his bathrobe, and headed for the shower. Thankfully, no one was using it (for once), and he got in a lightning-fast five minute scrub before he rushed, dripping, back to his room, paused, rushed back to the bathroom to put on deodorant, ran back to his room, dressed in a t-shirt and jeans, and put a stick of minty gum in his mouth. \n\nHe grabbed his bag and phone, checking the time. He still had 20 minutes, and class was a fifteen minute walk away.\n\nAlan strode outside with a grin on his face and a semi in his pants.\n\n***\n\nThe Brian Lancaster Language and Reason Building (\"the Blurb\") wasn't the college's largest. It was a little older: brick and squat where most of the newer ones were glassy and tall, and tucked in to the corner of the southeast end of campus. The inside was also more cramped and winding, with brown walls and grey floors and odd smells. It wasn't exactly a gem. \n\nScott slid through the glass outer doors and immediately made a right, heading down a flight of steps with a nicely polished but slightly shaky handrail, and down the hallway a ways until he got to a set of double doors. He pushed inside.\n\nThe room that held his class was just barely large enough to be called an auditorium. It had the tiered seating, but held probably only about 60 seats. The seats were the permanent, fold-down kind that had cushions with a comfort level slightly less than a theater seat but just a smidge better than a church pew. Its location in the basement kept it at a just slightly cool temperature year round.\n\nUsually, Scott would have ensconced himself somewhere in the middle a few rows from the back, but this time he chose a seat just a couple rows from the front, on the left side. There were already a few others dotting the seats, including one or two girls that he might have paid more attention to were this another class. Others were rapidly streaming in. He settled in the seat, unzipped his backpack, and pulled out his folder for this class.\n\nJapanese 100: Introduction to Language and Culture. It was a two credit class intended to give students a chance to sample what it might be like to take a real Japanese language or history course. It was a trap: just easy and fun enough to fool you into taking a deeper dive to succeeding classes that no doubt jumped the difficulty up to Super Hard half the semester in, and by then you'd invested time, money, and credits into it. Scott had been fully aware of this when he scoped out the class. As long as you knew it was a trap, you wouldn't fall for it, and get easy language credits. \n\nHe'd come for the credits, but stayed for the instructor.\n\nOn cue, the side door of the auditorium opened, and she walked in.\n\n\"Minna-san, ohayou gozaimasu,\" Lydia Sato smiled. That smile was so cute, the students couldn't help but given her an enthusiastic, \"Ohayou gozaimasu!\" in return.\n\nLydia, or as she prefered with her students, Sato-sensei, wasn't even a year out of grad school. Her nose was a tiny button, and her hair was a gorgeous flowing wave of blue-black. She always wore bright lipsticks, mostly pink or red, but otherwise only used subtle hints of makeup: dark, perfect arcs of eyeliner and only the tiniest hint of foundation. Really, she didn't need it much.\n\n\"I hope you all had a great weekend,\" she continued, her eyes sparkling with excitement in a way that put kittens and puppies to shame. \"We have plenty of things lined up for class today, though, so we better get cracking.\"\n\nShe had the eye of every heterosexual male and most of the females from both sides of the fence as she turned and started to write on the chalkboard. She made an adorable little straining sound as she stretched to write as high as she could. Scott leaned in to watch.\n\nLydia wasn't just cute. She always wore very reserved business suits and dresses, except for the occasionally slightly short skirt that showed off pale legs that looked superhumanly smooth. But you could just tell, from glimpses and slight movements, that her stodgy wardrobe was attempting to hide a small but incredibly tight ass, a tiny waist, and a pair of tits that were about a size larger than you normally see on her body type. Whether they were real or not was a hotly debated topic.\n\nAnd Scott intended to find out.\n\nAs Lydia continued to write, pausing occasionally to talk in detail on the plan for the lesson, Scott pulled out his phone and missed the little \"RG\" icon twice in his excitement. Once he'd managed to thumb it, the Relationship Game booted up, and he set the filter to Proximity. Sure enough, his screen grew crowded with names of students around him. But he was close enough it only took a bit of scrolling to find \"Lydia Yue Sato\" among them.\n\nHe tapped on her, and her status line read: \"Instructor/Thinks you are one of her cute students.\"\n\nScott felt his heart start to pound a little. Well, that was already a pretty good start. He double tapped her name, and looked at his options. He had all his Points for the day (six) still to use, as well as both Exchanges and three Randoms. \n\nHe dismissed the idea of using a Random immediately. With all his reserve moves, he might be willing to take the risk if he wasn't in the same room as her. But if he had another Angela incident, he wasn't sure how fast he could Point and Exchange his way out of the situation before she planted something sharp in his guts.\n\nScott's finger hovered over Points for a moment. She was already in a good spot with him, so it wasn't hard to imagine that it wouldn't take too many points to improve their status into something more... intimate. But he hesitated.\n\nPoints definitely didn't seem like the thing for anything short term. They were labeled as \"permanent\", after all. As hot as he was to find out how she looked under her suit, Scott wasn't sure pursuing a long term relationship with an instructor at his college, either romantic or sexual, was a good idea. He wanted in her pants, but he didn't want her fired or himself in too much trouble.\n\nSo he went with his first instinct from this morning, and selected \"Exchange\" instead. Lydia had stopped writing, and was now walking slowly across the auditorium front, asking questions and pointing to raised hands. He kept an eye on her as he changed his filter to Favorites, and selected one of the two people there:\n\nMariah Knight.\n\nHer status had changed just a little since yesterday, but only for the better. It now read: \"Secret sex friend\\Kinda craving another taste of you.\"\n\nScott licked his lips, his thumb hovering over the confirm button. But first he glanced up. Lydia had nearly walked to his side of the room, scanning over the crowd as she spoke. Just as her eyes settled on him, he jammed down on \"Confirm\".\n\nThis was his first time actually watching when he made a change. There was nothing overt about it. Scott might have missed the signs if he weren't looking for them. But when Lydia met his eyes, she paused just a bit longer, and her irises got just a bit wider. She gave him a small smile that, while still cute, was just a few degrees saucier, and her hips shifted slightly. She pulled back a lock of hair, and her mouth opened as if she might say something, but instead she straightened to call on a tall girl raising her hand in the row in front of Scott.\n\n\"Excellent,\" Lydia told the room when the girl had finished speaking (Scott honestly didn't even hear her over his throbbing anticipation), \"Thank you. Now, I want all of you to get out your text and read a little passage. Yes, I know,\" she said to the slight groans, \"but doing it in class avoids doing it for homework, right? It's not very long, and it will be good for our discussion. I'll be walking around if you have any questions.\"\n\nThere was a reluctantly assenting rumble, and a mass shuffle of backpacks and books. Scott got his out also, leafing to the correct page as she started to walk down the aisles. He didn't read anything, though: he stared right through the text, waiting as he listened to those soft footsteps coming closer.\n\n\"Any questions so far, Scott?\" Lydia asked, bending down next to him. \n\n\"Uh, not quite,\" he said, meeting her eyes, eventually. He may have stopped a couple other places on the way.\n\nHer smile had the tip of her tongue moving behind her front teeth, just for the barest moment. \"Well, make sure you read it carefully,\" she told him. \"But I do have about 45 minutes right after class and before my office hour, if you have questions we didn't cover.\" She bent a little closer, her voice barely above a whisper. \"And if you make it there quickly enough, sugoi ecchi na koto yatte ageru kamo.\"\n\nScott only had the vaguest notion what the words had been, but since Lydia had stared down at his crotch, clearly sizing up his hardon as she said it, he had a pretty good idea as to the gist. She looked back up at his eyes, and gave the tiniest little bounce of excitement. \"Don't be late.\"\n\nShe gave him that smile again, about ten degrees hotter than the last time, and moved on.\n\nScott couldn't claim he paid very good attention to class after that. When it ended and Lydia had excused herself, saying she had a short meeting to get to, he counted off a blood-pumping 60 seconds before he bolted up and followed.\n\n***\n\nLydia's office was on the third floor of the building. Scott had only been there once, but thankfully it wasn't that hard to find. It was one of a row of them that checkered the hallway, so he just had to keep moving along the line of doors until he spotted her name. Unlike most of her coworkers at the same level, Lydia's was one of the few that didn't have a second name on her placard that would indicate she shared the office with another instructor.\n\nScott tapped on the door, softly, and his hand had barely started to lower when it sprang open. Lydia peeked through the opening, her tilted head the only thing visible. She smiled.\n\n\"Scott!\" she bubbled. \"Good to see you, come in.\" She pulled the door open a bit wider, but not much more than he could just slip through, and shut it firmly behind him. Scott got a brief glance around. It was a cramped little place, barely room for a couple shelves, a computer desk, and a trash bin.\n\nBut he didn't look at the room for long. Something else caught his attention.\n\nLydia had lost her suit coat somewhere, and her white blouse was open on top by about five more buttons than normal. It gave a generous view of her cleavage and just a tiny strip of the top of her bra. It might have been Scott's imagination, but he was pretty sure her skirt was hiked up a bit, just high enough to show off where her thigh-high nylons left off. \n\nShe stepped right into him, looking up at him with a smile and trailing a finger over his chest. \"So, have any questions from class?\"\n\n\"Uh, not that I can think of,\" Scott replied. He twitched to run his hands down her, but he wanted her to make the first move.\n\nShe smiled, leaning into him deeper and pressing her tits into his chest. \"I see. What then, I wonder, could you have come here for, then?\"\n\nLydia started to grind her pelvis into him, letting out a giggle. \"Well then, I suppose I could give you a... cultural experience.\" \n\nShe reached up with both hands, grabbing his face and tugging him down toward her. She kissed his lips softly. She lingered there a while, giving Scott a chance to feel the silky smoothness and wonder how much lipstick he had on now. Then she turned her head a little, and lightly started to work her tongue into his mouth. He started to eagerly reciprocate, but she pulled back a little, hovering just out of his reach. She smiled, and then leaning forward again, sucked his tongue into her mouth, working it loudly and wetly without her lips touching his. \n\nScott ran his hands down her sides, reaching for a more interesting area, but she reached down and grabbed his wrists. Her hands were tiny compared to his, but gripped him firmly even as she kept working his tongue inside her mouth and sucking loudly. She came off of him with a slight pop and a line of saliva connecting them for a moment.\n\n\"Mmm,\" she said, giving him a sultry smile, \"oishii.\"\n\nScott blinked. \"Lydia, what\u2014\"\n\nShe put a finger on his lips. \"'Sensei' to yonde.\"\n\nHe stared, his mouth opening.\n\n\"Sen. Sei.\" she said again, leaning in closer.\n\nAfter a moment, Scott repeated. \"Sensei.\"\n\nHer smile bloomed into a grin. \"Yoroshii.\" She looked down at his crotch, licking her lips. She cupped his package, hefting it as she stared up into his eyes. She lightly touched his scrotum with the tip of her finger, circling one testicle and then the other, and then trailed up to his cockhead, tracing the edge of his urethra. Then she reached up with the other hand, running her fingers down his chest to his waist as she got down on her knees. With a quick move, she fished out the drawstring of his shorts, undid the knot, and had them down around his thighs.\n\nShe gave him another 49 degree celsius smile. \"Shitagi ga nai ne. Nanika kide shitanda kashira...\"\n\nScott's mouth worked. \"Sensei, I don't\u2014\"\n\n\"Wakaranakute ii no yo,\" she purred, cutting him off as she took hold of his shaft with her forefinger and thumb. He wasn't pornstar big, but Scott looked like it compared to her hands. \"Sore nishitemo ii ochinchi motte irun da ne.\" Her eyes flashed back up to his face again. \"Suite hoshii?\"\n\nScott hesitated. \"Uh...\"\n\n\"Kotai wa 'hai, sensei' desu yo.\"\n\nScott's brain worked furiously. \"Er... hai, sensei?\"\n\nLydia's cute face broke into another wicked smile. \"Yokarou.\" She pointed his dick toward her mouth, and using just the tip of her tongue, started to wet the edges of the mushroom head. Little by little, she worked her tongue all up and down his shaft again, pausing to circle on his ballsack or his tip, and as the moisture built up, began to slowly, firmly stroke his shaft. Finally, she put her lips on the tip. Scott could feel them stretch across his girth, lock around the ridge of the cockhead, swirling with her tongue in a way that made him twitch a little. \n\nShe sank down on him until he was just an inch or so in her mouth and sucked harder, her hand jerking him in long, smooth motions, moving gradually up and down the upper half of his shaft with her mouth. She moaned slightly, her eyes closed and an expression like she was slowly melting a piece of chocolate away in her mouth. Then she looked up at Scott, and eyes twinkling, sucked his dick in further and further until he was most of the way inside her mouth and throat.\n\nLydia started to bob on him, but she was in no hurry. She sank down smoothly, stroking the shaft, fondling his balls, and then up again. Over and over and over, like she was luxuriating in having his penis in her mouth. She rose off of his member with a soft slurping sound, and giving him another impish smile, unbuttoned her blouse the rest of the way.\n\nIt fell away, and a moment later, the bra followed, sliding off of her. Her tits were shapely, very tight and well rounded, possibly even larger-looking without the bra. But even as he reached out to cop a feel, she grinned, grabbed his dick in one hand, pulling it up, and squeezed her face between his legs and up into his crotch. Then he felt her tongue, wet and warm, circling his anus.\n\n\"Holy shit,\" he said. \n\nLydia's face pressed in closer to his ass, delicately swirling and working with her mouth, rimming him. Her hand kept jerking up and down on his still saliva-drenched dick, but she took her time about it. It seems like it took several seconds for her to squeeze from his tip to his base and back. All the while, her mouth was exploring every portion of skin around his asshole.\n\nThen she shoved her tongue up inside him. Scott jerked, but she didn't even pause. His instructor just kept swirling, flicking, jerking, and tongue fucking him.\n\nBy the time she slid away, Scott's anus was dripping and wet, and his dick was absolutely rock hard. Lydia stood, and reaching for his shirt bottom, pulled it up over his head so it came off inside out. Then she ran a hand up and down his chest, feeling his pecs and stomach. The other hadn't stopped milking his dick. Suddenly she bent over, and grabbing his ass, started to suck on his right nipple. This made Scott squirm a bit. He'd never had a girl suck on him there; it was always the other way around.\n\nHer breasts were pressed against his stomach, and Scott could feel the hardness of her tiny brown nipples poking at him. He reached down and managed to mash them a little, squeezing them from the sides with his fingers. They sure seemed real to him. But then, he was pretty sure he'd never done a girl with fake ones.\n\nLydia's mouth sipped on him a moment longer, and then popped off. She gave him a shit eating grin, and tisked softly. \"Warui seito nan da ne. Oshioki ga hitsuyou mitai.\"\n\nThen suddenly grabbed him behind the knees, and pulling with her hands while she pushed with her shoulder, brought him quickly to the floor. Scott managed to slow himself a little, but still wobbled, flailing so he didn't fall flat on his back. \n\nLydia stood and stepped over him. She pulled her skirt up until it was wadded at her waist. Her hipster panties were white and silky. They also had a big, dark wet spot all down the middle.\n\nShe turned, bending over and showing off her ass for him as she pulled her panties down. It was a little smaller than he liked, but it was tight and totally unblemished. He only got a moment more to stare at it, though, because Lydia turned back to him again, and squatted down over his crotch. She was now only wearing her stockings, shoes, and the rumpled strip of her skirt around her hips. She reached down and grasped his shaft, aiming the head so it lined up with her lips.\n\n\"Saa,\" she said, mouth open a little and her breathing coming faster with anticipation. \"Oshioki no jikan da.\"\n\nThen she sank down, little by precious little, onto his achingly hard dick. Lydia had the smallest pussy Scott had ever had the pleasure of entering\u2014 he could feel the pressure on his tip where he bottomed out, just barely, and every inch of him was wrapped tightly inside her. ",
        "Lydia let out a sound like a cat getting the cream, and arched back. It emphasized her tiny waist and how her boobs stuck out from her body. Then with glacial speed, she pushed herself up off his dick again, paused for several moments with just his tip still inside, and then sank smoothly back down. \n\n\"Kimochii...\" she moaned.\n\n\"Holy fuck, you are so tight,\" Scott said.\n\nLydia gave him a pleased smile, and winked at him. \"Arigato. Kono toshi demo waruku nai wa ne.\"\n\n\"...and I still have no idea what you're saying.\"\n\nLydia laughed, and flicked one of his nipples. \"Dakara, wakaranakute iite.\"\n\nShe bent forward a little, putting her hands on his chest, and started to work her hips. Each movement was languid, gradual, her sopping cunt sliding every inch of his length in and out in a way that it almost seemed like he could feel every groove and fold inside her with his tip. Her moans came steadily, punctuated by phrases like \"ii kanji\" and \"sugoku ii\" and others Scott couldn't quite catch.\n\nAfter what seemed like forever, she finally started to pick up the pace a little. The sound of her vag got louder and louder, smacking Scott's penis just that much tighter inside. But just as she took a few more strokes at a faster pace, she slammed to a halt. Her eyes snapped open, and then drifted closed, and a shudder made its way through her body. She twitched, arching back again, her mouth opening a moment as she stared at the ceiling.\n\n\"Oh, fuck...\" she whispered, almost reverently.\n\nScott reached up suddenly, grabbing her tits with both hands, hard enough she jerked a little.\n\n\"That was English,\" he said, pulling on her nipples a little so she squeaked. His dick throbbed and his balls ached. \"Does that mean your turn is over?\"\n\n\"T-Turn, we aren't\u2014 \"\n\nHe grabbed her ass, and lifting her body up a little, slammed his length hard up inside her. She let out another squeak, higher and louder, latching onto his wrists but definitely not detering him. So he took her by the waist, and with a grunt, lifted her completely off of him. It was less difficult than he thought; she must not have weighed much over a hundred pounds.\n\nQuickly, Scott rolled to his feet, and grabbing Lydia's ass again, lifted her up and planted it on her desk. He pushed her legs up over his shoulders, pinned them in place with an arm, and then lined up with her flexing lady box. He took one stroke slowly, and just one. Then he reamed her cunt with his length, hard and smooth. He reached around and grabbed one of her boobs, mashing it and pulling on the nipple. She gave a jerk and a yelp, eyes bulging. She must have really sensitive tits.\n\nScott reached around with both hands, and pressing her legs down with his chest, tweaked both her nipples while hammering deeper and deeper. \n\n\"Ah ah ah ah AH AH AH AH AH OH AAAAAAAAAH\" she keened, tightening more and more. Then she jerked hard enough to slam her back against the desk. \"IKU IKU IKUUUUU!\"\n\nScott paused a moment while she rode out her orgasm, enjoying the feeling of her snatch pulsing on him, and watching his instructor flail on her desk. Then just as she started to come down, he pulled out and lifted her back onto the floor. He easily spun her around to face her desk and bent her over it. He gave her a spank on each cheek, and then got his dick in position. She turned back to look at him, her mouth and her eyes wide. But she also definitely didn't do anything to stop him.\n\nSo Scott slammed his iron-hard cock inside her again, and without slowing, started to piston in and out of her. Her whole body bounced as he pounded her, tits jiggling temptingly until he reached out with a hand and squeezed one tight. \n\n\"Oh oh oh oh OH OH OH!\" Lydia's voice started to jump in octaves, and Scott could see the muscles of her body tighten. He poured it on, shoving his jackhammer so fast into her tight confines that his length was just a blur of speed. She gasped, pounded higher just as her last climax seemed like it was starting to settle, and reached back and gripped his hand.\n\n\"You like that, Lydia?\" Scott panted, not letting up. \"You like that cock deep in that tight Asian pussy?\"\n\n\"Yes! Yes! Yes!\" she almost howled, face darkening. \"Oh, fuck yes!\"\n\nScott felt his balls tighten. \"I'm gonna cum! I'm gonna spray it all over your ass!\"\n\nLydia's jaw dropped open, and she gave a little hand wave that was pure panic. \"No, wait!\" She jerked his cock out of her, turned in a whirl and got to her knees. She half-jumped forward, planting her mouth on his cockhead, sealing her lips tightly around it, and sucking hard enough that her cheeks caved in. She reached up with both hands, jerking Scott's pussy juice-drenched dick with one, and working his balls with the other. \n\nScott twitched, feeling his cock lighting up with orgasmic bliss. \"Oh, fuuuuck,\" he moaned. Lydia jerked and sucked all his cum directly into her mouth. Every. Single. Bit. He could see her Adam's apple working, once, twice, three times. Finally he ran dry, but she sucked him off for several moments longer to make sure. Then her mouth came off with a slight pop.\n\n\"Holy shit,\" Scott panted, still feeling the tingling. \"That was... why did you swallow it all?\"\n\nLydia lightly patted her mouth with an adorable, frilly, pink-and-white handkerchief she'd pulled out of her handbag resting on the desk. \"Well,\" she said finally, smiling slightly, \"It would have been awkward if you'd shot all over me. I can't have the smell lingering in here, you know, not with students about to show up for my... oh shit!\"\n\nHer eyes found her watch. \"Hurry hurry! Someone could knock any minute!\"\n\n\"Oh, uh, I guess we should\u2014\"\n\n\"Get dressed!\" she snapped. She already had pulled her panties on and was smoothly strapping her bra on. Scott was still only in his socks. So he jumped back into his shorts, pausing to carefully pull it around his still semi-hard dick. He had his shirt barely around his head when he looked to see Lydia buttoning the last button on her blouse. Damn, she was fast.\n\nThen there were two short knocks on the door.\n\nLydia gave him a frown, watching him a moment as he quickly pulled on the shirt the rest of the way, and grabbed his bag. Then she grabbed the door handle.\n\n\"\u2014and I'm so glad things are going so well,\" she said, as if they had been in conversation when the knock came. The person waiting for them was a large girl with dirty blonde hair and a suspicious expression. \n\n\"You just let me know if you need anything, okay Scott?\" Lydia continued, nodding him out.\n\n\"Okay,\" he said, \"I will.\"\n\nShe met his eyes, and for just an instant, he saw the heat from earlier. \"Good.\" Then she turned to the girl waiting and offered a smile that was much more cute and less dripping with sensuality. \"Hi Bella, come on in!\"\n\nScott and Bella passed each other through the doorway, and he thought he caught a brief, dark look from her before she brightened into a smile for Lydia. \"Sensei, konnichiwa!\"\n\nThen the door closed behind them, bringing their voices to an indistinct mutter. \n\nScott paused there a moment, looking at the door. \"Well,\" he muttered, \"that was hot.\"\n\nHe paused there a moment, still feeling the some of the post-sex buzz. He wouldn't have minded lingering a bit more, but he supposed when you had sex with your instructor in her office, you had to take what you could get. Besides, she had swallowed his jizz, and that definitely counted for something.\n\nShrugging it off, he started off into the hallway, pulled out his phone, and fired up RG.\n\nHis phone was immediately bombarded with status messages. Some old favorites were there\u2014he was especially proud at how consistently he was getting \"Multi-Climax\"\u2014but there were a few new ones: \n\nSlow 'n Sultry +4XP\n\nDivvying Dominance +6XP\n\nCultural Exchange +6XP\n\nTeacher-Student Relations +7XP\n\nMcFlurry +5XP\n\nAfter a moment, there was a small musical fanfare (had the app updated or something?) and he got the follow up message:\n\nLevel up!\n\nLevel 5 Bonus: Option to make one (1) exchange long term.\n\nThat caught Scott's attention. He quickly zipped back to his status to check that out.\n\nLvl. 5\n\nXP: 91\n\nNext: 120\n\nTitles: \"Lucky Roller\"\n\n\"Wham Bam Man\"\n\n\"Lusty Youth\"\n\n\"Teacher's Pet\"\n\nPoints: 6\n\nRandoms: 3\n\nExchanges: 2 (Long term: 1)\n\nScott felt a jolt of excitement. If that was what he thought it was, it had some interesting possibilities. But he'd have to be careful. If he really wanted to change someone's relationship with him long term by switching theirs with someone else's, it'd have to be the right fit. And was that just one, or one per day? It seemed like just one, period.\n\n\"Must choose wisely,\" he mumbled. Then his eyes were drawn to his new title, and it made his mouth quirk slightly. Idly, he tapped it. Then suddenly a new pop up message appeared:\n\nChange title? Yes/No\n\nScott frowned at that. Sucking on his teeth a moment, he shrugged and selected \"Yes\". It then gave him the list of his current titles again, which he guessed he was supposed to pick from. He scanned the four of them a moment, and decided to go with the one that was probably the most accurate: \"Lusty Youth\". He tapped it.\n\nScott stopped so quickly in the hallway he almost left his feet behind while his upper body just kept going, and he had to stumble and catch himself on the wall. He stood there a moment, frozen, tottering, and then looked down at his junk.\n\nHe was hard. And full.\n\nA surge of labido coursed through him, and despite him just having emptied his sack into his instructor's mouth, he felt like he could turn right around and give her another go in her pussy. And her ass. And possibly between her tits. He'd pound her until she lit up like a Christmas tree, enjoying every hot moan as he\u2014 \n\n\"Holy fuck,\" he muttered, feeling his dick tighten even more. \"Does this do what I think it does?\"\n\nHe jammed his finger on the \"Teacher's Pet\". The phone made a faint vibration, and a message appeared in a new pop up:\n\nTitles may only be changed once per day.\n\nScott groaned. Well, that was just typical. He had a couple guesses about what they might be doing. For a character in a game, titles were often cosmetic, but every once in a while they gave you bonuses or perks. But there was no way he could tell for sure unless he had time to experiment, and that wasn't happening today. In the meantime, he was stuck with a massive boner and a nearly overpowering urge to unleash it. \n\nHe checked his watch, and then his schedule. He had his only other class of the day in about twenty minutes and three buildings over, but he was about 90% sure he was going to skip it and work out his pent up animal as fast as he could instead. He had adjusted the rock-hard rod in his pants to hide it as much as possible and taken a dozen steps toward the wrong door before he skidded to a halt again. \n\nSuddenly in his mind, like a burning, incredibly horny sunrise, he saw the face of a particular girl in that class.\n\n***\n\nDespite the distracting thumping as he walked, Scott had still made it to the classroom well before a majority of his classmates. After a disappointing scan of the room, he'd planted himself in his normal spot and got out a notebook for affect. But everytime he saw movement near one of the doors and gave it a furtive glance, he was met with just another blah. Finally, with only five minutes to go and no sign of her, and the professor already up front logging in and setting up a powerpoint, he ripped out his phone and fired up RG.\n\nSetting his filter to Proximity, he scanned over the list of names there, pinched, and then scanned again. Finally, appearing just before he pinched again, he found the name he had been looking for.\n\nMcKenna Daniella Drew.\n\nHe could feel the excitement vibrating in his still-uncomfortably-engorged dick. Quickly, he tapped the name to bring up the status. The line attaching the two of them was pretty flimsy, but it was there. Her status read: \"Classmate/likes that you are taller than her\".\n\nScott's mouth quirked a bit at that. Really, he'd started with much worse. But it was about to get much better. He gave her name a tap, chose \"Exchange\" as his action (making sure to carefully press \"No\" when it asked him if he wanted it long term), and then from his favorites, picked up Lydia Yue Sato.\n\n\"Prepared to be sex-friended, Kenna,\" he mumbled eagerly under his breath, and tapped triumphantly. Unfortunately, that same vibration from earlier buzzed, and a new message appeared.\n\nCannot Exchange an Exchanged status.\n\nScott wanted to howl in frustration. Come on! Don't be so stingy! He glanced at the door to his right, and did a double take. She was there.\n\nMcKenna Drew, or Kenna, or \"Mac\" was half turned away from Scott as she talked to someone in the hallway out of view, adjusting her backpack and pulling a strand of her straight, silky-looking golden-blonde hair behind her ear. She wore a nondescript t-shirt and pair of jeans, and she absolutely rocked them. \n\nFrom the distance and with no one standing beside her it was hard to tell, but Kenna was all of six feet plus of D1 volleyball outside hitter. You could see it in the way that shirt stretched around her powerful shoulders and the jeans hugged her incredibly fit ass. She was no slouch in the breast department either, and might be even more except Scott suspected she more often than not was wearing a sports bra when he saw her, since this class was right after practice. And Scott had seen her in uniform at one of the games, and the tone and power of her legs and abs were for real.\n\nAs she walked closer, smiling and nodding still to that unseen hallway person, Scott could pick out her cute little ears, her straight nose, and her eyebrows that were just a couple shades darker than her hair and looked a bit quirked up like she was always slightly amused at something.\n\nNone of this was helping to ease the storm of hunger raging inside him. His gaze snapped back and forth between her and his phone, pounding it uselessly with his finger as she drew closer. Any moment, she would turn and look right past him, making her way to the front far right where she usually sat. \n\nScott growled and dismissed the error message, and then tapped her name again, looking at his options. Should he spend a whole bunch of points? Did he want to make a permanent change to their relationship that he might not be prepared for just to get in her pants? Was there anyone else that he could exchange with that would work? His racing mind couldn't seem to come up with anyone viable. As much as he wanted her, suddenly Calli Kindensen-ing her might lead to something too explosive and in public than would be desirable. He'd only do that Exchange as a last resort. \n\nThat left him with one option: Random.\n\nThis represented the highest risk, but also the highest possible reward. It had given him both that holy grail of bachelourhood, the sex friend, and almost sent an old girlfriend on a murder rampage (he really needed to text her back). Or it could be anything else. He didn't have much of a sample size.\n\nNormally, he would have passed it up as too risky. But his hormones clouded his judgement, and taking the plunge, he chose Random and confirmed it.\n\nScott's blood was pounding in his ears as he watched the tumbler spin. But strangely, he could hear Kenna over it, and he couldn't help but have his eyes drawn to her. \n\n\"Oh, hi!\" she said, in her low, easy-going voice when a girl called a greeting to her. She paused and chatted a bit with her, smiling and nodding. Then she high fived a guy and a girl sitting next to each other, giving a cute little wave to another. She was quite popular, and it wasn't just because of her looks. She was always nodding and smiling, remembered people's names, and was quick to laugh.\n\nAnd then suddenly Scott realized she was looking at him. She paused, and then her face lit up in a smile. \"Oh, hey, Scott,\" she said, and as if it happened all the time and was a perfectly natural thing to do, she took a couple of those graceful, athlete strides to close the distance and flopped down in the chair beside him. \"What is up, my brah?\"\n\nIt was only a fraction of a second, but Scott hesitated. He tried to take a quick glance at his phone, but only saw a blur of text. \n\n\"Well, not too bad, actually,\" he said, trying to sound natural. He didn't do too bad a job of it this time. He cast about quickly for some reply that wasn't just, 'so how about you?' and then noticed something.\n\n\"Oh, hey, no brace,\" he said, pointing at her right knee.\n\nKenna looked heavenward with a look of triumph. \"Yes, *finally*. I'm finally full go. Today felt like the first time I could get up some swings without thinking about my knee. Rachel was a good little friend, but I was so glad to see her go.\"\n\nScott blinked. \"You named your knee brace Rachel?\"\n\n\"Didn't I tell you?\" she laughed. \"At first it was a joke from one of my teammates, you know,\" she lowered her voice a little, \"the one that keeps not-subtly-enough checking out my ass when she thinks I'm not looking\u2014 anyway, it kinda stuck when\u2014\"\n\n\"Alright, everyone,\" the professor said suddenly, his mic'd up voice cutting over their conversation. \"I'm glad everyone is having a nice chat, but I think I better get under way. I want to get done early so you can split into groups for the midterm project.\"\n\nScott was honestly disappointed when he didn't get to hear the rest of that story, but Kenna gave him a wink and said, \"I'll tell you about it later,\" and started to pull out materials. This gave him a chance to check out his phone. It had locked itself, so he punched in his code and immediately pulled up RG.\n\nKenna and he were in close proximity. The line that connected them was quite solid: thicker than most of his, in fact. So he gave her name a quick tap and her status read: \"Close friend\\ feels completely at ease with you.\"\n\nScott frowned at that, his head wobbling back and forth a little. Well, that wasn't bad. Under normal circumstances, he would be more than satisfied with that as a start, because Kenna was awesome. She was honestly one of the nicest people he knew. \n\nBut that tight feeling in his balls wanted something just a little more. So still acting on impulse, he tapped her name, and threw a Point on her just as their professor was beginning to go through his slides.\n\nAfter the Point added, her new status read: \"Intimate friend\\feels like she can be completely herself around you.\"\n\nJust then she leaned in next to him. \"By the way,\" she murmured into his ear, giving him a flat-lidded leer, \"is that a banana in your pocket, or are you just glad to see me?\"\n\nScott felt himself flush a little, but also his banana perked up. \n\nKenna laughed, kinda... well, Scott would almost say coarsely. And then surprised him even more: she moved her hand toward him, middle finger tensed inside her thumb like she was going to flick his dick. He quickly grabbed her hand, shoving it away on instinct, pulling another snicker out of her.\n\n\"What's the matter, Scotty, not getting enough action these days?\" she smirked, still eyeing the bulge without so much as a blush. \n\n\"Hey, I've had some, a lot actually, I just\u2014\"\n\n\"So you're just a huge horn dog is what you're saying,\" she said, holding her chin and nodding sagely. \n\nScott paused for just a moment. It was just a little surreal to be having this conversation with a hot girl he'd undressed with his eyes from a distance who was now an intimate friend as of five minutes ago. But he tried to think how he would reply to a friend. He puffed himself up. \"I have a high amount of vitality, thankyouverymuch.\"\n\n\"See, that tells me you've been spending all your spare time playing video games instead of getting out,\" she said, wagging a finger. \"You should be more of a jock and less of a gamer.\"",
        "He waved that aside. \"I multi-class.\"\n\nHer expression grew a little more serious, and she leaned toward him. Damn, those ears were cute. \"See what I mean? I'm telling you, you should try out for the men's team\u2014 volleyball, I mean. From what I've heard, you've got some killer hops, and that helps a ton to overcome your height problems.\"\n\nScott blinked at her. How would she know this stuff? Is she granted knowledge by the game, or did she already know about him? But he said, \"Last I checked, being 6'3\" isn't a 'height problem' for most people.\"\n\nShe waved that down. \"First, let's be honest, you're probably closer to 6'2\". Second, back to my point, you're wasting your potential. Now, the men's team doesn't get crap in terms of scholarships, but you do get access to tutors, trips, perks, and it's like the awesomest sport in the world.\"\n\n\"Kenna, there was a reason I was a basketball wash out. All jump and hustle, no shot. I've got this doing-anything-skilled-with-my-hands problem. And I've only played volleyball for fun a dozen times or so, so I don't know diddly about passing and serving and that stuff.\"\n\nKenna held her hands out, giving him a 'are you an idiot' expression and pointed at herself with both hands. \"Hello! You got a built in coach right here. It'd give me someone to pepper with whenever because we NEVER have enough court time in that fucking multi-purpose fieldhouse they stuff us in, and you could stay in shape and learn, I repeat, the awesomest sport in the world.\" She leaned in again with a smile. \"Plus, you'd get to see me in those tight little shorts all the time, and I know you wouldn't object to that. If my teammate is any judge, I have a pretty great ass.\"\n\nScott frowned at that. It was a little tempting, for all of the reasons she listed. All of them.\n\nShe patted him on the shoulder. \"Just think about it. Now we better start paying attention in class just a little bit, or we're going to be caught with our pants down and plugs up our asses for the project.\"\n\nScott tried, but his brain and blood were still running at a hundred miles an hour. First of all, damn he wanted a piece of that ass. Second of all, he was just a bit stunned at how good of a friend Kenna was. He'd totally been in this for the sex: he freely admitted this to himself, but she was both killer attractive and awesome. Erika was her own kind of amazing, but Kenna was blowing him away a little. But he kind of wondered if she didn't see him as a long term, romantic relationship. Maybe she already had a boyfriend. Maybe she was not interested in guys. He didn't have a clue, like he would have if they had been actual friends longer than about 10 minutes now.\n\nThird, was it his imagination, or was she less sweet when talking to him and sort of more... raunchy? \n\nAnd DAMN, he wanted that ass.\n\nHe managed to struggle through the rest of class, scribbling a few notes. Kenna was no help at all, interrupting him to make comments about girls and guys in class, telling dirty jokes, and making teasing references to his 'banana', 'tent pole', 'pants snake', or 'cucumber' every couple of minutes. He couldn't tell if she was just a total cock tease, had really lowbrow humor, or both.\n\nFinally, the professor called out, \"Alright, start breaking into teams of three. I recommend you start working on this ASAP rather than procrastinating. At least meet once and work out roles.\"\n\nKenna turned to him. \"So, who's our third?\"\n\nScott opened his mouth, hesitating just a bit because of the oddity of her just assuming they'd be in the same group. Before he could answer, she said, \"Oh, I know who'd be great, just sec.\"\n\nShe bounded away, and in a moment returned with a small freckled girl who was cute in a mousy way, but looked distinctly average compared to Kenna. \"Scott, this is Tina. Tina, this is Scott. I think we'd make a great team... if it's okay with you, that is.\"\n\nTina looked a bit stunned, but couldn't resist Kenna's bubbly smile. \"Uh, sure, that's fine,\" she said, looking between them. \"Nice to meet you, Scott.\"\n\n\"You, too,\" Scott said, also swept along. \"Glad to have you aboard.\"\n\n\"So,\" Kenna said, smiling at them both, \"would it be okay if we meet and get things done right now?\"\n\nTina frowned. \"I'm sorry, but I've got a meeting I've got to go to in about 20 minutes, so I'm in a bit of a hurry. Could we meet in about an hour and a half or so?\"\n\nKenna tilted her head. \"Uh, sure, I think that's fine for me. You, Scott?\"\n\n\"Yeah, I think that's no problem.\"\n\n\"Okay, let's exchange numbers so I can text you the place,\" Kenna said, which they did. \n\nKenna was her chatty, sweet, bubbly self again. When Tina was on her way, though, she turned to Scott and said. \"Well, let's just hope she's not a flake. C'mon, let's go.\"\n\nScott hesitated. \"Uh, where are we going?\"\n\n\"My apartment, duh.\"\n\n\"Wait, why not my apartment?\"\n\n\"Because mine's nicer. Also, my roommates will almost certainly be out, and yours are mostly assholes. Especially Kyle.\"\n\nScott stared at her. He didn't have even the slightest reason to object to going alone with this hot girl who was now his intimate friend's apartment. He was just a little weirded out about how much she knew. There was no way she'd ever actually been to his apartment or met Kyle. Maybe in order to have a relationship with him like \"intimate friend\" she had to know those types of things, even though he didn't know them about her. \n\nJust how powerful was this Relationship Game?\n\nWhen he didn't say anything, she said, \"See? You can't even come up with a good objection. Either I'm so right you can't even speak, or you're just mesmerized by my sweet bod. Either way, let's bounce.\"\n\n***\n\nShe was right, her apartment was way nicer.\n\nFirst of all, it was literally the first street south of campus, so the walk there was even shorter than to some of his classes. This was good, because his dick was still letting him know at every step that it still wasn't satisfied. If it stayed this hard much longer, he might have to seek medical attention.\n\nSecond, instead of a few buildings with slight signs of aging and an acceptable but older style, it was a glittering glass and stone edifice with wide sidewalks, pruned foliage, and a parking structure. The people walking around were on average about 29% wealthier and 33% hotter than his complex. They walked through a sparkling foyer full of cushy couches, pool tables, and TVs only after passing a guard and CCTV cameras, and took an elevator that opened to Kenna's keycard. She was on the fourth floor.\n\nFinally, the apartment itself was on another level. Larger, of course, but way more natural light, open concept, with mostly wood flooring punctuated by nice rugs and dark wood edging. The furniture, however, was about the same as you'd find anywhere. Scott guessed the scholarship students had to provide at least some of it themselves.\n\n\"\u2014so I guess we'll just hang out for a while 'till she gets here,\" Kenna was saying, tossing her backpack down onto the couch. \n\n\"So you really have this place mostly to yourself?\"\n\nKenna threw herself onto the couch next to her back, leaning back and stretching her legs out wide in front of her. She clearly didn't care how much it emphasized her bust and the spot where her jeans pressed against her crotch. \"Yeah, mostly. I only have two roommates. One is gone on a study abroad, and the other is a softball player, and they have these long tournaments in, like, Mexico during this time of year. I think she's supposed to be back next week or something.\"\n\nScott felt a stab of envy, but it drowned in the whirlpool lust that was washing through him.\n\nIf Kenna noticed his gaze, she was doing a good job of pretending she didn't. \"They're pretty cool when they are around, though. The softball player, Annie, she's funny as fuck. I swear I almost piss myself when she gets on a rant. The other Kelli is a nice, quiet girl, but she's so damn fine that guys are always hanging around trying to get in her pants. I guess I can't blame them: if I was a guy, I'd want some of that, too. Seriously, she's got this killer figure and doesn't even fucking exersize besides yoga. Lucky bitch.\"\n\nJust then her phone buzzed, and she pulled it out of her tight back pants pocket, sliding it open. \"Not Tina. Lessee...\" She snerked, and leaning forward in her seat, started to type a reply with her thumbs. Her golden-blonde hair framed her face nicely, and she still had her legs apart.\n\nBlood roiling, Scott snatched out his phone, too. He knew it was a bad idea. It was too much too soon, and too long term, and in this perfect of a situation, he should be able to just do things on his own.\n\nBut he pulled up the Relationship Game, thumbed on Kenna, and gave her another Point.\n\nHer updated status now read: \"Very intimate friend\\ feels like she can be completely herself around you with almost no inhibitions.\"\n\nScott stared at that a moment longer, feeling his breathing speed increase a little, when Kenna suddenly let out a sigh, and put down her phone.\n\n\"I guess it'd be smarter to get started on the project,\" she said, pulling out her laptop. She gave him a lazy smile. \"But I'd way rather get off a little to relieve some stress. My hot little bean has been begging for attention all day.\"\n\nScott watched, fascinated, as she proceeded to fire off a quick typed phrase, hit enter, and then scanning for a moment, clicked. Immediately, the unmistakable sounds of moaning and slapping filled the apartment. She set the laptop aside and arched back, unbuttoning her jeans and shucking them off to her ankles before kicking them off, all without getting up. She now wore only a stretchy pair of yellow and black bikini panties on her bottom half. Her legs were incredibly long and powerful, and her stomach flat and firm as an anvil. Licking her fingers, she proceeded to stuff her hand inside those panties and started to work herself.\n\n\"Oh, fucking god, yes,\" she moaned, swirling. \"Yes, ream that bitch out.\"\n\nScott almost had to wipe away his drool. So this was what \"with almost no inhibitions\" meant. Was this also \"being completely herself\"?\n\n\"So,\" he tried as he sat next to her, \"got a favorite kind of porn?\" His eyes were glued to the hand working her muff. He could feel the silken-smooth skin of her leg bouncing slightly against his.\n\n\"Mmm,\" she said, the sounds her cooch was making getting wetter. \"Well, most of it, really. I swear I get turned on on a fucking dime. But I really love the rough stuff. Choking, spanking, scratching, DPs, first time anal, her screaming while she gets massive dicks shoved in places nature says they shouldn't go... fuck, so fucking hot!\"\n\nShe redoubled her efforts on her snatch, mouth open and eyes on her screen. \n\nScott licked his lips. \"You, uh, want any help with that?\"\n\nKenna glanced at him and laughed. \"Yeah, you just want to put your dick in me. But sure, you can 'help.' If you do a good enough job, maybe I'll think about doing something about that massive stiffy you've been lugging around all day.\" She arched back again, and this time pulled down her panties, pulling out one leg but leaving the other so it hung around her ankle. \"Seriously, you are one horny fuck.\"\n\nHe looked her up and down, slowly. \"Well, I guess you're an authority on being a horny fuck\"\n\n\"Damn straight I am! Now do you want to eat this pussy or not?\"\n\nKenna spread her legs wide, putting both heels up on the couch. She was totally shaved except for a small golden triangle, as if she had left it there to prove she was a natural blonde. Her lips were clean and tight, soaking with juices, and Scott dove into them so fast he might have given himself whiplash.\n\n\"Oh, fuck yeah,\" she said, grabbing his head with a hand, still watching the screen. \"Yes, Scott, work that tongue. Get it deep in there. Grind your nose right against my hot button, yes, like fucking that, yes, shit, harder you fuck, like you mean it!\"\n\nScott redoubled his efforts, lapping, grinding, sucking, nibbling. She was hot and sweet, smelling of soap and sweat. He reached up and shoved his middle finger inside her, hooking it upward and wiggling. His other hand started to run up her body, up her magnificent right leg, inch by toned and smooth inch, then over the hard muscle of her stomach. He could feel her flexing as she started to twerk her hips into him.\n\n\"Yes, just like that,\" she said, arching up a little. Her fingernails were starting to dig into his scalp. It was a good thing she didn't keep them very long. \"Yeah, Scott, eat my pussy just like that. Suck it, mash it, bite it, plow it! More fingers! Harder! I said harder, bitch!\"\n\nScott did his best to comply. He now had his middle and ring fingers inside her, jerking up and down and in and out, and she was pressing his face into her so hard it was getting tougher to breathe. His free hand traveled further up her body, deep enough under her shirt that his finger tips finally found her bra. It was indeed a sports bra, elastic and smooth. So he burrowed his hand up inside it, and gave her boob a hard squeeze. His hands weren't small, and it filled his grasp pretty nicely. \n\n\"Yeah, mash me,\" she growled, now with both hands on his head. She was no longer looking at her laptop: her full attention was on Scott and her pussy. \"Yes, you keep tongue fucking me like that, keep mashing my tits like that, making me feel so\u2014 \"\n\nShe arched again, hips moving faster, and let out a gasp. \"Oh yes I'm gonna cum, I'm gonna cum, I'm gonna cum I'm gonna cum I'm cumming I'm CUMMING I'M CUMMING I CUMMMMMMMMMmmmmmmm...\"\n\nSuddenly her legs whipped around Scott's torso, crushing him with their power. She arched even more, the outlines of her fabulously athletic body standing out. Man, there was just something about sporty girls. Practical muscles honed by years of training and effort to do something instead of just be big and strong just seemed so much hotter to Scott. \n\nIt was kind of making it hard for him to breathe, though.\n\nFinally, she started to come down, and her grip loosened. Scott gasped at the clean, sweet air, his face wet from her juices from chin to nose. His right hand was still buried inside her.\n\n\"Ooo,\" Kenna said. \"Okay, that was pretty nice. I guess with training and rehab, I probably haven't seen as much action lately, either.\" She took a deep breath, letting it out slowly, and then looked at him with smoking eyes. \"So... you got a condom?\"\n\nScott blinked, and fumbled at his shorts pocket. \"I, uh\u2014\"\n\nKenna sighed and rolled her eyes. \"Scott. You douche, the hell are you thinking? What kind of moron goes alone with a girl to her apartment, and doesn't even bring a goddamn condom?\"\n\n\"Well, uh, this wasn't exactly something I knew was going to happen earlier today...\"\n\n\"Lame fucking excuse. First of all, as a college guy, you should ALWAYS be packing a condom. You have a wallet, right? Second, you could have made some excuse to go to the bathroom and bought one from a machine.\"\n\nScott felt suddenly stricken.\n\nKenna shook her head slowly, and glared at him. \"Hey, don't look at me with those puppy dog eyes. He who is unprepared shall not get impromptu hot pussy. But...\" Her mouth quirked a small smile. \"Well, you're damn lucky. I think there's still something I can offer you.\"\n\nShe carefully pushed his fingers out of her, letting a soft little coo as she did, and stood up. \"Strip!\" she said, pointing an imperious finger at him.\n\nScott had good instincts for this kind of thing, so he only stared at her for maybe two tenths of a second before he also stood and whipped off his shirt. Not waiting for him, Kenna reached down cross-armed and pulled off her shirt, yanking the bra off with it. The sight of them bounding free, firm and in charge, made Scott pause with his hands still on the waistband of his shorts. Her nipples were flat, even discs of pink. She was now only wearing her socks and shoes, a vision of health and power and sex. \n\n\"C'mon, c'mon, hurry the fuck up,\" she said, kicking off her shoes. Growling, she grabbed and yanked down his shorts so his member sprang free. Her eyes seemed to light up a little, and she ran her fingers down the shaft.\n\n\"Hmm, not bad,\" she said, gripping it. She smiled just slightly up at him and stepped closer, pressing her chest into his and rubbing his cock head into her stomach. She was right, there really wasn't not a ton of height difference between them. With her free hand, she reached around and spanked his ass, gripping it. \"Not bad at all.\"\n\n\"Well, you're way fucking hotter than just 'not bad',\" he told her, running his hands slowly up her outer thighs until her reach her ass, also. He gripped it for the first time, and it was exactly what he'd been hoping for.\n\n\"Oh, I know,\" she said, still rubbing his tip into her. \"But it's still nice to hear.\"\n\nScott started to lean down into her, but she covered his mouth. \"No. If we kiss, we're gonna fuck for sure. I know me, and I definitely won't stop just because you say you're gonna cum. Instead... follow me!\"\n\nKenna didn't exactly wait for him, because she didn't loosen her grip on his cock, forcing him to spin around and follow her closely across the room. They went down a hallway to the last door on the end. She kicked it open with a bang to reveal what could only be her bedroom. It had a nice queen bed with a pillow top, random bits of clothing and sports equipment scattered on the floor, and posters of her team, Michael Jordan, and Chris Hemsworth without a shirt.\n\nBefore Scott could take in any more of it, Kenna guided him along to her nightstand, and yanked open the top drawer. His eyes bulged. It was stacked with dildos, vibrators, lube, and butt plugs, all lined in a neat, nymphomanic row. She grabbed out lube and a surprisingly large plug with one fist, and turned toward the bed, not even bothering to close the drawer again.\n\n\"So,\" she grinned, turning to bend over her bed, spanking herself hard, \"you ready to fuck this ass?\" She still had a hold of his cock with one hand.\n\n\"Oh my god, yes,\" Scott said fervently. \n\n\"Well, too bad,\" she laughed, \"you'll have to wait a bit longer. First, I gotta get loosened up a little. Be a friend, and put a fuck-ton of lube on that and put it slowly inside me?\"\n\nScott reached so fast to grab both items out of her hand he almost fumbled them. But he recovered, and after figuring out the lube was a spin top instead of an unsnap, he drizzled a heavy dose of the stuff over the plug, making sure every inch of it was dripping. Some of it splashed down onto his dick and her hand. She immediately started to stroke it into him, making him pause just a little and groan, before he lined the plug up with her anus. \n\nHe went slowly, but Kenna took a breath and flexed. Suddenly, like a well trained muscle, her sphincter opened up, allowing him to carefully glide the toy in deeper and deeper. After just a couple more ins and outs with plenty more lube and enthusiastic cursing, it was completely inside her.\n\n\"Mmm,\" Scott said, still getting stroked. \"You seem to be pretty good at this.\"\n\n\"Fuck yes, I am,\" she purred, working her clit again as her backside flexed. \"This ain't my first ass-plugging rodeo.\" She looked back and smiled at him. \"But I guess it will be my first real cock back there.\"\n\n\"Really?\"\n\n\"Yeah. Love playing with my ass, but never had the courage to let a guy in back there. Have this weird complex that they'll think I'm a freak.\" She grinned with a lot of teeth, and reaching back, tensed and pulled the plug out with a plop and a small gasp. \"But with you, I think it'll be just fine.\"\n\nShe lined up his dick where the plug had been, pressing the tip inside. \"Pop my ass-cherry, Scott.\"\n\nScott's blood thundered in his ears. It took everything he had just to take a deep breath, and instead of ramming his throbbing, aching rod of need inside, he kept to a slow and smooth thrust.",
        "\"Oh, fuck,\" Kenna said, arching a little. \"Oh my fucking god, that's... Damn, that feels so much better than plastic. Oh! Oh, fucking son of a bitch, that's good!\"\n\nScott still inched inside, sliding out, then back in more, then out again. This was, by far, the tightest, hottest thing he'd ever stuck his dick into. Her ass was so powerful, she almost stopped him dead every time she tensed, and only when she relaxed a little could he maneuver. After what seemed like forever, he finally got his full length inside. He paused there for a bit, both hands resting on her amazing cheeks, feeling her, feeling the heat of her gripping, writhing ass all over his dick.\n\n\"Oh my god, that is good shit,\" Kenna said. \"Oh fuck, why didn't I do this years ago?\"\n\nScott pulled out just a little, and then pushed it home again. He started to jerk his hips, grinding his dick inside her in a slow circle, before working it in and out just a bit again.\n\n\"Fuck! Fuck fuck!\" she growled, twitching a little. \"Fuck, Scott, stop messing around! Just fucking fuck that fucking asshole!\"\n\nScott paused. \"Alright, you asked for it.\"\n\nHe brought his hand up and then brought it down on her ass with a resounding slap. She jerked, letting out a nice little squeal, but he was already pulling his dick out and shoving it back inside, harder. He spanked her again, on the other cheek, leaving a handprint burning in red after a few seconds.\n\n\"Oh, yes!\" she snarled. \"Yes, fuck me just like that! Fuck my ass just like that!\"\n\nHe gave her another spank, his hips getting into a rhythm now. Her backdoor was now smoothly swallowing his sword in long, even strokes, just hard enough to make a light slapping sound as their bodies squished together. Scott wrapped her hair around a hand, yanking it back just hard enough to bring her head up, and then started to drill her in earnest.\n\n\"Oh, YES, fuck, yes, Scott,\" Kenna said, mouth open and hammering herself back into him. \"Yes, fuck me hard, harder, harder, harder! Fucking destroy my fucking ass with your goddamn cock!\"\n\nThey were slapping hard together now, shaking the bed. But then moving suddenly, Scott grabbed her by the waist, and half threw her up onto the pillow top. He scrambled up behind her before she could recover, standing with his feet on her covers, lifted her up by the hips, and lined his cock up with her fantastic hole again. He plowed it inside, and just as she started to push herself upright, he grabbed both her arms by the wrists. Her head went back down into the bed, her face covered in a wave of golden hair, and using the extra leverage, Scott started pounding his dick in her ass deeper and harder than ever.\n\n\"YES YES YES!\" Kenna screamed, slightly muffled. She was pulling back on him, and Scott could feel the massive power of those volleyball-trained shoulders. \"YES, MY ASS! MY AAAASSS!\"\n\nScott felt his balls tighten, and the tingle start to work its way up the tip of his cock to the base. \"I'm coming!\" he snarled.\n\n\"FUCK FUCK FUCK FUCK FUCK!\" was all she would say, so he took that as an okay to shoot it all inside her ass.\n\nHis cum started to pour out, firing inside. And it kept coming. Four, five, six, seven shots, buried deep into her backside. Finally, he slowed, and pulling out gradually, leaked just a bit more as his dick rested between her spank-reddened asscheeks. \n\nBoth their breathing was a little fast, but if he was honest, Scott's was a little faster. Well, he *had* been doing more of the work. At least, that was the excuse he was going with.\n\n\"Wow,\" they said, at the same time, and then laughed. She tossed her hair out of the way, gathering it with a hand, and then looked back at him. She licked her lips.\n\n\"Hey,\" she said with a heavy-lidded smile, \"since it's you, I'll tell it to you straight. That was some good, good fucking. I came nicely.\"\n\n\"But?\" Scott panted at her.\n\nShe smiled broadly, and licked her lips. \"Well, as good as it was, I can't help but want... hey, are you still hard?\"\n\nScott glanced at his dick still resting on her ass. It was.\n\nWithout warning, she twisted and grabbed him by the shoulders, and with the kind of ease he wasn't used to a girl having, threw him down onto his back on the bed. She jumped on top of him, literally, pressing the air out of his lungs and making him squeak. Perched on top of him, she bent down and grabbed his head with both hands, and dove into a hot, slobbering, tongue filled, face-sucking kiss. Her lips and tongue were lively, fiery, and it took him just a moment to notice she was lining his dick up with her ass again, and sliding it smoothly inside with a slight squelching sound that was either his cum or lube or both.\n\nHer hips and stomach started to flex as she pumped him in and out of her hot tightness. Her tongue was still committing assault on his mouth, and he could feel the fingers of her hands digging into his shoulder and the side of his face. He reached up and took both her tits in his hands, pulling on them, squeezing down from their roots slowly until he got to the nipples. He pinched her right one, not lightly, and the other he mashed together with the whole breast.\n\nThat got him a loud, snarling moan right into his face that made his ears vibrate, and then she suddenly broke away with a gasp and a pop of their lips parting. \n\nKenna licked her lips, and then adjusted so her feet were planted on either side of him. She spread her legs wide, and sitting up straight with her hands on his knees, started to ride his dick hard and fast. Really, really hard and fast.\n\n\"Oh, oh, oh, oh, fucking god!\" Kenna snarled, pounding herself onto him. \"Shit shit shit yes! Oh, you like my ass pounding your dick, Scott? You like that dick getting. Straight. Up. Fucking. POUNDED!\"\n\nShe wasn't lying. She was coming down on him so hard, his stomach was starting to sting. Her boobs were bouncing with abandon, one hand now furiously working her muff, a sheen of sweat on her skin and tiny blotches of pink on her cheeks. Kenna was damn near animalistic.\n\nAnd she wasn't done. She stood, Scott's dick flopping out of her, and then reaching down, pulled his legs up to shove his knees toward his chest. Then she grabbed his dick, pulling it forward to a nearly-painful angle, shoved it back in her ass, and resting the bottom of her thighs on his, started to hardcore amazon him.\n\nShe hammered almost her whole body weight down onto him, plowing him the deepest yet into her pulsing, squeezing volcano of an ass. She worked herself back into a frenzy, barely keeping him inside.\n\n\"Yeah, fuck yeah, fucking cock, fucking cock in my fucking ass SO GOOD SO GODDAMN FUCKING GOOD!\"\n\nShe tightened again, but didn't slow even a little. She kept going and going and going, until Scott could feel he was about to fire off a second time. He yelled at her he was coming, but she probably couldn't hear over her own screaming. They pounded and writhed, squeezing and rubbing, snarling and cumming. Scott felt dimly amazed that he was firing off another heavy load in her, so much that it was running in a flow down his cock and onto his balls. \n\nFinally, at least a minute after he'd cum, Kenna stopped. She let his dick slide out of her, absolutely dripping with sweat and saliva and lube and cum, and fell down onto the bed next to him. Even though everything felt throbby and fuzzy, Scott could still feel her hot skin pressed against his side, her hair, and watched the way her boobs jumped with her heavy breathing.\n\nThey lay there panting for a while, both basking and aching. Finally her breathing came back, and she said, \"Okay, I think I'm good.\" \n\n\"Good,\" Scott said, with feeling. It was definitely top ten... no, top three sex he'd ever had (although most of the top of the list was occupied by the couplings from the last three days). But he also kind of felt like he'd survived a back alley fistfight, or maybe 40 minutes guarding someone 6'10\" and 260 lb with active elbows.\n\n\"Wow,\" Kenna said. This time Scott didn't say it with her. \"Don't get me wrong, I still love dick in my pussy like a normal girl. But anal is kind of like the dessert of sex. A rich, heavy, chocholaty dessert.\" She reached down, feeling herself. \"Oh my god, your cum is STILL coming out of me. Is this like your first time getting off this year?\"\n\n\"I, uh, had sex earlier today.\"\n\n\"Get the fuck out. I've got a quart of jizz streaming out of my ass that says you're a goodman liar.\"\n\nScott started to sit up slightly on one arm. \"No, I actually really\u2014\" \n\nThe doorbell rang, and they both jumped. \n\n\"Oh, fuck, it's Tina,\" Kenna said, cringing and covering herself slightly on instinct. \"Uh... go stall her for a bit, will you? Tell her I'm in the bathroom.\"\n\nScott looked at her open-mouthed, looking between her and up and down his naked, sweaty body.\n\n\"So go get your fucking clothes on! They didn't walk off anywhere!\"\n\n\"But they're in the living room! She'll see me dressing through those big windows!\"\n\n\"No she won't, you can't see from that angle, so fucking go! I got you shooting like a firehose up my ass, twice, so it's the least you can do!\"\n\nScott growled, pulling himself to his feet, and sliding off the bed. \"As if you didn't get off like four times.\"\n\n\"At least five,\" she said, keeping one hand pressed to her ass and bending down to grab some clothes off the floor. \"Not counting the one in the living room. Hurry, Scott!\"\n\nScott grumbled more, but did as he was told. He peeked to the hallway, checking out the window angles, and then moved as quickly as he could silently toward his clothes. He gathered up his shorts and shirt, but for some reason his underwear was nowhere to be found. He looked and looked, heart pounding, but when she rang the doorbell again he gave up and pulled his shorts on, going commando. \n\nHe barely had time to throw on the shirt too, take a couple of steadying breaths, and then open the door.\n\n\"Oh, hey Tina,\" he smiled, holding the door wide for her. \"Come on in. Kenna's just in back in the restroom.\"\n\n\"Thanks!\" Tina smiled, although she looked at him a little puzzled. \"Are you okay? You look kind of warm.\"\n\nScott wiped sweat from his forehead. \"Oh, uh, it just took a bit for the air conditioner to kick in here, so I should be fine in a bit.\"\n\nHe turned to lead her in, and his eyes suddenly landed on Kennas clothes still on the floor, including her panties and sports bra. He took a quick step inside as Tina was turning to shut the door behind her, and quickly kicked them all under the couch. \n\n\"Nice place, isn't it?\" he said to cover up the movement. \"Way nicer than my apartment.\"\n\n\"Yeah, mine too,\" Tina said, letting down her backpack. \"I sometimes forget what sunlight looks like when I study there.\"\n\n\"Yeah, I know the feeling,\" he said. He started to gesture to the couch. \"Well why don't we\u2014 \"\n\nHe hesitated, suddenly noticing the wet spot where Kenna had come all over his face. Her laptop was still open, too, but thankfully it had gone to sleep. \"Uh, why don't we sit down at the table? That way we can use our laptops.\"\n\n\"Uh... sure, sounds good,\" Tina said. She had just a tinge of suspicion in her eyes now. Scott paused to wipe off more sweat.\n\nAs they walked over, Kenna finally made her appearance. She had the gall to look fresh and clean, makeup refreshed, with jeans and shirt so similar to the last pair that only a careful inspection might have told you they were different. \"Hi Tina! Sorry for the wait. You find the place okay?\"\n\n\"Oh, no problem, sorry to make YOU wait,\" she said. \"And yeah, it's not hard to find, but it is a little tough to get in.\"\n\nKenna laughed. \"Sorry about that. Even with a friend code, they are way up tight with security here.\" She glanced back at the couch. \"Oh, hold on just sec, let me get my laptop.\"\n\nShe strode back to the couch as Tina and Scott started to settle in at the table. As they were opening up sites and notes, Kenna joined them, carrying her laptop shut under her arm.\n\nShe put it down on the table, and pulling it open, put in her password. Just as it unlocked, it made a sudden sound. She slammed her hand down on the keyboard, cutting it off, but if you knew the context, it was unmistakable what the sound was: part of a loud, woman's moan.\n\nScott felt a small surge of triumph as Kenna blushed deeply. \"Uh,\" she said finally, \"sorry about that.\" She cleared her throat. \"Okay, so let's get started. I guess the first thing we're supposed to talk about is roles.\"\n\n***\n\nScott was halfway home before it occurred to him to pull out his phone. With a tiny spark of excitement (he was still pretty worn out), he fired up the Relationship Game.\n\nHe wasn't disappointed when the status messages started pouring in. There were plenty of new ones:\n\nDouble Barrel +5XP\n\nWild Ride +3XP\n\nSome Like it Rough +4XP\n\nAnal Amazement +6XP\n\nDon't Judge a Book +7XP\n\nTrue Friendship +10PX\n\nNew relationship! +5XP\n\nLevel up!\n\nHe basked in the awards for a moment, although he still throbbed in places. Then he checked on his current status:\n\nLvl. 6\n\nXP: 149\n\nNext: 150\n\nTitles: \"Lucky Roller\"\n\n\"Wham Bam Man\"\n\n\"Lusty Youth\" (current)\n\n\"Teacher's Pet\"\n\n\"Dispenser of Pleasures\"\n\n\"Backdoor Paramour.\"\n\n\"Deepest of Friends\"\n\nPoints: 3\n\nRandoms: 2\n\nExchanges: 2 (Long term: 1)\n\nScott mulled over the new titles. That was something he'd really have to figure out. Thankfully, whatever boost \"Lusty Youth\" had given him had been thoroughly exhausted like the rest of him. He didn't think he could take any more pounding on his penis. For today, anyway.\n\nHe thumbed over and checked Kenna's status out of curiosity. Her status read:\n\nDeepest of Friends\\Feels you know each other inside and out. Trusts you completely. Feels you're the only person she can be herself around without reservation. Holds your friendship precious. Likes your ass.\n\nScott stared, and read that over again. That was a lot longer and more detailed than any of his other status messages, even the ones about his own family. Her relationship title was more significant, too, because it was also one of his titles now. What exactly did \"Deepest of Friends\" mean? He thought most of the status messages were really just what they were feeling about him right now: for example, he was pretty sure his family members loved him, but none of them actually had it stated in their current status.\n\nUnless they actually didn't. \n\nHe frowned at that as he made his way up the steps to his apartment. The sun was starting to get low. He opened the door, and finding the living room blessedly empty for the moment, he made his way to his room, and threw himself on the bed with a huff.\n\nWhile he was thinking about it, Scott quickly checked his mother's status. It read: Mother\\ worried and deeply annoyed you didn't answer your phone.\n\n\"Oh, crap,\" he muttered. He checked, and sure enough, a missed call and left voice message. He let out a loud sigh, and started to call her back, but hesitated. He went back into RG, and then tapping on his mother's name, he added a Point. Her status became:\n\nMother\\ misses you, hopes you're doing okay, would like to chat.\n\nScott let out a breath. Well, that was better. He checked his status again. He had two more Points, and he figured use 'em or lose 'em when midnight came around. So he pulled up his favorites, and looked up and down the list. First he pulled up Erika Hatch. After adding a Point, she was now his \"Neighbor, one time lover/thinks you're a really nice guy, and surprisingly good in bed.\"\n\nHe nodded in satisfaction to that, and then hesitated. Instead of adding another on her, he jumped out and instead tapped on Angela Nelson. Her status still read; \"Former friend/ feels a little nostalgic about you\". He felt that as pretty safe, but he added another Point just in case. It became: \"Former girlfriend/wonders if she missed out not going all the way with you at least once.\"\n\nScott smiled. That had promise, for sure. He'd have to finally text her back. Just then, though, his phone buzzed, twice, three times.\n\n\"What is going on?\" he muttered. Three new messages crowded his notifications.\n\nThe first was from his mother. It read: \n\nHi Scott make sure you call me soon, love you\n\nThat left him a bit amazed. He didn't think he'd ever seen his mother text before. He'd really, really had to call her in a bit.\n\nThe second text was from Erika: \n\nHey Scott, this is your number right? Busy now? Or this weekend?\n\nThat sent a spark through him. But he decided to pretend he had already fallen asleep and wouldn't see the message until tomorrow. He was done for today.\n\nThe last text was from Kenna. It read:\n\nOh my fucking god my ass is sore. Too much dessert. Bring a damn condom next time, k? And a volleyball: i don't want you to use mine, you'll get it all scuffed up from missing\n\nScott couldn't help but smile. And wince.\n\nChapter 2.0 End \n\nAuthor's note:\n\nSorry to have kept you waiting! Unfortunately, life got a bit lifey, and I haven't had the free time to write for the last couple of years like I did before. I can't promise any kind of regularity now either, but I hope I'll get the occasional story or chapter out a bit more frequently. \n\nThank you for all the encouraging comments and reviews! I never would have finished this second chapter without them. I hope, after making you all wait this long, that I didn't disappoint too much."
    ],
    "authorname": "blkngry",
    "tags": [
        "anal",
        "app",
        "fit",
        "mind control",
        "rough",
        "teacher"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-relationship-game-ch-02"
}