{
    "title": "Secret Smiles and Three Little Words Pt. 42",
    "pages": [
        "Chapter 58 \n\nNora set her bag down on her bed as Alex and Gavin set boxes of her belongings on the floor. Nora looked around the room, it was definitely not her room. This room had no posters, no frilly curtains. Blank walls, with vases and blinds on the windows. It was very empty. \n\nAlex saw her looking at the room and she finally took a look. It was not a little girl's room. She never noticed it before, she always thought it was nicely furnished. The amenities pleasant and comforting...for an adult. For a child, this room would be like living in a motel room. Cold. Uninspiring. Unable to generate childhood comfort. \n\n\"Hey,\" Alex smiled dropping to her level. \"Don't worry, once we get your stuff up, it will look more like a girl's room!\" Nora nodded as she sat on the bed. \n\n\"You ok?\" Alex asked her. Nora nodded. Alex stroked the sides of her face with both hands. \n\n\"New things are always hard at first,\" she assured the small girl. \"But they can also be very exciting and very rewarding!\" Nora nodded. She didn't seem so convinced. \n\n\"Hey,\" Gavin smiled at her. \"What do you want for dinner?\" Alex watched the little girl shrug her small shoulders again. \n\n\"I love you,\" Alex said to her, feeling her disappointment. \n\n\"I love you too,\" Nora said taking Alex in her arms and squeezing. \n\nGavin slipped out of the room to let the girls put her things away, a nugget of sorrow filled Gavin and he hoped it wouldn't linger. He couldn't imagine what Nora was going through. The death of his own parents had been hard enough, but to be Nora's young age would make that even harder. She could use no logic to explain away the emptiness she now felt. No words to console her that her mother was gone and before her time. \n\nHe remembered the sadness of going through the memories of his old house. Nora had to deal with that as a child. He knew she would be damaged from them. He would have to talk to Alex about maybe getting Nora some help with that. Professional help. She would need it to help her make an adjustment to her new world. A world without her mother in it. \n\nGavin had ordered cheese pizza, knowing Nora liked that. They sat around the table with the box in the middle silently eating the slices. Alex watching Nora, Gavin watching Alex. The table was silent with just the occasional comment or question on another piece of pizza. \n\nAfter tucking Nora into bed that evening, Alex quietly came into the bedroom and Gavin looked up from his book. \n\n\"How is she?\" he asked. \n\n\"I really don't know,\" Alex admitted. \"At least in Pennsylvania she had her room to keep her sense of normalcy. Then Mom and Dad's house. Now...I think it really is setting in.\" \n\nGavin put his book down and looked to her. Alex sat there on the edge of the bed with her face in her hands. He could tell she was tired. Stressed. They both were. He was looking forward to getting back to the routine, getting back to their lives. \n\n\"We need to find her a school,\" Gavin said softly. Alex nodded within her hands never moving them. \"Any ideas?\" \n\n\"It's not like we have a choice really,\" Alex shrugged. \"I will call the regional board of education and find out what district we are in.\" \n\n\"We have a choice,\" Gavin reminded her. \"There are several good private schools in the area.\" \n\n\"Private school?\" Alex asked turning around. He nodded. \n\n\"Private schools have a history of better education,\" Gavin shrugged. \"We could get her into a Catholic school...you said you wanted her to stay within the faith that Livy practiced.\" \n\n\"A private Catholic school,\" Alex repeated. She didn't like the way that sounded. For whatever reason it sounded stuffy and repressing. \n\n\"Alex?\" Gavin drew her attention to him. \n\n\"It sounds horrible,\" Alex admitted to him. \"Nuns with rulers!\" \n\n\"Absolutely not,\" Gavin laughed with a shake of his head. \"No nuns with rulers.\" \n\n\"What's wrong with public school?\" Alex asked him. \"It was good enough for me...and my father?\" \n\n\"It was good enough for me too,\" Gavin pointed out. \"I'm just saying, we have the means to do what we need to.\" He could see her building up her stubborn streak. \n\n\"You mean you have the means,\" Alex corrected. \n\n\"Don't do that,\" Gavin warned firmly. \n\n\"Do what?\" \n\n\"Take us backwards,\" Gavin growled. \"We are about to become husband and wife. We are about to share everything. That includes our finances. So what is mine is yours, and what is yours is mine.\" He let that sink in. \n\n\"I won't have it any other way,\" he said softer. She looked over her shoulder at him. \"We are either all the way in, or all the way out.\" \n\n\"That sounds like an ultimatum,\" Alex pointed out. \n\n\"It is,\" he nodded. \"Take me completely or don't take me at all. I don't do halfway.\" \n\n*** \n\nAlex and Nora sat in the office of the nearest private school. Gavin had been called out on an emergency and couldn't go along. That bothered Alex. She needed him to be here now, to help her decide what was going to be best for Nora. She even let her anger flash when he told her he was leaving, something he only stared at her about. But it was enough to cause her to lower her eyes. \n\n\"Good morning!\" Came a cheery voice of a middle aged man in a frock. Alex and Nora stood when he approached. \"You must be Miss Lasko and Miss Nora?\" he questioned with a warm smile. Both of them nodded. \n\n\"Welcome to St. Timothy!\" he continued. \"Have you been waiting long?\" \n\n\"No,\" Alex told him taking his outstretched hand and shaking it. \"Just a few minutes.\" \n\n\"My name is Father Andor, I'm the Dean here,\" he told them shaking Nora's small hand. \"I'm guessing fourth grade?\" Andor asked the girl. She nodded that she was indeed in the fourth grade. \n\n\"How about I show you around first?\" he offered. They both nodded. Weaving amongst the children in the hallway as they scurried from one class to the next, Andor explained some of the particulars of St. Timothy. \n\n\"This is the Renaissance Wing,\" he said proudly as the kids all ducked into their respective rooms at the last chime of the bell. \"It's what we call our wing dedicated to art and music.\" \n\n\"You have a wing dedicated to art and music?\" Alex scoffed. \"I thought with the whole 'No child left behind' garbage that the emphasis on the arts waned?\" \n\n\"We are not a public school, Ms. Lasko,\" Andor told her. \"While public schools struggle with funding for their art programs as they ramp up the intensity of the core curriculum, they have to decide where to put their limited resources. We do not.\" Alex nodded that she understood. \"We have many wealthy benefactors that fund just our Renaissance Wing, hence the name.\" He winked at her. \n\n\"It is our firm belief that without music and art, a child's mind will not be as fertile, so the Math and English won't take root as well. Music and art make children more well-rounded, better students and happier children,\" he continued as they watched a class of students using clay for pottery. \n\n\"It is our goal to keep all our students fully engaged all day,\" he continued as they started walking again. \"Art and music give them a time to unwind and absorb culture. Being a successful artist yourself, I'm sure you agree.\" \n\n\"You know that I'm an artist?\" Alex asked him. \n\n\"Yes,\" he nodded. \"I adored your mural!\" \n\n\"Oh my gosh!\" Alex laughed embarrassedly. \"Thank you!\" \n\n\"We took our students on a field trip to see it,\" he continued causing Alex to widen her eyes in disbelief. \"They were doing the mural in the play area, I think it inspired them a great deal!\" \n\n\"Really? I'd like to see the mural they did sometime.\" Alex said. The Dean nodded with a smile. \n\n\"Miss Nora,\" the priest started looking down at her. \"Are you an artist like your mother?\" \n\nAlex's mind froze, it was an easy mistake for the man to make. Here she was walking with Nora and they were exploring schools together so it would be natural for him to assume that they were mother/daughter. \n\n\"Oh,\" Alex frowned looking down to see Nora's reaction to what the Dean had assumed. \"I'm not Nora's mother, I'm her guardian, her aunt.\" \n\n\"Oh, dear, I'm sorry I just assumed,\" the man gasped. \n\n\"My mother is dead,\" Nora said coldly. Both adults looked to her and saw the anger. \n\n\"I am sorry Miss Nora,\" the man said genuinely. Nora wiped a tear away and nodded. \n\nAlex watched Nora look around keeping her tear filled eyes from them, she refused to look up at Alex and instead stared out the window towards the courtyard. She didn't like the way Nora had said that her mother was dead. It was cold and unfeeling. Angry even. The sharpness of her words cut at Alex. \n\nPerhaps this transition was happening too easily. The awful truth of the emotions that were churning through Nora were now bubbling through the cracks. Perhaps Gavin was right, it was only a matter of time before the emotions and pain overwhelmed Nora and burst out. \n\n\"Well, do you like art? Painting, drawing, perhaps even pottery?\" the man asked the girl. He glanced at Alex when Nora shrugged. \"How about music? Do you play an instrument?\" Nora shook her head but refused to look at the man, instead staring out the window. \n\n\"Well,\" the man frowned. \"A decision you can make if you decide to enroll. All students here are required to take either an art or music credit.\" \n\nThe man continued to show the girls around, but Nora only shrugged or gave short quiet answers when necessary. She never showed the personality that Alex loved so much. Moving towards the cafeteria there was the bustle of students again. The soft chatter of laughter as students enjoyed their food. \n\n\"As you can see, we have a full service kitchen. Multiple choices of entr\u00e9e and sides,\" he said proudly. \"All planned and made here by our registered dieticians. We have vegan meals for those who follow that path, and all meals are well balanced.\" \n\n\"Wow!\" Alex smiled looking down at Nora who seemed uninterested still. \"Looks like you won't go hungry here!\" she said to her. Nora nodded. Alex twisted a frown. \n\nSitting down in the office of the Dean Nora looked around at the many books and antique furniture of the office. She squirmed quietly in the plush chair she was sitting in. \n\n\"Now,\" the man smiled at them as he folded his hands on his desk. \"I'm sure you have questions?\" \n\n\"Um,\" Alex looked to Nora who said nothing. \"Tuition costs, I guess would be the first question.\" The man nodded and slid a piece of paper across the desk to her. Alex wanted to let her jaw drop but she kept her teeth firmly set. \n\n\"Is this per year?\" she asked at the astronomical cost. \n\n\"No,\" he said softly, buffering her surprise. \"That's per semester.\" \n\n\"Oookay!\" Alex said trying to hide the shock in her voice. \n\n\"It is very steep,\" Andor laughed. \"But, keep in mind, we do not receive any federal funds. All of our tuition stays in house, it is spent on the kids. We hire only the best instructors. Provide only the very best education.\" \n\n\"I'm sure,\" Alex said embarrassedly. \"It's just a shocking number.\" Andor nodded in agreement and smiled as he sat back to explain some of the benefits of that high cost. \n\n\"Our students achieve higher grades on any standardized test. From the ACT to SAT to the periodic achievement tests. Public schools in grade four score 67% at or above average on on standardized tests. We score in the mid-eighties on the same test. By grade 8 public schools hit 77%, we hit mid-nineties. That is at or above the average.\" \n\n\"In our high school, which is across the street,\" Andor continued. \"The average public school student will get a 502 in verbal and a 510 in math on the SAT. Our average last year was a 549 in verbal and a 567 in math.\" \n\n\"42% of public school kids continue on to college, 72% of students from a private school go on to college. So you can see we gear our curriculum to prepare students from day one to go to college and succeed. Last year our graduating class was 102, out of the 102, 98 went to college. Of that 98, 17 were accepted to Ivy League schools,\" he said proudly. \"Two went to M.I.T.\" \n\n\"Wow!\" Alex gasped. \"You couldn't persuade the last four?\" She joked. \n\n\"Some kids are just incorrigible!\" he laughed with her. \"No, I believe they will go to college at some point, but just not yet.\" \n\n\"That's amazing,\" Alex marveled. \n\n\"We are one of the premier private schools in the city, if not the country,\" Andor continued. \"Which is why we are so hard to get into. We have a waiting list of several hundred prospective students.\" \n\n\"Waiting list?\" Alex frowned. \n\n\"Yes,\" Andor nodded. \"But, Dr. Steward is a friend of a very wealthy benefactor here, so we make exceptions from time to time and bump kids to the front of the line.\" \n\n\"Oh,\" Alex nodded. Gavin and his position are the reason they were able to even take a tour of a school like this. \n\n\"How about you Miss Nora,\" Andor asked. \"Any questions?\" Nora turned her eyes to him and shrugged. \"C'mon, you have to have at least one question?\" \n\n\"Why does everybody dress the same?\" she asked after some thought. \n\n\"Ah!\" the man smiled. \"We have school uniforms. We believe it helps keep the focus on education, and less on what to wear to school.\" \n\n\"So I can't wear my own clothes?\" Nora asked. He shook his head gravely at her. \n\nAlex and Nora walked out of the school, Alex tucked her in the car seat and then kissed her cheek. \n\n\"Are you ok baby?\" she asked Nora. Nora nodded. \n\n\"Is that going to be my school?\" the girl asked her. \n\n\"I don't know,\" Alex smiled. \"We'll have to talk to Gavin.\" \n\n\"Is it expensive?\" \n\n\"Don't worry about that,\" Alex told her. \n\n\"Why can't I go to a school that lets me wear my own clothes?\" Nora asked her. \n\n\"Is that a big deal to you?\" Alex asked her. \"I didn't think their uniforms were all that bad. Polos and khakis?\" Nora shrugged. \"I like that they have a big art program.\" Nora smiled and nodded that she liked that too. \n\n\"Well,\" Alex smiled. \"Let's talk to Gavin, see what he thinks.\" \n\nAt dinner that night, Nora was still not talking much. Gavin watched her push her food around on her plate for a while before broaching a subject to get them talking. \n\n\"So I stopped by St. Timothy on my way back,\" he announced. \"A whole wing dedicated to art and music?\" he shook his head as he said it. \n\n\"I know, that was one of the things we liked about it,\" Alex nodded watching Nora. \n\n\"Uniforms were a bit of a buzz kill,\" Gavin continued causing Nora to smile. \"I mean, how are you going to wear your Steelers jersey?\" Nora laughed for the first time that day. \"I can hear your grandpa now...she can't wear her jersey? No way, no how!\" Gavin mimicked Al's voice the best he could. \n\n\"It's a bit pricy,\" Alex pointed out. \n\n\"The scores are worth it,\" Gavin countered. \"Getting into a good college is a big deal nowadays, we need to prepare her for it.\" \n\n\"She is in the fourth grade,\" Alex pointed out with a laugh. \n\n\"Well,\" Gavin shrugged. \"The sooner the better.\" \n\n\"Uncle Gavin?\" Nora interrupted. \n\n\"Yes?\" \n\n\"Are there any kids in this building?\" she asked him. \n\n\"I don't know,\" Gavin stuttered. \"I never really paid attention, why?\" \n\n\"I was at the pool, hoping to find someone to play with, but there were only old people,\" Nora complained. \n\n\"I don't really know,\" Gavin admitted. \"I guess we will have to ask Mike in the morning.\" Nora nodded with a glum expression. \n\nThey went back to eating and Gavin struggled to remember one kid in the building. He couldn't think of any. It never dawned on him that there weren't any kids, he didn't care. Now with Nora it could be a problem. \n\nThe next morning, as Gavin was walking out to the garage, he stopped by the desk. \n\n\"Hey Mike,\" Gavin smiled. \"Are there any other kids in the building?\" \n\n\"Uh,\" Mike frowned. \"No, actually, kids aren't allowed in the building.\" \n\n\"What?\" \n\n\"Well,\" Mike began apologetically. \"This building kind of caters to single people, or older retirees who like quiet. Families don't usually move in here because we have rules that restrict who moves in.\" \n\n\"No kids?\" Gavin repeated. Mike shook his head. \"How long do I have before they raise a stink?\" \n\n\"Well, there isn't any written rule against kids,\" Mike told him. \"It's just an unwritten one, people move in here because there are no kids to fight with in the pool or gym. No kids running up and down the hallway. No bikes and toys to trip over.\" \n\n\"Interesting,\" Gavin frowned. \n\n\"Sorry,\" Mike told him softly. Gavin shrugged and went to his car. \n\n*** \n\nThe following week, Alex pulled her Mercedes into the circle drive of St. Timothy. There were security men in bright orange vests directing traffic. Alex pulled up next to one. \n\n\"Hello,\" he smiled leaning in. \"Can I help you?\" \n\n\"Uh, it's our first day,\" Alex told him. \n\n\"Ok,\" he said opening the back door. \"Hop on out young lady.\" He said to Nora who unbuckled her seat belt. \n\n\"Be sure to put your student placard on your passenger visor,\" the security man told Alex. \"When you pick her up, flip the placard to where we can see it, then we will radio in for your student to come out.\" \n\n\"Be prepared to show ID for the first couple times,\" he continued as Nora hopped out. \"We will verify who you are and make sure you are able to pick up your student.\" \n\n\"Gotcha,\" Alex said getting out and coming around. She stooped to Nora's level. \"Want me to walk you in?\" Nora saw all the other kids going in alone and shook her head. \"Ok, see you at three.\" She gave Nora a kiss and a hug. \n\n\"Miss Lasko?\" a woman called out walking their way. \n\n\"Yes?\" Alex returned standing up. \n\n\"I'm Ms. Davies,\" the woman said shaking Alex's hand. \"I'll be Nora's homeroom teacher!\" \n\n\"Oh, thanks for coming out to meet us!\" Alex smiled. \"But who is watching your class?\" \n\n\"I have two terrific aides in my room that help,\" she smiled. She stooped to Nora's level. \"Are you ready for a big day?\" Nora looked up at Alex and then back at Ms. Davies and nodded. \"Good! We are super excited about having you with us!\" She held out her hand to Nora who took it apprehensively. She looked up to Alex who smiled her best smile to reassure her. \n\nAlex watched them walk away, and Nora turned at the door and waved one final time before disappearing inside. The security guard looked to Alex and nodded, he had seen this situation many times, the worry of leaving your child for the first time at a new school. \n\n\"She will be fine,\" he assured her. Alex nodded and tried to smile as she walked around to get back in her car. As soon as she was in in her cell rang. \n\n\"Hey,\" she said. \n\n\"Hey back!\" came Lena's voice. \"First day of school?\" \n\n\"Yeah, it's killing me,\" Alex admitted. \n\n\"Well, it's something new,\" Lena said softly. \n\n\"Yeah,\" Alex agreed. \n\n\"I need a favor,\" Lena blurted. \n\n\"Sure, for you, anything,\" Alex sighed. \n\n\"Can you come by the apartment?\" \n\n\"Of course,\" Alex said sliding her gear into drive and moved out carefully. \"Be there soon.\" \n\n\"Thanks,\" Lena sounded relieved but Alex missed it as she worried about Nora. \n\nWalking into her old apartment she tried to shake the negative feelings of Nora not with her now. \n\n\"Hey!\" she called out. \n\nLena came from the bedroom in rush, took her by the hand and pulled her towards the bedroom. Opening the door, she found Mike naked in bed, a sheet covering his private area and his hands cuffed to the headboard. \n\n\"Hey!\" he called out. \"I'm naked here!\" Alex covered her smile with her hand but couldn't stop the laughter. It was a definite tension breaker. All the turmoil of the past few days melted away with each leaked laugh. \n\n\"What. The. Hell?\" Alex laughed. \n\n\"Stop laughing!\" Lena begged swatting at her best friend. \n\n\"I'm sorry, but I'm not that kind of girl,\" Alex continued to tease, the tears of laughter forming in her eyes. \n\n\"Stop it!\" Lena began to laugh with her. ",
        "\"I'm trying, really I am, but this is just too funny!\" Alex said trying to control her laughter. Mike blushed embarrassedly from the bed. \n\n\"Now,\" Alex said getting her laughter somewhat under control. \"What the fuck?\" \n\n\"Well,\" Lena began as Mike closed his eyes. \"We were trying some stuff...and so I cuffed him to the bed.\" Lena explained as Mike groaned and gently banged his head against the headboard in embarrassment. \n\n\"Ok,\" Alex laughed. \"First, you go through his wallet, take his credit cards and max them out. Come back in a few hours, if he is still here, then maybe you might think about releasing him.\" \n\n\"Not funny,\" Mike pointed out. \n\n\"You should be standing where I am right now!\" Alex disagreed. \n\n\"Damn,\" Mike groaned. \n\n\"The problem is,\" Lena began slowly. \"I can't find the key.\" \n\n\"What?\" Alex burst into laughter again. \n\n\"Stop laughing, it's not funny!\" Lena tried. \n\n\"Bullshit! This is damn funny!\" Alex retorted. \"So what can I do? Laugh? Run the video camera?\" \n\n\"Stop!\" Lena begged as Mike groaned again. Alex covered her mouth in an attempt to keep from laughing. It partially worked. \n\n\"Ok, seriously, what do you need me for? It seems you have matters well in hand?\" Alex tried through her laughter. \n\n\"I was hoping, seeing how you are into this shit, you would have a key!\" Lena told her. Alex bent over laughing now, she couldn't hold it back anymore. \n\n\"Really?\" Mike complained as Lena pushed the laughing Alex into the hallway and closed the door behind them, leaving Mike in his embarrassment. \n\n\"Look you are the kinky fuck,\" Lena pointed out. \"Surely you have a key!\" \n\n\"Look hon, it's obvious I'm not alone in my kinky fuckery!\" Alex tried to say without laughing and failing. She needed this moment, all the stress of finding a school for Nora, the no kids in the building and all of the rest of it faded back for a few moments. \"As kinky as I am, Gavin doesn't use cuffs!\" \n\n\"What?\" Lean gasped. \"How does he do BDSM without cuffs?\" \n\n\"It's called rope,\" Alex laughed. \"No key needed!\" \n\n\"Fuck, fuck, fuck!\" Lena pouted. \n\n\"I'll call Gavin,\" Alex laughed pulling her phone out. \n\n\"Do you have to?\" Lena asked her. \"It was hard enough getting Mike's permission to call you!\" \n\n\"Hell yes I have to call, he probably could use a good laugh anyway!\" Alex teased. \n\n\"Alexandria!\" Lena barked. \"Stop laughing!\" she demanded as even she began laughing. \n\n\"How do you have cuffs and no key?\" Alex asked as she waited for Gavin to answer. \n\n\"I don't know,\" Lena groused. \"The cuffs are from a previous boyfriend, I thought the key was with my toys, but I guess not!\" \n\n\"I guess not!\" Alex teased. \"Hey, Sir.\" Alex shook her head and smiled as she flipped the phone to speakerphone so that Lena could hear. \"What do you know about handcuffs?\" \n\n\"I like the way you think!\" Gavin laughed over the speaker. \n\n\"No, not me,\" Alex laughed at Gavin's response. \"Mike.\" There was some silence on the phone and both girls imagined what Gavin was thinking at that moment. \n\n\"Not my type,\" Gavin laughed. \"A bit hairy chested I would imagine. I don't do hairy chested women.\" This caused Alex to burst into laughter. \n\n\"You guys aren't very nice!\" Lena pointed out crossing her arms. \n\n\"Hey Lena,\" Gavin called out once he realized she could hear him. \n\n\"Hey,\" she growled. \"Do you have a key?\" \n\n\"You don't have a key to handcuffs?\" Gavin began laughing more as the picture was coming into focus. \n\n\"No, I thought I did,\" Lena admitted. \n\n\"And Mike is cuffed?\" \n\n\"Yes,\" \n\n\"Where?\" \n\n\"To the bed,\" Alex laughed. \n\n\"Oh my God, this is just too funny!\" Gavin pointed out. \n\n\"I can hear all of you!\" came Mike's voice from the other side of the door. \"And I hate you all!\" This caused everybody to laugh harder. \n\nGavin showed up twenty minutes later and burst into laughter when he saw Mike's predicament. \n\n\"Asshole,\" Mike growled. \n\n\"Be nice or I'm not helping,\" Gavin warned. \n\n\"Thank God you have a key!\" Lena said happily. \n\n\"I don't have a key,\" Gavin told them. \n\n\"What?\" they said in unison. \n\n\"I don't even own a set of handcuffs!\" he laughed. \n\n\"Then what are you doing here?\" Mike grumbled. \n\n\"I wouldn't have missed this for the world!\" Gavin teased. \n\n\"So what do we do?\" Alex asked. She started to pick up the edge of the sheet covering Mike up. \n\n\"Alex!\" Mike barked. She laughed and dropped the sheet. \n\nGavin pulled a piece of thin wire out and began to probe the keyhole. Mike looked up to see what he was doing. \n\n\"Is that going to work?\" he asked Gavin, his voice begging for good news. \n\n\"In a previous life I wasn't so upstanding,\" Gavin laughed as he continued to pick the lock on the cuffs. \"It's a good thing these are the cheap cuffs. If they were real cuffs this would totally not work!\" With that the cuff released and Mike was able to pull his hands down with some difficulty. \n\nHis arms stiff and sore from being immobilized for so long. Gavin held out his hand as he laughed while picking the other side of the cuffs to fully release Mike from the metal shackles. Once he was free Mike turned over and pulled the pillow over his head in humiliation, extending his middle finger in reply to all of the harassment and laughter he was enduring. \n\n\"See,\" Alex laughed slapping him on the butt. \"Nothing to it!\" \n\n\"Get out,\" Mike ordered from under the pillow. \n\nThe three of them got up laughing and closed the door behind them. \n\n*** \n\nStepping out onto the front stoop of Alex's old apartment, they stood there for a moment just kind of smiling. \n\n\"I don't know about you,\" Gavin began as he pulled his gloves on. \"But I sure needed that!\" \n\n\"I'm with you, Sir,\" Alex agreed tucking her arm into his as he led her down the stairs. \"I'm sorry.\" \n\n\"For what?\" \n\n\"For all the stress my family is putting us through,\" Alex sighed. \n\nThe more she thought about it, the worse she felt. Gavin got a full taste of her family, the way they were, how they turned on one another even to the point of forcing Livy's death. She wondered if Gavin was having second thoughts about marrying into a family like that. She was sure he would be by now. \n\n\"Are you rethinking your decision to marry me?\" Alex asked him when she got to her SUV. He turned her and stared at her hard. \n\n\"I told you a long time ago, I don't do second thoughts, they are a waste of time,\" he told her firmly. \n\n\"My family hasn't given you pause?\" Alex gasped. \n\n\"I'm not marrying your family,\" Gavin told her with a hand to her face. \"I'm marrying you.\" \n\n\"All this stress,\" Alex said as a tear fell from her eye. \n\n\"Will pass,\" he assured. He leaned into her lips and kissed her gently. \"I love you Alexandria Lasko, and I'm dying to make you my wife.\" \n\n\"Oh my God,\" Alex whispered against his lips. \"I love you, with all that I am!\" She clutched him and he held her tightly. He could tell by the way she was holding him that she didn't want this to be a quick hug. So he held her there, in the street, with the passing cars buzzing behind him. \n\n\"Sir,\" she whispered into his neck. \n\n\"Yes Little One?\" \n\n\"I need a session, in the worst way!\" she said, her voice trembling. \n\n\"I'll see you at the condo then,\" he smiled releasing her and opening her door. She kissed his lips before getting in. \n\nAlex tried to obey the posted speed limit, but her desire kept telling her it didn't matter, she just needed to get home. Home for a full release! A chance to serve her Dom, to please him and be pleased in the process. A chance to release all of the pent up desire that had been simmering just below the surface of her skin. Now she was raging with it, seeing Mike tied up brought a flood of memories that caused her to burn from within. \n\nWaiting next to him at the elevator of the lobby had her nearly dripping. The things she wanted done to her, knowing full well none of it would compare to what he actually was going to do to her. The ding of the door had her nearly sprinting through, he ambled in calmly and pushed the button for their floor. \n\n\"Suck my cock,\" he demanded as soon as the door closed behind him. She looked to him for a split second. \"I think we should be well beyond the hesitation point.\" He growled. \n\nShe dropped to her knees and yanked his zipper down pulling him out, he was already hard and that told her he was just as excited as she was. She wasted no time burying her nose into his neatly trimmed pubes, holding him deep within her throat. The feel of him throbbing there had her whimpering. She felt the space between her legs dampen a little with her excitement. \n\nShe rapidly bobbed her head on his steel shaft as the dinging of the floors let her know that they were moving. She let out a soft growl, without even knowing until it filled the elevator, as she brought her hands into play. By the fifth chime the elevator slowed, this was not their floor. That meant someone was getting on with them. \n\nShe looked up to him to see if she was supposed to stop. Her heart beat against her rib cage, part of her wanted to stop as it would quickly be all over the building if someone caught them like this. But a dark part of her wanted to keep going, to let the whole building know what kind of girl she was. She was proud of it! \n\n\"Get up,\" he smiled. She let his cock slowly fall from her mouth as she stood but didn't fully release it until she was fully standing, staying bent over until the last second. Gavin tucked his coat around him hiding his engorged cock from view as Alex carefully wiped the saliva from her lip as her face flushed with heat as an elderly couple that she knew got on. \n\n\"Good morning Alex!\" the woman called out to her. \n\n\"Good morning Harriet,\" Alex smiled. \"George.\" She greeted both. \n\n\"I hear you have a little one in your place now?\" Harriet continued as she moved closer to Alex. \n\n\"Yes,\" Alex smiled. \"My niece Nora, she is staying with us now.\" \n\n\"I heard,\" Harriet said grimly. \"I'm sorry for your loss.\" \n\n\"Thank you,\" Alex said dropping her head. \n\nThe elder couple got off two floors later with a wave, Alex immediately took hold of Gavin's cock in her hand and began to stroke him. \n\n\"Should I continue?\" she asked him. \n\n\"No,\" he told her causing her to frown. \"It will keep until I have no further interruptions.\" \n\n\"Yes sir,\" she smiled. \n\n\"Be ready,\" he warned her. \"I'm am going to use you to the point of exhaustion.\" Alex sucked in a breath and held it. That was exactly what she needed! \n\nThe instant the door was closed to the condo she pulled the wool sweater she was wearing over her head, discarding it to the floor as she walked towards the living room. Gavin followed and admired her from behind. The yoga pants she was wearing clung to her like it was her skin. \n\nHe watched her firm cheeks tighten and loosen with each step, he paused to watch her for a few moments. She stopped and turned her head to look over her shoulder, her auburn hair curled and down to mid shoulder blade. She let a wicked little smile creep across her face as she realized he was staring at her ass. She laughed inwardly. She knew this outfit, in particular the yoga pants, would draw his attention. \n\nEarly on he had ordered her to wear only dresses around him, so he could have full access, he told her that day in the restroom where he fucked her. She also remembered his affinity for yoga pants, being an ass man he enjoyed them. She had purchased several pairs, just for him, to tease. Anytime she wore them she received the same response, the wolf stare as she moved about in them. He never corrected her that she was not in her dress as he had ordered. She figured the pants distracted him from it or became approved clothing once he saw her in them. \n\nShe hooked her thumbs into the waistband of the tight fitting workout pants and slowly pushed them down, bending at the waist as she exposed herself to him in a sultry show. The soft gasp he let slip from his lips let her know she had hit her mark. \n\nShe stepped out of the pants now and stood there waiting for his command. Leaving her head slightly turned she could see him in her periphery. He leaned against the door jamb leading to the living room. His eyes playful as he devoured her from a distance. The time eked by, driving her mad. She wanted him to take her, to let the wolf out. But instead he kept her imprisoned there in the living room, imprisoned with now cell or form of bondage. Unable to turn to go to him, as he hadn't told her to. Unable to touch herself in an attempt to lure him in, as, again, he hadn't told her to. \n\nThis, she found, was the hardest bondage of all. The waiting. Not the ropes he so intricately bound her in, not the soft nylon cuffs he wrapped around her wrists and ankles from time to time. No, this was the bondage that drove her mad with lust. His ability to control his desires to the point of looking placid. The only way you could see his interest in her was in his eyes and the slight smile he wore as he traversed her body with his eyes. Enjoying her body from afar. How did he do that, her mind always screamed. How did he remain so calm when all she could think about was ravaging him if she could? \n\nHer body began to shake, but it wasn't because she was cold. The condo was always warm enough. Her body shook with anticipation. All of the things he had done to her over the nearly two years flooded her mind. She tried to guess what he would do, from time to time, but found that to be an impossibility. It didn't matter, he always had her cumming so hard her legs would shake afterwards for what seemed like an eternity. \n\nHer eyes flutter closed as all the memories of their previous sessions caused her heart to beat against her chest, her breathing to quicken. The warm glow in her nether regions caused her let out a soft sigh. She was getting wet and the man hadn't even moved from the doorway of the living room! \n\n\"What are you thinking?\" he asked her softly, noticing the smile on her beautiful face. \n\n\"I'm getting wet just thinking about what you are going to do to me!\" she told him softly, her voice shaking slightly with the excitement she felt. \"Why is that? Why are you the only man who has made me wet without even touching me?\" \n\n\"That's what a Dom does,\" he smiled. \"I leave you with the knowledge that I can make your body sing. That I can make your body react in ways it never has before.\" \n\nHe finally came to her and put his hands on her and that made her shiver. \n\n\"You also know, that with these hands you will be pleased,\" he said confidently. \"You know what they are capable of.\" She nodded as he ran his fingertips gently over her soft skin. \n\n\"I'm sorry,\" she whispered. \n\n\"For what?\" \n\n\"I guess I don't have the same effect on you,\" she gasped as he ran his fingers around her nipples, causing them to tighten even more. \n\nHe ran his left hand down her arm to her hand and guided it back to his cock which throbbed just below the soft, thin material of his pants. \n\n\"The effect you have on me should not be in doubt,\" he whispered in her ear. The hot breath that escaped his mouth caused a cascade of goose bumps to wash across her torso. \n\n\"Have no fear, Little One,\" he said as he nibbled on the soft, sensitive spot just behind her ear. \"You affect me in ways no one has ever come close to before.\" \n\n\"Thank you, Sir,\" she gasped. \n\nHe turned her and she lowered her eyes with her playful smile. The grip on her arms as he turned her alerted her to his actual desire. Yes, his face was calm, but the grip in his hands was desperate. Desperate to touch her, desperate to have her.  \n\nHe lowered his lips to her and began to kiss her, she reciprocated. \n\n\"No,\" he commanded, as he pulled back from her. \"I'm kissing you.\" \n\n\"Yes Sir,\" she whispered. \n\n\"Be still,\" he told her. \n\n\"Yes Sir,\" she panted. Fuck this bondage was the harshest kind her mind screamed. Fuck, fuck...Fuck! \n\n\"Open your mouth slightly,\" he said. \n\nOnce she had done as instructed he slowly, maddeningly, let his talented tongue graze the inside of her lips, now her body shook to a point it was visible. He was driving her crazy with his pace! Making sure she had no doubts who was the Dom and who was the sub, if there ever was! \n\nShe fought herself to keep from returning his kiss, this was both infuriating and incredibly erotic at the same time. It made her wonder, how did women survive in a vanilla world? She couldn't believe this world wasn't considered the norm instead of the vanilla. Any woman who tasted this, felt this, enjoyed this, could never go back. She knew that way back when she first started this journey, but now, it was irrefutable. \n\n\"Let me have your tongue,\" he said while holding her chin. \n\nShe let her tongue come out of her mouth slowly, he gently let his tongue caress the edges of it. She wanted to tap her feet like a child on Christmas day, because that's what this was. Every time he played with her, it was like Christmas day. \n\nThe pure bliss of enjoyment, with that hope that it would never end. That every day would be exactly like this day. A Bill Murry \"Groundhog Day\" type of life. It was happening to her. Every day she woke up and saw him, either at the table having breakfast, or in the shower. Better yet, when he stood at the mirror and shaved. \n\nShe had gone into the bathroom one morning and found him shaving, it was such a simple act but one that had her mesmerized. The image of his masculinity as he carefully pulled the sharp blade across his white foamed skin. No, no electric razor for him. It was like his lovemaking, slow...drawn out. Done thoroughly. Nothing rushed. She was just enthralled by the simple act of him shaving. \n\nHe gently began to guide her backwards as he teased her with his tongue. He pulled back from her and began to undue his tie. Oh fuck, fuck, fuck! Her mind danced in childish happiness. His smile tipped at the edges as he watched the recognition fill her eyes. \n\nShe moved her hands behind her back obediently without being told. He smiled broader letting her know he was pleased with her already. Staring into her soft blue eyes he saw her desire as he carefully tied her hands behind her back. She wasn't surprised that he didn't need to look. It wasn't an ordinary knot, she knew that, just by the way his hands moved. It was a Gavin knot, intricate and thorough. Tight but not too tight to cut off the circulation. Bound but not harmed. \n\n\"On your knees,\" he commanded. \n\nHis voice changing from gentle and teasing to demanding in the span of three words. She looked up only briefly and saw the wolf stalking behind his eyes. Oh fuck, fuck, fuckity fuck yes! \n\nShe lowered her eyes at the same time that she dropped to her knees. He slowly undid the belt on his pants. She watched through her eyelashes with great interest, but like Gavin normally does, he went slowly to drive her crazy. \n\nSlowly pulling the button apart then lowering the zipper had her smacking her lips slightly without her even realizing it. She wanted what was behind those thin pieces of cloth. The pants fell loosely around his ankles and he stepped out of them. Taking the time to fold them carefully before he walked to the nearby chair and laid them over the back it. \n\nShe watched with her head down, her periphery drinking him in. He stood there next to the chair as he slowly unbuttoned his shirt. Fuck, fuck, fuck! Doesn't he know how bad she needs him already? She gritted her teeth. He knew. The Jedi Master knew all and all of this was to drive her mad! \n\nHe slid his underwear down after carefully unbuttoning and folding his shirt and laying it over his pants. She was unable to stop her head from turning to him now. She wanted to look him over fully, not in her periphery. She wanted the whole picture of his magnificent body. The slightly darkened skin that made it look like he was just from an extended vacation with a tan, even though it was the dead of winter. ",
        "The way his firm, muscled body pulsated with his movements. The way his cock bobbed gently as he moved about. Walking towards her had her head shaking. She had to have him, she wanted to scream at him. Fucking take me already with that fantastic cock! But she knew better. If a demand were to escape her lips right now it would only cause him to delay her release even longer. \n\nHe stood in front of her now, his cock mere inches from her lips. She fought the urge to lower her lips to his head and suckle it. She could see a drop of clear precum had already formed at the slit on the head. She wanted to reach out with her tongue and pull it into her mouth. \n\n\"Open your mouth,\" the wolf demanded. She obeyed. \"Stay still.\" \n\nHe slowly slid his cock into the recesses of her warm mouth, his shaft disappearing into her it as he watched. An erotic scene of her swallowing his cock. Soon he was against the back of her throat with a couple of inches still visible. \n\n\"I'm going to fuck your mouth, Little One,\" he informed her as he held himself still, his cock pressing the back of her throat. Merry fucking Christmas to me, she screamed in her head. \"Get ready.\" \n\nHow could she let him know, she had been ready for days, if not weeks. Hell months! He started off with a slow thrust, his cock sliding out of her mouth only to push back in hitting the back of her throat. Gently he did this, but she could tell he was only going slow to allow her adjust. It wouldn't stay like this, no, his eyes told her this was not going to stay gentle. \n\nShe worked to relax her throat so that she could take him deeper into her mouth. When he was finally able to slide his cock until it disappeared from view he brought his hands to the sides of her head and held her there. His cock down her throat, past her gag reflex. Her nose against him. \n\nHe held himself there, she lost track of her technique as she felt the gentle throb of his cock and forgot to breathe. Soon her lungs burned and she began to struggle. He pulled out at the last minute and she gasped for air. She was so caught up in the moment she forgot to breathe! \n\nHis hands tightened in her soft locks. As he began to pull her head into him as he drove his hips forward, picking up speed as he went. He pulled out from time to time to let her gasp for air. He was just out of her long enough for her to pull in a breath. \n\nNow he was fucking her mouth hard, she held her mouth open as best she could, the soft gagging sounds slipping out as the head of his cock hammered the back of her throat. He continued to increase the speed of his thrusts until he was pulling her hair tightly as he thrust his hips forward, bouncing her nose off his groin in the process. \n\nOver and over he did this, fucking her mouth while she gagged on his depth as it was brutal and harsh, keeping her from concentrating on keeping her throat relaxed. But she could tell the gagging sounds she was making was turning him on even more. The soft guttural growl he emitted let her know so. So she didn't bother trying to reclaim the technique, instead letting him choke her slightly with his cock. She knew she was never in danger...ever. \n\nA soft line of saliva began to form in her mouth and she wanted to swallow it but she never had time, by the time he pulled his rock hard cock out of her mouth the only thought she had was sucking in a deep breath, but as soon as the breath was taken, his cock was back, hammering at her. The saliva had no choice but to dribble out of her mouth, falling in a long strand until the force of his thrust caused it to fall to her chest. \n\nSoon his cock was coated in her thick saliva, glistening with it. Her eyes began watering from all her gagging causing her mascara to run a bit. But she didn't care, she loved this! This forceful taking of her. This using her for his pleasure. That's what he was doing. Yes, she enjoyed sucking his cock, but this wasn't sucking his cock. He was fucking her mouth like a man who was using her as a whore. In this moment, she was the whore...and she loved it. As contrary to her personality as that was. It turned her on in a way she didn't think she would ever enjoy, but she did enjoy this. His taking her. Not making love. Fucking. There were definitely two different types of sex. Making love and fucking. \n\nMaking love usually employed a softer technique, one suited that both would enjoy and hopefully cum at the same time. Gentleness, passionate for sure, but not to be confused with fucking. Fucking was hard, animalistic...raw. Gavin did both and he seemed to know exactly which one she needed and gave it to her. Like now, if he made love to her it would be great. But she needed to be fucked! \n\nAlexandria enjoyed being used solely for his pleasure. She would look up at him and seen the utter satisfaction on his face. That look he had, brought her immense pleasure. She loved taking him to the edges of the Nirvana he took her to so regularly. \n\nThere were many nights after he had pleased her into multiple, mind numbing orgasms that she thought this relationship was one sided, definitely tilted in her favor. How many women could boast that? There were a lot of women she knew who never achieved orgasm unless they were doing it themselves. Their man never lasting long enough to get them there. \n\nFor her, there were many nights that he played with her to the point of orgasmic exhaustion. He would then pull her gently into their safe position, with her head resting softly on his leg as they laid there in bed, her body perpendicular to his as he stroked her back gently as she came down from her high. He would have played with her into multiple orgasms but would never get a release himself. How many women could claim that? Given multiple orgasms but not have to reciprocate for their partner? \n\nHe would never bring it up that he hadn't cum. She knew he didn't care about that. She knew he was pleased just to be pleasing her. It took months for her to stop feeling guilty about it. She just couldn't fathom how this man took more enjoyment out of making her cum than cumming himself. But he did. \n\nBut now he was totally pleasing himself, using her for that purpose. He wasn't worried about pleasing her at this moment. He was just pleasing himself, using her for that purpose, and she loved it! \n\nHe drove deep down her throat, which was now burning from his abuse. He held himself there until her head began to struggle slightly as her breath was kept from her longer than expected. Her body began to rebel but he finally released her and withdrew from her mouth. She sucked in a breath and panted as he held his cock in his hand. \n\nAfter a few moments she lifted her head and readied herself for his cock to return to her mouth but instead he lifted her to her feet and spun her around, pushing her forcefully over the arm of the couch. \n\nHer face crashed into the soft cushions while her feet lifted slightly off the floor, her legs barely long enough to reach the floor while she was bent over the arm, her toes the only part able to maintain contact with the carpeting. She felt his hands move over her, down her lower back across the skin of her ass. He pulled her cheeks apart to reveal her to him completely. Her sex glistening with her excitement. A small trail of which was down her inner thigh. \n\nSoon his tongue was deep within her ass, no warning, no gentleness. Much like he had fucked her mouth, now his tongue fucked her ass. Deep and forceful it was. Causing her to squeak out her excitement. He pulled his tongue out and began to nibble with his teeth the soft skin of her ass. Tasting her flesh that he enjoyed so much. \n\nHe suckled her muscular ass, pulling the skin into his mouth to leave his mark of ownership. One that her gasping in glee. Once his mark was on her he dove his tongue into her sex, pulling her excitement into his mouth with his cupped tongue. She whimpered and wiggled her hips with each intrusion. Hoping to pull him deeper into her. \n\nHis nose buried into the crack of her ass as he would move from her sex to her anus, before going back again. He stood behind her and to the side so he could penetrate her with his fingers. First one, then two. Thrusting them in her, causing her body to rock on the arm of the couch with his force. Slowly at first, but then quickening. Soon his hand was fucking her like his cock had been fucking her mouth. Forcefully and with utter abandon. \n\nHer first orgasm sprung on her, the excitement of being used. The knowledge that he was using her for his pleasure. The knowledge that he was going to make her cum and it wouldn't be a \"lonely\" number. \n\n\"May I cum Sir?\" her voice pleaded. She hoped he wouldn't say no, not with her orgasm already on the way and running from her stomach to her sex and soon to be gushing out and down her legs. The speed and surprise of her impending orgasm had her doubting she could stop it if he denied her permission. \n\n\"Yes, Beautiful, cum for me!\" he whispered and she was giddy. Her orgasm took hold of her body and caused it to stiffen there, in a bent arch, over the arm of the couch. His hand continued to pound however. \n\n\"Fuck!\" she screamed out into the cushions as her cum erupted from her. Her toes curled up on her feet and now she wasn't touching the floor at all anymore. She felt her orgasm squirt from her body with a power and force that coated her thighs and she heard it hit the couch and floor beneath her. \n\n\"Oh my God Sir! I'm sorry!\" she called out as she flushed with both the release and the embarrassment of cumming on the arm of the couch and the floor. The sudden and extensive force of her squirt had caught her off guard. \"The couch!\" \n\n\"Fuck the couch,\" he growled. \"I want your fucking cum to gush from you until you can't walk anymore!\" \n\nHis hand never slowed as he said this, her eyes rolled back into her head as she exploded again, not as hard as the first but still enough for her to know that the arm of the couch was going to be soaked through with her cum. \n\nNow her words of apology were indistinguishable. She was babbling. Her orgasm stealing her ability to speak. Soon his fingers were gone from her and she gasped at the sudden emptiness. But it was only temporary as he rammed his cock home in home deep, hard thrust. His balls slapping against her clit forcefully. \n\n\"Holy fuck!\" she screamed out. \"Fuck me Sir! Fuck me!\" \n\nHe gripped the tie that bound her hands and used it to pull her back into him. His groin slapping against her ass as he pummeled her drenched sex from behind. The sloppy sound of their fucking filling the room with the smell of sex. The sound of his groin slapping her backside reminiscent of a spanking. \n\n\"Fuck! I'm cumming again!\" she called out. \n\nThe soft gush of her orgasm blocked by his cock as it continued to piston in and out of her, caused his cock to coat with it. After she fell from her latest Nirvana she felt him pull her ass cheeks apart. Before she realized he was there he was already buried in her ass. \n\nShe yelped out a yip of pain but clamped her lips shut immediately. She would not ruin the moment, no, the wolf would not be deterred by her. \n\n\"That's it Sir! Fuck my ass!\" she gritted through clenched teeth. \"Take me! Fuck me!\" The words spurred him on and made him pound her ass with his cock causing shooting pains to radiate through her with each thrust. \n\nShe felt the drip of sweat from him as he pounded her from behind, her ass screaming with white hot pain. It wasn't like the first time she had been taken in the ass. The preparation she had gone through for this. The slow, careful sessions of his cock for the first few times. That first on the island, all the way through his fucking her ass in the hotel after asking her to marry him. \n\nNo, this wasn't gentle. He was fucking her ass hard, like the night she watched him with Elizabeth. Elizabeth begging him to fuck her harder, even though her face registered some discomfort. He had warned her it might not ever be pain free. Her anus wasn't made for sex. Now with him ravaging her, she understood, but she didn't care. The only thought she had was the knowledge he was going to cum as hard as she just did. That was her only concern. \n\n\"Fuck me harder Sir!\" she urged through her teeth. \"Take your sub's ass and make her scream!\" Gavin obliged her, he found a little more force making her call out into the couch, not in pain but enjoyment. She had him. The Dom so in control was now suddenly under her control! \n\n\"Cum for me Sir, please fuck my ass until you cum!\" she cheered. \n\nHe pulled out suddenly and yanked on the tie around her wrists pulling her from the couch and she fell to the floor. She instantly bounced up to her knees and waited with her mouth open, much like Elizabeth had done that first night together. \n\nHe fisted his cock with his hand, the first eruption from his cock shot across her face and landed in her hair, the second firmly lodging in her eye causing it to burn as she snapped them closed. The next shot hit her mouth, as did the two after that. She carefully opened the eye not covered in cum and watched him, his face contorted with the power of his orgasm, his legs shaking as he came. His fist pumping furiously as he forced the cum to explode from the tip of his steely cock. \n\nHe finally relaxed his leg muscles and rocked back, his eyes opening slowly as she sat there. His cum in her hair, part in her eye, some in her mouth, the balance on her face and breasts. It was an enormous amount of cum and she was thrilled to have elicited it from him. \n\nShe left the cum in her mouth so he could see it pool gently on her tongue. As he watched her, she seductively closed her mouth to swallow it, only to open it to show it was now gone. He grinned at her and lowered his lips to hers and kissed her gently. \n\n\"Come with me Little One,\" he whispered. \"Time to play.\" \n\nShe lifted her eyebrows as he carefully wiped her eye free of cum with his finger. \n\n\"Oh no Little One,\" he smiled when he saw her questioning. \"That was just to take the edge off...I told you I was going to leave you exhausted. I am just getting warmed up!\" \n\nHe helped her to her feet, but her legs were already jelly like so he scooped her up and carried her towards the bedroom. She laid her head down on his shoulder and smiled into his neck. The wolf protecting and caring for his kitten. \n\n***"
    ],
    "authorname": "CJT",
    "tags": [
        "oral",
        "anal",
        "gagging",
        "facial",
        "swallowing",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-42"
}