{
    "title": "The Sultanah Ch. 04",
    "pages": [
        "Dear Reader, thank you so much for reading this story. It has taken nearly a year of my writing life to get the whole thing finished. This is Chapter 4 of 14 chapters and the total is over 250,000 words. It is my Dirk Diggler/Jack Horner act of hubris: my attempt to write an erotic adventure story that pulls you in with a story you want to read, even when there isn't any sex going on (though there is a lot of sex. Crazy, weird, fun sex). It is the most ambitious piece of erotic fiction I have ever attempted. So I hope you enjoy it.\n\nWith that said, this book is not for everyone. It will be too long for many people (no shame in that, it is a big time investment). Some of the sex scenes are intense and include themes like hermaphroditism, non-consensual activity, incest, etc. For some people, that will likely be the appeal. In fact, while this story is definitely not for everyone, I think for a select group of people this story will essentially have everything you could ever ask for. So if that is you, congratulations, you found that thing you have been searching for. You can skip ahead to the sex and I won't be offended, but I think this story is more than the sum of its parts. If you read this whole story, you will not be disappointed. \n\nIn Chapter 1, our main character, Princess Varis, finds that her father has died and that, by virtue of the fact that she is a hermaphrodite and can father a child, she is now the Sultanah. In Chapter 2, Varis unearthed a conspiracy to destroy her Empire led by Rahip, the Cardinal of the \"New Religion\" and later she received her coronation. In Chapter 3, Varis humiliated the New Religion and raised the morale of her besieged people.\n\nSome recurring characters you might want by name are Varis (the Sultanah and narrator), Cin (the head priestess of Gunes), Arkadas (Varis' friend and servant), Kardes (Varis' older sister), Nislani (Varis' younger sister), Rahip (a Cardinal of the 'new religion'), Duke Hain (an important lord opposing Varis), Lord Sadik (a minor lord who has spoken in support of Varis); King Sican (the leader of Dusman, a rival kingdom), Prince Lider (Sican's son); King K\u00f6yl\u00fc (the leader of Temsilci, a rival kingdom); Agiz and Got (Subordinate Sun Priestesses); Saygili (Varis' guard); Soyguncu (a pickpocket and spy for Varis). Further, Gunes is the name of the Sun God, Tanri is the name of the 'new god.' The city where the story is set is \u015eehir in the country of \u00dclke and the Empire of B\u00fct\u00fcn D\u00fcnya. If you need more...reread the earlier chapters.\n\nPlease, please, please, please, please tell me what you think after you read this. I put an embarrassing amount of work into this and I want to know what you think. Especially if it is good things.\n\n*****\n\nChapter 4: Lifting Siege and Spirit\n\n\"I am not saying that I don't understand the plan,\" Arkadas said, \"I am saying I don't understand why you need to be involved. You are Sultanah, tell someone else to do it.\" With that, she flung herself down onto my chair. \n\n\"Can you explain this to her? I feel like I have explained it a thousand times to everyone who should know about it,\" I said to Kardes. The three of us were standing on the balcony outside of my chambers. The mid-afternoon sun poured down on us at our perch high above the city. As I finished speaking, I walked over toward the handrail around the edge of the balcony. I felt butterflies in my stomach and tasted blood in the back of my throat, however dismissive I was of Arkadas concerns when I spoke, I shared them.\n\nI looked down over the edge of my balcony and could see, hung on the side of the palace, something that calmed me and slowed my pulse. The large red orb I now called the \"Stone of Gunes\" but which the people of the city were calling \"the Sultanah's Stone.\" After my adventure with Soyguncu, Tanri's Bishop in \u015eehir had declared that evil forces, led by the Sultanah, had infected the stone with our malevolent powers. They had cast the stone from their cathedral, hoping (I presumed) that it would shatter on the ground. \n\nInstead the people, fascinated by the remarkable change in color, had carried the stone to my home. I had wasted no time in lifting the great stone to one of the highest points on the Palace, so that it could be seen anywhere in \u015eehir. As I gazed that the stone again, I realized it truly was a remarkable transformation. The stone had not been scorched red. It had lost of none of its sparkling luster or luminescence. It was simply a deep, beautiful red where it had once been blue. \n\nIn the week since it had changed, my city had gone through a similar transformation. The story of the change in the stone and my role (my mythical rather than actual role, that is) in that change spread through the city quickly. In fact, thinking that I had made some sort of strategic mistake, Tanri's representatives poured through the city explaining the way in which I had maliciously deformed their stone. Unfortunately for them, hearing confirmation from Tanri's priests that Gunes had performed a miracle, and that I had been involved, backfired spectacularly against the agents of Tanri. Only one of the two gods had made presence known. Long dormant affection for the Empire's true god was ignited like the stone itself. And even as the excitement of the miracle cooled, the hearts of the Empire's people remained red and passionate for Gunes.\n\nJust four days after the miracle, Cin held her weekly prayer services outside of her shrine. To her (and my) surprise, it seemed the entire city had turned out to pay their respects to a God who had shown herself when her people were at the breaking point. Cin had used the opportunity well. She had preached of the covenant between my house and Gunes, and the historical connection between the Sun God and B\u00fct\u00fcn D\u00fcnya. She made it clear that Gunes and the Empire were one and the same. The God provided protection to the people of the Empire so long as that Empire existed. She urged everyone to resist our enemies and promised that loyalty to God would deliver us victory. It should go without saying that she stressed that failure to hold our city would result in death.\n\nThe people, so deep into the terrible siege, and for so long without hope, became forged again in steel. Having seen or heard of a true miracle and then being reminded of their former glory seemed to change them. Almost everyone in the city ceased to attend services at Tanri's churches. People actively rejected the prayers calling for capitulation to our enemies. I had robbed the churches of their symbols and, as a result, exposed their lack of substance. All they had was empty idols and now the people knew it. Tanril priests and virgins no longer felt safe outside of their cathedral. I did not mourn for them, I was certain they would find other activities to occupy their time within their walls.\n\nIn a single symbolic gesture, without any appreciable violence, I had managed to sap the will of my internal enemies. The people of \u015eehir were as united as I could ever remember them. However, my triumph had done nothing to loosen the grip around my city's neck. The people were more defiant than they had been before, but there each day there was less food in the city. I steeled my people so that only starvation could cause them to yield, but starvation was not far off.\n\nBut the experience at the Tanril Cathedral had opened my eyes just as it had opened the eyes of my people. I had been thinking about lifting the siege in all of the wrong ways. Just as I could not forcibly remove all of the followers of Tanri from my city, I could not forcibly remove the enemy at my gates. But there was more than one way to defeat an enemy. And so I had devised a plan. I had told no one except for my Inner Council. I knew I could not trust all, if any, of the Lords. Cin and the priestesses had very much been in favor of the plan. Kardes had agreed, though with less enthusiasm. Arkadas, my trusted friend, was the only one opposed. In fact, she opposed it so vehemently that we were still arguing about it on my balcony an hour after the meeting had adjourned. I had already resolved to act, and sought only to advise the Inner Council of my plan. Which was why I saw no further benefit in reasoning with Arkadas and gave that task to Kardes.\n\n\"And you! You are her sister, I cannot believe you are not standing here next to me making the same arguments I am making!\" Arkadas shot before Kardes even had a chance to speak, \"If you loved her, like I love her, you would never let her do something so foolish.\" Kardes recoiled as if slapped.\n\n\"Do not speak to me in such a way! I love my sister. Her plan is not foolish, it is desperate. Because we are desperate,\" Kardes shot back quickly, ratcheting up her approval of my plan to match Arkadas vehemence. \n\n\"I am more of a sister to her than you have ever been,\" Arkadas said, tears welling in her eyes now, \"She is going merrily to her death and you cheer her on!\" I felt my heart seize as Arkadas spoke. She was like a sister to me and I certainly knew her better than I knew my older sister. But I was afraid her words would hurt Kardes, who had been standing by my side steadfastly since I had first been declared Sultanah. Kardes responded to Arkadas coolly, but without malice.\n\n\"I will ignore that previous comment and, once again, explain the situation to you. We are in a perilous position. We are extremely low on food and every day we are besieged increases the chances that we are overrun by our enemies. There is no time to waste, something must be done immediately...\"\n\n\"And I agree, I just don't understand why Varis...the Sultanah must place herself in danger,\" Kardes interrupted.\n\n\"She must place herself in danger because she sits perilously on her throne! She must risk her life to save her life. If she sends others in her place she may lift the siege. But she will receive no credit. Lords will fall all over themselves to take credit for the action. The Sultanah will be one shrill voice amongst many clamoring for approval. When the immediate annihilation of the Empire is no longer a threat, the seat my sister sits upon becomes more attractive. Suddenly she is not a place holder in the last moments before the Empire dies, but instead the occupant of a potentially lucrative position. How long does Duke Hain or one of the other powerful lords who does not love my sister wait before deposing her in order to 'protect the Empire and provide a strong hand?' She is only a woman, after all, in the eyes of many. \n\n\"But so long as Varis brings miracles and Varis leads the efforts of the Empire she maintains the support of the people, she shores up the backing of her loyal barons, and she solidifies her position on the throne. As a woman out of her depth on her father's throne my sister is already dead, as the champion of Gunes leading the people of B\u00fct\u00fcn D\u00fcnya against all enemies, she cannot be cast aside. \n\n\"She plans her action to defeat our external enemies and she leads it herself to outflank her internal ones. You don't have to understand all of the politics at play to understand the truth of what I am telling you,\" Kardes concluded. She had far more succinctly explained the situation that I had before. Not for the first time I wondered at the scope of my sister's former role at her former father-in-law's court. Regardless, I nodded as she spoke. \n\nI had been coming to the realization that lifting the siege could be perilous for me for some time. I saw in the way some lords, most Collaborationists, staunchly refused to abandon Tanri even as the people flocked to my side. I could not think in simply two dimensions, I had to consider all risks at all times and weigh them against one another. And I knew that I must always be out front of my people, so that those who would hold me back could never catch me.\n\n\"What good is any of that if she is dead?\" Arkadas asked, and it seemed that all of the sophisticated arguments that my sister had offered were in vain. Arkadas did not understand.\n\n\"Its...\" Kardes began again, sighing heavily. I pushed myself away from the balcony and turned towards my sister and my slave. I shook my head at my sister.\n\n\"Kardes, I thank you for your assistance, but I believe I need to speak separately with Arkadas,\" I said. Kardes opened her mouth as if she were going to speak. She looked over at Arkadas, who was staring blankly at her feet, smiled and me and nodded.\n\n\"Your grace,\" she said and turned to walk away.\n\n\"Sister,\" I said to indicate that I did not share Arkadas view of her treachery, \"Please find me tonight when the deed is done.\"\n\n\"Of course,\" Kardes said and turned and walked away. Then it was only Arkadas and me on the balcony. We stood silently for a while as the breeze cooled us slightly. Finally, I walked across the balcony and sat on the chair next to my friend. \n\n\"To think I ever doubted your loyalty,\" I said and smiled. Arkadas did not return the smile. She turned and looked at me. Her pale white skin looked even lighter than usual and her eyes looked wide and nervous. I knew what she was afraid of. Arkadas was afraid that I was going to die. I was afraid too. But I understood that I could die if I acted and I could die if I did not. But Arkadas did not want to recognize that reality. I loved her for it, but I had to do what was necessary. I just didn't want to leave things like this before I left, I wanted her to understand. Just in case...\n\n\"It was an awful thing I said,\" Arkadas whispered, \"To your sister. I will apologize the next time I see her.\" Arkadas did not meet my eyes as she spoke and her words came in a mumbled sigh. I did not think she actually believed what she said, it was what she thought I wanted to hear. I shook my head.\n\n\"Do not be anxious, I might not know Kardes as well as I know you, but she does not strike me as one who takes offense easily in situations such as this. She respects your concern for me. Besides, she is very wise in the ways of politics and would not make an enemy needlessly.\"\n\n\"She does understand politics, I will give her that. Very sophisticated,\" Arkadas said slowly, then finally, she raised her head and looked directly into my eyes, \"But since when have you understood politics? Since when are sophisticated?\" she asked accusatorily. I furrowed my brow, I had not expected that.\n\n\"What do you...\" I began, but Arkadas cut me off.\n\n\"All of the sudden you are full of plans and intrigue. You are running all over the city getting into trouble. But do you really know what you are doing? Or are you just taking crazy risks and getting lucky? Because if you are just lucky, that will run out eventually. Sometime, you will take a stupid risk and...\" The tears returned to Arkadas eyes and she shook her head bitterly. \"You were not trained for this as your brothers were and you have no natural inclination towards politics or war, as your sister seems to possess. You had no interest in these matters before. I just... I worry for you.\" With that, Arkadas gave a shuddering sigh.\n\n\"I was thrown into this and am doing my best to protect my people...\" I said, confused by her words. What did she mean about politics? What choice did I have?\n\n\"Your people?\" she asked, \"Where did this concern come from? You have always been just a silly girl worried about marriage and hating your little sister. Now you are concerned about the fate of an Empire...\"\n\n\"Are you saying that in my position I should still be worried about petty fights with Nislani? That I can afford to be a silly girl?\" I thought of my conversation several weeks earlier with Kardes outside my quarters, when I snapped at Nislani. I felt embarrassment again at my childishness. How did Arkadas not understand what I had learned weeks earlier?\n\n\"No...I am saying you still are that silly girl! You are pretending otherwise because you are too young to know the difference. You are doing what Cin wants or what your sister wants but you don't seem to realize that you can be killed. And it has always been my job to protect you and if no one else will, then I must!\" I took a deep breath, trying to slow the conversation. Arkadas was leaning in toward me earnestly. Her eyes were aflame with passion and I was touched by her concern. But I did not think she understood the enormity of the situation. She could not protect me, even for a moment.\n\n\"Tell me, as you have in the past, about when I learned to swim,\" I said slowly after a moment. Arkadas' eyes narrowed. She seemed thrown by my request.\n\n\"To what end?\"\n\n\"Indulge me,\" I replied. Arkadas sighed deeply and shook her head.\n\n\"We do not have time...\"\n\n\"I am the Sultanah, I decide what we have time for,\" I said gently. I did not actually push my authority; I just let her know it existed. She bit her tongue and then proceeded.\n\n\"I had been trying to get you go down to the spot on the Kuzey River where the rocks form a natural pool,\" she said hurriedly, as though she wanted to finish the story as quickly as possible, \"That is where I, and your all of your brothers and sisters, learned to swim. You were not afraid of swimming, so much as totally disinterested. I would take you down and you would sit on the bank and throw rocks at the birds. I threw you in more than once and you flailed around until I rescued you. You refused to even put your feet down when the water was shallow in for standing. I tried for two weeks and then gave up. \n\n\"About a month later, we were crossing the bridge over the G\u00fcney River, to see the traveling market. You were holding your new kitten in your arms and looked over the side. Your cat slipped out of your arms. Without a word you hurdled over the side of the bridge. I was terrified, it happened so fast. You plunged the ten feet into the water, much rougher than the pool on the Kuzey, and grabbed your kitten (who could swim just fine). Then, as if you'd been born knowing how to swim, you paddled over to the shore where the market was being held and lay down on the grass to dry while you waited for me.\" She said. Despite her anger, a smile spread across her face when she told the story. It was one of her favorites. She used it to describe my impetuousness, my willfulness, and my luck. I sat for a moment while she savored the memory.\n\n\"What does that tell you?\" I asked finally. She looked at me and her smile faded.\n\n\"That you are stupid and childish and only luck has kept you alive this long,\" she said.\n\n\"I could not swim at all, I flailed in shallow water. Then, all of the sudden, I could swim. Does that mean nothing else to you?\" I asked.\n\n\"I don't understand what you are getting at Varis... This is...\"\n\n\"It says that I am only capable of doing something when I have to. I might be disinterested or completely oblivious, but when necessity arises, I am capable. You know that is the case, you can probably think of a dozen other examples,\" I said. I saw recognition in Arkadas' eyes. And a refusal to accept that recognition.\n\n\"I remember as many failures as successes,\" she said, her voice catching in her throat. As she spoke, I stood up from my chair and walked so that I was standing directly in front of Arkadas. She looked up from her from her chair. I dropped to my knees in front of her. Her hands were clasped tightly in her lap and I set my hands on top of them, gently. \n\n\"I cannot explain the changes that have come over me in recent weeks. All I can say is that I was thrown into the water. Swimming is risky and I may die, but if I fail to swim there is no doubt that I will die. And, for what it is worth, I do not praise Gunes simply because Cin is a powerful ally. Something strange has happened to me. I feel...something inside of me that was not there before. I do not know, but I feel that it heightens my intuitions...It tells me which risks to take and which to avoid.\" \n\n\"You are comparing things that are not alike. This is...different. This isn't childhood games. I was there to make sure you clothes got dry and your hair straightened so your parents did not realize you had jumped in the river. If you mess up now...I cannot clean up after you. You will die.\" ",
        "\"It isn't different,\" I said. I began to explain further what I meant when I saw something in Arkadas eyes. I heard something in the way she protested that I had not noticed before. I stopped speaking for a moment, and looked at my friend closely. She was staring at me, concern emanating from her body like a warm glow. I felt my nerves for the evening's planned events soften slightly. I felt a warmth wash over me.\n\n\"I still need you Arkadas,\" I said slowly. Her body stiffened and she looked at me with a new look, embarrassed or ashamed. I could not tell. But I knew I was on the right track.\n\n\"I...\" she began, but I cut her off.\n\n\"You are not concerned that I am still a silly girl, running headlong into danger. You see the changes that responsibility has wrought. I do not mean to imply that your concern for my safety is not genuine. But...you are concerned about something...more important. You are afraid I have lost myself in this role. In becoming the Sultanah. You are afraid I have outgrown you,\" I said. As I spoke each word I could see it burrow into Arkadas flesh. I had hit upon her anxiety.\n\n\"It has all happened so fast...\" was all she could manage.\n\n\"I am Sultanah now, and I take risks and must consider what is right for all of my people. And they are my people. This role has been thrust upon me, but I have embraced it. I want to lift this siege and I want to secure my place on the throne. But I have not changed the person that I have always been. I must appear one way in front of the world. I must be bold and I must be certain. I must be the Sultanah. But I am still your friend Varis. I still desire to mock Lord Yanl\u0131\u015f Telaffuz's lisp when he speaks at meetings and I still daydream about putting Nislani's head in the privy,\" I said. Arkadas smiled around her tears.\n\n\"I do not mean to be petty. It is not just that I am afraid you have outgrown me...It is that if you have outgrown me than I can no longer protect you,\" she said. And I knew from the way she spoke that she was telling the truth. This was the root of her concern.\n\n\"You protect me still,\" I responded, \"You protect that part of me that is not Sultanah. I cannot be that person with the Lords, or the Commons, or Cin, or even Kardes. You are the only person who knows who I really am. Who can know that...while I have no choice and must act boldly...that I am scared for what I must do tonight,\" I said. I felt my voice crack as I spoke. I had not intended to be so honest. But Arkadas had always been the person to whom I confessed my hopes and fears. I could no more hold back my words than I could renounce my throne.\n\nI felt Arkadas hands soften in her lap. She slipped them out from under my fingers. In a moment, I felt her soft palms slide against my cheeks. She lifted my head up slowly. I could feel tears in my eyes now. Both from fear, and for the love I bore my closest friend. She was looking at me now, her tears no longer streaming. Her eyes looked soft and she nodded slowly.\n\n\"Do not fear for tonight. I have always worried more than you, as it was my job. But you have always been extremely lucky. And wise,\" Arkadas said. I felt some of my anxiety melting away. As had always been the case, Arkadas' words always found a way to sooth me. And if she believed I would succeed, there was no doubt that she was right.\n\n\"I love you, Arkadas,\" I said, as I had told her many times. \n\n\"I love you too. I love you because you are my Sultanah and I am bound by honor to do so,\" Arkadas said, \"But I love you more because you are my friend. It will be my honor to remain your friend, at your side.\" With that, she lifted my head slightly and bent at her back in the chair. I closed my eyes and leaned toward her. For a moment, I felt nothing. Then, I felt Arkadas soft lips press, slightly wet, against my own. I could smell the familiar scent of her skin as she pulled closely. Every so slightly, I could taste the sweetness of her lips. We had kissed many times as friends. A casual greeting or as a goodbye. This kiss needed not be anything more. \n\nBut as I pulled away from Arkadas I realized I was thinking about the one way in which our relationship had changed since the night my father died. That morning, down in the cellar with Arkadas and Cin. The act we had committed out of necessity. As my eyes opened after our chaste, friendly kiss, I noticed a sparkle in Arkadas eye as well. Something had felt different to her as well. I could see her lips curling slightly into a smile. I could feel the vibrations of her energy pulsing from her body.\n\nAs is the way with friends, we both knew what the other felt, what the other needed. Arkadas needed to feel my affection for her, to know my need for her. I needed comfort in the face of my coming danger (comfort only Arkadas, of all the people on earth could provide) and to express my love for my friend. And, I suppose, we both still needed to know what had happened between us that morning several weeks earlier with Cin. Now, alone, we needed to explore what it meant as two friends. That morning, I had been thrown into the deep waters of my sexuality, and once again I was embracing the opportunity to swim.\n\nRather than pulling away, I leaned forward once again. I felt a cautious breath split Arkadas lips, but her eyes were aflame. In a moment, I felt my lips press once again into hers. I moved quickly and I kissed her with a fierceness I had not expected in myself. I felt the soft flesh of her lips melt into mine and I felt my tongue slip from my mouth and quickly slide across her teeth. The passion was not mine alone. As my mouth opened wider, I could feel Arkadas body moving as well, like a taut spring finally released. Her hands reached up quickly and I felt her right hand caress my cheek while her left slinked around to the back of my head and pulled me in closer to her. Her body was trembling with excitement. I felt my tongue slip more deeply into Arkadas mouth. Her teeth gave way and I felt my tongue press into hers. Her tongue felt rough and tasted of the wine she had drunk at your meeting. I lapped at it, tasting her primal flavor. \n\nIt should have felt strange, to fall into this so quickly. Minutes earlier we had been fighting. We had not discussed our earlier experience in any way. But it felt natural now; it felt like it had to happen. Moreover, as my tongue probed Arkadas mouth, and as her tongue pushed hard into my teeth and lapped at the roof of my mouth, I felt the tension and nerves I had been feeling for the evening's adventure fading. I could feel Arkadas relaxing as well. And I could feel the distance that had grown between us shrinking.\n\nIn fact, the physical distance, as well as the emotional distance, soon disappeared entirely. I was on my knees on the balcony floor and Arkadas was sitting in the slightly reclined chair. I was leaning against her and I could feel her knees trembling. Finally, they simply gave way and Arkadas legs spread. I fell forward. For a moment, I managed to hold our kiss, but I was off balance. Soon I pitched forward between Arkadas' legs. Her dress rode up her hips as her legs grew wider apart. My head landed on Arkadas breasts, my breasts against her belly, and my stomach between her legs. I let out a little yip as I fell. I giggled as I came to rest against Arkadas body. I looked up at her and she was smiling down at me and laughing.\n\n\"I apologize for the slip,\" she said, her voice sounding husky, sexy. I felt my cheek pressing against Arkadas' breast. Through the thin, dark fabric of her form-fitting dress I could almost feel the smoothness of her pale skin. I could feel her hardened nipple as it pressed against my cheek. Her body felt warm and I could feel her chest riding and falling sensuously as she breathed.\n\n\"No need to apologize,\" I cooed back. I could feel her body tremble as the breath from my words skittered across her skin. She moaned slightly. I didn't want to keep her waiting any longer.\n\nMy face was pressed against the soft, inviting flesh of Arkadas' left breast. I was facing towards the middle of her body and I could see her other large breasts in front of me. Her right nipple was standing out hard through the sheer fabric of her dress. Her skin looked taut and youthful through the curves in the fabric. I quickly lifted my left hand up towards Arkadas chest. I glanced up again at her face and she was staring at my hand intently.\n\nI brought my hand down slowly, pointing my fingers towards Arkadas chest. After a moment, I felt the tip of my index finger as it pressed gently against Arkadas nipple. I heard Arkadas take in a breath quickly. Her nipple felt hard but smooth through her dress against my finger. For a moment I rotating my finger around on Arkadas nipple gently, just feeling it press against me and feeling the denseness of it with my finger. Arkadas moaned quietly and writhed slightly in her chair. \n\nI pushed down a little harder with my finger and felt my nail sinking into Arkadas flesh. She moaned slightly louder now. I turned and watched my hand as it worked. I slowly lowered my hand. Eventually, it fell flat against the flesh of Arkadas' breast. My hand squeezed around it. If felt dense and hot against my palm. I could still feel her hard nipple against my finger. I squeezed her breast now, savoring the gravity of her flesh.\n\n\"Oh Varis!\" Arkadas said softly now. Her right hand rose up from her side and landed on the back of my left hand. The skin of her palm felt hot and smooth against my skin. I felt her squeezing my hand, encouraging me to knead more forcefully on her breast. I quickly obliged, pulling tighter on her. I felt my breath coming from me raggedly, my head felt lightly, and my limbs felt like they were tingling. Despite the fact that everyone knew of my true nature by that point, I still strapped my cock down (it was unbecoming of a Sultanah for her cock to be visible through her gowns), but I could feel it throbbing against my leg. I no longer worried or cared about what it meant to believe that Arkadas was a beautiful woman. I knew she was and that I wanted to see her body.\n\nIn fact, I wanted to see more of it. Arkadas' hand had slipped off of my own and I could see she was holding on tightly to the arm rests of the chair. I moved my fingers up slightly (and felt Arkadas nipple graze the palm of my hand). I felt my fingertips rub against the taut skin on the top of Arkadas breast. The dress was very low cut and her skin was exposed just a few inches from her nipple. My fingers felt the warmth of her body. For a moment I savored the sensation, but then I hooked my fingers and pulled the pink fabric of Arkadas dress down.\n\nThe dress was, like mine, tight as a second skin (the only difference in our dresses was that her dress was pink as my lady in waiting and mine was red, as the earthly partner of Gunes). The instant I pulled down on the fabric Arkadas' right breast essentially jumped out of the fabric. I felt my air catch in my throat as I gazed at her body. Arkadas skin was so incredibly, ethereally white that it appeared to belong to an angel. The white skin was completely unblemished. Her nipple, the size of a small coin, was pink as a ripe strawberry. I looked up at her briefly and saw her icy blue eyes framed by her wild blonde hair and felt overwhelmed. Never had Arkadas' exotic foreignness seemed so present. Or beautiful. But she looked frantic, like she needed me to do something more.\n\nI turned my face back to Arkadas breast. I pulled the fabric down under the bottom curve of Arkadas' breast and it stayed there, pushing her breast up slightly. Her legs shook around my body as I rolled over slightly. I closed my eyes and opened my mouth as I rolled. I don't know how, but I could sense that I would fall directly where I planned. And I was correct, after a moment, I felt my lips press against the milky white skin of Arkadas' breast. I held my tongue back, but I could feel the air of my breath swirling around Arkadas' nipple. I let my kiss it on her breast for a long moment.\n\n\"Oh suck on it Varis, please!\" Arkadas begged. I let my tongue fall down onto Arkadas' nipple. She groaned loudly and I felt her entire body go tense. Her nipple felt hard and velvety against my rough tongue. She was somehow smoother than the silky fabric of her gown. Her skin tasted slightly salty with an undercurrent of sweetness. I swirled my tongue around her breast, breathing in the delicate scents of her body while I bathed her nipple in my mouth. Arkadas rocked in the chair and I felt her hands rise up to my sides. She was searching frantically for my breasts and occasionally I would feel her fingers as they touched my hip or my back.\n\nI sucked harder on Arkadas' nipple, pulling it hard into my mouth and feeling the smooth skin stretch. Arkadas' moaned and her body shook. I wanted to feel more of her pale skin against my body. With my right hand I reached up towards Arkadas' left breast. While I sucked on her right nipple, I pulled her other breast free. The V-neck of her dress pressed her bare breasts together. I slipped my hand back up over Arkadas' left breast, finding her nipple with my fingers. I rolled it between my fingertips, giving it the same pressure I gave the other with my tongue. I heard Arkadas moaning and could feel her writhing.\n\nI stayed like this for several minutes. I licked and suck and pulled and rubbed at my friend's breasts, feeling the tension rising inside of her. Rising inside of me as well. I knew that I needed something else. The look and feel of her breasts were incredible, but I needed more. \n\nMy eyes, which had been closed while I sucked on my friend's nipple, opened. The evening sun was setting in the west and it cast a bright, red light across the city. It seemed to splash especially against the balcony where Arkadas and I embraced. Arkadas' pale skin looked positively red in the light, like she had transformed with the Stone of Gunes into a symbol for the Goddess. Arkadas femininity seemed heightened by the red color, she seemed to embody the virtues of Gunes with her wide hips and heaving breasts and the lights seemed to make them more pronounced as it faded all of the other colors around her. I felt the sudden urge, the need to worship at the altar of the Goddess' feminine aspects. I knew what I needed to do. \n\nI detached my lips from Arkadas nipple and let my fingers from her breast. I looked up at her briefly. Her eyes were closed and there was a ravenous smile on her face. I felt her body writhing under me, asking for more, for something. I kissed the soft reddened flesh of her breast. I dropped my head slightly and kissed directly below her sweet nipple. Then still lower, kissing the underside of her breast. While I did this, I moved my hands around on Arkadas body, brushing my fingers against her thighs, hips, and ribs.\n\nI continued to kiss down Arkadas body and listened to her gentle moans. I had soon kiss down below her breasts and my lips were now feeling her taut stomach through the sheer fabric of her dress. She seemed to anticipate my kisses and her body pulled away slightly, coyly before my lips pressed against her. I could feel the heat of her body and smell her perfume in the fabric of her dress. Her hands moved up from her side now and I felt them reach up onto my head. I felt Arkadas hands find my braided hair and her fingers pick at the loose knots until my hair hung loose across her breast and stomach.\n\nI felt the hollow of Arkadas bellybutton as I continued to kiss my way down my friend's body. As I reached this point, I let my hands slide down the side of Arkadas body. Her dress was still hiked up slightly toward her thighs from where she had spread her legs. I moved my hands down toward the hemline of her dress. I slipped my fingers up against the smooth skin of Arkadas creamy white thighs and caught the fabric of her dress. I stopped kissing momentarily and pushed up carefully against her stomach. Arkadas knew what I was doing and lifted her hips slightly. I felt my fingers slip around the curve of Arkadas' ass as the dress pushed up over her hips.\n\nIt had been a particularly hot day in the palace and, like her Sultanah, Arkadas had apparently decided against wearing undergarments. I found my face just a few short inches from Arkadas cunny. I gasped at the beauty of her body. When I had been exposed to the Peers after my father's death, rumors had begun to circulate that I was clean shaven (despite the fact that I simply did not grow hair below my eyebrows). I had heard that many women at court had decided that this must be a fashionable look if the Sultanah had chosen it. I saw now that Arkadas had decided to follow this trend. Below her bellybutton was a triangle of smooth, clean shaven skin that reached its apex between her legs. Her skin here was somehow even whiter than that which was exposed, occasionally, to the sun. It was also completely without blemish. Her cunny lips were a light pinkish color and were very small and tight. I could see her clitoris sticking out hard from the top of her cunny. Her inner thighs were slick with her juices and so close, I was overwhelmed by her feminine smell. \n\nI could feel heat emanating from her cunny, like the surface of the sun. I felt my nipples grow hard against the sheer fabric of my dress and goosebumps break out against my skin. In all the years I had known Arkadas, I had known her to be beautiful. But I had never actually dared to imagine what her body looked like, stripped of clothing. Just as she had never seen me naked, I had never seen her. Now I was overwhelmed by her beauty. My mouth watered, I needed to taste her beauty. I started to lean forward, into Arkadas' heat. \n\nAs I closed in I felt a sudden hard tug on the back of my head. A pain from my scalp. I could now tell that Arkadas' fingers were wrapped deeply in my hair. She was pulling me back. I looked up from between her legs. I could see hear breasts heaving, her arms shaking, and her eyes looked pained. I could sense some sort of conflict.\n\n\"Sultanah, please,\" she said, \"Do not!\"\n\n\"You do not desire...\" I began. I looked down and saw that her cunny had grown even slicker and her body was shaking, her hips thrusting up. She clearly desired my touch. Why had she stopped me?\n\n\"You cannot,\" she pleaded. I suddenly realized the cause of her concern. While in the ancient days of B\u00fct\u00fcn D\u00fcnya any sort of sexual relationship was a tribute to Gunes, in recent centuries the more conservative mores of Tanri had taken hold. Sexual relations between those of the same sex were, of course, permitted, though they were never to be spoken of. However, it was absolutely essential that, in the event a master had sex with a slave, the master maintain the dominant position. That meant the master should receive pleasure and give penetration. For a slave to be pleasured by a master would be a scandal. In fact, for a Sultanah to purposefully pleasure anyone in such a manner would be impossible. If anyone were to know what was occurring on the balcony, I would be disgraced. Or I would, had I been a follower of Tanri. But even I had felt the power of those beliefs slipping in recent weeks. I no longer cared about the disgrace of sex. Sex was a sacrament of Gunes, something to be savored whenever it was desired. \n\nI began to speak to Arkadas about these new beliefs. But I looked down once again between Arkadas legs, I felt my mouth grown moister. I desired nothing more than to taste her body and to give pleasure to my friend, and I decided on a different, no less honest, response to her concerns, \"Arkadas, I told you that you know the actual Varis, beyond the Sultanah. On this balcony I am not the Sultanah and you are not a slave. We are friends and equals. I love you Arkadas, and nothing we do in that love can be disgraceful.\"\n\nI did not wait for her to respond. Instead, I quickly dropped my head down between my friend's legs. Any resistance that Arkadas may have tried to give evaporated as my long, free hair cascaded over her legs. I felt my cheeks slide against the soft skin of Arkadas thighs as I moved into position. The wet heat from her cunny very intense and her smell, so musky and feminine, made my head swim.",
        "I stopped just an inch away from Arkadas dripping slit. Both of our bodies were shaking. I looked at the pinkish red gash of her cunny and I could sense the Goddess there. I did not really know what I was doing, but my body seemed to know exactly what was necessary. I closed my eyes and leaned forward slightly. I felt my lips press gently against Arkadas cunny, her lips wetting mine.\n\n\"Oh Gunes!\" Arkadas moaned as she felt me and I smiled. I pressed my lips against her cunny again and felt her trembling all over. My touch seemed to increase Arkadas arousal by an order of magnitude and I felt her juices dripping out of her and coating my chin. Arkadas hands were still in my hair, but her fingers had relaxed now. As I began to gently kiss Arkadas cunny, I felt her fingers rolling gently through my hair.\n\n\"I love you Varis,\" she whispered, \"don't stop.\" I felt a chill run through my body as I heard her words, and I decided to increase the intensity of my actions. I opened my mouth slightly and let my tongue slip out, wet and fat. I pressed it flat against Arkadas cunny, giving a little pressure and letting it sink slightly into her folds. Arkadas taste was like nothing I'd ever experienced before; slightly salty and earthy but with a magical undertone, the flavor of femininity. The taste of Gunes. Arkadas groaned and she put some slight pressure on the back of my head with her palm. \n\nI slowed moved my tongue up through Arkadas soft slit, savoring the flavor as I moved. Arkadas was shaking all over and her legs closed slightly around my head, covering my ears. My tongue reached the apex of Arkadas' cunny and I felt the tip rub against the hard, dense nub of Arkadas' clitoris. Even with sound muffled by Arkadas thighs, I could hear her groan loudly. I smiled and swirled my tongue around on Arkadas' clitoris. Her body rolled and shook as I focused my attention on that spot. My chin pressed against Arkadas wet slit and her smell and flavor overwhelmed my other senses.\n\nFor a long while we continued in that manner. I was on my knees on the floor of the balcony, leaning forward between Arkadas' legs. Arkadas was leaned back on the chair with her hands on my head, her breasts still exposed and her nipples hard. I kept my face between Arkadas legs. I would occasionally kiss Arkadas cunny, her lower lips, and creamy skin that surrounded it, but generally I kept my tongue out of my mouth. I would lap up and down on Arkadas slit, tasting her juices and taking them into my mouth. I would spend a great deal of time with my lips wrapped around her clitoris, sucking gently while my tongue swirled around it. Through it all, Arkadas moaned and shook on the chair, calling out my name and begging me not to stop.\n\nAfter some length of time, the exact extent I could not say, I felt the pressure on my ears lessen and sensed that Arkadas legs had spread wide once again. I could hear her moans more clearly now and could sense her body shaking almost beyond control. It was all I could do to snake my arms around Arkadas thighs and keep my tongue buried inside of her body.\n\n\"Oh fuck Varis, I am going to cum! Don't stop, oh please don't stop!\" she was moaning. I pressed my face even more deeply into Varis' cunny and worked my tongue with greater speed. I heard Arkadas suck in air quickly and then her entire body went rigid. For a moment I almost stopped, but I could feel even greater pressure on the back of my head as Arkadas pushed me inside of her. I worked my tongue quickly and finally I heard Arkadas let out a loud sigh. Her body moved in jerky fashion and I felt hot liquid drip from her cunny against my lips. It was salty and thick and I sucked it into my mouth, swallowing it down quickly.\n\n\"Oh Varis, Oh Varis, Oh Varis,\" Arkadas was essentially chanting now. I flicked my eyes up between Arkadas' ample white breasts and I could see her own eyes were shut and her body was slowly relaxing. I kept my tongue on Arkadas' clit for a few more seconds, but she finally pushed me off as her body had become too sensitive. I smiled at her as her eyes open. She gave me a satisfied grin in response.\n\n\"I have never felt anything like that Sultanah,\" she said after a long pause. I smiled.\n\n\"I should think not, it is unlikely you have been pleasured by many rulers, even if you are more...adventurous than you previously let on,\" I said. Arkadas laughed and she leaned forward in her chair. She kept her legs spread by she leaned deeply over her body so that her breasts were between her knees. Her face was only a few inches from mine. Her hand slipped around the back of my hand under underneath of my chin. \n\nShe clutched my jaw gently and pulled me forward. I closed my eyes as I moved toward my friend and lover. After a moment, I felt my lips press against Arkadas'. Unlike our previous kiss, there was no question about intent. As soon as my lips sunk into the soft flesh of her, Arkadas' mouth sprung open and her tongue pressed against my mouth. I felt the rough flesh of her tongue as it lapped against my lips, tasting her juices. In a moment, my mouth was open as well. I felt the soft, warm, slippery sensation of her tongue in my mouth and my tongue rose to meet hers. I felt her exploring my mouth, tasting the juices that she had deposited there. Our mouths moved together for a long while, until Arkadas had tasted every inch of me and I had explored her tongue in great detail. Finally, she broke our kiss and leaned back full in her chair. \n\n\"There is yet another thing that I had never felt before, but I would like to rectify it now, if we might,\" Arkadas cooed in a sultry voice.\n\n\"As your friend and lover, make a command and I will oblige,\" I said, matching her tone as best I could. My stomach felt light and my legs felt weak. I was overcome with desire and would have complied with any request that allowed me to touch Arkadas further. As I looked at my friend, she spread her legs, much wider than before. Her cunny, slick with saliva and her juices, was exposed to the rapidly cooling evening air.\n\n\"I have never felt a cock between my legs. I would like it now,\" she responded. I felt my head swim and I bit my lip, the slight pain keeping me grounded.\n\n\"The best way to learn how to do something,\" I replied, \"is to jump right in.\" Without further word, I stood up in front of the chair where Arkadas sat. I grabbed my dress near my hips and quickly hiked it up above my waist. I quickly lifted it up over my head and threw it onto the balcony floor. My breasts and stomach were now exposed to the air and only the bindings I used for my cock remained. I quickly attacked these as well, pulling the fabric away quickly and tossing it to the side. No longer confined, my cock began to rapidly swell. The excitement I had been tamping down was no longer caged. \n\nI looked up at Arkadas, her eyes were wide as she stared at my body. Her hands moved up her body and found her breasts. I watched for a moment while my friend stroked her nipples gently and stared at my body. Soon, my body had become fully aroused and I could no longer wait. \n\nI moved quickly back towards the chair and fell forward. I placed my hands on the backrest of the chair, on either side of Arkadas' head. My breasts and my cock now dangled a few inches above Arkadas' body. In fact, our nipples were nearly touching. Our faces were only a few inches apart and without further thought or word, I pressed my lips once again into Arkadas' mouth. She kissed me back, just as passionate as before, and perhaps with more skill.\n\nHowever, even as Arkadas kissed me, she was not otherwise idle. I did not noticed as her right hand slid off of her breast or when she moved it down between our bodies. But I felt as her fingers grazed my dangling balls, her fingertips slipping against the juices that pour from my own willing cunny. My body froze, my tongue still in Arkadas' mouth. But she continued to move, first playing with my balls and then moving down my shaft, and wrapping her palm around it. Arkadas continued to kiss me as she pulled me down slightly by my cock. I felt my breasts collapse down onto Arkadas' breasts, our nipples pressing together and her firm flesh buoying mine. This seemed to wake me up, and I began to kiss my friend once again. But her fingers still felt magical on my cock as she began to stroke me slowly. \n\nEventually, she broke the kiss, \"Varis, you must know something,\" she whispered. I opened my eyes and looked at her. Our breasts were still pressed together and she continued to stroke my cock as she spoke to me. I groaned at the sensation but managed to nod my head.\n\n\"Then tell me quick, I will not be able to understand words much longer,\" I responded. Arkadas laughed slightly. And she kissed me again once, quickly.\n\n\"I don't know how we...ended up here. Though I can barely stop my heart from fluttering with excitement for it. But, even if we never had gotten to this point...You should know that you always could have told me about...\" and as she spoke she squeezed my hard cock, \"I would not have turned from you, just as I will never turn on you now.\" I felt a prickle in my eye and felt a tear fall. In this sudden onslaught of court intrigue and danger, a statement of unquestioning loyalty and devotion was desperately needed.\n\n\"How did I ever doubt you?\" I asked again. But my last word came out garbled. Arkadas was pulling more forcefully now on my cock, taking me down. My breasts fell ever more deeply against Arkadas. I felt my cock closing the distance between our bodies. It was twitching in Arkadas' hand and I could feel the heat of Arkadas cunny against the tip.\n\n\"Do not speak anymore. I am yours, take me,\" Arkadas said. As she spoke, I felt the tip of my cock press against Arkadas' waiting slit. She was still sopping wet from her juices and from my saliva. I felt Arkadas' hand slip from my cock and felt body of her hands soon find their way to my hips. I looked into Arkadas' eyes now and she was smiling, nodding gently. My whole body was trembling and my mouth suddenly felt dry. But I had never wanted anything more in my life than to be in Arkadas' body.\n\nI pressed my hips down gently. I heard Arkadas gasp and felt her body tense slightly. But Arkadas' body was so wet and so ready, the tip of my cock slipped easily inside of her body. Now Arkadas began to place pressure on my hips, pulling me in toward her. She wrapped her legs around my back, pushing into my backside with her heels. In just a few moments, my cock slipped completely inside of Arkadas' body, my balls slapping against her ass. Arkadas groaned loudly.\n\nI was overawed by the sensation of Arkadas' body. My cock was wrapped tightly in my friend's warm wetness. Arkadas' cunny held me tight, but she was so went that my cock could move easily even in her tight confines. I felt intense pressure on the underside of my cock and I fear for a moment that I would spill my seed instantly. \n\nOnce again, my eyes moved up to look at Arkadas. I could see tears in the corner of her eye, though I doubted it was from pain. Her legs here now tightly locked around me and her arms moved from my hips and wrapped around the back of my neck. She pulled me in closer with all of her limbs, my cock pressing harder into her body, my lips finding hers. Our breasts were still pressed together and I could feel Arkadas' hard nipples pressing against mine, the sensation growing more pleasant the more our bodies shook. There was no daylight between us now, we were pressed completely together. I could hear soft moaning noises from a throat, but I could not tell if they were mine or Arkadas'. The smell of our juices hung heavy over the balcony and heightened the intensity of the feeling.\n\nFor a brief moment, Arkadas relaxed the pressure from her heels against my back. She pushed me back slightly and my cock slipped a couple of inches from Arkadas' cunny. I felt the cool evening air on my wet cock and gasped. But even as I did so, Arkadas heels returned and thrust my cock hard back into her cunny. Now it was Arkadas' turn to gasp and she pressed her tongue hard into my mouth as she did. She repeated her motions, pushing me out and then pulling me back in hard, several times. Finally, I began to feel the necessity to act. I pushed my hips back on my own and then thrust my cock back into the comforting warmth of Arkadas' body. Each time I did so, I felt the pressure grow more intense on my cock. I also felt Arkadas grow more desperate underneath of me.\n\nWe continued to move in that way for quite a while. Our bodies were pressed tightly together and Arkadas wrapped her limbs ever tighter against me. Our stomachs were pressed together, separated only by the thin fabric of Arkadas' bunched dress. Our breasts were still pressed together and each motion heightened the tension. We kissed passionately now, actually beyond the point of passion. In desperation now we kissed. The sounds of our moans and the wet sounds of our bodies colliding filled the air. Sex was all I could smell.\n\nFinally, I could feel my seed coming. I pressed my hips harder into Arkadas, thrusting my cock deeper and deeper into her body. I bit at her tongue and felt her legs shaking around my body. I knew that I was just a few seconds away and...\n\n\"Varis, oh Gunes Varis, please stop!\" Arkadas yelled at the top of her voice. I was so shocked by why she had said, and the level of her volume, that I instantly complied. My cock stopped half inside of her body, I was cold all over from sweat, and I could barely breath. I needed to feel release, my entire body was taut as a drum.\n\n\"What...?\" I began to ask, but Arkadas spoke quickly.\n\n\"I do not mean to cause you pain Sultanah. But I am ripe to be with child but we do not want that. Further, I cannot help but thinking back to our first time together, all those weeks ago. The taste of your seed... I loved it. I have craved to taste it again every day since. Please, share your seed on my tongue,\" Arkadas said. Once again, my friend was looking out for me. If Arkadas became pregnant, well, I would have to accept it as my own bastard (an expensive proposition) or hear rumors about her virtue. Besides, I looked into Arkadas soft lips and pink mouth and considered the joy of spilling my seed there. \n\nPerhaps more importantly I looked down briefly, pulling my chest up slightly off of Arkadas' breasts. The dying embers of the evening, the red light had become darker. I could see part of the shaft of my cock, now stained red with the light. The light of Gunes shining on the male aspects of the Goddess. Now it was Arkadas turn to worship at Gunes' altar. It felt so right. \n\nI quickly slipped my cock from Arkadas body (an underrated sensation) and heard her gasp. But I was still very close to spilling my seed and wanted to move quickly. I unhooked myself from Arkadas' legs and crawled up the chair. I felt my breasts briefly press into Arkadas face and felt her tongue seek my nipple. My body slipped across Arkadas' body, though I was careful to place my limbs on open spots on the large chair. I quickly found the armrests on the chair and lifted my body, almost jumping up. My knees quickly found their way onto the armrests and I sat up quickly. Now I was kneeling, with one knee on either armrest, straddling Arkadas' body. My cock was sticking up, wet and hot, a few inches from her face. My balls dangled above her breasts and my cunny dripped on of her nipples.\n\nArkadas did not pause long, she knew I was in desperate need. I was so excellently placed that my lover did not need to move anything besides her neck. She bent over quickly and I felt an instant wet, warmth as her lips slipped over the tip of my cock. I looked down and saw the top of Arkadas' head, the exotic blonde hair beginning to bob up and down on my cock.\n\nArkadas' seemed even more skilled in her efforts than our first time together. I felt my cock slip deeper and deeper into her mouth, pushing against the back of her throat while her head bobbed. Her mouth and throat were tight and wet, and I felt weak. Her tongue swirled against the bottom of my cock and her balls pressed against her chin. I could feel my seed coming quickly, but I also felt weak in the knees. \n\nI lifted my hands up towards my chest, somehow hoping to gain some balance. I pressed my hands against my breasts and felt my nipples cutting into my palms. I felt no more certain on my knees, but my nipples tingled deliciously. I began to squeeze and knead at my breasts while I watched Arkadas' suck furiously and skillfully at my cock. I moaned loudly, not even caring if my screams echoed down to the streets below.\n\nIt did not take long, I had already been so close. After a minute or slightly more of stroking my breasts while Arkadas sucked my cock, I felt the tension rising inside of me. This sensation no longer confused me; I knew that it meant that the anxiety would reach a crescendo and then crash into pleasure. I needed that break from the tension, I needed the pleasure. I thrust my hips hard into Arkadas' mouth and I could heard her choking of my cock. \n\nThen it happened. The tension rose, just as I anticipated, but it was more intense than it had ever been before. I kept thrusting my cock harder and harder into Arkadas throat and my fingers were white from squeezing my breasts. I felt my entire world condense into a single point of tension until finally I felt that I could not move any longer. Thankfully, Arkadas mouth and tongue continued to move over my cock and then...release. I let out a high pitched scream as I felt the tension instantly drain out of me. A wave of luminous red pleasure poured from my cock out of my body. I was vaguely aware of my balls seizing, my cock jumping, and thick streams of seed pouring into my friend's mouth. But this was overwhelmed by what felt like an eternity of pure pleasure as my body reacted.\n\nMy eyes shot opened and the whole world seemed red. I looked down at Arkadas, her eyes closed, smiling around my cock while my seed spurted inside of her. I felt supreme relaxation and an absolute pleasure. I suddenly felt dizzy and realized I hadn't been breathing. I took a deep breath but it was too late, and I tumbled backward toward Arkadas' legs. \n\nMy cock popped from Arkadas' mouth and the last of my seed spurted against her face. Despite that, she reached forward and grabbed me as I fell, pulling me in around the waist. Nonetheless my knees had slipped off the armrest and I had landed with my thighs on her stomach. Arkadas' eyes looked concerned and I heard her start to speak. She was so concerned that she had forgotten she had a mouthful of my seed. As she tried to speak I looked into her mouth and saw that I had filled her cheeks with seed. Some of it dripped out of her mouth and landed on her breast as she started to speak. She realized what was happening, closed her mouth, and quickly swallowed it down.\n\n\"Varis, are you alright?\" she asked, leaning it toward me, she sounded concerned and her breath smelled of my seed. I nodded my head slowly, and then shook it. I was breathing heavily and my balance was coming back. My climax was fading but the relaxation it had brought remained strong.\n\n\"I feel...\" I started, \"Wonderful.\" And with that I pitched forward and wrapped my arms around Arkadas. We collapsed together onto the chair, and Arkadas wrapped me up tightly in her arms. I could feel her kissing my cheeks and eyes as I quickly grew comfortable in her arms.\n\nEventually, Arkadas seemed to understand that I was in no danger and I began to catch my breath. We lay together for a long while, tangled up in the chair on the balcony. Our bodies were sticky with sweat, seed, and juices and the smell still hung thickly in the air. Arkadas' finger gently circled my nipple and I savored the feeling of my now-soft cock pressed freely against my friend's bare thigh. ",
        "\"That was lovely Varis,\" Arkadas said at last, leaning over and kissing my cheek.\n\n\"Thank you for catching me there, I nearly fell back onto my neck on the balcony,\" I said, kissing Arkadas' breast, where my cheek now laid.\n\n\"It is my job,\" she said laughingly, \"And my pleasure to catch you.\" And we lay together for a long while now in silence, enjoying the cooling night air and the closeness. In fact, I could not ever remember feeling this close to Arkadas, despite the fact that she had always been my best friend. Whatever formality existed in our relationship because of the fact that she was, technically, my slave had completely faded. I knew that I no longer held anything back from her and she no longer held anything back from me. We had shared our bodies and shared our souls. I felt my body, exposed, against hers and I wondered what other miracles that Gunes could work.\n\n\"It is getting late, you must be going,\" Arkadas said. Now I knew! I had nearly forgotten about my mission until that moment. I had been so caught up in my time with Arkadas that I nearly forgot.\n\n\"You are pushing me off toward my task?\" I asked incredulously. Arkadas signed and shrugged her shoulders. She ran her hand through my hair.\n\n\"I do not want you to go but I know I can stop you,\" she explained. I rolled over slightly so that we were facing one another. Arkadas took my hands in hers and we pushed our foreheads together.\n\n\"I am doing what I must do,\" I explained again. This time, Arkadas just nodded.\n\n\"I do not understand. But now at least I understand that I do not understand. Besides, you now know the contents of my heart. I will never forgive myself if anything happens, but you will always know how I feel,\" she said. I smiled at my friend and kissed her lightly on the cheek.\n\n\"And you will know how I feel, if anything were to happen,\" I responded. Arkadas furrowed her brow and stared at me for several seconds.\n\n\"I should hate to hear you even suggest that,\" she said finally, \"but ...I feel something...\" she said slowly. For the first time since we had finished making love, I consciously considered what I was planning to do that evening. I realized that I felt something strange as well. Something I did not expect. The anxiety and nerves I felt earlier were gone. Like they had all been burned up on my climax. Like Gunes had taken them away in honor of my devotion. \n\nBut it was more than that. It was not simply that I no longer feared. It was that my fear had been replaced. I felt safe, in fact confident. I could feel light of Gunes shining inside of me and knew that I would survive. The final binding of friendship in the like of the evening sun was a religious rite and it had brought me to a different level of understanding. Gunes accepted the tribute of my sexual desire and rewarded me with certainty. I wondered if that was what Arkadas was feeling as well. \n\n\"I know,\" I said and Arkadas smiled. I looked up at her again and she leaned over and kissed me deeply. Less passionate now, but more than a friend's kiss. A lover's kiss.\n\n\"Thank you Varis. I did not know what I needed from you tonight in my pain and anxiety. I never would have expected that it was...that. But you know me better than I know myself I guess...I love you and know you will always love me,\" she said finally. Now I kissed her back, giving her what she had given me.\n\n\"I love you too Arkadas. You are the only one that Varis, the girl not the Sultanah, can ever love. But do not thank me, thank Gunes. And pray to her that she will give me what I need tonight,\" I said. And I rose from the chair and began to dress.\n\n* * * * *\n\nNot long after I was standing on the City Wall, directly next to the North Gate. I was wearing a pair of black leather pants and a tight, black shirt. My face was covered with a black scarve and I was nearly invisible in the darkness of night. Saygili, my loyal guardsman was standing next to me, looking nervously over the wall. The besieging camp was stretched out before us in the darkness. Their campfires burned in all directions between the two rivers on the plain outside of the city. Even from the distance (their first tents were nearly 300 yards from the city wall) I could smell the scent of shit that engulfs an army encamped. I could hear music and even occasionally a loud word emanating from the camp. It was a night like any other night during the siege.\n\n\"Sultanah, I do not believe they are coming,\" Saygili said, not for the first time. I smiled and looked at my loyal guard.\n\n\"Be patient, we have nowhere else to be tonight. It is better out here on the breezy wall that stuffed in the top levels of that palace,\" I explained.\n\n\"I just fear for your safety,\" Saygili responded.\n\n\"And that is why you are paid. I appreciate your concern, now simply be quiet,\" I said, my tone more gentle than my words. Saygili nodded and peered back out into the darkness.\n\n\"This is not a task for the Sultanah. It is too dangerous,\" Saygili said quietly.\n\n\"That is not, to my memory, the sound of quiet, though I admit it has been a long time since I heard it,\" I snapped back. Saygili nodded again and did not speak. I did appreciate his concern, but I was ready now. I still felt the confidence that Gunes had granted me and I was ready to begin my task for the night. \n\nWe stood in silence for a while longer and I began to wonder if Saygili was correct. Perhaps something terrible had happened. Perhaps my efforts were for nothing and I had sent many loyal subjects to their death. While I no longer feared for my safety, I feared for...\n\n\"Soyguncu,\" Saygili said in a hushed voice. I looked at him and he jutted his chin out into the darkness beyond the wall. I looked down at the wall and saw a figure also dressed in black. My eyes were keen, but apparently my guards were better. But as the figure drew closer, I came to recognize the outline of my newest staff member: my thief. In a few moments she was standing at the far end side of the moat, looking up at us.\n\n\"Soyguncu, is that you?\" I asked nervously. I hardly allowed myself to believe she had really survived.\n\n\"Sultanah, you are the one who insisted on passwords and code talking. How am I to respond to that question?\" Soyguncu spoke back, slightly louder than I had. I laughed. She was right. \n\n\"I mean, how fares the lunar eclipse?\" I asked in code.\n\n\"The owl has left the barn,\" she responded in turn. I smiled and nodded. That meant everything was in place. I looked over at Saygili and nodded. He sighed deeply.\n\n\"I ask you one last time to let me go in your place,\" Saygili said.\n\n\"You have grown too bold at court,\" I said to him, but in a good-natured way, \"Who led and who followed when we held the gate against Rayhip? There is no time for you to question my orders. Just follow them.\" Saygili did not speak farther. Instead he lifted his crossbow and shot a single bolt. I watched Soyguncu jump as the bolt sunk into the dirty and rock of the side of the moat in front of her. A long rope was attached to the back of the bolt and it lead back up towards the top of the gate.\n\n\"Careful!\" she yelled back. Saygili was not paying attention. He was already tying the end of the rope around a metal ring on the wall.\n\n\"I will be back as soon as possible,\" I said to Saygili, \"It anyone comes, cut the rope loose. We can always shoot another one down.\" I explained. He nodded solemnly. \n\nI then took a leather belt that I had brought with me and threw it over the rope. I wrapped the ends of the rope tightly around each of my hands and then climbed up onto the edge of the wall. I looked down over the side and it suddenly seemed much higher than it had before. Suddenly, my certainty that I would not come to harm seemed laughably absurd. I felt dizzy and turned to look at Saygili. He was looking down at the bottom of the rope, where my journey would end. He had no doubt now that I would go. How could I back out now?\n\nI kicked my feet over the edge of the wall and slid my ass off of the side. I felt a powerful drop like I was going to plummet to the bottom of the wall. My arms stretched up and locked above my head. Just at that moment there was a powerful jolts and I bounced up slowly. The belt hand caught me. It jerked so hard that it nearly flew from my grasp. I squeezed hard on the leather belt, my fingers barely managing to maintain a grip. My heart was fluttering in my chest and I could not bear to keep my eyes open. But I felt myself hurtling toward the ground. I felt like I was sliding across the rope faster than a stallion could carry me. I prayed that the bolt from the crossbow would remain plugged into the ground.\n\nWhen it felt like I had been falling forever and I feared that I was going to slam at full speed into the earth and break every bone in my body, I decided to open my eyes and get one last glimpse of the word before I died. I managed to open them just in time to see a hand inches from my face. I crashed into it with an audible slap and I saw stars in front of my eyes. But I felt another arm swing around behind me and grab my back. I dropped my belt and stumbled forward. Soyguncu and I tumbled into the grass on the far side of the moat. I heard a loud groan as I knocked the wind out of my thief.\n\nWe lay for a moment on the ground, catching our breath. Soyguncu was breathing deeply, trying to dispel the pain from our collision. I was shaking my head trying to get my bearings. My face felt numb where I had slammed into the thief's hand. Nonetheless I turned back to the wall and saw Saygili looking down at me. I waved to him confidently to indicate that I had made it. I think he nodded and then I saw him lift something up from behind the wall and he hooked it onto the rope and sent it screaming down towards us. When that object reached the backs of the moat and hit with a thud, he hooked another one onto the rope. Before that one even found its way to the moat, Saygili was already hunkering down behind the wall to wait.\n\n\"Shit!\" Soyguncu yelled when she finally managed to catch her breath. I put my hand over her mouth and she nodded slowly, \"I apologize Sultanah...that hurt like Tanri's asshole after a night at the pub,\" she said. I smiled at her casual blasphemy against the false god.\n\n\"I apologize for striking you. Are you alright?\" I scrambled to my feet now and held my hand down towards the thief. She nodded her head and reached for it. I helped to lift her to her feet and we both turned and looked toward the camp. The tents looked less imposing from here, perhaps because I could not see the end of them. \n\n\"I am alright Sultanah,\" Soyguncu said after a moment. Then she turned back toward the city and toward the objects that Saygili had sent whirling down the rope. I followed her over.\n\n\"Will these be enough?\" I asked. I pointed to the two ten gallon barrels Saygili had sent down. The barrel had two ropes apiece attached to them; one at the top with an iron hook that Saygili had used to slide them down and then another rope that was attached in two places. I lifted one of the large, heavy barrels by this second rope and slung it over my shoulder. A moment later Soyguncu did the same with the remaining barrel.\n\n\"It should be, there are other factors at play, you will see,\" she said. And with that she turned back and started heading toward the enemy's lines. She walked briskly.\n\n\"Wait up, wait up. Do not rush!\" I called towards her.\n\n\"Sultanah, we do not have much time!\" Soyguncu responded, pointing towards the placement of the moon in the sky.\n\n\"That is because you are late,\" I responded and she stopped walking, \"Where is everyone else? Where are we going?\" Soyguncu had exited the city several hours earlier along with several...compatriots. They had been in and among the enemy soldiers for some time, but now only the leader had returned.\n\n\"It took us a greater time to find what you were looking for than intended,\" she explained, and started walking again, only slower.\n\n\"Why? Was it tightly guarded?\" I asked. Soyguncu snorted and shook her head.\n\n\"Your enemies do not fear you, it was hardly guarded at all. It was just a much larger camp than we anticipated. Your enemies vastly outnumber us. It took us time to find it.\" She explained. We were stomping through the field that separated the city from the enemy's camp at this point. Each step we took, we instinctively spoke more and more quietly. But it was very dark night and the grass was very high and at no time did I feel in danger of detection.\n\n\"Well will you remember where it was located?\"\n\n\"Of course. It is actually not that far from here, an hour's cautious movement at most,\" she said.\n\n\"Where are the rest?\" I asked. Now Soyguncu had stopped walking. She turned back towards me and her eyes looked sheepish through her shawl.\n\n\"After we left they decided to stay awhile and...make a little money,\" she explained.\n\n\"Make a little money?\" I asked. How could they behave in such a way. Yes they were prostitutes but this was...treason!\n\n\"You can't expect to take fifteen whores into a camp with thousands of men who haven't smelled a cunt in weeks and expect their eyes not to turn gold,\" Soyguncu said in her colorful way. I sighed. My empire relied on the reliability of prostitutes. \n\n\"Well, will they be there at the appointed time?\" I asked.\n\n\"Whores generally have only one rule, they are loyal to the one who has the most money. I think they will realize the Sultanah's purse is bigger than a soldier's. Besides, I have seen where we are going, we won't need as many as we thought.\"\n\n\"And what if they give us away?\" I asked, realizing there were worse fates than simply having the plan not work. Soyguncu stopped once again. We were only about a hundred feet from enemy lines now and she whispered back to me quickly.\n\n\"Then we are already dead. We cannot speak long now, let us move,\" Soyguncu responded, and then she turned to walk. I took a deep breath and followed after her. \n\nWe moved much slower over the last one hundred feet of the enemy lines, and crouched low as we moved. Soyguncu was correct, our enemies did not respect us. There were no pickets on the edge of camp. The enemy did not expect us to attempt to sneak up on them at night and raise the siege. They were right, of course. If we caught them completely by surprise with an assault by all of my soldiers, we would only kill a small fraction of their number. The rest of their army could mobilize in leisure and then finish us off when we were tired. Still, I was thankful for their laxity as Soyguncu and I crawled out of the grass and between two tents into the camp.\n\nThe camp was laid out in a grid stretching off into the distance with four-tent blocks the central organizational unit. In the middle of each four tent-unit there was a small campfire burning. It was very late at the time we arrived in the camp and most of the soldiers were sleeping. Regardless, it was very bright in the camp and as soon as I moved within the halo of the camp, I felt very visible.\n\nWhatever my nerves were, Soyguncu seemed fearless. As soon as she entered the confines of the camp she straightened up and walked into the light of the first campfire. I followed behind her closely, I looked left and right as I moved, but I saw no one stirring in that location. Soyguncu grabbed my arm and pulled me in close to her.\n\n\"I have carefully scouted. I had a route to our rendezvous to the whores through the quietest portions of the camp. But we will need to careful nonetheless. Follow my lead exactly and watch your feet, no loud noises,\" she said. With that she turned and walked deeper into the camp. \n\nWe moved for what seemed like an eternity. Soyguncu could move in absolute silence and I did my best to mimic the thief's actions. We moved in a sort of zig-zag pattern throughout the area. Occasionally, Soyguncu would drop to her knees on the outside of a tent and sit quietly for several seconds while someone passed. I would follow suit, and I could hear the soldiers inside the tents, snoring. Sometimes, Soyguncu was essentially sprint between an intersection in the tents and as I ran after her, I could hear the sound of voices nearby, campfires that had not yet died down. The camp was quieter up close somehow but the smell was more intense. I had no desire to allow these people on my land for a moment longer. The more we walked the more certain I became that Soyguncu and I were acting properly.\n\nOver the course of an hour we slowly made our way deeper and deeper into the camp until we had worked our way clean out of it. We had stayed relative close to the Kuzey River as we made our way through the camp, but I was surprised when we finally pulled up and stopped just a few yards from the water. I could hear it rushing by in the dark. It was only when we stopped that I realized we had passed through the last of the tents in that area. The ground was wet, sloped, and marshy, not appropriate for tents. But in the distance to our right I saw a large, flat expanse. I could smell the tingling scent of shit and could hear noises. I could see several farms as well, abandoned by their owners now in the city and being used by our enemies. There were no people in this area. I was gasping by this time, the heavy barrel on my back and the long run had sapped my strength\n\n\"We have made it Sultanah,\" Soyguncu whispered and jutted her chin in the direction of the nearest farm. I looked around and did not see anyone moving. It was darker now where we were located and very quiet. My bladder felt tight and my heart was thrumming in my chest.\n\n\"Where are the whores?\" I asked finally. The whole plan depended on them.\n\n\"We just need three or four I think,\" Soyguncu stated. She looked over her shoulder into a copse of trees near the river. She squinted and strained her eyes in that direction and then, slowly, her mouth spread into a broad smile. I turned and looked, but saw nothing. Soyguncu lifted her hand over her head and waved quickly. After a moment, I saw a silent stirring in the trees. I squinted harder and then I saw women walking slowly out the shadows.\n\nThere were only eleven of them left, presumably the rest were still turning tricks. The whores were dressed for the job in short dresses, long boots, their faces painted garishly, and wearing high, curly wigs. They were immediately recognizable for what they were. Some had smeared lipstick and disheveled hair and it seemed they had weighted their purses generously before arrival. But I did not care; they had followed through on their promise (most of them). They arrived next to us silently; they were all smiling broadly when they saw us, though I doubt they knew who I was.\n\n\"Where are the others?\" Soyguncu hissed.\n\n\"Working,\" One of the prostitutes whispered back and shrugged her shoulders.\n\n\"I should skin you all for this! Our lives depend on this, it is no time for sucking cock!\" Soyguncu added.\n\n\"That's exactly why we are here!\" One of the other prostitutes shot back.\n\n\"Silence,\" I whispered, \"We will deal with those who reneged on their promises later. Now is the time to act. It will be light in a little over an hour.\" The prostitutes were nodding. Soyguncu made a show of continuing to look angry but nodded her head as well.\n\n\"They are over there,\" she said, pointing towards the abandoned farm, \"We will be right behind you. Remember, get them all! If we die, you probably die too. And you definitely don't get paid. Your cunts would have to take a lot of traitorous soldier cock to get what the Sultanah will pay for a couple of minutes work.\" The prostitutes' eyes lit up and they began to walk in the direction Soyguncu had pointed. They moved slightly more loudly now and they talk to one another. Soyguncu and I followed behind several yards in silence. We crouched low and kept our heads down.",
        "\"Halt, who goes there?\" A voice suddenly called out with a thick accent. The prostitutes instantly stopped. I looked up finally, and stopped moving. We had moved up and out of the marshy land by the water and were now standing a few dozen yards from the first farm. The barn was directly in front of us, but it was surrounded by a low wooden fence. The voice had come from that fence. I peered around the whores as best I could and could see three sentries sitting on the top fence post, looking at them. I dropped down lower, praying I had not been seen. I looked over at Soyguncu and she had also dropped onto her belly, facing towards the soldiers and watching. I continued to follow her lead.\n\n\"We are angels of mercy,\" one of the prostitutes said, \"here to cure your wounds and heal your souls.\"\n\n\"Ain't that funny,\" one of the soldiers responded, \"I didn't know you could reach the soul through the cock!\" he said and the other sentries laughed.\n\n\"I imagine there is a lot you don't know about your cock, pretty young man like yourself. Why don't we go over to the woods and I will teach you a thing or two,\" the lead prostitute said. One of the sentries whistled and the others laughed. \n\n\"Well...\"the sentry began again, and it sounded for the world like he was going to accept the offer, when another voice pierced the night.\n\n\"N\u00f6bet\u00e7i, what in Tanri's balls is going on?\" the voice called out. Instantly the sentries on the fence posts jumped up and stood with more dignity. I looked over in the direction of the voice. A tall, commanding man in a somewhat elaborate uniform had arrived. Flanking him were six soldiers. \n\n\"Sarge...\" the one sentry stammered. I felt panic welling inside of me, there were too many things about the situation that were out of my control. I looked at Soyguncu. She raised her hand slightly and then lowered it in a calming manner. Settle down, she indicated. I took a deep breath and nodded\n\n\"We are just a couple of working girls, looking to make a few coins in the midst of a terrible war,\" one of the prostitutes responded. The sergeant looked over at the prostitutes now. For a long moment he just stared at them with a gaze that could freeze water. I wondered if any of my soldiers could fell this man. However, just when it seemed the sergeant would snap and sick his soldiers on my prostitutes, a broad smile spread across his face.\n\n\"Well N\u00f6bet\u00e7i, I presume you and the boys have not fallen on these whores yet because you were waiting for me,\" he responded. I let out a low breath. Maybe this was still going to work.\n\n\"I was going to report to you Sarge,\" N\u00f6bet\u00e7i responded. The sergeant laughed and shook his head.\n\n\"You're a piece of shit N\u00f6bet\u00e7i, but I tell you what. I am going to give you a reward,\" he explained and started walking towards the prostitutes. He was looking over them carefully. Finally he found one in particular and grabbed her arm. He was gentle with her and pulled her out of line.\n\n\"I am going to go into the woods and fuck this prostitute. In exchange for you finding her, I am not going to court-martial you. Instead you will get to wait here while the rest of us get a much needed morale boost and watch the area. Since you let these hookers sneak up on you, I expect you to be extra focused,\" The sergeant explained. As he spoke N\u00f6bet\u00e7i's eyes seemed to droop. He did not say anything and it was clear his conflict with his superior had been going on for some time. He knew he was beat.\n\n\"Yes, Sarge,\" he said dejectedly. The sergeant slapped him on the back and then turned to the other men.\n\n\"Men, pick a whore you can afford and meet back here when you're done,\" he said magnanimously, \"Now madam, after you.\" He said and started to lead the prostitute he had selected back into the forest. In a short period of time all of the other sentries, except N\u00f6bet\u00e7i had selected their prostitutes and had headed off away from the open field around the farm. Only N\u00f6bet\u00e7i and the two ugliest prostitutes remained.\n\n\"What do you say handsome? You ready to go?\" one of the prostitutes asked.\n\n\"Do you have a cock in your ear whore? I am not permitted to leave this spot. I am the only sentry remaining for the whole damned area. Besides, I wouldn't fuck you with a pig's cock,\" N\u00f6bet\u00e7i complained. I looked over at Soyguncu and saw she was already looking at me. I looked toward the remaining sentry and gestured. Soyguncu shrugged her shoulders and the drug her thumb across her throat like she was slitting it and raised her eyebrows. I looked back at the young sentry. I didn't care if we killed him. He would kill everyone I loved and destroy everything I knew. But I didn't want him to make a noise. I looked at Soyguncu and lifted my finger. One minute, we would give the prostitutes some time.\n\n\"A pig's cock? Are they curly like the tails?\" the other prostitute said and N\u00f6bet\u00e7i smiled despite himself, \"listen sweetie. All our friends are already gone. If we don't get some they are going to give us a real hard time. Like that cock sucking sergeant gave you,\" the prostitute said. The sentry's eyes rose and he smiled. It seemed this whore knew exactly what the sentry wanted to hear.\n\n\"Well one of you is out of luck no matter what, besides it ain't worth the risk,\" he said, but it sounded like he just wanted to be convinced. The bolder, smarter prostitute started to walk toward him. The other prostitute followed.\n\n\"Tell you what sweetheart, I know we ain't as pretty as those other girls. But I think we can make it worth the risk. Two, for the price of one. That solves our problem baby. And with two pairs of lips, two pairs of tits, and two wet cunnies, I bet we can get you satisfied and back out here before your sergeant finishes fishing his little cock out of his chain mail,\" the prostitute said. I felt my heart hammering in my chest, I was already looking over at Soyguncu. If he balked, she would have to kill him. She was pulling her small knife out of her pocket already.\n\n\"Well...\" the sentry said, he was smiling and running his eyes over the two prostitutes.\n\n\"Tick-tock boy, times running short. Do you know any other boys who've fucked two at once?\" she asked.\n\n\"Okay, let's go. Quick,\" N\u00f6bet\u00e7i said. The prostitutes giggled and followed at him as they ran towards the woods. Once they were out of sight, Soyguncu quickly jumped to her feel and slung the barrel off of her back.\n\n\"Let's go quickly, there isn't much time,\" she said breathless. I stood quickly, removed my own barrel and followed after her. We quickly made it over the fence and into the farm. I looked around quickly and smiled as I finally saw that Soyguncu was correct, we were exactly where we needed to be.\n\nI thought back briefly to the hours and days after Soyguncu and I had completed our previous caper at Tanri's Cathedral. That was when this plan had come into focus. I had watched after we had transformed the symbol of Tanri into the symbol of Gunes how the will of the Tanril followers had been sapped. Their beliefs were absolutely hollow and so, the destruction of their symbols had robbed them of any content. I had never needed to act directly against them and, in fact, did not have the power to do so. They outnumbered me. Instead, I had simply inflicted a small wound on their greatest strengths, their symbols, and exposed their larger weakness. And in exposing that weakness, I had defeated them. That insight had percolated in my mind. It had developed into something of a readily applicable maxim and then turned into a full-fledged plan. You don't need to comprehensively defeat any enemy when you are on the defensive; you just need to sap their willingness to fight. That was why I was standing at a make-shift supply depot in my enemy's rear with twenty gallons of pitch. \n\n\"You see, the grass here is dead from the heat, we won't need much pitch to get it started. I will take the barns, you take the field,\" Soyguncu said. My enemies had a massive army, that was their greatest strength. We could not move directly against them. But an army marches on its stomach. A massive army has a massive stomach. King Sican knew that his army could only maintain its siege if the soldiers were healthy and well fed. As a result, he had spent the weeks of his siege plundering the countryside. He had collect up all of the grains and all of the livestock from miles around \u015eehir. He had taken over the barns and the pens in this area to house them. In fact he had built more fences to hold cattle and more buildings to store corn. But still, he always needed more. Each day he was bringing in shipments of corn and sheep from his own country, his rents for the year in advance to feed his army. And it was all right here. A small wound with a little burned corn and dead cattle would expose the weakness of a massive army.\n\nSoyguncu was already running towards the first barn. I had selected her to aid me in this task because she seemed brave, loyal, and stealthy. Besides, the reward I had offered her for the task would be more than enough to thank her for all her services for the crown. Saygili had found her easily, picking pockets in the market. She had accepted before the whole scope of the mission had even been explained. Now she ran inside a barn and I knew she was opening up her cask of pitch and pouring it out over the floor. Then she would move on to the next building and the next, leaving a trail of pitch behind her.\n\nI did not wait to watch her efforts. I bounded off towards the fields. There were dozens of pens in the farmland on the edge of King Sican's camp that contained thousands of animals. But Soyguncu was right; the grass was high and dry in most of the pens. It would burn easily. I walked to one of the pens and looked at the cows inside.\n\n\"You are beasts of B\u00fct\u00fcn D\u00fcnya,\" I responded, \"Better wasted than in the bellies of your enemies. Gunes praises your for your sacrifice. It will not be forgotten,\" I said. I popped over my barrel and then opened a smaller hole on the other side. The black bitch began to pour out of the bottom of my barrel. I took off at a run. I ran along the outside of the pens (they were arranged in a massive rectangle, with small pathways between the various small pens). I zigzagged around the various pens, surrounding some entirely with a thin line of pitch. After a few minutes, I felt my barrel become lighter. Shortly, it was completely empty and I dropped it in the grass. I had only spread pitch around a small fraction of the total area around the pens. I had to hope and pray that the wet grass and dry fencepost would be enough.\n\nI made a beeline back to the place where we had encountered the sentries. Soyguncu was already there, looking nervous. She was holding a lantern in her hand, she had stolen it from one of the barns. It was lit. When she saw me she sighed with relief.\n\n\"Have you spread it?\" she asked. She handed me the lantern.\n\n\"As far as I could. Let us hope it is enough,\" I replied.\n\n\"I was able to get to more than half of the granaries. We will do some damage at least,\" she said.\n\n\"Ah well that was not bad!\" A voice said loudly. Out from the trees strolled N\u00f6bet\u00e7i, a whore under each of his arm, \"My father was right, ugly girls try harder...hey who the fuck are you?\" he asked. He looked up at saw Soyguncu and I standing. I felt my blood run cold. We were out of time.\n\n\"Don't worry about them, tell me more about home,\" the clever prostitute said, trying her best. N\u00f6bet\u00e7i shoved her to the side along with the other prostitute. They tumbled to the ground, got to their feet, and then took off in the direction of the river. The sentry seemed to gather that this meant something was not right.\n\n\"Alert! Intruder!\" he called as loud as he could. I didn't hear or even see Soyguncu move. The next thing I noticed was a knife protruding from the sentry's throat. She had pulled quickly and thrown it with deadly accuracy.\n\n\"We should have killed him earlier,\" she said. But even as she spoke, the other sentries were pouring from the woods. Some still had their pants around their ankles, their cocks flapping ludicrously as they moved.\n\n\"Halt, and identify yourself!\" The sergeant was yelling. He was in the lead and he was only a few dozen yards away. I watched as him feet pounded on the grass coming closer. I could hear stirring in the camp a few dozen yards distant. There was no time to be nervous now, I had to act quickly. I noticed where the sergeant was heading.\n\n\"I am Sultanah Varis I, the angel of death,\" I called out to him loudly. His face looked slightly perplexed but he kept running. And his foot feet directly in the line of pitch leading from the barn. I took the lantern in my hand, spun it once round my hand, and tossed it as hard as I could. I looked up in the sky to watch it arc across the darkness. I could see Soyguncu watching as well. The lantern reached its highest peak and then fell down onto the earth, crashing at the sergeant's feet. \n\nThe ceramic reservoir of the lamp burst and flames shot up all around the sergeant. He screamed in a primal rage as the flames began to licked up his leg. The flames reached the pitch and soon the grass all around the man was on fire. He no longer had any thought of pursuing us. Instead, he was running in panicked strides all around the area. Everywhere he touched spread the flames. Soon, the dry grass for two square yards around him was on first and spreading. More importantly, the pitched was igniting as well, racing out toward the granaries and light the grass around it. The other sentries saw what was happening and forgot all about us, they rush toward the fires even as the sergeant dropped onto the ground, and no longer moved.\n\n\"Fire! Fire!\" they yelled and I could hear more rumbling from the camp behind us.\n\n\"This will not be safe much longer, we must go!\" Soyguncu said now. I could feel the heat from the fires starting to lick at my face. I turned and looked out towards the pens where the animals were held. Already the pitch there was beginning to burn as the fire spread quickly in the grass.\n\n\"To the river!\" I yelled to Soyguncu and we both ran towards the marshy land we had traveled through before. When we reached the low backs of the river we dove into it, sure that we were pursued by the fire. We swam out a couple of feet to where the water was around our waists before turning back and looking at the shore. Once we reached that point we realized the prostitutes were huddled on the banks of the river, looking nervous. They had obviously fled when their clients had rushed toward the fire, knowing that retribution would be swift if they were caught. We beckoned them out to stand with us. Once they reached the water we all focused on the shore and watched the fire burn. \n\nIf any of the sentries had noticed us sprinting into the water, they had forgotten it entirely. Already, one of the barns filled with grain was a massive inferno and others were beginning to catch. The sentries were running around frantically, searching for dirt to toss onto the flames. They had no buckets so they did not even attempt to run down to the river. They were screaming loudly for help as they worked futilely against the flames.\n\nFinally, soldiers from the camp had reached the area. Most stopped at stared dumbfounded as the grass, fences, and buildings burst into red flames. By the time a few dozen soldiers had made it out toward the field, it was too late. Even the arrival of officers and lords was ineffectual. From my vantage point in the river, I could not see everything. But I could see several barns and temporary buildings that were so heavily engulfed in flames that there was no way to put it out, everything inside was ruined. And it was spreading. \n\nSoyguncu had apparently done an excellent job of spreading pitch and also spotting buildings. I did not know fire could move that fast. Soon it was zipping along the dry grass towards the livestock fields. These were farther away but I could see the light in the distance growing brighter and brighter as the pitch I had spread, the fences, and the grass went up in flames. And I began to hear the animals. I felt more than a twinge of guilt and to this day cannot describe the sounds that I heard as the animals began to roast alive. The most horrifying sound was the clomping of hooves as animals tried to escape the flames. I feel no such concern for the soldiers who relied on them.\n\nWe had been watching in silence for several minutes when something slightly unexpected happen. There was already pandemonium in the enemies' camp. Most of the men had no idea what was going on and were terrified that a sally from the city had caught them unawares. Others knew there was a fire but seemed helpless to stop it. I imagined that the lords had already reported the fire and that King Sican and his command structure already knew that their food was in danger. I had expected and prayed for all of these results. What I hadn't expected was for the fire to so severely weaken the fences surrounded the livestock.\n\nI heard a loud cracking sound and I assumed it was a barn collapsing (there had already been several of those). Instead, I heard a growing rumbling sound. I strained my eyes in the dark to see what was happening. There was a burst of bright, red light tearing through the nearest fence. The light shot swiftly into King Sican's camp, pushing through a campfire and lighting tents on fire. Soon, the light was followed by dozens, maybe hundreds of others. I could hear more moving in the distance. I thought for a single, fevered moment that Gunes had appeared herself, to throw fire balls at our enemies. Then I heard a loud, panic lolling come from one of the fire balls as it ran directly thought a tent and trampled a solider inside. A cow. The cows had been lit aflame by the fire and had burst from their pens. They were panicked, tearing through the enemy's camp and lighting everything they touched on fire. They had inadvertently been turned into weapons. I looked at Soyguncu, she turned to me, smiled and shrugged.\n\n\"Sometimes a plan works out better than expected,\" she said. Her face was lit was red light in that moment, flickering as it reflected off the river. She looked like a vision of Gunes herself.\n\n\"Sometimes you don't know what you can do until you jump right in,\" I said, and turned my eyes back to shore.\n\n* * * * *\n\nThe rest of the night passed in a blur. We watched the fire burn and the panic increase for a while with increasing amazement. But eventually, the fire became so great that soldiers began to run into the river downstream from us to escape the heat and the flames. We realized that it would no longer be safe to wade there. Soyguncu lead us a mile or two upstream. We walked in the direction of the rapidly rising sun, splashing our tired eyes with reddish yellow light. Many of the prostitutes, too tired to go on, climbed back onto the shore and found places in the trees to hide. It was far too dangerous for the Sultanah, so I kept walking. Eventually, we reached a place in the river that Soyguncu knew to be a shallow ford used by farmers and traders in the region. We crossed on tiptoes in the cool water. It felt divine of my slightly toasted skin and the gentle flow of the river soothed my aching muscles. \n\nWe reached the far side. We knew that patrols from King Sican operated on this side of the river, but we moved in the trees directly near the shore and avoided seeing anyone. Now we started moving back the direction we had come, back towards the city. The sun was growing higher in the sky now and we could see the terror we had wrought. The fires were still burning in many places and the entire camp was engulfed in column of smoke. We could hear the cries of the wounded and smell burnt flesh, animal and man.\n\nBut we didn't have time to dwell on our handiwork. Only a handful of people in \u015eehir knew about my mission. I needed to get home quickly, climb back up the rope, and arrive back in the city before anyone decided to steal my laurels or take advantage of the chaos outside our gates.",
        "It took us around an hour to make our way to the bridge over the river just a few hundred yards from the city. There had been guards on the bridge the day before, enemy soldiers. They were no longer present. Soyguncu and I scrambled up the banks of the river and climbed onto the surface of the bridge. I reflected briefly on the memory I had shared with Arkadas just a few hours before, the time I had jumped fully into the river and swam to the other side. I smiled; it must have had some significance to be here again. But there wasn't time to think about it.\n\nFrom the bridge I could see the field before my city's gates spread out before me. To my left and far off into the distance I could see my enemy's camp, smoking in the early summer sun. I could make out places where fires still burned. I strained and I could see the King Sican's food depot, a charred black mass. In fact, I could see in the far distance several ornate wagons moving towards the sun rising in the east. Some of the more wealthy lords had already seen the writing on the wall. Not wishing to hunger before our gates, they were already heading home to Dusman, Temsilci and Surgun where they belonged. I was not surprised to find that Sican and Lider were among them. I felt my heart rise in my chest and turned toward the rising sun, offering a silent prayer to Gunes for her deliverance.\n\nMy eyes then fell directly in front of my city, to the no man's land that had existed between our gates and the enemy camp. I noticed that there were several bodies of enemy soldiers there. Apparently in fear of the fire that consumed their camps, they had lost their minds. They had rushed to the gates, seeking refuge and been shot down by my guards.\n\nFinally, I turned and looked at the city walls. Never before had so many sentries been in place! It seemed my city had learned of the fire and everyone who could turned out to watch. They looked baffled and confused. They did not know what had caused the fire and they did not know what it would mean.\n\n\"How can we sneak back to your guard's location? Surely he cut the line when the enemy troops arrived. And even if he hadn't the city is teeming with people,\" Soyguncu said, \"Not to mention that we have to be careful that we are not shot ourselves.\" We were nearly halfway across the bridge and I knew that everything she said was correct. No one was looking at us now, but eventually, someone would. \n\nRather than feeling nervous, I felt elated. All of the plans and schemes that had been put into place over the evening were through. All of the nerves I had felt before my meeting with Arkadas were gone. I would see Arkadas again! My empire would live to see another. The magnitude of the situation had finally sunk in. I had been, of necessity, so narrowly focused on each task the previous night that I had been unable to even conceive of what would happen if I won. And now I had and I more alive than I had at any time since my father died. Perhaps even before that. Any fatigue that I had previously felt instantly fled from my limbs. My eyes no longer burned from fatigue and smoke. I felt euphoric, and was ready for more.\n\n\"You are right, we must change the plan,\" I said. I quickly unwrapped my black head scarf and threw it on the bridge. Then, without another word to Soyguncu, I began to run across the bridge. I kept my eyes plastered onto the city walls, waiting for the right moment. I ran so fast that in a few moments, my lungs were already robbed of air and my legs began to ache. While I moved I reached into the belt of my pants and found the knife I had brought with me. It was short, only 5-inches long, and I didn't know how to use it. It was more ornamental than functional and had a round, clear glass bead on the bottom that made it look more beautiful than fearsome. I had brought it to take my own life in the event of imminent capture. Now I thrust it high in the air over my head to give myself a slightly martial appearance. My eyes were wide and I felt like I was breathing fire.\n\nFinally, someone on the bridge noticed me. I saw a head turn in my direction, I could see the eyes of one of my subjects. That was my cue. I stopped running, but kept the knife above my head. I looked directly up at the wall, so that my features could be seen by the people. Some of them would surely recognize me. \n\n\"Citizens of \u015eehir, Countrymen of \u00dclke, Imperial Subjects of B\u00fct\u00fcn D\u00fcnya!\" I called at the top of my voice. I was surprised by how loud and commanding it sounded, the particular acoustics of the location bouncing it off of the city walls, \"Open the North Gate for your Sultanah! For I am Gunes Representative and I have called down the fire of the one true god and smote our enemies in the night! Fire balls have destroyed their camp and burned up their food and our enemies are defeated this day!\" I called. My voice echoed across the valley and it seemed that everything was silent, save for the crackle of fires to my left. I knew I was exposing myself to some danger. If someone in the enemy camp was able to shake off their dismay and come for me, I had only my little blade for protection. \n\nFor a moment after my voice stilled, all was silent. Then I noticed people were turning to one another and whispering. The whispering grew into a murmur. I saw people looking down over the wall, staring down at me. I shook my head slightly, releasing my long hair I trying to make my face as clear as possible. I moved closer and closer to the gate. \n\n\"It is her!\" I heard a voice call out.\n\n\"The enemy is retreating!\" Another cried. I looked in the direction of my enemies. None were moving this direction. By I took my little knife and heaved it as hard as I could in that direction. It flew several dozen yards through the air. It landed, plugged directly into the grass. The rising sun was at the perfect angle to strike the bead on the handle. The light refracted within the glass and cast a massive rainbow across the fields and walls of the city. The crowd gasped at the beauty and I heard a woman begin to cry.\n\nI heard the sound of cheering beginning, on the side of the wall closest to me. Slow and somewhat sporadic at first it began to grow. I could see heads moving down along the wall, people passing on the rumor to others farther down the line. The sound of cheering began to grow. I felt the euphoria rising in me. I strolled closer to the gates of the castle, looking up at my people as their voices began to rise. Soon the cheering seemed to rise up from all over the city. The words \"Gunes\" and \"Sultanah\" were on every pair of lips.\n\nI happened to notice a bit of a tumult directly over the North gate. There seemed to be a slight argument before people quickly moved out of the way. I kept my eyes on that location as the cheering got louder. Finally, I saw a person pushing through the crowd. In a moment, the person became recognizable. Cin had climbed on to the top of the gates. Kardes and Saygili were next to her, both looking extremely relieved. Relief was not present on Cin's face, instead I saw something else. Pride. She smiled at me slightly and then raised her arms high above her head.\n\n\"Gunes be praised, the Sultanah has delivered us!\" she called loudly, \"Open the North Gate!\" The crowd, still whooping in their release from their agonizing despair and fear quickly followed orders. People were still straining to catch a glimpse of me and others were yelling epithets at our vanquished foes.\n\nThe North Gate, or, as it has forever after been known, the Sultanah's Gate, was opened. Soyguncu had caught up to me now, but stayed several steps behind me as the gate was lowered. I felt absolute joy in my heart and a feeling of power I had never know before. I had my back to the enemy and I suppose they could have organized and come flooding in. But I felt a confidence from Gunes that told me they were defeated. I no longer feared them as I once had.\n\nWhen the gate opened I saw the city crowds were not limited to the walls. The courtyard within the gate was packed with people, cheering loudly and chanting my name. I saw tears in their eyes and many had fallen to their knees. Standing in the front of the crowd, bawling like a child, was my friend Arkadas. I smiled at her and I stepped once more into the city, free for the first time since I had ascended the throne. Somehow as I entered the rea, the cheering grew louder. And the fearsome sound of our victory echoed through the valley, scaring our charred enemies and pushing them away from our rivers. \n\nEnd Chapter 4\n\nNote: I honestly write so that I can hear the comments you all give. So please just tell me what you think. Even if it is just a sentence or two (though I always prefer more). Consider that your payment for a free story. And if you like this, I beg you to read my other stories and comment on them too. I know who my loyal readers are and I really appreciate you. Thanks!\n\nYKN\n\n*****\n\nP.S. I do one edit of my work and I try to be thorough. But I figure when it comes to handing out free erotica, you all would be better served getting it fast (if a little rough), than waiting for me to polish it like I was getting paid for my work. Especially on a massive project like this, it took a year to write and could take longer to edit. So, in short, I know there are some errors and I don't really care that much. Don't complain about the soundtrack in your porno, don't sweat the typos in your erotica. Thanks.\n\nYKN"
    ],
    "authorname": "YKN4949",
    "tags": [
        "epic",
        "shemale of female",
        "oral",
        "outdoor",
        "serial",
        "tranny on female",
        "hermaphrodite",
        "romantic",
        "adventure",
        "friends"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-sultanah-ch-04"
}