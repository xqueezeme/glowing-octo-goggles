{
    "title": "Thanksgivings",
    "pages": [
        "Original release date: November 13, 2015\n\nNotes [Last revised May 13, 2016]:\n\n<ul><li>- All characters are the product of the authors' imaginations.</li><li>- All characters engaging in sexual activity are over eighteen.</li><li>- This is our submission for the Winter Holiday contest 2015.</li><li>- This story is fairly lengthy, detailed and has a long lead up.</li><li>- We have made numerous corrections to the story, however, no significant plot or character changes.</li></ul><hr>\n\nI'd been pacing around my apartment for the last thirty minutes gathering my thoughts as well as some last minute items for the trip. My anxiety about today had been building over the last couple days and the pacing was just an outlet for what came next. Finally, limiting my retraced steps to my small kitchen, I resolved to sit on the kitchen stool which was neatly placed with its back against the side of my avocado colored refrigerator. It faced the tan wall phone which was just to the right of the fridge, so I could sit, rather than pace, while using it. The phone had a long cord and if I didn't sit, I'd be tangled in it if I allowed myself to pace while talking, even for short calls.\n\nSettling onto the seat, I relaxed a bit and felt the metal seat-back of the step-stool chair make contact with the side of the refrigerator. A nearly imperceptible rattle from their contact stopped abruptly as the compressor clicked off. I took a deep breath and I lifted the headset to listen for a dial tone while my right index finger automatically found the holes as I dialed out the sequence of numbers I'd known even as a small child. My finger traced through each number until it hit the cold metallic stop. The rotary wheel returned slowly and methodically clicked through each number.\n\nWhen the sequence was complete I waited several moments and finally heard the sounds of the caller ringback tone on the other end. I began to daydream about that song 'Ring, Ring' by Abba while the phone must have rung six or seven times. Feeling like I was actually sitting by the phone, waiting all alone, I began to wonder if Mom or anyone was home. I had to call, it was expected now; any out of the ordinary travel required it. It was something we all did now. I was about to hang up and call her office when she answered.\n\n\"Tova Aaron, can I help you?\"\n\nMom always answered her phone with her name, even at home. I guess it was a residual idiosyncrasy of her job. She was a lawyer, although now semi-retired.\n\n\"Hi Mom. It's Maya,\" I said. I could hear the slight noise of papers she must have been rustling in her office.\n\n\"Hello, dear. I've been expecting your call. I can hardly wait to see you. We're going to have a full house, you know? Everyone is coming.\"\n\n\"I am really looking forward to seeing them all. I'm about to leave. Are you sure you don't need me to bring anything?\" I asked, as I habitually twirled my fingers in the coils of the phone cord.\n\n\"No, dear. I think I have everything covered. I have two turkeys, half a dozen extra legs, makings for the biscuits, gravy and dressing. Several of the others are bringing dishes too. Please, drive safely,\" she said somberly.\n\n\"Okay, Mom. I will. I love you,\" I said, as I tried to ignore the undertone her last words carried.\n\n\"I love you too, dear.\"\n\nMom was going all out for this particular Thanksgiving. The invitation cards and numerous follow-up xerographed and mimeographed letters had come in the mail over the past few months. Each contained revised lists of dishes that might be made, timing, contingency plans, sleeping arrangements, activities and all sorts of minutia ad nauseam.\n\nMy younger brother Michael and I would be the odd ones out. I guess Mom reasoned that since we were still in school, we didn't need to be quite as involved. It'd been like that for us for quite a while now. Michael was a senior in high school and I was in my first year of college. We still weren't expected to prepare any dishes or even really help, we were continuing to be sheltered. Our older brothers and sisters along with their respective spouses that lived nearby would be bringing their favorites or specialties and had more responsibilities.\n\nRousing from my thoughts after I hung up, I forced myself to finish packing. Only a few final items went into the medium size suitcase. I put a couple of course books into my backpack and then located my small purse and keys. Taking one last look around I decided I was done and snapped the brushed nickel latches on the ivory colored leather suitcase closed. I picked it up and moved it to the heavy metal clad door where I gathered my purse from the desk, slung the backpack over my shoulder and moved these all awkwardly through the doorway. \n\nOnce through, the industrial gas closer forced the door shut with a bang that echoed down the halls of my apartment building. Pressing the thick brass key into the lock, I then clicked the deadbolt tight. I carried the heavy case down the hall and around the corner, all the while thinking that I'd probably over packed again, I pressed the down button for the elevator. A whoosh of air came up as it arrived. The doors opened with a ding and I entered placing my suitcase on the floor. Inside the wood and brass adorned carriage, I pressed the star and awaited as it descended rapidly to the lobby.\n\nI walked through the richly decorated anteroom and out of the high-rise apartment building onto the parking deck. It was a bright clear fall day and I was glad for the wool coat I'd worn. On the deck I located my silver Thunderbird and set my case down at the rear bumper. Inserting the chrome plated key into the keyhole, I twisted until the heavy trunk lid clicked open. I placed my case and backpack into the deep well and made one last check that I had a lighter weight sweater in my backpack.\n\nThe days had been rather atypical this year; the mornings were quite cool but the afternoons were almost hot. The drive was only about ninety minutes or so down MA-24, but Mom would have given me a healthy helping of guilt if I hadn't called. I climbed into the burgundy colored leather seat and put my purse in the passenger floorboard which was similarly colored carpet to match the interior. Placing the key into the ignition, I gave it a turn and the massive engine turned over slowly and then roared to life. In spite of the car's length it maneuvered easily out of the parking deck with its advanced power steering. Once out of the structure, I began the short peaceful drive towards what I still considered my home.\n\nI was having a variety of mixed feelings about the whole event. Thanksgivings always put my emotions into a heightened state. It had always been that way; even before Dad had died. It was a time when we all got together. Despite the enjoyment that came with it, Thanksgiving always wrought upheaval into our lives as well. The house would fill with brothers, sisters, spouses, their children, uncles, aunts and grandparents. We didn't see them most of the time, but this one day of the year was a special gathering holiday. My immediate family consisted of mostly nonobservant Jews so we didn't really celebrate many occasions, but Thanksgiving was something everyone held dear. This year, there would be at least eighteen of us in the family home according to the last hand written note. The house was plenty big enough since Mom and Dad had always planned on a big family with lots of grand-kids.\n\nThe entire extended family had gathered in our parents' home for as long as I could remember during the week of Thanksgiving. That was even the case the year Dad died. He'd been killed the day before Thanksgiving and two weeks short of his fifty-ninth birthday. The years that had passed since then hadn't made the holiday any easier for many of us. Yesterday had actually been the fourth anniversary of his passing, if one were to celebrate such things. That had been the last Thanksgiving the whole family had been together and unfortunately, it'd been for his funeral. That event seemed to have put the reunions on hiatus for the past few years. The first year was skipped because Thanksgiving actually fell on the date of his death. Then there seemed to be some inertia to getting the event going again.\n\nWhen Dad died, Michael and I were devastated. We had been the only two children still living in our parents' home and had been the only two for several years. Dad doted upon us in the latter years of our parents' growing law firm. Their success had given them much more free time with us. The fact was, Michael and I were probably the closest to him. He and Mom simply hadn't had the same amount of time to devote to the older children. They'd been there, but frequently our older siblings had interacted more with our live in nanny. So, even though they had Dad longer, having all grown to adulthood before moving out, it seemed like Michael and I had gotten to experience him more deeply woven into the fabric of our lives.\n\nEven now, I think that since Michael and I had still been living with our parents, it made it feel like the impact upon us was the largest. Dad always made time for us and was deeply interested in everything we did. His absence wasn't merely the loss of a father figure, it was like losing our best friend and confidant. Our sorrow, nevertheless, went mostly unnoticed as we were plunged into the abyss together. We weren't neglected, it was simply a very complicated time in our family's life for everyone involved.\n\nThe accident had happened while our Dad (Seth) and our youngest brother (Frank) were returning from a case in another state. It was Frank's first big case. Dad had been so proud when Frank passed the Bar at age twenty-six. Dad's death had just been the first bad news though; the second part was Frank had been mostly paralyzed from the waist down. He might still practice law, but he'd do so from a wheel chair.\n\nThe day following the accident, the remainder of the family had arrived for our father's burial and directly following the service, they came to our home to observe the seven-day mourning period, \"sitting Shiva\" required by Judaism. This was mostly done out of respect for our grandfather, who was a practicing reformed Jew, but also for the other members of the family that followed these traditions. The house was full of mourners, each wearing their torn outer garment, a ritual known as keriah, but there were constant and unavoidable interruptions, which hampered and detracted from Dad's remembrance.\n\nFrank's immediate care and recovery needed lots of supervision and it required Mom's attention as she sought out top surgeons to oversee and direct the surgeries he needed. All of these additional burdens meant we couldn't observe Shiva as completely as some would have liked. There were simply too many other matters to attend. We did have an opportunity to mourn and remember Dad but these other events conspired to isolate Michael and myself. Together we suffered in codependent silence.\n\nSomehow, Mom hadn't fallen apart during the events that followed and having to see to Frank's care helped her focus on something she could do to make things better. She and Dalia had alternated turns being at the hospital. Dalia was the youngest of our older sisters and she'd just gone through a rough divorce that June. She and Frank were actually fraternal twins who had always been very close and following the accident she moved back into her old room in our house for several months. Luckily for Michael and I, she'd stayed on with us while Frank was slowly recovering. We'd relied on her for information, since she was more forthcoming with us than Mom was. She thought we were old enough and should know about Frank's condition.\n\nThe doctors were saying he would never walk despite the fact that he had some minor movement in his toes. Even though I was fifteen and Michael was fourteen, our Mom thought we should be sheltered from the events as much as possible. She was probably hiding her grief from us, but at the time I'd been consumed with our loss. As I looked back now, I have to mark this as the beginning of Mom's over-protection of us. Of her eight children, we were the youngest by nearly ten years. She didn't let us go to the hospital or the convalescent home while Frank was undergoing rehab. Dalia gave us less sanitized details of Frank's ordeal.\n\nOur older siblings and their families were all in the home for several days around that Thanksgiving as well, which contributed to the chaos. Our oldest brother, Ben (age 29), was there with his wife, Anna, and their two children, Lev and Aya. Our oldest sister, Rachel (age 28), and her husband Jon had their daughter, Mellony. David (age 27) and his wife Colleen had their young son Zach. Sarah (age 26) was accompanied by her husband Robert. Dalia (age 25) was helping Mom the most as she and Frank had always been so close. That left us in the buzz of all the comings and goings of siblings, aunts and uncles, our grandparents, a live in house keeper / nanny, various attorneys from the firm and visitors galore.\n\nThe trauma to the entire family was seismic and the aftershocks of Dad's passing touched everyone. In hindsight, I know everyone was doing the best they could, especially Mom. However, at the time it seemed like Michael and I were left to our own devices to sort things out. It simply never occurred to anyone that we might need therapy or counseling, instead we got sheltering. I thought about this as the miles of leafless trees passed outside my window while I drove on autopilot. The solitude of the soft white noise from the tires on the road lulled me back into my thoughts as my mind continued to try and work through these issues.\n\nThose months of suffering following our Dad's death put Michael and me on a path inward away from everyone. Initially, we were merely lost in the shuffle of all the family. Then there was the intense focus on the recuperation of Frank with the aid of Dalia in the family home until they moved closer to the firm and rehabilitation center. On very few occasions, did we actually see Mom cry, but the day they moved out had been one. Perhaps having completed this goal, which had so consumed her time, she finally had the time to consider her loss of Dad. We had both noticed and her sorrow saddened us as well, there seemed to be nothing we could do.\n\nDuring all of the upheaval in our home, there was an initially unnoticed side effect of our despair. Michael and I were suddenly failing at school and it resulted in both of us being held back a year. It made our high school life become a bit lonelier for us as our few friends advanced. The disassociation from our friends pushed Michael and I even closer together in a self-reinforcing cocoon of solitude. We were together so much that we'd often slept in one another's rooms.\n\nAt some point I began to obsess about our dependency upon one another. It was like a slight itch in the back of my mind that I kept going back to, but could never scratch. To me our interdependence seemed like it might be getting out of control. I began worrying about how much we needed to be with one another. Eventually, these concerns had prompted me to start reading; what I couldn't get in the library, I found or ordered from the bookstore. Self-help books began to populate my shelves. Lots of it was total quackery and I knew it. Quaint ideas about life altering schisms were my b\u00eate noire. The books that kept and held my attention were ones that had factual information backing their claims. I quickly found that I knew what I wanted to be. I didn't need tests or councilors to tell me.\n\nBy November of my senior year I'd already gotten accepted to the university I wanted to attend. I'd gotten a scholarship for school, but would need to pay for my own housing. The memory of the acceptance letter's arrival stuck in my mind. As I had read it, I could remember thinking, The only good thing to come of our father's death, was the settlement money. It was a fairly idiotic thought and I know that now. At the time there still weren't many positive things to grab onto and somehow my mind accepted that ridiculous idea. If it hadn't been for the medical expenses, our family would have had funds to send Michael and I to the top schools, just like our siblings. Insurance had covered some of these expenses, but from what I heard later, we were going through savings pretty fast.\n\nIn the end, the settlement with the corporation, responsible for the truck that flattened Frank's cute little MG convertible, had added to Mom's and Frank's wealth some, but mostly it'd helped reimburse her for all of the medical care that he'd needed. However, it'd also consumed enormous amounts of her time. When she wasn't dealing with Frank's issues, she was working that case. All other cases had been pushed to junior attorneys in the firm.\n\nNow going home to see Michael for the first time in nearly four months, I was worried how we would react to one another. Our dependency had only increased over the high school years. It was what had put me on the path to become a psychologist. My internal debate over whether to become a psychiatrist or psychologist had been fairly short once I decided I wanted a doctorate rather than a medical degree. We both needed help but I didn't believe that either of us was in need of prescription drugs. So, I had thought, perhaps na\u00efvely, that I might provide it for both of us. When I told him I was going to Harvard, it had nearly driven him into depression. However, when he found I was composing a letter declining the offer, he tore it up and selflessly insisted I go. It was that strength in him that convinced me we might eventually be okay.\n\nWe spent countless hours together the summer following my graduation from high school. We swam in the pool and the ocean, played tennis, road our bikes to the park and talked endlessly. We made a day trip to Boston with Mom to celebrate the bicentennial.\n\nFor his eighteenth birthday, on July 15<sup>th</sup>, I took him back to Boston with me to look for an apartment near the school. It was a combination trip, with the first part focusing on him. We went to a respectable restaurant and had a nice birthday meal and his first legal drink, although we frequently had wine at home. Afterward, we toured around the city a bit more and found a hotel. Then we spent a couple of days to find something that I felt would work and not eat through money too fast. We both agreed that the high-rise apartment was a good deal and would be safe.\n\nAt the end of the week, Mom made a trip in from her office to sign the lease for me and we returned home. The day we returned home was when Mike's behavior began to spiral a bit as the reality of my departure settled in on him. From that night until I left for school, Michael and I slept in the same bed. He would barely let me out of his sight and desperately sought to spend as much time together with me as he possibly could.\n\nI take the blame for letting it happen. I was concerned, but was unable to alter my behavior. It was never sexual, not once. Our isolation combined with the trauma had stunted our emotional and sexual maturation. Our social skills were fairly immature as well, although we had some activities outside the home, such as our involvement with the tennis squad. The fortunate side effect was that through our interaction and isolation, we had eventually excelled in our studies. The unfortunate part was that the emotional bond we'd formed was going to be challenged the day I left and I didn't have the inner strength to soften the jolt Michael was about to receive. Honest introspection told me I was clinging to him as well.\n\nThe night before my departure culminated with an event that would change everything. Mike was steadily withdrawing that last week and I could see what it was doing to him. I'd tried to reassure him and encourage him to do well while I was away. Our last night together, he had cried softly against me in my bed. I'd taken his hands and squeezed them, but he was inconsolable. Hugging him closely only seemed to make the matter worse. When I pushed him flat and covered his face with kisses he hugged me back, but was still distraught. Finally, I'd kissed him on his lips. These kisses made him stop but as I lingered the kiss became distinctly unsisterly. We fell asleep in each other's arms as we often did. However, that night something about the relationship had transformed. I wasn't positive, but during the interaction as I had lain across his chest kissing him, I'd sensed he'd had an erection. It gave me a somewhat guilty feeling, since I knew that if there had been one, it had been caused by our contact.",
        "The next morning at my car as I was preparing to leave, the scene was emotional. Mom hugged me tightly with some tears in her eyes. When Mike's turn to hug me came, he had cried openly in front of Mom. I kissed him on the lips again. Finally, I'd broken the embrace and told them both how much I loved them. They both wished me well in my studies. As I had driven away I was sure Mike and I both knew the nature of our relationship was undergoing a metamorphosis. I hoped that given some time apart we could get passed all of this and resume a normal relationship.\n\nI kept my word and stayed in contact with Mike after I left. I would call him on weekends and he'd seemed okay when I called. I made a point to write him at least once a month. He replied to all of my letters and even wrote me one out of sequence that was very upbeat. He was applying to Harvard and wondered if he could live in my apartment with me if he got accepted. I hadn't responded to that letter yet because my apartment wasn't very big and only had one bedroom with a twin bed. I was going to talk with him about it over Thanksgiving break.\n\nNow, as I approached the turn off to our home, I realized my heart was racing. Mike would be there. I didn't want to disappoint him, but I was worried that his living with me might set us back. I turned on my radio to try and distract my thoughts only to be caught up in the lyrics of one of my favorite songs, 'I'm Not In Love' by 10cc. Its breathy background vocals laid bare the true nature of my feelings of denial.\n\nThe road sign welcoming me to Rhode Island - The Ocean State gave me a warm feeling inside. The closeness of water sometimes preserved a few more leaves on the trees in the area even this late, but this year only a few stragglers remained and evergreens were about the only barriers to viewing the landscape. Just a bit more driving and I was in Bristol and shortly after that, I rounded the last turn, where the absence of leaves allowed me to see the old home just down the road.\n\nPulling into the long winding cobblestone drive the leaves whipped up in the draft of the Thunderbird. The place was looking like it needed some attention. Only Mom and Mike were living there full-time now. The place was huge. I called it a home but most people would probably say it was an estate or mansion. A large charcoal black granite rock with one face highly polished welcomed me about a quarter of the way up the drive. On the face were ornately engraved large silver-white letters of the name as Dad had declared it: Mokem Miklet, which was Yiddish and roughly translated as 'attempt to create a refuge or sanctuary'. The marker was nearly half the height of the tall dual lantern gas lamp post that stood next to it.\n\nDad had bought the initial property with a very small house on it before Mike or I were even born. The small house was used as a guest cottage now, since it was only two bedrooms, one bathroom, an eat-in kitchen and a small family room. It had been big enough when my parents just had Ben and Rachel but when David was born Dad had put his grand plans into action and Mokem Miklet began to take shape.\n\nOver the next several years Dad added something new each year. First was a much larger residence which was built a bit away, but caddy-corner to the smaller house so a traffic circle was formed. The main house had ten bedrooms and was finished right after Sarah was born. It had two masters on the main floor, four bedrooms on the second and third floor. The ground floor also had a large family room, spacious eat in kitchen, dining room, an office for Mom and Dad, a small den, a sitting room and two car garage.\n\nShortly after I was born Dad added a pool and a pool house with a sauna. Some of my first memories are of me and my family in the pool. When I started school, he added a tennis court because Dalia and Frank had gotten onto the high school tennis squad. Mike and I had started taking lessons at a fairly young age because of their interest. Eventually, we followed in their footsteps and joined the high school team. It was the only team type activity in which we'd participated and another point of shared interest we stayed with through high school.\n\nAs the older children started to drive Dad added a separate six-car garage that was three bays wide and two deep which had two apartments overhead. He'd referred to those as the double mother-in-law apartments. Both of my grandmother's had used them a few times over the years, but the guest house was much more practical since there were no stairs. Ben had lived in one of the garage apartments full time before he was married and they were frequently used by visiting friends or adult children. They gave a little more privacy and independence to the occupants. Once the larger garage was completed, the original garage had been bricked in and converted to a play room with pool table, TV and wet bar.\n\nThere would be plenty of room for the eighteen of us this Thanksgiving. There was still an outside chance that a couple of aunts, uncles and grandparents might come as well. Our folks were both the youngest children in their families. So their brothers and sisters were all retired or semi-retired. Our Dad's mother had passed last year, but his father might come. Mom's parents were slightly younger so they would probably come but it depended upon the weather.\n\nAs I got closer, I could see all three bays of the six car garage were open and I pulled through the middle one to park at the exit door. Beyond the open exit door I could see the tennis court just past where the drive split off and rejoined the long winding driveway. Looking through my driver side window, I smiled as I scrutinized what was presumably Mike's new toy.\n\nShortly after I'd headed off to college, Mom had taken Mike shopping for a car. Up to that point, he had been riding with me or using Mom's car when he needed to go somewhere. Mom might have been putting off buying him a car out of worry but once he was a senior, he was starting to need hers more and more, so she finally suggested he should have his own, and he'd jumped at the opportunity.\n\nThey had settled on a Jeep Wagoneer that had four wheel drive. I guessed Mom had probably accepted this choice, since she was funding the purchase and she was still a little concerned about safety with the history in our family. The Jeep met her requirements since it had higher road clearance, higher visibility and was a larger vehicle. The four-wheel drive part was just the thing for Michael's tech side. The day he got it, he'd called me and talked for a half-hour about its QuadraTrac automatic four wheel drive, Trac-Lok differential, power disc brakes, eight track tape player and countless other details he'd absorbed about it.\n\nTurning off the engine, I unbuckled myself and reached to open my door, only to find it swinging outward and away from my reach. Just as suddenly, Mike took my extended left arm and assisted me from the car, nearly lifting me from my seat in his eagerness to hug me. Perhaps he'd been tinkering in his Jeep but I hadn't seen him waiting and the surprise of him being there, holding me so tightly, heightened my anxiety instantly.\n\n\"God, Maya. You don't know how much I've missed you!\" he exclaimed.\n\nI hugged him back. \"I missed you too,\" I whispered, as my voice cracked and tears started to flow.\n\nDamn it, I cursed my weakness.\n\nThis was exactly what I hadn't wanted, although my body was responding differently. Mike's hug was very comforting; it made me feel safe, protected and warm. There was still a bit of a nip in the early morning air. The damp air coming off of the salt water made it feel that much cooler. It soaked the heat right out of you. Finally, breaking the embrace I reached back into the car to retrieve my wool coat and pulled it over my shoulders.\n\n\"Here, let me get your bags,\" Mike said, as he held his hand out for the keys.\n\nI handed him the keys and followed him to the trunk. His long dark hair was parted on the right side and was partially covering his left eye. Out of habit, I pushed it back in a comb of fingers so I could see him. He'd kept his hair almost shoulder length since the accident. It was how he hid himself from the world. I needed to look into his deep blue eyes. They were sparkling in the low angle mid-morning sun. He broke into a broad smile full of teeth, the dimples in his cheeks forming instantly, which made him look so cute.\n\n\"What?\" he asked.\n\n\"It's really good to see you, Mike,\" I told him very honestly.\n\nHe looked well. His features weren't as gaunt as they had been the weeks leading up to my departure. He had grown up some emotionally; it was clear. Maybe it was me who was still dependent. I didn't want to think about it, so I tried to redirect my thoughts.\n\n\"I like your Jeep,\" I said, pointing to the Wagoneer.\n\n\"It's fun to drive.\"\n\n\"Looks like I'm the first to arrive. Mom's last letter said I'd be staying in your room, right?\" I asked hopefully.\n\n\"I think that was the plan. The rooms will be almost full. Mom was trying to leave a couple rooms vacant in case others could make it,\" he said.\n\nHe headed out of the garage lugging the heavy ivory colored case. I slung my backpack over my shoulder, closed the trunk and then followed him out.\n\nAs I followed him, I thought about the arrangements Mom had made. Even if she'd have put me in my old room, he would have been on the other side of the Jack-n-Jill bathroom. She probably knew that wouldn't last, she'd never tried or even suggested that we distance ourselves from each other.\n\nI followed Michael across the court yard between the two houses. The large holly bush in the central brick planter was full of nearly red berries this year. Thick solid wrought iron hand rails welcomed us as I followed him silently up eight wide brick steps that led to the front door. A newer brick wheel chair ramp came up from the left side of the front porch. A similar ramp had been installed at the back of the house, but there was no way to retrofit the steps into the garage play room, although Mom had its exit doorway widened.\n\n\"Where's Mom?\" I asked, when I realized her car hadn't been in the garage and wasn't parked in the circular cobblestone path either.\n\n\"Oh, she had to make a trip into the office shortly after you called. She didn't say what for exactly,\" he said shrugging.\n\nMike opened the rightmost of the darkly stained and carved redwood double doors. He held it open for me and as I passed through it, I observed the tarnished bronze mezuzah case near the upper portion of the right-hand door frame had been polished a bit. The raised Hebrew lettering and Star of David shown a bit brighter, which made me smile. The item wasn't new, it'd been there as long as I could remember but it'd recently been cleaned a bit which made me believe they'd probably had the mezuzot parchments inside the case checked by a qualified scribe as well. It's placement on our door frame wasn't unusual either, since it was common even for nonobservant Jews to have them. The cleaning and checking of the parchments, however, was about Mom or Mike trying to make our relatives, that were religious, feel welcome.\n\nOnce I was inside he closed the thick solid door and led the way through the vestibule. Then he headed up the right redwood-tread stairway towards Michael's and my old bedrooms. The stairs to the left led to Rachel and Sarah's rooms. Ben, David, Frank and Dalia's rooms had all been on the third floor, but were vacant most of the time now. Dad had built the house so that the upper floor could be isolated from the rest of the house and use little or no cooling and less heat, just keeping it warm enough that pipes wouldn't freeze.\n\nAt the top of the stairs we turned left following the open redwood banister railing supported upon white spindles and sturdy redwood posts. The open area here overlooked the vestibule and waterfall fountain cascading prism chandelier that hung there. When we reached my room, I looked inside to find most everything was like I'd left it four months ago. My tall mahogany four poster queen bed was nicely made with extra pillows, ruffley topper and matching comforter. The bed was at an angle to the wall and my matching mahogany chest on chest highboy dresser sat in the wedge it formed. The wall at the other corner was decorated with a few awards and mementos. A window separated it from my desk which contained a lamp and some stuffed animals from childhood. Seeing them now, I found these inanimate things brought back so many memories and made me wish I were living here again.\n\nThis long weekend, however, I would be rooming with Michael. Mike really disliked being called by that name, but it was how I still thought of him. I had to mentally correct myself frequently, even after all these years. It probably made him think about Dad's death. That was how we'd been called to the office that portentous day. Michael and Maya Aaron, come to the office, please. A couple weeks later he was Mike, like that other guy never existed. He wouldn't even answer if you called him Michael.\n\nApproaching the redwood door to his room I saw the ornately polished pewter Mike sign attached by a couple hooks. I was instantly reminded of how the plaque came to be there. We had gone to get our licenses at the same time; I was seventeen and he was sixteen. Mike had encountered difficulty after he'd passed the tests because they wouldn't put 'Mike' on his license. He'd obstinately refused the one they'd made him. They said they were required to use his full legal name. So, Mom actually had it legally changed. It was one way she had acknowledged his grief, his damage and tried to help fix it. The plaque had been a gift the day the paperwork came back. Dad probably wouldn't have liked it much since Michael was named after our Dad's father in a fashion, Lev Michael Aaron. However, to Mike, it was a new beginning.\n\nMike's room was obsessively tidy and orderly. To me, this simply seemed to mirror the compartmentalization that must be occurring in his mind. Inside the room, his sturdy walnut sleigh queen bed was made with a handsome royal blue patchwork quilt and two king size pillows. There were no ruffles or frilly bits in his room. Comparing it to mine, it was kind of Spartan. His simple antique dresser had an antique shaving stand on it, which had an attached pivoting mirror. There were no nick-knacks, pictures, watches, knives or anything of that nature visible.\n\nHis desk was similarly clear. There was a thick piece of glass that was used to protect the writing surface. But there was nothing atop that or even slid underneath, not even a calendar. All the little drawers across the top were where Mike kept anything that might have otherwise set upon his desk. On top of the drawer section was a wind up antique mantel clock which had been our great grandfather's. Mike kept it wound and cleaned. He'd even repaired it once, when horseplay had knocked the pendulum into one of the gears. I think its ticking calmed him, providing a metronome for his highly sensitive mind. Soft gentle sounds seemed to soothe him. Even as a young boy he would frequently be brought to tears when there were loud noises or yelling. In grade school, it had earned him the unfortunate diminutive of 'crybaby' for a time.\n\nThe window facing the south had sunlight streaming in through the open floor length royal blue drapes that matched the patchwork quilt. The mid-morning fall sun gave the austere room a somewhat cheery glow. To the right of this window was the door to the bathroom, which stood open. Seeing it reminded me I needed to use it. While Mike put my bag on the blanket chest, I dropped my backpack, purse and coat at the end of his bed next to that and made for the door.\n\n\"I've got to use the privy, I'll be right back,\" I told him.\n\nEntering the restroom I found Mike's aroma thick and musky. I closed the six panel door, lowered my slacks and panties so I could sit and void my bladder. Before the accident, there had been frequent conflicts over whose turn it was or how long we each were staying in the central portion of the bathroom. The fact that there were water closets off either end had made things a little better, but the shower area had been a battleground. After Dad's passing, we were suddenly much gentler with one another. We were patient, calm, subdued, supportive and, yes, inextricably codependent. I wiped myself absently in the realization that I still was. I found the distinctly teenage male odors here prodding my mind towards the memories of those tender moments spread out over the final years of high school.\n\nStanding I returned my panties and straightened them as I tried to ignore the tingle that was developing as the dampened cotton contacted me. I pulled up my slacks and wondered when that might have begun as I washed up at the black and white marble pedestal sink. I rejoined him back in his room and found him sitting at his desk in the accompanying maple desk chair. He swiveled it towards me as I entered his room. His arms relaxed on the curved wooden arm rests as he watched me sit on the edge of his bed facing him.\n\nAfter a few moments of silence, he pressed me, \"You didn't reply to my last letter, Maya.\" He certainly wasted no time coming right to the point.\n\n\"Mike, I'm sorry. I was busy with midterms when it came in the mail.\"\n\nWhile that was absolutely true it didn't reveal that I had opened it immediately and read it through several times. I'd then made numerous attempts, to try writing him back, but each response quickly met its demise as an addition to an increasing pile of crumpled papers in the waste bin by my desk inside my apartment, because I simply couldn't bring myself to say what I knew should have been said. I still couldn't.\n\n\"I don't know if I can do it without you,\" he said softly. \"These past few months of high school have been even harder with you gone.\"\n\nWe were always very open with each other about our feelings. That honesty made it much easier to help one another after the accident. I hadn't been playing fair these past months. After I left for college, I'd been hiding my concerns from him with the miles between us as my excuse. Hiding wasn't really the right word, maybe avoiding them whilst obsessing over them. Mike knew of my concerns to an extent already, he just didn't agree that our codependency was a problem to be avoided. Quite the opposite, he cherished what we had. Being completely honest with myself, I cherished it as much or more. But I worried, I worried a lot. We were already so damaged.\n\nMike's chair squeaking slightly brought my attention back to the moment. My long silence was wearing thin and the noise was due to him turning to stare out the other window, his eyes glassy and sad. I went to him at once and leaned to hug him.\n\n\"Of course, you can live with me.\" I heard the words tumbling from my mouth. That's not what I'd told my mouth to say. I was going to use softer Let's see... kinds of phrases.\n\nOh, well. Ironically, my weaker self was taking charge of the situation for the moment, I thought.\n\nHe leaned forward in the chair hugging me tightly around my waist. His head resting against my tummy, I ran my hand through his long dark hair comforting him. A small damp spot formed on my slacks as a few tears escaped his right eye.\n\nThen without really thinking about it clearly, I was raising him from the chair to a standing position so we could hug more directly, more intimately and perhaps help stem those tears. Mike met my gaze and I wiped the tears from his left eye. I hugged him and our faces brushed together. He returned my hug with strong arms and I suddenly found his face tilting to meet me in a kiss. I should have turned away. This wasn't going to make things any better and it might make them worse. But I didn't. I hadn't the willpower but it was more than that; I didn't want to turn him away. It was essentially where we'd left things that night before I'd departed for college. Only now, he was returning those feelings to me tenfold.",
        "My head had already begun tilting to match his and Mike's passion was contagious. I found myself wanting the sweet kiss more than I should and from somewhere deep down I ventured a risk as I slid my tongue out timidly. He must have been thinking the same thing as his found mine. His breath was coming more forcefully through his nose. His warmed exhalations had an intensely erotic effect on my senses. My knees started feeling weak and I was suddenly sitting atop his bed on the royal blue patchwork quilt. Its soft coolness soaked through my thin khaki slacks. I had broken our kiss momentarily, but he joined me there quickly. He sat to my right and pressed me backward to resume kissing while lying next to one another.\n\nThere were no words spoken, only soft kissing and caressing. There had been nothing overtly sexual in any of our behavior to this point and I strained to resist the urge he was arousing in me. Obviously, our tongues were the exception to that and they continued to entwine as they played back and forth between us. However, as the extended moments passed, Mike's caresses became a little more exploratory as he allowed his right hand to pass over my breast. He didn't pause or grope me, but I knew he felt my tight nipple pressing through my blouse. I desperately wanted him to continue, to go even further, but my mind was screaming Stop! at me. Unwittingly, I somehow ignored that inner voice of reason and allowed our actions to continue. Soon his hand returned more frequently and eventually stopped atop my left breast. He cupped me softly to feel the gentle slope of my petite bosom.\n\nHis necessity intensified as he kneaded me in his gentle hand. Finally, he could resist no longer and lightly tweaked my nipple, which garnered a breathy moan into his mouth. The sensation was electrifying and I found my hands were urgently roaming his body seeking out his crotch. When they reached it, the front of his jeans were pressing stiffly outward. Rubbing his erection through his pants, I knew I was going too far, but I couldn't bequell my actions. His excitement and genuine need for me overrode my sensibilities. I pressed my fingers around the edges of the bulge. He felt large through the rough denim material.\n\nDespite how close we'd been after Dad's passing, I couldn't recall ever seeing Mike undressed any more than swim trunks. Sure, we'd bathed together as very small children, but that had stopped before we were ten. From then through adolescence we'd been very private. It seemed weird; we'd shared the bathroom all these years, but hadn't ever accidentally intruded on the others privacy. Perhaps it was how in tune we'd been with each other's feelings and needs. Now, however, I really wanted to see or at least feel him without this restrictive covering material.\n\nMy tongue skirmished against his as I worked to unbutton his jeans and slip my hand inside his loose boxers. Suddenly, Mike froze when the skin of my hand made contact with the stiff warm flesh of his penis. I thought fleetingly, that perhaps I'd pushed him too far but he came back into motion as I proceeded to encircle the tip of his erection between my thumb and forefinger. Mike worked his fingers to open a button on my blouse. He reached inside and under my bra to make contact with my elongated nipple. I released my grasp around the bulb and slid my hand further down the full length of his manhood. It was longer than my hand with thick veins that stood out and pulsed lightly. As I pressed further, I gently cradled his balls with my fingertips at the thick base of his root. He was gently fondling my breast and tweaking my nipple, delighting me with his dexterous digits, when I thought I heard something and broke off the kiss.\n\nHis eyes widened sadly, \"Did I mess up?\"\n\n\"No - did you hear something?\" I whispered to him.\n\nHe didn't have time to answer, as a commotion downstairs startled us out of our intense make out session. I quickly removed my hand from his pants and buttoned my blouse back. There were multiple voices directly below us in the kitchen. Mike busied himself straightening out his underwear and zipping up his jeans. I picked up the sweater from my open backpack and pulled it on.\n\nGetting off the bed, I picked up my purse and went to the restroom to check myself in the mirror. My shoulder-blade length brunette hair was a bit mussed, so I straightened it as best I could with my fingers. The natural waves in my hair made it fairly easy to hide. Scrutinizing my face I found no marks and I wore no makeup so there was none to fix. However, my lips did look a bit red so I reapplied some chap-stick. Finishing up I found my light blue eyes staring back at me judging my previous actions. Here I was allowing myself to behave exactly as I had feared. Regardless, I couldn't help but feel this new development with Mike was merely a natural progression of the abiding love we had for one another.\n\nI realized Mike was standing at the door watching me closely. \"I guess we need to go down,\" I offered.\n\n\"Yeah, but we don't have to rush,\" he replied, as he stroked my wavy hair. \"Are you - okay, Maya?\"\n\n\"Mike, I'm just so ashamed,\" I blurted out, without thinking.\n\n\"Of kissing me?\"\n\nIt was more than that, he had to know that. \"We can't let this go any further.\"\n\n\"Why? Don't you love me?\"\n\nNow he wasn't playing quite fair. Of course I loved him - I even wanted him right then, but the consequences. \"We need to go,\" I said wistfully, as I took his hand gently and drew him from his room.\n\nAt the bottom of the stairs we found Zach and Mica chasing one another around the large open family room. Although I saw them frequently, seeing Zach in this environment reminded me how much he had grown since we'd all been here four years ago.\n\n\"Where's David - um your dad?\" I asked them.\n\nZach was the older boy and he answered, \"In the kitchen with the sammies.\"\n\nAs Mike and I headed towards the kitchen, he said, \"You two need to settle down a bit or take that outside.\"\n\nThe two boys looked at him and said, \"Awe, Uncle Miiike,\" in their whiniest voices.\n\nIn the kitchen we found Mom, David and his wife Colleen. They had placed several large bags of sandwiches on the center island. The fuller of these contained a surplus of Reuben sandwiches (the sammies as Zach had called them). The other bags appeared to contain a variety of other sandwich types: roast beef, pastrami, chicken salad, egg salad, club and others certain people liked. There were also two brown grocery sacks filled with large bags of potato chips, corn chips and my favorite, boxes of Bugles. The aroma from all of the fresh deli food was making me remember I hadn't grabbed anything for breakfast.\n\n\"Looks like you've got enough to feed a small army,\" I said to Mom, as I approached her.\n\n\"Well, we've got folks coming in throughout the day and I wanted to keep it simple. This way people can eat a little something any time they arrive. Plus these will all keep in the refrigerator for people to snack on throughout the long holiday weekend.\"\n\nI hugged her tightly and she kissed my cheeks. \"You look flustered, Maya. Is everything okay?\"\n\n\"Yes, I think I'm simply a little hungry, since I skipped breakfast. You mind if I start?\"\n\n\"Please, go ahead; this is your home, dear.\"\n\nWhile I was talking with Mom, Mike was chatting with David and Colleen. Though they didn't live very far away, they only made the trip down once or twice a month. I listened to their conversation a bit and interjected when they appeared done.\n\n\"I'm going to get a half of one of those Reubens warmed up,\" I said. \"You want the other half Mike or are you hungry enough for a whole one?\"\n\n\"I'll split one with you,\" he replied.\n\n\"How about you two?\"\n\n\"We'll wait a bit,\" David responded.\n\n\"Yeah, I'm sure the boys will be in here at any moment,\" Colleen added.\n\nMike joined me by the island and we both reached for the foil wrapped sandwich that was protruding from the paper bag lying sideways on the granite counter top. Our hands touched and he jerked his hand back, like something had bitten him. He was being somewhat jumpy and I wondered if it would get any better.\n\n\"I'm going to reheat mine, it isn't as warm as it is in the deli. You want yours reheated, too?\" I asked him.\n\n\"Like it is, is fine,\" he said grabbing thick molded paper plates for us both.\n\nThe sandwiches from the deli Mom used were huge. Opening the foil I put the bigger half on his plate. He immediately began devouring his while he resumed chatting with David between bites. I placed mine in the toaster oven for a minute open faced. The cheese reached a perfect state of meltiness right as the little bell on the oven dinged. Placing it on the plate Mike had given me, I joined him at the large kitchen table, when I heard more people coming in the front door and a clamor of footsteps.\n\nZach was screaming, \"Mellony, Mellony! Look Mom, it's Mellony.\" He held her hand as they both came into the kitchen. His face beamed with excitement to see his older cousin. Our sister, Rachel, and her husband, Jon, followed them into the kitchen and headed to Mom for hugs.\n\n\"Yes, dear. We told you she'd be here,\" she said, as she mussed his hair. \"He's been bugging us for weeks about seeing her. She really made an impression on him when he was about three. They grew pretty close until Rachel and Jon moved out to Berkeley a year ago when he took a staff surgeon position with the hospital,\" Colleen told us.\n\nColleen and David lived in Mattapan about ten miles from my apartment just outside of Boston. I saw them and their boys on a semi-regular basis. They had me over frequently for meals on weekends. Mica was almost four and Zach was seven. The boys would have me read to them endlessly. Our middle brother, David, had a small accounting firm where both he and Colleen did work for a number of small businesses and a handful of individual clients.\n\n\"When are Sarah and Robert arriving,\" I asked Rachel, as she entered the kitchen followed by her husband Jon. Mellony was their only child and had just turned ten last month.\n\n\"They should be here later this evening. They got a 10:00 AM flight from San Francisco, but that doesn't put them into Boston until about 6:00 PM and then they have to drive,\" Rachel replied.\n\n\"You live pretty close to them, right?\" I asked.\n\n\"Yeah, we were going to fly up together, but Robert had an obstetrician out sick so he had to fill in for a delivery that was scheduled.\"\n\n\"I guess that happens when you are Chief of Obstetrics,\" Mom said. You could hear the pride in her voice as she spoke of her son-in-law. Then she filled us in on another blank for everyone present, \"Ben and Anna should be here shortly; I called them from the office as I was leaving.\"\n\nBen and Anna lived a little ways away in Providence. They would be coming with their son Lev who was eleven and daughter Aya who was ten. Ben was a civil engineer working for the state and Anna had an office in their home where she did some CPA work part-time.\n\nMellony, Zach and Mica who hadn't been interested in sandwiches a few minutes ago were now in the kitchen begging their respective parents to fix them some. The kitchen was filling up and the turmoil was already effecting me. I looked over at Mike and saw that he was looking even more overwhelmed than me.\n\nI moved closer to Mike and whispered, \"Hey, let's go out on the dock and eat.\"\n\nHe nodded, so I grabbed one of the boxes of Bugles. We each gathered our plates and quietly left the din of the kitchen. Outside the midday sun shone brightly and the morning chill was mostly gone. The old covered dock was just visible at the edge of the water.\n\n\"Wow, they've gotten bigger and noisier,\" Mike said, as we strolled past the pool along the lightly pebbled walkway to the water's edge.\n\n\"Yeah, it's going to be pretty odd having them all here,\" I said, my voice trailing off lightly.\n\nI couldn't help but think about the last time they were here. Well, Mica hadn't been here, Dad never got to see that grandson. He'd never see any of my children or Mike's either. My eyes started to water. It was partly due to the breeze coming off the water, but it was sad to think about all the things Dad would miss.\n\nMike took my arm. \"Hey, you. Stop that or we'll both be red eyed before the rest of them get here.\"\n\n\"Oh, Mike. It's all so crazy. I love my family but I can hardly contain the flood of emotions that come over me when we're all together.\"\n\nMike squeezed my arm and told me, \"I feel the same thing. It's like it crushes in on me, plus the underlying - \" He left the words unsaid, but I felt them too.\n\nArriving at the dock, the salt air brought back so many memories. We seated ourselves on one of the long benches attached to the wooden half walls that were on either side of the open front end of the dock. There was a ladder into the water but no boat and no slip for a boat. The dock wasn't really a finished project, it was another item that had always been on Dad's grand plan and he'd started it around the same time as the tennis court. He'd wanted to retire and sail around on a sailing yacht, returning to the house to visit his children and grandchildren, but that hadn't happened - wouldn't happen.\n\nMike and I sat in silence eating the rest of our sandwich and chips. The Reuben sandwiches were huge; a half was more than enough for any normal person. The corned beef was stacked nearly two inches thick. I didn't think I'd even need dinner. Mom had really thought of everything.\n\nI hoped Mom and the others didn't feel like we were abandoning them. Mike and I were often off to ourselves. That combined with the fact that all the children and grand-kids would soon be there, let me feel like I was giving her time with them. Having the crowd of them also meant Mike and I could spirit away without being missed much. Lost in thought, I found I was now chiding myself again for what we'd been doing before they arrived.\n\nA smile spread on Mike's lips. \"What are you thinking?\" he asked, as if he could read my mind.\n\n\"A bunch of different stuff but you know what I was thinking.\" I shook my head, I couldn't get the thoughts of my hand on his penis out of my mind. My nipples were hard again and I felt his gaze drop to stare for a moment.\n\n\"I know, how I feel about you has changed,\" he said, looking down towards the old wooden planks of the dock.\n\n\"What am I going to do with you?\" I asked rhetorically.\n\n\"Merely love me. I just need your love,\" he said almost pleading\n\n\"You know I love you, Mike. I really don't know if we should love one another like that. It seems like we'll end up hurting each other,\" I said. Trying to change the subject I asked, \"How are your courses going?\"\n\n\"I'm doing great in my courses. I haven't gotten back my SAT score yet and I'm a little worried about how I did. I studied a lot, but I can barely remember taking the thing.\"\n\nWe sat wordlessly looking at the water for a long time. I nibbled at my sandwich. It was delicious, but I really wasn't being very hungry. Absently, I pulled several Bugles from the foil bag inside the box and then handed the box to Mike. I thought about his worry over the SAT.\n\n\"I don't know about you, but I'd like to get some tennis time. You're still on the squad, right?\"\n\n\"Yeah, it's not as fun now that you're in college, but I'm still going. We're actually doing pretty well this year.\"\n\n\"It'll look good for getting admitted. SAT scores are only part of the evaluation,\" I told him hoping to ease his worry.\n\nI hadn't been eating well in the days leading up to this trip. I forced myself to finish the sandwich and nibbled several Bugles off the tips of my fingers. Mike's eye's twinkled as he smiled watching me. My fingers were still slender enough that the Bugles fit over them. Mike's had become a bit too large to pull it off, but his dimples showed me that playful side of his personality.\n\n\"You want to play some?\" I asked, as I stood with my finally empty plate.\n\n\"Yeah, it's really warming up. Let's dump these plates off and get changed,\" he said.\n\nHeading back to the house we held hands. As we strolled along the gravel path I couldn't help wondering where this was all going or what harm might occur if I merely gave in to Mike. Leaves blew across our path as we approached the pool area. Inside the walled area I could just see the pool cover. Leaves and puddles of water stood atop of it causing it to sag in areas. They needed to be removed before they froze in place for the winter. Stopping outside the mud room door, we tossed our garbage into one of the two large circular metal garbage cans and replaced the lid.\n\n\"Hey, I didn't bring my racket, you still have some extras, right?\" I asked.\n\n\"Oh, yeah! I recently got two new aluminum Prince Pros. I bet you're going to want to try one! It's amazing how light they are and their sweet spot is huge,\" he said.\n\nHis face was beaming. Mike always liked to stay current on things that interested him. Technology of all types seemed to fascinate him. You wouldn't know it from his room, but he had all types of techie stuff, from old clocks, to model trains, mechanical calculators and even some new electronic gadgets. He'd even built his own pong game from a Popular Electronics magazine article.\n\n\"We might have to be social for a bit, but I think they'll understand if we want to play some tennis,\" I said opening the door.\n\nInside we found Frank and Dalia amongst the kitchen crowd, but Ben and Anna hadn't arrived yet. Dalia was dressed in a lovely dress that came down just past her knees. The sleeves were mid arm and stylish. Her sweater was tied by the arms around her narrow waist. She stood behind Frank in his wheel chair. She didn't push him everywhere since he was pretty skilled, but in tight places like the kitchen, she would often help him out. Frank was neatly dressed in jeans and a light blue button down oxford cloth shirt that complemented Dalia's navy dress. They always dressed in complementary color schemes for as long as I could remember. Of course, they'd stopped doing that while she'd been married, but when she took up house with him here and then up closer to the firm; their twinning started happening again.\n\nI returned the remainder of the box of Bugles to the counter and I went to her at once. \"I've missed seeing you these past few months. I've been so busy with school.\"\n\n\"Oh, hey, sweetie. I didn't see you. Mom said you were off with Michael - um I mean - Mike somewhere.\"\n\nI hugged her tight. She was a few inches shorter than I was at 5' 7\". Her hair was very similar to mine in style and color. She was a very attractive wavy haired brunette with a much more slender form than mine. My legs were longer and more muscular, my hips were wider and my breasts were smaller. Mike was taller than both of us at 6' 1\" and Frank had been 6' before the accident. Both Mike and Frank had big broad shoulders. Frank's forearms were now extremely muscled.\n\n\"Yeah, we were eating down on the dock. Sometimes all the family cross talk makes it difficult for me to focus,\" I told her. \"We're probably going to play some tennis, you interested?\" We often played triplets (two-on-one) with Dalia after the accident.\n\n\"Yeah, maybe later though. We just got here. I was going to fix Frank something to eat.\"\n\n\"Oh, yeah, sorry, of course. Um, you need any help?\"\n\n\"No, Mom's got this whole thing planned to a tee,\" she laughed.\n\nWhile I'd been talking to Dalia, Mike was seated, talking with Frank. I hadn't overheard much of what they'd said but suddenly they were both laughing hardily. It was so good to see him happy, his recovery had been long and slow. He never recovered much movement below the waist. I could empathize, but I couldn't imagine how it must feel. He'd been such an active guy. We'd often played doubles before the accident. The four of us made our own little family clique. They were a little more than ten years older than us, but they'd been the last of our siblings to share our home. I was about nine when they went off to college, but they'd made regular weekend and summer visits throughout college.",
        "\"What's so funny you two?\" Dalia asked them.\n\nThey both got really red in the face and clammed up. I figured it was some guy joke. Dalia looked a bit perturbed, but I could see how much she loved Frank when she whispered in his ear. He replied and she was off to get him one of the sandwiches moments later. The noise from all the conversations occurring might have been the reason for their close whispering. However, it felt odd re-encountering it after having been away from them these past few months.\n\n\"Hey, Mike. I'm going to go change. I'll be back down in a few minutes, okay?\"\n\n\"Yep, I'll be up to change in a minute. Just catching up with Frank,\" he said, as another huge grin began to form on Frank's face.\n\n\"Give me a hug, Frank,\" I said, as I reached down and squeezed him tight. \"Don't you corrupt him,\" I whispered to him playfully.\n\nFrank whispered back, \"Don't you, either.\"\n\nHis words, although playful, caught me off guard. I wondered if the laugh had been about me. Surely not. Standing erect again, I smiled, but I was the one blushing now. I walked quickly from the kitchen. My nephews, no longer in the family room, I proceeded upstairs unaccosted. I started thinking about how Dalia and Frank interacted in the kitchen and wondered if Mike and I gave off similar vibes to people.\n\nIn Mike's room I moved my suitcase to his bed and opened it. I had over packed, but if I hadn't, I wouldn't have brought any clothes for tennis. I didn't bring my actual tennis outfit, but I did bring a short skirt, a tee shirt and some sneakers that would work fine. Stripping down to my bra and panties I folded my blouse and khaki pants. I was about to place them on the dresser but decided Mike might obsess about things out of place if I left them there. So, I began looking to see if he'd left a drawer free.\n\nI should probably have waited and asked, because the first drawer I opened revealed some magazines. It was a little shocking to see that the one on top had a woman with a vague resemblance to me and listed an interview with one of the candidates for president, who was now actually the president elect. Setting down the clothes momentarily, I removed the top one which was fairly worn. As I removed it, I couldn't help but notice the stack beneath it in the drawer must have contained a couple dozen more of them.\n\nLeafing through the one I'd picked up, I found her stapled picture on the centerfold. As I studied several of the other photographs on the pages in front of the centerfold, I couldn't get over the uncanny resemblance. My breasts definitely weren't as big, I wasn't tanned and my pubic area wasn't as neatly trimmed as hers, in fact mine was fairly thick. But the shapes of our faces and hair style were nearly identical, even though my nose might have been a tad different. As I stooped to return it, I noticed this magazine was much more dog-eared even though it had this month's date on it. The others in the drawer were in almost new condition. Suddenly the bedroom door was opening and I was caught with my hand in his drawer full of secrets as I returned the magazine.\n\n\"Mike, I'm sorry. I was looking for a drawer to put these in,\" I said reflexively grabbing up the folded clothes.\n\nHe saw what I had been replacing but didn't get upset or even blush. Instead, he continued into the room and closed the door quietly. \"Maya, you look a hundred times better than her.\" His eyes drifted over me.\n\nIt wasn't true. I knew it wasn't true and I couldn't understand why he was flattering me so. He'd never even seen me like that, but his words gave me a tingle all up my spine. As I got over the feeling I'd been caught, I realized he was staring at me. I tried, without much success, to ignore the fact that my nipples had become extremely tight and were now straining against the thin cotton fabric. I was consumed by the thought that perhaps Mike had been looking at these pictures of her while he thought of me.\n\nSuddenly, I made a logical leap. \"Mike, is this what you and Frank were laughing about?\" I asked, pointing at her.\n\nNow his face was bright red. Redder than it had been downstairs.\n\n\"I only brought up the interview. Frank was the one that mentioned we knew someone who looked better than the centerfold,\" he said. \"You do, you know?\" he asked, as he stepped to embrace me.\n\nI couldn't help my response. He was so adorable. I tilted my head to invite his kiss. We resumed where we'd broken off before Mom had come home with the others. Mike was less urgent now, but his access to me below the waist hadn't gone unnoticed. His hand was soon rubbing me lightly between my legs. My concentration went right out the window and my cotton panties were starting to soak through. I heard myself moan and it brought me back to reality.\n\nAs much as I wanted to continue, I had to break it off. \"Mike, we can't.\" I pulled away from him slightly.\n\n\"I know but I can't change how I feel. I'm so glad you came home. I missed you so much.\"\n\n\"We weren't like this when I left. What's changed?\"\n\n\"It was like this. At least I thought -\" He paused. A little tremor danced on his bottom lip. \"Didn't you feel it? That last night - before you left for Harvard - didn't you know? You saved me, pulled me back from despair.\"\n\nIt had been me. I had changed it. It wasn't intentional, but in my desperation to sooth him - those kisses, that long impassioned kiss on the lips, even without our tongues being involved, had changed everything. They'd sealed our entangled codependency. My guilt pressed in on me for a moment, but I fought back, what I'd done wasn't wrong.\n\n\"I did,\" I admitted. \"You were falling apart and I rushed in to save you. Nothing else was more important. Nothing else would calm you. I'd do it again in a heartbeat. You mean the world to me.\"\n\n\"I needed what you gave me - now I want it more than anything,\" he said. \"I've thought of nothing else these past few months.\"\n\n\"We can't do this right now. We have to be somewhat normal: play tennis, take walks or ride our bikes. We can't stay up here in your room together, someone will notice.\"\n\nMike relented for the moment, \"Okay, let's go play. At least we can be together.\"\n\nThings were different though and the ramifications were nearly instantaneous. When I went to my suitcase to get the skirt and tee shirt I'd pulled out, I didn't bother to cover or hide from Mike. As I began pulling on my skirt, Mike took things one step further and simply undressed directly in front of me. He didn't merely take off his shoes and jeans; he also removed his boxers revealing his excited penis. I gasped audibly as I saw it but he made no attempt to cover himself.\n\nHe walked right passed me to retrieve a pair of briefs from the dresser. With great effort I restrained my desire to touch his bouncing cock again right now. I didn't get the feeling he was showing off, parading or even trying to get my attention; it was like this was simply how things were now. Without thinking about it, I turned to watch him as he pulled the tight briefs up over his still engorged manhood. He saw me watching but made no indication that he was disturbed in any way. He watched me pull on my shirt with nothing but pure adoration in his eyes. When he pulled on a pair of shorts I realized his boxers would have hung down below the shorts he was now wearing.\n\nSomewhere inside his head, this all had some logical frame of reference. He couldn't change the circumstances, but some previous attitude had changed. Somewhere in his mind, another switch had flipped; this was now another aspect of our perfectly normal openness. We sat side by side on the bed putting on our sneakers. Then he was up and in his walk-in closet retrieving the rackets, like nothing out of the ordinary had happened. Back in the room with me he stood by the dresser as I finished tying my shoes.\n\n\"I did empty a drawer for you. You can put these in the bottom drawer,\" he said, as he pointed at my folded clothing.\n\nThen Mike pulled out the drawer at the bottom of his dresser to show me. He'd emptied out the biggest one for me. He always thought of everything when it came to my needs. That's how it was, he put me first in so many ways. I observed that his erection had subsided now. I took the folded clothing, placed them neatly in the drawer and closed it.\n\n\"Ready?\" he asked simply, as he offered me one of the shiny new rackets.\n\n\"Yeah, let's go,\" I said, as I opened the door. \"You have some balls?\" I realized the slip as soon as it was out. I knew Freud would say it was my subconscious mind, but I really didn't think it was.\n\nMike let it go. \"Yes, none of them are new, but we've still got the pickup hopper in the storage closet by the pool.\"\n\n\"Those'll be fine. I haven't played since I left. You're going to have me running ragged enough without fresh ones.\"\n\nWe headed back downstairs together and back through the still crowded kitchen. Our eldest brother Ben was here with his wife Anna, now. Their son and daughter, Lev and Aya, were at the table eating with their cousins. Ben and David were in a deep discussion and Anna was with the women. Although Lev was twelve and Aya was eleven, Mellony, who was closer to their age, only seemed to be interested in talking to Zach.\n\nMom was returning through the mud room door. I told her, \"We're going to play a bit. Do you need any help putting things away before we go?\"\n\n\"No, honey. You two have fun. Did you ask Dalia if she wanted to play?\"\n\n\"Yeah, she said, 'Maybe later'.\"\n\n\"We're probably going to send the kids outside when they finish eating, so the adults can talk a bit. You'll keep an eye out for them, won't you?\"\n\n\"Yes, Mom,\" Mike interjected. \"They'll be fine. Just make sure they know we're in charge,\" he laughed, as he thumped his racket head on his chest.\n\n\"Okay, dear. We will,\" she laughed at his playful gesture.\n\nOutside Mike got the balls from the closet and I got the big broom. At the tennis court, I started sweeping the leaves. Mike took a turn when they were about half gone. Then we warmed up a bit with some jumping jacks and stretches. Mikes shorts tented for a brief period after he observed me jumping, I pretended not to notice. Then we warmed up hitting some balls out of the hopper. Mike set it up near the net and sent over some easy ones for me to hit. My forehand was good, but my backhand was rusty.\n\n\"Sorry,\" I offered. Wow, I was really rusty. One of the balls went over the fence.\n\n\"Nice one,\" Mike teased me.\n\n\"It's been almost four months.\"\n\nWe finished up the remaining balls and then I asked, \"You don't really need any practice ones, do you?\"\n\n\"Nope.\"\n\nThen we gathered up the balls back into the hopper. I took out a few of the nicer ones to play with.\n\n\"Three sets?\" I asked, as I traded one of the balls out for a nicer one.\n\n\"Nothing official here, Maya,\" he said, letting me off easy.\n\n\"You don't have to take it easy on me. I deserve whatever I get. I should have joined a college club.\"\n\n\"We'll see how it goes,\" he said, as his eyes followed me.\n\nI put the balls down beside me as I bent to retie my shoe. I wasn't watching, but when I looked up I could tell he had been staring directly at my panty clad crotch. My mind was a buzz again - helplessly - hopelessly - I loved him.\n\nI stood and handed him the balls, saying, \"Okay, you serve first.\"\n\nThe next two hours were fun and exhausting. Mike was probably at the top of his game. The nice weather wasn't too hot or cool, it was really perfect for play. He did have me running all over the court, when he let me get past his serve. After the first set, which he won easily, he took things down a notch. The play was more focused upon having fun. Hitting the ball back and forth, not going for the killer shots. My service went pretty good. He let me have a few serves that he should have easily returned.\n\nMike had a natural spin that he didn't use much during real games. His natural slice was kind of a signature save move. He graced me with a few of them on lobs that should have been slammed back over the net nonreturnable. His sliced returns gave me time to reposition to hit the ball back, but frequently jumped away unpredictably at the last moment. It was a tease move and it felt like he was teasing me mercilessly today, in more ways than one.\n\nThe new racket definitely was better than the wooden one I'd left at my apartment. It gave me some grace I probably didn't earn. The large open sweet spot returned balls I shouldn't have gotten.\n\nTowards the end of our second set, the kids were all out in the yard, so we took a short break. Aya, Lev, Mellony, Zach and Mica were all playing freeze tag nicely with one another. We watched them a few minutes and then resumed our play. By the time Mike and I were about finished, the situation had changed a little; Aya and Lev were tossing a ball with Mica, while Mellony and Zach had taken to the swings. Mellony was pushing Zach to get him started, he was loving the attention from her and she was eating up the constant stream of his worship for her. Their three year age difference hardly seemed to matter to either of them.\n\nMike and I finished up and joined Mellony and Zach by the swings. I pushed Mellony and Mike pushed Zach while they gazed at each other as they passed by one another. Zach kept asking Mike to push him higher so he could catch up to Mellony. They were so adorable and I couldn't help thinking that I'd like my kids to be just like them.\n\nA little later, the adults came out for a couple of rounds of croquet. I hadn't noticed it was already set up, but I guess Mike had done it for Mom. After we finished our tennis, Mike and I joined Mom to watch the rest of them play. It was a great afternoon. By sunset everyone was tired and the cool night air was settling in on us.\n\nBack inside all the kids were hungry again and more sandwiches were served up. I wasn't hungry and told them I was going to take a shower. I'd gotten all sweaty and then cooled down so now I felt sticky. I didn't see Mike, I figured he was still watching some of the kids outside. So I headed up to get showered.\n\nIn Mike's room I pulled off my sneakers, socks, shirt, skirt, bra and finally the damp cotton panties. The panties were still pretty moist, so I didn't want to put them away in the drawer where they might sour. Instead, I got my flannel nightgown from the suitcase and laid it over the end of the bed. I unpacked all but a few items into the bottom drawer Mike had cleared for me. Then set the suitcase back on its side atop the blanket chest at the end of the bed. Finally, I placed the dirty clothes in a heap on top of the closed suitcase.\n\nTraipsing through the water closet into the bathroom, the cool little hexagonal tiles under my feet felt nice. It felt like home and honestly, I felt like Mokem Miklet was my true home. Sliding open the glass door, I turned on the shower and let it warm up. Once there was steam visible on the glass, I climbed in and began washing. I used the pink soap bar directly, I hadn't stopped to get a washcloth. Mike had the same shampoo we both used in the shower and I lathered up with it. That was when I heard his bedroom door close. I'd forgotten to close the bathroom door - I felt exposed momentarily but then decided, what did it matter really? I finished rinsing my hair, turned off the water and stepped from the shower.\n\nMike was standing there with a great big towel for me. He held it up for me and I stepped into it. It was warm as he wrapped me in it and hugged me tight. He'd placed a second towel on the counter and that's when I noticed he was nude. His muscular form fully visible in the mirror over the counter. His erection pressed against the towel. I could see it in the mirror and I could feel it on my tummy. Our eyes met and conveyed our love. He kissed me gently on the forehead and released me. The water was running again and just as suddenly as he'd been holding me, he'd slipped passed me and moved into the shower. Slightly disappointed, I continued to dry in the towel and returned to the bedroom as I contemplated how long he might have been standing there.\n\nPulling my nightgown over my head, it occurred to me that neither of us had spoken a word. I wrapped my hair in a beehive with the towel when someone knocked on Mike's door. I quickly closed the door to the bathroom and went to see who it was. Opening it, I found Dalia standing there with an odd look on her visage.\n\nBetween the doorway and her, I saw the light on in the room across the hall with her suit case in the doorway and made an assumption. \"Hey, I thought you and Frank would be staying down in the other master; are you staying in my old room this week?\" I asked, as she started into Mike's room.\n\n\"Yeah, actually we are. Bubbe and Zayde are going to be in the guest master. She can't do the stairs with her walker.\" Mom's parents had always been called by the Yiddish terms for Grandma and Grandpa.\n\n\"Can Frank?\" I asked. I hadn't ever seen him attempt stairs. Their little house in town was a single story and he'd been in the second master during all his stays here.\n\n\"You'd be surprised what Frank can do,\" she answered crisply.\n\nFor some reason, those words struck me as a weird thing to hear her say. Her answer carried all kinds of implications. I wondered where this was going as I watched her close the door to a small crack.\n\n\"I think Mike will be finished in the bathroom shortly,\" I offered. \"Is that what you wanted?\"\n\n\"No, Maya, I thought we should talk,\" she said. However, now regarding the light beneath the closed bathroom door with suspicion, she continued, \"But I guess we're not alone.\"\n\n\"I don't have many secrets from Mike, you know how close we are.\"\n\n\"That's what I wanted to talk to you about.\"\n\n\"What?\"\n\n\"Does Mom know?\"\n\n\"Does Mom know, what?\"\n\n\"About you two,\" she said, as her voice dropped to a whisper.\n\nI was a little confused. \"Dalia, don't mince your words. Ask me and I'll tell you as honestly as I can.\"\n\n\"Does Mom know you and Mike are - having sex?\"\n\n\"What? I - uh. We aren't - we haven't,\" I sputtered. \"Why? What makes you think we are?\"\n\n\"Maya, we're sisters, something has changed. I haven't seen Mike smile like he has today, since before you left for Harvard. He moped around here for weeks after you left. Mom had me come visit on multiple occasions to see if I could help cheer him up.\"\n\nSuddenly, tears welled in my eyes. \"I know,\" I said, as my lip trembled. \"I didn't know about your visits -\" I broke off what I was saying when I heard the bathroom door open.\n\nThen Mike was coming into the room. He had his over-sized towel fully wrapped around his waist. I sniffed trying to stem back the tears and get myself under control. I don't know if he'd heard any of the conversation, especially the last parts, since Dalia had spoken at barely a whisper.\n\n\"Hey, Dalia. The shower is free now,\" Mike said, giving me an odd look. \"I heard Mom ask you if you would mind taking Maya's room when Bubbe and Zayde arrived.\"\n\n\"Thanks, I really need one after all the outdoor time today,\" she said heading for the door.\n\nWhen she was out and the solid redwood door was fully closed, I moved to Mike.\n\n\"What was just going on?\" He asked looking at my eyes.\n\nI turned and whispered to his ear, \"She wanted to know if Mom knew we were having sex.\" I left out the part about her noticing the change in his demeanor.\n\n\"Well, I'm not going to tell her; are you?\" he joked, trying to lighten the mood.\n\nBut this wasn't a joking thing. \"We haven't really even done anything and somehow they already know, Mike.\"\n\n\"I don't care,\" he stated flatly.\n\n\"Oh my goodness, what am I going to do with you?\"\n\n\"I already told you. I simply want you to love me. That's all I need.\"\n\nThe conversation was cut short due to a new uproar from downstairs.",
        "\"You need to get dressed or get pajamas on or something,\" I told him.\n\nI slipped out the door quickly and headed downstairs to see what was going on. At the bottom of the stairs my bare feet felt the chill of the marbled vestibule. I could hear the crowd of people before I entered the family room, which was full to overflowing. Bubbe was seated in one of the easy chairs with her walker off to the side. To her right sat our Uncle Zefrum and his wife Selma. To her left was Zayde and in front of her stood a very pregnant Sarah with Robert at her side. Our grandmother had her hand on Sarah's belly and was saying how it looked like it was going to be a girl. Bubbe might have been hedging, she was fairly observant and wanted the heritage to be passed on even if her daughter and grand-kids weren't as concerned about it. By strict tradition, a child is Jewish when their mother is, even if the child later becomes an atheist.\n\nI made my way to my sister, Sarah. \"Oh my god, when are you due?\" I asked when I reached her.\n\nShe hugged me close and told me, \"December - it might even be on his birthday.\"\n\nShe didn't have to say whose birthday. My tears rushed into my eyes, again. These tautologically tragic and celebratory rhythms kept appearing around these dates forming some kind of nexus. My happiness and sadness left me speechless.\n\nAs if she could read my mind, Sarah was hugging me again, \"I know, sweetie. You don't know how many times I've cried thinking about exactly the same thing.\" She paused, looked me in the eyes and took me squarely by the shoulders. \"Try to see the good. We have so much to be thankful for this Thanksgiving.\"\n\nAnd she was right! We were blessed in so many ways.\n\n\"Why did you guys keep this, a secret?\" I whispered.\n\n\"I've had several miscarriages and didn't want to get people's hopes up,\" she said tearing up a bit herself.\n\n\"Are you staying over until you deliver?\"\n\n\"Yes, it is the only way Robert would let me come this late in the pregnancy.\"\n\nI had been focused on Sarah but during that time, Robert was making the rounds shaking hands with all of his brothers-in-law and sisters-in-law. He'd just finished with Mike when Mom was on him hugging him tightly. I made my way to him to tell him how happy I was and how this was going to be quite a Thanksgiving eve. Their news had put a very positive tone on the event that had more recently carried so many melancholy elements.\n\nNearly everyone that might have come, had. I counted us to be at or over twenty-five. Our Mom's brother, Zefrum, had brought his wife, Selma, Bubbe, Zayde and Mom's uncle, Tom from where most of Mom's family lived outside Manchester New Hampshire. Dad's two remaining bachelor brothers, Eli and Nathan, had made it and brought Grandpa from their home / business near Stowe Mountain. It really was going to be a full house. Even the rooms in the cottage and over the garage were going to be used.\n\nA short time later, the kids were all seen off to their respective bedrooms and put to bed. Afterward, the adults sat, stood or squatted in the family room and kitchen talking into the wee hours of the morning. Around 1:00 AM Mike and I excused ourselves. Some of the older folks had already gone out to their rooms, too. Frank had already made the climb of the stairs with very little help from Dalia. So Mike and I slipped away easily.\n\nThe cool air outside was making portions of the house cool as well. Mikes room wasn't cold, but it wasn't completely warm either. I slipped under his big thick royal blue patchwork quilt and shivered at the cool sheets. He turned off the overhead light, then got in beside me and snuggled up to me. His body was trembling as well. I reached to turn off the bedside three-way lamp and he spoke.\n\n\"Can you leave it on low for a bit?\"\n\nIt was a usual request. Before I'd gone off to college, we'd often lie in bed talking. I turned it two clicks, off and then low. Tonight was different though, all Mike wanted was closeness. His arm snaked around my waist. I realized at that moment I hadn't worn any panties beneath my long flannel nightgown. I could soon feel his cock hardening against my hip. Even in the dim light I could see that he was not blushing, actually his face reflected his mood; he was tranquilly at ease but deep in thought. We lay silently for a long while. I couldn't bring myself to say any of the things I was thinking.\n\n\"Maya?\" he said hesitantly, breaking the silence at last.\n\n\"Yes.\"\n\n\"I - um - \", he was silent for several moments and then continued. \"I sniffed them.\"\n\n\"What?\"\n\n\"I sniffed your panties.\"\n\n\"Thanks for telling me,\" I answered awkwardly. I was a tingle from head to toe, but I didn't really know what else to say. His admission was odd, but very normal at the same time.\n\nThere was another long silence. I thought about what he said and the implications. I'd left them on top of the pile I'd placed on the suitcase. They were wet from playing tennis. They were probably very pungent too, from where we'd messed around earlier and the arousal he'd induced in me on the court.\n\nIn a flash, I could envision him pressing my panties firmly to his nose and inhaling deeply. After a few moments, that vision was tormenting me and I wished I could have seen him actually sniffing them. Then another thought aroused me even more; what if he'd done that while I'd still had them on? The vision of his nose pressing into me was inexpressible. Why did I think that? Why did I want it so desperately? I wondered again about the woman that resembled me in his dog-eared magazine.\n\n\"Maya?\"\n\n\"Yes.\"\n\n\"Can I smell you?\"\n\nThere it was - like he was reading my thoughts directly. He was calm. He wasn't touching without asking like earlier or plying me with kisses to enrapture me. He was asking permission to smell me. Considering my response I found that it required my direct admission of my involvement; I couldn't blame my response on a slow titillating buildup of passion. I had only my mind to hold up to the mirror; that was where the blame rested entirely. It was then, in that bittersweet moment, that I found I could no longer be of two minds on this and to my surprise, I accepted it fully.\n\n\"Yes,\" I said in a whisper.\n\nHere in this house full of people we knew and loved, my brother was crawling under the covers to discover my womanhood. Thinking that Mike shouldn't have to do all the work, I hiked my nightgown up slightly. After all, we were in this together as we had always been. The attraction was mutual, neither of us going beyond the other's comfort zone, but gradually pushing the boundaries. Soon he was betwixt my legs and I could feel his warm breath in my full dark bush. My wetness returned and I could feel it starting to creep out from my inner lips.\n\nI fleetingly wondered if he could see it under there. I instantly dismissed the thought, because the quilt was thick and dark. I don't know how long he was down there. Time had lost its consistency for me. His breath on me was intoxicating. It was so erotic feeling, his breath on my pubic hair sent little tingling waves across me there. Without even touching me I could feel my clit and outer lips engorging. My mind wandered, my anticipation - my desire - my love and concern - all formed a swirl of waking dreams - of what it might feel like. I was lost -\n\n\"Uh-ah-hum,\" Mike cleared his throat and is breath became heavier.\n\nHe still didn't speak, he kept smelling me, while I drifted off again.\n\n\"Maya?\" he whispered.\n\n\"Yes.\"\n\n\"Can I see you?\"\n\nI could anticipate where this was going and I worried a little about how far it might go. How far would I let him go? What might I let him do? My mind was a racing buzz of thoughts and the one thought that kept popping back up was something I now deeply regretted. Why did I ever try to ignore what I'd felt all along?\n\n\"Please,\" he asked. Perhaps realizing he should have included it with the first request.\n\n\"Mike?\"\n\n\"Yes.\"\n\n\"Only, if you love me.\n\n\"You know I do.\"\n\nMy regret was what I'd done and hadn't told Mike. In my efforts to try to leave our codependency behind, I'd tried to be 'normal' and have a boyfriend in college. It was dumb - he'd been an oaf. He was nice at first, but he'd only wanted sex. He never did what I felt Mike was ultimately going to ask to do. He'd never loved me and I hadn't really loved him. In my desperation to ignore my love for my brother, I'd allowed myself to give in to conformity. I let that guy take my virginity and we'd had frequent sex for a few weeks. I'd enjoyed the sex, but he wasn't the right guy so I'd broken it off within a month. At the time I didn't really know why, but right now I knew the real reason. There was only one right guy in the world and he'd been right here all along.\n\nHis breath seemed to intensify, I knew he would wait, but he could smell what he wanted. What he wanted to experience with all of his senses: smell, sight, taste and touch; what I wanted him to have. But I needed to tell him before he - before we crossed the rest of these lines. I should have told him before this moment, but couldn't find the words before. It was so unfair to tell him now, but it had to be now. With his breath making me crazy for him to move forward, I had to be truthful and open.\n\n\"No matter what?\"\n\n\"Yes, of course.\"\n\n\"Mike, I had a boyfriend.\"\n\n\"Had?\"\n\n\"We aren't together anymore, but we had sex.\"\n\n\"Okay,\" he said thoughtfully. \"I still love you.\"\n\n\"Do you love me less?\"\n\n\"No, definitely not,\" he said definitively. Then he hesitated a moment, his breath softened and I worried he might change his mind. \"Maya, I had a girlfriend too,\" he admitted finally.\n\nThat surprised me. I'd thought he was a virgin and none of his letters had mentioned her. This awkward conversation with the covers between us while his breathing continued on my engorging lips was maddening. However, Mike seemed okay with the whole thing.\n\n\"Had?\"\n\n\"We didn't love one another and she wasn't you, so I broke up with her.\"\n\n\"Okay.\"\n\n\"Okay?\"\n\nI answered him by lowering the covers over his back. In the dim light, he could, now, see me as well as smell me. It was exciting and my heart was racing. How long would he wait now before he pressed for the next step?\n\n\"You're so beautiful, Maya. I don't think I've ever seen anything so beautiful.\"\n\nHis words melted me. I could feel my excitement building, my lips, hood and clitoris engorging more. I resisted the urge to rub myself and spread the moisture.\n\n\"Do you ever touch it - I mean - to masturbate?\"\n\nI coughed at his question; it was like he was reading my thoughts again.\n\n\"Sometimes,\" I whispered. \"Don't you?\"\n\n\"Yeah, of course - sometimes - a lot.\" Then he was silent again for a few moments. \"Could I see how you do it?\" he asked at length.\n\nI couldn't have imagined his request. I'd expected he'd ask to touch me, but he seemed to be analyzing how I worked. It was so sweet and true to character - he always wanted to know how everything worked. Understanding his curiosity, my hands simply moved into motion. Using the fingers of the left hand, I spread and rub my lips. The fingers of my right hand alternated rubbing my clit and sinking inside to spread the flow of my juice so they would glide more easily. I watched Mike's eyes widen and his breathing pick up again.\n\nQuickening the pace a bit, I began focusing on massaging my clit between the moistened fingers of my right hand. My face flushed as I stared directly at Mike. I rubbed in small circles periodically pressing those two fingers back inside. Mike's gaze upon me made it all the more exciting, I could sense that he wanted to assist, but was waiting, learning and absorbing everything I was doing to make myself climax.\n\nThat thought enthralled me to show him. I watched him watching me until I climaxed and at which point my eyes closed tightly. It wasn't a big one, but it was so nice and showing him had also calmed me a bit. When I reopened my eyes, I found him wide-eyed and watching my hand as it still moved slowly over the outer lips avoiding any further direct stimulation of my nubbin. I could feel myself contracting and pushed two fingers back inside again. Light waves of pleasure continued as Mike looked onward and I found his continued loving gaze upon me endearing and erotic at the same time.\n\n\"Was that it? Did you - um -\"\n\n\"Yes, I did - a few times.\"\n\n\"Can I taste?\"\n\nHe hadn't touched me, not there, not yet. He'd rubbed me through my panties earlier, before tennis, but now with his hands on my legs and his head at my naked crotch, he'd still made no physical contact. His breath alone had touched me there. I could hear him breathing, smelling and inhaling my scent. He would take this only as far as I allowed. His strength of will and restraint inspired me; made me think that perchance we would be okay, in time.\n\n\"Are you sure you want to?\"\n\n\"Yes, definitely.\"\n\n\"Okay.\"\n\n\"Okay?\"\n\n\"Yes, you can,\" I whispered.\n\nEagerly anticipating this new sensation, I removed my hands and leaned back on my elbows to watch. He started slowly, lowering his head to me and his tongue licked lightly. Tentatively he pressed passed it through my hair parting my outer lips. My lips were already in a heightened state and his rough tongue felt fantastic as he gently licked me, working me into a frenzy. The moistness continued to flow and he soon found it with his tongue. He licked more confidently now and then drove his tongue into me further to get more.\n\nMy brother was a natural cunnilinguist. His fingers soon pressed the hair out of the way and he sucked my lips into his mouth fully. There he diddled them lavishly with his tongue. In my excitement, I lifted my nightgown higher with my hands and then found his long hair. I ran my fingers through it as he lapped at me unconstrained. Wishing to give him fuller access, I pulled my gown even higher while lifting and spreading my legs. He wordlessly acknowledged this by tonguing me more deeply and sucking on the inner lips playfully.\n\n\"Uhhh -\" I moaned softly. My head rotated from side to side, as a new small orgasm started to build into a larger one.\n\nSoon he had me trembling through the best orgasm I'd had in my young life. Quickly, I removed my hands from his hair and found his pillow to cover my face as I felt it continuing to build. I wanted to watch, but I could feel how loud I wanted to cry out and took the precaution. Soon I was moaning and nearly bleating into the pillow. Mike continued and soon he took my clitoris between his lips and sucked and licked me savagely.\n\nI was in ecstasy as my muffled \"Ooooooohhhhhh\" began. My body quaked and spasmed violently but Mike clung to my hips as I spread my legs into a nearly full split.\n\n\"Faaaaaaaaaaaak,\" I shouted against the royal blue fabric, desperately hoping no one would hear.\n\nHis rapacious plunder of my vagina with his mouth was soon rewarded with more of my natural lubricant which he slurped from me with wanton abandon. My climax seemed to drag through the fabric of time as it washed over me. Mike stopped his assault, but continued to lick me gently gathering any and all fluid that appeared.\n\nFinally, my spasms began to relax. I replaced the pillow at his spot and lie there regaining my equanimity. He soon joined me with his head back on the pillow beside me. He had a very satisfied look about his face in the dim light from the nightstand. I rolled to my side so I could kiss him. I could taste the muskiness, which was me, on his lips. A long and contentious tongue battle ensued. I clearly had the upper hand since he'd spent so long pleasuring me with his. Soon he relinquished and I was sucking his tongue suggestively. Ultimately, not wanting to hurt him, I released him and gave him the praise he deserved.\n\n\"Mike, that was unbelievable,\" I panted. \"I've never had an orgasm like that, ever.\"\n\n\"I love you,\" he said. The truth of his statement shown in his adoring blue eyes. \"I love how you smell and look and feel and taste. I love how you care for me. I love that you saved me. But most of all I love that you love me in spite of me.\"\n\n\"Mike never - never think there is anything wrong with you. I love you because you are you.\"\n\nI hugged him close. \"No one has ever done that to me, you can't believe how good that was.\"\n\n\"My girlfriend wouldn't let me, she said it was gross and she only wanted 'to fuck'.\"\n\nShe didn't know what she was missing. I could feel his penis pressing hard against his boxers and pajama bottoms. He wasn't pushing me to do anything, but I wanted to repay the ecstasy he'd given me. And if she'd rejected him giving her pleasure with his mouth, then she'd probably rejected giving him any with hers.\n\n\"Mike?\" I asked, pulling him from his daze.\n\n\"Yes.\"\n\n\"Can I do that for -\"\n\n\"Maya, you would do that for me?\" he cut me off.\n\n\"Yes, I want to. I wanted to earlier,\" I admitted.\n\nI helped him out of his pajama bottoms and boxers. His cock sprang forward. I threw the clothing to the floor. When I had seen it before that afternoon, it wasn't as excited. It might have been this excited in our morning make out session, but I hadn't seen it. It was fairly excited when we changed to play tennis and again when I stepped from the shower, but those had seemed so brief and distant. Up close it was amazing. His dark hairy pubic mound had a long thickly veined cock growing out of it.\n\nI didn't like myself for comparing, but it was only the second penis I'd seen this close. Both Mike's length and girth made Randy seem like a little boy. The crown was nearly purple and I could see it expand with his quickening heartbeat. I began lifting his shirt over his head. I wanted him fully nude like I'd seen him at the shower earlier. His chest and midriff showed his underlying muscles I'd seen before in the bathroom. Now, however, I saw more clearly the trail of dark brown hair from his navel to his man-root, contrasted with the very light amount of hair upon his chest, which only had a few sprouting from around his nipples. The only other areas of hair seemed to be his underarms, as even his legs were mostly hairless.\n\nI removed my nightgown now and it joined the pile unceremoniously. He had seen my breasts when I exited the shower but now that he had complete access to them, he groped and cupped them lightly, even as I took his penis in my hands. I moved lower to take him into my mouth, there I found a little dollop of precum resting atop of his slit and I licked it off. Mike responded with a moan and his cock swelled a bit more when my tongue rasped across the mushroomed crown.\n\nI stroked him gently at the root of his manhood while I sucked the full bulb into my mouth. I pressed more and more of him into my mouth with each stroke. Randy was so small he'd fit in my mouth without effort, but I could barely get Mike in half way. I'd heard some of the girls on campus talking about that movie that had recently come out a few years before but couldn't imagine getting Mike all the way in like that. I used my full hand and all of my mouth to work him for several minutes until he was nearly ready to climax. I backed off when I started to feel him tense. It was awful of me to do but I thought perhaps he'd forgive me.\n\n\"Mike?\"\n\n\"Uhh-huh?\" he asked weakly.\n\n\"Would you make love to me this Thanksgiving?\"\n\nHis eyes flashed. He knew that it was Thanksgiving already.\n\n\"Yes,\" he said calmly.\n\nHis restraint was simply superhuman.\n\n\"We've got to be quiet, though. Can you be quiet enough?\"\n\nAfter a long pause, I admitted, \"No.\" I pouted. \"Sorry, I really didn't mean to tease you. Maybe we can find someplace in the morning,\" I said dejectedly.\n\nThen I resumed my manipulation of him. I could have said 'yes' and screamed into the pillow again but I wanted to see him when he entered me and came inside. I knew even from the mediocre sex I'd had with Randy; I was usually vocal. I redoubled my efforts for making him wait. I licked him around his hairy scrotum. I even tried to push him into my throat but couldn't get past the gag reflex. I jerked him tightly with one hand and worked his balls lightly with the other as I felt him nearing climax. Soon I was rewarded with warm jets of ejaculate blasting against the roof of my mouth. It was so sweet and tangy and sticky. He had a lot for me and I swallowed it all.",
        "Through the climax he'd had his eyes closed, but he opened them to see me smiling up at him sweetly. I continued sucking him until his erection was diminished. It was only diminished a bit. He could have probably gone again with a little encouragement. I climbed up beside him and kissed him deeply. I could taste myself on his lips and wondered if he could taste himself on mine. After a long kiss and snuggling, I pulled his arm around my waist so he would spoon against me. His penis snuggled between my ass cheeks and legs. We pulled the covers over us and I turned out the lamp with three clicks.\n\n<hr>The morning came all too quickly. I awoke still embraced by Mike. His cock had become very erect and throbbed against my clitoris. It took every bit of my will to leave the bed without having it in me, but there was already some noise coming from the kitchen below us. I turned to see Mike's antique mantle clock that ticked gently on his desk. It showed a quarter-to-eight, so, I roused Mike. We put our pajamas back on and we went down to see who was up.\n\nMom was there with Rachel. Mom was working on turkeys in the sink. Rachel was laying out a variety of bagels. There were two big trays with at least a dozen bagels on each. There was a wide variety of condiments: butter, cream cheese, various jellies and of course lox. Mike and I both like the seedy bagels with cream cheese and lox.\n\n\"Morning, Mom, Rachel. How are you this beautiful morning?\" Mike asked them.\n\n\"I slept like a baby,\" Rachel said. \"It so nice coming back here.\"\n\n\"You and Jon need to get back here more often,\" Mom complained. \"I'm missing seeing my granddaughter; Mellony's going to be a young woman before I know it.\"\n\n\"We want to, Mom, it's just he's got such a good job. Staff surgeon positions don't open up that often.\"\n\n\"He'd probably do better here as an independent,\" Mom offered hopefully.\n\nI could see Rachel's wheels spinning. \"Yeah, I guess he might at that.\" Then she said, \"You two help yourselves. The kids won't be up for another hour or two and I'm guessing the men will be sleeping in, too.\"\n\n\"You want me to fix you one?\" I asked Mike.\n\n\"I'll love you forever, if you do,\" he teased.\n\n\"That's so sweet,\" Rachel said.\n\nMom, however, glanced back over her shoulder and gave him a queer look. I thought about what Dalia had asked me yesterday as I sliced the bagel open. Placing it in the toaster, I turned to study Mom's expression while I waited. She was definitely pensive, but continued working on the two turkeys in the sink. One turkey had been placed in each basin last night with water to thaw. Now she was preparing them to go into two enameled roasting pans. She had the necks and parts just starting to boil in a large sauce pan on the stove already and the extra legs appeared to be in the top double oven in a pan with tin foil over the top. Almost everyone liked the dark meat more, so Mom always had extras.\n\n\"What can I do to help?\" I asked her.\n\n\"Um - well, these are really the last things to fix. The other dishes are out in the fridge in the garage - play room. A couple have to be reheated, but other than the turkeys, there's only the gravy,\" Mom said.\n\nThen the bagel was done and I put the next one in whilst I spread cream cheese on Mike's.\n\n\"Here, Mike, I know you like to pick your own smoked salmon,\" I said, as I handed it off.\n\n\"Thanks,\" he said, as a big smile spread across his face.\n\n\"Rachel, you want one?\" I asked.\n\n\"I'll fix one in a minute. I want to go check on Mellony,\" she said.\n\n\"Mom? How about you?\"\n\n\"Not now dear, I'm good.\"\n\nRachel headed out of the kitchen to check on Mellony, who was a ten-year-old only child. Rachel seemed overly protective of her, but I could imagine how that could happen. I wondered if she and Jon were done having kids or if they were trying and having difficulty. Lots of times children from big families go the other way. I wondered how many kids I wanted. For whatever reason that made me look over at Mike.\n\nMike was over by the large salmon plate with various thicknesses of lox. He picked several very thin ones, being very particular about these things. Then he pressed several capers into the open areas between the salmon. My bagel popped up and took my attention away from Mike. I gave mine a similar amount of cream cheese, but I liked my salmon a bit thicker and my bagel more loaded than Mike. After he finished, I gathered several of the meatier pieces and joined him at the table.\n\nMom popped the turkeys in the double ovens, washed her hands and started to make her bagel.\n\n\"Mom, I offered to fix you one.\"\n\n\"Don't be silly, Maya. When I can't make a bagel anymore, you put me in a home, okay?\"\n\nShe was always like that. She didn't want help from anyone. I guess it'd been how she'd made it through law school when she did. She was one of the very few women in her class. She joined us at the table and sat beside me, with a bagel that looked exactly like the one I'd made myself.\n\nMike was about finished with his bagel when he asked, \"Anyone else want some milk?\"\n\nBoth Mom and I said, \"Yes\".\n\nJust then Rachel came back with a sleepy headed girl by her side. I guess she'd woken her up. She proceeded to make them both a half a bagel with cream cheese and blueberry preserves. Then they joined us at the table. Mike waited for her to finish and then got up to get three glasses from the cabinet over the toaster.\n\nMoments after Rachel and Mellony had seated themselves, Dalia appeared. \"Frank's sleeping in,\" she said through a yawn. She liked her bagel whole, untoasted and with stuff smeared on the outside. Mike was making his second trip to the table with his glass of milk, having already delivered mine and Mom's. When Dalia went to give Mike a peck on the cheek, she made a funny face and stopped him by his pajama sleeve. Then she whispered something in his ear. Mike placed his milk on the counter and left the room quickly. She joined us at the table and sat beside Mike's seat with her bagel smeared with cream cheese and honey pooled on her plate.\n\nAfter a few minutes, Mike rejoined us, collected his milk glass and sat in his seat. It looked like maybe he'd shaved. It was then that I realized what had happened and now Dalia was staring at me from across the table. Her eyes didn't look judgmental, but definitely had a knowing behind them. I guess we'd messed up, but I almost didn't care. I wasn't blushing and neither was Mike. We weren't ashamed, but we also weren't sharing.\n\nI finished my light breakfast and said, \"I'm going to get a shower and get dressed before all the hot water is gone. I suggest you all do the same.\"\n\nEveryone laughed and agreed they would. In reality there were two water heaters for the two sides of the house and it only ran out if people used it nonstop, but with this many people in the house, that seemed like a real possibility.\n\nMike didn't follow immediately, he was picking at the remainder of his bagel and still had a nearly full glass of milk. I figured he was delaying but I hoped that he'd join me soon. I really wanted to know what Dalia had said. How much trouble would we be in? What could we do? I undressed and waited for him. It seemed like minutes were passing and he hadn't come. I went ahead into the bathroom. Frank was in my old room opposite the Jack-n-Jill bath, so I figured I probably didn't need to lock the door. I turned on the shower and stepped in once it was warm. I showered and managed to keep my hair mostly dry. No one ever came into Mike's room. I finished up and took my towel from the bar. I couldn't understand why Mike hadn't followed. I dried, got dressed in some clean white panties, socks, jeans, a flannel shirt and my shoes. Then I return the damp towel to the bar in the bathroom to dry.\n\nI waited for Mike a bit longer, I knew he was going to follow me up, I must have just been being impatient. My curiosity got the better of me and I went back to that drawer and took out that magazine and thumbed through her pictures again. A shiver went up my spine as I thought about last night and how Mike must have studied her picture thinking of me. He'd asked me if I masturbated, and he'd admitted to doing so, sometimes a lot. Now I was very eager to know, I don't know how it made a difference, but thinking of him masturbating while thinking of me made me tingle. Several minutes had passed by now and when Mike still hadn't shown up after another five minutes I decided to go back down. Carefully replacing the magazine, I closed the drawer and went downstairs.\n\nBack downstairs some of the men were up and in the family room with Bubbe who was seated in a chair. Her walker was off to the side and she was sipping some tea. There were also more people awake and in the kitchen now and someone had started coffee in our large stainless percolator. The Mr. Coffee had been set atop the refrigerator to make room for the two gallon percolator that probably held fifty cups. I always thought the taste of the percolated coffee was more robust than the Mr. Coffee, but it took longer to make and we frequently only had a few people in the house. The aroma became stronger as I joined the group in the kitchen where Sarah and Robert were getting themselves coffee and bagels. Jon and Rachel sat on either side of Mellony at the dining room table. Mom was just leaving the stove where she'd been stirring the gravy and went to the ovens to check the turkeys, which were starting to smell really good.\n\nMike was nowhere to be seen and neither was Dalia, so I joined Frank, who evidently didn't sleep in as long as I'd expected. His wheelchair was positioned at the end of the long kitchen table where he was drinking his coffee. The seat next to him had another coffee cup and a partially eaten untoasted bagel. I busied myself chatting quietly with him, while I wondered in the back of my mind where Mike might be. Frank indicated he would be taking over the majority of the management of the law firm as Mom was moving into semi-retirement. Neither of us thought she'd fully retire, it wasn't her nature, but she'd already started picking only cases she wanted or liked, special projects that needed her touch. Finally, he got around to asking me about me.\n\n\"How are your courses going? Are you adjusting to college?\"\n\n\"They are going pretty well. There are definitely things I miss about home. Being here now reminds me how much I love this place.\"\n\n\"Just the place?\" he asked with a wink.\n\nI felt flushed as I took the implication. \"The people, my family too, of course. Didn't you ever get home sick at college?\"\n\n\"Oh, sure. You remember we came home many weekends and every summer or holiday break.\"\n\nHis use of 'we' struck me oddly with all that was going on between Mike and me. He and Dalia had gone to their first four years of college together. They'd shared an apartment and had often come home together during school breaks. Shortly after college, she'd married that cheating bum, Alex. She stuck it out three and a half years and ended it in June before the accident.\n\n\"So, what did you miss? You had Dalia with you in Boston,\" I pressed the issue a bit. I was sure no one was listening and we were speaking quietly.\n\n\"Yes, but you and Mike were here and Mom and Dad,\" he said looking distant.\n\n\"Were you visiting a girlfriend?\"\n\n\"No, I never had time for one. That's why -\" he cut himself short, as his eyes darted towards the back door and mud room area. \"We probably ought to have this conversation another time.\" \n\nThen I saw Dalia coming back in through the mud room door followed by Mike. His eyes were red and he went directly off towards his room. What could have happened? At this point Dalia sat across from me next to Frank. Nothing was said, she merely started drinking the coffee and eating the unfinished bagel. I didn't exactly feel I could just get up and follow Mike, it'd be too obvious. Although, clearly they suspected or even knew something. I sat there silently and neither Frank nor Dalia spoke. Frank's silence now and his abrupt curtailment of our previous conversation was weighing on me.\n\n\"I'm going to see if I can help Mom,\" I said, eventually. \"I'll catch up with you two later.\"\n\nThey both nodded and exchanged some kind of glance. I got up and went to find Mom who was no longer puttering around the kitchen. I hadn't seen her leave, but I suspected she was making preparations in the game room. When I pushed through the double hinged door from the kitchen, I found her down the short flight of brick steps setting up the kids table.\n\n\"Mom, I asked if I could help.\"\n\n\"I know, dear, but I can do this.\"\n\nMom was stubborn and she was continuing to shelter us, but it didn't keep me from trying to help her. I took several of the metal folding chairs out of the storage rack and placed them at the table with her. Then we put the table cloth on the long folding table and clipped it down at the corners and the middle. She seemed happy to have someone helping her despite her independent streak. For me, I always liked helping and too, it was calming to merely do something. She put a big stack of napkins in the middle and I place one at each seat. She put a couple baskets for bread at each end and then silverware at each setting. The kids were going to be eating off thick molded paper plates, but Mom had gotten out her old flatware for them to use at the kids table.\n\n\"You want to help me carry in some of these things from the fridge?\" she asked me when we were done.\n\n\"Yeah, I like helping.\"\n\nShe smiled, \"I know and you do, dear. Don't think I don't know what you've done for Mike.\"\n\n\"What?\" I asked trying not to sound overly defensive.\n\n\"He was - he often still is - a mess,\" she said in a somewhat reserved and measured way. Then she grabbed a big casserole dish from the bottom shelf and started for the steps.\n\n\"I have hopes that he'll be okay.\"\n\nI grabbed a cranberry, nut and gelatin mold from the fridge, closed the door and followed her towards the steps leading up to the kitchen.\n\n\"Me too. That's why I don't care,\" she said from the top of the steps. She pushed the door open and disappeared back into the kitchen without giving me a chance to respond.\n\nIt was probably a good thing too, since I nearly tripped on the step and caught myself against the sturdy rail attached to the wall. Somehow, I'd managed to keep from dropping the mold. I stood there stunned for several moments. I was pretty sure she was telling me she knew. Of course we hadn't done much. I took the mold in and set it on the counter. Mom was busy checking things and I made several more trips to and from the game room kind of in a daze. There were a few more dishes that would need to be reheated. A corn pudding, a spoon bread, a dressing and an asparagus dish with cream of mushroom soup and little French fried onion rings atop would all need turns in the ovens.\n\nMom, was busy replacing the turkey legs with one of the stuffing casserole dishes in the oven and she didn't even make eye contact with me. Just at that moment, Mike appeared back in the kitchen. He was fully dressed and his eyes were no longer red or at least less red. He gave me a head tilt towards the back door and went outside.\n\nI glanced over and saw Mom was working on rolling out biscuits now, her apron was dusted with flower. She was working the dough intently and she seemed oblivious to my presence. I walked over to stand beside her and gave her a kiss on her cheek.\n\n\"You want some help?\"\n\n\"No, these are about done. You go see what Mike wants.\"\n\nI didn't reply; there was simply nothing to say and I traversed the path through the kitchen, eating area and mud-room in a stunned stupor. Opening the door, I stepped through into the bright daylight outside where Mike stood at the bottom of the steps. I pulled the door closed and went to him.\n\n\"We need to talk,\" he said. \"Let's go for a walk, or a ride on our bikes or get away from here in your car.\"\n\n\"Mike, I think Mom knows.\"\n\n\"Let's go away from here for a bit. They aren't going to start for a couple more hours,\" he implored me.\n\n\"Let's walk, it'll be safer,\" I said. My head was still swimming from what Mom had said.\n\nWith that we walked around the house to the front. The garage was full now. There were several cars parked beside it and a few off of the long drive. We walked down the long cobblestone drive and then out onto the street before a word was spoken.\n\n\"What happened,\" I asked, when we had walked a bit more.\n\n\"Dalia confronted me,\" he said. \"She smelled you on my face this morning and she told me we had to stop. She said a bunch of other stuff about how and why it'll never work. I stopped listening -\"\n\n\"It doesn't seem fair for her to ask that of us, because I'm almost certain she and Frank have a similar situation.\"\n\n\"Frank's paralyzed,\" Mike said, as if that meant nothing could happen.\n\n\"He's lost most of his movement below the waist,\" I countered. \"And Dalia said something very odd to me when I asked her about Frank getting up the stairs.\"\n\n\"What?\"\n\n\"She said, I'd be surprised at what Frank can do.\"\n\n\"Well, she said what we're doing will break Mom's heart.\"\n\n\"I think Mom already knows.\"\n\n\"You think Dalia told her?\" he asked. \"That's not fair - she told me to stop - but she didn't even give us a chance.\"\n\n\"I don't think so. I think Mom just knows.\"\n\n\"I don't know what to do. I love you,\" he said.\n\nWe had reached the small park near the house. We continued into it and found it nearly empty. A few kids were playing touch football out on the field. We found a secluded place by some swings and sat facing one another gripping the chains.\n\n\"What makes you think Mom knows?\" he asked, as he looked deeply into my eyes.\n\n\"She said she knew what I was doing for you and she didn't care. That's not quite right but that's how it sounded.\"\n\n\"She doesn't care?\"\n\n\"I was stunned, Mike. We were in the game room setting up the table. When we were coming back inside she said that, and I didn't ask her what she meant.\" I was too afraid to ask. \"How could it be that they knew before we've really even done anything?\"\n\n\"I wonder...\"\n\n\"What are we going to do?\"\n\n\"I only need your love, Maya. We don't have to have sex.\"\n\nMike meant that and I fully believed him. He wanted the sex, badly, but he didn't have to have it. If he had to settle for only one, he would definitively take my love. It felt like a terribly unfair sacrifice, but it showed how far he would go to have me in his life. I didn't want Mike to have to choose. I eased my swing sideways until the chains touched. I embraced Mike and kissed him deeply. Our tongues were in each other's mouths at once. Unflinchingly, I put my hand on his crotch. He let out a soft moan into my mouth as we continued kissing. The thickness of the bulge in his jeans seemed even larger today. We had to find a way. We needed to find a way to explore this further. I broke the kiss.\n\n\"I don't want you to do without and I don't want to either.\" I pulled him from the swing. \"Let's walk some more.\"\n\nI could feel the moistness between my legs as we walked. It caused my lips to slide against one another, adding reinforcement to my excitement. We headed off through the woods on a well-worn path that ended at the street. Across the street and a little further down the road, there was a back way on to our property that passed by an abandoned tree house. We both walked along the overgrown path that led to it. I thought fleetingly about making use of it. Mike must have been thinking the same thing as we came to a stop below it.\n\n\"I don't know if it'd be safe for us to use, Maya,\" he said, as he studied it.\n\nReleasing my hand, he climbed the steps up into it and disappeared into the rectangular entry.\n\n\"What do you think?\" I called up to him.\n\n\"It's pretty far gone,\" he said, as he descended the steps."
    ],
    "authorname": "MindsMirror",
    "tags": [
        "brother/sister",
        "brother-sister",
        "brother",
        "sister",
        "love",
        "romance",
        "thanksgiving",
        "hanukkah",
        "siblings"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/thanksgivings"
}