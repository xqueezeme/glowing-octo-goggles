{
    "title": "A Dark and Stormy Night",
    "pages": [
        "My old man mind can't remember where I'd heard it before, oh not the phrase itself everyone's heard that! I'd heard that it was a kind of writer's joke. That phrase, 'it was a dark and stormy night'. It's a juvenile way newbie writers used thousands of times to try and build tension or suspense at the first part of a book or story. Much like the rusty hinges squeaking as the monster opens the old wooden door. The stair treads that creak under the footsteps of the madman with a butcher knife as his shadow climbs the stairs to the children's room. All old clich\u00e9s' of imagery, but old men like me like clich\u00e9s' they're friendly and comfortable. Having been around the block a time or two, like me.\n\nI guess I'm talking with my tongue in my cheek. I don't think that this story will need any help with tension, suspense, or action. But a title didn't jump up and hit me on my pointy little head. The first scene played out in my mind at night, in an open field, during bad weather. So the phrase fit the scene, and what the hell we all need a joke every now and then, even a very small one. So here comes thousands and one.\n\nEnjoy. A Dark and...\n\nStormy night, NO SHIT it's a dark and stormy night and what the fuck am I doing out in it barefoot and running my ass off? \n\nKelly that's why, lying on my bed minding my own business when her text pongs my phone. HELP, (all caps, that's yelling) farmer Ted's pond. HELP!! (That means really yelling, screaming even.) So I was off my bed at a dead run not even thinking of putting on shoes or a jacket. Something in my mind was screaming run, run, run. I'm the kind of guy that listens to hunches, so I'm listening and running my ass off.\n\nAs I burst out through the back door I thought I heard something. But the bang of the screen door slamming shut killed any thought of that. I could feel the slick of the wet grass on my feet as my toes dug in at each lunge, each pump of my arms. The tiny bit of moonlight gleamed off the fence post that was in front of me. The thought of a flashlight was buried by run, run, run. My body knew better than I did, as I felt myself soar over the three strand barbed wire that was the barrier between my backyard and farmer Ted's ten acre field, with a small pond at the far end.\n\nAn untilled open field was nothing to be running full tilt through even with boots on. Barefoot, at night, was like playing Russian roulette with five bullets in the gun. It was just a matter of time before a broken bottle, an old can, a buried root, or just tough brush was going to find my bare feet. Cut them wide open or just trip me into a nose plowing furrow in hard pack. But my mind was still hammering, pushing run, run, run...\n\nWhat little moon light there was I was using to scan the pond area. Nothing! Not damn thing, and that should have settled my mind a little, but it just made me run harder. Listening for sounds, all I could hear was the gasp of my breath and the blood in my ears.\n\nI was almost to the pond when I screamed out...\n\n\"KELLY.\"\n\nWhen I got no reply I started circling to the left. Fast as I could run while trying to look in every direction, all at the same time. Passed a bush then round a tree...\n\nI tripped...\n\nFell face first onto my elbows and knees... Staring into Kelly's bare belly, at least it had the same red navel stud as hers, so I assumed it was Kelly. Then the smell hit me...just like it did at deer hunting camp. That sickly sweet copper smell of...BLOOD, lots of blood... as I looked up toward Kelly's face. The black puddle and bubbles on her bare chest made a horrible sucking sound. I crawled up her body as fast as I could. What I saw next stopped my heart...a spurt of black from her neck that steamed in the night air. I grabbed the handkerchief from my back pocket and slapped it on that spurt before it could spurt again.\n\nMy mind was trying to remember if that handkerchief was dirty or not, then I realized that it didn't matter. It was the best and fastest thing that I had; the rest was just tee, boxers and jeans. But I had spurt clamped off, now I needed...\n\nMy body knew better than I did again, my shoulders hunched up and my head dropped as something club like whizzed through my hair then slammed into the back of my shoulder. My body had already started to pivot, a hard fast shoulder rotation and a straight arm mid strike, found gold. Hit cock and balls, and a squeal that started way up high. Counter-rotation of the shoulders and the following high strike was too slow. It just bounced off the top of his head. But I was already rising fast and my knee was streaking for a mid strike to his guts. But his body was bent over and falling backwards too fast, so instead of his waist. The first thing my knee felt was his front teeth and his jawbone break as my knee slid up through his nose and bounced his forehead back. The squeal switched off in mid note and his body limply dropped. Standing over him my first two gasps of air gave me shit, piss, and blood...blood...Kelly!\n\nSpinning and falling fast, hands, fingers grasping, hunting around her neck and found my handkerchief, immediately clamping it on spurt. The sound from her chest made me remember it too. So one handed I started peeling my tee shirt off of my head. I'd barely cleared my face when I saw the tiny light buried deep in the grass...KELLY'S PHONE!\n\nMy hand streaked to it, thumbed it off, hit 0 then call. YES, had dial tone, thumbed it off dialed 911 and pressed call.\n\n\"911 how may I...\"\n\n\"STOP...LISTEN, a girl's been stabbed twice, neck and chest. Lots of blood, air sounds in chest wound. Lots of blood everywhere, get here fast or she's going to die. 1641 Rawlings lane, she's in the field behind that address. In the back by the pond, farmer Ted's pond. For god's sakes hurry, follow this cell signal.\" And I dropped the phone without hitting 'end call'.\n\nWent back to trying to rip pieces out of my tee and get them onto Kelly's chest wound. One handed and teeth, ripping and tearing, trying to get big pieces. My stupid mind's making bets with itself as to which responder will get here first. My bet was Rural Station 12, at six miles down the road. But I was trying to remember if they had EMT's based there. A police cruiser might beat them, but he'd have to be already on the move and close.\n\nSaint Clair Memorial Hospital ambulance was never in the running, they would be last. STUPID...stupid boy, betting on make believe races while trying to hold Kelly's lifeblood in her body with your hands. Stupid, stupid boy, keep even pressure on them. Keep your foot on shithead's leg, if he even twitches, fuck him up. OH...Kelly don't die on me now. I should let up on her neck a tiny bit; she needs a little blood flow up to her brain. Keep even pressure on her chest, need to keep that clean, slow the bleeding but keep it clean.\n\nYES, I was right. A red, white and silver box van is screaming up the road. All lights ablaze, siren at full wail, maybe the most beautiful sight I'm ever seen. Something slips inside me and the night stars spangle in blurs and rays all around them. My vision blurs and I feel the wet in my eyes, but I won't cry. Fuckin'A right I won't cry.\n\nI hear the rattle of the big box van as it bounces over the cattle guard and into the field. The two spotlights and all the top mounted running lights blaze into glory. I feel myself glow as one of the lights highlights' my waving arm. A short horn toot sends me back to putting pressure on Kelly's bare chest.\n\nI watch as one guy gets out of the truck, and with a big flashlight starts running the field ahead of the truck, they'll want to get as close to Kelly as they can. Yet they can't risk dropping the truck into an irrigation ditch or something. The guy's panting as he gets to me.\n\n\"We're here kid, what'ch got?\" As he slid up to me on his knees.\n\n\"Kelly here with a stab wound to her neck and chest. Neck wound spurts, chest wound with air sounds. I don't know about shithead here behind me. I punched him in the nuts and accidentally kneed him in the face and he hasn't made a peep since then. He snuck up behind me and was trying to brain me with some kind of club, while I was trying to stop Kelly's bleeding.\"\n\n\"Just keep pressure on it kid. Toss me the med bag Joe, and check vitals on the other kid.\"\n\nI felt the big bag sail over my head. I turned my head to watch 'Joe', saw him put two fingers to the neck of shithead. Then he looks over to his partner, with tight compressed lips and the slow shake of his head back and forth. Again the stars spangled and rays highlighted them, wet on my cheeks.\n\n\"OK Terry, where do you want me?\"\n\nA very blurry faced 'Terry' is looking at me; I know that he can see the wet shine on my cheeks. I hear the snap of him putting on med gloves. Barely a second later have I heard the same sound from behind me.\n\n\"Here take the kid's place.\"\n\nAs I rock back to let Joe in, my hand slips off the handkerchief, and it falls down. Spurt makes his appearance...\n\n\"OH shit...fuck. Joe we have a nicked artery here. I'm grabbing a heavy compress pad; get it on fast...here!\"\n\nI hear the rip of paper and Terry slams a thick pad into Joe's hand.\n\n\"I'm calling for permission Joe, concur?\"\n\n\"Yes concur, you have too. She's lost a lot of blood Terry.\"\n\nTerry reaches up to his shoulder and keys a MIC that I hadn't noticed before.\n\n\"Saint Clair ER...Saint Clair ER...this is EMT 6 Truck 4 need immediate permission.\" He waits barely ten seconds.\n\n\"Saint Clair ER...Saint Clair ER...this is EMT 6 Truck 4 need immediate permission.\"\n\n\"Go EMT 6. This is Saint Clair ER.\"\n\n\"Need immediate permission for IV plasma and saline. Female patient with stab wounds in upper chest and neck. Neck wound appears to have nicked the Carotid Artery with visible spurts. She's lost a lot of blood, I don't think that she could make transport unless we get some fluid back in her. Over.\"\n\n\"Permission granted EMT 6. Be advised that Saint Clair bus already en'route.\"\n\n\"Yeah I heard, Saint Clair bus already en'route. I just don't think she's going to make it that long if we don't get some fluid into her fast. Over.\"\n\n\"Permission given EMT 6...you might try double IV, are both her arms clear?\"\n\n\"Affirmative ER, we'll try that. EMT 6 clear.\"\n\nThree hands flew into the big med bag. These guys are fast, but it looked like a job for six hands not three. I knew that I didn't know what they wanted out of that big bag, but I could hold a pad.\n\n\"Hey guys, I could hold the pad and free up Joe's hand. I can't help you do your stuff, but I can hold the pad?\"\n\n\"It's pretty tight in here kid...\"\n\nI spun around and got my body aligned with Kelly's, head to head and feet out. Flopped down on my belly and reached around her head to Joe's hand and stopped, not touching. This way I'd be away from Kelly's sides and as low as possible.\n\n\"Uh...yeah, that looks good kid. Joe let him take over on the pressure pad and that'll let us get these IV's in twice as fast.\"\n\nI split my fingers and slid them in between Joe's as his pulled away, eased in pressure as Joe lifted his hand away. Then Joe and Terry really started flying, it was like a simultaneous dance of a pair. Two needles into Kelly's arms, right and left almost together in motion. Blood pulled back into both syringes. \n\nTape over the needles in her arms, another piece of tape wrapped around and laid over. Then a clear square of adhesive is put over it all. The syringes inside the IV needles pushed the blood back in, then were pulled out. More packaging was ripped open, two short pieces of tubing with a needle on one end. A cap on the other and a thumb wheel valve below that, a small Y in the tubing with a rubber cap completed this piece.\n\nThe needles were stuck into the caps of the IV needles. More packaging ripping and two syringes of clear fluid were pulled out and uncapped. Held upright two squirts of clear fluid shot into the air. Both syringes push fluid into the short tube through the little y-joint. As It fills the wheel valve is opened just slightly until fluid comes out, then the valve was pinched off. The rest of fluid is pushed into the tube.\n\nSome more paper being ripped and torn apart. Two bags of clear fluid quickly have two longer hoses attached; both hoses are Y's with a single hose leading out. When the bags attached to the hoses and valve is opened to let fluid flow through each hose. Fluid out the end gets its valve shut. Fluid out the y gets its valve shut. The Output end is screwed in the short hose on Kelly's IV, then bag valve is opened letting fluid into Kelly's IV.\n\nTerry hands his bag to Joe, and rips paper off another bag, and pulls a couple of clip ties from the big bag. Screwing this bag onto Joe's set up he then runs one clip tie through the top holder on each of those two bags. Then he opens the valve for that bag too, doing the same on his side. Now Kelly's got four bags running into her arms.\n\nTerry runs back toward their truck, comes back with two long rods with loops in one end. They're both jammed into the ground by Kelly's head and the bags are hung from the loops. As Terry's diving back into his big bag, I hear the cattle guard again and a quick peek up shows a black and white bouncing up the field.\n\nI'm watching it as it's speeding through the field, raising all kinds of dust and grasses. The thought slides through my mind, 'glad we got Kelly's wounds covered.' I don't like the look of the black and white as it slides to a stop about 30 feet from us. My mind's tinging some bad thoughts and warnings. But I tamp them down, 'these are the police, they're the good guys.'\n\nTwo officers bail out of the patrol car. A big, tall, younger guy out of the passenger side and an older heavy set guy seconds after from the driver's side. The young guy's up quick to help, but the older guy is approaching slower, and I don't like the way his hand is resting on top of his pistol. What's he thinking, one of the EMT's going to get up and attack him with a needle? But I shake myself and think that it must be habit and procedure going into an unknown scene. 'Scene' I must be watching too much TV.\n\nThe young guy's up quick and he must know the EMT's.\n\n\"Hey Terry, what do you need me to help with?\"\n\n\"Jesus Christ Glen, can't you guys kick up anymore dust. Better go with procedure and take the kid's place. Arterial neck wound being held with heavy compress pad. Kid had the right idea, down low and in line with her body stays out of our way.\"\n\nI hear the snap of exam gloves being put on as the cop kneels down by me. Lying on his side with his body right up against mine, with his hand lying on top of mine.\n\n\"OK kid, let off easy and I'll take it.\" In a low whisper. \"Damn sorry Terry, I tried to tell him to slow down. But you know him; he won't listen to anyone and knows more than all of us put together, in his own mind anyway. \"\n\nI start pulling my fingers off as his reach through mine to take up the pressure on the pad. As his start pushing on the pad I lift mine clear, and then roll away from him. He rolls onto his belly right into my spot. I roll a couple of more times then pull up to my knees and sit back onto my heels. \n\nI'm surprised to find myself almost against the older officer's legs. Even more surprised to find him holding his hand out as if to fend me away from him. Even more to see his other hand not just resting on his gun. But actually gripped and ready to draw, finger on the trigger and everything.\n\nI freeze, lock up all my muscles and just stop.\n\n\"You just stop right there kid, don't you move again!\"\n\nThere's no way I'm even breathing here. This guy is ready to shoot someone! All there is here is two cops, two EMT's and me, so guess who'd get shot? The guy sitting here in a pair of jeans with blood all over him!\n\n\"Who's the head EMT here?\"\n\n\"I am, Officer Spalding sir. Terry Jeffers, EMT 6 truck 4.\"\n\n\"What's the situation here Jeffers?\"\n\nWell I guess that lets me know whose large and in charge, Officer Spalding. Officially and officiously both, he'll get the sitrep from the troops. Keep the suspect under guard, hopefully before the victim dies. Let the troops assist the victim; he'll get the scene squared away and secured.\n\nI know I'm sounding smart ass'd here in my own head. But while he's getting everything officiously squared away, both EMT's and the other officer are paying attention to him. AND Kelly's still bleeding...waiting for him...and he's never even looked at shithead.\n\n\"We got 911 call at 9:47pm, Joe knew of the address and the field. So our response time was fast. Upon entering the field we turned on all spots and flood lights. This young man was waving his arm, so we proceeded to his location. Found him holding compresses on this female victim, neck and chest. Her blouse showed signs of being tore and cut off...\"\n\n\"No opinions EMT 6 just the medical facts.\"\n\nOh shit, officious and a hard ass too. Officer Spalding is a jewel, a real fuckin' jewel. But I don't even twitch, I don't want to get shot and they need to work on Kelly.\n\n\"As I approached I observed two prone individuals and one individual holding compress on the female, victim number one. I directed Joe to pass me our kit bag and to check the vitals on male, victim number two. Joe pronounced him DOA. So we directed all our attention to victim number one.\"\n\n\"I assessed her wounds and found a stab wound in the upper left quadrant of her chest. As Joe switch places with this young man. The pad he was holding slipped off and we found arterial spray from a nicked Carotid artery. Both of us concurred that victim one needed immediate IV plasma and saline. We contacted Saint Clair emergency for permission to start IV fluids.\"\n\n\"Upon obtaining permission from Saint Clair ER we started dual IV's on victim one. We'd just finished when yourself and Officer Glenn Ridge arrived. Now with your permission I'd like to get back to our patient.\"\n\n\"Yeah, go ahead I've got all I need from you guys.\"\n\nOfficer Spalding finally steps over to look at shithead. When he dropped from my mid strike shithead fell onto his side, and the sweat jacket hood covered his face. No one except Joe had seen his face yet. Officer Spalding reached down and lifted that hood enough to look, and from my location I could see too.\n\n\"HOLY SHIT, that's Jimmy Hansen! Well I guess I shouldn't be surprised, the little pervert.\" \n\nThe words fell out of my mouth in shock, and way before my brain started to process this. I'd killed a guy that I knew, a guy that went to our school. A guy that had a major hard-on for Kelly... The guy that whispered something in Kelly's ear. That caused her to deck him in the school hallway today at lunch time. The guy that two other girls and Kelly went to Principal Lane and complained about today. Yeah, Principal Lane I can just hear him now, 'well girls you know that boys will be boys'.\n\nOfficer Spalding spun to face me...a look of pure demonic hatred on his face. \n\nThat started things clicking in my brain faster than a machine gun. Hansen, Lane, Thorn, and Spalding are all clan families in our county. Clan families are what most people around here call them. Because they're like the backwoods clans down in the Appalachian hill country. \n\nHatfield's and the McCoy's, hillbilly's and rednecks, dueling banjos and all manner of things like that. Blood is thicker than water, family comes first, eye for an eye, us against the world are all things that come first to them, and those are part of their code, even before right and wrong.\n\nWith Great Grandma Lane as matriarch, and Papa Spalding, Chief of Police, as muscle. Judge Thorn and Judge Lane they ran the hill clans, and the hill clans ran a large portion of the county. They had a little kingdom set up here, but it had started to come apart when Papa Spalding lost the election for Chief of Police.",
        "People joke that those families are so; intermixed, intermarried, hell even inbred that no one can dig out all the connections. My mind is still spinning, Lane, Spalding, Hansen. Spalding, lane, Hansen, Jole...OH FUCK!! I'm dead...Officer David fucking Spalding is going to put a bullet in my head the first chance he gets. \n\nBut I've figured this connection out. If he doesn't shoot me, this might be the ace in the hole that I need, Jolene.\n\n\"Hey kid, get your ass over here I need to take your statement.\" \n\nSpalding walks about twenty feet away from everyone else and away from the vehicles' lights. Points to a spot on the ground in front of him. I really don't want to go over there, the spot he's pointing to is somewhat behind the EMT's van and in the dark. But I'll have too, but I don't go to exactly where he pointed. But stay back enough from the van to see and be seen by the EMT's and the other police officer.\n\n\"Right here kid, get on your knees right here.\" But I don't move; that forced him to come to me. In a salto-whisper. \"Alright you little pecker head tell me what the fuck happened here, and what the fuck did you do to Jimmy?\"\n\nOffice Spalding is leaning right down into my face; and his gun is half out of its holster. Hand still on it and finger on the trigger. I'm trying to think of what I can tell him that won't piss him off? I also won't hang my ass out so he can say that I had some part in this attack. Most of all I don't want to get shot!\n\nSo I decide to tell him the absolute minimum necessary, and nothing but the truth.\n\n\"The girl that's stabbed is my friend Kelly; she sent a text to my phone calling for help. That text said she was at this pond. So I ran to help her, I live just over that fence line there. When I got here I found her stabbed and laying there in the grass. I put my handkerchief on her neck wound. While I was bent over Jimmy tried to hit me with a club of some kind. So I hit him back, I thought that I just knocked him out. So I went back to helping Kelly. I called 911 gave them my address and told them that she was here by this pond. Then the EMT's got here, then you drove up, and that's where we're at.\"\n\nWatching him I can see that he's getting more pissed off as I talk. Plus his gun isn't going back into its holster and his finger is playing in and out of the trigger guard. I know that I can't get any more scared then I'm right now. But I have to think fast, I hope that he remembers that his Papa isn't chief of police anymore. If Papa Spalding was still Chief of Police I think that I'd already be dead. When he starts watching the EMT's, a plan slips into my mind.\n\n\"Terry, I don't feel so good. Terry I think that I'm going to pass out.\"\n\nWhen I see Terry look over at me, I sink off my knees to one hip and arm. Then slide on down to where I'm lying on my back. Now Officer Spalding will have to shoot me in front of a witness when I'm lying on the ground. Surely no way possible to be shot resisting arrest or running away. An 'ah fuck' comes from under Spalding's breath.\n\nTerry comes jogging over to us and kneels down at my side, officer Spalding turns and several steps away then starts talking on a cell phone, I try, but I just can't hear him. I look up at Terry...\n\n\"Terry, you got to help me, that prick Spalding is going to shoot me if he has a chance. Look at his gun he's already got it half out of its holster. The dead kid Jimmy is some kind of shirttail relative of his. Maybe even closer, and you know how those clan families are if you hurt one of them. Look at him Terry; he's not talking on a police radio through police channels. He's on a cell phone talking to someone off the record.\"\n\n\"Shit kid, I know that Spalding is a 'know it all prick and asshole', but to shoot someone in front of witnesses. Nah, I just don't see it.\"\n\n\"Maybe not, but what if I'm right? All I'm asking for is help in delaying him until the ambulance from Saint Clair gets here, and they should be almost here by now anyway. Then he can't take me to the police station by himself, Officer Ridge will be able to come along with his partner. Plus I want Officer Ridge to be the one to find two pieces of evidence, because if Spalding gets them first they might disappear.\" \n\n\"I know maybe I'm wrong, but what will it hurt to humor me? The police with still get the evidence anyway. \n\nRight around Kelly's head in the grass is her phone; I used it to call 911. It'll also have the text message on it that Kelly used to bring me here.\" \n\n\"When Officer Spalding brought me over here I saw a knife in the grass about ten feet along the way that we walked here on. If it's the knife that Jimmy used it's got his finger prints on it. That might be the only thing that proves he stabbed Kelly. If Officer Spalding can make it disappear, and Kelly dies, then they can say that I stabbed Kelly and killed Jimmy so he couldn't tell on me.\"\n\n\"What are you doing smoking dope kid? Cops are going to frame you for murder, maybe shoot you in cold blood? Get real kid!\"\n\n\"Maybe Terry, but what will it hurt doing it my way? Officer Ridge finds the evidence and it still gets to the police station. I ride to the station with two police in the car instead of one, maybe just 15 minutes later. Because we both know that they're going to take me downtown for questioning. So what could it possibility harm to do it my way? When all you're doing is humoring a kid who had to try and hold his friends life blood in with his hands.\"\n\n\"Nice try on the guilt card there kid. But yeah you're right it'll hurt nothing to do it your way. Plus Spalding's a dick, let Glen get the brownie points for finding the evidence.\"\n\n\"Thanks Terry, that takes a load off my mind. Now we just need to get that evidence in Officer Ridges' hands.\"\n\n\"OK kid, I'll get it done.\"\n\n\"Think about one more thing Terry. Why am I out here in the dark away from the lights, 30 plus feet away from everyone else? Kneeling in only a pair of jeans to answer questions to a police officer. Who's carrying a gun half drawn, a can of mace, a taser, a baton, and handcuffs, with his finger on the trigger? Still think I'm smoking dope?\"\n\n\"Nah, I kind of see your point kid.\" He stands and in a louder voice. \"I'll get you something to help you feel better. Keep down and wait right here, I'll be right back.\"\n\nHe heads off at a fast walk back toward Kelly. Only to jerk to a stop looking down into the grass.\n\n\"Hey Joe, hold that pad for Glen and send him over here.\" \n\nJoe and Glen switch, then Terry's pointing out the knife to Glen. Who does a fast jog over to the black and white's trunk. Comes back with a camera, some large baggies and a small numbered white flag on a stiff heavy wire. He pushes the wire into the ground close to the knife. Steps back from everything to get a picture of the whole scene; Joe and Kelly, and Terry standing over the flag. Then standing over the knife and flag, he takes another. Only to kneel and take a close-up of the flag and knife.\n\nPicking it up and inserting it into one of the larger baggies, he writes on the bag. With the flag still in the ground, Terry goes back to Kelly and Glen to the black and white. Glen's still at the trunk when Terry calls him back and points out the phone that they've been almost walking on. Glen's back to the black and White's trunk for another flag and another set of photos.\n\nOfficer Spalding has been facing me for a little bit now. He's watching Glen run back and forth gathering baggies and flags. I can hear his litany of swear words but I can't make out anything else.\n\nSpalding starts stepping toward me and I hear...\n\n\"Well you better *** *** get control *** before **** does. I'll *** *** of *** things ** my end.\"\n\nHe's almost standing on top of me, when I see the look on his face. Satisfied, ready, and I'm cursing myself for this stupid plan that left me lying on my back on the ground. That half out pistol comes all the way out and I'm looking at the big black hole of it, pointed at my face. Just as my muscles bunch and I'm ready to make a last ditch, Hail Mary fling at...\n\n\"What are you going to do Dave?\"\n\nSpalding and I both jerk toward the voice; to see both Glen and Terry standing not ten feet away, watching us. I don't think Spaulding can see it, but I see the baggie with Kelly's phone in it held in front of Glen's waist. Just behind it is Glen's revolver, drawn and in his hand. The tension dumped out of my body so fast that I almost wet myself.\n\n\"I'm just covering this little cocksucker so he doesn't get away.\"\n\n\"Why is he going to run away Dave?\"\n\n\"I think that he's the one who did all this shit.\"\n\n\"Really Dave, so he stabbed the girl, hit and killed the boy. Then called 911 and tried to stop the bleeding while waiting here for us to arrive?\"\n\n\"Yeah, that's what he did.\"\n\n\"Well did you read him his rights and arrest him Dave?\"\n\n\"No, not yet.\"\n\n\"Then he really shouldn't be under active armed guard yet, should he? Plus you know that I'm going to have to fill out a drawn weapon report, don't you Dave?\"\n\n\"No one fills out those fuckin' things.\"\n\n\"We have to since Chief Jansen took over.\"\n\n\"Yeah, stupid dick head. But he's not around for a while; he's at the state capital for a week long set of meetings. Probably for a bunch of chicken shit 'feel good' programs we'll have to go to meetings on, stupid dick head.\n\nFinally that pistol returns to Officer Spalding's holster and he snaps the locking strap closed.\n\n\"Well you watch the little cocksucker then, and if he even twitches and tries to get away 'you' shoot the little bastard. But he's going downtown and we'll meet...ah...ah, someone who'll get to the bottom of this. Then they'll put the little bastard in prison like he deserves.\" \n\nWell wow, I never thought that he'd come right out and say what he meant to do. But he's really pissed off. Still is when he turns and stalks off. I wonder who we'll meet when we get downtown? Terry comes over and gives me a hand up.\n\n\"Well kid I guess I owe you an apology, you weren't smoking dope. That was scary as hell; I really thought he might shoot you, fuck! It's really not your night, is it? What the hell? Hey Glen come over and look at this.\"\n\nTerry's looking at the back of my shoulder where'd I felt Jimmy hit me when he swung that club at me.\n\n\"Yeah that's going to leave a big bruise, and there's bark and shit in it too. What happened here kid?\"\n\n\"When he tried to hit me with that club thing I ducked and moved that must be where it hit me. It really didn't hurt until just now when you pointed it out.\"\n\n\"Maybe you better get a picture of it Glen. I got the feeling that this kid's going to need all the help that he can get.\"\n\n\"Yeah, you're probably right, hey that's an idea. I'm not going to get a chance to do anything while Dave's watching me. When we leave here, why don't you give Curtis at the Daily News a call and let him know what's going on. Tell him that I said that it would be good for him to be at the police station tonight. Stay right here kid I'll get pictures of that shoulder. Why don't you give Terry your name kid.\"\n\n\"My names Kevin Palmer, Kelly's is Kelly Franks. The dead kid is named Jimmy Hansen. Terry can you call my folks and let them know where I'm going to be and what happened. My Dad's name is David Palmer and we live in that house right over there. But they're not home right now. They'll be back early tomorrow morning.\"\n\n\"Yeah sure kid.\"\n\nHe'd no more than gotten the pictures when Terry called out for him to bring the camera back toward where Kelly was. I stayed close to Glen; I didn't want Officer Spalding to get any ideas.\n\n\"Look at this piece of branch here Glen. It's got some of the bark knocked off and a little bit of skin, blood and fabric on it too.\"\n\nRight behind where Jimmy was lying was about a three foot piece of tree branch. Now I know what the 'club like object' was, it was about three inches thick too. About the size of a baseball bat, with just the thick end all the way. If that had hit my head solidly it'd been lights out for sure, maybe even permanently.\n\n\"Hey Joe, how's Kelly doing?\" I was hoping her care hadn't got lost in the drama.\n\n\"I think that she's doing better. Her face is getting more color in it, and her body is getting warmer. I put a clear Tagaderm sheet over her chest wound so she's breathing easier. She's got a cut here between her breasts; it looks like someone cut her bra apart there. It was bleeding some so I covered it with gauze. Her jeans were open and pulled down some too, so I've got her covered with this blanket. Both for modesty and warmth. But I'm feeling better about her chances of getting through this.\"\n\n\"GREAT, I was really worried when I first found her. With all the blood around her and all that got on me, she couldn't have had much left in her. That you guys got here so fast and got blood in her. You saved her life!\"\n\n\"No kid, you're the one who really saved her. A nicked Carotid artery like she has bleeds out pretty fast. You must have gotten to her right after it happened. Plus you must have scared him off of her, who knows what else he might have done to her. No kid, you're the one who saved her life.\"\n\n\"Here Terry hold my camera for a bit, I need to get another marker then take a whole bunch of pictures...\"\n\nI think that we all heard it at the same time. A far off siren headed this way. Thank god, it must be the Saint Clair ambulance. More relief settles into me, I might make it out of this field alive yet. I've heard the saying, 'no good deed goes unpunished', well Kelly's alive and that's a huge good deed, and somehow I think the punishment has just started. The part of my brain that believes in hunches has been ticking over at high speed.\n\n\"Come on Officer Ridge let's get this little cocksucker down to the station so he can be met by Detective...ah detectives and questioned about how he did all this shit. Here cocksucker, turn around and put your hands behind your back.\"\n\nSpalding roughly grabbed my shoulder and twisted me around. Grabbed and jerked my hands behind my back. I could feel the handcuffs he had clenched in his hand.\n\n\"Hold on Off..icer Spal...ding he has not been arrested nor charged with a crime. So it's against procedure and civil rights laws to handcuff him. Or do you think that a half naked seventeen year old boy is a 'direct and imminent threat to us or other people's safety'. Furthermore because he hasn't been charged or arrested, it's his voluntary choice to go downtown for questioning. Have you even asked him?\"\n\n\"Mr. Palmer, will you voluntarily go to the police station with me and Officer Spalding, to answer questions and give a statement about tonight's events?\"\n\nHere is where I made my big screw-up of the night. In my youth and naivety I didn't recognize that Officer Ridge was trying to give me an out. Trying to give me time to marshal help and advice, to clean up, to get my parents involved, and maybe even get a lawyer. I was just happy to have the possibility of getting to the police station alive. I knew that I'd have to go to the police station and answer questions. In my relief I thought 'why not' get it over with as fast as we can.\n\nI'm not sure that Officer Spalding would have let me get away from him either. But I made the choice to go with them. Like a lot of other things that happen from small decisions that cause large consequences. This one did too, and for a lot of people. But none of us could have known that.\n\n\"Sure I'll go, might as well get it over with.\" And the die was cast.\n\n\"Well I've got to get this tree limb tagged and put into evidence, plus a few more pictures. Then we'll get you into the car. Maybe the ambulance will get here and you can see your friend on her way.\"\n\nThe look of demonic hatred was back on Spalding's' face. I think that he was biting his tongue so hard that blood would soon leak from his mouth. But he didn't say anything, just spun on his heel and headed for the black and white.\n\nOfficer Ridge got the limb bagged and tagged, and any pictures he wanted. He delayed long enough that I got to see Kelly put into the ambulance. She never regained consciousness, even in all the moving around they did to get her on to the gurney and into the back of the ambulance. But I watched it drive away under full lights and siren. A brown van drove up too; it had Coroner in big letters on its side.\n\nThe ride to the station was quiet; I rode in the back of course. But the divider was up and I couldn't hear what they said to each other, but it wasn't friendly and it wasn't much.\n\nThey both stayed by me as we entered the police station. When we were at the Duty Sergeants' desk, Glen leaned over to whisper in my ear.\n\n\"I think that you'll be OK in here. So I'm going to get this evidence into check-in and to the lab right away.\"\n\nI hear the Duty Sgt. Tell Spalding to use room three. So I followed him through an area with desks to a short hallway and a door marked interrogation 3. Just inside the room I had to bite back a laugh. It was like every interrogation room shown on any cop show I'd ever seen. Heavy table bolted to the floor with a steel ring in its top. One chair on that side and two on the other. \n\nOf course it had the huge mirror looking at the side with one chair. Which if you were above the age of five, you knew was a one way glass into the room on the other side. I also spotted two black glass half domes in the ceiling, so they also had it wired for video and sound. Actually I liked seeing that, only if they really used it.\n\nSpalding doesn't say anything to me; he just pushes me into the chair and goes out the door. Two men come in fifteen minutes later. They're not in uniform so they must be detectives. Even without him telling me his name yet. I can see one of them is a Spalding just by his features.\n\n\"Hello, this is Detective Bert Samuels and I'm Detective Benjamin Spalding. Can you give us your full name and address?\"\n\n\"Kevin David Palmer, I live at 1641 Rawlings Lane. I go to Mountain Central high school and I'm 17 years old. My parents are Marge and David Palmer. My dad's a Builder/Contractor for Straight Line Construction. My mom teaches second grade at Mountain View grade school.\" \n\n\"High school kid, huh, not 18 yet. How close are you to being eighteen?\"\n\n\"Five months Sir, February 12.\"\n\n\"I imagine that the other two kids are about the same age as you are right?\"\n\n\"Yes sir, both of them go to the same school and some of the same classes as I do.\"\n\n\"Friends of yours?\"\n\n\"Kelly was, Jimmy not so much.\"\n\n\"Why is that?\"\n\n\"Jimmy and I just never got along. We even had different groups of friends.\"\n\n\"Ever get in any fights before?\"\n\n\"No sir, I'm a pretty easy going guy. I haven't fought with anyone in school, not since I moved here in the 5th grade.\"\n\n\"Known the other two that long too?\"\n\n\"Yeah, I've known Kelly that long; I didn't meet Jimmy until we got into high school. I think that he went to Mountain Home grade school.\"\n\n\"So if you didn't know Jimmy that well why'd you call him a little pervert?\"\n\n\"Because of the way he was around Kelly all the time, and the things that he said to her.\"\n\n\"What kind of things did you hear him say?\"\n\n\"Well it started early freshman year, mostly then he'd just ask her out. You could tell right away that he had a thing for her. But she didn't want anything to do with him. Then he started really pushing her to go out with him. She kept saying 'no' to him, but he just kept pushing. He started telling her that he'd take her out to all these fancy places, places that high school kids can't afford to go.\"\n\n\"When that didn't work he started saying nasty things to her. He'd tell her how big his dick was, how he could go all night long. How bad he wanted to fuck her, all the orgasms he'd make her have. I think that somewhere along here is the first time she slapped him.\"",
        "\"Did you hear him say things like that to her?\"\n\n\"Yeah, I did some of the times, other times Kelly would either tell me or a group of people just hanging out. But everyone knew that he was doing that to her. I think that was one of the things that Kelly was trying to do to get him to quit harassing her. Trying to embarrass him in front of other people. Kelly was getting pretty frustrated by this time, she told him no maybe a hundred times. Plus she'd never told him even one single maybe, it was always no, even hell no.\"\n\n\"You have girls always telling you about other boy's pick-up lines.\"\n\n\"No not really, Kelly and I had known each other for a long time, and we were pretty good friends. So we told each other things all the time. What Jimmy was saying to Kelly wasn't pick-up lines, at least nothing like anyone else in high school used.\"\n\n\"You and Kelly are pretty tight, huh. Ever take her out on dates, get intimate with her?\"\n\n\"Who I get intimate with is none of your business.\"\n\n\"Yeah it is, in this murder investigation it is, especially if I say it is.\n\n\"There's no murder investigation here, there's a crime against Kelly and self defense on my part. There's no murder here.\"\n\n\"So you say kid, why don't you just start at the top and tell us all that happened.\"\n\n\"First I want to know if I need a lawyer or not. I think that I want one.\"\n\n\"Nah, we're just talking right now, trying to find out what happened. We'll let you know when you'll need a lawyer. Just tell us everything that happened from your point of view, in your own words.\"\n\n\"No, I think that I want a lawyer. You said this is a murder investigation. Kelly was down with stab wounds and Jimmy is dead, so the only one who could murder anyone is me!\"\n\n\"Nah kid, I just threw that word out there. We don't know what type of investigation this is going to be so just tell us your story as you saw it.\"\n\n\"NO, you said murder investigation and I want a lawyer and my folks here.\n\n\"Hey, let's not get all wound up here. We're just trying to find out what happened.\n\n\"No, I want to get a lawyer here. Plus I'd like to get a hold of my folks and have them bring me some clothes so I can clean up. I'd really like to wash Kelly's blood off of me and get into clean clothes. I can't keep sitting here half naked in just boxers and jeans.\n\n\"Yeah, we'll get all that stuff taken care of after we get your story and get it signed.\"\n\n\"No, I'm not talking or signing anything until I get that stuff, and a lawyer.\"\n\n\"OK, OK...wait here for a bit we'll get back to you.\" \n\nSo both of them headed for the door, Detective Bert Samuels poked his head back into the room.\n\n\"Hey kid, you want a soda, coffee, or water?\"\n\n\"Yeah, a soda wouldn't be bad.\"\n\n\"You know kid; Ben's not a bad guy, his just trying to get things straight. Getting him mad just is not in your best interest right now. Treat him good and he'll do right by you. Well I'll go get your soda\"\n\nI just had to put my head down and shake it. Good cop, bad cop routine has been on every cop show since the 80's. Do they think that every kid under the age of eighteen is stupid? That you're magically gifted with intelligence and maturity at your eighteenth birthday. Then when you reach their age genius level IQ goes along with hair recession.\n\nI tried not to get my hopes up but the longer it took them to get back. The more likely that my folks and a lawyer would be with them. But that ticking hunch part in my brain kept shaking its head no, and letting me know that it wasn't good times coming. With no clock in the room and my phone still at home I couldn't tell time. \n\nBut it was over an hour before they came back...alone.\n\nWell now I know that I'm going to have to think hard. Because I don't know 'when' or even 'if' Spalding will let me bring a lawyer in. It all depends on what he wants to get out of these talks. He knows that I'm not going to confess to anything. I don't know if he thinks that he can sit here and play little fucky, fuck games and trick me into incriminating myself. He's got to realize that's such a small possibility. So what's he after? Or maybe I'm giving Spaulding too much intelligence and he's just hoping for a shot in the dark.\n\nBut I don't think so...I think that he's after a signature. Something that they can either move or forge onto a confession. Then it's over to either Judge Thorn or Judge Lane, a quick guilty verdict, a rubber stamp. Then I'm on the bus to prison within hours, in prison a favor owed or a favor promised. Some dark corner a club to the head or a shive to the kidney. Then it's an 'eye for an eye' just like it is in hill clan code.\n\nJust how do I get out of the trap? If I can delay long enough to have them give up, maybe due to some kind of outside pressure. Then I'm home free. But if I have to sign something in here I better make damn sure that it's on something that can't be moved. If they're going to forge something there's nothing I can do about that.\n\n\"Hey kid, it's been a while so I got you two sodas.\"\n\n\"That Bert he a pretty good guy, right kid?\"\n\n\"So let's get to that story of what happened last night. Bert here can take notes and write it up for you. Then you can read through it and sign it, and maybe we can get you out of here before the rooster crows.\"\n\n\"Is my folks and a lawyer outside?\"\n\n\"No, we don't need that, when lawyers get involved that's when shit gets serious and people start getting all mad and stuff. I don't want to get into that kind of talks if we don't have too.\"\n\n\"I want to clean off all this blood and get into some clean clothes, and talk to a lawyer.\"\n\n\"Ah kid, this is not where we need to get with these talks. We just need to keep it between us and friendly. You can understand that can't you kid?\"\n\n\"Clean clothes, wash water and a lawyer.\"\n\n\"Come on kid...***yak yak yak...\n\nAND we went round and round, me for clothes and a lawyer. Benjamin Spalding for a story and a signature. Round and round surrounded by talk, talk, talk. For at least another hour then they left again and I got two more sodas. It must be at least six or more hours since Kelly was stabbed. So that would put it anywhere close to 4:00am. Plus I think that I've picked up on their next fucky fuck game. Four sodas in three hours and no bathroom break. A little personal cleanliness embarrassment to help hurry things along, a little urgent pressure so to speak. Hey they're back...\n\n\"Hey guys, I need a bathroom break.\"\n\n\"Yeah kid, we just need to get this little task of your story out of the way then we'll get a uniform officer to run you to the can.\"\n\n\"Bathroom, clean clothes, wash water, folks and then my lawyer.\"\n\nAnd the round and round starts again. I'm beginning to think that they don't have the video and audio running, or they have a supporter manning them. But if they're running and the tape exists they have to show how much I've been asking for a lawyer. To my understanding all questioning has to stop when a lawyer has been requested. Plus I'm under eighteen so I think that my folks have to be here to have anything legal, even a signature, But I've got to piss like a race horse. As I ask again, they step out of the room again.\n\nWell two can play these fucky fuck games. I pull my bare feet up on the chair rung, slide close to the table. With my hands in my lap I unzip my pants, fish out my dick and piss on the floor under the table. I don't think that any of the video cameras can see there. Oh sure, they'll figure it out. I think that I better give them my story, only its most basic form. Then we'll have to see what they want to do about a signature.\n\nI think that I'm going to die of old age in this room. It's got to be over ten hours so far. They're back...\n\n\"Hey kid here's a couple more sodas for you.\"\n\n\"Great this is thirsty work.\"\n\n\"OK kid; let's get into this story of what happened last night.\"\n\n\"If I tell you my story will you get my folks and a lawyer?\"\n\n\"Hey kid, we'll make you happy. All we want is to know what happened out in that field.\"\n\n\"OK, Officer Spalding you win. Here's what happened, I was lying in bed at home when a text pops up on my phone. It's Kelly asking for help at the pond in the field. So I take off running to her. When I get there I find her lying in the grass stabbed twice. Once in the chest and the other on her neck. I try to put pressure on them. But Jimmy tries to hit me on the head with a branch, from behind. So I turn around and my first punch hits his groin. My second punch hits the top of his head. Then I'm trying for a strike with my knee into his waist.\"\n\n\"But he's falling backwards and bent at his waist, so my knee hit's his face and he falls over. Then I go back to taking care of Kelly. I see her phone down in the grass and I use it to call 911 for an ambulance. I go back to putting pressure on Kelly's wounds until the EMT's get there. There, that's what happened.\"\n\nA couple of knocks on the door a 'come' from Spalding and a uniformed officer hands him a couple of sheets of paper. He takes the time to read them, but he doesn't look too happy about them.\n\n\"OK good, Officer Samuels will write this up and after you sign it we might be able to get you out of here.\"\n\nOut the door they bail.\n\n\"Spalding, hey stop, what's on those lab reports?\"\n\n\"Just get that statement typed up Bert.\"\n\n\"No Ben, cough it up, I need to know what's going on here. You're keeping me in the dark like a damn mushroom. Give over those reports, right now Ben...come on, hand them over. Fuck Ben we aren't leaving this spot until you hand over those sheets.\"\n\n\"Hum...hum, well that's right interesting. This one says that the DNA and the blood type match on the club...er branch match Kevin David Palmer, the boy we got in the room. The other end has skin cells and DNA matching the deceased, one James Paul Lane. This one says that the knife has one set of finger prints on it belonging to the deceased, one James Paul Lane and blood matched to a Kelly Ann Franks.\"\n\n\"This is a dead match to the story we just heard from that kid Kevin.\" \n\n\"HEY...Ben I thought the kid that was killed was a Jimmy Hansen, that's what you told me, Jimmy Hansen. James Lane, Jimmy Hansen, Lane, Hansen...OH FUCK...Ben you're going to get this stuck so far up your ass you'll chew on the end of it. FUCK...FUCK this is a Papa railroad job isn't it...isn't it. YOU STUPID COCKSUCKER BEN. Lane to Hansen, Lane to Hansen...Shit Ben there's only one, that's...that's Jol...AH SHIT Ben they're going to throw you behind bars and throw away the fuckin key. You know that don't you?\"\n\n\"NO I don't know that, all we got to do is get a signed signature sheet. Tag a confession to it, then get it over to Judge Thorn, he stamps it. Then two hours later he's on the bus to Highgate Prison. Fuckin Chief Jansen's tied up in meetings at the state capital for a week, so he can't fuck it up either.\"\n\n\"What do you have planned for him there Ben? Blackjack to the temple, shive in the back, call in one of Papa's favors and it's a done deal isn't It.? Well Ben, have you really looked at what you're doing, really thought about it. If that was one of your hill county girls with an out of stater trying to rape and kill her. Then this Kevin kid blows him away with a 12 gauge. You'd hang medals on him til the cows come home.\" \n\n\"But let one of your hill county perverts try to rape and kill a girl and her friend stops him and kills him. Then you're going to frame that Innocent kid for murder, put him in prison and bump him off. Just cause it was your pervert that was going to rape and murder. What's the going rate Ben, ten city girls for one gold plated hill county pervert? I remember now, back a little while ago you yourself called Jimmy 'that little pervert'. Now he's some gold plated saint that needs to be avenged. Look and think about what you're doing Ben, you KNOW it's wrong.\n\n\"God damn it Bert, he's my Daddy I got to...\"\n\n\"NO, Ben you don't 'got' to do anything. Sure he's your Daddy; right, wrong, or the devil himself he's your Daddy. But you don't 'have' to follow him to hell. Because that's where this is all going when the shit hit's the fan. \n\nAh shit...Ben by the look in your eyes I can tell I'm talking to the fence post. You're going to do whatever your 'Daddy' says and whatever that fuckin hillbilly code says to do.\"\n\n\"Well that's it then...we're done Ben, I'm not backing your play anymore. We're splits Ben, I'm not your partner anymore, I'm not your friend anymore either Ben. You're a cop who can't tell right from wrong and don't really care. I'm done, I'm out of here, find your own back-up Ben.\" Detective Bert Samuels turned and started to walk off down the hallway. Three steps and turned back and walked up to Detective Benjamin Spalding, got nose to nose with him.\n\n\"Bennie boy, if you and your Daddy get that innocent kid put in prison and bumped off. I'm coming after you personally and when you're dead. I'll be coming after Papa until he's dead, so you get on the horn and tell him that. Tell him to find some other way to satisfy his ego. Kid goes; he goes, tell him that.\" \n\n\"Oh and one more thing Bennie boy, I'm going to walk down that hallway. If that pistol of yours comes out make sure that the first one kills me dead. Because if it doesn't I'm going to take it away from you, stuff it up your ass and pull the trigger five times. You know that I can and I will. So you got another big decision to make Bennie boy. Pull that pistol and know that the wrath of God is coming straight up your ass.\"\n\n\"Bye now Bennie boy, grow a pair of balls and do the right thing.\"\n\nBy the time they came back I'd added to the puddle under the table. I've been here so long that I'm getting some serious cramps in my legs trying to keep them off the floor. So I got a little kick and walked around on the table top. Did some stretches and a little jog in place stuff, sit ups and pushups, all on the table top of course. \n\nTrying to keep myself awake, this is taking a lot more time than I ever thought it could. Got to give those audio-video guys some laughs, although as long as I've been here I seriously doubt that they've had anyone in there.\n\nWhen they get back in the room it's just Detective Spalding and a uniform cop.\n\n\"Hey where's Officer soda pop?\"\n\n\"He had to go be with his family. So here's what we typed up from your story. Read through it and sign the second sheet, then we'll see about getting you out of here.\"\n\nThe first sheet all typed out in double spaced was the statement that I'd told them. It wasn't verbatim but it was close enough. The second sheet started with a statement about; this was my statement that I gave it of my own free will, which I read and it was accurate, that it was a true account of the incident in question. Then it had a separate line for my signature and an official looking seal that the bottom.\n\nSo I thought to myself that 'here' was the whole purpose for all the fucky fuck games tonight, and why I spend over, maybe way over, sixteen hours in this box of a room, being pumped for information by this dumb hillbilly detective. This single sheet of paper, with one line on it where my name goes.\n\nSo I signed it...flipped the first sheet over and quickly wrote five words on it.\n\nLaid it on top of the second sheet and pushed them over to Detective Spalding. He'd watched me write on the back of that sheet, and he didn't like it, and his face let me know that. But he tipped it up and read it, with the uniformed cop reading over his shoulder. Coffee spew from the nose and mouth of the cop. \n\nWhat I'd wrote said, 'I suck dead dog dicks'. When Spalding looked at the signature sheet his face turned purple inside of two heart beats. The signature read Benjamin Spalding, and the cop couldn't hold in his laughter. Needless to say they went out the door.\n\nThey had to believe that I was dead stupid if they thought for even a second that I'd sign a blank check. Because that's what that signature sheet would have been, a blank check. Write out any confession that they wanted too, staple it to the signature sheet. Then I'd be signed, sealed, and delivered.\n\nSo I added to the puddle under the table. Then the table top was a stage for jogging in place, sit-ups, and push-ups. Then the next of their fucky fuck games started as the room air conditioner went to max cool. So I added a new wrinkle myself. Standing in Spalding's chair I picked and brushed all of the dried blood off of me that I could.\n\nDamn they had a good air conditioner and me in just boxers and jeans. So into my chair with my legs pulled up and arms wrapped around in as tight a bundle as I could. It was about two hours before they came back in.\n\n\"Oh damn, must be something wrong with that thermostat. Sorry about that kid, I'll try to get that fixed. Just as soon as we get your statement witnessed and signed\" he pushed two more sheets of paper toward me. \"Then we can get you cleaned up and out of here.\"\n\nWow, I guess that I'm not only stupid, but I'm a weak wimp that can't stand a little cold. At the knock on the door another Officer stuck his head in and asked to speak to Spalding in the hallway.\n\n\"Detective Spalding you're going to have to let this kid go. I got a whole lot of people waiting outside for him; some of them have been there most of the day. Daily News has a reporter and a TV camera out there. But mostly I got the kids parents and a lawyer standing in front of my desk. The lawyer just gave me a release order signed by some State Judge that I've never heard of, and they're screaming bloody murder about civil rights. Plus I got text messages from the Sheriff and the Captain wanting to know what the hell is going on.\"\n\n\"You gotta turn him loose!\"\n\n\"AH, fuck...fuck...fuck. Stupid, stupid, fuckin kid. Ah...wait a minute...that...that might just work! OK Sergeant give me about a half hour to get him cleaned up and we'll get him out of here.\"\n\nFirst thing that I noticed was the air conditioner died. Then Spalding blew in and picked up those two sheets of paper. Addressed the uniformed officer.\n\n\"Officer Jaker, take this kid to the wash room and get him cleaned up and into an inmate jumpsuit. Bring him and his clothes back here when he's done.\"\n\nThe officer took me to a restroom with a little sink and some paper towels. I had him wait outside the door, and locked it. Then stripped to my skin, blood had even gotten under my boxer's waist band. It took a lot of paper towels and time to get even somewhat clean. \n\nWith as much blood as was on me, again I was worried about Kelly. I didn't know if she was alive or dead. No matter how many times I'd asked Spalding for information he wouldn't tell me anything.\n\nThe jumpsuit that they gave me to wear was shit orange and numbered, but I think that's what Spalding wanted. It was big too, a 6' 8\" 300lb'er could fit in here. Back to my little box of a room Officer Jaker drug me, Spalding was waiting.\n\n\"Kid your getting out of here. But I've got to keep your clothes for evidence. So I need you to sign this possession receipt first.\"\n\nAs soon as he said 'sign' I thought, 'here we go again'. But the sheet that he gave me was only a single sheet. From what I could see of it, it looked like a standard printed form that might be used every day. I was tired and cold, worried about Kelly, wanting to see my folks and the outside of this place. \n\nSo I signed.\n\nOfficer Jaker followed as Detective Spalding led me down that short hallway. Just as we stepped into the outer office area two more Officers jointed us. My head was starting to spin in circles as two more met us at the front doors. Then I and six police men stepped out onto the concrete landing of the police station, six steps above street level.\n\nThe first blast to my mind was the thirty to forty people that were on the sidewalk and street down in front of us. Then my eyes took in a guy hold a large video camera on his shoulder, my folks and Cousin Edward were to his left. Cousin Edward just graduated law school and passed the bar exam not two months ago. He must have helped get me out of there.",
        "Second blast to my mind was the evening time. In just a couple of hours it would again be a dark and stormy night. I'd been inside a lot longer than I'd thought I had been. I could see the worry on my Mom's face and the distaste of seeing me in a jail suit.\n\nA guy in a gray suit carrying a microphone stepped up to me and pushed the Mic toward me. I thought he would know so I beat him to the punch.\n\n\"Do you know how Kelly's is doing?\"\n\n\"Yeah Kevin, she's in the hospital and expected to live. She's had the artery repaired and her wound treated, now the only thing they're worried about is she hasn't regained consciousness. She was a lot closer to bleeding out than anyone thought. But she'll live; now all they're worried about is her brain, worried if blood flow was cut off for too long. But as soon as she regains consciousness they'll know if everything is alright.\"\n\nHe turned the microphone and showed me the switch as he turned it on. I looked to the camera and its red light was on too.\n\n\"So Kevin, how's it feel to be a hero?\"\n\n\"A hero?...for what? Saving Kelly? I don't feel like any kind of a hero at all. Until just a half hour ago I was still caked in Kelly's blood wearing only my jeans in a room with the air conditioner turned up to max cool. Fed soda pop by the gallon and not allowed to go to the bathroom.\" \n\nSpalding slid up beside me and turned his back to the reporter the heavy whisper...\n\n\"Stop talking kid, stop...shut up, you don't know the shit you'll get in if you don't stop!\"\n\nBut I was pissed, so it was green light and pedal to the metal for me.\n\n\"These cops harassed me for hours trying to get me to sign a confession, a confession to a crime that I didn't commit. They harassed me for hours and then just left me in a locked room by myself for more hours. All because they wan...\"\n\nFrom behind me I felt a huge shove that knocked me into Spalding. His theatrical fall to his butt on the landing almost made me laugh. His yell of, 'he attacked a Police Officer' started that laugh to leave my mouth. Until my legs were kicked out from under me. The fall to concrete was hard, worse was the knee that landed in my back. Then the jerk of my arms back and the rattle of handcuffs...\n\nWas drown out by the bellow of...\n\n\"STOP...everyone stop right now.\"\n\nComing up the side steps was my old friend Officer Glenn Ridge, but ahead of him was Chief of Police Michael Jansen. He walked up to the landing and stood almost in front of me. I thought that everyone said that he was in the state capital for all of this week? Glen must have called him in.\n\n\"Curtis, would you mind killing the Mic for a bit please, thank you. Get the kid up right now, JUST WHAT do you dumb sons of a bitches think you're doing. No wait that's the trouble you're NOT thinking. No, how can you possibly be thinking when you've got what people are calling the 'hero of the county', slammed to the concrete in front of the evening news and thirty cell phones whose video will be screaming police brutality on facebook and Internet sites all over the world in ten minutes.\" \n\n\"No, you're obviously NOT using anything that's between your ears. Detective Spalding, you and your brother David are on administrative leave as of right now, you too Jefferson. That push looked like a planned set-up to me. So all of you turn in your gu...\"\n\nA loud voice carried in from the crowd...\n\n\"B...you promised me. You promised that he'd go to prison for killing my Jimmy. You promised.\"\n\nMy eyes spun through the crowd until I spotted her...Jolene Hansen...Jimmy's Mom.\n\n\"You promised, and now they're going to let him go. But you promised me.\"\n\nMy eyes flew open as I saw the silver plated shine come out of her purse. But again my body knew better than I did. My knees and leg muscles turned to liquid as I started what I hoped was a light speed flight to the safety of concrete. On my way down I saw Chief Jansen step toward me. \n\nBut the heavy 'BOOM', the flight of the angry bee, and the zing off building brick, was close, real close. The three were simultaneous in my ears and mind, the boom, flight, zing. \n\nThe second 'BOOM', flight and meaty thud lifted and spun Chief Jansen's body so that it landed just instants after mine did. That boom said things in my mind, hand cannon, magnum.\n\nThe third 'BOOM' lifted Officer Ridge off his feet and knocked him back. Everyone else was in full flight...away.\n\nThe irresistible body urge to look put my eyes above Chief Jansen's body. Everyone in the street was flopped down on the ground or in full flight away too. Jolene stood like the lone pine tree, pistol coming down for number four... \n\nWhen the crack, crack...crack, crack, of two lighter caliber double taps sounded almost, almost simultaneously. Pink color blossomed behind Jolene as she lifted off her feet and flopped back onto the street and lay still. Chief Jansen's body rolled back flat and a deep groan sounded, I heard his hand and gun hit the concrete.\n\nMy head dropped and I cried...\n\nI shouldn't be too ashamed to say that, but I am. When two knees bumped into my body and my head crawled into my Mother's lap, arms wrapped her hips...and I cried. I'm kind of ashamed of that too. But I'm glad to be able to be ashamed.\n\nNoise seemed to spring into being instantly and it was all around and fast. Someone jerked the door of the police station open and screamed 'medical', 911 was on dozens of lips. I could hear Curtis's voice in the background trying to give a news report. Voices and bodies flew in every direction. \n\nI pulled my head up a little bit; Jolene's body lay all by its self in the middle of the street. Arms spread out wide like some kind of grotesque cross. As if through Kelly's ears I heard Principal Lane's words; 'well girls you'll just have to understand that boys will be boys.' \n\nMy hunch driven mind is telling me crossroads, pivot point, fork in the road, but this was it. If Principal Lane had disciplined or even sent Jimmy home, would he have gone after Kelly? and started this avalanche of shit? That little voice in my mind is saying no, loudly. \n\nSitting up I see Chief Jansen's bullet wound is almost in the same spot as Kelly's stab wound was. The phrase goes through my mind, 'bullet wound goes in small comes out big.' So I tip Chief Jansen's body up on its side. Softball size of...hamburger, and I'm frantic suddenly for something to put on his wound. Feeling first for my handkerchief and a mental overlay flash of Kelly. A t-shirt is pushed into my hands, they fly folding it into a pad. Putting it on the mess his shoulder is, and then I lay him back flat. Another t-shirt is handed to me, quick folds and I press down hard on the wound. I'm thinking that the pressure will carry through to the back too.\n\nThe unbelievable small flash of white draws my eye to the image of my Mom kneeling beside me in her bra, and the realization that the first shirt was hers, the second was Dad's. Looking across the Chief's body to his bare chest.\n\n\"Dad, can you check Officer Ridge?\"\n\n\"He's got four cops around him son.\"\n\n\"Anybody check Jolene?\"\n\n\"I think someone did, but I'm sure she's gone. Four bullet holes in her chest and nobody's even looking at her.\"\n\n\"Will you check on Glen for me please Dad?\"\n\n\"Glen?\"\n\n\"Officer Glen Ridge.\"\n\n\"Sure.\"\n\nA sudden increase in light flashed my eyes up to see Curtis and his camera man standing over us, Curtis stage whispering into his Mic. I hear words like; Chief, shot, hero, Mother. But I'm not paying attention, except for the sudden small giggle I can't quite stop. The puzzled look from Mom, prompts me to lean and whisper.\n\n\"Your boobs are going to be on TV.\" The slap on the arm is expected.\n\n\"Oh shut, my bra is a lot bigger than most of your girl friends bikinis.\" Needless to say the red is rising.\n\n\"Yeah, but so are your boobs.\" Now the slap was a bit more earnest.\n\n\"Glen was hit in the lower part of his lung and he's having a hard time breathing.\"\n\n\"Is there air sounds outside his wounds?\"\n\n\"Yeah.\"\n\n\"See if they can find some type of plastic wrap, like sandwich wrap or something like that. The EMT's put a patch over Kelly's wound and she started breathing easier. Make sure they get both sides; Chief's exit wound is huge. Jolene had a fuckin cannon. Trust one of those hill girls to have a magnum and know how to shoot it.\" A hoarse voice, barely above a whisper came from below us.\n\n\"Fuckin gun could be anyone's. God damn Spalding had to have called her. How could she have known to be here when you were coming out, and to bring a gun? One of them had to have called her.\"\n\n\"Just be quiet Chief the EMT's should be here soon.\"\n\n\"No, someone find Lieutenant Janacek for me and bring him here. I need to tell him some stuff.\"\n\n\"I know Gary Janacek, I'll get him here.\" Then Mom took off, bra and all. Dad was back.\n\n\"Kevin that sandwich wrap worked, he's breathing easier now.\"\n\n\"Great! Thanks to Terry and Joe. God I hope those EMT's or ambulances get here soon.\"\n\nMom comes back with Lieutenant Janacek in tow. The chief's hoarse voice rises.\n\n\"Kid, I've got some private police business to tell the Lieutenant, he can hold the pressure pad so you and your folks can be together.\"\n\n\"Sure Chief we'll go check on Officer Ridge.\"\n\nMrs. Kidder comes in to hand a t-shirt to Mom and Dad. Looking up to watch her leave I'm amazed to see the crowd gathering, people are coming from everywhere even before the EMT's can get here. One guy runs up to the landing and I hear, 'I'm a doctor'. Lieutenant Janacek points him toward Officer Ridge. \n\nThe crowd has grown to maybe fifty-sixty people. There's over a dozen cops all over this area, some are keeping the crowd back. The crowd's pretty quiet; it's the police that are running around like chickens. Lieutenant Janacek will call one over and sent him off on a task.\n\nSpalding and three others are just standing off to the side and talking among themselves or on cell phones. One police man is by Jolene with markers and a camera. Taking pictures of the gun and her purse, then inside of her purse, my mind's puzzled. Until he pulls out a cell phone and bags it, the light bulb goes on. Chief wants the call log; I hope she didn't clear it.\n\nSiren wails come from two directions and are here pretty quickly. But Officer's have to help them get through the crowd. The little guy in my mind is shaking his head in disgust, lookie lou's view is more important to them than another person's blood.\n\nOne van is an ambulance and the other is EMT's. Lieutenant Janacek sends the ambulance toward Officer Ridge and the EMT's go toward Chief Jansen. But Chief holds them back for a little bit because he's still talking to the Lieutenant. He's tough but it doesn't do him much good because it's just a few minutes and I see his muscles go limp as he passes out.\n\nThe EMT's jump in and start putting needles in his arm for IV's. It's a bare five minutes and another ambulance gets here, gurney out and chief loaded onto it, into the van, siren on and away.\n\nAll that's left is the blood on the ground, the mess left behind, and all the lookie lou's. Plus Jolene and her big ass fuckin gun.\n\nIt's been almost a month since that dark and stormy night that Kelly was stabbed. Chief Jansen and Officer Ridge are still on medical leave. Officer Ridge had to have part of his lung removed; Chief Jansen is the one with the most damage though. He keeps trying to get back to work, but they won't let him.\n\nBut something's going on, something strange and behind the scenes. I've got a new lawyer. A guy from out of state and a much respected one too, and at no charge. Plus he flies in to ask me questions, and then flies back out. He has an assistant that's a man and I've never seen him take even a single note, but he asks questions too. \n\nEither he's got a recorder, perfect memory, or he's not really an assistant. Guess which one my money's on. Looking that the 'assistant' I expect to see his coat swing open and show a gun and shoulder holster, plus a badge. Oh yeah, when he flies in and out at his own expense, it's just my lawyer. The assistant never seems to make it to the plane.\n\nWhy do I still need a lawyer...or two? My cousin Edward is still on the job too. Because the Spalding's are still after me. The only thing that's good about that is they're after me in the courts. Not with a hillbilly squirrel hunter and a long range rifle. Although I still watch and move around with a great deal of care.\n\nInquest that's what they're calling it. An inquest to see if I should be charged with murder. One of the first things that I told my new lawyer was about my fear about what they were after, a signature. At first he wasn't concerned about it. He felt that even if they 'turned up' a confession he could get it thrown out of court. Because of civil rights violations, interrogation abuses, and several other legalities. \n\nBut I reminded him that these judges might not throw anything out. Especially if we got Judge Lane or Judge Thorn. So my lawyer, Lionel Chopin, (no relationship) he always has to add that when he introduces himself. I think that he gets a kick out of doing it.\n\nCame up with a plan to be proactive and discredit anything that they might produce. I got to fly over to the city where his practice is, take a polygraph test, and have it witnessed by the technician and a federal Judge that Mr. Chopin knew. Saying that I'd never signed anything like a confession. Then he filed a copy with the court system here in town. \n\nThree days later a statement that I'd 'signed' was filed in the case. It was 'not quite' a total confession, but so close as not to matter. It was filed late because of all the confusion in the police department in the aftermath of the shooting, yeah right, and Detective Spalding being put on administrative leave.\n\nIt put all three of us in Farmer Ted's field, me and Jimmy fighting over Kelly. Kelly getting 'accidentally' stabbed trying to separate us. Then me, not really meaning too, but killing Jimmy in the fighting using my karate training. Then tearing and ripping Kelly's clothes while trying to stop her bleeding.\n\nHow did they think that they'd be able to get away with something so far away from the truth? Kelly came a lot closer to dying than any of us knew. It took almost two days before she regained consciousness. Even then her short term memory was badly affected. She remembered almost nothing of the attack, just running away from Jimmy toward the field.\n\nHer Doctors said that it 'might' come back. But because it was related to 'possible' blood loss damage the better possibility was that it might never come back. That might not be a bad thing for Kelly. She'd have a lot less 'emotional trauma' because she won't actually experience the attack. It 'might' not be a good thing for me, because there's no one to tell what actually happened. So maybe they can get away with their 'confession'.\n\nThe day the 'confession' was filed two uniformed officers showed up at our house with a Warrant for Arrest for me. Mr. Chopin had told us that because he was an Officer of the Court he couldn't tell us to break the law, but it 'might' not be good to end up in their physical possession again. Mom had seen the black and white go by while she was down the road at a friend's house and called us. \n\nDad and I went out the back door and into his workshop. I went down into the little dirt hole under the shop floor. Dad put the floor boards back in, a little saw dust thrown on top and a saw horse over that. Then he turned on his noisiest machine.\n\nWhen the officers didn't get an answer at our door. They heard the machine running and came back to Dad's shop to present their warrant.\n\n\"Sorry officers, I'm not really sure where he is. He's a big boy and we don't watch his every movement. He might be at that girl Kelly's, or one of his other friends. But I think that I heard him talking about camping and fishing. We can go over into the garage and see if his camping stuff is there.\"\n\nI almost laughed, Dad knew it wasn't there. It was still in the back of Mom's SUV from the last time I'd gone camping.\n\n\"Yeah, he's gone camping and his gear should be right here. You can even see in the dust where it was, but it's gone now.\"\n\n\"Well do you know where he's gone?\"\n\n\"Oh hell no, he's got a bunch of secret fishing holes that he won't tell even me or his best buddy about. But he does catch some really good ones. His lips are sealed up tight as to where they are, says he doesn't want them fished out. So he could be anywhere, if he thinks that his spot could be fished out it might be pretty small. So yeah he could be anywhere.\"\n\n\"OK, thanks for your help, we'll have to go back and see what the Judge wants us to do now.\"\n\n\"Hey Officer, can I see that warrant for just a minute?\"\n\n\"Sure.\"\n\nThen my 'low tech dad' took a picture of it with his cell phone, I didn't know that he even knew how. Dad waited until the black and white left, then came and got me out of that tiny dark hole. We dumped that picture into the computer and e-mailed it to Mr. Chopin's cell phone. \n\nI don't know how but it was less than an hour and my cousin Edward had an Injunction, I think they called it, signed by a State Judge. Against that warrant and 'my statement', claimed they were invalid due to a State IAD investigation into the conduct of Detective Benjamin Spalding. \n\nA copy was sent to Judge Thorn who was the one who issued the warrant. Two hours later Judge Lane tried to issue another one. The next morning he received a phone call from some type of judicial oversight agency. Supposedly they told him that the warrant had been stopped at the clerk's office. That he was to abstain himself from any contact concerning the case involving James Paul Lane-Hansen because of his familial relationship with James Paul Lane-Hansen.\n\nI guess, at least I was told that 'he' told them to keep their God Damn nose out of his court room. That he was the Judge and he'd do whatever he felt like. That the warrant would be enforced and the little bastard was going to go on trial and be put in prison like he deserved. They could fuck-off and stay out of his way!\n\nThat afternoon he was removed from his office by two State Highway Patrol Officers, put in the back of a patrol car and taken...somewhere.\n\nI was getting to spend a lot of time with Kelly. We were both in a type of trouble, me more than Kelly. Kelly's was medical and in not too much time she would be back in school. Soon the Doctors would release her for activity and she could go to school, under limitations. \n\nNot me, the school board had judged me a clear and present danger to the student body and staff of Mountain Central high school. That because of my involvement in the death of a fellow student, I was judged as too dangerous to attend school with others. \n\nSix school board members split votes 3 to 3, so they had Principal Lane cast the tie breaking vote. Six board members; James Thorn to expel, Karen Williamson to attend, Steve Cauchy to attend, Eleanor Lane to expel, Mary Spalding to expel, Melissa Evans to attend, the tie breaker being Principal Lane to expel.\n\nI was spending a lot of time with Kelly because our folks are splitting the cost of a tutor. Kelly's teachers are all sending homework and assignments home for her. She's allowed to send them back to school for credit toward her graduation, when she gets clearance to go back she'll be able to graduate with our class.\n\nThe soonest I could get approval to go back will be after the inquest, which is set for June 20th. Which of course is after schools out, I don't get to graduate with my friends. Furthermore I don't know what that's going to do to my scholarship to State. That's one of cousin Edward's job's is negotiations with the State University, but it don't look good. No high school diploma, no admittance, no scholarship and I'm fucked.",
        "It looks like the most likely outcome will be getting everything settled in this Inquest. Then redoing my senior year of high school, reapplying for scholarships thus wasting a year of my life for a maybe, and end up a year behind my friends.\n\nThe best outcome is this tutor, if I can learn everything that I need to. I can challenge all my GED courses and all college entrance exams. But that might still leave me screwed on my scholarship. This might not allow me to get into school, unless I want to graduate with a crushing load of student loan debt.\n\nMr. Chopin said not to worry, he's burning through trees. He really is too, he's got so many papers filed through the court system I think that they've had to hire two extra clerks. I think that I'm suing everyone including several governmental agencies. So let's see, I'm suing; Benjamin Spalding, David Spalding, Principal Lane, the Mountain Central High school board, City Police department, our fair city itself, State Board of Education, Judge Lane and Mr. Chopin said when it all shakes out there might be a few more.\n\nSo I guess I'll try to believe Mr. Chopin when he says to not worry about money for school. Kelly and I'll just keep hitting the books, listening to the tutor, and trying not to worry.\n\nIt's Kelly and I that have changed; we've always been pretty tight. I don't know if I'd say best friends, but pretty close too. As we've grown older we've become each other's sometimes dates. Kind of a friend/casual date if neither of us has a significant other at that time. In the last year or so we've also become each other's FWB, not romantic just for fun and games.\n\nI really thought that I might lose her, and that did something to our relationship. I know it did to me, for a while I worried about Kelly's. I hoped she hadn't changed because of some kind of hero worship, or maybe a subconscious gratitude, but I guess we'll see.\n\nTwo weeks before the Inquest something happened that made me think of those things 'behind the scenes' mysteries. With Judge Lane gone the only one left was Judge Thorn. He was supposed to be the Judge presiding anyway. Then he 'retired' early, two weeks before the Inquest. Judge Williamson was a retired federal judge that they brought in special.\n\nIn all the meetings with Mr. Chopin pre-inquest. We covered a lot of possibilities and did a fair amount of practice on testifying. I told him what my ace-in-the-hole was, and drew out the whole 'tree', with names included. He laughed, asked me why I'd been sitting on it this long. I just smiled at him.\n\nAn Inquest is not supposed to be a 'trial', it's meant to just find facts to see 'if' there needs to be charges filed and a trial held. This set up looked like a trial to me. Judge in his tall box, a court recorder, a bailiff. Then there were the two attorneys, one prosecutor, two defending, hell it even had a witness box.\n\nThe evidence was to be entered first, piece by piece. Each attorney got to inspect each piece before it was admitted into evidence. As soon as my 'statement' came up Mr. Chopin challenged it. The prosecution brought in their 'expert' that had validated it. Of course he said, yes it was my signature, yes he'd check to make sure that the sheet was the original. That he worked as the police handwriting specialist for fourteen years.\n\nMr. Chopin didn't ask him any questions but wanted to call in his own 'expert'.\n\n\"Please state your name and title please.\"\n\n\"Doctor David H. Porter, special instructor, FBI Training Academy, Quantico, Virginia.\"\n\n\"So if I get this right, you teach FBI specialists.\"\n\n\"Yes Sir, for about the last twenty years.\"\n\n\"Will you give us your opinion on this document?\"\n\n\"Actually I had a chance to inspect it last night at the police station.\"\n\n\"And what's your opinion of it?\"\n\n\"The document is the original but the signature is faked, not forged, faked.\"\n\n\"They're all one piece how can the document be good and the signature be faked.\"\n\n\"With all our Modern technology we're seeing a lot of these types of tricks and this one's pretty basic. In short this signature is not signed by a person; it's signed by a photo printer...\n\nThe noise in the audience raised several levels.\n\n\"It's actually fairly simple to do; all you need is a computer, a scanner, and a photo quality printer. You scan in the signature you want, and then scan in the document you're going to put it on. Put them both on screen of the computer; align the signature where you want it. Clear the original document from the image so all you have left is the signature in the correct place. Then put the actual original document in the paper tray of the printer, on the computer say print document. The printer will feed the original through as paper and the image will be printed on it, in the correct place.\" \n\n\"Are these types of tricks easy to spot?\"\n\n\"Most of these tricks using a printer are fairly easy to spot. Usually it's the ink that's the easiest to spot. Printer ink looks flat and monotone. Where ink signed by a pen can go from shiny to flat, change thickness several places all in the same signature. Thickness is usually one of the dead giveaways on printer ink. The second thing that was wrong on this document was alignment.\" \n\n\"Usually the place to sign something is provided a blank line. The signature is signed on that line forming the bottom of the letters on a flat plane. Most people who do this trick remove the original line from the image of the signature. It's 50-50 whether to remove the line or not. If you leave the line and the printer or paper isn't in perfect alignment you'll get a double line or a crossed line. But if the printer 'is' perfect you can use one line to align the other.\"\n\n\"If you remove the original line it's easier to put together and less obvious if they're misaligned a little, but it's also harder to get close. That's what happened here they removed the line but didn't get the base plane of the signature in line with the document it was being put on. The young man has a neat concise writing and all the letters sat on the line. When the signature was transferred the first letters were on the line, but as the signature went on they got further and further away from that line, it was easy to see.\"\n\n\"So in your opinion this is a falsified document. But the officer who testified before said that it was real, so is there a test that will prove that it's false or good?\"\n\n\"Yes of course, printer ink is a different chemical formula then pen ink. A simple chemical test will tell which it is. But in my opinion a simple inspection with a microscope will make it apparent.\"\n\n\"Well thank you Doctor Porter. Will you do the court one more service?\"\n\n\"Sure.\"\n\n\"Please read the name of the officer who said that he witnessed the young man actually signs this falsified document.\"\n\n\"Detective Benjamin Spalding.\"\n\nAND everyone in the audience started talking to everyone else.\n\n\"Mr. Chopin, who's your next witness?\"\n\n\"I think that we need to talk to Mary Steward.\"\n\nMary was brought in and swore the oath to the bailiff.\n\n\"Can you tell us your name and where you go to school?\"\n\n\"Mary Lee Steward and I go to Mountain Central high school.\"\n\n\"Did you witness an incident between Kelly Franks and Jimmy Hansen on the day Kelly was stabbed?\"\n\n\"Yes I did.\"\n\n\"Will you tell us about it?\"\n\n\"It was just before lunch time. Several of us were standing in the hallway getting ready to go into the lunchroom. Jimmy came up behind Kelly and said a nasty remark to her. She spun around and slapped his face as hard as she could.\"\n\n\"Did you hear what Jimmy said to her?\"\n\n\"Yes I did, I guess I have to say it here don't I? He...he said that he was going to fuck her ass until it bled. Then she hit him.\"\n\n\"What did Jimmy do?\"\n\n\"Hun, he fell on his butt. Then took off running with a couple of guys chasing him.\"\n\n\"What did Kelly do?\"\n\n\"She, Ellen and I went to the girl's restroom. She was crying and we tried to comfort her.\"\n\n\"Did you girls do anything after that?\"\n\n\"Yes, we both told Kelly that she should go report this to the principal. She said that she already had, several times. She said that he always just blew it off as a 'she said-he said' matter, and girls had to realize that sometime boys said crude things and that it was just words. But Ellen said that all three of us should go and report it because we all three heard what he said.\"\n\n\"So did you girls do that?\"\n\n\"Yes we did.\"\n\n\"What was the principal's response?\"\n\n\"Pretty much just what Kelly told us that it would be. He told us that girls just had to realize that boys could be vulgar and that was just part of being a boy at this age. Because he wasn't going to punish Kelly why should he punish Jimmy for his part in this misunderstanding?\"\n\n\"Whoa, wait a minute. Principal Lane was going to punish Kelly, why?\"\n\n\"He said that one student shouldn't strike another student, and if he had to punish Jimmy then he'd have to punish Kelly.\"\n\n\"Would it be safe to say that you girls felt intimidated then?\"\n\n\"Well we didn't want to get Kelly in any trouble.\"\n\n\"No further question your honor.\"\n\n\"Any questions Mr. Prosecutor Parks?\"\n\n\"Not at this time Your Honor.\"\n\n\"I think that I like to talk to Principal Lane. But he's at the school at the present time.\"\n\n\"We'll take a short recess while they call in Principal Lane, 30 minutes everyone please.\"\n\nWell Principal Lane took 45 minutes to get here, and Judge Williamson wasn't very happy. But he was here and sworn in.\n\n\"Please state your name and occupation for us.\"\n\n\"Jerome Paul Lane and I'm Principal of Mountain Central High School.\"\n\n\"Jerome Paul Lane, Jerome Paul Lane...that's interesting. Do you know a Stephanie Ann Lane?\"\n\n\"Yes she's my sisters' daughter.\"\n\n\"Do you remember an incident involving her and Steven Foster?\"\n\n\"Vaguely I think.\"\n\n\"Oh, come now Principal Lane surely you remember an incident where you expelled a boy for three days for calling Stephanie a cunt.\"\n\n\"Your Honor I object to this language, and this line of questioning. I don't see that it has any relevance to this Inquest.\"\n\n\"Yes, Mr. Parks I'm kind of wondering too, Mr. Chopin, is this wasting our time?\"\n\n\"No Your Honor, if I can continue for a few more minutes I hope we'll all see the relevance.\"\n\n\"A few minutes Mr. Chopin.\"\n\n\"Principal Lane, I bet you were pretty sick of that feud between Kelly Franks and Jimmy Hansen weren't you?\"\n\n\"Well high school kids especially girls always have a lot of drama around them.\"\n\n\"Hold that thought Principal Lane. I'm going to do a little record clean up for a moment. I know that Your Honor realizes this but I bet some of the rest of us are a little confused. You see the newspapers and everything say that Jimmy Hansen was killed, everyone's heard that right, and everyone's heard that Jimmy Hansen was killed. But all the police reports say that James Paul Lane was killed.\"\n\n\"But you know the truth of that, don't you Principal Jerome Paul Lane. You know who James Paul Lane aka Jimmy Hansen really is don't you?\"\n\n\"Yes he's my brother's son.\"\n\n\"Ah yes, your brother's son. Stephanie Lane who's your sisters' daughter complains about a boy once, and he's expelled for three days. Jerome Paul Lane do you remember how many times Kelly Franks complained of sexual harassment by James Paul Lane, to you, the Principal of Mountain Central high School?\"\n\n\"I don't really remember, but a few I suppose.\"\n\n\"Would it interest you to know that someone kept track?\"\n\n\"Well I said that high school girls always need a little drama around, so I guess that maybe some little girl put pencil to paper. But who's to say if it's right or wrong.\"\n\n\"Ah yes, marks on paper by high school girls, but what if it's not a high school girl. What if it's an adult woman, who's a member of the staff of Mountain Central High School? Furthermore what if she's the School Secretary who sits right outside your office every day, Mrs. Deanna Wilson.\" \n\n\"She watched and logged each of the 27 times that Kelly Franks came to the Principal of her school for help and was turned away. Because her stalker was your nephew. She started watching because just two weeks after the start of their freshman year, Sept. 18th, a young girl runs from your office crying. She feels the need to find out why, and then the need to help is some small way.\"\n\n\"27 times in the 36 months that a student goes to school in the four years of high school.\"\n\n\"Stephanie Lane came to her dear uncle once and got the boy a three day suspension. Kelly Franks comes 27 times and James Paul Lane gets nothing. Even for threatening anal rape, in front of witness. Then you threaten to have her disciplined for slapping a boy who said he was going to anally rape her. Jerome Paul Lane what was she supposed to do? Turn to James Paul Lane and say, 'thank you, but no thanks'?\"\n\n\"No further quest...no wait I do have one more thing. Dear Uncle Jerome how far is it from where Jimmy Hansen lived to the field where everything happened that night?\"\n\n\"I don't know maybe twenty miles.\"\n\n\"I checked its 26 miles to that field from Jimmy's home. It's less than one mile from Kelly's home. Do you think that if dear Uncle Jerome had told Jimmy that what he was doing was wrong and send him home. That he might not have come those 26 miles back to attack Kelly, and might be alive today. But don't answer that. Give your brother the answer to why his son's not alive today.\"\n\n\"No further questions Your Honor.\"\n\n\"Any questions Mr. Prosecutor Parks?\"\n\n\"No Your Honor.\"\n\n\"Your Honor, may I ask the court's indulgence for a request.\"\n\n\"Go ahead Mr. Chopin.\"\n\n\"I ask this only for the court's expediency. I would like to bring Kevin Palmer up on the stand, and have him give ONLY his accounting of happenings on that night, with neither the Prosecutor nor myself asking questions. Then call in the Police Evidence Examiner to tell us what the evidence of this case shows. Then the Police Medical examiner to relate his findings.\" \n\n\"I would like to do this say, side by side comparison of all the evidence in this case. One right after the other while they're all fresh in our minds. I believe this will expedite the further questions and the courts understanding of the facts.\"\n\n\"Do you have any objections Mr. Prosecutor?\"\n\n\"No Your Honor, but with the expectation that Mr. Palmer will be available for questions later?\"\n\n\"Oh yes Your Honor. If more questions are desired without a doubt Kevin will be happy to answer them.\"\n\n\"Very well Mr. Chopin have Mr. Palmer take the stand.\"\n\n\"Please state your full name and what you do.\"\n\n\"Kevin David Palmer and I am a student at Mountain Central High School.\"\n\n\"OK Kevin, just tell us of what you saw and happened to you that night.\"\n\n\"Well I was lying on my bed at home when a text came up on my phone. It was from my friend Kelly asking for help at farmer Ted's pond. The text had the first word 'help' in all capital letter, that means she's yelling out that word. The last word which was also 'help' was also all in capital letters, plus followed by several exclamation marks. I took that as if she meant it as screaming for help.\" \n\n\"I had a really bad feeling about this so I didn't get anything from my house, no jacket or shoes, nothing more than what I'd been wearing in bed. I ran out of the house, jumped the fence into the field. Farmer Ted's field then ran as fast as I could toward the pond. When I got close I hollered for Kelly but I didn't get an answer.\" \n\n\"So I started to circle the pond, running and trying to look everywhere all at the same time. I tripped and fell, as luck would have it. I found Kelly lying right in front of me. She wasn't moving and then I smelled all the blood. I saw the wound on her chest first, as I went to put pressure on it. I saw the one on her neck spurt up in the air. I knew that was very bad, so I went to cover that first and I got my handkerchief on it.\" \n\n\"It was just a few seconds later that I must have heard or felt something. Because I ducked and felt something like a club swing by my head then slam into the back of my shoulder. Then I guess my training took over and I struck back. The training I had said; low strike with hand, followed by high strike with hand, then mid strike with knee. Just a basic quick return attack, 1-2-3 almost an automatic reflex.\"\n\n\"The low strike struck him in the groin. As I was trying to stand, the high strike went too high and just bounced off the top of his head. On the mid strike with the knee, he was bending over and falling back too fast, and my knee struck his face. That dropped him and he just lay there. Then I smelled blood again, remembered Kelly and went to help her.\" \n\n\"I got my handkerchief back on her neck and started ripping my tee shirt up to put on her chest wound. When I saw her phone lying down in the grass. I picked it up and called 911 told them that they had to get here fast, gave them the address and dropped the phone. I stayed there and put pressure on Kelly's wounds until the EMT's got there. They got IV's put in Kelly's arms just before the police showed up. A whole bunch of drama, Officer Ridge found the knife, Kelly's phone, and the tree branch that had been the club. He took a bunch of pictures; the ambulance from Saint Clair got there and took Kelly. I went with Officer David Spalding and Officer Glen Ridge to the police station. Officer Ridge went to take the evidence to the crime lab; Officer Spalding took me to interrogation room 3...\"\n\n\"That's good Kevin; we'll get to some of the rest later. So ladies and gentlemen that's Kevin's account of what happened.\"\n\n\"Your Honor I think that we need to hear from Rodney Dunn next please. I believe that he's here Sir.\"\n\n\"Well Bailiff please bring him in.\"\n\n\"Please state your full name and what you do.\"\n\n\"Rodney Daniel Dunn, I'm the Evidence Supervisor for the police department.\"\n\n\"So you're the man who had to analyze these items?\"\n\n\"Yes Sir.\"\n\n\"Well let's go through each of these. This is the knife found at the scene. What can you tell us about it?\"\n\n\"That knife was checked for finger prints and type matched for blood, also for DNA match on the two blood types found.\"\n\n\"Two blood types? I was told that there was only one type found?\"\n\n\"Well yes, mostly that's right. Almost all the blood was type and DNA matched to Ms. Kelly Ann Franks. But as quite often happens with these types of knives that don't have a finger guard. The wielder's hand will slide down the handle from the force of the stab, thus cutting themselves. That small amount of blood found on the handle end of the blade was type and DNA matched to James Paul Lane.\"\n\n\"Anything else we should know about the knife?\"\n\n\"Yes Sir, we finger printed the knife and found that all the finger prints that were on the knife belonged to James Paul Lane. Furthermore we cleaned the knife up and put it in among other possessions of Mr. Lane's and had his Mother identify them when she came in to identify his body. She identified the knife as belonging to her son and as one he carried with him every day in a belt holster.\"\n\n\"Would it be safe to say that this is the knife that stabbed Kelly Franks, and that James Paul Lane was the only one who held it? Furthermore he cut himself with it as he stabbed Kelly.\"\n\n\"That would be a pretty safe assumption.\"\n\n\"OK, let's move to these cell phones, what do they have to do with this case?\"\n\n\"The smaller blue phone belongs to Kelly Ann Franks, the larger white phone belongs to Kevin David Palmer. The why of their concern to this case are two text messages and one phone call. The phone call is the 9:47pm 911 call that summoned Police and EMT's to the 1641 Rawlings lane address. The two texts are the one from the blue phone, Kelly's, to the white phone, Kevin's\"\n\n\"The text on both read; HELP farmer Ted's pond. HELP!! Both help words are capitalized and the second has two exclamation marks following it. The text on Kelly's phone was in the outbox; the text on Kevin's phone was in the inbox. Kelly's phone was picked up and put in an evidence bag at the scene. Kevin's phone was picked up and bagged by Officer Browning, and was taken from his bed sheets at the Palmer home.\"",
        "\"So Kelly's phone called Kevin's and a 911 call was made from Kelly's phone, at the correct time. Just like Kevin got through testifying a short time ago. Would that be a correct statement?\"\n\n\"Yes it would.\"\n\n\"So now the last piece of the puzzle. This piece of tree branch, pretty hefty chunk wouldn't you say?\"\n\n\"Yes, the piece weights 3.2lbs.\"\n\n\"WOW, that's about the same as a 48oz baseball bat like they use in the major leagues. What would happen if that branch struck a man's head with any kind of power behind it?\"\n\n\"I haven't had the need to test out the forces required, so I don't have a professional opinion. But it would probably crush his skull and kill him.\"\n\n\"Well, let's move on to what this evidence tells us, what are the facts of this piece?\"\n\n\"We tested both ends of the branch. One end has skin cells only on it. The other end has skin cells, blood, and cloth fibers on it.\"\n\n\"So the short of it is that one end someone held and the other end hit someone, correct?\"\n\n\"Yes, that's probably right.\"\n\n\"Well which is which?\"\n\n\"The end with skin cells only was DNA matched to James Paul Lane. The end with skin cells, blood, and cloth fibers, match up to Kevin David Palmer and the tee shirt he ripped up to use on Kelly Ann Franks.\"\n\n\"So there it is Jimmy Hansen held one end and the other end hit Kevin Palmer. Pretty much a dead on match to what Kevin's statement was.\"\n\n\"No further questions Your Honor.\"\n\n\"Prosecutor Parks any questions?\"\n\n\"Maybe just one Your Honor.\"\n\n\"Mr. Dunn this tree branch that Mr. Lane is said to have hit Mr. Palmer with, how hard would it have been for Mr. Palmer to hit himself with that branch.\"\n\n\"There was a picture taken of the location where Mr. Palmer was struck. I don't believe that it would be humanly possible to bend ones arms to hit that spot with any kind of power.\"\n\n\"Would the same be said of the knife too? That it wouldn't be possible for Mr. Palmer to say, put the knife in Mr. Lane's hand after he was dead?\"\n\n\"No I don't believe that it could be done like that by the physical evidence on the knife itself. The only, only, finger prints on the knife were Mr. Lanes, and there were a lot of them. Enough to show that he had used the knife several times. But the finger prints we identified as the ones he put there when he stabbed with it, could only be put on as a stabbing motion. They start on the handle at one place, and then they slide down toward the blade. The same type of action that it took to cut his hand.\" \n\n\"Also the lower ones pushed aside blood of Ms. Franks. But reading into your question, would it be possible to fake the evidence on these items. Sure, nothing is impossible. But as I'm reading the evidence on these pieces, 1+1+1=3 on the knife, 1+1+1=3 on the branch, 1+1+1=3 on the phones. 3+3+3=9 which equals the statement that Kevin Palmer gave. It's just too consistent all around. Are they faked, no I don't think so.\"\n\n\"Thank you very much Mr. Dunn, that answers my question.\"\n\n\"Mr. Chopin do you want another witness?\"\n\n\"Yes Your Honor, I like to talk to Dr. David Hemming, and he is here too.\"\n\n\"Please state your full name and what you do.\"\n\n\"David Jacob Hemming, Police Department's Chief Medical Examiner.\"\n\n\"So you did the Autopsy on James Paul Lane?\"\n\n\"Yes I did.\"\n\n\"What can you tell us about it?\"\n\n\"He was approximately seventeen year old male in good to excellent health. In overall very good physical condition except for the blow that killed him. Direct cause of death was a blunt force blow to the face and skull that resulted in damage directly to the brain from two causes, either would have killed him.\"\n\n\"In my opinion he was struck with a large semi round object of about four inches in diameter. The blow started at the area of the front teeth and proceeded upward breaking the upper jaw bone at the Intermaxillary Nasal Spine and splitting all of the Nasal Cartilage. Further causing an Ethmoid fracture that allowed a lot of bone and cartilage pieces to penetrate the Cruciform plate and enter the brain itself.\"\n\n\"Proceeding upward into the Glabella and again splitting the Metopic Surture line, and on into the bone of the Forehead Proper. The smaller bones of the Glabella and Metopic along with fragments of the Forehead Proper were forced again into the brain itself. Either of these penetrations into the brain would have caused the death of Mr. Lane.\" \n\n\"We also noticed a small cut on the heel of the right hand. This is consistent with the explanation that Mr. Dunn gave of the knife cutting its wielder. In this case the knife was held in a 'point down' fashion, and the blow was also in a downward angle. This caused the knife handle to be pushed backward in the hand and cut the large mass of the heel of the palm.\"\n\n\"You were in the courtroom when Kevin Palmer gave his statement of the conflict between Mr. Lane and himself. Does that explanation coincide with your findings?\"\n\n\"Yes, I suppose as one could say that they match right down to the letter.\"\n\n\"Here I'll try and preempt our good Prosecutor Parks, and ask what might be his question. The newspapers have made us all aware of Mr. Palmer's karate training. In your medical finding could this have been a deliberate blow intended to kill?\"\n\n\"That's a brave question for an attorney defending someone.\"\n\n\"Well I have faith in Kevin.\"\n\n\"In my opinion, and in this case it would 'be' an opinion regardless who answered the question. No, I don't believe that it was deliberate, and I'll explain my opinion with an analogy. A karate strike upward to the nose would be like a laser guided Yugo. The blow that killed Mr. Lane was like the head-on collision with a drunk driving a Mack truck.\"\n\n\"Well I would hardly consider a collision with a semi-truck as karate. Thank you Dr. Hemming, no further questions Your Honor.\"\n\n\"Prosecutor Parks any questions?\"\n\n\"No Your Honor, as Mr. Chopin said, he asked my question.\"\n\nMr. Parks said that with a light enough tone that it drew snickers and chuckles from the audience.\n\n\"Another witness Mr. Chopin?\"\n\n\"Yes Your Honor, I believe that we need to hear from one of the central figures in this case. I'd like to call in Detective Benjamin Spalding. I believe that he's being held at the police station as part of a conduct and IAD investigation.\"\n\n\"Well in that case, let's all take a one hour break, and hopefully the Bailiff will have him brought over by then.\"\n\nMr. Chopin and I decided to take a small walk outside while we waited. There's a small park just across the street, and that's where we went. It was all cool and green with foot paths that people walked and jogged on.\n\n\"Kevin try and hold on and not be too worried; this shouldn't go on for much longer. Then hopefully you'll be able to realize the bigger picture that's happening.\"\n\n\"That's OK Mr. Chopin, I'm not really too worried about this Inquest. At least not with you here, and I've known that there's something big going on 'behind the scenes'. My math has never been bad. But, 1+1 never has equaled 99 before.\"\n\n\"How's that?\"\n\n\"I'm seventeen and a high school student in what many would consider a small town. You're a highly respected big city attorney, personal friend to Federal Judges and politician's in several states. Who came to help a high school boy in an Inquest, not even a trial yet, for free?\"\n\n\"(Lol) Yeah, I can see where your math doesn't add up. But seriously Kevin there's a lot of things going on around this trial...er, no Inquest. That maybe I'll be able to let you know about, maybe even before we leave today.\n\n\"All rise for the honorable Judge Williamson.\"\n\n\"Please state your full name and what you do.\"\n\n\"Benjamin James Spalding and I am a Detective with the Police Department.\"\n\n\"Well I wonder if you're going to honor the oath you just made?\"\n\n\"Excuse me Sir, what did you say?\"\n\n\"Oh never mind Detective, just talking to myself. It says here in your file that your hearing is a little poor. So I'll try to remember to speak up. Here we have two pieces of evidence that are labeled four A and B, are you familiar with them?\"\n\n\"Yes I am, one is the signed statement that I took from Kevin Palmer the night of the killing. The other is the receipt for his clothes that we had to keep for evidence.\"\n\n\"Well there's a very minor trouble right there. Here's all the evidence that's been presented for this case and there's no clothes here, where are they?\"\n\n\"I don't know, but it's not unusual for that to happen. Sometimes evidence is taken and not judged important enough to make it to the trial.\"\n\n\"Ah, now I understand, his clothes were not important enough, and this is the receipt for them that both you and Kevin signed. This one is his signed statement that you witnessed him signing, that's what your signature here is for isn't it.\"\n\n\"Yeah, we both signed it.\"\n\n\"But the purpose of your signature is to verify that Mr. Palmer gave his statement. You went and typed it up on this sheet of paper. Then you took it back to Kevin witnessed him reading it for accuracy, then watched him physically sign this piece of paper. After Kevin had done all that, then you signed saying that you watched him do that, is that right Detective?\"\n\n\"Yeah that's right, he signed it.\"\n\n\"Well there are a couple of problems with that. You know that two arrest warrants were issued from this statement, or as some would call it, confession. But neither of those was allowed to be enforced. Can you tell us why that they weren't enforced?\"\n\n\"Something about some kind of injunction and dates. Then Judge Lane said something that pissed off other people.\"\n\n\"Here in my hand I have evidence labeled 4-c. It's an injunction signed by a federal judge stopping those two arrest warrants. I'll paraphrase this because it's too long to read out loud. The injunction stopped arrest warrants for Kevin David Palmer, due to questions about the authenticity of the document on which they're based. That's this statement that you watched Kevin Palmer sign, isn't it Detective Spalding?\"\n\n\"Yeah, that's what it means, but it's BS because I watched him sign that sheet.\"\n\n\"You might find it interesting that we had a gentleman in earlier his name was; Doctor David H. Porter PHD, special instructor, FBI Training Academy, Quantico, Virginia. His PHD is in Criminology, with his specialty is in documents. He's a full professor that teaches FBI agents that specialize in forgery and document fraud.\"\n\n\"He looked at evidence 4-A, the statement that you said you watched Kevin Palmer sign. He said that the statement and your signature are real, the signature that you say you watched Kevin Palmer sign is faked.\"\n\n\"That's BS they're all on the same sheet, how can it be faked?\"\n\n\"Well he told us how to do that, and told us that trick was done on this statement. Your signature is done in pen and ink by your own hand. Kevin's signature is done by photo-printer in inkjet ink. The way he told us that this could be done. All it takes is a computer, a scanner, and a photo-printer. I looked that the police station, every printer in there is a Cannon Laser Printer, except one. Yours is an Epson All-in one, Copier, scanner, photo-printer.\"\n\n\"That's BS, I didn't fake anything. Maybe someone switched them after I filed them.\"\n\n\"Boy, your pulling straw from the bale now. HA...I keep using that old saying. When I was young an old farmer told me that saying, said that it was the original for the modern one...grasping at straws. That's what you're doing now, but let's leave that for now and move on.\"\n\n\"How did you end up being the Detective on this case anyway?\"\n\n\"Just my luck I guess.\"\n\n\"Wasn't the duty Sergeant on that night Sergeant Brown? Because when one of my assistants talked to him he said that you came in and demanded that he give you the case, even before it came in to the station. Furthermore when I looked you were scheduled for day shift, but you came in at about ten at night, just to get this case. In fact you came in even before the duty Sergeant even knew there was going to be a case to assign. In fact you got here even before the victim made it to the hospital. Did you realize that Detective Spalding?\"\n\n\"Well aren't you just mister hot shit lawyer man. You're the one who's building this fairy tale and you don't need me to screw it up for you, so just keep rolling, smart ass.\"\n\n\"You know I think that I just might do that. You're a small town detective with a very narrow view. There are a lot of things going on that you don't know about. So yes De...tec..tive Spa...ld...ing I'll just keep rolling on as you put it.\"\n\n\"The rules for evidence disclosure in a trial and an Inquest are different. So I have a lot of things that haven't been entered yet. But they're all coded and registered with chain of custody authenticated. So De...tec..tive Spa...ld...Inga hang on to your hat.\"\n\n\"One NSA recorded cell phone call between Brothers David and Benjamin Spalding at 10:10pm, David telling Benjamin to 'get his ass down to the station and take control of this cluster fuck before someone else does.' Oops, sorry Your Honor I'll moderate the language. The return from Benjamin was that he'd get there if David didn't have the balls to take care of it in the field. It being one Kevin David Palmer. Here Your Honor one flash drive recording of that cell phone call, bagged, tagged and authenticated by NSA agents.\"\n\n\"How long was Kevin Palmer's interrogation Detective?\"\n\n\"I'm not sure, I never really kept track.\"\n\n\"You mean that you didn't follow police procedure and post audio-video personal when you had a person in the room?\"\n\n\"No, it was just supposed to be a friendly meeting to get his statement.\"\n\n\"Really Detective, you're trying to go with 'a friendly meeting'. Should I pull out that flash drive and play it for everyone. The conversation where you tell your brother to grow some balls and take care of it in the field. Between the two of you, Kevin wasn't even supposed to make it 'to' the station.\"\n\n\"But you actually did follow police procedure and set up audio-video people, you just didn't like the movie when it was done, so you deleted the file. At first we thought that you didn't record anything, until we found time cards for hours three officers charged to interrogation room 3 that night. So I had a technician find the deleted file on your computer, all TWENTY AND A HALF HOURS OF IT. Here Your Honor, one flash drive of Kevin David Palmer's nightmare in interrogation room number three.\"\n\n\"Are you even interested in how many times you violated Mr. Palmer's civil rights in that room Detective Spalding? In that 20.5 hour period Mr. Palmer asks for his lawyer 163 times you never even tried to get him one, in fact you didn't want one even near him.\" \n\n\"Any person under the age of eighteen is required to have a parent present while he's under questioning. 97 times he ask for his parents, you never had any intention of getting them. You fed him three and a half six-packs of soda, and then refused him any use of even basic sanitation. It got to the point that he urinated on the floor.\"\n\n\"But you didn't even stop there did you? No, No, I worded that wrong, the worst abuse you heaped on Kevin Palmer started the first minute he got to the police station. Mental abuse so heinous that this young man might have horrible nightmares for the rest of his life. You left a seventeen year old boy sitting in the drying, cracking, peeling, blood of his dear friend, for twenty hours you left him sit in blood.\"\n\n\"Then you just got stupid silly, you left Kevin half naked, just in a pair of jeans covered in dried blood. Then turned the room air conditioner to max cool, just to add a little more points to the tally of physical abuse.\"\n\n\"At hour number fifteen you were given lab reports on the evidence in this case. But you totally disregarded it didn't you. You had the evidence report in your hand that told you that the deceased had finger prints all over the knife that stabbed the girl. By that you knew that he tried to murder her. But he'd been stopped and had gotten what most people would have said were his just deserts.\" \n\n\"But you didn't think that way did you? No you went after what most people would consider the hero of this little drama. You wanted to hang him for stopping a murder rape. Your partner Bert Samuels, when he saw those reports and what you were doing, he just walked off and left didn't he? Couldn't stomach it anymore and just left you in your own mess.\"\n\n\"Why, that's the question that must be on everyone's mind. Well one answer's your father, the ex chief of police. Papa Spalding as I'm told he's called. Here Your Honor, one wire tap recorded telephone conversation between father and son time dated 10:14pm, telling Benjamin Spalding 'to do whatever is necessary to get either a confession or a signature and a falsified confession'. Then to get, well several foul names meaning Kevin Palmer, to Judge Thorn who had paper work ready for a guilty verdict, stamped and off to Highgate prison before anyone else knew. Once in prison there'd be nothing to worry about, because he'd be taken care of in there.\"\n\n\"Again though the question is why, why go to all this trouble because of one seventeen year old boy. Well most people are looking at the wrong boy. It's James Paul Lane aka Jimmy Hansen that we need to be looking at.\" \n\n\"Jolene Hansen the woman who shot up the steps to the police station. Wounding two police officers and almost hitting Mr. Palmer here. Everyone knows that she's Jimmy Hansen's mother. Her marriage to David Lee Hansen is her third marriage isn't it Detective Spalding, and if rumor is to be believed started because he was about her 50th affair. Her second husband was a Lane, one Jeremy Edward Lane.\"\n\n\"But her first husband was a Lane too. One James Robert Lane who divorced her because he caught her messing around with his brother, Jeremy. The thing about James Robert Lane is that he had a son, one James Paul Lane, aka Jimmy Hansen. One of my assistants dug up a marriage license, James Robert Lane married Jolene Marie Spalding. Just who is Jolene Spalding, Detective Spalding?\"\n\n\"She's my sister.\"\n\n\"Ah yes, Papa Spalding's children, there was four born wasn't there. David is the oldest, Jolene next, then you, and last was Terrance Lee Spalding, who died when he was eight years old. It was from a fall down a set of stairs in the family home. Papa Spalding has a hell of a temper doesn't he?\"\n\n\"Jolene being the only daughter, and her children being one boy and three girls. David Spalding's fifteen year marriage birthing no children, you yourself having two teenage daughters. James Paul Lane aka Jimmy Hansen was Papa Spalding's only grandson, and likely to stay that way. We all know how the older generations view male children over females.\"\n\n\"But let's get back to this case. Jolene tried to kill Kevin Palmer on the steps of the police station. Her first shot was at Mr. Palmer, her second hit Chief Jansen as he stepped in front of Mr. Palmer. Her third was shot at Officer Glen Ridge who was coming to aid them both. Both Officers shot Jolene Hansen, before she could get off a fourth shot, killing her.\"\n\n\"But an interesting thing was heard by several witnesses and was found on the video tape being shot that day. It came through in audio only as the camera was pointed at the people on the steps, not into the crowd where Jolene was waiting.\"\n\n\"The interesting comment, 'B...you promised me. You promised that he'd go to prison for killing my Jimmy. You promised'. That is the exact quote she said, 'B...you promised'. That was your sister's nickname for her little brother, wasn't it Detective Spalding. It's common knowledge to anyone who was around your family. Big sister always telling little brother B what to do.\"\n\n\"You promised you big sister that her son's killer would go to prison. Even before you questioned Mr. Palmer, even before any evidence was processed. Even before any facts about the incident were known. Here Your Honor one flash drive containing telephone call recorded at 10:17pm from Detective Spalding to Jolene Hansen telling her of her son's death and making that promise to her, that her son's killer would go to prison. That Papa would see to it that Jimmy's killer was taken care of in there. At 10:48pm Kevin David Palmer arrived at the Police Station.\"",
        "\"Failing to get a confession or a signature after 20.5 hours. Mr. and Mrs. Palmer arrive with a lawyer to force the Police to release their son. Detective Spalding realizes that he'll have to release Kevin Palmer. What's the first thing that he does?\" \n\n\"Calls his brother, Here Your Honor on flash drive recording of a 7:34pm cell phone call from Benjamin Spalding to his brother David Spalding. Telling David to get an unmarked gun to Jolene and have her get to the Police Station and she'll have her shot at her son's killer. A distraught mother will get a hell of a lot lighter sentence than either of them would. But she had to wait until they let him go before she tries shooting him.\"\n\n\"This all started with a 911 call at 9:47pm the day before, that draws Medical and Police responder's to a field where a girl's been stabbed and possibly dying. Her attacker was killed in the fight to save the girl and her rescuer. By 10:17pm the Spalding's have Kevin David Palmer; tried, convicted, sentenced, sent to prison, only to be murdered in that prison. Seventeen minutes, start to finish, convicted and execution planned. 1+1=2, James Paul Lane aka Jimmy Hansen is killed, his killer will die. No reasons, no laws, nothing considered. I thin...k...\"\n\nI was sitting, listening to Mr. Chopin rip Detective Spalding a new one. When his cell phone started vibrating and shaking like a Mexican jumping bean on the table top. We'd talked about it before, because he was expecting this call. So I banged my knuckles on the table hard and he stopped in mid word.\n\n\"Your Honor, I have an incoming call that is imperative to this Inquest. I know that it's 'highly irregular' to allow an incoming cell phone call, but I really need to take this.\"\n\nThen he looked at me and motioned for me to answer the call and tell them to wait for a minute.\n\n\"Prosecutor Parks?\"\n\n\"No objections. In fact Your Honor if I might have the court's indulgence for some time. I'd like to address the court, if you please.\"\n\n\"Proceed Prosecutor Parks.\"\n\n\"That title is not what my supervisor at the Department of Justice indicated my duties here were to be. This is not a trial, even if Mr. Palmer came in here with the proverbial 'smoking gun in hand and confessed. The most that could legally happen here today would be for us to ask that he be arrested by Police and remanded over for trial. Or we could release him and notify him that a trial would be called. The last option is his release without prejudice.\" \n\n\"This inquest was presented to me as a fact finding assignment. I've tried to do that. The Department Of Justice was asked to investigate allegations by a Police Detective that a murder was being overlooked. So this Inquest was set up by the Department. That Detective was Detective Spalding. In listening to the evidence presented here today. I find that to not be the case, in fact the case might be of a Police Detective using the power of his position to have the Department of Justice act as his personal avenger.\"\n\n\"That is a gross misuse of the Department of Justice and of his position as a Police Detective. With the evidence presented here today I have serious doubts as to why he even tried. In my view as the representative of the Department of Justice this young man should have never had to even go to the Police Station. A good senior officer on site would've sent him home for a shower and a good night's sleep. Then asked if he'd come to the station tomorrow with his parents, and a lawyer if they so chose, to give a statement.\"\n\n\"As the legal Representative of the Department of Justice in this matter of the Inquest into the conduct of Kevin David Palmer be ceased and ruled to be without reason or merit.\" \n\n\"As the presiding Judge in this matter, I so rule. This Inquest is closed.\"\n\n\"Wait a minute please Your Honor, I'd like to approach the bench to request a favor.\"\n\n\"Permission granted come ahead Mr. Chopin.\"\n\nI could see all three of them with their heads together. It looked like Mr. Chopin was doing most of the talking. Judge and Mr. Parks seemed shocked for a couple of minutes. But soon all heads were nodding and smiles all around. Then Mr. Chopin went up to Curtis and his camera crew and talked to them, heads nodding again and they started moving the camera to the center aisle looking at the Judges bench. When everything was ready Mr. Chopin got in front of the camera.\n\n\"Good afternoon everyone, to those of you here in the court room and those at home, thanks for your attention. For almost a year now this town, valley, and county have been under an investigation by a joint task force of combined; FBI, DEA, ATF, and NSA Officers and agents. This task force was charged with investigating suspected violations of Federal RICCO statutes. Statutes against organized crime and racketeering.\" \n\n\"For the period of almost a decade the FBI has suspected an organized group operating a clearing house for the shipment and dispersal of several types of illegal goods and materials. Those materials include several types of drug traffic, shipment of both illegal and stolen weapons and guns. Some of that ended up in Middle Eastern conflicts and terrorist activities. Also they provided transportation in human trafficking. In short they were the UPS of the criminal organizations in this area of the world. That group appeared to be operating in and around this immediate area.\"\n\nLooking away from Mr. Chopin for a few seconds. Brought my eyes onto Detective Spalding. He had looked so big in interrogation room 3, now a small and beaten man watching as the story of his life fell into a thousand pieces. I suppose that part of his resignation had to do with the large agent parked at his elbow.\n\n\"It has only been in the last year that the FBI and others of the task force have been able to get agents inside both the organization and the Police Department. In years past it was determined that the Police had to be helping the group. Several agents were lost before it was realized that the Police had to be notifying the group of those brave agents, and we honor their memory.\"\n\n\"Getting an agent inside the Police Department made a lot of difference and opened up a lot of opportunities, getting two agents inside the group itself opened the whole case up. As a result today has this task force entering its final phase.\"\n\n\"At present 73 individuals have been placed under arrest. 8 have died resisting that arrest, among those killed of concern in today's inquest are Papa Spalding and Officer David Spalding. One DEA agent has been killed in the line of duty. Principal Lane has been arrested too, for his part in the group's activities.\"\n\n\"The task force commander has tasked me with a special task. Mr. Parks had it right when he stated that this whole affair and Inquest over Kevin Palmer should never have happen. We could never have gotten people onto that field while Kevin and the EMT's and Police were there. But other parts of this ordeal that Kevin went through could have been stopped.\"\n\n\"Agents tried but couldn't find Jolene that night. They did find Edward Hansen up a tree with a high power rifle watching the Palmer home. Fortunately he was taken without a struggle.\" \n\n\"But Task Force Commander Special Agent Gerald Talon realized right away just how much and how quickly this incident overcame caution and common sense within the group of criminals. It quickly became a very emotional issue, and the Commander realized that we could capitalize on that. At that time I was brought in to help Kevin and his parents control the attempts that the Spalding's were making through the court and justice system. Throughout today's Inquest I've been able to present recording of a lot of calls. Those calls were all gathered as part of the task forces' information gathering system and all done through Federal warrants.\n\n\"Commander Talon has estimated that because of letting this farce of an Inquest continue he's arrested 17 more criminal here in this county and another 12 outside. Some of the ones from outside were a very big bonus and very high up in several criminal organizations.\"\n\n\"But my task from Commander Talon today is to you Kevin, and its two fold. The first is a very formal and public apology to you for any trauma that you've gone through because of his decision to allow this inquest and all that led up to it to continue. He very sincerely wishes that you'd never have had to go through that. BUT he also said that even though you were under almost constant surveillance, you conducted yourself with nothing but honor, intelligence, and compassion.\"\n\n\"Through that constant surveillance he knows that your greatest worry now is your schooling, graduation, university and the scholarship that you have earned there. He wants me to reassure you that it's being worked on by none other than the Governor. Furthermore your humble servant myself will stay and help you through those many civil suit we filed.\"\n\nSo ended the punishment phase of my good deed. Would I do it all over again? You bet your damn sweet bippy I would, in a half a heartbeat I'd be running.\n\nIt's a dark and stormy night, it's not raining yet. But it will be, I can smell it, feel it on my skin. Feel the static charge of it in the air. I'm here again at farmer Ted's ten acre field, by the pond, and standing on the spot where it all went down five years ago.\n\nI came here after I got back in town, came to this spot. I needed to see if I'd gotten rid of all my demons from that night. Mr. Chopin had called it, he said that I'd have some nightmares, I did. Dreams of rolling or lying in blood trying to move, trying to help, but I can't. Jerking awake to the taste of vomit in my mouth and the crunch of Jimmy's face on my knee, the smell of shit, piss, and blood in my nose. \n\nIt's just a spot in the grass on a shitty night now. No blood in the grass to mark the spot, no tire tracks through the grass, no torn paper from the EMT's. Just a shitty night, quiet grass, and the smell of rain, but no demons. \n\nBut I'll be out of it soon, getting together with a bunch of my buds. I'm going to a party and drink some beer, and hopefully not get too shit faced. Probably a couple of strippers will drop by. That's what usually happens at a bachelor party, yeah it's mine.\n\nI'm marrying Kelly Ann Franks tomorrow."
    ],
    "authorname": "JayDiver",
    "tags": [
        "non-erotic",
        "no sex",
        "drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/a-dark-and-stormy-night-12"
}