{
    "title": "Surefoot 19: Star Crossed",
    "pages": [
        "\"USS Surefoot-A, Captain's Log, Stardate 45300.18, Captain Esek Hrelle, Commanding: We are on approach to a sector of the Federation-Cardassian border bridged by the Arkady Cluster, a quasar-like phenomenon of collapsed stars listed as a Class-6 navigational hazard due to the Murasaki Effect it produces. \n\nWe are here ostensibly to refuel and refit the squadron of Cyclone-class border patrol vessels stationed in this sector. However, our first rendezvous, with the USS Tempest, has a disturbing secondary mission involving its commanding officer, Captain Thomas Acres. And it's one mission I'm not looking forward to fulfilling...\" \n\nAcross the table from him, Kami barely stopped tucking into her Tarkalian bacon to mutter, \"Why not?\" \n\nHrelle set aside his Log Book and picked up his mug again, blowing the steam off the top of the contents. \"You know why. You always know why.\" \n\nHis wife smiled, picking bits of breakfast from between her teeth with the claw on her forefinger. \"And I always prompt others to voice their own feelings.\" \n\nHe sipped at his tea, delaying the inevitable response. \"This is a fellow starship captain. I don't have the right to judge him.\" \n\n\"You're the Strategic Operations Officer for this sector,\" she reminded him. \"Appointed by Admiral Tattok; I'm pretty sure that literally gives you the right. And you're not judging him, you're simply investigating the reports that have been raised about him.\" \n\nHrelle harrumphed. \"Then I guess I mean that I don't have the temperament for it. It's distasteful.\" \n\n\"Why?\" \n\nHe looked over at her, reaching across for some bacon - until she growled at him, and he withdrew his hand. \"You know I've been on the receiving end of such Starfleet inquisitions, when I was accused of collusion with the Bel-Zon, and badgered by the Barstool Admirals: those smug, opinionated little martinets who haven't done anything themselves, but were still strutting around, yelling, browbeating me. I don't want to be that way.\" \n\n\"So who says you have to be? Maybe what you personally went through makes you the ideal person to do this? You won't be the one to strut about and yell. You'll treat him fairly.\" \n\nHe considered her words, making a sound of concession. \"You might be be right.\" \n\n\"Might be?\" \n\nThen Kami's combadge chirped. \"Counselor, this is Dr Ling, would you please come to Sickbay? Mr Ostrow has just been admitted.\" \n\nHrelle tensed and sat up; they had only just appointed Jonas into the ad hoc role of Strategic Engineering Officer; had he been injured while performing something related to his new duties? \"Doctor, this is the Captain. What's happened? Was there an accident in Engineering?\" \n\nHe noticed the smirk on Kami's face, but focused on the doctor's reply. \"No, Sir, this was more... recreational than industrial.\" \n\n\"I'll fill him in on the rest, Juliet,\" Kami assured her loudly. \"And I'll be right there. Counselor Hrelle out.\" She popped the last bit of bacon into her mouth, swallowed and explained, \"Jonas has been liplocking with Neraxis for days now, ignoring all the warnings about taking precautions against her biochemistry. Now I get to have 'The Talk' with him. Lucky me.\" She smiled. \"Unless you want to swap jobs? I'll investigate Captain Acres, you talk about the effect of Bolian bodily fluids on human physiology.\" \n\nJust then, First Officer Commander T'Varik's calm Vulcan voice interrupted. \"Captain, we are on approach to the Tempest. We will soon be preparing for Airlock Coupling Procedures.\" \n\n\"On my way. Hrelle out.\" He shrugged, rising. \"Better stick with what I know.\" But then he seemed to reconsider. \"Still, it might be good practice for when Misha needs The Talk from me.\" \n\n\"He won't need that for many years to come.\" She smiled. \"On the other hand, he is your son, he'll be very precocious in that area.\" \n\n* \n\nDeck 4, Sickbay Suite: \n\nJonas thought he should have felt immediately better after Dr Ling administered anaprovaline for his acute nausea and headache attack. But then came the reactions from the others in the room: annoyance from the doctor herself, smirking derision from the nurses present, and an embarrassing level of enthusiastic support from the Klingon surgeon Dr Kline, who likened what Jonas had undergone to some test of bravery akin to taking the business end of a painstick. \n\nAnd then the Counselor walked in, her pregnant state adding a slight waddle to her normally graceful gait. She smiled as he slipped off the biobed and stood up, glancing around at the other attendees in the room before indicating the adjacent Consultation Office, which had a door and privacy walls. \n\nFor the first time Jonas felt some relief that he would be spared further embarrassment, and gratefully followed, waiting for the door to slide shut on the rest of the Suite before announcing, \"I'm sorry you had to be called in on this, Counselor-\" \n\n\"Sit, Stud.\" She moved to the office's replicator unit, requesting, \"Prophylactic Kit Model 4.\" \n\nJonas' jaw dropped, and he felt his face redden, always looking far worse with his mop of silver-grey hair. \"Counselor, I don't need this-\" \n\nAs a small rectangular kit appeared on the replicator pad, she lifted it up and sat herself down behind the desk. \"This is the third incident where you've ignored medical advice about taking necessary precautions when engaged in intimate contact with someone of Bolian biochemistry, so I tend to disagree.\" \n\n\"It's not that I've ignored it!\" he insisted, growing hot under his uniform. \"It's just...\" His words trailed away as he could still feel Neraxis' lips on his that morning, following another boxing lesson promised him. They had been growing closer and closer over the past couple of weeks, and though they had yet to rush into actual sex, things had been... heating up. He never would have expected it when he first met her, almost two years ago, that they would end up romantically involved. He sat down. \"It's not very... spontaneous... to have to stop kissing someone you love in order to take an analgesic.\" \n\nShe nodded as she opened the kit, removing its contents and lining them up on the desk, and enjoying his reaction as he saw each item. \"I can imagine. But it's even less spontaneous knowing that you're going to retch up your last meal afterwards - and less romantic, for both parties, believe me. You can't keep doing this to yourself, Jonas. It can be interpreted as reckless behaviour.\" \n\nShe unwrapped a small square packet. \"Now, this is a standard condom, elastic in structure, in order to fit over most humanoid penises, while also being thin enough to not dull the pleasurable sensations you'll experience during intercourse or when your partner performs oral sex on you-\" \n\nHe held up a hand. \"Counselor, this really isn't necessary, we haven't gone that far!\" \n\n\"Not yet. But if I know cubs your age, that will change. And if you think the effects of swallowing some of Neraxis' saliva during kissing are bad, I can assure you that the effects of Bolian bodily fluids on an unsheathed human penis will be much more irritating - and will provoke a lot more amusement from the medical staff when you're being treated afterwards.\" \n\nHe leaned back, finding something, anything else to look at besides the Counselor's amused visage. So much had been happening in his life lately, with the promotion he accepted - what was he thinking? He was going to mess up big time! - to this with Neraxis. \n\nSuddenly he confessed, \"I don't- I don't know if we're doing the right thing. I have all this pressure with the new job as it is. This would be such a change in our relationship.\" Now he looked at her. \"What if we ruin it?\" \n\nKami regarded him back sympathetically. \"That's a chance that any two people can face.\" \n\n\"But has Neraxis said anything to you about us? Does she have doubts, questions? Is there anything she'd like me to do? Not do?\" \n\n\"Maybe those are things you should be discussing with her?\" She began unrolling the condom down over her extended fore- and middle finger. \"These kits contain a number of condoms and oral shields, required not just for intercourse but for oral sex, but they're all made of parasene, a very light but durable substance that shouldn't puncture or degrade even with the most vigorous use-\" At his expression she teased, \"Would you rather just whip it out so can I demonstrate how it fits on the real thing?\" \n\n\"NO!\" He stared at the rest of the equipment with apprehension. \"This all seems so... complicated... compared with-\" \n\n\"Compared with just straightforward human-on-human intercourse? Well, it is, especially with birth control implants, Nanite therapies and other modern medical miracles at our disposal. But a few centuries ago, a condom was absolutely essential, to prevent conception and disease - some of them incurable, even fatal. Responsible males had no problem with employing them. And fitting them on could even be part of the loveplay.\" \n\nHe stared at the kit, his thoughts a jumble. \n\nShe set down the condom, reached out and patted his hand. \"Every relationship, whether or not there's a sexual element involved, requires some effort from both parties to make it work, whether it's using a prophylactic kit, or simply acknowledging each other's individual needs. The key to success is believing that the rewards of the relationship outweigh the effort required to make it work for both parties.\" \n\nAs he met her gaze now, she noted, \"For all the bravado and bluster she shows to the Universe, Neraxis is inwardly very shy, insecure and vulnerable. And she's never been physically intimate with anyone before; that she would be willing to let you be her first means a great deal - at least, to her, and I bet to you as well. Respect that, and her.\" She indicated the kit. \"This? This is a small price to pay, believe me.\" \n\nThen from the corner of her eye, she saw the Vulcan cadet, Falok, enter the Sickbay Suite, obviously looking for Cadet Eydiir, and noted cryptically, \"If it helps, yours is not the only interspecies relationship onboard that has hurdles to overcome. Would you excuse me a moment?\" \n\nAs the young man nodded, she rose and stepped outside, intercepting Falok and intentionally getting closer than usual to put him off. \"Are you finally going to tell her?\" \n\nFalok drew up, conscious of Kami's pregnant state but trying not to stare. \"Counselor, you appear piqued. Perhaps you should have Dr Ling examine you?\" \n\nShe grinned. \"Are you really trying to deflect me? Me? That's adorable!\" \n\nFalok nearly frowned. \"You have a singular persistence, Counselor. Yes, I have come to speak with Eydiir.\" \n\nShe nodded. It had been an ongoing issue that was long overdue for a resolution, ever since the incident with the anaphasic being calling itself Baron Samedi, when Falok mindmelded with Eydiir. \n\nWhen Commander T'Varik learned of it, she had allegedly been as harsh to Falok as a Vulcan could be, but stopped short of expelling him from the Surefoot and the Academy, at Kami's insistence. It had been an accidental invasion of Eydiir's mind, after all, brought on by the undeniable attraction between the two cadets (or at least as undeniable as it can be when dealing with a logical race that suppresses its emotions and a warrior race that practices stoicism). \n\nBut it was agreed that, though Eydiir had no memory of the assault from Samedi, or the mindmeld, she had a right to know about it - and that Falok should be the one to tell her. It was logical. \n\nBut Falok hadn't exactly been brisk about doing it, to the point where Kami was considering brokering the meeting between the two cadets. \"Well, I'm pleased to see you're finally taking care of business. But do you think this is the time and place to bring up the subject?\" \n\n\"Yes, Counselor. Our shifts are only now coinciding with our rendezvous with the Tempest.\" \n\n\"Uh huh. And is there anything you'd like to ask about how to break it to her?\" \n\n\"Thank you, Counselor, but that will not be necessary. I know Eydiir well enough to accurately gauge the best method to deliver the news.\" \n\n\"Really?\" \n\n\"Yes, really.\" \n\nFalok seemed resolved at that. Kami sensed that there was something more that had yet to be addressed on the subject, but chose not to pursue it further - suspecting that this would not be the last she'd hear of it. \"Well... good luck, anyway.\" \n\n\"Vulcans do not require luck, Counselor.\" \n\nShe raised an eyebrow in imitation of a Vulcan. \"Really?\" \n\n* \n\n\"Eydiir? I trust you are well, and that I am not disturbing you overly?\" \n\nThe tall, walnut-skinned Capellan woman looked up from her medical monitor and offered a slight smile and a brightening of her expression. \"It is pleasing to see you, Falok. Yes, I am fit. I am currently collating the medical records of the crew of the Tempest for Doctors Ling and Kline to prioritise their work. Do you wish to assist?\" \n\n\"Thank you, no, I am here to inform you that when you were attacked by Baron Samedi and rendered comatose, and I assisted you to the biobed, I accidentally initiated a mindmeld that gave me access to your memories.\" \n\nShe froze in place, staring up at him. \"What?\" \n\nHe folded his hands behind him. \"Yes, it was only momentary.\" \n\nShe rose to her feet, pushing her chair away as she glared at him, her voice growing cold. \"How could you do that to me?\" \n\nFalok took a microsecond to adjust to her unexpected reaction. \"As I stated, it was accidental. I informed Commander T'Varik and Counselor Hrelle of the incident, and was cleared of any disciplinary breach of-\" \n\n\"What did you see?\" \n\n\"It is not relevant-\" \n\n\"I will be the judge of that.\" \n\nHe adjusted his stance once again as he replied, \"Memories of yourself with your brother, your grief over his death, your suicide attempt, your arrival at Starfleet Academy, your fight with the Ferasans, a moment of sexual gratification you had in the shower-\" \n\n\"ENOUGH!\" \n\nHe stepped back, aware of people in the adjacent rooms of the Sickbay Suite looking in their direction. \"I do not understand, you asked to-\" \n\n\"Leave! I am busy!\" \n\n\"Eydiir-\" \n\n\"DO NOT SPEAK TO ME!\" \n\nAfter a second, he nodded in acquiescence and departed, glancing around for Kami, but not finding her. \n\n* \n\nSasha Hrelle had promised herself that she would control her temper with her fellow Cadet Squad Leaders - actually, with just one, Delta Squad's Ledit 137. The purple-haired hermaphroditic Hermat had been seemingly determined to wind her up like an old-fashioned clock from the very first day s/he arrived. Officious, ambitious, arrogant, insulting, manipulative, opinionated... Hir actions had made Sasha more than once wonder if any of the 136 previous Ledits that hir numerical surname implied were better than this one, and if so, could they trade in one of those for the putz they were currently stuck with. \n\nAnd yet recently Ledit's attitude had appeared to improve: s/he made small talk, offers of assistance to others, volunteering hir squad for additional duties. Sasha suspected it was all part of Ledit's ultimate plan to be a starship captain by the age of twenty (Sasha supposed she couldn't blame hir, since Hermats only lived to age forty, and Ledit was now ten, in Standard years). But still, others seemed to be accepting the improvement. \n\nAnd today's meeting was progressing without incident. Perhaps it was the busy nature of the duties ahead of them, now that they were on their first tendering mission. Or maybe it was that the meeting was being managed by the earnest and enthusiastic Lt Neheru, the Kelpien Chief Operations Officer and Second Officer - who brought coffee and donuts with him. \n\nBut then Neheru began wrapping up the meeting. \"And I am pleased to confirm that Cadet Jonas Ostrow has accepted the role of Strategic Operations Officer - during which he will hold the ad hoc rank of Lieutenant.\" He smiled with his lipless mouth, his sunken apricot-coloured face brightening with his green eyes. \"So if I were you, I'd keep an eye on his collar to see if he's wearing his officer's pips, and remember that technically at such times he is your superior officer. Does anyone have anything to add before we conclude the meeting?\" \n\n\"I do,\" Ledit declared, folding hir sinewy hands together on the table. \"Regarding Cadet Ostrow's promotion: has any provision been made for a replacement for him should he prove unsuitable for the role?\" \n\nSasha, sitting across from hir, frowned. \"What in the Seven Hells are you talking about? Of course he's suitable.\" \n\n\"I have not known the young man for long,\" Neheru admitted. \"But he certainly appears quite talented.\" \n\n\"He is, Lieutenant,\" Giles Arrington assured him, focusing on Ledit now. \"Jonas uncovered a hidden hold full of kidnapped Malurian children, he saved the crew of the Rising Star, he developed a means of tracking pirates in a dark matter nebula, he quickened the refitting time on the Limaari better than anyone else... and not that long ago he saved Sasha's life when she was stuck to a Nekrosi mine! How much more qualified does he have to be?\" \n\n\"Indeed,\" Falok agreed, appearing to shake himself out of whatever funk he seemed to have been in since before the meeting. \"My own Engineering Specialist Nancy Yeager has been quite vocal in her envy of both his experience and his expertise. I have learned that this is how she expresses her regard.\" \n\n\"I am not questioning Mr Ostrow's technical skills,\" the Hermat confirmed. \"Which are obviously considerable, but rather his psychological state. I have been informed that, before the arrival of Delta and Epsilon Squads to this crew, he had a history of self-harm... including an incident where an attempt endangered the life of a fellow cadet.\" \n\nSasha stiffened at the reference. Of course she remembered it; the attack from the rogue telepath Aikens had accentuated Jonas' insecurities and self-doubt about his place in Starfleet despite his obvious talents, to the point where he had become suicidal. It had been a terrible time, but with the help of the Counselor and his friends, Jonas had stepped back from the proverbial edge, and had grown in leaps and bounds in confidence since then. \n\nThat Ledit would bring that up now raised her hackles. \"That's none of your damn business, Ledit!\" \n\nHer fellow squad leader looked... hurt? \"As I said, I'm only thinking of the well-being of a fellow crewmember. This new role carries with it a great amount of responsibility; should it prove too much for him, a replacement might be necessary.\" S/He looked to Neheru now. \"Which is why I would nominate Delta Squad's own Den Guforg, as the best candidate. She's a Tellarite, traditionally renowned for their engineering skills-\" \n\n\"Didn't she get us all trapped in the Rec Hall during the Halloween party?\" Neheru remembered. \n\n\"A minor setback in an otherwise perfect record. With her in the role-\" \n\n\"As her squad leader you could end up getting lots of interesting assignments to boost your own career?\" Giles prompted. \n\n\"I'm sorry that you're so cynical, Mr Arrington,\" Ledit offered in reply. \"He may be in Ms Hrelle's squad, but I thought Mr Ostrow was a friend of yours as well?\" \n\n\"Listen, bubulah,\" Sasha cut in finally, feeling her face boil as she pointed a finger at him. \"Stop pretending like you care about anyone but yourself! This is all about you! Always about you!\" \n\nLedit looked appalled now, and turned to Neheru. \"Lieutenant, if my concern for Mr Ostrow is inappropriate, please accept my apologies, and I will withdraw it.\" \n\nNeheru's gaze was fixed on Sasha; the tiny threat tendrils on the back of his neck were fluttering. \"That will not be necessary, Ensign Ledit. Having an alternate Strategic Engineering Officer on hand in case Mr Ostrow is unavailable, for whatever reason, is a suggestion I will bring up with the senior officers. And I am surprised at your undeserved hostility towards your fellow squad leader, Ensign Hrelle. Perhaps you should apologise?\" ",
        "Sasha stiffened, and a part of her almost refused, despite knowing the consequences. But finally she steeled herself, looked to Ledit, swallowed and announced, \"I'm sorry.\" \n\n\"I understand,\" Ledit replied, nodding genially. \n\nS/He seemed sincere. \n\nBut Sasha remained on edge. \n\nThen the voice of T'Varik broke in over the intercom. \"Lieutenant Neheru, your meeting with the Squad Leaders should have ended 1.86 minutes ago. You are all required to take your assigned posts immediately.\" \n\nNeheru rose, towering over all of them, his threat tendrils only just beginning to recede. \"Yes, well, perhaps we can forget this little disagreement and get to work? You all know what you're doing, but should anything more be needed, please contact me.\" \n\nLedit nodded to Neheru and started for the door. Sasha almost followed, but Giles tightened his hold on her arm. \"Maybe... you should count to ten before following hir?\" \n\n\"Twenty might be more apropos,\" Neheru suggested. \n\n* \n\nThe crews of the Surefoot and the Tempest worked together as the docking ports opened, the former ship's Security supervising the transfer of photon torpedoes, phaser parts and other classified equipment, while the cadets and the Support crew under Lt Neheru managed the resupply of replicator protein packages, spare parts and medical supplies, and the Surefoot Engineering crew under Chief Grev liaised with their Tempest counterparts to prioritise the repair work. \n\nCommander T'Varik strode into Cargo Bay 1, finding the person she was seeking: a short, young-looking Trill female with chestnut hair drawn back tightly as if to reveal her race's distinctive rows of brown spots bordering her oval face. \"Commander Olir? I am Commander T'Varik, First Officer of the Surefoot.\" \n\nThe younger woman turned, appearing anxious and hesitant, offering a handshake before dropping it again, looking around furtively. \"Commander T'Varik! This is, um, this is unexpected-\" \n\nThe Vulcan narrowed her gaze. \"I was explicit in my private message that we would meet immediately upon commencement of the tender operations.\" \n\n\"Yes, yes, of course, but um, I thought it would be more private...\" She looked over at people who were obviously members of her crew. \n\n\"We will of course speak in my office,\" T'Varik assured her dryly. \"With our Ship's Counselor in attendance.\" \n\n\"Yes, yes. But, um... I'm not sure now if I-\" \n\n\"'Not sure'? Are you now withdrawing the allegations you raised to Starfleet Command regarding Captain Acres?\" \n\nOlir's lips pursed, and for 4.376 seconds T'Varik calculated the time required for the younger First Officer to consider her decision, as well as calculating the ultimate outcome. She was proved correct as the Trill finally replied, \"No- No, there's something definitely wrong.\" \n\n\"Based on your reports, Admiral Tattok would agree, hence his orders to Captain Hrelle to investigate. In fact, I believe my captain is meeting now with yours, so perhaps we can proceed without further delay?\" \n\n* \n\n\"Apologies for the mess, Captain,\" Hrelle offered picking up a few items from the couch and casting them into the corner. \"My wife is expecting, and we've been replicating cub's clothes and, um, acting all parental.\" \n\n\"No problem, Captain, and congratulations.\" Captain Thomas Acres was to Hrelle a shockingly young-looking, tanned human, with rugged blonde features and an Australian accent to his bright voice. \"Do you know if it's a boy or a girl, or are you keeping it a surprise?\" \n\n\"It's a boy; we're calling him Misha. Here, have a seat. Can I get you a drink?\" \n\nAcres took a place at the end of the couch. \"Some cold water will be fine, thanks.\" \n\nHrelle smiled by the replicator. \"Nothing stronger?\" \n\n\"No thanks. I feel guilty as it is, letting my crew do all the work. On the border, we don't stand on ceremony, it's always All Hands on Deck when things need to get done. Not many captains appreciate that.\" \n\nHrelle ordered two tall, thin glasses of iced water and carried them to the couch, taking a place on the other side and adjusting his tail to stick out. \"Well, having served on the Gorn and the Tholian borders, I can certainly appreciate that mindset, Captain - or can I call you Thomas?\" \n\n\"Tom, please.\" \n\n\"And I'm Esek.\" He offered one glass and raised his own in toast. \"May All Our Planetfalls Be Scheduled.\" They drank before Hrelle continued. \"I have to say, Tom, your record is most impressive. Commanding a Starfleet vessel at age thirty is remarkable in itself, even taking into account the rapid promotion prospects available on high-risk missions such as Border Patrol.\" \n\n\"Not to mention my pedigree?\" Acres added, smiling self-deprecatingly. \"Having a father as an Admiral gets people talking about your suitability for a role. But don't worry, I'm sure he only pulled a few strings.\" He laughed softly. \n\nAs did Hrelle. \"You also received good remarks from your former commander.\" \n\n\"Oh? Checking up on me, are you?\" \n\nHrelle saw and heard the jocularity - but scented the subtle shift towards suspicion with the younger captain, and responded with what he hoped was a disarming grin. \"Old cats like me are insecure when dealing with you young cubs. And fleet tendering the ships on the Cardassian border is a new assignment for me. I wanted to get a sense of what the Captains out here were like.\" He sipped at his water. \"Back in the day when I was performing such duties, we felt more cut off from the rest of Starfleet, more isolated.\" \n\n\"It's still that way,\" Acres assured him soberly. \"We're the first line of defence out here, and with Starfleet's resources stretched with the return of the Romulans and the threat of the Borg, we could be the only line. Fortunately, the Cardassians don't want to start another war.\" \n\nHrelle let that hang for a moment, drinking again before asking, \"And how do you know this?\" \n\nAcres reclined back, resting against the arm of the couch. \"You get a measure of them, as you're watching them across the border, gauging their intent. They suffered in the last conflict, far more than they would obviously care to admit. So while they might puff up their chests and boast about conquering the Galaxy, it's all piss and wind.\" \n\n\"That's quite... intuitive, Tom. Most of the strategic specialists in Starfleet Command seem to think that in fact they're gearing towards another offensive, hoping to take advantage of our stretched resources. The reports that Captains Maxwell and Picard filed from the neighbouring sector earlier this year were frankly alarming.\" \n\n\"I can't comment on that,\" Acres noted, in a tone that suggested what he really thought of it. \"I only know the Cardassians here.\" \n\nHrelle cradled his glass, before finally setting it down on the adjacent coffee table. \"And how well do you know them, Tom?\" \n\nThe shift in Acres' expression was significant enough, and a layer of hostility papered his pink features as he set down his own glass. \"Let's cut out the pleasantries and get to the point, shall we, Captain? You received reports about me from Leni-\" \n\n\"Who?\" \n\n\"My First Officer, Commander Leni Olir. She's... very keen to make her mark in Starfleet. We all are out here, of course, but she wants my position, to get her command at age 26 instead of 30. She was a late addition to the crew, and has never really been able to fit in with the rest of us. Also...\" He blushed a little. \"Our personal relationship has been strained. She's expressed an interest in me, an interest I couldn't return, and when I rejected her advances, I think she took it more personally than she should.\" \n\nHrelle shifted in his seat; there was no point in dancing around it anymore. \"Tom, your First Officer has sent Starfleet Command some disturbing reports, reports that you have been in frequent contact with a Gul Ersat, who apparently commands a border ship called the Turo. Was she lying?\" \n\nAcres smiled. \"No. Gul Ersat and I have been communicating.\" \n\nHrelle tensed, not expecting such an insouciant response. \"And what exactly have you been communicating about?\" \n\n\"Puzzles.\" \n\n\"Excuse me?\" \n\n\"About ten weeks ago, Gul Ersat sent a message across the border to us, asking for help to solve a Helico.\" \n\n\"A what?\" \n\n\"It's a three-dimensional spiral number puzzle, where a given list of numbers have to be fitted in the correct positions to meet the same end-sum figures. Gul Ersat became addicted to them, but was stuck on this particular Helico, and was looking for help.\" \n\nHrelle stared, feeling slightly stunned. \"And you believed him?\" \n\n\"You said you've done border patrol duty yourself, Captain. What's the main feature of such duties? The tedium. I do number, word and logic puzzles myself. I had my tactical people go over the Helico he sent us, of course, to make sure there was nothing suspicious behind it. But it was exactly what he said it was. So I helped him solve it - and as a laugh, sent him one of my own I was stuck on.\" He shrugged. \"After that, we ended up exchanging puzzles. You know, something to pass the time.\" \n\nHrelle frowned. \"You already have something to pass the time, Captain: you're patrolling this border. You were assigned here to protect the Federation from the enemy, not to exchange games with them.\" \n\nAcres regarded him with... was that derision in his eyes? \"'The Enemy'. Once, the Klingons were 'The Enemy'. Before them, it was the Axanar. Before them, the Suliban, and the Daikini-\" \n\n\"I don't need a history lesson, Captain.\" \n\n\"Why? Are you too old to learn something new?\" \n\n\"What's that supposed to mean?\" \n\nAcres shrugged. \"I've found Starfleet officers of a... certain age tend to get set in their ways regarding former enemies. They can't let go of past hatreds.\" \n\nHrelle grunted. \"I have no feelings about the Cardassians, I've never even met one. But if we're insulting each other now, I've found Starfleet officers of a certain age tend to think they know better than us old cats, like they're the first ones to have ever had such thoughts and notions that maybe the guy on the other side of the Neutral Zone is more like us than we've been led to think. Believe me, you haven't. \n\nNow, it's admirable to be optimistic about an improvement in our relationship with the Cardassians, but unless and until such an improvement is officially agreed upon between our respective governments, you need to cease any further communications with Gul Ersat. Is that clear?\" \n\nAcres stared at him. \"Of course, Captain. I apologise if I came across as rude, I'm not accustomed to having my decisions questioned. Out here, you get used to just getting things done.\" \n\nHrelle nodded. \"I understand. And I have to ask as well: is there anything else I need to know at this point? Anything out of the ordinary?\" \n\nThe younger man leaned back, eyes narrowing. \"No. No, of course not.\" \n\nBoth men looked up as the door slid open and Kami walked in, smiling. \"I hope I'm not disturbing you two boys?\" \n\nThey rose as she approached, Hrelle replying, \"No, sweetheart. Captain Acres, I'd like to introduce you to my wife and my Ship's Counselor, Kami. Kami, this is Thomas Acres.\" \n\nThe young man offered a hand. \"A pleasure, Ma'am. You're also the Counselor?\" \n\nShe nodded, accepting it. \"It's very economical, though I can't imagine that there'll ever be another ship where the Captain and Counselor are also husband and wife. May I sit?\" \n\nHrelle brought over a chair and helped her into it, while she waved to them. \"Sit down again, gentlemen. Captain Acres, I was just interviewing your First Officer. An interesting young woman. Quite driven.\" \n\nAcres tensed. \"Yes, you could say that. She wants my job.\" \n\nShe smiled. \"Don't most First Officers?\" \n\nA smile he didn't return. \"Yes, but they don't usually try to stir up trouble for their COs.\" \n\nShe nodded. \"Yes, these reports of hers. The communications with the Cardassians.\" \n\n\"Yes, Captain Acres was telling me that he was exchanging nothing more than puzzles.\" Hrelle noted. \"He also intimated that part of the reason behind her actions against him may be because he rejected her sexual advances.\" \n\n\"Oh,\" Kami nodded, looking to Acres. \"That must have been awkward for you. How did she take it when you turned her down?\" \n\nHis brow creased in thought. \"At first I thought she took it well. But then her general attitude towards me cooled, barely speaking to me even on an official basis. I tried to make overtures to her, for the sake of the crew, but...\" He shrugged. \n\nShe smiled sympathetically. \"I understand, Captain. We have a saying back home about such situations.\" She looked to her husband, and speaking in Old Caitian, not accessible by most Universal Translators, informed him, \"He's lying about her. She's afraid of him.\" \n\nOblivious, Acres smiled. \"I didn't catch that.\" \n\nHrelle smiled back at him, controlling his reaction. \"Sorry, Captain, it's difficult to translate. The gist of it is it's best to avoid shipboard relationships - my own with my wife being an obvious exception, of course.\" \n\nAnd then Kami, regarding the visitor as well, asked, \"Captain Acres, I would very much like to talk with you. I know that border patrol vessels don't have fully-qualified Counselors, despite the recommendations that have been made by Starfleet Medical, and I'm sure you'd find it a healthy exercise-\" \n\nHrelle could see the young man tense, before slipping on a fake smile and interrupting her with, \"Thank you, Counselor, but I don't need to talk to anyone. I'm perfectly well-balanced.\" \n\n\"Then why do you leave the ship in a shuttle for several hours at a time? That seems-\" \n\nShe stopped as Hrelle raised a hand, looking to her. \"Excuse me, Counselor. What do you mean, 'leave the ship'?\" \n\nKami kept studying Acres. \"According to Commander Olir, Captain Acres has made several trips in the direction of the Arkady Cluster in one of the Tempest's shuttles. He goes alone, does not maintain contact, and returns several hours later.\" \n\nHrelle straightened up further, focusing on the other captain again. \"Is this true? How long has this been going on?\" \n\nAcres looked bemused at his reaction. \"Just the last two or three weeks.\" \n\n\"And how often have you done this?\" \n\nThe young man shrugged. \"Four or five times, when we're not too busy and the need arises.\" \n\n\"The need for what?\" \n\n\"For some peace and quiet, away from the responsibilities of the mission, if only for a couple of hours! You of all people should understand the burdens of command, Hrelle! We don't have fancy Holodecks or Rec Rooms on the Tempest like you have here! It's all basic... and the ship can feel tiny sometimes, crowded like you wouldn't believe! I... I go out to Arkady, shut down the engines and power and just... unwind.\" \n\nHrelle stared with incredulity. \"Captain Acres, I gave you the opportunity before to tell me if there was anything else out of the ordinary I should know about. Leaving your ship on unauthorised trips, for whatever reason, would certainly count as that.\" \n\nAcres met his incredulity with defiance. \"You might want to read suspicion into everything I do, Captain; that's your choice. That doesn't make it, or you, right.\" \n\n\"No, it doesn't,\" Kami agreed, ignoring the reaction from her husband. \"Tell you what, why don't you come along with me for that talk, then perhaps my husband can speak with your First Officer and straighten this matter out once and for all?\" She smiled charmingly now. \"You don't have to be afraid of me, I won't bite, despite the teeth.\" \n\nDespite himself, Acres seemed to relax in response to her charms, and relented. \"Fine. Let's just get it done.\" \n\n\"My thoughts exactly.\" \n\nHrelle continued to stare hard at the visitor. \"Captain Acres, I'll be wanting to see copies of the transmissions exchanged between you and Gul Ersat, as well as the flight logs of whatever shuttles you used for solo trips.\" \n\nAcres frowned. \"Why?\" \n\n\"To reassure this officer of a certain age that there's nothing to be suspicious about. Is that going to be a problem?\" \n\nAfter a moment, he nodded. \"No. No, of course not, Captain. I can tend to it later.\" \n\nKami started to help herself out of her seat, Hrelle jumping up to assist her, as he suggested in Old Caitian, \"I don't want you alone with him.\" \n\nKami smirked, replying back in the same tongue, \"I think I can handle myself, Esek.\" \n\n\"Did you think that was a suggestion?\" \n\nShe grunted. \"Big Growling Male. Will you feel better if Eydiir was with me?\" \n\n\"Yes.\" \n\nKami made a sound of acknowledgement, before looking to Acres again. \"Forgive us, Thomas, but my husband is overly protective of me in my current state, always worrying that I'm overtaxing myself, not sleeping or eating right. You'd think he was having the cub.\" She slipped an arm around his as they walked out. \"Do you mind if one of my more gifted Medical cadets sits in with us? Being a training vessel we try to give the cubs an opportunity to-\" \n\nHrelle watched the doors slide shut, still catching the tail end of the conversation until it went out of range, and then tapped his combadge. \"Hrelle to T'Varik: bring Commander Olir to my Ready Room immediately.\" \n\n* \n\nMess Hall: \n\nNeraxis picked at her Klingon curry with uncharacteristic reluctance. \"He's gonna be okay, isn't he? Maybe we should go see him?\" \n\n\"We? No.\" Sasha Hrelle stabbed a penne with her fork, raising it and pointing the sauce-slathered pasta in her friend's direction. \"And neither will you. Dr Ling has practically banned all of us from Sickbay after all the times we've been visiting following one of your makeout sessions with Jonas. And if you show up, you might end up on the receiving end of a lecture yourself about your sexual shenanigans.\" \n\nNeraxis blushed, her normal cobalt-blue skin darkening to a soft violet. \"Holy Hraxor, I never tease you about your times with Giles.\" \n\nAcross from the Bolian, Kitirik was flicking honey-coated crickets up from his bowl and into the air, catching them in mid-arc with his long, thin, salmon-pink tongue. Now, however, he let the latest bug drop back into the bowl to respond. \"Good Friend Neraxis, just this morning you were noting that Good Friend Sasha's thighs hadn't been together since Christmas. Was that not a reference to her prolific sexual activity with Good Friend Giles as I initially suspected, or did it refer to a non-related medical condition?\" \n\nSasha eyeballed Neraxis. \"Yes, Cadet Whose Latest Conduct Review I'm Working On This Week: which is it?\" \n\nNeraxis' bald head creased under the scrutiny, before she looked to their Flight Ops Specialist Meow Rrori. \"Hey Furball, you haven't told us about your evening with Reyii Igavo! Was being with a Betazoid everything you thought it would be, huh? Come on, let's have all the gory details!\" \n\nThe white-furred Caitian looked up at her, obviously recognising the attempt at changing the subject, but still complied, \"Rather disappointing, actually. It turns out that Betazoids in fact rarely use their telepathy, except among close family members and in private. She was quite aghast at my suggestion that she read my mind.\" \n\nKit nodded, a cricket quickly disappearing down his reptilian mouth as he noted, \"Many telepathic societies such as Betazoids, Vulcans and Melkotians employ elaborate restrictions on the casual use of their abilities, to maintain societal cohesion.\" \n\n\"So, did you manage to convince her to lower her shields as well as her pants?\" Sasha joked. \n\n\"Yes,\" he admitted reluctantly. \"Well, her shields, anyway.\" \n\n\"And?\" Neraxis prompted, grinning. \n\n\"She... read my mind and decided that we were incompatible. Apparently, she considers me... sex-obsessed.\" ",
        "\"You? No!\" Sasha quipped in mock horror. \n\nJust then Eydiir joined them with a tray of clear soup, looking even more dour than usual, saying nothing as she sat down beside Neraxis, who looked to her. \"Hey, is Jonas okay? Did you cure him? Is he in trouble? Dr Ling isn't giving him any hassle, is she? Why isn't he here? Is he mad at me? Well?\" \n\nThe Capellan scowled at her lunch, before finally muttering, \"Yes.\" \n\n\"Yes? Yes to what? I asked you fifty questions, you laconic bitch!\" \n\n\"He is okay.\" \n\nNeraxis blinked. \"And that's it? That's all you've got to say?\" \n\n\"No.\" Eydiir faced her now. \"I will also tell you to cease your inane pathetic prattle about your would-be lover. Best if we all remain single and focused on our work and studies! All relationships are doomed to bring you nothing but disappointment and grief!\" She bolted back to her feet and departed, leaving her lunch untouched and the remaining occupants of the table stunned. \n\n\"Wow,\" Sasha grumbled, looking red-faced. \"What triggered that?\" \n\nNeraxis leaned back, her own appetite vanished. \"Time of the Month, maybe?\" \n\nRrori sniffed the air around them, then shook his head. \"No, that's Sasha.\" At the girl's scowl, he asked, \"What?\" \n\n* \n\nThe young Trill looked ready to collapse into a puddle of anxiety as she entered with Commander T'Varik, who by contrast was a picture of composure as both women took seats in front of Hrelle's desk. \"Commander Olir, would you like some tea?\" \n\n\"T-Thank you, no, Sir.\" \n\nShe was almost shaking, seeming more like a first-year cadet than the first officer of a starship. He felt sorry for her - but acknowledged as well that he had a job here. \"Tell me a little about yourself, Commander.\" \n\nShe blinked. \"Me? W-Why, Sir?\" \n\n\"It is not your place to question an order from a superior officer,\" T'Varik reminded her sternly. \n\n\"Don't think of it as an order,\" Hrelle offered gently. \"Just an opportunity to help you relax, and give me something to go by beside your name and record.\" He leaned back, resting his folded hands on his belly and smiled. \n\nAnd it was a smile that Olir eventually returned. \"Thank you, Sir. There's- There's not much to tell about me, really. I grew up on Trill, my parents were landscape architects in the Bandari Provinces. They were eager for me to join them and maybe start a family dynasty or something, but...\" She smiled again. \"Obviously I had other plans.\" \n\nHe nodded. \"Your record shows you spent nearly all of your time since graduating from the Academy in Logistics at Starbase 12. Then six months ago you suddenly requested a transfer to ship duty - border ship duty. That's quite a dramatic change of career path for you, wasn't it?\" \n\nThe colour from Olir's spotted face drained, as if fearing he was trying to catch her out in some lie. \"Yes, I suppose it was, Sir. But when the vacancy came up, I couldn't let it go. I admit I even called in a few local favours to make it happen.\" \n\n\"But why change? Did you think that it was a more worthwhile duty than Logistics in an established Inner Sector facility?\" \n\nShe stared hard, conflict clear in her expression, before she finally admitted, \"I wanted the promotion that the assignment came with.\" \n\nHrelle saw T'Varik's eyebrow rise at that. \n\nOlir made a harsh sound. \"I know, that's not very selfless or noble-sounding, is it?\" \n\n\"No,\" he agreed. \"But it's honest, at least. It must have been quite a shock, going from a large operation such as Starbase 12 to a relatively-tiny ship and crew, isolated and with the threat of the Cardassians always present. How did you cope?\" \n\n\"It-\" Her gaze dropped to his desk. \"It hasn't been easy. It's a very closed little community onboard the Tempest, everyone knows everyone else, and strangers are not exactly made welcome until they've proved themselves.\" She flushed. \"It's worse when they're so loyal to Captain Acres, and they think I'm out to get him.\" \n\n\"Are you? Out to get him, I mean?\" \n\nShe looked up again. \"You think I was wrong to report the transmissions with the Cardassians?\" \n\n\"Technically, no; the transmissions were unauthorised. But if the evidence corroborates his initial statements that they were nothing more than harmless puzzles being exchanged, then he's guilty of nothing more than poor judgement, and you'll appear to have overreacted. Did you try to speak with him privately about this before reporting him?\" \n\n\"Of course I did, Sir! He insisted that everything was fine, that I was worrying about nothing and that he knew what he was doing! But then he started making these trips-\" \n\nHe nodded. \"Yes, these trips. Why am I only hearing about them now? Why weren't they in any of your reports to Starfleet Command?\" \n\n\"Because...\" She swallowed. \"I was afraid of how Captain Acres would react to them. When he learned I was sending transmissions, he ordered any subsequent ones to go through him first. In fact, he restricted my access to outside communication in the last couple of weeks-\" \n\n\"And you did not confront him about this blatant violation of Starfleet regulations?\" T'Varik asked. \n\n\"I tried! He- He-\" The girl looked ready to burst into tears. \n\n\"He is subject to the same regulations as the rest of us, Commander,\" Hrelle informed her sharply, rising to his feet, any sympathy he had for the young woman evaporated. \"And part of a First Officer's duties is to question the actions of their Captain when applicable. Rest assured, however, we'll be investigating further. Dismissed.\" \n\nOlir flushed, before nodding and rising. \"Yes, Sir.\" \n\nHrelle remained silent until the Trill departed and the doors closed, before looking to his First Officer. \"Your opinion?\" \n\n\"Of Commander Olir? She is inexperienced, immature and easily-dominated, completely unsuitable for the position. Of these allegations about Captain Acres? Like the matter with the communication with the Cardassians, these sojourns, while unorthodox, are not necessarily felonious. Your reaction, however, suggests you believe there might be more to it.\" \n\n\"My reaction suggests an impatience at the distaste of having to come out here like some parent to deal with cubs who should know better. You know, Acres joked about his father getting him his job, but I'm beginning to think there's some truth to it. Mother's Cubs, some of our cadets would be better suited than those two! \n\nAnd you're right, there may be nothing to these trips, or to these transmissions.\" He steeled himself. \"But my hackles are rising. I want you and Lt C'Rash to board the Tempest, retrieve and examine all their communication records, as well as the Tempest shuttles, including their flight logs and anything else you might think of.\" \n\nHer expression changed. \"There will certainly be protests on the part of Captain Acres.\" \n\n\"He can direct them to Starfleet Command.\" He rubbed the bridge of his muzzle. \"The Arkady Cluster... Commander, I think I have a first mission for our new Strategic Engineering Officer...\" He touched his combadge. \"Lieutenant Jonas Ostrow, report to my Ready Room at once.\" \n\n* \n\nCounselor's Office: \n\nKami likened a first meeting with a new individual to a ship exploring a strange new world: plenty of surprises, but typically following expected patterns and features. \n\nThomas Acres, for instance, was like many young ambitious officers she had met before: outwardly confident and charming, papered over layers of unease, suspicion, defensiveness and... was that fear? Yes, there was fear, fear of revealing too much. \n\nThen there was the empathy, the sympathy, he seemed to be displaying whenever the Cardassians were mentioned. Nothing in his record had indicated any personal connections with them prior to his taking command of the Tempest - but there was something there beyond the mutual love of puzzles? \n\nOr was it Gul Ersat himself who was the focus of his emotional connection? \n\nBut then Kami became distracted by Eydiir, sitting beside her, seemingly observing the session as part of her Medical training. Kami was aware that Falok had finally confessed what had happened between them - and that based on the Sickbay gossip, it had gone as badly as Kami expected and feared. \n\nIn fact, the young Capellan was so sullen and withdrawn, that she was beginning to have an effect on Captain Acres, prompting Kami to wrap things up before she could probe further. \"Thank you so much for your cooperation and patience, Captain, it's very appreciated; I know how busy you are.\" She made a show of struggling to get up, expecting to trigger his gallantry. \n\nShe was not disappointed; he rose and waved her down. \"No, no, stay there, it was my pleasure to help, Counselor.\" He nodded politely to Eydiir before leaving the offence. \n\nKami relaxed and turned to the cadet. \"We need to work on your Friendly Face. People are more likely to open up to you if you don't look like you're about to disembowel them.\" \n\nEydiir's face remained a mask, though she refused to look directly at the Counselor. \n\n\"Ooh,\" Kami teased. \"Captain Hrelle wanted you to protect me from Captain Acres. But who's going to protect me from you?\" \n\nNow the girl faced her, with open hostility. \"You know. You know what Falok did to me.\" \n\n\"I know what happened between you two, if that's what you mean.\" \n\n\"And who else knows?\" \n\n\"Anyone who was in Sickbay when we found you in your comatose state: The Captain, Commander T'Varik, Dr Ling, Nurse Scarlo. And Falok, of course. It's been kept that way, and we don't know what specific memories Falok might have seen in your mind.\" \n\n\"And you chose to keep this news from me all this time?\" \n\nKami leaned back, easing the pressure on her belly. \"I chose to give Falok the opportunity to tell you himself. Knowing you as well as I do, I thought it best to keep your interaction to a minimum - and with the one responsible.\" \n\n\"It was almost two weeks ago!\" \n\nKami nodded. \"I was about to confront him, to intervene, before he finally stepped forward. He seemed confident that he knew how to properly break the news to you.\" She shrugged. \"Clearly he was mistaken.\" \n\nEydiir grunted. \"He was so casual about it! Like he was announcing the Featured Meal on tonight's Replicator Menu! What was he thinking?\" \n\n\"Perhaps he hoped that a casual approach might engender a casual response? Current events have kept me too busy to talk to him about where he went wrong.\" \n\n\"He went wrong when he assaulted my mind!\" the Capellan snapped. \n\n\"No,\" Kami corrected gently. \"What happened was an accident, unintentional, the equivalent of walking in on you when you're in the shower. It wasn't a good experience for you, no, but it wasn't a criminal act, or he would have been sent home by now.\" \n\n\"You don't know what you're talking about!\" Eydiir sneered. \"It didn't happen to you.\" \n\n\"No? You think I've forgotten being the victim of telepathic assault myself? When that rogue telepath Aikens invaded my thoughts, opened them up against my will, twisted and corrupted them?\" \n\nEydiir's harsh, accusing expression softened with the memory of the experience she had witnessed with Kami and the other members of Alpha Squad, but didn't suffer directly from them. \"Forgive me... I am... speaking out of shock.\" \n\n\"I know. I also know that Falok is deeply regretful about what happened, but is restrained by his youth and inexperience, as well as his people's exigent desire to conceal their emotions.\" \n\nMention of Falok's name hardened Eydiir's face and tone again. \"I do not care how he feels.\" \n\n\"Liar. Of course you care how he feels - especially about you. The affection between you two is the biggest open secret on this ship since my husband's hidden stash of shuris snacks in his office.\" She reached out and took the girl's hand in her own. \"You know this. You know he's a good man. He did something bad, something embarrassing to you, but I genuinely believe it was an accident - brought on by those feelings for you. T'Varik is providing him with supplementary training to prevent this from happening again.\" \n\nEydiir withdrew her hand from Kami's, but her overall demeanour was calmer. \"You expect me to forgive him.\" \n\nKami leaned back again. \"I can perfectly understand you feeling like you can never forgive him for what he did. But once you get past the shock and embarrassment of what happened, that might change - but not if you kill him first, or even refuse to speak with him.\" She shrugged. \"Still, I'm not going to advise you on anything. I always keep my opinions to myself.\" \n\nThat brought up the hint of a smile from the cadet. \n\n* \n\nDeck 4, Repair Bay: \n\nJonas almost froze when he entered and saw Neraxis standing guard at the airlock beside the Saurian cadet Orogg. He debated taking time to speak with her, to let her know he was all right - and then she saw him, a wide grin breaking out across her wide azure face, and he strode up to her. \"Hi, True Blue.\" \n\nNeraxis almost looked like she was going to race up and kiss him again, before recalling the rules against Public Displays of Affection and straightening herself up. \"Hello, Scrappy. Feeling better?\" \n\n\"Yes - despite a lecture from the Counselor. That was fun.\" He rolled his eyes, laughing as he looked at her fellow guard. \"Hi, Orogg, how's it hanging?\" \n\nThe salmon-pink oval face and bright round bronze eyes on the Saurian brightened. \"Mine stays tucked away in its pouch where it belongs, thank you, Jonas. Leaving it hanging out like you Hotbloods do when it's not required seems rather risky.\" \n\nJonas grinned. \"I know what you mean.\" Back to Neraxis, he asked, \"When are you off-duty?\" \n\n\"2000 Hours, why?\" \n\nHe noticed her alarmed expression, reassuring her with, \"Nothing scary, I promise! I just-\" \n\n\"Cadet Ostrow.\" \n\nHe and the others turned to see Ledit stride up, PADD in hand, stopping and nodding politely. \"How are you feeling? I heard that you were in Sickbay. I hope you've recovered?\" \n\nJonas blinked, unprepared for the level of politeness, given the past animosity between them. \"Um, yes, I'm fine, thank you. And you?\" \n\n\"Very well, thank you for asking. May I speak with you for a moment?\" \n\n\"About what?\" \n\n\"Well, I saw Guforg trying to finish reading an article in the latest Journal of Starfleet Technology before her shift started this morning, something that she just happened upon and might otherwise have missed, but appeared important to her. And it occurred to me how much new knowledge is released that we might not know about, knowledge we might need. \n\nSo I had an idea that perhaps you could host a regular meeting of your fellow Engineering Cadets, and perhaps even members of the Engineering Crew, and make each other aware of new articles, new developments?\" \n\n\"That's...\" Jonas nodded in thought. \"That's a very good idea actually, Ensign. Thank you.\" \n\n\"And should you do organise this, I'd like to sit in on one or two of them. I know my Primary is Command and my Secondary is Flight Ops, but I like to keep abreast of what's going on.\" \n\n\"Sure. Sure, of course.\" \n\nSuddenly Captain Hrelle's voice filled the area through Jonas' combadge. \"Lieutenant Jonas Ostrow, report to my Ready Room at once.\" \n\nJonas looked up instinctively, before tapping his combadge in reply. \"On my way, Sir, Ostrow out.\" As the comlink broke, he reached up to his collar. \"This looks like a job for Superman.\" \n\n\"Superman?\" Orogg asked curiously. \n\n\"A Terran mythological figure,\" Neraxis explained, grinning. \"Super strong, invulnerable, able to fly, and hiding in plain sight among us mere mortals, but ready to change into his alter ego when disaster struck.\" She grinned now and nodded at Jonas. \"Go get 'em, Scrappy!\" \n\nJonas smiled as he moved his Lieutenant's pips from inside his uniform collar to the outside, glancing once at Ledit - before winking at Neraxis and departing. \n\nOnce alone, the Bolian looked to Ledit. \"It was on the other side.\" \n\nThe Hermat looked back. \"Excuse me?\" \n\n\"His ass. You came over to kiss it, but it was on the other side of him, just above the tops of his thighs.\" \n\nLedit regarded her - and smiled sympathetically. \"I'm sorry.\" \n\n\"You're sorry? For what?\" \n\n\"For how much you must be hurting now.\" \n\n\"Hurting? What are you talking about?\" \n\nLedit drew up to her, lowering hir voice. \"It's obvious, isn't it? Your friend has all this new responsibility, this attention on him. His confidence is building up, and deservedly so. He can probably have his pick of partners onboard now - ones that wouldn't send him to Sickbay with a kiss.\" S/he glanced at hir PADD. \"Excuse me, I have to confirm the receipt of medical supplies.\" \n\nS/He departed, leaving Neraxis speechless. Orogg looked to her. \"You don't believe Ledit, do you? I would not trust hir to tell me that space was cold.\" \n\nNeraxis just stared ahead. \n\n* \n\nHrelle leaned back against his desk, shifting himself to let his tail swish proudly behind him as he explained the situation. \"Captain Acres has allegedly been making trips to the Arkady Cluster. He says it was to have some time alone. There's supposedly nothing there but the debris of ships that have unsuccessfully tried to navigate through it over the years. I want you to go there and look around, see if that's true, or if there's any evidence that he might have been meeting directly with the Cardassians.\" \n\nJonas' gaze was fixed on the tactical display of Arkady, how it bridged the Federation-Cardassian Border and how the Starfleet ships tended to avoid its navigational hazards. Beside him, T'Varik continued for Hrelle. \"Your safety is the primary concern here, Lieutenant. We do not want you to take any unnecessary risks.\" \n\n\"I understand, Commander.\" \n\n\"You may select whatever crewmembers, cadets or equipment you might require,\" she added, \"However, there is a level of urgency to this mission. Should you need assistance in your choices-\" \n\nBut he tapped his combadge in reply. \"Shuttlebay Operations, this is Lt Ostrow: ready shuttles Sureswift and Littlepaw for immediate departure. Cadets Soolamea and Yeager, and Crewman Darcy, report to the Shuttlebay with Type 2 Engineering Tricorders. Cadet Rrori and Ensign Ledit, report to the Shuttlebay. Ostrow out.\" \n\nT'Varik frowned at Hrelle, who smiled and asked, \"Care to explain your choices, Lieutenant?\" \n\nSuddenly a little of the inexperienced young man returned to Jonas' expression. \"Um... did I do wrong, Sir?\" \n\n\"If we ask such questions, Mr Ostrow,\" T'Varik elaborated gently. \"It is not always meant as a rebuke, but rather an invitation for you to demonstrate your thought processes behind your decisions.\" \n\n\"Oh,\" he nodded in understanding. \"Well, I wanted two shuttles, one to enter Arkady, the other to remain outside of the potential hazard, monitor our progress and provide aid if necessary. Cadets Yeager and Soolamea have been studying Cardassian technology this year, and Mr Darcy previously worked on the Othello, surveying a Murasaki-type phenomenon like Arkady, and helping to adjust that ship's sensors to compensate for any disruptive effects. They will accompany me on the Sureswift, and Mr Rrori will pilot, his skills speaking for themselves, with Ledit piloting the Littlepaw, collecting the data we send, and standing ready should we get into trouble. I'm not expecting trouble, but-\" \n\n\"There are others with greater Flight Ops training,\" T'Varik pointed out. \"Why choose Delta Squad's Leader?\" \n\nNow he hesitated, as if beginning to doubt the reason behind his choice. \"I know Ensign Ledit has been... troublesome since s/he first boarded. But s/he seems to have improved hir temperament and behaviour. And I... I wanted to show hir that it was noticed, and acknowledged.\" He shrugged. \"It's not a very logical reason, I know-\" ",
        "\"No,\" Hrelle agreed. \"But it is one worthy of a decent leader. Thank you, Lieutenant, proceed with your mission. Dismissed.\" \n\n\"Aye, Sir.\" He nodded politely to T'Varik and left. \n\nHrelle looked at his First Officer again and grinned. \"Well, this could work out quite well. And let's all remember whose idea his promotion was? I'll give you a hint: he's Caitian, sexy, and his last name rhymes with 'Sirrel'. \" \n\nShe sighed. \"A hint will not be required, Captain. Just a reminder that Mr Ostrow has yet to prove himself in his new role.\" \n\nHe blew a raspberry at her. \"Don't you and your girlfriend have something to do on the Tempest?\" \n\nT'Varik almost sighed. \"Despite the prurient gossip onboard the Surefoot of late, Lieutenant C'Rash is not my 'girlfriend'.\" \n\n* \n\nFor the fourth time since meeting with the Chief of Security and obtaining the required data from the Tempest's computers, T'Varik had to extricate her arm from the young Caitian's touch. \"That is not appropriate.\" \n\n\"How can the expression of my desire for you ever not be appropriate?\" C'Rash asked, cradling her Security tricorder under her other arm. \n\n\"When it violates Starfleet Regulations regarding Public Displays of Affection while in uniform.\" \n\n\"So... you'll be happy when we're off-duty and out of uniform? I'm looking forward to that.\" \n\nT'Varik stopped and faced the younger officer. \"No. Happiness is not a state I will exhibit, for obvious reasons. And while we may be out of uniform in our off-duty hours, we will not be together. It would not be appropriate for us to have a relationship, given our places in the chain of command onboard the Surefoot.\" \n\n\"We're a relatively small crew; what are the chances that you'll find someone of equal rank to have a relationship with?\" She winked. \"Especially someone whom you find as attractive as you do me?\" \n\n\"I do not find-\" T'Varik stopped, and started again. \"We will discuss this at a later date.\" \n\nC'Rash grinned. \"You don't deny finding me attractive.\" Then she proceeded - her tail rising and stroking T'Varik's rear end as she did so. The Vulcan reinforced her mental disciplines and caught up with her as they entered the Tempest's Shuttlebay, a much smaller and more constricted area than the Surefoot's, where a few officers and crewmen inspecting equipment made it seem even more claustrophobic. \"Excuse me, are you Chief Hafner?\" \n\nA short, olive-skinned human male in his early thirties with crinkly black hair receding high. On seeing the strangers, the hint of an amused smile on his face dropped. \"You're not authorised to be in this part of our ship.\" \n\n\"You are mistaken. I am Commander T'Varik, First Officer of the Surefoot; this is Lt. C'Rash, Chief of Security. We are here to inspect Shuttlecraft 2 and 3-\" \n\nHafner shook his head. \"No.\" \n\n\"Excuse me?\" \n\nHe crossed his arms over his chest, as the other crewmen drew closer. \"We've heard you've been on the Bridge, downloading data about the Captain. Now you're down here, in our Shuttlebay, nosing around. Well, we want to know what's going on, and why you're going after Captain Acres.\" \n\nT'Varik steeled her expression. \"Chief Hafner, the reasons for our investigation do not concern either you, or anyone else onboard your ship. We are authorised to be here, and to take any and all necessary actions required to complete our assignment. Should you require confirmation, speak with Commander Olir.\" \n\nNow Hafner sneered. \"As far as we're concerned, that traitorous piece of fluff can haul herself back to Starbase 12 where she belongs! And you're not going anywhere near these shuttles until we get confirmation from Captain Acres himself.\" Then he raised a forefinger and pointed it in her face. \"Now get the hell off my shuttlebay!\" \n\nC'Rash stepped between them, swiftly grabbing the digit and twisting the man's whole arm around until he was doubled over. Her teeth bared, tail swishing in an agitated manner, she growled, \"I'm not in the mood for some monkey beating his chest to try and impress us! Now, get out of our way and go piss somewhere else, or we'll call on our Captain to come over here! He'll have you for breakfast!\" \n\n\"I believe it,\" a new voice commented. \n\nThe women turned at the approach of a stocky older human male with pale, wrinkled skin and a thick moustache that was darker than the short greying hair on his round head. He wore a mustard-black Starfleet uniform with Lieutenant Commander's pips, and a smile. \"I saw Esek put away three whole chickens in one sitting. He won the bet, but spent the next day in bed sick as a dog.\" \n\n\"You know Captain Hrelle?\" C'Rash asked suspiciously, releasing her hold on Hafner and allowing him to step away, rubbing his hand. \n\n\"Since before you were born, cub; we served together on the Limaari.\" More formally to T'Varik, he introduced himself. \"Lt. Cmdr Marvin Blum, Chief Engineer.\" \n\nThe Vulcan nodded back. \"Commander T'Varik, First Officer; this is Lt. C'Rash, Chief of Security.\" \n\n\"They're here investigating Captain Acres, Marvin,\" Hafner informed him sullenly. \n\n\"Oh? Then you'd better give them all the cooperation they require.\" \n\nHafner and the other Tempest crew reacted to that, Hafner asking, \"Are you serious?\" \n\n\"Damn right I am. They wouldn't be wasting time talking with you Shuttlerats if it wasn't serious.\" \n\n\"They're only here because that bitch Olir was sending reports-\" \n\nNow Blum changed moods entirely, anger flashing as he turned to Hafner and barked, \"Watch that mouth, Byron! You don't have to like your superior officers, but you do have to show them the respect deserving of their rank and uniform! And that includes these visitors to our ship! Is that clear?\" \n\nLooking more chastened, the Shuttlebay Chief replied, \"Yes, Sir.\" \n\nBlum faced T'Varik and C'Rash again, more composed now. \"I apologise for that. What do you need?\" \n\n\"Access to all shuttlecraft that Captain Acres employed in solo trips; according to the logs we downloaded, that will be Shuttlecraft 2 and 3.\" \n\nHe nodded, indicated two of the small, boxy shuttles parked nearest the closed bay doors. \"Help yourselves. I'll make sure these reprobates stay out of your way.\" \n\nAs the Surefoot officers entered one shuttle, activating their tricorders, T'Varik noted, \"Lieutenant, your response to Chief Hafner was overly aggressive-\" \n\n\"Shush,\" the Caitian interrupted. \n\nThe Vulcan looked to her, about to admonish her - when she saw her shipmate's high pointed ears twitching, as she brought a finger to her muzzle in a silencing sound. T'Varik was curious as to the reason behind this - then, with a little concentration, she realised that, like C'Rash, her own superior hearing allowed them both to hear the conversation from the Tempest crew at the other end of the shuttlebay. She suppressed her instinctive unease at the ethical breach behind their eavesdropping for a more pragmatic approach. \n\n\"What the hell are you doing, Marvin,\" Hafner was whispering, \"Helping them? Where's your loyalty?\" \n\n\"Don't lecture me on loyalty, you little stain,\" Blum snapped back. \"I was serving in Starfleet when you were just an itch in your Daddy's shorts!\" \n\n\"They're investigating the Captain!\" \n\n\"Do you blame them? The whole ship's talking about Acres! Those transmissions, the trips he takes alone, diverting us off our patrol routes-\" \n\nT'Varik and C'Rash silently exchanged glances at that last one. \n\n\"It's not right,\" Hafner was grousing. \n\n\"No, you know what's not right? You, acting like you might be involved in whatever Acres is doing! You might not like Olir, but if it'd been me in her position, I'd have been reporting him too! That cute little Caitian in there's right about Hrelle. I know him; regardless of his waist size, you do not want to get on his bad side.\" \n\nC'Rash chuckled at his words. \"He does know my uncle.\" But then was distracted by an alert on her tricorder. She moved around T'Varik without even making a flirt, the alert sound increasing as she crouched beside the shuttle's waste disposal unit. \"They haven't got around to cleaning this out, a fortunate neglect for us; I'm detecting Cardassian DNA.\" \n\nT'Varik approached as well. \"What is the nature of the evidence? Blood? Hair follicles? Epidermal residue?\" \n\nC'Rash smirked. \"None of the above.\" \n\n* \n\nHrelle never looked up as the intercom buzzed, and Neheru's voice announced, \"Captain Acres is here to see you, Sir.\" \n\n\"Tell him to come in.\" \n\nThe door slid open, and the young human practically stomped in up to his desk. \"Hrelle! What the hell do you think you're doing? Sending your people over to my ship?\" \n\nHrelle glanced up. \"I said I wanted to see details of your transmissions and solo flights.\" \n\n\"It was implied that I would provide you with that! Not that you'd keep me busy with your wife while your officers sneak onboard the Tempest!\" \n\n\"They hardly sneaked onboard, Captain Acres. They were quite open about their intentions. Unlike yourself. Sit down.\" \n\nAcres leaned forward, resting his hands on Hrelle's desk, his face pink. \"You have no right to make such baseless accusations!\" \n\nHrelle rose from his seat, teeth bared. \"Sit. Down. Sit down and tell me about the Cardassian who boarded the shuttle.\" \n\nAcres blanched, swallowing. \"I- I-\" Slowly he drew back, the anger leaving him as he finally took a seat. \n\n\"Well, at least you're not trying to deny it.\" Hrelle sat down again, turning his chair to face the other captain. \"Was it Gul Ersat?\" \n\nAfter a moment, he admitted, \"Yes.\" \n\n\"Why?\" \n\n\"I was...\" He was gripping the arms of the chair, looking away from Hrelle. \"I was curious. I wanted to meet 'The Enemy', in the flesh. Just to talk, work on some puzzles-\" \n\n\"And we're back to the lies again.\" As Acres looked up again, outraged, Hrelle continued. \"We found Cardassian DNA on the last shuttle you used, two days ago. What was interesting was the substance that contained the DNA: traces of Cardassian seminal fluid. Mingled in some tissues with your own, apparently.\" His gaze narrowed. \"I've never played puzzle games. They seem a lot more fun than I expected.\" \n\nHe lifted a PADD from his desk and perused a few lines on the screen. \"We also found and analysed the transmissions between you and Gul Ersat. Not just the ones you admitted to, but the private ones you deleted afterwards from your ship's computer... or rather, the ones you tried to delete.\" He paused, before adding, \"My Security Chief and my First Officer also deciphered the codes you two worked out to arrange for your rendezvous... and gave me the highlights of your more explicit exchanges.\" \n\nAcres' expression remained indignant. \"There's more to this than just sex, Hrelle.\" \n\n\"Yes, I know: you also left your assigned patrol routes, falsified and deleted records, used Starfleet equipment for unauthorised meetings with some Cardassian Gul-\" \n\n\"Nerim.\" \n\n\"Excuse me?\" \n\nAcres focused his gaze on Hrelle now. \"His name is Nerim. And we love each other.\" \n\nHrelle bit back his initial response, choosing to lean back and gesture to him. \"Go on.\" \n\nThe invitation seemed to bolster the young man's strength - or maybe it was the relief of finally admitting the truth. \"His name is Nerim Ersat. His father is a high-ranking officer in the military, though like me he earned his current position. He's an only child, expected to shoulder the burden of the family's honour. He likes puzzles, and noodle soup, and listens to contraband Terran music.\" \n\nHis gaze softened. \"And like me, he's out here, doing a job he doesn't think is necessary... and is lonely. And yes, he is very attractive, I won't deny it. Broad shoulders, kind eyes, that voice. \n\nBut if you look past the explicit parts of our conversations, you'll see the bond that built up between us, despite the divisions our respective governments have put up in their ignorance. We had to meet. We had to. \n\nAnd so, we did. We arranged for our rendezvous near Arkady; he came in his own shuttle.\" \n\n\"And in yours, too.\" \n\nAcres frowned. \"That's uncalled for-\" \n\n\"UNCALLED FOR?\" Hrelle rose to his feet, his tail smacking the side of his chair in agitation. \"Are you kidding me? Are you the most naive man in the Quadrant? Were you really so horny that you had to throw away your career, even risk your life, because of some Romeo and Juliet Star-Crossed Lovers fantasy you had? They could have captured you, interrogated you for tactical and security information, left your ship and crew vulnerable-\" \n\nNow Acres rose to his feet. \"Nerim wouldn't do that! You don't know him like I do!\" \n\n\"Some late evening dirty calls and a couple of Bumper sessions in your shuttle doesn't make you all-knowing, Captain! It just means your brains are in your pants!\" \n\n\"Don't you get it? Our love could be just the start! A bridge to ultimately unite our governments, lower the borders, bring peace to this part of the Quadrant!\" \n\n\"That's a lot of pressure to put on your prick, Captain, I hope it doesn't have performance issues.\" \n\nAcres bristled. \"Fine. Make your jokes. Write up your report to Starfleet Command, say whatever you want in it. I stand by how I feel. And I'll be proved right in the end.\" He turned and started towards the door. \n\n\"Where do you think you're going, Captain?\" \n\nHe stopped at the doorway, the door sliding open as he faced Hrelle again. \"Back to my ship.\" \n\n\"No. You're not.\" Louder now, he called out to the Bridge. \"Lt C'Rash!\" \n\nThe black-furred Caitian appeared and stood outside the doorway. \"Sir?\" \n\n\"Confine Captain Acres to one of our guest quarters until further notice. He's to have no contact with his ship, or with anyone else.\" \n\n\"What?\" Acres spat. \"You have no right to hold me!\" \n\n\"Guess again. I'm waiting to find out why the Cardassians really wanted to be near you at Arkady. Once I do... then we'll see what happens next. Lieutenant?\" \n\nC'Rash drew closer. \"Would you follow me please, Captain Acres?\" \n\nAcres continued to stare in disbelief at Hrelle, before threatening, \"History will be on my side, Captain.\" \n\nHrelle grunted. \"History can kiss my furry ass.\" \n\n* \n\nDeck 2, Commander T'Varik's Office: \n\nSasha entered at the First Officer's acknowledgement, striding up to the desk and holding out a PADD. \"Commander, Chief Grev has indicated that the Tempest's dilithium chamber indicates magnetic degradation, and is recommending its replacement immediately - requiring Level 2 authorisation or higher, of course.\" \n\n\"Of course.\" T'Varik accepted the PADD, provided her authorisation, and passed it back. \"I have 4.33 minutes to spare, Ensign.\" \n\nSasha blinked, tucking the PADD under her arm. \"Commander?\" \n\nT'Varik rose and moved to her private replicator, ordering a hot Vulcan mint tea. \"This authorisation request could more efficiently have been processed via the ship's computer. The most logical reason that you would come in person is you wished to see me about an unrelated matter.\" She returned to her desk with her tea. \"I now have 4.2 minutes; should this matter require more time-\" \n\n\"No! I mean, no, Commander, it's nothing really, just...\" She swallowed. \"As my Academy Liaison, you complete my performance reviews and so you can see my faults, and be objective and-\" \n\n\"And you are wasting your time telling me what I already know.\" She sipped at her tea. \n\nSasha nodded, deciding to get to the point. \"Am I too short-tempered?\" \n\n\"It is of course a relative adjective, but... yes, for the command position you are seeking to hold in Starfleet. It has been noted that you are at times quick to anger.\" \n\n\"Who's noted that?\" \n\nThe Vulcan did not respond, instead asking, \"What prompted this need to question yourself?\" \n\n\"Today, Ensign Ledit made a suggestion about Jonas' fitness for the new role he has. I took it as an insult against him; I was about to punch hir.\" At T'Varik's eyebrow she quickly clarified, \"I mean, I felt like I could have punched hir. But thinking about it afterwards, the suggestion made sense, and that it wasn't necessarily meant to insult Jonas. And it's not the first time.\" \n\nT'Varik cradled the pale blue china cup in her fingertips. \"These other times... did they involve further perceived sleights against your family and friends?\" \n\n\"Well... lately it's mostly been because of that little pisher Ledit, but... yes.\" \n\nT'Varik looked up at the cadet. \"I recall the first time I encountered you, in the Academy classroom during your first week there, when Commander Arrington visited, singling you out after hearing you were raised by Captain Hrelle, who was then still considered to be a traitor to the Federation. He repeatedly insulted and threatened you, but you remained composed throughout... until he rather foolishly gave you permission to speak back, upon which you proceeded to launch an impressive verbal assault against him that I understand is still talked about around the Academy. Congratulations on becoming a legend.\" \n\nSasha felt herself blush at the memory. \"Yes. I was already scared being there, wondering what would happen if people found out, how I'd react... I guess I found out.\" \n\n\"Indeed. I suggest that your fault, if any, lies not with shortness of temper. I cannot speak for the character of your mother, but I know the man you call your father. Captain Hrelle is very paternalistic, empathic and protective, both to his crew and his 'cubs'. This can be a source of great strength for him, both as a man and a commanding officer, and can inspire others to give him loyalty. \n\nBut sometimes those qualities can trigger acts of recklessness... such as with the recent incident involving yourself and the Nekrosi space mines. I suspect you have learned much from him... and from your close connection to the Caitian people, with their strong clan connections and tendency to rely on instinct.\" \n\n\"So... I should be worried about this?\" \n\n\"No, you should be conscious of it. It is very encouraging that a future commanding officer is aware of her potential faults and actions; there are regrettably some who become proverbially blind to this.\" \n\n* \n\nShuttlecraft Sureswift: \n\nJonas sat in the co-pilot's seat beside Rrori, though Jonas' panels were configured to read the data being fed from the shuttle's scanners to his and the other monitors behind him, where Soolamea and Yeager were scanning the area, and Engineering Assistant Darcy was working to compensate for the ionising effects of Arkady. \n\nJonas looked up at the cockpit window, albeit reluctantly. From a relative distance, the Arkady Cluster was simply beautiful, a lime-green blossom of energy and plasma and the remains of a family of stars. This close, however, where they could feel the gravimetric shears and eddies and watch the magnetic storms on the monitors, he became more respectful of the danger behind the beauty. \n\nAs if in illustration, the shuttle rocked and shuddered, before Rrori compensated. \"Well, this is fun.\" At Jonas' reaction, he insisted, \"Really, it is, Lieutenant, Sir.\" \n\nJonas grunted, looking behind him to the others. \"Mr Darcy, can we improve the fidelity of the scans?\" \n\nThe older, dark-skinned Terran never looked up from his monitors and controls, but nodded and replied in his crisp English accent, \"I think we can manage another ten percent, Sir.\" \n\n\"Thanks.\" Jonas restrained the urge to grin. When he chose Darcy to participate, he was silently worried, worried that, unlike the cadets, someone with his experience wouldn't treat Jonas seriously. But the crewman was acting professionally, not teasing him for his ad hoc promotion or his age. ",
        "It felt... good. \n\nHe looked to his fellow cadets. \"Nancy, focus on measuring the ionising fields surrounding the debris; Soo, scan for residual thruster energy from Cardassian vessels, plot and calculate age and type.\" \n\nNancy Yeager glanced up. \"Are you looking for anything in particular, Jonas- I mean, Lieutenant?\" \n\nNow Jonas allowed himself a smile; once, Nancy had been vitriolic in her opinion of him and his suitability for Starfleet after his emotional wobbles, but that had changed in recent months. She had even been supportive of his promotion, and so her remarks just now didn't sound critical or taunting. \"'Jonas' will do, I'll be that a lot longer than I'll be 'Lieutenant'. And I want baseline readings on the background radiation absorption for some of that older debris.\" \n\n\"Gotcha.\" She returned to her monitors. \n\nHe opened a channel. \"Sureswift to Littlepaw: what's your status, Mx Ledit?\" \n\nThe friendly voice made Jonas blink. \"Systems nominal, Sir, and datastream maintained, but watch yourselves, these phenomena are unpredictable. Do you require anything else, Sir?\" \n\nJonas exchanged glances with Rrori before replying, \"If I do, I'll let you know. Sureswift out.\" He smirked. \"Wow. Are we sure Ledit's not been replaced by an android duplicate?\" \n\nThe Caitian shrugged. \"It's been just a profound change, I just assumed s/he was getting some.\" \n\n\"Ledit's been nice to everyone,\" Yeager pointed out from her station. \"If s/he's getting some, it must be spectacular.\" \n\n\"Maybe it's secretly Rrori?\" Soo teased, her olive-green Rigellian face brightening with mischief. \n\n\"Rrori wouldn't,\" Jonas replied, but then looked to his friend. \"Would you?\" \n\nRrori started to retort, but then seemed to genuinely consider it. \"It would be interesting. Two sets of genitalia. I wouldn't be bored.\" \n\nJonas laughed at that - but then grew serious as he was alerted to new data. \"Soo, turn your scans to that clump of Cardassian debris at 119 Mark 47.\" \n\nSoolamea leaned forward in her chair, frowning. \"Looks like nothing more than ancillary debris from a Galor-class vessel. Scorch marks, ionisation, particulates... everything you'd expect.\" \n\n\"Not everything. Nancy, can you get more detailed readings on the background radiation absorption patterns?\" \n\n\"Not from here, at the current fidelity levels.\" \n\n\"Mr Darcy, can you boost the sensors further?\" \n\nThe crewman shook his head. \"Sorry, Lieutenant, I can't change the Laws of Physics.\" \n\nJonas nodded in acknowledgement. \"Mr Rrori, take us closer.\" \n\nThe Caitian looked to him. \"Are you sure? These cosmic waters are particularly choppy and treacherous. I'll have great difficulty in handling it.\" \n\n\"Yes, but think of all the females back on the Surefoot who will swoon to the tales of your struggle with the forces of the mighty Arkady Cluster.\" \n\n\"That is very true. I must think of them.\" \n\nJonas smiled and reopened the channel. \"Sureswift to Littlepaw.\" \n\n\"Yes, Sir?\" \n\n\"We're moving further into Arkady. If there's an ion spike and we lose the engines, you'll have to come in and tractor us out. Acknowledge.\" \n\n\"Acknowledged, Sir, and please be careful.\" \n\nAs Jonas closed the channel, Rrori switched to the Manual Steering Column, announcing, \"Secure yourselves, people, we may hit turbulence-\" \n\nAs if in illustration, the Sureswift shuddered and seemed to drop like an aircraft in an atmosphere, before Rrori recovered and put them back on course towards the debris clump Jonas had identified. Jonas ignored the churn of turbulence and fear in his stomach to focus on the readings, scanning the individual pieces they found... \"Mr Darcy, access the tractor controls, lock on to the items whose readings I'm sending you.\" \n\n\"Tractor controls? You want to bring back some souvenirs?\" \n\n\"Yes. I've identified three, possibly four items that the Captain will want to see.\" \n\n\"I'm all for being thorough, Jonas,\" Rrori ventured. \"But you don't think you're overgrooming the fur, do you-\" \n\nThen he stopped as Jonas shot him a look, before looking to the others. \"I'm not at liberty to go into details about the reasons we're out here, but you can imagine it's important. Rrori, coordinate with Darcy on using the aft tractor array to hook the items.\" \n\nNo one argued further. Jonas watched everyone at work as the Sureswift passed near the floating debris. \n\nSeconds later, Darcy announced, \"Got 'em, Lieutenant!\" \n\nSuddenly the lights flickered and the shuttle lurched hard to port and went to Red Alert, the occupants holding on as Rrori declared, \"Ion spike! We've lost the engines!\" \n\nJonas stayed calm. \"Darcy, keep hold of those parts!\" He opened the channel again. \"Littlepaw! We've lost power! Get in here and tractor us out, on the double!\" \n\nFor a moment, there was silence, and for a terrible moment Jonas feared the communications panel was down as well. \n\nBut then Ledit finally replied, \"I'm sorry, Sir, but I can't do that.\" \n\nJonas blinked, not quite sure what he heard. \"What did you say?\" \n\n\"The ion spikes are too dangerous, I can't make it to you.\" \n\n\"Is he kidding?\" Rrori exclaimed. \n\nJonas leaned forward, grasping the edge of the console as shuddering increased. \"Ledit, you don't have to be scared, it's safe enough for you! The chances of your shuttle losing power from another spike are thousands to one! Now get in here and tractor us out! That's an order!\" \n\n\"I'm very sorry, Sir, I'll do my best to find a way around it, but I can't guarantee I'll make it in time. Ensign Ledit out.\" \n\n\"Ledit!\" Jonas cursed, tried reaching the Surefoot, failed, and struggled to keep his heart from racing as he looked out into the stormfield; tossed about like this, it wouldn't be long before they slammed into some debris out here, and end up the latest in a long line of ships that underestimated the power of Arkady. \n\n* \n\nIn the Littlepaw, Ledit watched the readings of the area surrounding the Sureswift, not believing hir luck - or the opportunity that had arisen. \n\nS/he went to the replicator and produced a Kasala fruit juice, putting hir feet up on the co-pilot's seat as s/he sipped, smiling. Finally, steeling hirself, s/he sat up and opened a channel, quickening hir breath before announcing, \"Surefoot, this is Ensign Ledit on the Littlepaw! The Sureswift has been damaged by an ion spike! They're requesting I move in to tractor them out, but the situation is still dangerous!\" \n\nS/he sipped at hir drink again and counted the seconds, before the reply came from Lt Neheru. \"Littlepaw, this is Surefoot: we are commencing emergency undocking procedures from the Tempest and are on our way. Take no unnecessarily risky actions to endanger your own life. Keep us apprised. Surefoot out.\" \n\nLedit's smile became a grin, as s/he watched the image of the other shuttle bob and weave on the gravimetric eddies, pushing it towards a large collection of ship debris. He could sweep in now, affect a dramatic rescue and earn kudoes; the ionisation was already ebbing in the area. \n\nOr... s/he could just sit here and see what happens. Seeing that upstart mongrel Ostrow and his little friends killed could open up much for hir... \n\n* \n\nOn the Sureswift, Jonas felt himself fighting, needing to stay in control, for the sake of the others. He had no time to wallow in rage at Ledit, or panic at their predicament, or kick himself for killing his shipmates and himself on his first mission as Strategic Engineering Officer. \n\nHe did think about Neraxis, though. About never seeing her again, and about all that foolishness he had hesitating being intimate with her, just because he might need sex aids. So what? You idiot! You idiot! He swallowed; he needed to stay in control- \n\nControl... \"Rrori! We still have manoeuvring thrusters! They won't get us out, but they'll stabilise us! Darcy, keep a lock on that debris! Soo, have we still got a datastream link running to the Sureswift?\" \n\nThe Rigellian glanced at her monitor. \"Yes, but why?\" \n\nJonas didn't answer her until his hands danced over his own monitors, replacing the Engineering data with the Remote Control screens. \"I signed out both shuttles in my name. As per Flight Ops Regulations, I was required to memorise the prefix codes of both vessels-\" \n\n\"Oooh!\" Rrori cooed in understanding. \"You're going to take over the Littlepaw and remote pilot it in to rescue us!\" \n\n\"No, you're going to remote pilot it in.\" He nodded to Rrori's own panel. \"Link established through the datastream. You should have access now, and see through the other shuttle's sensors.\" \n\nRrori worked the control, laughing. \"Jonas, if this gets us out, I'll make sweet love to you all night long!\" \n\n\"There's no need for that,\" Jonas assured him. \"Really no need.\" \n\n* \n\nLedit had been finishing hir drink when the Littlepaw's engines suddenly powered up and the vessel lurched - spilling the remainder on hir uniform. S/he sat up, tossing aside the container and moving hir fingers over the controls - without success. What was going on? A malfunction? The Cardassians? \n\nThen s/he realised, as s/he scanned the readout. Damn you, Ostrow... Ledit considered breaking the connection, but that would certainly show up in the inevitable enquiry. \n\nS/he opened a channel. \"Littlepaw to Surefoot: I'm going in to rescue them, will keep you posted, over and out.\" \n\nNow s/he cleaned hirself up as s/he worked out hir story... \n\n* \n\nHrelle was on the toilet when the Red Alert sounded, but he kept that part to himself as he left his Ready Room and entered the Bridge. \"Status!\" \n\nNeheru straightened up from his Ops station, his tangerine-coloured skin flushed. \"Distress signal from the shuttles, Captain! The Sureswift was struck by an ion spike, and the Littlepaw states it's too dangerous to enter! I have initiated emergency undocking procedures!\" \n\nHrelle nodded and took his seat, his mind racing as he considered what he had done. He should have waited. He had enough to work on here, he didn't have to send Jonas out there. But Hrelle had been so eager to give the cub a chance to prove himself, to shine- if Hrelle had got him hurt, or worse- \n\nA furred hand rested on his shoulder. He didn't look away from the main viewscreen, didn't have to, to know who it was. \"They're in danger-\" \n\n\"Maybe,\" Kami murmured softly. \"But that shuttle is full of the Best and the Brightest.\" \n\n\"I sent them out there...\" \n\n\"Yes, you did. And you will again. And when something likes this happens, you will feel exactly the same way. But you won't change, because you know how things work.\" \n\n\"Captain!\" Neheru announced, \"We've just completed undocking, but now I'm picking up another signal from the Littlepaw!\" \n\n\"Let's hear it,\" Hrelle ordered, as Kami released her hold on him. \n\nLedit's voice filled the air. \"Littlepaw to Surefoot: I'm going in to rescue them, will keep you posted, over and out.\" \n\nHrelle blinked, nodding with approval. \"We'll continue on to meet them. Helm, lay in an intercept course, Warp 6 - Engage!\" As the ship shuddered into warp drive, he grunted to himself, \"That's unexpected. Nice to see that Ledit's improved-\" \n\n\"Has he?\" Kami asked cryptically. \n\nBefore he could enquire further, the ship dropped back into real space and stopped. \"What's happened?\" \n\nLt Velkovsky glanced over her shoulder at him. \"Nothing, Sir. We weren't that very far away. At Warp 6, 'not very far away' is really not very far away.\" \n\n\"Smart ass.\" He watched as the two shuttles approached, the first one tractoring the second one, the second one tractoring something smaller. He rose from his seat. \"Hrelle to T'Varik: meet me in the Shuttlebay.\" To Neheru he added, \"Take us back to the Tempest and recommence docking once they're back onboard.\" \n\n* \n\nHrelle and T'Varik were entering as the Shuttlebay doors were closing, the shuttles and their tractors had shut down, and the cadets were emerging - Jonas rushing out towards Ledit, Rrori and Darcy struggling to hold him back as he shouted, \"YOU SON OF A BITCH!\" \n\nThe senior officers raced up, Hrelle getting between the two cadets as T'Varik snapped, \"Mr Ostrow! Calm down at once and explain yourself! That's an order!\" \n\nIt took a few seconds before Jonas complied, his face taut and red, his breathing heavy, and his furious gaze seemed to burn through Hrelle towards Ledit. \"When our engines died, we called for him to rescue us, but he refused! He was willing to let us die!\" \n\nHrelle turned, looking at Ledit, his own face tightening. \"Is this true, Ensign?\" \n\nThe Hermat stared back in anger and indignation. \"Certainly not, Sir! As I reported, it was too dangerous for me to go in at that time! If I'd gone in immediately, both of us would have ended up disabled, maybe even destroyed! I was merely waiting for the right opportunity!\" \n\n\"You lying bastard!\" Jonas made a move, as Rrori re-tightened his grip on his friend. \n\nUntil Hrelle reached out and placed his hands on either side of Jonas' head, making the young man stop and listen as he instructed, \"We will deal with this, Lieutenant, I promise you. But you have a job to do. Put this aside for now, and report.\"  \n\nJonas looked up at him, visibly recovering himself and straightening up, as Hrelle and Rrori released him. \"Y-Yes, Sir.\" He swallowed before continuing. \"Sir, we've discovered something, out in Arkady... we brought back physical evidence.\" \n\nHrelle nodded. \"So I see. Care to take me over and give me a brief summary before you prepare your report?\" \n\n\"Yes, Sir.\" \n\nHrelle motioned him towards the Cardassian debris, glancing once more at Ledit, before looking to T'Varik. \"I'll work on the Tempest mission; you deal with this. And I want it dealt with yesterday.\" \n\nThe Vulcan nodded, unprepared to argue the temporal impossibility of his request. \"Aye, Sir.\" \n\n* \n\nThe Conference Room was as crowded as Hrelle had ever seen it, even if one of them was holographic: Admiral Tattok, standing near Hrelle's desk, his coal-black eyes darting between Captain Acres and the other officers of the Tempest, the images on wallscreens of the Captains of the Hurricane, Tornado and Zephyr, the other border ships in this sector, and Kami and Lieutenants C'Rash and Ostrow, who was now moving around the table, pointing to the holographic recreations of the Cardassian pieces he had brought back from Arkady. \"We found these, and identical pieces, scattered in the area in seemingly random locations. They were made to look like scrap, wreckage, left behind from the last War. But they're not.\" \n\n\"And how do you know this, Lieutenant?\" Tattok asked, his elderly slate-grey scales seeming to reflect the light from the holoprojector in his office. \n\n\"Arkady emits specific wavelengths of ionisation, Admiral, that are absorbed by anything near it. The longer the exposure, the greater the absorption. Most of the debris out there has been around for years; these pieces have only absorbed a few weeks' worth, at most. The Cardassians could fake scorch marks, collateral explosive scarring, but not that.\" \n\nTattok nodded, his diminutive size belying the level of authority he exuded. \"Continue.\" \n\n\"Yes, Admiral.\" Jonas' hand moved over one spectral image like a stage magician, as the image expanded to reveal its distinctive features. \"This is the piece that first caught my attention. It has many of the components of a typical probe: manoeuvring thrusters, microtractor beams, sensors, a shielded memory core.\" \n\n\"But it's not a probe,\" Hrelle prompted. \n\n\"No, Captain. It's designed to activate at a predetermined time in the future, seek out these other pieces, and a couple of others we didn't retrieve, and assemble itself into something else.\" \n\n\"Into what?\" \n\n\"A Cardassian navigation buoy.\" \n\nStanding nearby, Acres sneered. \"You're wrong!\" \n\nJonas looked to him, momentarily wondering how to respond to the outburst, before settling for, \"With respect, Sir, I'm not. We accessed the memory of the unit we retrieved and confirmed its purpose. And there are others out there, enough to become at least six buoys, crossing the stars between our side of Arkady, and the Cardassians'. \" \n\n\"And what would be the purpose of all this?\" Tattok asked, though it sounded like he already knew, and merely spoke for the record. \n\nHrelle faced the image now. \"Navigational buoys would be required to safely traverse Arkady, but if the Cardassians had seeded intact buoys, we would have detected them. But they could, and did, seed the pieces of said buoys, pieces designed to assemble themselves at a later time, and allow a Cardassian strike force to cross over, in an area of the border they know is thinly patrolled, because we assume Arkady would be sufficient protection.\" He looked to Acres. \"All they needed was an excuse to be near Arkady, and the unwitting help of a Starfleet officer too... distracted... to get suspicious and report their presence.\" \n\n\"No!\" Acres exclaimed. \"You're lying! This is just a conspiracy to keep Nerim and me apart!\" \n\nHrelle glanced at a bemused Jonas. \"Thank you, Lieutenant, excellent work. You're dismissed - and you remain bound to keep the details of this inquiry confidential.\" \n\nJonas nodded. \"Yes, Sir.\" \n\nAfter the young man left, Hrelle faced Acres, his expression a mix of anger and sympathy. \"You were chosen, Captain, carefully studied, so that a Cardassian agent, probably an operative of the Obsidian Order, could become your perfect lover. And slowly but surely, he eroded your objectivity, your sense of duty, and gradually you broke more and more regulations as you became wrapped up in your own delusions-\" \n\n\"No!\" Acres was reddening, almost shaking, and he glanced at his officers - including Commander Olir and Lt Commander Blum - before facing Hrelle and the holographic Tattok. \"I'm not some lovesick teenager! There must be some other explanation for this! There must be!\" \n\nHrelle regarded him for a moment, before tapping his combadge. \"Bridge: is that other transmission still open?\" \n\n\"Yes, Sir, though they have complained about the delay-\" \n\n\"Patch it through to us here.\" \n\n\"Aye, Sir.\" \n\nSeconds later, a nearby wallscreen came to life, presenting the image of an older Cardassian with the senior rank of Legate. His clay-grey skin was cracked and wrinkled, and he was missing some of the ridges around his face, but his dark marble-like eyes flared with vitality - and impatience. \"It is about time, Captain. You might have all day to waste, but some of us have busy schedules.\" \n\n\"Thank you for your patience, Legate Hovat,\" Hrelle replied, not sounding too genuine. \"I called you to let you know that it's failed.\" \n\n\"That what's failed?\" \n\n\"Your plan to seed the area around Arkady with self-assembling navigation buoys. We discovered them, and dismantled them - but we have left in their place some Nekrosi subspace mines we confiscated a few weeks back. But I wouldn't approach them if I were you; they're rather volatile.\" \n\nHovat's face was a perfect mask of control, as was his voice. \"I have no idea what you're talking about, Captain.\" \n\n\"Of course not. But I thought I'd call you as a courtesy - and to make a request.\" \n\nSomething like a sneer raised one side of the Cardassian's thin mouth. \"A request? You accuse us of violating the Treaty, and now you make a request?\" \n\n\"Yes - I was hoping to have a word with the Obsidian Order agent posing as Gul Nerim Ersat.\" \n\n\"Gul Ersat? I know of no Gul by that name.\" \n\n\"Of course you don't. Can you put him on, please?\" \n\n\"Captain, I told you already, there is no-\" ",
        "Hrelle stepped closer to the screen. \"Let's cut the crap, Hovat. You lost this one.\" He pointed to Acres. \"And so has this idiot. But he's still wrapped up in the fantasy your agent has woven for him. The least you can do is help shake him out of it so he can focus on salvaging his future.\" \n\n\"Captain, I've been very patient with you-\" But then he stopped as he was distracted by someone offscreen but near him in the flesh. Seconds later, he moved aside, replaced by a younger, more handsome Cardassian male. \"Captain Hrelle, a pleasure to meet you. We've heard much about you and your career.\" \n\nAcres reacted, his eyes widening as he drew up beside Hrelle. \"Nerim! Nerim, are you okay? I was worried about you!\" \n\nThe Cardassian regarded him silently, his expression a mix of pity and contempt. \"Tom... You should never have been given command. You should never have been put in such a vulnerable position.\" He looked to Hrelle again. \"Not that we are confirming any of your baseless accusations against us.\" \n\n\"Of course not. Thank you for your cooperation- oh, and before you go, one more thing: standing orders for our patrol vessels here have changed. Any Cardassian ships found crossing the border will be fired upon. No exceptions.\" \n\nBehind the Obsidian Order agent, Hovat bristled. \"You would fire on our ships without warning?\" \n\n\"Of course not, Legate; this is your warning. Ignore it at your own peril. End Transmission.\" \n\nThe screen went blank before the Cardassians could reply, assuming they would. \n\nHrelle looked to Acres, who continued to stare at the now-blackened screen, his face a picture of shock and disbelief. He was pitiable. \n\nThat wouldn't save him from what was to come, however... \"Captain Thomas Acres, you are under arrest for multiple counts of Gross Misconduct, Conduct Unbecoming a Starfleet Officer, Dereliction of Duty, Falsification of Official Records, and Misuse of Starfleet Vessels and Equipment. You are not required to give any statement until your formal arraignment at the nearest suitable Starfleet facility, where you will be given access to legal counsel beforehand, but do you wish to say anything at this time?\" \n\nThe young man's blank gaze dropped from the screen to Hrelle, and his voice was as fragile as tissue in a storm. \"Will- Will someone please contact my father?\" \n\nBehind Hrelle, Tattok promised, \"I will contact Admiral Acres personally.\" \n\nHrelle silently motioned for C'Rash to approach. The young Caitian rose - joined by Kami, the two of them flanking Acres as Kami talked softly to him, \"Do you mind if I walk along with you, Thomas? We can talk for a while.\" \n\nShe looked to Hrelle for approval, an approval he silently gave; in his present state, he worried for his state of mind. After the three of them left, he announced, \"Commander Olir, Lieutenant Commander Blum, come here, please.\" \n\nThey approached, Hrelle looking first to the veteran Engineer, shaking his hand. \"I'm sorry we had to meet again under these circumstances, Marvin.\" \n\n\"Same here, Captain. I was speaking with your wife before; congratulations on your imminent fatherhood.\" \n\n\"Thank you. The Tempest needs a Captain until a replacement can be found. By the authority granted me by Admiral Tattok, I'm giving you a temporary field promotion to that rank and position.\" \n\nBoth officers reacted almost identically, Olir speaking first. \"Sir, as First Officer I would normally be given that duty-\" \n\n\"Normally you would. But I have judged you unsuitable for it.\" \n\nThe woman blanched. \"Sir, with respect-\" \n\n\"Like Captain Acres, you should never have been given such a senior position; you lacked the practical experience and maturity. You allowed yourself to be intimidated by your Commanding Officer. You didn't seek support from the other senior officers. And by your own accounts, you've managed to alienate yourself with the rest of the crew. You'll stay onboard for now as First Officer, but I am recommending that you be transferred to a more suitable assignment, and returned to your previous rank.\" \n\n\"Sir, it wasn't my fault-\" \n\n\"This matter is not open for debate with me; you may file an appeal if you wish.\" \n\n\"Esek- Captain-\" Blum still looked stunned by the unexpected news. \"Are you sure about this? Putting me in charge?\" \n\n\"Why not? You have the years, the maturity, you already manage an engineering crew.\" \n\n\"Yes, but... I never wanted a Command of my own.\" \n\nNow Hrelle's expression hardened, as he felt an unease, an anger, build up inside him over the events. \"Yes, well, I never wanted to have to destroy a young man's career today, but I did. Needs must, Captain Blum. The orders have already been transmitted to the Tempest; go inform your crew of the changes, and prepare for undocking within the hour, we have a schedule to keep. Dismissed.\" \n\nThe two officers departed, and Hrelle turned to the three patrol captains on their respective screens, raising his voice to them as he spoke, as if needing to make sure they understood the level of his anger across the light years. \"I'll be visiting the rest of you in the coming weeks as part of our tendering operations. I'll also be checking everything - and I mean everything, and I don't expect to find any problems, any anomalies! I'm also sending you new patrol routes, which you will follow with immediate effect. And if you deviate from them by so much as a metre, I'll have your balls for breakfast! Dismissed!\" \n\nThe images of the other captains hastily acknowledged and vanished. Once he was alone with Tattok's image, he cursed. \n\n\"I hope that's not on account of me, Captain?\" the Admiral joked. \n\nHrelle turned to him. \"Apologies, Sir. You'll have my full report shortly, along with a list of recommendations for a complete overhaul of the recruitment system being used for border patrol service. Too many of these cubs are using it as stepping stones for promotion. I'm also recommending Counselors be assigned to their ships, and-\" \n\nTattok raised a hand, his scaled skin reflecting light from the holoprojectors at his end of the transmission. \"I'll have a good read of it when you send it, Esek, I promise, and I will send a transport to collect Acres, so he doesn't spend too long in your Brig. I know this was a distasteful task for you.\" \n\nHrelle tried to shrug it off. \"I never wanted to end up the Bad Guy for anyone. Except slavers and pirates, of course.\" \n\n\"As far as I can see, the only 'Bad Guys' here are the Cardassians, and a lovesick fool they duped.\" He looked up at the Caitian in regard. \"My son was right about you; you're very paternal.\" \n\n\"Your son?\" Then Hrelle remembered; Captain Weynik of the Starsong, whom Hrelle had met on a previous mission. He shrugged. \"I suppose it's inevitable, when half your crew complement are made up of cadets almost a third your age - and one of them is your actual stepdaughter.\" \n\nTattok nodded. \"And I'm sure you prefer to be the Fun Dad. So do I. I think we've both been spoiled, though, having children who have never given us cause to be the Harsh Dad. But sometimes it's not avoidable. Sometimes, you have to be the Stern Dad.\" \n\nHe nodded. \"Understood, Sir.\" \n\n\"One more thing before I go: you warned the Cardassians that you mined Arkady with those Nekrosi mines you discovered a few weeks back. I was under the impression that they had been deactivated and disassembled by an EOD Team.\" \n\nHrelle smiled. \"They were. The Cardassians don't have to know that, though.\" \n\n* \n\nIn their quarters, Alpha Squad, minus Jonas and Rrori, was getting back into their uniforms despite having finished their shifts less than an hour ago. Sasha remained animated, alternating between finishing off a cold cheeseburger she salvaged from the Mess Hall, and finding a clean uniform. \"I can't believe this! S/He should have been locked in irons and hurled into the Brig for what s/he did!\" \n\nSitting cross-legged on the floor, Kit was polishing his boots. \"Good Friend Sasha, with respect, we will not know what had happened until the imminent hearing, as all the participants were ordered by Commander T'Varik to say nothing until then.\"  \n\n\"I heard Ledit tried to ram the shuttle into the Sureswift and make it look like an accident.\" \n\n\"That is unlikely,\" Eydiir declared, watching Neraxis, who had been sitting there silent since they came off duty. \n\nSasha grunted as she swallowed the last of the burger, wiped her mouth on her sleeve - and cursed as she took away relish. \"Yes, well, whatever it was, according to Crewman Nkume, who saw it all, Jonas looked like he was going to rip Ledit's throat out.\" She smiled at Neraxis. \"You can get some terrific sex out of a man who has a lot of pent-up energy like that.\" \n\n\"I'm not having sex with Jonas,\" the Bolian announced blankly. \n\nKit looked up. \"Has your relationship dynamics changed?\" \n\nNeraxis flexed her hands into fists. \"They will; I'm breaking up with him.\" \n\nThe others looked to her, drawing around her chair, Sasha asking, \"Why? You two get along so well together-\" \n\n\"Yes, until we actually make physical contact, and I end up sending him to Sickbay. He might as well be going Bumpers with a Horta or a Medusan.\" She looked up, tearful. \"He's going places, can have any woman he wants. Someone who won't hurt him.\" Then she looked at Eydiir. \"You were right. Better to avoid relationships-\" \n\n\"No,\" the Capellan denied, drawing closer. \"I was wrong, and I am sorry I said that. I spoke out of anger and embarrassment, because of an incident I had with Falok.\" \n\n\"An incident?\" Sasha asked. \"What happened?\" \n\n\"It is... not important. Suffice to say, I will resolve whatever matters are between Falok and myself - and you will do the same with Jonas.\" \n\nNeraxis looked doubtful. \"Have you seen the things he has to use to be with me? Sex for him is going to be like prepping for a spacewalk! What man is going to want to go through all that for me?\" \n\n\"Good Friend Jonas will,\" Kit replied simply. \"He loves you. He has stated so repeatedly, and demonstrated it.\" \n\n\"Exactly,\" Sasha agreed, smiling and patting Neraxis' arm. \"He's a good man.\" \n\n\"He is strong,\" Eydiir added, \"And brave, and honest, and honourable. You would be privileged to be his partner, as he would be to yours.\" \n\nNeraxis looked around at her friends, before finally nodding and giving up. \"Fine, fine, I won't break up with him, okay? Satisfied?\" \n\n\"I do not think you will regret it,\" Eydiir promised, smiling. \n\n\"And after you've done the deed,\" Sasha added with a mischievous grin, \"You have to tell us what he was like.\" \n\nThe Bolian's jaw dropped. \"What? No!\" \n\n\"You are prurient and lascivious,\" Eydiir declared. \n\nSasha looked up at her friend. \"Yeah, I know it's kind of disgusting, he's like a brother to the rest of us... but aren't you the least bit curious about what he's like in bed?\" \n\n\"No,\" Eydiir declared. \n\n\"I might be,\" Kit admitted. \n\n\"And I guess I'll find out for myself,\" Neraxis concluded. \n\n* \n\nRec Hall: \n\nThe room was stifling, despite the environmental controls compensating, or at least it seemed that way to Hrelle. Maybe it was all the people present: not just T'Varik, Kami and himself sitting behind the table, or the people involved in the shuttle incident, sitting in front of them, but the spectators behind them, cadets and crewmembers standing and watching. \n\nOr maybe it was just his temper rising as he heard more and more about the facts behind what happened, as every gave their accounts. T'Varik, on his right, seemingly ignored the sounds and twitches he was making. But Kami, sitting on his other side, more than once reached under the table and touched his thigh, reminding him that his tail was slapping audibly against one of the legs of his chair, and he made an effort to calm himself. \n\nBut it wasn't easy. Ledit, standing at attention now giving hir account, was trying to be the epitome of calmness and reason, as T'Varik spoke. \"We have read out your statement of the events of Stardate 45348.41. Do you insist that it a true and accurate account?\" \n\n\"I do, Commander.\" \n\n\"And that you contend your only reason for not immediately coming to the aid of your crewmembers was due to the hazardous nature of the Arkady Cluster?\" \n\n\"I do, Commander. Nothing would have given me greater pleasure than to have come to the aid of my colleagues, but the situation was too dangerous.\" \n\n\"But the exterior scans of the local area of Arkady at the time indicated that the ion activity was ebbing following the spikes.\" \n\n\"There is an element of unpredictability to phenomena like the Cluster, Commander. It could just as easily have peaked again while I was entering it.\" \n\n\"And yet Cadet Rrori managed to remote pilot your vessel in without incident.\" \n\nLedit smiled slightly. \"Cadet Rrori is a superior pilot, Commander - he'll tell you that himself. As good as I am, my skills are poor compared to his. And I am extremely grateful that those skills, plus good fortune, allowed me to survive Lt Ostrow's reckless action in endangering my life by gaining remote access to the Littlepaw.\" \n\n\"But when you next contacted us,\" T'Varik continued, \"You stated that you were entering the Cluster to rescue your crewmates. This was not the case.\" \n\n\"I beg to differ, Commander; technically, I was entering to rescue them. But I apologise if there was some misinterpretation of my announcement.\" \n\n\"Were you concerned for the safety of your crewmates?\" Kami asked. \n\n\"More than concerned, Counselor. I was frantic.\" \n\n\"So frantic you stopped for a drink?\" \n\nAs the crowd behind him murmured, Ledit blinked and replied, \"I did obtain a drink from the replicator, yes, but that was before the crisis rose-\" \n\n\"It was after,\" T'Varik corrected. \"The timecode on the replicator unit in the shuttle is synced with the main computer; it confirmed you obtained a container of Kasala fruit juice, after you alerted the Surefoot of the predicament.\" \n\n\"Yes,\" Ledit finally agreed, over the reactions from the spectators. \"Yes, I did. My blood sugar felt dangerously low at the time, and I didn't want to pass out and miss an opportunity to help my colleagues.\" \n\n\"You're full of shit,\" Hrelle declared. \n\nThat brought a reaction from everyone in the room, including T'Varik and Kami. Hrelle ignored them, focusing on Ledit, who stiffened and replied, \"I beg your pardon, Sir?\" \n\n\"I said you're full of shit.\" \n\nLedit seemingly ignored the amused responses from the audience, folding hir hands behind hir back as s/he replied, \"Sir, I am aware that you have been critical of me in the past - and with good reason. I have at times acted in an overzealous manner-\" \n\n\"You're not a zealot,\" Hrelle corrected sharply. \"You're a bully. A lying, manipulative bully, driven by ambition. You have been reprimanded, penalised, have had complaints raised about you from cadets and crew... frankly, if it wasn't late in your final year, and your Squad didn't need a Leader to meet its requirements, you would have been kicked out on your ass long before now.\" \n\nLedit swallowed. \"I... am aware of the faults I have exhibited, but you must acknowledge my attempts to improve myself.\" The breath seemed to catch in hir throat as s/he added, \"W-Why would I want to see harm done to my colleagues?\" \n\nKami leaned forward, resting her chin on her hand. \"Oh, I can think of several, Ensign. It might simply be a case of cowardice on your part - though that would at least be a point of sympathy for you. More likely, you were waiting to sweep in and rescue the others and earn some acclaim, but lost the chance when the other shuttle took over yours.\" Her gaze narrowed. \"Or maybe you just wanted them dead, to clear the path for someone else to take over the position of Strategic Engineering Officer, someone you can manipulate? Sadly, and frighteningly, I'm beginning to think that's not beyond you.\" \n\nLedit bristled at the reaction from the audience, hir chin shaking, hir eyes welling. \"Counselor... that is a terrible accusation! I don't- I don't know if I can-\" \n\nSuddenly she leaned back and clapped her hands slowly in response. \"Oh, Bravo, Ledit, Bravo! A masterful performance! It's nice to know those holodeck lessons haven't been a total waste.\" \n\n\"Excuse me? Counselor, I'm sure I don't-\" \n\n\"Liar. I prescribed therapeutic holodeck sessions for you to improve your empathy and sense of cooperation. But you appear to have used these to improve how well you can conceal your true nature. And from what I've heard from others, it's been mostly successful... unless you have enhanced senses and training in microexpressions and psychology.\" \n\n\"What's the old Terran saying?\" Hrelle asked. \"'The secret of success is sincerity. Fake that, and you're in.'\" \n\nLedit regarded the Caitians. \n\nAnd dropped hir mask. S/He turned to T'Varik. \"Commander, was I or was I not in command of the Littlepaw?\" \n\n\"You were.\" \n\n\"And that Starfleet General Order 6 confirms that the commanding officer of a vessel is the primary authority, except when orders from a higher authority are received?\" \n\nClearly the Vulcan saw where this line of questioning was leading, but proceeded. \"It does.\" \n\n\"And did I not receive explicit orders from this very ship not to take any risks with my own safety?\" \n\n\"No unnecessary risks, yes, however-\" \n\n\"In fact, do you have any evidence to present to this hearing that I deliberately endangered the lives of the crew of the Sureswift?\" \n\nT'Varik paused this time, before finally replying, \"No.\" \n\nLedit allowed hirself a smile. \"Then I must insist that these proceedings are brought to a conclusion. Now.\" \n\nThe Vulcan raised an eyebrow, looking to Hrelle and Kami before responding. \"While there may not be specific charges brought against you, questions have been raised about your behaviour and attitude that demand attention.\" \n\nThe Hermat smirked. \"I have a better suggestion, Commander, one that would save all of us a great deal of unnecessary trouble.\" \n\n\"Indeed? And what would be this suggestion?\" \n\n\"You arrange for my transfer to another vessel participating in the Academy's Advanced Work Placement Program.\" \n\nThe three senior officers reacted to that, T'Varik asking, \"What would be the reason for this transfer?\" \n\n\"May I speak freely?\" \n\n\"You may.\" \n\nLedit seemed to gather hir thoughts before drawing hir hands behind hir back. \"In the four months I have been onboard this misbegotten ship, I've been the victim of a campaign of harassment.\" S/He ignored the murmurs behind hir over that and continued. \"I don't know if it's due to bigotry because of my race, or intimidation about my superior knowledge and qualifications, but whatever the reason or reasons, it has occurred. \n\nAnd every member of the panel who sits before me has been a witting or unwitting accomplice to it. I have witnessed all of you favour certain individuals over others more deserving, granting missions and promotions and opportunities to relations, to people of inferior abilities... even unstable mental defectives like Ostrow.\" S/He paused when someone in the crowd cursed hir, before continuing. \"And superior cadets such as myself, who attempt to take pro-active measures to advance themselves, are penalised.\" \n\n\"Pro-active?\" Kami exclaimed. \"You call conspiring to imperil others 'pro-active'?\" She shook her head. \"I have no idea how you managed to get past the initial Academy psychological screenings, Ledit, but I will be making enquiries about it.\" \n\n\"Your opinion means nothing to me, Counselor,\" Ledit glowered. \"You are inextricably biased, both by your marriage to an old man unfit physically or psychologically to hold his position... and by whatever hormonal imbalances you're currently experiencing in your capacity as his breeding sow-\" ",
        "\"Shut up,\" Hrelle growled. \n\nLedit glared at him. \"Excuse me, Sir, but I've been given permission to speak freely-\" \n\nHrelle bolted to his feet, his claws extending and digging into the surface of the table as he stared unwaveringly at the cadet. \"I SAID SHUT YOUR FUCKING MOUTH. Your permission to speak is withdrawn. We're done listening to you.\" \n\nHe shook off the warning hand Kami placed on him again to walk around and stride up to Ledit, staring down hard, teeth bared as he enjoyed the reaction it produced in the cadet. \"No, you little prick, you're not getting a fresh start to cause trouble on another training ship. And you won't be staying here, either. Counselor, given the recent events and the revelations in this hearing, what will be the psychological impact on the cadets and crew if Ensign Ledit remains onboard?\" \n\n\"Not good, not good at all. Already I can see the hostility and resentment building up among those involved. Ensign Ledit appears unwilling or unable to demonstrate compassion or empathy, and I believe that the required esprit de corps that the cadets and crew need to function properly will never be built. Hir presence will ultimately be harmful.\" \n\nHe nodded, still facing Ledit, but speaking to T'Varik. \"Commander, which Starfleet Regulation governs the authority of the captain to remove any material that proves to be hazardous or potentially hazardous to the ship and/or crew?\" \n\n\"Starfleet Safety Regulation 44/10, Captain. But it is presumed that this concerns toxic substances-\" \n\nHrelle leaned in closer to Ledit. \"But that's what we're dealing with here: a toxic, dangerous substance. Isn't that right, Ensign? A pollutant. A pathetic little bully. A coward. A miserable wretch. You look on everyone around you as pawns, as stepping stones or hindrances to your personal goals of upward mobility. You think you're superior to them. But every one of them is worth a hundred of you. A thousand. You'll never make Captain, never command. I'll draw on every favour I'm owed in Starfleet to make sure you'll never get further than cleaning out of the recycling systems. Never-\" \n\nHe had watched the growing anger on the cadet's face as he continued his taunts, eroding hir control. He knew what was coming. \n\nHe was not disappointed. The Hermat drew back hir fist and struck Hrelle in the muzzle with all hir might. \n\nHrelle grunted as those assembled reacted. For a second, he let Ledit think he was going to strike back - and let hir be afraid. Instead, he just smiled. \"You're right, Commander. 44/10 is for toxic substances, and isn't grounds for removing someone. \n\nAssaulting a superior officer, on the other hand...\" \n\n* \n\nEydiir entered Gamma Squad's quarters, waiting until Falok rose from his chair before she announced, \"I would speak with you privately.\" \n\nHe nodded, indicating their bedroom. \"Will this suffice? Do you request another female in attendance?\" \n\n\"Yes, and No.\" She marched inside, ignoring the looks from the other members of his squad and saying nothing further until he joined her and the door slid shut. \"I have had cause to reconsider my initial reaction to your unexpected announcement this morning.\" \n\nThe Vulcan straightened further, his expression tightening. \"Upon reflection, your reaction was one I should have anticipated, given the level of our relationship. I wish to express my regret at the distress it caused.\" \n\nShe nodded curtly. \"We do not need to discuss this further.\" \n\n\"I disagree.\" He breathed in and continued. \"I have romantic feelings for you. This contributed to my lapse in mental discipline.\" \n\nShe nodded. \"This is understandable. I believe I share similar feelings.\" \n\nHe nodded back. \"That will make subsequent interaction between us more convenient. I have reports to complete regarding the tendering activities, but I should be finished in 46.3 minutes. Following this, would you care to accompany me for a coffee in the Mess Hall?\" \n\nShe allowed a slight smile. \"That will be acceptable.\" She approached him, regarded him for a moment longer - and then gave him a quick, tentative kiss, before stepping back again, nodding with approval. \"That was not displeasing. I will meet you there.\" \n\nShe waited until she was back in the hallway before her smile blossomed into a grin that had the few passers-by do double takes. \n\n* \n\n\"Cadets Ostrow, report to Guest Quarters 8.\" \n\nJonas had been alone in an auxiliary office, completing reports on the Sureswift incident and the subsequent hearing. It was late, he was tired, hungry, and he wanted to just find Neraxis and talk... okay, maybe more than talk. Why did the Counselor call him to one of the guest quarters? \n\nHe supposed there was one way to find out. \n\nHe entered, seeing no one waiting for him outside. Inside, he found Kami... and Neraxis, looking just as confused and nervous as he felt. \"Counselor, what's going on?\" \n\n\"As per Regulations, following a Red Alert situation such as what you and the others underwent on the Sureswift, all parties involved must undergo an enforced rest period of 24 hours, so you're off-duty now. No ship work, no academic work. You have to relax. Preferably with a minimum of contact with other people so you don't get stressed.\" \n\nNeraxis folded her arms across her chest. \"I wasn't on the shuttle with Scrappy. Why did you call me here?\" \n\nKami helped herself up to her feet. \"You're on assignment, to make sure he gets rest. Eventually.\" As she moved to the door, she finished with, \" There will be Do Not Disturb protocols up. Use this time wisely.\" \n\nThey were alone again. Jonas looked around. The room was standard among the guest quarters onboard: replicator, terminals, entertainment unit, table, couch... a double bed. \n\nHe looked to her again, ready to make a quip - until he saw the hesitant, fragile look in Neraxis' eyes. He moved to her, taking her hands in his. \"When I was on that shuttle, and I thought I wouldn't survive... I thought of you. Thought about holding you, kissing you, being with you... it's not just about the sex. It's about loving you.\" He squeezed. \"I'm not wasting any more time.\" \n\nHe drew in for a kiss - but she pulled back. \"Are you frigging crazy? Do you really want to spend your time in Sickbay again? You don't even have-\" \n\n\"Wait.\" He moved to the replicator. \"Prophylactic Kit Model 4.\" \n\nHe brought the box it produced back to her, opened it and retrieved the bottle of stabilisers, swallowing some. \"Mmm, not too bad. I think I can get used to these.\" \n\nHe looked up to see Neraxis had opened one of the condom packages. \"Hey, balloons! We should invite some of the guys over and have a party!\" \n\nHe looked at her. \n\nShe grinned. \"Just kidding.\" \n\n* \n\nDeck 2, Commander T'Varik's Quarters: \n\nThe Vulcan had just completed collating and transmitting her request for Ledit's replacement when her door chimed. She noted the time as a reference before responding, \"Enter.\" \n\nIt was C'Rash, clad in a pair of crimson silk trousers and low-cut blouse that were a striking contrast to the sable-black fur on the exposed parts of body. She looked at T'Varik. \"You're still in uniform! Do you know what time it is?\" \n\nShe rose from her seat. \"You state the obvious, and make an unnecessary enquiry. How may I assist you, Lieutenant?\" \n\nThe Caitian entered the room, her bare feet barely making a sound on the floor as she looked around. \"Nice place. Lots of room.\" \n\n\"It is a perquisite of my rank and position. I believe I asked you-\" \n\n\"How long have you been awake?\" \n\nShe blinked. \"46.75 hours.\" \n\nC'Rash nodded at that. \"Aunt Kami guessed. She told me that when you've done that before, you've needed a sleepover with someone to unwind.\" \n\nT'Varik folded her hands behind her back. \"Unwinding will not be required.\" \n\n\"Sorry, Counselor's Orders, nothing we can do about it, I'm afraid.\" Now she approached, her tail swishing playfully behind her in defiance of her attempt at acting grave. \"I've been instructed to make sure you get a well-deserved break. It's only logical, isn't it?\" \n\nShe sighed. \"Lieutenant, I believe I have repeatedly stated that a sexual relationship between us would not be appropriate...\" Then her tone softened. \"Despite your obvious attractive aspects.\" \n\nC'Rash chuckled. \"Who said anything about sex? A sleepover can be just a sleepover. We can eat, groom each other, get to know each other better, and eventually sleep together - all without the spectre of sex raising its nasty head.\" Her pointed ears twitched. \"Can't we?\" \n\nT'Varik regarded the young officer - acknowledging the pleasing scent of her musk. \"I... believe we can at least try...\" \n\nC'Rash smiled, reaching up and lightly stroking the Vulcan's features. \"Well, Commander, there's one thing you should know about me: if I end up in one of the Seven Hells, it won't be for not trying...\" \n\n* \n\nHrelle helped his wife undress and get into bed. \"Are you sure you're okay?\" \n\nShe grunted. \"Misha's kicking; we've kept him up too late, and he's cranky.\" \n\n\"Like his mother.\" Hrelle ignored her scowl and knelt beside the bed, drawing closer to her furry distended belly and whispering, \"Hey, my Little Warrior Prince: settle down in there and get some sleep.\" He rested a hand on her flesh, hearing and feeling his son react, as he continued to murmur, \"Everything's okay out here. Everything's fine.\" \n\nShe saw his expression, and shifted her head on her pillow to regard him. \"What is it?\" \n\nHe sighed, still stroking her. \"Was Ledit right? Do I favour some cadets over others? Jonas is-\" \n\n\"Jonas is the most qualified among a group of highly qualified cadets. T'Varik thinks so, Chief Grev thinks so, and for what it's worth, I think so. And he's proved himself, repeatedly.\" \n\n\"But did I not do enough for Ledit? If I'd given hir some of the attention I've given others, like Jonas or Neraxis or-\" \n\nShe pressed a finger to her muzzle. \"Maybe something different might have happened. Maybe not. You have favourites? Of course you do. We all do. That doesn't mean you or I will treat anyone unfairly; the fact that you are still worrying about hir despite all the nasty things s/he said speaks volumes about you. And you have people around you to tell you if you're showing bias for or against anyone. We'll keep you on course. We're your navigation buoys - no assembly required.\" She regarded him. \"You weren't really going to hit Ledit, were you?\" \n\n\"What do you think?\" \n\n\"I think you should get into bed.\" \n\nHe did, turning off the lights as he spooned up against her. \"Did you really bunk Jonas and Neraxis together? Are you sure-\" \n\n\"Esek... we have been awake for twenty-two hours...\" \n\nHe put an arm around her, saying nothing further. \n\n \n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN... ONE MAN'S EDEN"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "fanfic",
        "fan fiction",
        "science fiction",
        "federation",
        "caitian",
        "alien",
        "starfleet",
        "cardassians",
        "sex"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-19-star-crossed"
}