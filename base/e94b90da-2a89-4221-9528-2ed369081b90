{
    "title": "TRC - Searching for the Sky Ch. 22",
    "pages": [
        "I just want to say a couple of things before we jump into the story.\n\nFirst off, I hope that everyone is being safe as we make our way through this worldwide crisis. I have thousands of regular readers now, and while I may not know every one of you I hate the idea that any of you, or the people you care about, may be suffering because of the virus.\n\nSecond, I sincerely apologize for the delay in putting up this chapter. Many people's lives have been severely disrupted by COVID-19, mine has been no different. Now that things are falling into a sort of rhythm hopefully there won't be any more delays.\n\nThird, be good to one another. I'm not a religious man myself but for the Christians out there remember that most of Jesus's message was just that. I have been hearing numerous stories of how the forced togetherness has been difficult on relationships. Extroverts unable to be themselves out in the world while the introverts are stuck being the sole target of their extrovert s/o's attention. (I've had to lock my office door and put on headphones more than once in the past couple of weeks.)\n\nLastly, (you'll have to imagine this being in large, friendly orange letters) Don't Panic. Pickings have been slim at the grocery but only rarely have I seen empty shelves through all of this, (I'm sure you all can guess which ones those were) but here where I live supply chains are already recovering. Demand has swung wildly because of everything going on and it's natural that it will take some time to balance back out. Be patient, things may be rough for a while but I truly believe it will get better.\n\nI don't plan on bringing any of this up again. Going forward I hope that my story can be a bit of a bastion from the happenings around us.\n\nTake care and enjoy.\n\n-Blu\n\n---\n\nEdited by: Oldfart and 2muchdiggity\n\n---\n\nChapter 22\n\nKal wasn't terribly excited about Sir Balthus's decision to conduct their 'trade' in the outpost's dining room.\n\nIt was his own fault, really. He mentioned to the knight that he would have preferred to get the entire rune done at the same time. Instead, he would have to work in sections because of how large it was. When Balthus asked why, Kal replied that they would need a fair amount of space to lay out the parchment.\n\nA few minutes later they caught up with the rest of Kal's party standing and waiting in front of the entrance to the plains. Unexpectedly, Sir Balthus dismounted and beckoned the young mage to follow, leading him through a side door located just in front of the large wooden gate. The knight strode into the outpost's small dining hall with all the subtlety of a charging bull. In a booming voice, he declared that he was in a rush and demanded that they clear the room's lone table for his use.\n\nHalf of the men still had their mouths filled with breakfast as they stared in shock at the knight. It took a moment for the ranking soldier to get his wits about him and notice their visitor's robes. In a panic, he started barking orders at the others and finally got everyone up and moving. The men grabbed their plates and cups and stepped back against the narrow room's walls. Within seconds, the table was cleared. The soldier then apologized profusely to the knight for the delay in following orders.\n\nBalthus patted the man on the shoulder to allay the soldier's fear before turning to Kal. \"Will this be enough room?\"\n\n\"So much for being able to go back to the city,\" Kal grumbled. Performing magic in front of all these men was certain to get back to Lantaris.\n\nHe then had Ria retrieve four pieces of parchment and his normal inkwell. The knight's arm was so badly burnt he expected the ink to need refreshing before placing the rune on the parchment. \"Before we start I just want to be sure you want to do this. If I remember correctly, you've had that rune on your arm since you were a squire.\"\n\nThe knight nodded. \"I appreciate your concern and your keen memory.\" He held up his arm, \"The truth is that this has brought more heartache to my life than I care to speak of. Though it was indispensable when needed, only a handful of times did it prove any better than a shield of good, strong steel. Now that I am at the academy, my adventuring days are mostly done, much to my wife's delight. Rest assured, I will be happy to be rid of it.\"\n\n\"Then why wait for me? I'm certain that one of the priests or priestesses could have done this,\" Kal asked as he laid out the parchment. No sooner had the mage spoke then he realized that may not be true. The spell he was about to use was especially designed for manipulating magical inks, he doubted the church would have any real use for such magic. Well, maybe a scribe.\n\nBalthus raised an eyebrow. \"And let them gloat about how I should never have put my faith in heathen magics? Not on your life young man.\"\n\nA murmur of agreement ran through the men around them and Kal looked about the room, surprised. \"I thought I heard the Order didn't like magic,\" said the mage.\n\n\"There have been numerous instances of greediness and squabbles breaking out over enchanted armor or weapons. We want no part of such disagreements and publicly we have divorced ourselves from them. However,\" Balthus grinned wide as he looked around the room, \"soldiers aren't fools. Unless the item is blatantly magical, perhaps a blade is glowing or a zweihander you can swing like a dagger, the Order turns a blind eye to our soldiers having magical items.\"\n\nHe suddenly turned to the other men in the room. \"Amnesty! None in this room shall speak of what they see or hear in this room! Do any of you have a magical weapon?\"\n\nAn archer claimed to have bought a high-quality bow which he believed had a minor enchantment. The bow was exceptionally sturdy and never seemed to need polish or any of the normal care required. While on duty one day, he leaned it up against a wall where another archer tripped over it. Also leaning against the wall nearby was one of the generic swords the soldiers used. The bow fell against it and the and the bowstring bounced against the edge numerous times on the way down but managed to survive without a mark or fray.\n\nWhile the man told his story, Kal inspected Sir Balthus's outstretched arm, looking for a dividing line to start from. The flowing design was seamless, and the mage realized he would have to split it in a straight line and piece the cut sigils back together before transferring it to the parchment.\n\nHolding up a hand, he called for silence. The mage was feeling more nervous about this than he let on as he drew the rune to lift the ink from the knight's arm. Previously, he had only moved runes from one flat surface to another. He hoped that there weren't any special tricks he needed to know about when dealing with designs that were cylindrical like this. Luckily, he just needed to work his way slowly around the arm, lifting the ink then holding it in place with the telekinesis cantrip.\n\n\"Don't move,\" said the mage when he finally came back around to his starting point. He slowly unfolded the rune into a flat rectangle then carefully moved the cut parts around until all the sigils were whole once again. A few drops of ink from his inkwell was enough to refresh the entire rune before he placed it upon the laid-out parchment. He overestimated its final size and only needed two pieces to fit the entire rune instead of all four. At some point during the process, the rest of his party came in, curious as to what was taking them so long. At the sight of the man's heathen magic, the priestess turned on her heel and left in a huff.\n\nTaking a deep breath, Kal stood up straight once the complex design was safely on paper. Rotating his shoulders and stretching his neck to one side then the other, he attempted to release some of the tension that had built up during the process.\n\n\"Ria,\" he called. A moment later the sprite appeared and flitted up to his shoulder. \"I need one of the advanced potions for scarring.\"\n\n\"With the healing potion or without?\"\n\n\"I don't believe he is in any need of healing at the moment. Without will do.\"\n\nNodding, Ria waved her hand and a mote of light floated to the mage's palm and turned into a small vial. Pushing some magic into it, the concoction inside went from clear to glowing light blue.\n\n\"There you are, Sir Balthus,\" he said, handing the vial to the knight.\n\n\"Much obliged, young man,\" Blathus glanced toward the door. \"Good thing she left, I would regret having to hear about using a healing potion not made by the church.\" Sir Balthus hesitated for a moment. \"You're certain this is safe?\"\n\n\"I'd give it to my own children.\"\n\n\"Fair enough,\" said the knight before downing the vial's contents. He smacked his lips together a couple of times as he handed the empty vial back to Kal, who in turn gave it to Ria for storage. \"Certainly not as tasty as a healing potion but not nearly as bad as darkvision.\"\n\nKal pulled a face at the memory of drinking a darkvision potion, as did a couple of the older soldiers and the fighter. The thief just shrugged; he drank so many of the potions when he was younger that the taste hardly bothered him. Although, he was still very thankful for the ring he'd acquired that gave him the same ability.\n\nKal stored the parchments with the knight's rune once the ink was dry then Sir Balthus invited the soldiers to sit down and finish their meals. Most of them hadn't eaten another bite, just holding their plates and cups as the knight and mage took care of their business. Balthus sat down on the end of one of the bench seats then indicated that Kal should do the same. He was going to refuse when the fighter and thief from his party walked past him and sat down as well.\n\n\"I'm amazed and a little saddened that such a potion came from a wizard and not one of our priests,\" said the knight\n\nKal finally acquiesced and sat. \"Sadly, I get the impression the church is more interested in maintaining a standard than improving things. Healing spells and potions work with little scarring and the number of people who would need something like this is probably very small, so I imagine there is little drive for research. It seems as though the man who came up with this potion spent most of his life researching the healing process. He was looking for a 'perfect' potion that would leave no scars at all. I opted for the 'less than perfect' version that I could actually get the ingredients for. Even those were hard to obtain and quite expensive.\"\n\n\"If I may ask, what prompted you to create this?\"\n\n\"Barbed crystal spear to the chest,\" he said tapping a spot below his right collarbone, \"It couldn't go all the way through, so it had to come out the way it went in. It took some of me with it and healing spells can't replace what's lost. I hated the scar it left behind so I started doing some research.\"\n\n\"Crystal spear? I'm afraid I will have to return to my previous decision and refrain from asking about your past. I have a feeling we could be here for days. Perhaps if I may inquire about your future? What business do you have out in the plains?\"\n\n\"Unfortunately, I can't say. The priestess has us under an oath of secrecy.\"\n\nOne of the older soldiers piped up. \"If ya see whatever killed the cavalry company my boy was in, be sure to take their head from their body, same as they took my boy from me.\"\n\nKal bent over the table like he had been punched in the gut, tears immediately springing to his eyes.\n\n\"Kal! Are you alright?!\" said Sir Balthus, getting up from his seat then stopping when the mage held up a hand.\n\n\"I'll be fine,\" he said wiping the tears away with one of his sleeves. \"My son was born a little over a month ago. The thought of losing Talin and going through what he is,\" the mage dipped his head in the soldier's direction, \"hit me pretty hard.\"\n\nThere was a long uncomfortable pause before the soldier spoke up again\n\n\"I don't care what the church says about how cold and heartless wizards are, a reaction like that can't be faked. After taking care of your arm, Sir Balthus, and seein' what just happened, mage or not, the boy's alright by me.\"\n\nKal smiled weakly in thanks. He really wished that hadn't happened while he was in the midst of a large group of men, and one woman, but there was little he could do about it now. Luckily, all he had to do was nod toward Sir Balthus's arm to draw everyone's attention away from him.\n\n\"Goodness!\" exclaimed the knight as the potion took effect. The scars began shifting around, smoothing out the area. Balthus repeatedly clenched his hand, \"Oh my, that is uncomfortable.\" Kal hadn't noticed that part of the potion's effects because none of his scars were very large.\n\n\"The potion has to figure out what the scarred area is supposed to look like before going to work, hence the long delay,\" explained Kal. \"The man discovered that scars are the body's glue after an injury. Your body doesn't care how pretty it is, just that it gets things closed up quickly, so you don't get an infection. This version doesn't get rid of the underlying scar but changes the top layers of skin back to normal.\" He touched the spot on his chest, \"I can still feel a little bit of hardness below where I was struck with the spear but there's no way to tell it's there just from looking.\"\n\nSir Balthus hissed and began scratching his arm as hair began sprouting from the repaired skin. \"Bloody Hell!\" he exclaimed, then immediately looked around the room, embarrassed. \"My apologies gentlemen and lady, you should never have had to hear such words from me.\"\n\n\"I think I need to apologize as well,\" said Kal. \"Had I known about this part I would have warned you beforehand. My scars were much smaller.\"\n\n\"No matter,\" said the knight. The itching quickly passed and he was now holding out both arms, inspecting them. Other than where he had scratched, there was almost no way to tell the rune or scars had ever been there. He ran a hand over each to compare them and nodded. \"I see what you mean, this arm feels 'tighter' below the surface.\"\n\nBalthus looked up at Kal, \"I understand that this was a trade, yet I still feel as though I am in your debt. You received a piece of magic that you already possess in exchange for ridding me of that rune and restoring my arm. I'll add your name to the rolls of those invited to the Academy. Should you encounter a situation in which I am uniquely suited to assist, then don't hesitate to stop by my offices at the Academy or my estate in the upper city.\"\n\nKal's face suddenly turned into an evil grin.\n\n\"Perhaps I was mistaken in my offer,\" said the knight worriedly.\n\nKal waved off Balthus's concerns, chuckling, \"No, I was just thinking about how surprised the guard at the inner wall is going to be when I show up with an invitation instead of two gold.\"\n\n---\n\nSir Balthus watched the mage and his party ride off into the plains. The hinges of the seldom used wooden gate squealed as Jamus and another of the outpost's soldiers pushed it closed. The knight looked down at his arm, still amazed at how this day had turned out.\n\nNone of it would have happened if Jamus hadn't seen Galen striding purposefully toward the stables that morning as he prepared to head out to the wall for another day of his punishment. Instead of just letting it pass, the squire felt he should go find his master and tell him about it. The barracks were just outside the palace grounds and it was a short ride to Sir Balthus's estate in the upper city. Only a few minutes had passed when Jamus was on the knight's doorstep explaining what he saw.\n\nHe still couldn't explain why, but he knew this was important and had the young man ready his horse while he changed into his instructor's robes. There was no time for putting on armor.\n\nBecause his squire followed his intuition earlier that morning, his arm was now restored. The sight as he looked down at them was one he hadn't witnessed since he was much younger, and one he never expected to see again.\n\n\"Jamus!\" he called out.\n\nThe squire was over by the sword rack testing out the cheaply made blades on hand for one decent enough to wear for his shift. The young man had been in such a hurry he'd left his own sword lying in the stable. He'd forgotten to grab it in his haste to get his horse saddled so he could inform his master about Galen. Jamus was so startled by the knight's call he nearly dropped the sword in his hand. Quickly recovering, he turned toward Sir Balthus.\n\n\"I believe your actions today were sufficient to mitigate your punishment and say that your service on the wall thus far is adequate. Mount up.\" The knight suppressed a smile as the young man excitedly replaced the sword on the rack and ran toward the stables.\n\n---\n\nOnce the outpost and wall disappeared in the distance behind them, the priestess slowed them down to a walk. After that, it didn't take long for all the exertion and excitement to take its toll on the mage. Within an hour he had Ria store his saddle and draped himself across his mare's back with his head up by her neck and an arm and leg on each side as he napped. The priestess tried to up their pace to a trot when she saw the mage sleeping but the thief and fighter stayed by Kal and glared at the woman until she fell back in line. Despite her spellcasting prowess, finding herself alone in an ocean of grass with her party too far back to help if she were ambushed was a frightening experience, to say the least.\n\n\"You should be keeping up,\" she snarled when she returned to the other three.\n\nThe fighter shook her head. \"Nay, ya shouldn't be running off like that. It's a good way to get us all killed. I'll be takin' point from here out, cleric stays in the back an' outa danger.\"\n\n\"I'll not be led or ordered around by some ruffian!\" sneered the priestess.\n\nThe thief cocked his head to one side. \"You actually haven't done this before, have you?\"\n\nElden pursed her lips tightly together. The main reason she had been handed this task was her lack of combat experience and work out in the field. When most other clerics were out traveling and doing missionary work, she elected to keep close to Lantaris. Unfortunately, her lack of practical experience was holding her back and she was at risk of being passed up for promotion when the current abbot of the western cathedral retired.\n\n\"I woulda thought that'd be obvious,\" said the fighter. \"No one who has done this before rides off alone like that. Since our lives are tied ta yours, I'd be thankful if you treated it with a little more respect. I don't care for the idea of dying 'cause some ditzy bitch has her head up her arse.\"\n\n\"I am a priestess of\u2014\"\n\n\"Nobody gives a fuck out here, cleric. Spike traps don't care if you just fed a starving village and falling ceilings don't care if you just saved a bunch of orphans. A gryphon will eat your liver as quickly as it would mine. Your titles don't mean shit out here, only your abilities. I'll tell ya now. If our swordswoman dies because you chose not to help her, I'll slit your throat myself knowing it'll kill me too.\"\n\n\"Same goes the other way too, cleric,\" interjected the fighter. \"That way, not only do our lives depend on yours, but yours depends on keeping us alive as well.\"\n\n\"Are you threatening\u2014?\"\n\n\"Aye, we are. Normally you go outta your way to not piss off the cleric when you're out like this. It's sad that with your sorry-arsed attitude, we can't be sure you won't let one of us die outta spite,\" said the other woman. \"You keep us alive or we all die together. That's how things work out here beyond the walls.\"\n\nStill seething, the priestess retreated to a rear position. She was extremely perturbed the other two felt that, out of the four of them, she would be the one to not pull her weight. Elden was also quietly chastened by the realization that they were probably right. Despite the power of her spells and her rank in the church, she likely had the least experience. No, after the mage's fight with Galen it was a certainty that she had the least experience.",
        "Ria watched all of this with great interest from her perch atop the head of Kal's mare.\n\n---\n\n\"I'm not sure how well this is going to work,\" said Kal a couple of hours later as he jogged along beside his horse\n\n\"You're wearing your cloak backwards,\" the thief pointed out. \"It looks to me like you're already off to a piss-poor start.\"\n\nThe mage just smiled. Crouching for a moment, his strength rune shone bright red just before he launched himself high into the air, flaring out the cloak and catching the wind coming from the west.\n\n\"Well fuck, I'm jealous now,\" grumbled the thief.\n\n\"Looks like I've been hanging around with the wrong wizards this whole time,\" said the fighter as she watched him soar into the sky. \"Most of the mages I've traveled with woulda thrown out their back tryin' somethin' like that.\"\n\n\"Makes you wonder what kind of deal he made for that power,\" growled Elden. \"He's the youngest wizard I've seen by decades and more powerful than most already.\"\n\n\"Youngest I've seen by decades too. Wonder if he might like to share a tent tonight.\"\n\n\"You heard the knight talk about the blue ogre! You would sleep with him knowing he's a monster-fucker?!\" The priestess was nearly shrieking in disbelief.\n\n\"If I spent all my time worried about where my lovers had their dicks before, I'd never get laid.\"\n\n\"Not all lands are like the ones around your precious city,\" said the thief. \"Monster girl brothels aren't unheard of in cities far, far east of here. As for my personal opinion, when I was younger I spent a week in a harpy's nest. I must admit it was a lot of fun. She treated me like a king and if my cock wasn't in my pants, it was in her. If I had a way to cook my food and sitting in her nest day in and day out wasn't so damn boring, I might still be there. No, I don't have any problem with him being a monster-fucker.\"\n\n\"You all are disgusting,\" Elden sneered.\n\n\"No, we live in the real world. Unlike you, who lives behind your glistening white walls, protected from the outside world.\"\n\n\"The Goddess tells us that the monster girls are abominations that need to be eradicated. Here you are willingly giving them your seed so they can make more.\"\n\nThe thief shrugged, \"My balls were empty. Good enough for me.\"\n\nSmiling at the look of horror on the priestess' face, the swordswoman chimed in. \"Since they aren't trying to fuck me all the time I've talked with a few over the years. Not sure what all of this abomination nonsense is about. Aside from going stupid when a man comes around, they seem like good folk in general.\"\n\nShe looked up. \"As far as flyboy up there, I like men who can give me a good ride. If what he said is true, that he willingly messed around with an ogre and lived to tell the tale, I'm more than a little curious what a night with him might be like. Gotta say though, I'd love to take a tumble with that knight he fought earlier. As a lover of the sword, skills like that make me moist.\"\n\n\"You're a bitch,\" said the thief. \"Now I'm going to be thinking about your wet pussy for the rest of the day.\"\n\nThe fighter laughed. \"Sorry mate, maybe you can ask his little friend over there for some relief,\" she said nodding toward the glowing sprite still riding Kal's horse.\n\n\"Sorry, only Kal gets to do that,\" said Ria.\n\nAll three of them turned to stare at her. The fighter had meant it as a joke.\n\n\"Don't give me that look! I can make myself bigger!\" Her voice fell, \"Something weird happened the last time, so I don't know if we are going to do it again anytime soon. I don't want to take the chance that I might be hurting him somehow. Besides, even if I couldn't grow big, my body stretches, just like a real sprite.\"\n\nThe thief glanced up at the mage, who was little more than a speck in the sky, then back at the sprite. \"How the hell are you still here?\"\n\n---\n\nWith the help of his feather fall rune, Kal climbed into the sky while the oncoming wind continued to push him east, back toward Lantaris. To counteract this, he cut power to the featherfall rune and dove back toward his party. When he got close enough to the ground he angled himself up, powered the rune, and began climbing again.\n\nUnfortunately, there was nothing to see, just an ocean of yellow grass stretching all the way to the horizon. He imagined this area would be beautiful to visit during the spring and summer when all the grass was green and wildflowers were sprouting everywhere. He caught some movement off to the south, but it turned out to be a small herd of deer on their way to warmer and more plentiful climes.\n\nWhen he had burned through a crystal and a half of power feeding the painfully inefficient featherfall rune, he finally dropped down and landed a good distance in front of the other three. By the time they reached him, he had his cloak on properly and vaulted up into his horse's saddle as the mare passed by.\n\n\"Nothing of interest?\" asked the thief.\n\n\"Unless you find grass extremely exciting, no.\"\n\n\"You sound disappointed.\"\n\n\"I think I am. This has to be about the most boring place I've ever been. With a name like, 'The Death Plains,' I think I expected more danger and less grass. Maybe a couple of lakes filled with black, bubbling goo and gouts of flame erupting from the ground.\"\n\nThe thief laughed. \"I've been to places like that. Not in them, mind you, but seen and smelled them from afar. I'm perfectly happy with staring at grass for a couple of days over dealing with that. The stench alone is enough to make you choke\" Glancing downward, he sighed, \"Going to be a cold night without any fire.\"\n\n\"Why can't we have a fire?\" asked Kal. He looked around for a moment before realizing what the thief meant. \"Oh.\"\n\n\"Aye. No campfires when your bed is sitting on tinder,\" called out the fighter from up ahead.\n\nKal shrugged. \"I have a spell that will help. I can cast it on you all as well.\"\n\n\"I've a better idea for how ya can keep me warm tonight,\" she said, looking back at him over her shoulder. \"Your little friend has been bragging on ya.\"\n\nKal looked forward to see Ria in her spot on the mare's head, or at least most of her. The sprite's face all the way down to her breasts was transparent with embarrassment.\n\n\"How much?\"\n\n\"Probably too much,\" replied the sprite. \"Enough that if it weren't for your oaths of secrecy she would probably have you strung up,\" she said, indicating the priestess whose face was red with barely contained hatred. \"As it is, I was getting a little carried away knowing that she was hearing all of this but can't do anything about it.\"\n\n\"How many of those demon spawn did you create in exchange for your power?!\" yelled Elden, unable to contain herself any longer.\n\n\"Demon spawn?\" Kal was genuinely confused for a moment. He hadn't had sex with any demons and didn't really plan on it. \"Ah, that's right. The clergy think that monster girls are demonic in origin. I'm sorry to inform you, but the church has been lying to you. Monster girls have nothing to do with demons and none of my children are demon spawn. I'll let you cast a lie detection spell and say it again if you like.\"\n\nElden waved off the challenge, \"You must have made some kind of demonic contract to have powers like yours at such a young age!\"\n\n\"I was born this way. My mother was barren and contacted a magic-user for a potion that would give her a child. The mage modified the potion trying to make it safer for my mother and father. The result is my affinity for magic. No contracts. No demons.\"\n\nThe priestess ground her teeth together. His explanation made an annoying amount of sense. She had the impression that if she accepted his earlier challenge and made him repeat everything, she would find he was telling the truth. With a growl of frustration, she directed her horse off to the side so she would no longer have to listen to the conversation.\n\n---\n\nThey did end up having a campfire that night. Kal discovered that he could turn his staff into a scythe, though it was unwieldly without the curves or extra handles. He used it to clear a large area in the tall grass for them to make camp. When everything he had cut was piled off to one side, they did a controlled burn starting where the fire would be and only going out to where they set their tents up. Kal then used his cloak as a giant fan and, with the help of his strength rune, blew the ash away.\n\nIt wouldn't have happened at all if Ria hadn't reminded Kal that he had a large amount of firewood stored away for rare situations like this where he didn't have his tent. It was strange thinking that it had been nearly a year since he split the logs they were about to burn.\n\nKal had picked up a simple tent at the market that was little more than a sheet of canvas draped over ropes and sticks. The thief's and fighter's were much the same. The priestess's tent was quite a bit larger. The material was thinner than canvas and she just threw the rolled-up tent on the ground and stepped back before speaking a command word. As it began to assemble itself, Kal thought for a moment it might be like his, but quickly saw that the inside was empty and the proper size for its outer dimensions. The finished tent was roughly square and could probably fit another two people beyond those in their party. The canvas floor was a nice touch, Kal had been poked in the legs and knees numerous times by stiff pieces of leftover grass while pitching his tent.\n\nThe thief, Kedder, and the swordswoman, Falma, both took Kal up on his offer for the acclimation spell. Elden just dug a heavy fur-lined cloak out of one of her saddlebags and wrapped up in it once the sun went down. Kal was quite surprised that the priestess didn't have a similar spell. He would have been more surprised had he known that the woman actually did have access to a spell of that nature but used it so rarely she forgot the pattern.\n\nThe men got an extra treat when Falma stripped down to her pants. The curves of the large woman's chest were mostly hidden by her armor and it was nice to see that her breasts were of comparable size to the rest of her. When she emerged from her tent bare-chested, Kedder grumbled about needing to wander off into the grass later and rub one out.\n\n\"Why not just peddle your wares at a whorehouse if you are going to walk around half naked,\" the priestess huffed.\n\n\"Even studded leather is still heavy. Quit whining 'cause I want to take a load off and feel the air on my skin. Ya wouldn't be bitchin' if I was some handsome barbarian or knight sittin' here without a shirt.\"\n\n\"You may want to be careful who you snap at about their choice of clothing,\" said Kal. \"Considering what you were wearing when we first met, you've little room to talk, priestess.\"\n\nElden snarled in his direction and stood to go back to her tent.\n\n\"Sit back down, cleric. We need to talk, all of us,\" said the swordswoman.\n\n\"About what,\" growled the priestess.\n\n\"You, us, and what's going to happen tomorrow.\" She turned to Kal, \"What do you know of the priestess?\"\n\n\"Not much, I was just referred to her because she needed help and was looking for those from outside the city. She has access to a map I need, so I offered my services in exchange.\"\n\n\"You?\" Falma asked Kedder.\n\nThe thief gave her a questioning look. \"You were there, she was looking for out-of-towners and we were the only experienced adventurers.\" He leaned toward Kal and pointed toward the fighter, \"She was in there 'cause a gent wouldn't take no for an answer and she stabbed him.\"\n\n\"And his friends were determined to see me swinging from the gallows. My point is that we both owe her our lives and mage-boy here needs something she has. More importantly, I've been in groups like this before and if we can't at least figure out how to tolerate one another we are going to end up dead.\" Her voice dropped, \"I've seen it happen before.\"\n\n\"Fair enough,\" said Kedder. \"I have too.\"\n\n\"What do you suggest?\" asked Kal.\n\n\"The priestess has the largest tent. I think we should all sleep in there tonight.\"\n\nElden bristled, \"Why would I\u2014\"\n\n\"Because it shows each of us the lives we are responsible for at their most vulnerable and all in one place. It also reminds us that we are a part of the group, not outside or above it.\"\n\nThe priestess's need to be in control warred with her desire to be accepted, something she never gave much thought to until the thief's comments about spike traps and falling ceilings. She was beginning to get the impression that this was why the head abbot of her cathedral forbade her from bringing along her assistant or any kind of entourage. \"Fine,\" she snapped, then pointed at Kal, \"but he doesn't sleep next to me.\"\n\n\"No worries, cleric. If the mage is that hard up I'm sure I can distract him with something a bit more willing.\"\n\n\"Not in my tent you won't!\"\n\nFalma grinned at Kal, \"Well damn.\"\n\n---\n\nSince Falma had taken up the role of party leader, she took first watch, followed by Kal, then Elden, and finally Kedder. Kal mentioned that Ria was resting so there would be no need for the humans to set watch, she could take care of the entire night. The swordswoman rejected the idea, saying that it defeated the purpose of them being under one roof and guarding the others while they slept. The sprite was welcome to keep them company, as it was often difficult to stay awake in such a boring land, but not take over the watch from them.\n\nDespite all of the fighter's innuendo, she and Kal didn't actually do anything together that night. Though he was treated to a nice show as she took full advantage of the acclimation spell and stripped naked before climbing into her bedroll. She certainly wasn't shy about her body. The red, glowing eyes threw him off as he woke up until he remembered casting the spell that gave them to her. While not nearly as tall as the oni, the large muscular woman with glowing eyes did bring back a few memories. Especially as she preened and showed off a bit for the mage before going to sleep.\n\nKal came up with an idea earlier in the day for a \"party mode\" for Ria and discussed it at length with the sprite during his shift. The concept was largely based on his ability to give others permission to use the bag of holding and determine what those people had access to. It consisted of individual partitions the other three could use at will, as well as a communal section that anyone could store things in. He figured it might be handy in case they ran across a dirt pile like where Kal and Ikuno found Ria and just needed to grab the whole thing in one go. It also offered a place for others to store someone else's items. If one of them were knocked out, Ria could pick up their stuff so they wouldn't need to worry about losing anything.\n\nAt the end of his shift, he went to wake the priestess. Resisting the urge to kick her foot, he instead reached down and shook her gently before retreating back outside to give her some privacy. Much like the priestess, he was beginning to understand that this trip was very different from most of his previous adventures.\n\nHe'd had to ask Falma earlier about the different sizes of military units since Elden had said a regiment was lost out on the plains, but the soldier had said his son was in a company. It wasn't a topic he had run across, or was likely to run across, in his collection of books. The fighter assured him that it was most likely a company since that would only be a few dozen where a regiment would number in the thousands. She then went on to grumble about people knowing what they were talking about before opening their mouths. Kal decided not to point out that up until a few seconds ago he was just as ignorant as the priestess. To him, 'regiment' sounded like a group of soldiers while 'company' was someone you invited over for dinner.\n\nA few dozen cavalry going missing was far better than losing thousands, but anything that could take out that many soldiers must be extremely dangerous. While sad for the soldier who lost his son, he was relieved they were only there for reconnaissance and not rescue.\n\nBleary-eyed, the priestess stepped out into the crisp night air. Tapping a gem on a thin gold bracelet, her eyes lit up with a dull red glow as the world around her appeared to brighten.\n\n\"You have the watch,\" said the mage, though it was nearly unintelligible with him yawning at the same time.\n\nElden nodded in understanding and looked on as he made his way into her tent. Part of her loathed to admit it, but the fighter's idea seemed to be working. With them sleeping in her tent it brought to light that they were members of her party and were depending on her to keep them safe. It was almost like having chi\u2014\n\nNo. No. Absolutely not. She was not letting her mind go in that direction. She had too many ambitions before she started thinking along those lines. Once she was running the cathedral then maybe, but not right now.\n\n\"Everything alright?\" asked the mage's sprite.\n\nElden couldn't fault the little avatar's concern; she was sure her thoughts had been painted all over her face. \"I'm fine. Since we are out here for the next few hours would you care if I asked you a few questions? I've never conversed with a bag of holding.\"\n\nRia smiled. \"I'll answer what I can. What would you like to know?\"\n\n---\n\nThe idea of letting the group use Ria's abilities received a lukewarm response from the others. They weren't too excited about having any of their items tucked away in a bag of holding that wasn't theirs. Eventually, the security of not needing to worry about dropping something important and losing it forever won them over.\n\nFalma was fully convinced that her idea failed horribly, the priestess was even worse the next day. No one could even speak in her direction without getting a curt, snarling response.\n\nActually, the opposite was true, the fighter's method had worked extremely well. Elden's preconceived notions were dumped on their face yesterday and she was having a hard time dealing with a very jarring shift in her thinking. This was made worse by the underlying reason for bringing the other three, to act as fodder for whatever killed the cavalry and priests.\n\nAdding to her feelings of guilt was her conversation with the sprite last night. The tiny woman truly loved Kal and attributed her emotions to the unusual glow she had picked up a short time ago. It just made the cleric feel worse for hoping the mage might die so she could claim the sprite's artifact.\n\nHer conversation also strayed into the young wizard's relationships and what she heard last night was turning a few more long-held beliefs on their head. A monster girl willfully giving up her life to save a human seemed preposterous, yet that appears to be what this 'oni' did. The last bastion of the priestess's prejudice took solace in Ria's glowing form. She heard that bag of holding avatars were unable to lie, perhaps this change that made the sprite glow allowed her to get around that. Elden could see how weak the argument was. However, with so many of her beliefs chipped away in such a short time, she needed something to hold on to.\n\nOther than the priestess's foul mood there was little of interest that morning. Fields of yellowing grass weren't very exciting.\n\nKal and Balthus's business back at the outpost put them slightly behind schedule. They were supposed to arrive at the projected whereabouts of the cavalry around midday. but it was a couple of hours after that when Kal landed and said that there was something different about the plains ahead.\n\n\"There are large circles all over, they look to be random,\" reported the mage as he mounted his horse.\n\n\"Nothing moving?\" asked Falma.\n\n\"Not that I could tell. Sorry, but I was a little hesitant to swoop down and look considering how many this thing has killed already.\"\n\n\"Understandable. Let's get a bit closer then find a place to stake the horses. We'll approach the area on foot. No sense in being any louder than necessary.\"",
        "\"I need to be on the ground anyway if I'm looking for traps,\" said Kedder.\n\nFalma nodded then looked back at Elden. \"If we get into trouble you come running and save our asses, alright priestess?\"\n\n\"I know my job,\" snapped the woman. \"What about him?\" she asked, with an aggressive wave in Kal's direction.\n\nFalma looked at the mage and shook her head, smiling. \"This's gotta be the first time I've ever said this to a wizard. You stay close behind 'til we know what we're dealing with. I'll be in front,\" she said, rapping her knuckles against her armor.\n\nKal indicated he understood while taking mental notes on how the swordswoman took charge of the situation. If he was going to be running a small city then these lessons in leadership would come in handy.\n\nThey rode for a while longer then dismounted and left the horses behind. Kal used his strength rune to sink a metal stake into the ground that had small dull hooks sticking out on either side of the top. The shape prevented the animal from slipping the rope up and over by accident and it was short enough a good tug from the horses could pull it up if the animals were attacked. A handle on the top made it easy for one of the riders to pull it out and quickly release the horses in the event they needed to escape. They each tied a loop in the end of their mount's lead rope and tossed it over the stake.\n\nThe party slowly crept toward the nearest of the circles with their weapons at the ready. Falma unsheathed her sword and held it in front of her. Kal noticed that she could easily hold the large blade one-handed. When she saw his confused look, she pointed at her belt and curled her arm as if showing off her muscles.\n\nKedder had a beautifully crafted dagger and was idly tossing and flipping it in one hand. His attention was more focused on the ground and a ring on his other hand which he mentioned earlier helped him find traps more easily, especially magical ones. Elden sported a staff identical to the one Elta used except hers had a depression for her thumb instead of an actual button. Kal thought it was odd that she didn't have something more impressive until he realized that there probably wasn't a huge difference in hers and Elta's positions as far as the church hierarchy. Admittedly, being an Abbess at a cathedral in a large city came with a lot more bragging rights than a small town church that didn't even have a proper building yet.\n\nAs they got closer, they could see the circle was a shallow mound that barely reached above the tall grass. At it's top was a small boulder. They crept up to the edge, wary of an ambush. The swordswoman and thief shared a look just before the thief took a small throwing knife out of its sheath and flung it at the mound.\n\nNothing happened besides the knife returning to Kedder's hand a few seconds later.\n\nFalma brushed aside some of the reddish-brown material comprising the mound. \"Sand?\"\n\nSomething tripped in Kal's head, circular piles of sand with tiny rocks nearby used to seal the hole beneath.\n\n\"Ants,\" said the mage.\n\nThe thief looked around for a second before agreeing. \"That explains taking out and entire cavalry comp\u2014\"\n\nHe was interrupted by a shriek from behind them. Kal, Kedder, and Falma turned to see a hole where the priestess had been standing only seconds before.\n\n\"Fuck!\" yelled the fighter, running over with the other two close behind.\n\nThe blood-curdling scream of pain that came back up the hole was unlike anything Kal had heard before.\n\nThe fighter and thief looked at each other, terror etched on their faces.\n\n\"We're still here so she isn't dead yet,\" said Falma.\n\n\"We may as well go after her. Either the bugs kill us, or we die when she does.\" Kedder turned to Kal. \"If you sit this one out I won't blame you.\"\n\n\"I'm in.\"\n\nThe thief smiled. \"Good to hear. Get us out of this and maybe fighter girl here will give you a piece of ass on the way back,\" he said before jumping down the hole.\n\n\"That jerk,\" said Falma as she sheathed her sword and unhooked the scabbard. Holding it in front of her, she sat on the edge of the opening and looked up at Kal, \"He's not wrong though.\" Smiling, she pushed off and disappeared into the darkness below.\n\nKal pointed at the staff lying on the ground by his feet. \"Ria, store that please.\"\n\nWas he doing this for the map?\n\nNo, he was doing this because it was the right thing to do and saving the priestess meant saving the other two as well. Taking a deep breath, he jumped down after them."
    ],
    "authorname": "BluDraygn",
    "tags": [
        "fantasy",
        "magic",
        "monstergirl",
        "nudity",
        "sfts",
        "trc",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/trc-searching-for-the-sky-ch-22"
}