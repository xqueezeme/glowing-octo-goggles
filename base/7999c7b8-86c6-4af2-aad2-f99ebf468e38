{
    "title": "Bigger Down There Ch. 06",
    "pages": [
        "Thanks to all of you who have commented, favourited and been in touch with feedback on the previous chapters. I am energised by how many of you are aroused by the same things that preoccupy me. If you have not read one or two of the earlier chapters, they may help in putting this one into perspective. \n\n***** \n\nSo to re-cap, I found myself in our lounge gazing at Louisa's almost shockingly huge but stunning cleft. She wasn't shaved, but her whole pubic area had a light stubble and it was evident that if she did not shave, she would be abnormally hairy gauging by the area that the stubble extended across. \n\nIt was difficult to see how her droopy, hanging lips would ever be closed up, and her somewhat unusually long slit was embellished with an impressive looking clit. \n\nShe had said without any embarrassment that she was very bisexual, would get pleasure from my pleasure, and that I should feel free to explore her. \n\nThe trouble was, I didn't quite know where to start, or even how best to take advantage of what I was being offered. In the end, Louisa took my hand and encouraged me to feel her up. I had not experienced anything like this before (even in my most sordid dreams), and as a result, I was slightly tentative. \n\nThe most immediately noticeable thing was that when I started to explore with my fingers, the digits slid into her even though at that early stage, I was only intending to savour her labia flaps. There was simply no resistance of any kind, and that in turn lead to the second most noticeable thing. I realised with a mild shock, that with my fingers in their vertical position, I couldn't actually feel the other side of her cuntal passage with the back side of my hand. \n\nI glanced up, and Louisa's eyes were glowing. \"Do you like?\" she asked. \n\nH'mmm, I pondered. \"There has to be a better word than 'like'\" \"Awesome is an overused word,\" I think I said, \"but what you have is awesome.\" \n\n\"Perhaps you'd like me in a better position,\" Louisa said, and gently lowered herself to lying position on the carpet, but with her knees up and her legs fully stretched. \n\nThis had the effect of widening her outstanding gash even further, and to add to the spectacle, Louisa used her left hand to pull her lips upwards and emphasising the sheer size of her vast hole. \n\nI knelt down to get a better look and take it all in. The vision before me was breath-taking. \n\nFor reasons I am not quite sure of, when I went upstairs to get changed, I had slipped on one of my usual oversize tee-shirts, but had left my Sloggi's on which was unusual for me. I was beginning to wish that I hadn't left them on. \n\nI could feel that the crotch of my cotton panties was past being just soaked, and the juice that was seeping from my cunt was making the gusset cling across my engorged lips. Louisa was therefore getting an unimpaired view and could see the outline and shape of my entire pubic area despite me still wearing the panties. \n\n\"I think it would be better if you just took those off, wouldn't it?\" Louisa questioned. \"Come on, let me see what you've got.\" \n\nI was about to take hold of the waistband of my Sloggi's when I suddenly felt them being pulled down, obviously by Helen. \"Fuck, you're wet darling'\" Helen said, sliding the flat of her hand across my gunk coated bits. \n\nI had to get into a slightly awkward position to enable Helen to get the panties past my knees and over my feet, but once she had accomplished that, instead of discarding my underwear, Helen held the panties up, pulling out the crotch and taking it into her mouth. \"A lot wetter than usual,\" Helen grinned, and she was right. I was as turned on as fuck. \n\nLouisa didn't waste any time. She folded herself into a sitting position so that she could get access to my oozing slot. Her fingers not only felt different to Helen's, but she used them differently as well. She kept up a running commentary as she fingers me. \n\n\"Oh, you're doing very nicely for such a young lady.\" \"Nice and loose.\" \"Beautiful lips.\" \"Pull yourself open for me.\" \n\n\"What do you think?\" Helen asked, apparently to Louisa. \"Is she going to be able to get like us?\" \n\n\"Well she's staring from a good place,\" Louisa replied. \"She's already quite loose, bigger than me when I was around her age.\" \n\n\"I said the same,\" Helen continued, \"bigger than me at her age as well, and we're working to get her bigger.\" \"That's what you want isn't it my cunty little pet?\" \n\nI couldn't really answer, so I sort of moaned \"M'mmm, you know it is. You just need to keep working on me, I wanna be like you two.\" \n\n\"Come here to me,\" Louisa beckoned. She took both my wrists and made it obvious where she wanted them. Helen's big down there, but my hands weren't remotely close to filling up Louisa. She motioned to Helen. \n\n\"Hand\" she stated. Slide it between Sam's. \n\nOh fuck! I couldn't believe she was going to do this. Helen came and knelt to my side, and worked her hand to position it in between the flats of my two hands. I widened the small gap between my hands to give her room, and without much effort, there were suddenly three hands in Louisa's super slack cunt. \n\nIf either of them would have touched me at that point, I am sure I would have squirted. One side of my brain desperately wanted that, but the other side was telling me to prolong it. It was early, and I didn't want to have what would have been a colossal orgasm this early into the evening. I had to fight it. \n\nLouisa had hold of my wrists, assisting the progress of our hands backwards and forwards into her sloppy twat. \n\n\"How do I feel?\" Louisa asked. I liked Louisa's voice. She had a deep, but quietly appealing voice, and the little lilt of her accent added to the undertone of what we were doing. \n\n\"Fucking amazing,\" was about all I could come up with. \"I love how fucking huge and stretched out you are.\" \n\n\"Actually, with the right kind of attention, I can get bigger. My husband loves testing my limits, and I never stop him.\" \n\n\"Does . . , does he put his cock in you?\" I asked with a degree of uncertainty, not being quite sure of where I was going with this. \n\n\"He does, replied Louisa, but I don't really feel it, and that's what he loves. It takes him a very long time to cum, because there is not much friction for him.\" \n\n\"Actually, he comes the most after a long stretching session, when he can get his hand in me round his cock.\" \n\nI think I came even closer to squirting. Although I would probably define myself as exclusively lesbian, the thought, and especially the vision of that in my mind was quite something. \n\n\"I've had two cocks in me several times, and there have been a few nights at our club where I have been repeatedly fist fucked by several men, two hands at a time.\" \n\nIt was almost as if Louisa was trying to get me to cum early. \"Helen, please touch my cunt,\" I pleaded. \"Not hard, just stroke me.\" \n\nI didn't know what I wanted, or when, where or how I wanted to cum. All I knew that I was about as slippery as I had ever been, and Louisa's revelations were adding to the juice that was unloading itself from the confines of my dripping cunt. \n\nI heard Louisa ask Helen if she could reach her bag. Helen moved and reached behind one of our armchairs, and pulled out a dark tan leather bag. \n\nLouisa suggested that Helen opened it up so that we could \"have a look.\" \n\nThe toys in that bag were some of the biggest I have ever seen, before or since, and among them were two speculums, one made out of stainless steel, and the other out of a clear plastic or acrylic material, the metal one being the slightly larger of the two. \n\nI know what speculums are of course (being a student nurse helps with that sort of thing!), but these were somewhat larger than the ones I had seen in training. I think Louisa must have seen my eyes come to rest on the two of them that had emerged from the bag. \n\n\"Would you like to use one of these on me?\" Louisa asked. I think I just nodded, as I don't recall any words coming out. \n\nHelen took the initiative, and took the metal one and started winding the adjustment screw. Once she got it opened up to a size that I doubt I could have taken, she started to ease it into Louisa's already gaping hole. \n\nAfter a good five minutes of adjustment (it took some time because it kept slipping out of Louisa's cavernous cunt due to her size and wetness), Helen had the speculum in place. For me, it was absolutely mesmerising. Helen was at Louisa's side by now and I could see Louisa was doing her level best, and succeeding at working her hand into Helen's slutty opening. \n\nLouisa's slot with the speculum fully expanded was blowing my mind. I sort of played at first, putting my hand in and withdrawing it without touching her at all. She encouraged me to use both hands, not that this made much of a difference. When I was using one hand, the thing that shocked me the most was how much she could take. I was easily past my wrist (although I would admit that to do that, my fingers had to be bunched into a fist) but the sensation of emptiness was out of this world. \n\nLouisa asked me to move back a bit, and gesticulated to Helen to get where she wanted her. Louisa moved herself to a position where her cunt, still with the speculum in place, was pointing upwards as a result of her being on her back with her knees ben and ankles well back. \n\nBy now, Helen was standing / kneeling directly above Louisa's widely stretched gash, and I could tell by the way Helen's tummy was getting taut, what she was going to do. \n\nWatching Helen piss into Louisa's hole had me frozen to the spot. Once she was done she moved back a little, and beckoned me to kneel in front of Helen. \n\n\"Put your hand in,\" I heard Helen say. \n\nI did exactly that, immersing my hand into her puddle like cunt. The wee sloshed out past my wrist, and that was enough to get push me over the edge. There was nothing I could do to stop an orgasm that felt like a tidal wave, and it was the first time that I had cum without touching or being touched. \n\nThe floor was a complete mess, but Helen wasn't done. She took my place and inserted her hands, back to back into Louisa's wonderful orifice. It meant that her finger tips were stroking Louisa's cunt walls, and it looked like it wasn't the first time they had tried this. \n\nEven though I was supersensitive following my unintended orgasm, it didn't take too much to bring me crashing to another one, albeit, smaller than the first. \n\nLouisa was clearly enjoying what Helen was doing to her, and encouraging her with some outrageous and very graphic words. \n\n\"Fuck my big hole you dirty girl. And you Andrea. Watch what Helen is doing to my filthy fuck box. Go on, do it, and bring me off.\" \n\n\"Is this what you want, a filthy big hole like mine?\" she continued, looking right at me. \n\n\"Fuck yes,\" I responded. \"And I want you to tell me how you got that big before you go home tonight.\" \n\nDid I just say that??? I was acutely aware that I was getting into the depths of another world with all this, and whilst the changes of the last few months had been unforeseen, I was getting increasingly comfortable with that other world. I loved the depravity of what we were doing, and moreover, at the back of my mind, an idea was beginning to form. \n\nIt wasn't that I was trying to rationalise my thoughts. I could live with what I was becoming, but I was wondering if I might be up for the next step, and I sort of knew what I wanted that to be. Might I be able to pluck up the courage to find out more about the fetish club that Louisa had spoken about, and more importantly, what would be Helen's mind-set be if I suggested going there. \n\nThat might have to be a conversation for another night when Helen and I were on our own, but for now, I had other questions. \n\nWe re-grouped a bit, but Louisa was clearly had a strong exhibitionist streak. Helen and I were back on the sofa following something of a clean-up, whereas Louisa was leaning back against the front of the armchair with her knees up, feet on the carpet which was giving us an uninterrupted view of her spectacular, and very sloppy looking cunt. \n\n\"Ask away,\" Louisa volunteered. \n\n\"Okay, Urrm, how long has it taken you to get so huge, and what caused you to start stretching?\" \n\n\"Ah, it's been a long and very satisfying journey,\" she replied. \"What got me started is that when I was much younger, I had an aunt who had a pool. I used to go there in the summer after school to swim, but you know in Austria, we are much less inhibited than here. My aunt used to sunbathe and swim naked, and I could never take my eyes from between her legs.\" \n\n\"She was very big with meaty lips, and I so wanted to be like her. I vowed that as soon as I could be somewhere on my own, I was going to get myself to be like her. Her whole pubic area was a work of art. Big fleshy labia, and what I now know to be a well fucked and used hole.\" \n\n\"I spent whole evenings in my room finding bigger and bigger things to put in me. By the time I stared University I was already into some pretty extreme things, and I didn't care if I wrecked my hole for fucking purposes in the process.\" \n\n\"Ultimately, I decided that I wanted more, and wanted to be pushed, so I started to look for another outlet. There was no internet in those days, and I was at University in Leeds, but with some discreet research and enquires, I learned of two clubs, one in Durham and one in Derby, and I decided to get myself into the one in Durham.\" \n\n\"I actually had to go about three times before I found what I wanted, and on that third visit, I found three men who were prepared to do to me what I craved, which was to be forcibly fist fucked, one after the other. I was helped that there was another, older lady there who was into much the same thing, and it turned out that that the man I had coerced into fisting me was her partner.\" \n\n\"I had many good nights there, and it was that lady that initiated me into bisexuality, and I have never looked back. By the time I finished University and got my first job in a hospital, I was pretty big, and I didn't really care whether I hooked up with a man or a woman and long as they respected my will to keep loosening my cunt.\" \n\n\"I eventually found a better fetish club in London where I met Will, who was into stretching even more than me, and the rest as they say, is history.\" \n\nAt the end of that potted history, she surprised me by saying \"Actually, you've been pretty gentle with me so far. I was expecting you to be more forceful with me. You can tell me to do pretty much what you want.\" \n\nThis took me aback a little bit, and I didn't quite know how to react. As if to embolden me further, she said \"I'm really quite submissive. You should push me further, you know, do some things you haven't done before.\" \n\nI tried to delve into my sub-conscious to think of some of the things which had existed only in my fantasies. As I started to form some ideas, Louisa gave me a look which I couldn't quite describe. \n\n\"Do you know what 'footing' is?\" she asked. \n\nI had a feeling that I did, and although she meant what I thought she did, it was the kind of thing I've only seen on internet porn. \n\n\"You mean like foot fucking?\" I asked almost hesitatingly. \n\n\"Yes,\" replied Louisa with a nod. \n\n\"Could you take it - I mean my foot?\" \n\n\"Try me - I'm pretty confident I could take your little foot quite easily. \n\nI looked across at Helen who was also nodding, as if willing me to do it. \"I'll help,\" she said. \n\nHelen took my hand to coax me the few feet across the carpet where Louisa was still sitting with her back to the front of the chair. She reached into Louisa's bag and produced a bottle of baby oil. \n\nLouisa shuffled forwards to an almost lying position, and Helen placed me roughly in front of Louisa, who by now had her legs outstretched, and was gently fisting herself as if in an effort to loosen her powerfully erotic cunt. \n\nI was now sat on the floor with my right foot outstretched, and Helen began the process of oiling my foot up to an around my ankle. I was thrillingly aroused and there was a high presence of a sexual energy in the room. \n\nLouisa extracted her hand from her dripping hole, and using the fingers of both hands, pulled her cunt open to form an indecently wide, dripping wet orifice. \n\nHelen shaped my foot and ankle into a ballet like posture, as if I was on point, but horizontally rather than vertically and after a little foreplay that consisted of a light prodding of Louisa's labia with the tips of my toes, carefully helped me commence the process of inserting my toes. She started with my big toe at the lowermost part of Louisa's gaping slot, and then using one hand to tease Louisa's outstanding clit, used the other to ensure my foot was snugly inserted to the point where my toes were in, but not quite to the ball of my foot. \n\nLouisa started verbalising some encouragement. \"Come on Andrea, work it into me you dirty girl.\" \"What do you think you're doing forcing your foot into my slack old cunt. You're really are a filthy one making me take all that.\" \n\nI started pushing harder. If Louisa wanted domineering, I was suddenly prepared to be that person. I pushed my foot in further, and started to move it a little from side to side. \n\n\"Oh, that's heavenly, you're really opening me up. I feel so full. Go on, push it right in.\" \n\nUp until now, whilst I had always enjoyed some reasonably extreme practices, and lots of graphic talk, I wouldn't ever say that I had ever perceived myself as either submissive or dominant, or seen the sexual acts that I had been involved in in that light either. But for some reason, I wanted to force myself upon Louisa, and make her take it hard. \n\nI gave my foot a thrust, and she gasped out loud. Helen was kneeling at Louisa's side and had her nipples between her fingers and was squeezing them hard. \n\nLouisa was lapping it up. \"You dirty bitch, making me do this,\" she was almost shouting. \n\nI had got into a rhythm now and with each in and out movement, I was continuing to twist my foot a bit more, and was frankly surprised at how easily Louisa could apparently accommodate me. She was staring to breathe harder, and I knew for sure that she was close to coming. I decided to notch things up a bit. \n\nI pushed further, but without the twisting motion, so that my heel was the only part of me foot that was exposed. I did that twice, or perhaps three times more, and that was enough to bring her to a very loud, and very wet climax. \n\nI could feel the walls of her gargantuan cunt pulsing against my foot, and a filmy layer of her creamy cum had formed itself around my much of my foot. The white-ish coloured goo was leaking profusely from the bottom of her hole, and trickling down to the crack of her ass. \n\n\"Do my ass Helen\" I heard from Louisa, and Helen let go of her nipples which seemed to cause another little spurt of cream to pulsate around my foot which was now only partially in her. \n\nHelen selected a good sized dildo from Louisa's back, and without much in the way of preparation, started to work it into Louisa's anal opening. \n\nI thought it had looked a little 'used' when I saw it earlier, and the ease with which she took the toy made it obvious that Louisa was no stranger to ass play. \n\nHelen didn't waste any time in giving her the full treatment. She rammed the dildo in and out of Louisa's ass with some energy, and was whispering quietly to her. \n\n\"You love this up your butt, don't you? Tell me you want it harder.\" \n\n\"Oh God, you know I do. Make me cum with it. \n\nHelen surprised me with the vigour she put into dildo-ing Louisa's backside, and it took very little time for it to have the desired effect. \n\nI've never seen anybody cum from having their ass fucked before, but it definitely made Louisa cum, and in a big way. It was a noisy orgasm, and this time the slimy creamy coloured mess pumped out of her obscenely distended cunt. ",
        "As she came down, all I could remember was Louisa gasping that she 'fucking needed that'. \n\nWe should have used something on the rug because it really was a mess with large stains and patches of wetness all over it, but for some reason, it was a weird turn-on looking at the mess we had made! \n\nIt was now after midnight, and I for one was completely sated. Louisa was going to have to drive home, so we had tea and coffee as a nightcap rather than anything stronger. We chatted for at least another half hour, with Louisa opening up more about her lifestyle. \n\nI had thought that Helen and I were a bit 'out there', but compared to Louisa we were practically amateurs. She was still a regular visitor to the fetish club that she had found, and whilst not a 'Swinger' in the purest sense of the word, her and Will had a pretty open relationship when it came to indulging in their fetishes, and from the way that she described it, if it involved stretching, there was pretty much nothing she wouldn't do. \n\nHer parting shot as she was getting up to leave was that she hoped we could do this again, and that I should use my imagination a bit more when it came to pleasuring her. \n\nWe said our goodbyes, and at some unearthly hour, Helen and I crawled into bed. I had a lot of questions, but didn't have the energy left to stay awake so they would have to wait. \n\nAs it turned out, with Uni lectures, homework, Helen's shifts and other things, it was the weekend before we really got any quality time together, although we had indulged in some outlets of a sexual nature between our evening with Louisa and now. \n\nOn Saturday morning, Helen rolled over in bed and looked at me. \"I'm so horny, she said. \"How about we don't get up and go downstairs, but stay here for the morning and play.\" \n\nAnd play we did. It was almost as if our session with Louisa had opened doors in our relationship, and over the course of the morning I discovered some new things about Helen. \n\nI was toying with her exquisitely loosened up cunt when we got to talking. I had the four fingers of my right hand comfortably in her slit, but unusually with my thumb at the bottom, rather than the clit end of her box, and my thumb brushed against her anus which provoked an unexpected response. In case I had misinterpreted it, I pulled my fingers out slightly which allowed me to marginally extend my thumb, and so this time I brushed it against her little hole a just a touch more firmly, and let it linger. \n\nHelen stopped talking and sucked in her breath, and there followed an unmistakeably pleasurable moan. \n\nI probed a teeny bit harder. Helen opened her legs presumably to give me better access, and I did the same thing again, and got the same response. I removed my well lubricated fingers from Helen's gooey cunt, and allowed two of my finger tips to tease her ass without the pretence of it being a mistake. \n\nThey had the desired effect. Helen took my wrist, and pushed my fingers harder against the opening of her ass. \n\nI slipped a digit into her hole. She was squirming now and making the right noises, so I slipped in a second finger alongside the first. \n\n\"I didn't know you were into ass play,\" I whispered. \n\n\"I know, I didn't know whether to tell you.\" \n\n\"How long?\" I wanted to know. \n\n\"A long time. A very long time.\" \n\n\"What've you done?\" I asked. \n\n\"Lots,\" she said. \"I hadn't done anything for quite a while, but Louisa made me rediscover it. She's really into working on me there.\" \n\n\"When I saw her cunt the other night, I thought her arse looked a bit big and well used,\" I said. \n\n\"You'd be surprised what she can manage. She's at least as much into anal stretching as she is into cunt stretching, and I sometimes wonder if she's more into it.\" \"The thing is, it's not so restrictive. You'd be amazed at some of the things that I've seen her accommodate.\" \n\n\"And what about you? Your ass doesn't look as used as Louisa's.\" \n\n\"Oh, I can go pretty big,\" Helen replied with a wicked glint to her demeanour, \"and I started when I was quite young.\" \n\n\"Show me,\" I demanded. \n\nHelen got out of bed and went to one of the drawers, emerging with a clear acrylic dildo that was about 9 inches long and something in the order of an inch and a half in diameter. \n\nShe got back on the bed and sat up with her knees up and legs outstretched. She inserted that deliciously sexy looking toy into her cunt to get it slicked up with her juices, before introducing it to her ass. It slipped in without much effort, and she started to move it around. \n\n\"Would you rather I watched, or would you like me to do that for you?\" I asked. \n\nHer response was to let go of it, and as a result it started to slip slowly from her hole. I grasped it with one hand got to work. \n\nAfter about 10-15 minutes, it was going in and out surprisingly readily, and although I thought I already knew the answer, I looked and asked if we needed something bigger. \n\n\"Yes please darling.\" \n\n\"Which one,\" I questioned. \n\nHelen took over temporarily while I went to the drawer, and pulled a couple of larger ones out. \n\n\"Bring both of them,\" she said, and some oil. \n\nIt was wondrously sexy holding the smaller of the two dildo's up in front of Helen and smearing it with the oil, knowing where it was going to be going in a minute or two. \n\nHelen pulled hers out, and I started to probe her opening, teasing her before the main entry. I was very gentle, and after a few minutes, had it fully enclosed in her rear hole. \n\n\"You know we could be here for a long time doing this don't you?\" I heard from Helen. \n\n\"I don't mind. I've got all day, and I am curious to know what you can take.\" \n\n\"As long as you know we won't be getting much else done today,\" Helen asserted. \n\nI have to tell you that over the course of the morning, Helen surprised me with the capacity of her wondrous ass. \n\nAfter about an hour, we had an immensely large dildo in Helen's ass. It had taken quite a lot of lubrication, and a very gradual approach but I was shocked and euphoric at the same time by the spectacle of what we were doing, and at the revelation that Helen had another taboo proclivity that I had not known about. What was even more interesting to me was that Helen was not just enjoying having her rear hole filled, but it seemed to be getting her at least as aroused as having her cunt toyed with, if not more. For my part, I was finding it outrageously carnal to run my fingers around the taut extremity of her ass as it formed a tight rim around the dildo that was now buried inside her. \n\nThere were a lot more satisfying moans coming from her, and not only was she rather more saturated than I was used to seeing her, but her nipples were rock hard and there was a red flush from her neck down. \n\n\"You're seriously into this aren't you,\" I said. It was more a statement than a question. \n\n\"You don't know how much,\" she gasped. \n\n\"Why did you keep it a secret?\" I wanted to know. \n\n\"I wasn't sure how you would feel about it. There's quite a difference between cunt stretching and anal play, and apart from Louisa, I've always kept it to myself. Not even Sam knows.\" \n\n\"Well I know now,\" I said, and you've started to give me some ideas.\" \n\n\"Like what?\" Helen was almost grunting with pleasure. \n\n\"M'mmm, I going to keep them to myself for now, but I've got a few things in mind.\" \n\n\"I'm so glad we discovered each other my beautiful pet,\" Helen sighed. \"No more secrets, I'm going to share everything with you.\" \n\n\"You mean there's more?\" I can't wait to hear!\" \n\nI decided that learning more about Helen took priority over satisfying her ass, so I casually withdrew the oversized implement from her heavily distended backside. \n\nThere was a pornographic gape to her ass that actually made it hard for me to leave alone, but I wanted the details of Helen's other flirtations. \n\nI made us a drink because I wasn't sure that Helen would be able to walk comfortably, and brought the mugs upstairs. \n\nWe were lying facing one another, and I took in her sparkling eyes and appealing features. Helen really is a very sexy lady. \n\n\"Spill,\" I requested. \n\nThere was a pause. \"Well let's see . . . . \" Helen started. \n\n\"Let's forget about the things you already know about, like the stretching and the watersports, Oh, and my ass.\" \"As well as those, I'm into pregnant ladies. I'd sell myself to suck milk from a woman's tits.\" \n\n\"I think you know I love being watched - I'm a real exhibitionist, given half the chance. Androgynous girls, older ladies, rubber, latex, dirty talk, you name it.\" \n\n\"Have you acted on any of these, apart from the things we share in common?\" \n\n\"Perhaps we should accompany Louisa to one of her clubs,\" I suggested very quietly. \n\n\"I wanted to suggest that but wasn't sure how you'd feel.\" \n\nThis prompted a question. \"Or perhaps you've already been to one?\" \n\n\"Not quite. I was going to,\" Helen answered. \"We had a plan, but Louisa ended up having to work and so we had to abandon it, but I'm up for it if you are.\" \n\n\"If you could do anything to me right now, what would you do?\" I asked. \n\n\"Anything?\" \n\n\"Anything,\" I confirmed. \n\n\"You're sure?\" \n\n\"I'm sure . . . . \" \n\n\"Come with me', Helen said, practically pulling me off the bed and taking me by the hand. \n\nI should have guessed what was coming. Helen pushed me into the bathroom and pointed to the bath. \n\n\"In,\" she said. \n\nI climbed in and lay down. I knew for sure that I wanted what Helen was planning to give me. \n\n\"Do it,\" I said. \"Piss on me you dirty woman. All over me, wherever you want.\" \n\nHelen didn't disappoint. It started with a trickle over my tits, then she moved up to shower me lightly over my hair, and then squatted, and gave me the full force over my cunt and clit. \n\n\"Oh darling, you total slut, letting me piss over you like this.\" \n\n\"Give me some more,\" I urged, but sadly, after about 30 or 40 seconds the flow ended. Helen used her hands to make sure I was fully covered in her wetness. \n\n\"Of course, you could choose not to shower straight away,\" Helen suggested. \n\n\"Stand-up,\" she instructed. \n\nI stood up as ordered, and she started licking me. Everywhere. I absolutely loved the depravity of it, and gave her free rein. When she got to my cunt, she gave me the best cunt licking I have ever had. I had to get out of the bath and sit on the toilet seat because I couldn't possibly have managed without falling over if I had allowed her to carry on while I was standing up. \n\nBy now, her tongue was working wonders both in me, and over my clit, which she repeatedly took between her lips, and at the same time her fingers were doing a number on my nipples, pulling, stretching and tweaking. \n\nI have never had such a thorough tongueing, and as my orgasm approached, it was suddenly obvious why Helen had gone so overboard. The effect of her prolonged oral ministrations had the desired results, and as I came, realised that I was going to wet myself. \n\nFar from being mortified, I actually wanted to do it, and instinctively I attempted to push harder to ensure that Helen got the full force of my involuntary spurts of urine into her mouth. It would have been heavily intermingled with my cunt juices and cum, but the excitement of it all was simply sublime. \n\nNow I undoubtedly needed a shower, but happily, I didn't have it on my own. Helen washed me down with loving tenderness, and took the time to bring me back down to earth slowly and sensuously. \n\nSometime later, and standing in the kitchen with Helen naked as usual, and me clad in just a tee-shirt which didn't quite cover my gorgeously contented slit, Helen casually said, \"I'm thinking that perhaps we should redo the bathroom.\" \n\n\"Why, I asked. \"Do you think it needs it?\" \n\n\"It doesn't need it, but a wet room might be quite a nice addition to the household . . . . . \""
    ],
    "authorname": "Andrea_E",
    "tags": [
        "huge cunt",
        "meaty lips",
        "fisting",
        "watersports",
        "stretching",
        "lesbian",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/bigger-down-there-ch-06"
}