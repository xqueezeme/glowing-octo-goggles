{
    "title": "Sophia Pt. 02",
    "pages": [
        "Author's Notes:\n\nSorry it took so long to get Part two submitted. Life just got in the way and it was more work than I expected. I want to thank people for all the praise that I was given for Part one and I hope that this lives up to your expectations. Part Three should have a fair amount of humor and some erotic scenes. Thanks again for your positive feedback on Part one.\n\nSpecial thanks to my new and first ever editor Yellow Peril, he did a whole lot of work on this story, with repairs and some positive additions to the story.\n\nThanks for Reading\n\nCastleStone\n\nDisclaimer: None of this is real and actually right now, you are dreaming this story. So, if it really sucks just wake up.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;\n\nWe packed up and every one exchanged hugs and kisses. Freddie and Kathy surprised Don by kissing him on the lips. I think Kathy even tried to insert her tongue. I was ready to strangle her.\n\nI promised Don's girls that I would invite them back for the ski season.\n\nWe got in our separate cars and started the drive home. Since we were following Don's car to the highway, Megan and Robin could wave back to me every once and awhile. I made a comment under my breath that my friends overheard about how I wanted to ride with Megan and Robin. Kathy and Freddie gleefully suggested that I call Don on his cell and we could switch passengers for awhile. They said that they would be happy to keep Don company. Like, I would trust them alone with Don. Our routes finally diverged on the highway and I finally waved goodbye to Megan and Robin.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;\n\nThe weekend had been wonderful. Megan and Robin talked non-stop about what a good time they had. The only thing that made them depressed was that they wouldn't see Maria for a while, which reminded me about the decision for us all to go to therapy together. I didn't feel comfortable with or want to drop the bomb about the therapist right then. I figured that when I eventually did, I would mention that Maria would be going with us and that would probably make things a whole lot easier.\n\nDamn, I had had a great time! They had been the best two days in my life in years. Those women flirting with me was sure good for the old ego! They obviously weren't really serious, but the gesture had been really nice. \n\nThey even got me thinking about dating again. But first I had to get my head straight. I would give my own therapist a call on Monday and arrange an appointment ASAP. I've got to get my rage under control, and suddenly I have the motivation to do it. \n\nThat thought got me feeling guilty, though. My love for my own daughters couldn't motivate me, but four pretty women could. I must be a completely worthless shit! \n\nWe finally got back to my apartment and I made dinner for the girls. I made something that is my own invention, I think. It's similar to lasagna, but I include thick slices of Italian sausage in it too and lots of cheese; my girls love anything with cheese! \n\nDuring dinner I discussed with them my and Maria's concerns about their emotional welfare. I told them how both Maria and I felt that a visit to a therapist might be in order for all of us together. I wanted them to know Maria was involved because they liked and respected her so much. I went on to stress to them how much Maria liked them, and how she had recommended a therapist to me for them. I explained how Maria was even willing to go with us to visit the therapist. Up until that point they looked kind of fearful and almost sick, but when they found out Maria was coming they brightened right up.\n\nThey immediately started pestering me with questions. \"Is Maria staying for dinner?\" I lied and told them yes; I didn't know for sure, but I would beg Maria on my knees if necessary. \"Could they have a movie party?\" I told them only if Maria has the time, and only one movie. They also had to have their homework done before we went to see the therapist if they wanted to have fun with Maria. Their dismayed reaction to that was when I found out they still had homework to do for tomorrow, the little stinkers! They had promised me that everything was done before we left. I had doubted them, but they swore on a Hershey Symphony Milk Chocolate bar that they were telling the truth. In my home that is a solemn oath. So I had to crack the whip on them and get them working. I understood why they had done it, and I really hated to play the bad guy because they had had such a terrific time, but at least they still had this evening to get caught up with their work, and they were darned well going to get caught up or no desserts and no video games for a week. I'm such a mean task master, heh heh.\n\nI got them off to school on time the next morning. They would be heading to Barb's house directly after school and I wouldn't see them again until Wednesday. I gave my own therapist, Dr. Huff, a call and she was delighted that I wanted to work on breaking through my rage issues. She was so excited that she wanted to see me that evening. Awfully smart lady, she seemed always willing to go the extra mile for her patients.\n\nAfter calling her, while driving from one customer site to another, I had time to call Maria to try to talk her into going to therapy with us. \n\n\"Hello Maria, it's Don. Do you have time to talk now?\"\n\n\"Hold on a moment Don, give me a minute&hellip;&hellip;&hellip;&hellip;.. Okay, I'm ready what's up?\"\n\n\"I talked to Megan and Robin about the therapist you suggested. They were pretty nervous at first, until I told them that you were going, too. The thing is, I spied on them last night and I overheard them talking in their room. I know it was a bad thing to do, but I had to. What had them so upset about seeing the therapist was that they thought that you might think they were crazy or something and wouldn't want to be their friend anymore. They really like you, Maria.\"\n\n\"Oh no, those poor kids! Why would they ever think something like that? I really like them, too. I miss them already.\"<br/>\n\n\"I've got a favor to ask. They would really like you to have dinner with us after we all see therapist; I'll make a snack before we go, so we don't get too hungry. You are still going to go with us, you haven't changed your mind, have you? \n\n\"No, I said I would go with you and I will, don't worry.\"\n\n\"Then could you, maybe, spend some time with them afterward? We could even have a mini-movie night?\" I said it all in a rush and kept talking rapidly. \"I was also thinking that by that time of night it would be awfully late for you to drive all the way to your home on the other side of town. I've got a guest room; I know that they would be thrilled if you spent the night with us. It would be such a big surprise for them. Please, Maria? I'll cook whatever you want for dinner. I am getting on my knees here and begging.\" \n\nKeeping my girls happy was my primary reason for living and, during the dark times it was my only reason. This would be such a huge treat for them, if Maria would only agree.\n\n\"Don, I can definitely spend a late evening with Megan and Robin. I'm not sure about spending the night. Let me get back to you on that. Wait, this is not a no. I just might have some other commitments that keep me from spending the entire night. I'll get back to you soon.\"\n\n\"Thank you so much, Maria, I really appreciate it. Think about what you want for dinner, too. Bye, and thanks, Maria.\"\n\n\"Bye, Don, take care.\"\n\nWell, I got three quarters of my request; that was a whole lot better than nothing.\n\nLater that day, I received an automated email stock alert. That caused me to think back about all the financial problems I had had after my divorce. During that depressing time, I had found it nearly impossible to find a job. I was slightly burned out with programming and I couldn't see starting my own company as a contract programmer. The way my reputation had been trashed, I wasn't certain if I could get any work. I also needed a place to live. For years I had heard that the only way to really make a profit on a small apartment building was to employ yourself as the maintenance man and/or manager of the complex. \n\nIt made sense to me, so I started looking for an apartment building to buy. I was lucky to find a condominium project that was going under in the same school district as my kids. Phase 1 of the build wasn't even complete and they were bankrupt. During talks with the township and county I had ascertained that they would have no objections if I changed it into an apartment project rather than condos.\n\nI made a bid on the uncompleted Phase 1; it included one large building that only had the exterior shell erected. A little of the framing had been done on the inside, but nothing more. The Phase 1 parcel also came with enough land that I could build a second structure if I ever decided it was economically viable to do so.\n\nTo make a long story short, I won the bid. Initially I had to fund everything myself to the tune of almost a million dollars. This included the initial purchase, additional construction costs, and my own salary. Later on, I was able to get financing and was able to pay myself back half of it. I did have to subcontract some of the construction, but I did a lot of the work myself. That together with the very selective purchase of quality materials (I love a good deal), saved me a bundle. A year and a half later I had an apartment building that looked like it cost twice as much and had full occupancy.\n\nIt was at that time that I finally got a job offer for a tech support position, taking care of corporate clients and solving their daily computer and network problems. It was far beneath my skill level and only paid about half my former income, but the hours were light and the stress was nonexistent. My new employers knew that they had struck gold with me, so they tried really hard to keep me happy. \n\nAt the same time my own corporation, MegRob Inc., was paying the apartment loan off from the gross revenues. I was paying myself a salary of just under fifty thousand a year plus bonuses and medical. MegRob provided me with a large apartment at no cost to me. In addition, I got unlimited use of the company vehicles, my SUV and an old pickup truck. \n\nI was very picky about my tenants. I wanted polite people that knew how to use a plunger and what a circuit breaker was. I created a website where they could report problems to me. In an emergency, if they couldn't reach me, they were given the phone number for a local handyman service that I trusted. \n\nI also started trading in the stock market again. I had up to one million in play at any particular time. I wasn't a day trader; I worked on a larger time frame. Of my remaining seven hundred thousand or so in reserve, I had most of that in certificates of deposit. I was ready to risk some of my reserve and had started tracking several promising stocks whose prices were falling. \n\nThe automated email alert that I had just received was for one of the stocks I had been tracking. The stock was down to less than $3.50 per share and I just couldn't understand why. The company had always been a good and stable performer. Their management was making sound and well thought out decisions, if a trifle conservative. I reviewed everything I knew about the company. Their management hadn't changed and didn't look like it was going to change. Their products up until now had always received good reviews. They had new cutting edge products close to release and, most importantly, they had a large cash reserve that was sufficient to weather most financial crises. In my mind there was no way that that particular company could go belly up. The only thing that explained the low stock price was panic. I decided to take a gamble and commit $200,000 of my reserve to buy stock. In a couple of years they should have their stock price back up to between twenty-eight and thirty-two dollars a share, giving me a tenfold return on my money. And, if I blew it, always possible, it still wasn't going to put me in the poor house.\n\nIt was that evening that I went to see Doctor Huff and we started to work through my rages issues. Of course the primary factor causing my rage was how incredibly hurt I actually felt. My ex-wife and sisters had stuck a knife in my heart and twisted it. Well, I started to let it all out for the first time in two and half years. I wasn't a very manly man for almost three hours. Doctor Huff promised to keep it a secret. I also mentioned how I felt badly about being motivated to try to work this rage out of my system by four attractive women instead of by my daughters. She told me that that was utter nonsense. \n\n\"Megan and Robin have kept you alive for almost three years. Don't think about these other four women as being your sole motivation to seek help. Think about them as being the additional motivation that put you over the hump to seek help.\"\n\nEarly Tuesday evening I got a welcome phone call from Maria letting me know that she could spend the night! As for dinner, she said to surprise her. Damn, I owed her big time. I had to come up with a dinner that would knock her socks off.  \n\nOn Wednesday, Megan and Robin let themselves into my apartment after school. When I got home they were hard at work doing their homework, good kids. Maria would be here in about half an hour, so we would have another half hour to snack and then leave for the therapist.\n\nI made some coconut fried chicken wings and a vegetable platter for a snack. Megan and Robin smelled the food and wanted some early, but I told them they had to wait for Maria. I wanted us all to sit down and eat together; I didn't want Maria to get here and find they had already eaten, I was worried that that would make her feel uncomfortable, like she was late and we had to rush for our appointment because of her.\n\nMaria arrived about ten minutes early. Man that woman is FREAKING GORGEOUS. Down boy, she is way out of your league. Megan and Robin ran into her arms, and she clutched them to her like she was their own long lost mother. It was so sweet that it brought tears to my eyes and I had to turn away. It also really sucked. She wasn't their mother and she would one day move on. That day would devastate my girls and me! I told myself to think happy thoughts about the here and now, screw the future and live in the moment.\n\nI busied myself in the kitchen instead of properly greeting Maria, but I just couldn't look at her right now; my eyes were too damn wet. I could hear them chatting in the living room. Finally, I brought the food out to the dining room; my kitchen table was too small to seat all four of us comfortably.\n\nThey fell on it like a pack of starving wolves. They were actually competing with one another to see who could eat the most chicken wings. Not one of them touched the vegetable plate. They were girls, for god's sake! I thought they all liked rabbit food? I was stuck eating the carrot and celery sticks, and they just grinned at me; but my babies were happy. For that I would happily eat kibble.\n\nWhen we drove to the therapist they were chattering away like proverbial birds and it was great. I met the therapist; she seemed like a therapist to me, what do I know? No horns, no tail, and Maria vouched for her. At first the kids went in by themselves. Then the therapist came out and fetched Maria. I was happy to be left out. I had my own demons to let go of; having me be in that room wouldn't be good for my kids or me. Their session lasted for almost an hour, and they all came out of the room looking cheerful and upbeat. Life was good.\n\nOn the way back they wanted to sing. This time they picked the Beatles, good choice. \"Shake it, shake it, shake it, baby now.\" During some of the songs Maria and the girls would be swiveling their hips in their seats, and shaking their heads, making their hair fly about. I had the pleasure of watching Maria do that for half the ride home. My God, did I ever need a very long, very cold shower after that!\n\nWhen we got back home I started dinner. I made a modified version of a Korean dish that I had had years ago. I set the table with all the side dishes; saut&eacute;ed spinach with crushed garlic, spiced bean sprouts, sliced garlic, sliced onion, sliced cucumbers and rice. Then I took thin slices of pork, similar to bacon but not smoked, and fried them up with salt and pepper. \n\nI've got a special grill just for this recipe that I picked up cheap at an Asian market, and it uses butane cartridges. Instead of allowing the grease to build up in the grilling pan, special holes let the grease drain away into a bowl on the side. I was frying up pork, mushrooms, garlic and onions together and all the grease was making one hell of a mess in the kitchen. Normally when I made this particular meal I did it outside, but it was too wet and cold tonight. It was a wonderful meal to eat, simple to make, but terrible on the cook. I felt like I was taking a grease bath and I would have to clean the kitchen floor when I was done.\n\nMegan and Robin showed Maria the proper way to eat it. You take a piece of leaf lettuce, you place a piece of pork on it and then add whatever you want from the side dishes. For the pork I also had dipping dishes of sesame seed oil and soy sauce beside each plate. I liked to add grilled mushrooms, grilled onions and rice the best. Once you're done, you curl it up into a ball and pop it into your mouth, but the greatest thing about this kind of meal is that you can make every ball a little bit different. The trick is to keep the balls small; make them too big and it gets too messy, or you could choke.\n\nThis was one of Megan's and Robin's favorite meals, but they didn't have to cook it or clean up afterwards. Maria seemed to enjoy it too. I don't know how they did it, but they ate almost three pounds of pork, plus the side items. I could see the headlines, \"Three females devour Seattle.\" I told them my joke, and they actually snarled at me. Women just can't seem take a joke these days!\n\nAfter dinner, before they got comfortable, Maria went out to get her overnight bag from her car. When Megan and Robin found out she was staying for the night they went bananas. They hurriedly showed her to the guest room. I had spent a bit of time and money making it extra nice for tonight. I was quite proud of it. \n\nThe bedroom contained the first furniture I'd ever made, except for some cabinets. I had made a queen size bed, a dresser and a nightstand. I had finished the oak furniture only about four weeks ago. If I do say so myself, while everything had simple lines, I thought it all looked great. For the rest of the apartment I had been under time constraints and had to buy from the furniture store. With the guest room I had never expected to ever have a guest so I had decided to try my hand at making furniture for it. I had all the tools, I took my time and it was fun.\n\nThe previous Tuesday evening after Maria's call, I went out and bought new linens for the room. I tried to find something like she used in her bedroom in the mountains. It was expensive, but I found a duvet/comforter set that seemed close. I bought drapes, pillows and sheets, too. Then I stumbled on a print by that Kincaid guy that Maria likes, so I bought that, too. Well, maybe I went looking for the print, so sue me. \n\nI was worried that Maria might get too bored in a plain room, so I purchased a new LCD television and DVD player for it as well. When I installed it I made sure to connect it to my cable service.\n\nMegan and Robin were surprised to see the blankets and television.\n\n\"Daddy when did you get the new blankets and TV for the guest room?\" asked Robin.\n\nI lied, I lied. \"Oh, I got the TV a few weeks ago. But I did buy new blankets and sheets just the other day, they were on sale.\" The trick is to tell part of the truth. There was no way that they could miss the new blankets and sheets.",
        "They all seemed to buy my story, though Maria looked at me strangely. Maybe the Kincaid print and comforter set matching her existing bedroom was overkill?\n\nWe went back to the living room and they watched a movie while I cleaned the kitchen. When I finally had the kitchen degreased I brought them all a piece of lemon meringue pie. They were all cuddled up in their pajamas already and wrapped in blankets. It was another scene so touching that it could have been from a Norman Rockwell painting; I had to close my eyes from the pain in my gut. I knew that the sight before me was a short term dream, nothing that would last. Taking a deep breath, I finished delivering the pie and went to take a shower.\n\nAfter my shower, I caught Maria's eye and she came into the kitchen to talk with me.\n\n\"Megan and Robin seem to be having a wonderful time. Whatever you want to do tonight is okay with me, Maria. They haven't had a lot of good times in their lives lately, so if you want to sneak in an extra movie with them or something else, that's all right. If necessary, I'll call in sick for them tomorrow.\"\n\n\"Okay, Don. I don't know about an extra movie, though. I think they're tired already, but if they want to be bad girls tonight, I'll keep them company,\" Maria answered with a big grin.\n\n\"That sounds wonderful. Well, I'm going to go to bed, then. Goodnight, Maria.\"\n\n\"Goodnight, Don. Maybe the girls and I will all sleep in MY new bedroom.\" Maria gave me a little grin. I didn't like how she said \"MY\", but I was too tired to talk anymore, so I wandered off to my room, saying goodnight to Megan and Robin on the way.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;.......\n\nI was surprised that Megan and Robin wanted me in the room with the therapist. It became like a group session, where all they did was dump. Wow, did I ever hear some nasty stuff &ndash; so bad I had to wonder if any of it could be true? Doctor Ward and I just constantly kept encouraging them to unload. Periodically we would reassure them they had done nothing wrong. Mister Perfect Father had really screwed up by not seeing sooner how desperately they needed to unburden themselves. Of course, Barbara was an even bigger culprit in the crime.\n\nDon made another wonderful meal. It seemed pretty simple at first, compared to his earlier culinary feats. But man oh man, did it grow on you. I can't believe how much I ate!\n\nWhen I sprang my sleepover surprise on the girls they were overjoyed. It really warmed my heart to see how I affected them, but it made me a little sad, too; someday my relationship with them might end and we would all be hurting.\n\nThey showed me the guest bedroom. I was shocked. The duvet set on the bed was almost exactly like mine, and it wasn't cheap stuff. A lot of people buy furniture cheaper than that comforter set. There was even a Kincaid print on the wall. Megan commented that it and the television were new. I didn't know whether to be warmed by this or frightened. Robin explained how her daddy had made all the furniture for this room in his basement workshop. He had kept it all simple, but it all looked beautiful.\n\nDon later made some dumb comments about the comforter set being on sale. Even when that stuff is on sale, it is still too expensive for most people.\n\nWhile Don was cleaning the kitchen, instead of paying attention to the movie I was thinking about the duvet set, picture and television. I really doubted that Don would buy such a nice television just for a guest room. The room was set up as nicely as any of my rooms in my home. Then I repeated that thought. Maybe Don was just trying to give me as comfortable a room as I had given them? That would certainly make sense. He had probably been using his cast off blankets and sheets in the room before. \n\nI bet after my phone call Tuesday he rushed out to buy a new comforter set and had just gone completely overboard! He might have entered an upscale store and not even known how much it would cost, and could have been committed to the purchase before he found out the price. That made even more sense to me. He might be Mister Perfect, but a guy knowing how to shop for a duvet set? No way.\n\nAs for the Kincaid picture, I was kind of touched. Don had seemed to like the ones in my home so Don buying a print for \"my\" bedroom didn't seem so bad. I decided after all my ruminations to be warmed by Don's gesture.\n\nThen, to really warm my heart he brought me a piece of pie. If I could get him trained he might be a keeper.\n\nThat night Don gave me permission to go wild with his girls. We stayed up until eleven watching movies in the living room and gossiping. Then we moved to my new bedroom. Slumber party! We finished off the pie and had some ice cream too. I think we all fell asleep at about one AM. At two, I woke up briefly to turn off the TV and roll Megan away from the edge of the bed.\n\nDon was willing to let the girls play hooky, but I wasn't; if you play, you gotta pay. I had the alarm set for six-thirty. It was tough, but I dragged myself out of the bed and out from under Robin. Then I proceeded to wake Robin, and then tried to wake Megan. In the end Robin and I carried her into the bathroom and stuck her in the shower. Robin was giggling the entire time. When we turned on the cold water I found out that Megan knew several words that a young lady of thirteen shouldn't know. In fact she was so loud that Don heard them too. He let out a roar that brought Megan to her senses and abruptly filled her with fear. Even Robin was frightened.\n\nI opened up the bathroom door and peeked out to look at Don's grim face.\n\n\"Don, everything is fine, we just had a little accident. Sometimes words just pop out.\" I smiled weakly at him. I turned back to look at Megan. She was standing up in the shower completely wide awake and her face was blanched white with fear.\n\n\"But, but she said&hellip;. You heard what she said. Where did she learn words like that? I don't know words like that.\"\n\n\"Don, calm down. Kids hear things nowadays. It can't be helped. Now we've got to get cleaned up, so why don't you make breakfast while we're doing that, okay?\"\n\n\"Okay, but I don't like it. Would you please talk to her about her language? I would be too embarrassed.\" He stomped off to the kitchen to make breakfast. That was a close one; I let out a deep breath.\n\nI turned back to Megan and Robin. They were both breathing sighs of relief, too. \"Megan, that isn't the best language for a young lady to use. I've heard worse, so don't be too worried, but you really need to stop saying things like that.\" I've heard a lot worse. Some of the things that a room full of models would say to each other would shock and scare off a sailor.\n\n\"Where have you heard such language?\"\n\nRobin answered, \"Mom uses it sometimes when she thinks that we're asleep or busy with something. She will only do it for a short time, but she is so loud that we can hear her. We don't hear everything clearly, but we think she is yelling at herself about the divorce.\"\n\nWell, that made sense, and Barbara should be yelled at, too. \"I think we should keep that a secret from your father, okay? If we tell him, then he will probably feel it necessary to confront your mother. So for right now we keep quiet about it. Next week we will bring it up with your therapist, okay?\"\n\nTheir eyes lit up. \"You'll come with us again next week?\"\n\nWell, I seemed to have committed myself. \"If it is okay with you and your father, I would be happy to. Now you two have to get ready for school, so get washing.\" They both fell to, cleaning themselves furiously. I washed my face, then brushed my hair and teeth at the double sink.\n\nI went out to talk with Don. \"Everything is settled. I've spoken with them and they've agreed to talk with Doctor Ward about their language next week.\" Don let out a relieved sigh.\n\nThe girls came out and we all pretended like everything was normal. Don made his normally scrumptious French toast and sausage for breakfast, and then I DROVE MEGAN AND ROBIN TO SCHOOL! I had never driven anyone to school before.\n\nWhen we got there they made it a point to dramatically wave goodbye to me and point me out to all their friends. It made me really sorry that my roadster was a muddy ruin. If I had been driving that car we really could have made an entrance. I just wish I were picking them up after school, too.\n\nThe Wednesday nights at Don's home became a regular routine. We were getting closer to ski season and I was wondering what their plans were for Thanksgiving.\n\nThree weeks before Thanksgiving I finally asked. \"Megan, Robin, what do you normally do for Thanksgiving?\"\n\n\"Well, since the divorce our holidays are really screwed up. For the Thanksgiving holiday Daddy always has us. Then Momma has us from the beginning of Christmas vacation until late Christmas night; we spend that time with Grandpa and Grandma, too. So we're back with Dad late Christmas night and we have a second Christmas on the twenty-sixth. We're with Daddy until we go back to school since Mom is always going to fancy adult parties around New Years. So we stay with Dad then and he feeds us real good.\" Robin answered my question. When she got to the last sentence, boy did her eyes light up. How could Don feed anyone better than he had been doing since I met him?\n\n\"That sounds great. Now how would you all like to come to my home for Thanksgiving this year? Ski season is starting and I've got special arrangements with the lodge.\"\n\nOh, oh, they looked sad. Did they have other plans? Did I wait too long to invite them?\n\nMegan spoke. \"Maria, we were really hoping you could spend Thanksgiving with us, here. Daddy has been mentioning it, but he was worried that he might be imposing on you.\"\n\n\"Well, we can just to go to my home for Thanksgiving dinner, then.\" I looked at them brightly, but they were still looking upset.\n\n\"But, Maria, if we did that then we wouldn't get THE TURKEY.\" Did I just hear the scream of an eagle? I should have figured it had to be something food related with Don involved. How good could a turkey be? I mean turkey is okay once a year, but&hellip;. On the other hand I remembered all of Don's other cooking, maybe he did make one better than normal.\n\n\"What's so good about THE TURKEY?\" Again with the eagles?!\n\n\"He takes a turkey and he injects it with a mixture of butter, pure maple syrup and Drambuie. Then he slow smokes it for hours.\" Megan's eyes had a feverish glow while she replied. Then Robin, with the same look, took up the tale. \"And he has candied yams, homemade cranberry sauce, homemade kielbasa, rolls, dressing, pumpkin pie, cherry pie, pecan pie&hellip;..\" Her voice just trailed off, as she got lost in a vision of food lust.\n\n\"But, why can't he cook it all at my home? He's done plenty of cooking there.\"\n\n\"Because you don't have a smoker, and Daddy's is too big to take with us.\"\n\n\"That does it! Show me this wonder machine of your fathers!\" So they took me out back where Don had a small area with a wooden privacy fence. I took a look at his smoker. It didn't look like much. It was big, but I could easily afford one. \"That thing looks like an oil drum turned into a charcoal grill and it has got a little drum attached to it. Can you use it as a charcoal grill too?\"\n\n\"Daddy uses it like that all the time,\" answered Robin.\n\nWell, that settled that. Don had been complaining that I only had a gas barbecue at my home. It was an almost three thousand dollar stainless steel gas barbecue and he had been saying that it was no good. I would buy one of these things and shut him up. Then my girls and I could go skiing Thanksgiving weekend.\n\n\"Don, I need to talk to you!\"\n\n\"Yes, Maria,\" he answered me quietly, looking at me strangely. Well, I guess I had sounded a bit firm.\n\n\"We are all going to spend Thanksgiving at my home. Robin and Megan are going to go skiing. They have informed me that, in order for you to make Thanksgiving dinner, we need a smoker. Where can I get one?\"\n\n\"Any major home store carries that model and you can order from the internet, but&hellip;\"\n\n\"To the computer, girls.\" Megan and Robin followed me to Don's office and Megan logged me on using her password.\n\nDon followed us in. It was easy; I selected a major home/hardware store close to my home, did a search on the brand name and presto. It was cheap! The web page displayed a long list of accessories that I could buy, too.\n\n\"Don, is that your model?\"\n\n\"Yes, but..\" I clicked on it.\n\n\"They have a list of accessories, here. Do you use a chimney?\"\n\n\"Yes, but I've already got two.\" I selected three.\n\n\"How about a charcoal basket?\"\n\n\"Yes, but, Maria&hellip;.\" I selected three. I saw a bunch of different tongs listed. I didn't even ask Don, I just bought the ones that looked the most useful, and the same for gloves.\n\n\"How about a wireless thermometer?\" Don didn't answer my question; he just was staring at the ceiling. \"Don?\"\n\n\"You don't have to spend all this money, Maria.\"\n\n\"Don, I am not buying this for you. I am buying this for my home, okay?\" He still didn't look like he was buying it, but Megan came to my rescue.\n\n\"Daddy loves those kinds of thermometers and he has two. He says if he didn't have those he would have to sit outside with the smoker all day.\"\n\nThey had two different brands of wireless thermometers, so I bought two of each, and a couple of regular thermometers too.\n\nI read off a list of all the available accessories to Megan. To most of them she said no, but to a few I got a yes. It came time to select the choice of delivery, and I was asked \"Do you want the smoker assembled?\" What a dumb question, of course I wanted it assembled. So, for slightly more than five hundred bucks I had my girls and my guy for Thanksgiving. It was a bargain. I sat back in Don's office chair fully satisfied. Hmmm, this chair seems a little rickety; I'll have to get him a new one sometime. I turned to look at Don. He had a defeated look on his face. That's right, he better learn who is boss here!\n\n\"Maria, I'm going to have to season the smoker before Thanksgiving. What with cleaning and doing it right, that is an all day job. How&hellip;\"\n\nI interrupted him, \"No problem, we will just have to go up the weekend before Thanksgiving, too.\" That got Megan and Robin jumping up and down. I was pleased. \"This weekend, though, I've got to take them shopping for ski equipment.\"\n\n\"Maria..\" I gave him my \"you're pushing it\" look. Wisely, he shut up.\n\nSo on the weekend I took Megan and Robin shopping. I had a blast. Good thing I had bought a big car, because we stuffed that sucker. We came home to a wonderful meal. Don had even made THE PIE. Megan, Robin and I had one of our best movie nights ever. Don kept on coming out acting the aggrieved father, what with all the noise we were making. \"I can't sleep. Blah blah blah.\" Hah, he just enjoyed doing it. He well knew that making his girls feel like they were being slightly naughty just added spice to our evening. He would stomp back to his bedroom and we would stick our tongues out at his back. He caught my eye once and just winked.\n\nIt was a good thing that that weekend was so nice, because Monday sucked. Richard called me to his office. He finally had the complete report on Don. The company with the DOD connections had even enlisted the aid of the FBI. I was shocked, that was a serious invasion of Don's privacy! Richard said not to worry about it because that company, after reading Don's resume and getting the preliminary report, was genuinely interested in hiring him. If it weren't for the slow economy they would have already made him an offer.\n\nI read the report twice, and it took me two whole days. When the private investigators approached his old friends and family for information about Don, explaining that it was for a security clearance, they couldn't say enough good things about him, even his ex-wife and his sisters. It was like everyone was going to confession. They had screwed Don over and they would do anything to help him get a new and better job. The only one who gave Don a bad recommendation was his ex-boss; even the CEO and ex-president of Don's former employer talked favorably about Don.\n\nThe FBI got involved with the judge that handled Don's divorce and pressed her hard about her ruling. They wanted to know just exactly what evidence about Don she was referring to when she did the asset division. Her only excuse was that if Don was innocent why didn't he appeal her ruling? They pointed out the expense and time it took to make an appeal. She abruptly ended the interview and has refused all attempts for another.\n\nEverything about Don is perfect, that man is practically a saint! But with my past, I would be flirting with disaster to get in a romantic relationship with Don. It was time to call in Vanessa, Kathy and Freddie again. That old polishing idea, maybe it wasn't so dumb after all. I really liked Don, and I thought we were slowly working towards something, but with what I learned I figured that unless Don changed we only had a small chance of making it work.\n\nI called my friends and told them of my concerns. Then I had Richard copy the report and send it to them by courier. They needed time to read it and I only had Thursday to talk to them before going to the mountains with Don and my girls.\n\nOn Wednesday I mentioned to Don and my girls the possibility that my friends might be going with us for both weekends. Actually, I think Robin and Megan were a little bit excited about hearing that, and I was curiously a little disappointed. Wasn't I enough for a good time?  But I understood. Don just said that whatever made me happy, made him happy. Now that was sweet and made me feel a whole lot better, but when he found out my romantic/sexual past would he still say such sweet things?\n\nThursday I met with my friends at my condo. I was wondering if they had seen the same things in the report that had worried me. Most of the really important information, as far as I was concerned, had been given in interviews with Don's sisters, but some came from his ex-wife.\n\nFreddie spoke first. \"Can you believe it? Don has never dated or been with any woman but his ex-wife for his entire life?\" Kathy and Vanessa both expressed disbelief, too. \n\nYep, they saw what I saw and immediately understood the reason for my concern. I had been a bit of a party girl back in my old days, and after my divorce was final there was that crazy two months when I had resumed that activity. It wasn't a secret with any of my friends, and if Don and I became attached he would eventually find out about it. To put it bluntly, I was a very experienced woman. \n\nWhat was worse is that he had been seriously deprived sexually, according to his sisters. If I went to bed with him it would be like a college professor sleeping with a freshman high school student.  Damn his wife, instead of having a sexual life with her husband that they could both learn and grow in, she had it with others, leaving him to wither. His ego had to be in the toilet from what I read, and his sexual self confidence must be nonexistent.\n\nHe would have no confidence in a sexual relationship with me. And if we did start dating, when he found out about my past and he experienced my expertise first hand, THAT WOULDN'T BE GOOD! I couldn't even pretend to be a novice with him because of my well known history with all my friends! I really liked him. He could be that guy I grow old with, but right now because of his past and mine, too, there would be too many sexual hang ups.\n\nHis confidence being zero is probably why he hasn't made a pass at me yet. Here I am, a very rich ex-model, and here he is, an ordinary working shmoe whose wife went out to get sexual satisfaction. I'm lucky he didn't hide under the blankets when I came over.",
        "I was even getting close to making a pass at him, and that would have thrown him into a complete panic. Good thing I didn't.\n\nDon seemed to have a good body. In fact, he had a body just slightly less than model quality; it was a lot better than most women are ever likely to bed. Damn his ex-wife.\n\nAnd if I ever get into a permanent relationship with Don, how would I know that he just didn't settle for me rather than want me over all others? It's not like he has dated any other women that he could compare me to.\n\nTalking to my three friends, I explained my thoughts. \"When I first met Don, I thought he was a rusty knight, and that he was just in need of a little bit of polishing. Then I got to know him better and I thought, screw the polishing. I really like Don and I adore his daughters, but his ego and sexual confidence have to be zero. He is Saint Don and I'm the scarlet woman. What do I do? I'm looking for advice here.\"\n\nKathy had taken out her contacts and put on her glasses. She was now in professor mode; she almost had her doctorate in psychology, which I was helping to paying for. She spoke and we paid attention. \"The only thing we can change is Don and his self confidence &ndash; we can't change Maria's background. Let's see what we can do about Don.\"\n\n\"I always like to start with small things and work from there. Frequently when you start with the small parts of a problem, you change the situation and make the hard parts of the problem easier to deal with.\"\n\n\"Let's start first with Don's appearance. He seems to be very fit; he is not chiseled, but still very fit. We want to give him a boost to his ego, so let's start him on an exercise program to really get him in shape. Seeing himself chiseled in the mirror would help with that, and reactions from women when he gets chiseled should help as well. Maria, I think it is time we saw those infamous photos.\" \n\nKathy wasn't showing her sex maniac side, she was showing her professional side. I got the pictures.\n\nFreddie made some suggestive comments, but Kathy and Vanessa stayed cool.\n\nVanessa asked, \"How did he get the scars on his back?\"\n\nFreddie answered, \"Didn't you read that? About five years ago some psycho teenage boy was chasing his girlfriend with a garden rake. Don stepped in the way to shield the girl and got hit in the back.\" \n\nJust like Don, the idiot, to forget his armor.\n\nVanessa replied, \"Oh, wow, I missed that. Let's be frank. He has some wonderful definition of his leg muscles, butt, back and arms but his torso is a sleeper. I know he is very strong, but the definition of his chest and abs is terrible. With the right exercises we can probably change that. I doubt he has ever had a personal trainer, so let's start with getting one for him and since I already work as a trainer in my own gym, I'm confident I can handle the job and shape him up. We will probably have to cut some of the carbs from his diet too. As for his hair, there has got to be something that we can do with it. Anything would look better than what he has now, even a military brush cut.\" We all nodded our heads in agreement.\n\nKathy spoke again. \"I'm not talking about sex here, but what other things is a stud or suave gentleman supposed to know? I'm not talking about romantic behavior. I'm talking about skills or attributes.\"\n\nWell, we discussed Kathy's question at length and came up with a list. Item one was to be a good dancer. We knew from interviews with his sisters and ex-wife that Don had wanted to take lessons with Barbara, but she had always refused, so we assumed that Don wasn't a good dancer. It would fall to me to teach him. \n\nItem two, be able to fix a car. We all laughed about that one. Don could probably fix a 747. \n\nItem three, be able to cook a good meal. Well, we could safely skip that. \n\nItem four, be able to lift heavy objects. Vanessa mentioned how he had casually picked up a 300 pound snow blower, so we figured we could skip that one, too. \n\nItem five, be willing to defend himself or others. I told them how a tenant of Don's is giving him self defense lessons in exchange for using Don's basement home gym, so that took care of Item 5. \n\nItem six, not be a bully. Don being a bully? Nah. \n\nItem seven, be handy with tools. Well, skip that one too. \n\nItem eight, have a good income. So far as we knew he makes around eighty thousand a year, and that seems plenty good. \n\nItem nine, be financially secure. Don has over two million in assets, that should be secure enough. \n\nItem ten, be intelligent. He's got a college degree and knows how to boil water, so he passes again. \n\nItem eleven, be a both a good listener and a good talker. This one sparked an argument between Kathy, Freddie and me. Freddie and I thought Don was a good communicator and Kathy brushed us off. \"Nope, if Don were a really good listener he wouldn't have been so easily deceived by his ex-wife, and he would suspect how you really feel about him, too, Maria. Personally, I think this will always be a weakness of his. It is not so much that Don misunderstands what people are saying, he doesn't seem to have any understanding of what is unsaid in a conversation, particularly when having a conversation with a woman. Now, this shouldn't be a deal breaker for Don, but I think we need to work with him to make him more observant. Now when it comes to educating Don in communication and romance, I think what we all should do is take Don on practice dates.\"\n\nFreddie yelled, \"Yeah, I'm ready to practice on Don.\"\n\nKathy looked at Freddie crossly. \"This is a little off topic, but I mean romantic practice, not sex practice; romantic evenings, stopping at polite kisses and going no further. During those evenings he should engage other people in conversation so that afterwards whichever one of us was with him will be able to discuss the conversation with him to see what he understood and what he missed. In that way we will be able to, as it were, kill two birds with one stone. All of us have small and large events that it will be nice to have a date for. I propose that we take Don to some of these events to \"give him some polish\", as Maria mentioned. When we feel Don is ready, we get him some real dates where someone might be sexually interested in Don.\"\n\n\"Hey, I'm not sure I like that.\"\n\n\"Maria, Don needs to get his sexual confidence up. I don't think that is going to happen with any of us in this room. I'm not saying that he is going to actually have sex with anyone. All I'm saying is that we're just going to make it more likely to happen. That's all. As for sexual instruction, I've got some books I can give Don at the appropriate time.\"\n\nWe resumed talking about the list. \n\nItem twelve, be kind. It was very possible that Don was too kind. \n\nItem thirteen, be able to ride a horse. Kathy thought that one was pretty silly, but the rest of us overrode her. What good is a cowboy or knight without a horse? I would be Don's instructor.\n\nItem fourteen, know how to dress well. Don wasn't exactly a bad dresser, but he wasn't good either. Vanessa and I would handle that one together.\n\nVanessa spoke up. \"I want to be sure, why are we doing all this? I think I know why, but I want to know for sure.\"\n\nKathy spoke up again. \"I hope I speak for all of us. First, we like Don and he has been screwed over. Second, we like Megan and Robin. Third, we like Maria, who definitely has an interest in Don. Fourth, and most importantly, this investigative report was a complete and immoral invasion of Don's private life. We are complicit in this act by reading the report and not raising objections. We are also now aware of Don's potential difficulty with romantic relationships. We have a moral responsibility to help Don if he will accept it. And fifth, I think it will be a lot fun, just like something from My Fair Lady, except with a guy.\" During the last sentence Kathy ripped off her glasses and put a big grin on her face.\n\nWe all laughed as she stood up. \"I declare the formation of the Polishing Don Association. For president, I nominate Maria. Head of the physical education department will be Vanessa. Comic relief will be Freddie.\" Freddie stuck her tongue out at Kathy, and Kathy grinned back. \"And I will be head of the planning department. I also propose that at a future time we might want to bring in Megan and Robin as junior members. All in favor say aye.\" We had been sitting at my dining room table discussing things and I had a vegetable party tray in the center and, you guessed it, instead of saying aye we threw vegetables at Kathy. But what the hey, it meant the same thing.\n\nKathy caught some of the vegetables thrown at her and said, \"I also propose that we have Don cater all future meetings of the P.D.A since Maria's cooking sucks.\" Everyone else said \"aye\", but I said \"Hey!\" Let them chop up their own carrot sticks from now on.\n\nI didn't know how far I would agree to follow Kathy's plan. Some of it made sense. But I really didn't like the thought of Don going on real dates. He was a gem, ripe for the plucking. He has too much kindness and integrity, and he has an old world sense of honor. Some woman was likely to get him into bed and he would then feel compelled to marry her. I wonder if that was how Barbara did it? Polish his armor, lubricate his joints a bit and, damn it, I wanted him! Then my heart gave a lurch and, with a sickening sense of despair, I realized that he would never feel that way for me if he were to ever find out what I was really like and what I had done before we met. Oh, god, what was I going to do?\n\nIt was unanimously decided that the PDA was not going to be a kept a secret from Don. We would even tell him about the report. Kathy was confident that, knowing his personality, she could present it in such a way as to mollify Don's potential anger. Morally we had no right to work behind Don's back, even if it would be to his benefit. However, we also didn't feel it necessary or beneficial to tell him everything. For example, the way that Kathy had proposed working on his communications skills would probably work better if he didn't know about it. \n\nWe decided to wait for Thanksgiving weekend to spring this all on Don. I had mentioned THE TURKEY to them and the gluttons had immediately gotten interested, even Freddie. They would be coming up the weekend before Thanksgiving, too. I firmly told them that I had promised Megan and Robin that I would ride with them in Don's car. My cronies, as Don calls them, then started the old game of insisting the girls ride with me and my friends would ride with Don, assholes.\n\nWe all met up at Don's apartment for our weekend trip. I let Vanessa drive my new SUV, while I got in his car. I was bummed out at first. We couldn't find the Yahtzee game. Don swore that it was under the seat, but after searching for ten minutes, we gave up, so the girls and I decided to practice our musical talents. For some reason their father had a real preference for either the Beatles or Queen during this drive. I didn't care; it was all good to me. Don seemed to really enjoy the trip.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;...............\n\nThat had to be the best long car ride of my life. Maria's dancing and singing to the Beatles while in her seat had made my blood pressure rise. It took a lot of deep breaths for almost twenty minutes and switching out the Beatles for a jazz CD, but when we got to Maria's home it was finally safe for me to get out the car.\n\nI brought the usual desserts with me. I had baked everything at home because I knew I wouldn't have much time during the weekend. I had brought two PIES and one CAKE, plus I had made a whole bunch of cookies. \n\nThis time I made white chocolate cookies with macadamia nuts. Kathy and Freddie drooled when they saw them. After Friday's dinner of grilled salmon they sat at the table right across from me and I swear they made love to them. Three cookies in a row! I was blushing so much I thought steam would be coming out of my ears. My big brain didn't catch on soon enough, but my little brain certainly did. It wasn't safe for me to get up from the table. Even when I refused to look at them I couldn't calm down, because I could still hear them. It's a good thing my daughters were doing the dishes at the sink. Vanessa just sat there looking back and forth from me to Kathy and Freddie. She had a big grin on her face and I think she was waiting for me to explode.\n\nFinally Maria, who was puttering around the kitchen, noticed what was going on. She came back to table and hissed at them to stop. \"Megan and Robin will see you two, stop it! Or I'll throw out THE PIE!\"\n\nThat forced them to get up with grumbles of \"you're no fun!\"\n\nVanessa waited until Maria's back was turned to lean over and whisper in my ear, \"If you think that was hot, wait until I show you what I can do with THE PIE, tonight.\" Then she gently blew in my ear. I had to wait another ten minutes to get up!\n\nAnother movie night for them. I went up to bed early. I didn't want to chance seeing Vanessa make good on her threat.\n\nI stuck an old movie in the DVD player in my room and then I got in bed. A bit later Megan and Robin came upstairs to check on me. They were worried that I had called it a night so early.\n\n\"Dad, are you okay? You came up to bed real early,\" asked Megan.\n\n\"I'm fine, just a little tired.\" Good thing that they came up when they did. I had almost made up my mind to go to the bathroom and relieve a little tension. Five minutes later and I would have been in a thoroughly humiliating situation. I could just imagination my girls yelling through the bathroom door at me. \"Daddy, what are you doing in there?\"\n\nRobin looked at the movie playing. \"Dad, are you watching that Houseboat movie again? Aren't you sick of it?\"\n\nMegan grabbed her and pulled her away to hush her. Sadly, I could hear a lot of the whispered conversation. It was my night to be embarrassed.\n\n\"Robin don't you &hellip;&hellip;. That movie &hellip;...&hellip;.actress&hellip;..&hellip; Loren&hellip;&hellip;.like Maria.\"\n\nRobin turned to look at me with big eyes. I wanted to hide under the covers. That is not something that guys and especially FATHERS ARE SUPPOSED TO DO!\n\nThe two of them came back to me, all innocent smiles. They patted my blankets and gave me kisses on the cheek. THEY TUCKED ME IN BED! Then they told me how much they loved me and left. When my door closed behind them I could hear giggles out in the hallway. The tension I had earlier was completely gone. I was too humiliated.\n\nI got up early the next day and used the snow blower to clean the driveway. Carl had the tractor repaired, but I was unfamiliar with it and figured that there was less chance of me damaging things with the blower. Being out in the fresh air with a power tool helped make me feel better, more in charge of things again.\n\nI made a really early lunch of hamburgers, grilled cheese sandwiches, and French fries for everyone before they went skiing. I then started work cleaning and seasoning the smoker. I don't know what anti-rust preservative they used on the sucker, but it was hell to clean off. I got tired after three hours and thought forget it, it was clean enough, so I started curing the smoker. I was still doing that when everyone got back.\n\nThey looked tired but happy as they all walked in with rosy cheeks. I had hot chocolate and cookies ready for them to warm up with first, then they got cleaned up and I started dinner. Since I was stuck outside all day seasoning the smoker as I had suspected would be the case even before we came up, I had previously decided to cook that Korean pork meal for them. I cooked up almost seven pounds of pork and those sharks ate every bit of it. It was a shame that all that grease went to waste. If it had been earlier, I could have used it for seasoning the smoker.\n\nFor Freddie I fried up some shrimp and small pieces of squid. I also made sure to cook the pork separately. Freddie whipped together her own dipping sauce made from cocktail sauce, Tabasco sauce and horseradish. She just slathered it on her lettuce while building her balls. She seemed to devour it all with great relish. That sauce of hers would have burned out my tonsils!\n\nI went to bed early again, and for the same reasons. However, again for the same reasons, I made sure that night to watch a John Wayne movie.\n\nThe next day I made Sunday breakfast as usual. Then I barely averted a minor disaster. Maria was almost talked into riding home with her friends because of time constraints, but, luckily for me, I found the Yahtzee game in the spare tire compartment. I wonder how it got there, heh, heh, heh? \"Shake it, shake it, shake it, baby now.\"\n\nThat Monday I went for my now regular appointment with Doctor Huff. I told her what happened during the weekend, with the way Kathy and Freddie ate the cookies and how my kids reacted to me watching Houseboat, and then my own doctor laughed at me! I don't mean a little giggle, but a full deep belly laugh that filled the room. Every time she would slow down, she would take one look at my face and start back up. I felt so betrayed! \n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;..........\n\nI'm not so sure about my friends. I get the sneaking suspicion that they are all starting to imagine themselves walking down a wedding aisle with Don.\n\nThe afternoon before Thanksgiving Day we all drove up to my home. I was stuck driving my own car. Don's was too packed with food. \n\nThursday morning he got up really early to start cooking. I walked out a couple times to inspect the outdoor activities and progress. Don had his smoker set up in the little walled outdoor kitchen area where I keep my gas barbecue. He had a green canvas tarp on top of the smoker. \n\n\"Don isn't that thing going to catch on fire?\"\n\n\"Nah, it's a welding blanket that I use on cold days to keep the temperature up in the smoker. It might get scorched a little by the firebox if I'm not careful, but it won't catch on fire.\"\n\nAfter several hours, he brought the finished turkey in and it smelled absolutely wonderful. He made us wait a while for it to reabsorb some of its own juices. I had to admit the smell had my mouth watering, but when we finally tasted it, I discovered that his daughters had been wrong. THE TURKEY was even better than they had described! Don had bought the biggest turkey that I have ever seen and I was worried that it wasn't big enough.\n\nDon had also brought up four live lobsters in a special box he built out of a cooler chest and some parts from an old aquarium, just especially for Freddie. While she ate the first two of her lobsters she looked on in awe as we scarfed the turkey down. I think that was the first time I have ever seen her depressed about being a vegetarian. The other food Don had with THE TURKEY was just as wonderful, too. Barbara had cheated on this man, she must be certifiably insane. \n\nDon had worked so hard and he still had to clean the smoker so we girls cleaned the table and kitchen. Even though we were stuffed to the gills, we still kept on stealing bits from THE TURKEY. We refused to throw out the smallest pieces of THE TURKEY. If a plate or platter had a tiny bit left, we would lick it off. It was just too good; it was like sacrilege to throw out any of it, no matter how small.\n\nWe were ready to bow down and worship Don for his creation of THE TURKEY. Instead we waddled our way to the movie room and fell asleep for a couple of hours. When Don found us nearly comatose in the movie room he gently revived us and then served us each one piece of pumpkin pie and one piece of pecan. Then he went to bed, it had been a long day for him. I would have been worried about my friends sneaking off to his room to pay homage, but we were all too bloated and tired. For the rest of the night the only times we woke up were to start a new movie in the player.",
        "About dawn we all got up to go to our bedrooms and sleep. At noon, I got up feeling wonderful. I showered and went downstairs only to find that all us girls had the exact same timing. We had left over TURKEY for lunch, and it was just as good as the first time. Sadly, it seemed like there was only enough left for one more meal. Don asked if we wanted something else for dinner, but we all declined, we wanted more TURKEY except for Freddie, who was hoping for another lobster. When he went to check on the lobsters Don was pleased that his lobster cooler box had worked as well as it did and the remaining two lobsters were still alive. Freddie got one of those for lunch. \n\nThat afternoon was the planned showdown with Don. Vanessa and Freddie kept Megan and Robin busy while Kathy and I nervously sprang the investigative report and the PDA on Don.\n\n\"Don, can you come with Kathy and me into my den?\"\n\n\"Sure, what is it?\" He asked as he followed us in.\n\n\"Don, do you remember when you took down that tree without asking me, and then groveled in apology?\"\n\n\"Of course I do.\"\n\n\"Well, Don, this time it is my turn to grovel, but I'm not so good at it. I'm really, really sorry though.\" I asked Kathy to explain, hoping she would do a better job. \"If you want to yell later, that's okay.\" I was just hoping that he wouldn't get so mad that he stormed out of the house, taking my girls with him. I might never see them again!\n\nKathy began to speak. \"Don, back when you first met and rescued Maria, which was a wonderful thing to do, your daughters told Maria a really strange story about your divorce. It sounded unbelievable, something too extreme for even a soap opera. Maria had just come out of a bad relationship with her ex-boyfriend at the time. Because of that she was afraid of getting personally involved with you and your kids and, after hearing such an outrageous story, she decided to have you checked out. She contacted her ex-husband, who is a really decent guy and thinks the world of Maria. She told him about her recent break up, the accident, your rescue of her, and the story of your divorce. He helped her to find a private detective who did a superficial investigation and confirmed a lot of the story. Even though he is divorced from Maria, her ex-husband still treasures her as a friend. He wasn't satisfied with the report and decided a more in depth investigation was needed. The headhunter that contacted you and had you sign a release was pointed at you by Richard, her ex. That was an immoral invasion of your privacy. What is worse is that Maria guessed what was happening early enough that she could have stopped it and didn't. She had enough information already, but she was curious. She liked you and your children, and wanted to know everything.\"\n\n\"About ten days ago the final report showed up. She was dismayed to see the terrible betrayal you suffered completely confirmed and then some. She needed advice and asked Vanessa, Freddie and me to read the report, too. We should have said no, but we were curious, too. And we, too, invaded your privacy by reading the file. All four of us are desperately sorry. It is all the worse because we knew we were acting immorally even when we did it. So we can only beg you to please, please accept our most humble apologies.\"\n\nI had been staring down at my desk with guilt and worry. When Kathy finished, I desperately nodded my head in agreement with her apology. \n\nAfter thinking for a few moments, Don replied with a deep sigh and a sadly resigned look, \"Kathy, Maria, I don't care. The investigation, yes it was an invasion of my privacy. The head hunter trick was underhanded, but I never believed anything good would come from it, so it doesn't really hurt.\" He sighed again and his apparent feeling of hurt seemed to deepen, even though he was obviously trying to not let it show. \"Maybe a lot of people would be angry over something like this, but I just don't feel mad in the least. Ever since I met you Maria, I've been having a wonderful time, the best time I can remember in my entire life.\"\n\n\"I'm an open book. I don't feel like I've got any skeletons in my closet or anything else to be ashamed of. I don't want the whole world knowing my life, but I have no objections about a background check. I know you would have never done such a deep one all on your own. I can certainly understand someone like Richard wanting to protect you. After all, you've got a lot of money, you had just been hurt in a bad relationship and you were feeling wary because of it. I'm really not surprised, so don't sweat it.\"\n\n\"As for the files, however, I'm not comfortable having them around as they contain a lot of painful memories for me, so please destroy them. I don't want to read them. I don't want to get angry over incidents in my past, or mistakes in the report. I spend too much of my time being very angry and I am trying very hard to stop, so just burn them, please.\"\n\n\"As for your apology, consider it accepted. Let's just pretend the incident never happened, okay?\" Don did his best to give us a good smile, but there was a lot of deep sorrow and pain in his eyes, which made my heart ache for him. Kathy seemed to shudder, too at his expression. I had betrayed him, and I had to make it up to him.\n\n\"Oh Don, I'm so happy that you are able to forgive our actions, we were so worried and felt so badly about it. It is a great relief to me and all of us,\" Kathy replied, but her voice sounded odd to me.\n\nDon then changed the subject and said, \"I'm going to find Megan and Robin. It looks like perfect snowman making materials outside and I'm going to see if they're interested.\"\n\nI would have kind of liked to build a snowman with them, but Kathy grabbed my arm, preventing me from following Don.\n\n\"Shit!\" Kathy said. \"You stay here. I'm going to get Vanessa and Freddie, we have to talk!\"\n\nShe rushed out and I collapsed. Even though Don had said nice things, evidently Kathy felt this hadn't gone well at all, and it was all my fault!\n\nThey all came back to my office to find me with my head collapsed onto my desk, worried to death about what Kathy had to say. \n\n\"What the hell happened? Don seemed okay when he went outside with his kids,\" Freddie asked.\n\nKathy spoke. \"I explained the investigation to Don. I really think that the invasion of his privacy doesn't bother him in the least. However, I believe the fact that it was us who did it to him is tearing him apart. Quite possibly we are the first adults that he has begun to trust since his divorce. He is probably desperate for some adult friendship. Well, you read the report about his old friends and family. Now we, his first friends since his divorce, just betrayed him, too.\"\n\nI began sobbing into my arms.\n\n\"Don't panic, I think we can fix things. One big item that counts in our favor is that we didn't try to conceal our mistake from him. In the long run that will count for a lot. To repair things, we've got to stop taking him for granted. We eat his food, we joke and tease him. But we three, I don't know about Maria, really spend all our social time with his kids.\"\n\n\"Instead of springing the PDA on him right away, I think we should do more to involve him in our activities. He probably won't want to watch any of our chick flicks with us, but for everything else we should try to include him, even if we have to force him. Let's admit it, we are four pretty hot looking women and most guys would be flattered if we insisted they accompany us.\"\n\n\"This evening instead of watching movies, what do you say we hit the game room and drag Don along? We can even try to start his dancing lessons tonight. I don't think Megan or Robin know anything about dancing. It would be fun with us all trying to teach the three of them. Tomorrow Don goes skiing with us, or we all stay home. If we have to we can get him an instructor and make the man learn. Enough of him sitting home by himself! We've got to show him that we genuinely care for him and that we enjoy his company all the time, not just when he is cooking for us or when we're eating his wonderful food.\"\n\n\"One other thing, although flirting and teasing him are okay, we need to have some serious conversations with him, too. Vanessa, you've been using Maria's home gym. Drag Don with you next time and give him some pointers.\" \n\n\"Freddie, besides that Kincaid stuff that Maria likes so much, she has some other really nice art work here. I think Richard picked it out.\" I was feeling too upset to object to that slight. Kathy kept talking. \"I've seen Don looking at that stuff. You're an artist, talk to him about it.\"\n\n\"We've played at being his friends, let's actually do the job. The guy has a heart of gold; it is time to patch the cracks in it. We'll start the polishing now, but we just won't announce our plans for a while. That isn't really going to be necessary. Only a blind man wouldn't realize what was really going on. It is common for friends to help a jilted friend recover from a bad relationship, that's what friends are for.\" \n\nWe all agreed to Kathy's new plan. Freddie rushed out. When the rest of us walked more slowly out, she was already thundering down the stairs with her ski clothes.\n\n\"I think we should have a good old fashion snow ball fight,\" she yelled out. We thundered after her. We had no problem getting Megan and Robin involved, but Don seemed pretty listless. Finally Vanessa tackled him and Freddie put a hand full of snow down his back. That seemed to get him from a completely dead state to half awake. But the life was still drained from his eyes.\n\nI was right next to Don during most of the fight. I just couldn't bring myself to throw a snowball at him. I always had to be on his side and he never threw a snowball at Kathy or me, either. \n\nWell, he finally slipped and fell at one point after being hit in the face by Robin. I found myself diving on top of him. I didn't fall; I deliberately landed on top of him like a secret service agent protecting the President. It wasn't a conscious decision. I just did it. When I landed on top of him I found out why my subconscious made me do that. Even with the bulky clothes we were wearing, my arms swept around him with surprising strength and I felt myself squeezing his body next to mine as if my life depended on it. I was trying to squeeze out all his pain and replace it with my own warmth. Sadly the heavy clothes seemed to prevent him from even realizing what I was instinctively trying to do.\n\nRobin and Megan came hurrying over. Robin was afraid that she had hurt her father. \"Dad, are you okay?\" Don let out an exaggerated snore, pretending to be asleep. So I did the same, but my snore was more ladylike. I was too embarrassed to think of anything else, while lying on top of him. That, as it turned out, was a big mistake. Robin put a hand full of snow down the back of my coat! I let out a scream that provoked a fit of giggles from all the ladies present, but it also caused some loud guffaws to spring from Don.\n\nThat hand full of snow got me out of an awkward situation and lightened Don's mood. It was well worth a cold wet back. I will have my revenge on Robin one day I thought to myself with relish.\n\nWe spent the whole afternoon building snowmen and snow forts, and getting into snowball fights. It was a silly day, but we all had a blast. Don's eyes were still lacking their normal sparkle, but they were getting better. Freddie disappeared for a while and when she came back out she had a tray loaded with mugs of hot chocolate and some of Don's cookies. I mentally thanked her; there had been enough of Don waiting on us. It had been nice and he would probably still do it, but it was way past time for us to cater to him for a change.\n\nAt dinner we finished the last of THE TURKEY. Who could believe it? A twenty-two pound turkey, gone in three meals? Before dinner we had clued Megan and Robin in on forcing him to go skiing with us. They were both in favor of the idea. It was a piece of cake, we just blackmailed Don.\n\n\"Don, tomorrow you are going skiing with us,\" I told him.\n\n\"Maria, I've never been skiing in my life. Truthfully, I would be a danger to myself and other people on the slopes.\"\n\n\"Well, that really sucks and I was looking forward to skiing tomorrow,\" said Megan.\n\nDon look confused. \"Well, you can all still go. I'll just stay here, or I can even wait for you at the lodge.\"\n\n\"No, Daddy, we all decided. We all go together or we all stay home together,\" Robin said. Why did I like it so much when she said \"stay home\", when referring to my house?\n\n\"But&hellip;\"\n\n\"Don, you've got a choice. Go skiing or disappoint your daughters,\" I told him. Megan and Robin put their heads together and stared at Don with big puppy dog eyes.\n\n\"But I don't have any equipment, or even any ski clothes.\"\n\n\"Don, you just let me worry about that. Will you come with us, or do we all stay home?\"\n\n\"Okay, okay, I give up! I guess I'll just have to make a fool out of myself again, what else is new?\"\n\nThat evening we played ping pong, pool and air hockey. Don sucked at everything but pool. What really got the evening going was when we all trooped down to my dance studio. The only problem we had was who would partner with whom. It was settled in a way that I didn't like, but it was really the best solution. Vanessa, the best dancer after me, would partner with Don, Kathy with Robin and Freddie with Megan. I would play dance instructor.\n\nNo one would listen to me! I wanted to play too! But I had to pretend to be the strict teacher. I would dance the lead and demonstrate a step with Vanessa. They couldn't count steps; they couldn't remember their foot positioning. Arrgh! I needed some CAKE and Don hadn't brought one! I finally settled on my goal for the evening to get them remembering just two steps. Not three or four, just two. Robin was actually the best of the three, with Megan and Don being equally bad. I was wondering if I would live long enough to merely teach Don how to Waltz, let alone Tango, Foxtrot, Mambo and all the rest. The man kept putting too much power into every move. He didn't merely lead his partner, he dragged her along. I was going to have to buy some steel toed shoes for both Vanessa and myself!\n\nAt the end I put some rock and roll in the CD player. Don tried to play wallflower and I wouldn't let him. Then he tried to stand there like a lump. So I gave him my best \"don't you dare tick me off anymore\" look. I showed him a few moves appropriate for the music playing. He seemed to do better with real music rather than with me just counting off. I'd have to remember that for next time. \n\nAfter dancing we were all tired so Don headed up to his room and we girls settled down to watch at least one movie; tradition is tradition after all. I had a huge piece of pecan pie to make up for the missing CAKE. I decided to forgive Don after all.\n\nThe next day, Don, that bum, got up early and made breakfast. I swear I'm going to staple him to his bed. I called the lodge ski shop and made some special arrangements. Gear sold at a ski resort is normally a lot more expensive than back in town. They've got a captive market and they have to make every buck possible during the season. I told them when we came in to lie about the prices to Don. I would just put it all on my credit card and he would never know the truth. If he found out how much some of the equipment cost he would probably balk, but I don't believe in cheap boots or cheap bindings. Show me something that will give me the slightest reduced risk of injury on the slopes and I'll buy it. \n\nDon had some insulated brown coveralls in his SUV, and he wanted to wear those for skiing! I'm going to have to kill him; there is just no other choice. I wanted to take Don to the shop while the rest started skiing, but they refused. They all wanted to put in their two cents worth regarding Don's choices for clothes and equipment. I was pissed because I didn't want Don to have any choices; I wanted him to select what I told him to.\n\nWell, perhaps it was a good idea that Freddie and my girls were there. Freddie was our own ski expert and had actually been in quite a few competitions, so she chose the equipment best suited for Don. I made sure, though, that my girls and I picked the colors. Nobody else was going to dress up my&hellip;.., Don. Shit! I don't stand a chance with him, why do I keep thinking like that?\n\nI had already arranged a special instructor for Don, an older retired gentleman named Bill. He worked at the lodge, but not for the lodge. He's a great teacher for beginners. I think he is a retired banker. Bill worked with Don for two hours and then we made sure Don took a break. Learning to ski when you are tired is how accidents happen.\n\nVanessa took over his instruction then for the next two hours. I was just as good a skier as Vanessa, but she is a better teacher. Then we all took another break. For the last two hours Freddie taught Don and she had him going down some moderate slopes by the end of the day.\n\nI have a storage locker at the lodge to store my ski equipment in, so we all dropped our skis off there. We decided then that instead of heading straight back to the city tomorrow we would try to get in some more skiing. Freddie pointed out that we didn't want Don to forget everything that he had learned. \n\nWhen we got back home we snacked on some more of Don's fabulous cookies and headed upstairs to shower and wash all the sweat off. An hour later we were all back downstairs, except for Don. Robin ran upstairs to check on him and found him sound asleep, still in his ski clothes, so she woke him up and chased him into the shower. She came back downstairs with a big grin on her face and seemed quite pleased with herself when she reported on her actions.\n\n\"I went upstairs and he was laying half on the bed, still wearing his ski pants. I tried to wake him up and he just kept sleeping. I pinched his nose closed and all he did was open his mouth and start breathing that way. So then I took off his socks and tickled his feet, but he just moved his foot away. Finally I got mad. I grabbed his big toe and bit it! He jumped up in bed screaming, \"Whoa, toe!\" Daddy jerked his foot back from me, rolled over and fell out of bed. I think I'm grounded for a month!\" We had it under control for her entire speech, until her last sentence. Then we all lost it and Robin was grinning like she had just won the Olympics.\n\nWhile Don showered, Freddie and I started dinner. Don had brought up a huge cooler chest packed with Dungeness crab this time. He must like fat women, because I didn't see any way we could eat them all! We steamed them and had them with some baked potatoes and asparagus, yummm. Unfortunately, Megan and Robin didn't like the asparagus, too bad, all the more for us!\n\nAfter dinner we just goofed off for while. We watched a little TV and played some video games. I was starting to get better at the video games and I beat Robin a couple of times, but Kathy cleaned all our clocks.\n\nDance lessons resumed that evening. Instead of just counting steps again, I tried Don with some actual music. I put \"Moon River\" on and took Don through a few steps. Then that stupid moron went and did something dumb. He pulled me close and whispered to me, \"This was always one of my parents' favorite songs, especially my father's. It makes me kind of happy and sad at the same time whenever I hear it. Happy to remember all the good times with them and sad that they are gone.\" \n\nSo Don decides to share something so heartwarming and intimate like that with me and expects me to teach him at the same time? I think not! When he tried to release me and let me go back into my proper position, I just hugged him close. The waltz I was trying to teach him gradually turned into a shuffling slow dance that you see most couples perform. I swear, if he embarrasses me one more time I'm going to knock his block off.",
        "I put Vanessa back with Don for the remainder of the lesson. There was no way I was going to let him put his hands on me for the rest of the night, he just might get me all wound up and I definitely needed to change the music. Who does he think he is? Getting all sentimental and sharing something like that with me! While there are other people around! Doesn't the man understand anything about timing? Oh god, why does he have to be so damned NICE!\n\nAfter the lesson, we did our normal routine. Don went to bed and the rest of us watched a movie. We skied for almost four hours the next day. Sure enough, at first Don seemed to have forgotten everything that he had learned on Saturday, but by the end of the second hour he was back in form.\n\nA few more weekends with him skiing and I could stop worrying about him breaking his leg or neck. So long as we keep him off the black diamond runs.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;....\n\nIt was a pretty good weekend. The turkey turned out great. Sometimes something goes a little wrong and the flavor isn't always all there, but this time it seemed just about perfect.\n\nThe shocker that Maria and Kathy pulled on me concerning their background check on me certainly hurt, are all women that invasively curious? I would be sure to talk about it with Doctor Huff this Monday evening.\n\nLearning to dance and ski, I have to admit it, was fun. Maria insists that she is going to turn me into a reasonable ballroom dancer in six months. Let me see, holding beautiful women in my arms for six months, especially Maria? I think I could be talked into it!\n\nI had some good news waiting for me at home about that stock I had invested in. From $3.42 a share it had already recovered to $5.60. I knew there was no reasonable explanation for that stock to be so low. I guess some other people finally figured it out, too.\n\nThen I had my therapy session and Doctor Huff spent our entire session on the invasion of my privacy. She agreed with me that the ladies had, indeed, done me wrong, but she then pointed out that they seemed to be truly sorry and she felt they had done it because they were genuinely interested in me. She even hinted that she thought they might be having romantic thoughts about me. I told her no way, those ladies were way out of my league. Doctor Huff also expressed disappointment that all copies of the report had been burned. She said that it might have helped in my therapy if she could have read it. I had to think about that some more, she was probably right.\n\nThen on Wednesday Maria came by like normal and I decided to let her know what was going on with me, as well as try to get her to understand what I was going through.\n\n\"Maria, for the last few weeks I've been going to therapy every Monday evening trying to get control of my feelings of anger and rage. Well, I told my therapist this time about the investigation you had done on me.\" Maria's face went pale. \"She helped me to understand some things and I think I really don't have a problem with it now.\" Maria slowly let out a sigh of relief. \"However, she expressed interest in reading the report; she said that it might help my therapy. I know you burned your copies, like I asked you to do, but do you think you could maybe give her a call? She has a few questions for you if you have time, and it might really help me.\"\n\n\"Don, I would be more than pleased to help. I'm really glad you're in therapy, and I have to agree that that damned report might help her work with you to understand what happened to you and help you get over your anger. I'll be happy to give her a call. Don, I don't really know how to tell you this other than to just say it straight out. While we burned all our copies, there are probably a few more still out there.\" \n\n\"The employment agency and those possible employers should still have some copies. I know you don't believe that anyone will hire you, but now that a few companies know the truth regarding your resignation from your former employer it is quite likely that you will be getting some good job offers, especially when the economy improves. I know one of them is really interested in you. Since they still have the report, I can probably get a copy sent to your therapist. Is that okay?\"\n\n\"That would be fine, Maria. I always understood that there were probably more copies out there. I just didn't think you could get another one so easily and I didn't want to ask you after telling you to burn them all.\"\n\n\"No, again it is my pleasure. I'm just happy you're not mad at me anymore.\" Maria gave me a big smile that lit up her eyes. I am going to have to take another long and very cold shower tonight!\n\nThe next month was busy. Megan, Robin and I were all getting over a cold the first week in December. I hate to spread diseases, so I warned Maria not to come by for our trip to the therapist that night. Did she listen to me? Of course not! \n\nMegan and Robin had both called me Tuesday morning from school, complaining of being sick. All three of us must have been exposed to something on our way home from Maria's house, maybe at the convenience store we stopped at, because I was dragging my ass too. Well, I went and picked them up at school and then took the rest of the day off. I let Barbara know what was happening and she was fine with the kids staying with me. I then called Maria to let her know that Wednesday night was probably off.  \n\nWhen I got home from work Wednesday, feeling like shit, I found Maria already there taking care of Megan and Robin. She had homemade chicken soup on the stove, a load of different over-the-counter cold remedies on the kitchen counter, and she was helping my girls get caught up with their homework. They had fallen behind a little because of getting sick.\n\nMaria really came to our rescue. She even gave baths to Megan and Robin. The two of them had been doing a lot of sweating and were pretty rank and uncomfortable. Maria changed the sheets on their beds and put them in clean pajamas, too. Whatever it was that we had was completely knocking us out. Maria stayed at my apartment again on Thursday to take care of Megan and Robin. Thursday night she headed back to her own condo after she saw how much better Megan and Robin were.\n\nOn Friday Maria didn't answer my calls and I began to get worried about her. I figured she might be sick and there would be no one to take care of her. I got off work early, picked up Megan and Robin and drove to Maria's condo after stopping home for supplies. When we showed up at the security desk at her condo with overnight bags and a pot of chicken soup, Megan and Robin frantically explained our concern to the guard. I had never been inside her condo, but Megan and Robin had seen it the weekend they went on their big all day shopping trip with Maria. The security officer tried buzzing and Maria didn't answer. He then checked her parking space and found her car still there.\n\nHe reluctantly agreed to go to her condo and, if necessary, let himself in to check on Maria's safety. My daughters didn't give him a chance, they followed right along with him and I followed them carrying the pot of chicken soup. When he knocked on the door Maria still didn't answer. So with Megan pushing him, \"She could be dying in there!\" he unlocked the door. As soon as he had it open a crack, Robin snaked her way by him and through the door. He yelled out, but she wasn't stopping for anything. That's my girl! Then he found himself standing around, not knowing what to do. Should he chase after Robin or what? I decided to distract him so that Megan could get by. A hot pot of chicken soup pressed to someone's back makes a really good distraction! \n\nWe had now succeeded in getting two infiltrators into enemy territory. Everything was proceeding on schedule with operation \"is Maria okay\". I apologized for the hot pot and waited for agents M and R to report.\n\nRobin came running back. \"Daddy, Maria is really sick, just like we were. She didn't want to call and bother anybody and she couldn't get out of bed to answer the security panel.\"\n\nAt the words \"Maria is really sick\", I was suddenly magically transported through the guard and doorway, and I was fifteen feet inside Maria's condo before I even realized it. I think the guard got sucked in behind me in my wake. Robin ran in front of me to show me the way. I had no problem knowing where to go, all I had to do was just follow the sound of the coughing.\n\nI entered Maria's bedroom, pausing slightly because I was entering uninvited. What the hell, I'm good at groveling.\n\n\"Maria, honey, are you okay?\" Maria and my girls suddenly looked at me strangely. I wonder why, did I say something funny?\n\nSo here I am kneeling at the side of her bed, with oven mitts on and a big pot of chicken soup. I did the only sensible thing I could think of and said, \"Are you hungry?\"\n\nShe looked at me like I was nuts, but she did have a slight smile. \"No,\" she coughed out. I think the guard left at that point.\n\n\"What are you doing here?\"\n\nRobin replied to her question with a wonderfully simple answer, \"You took care of us, now we are going to take care of you. We love you, Maria.\" I wish I could have said that!\n\nMaria got all big eyed with the girls and she opened up her arms. Megan and Robin fell into her arms for a wonderfully touching hug. A real Hallmark moment, even with all of Maria's coughing. I snuck out to find the kitchen and ditch the soup. \n\nMy girls set to, taking care of Maria with all the combined skills of Florence Nightingale and Attila the Hun. I was just the supply clerk. Maria didn't want a bath? It didn't matter. Megan and Robin gave her a bath anyway. Maria didn't want her sheets changed? It didn't matter. Maria didn't want to eat? Megan and Robin just sat by her bed, gave her big puppy dog eyes and said \"pleeease.\" Maria ate soup and crackers. Maria was lucky she gave up early or they would have pulled out the big guns and played choo-choo train with the spoon. Take my word for it, it is hard to eat soup while you're laughing, most of it that doesn't snort out your nose winds up on your chest that way.\n\n&hellip;&hellip;&hellip;&hellip;..&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;.\n\nI spent a terrible yet wonderful two days taking care of Megan, Robin and Don, but on Thursday night I was starting to feel a bit peaked so I headed back to my own condo. I felt like I was probably coming down with their bug and I am such a bitch to take care of that I didn't want them see me like that.\n\nBy Friday afternoon I was feeling like pure crap and I was so lonely. Even taking care of Megan and Robin had been fun because I was with them. I was feeling sorry for myself, big time. Oh sure, Don, Megan and Robin had been calling my cell and leaving messages, but I didn't want them to know that I was sick. That would get them feeling guilty and then they would feel compelled to come over and take care of me. I sniffed back some tears; it would be wonderful to have a real family.\n\nThe buzzer on my security panel had been going nonstop for that past ten minutes. I don't know who was there, but I was feeling too shitty to get out of bed and answer it. Hold it, is that someone opening my door? I better find enough strength to get out of bed and hit the panic button.\n\nI heard a man's voice yelling, \"Hey!\" Then I heard \"Maria, Maria are you okay? Maria?\" That's Robin's voice! She's running into my room!\n\n\"Maria, are you okay? We were so worried. You didn't answer your phone! You're sick now, too, aren't you?\"\n\n\"I'm fine, baby.\" I took a break to stop coughing. \"What are you doing here?\" Now Megan is coming in!\n\n\"You didn't answer your phone so we got worried and Daddy got off work early. He just knew that you were coming down with the same thing we had, and it was so bad! I'm sorry we got you sick, Maria, especially after you took care of us,\" Megan answered.\n\n\"Robin, go get Daddy, okay?\" Robin ran off and Megan went into my bathroom for something.\n\nDon came into the room with a huge pot of chicken soup in his hands, the big dummy. The first time he comes into my bedroom and here I am, a disgusting wreck.\n\n\"Maria, honey, are you okay?\" Did Don just call me honey? Maybe I'm sicker than I thought. But if he did, and I think he did, I like it a lot. Oh shit, what will he call me when he really finds out about me?\n\n\"Are you hungry?\" the big dummy asks me. Even sick I have a hard time not laughing. \n\n\"NO,\" I coughed out. \"What are you doing here?\"\n\nThen Robin said something that melted my heart. \"You took care of us, now we are going to take care of you. We love you, Maria.\" \n\nIt got even better; Megan and Don both smiled and nodded their heads in agreement with what Robin said. I held up my arms to my girls and they fell into them, even though I was stinky and coughing. Over their heads I could see Don carrying the pot of soup out of the room. I don't think he was aware that I saw him, but he had an absolutely huge smile on his face and just for a second, before he turned his back, I could see that his eyes were wet. \n\nWell, for the entire weekend they took care of me. They helped me to the bathroom, they bathed me, and they fed me. When I got feeling better they even played Yahtzee with me. This time Don played, too, and I absolutely wiped his ass.\n\nOn Sunday I was feeling much better. When I was taking care of my girls at Don's apartment, he gave me a key to it. On Thursday when I tried to return the key, he firmly refused saying that I might need it in the future. So turnabout is fair play. I called the security desk and I got Don a key card to the building and the underground parking area. I, of course, also got him a key to my condo door, just for emergencies. He tried to politely refuse, but I gave him my best pathetic sick person with puppy dog eyes look. He shut up and took the keys.\n\nI made sure that the girls got all their homework done while they were here. We watched one movie Saturday night in my room and on Sunday we watched two, and Don made some blueberry cobbler and he served it with vanilla ice cream. I was getting really tired of chicken soup, and the cobbler was a real treat. I told them to go home Sunday night so they could get ready for school and they refused. Megan and Robin turned on me with wide eyes, fake tearful sniffles complete with crocodile tears and said, \"You want us to go? You don't like us anymore, Maria?\"\n\nShit, I knew that they were faking, but it worked, okay I'm a sucker. They were probably going to be able to manipulate me for the rest of my life. \"You know I love you. I'm just worried that you don't have your school clothes for tomorrow and it's a long drive from here.\"\n\nThey both perked up right away, the little fakers. \"Oh, don't worry about that. Dad already went and picked up our school clothes and his work clothes, and I promised to get up extra early tomorrow so we will have plenty of time,\" Megan said with a straight face. Yeah, like she can get up extra early. I'll believe THAT when I see it.\n\nThe next morning Don's alarm clock woke me. I didn't want to miss the fun so I forced myself to stay awake. First Don took a shower and then he called to my girls, waking Robin up. Of course there was no reply from Megan so he left their room and returned with a coffee mug in his hand. I could just imagine him waving it by Megan's nose and gently encouraging her to wake up. However, that didn't seem to work so he went back to the kitchen. He walked by my room, saw I was awake and, with a big grin on his face, he pointed at a glass full of ice cubes in his other hand. I grinned back at him and nodded my understanding. One minute passed, then two and suddenly there was a screech. \n\n\"DADDY, THAT'S FREAKING COLD!\" \n\nGood girl! I had been working with her to change her language. I had been afraid that she would pop out with another nasty word.\n\n\"Shhh, baby, you don't want to wake Maria, she's been so sick she needs her rest.\" Why, that sneaky old man, using me to get quiet and prompt cooperation out of Rip van Megan! I would have to remember that and perhaps use similar tactics in the future.\n\nMegan and Robin tiptoed into my room before they left and softly kissed me goodbye on my cheek. I had a really hard time pretending to be asleep. Once they left the room I waved goodbye to Don, who gave me a big grin. He waved his cell phone at me and mouthed the word \"later\". I nodded my head back in understanding.\n\nAfter they left I decided to get up and get a bite to eat. I don't know when he had had time to do it, but he had baked some cinnamon rolls thick with icing. I had two with a cup of tea and went back to bed. \n\nThat afternoon Don called me and told me firmly that he was going to stop by after his therapy appointment. He said her office was located not too far from my condo and he wanted to make sure that I had a proper dinner after being sick. I tried to refuse, but he pointed out that he now had a key and I had no choice. Darn good thing I gave him those keys!\n\nDon showed up at seven. I had made sure to take a shower that day and I had put on clean pajamas. I found out then that Don must have done all my laundry while I was ill. He even cleaned all my panties and bras! But I was sure that Don was such a practical guy that cleaning my underwear probably had no effect on him. Like Dudley Doright, the poor innocent man! I didn't put on any makeup; I didn't want to appear too recovered. This was the first time that I would be alone with Don and I was more than a little anxious. I had eaten two more cinnamon rolls during the day plus I had made myself a sandwich, but I didn't want Don to know; I was going to milk this for all the TLC I could get.\n\n\"Hi, Maria, are you feeling any better?\"\n\n\"Yes, thank you, Don,\" I coughed out; I had to kind of force the coughs.\n\n\"Did Megan and Robin make it to school on time?\"\n\n\"Yes, they did. They really wanted to come back here tonight, but they've got to spend at least some time with Barbara or things might get nasty, custody wise. I told them that with my schedule I didn't have time to pick them up, which really is the truth.\" \n\nI didn't want to think about Barbara. I'm glad that he didn't call her \"their mother\". I realized that I was getting far too possessive about Megan and Robin, and Don, too. I didn't care, that bitch had royally messed up her family's lives, just to get screwed! I would never reveal my private disdain for the woman, but I seriously doubted if she would ever have the tiniest bit of my respect.\n\n\"Maria, after I've been sick there are two comfort foods that seem to be gentle on my stomach. Now I'm willing and happy to make you anything else, but how would you like French toast and nice lean ham or a plain hamburger? Does either of those sound good to you?\" He looked so anxious when asking the question, the dear.\n\n\"Don, French toast and ham sounds really good to me.\" Just to lay it on a little thicker, I changed my voice a shred to make it sound more like a little girl and pulled my covers up. \n\nI was doing my best sick Shirley Temple impersonation. \"Are you going to be using your homemade sourdough bread? And do you have the special maple syrup that Robin likes so much?\" The big lug fell for my act; I was going to have such fun running his life. Oh, SHIT! There I go again!  \n\nHe replied seriously, \"Yes to both and I've got some especially good ham too. You rest right there and I'll bring it in to you.\"\n\nA half hour later he was back with my dinner on a bed tray. I sat up in bed and set the tray across my legs. I've never owned a bed tray, so that meant that Don had gone out today and especially bought one just for me. Sheesh, he really is a saint! Everything looked delicious and he had made me some hash browns with onion, too.",
        "He then brought in one of my folding tables for his food so we could eat together. We had a wonderful conversation about everything under the sun. We talked about Megan and Robin, both my homes, his home, dancing, skiing, old movies and he even talked a bit about his meetings with his therapist. I could tell that he kept strictly to the light stuff. He remarked that one time he even had his therapist laughing uncontrollably. He started to tell me what caused the laughter, but then he suddenly stopped himself and said that he had to keep it a secret for now. To say that I wasn't curious would be a lie, but no matter how I pleaded with him he refused to give.\n\nIt being the Christmas season we decided to watch \"A Christmas Carol\", the one with Alastair Sim. At first we were going to watch it in my room, but I really wanted to get out of bed so we decided to watch it in my entertainment room. I carefully stumbled when I got out of bed; Don thought it was weakness from my illness and he quickly put his arms around me. When I didn't object, he gently picked me up and carried me to the couch in the other room. Vanessa is so right, the man is strong, and he carried me as if I were as light as a feather.\n\nI thanked him for carrying me while he put the DVD in the player. I think I have every Christmas movie ever made. I just knew that when he came back that he would sit in the arm chair instead of sitting on the couch with me. I had to prevent that. \n\n\"Oh, my!\" I said loudly when he got close to sitting down. I put my hand to my head and leaned back, as if I was in pain. Don came rushing over, just like I planned, and gently placed his hand on my shoulder.\n\n\"Maria, are you okay?\" He was breathing deeply with worry and his face looked panic stricken.\n\nI quickly grabbed his hand with mine and gently pulled him onto the couch beside me while acting as if I were doing it out of pain or seeking comfort from pain. Don, being worried about my condition, didn't resist in the least. \n\nI finally realized he was waiting for an answer to his question. \"Oh, Don, a splitting headache suddenly hit me for just a moment, and then a bit of dizziness.\"\n\n\"Maria, maybe I should carry you back to bed?\"\n\n\"No, Don, please &ndash; I think the best thing for me to do is just to sit up for a while. I've been lying down too much for the past three or four days. The headache was only for a second and the dizziness is gone. So don't worry, let's sit here and enjoy the movie. My diabolical plan had worked, Don was stuck; he couldn't get up and sit somewhere else, that would be rude.\n\nDon turned out to be as big a Christmas movie buff as I was. He told me how on Christmas Eve it had been a requirement of his that he and his family watch all the great classic animated Christmas programs. Then on Christmas Day, after opening presents, they would start watching all the great classic Christmas movies. That was a multi-day event that had to be completed before New Year's Eve, Don stated with conviction. Because of the divorce, he said, the schedule was now pushed back one day. However, as far as he was concerned, Christmas didn't officially start unless he was with Megan and Robin. Though he went to church on the twenty-fifth, Don didn't celebrate Christmas until the twenty-sixth. He figured that God, being a family man, would understand.\n\n\"Maria, I get the children back Christmas night. Would you maybe want to spend it with us, and the twenty-sixth too?\" Don asked hesitantly. \"It would make them, and me, really happy.\" \n\nAnd yes, she SCORES!!! The crowd goes wild! The chant begins Maria! Maria! Maria!\n\nQuite demurely I replied, \"Why, Don, I would love to spend it with you three. Perhaps if you and they would like we could spend it at my home in the mountains. Every year I've got a massive Christmas tree I put up. I would really enjoy showing it to Megan and Robin.\"\n\n\"That would be great, Maria! Thank you so much for your offer. I know how much they like your home. If I pick them up at six, with luck we should be there by eight-thirty.\"\n\nWe ended up missing a lot of that movie, but we did pause our conversation for the good parts, of course.\n\nAfter seeing me back to bed, Don left for his own apartment. Oh god, my condo had never seemed so empty before. \n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;\n\nI told Megan and Robin about spending Christmas with Maria. They were thrilled and panic stricken at the same time.\n\n\"We've got to get Maria a fantastic present! What are we going to get her?\" \n\nThat question put me in a panic. After buying all our ski gear, of course we had to get Maria a great present. \"And what about Vanessa, Freddie and Kathy?\" I asked them, which made their panic even worse.\n\nI suddenly had a brain fart. One of my tenants is a jewelry designer, or wants to be one. He's in a special apprenticeship and already makes some of his own designs. He was a fire hazard in his apartment, but I understood his difficulties so I let him use my tool room in the basement. I've got two tables with fume hoods down there, and one is fully enclosed. I have torches and even a kiln; I do love tools, especially when I can pick them up really cheap. I gave him a call and asked him to come by. He owed me some favors, and now was the time to pay.\n\n\"Hi, Ken, thank you for coming; my girls and I have a problem. We've got four new friends who have been a really big help to us for these past couple of months. These ladies are smart and beautiful, and we want to give them presents that will really knock their socks off.\"\n\n\"Sure, Don, right now I've got some extra time. Things haven't been so hot for me this month, but we are only talking about sixteen days here for four pieces of jewelry. That's pretty tight. What do you have in mind?\"\n\n\"Well, I thought we would just tell you about the women, give you a price range and trust you to come up with some good designs. No pressure, you understand.\" I gave him a big grin.\n\n\"Gee thanks, Don, I will be sure to tell my boyfriend what a great guy you are.\" Ken said mock sarcastically. \n\nI shrugged my shoulders. \"Ken I'm sorry but I don't know what to buy them and it really is important to us that we get them the best presents we can.\"\n\nAt that point Robin opened her big mouth. \"Daddy,\" she said so innocently, but I could tell by her grin that what was coming out would be bad. Megan, too, knew something was coming, but she always enjoyed her younger sister's explosive comments. \"Daddy, just before we met Maria, do you remember you were talking about Queen, Rock Hudson and other things like that? Well Daddy, I was wondering about Ken and&hellip;&hellip;\"<br/> <br/> \"Robin, shut up, Rock Hudson was not gay.\"\n\n\"Don, what is going on here? I think&hellip;&hellip;\"\n\n\"My daughter is what is going on here and she likes to play with nitroglycerine. If we encourage her&hellip;\"\n\n\"But, Daddy&hellip;\"\n\n\"Robin, Rock Hudson was not gay, Ken is not gay and neither is his boyfriend. Have I made myself clear?\n\n\"Actually, Don, I think my boyfriend might be gay. Megan and Robin did notice their dad is going to a gay guy for advice about what to buy a woman. Have they covered stereotyping in school, yet?\" He was looking at me with a big grin.\n\n\"Don't you start with me or I'll start charging you for double occupancy because your boyfriend is in your apartment all the time.\"\n\nWith a lot of work I got the conversation back on topic. My, girls bless their hearts, already knew the birth dates of our four targets and their preferences in jewelry. Maria likes necklaces and earrings, Freddie and Vanessa like earrings and bracelets, and Kathy likes earrings but she has a fondness for old style broaches too. Ken perked up at that and he said that it wasn't often that he had a chance to work on designing a broach.\n\nHe and I walked back to my office to discuss prices. I told him I wanted only quality materials to be used. I would prefer something small, built of good quality metal and gems rather than something big built out of junk. For Maria I told him to spend ten to fifteen thousand, for her friends three to five thousand, but I would prefer the higher figure. \n\nKen told me that he would need a check right away for materials and he would charge me a thousand dollars per person to design and construct jewelry for Maria's friends, but for Maria, he would charge two thousand. I said that seemed reasonable. What do I know about jewelry? Ken always seemed honest and, on top of that, I know where he lives. I also told him that he didn't have to pay next month's rent as a bonus. I just begged him to give it his best effort. I gave him a check for twenty thousand and a credit card number if he had to make any quick purchases. If he needed more money, he knew where to find me.\n\nI was spending almost a third of my yearly income, but the way my life had turned around in the past few months made it seem like I was getting away with a bargain.\n\nKen left and I went back to talk with my girls. \"Megan, Robin, I just had a thought.\"\n\n\"Oh, oh! Daddy is thinking again. I thought we told you to stop that!\" said Megan with a grin. And here I thought she was my good child. She and Robin exchanged high fives.\n\n\"I swear I'm going to sell you as crew on a Japanese fishing trawler. You'll eat nothing but really fresh sushi for months and you'll never have a piece of THE PIE again.\" That shut them up!\n\n\"We are buying gifts for our new friends and it is very possible that they will not be expecting us to. It is also very likely, since we are so new in their lives, that they will not be buying us any gifts, which is fine by me as I'm happy just to have them as friends. So, if we don't get any gifts from them don't act disappointed, okay? We wouldn't want to hurt their feelings. After all, look at us, we almost forgot to get them something, so they might forget too.\"\n\nMegan and Robin just looked at me pityingly and shook their heads. \"Dad, Dad, Dad, you call that a thought?\" Megan said. \"Just being with them, especially Maria, is present enough for us. We know better than to act like spoiled kids.\"\n\n\"Megan, I think Daddy is just getting old. Brain cells are dying.\" Robin shook her head sadly.\n\nI'm going to strangle them and I'll never be convicted. They'll call it justifiable homicide; I might even get a statue erected in my honor for saving the world from them. \n\nMaria came by as normal on Wednesday and spoke about the upcoming weekend. She was all excited about decorating her house for Christmas, which then got Megan and Robin all excited. They began gabbing away about how to decorate Maria's house. Maria wanted them to go shopping with her Thursday night for decorations, but they had to say no. They hadn't been spending enough time with their mom lately. They just had to spend Thursday night with her, especially since they would be back with me and Maria for Friday night. Maria understood, but I thought she looked a little peeved when they mentioned their mother. Then Megan volunteered me to go with Maria. Maria looked up so hopefully that I told them sure, I would be happy to go, and actually I was, I always enjoyed Christmas. Back when I was married, Barbara would always disparage my joy in the season and I never could understand why.\n\nThat Thursday night I met Maria at her condo to go shopping. We took her SUV, since it was bigger. Surprisingly, she had me drive, and here's how the evening routine progressed. We would be passing a store and she would suddenly say, \"Ooh, ooh, stop here, right here, there's a parking space.\" The parking space she would be pointing at would be just barely big enough for a motorcycle, let alone her SUV, so I would have to drive further for a decent size space. First, though, I would offer to drop her off at the door and she would politely and firmly refuse. So, for the inevitable long walk back to the store from the parking space, she would harangue me about passing up the first space.\n\nTo make matters worse, when we would walk by the space that I had rejected, we would find that someone had already parked a vehicle in it, one even bigger than Maria's SUV. I swear I don't know how they did it or how they got out of their car after they did it. That didn't happen just once that night, it happened three times.\n\nSo, after the third time it happened, I just gave the keys back to Maria. We hit a few more stores and sure enough at one of them was a space too small, in my opinion. Maria looked at me with a fierce expression and pulled right in. But we did have a hell of a time getting ourselves out and back in the SUV. We actually had to climb into the back of the SUV, work our way over all the shopping bags, and climb out and back in using the rear hatch. I didn't dare say a word of complaint, though. I think she would have killed me.\n\nEven with the parking space dance, I had fun that night. We bought ornaments, tinsel, lights and Christmas village sets. Maria even bought a special Christmas train that she could program to run around her home; it didn't need tracks. The locomotive pulled three open cars that you could put presents or food in. It came with a charger that looked like a little train station. When the battery was low, the train would automatically pull up to the toy building and start to charge. The thing wasn't cheap, but she thought Megan and Robin would get a kick out of it. I thought Maria was pretty darned excited by it, too.\n\nThat was one busy weekend. We decorated, we skied, we danced and we ate too much. Maria extended invitations to our late Christmas celebration to her three girl friends. Freddie was already going to be there with Maria starting on the twenty-third and now that Vanessa and Kathy heard about our plans for the twenty-sixth they said they could be at Maria's early in the morning for a second Christmas. So, the whole gang would all be together again at Maria's home for Megan and Robin.\n\nMaria's normal visit on Wednesday the week before Christmas was kind of a sad one for me because after that my babies would be with their mother until the twenty-fifth. I knew that I probably see them more than my fair share, but I love them. I was kind of hoping that Maria might extend me an invitation to do something during the following week, but she didn't mention anything. We had a good time that night anyway; we watched \"Miracle on 34<sup>th</sup> Street\" and I baked THE CAKE especially for them. In the morning everybody left and man, it was lonely after that.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;\n\nAcross town Barbara was having a difficult time dealing with the holiday season as she thought about her life.\n\nThe past couple of months have really sucked. I've hardly seen Megan and Robin at all. I don't dare complain, because everything is my fault. Of course Don wants to spend time with them and of course they want to see their father, but where does that leave me, the lonely villain of the piece? When it all started over two years ago Don was supposed to have them every weekend starting Saturday morning to Sunday night. Then it became Friday night to Monday morning. Since then they've added Wednesday night too. And frequently it is one more random night a week. So at most I see my daughters three nights a week, and sometimes only two.\n\nSure, I can go out with friends on those nights when I'm alone, but I've got a lot less real friends nowadays. I deservedly lost most of those after the divorce. They didn't like how I had deceived them and used them to hurt Don, and I can't blame them &ndash; I was a nasty, adulterous bitch. \n\nSome of the people I go out with associate with me only because I pay for everything. The only time I can even fake happiness is when I'm on a romantic date. For just a little while I can lose myself in the evening. But then the evening is over and I crash even worse. I will never be able to find someone to replace Don and I don't even want to try. I was a fucking idiot, I must have been out of my mind!\n\nWell, at least I'll have Megan and Robin for the next week. We'll be going to my parents' house. I love my kids, but I can't stand to be alone with them. The looks they give me sometimes are so dreadful with their accusing eyes that seem to say, \"Why did you ruin our family? Why did you cheat on our daddy? Why are you an adulterous slut?\" I just cringe when they do that. With my parents there, there will be other distractions so I don't get so many of those horrible looks. I will get a few from my mother, though. I remember how Dad tried to put some of the blame for my cheating on Don that one time. Well, Mom wasn't going to put up with any of that, so she told him off good and me, too, indirectly. She had him sleeping on the couch for a month even though they've got a big house with available guest bedrooms. Something he said made her think that he might have cheated on her in the past, I guess. Dad's been walking on thin ice ever since.\n\nMom has never said a bad word about me; I know she still loves me, but she is so disappointed in me. She did try to give me helpful advice once, but most of it wasn't helpful at all in the face of the enormity of my sins. \n\nWhen Don divorced me, my heart was crushed but it was still beating. Now every day what remains of my heart gets another little cut or two. A look from my daughters, a memory of Don, a look from my mother, and there are other ways that I get those little cuts. The truth is that I am emotionally and mentally dying, and when my heart finally stops beating I am beginning to wonder if anyone will miss me. When my emotional heart finally stops, I know that I won't be able to live like that and it will be time to finish off my physical heart. \n\nMy daughters are home from school. Time to watch their faces shut down. When I spy on them walking up our street, their faces are so happy. Probably talking about their time with their father. Then when they open the door their faces will completely change. I know that they are not doing it deliberately to hurt me, but it happens all the same.\n\n\"Mom, were home,\" calls out my oldest.\n\n\"I'm in the kitchen.\" I'm trying to make them an after school snack. I'm a decent cook and actually I can cook more things than Don. There is something magical about the things that Don makes, however, that I can't even come close to matching. I've long since given up trying to bake. I've made them both a toasted club sandwich. I wonder if this time they will eat it, or just say they are not hungry again?\n\nI can hear their footsteps approaching. That's odd, these footsteps aren't normal. Ever since the divorce their footsteps have been slow when approaching me, like they were only reluctantly coming to me. But this time they seem to be full of energy. I looked up hopefully.\n\n\"Hi, Momma, we missed you,\" Robin says, as Megan rushes over to give me hug. What the hell is happening? I like it, but what is happening? I hug my daughter back and she doesn't start to let go until I finally stop the fierceness of my hug. It is wonderful. I kiss the top of her head, as I let her go.\n\nRobin steps up to give me a hug, bliss.\n\n\"Oh, I missed both of you too, so much. How was school and how was your time with your father?\" That is a safe question to ask. They will give me details about school, but only talk in the most general terms regarding Don. I mentally castigate myself again, I know why they do that and, truthfully, it is no less than I deserve.\n\nAs Robin steps back, I kiss her cheek. \"I hope you're hungry? I've made you a couple of sandwiches with chips.\"\n\n\"Starving, Mom,\" Robin says as she pulls out a chair to sit down. Megan sits down to and asks, \"Do we have any bread and butter pickles?\"",
        "\"I'm sure we do, I'll get them,\" as I rush over to the refrigerator, praying that we have pickles. I don't know what is going on, but I will do anything to keep the mood going. Luckily we have the pickles and I breathe out a silent sigh of relief.\n\nI sit down with them. And for the first time in years, we have a wonderful chat. I felt so good that I got up to make myself a sandwich; my appetite has been inconsistent lately. I was in for further surprises. Megan and Robin didn't get up when they finished their snack. They stayed at the table and talked with me until it started to get dark outside. At that point, they got up to do some of their homework and I started dinner.\n\nWhen they left the room I fell across the table crying, and begged God to let this change in my daughters' behavior continue.\n\nFriday after school was the same. It was fantastic. Had they finally forgiven me?\n\nOn Saturday, we loaded up the car to go to my parents' house. They live about forty-five minutes away, outside of town. The drive was great. For the first time since forever they put a CD in the player and we all sang along. We used to do that all the time with Don. \"Dashing through the snow in a one horse&hellip;.\"\n\nNormally I drive about ten to fifteen miles an hour over the speed limit. This time I did exactly the posted speed, grateful for anything to prolong the trip.\n\nWhen we got there my kids rushed out of the car to give Grandma and Grandpa hugs. It had been a long time since that happened, too. Mom looked over their heads at me and saw my smiling face. Her face broke into a huge grin and her eyes got a little bit teary.\n\nWe had a wonderful six days. We did all the family stuff we used to do. We played games and watched movies. Megan and Robin spent a lot of time with my mother learning how to bake some of the family recipes. Maybe they would have the touch, I certainly didn't.\n\nOn Christmas Eve, Megan and Robin got out DVDs of \"It's a Charlie Brown Christmas,\" \"Rudolph the Red-Nose Reindeer,\" \"Frosty the Snowman\" and other Christmas cartoons. They made us all sit down and watch every one, it was simply wonderful and we watched DVDs for four hours straight. I sat there on the couch with my babies snuggled up on either side of me, I was in heaven.\n\nOn Christmas morning we went to church after breakfast and then came home to open presents. Megan and Robin had a small present for me. I opened the box with shaking hands. Inside was a simple, but very well made heart shaped gold locket and chain. \n\nInside the locket was a picture of them cheek to cheek and an inscription, \"Merry Christmas Mom, We Love You, Megan and Robin.\" I couldn't stop crying. It was the best Christmas present that I had ever gotten in my entire life.\n\nAt six o'clock that evening Don came by to pick up Megan and Robin, and my mom went outside to help them. I knew that I had to stay inside; Don had made it abundantly clear that he never wanted to see my face again. \n\nAs for my father, he and Don have never gotten along. Dad was a successful banker and an ex-football player who almost turned pro. To say that Dad was arrogant is putting it mildly; he has changed quite a bit, though. I even think Dad and Don came to blows one time. Dad was always riding Don about absolutely nothing and then one day they went for a long walk. I could just imagine the situation. Don finally telling Daddy off and Dad taking a swing at Don. Don would never throw the first punch. When they got back Dad had the beginnings of a shiner and he was holding his stomach, Don looked perfectly fine. Dad said that he fell. From that time on they were coolly polite with one another and Daddy gave Don a certain wary respect. \n\nI was sad to see Megan and Robin leave, but this Christmas had been the best. Maybe it was time for me to straighten out my life. My daughters' love and this locket seemed to be giving me the strength to try.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;\n\nMegan and Robin were very happy with themselves. Their therapist had helped them see how badly they had been treating their mother. They had also been feeling guilty about how well they had been treating Maria in comparison to their mom.\n\nYes, their mom had taken a hammer to their family, but she was still their mom, she gave birth to them and loved them very much. It was time to forgive her. They got some advice from Ken about a locket. He didn't have time to make anything, but he pointed out an internet site with high quality jewelry. Their dad lent them his credit card, they made the order and when it arrived Ken inscribed the locket for them. \n\nThey loved Maria now, but they had always loved their mother. Their hearts were big enough to love both.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;\n\nWe got to Maria's house after singing Christmas Carols the entire trip. My voice was worn out. It was nice that Maria had given me a key card to the gate; it made it easy getting in. She had pointed out that it was stupid not to give it to me since I had keys to her condo already.\n\nMegan and Robin jumped out of the car and ran to Maria and Freddie to give them big hugs before we unloaded the vehicle and went inside. As soon as we were done unpacking Megan and Robin dragged us all down to the movie room to watch animated Christmas shows. They acted like they had never seen them before and Robin wanted to start off with Rudolph.\n\nMy girls insisted that we all be in our pajamas, but I put on a robe, too; I hardly ever wear pajamas. Megan and Robin had us all sit on the same couch together, covered by a blanket. Freddie was on the end, then Robin, then I was put in the middle, then Megan and finally Maria on the other end. Maria and Freddie seemed to get a real kick out of it.\n\nIn between Charlie Brown and Frosty, I went to the kitchen and got us all a big piece of THE CAKE. When I came back I found that Megan and Robin had switched positions. They spent most of the evening making sure that we were all snuggled up with each other as tightly as possible. Actually, it got physically uncomfortable for me being in the center and covered by a blanket, I just got too damned hot. All four of the girls were having a marvelous time, though, so I just kept my big mouth shut and sweated it out.\n\nThe next morning we all slept late. When we finally got up, we adults and Megan had coffee, but we waited for breakfast until Vanessa and Kathy got here. They finally arrived at about nine. The girls had insisted that all of us remain in our pajamas, so they insisted that Kathy and Vanessa change, too.\n\nThe two ladies were happy to comply and understood the necessity. One must keep with the appropriate theme, after all. There was a ton of presents beneath the tree and most of them seemed to be for Megan and Robin. I wondered how I could get all those presents home, and also wondered if we could leave a lot of them in my girls' bedroom here. They got all the usual stuff - clothes, purses, shoes, computer games, books, DVDs, CDs and some very nice jewelry. Maria had also bought them some very high end notebook computers for school; actually I was kind of jealous, my laptop wasn't nearly as good!\n\nThen I got some presents, too. Vanessa gave me a gift card to Sears with a hint in the card to use it in the tool department. Freddie gave me one to Lowes, and Kathy gave me another to Home Depot. I think they know me too well. Maria gave me a card with a picture of a chair inside. It's something called an Aeron office chair and it looks pretty slick. She told me to call the number on the picture to set up delivery.\n\nThen it was time to hand out their presents. Robin and Megan solemnly handed them out. Ken had designed some really beautiful pieces and I had gotten away with it pretty darned inexpensively. I don't know if he did all the work on the pieces or ordered components and assembled them, but he had all the materials rushed to him in three days and then worked many late nights in my workshop and a jeweler's shop in which he had some rented time.\n\nFreddie got a matched bracelet and earring set made of 18 carat rose gold. The bracelet was made of small dragons and carnations interlinked, and in the center of each carnation was Freddie's birthstone. Freddie's earrings were carnations with a good size diamond in the center.\n\nVanessa got almost the same thing. Her pieces were made out of 18 carat white gold. The bracelet was interlinked tigers and lilies, and her birth stone was in the center of each lily. The earrings were lilies, again with a good size diamond.\n\nKathy's jewelry was made out of 18 carat yellow gold. Kathy's broach looked like a bundle of dahlias with her birthstone in each dahlia, but if you looked again, you could see the face of a lion and the eyes of the lion were diamonds. Her earrings were dahlias with diamonds in the center.\n\nBut for Maria, Ken had pulled out all the stops and gone over budget, but I didn't care. The metal he used this time was platinum. The necklace was heavy with part of it being interlinked roses with small diamonds in the center. There was a large pendant on it as well that looked like a spray of three roses, again with diamonds. The earrings matched the pendant.\n\nThe four women were all absolutely stunned with their mouths open in total astonishment; my girls and I exchanged high fives. Maria's pendant had a small inscription on its back. I knew all the ladies could afford better, but at least it wasn't cheap stuff and it was very well made on top of that. I was probably going to give Ken an extra month free rent. He had worked his butt off getting everything done in time. Ken was having some sort of financial difficulty right now and I was going to be glad to reward his hard work.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;\n\nLast night with all of us watching cartoons was my best Christmas in a long time. First Megan snuggled up with me, and then Robin. Freddie and I kept on sneaking glances at each another only to see a grinning face looking back each time. She had a blast too.\n\nVanessa and Kathy showed up a little late the next morning, and Megan and Robin promptly chivied them into putting their pajamas on like the rest of us. We all sat around the tree watching the girls open their presents first. I had probably spent too much money on them and Don might be upset, but it was worth it. The way they oohed and aahed at all their gifts, especially the notebook computers, made it all worth it, and I even saw a look of envy on Don's face, too.\n\nDon had laughed at all the gift cards he had been given for various tool stores. He was a little confused with my gift at first, but he finally figured it out and was obviously pleased.\n\nI was touched that they had thought to get gifts for all of us. First they gave Freddie her gift, and I was getting mentally prepared to have to act impressed. I didn't have to act at all, I was shocked and astounded at the beautiful pieces of jewelry they gave her. I know jewelry; I have pieces worth well over a hundred grand. The pieces with their beautiful workmanship that Freddie held had to be worth at least ten thousand dollars!\n\nThen it was Vanessa's turn and they brought her the same size box as Freddie's. Her jewelry was just as exquisite as Freddie's, but white gold instead of rose. My mouth was beginning to drop open in astonishment. Vanessa's and Freddie's mouths were already hitting the floor.\n\nKathy opened up her present with trepidation. Her beautiful pieces were in yellow gold. The broach in particular was of a delicately clever design with a hidden lion face.\n\nThen it was my turn. Here I had been worried about them thinking I had spent too much! Megan and Robin handed me the largest present yet and it was heavy. I was absolutely stunned at what was inside. I picked up the jewelry. Yes, there was no doubt, only one thing is that heavy, platinum. It was all diamonds too, no lesser stones. These pieces Don had given me were probably worth more than my new SUV. I was going to have to kill him! Then I saw the inscription on the back of the pendent, \"Merry Christmas, Love Megan, Robin &amp; Don.\" That caused me problems. You can't exactly kill someone after they say or write something like that. But I planned on really bruising him.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;\n\nThe ladies all sat around comparing the jewelry. Then as one they said \"YOU SHOULDN'T HAVE!\" Unfortunately, they sounded like they really meant it and I could be in trouble here, so I did what any red blooded male would do in that situation; I blamed it on my kids. I pointed at them and said, \"They made me do it!\"\n\nYou have to understand that Megan and Robin were really excited at the presents they had gotten and given. They also had no idea how much money I had really spent so they were happy to, in their minds, take the credit for making me buy our four friends such nice gifts.\n\n\"Yep, Daddy almost screwed up big time. You know men; we had to remind him about Christmas presents,\" Robin said gravely, like she was a fifty year old woman. I was paying attention to Robin so I took my eyes off of Maria for a minute. BIG MISTAKE!\n\nSuddenly my ear was in excruciating pain, as if someone had grabbed it and was attempting to lift me off my chair by it. Out of the corner of my eye I could see Maria, with a grim expression, grasping my ear. Oh shit! At my yelp of pain, everyone turned to look at me. Maria put a smile on her face and spoke.\n\n\"Oh, don't mind us; I just have to speak to Don for a minute, alone.\"\n\nShe kept hold of my ear pulling me along with her. I had to bend over at the waist and walk hunched over because of the way she was holding my ear. Didn't Thomas Edison go deaf because of a similar incident in his life? Megan and Robin tried to follow, but Kathy and Vanessa stopped them. Freddie had a big grin on her face, then she started to look worried.\n\nMaria dragged me all the way back to her office and shut the door behind us, and she still wouldn't let go of my ear!\n\n\"Donald, what do you think that you are doing, spending at least fifty thousand on my jewelry and another thirty on my friends?\"\n\n\"But, but&hellip;I didn't.\"\n\nShe shook my head by shaking my ear; it felt like she was going to rip it off. Wasn't there some fool artist that cut his ear off for a present to his girlfriend?\n\n\"Don't tell me you didn't! I know platinum when I see it. This is custom jewelry; I've never seen designs like this before. You spent too much money on us. Why did you do this? Are you trying to buy our friendship?\" She looked at me with tears in her eyes and finally she let go off my ear.\n\nOh oh, I had messed up once again; time to become the Unmasked Groveler. \"There's no need to tear, the Unmasked Groveler needs a beer.\" No, that doesn't make any sense, better work on a new slogan. \n\n\"Maria, please, give me a chance to explain.\" She started to reach for my ear again; I quickly put a heavy armchair between us.\n\n\"Maria, please, listen just for five minutes. Then if you want to take my ear off, I'll even get you a knife. Please.\" She crossed her hands over her chest, slightly lifting up her boobs in the process and gave me a grim look.\n\n\"Talk!\"\n\n\"The last few months with you and your friends have been great for my kids and me. Our lives have been completely turned around and we've had some wonderful, fantastic times. My babies are back in therapy and are really being helped. I've gotten the strength to do the same. If we hadn't met you I don't know how long we would have continued with that emotional pain rotting our souls.\"\n\n\"So, we wanted to make sure we got you a nice present for Christmas, to thank you for everything that you have done, and to thank you for being our friend.\" Oh oh, she was starting to look grim again. I better get the rest out.\n\n\"Maria, I'm happy that you think I spent so much money, because I like a good deal. But honestly, I didn't. I have a tenant who is a jewelry designer; actually I think he is an unemployed jewelry designer. All those pieces cost me less than thirty thousand dollars, honest. He used my workroom for a lot of it. Not to imply that you're not worth spending more money on, but it wasn't eighty thousand dollars. So I spent about one third of my yearly combined salary income. It was easily worth it to me. I just wanted to get you something nice to make you happy. So did my girls. I'm really sorry if you don't want it and, please, don't be angry with me. Now you can rip my ear off if you want.\"\n\nAnd I stepped out from behind the chair and I bent my head down so she could grab my ear more easily. Well she grabbed my ear and pulled my head over and GAVE ME A KISS ON THE LIPS! My knees went weak and Mister Wolf came out. She doesn't know how close she came to being thrown onto her office couch. Hold on, what is going on? She's not stopping the kiss and her arms are going around my neck. There is no way in hell that I'm going to be stopping THIS kiss.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;\n\nI was so mad at Don! Spending so much money, when he didn't have nearly as much as I did! But, I would give him a chance to explain, and then make him sleep in the garage.\n\nMy god the man is an expert groveler, nice quality for a husband to have. Hmmm, he wanted to thank me and make me happy? I've turned their lives around? The pieces only cost 30k? Impossible, but he doesn't look like he is lying. Now he is coming out from behind that chair and is walking out with his head down. What am I going to do with him?\n\nThe only sensible thing; I grabbed his ear, pulled his face to mine and kissed him. Oh it was a pretty good kiss for being closed mouth. Maybe I should open my lips a little. Oh! My tongue seems to have a mind of its own and is lightly touching Don's lips. His lips are opening. Oh! Very nice, very, very nice. He is being so gentle, but I can feel that he is restraining himself from a passionate fire waiting to take control. His hands are absolutely rigid, like two pieces of steel on my back. I can just feel that he wants to clench me to him so fiercely that I would be robbed of my ability to breathe.\n\nMy nipples grew hard, strained against my bra, and I started to get wet down below. A little more coaxing and he will be mine, maybe just a little more with my tongue. Oh, god, please let him love me in spite of my awful past!\n\nSuddenly, boom! The door slammed open and I heard screams as five bodies literally fell into the room. Don and I leaped apart and guiltily smoothed our clothes out. Shit, shit, shit!\n\n\"What are you all doing spying on us like that?\" I yelled at them. Megan and Robin quickly got up and hid behind Vanessa and Kathy who promptly pushed Freddie out front. \"It was her idea. She was worried because you seemed so mad.\" Freddie tried to force her way back behind Vanessa and Kathy, but they didn't let her.\n\n\"Freddie?\"\n\n\"Ah, ah, I just came back for a peek. Then Megan and Robin followed me and then Kathy and Vanessa followed them. We were just opening the door a crack because it got so silent when we sort of fell against the door and we all fell in.\"\n\nI breathed out a mental sigh of relief. They hadn't seen anything. I had almost jumped the schedule too far forward with Don. They had saved me, but I WAS REALLY SORRY THAT THEY HAD!",
        "Don began snaking his way past the roadblock at the door as he called out, \"I'm going to start breakfast.\" Megan and Robin followed their father, saying that they would help.\n\nMy friends all looked at me with fearful faces. I picked up the lovely jewelry that Don had given me and slowly put it on. My friends finally grinned at me and raced off to get their own jewelry.\n\nAt breakfast we all kept complimenting each other about our pieces. It made Megan and Robin very happy although Kathy looked a little ridiculous with a broach pinned to her pajamas.\n\nAfter breakfast we girls decided that it was officially pajama day. Don refused, but the rest of us stayed comfortable. The breakfast we finally had was so late that it we decided it counted for lunch. We watched two movies during the afternoon and ate more of THE CAKE.\n\nDon made his traditional Christmas dinner for us. He had insisted, and my girls had looked almost panic stricken when I started to tell him no, but one look at their faces and I fortunately changed my mind.\n\nDon served a spinach salad with no bacon because of Freddie. As an appetizer we had steamed mussels with white wine and garlic. Freddie's main course was the biggest, freshest king crab legs that Don could find. Don made a fourteen pound garlic encrusted prime rib with Yorkshire pudding for the rest of us. It was pretty damn fine! I'm not sure that I have ever had a prime rib that good before; maybe I have, but I couldn't recall for sure. He also made candied yams; he seems to prefer them over baked potatoes. \n\nI know a fourteen pound prime rib should serve more than six people, but there didn't seem to be much left when we were done eating. Once again we were too stuffed to move. Don had done all the cooking, so we should have done the clean up, BUT WE DIDN'T WANT TO MOVE! Saint Don shooed us all out of the kitchen and did all the clean up by himself. We rolled ourselves to the great room and sat around the Christmas tree, moaning our pleasure at another terrific meal. If Don and I hadn't been interrupted I'd have tried to keep him chained to me for life. Follow the plan, Maria, follow the plan. Don't blow it, it is too dangerous to go too fast.\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;\n\nI must have been the happiest pot scrubber on the face of the planet. Maria had kissed me. Maria had kissed me. MARIA HAD KISSED ME!  \n\nOh man, and what might have happened if they hadn't fallen through the door? I don't know what it means. I know Maria likes me, but does she REALLY LIKE ME? That is the real question! Maybe she was just overwhelmed by the gift and our thought behind it. She is just so far out of my league. These things just don't happen. I spent a blissful hour and a half cleaning the kitchen, far longer than I really needed, happily imagining Maria and me together.\n\nWhen I was done I went out to the great room and found everyone snoring away on various pieces of furniture. I looked down at Maria lying there and I had this urge to pick her up and carry her upstairs to my bedroom. One of these days I would just say fuck it and act on my desires. But not today with Megan and Robin here, I can't do anything to jeopardize their relationship with Maria.\n\nEveryone was sleeping so soundly that I didn't have the heart to wake them, so I found a chair that permitted me to conveniently watch Maria's sleeping face and I sat down to wait.\n\nIt took about a half hour for Kathy to wake up. I think she needed to go to the bathroom. She suddenly sat up, looking around the room like she didn't know where she was, and then she reached over and shook Freddie awake. Freddie nudged Vanessa and without a sound they all trudged off. They smiled at me as they walked by. It was kind of funny that they didn't wake Maria. Why do women always have to go to the bathroom in teams?\n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;\n\nFreddie hissed at Kathy and Vanessa, \"Why did you two have to follow me to Maria's office? They were this close.\" She helped up her fingers, with only a millimeter between them.\n\nVanessa answered, \"We didn't follow you; we were trying to stop Megan and Robin. Why did you open the door? If you hadn't we would never have fallen in.\"\n\n\"I wasn't opening it, I was closing it. Then you four came charging down the hallway and before I could get the door latched quietly, you all fell into me and I fell into the door.\"\n\nKathy asked, \"Did you see anything good?\"\n\n\"Oh yeah, they were giving each other thorough oral exams with their tongues. It was a tossup whether Don would throw Maria on the couch or she would trip him to fall on the couch.\"\n\nVanessa asked, \"Do you still think we have to go through this idiotic plan to polish Don and let him date other women?\"\n\nKathy replied, \"Unfortunately, I think we still do. Maria thinks of herself as the great scarlet women. Don thinks of himself as a loser. He's probably already making up some nonsense to explain away why Maria kissed him, anything but the possibility that she really loves him. The thing I can't believe is that Maria can't see how he really feels about her. It is so obvious it is sickening. Polishing Don or giving him lessons isn't really a bad idea if it helps him get rid of his self image as being a loser. On the other hand, if Maria would just rip his clothes off that would accomplish the same thing and be a hell of a lot quicker. The really critical thing, though, is that Don has to be brought to the point where he will be able to accept Maria's past.\"\n\n\"I swear, if Maria blows it with Don, I'm going after him,\" Vanessa stated with conviction.\n\n\"That's about how I feel, too,\" Freddie agreed.\n\n\"I can't believe you guys! Maria has first claim even if she has to move slowly. While I like Don, I don't think he is somebody that could rock my world,\" Kathy said.\n\n\"You don't think he would make a great husband?\" asked Vanessa curiously.\n\n\"Oh, he would probably be a great husband for someone else, but I kind of like bad boys and he most definitely ain't one of those!\" answered Kathy.\n\n\"Are we still going to spring the PDA on Don tomorrow, Kathy?\" asked Freddie.\n\n\"Yes, Freddie, and Maria said she wants to enlist the kids tonight. She'll talk to them after Don goes to bed. We'll watch one more Christmas movie tonight and then we'll put on a chick flick, that will be sure to scare him away. Come on, let's get back before someone comes looking for us.\" \n\n&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;\n\nI was still so scrambled from kissing Don that the evening seemed to go by in a disjointed blur. Don had a hard time meeting my eyes and I had a hard time meeting his. When the second movie started he finally went up to bed. We waited for about twenty minutes and paused the DVD.\n\n\"Megan, Robin, if you don't mind there is something we would like to talk to you about.\" Everyone gathered around and I began to explain things to my girls.\n\n\"My three friends and I like you two very much. We also like your Dad very much. We found out some things about your Dad that makes us want to help him.\"\n\n\"What's that, Maria? Is there something wrong with Daddy?\" asked Megan in a concerned tone of voice.\n\n\"No, nothing really to worry about, but he has an usual problem for a man his age. Let's see if I can explain it to you this way. Megan, you and your friends are probably already starting to talk a little bit about boys, and in two or three years maybe you will even start dating boys.\" And they had better be good enough for you or no one will ever find their bodies, I thought.\n\n\"It's normal for most young people to start dating around sixteen, but your dad had to work hard all his life taking care of his mother and his sisters, even when he was a teenager. As a result, he has dated and been with only one woman in his entire life, and that is your mother. That is really unusual for a man his age. On top of that, don't get mad at me for saying this, and don't get mad at your mother either, but he didn't even have a regular relationship with your mom. So, when it comes to dating women he is kind of like a fumbling beginner and he doesn't have any confidence in himself at all. Do you two understand what I'm saying? It is not his fault.\"\n\nMegan and Robin gave me some strange looks. \"I think I understand what you are saying, Maria, but what do you mean?\" asked Robin, and Megan nodded her head.\n\n\"When I first met your daddy, the way he rescued me kind of reminded me of a knight in shining armor. Well, all the troubles he has had lately have kind of made his armor a little rusty so my friends and I thought we would give your Daddy lessons on how to meet, talk to, and maybe even date women. We kind of made a joke about polishing his armor.\"\n\nRobin looked really confused and so did Megan. \"Maria, he talks fine to you, Freddie, Kathy and Vanessa, what do you need to teach him?\" asked Robin.\n\n\"Right now your daddy is our friend, but he doesn't know how to be a boyfriend.\"\n\n\"Are you saying our daddy is a dork?\" asked Megan with a touch of anger. Freddie and Kathy laughed, and Vanessa bit her tongue.\n\nI blurted out, \"Kind of, but he's a really, really nice dork.\" At that, Kathy, Freddie and Vanessa just completely lost it. Their laughter kind of bled the anger from Megan's and Robin's faces.\n\n\"We really like him, we just want to polish him up a bit, sort of like when we've been giving him dancing lessons. We think we can turn him into a real hunk, and he'll have to beat women off with club.\" He'd better beat them off, or I'll beat HIM with a club.\n\n\"But, Maria, we thought you kind of liked Daddy. We were really hoping that you and him could&hellip;.\" and Robin let what she was saying die off. But I understood what she said. \n\nI gathered the two of them into my arms and hugged and kissed them. \"I do really like your father, and maybe even in that way. That is a big secret and you had better not tell him. However, he has never really dated anyone else but your mom and he doesn't know how. I'm like the first woman he has met since his divorce. I just have to be sure that he is the right one for me and I am the right one for him, and he has to build up his confidence to even be with another woman. I figure that if we give him a good polishing, then I can see what kind of man he is and he can see what he wants in a woman.\"\n\n\"Right now I see a lot that I really like in your daddy, but your daddy's confidence is in the crapper, and until we can build it back up I don't think me being his girlfriend would be a good idea. For example, you notice how he is practically our servant for these weekends. It is nice, but he carries it to the extreme. He has got to able to look in the mirror and see what a wonderful guy he truly is because he certainly doesn't realize that now. Once he starts treating himself with respect, others will do it too.\"\n\n\"We think that if we turn him into a smooth talking handsome hunk of a man it will be so obvious that even he will see it, and so will others, and slowly but surely we will start to rebuild his ego and confidence. We really like your dad, and only want the best for him. Do you understand?\"\n\n\"Why are you telling us this?\" asked Megan.\n\n\"Get the ballcaps, Freddie,\" said Kathy. What ballcaps?\n\n\"Well, it is kind of silly, but we started a little club to help your daddy. We want to teach him how to dance, talk to women, exercise properly, dress well, style his hair and even ride a horse. These are all things that we think a real gentleman should do. Nothing bad, mind you. We're not trying to keep this a secret from him because we need to get his agreement on this and, we figured, why not get your help too? We're not with him all the time, so he's going to need a couple of coaches at home to keep an eye on him.\"\n\nFreddie hurried back into the room and Kathy started to speak. \"How would you two like to be junior members of the Polishing Don Association, though you could say Polishing Dad Association? We even got some nifty hats and membership is free.\" \n\nKathy took a cap from Freddie and put it on. It was dark gray with a picture of a knight on it. Half his armor was bright and shiny, the other half was rusty. Her cap said P.D.A. with cursive letters. It also had \"Planning Dept\" and her name written on it. Freddie had her name and \"Comic Relief\" on hers. Vanessa's had her name and \"Physical Education Dept\" embroidered on it. I got mine and, sure enough, it said \"President\".\n\nRobin quickly grabbed hers and put it on. It had her name and \"Junior Member\" in bold letters. Megan took hers, put it on, shook her head and said, \"This has to be the silliest thing I have ever heard of! I better join to keep an eye on you guys, but you're not going to tell Daddy about this association, I am. Adults always making things so complicated.\" With that pronouncement, she grabbed the DVD remote, hit the play button and sat back in her chair. She was muttering to herself and I wasn't sure I wanted to hear what she was saying. So, we all settled back to finish the DVD. When it was done Megan and Robin went upstairs to bed instead of making it a regular movie night. The rest of us did the same. \n\nThe next morning we were all at the kitchen table while Don was making French toast. Megan was inhaling her coffee as she turned to Robin and said, \"You tell him, I'm too sleepy.\"\n\nRobin brightly replied, \"Okay\" \n\n\"Daddy,\" she yelled.\n\n\"Yes, pumpkin?\"\n\n\"Maria, Vanessa, Kathy, and Freddie all think you're a dork.\"\n\n\"That's true, honey. But I'm a nice dork.\" \n\nDon didn't even pause while flipping the french toast.\n\n\"Well, we started a club to undork you, so you can be a stud and meet lots of women. Is that okay?\"\n\n\"That's fine, I could use a good undorking. Do we have to pay anything?\"\n\nRobin turned to me and I frantically shook my head no. \"No, Daddy undorking is free.\" All my friends desperately had their hands over their mouths at this point. I think Freddie was laughing so hard that tears were coming out of her eyes and she started snorting through her nose.\n\n\"What's the name of the club?\" Asked Don.\n\n\"The Perfecting Daddy Association,\" answered Robin. Megan wasn't even paying attention, she just sat there and sipped her coffee like this was an everyday occurrence for her.\n\n\"That's a nice name, do we get t-shirts?\" asked Don.\n\n\"No, just ballcaps.\"\n\n\"Well, I guess that's better than nothing.\"\n\nWith those solemn words, we were now officially in business. I was beginning to think that maybe I needed a good undorking too.\n\nThe End of Part Two\n\nTo be continued...\n\n*\n\nHope you enjoyed it. I apologize that I am still building the story in Part Two, lots of excitement in Part Three.\n\nI have been informed by my editor that it is sweeps week. Look forward to the exciting conclusion of Sophia in Part Three. There will be romance, sex, cooking, intrigue and comedy. Honest, would I lie to you?\n\nLine from Part Three.\n\n\"Carefully she put the laser sight on Don's date for the evening. Try and steal Don, she thought. This is the end for you.\""
    ],
    "authorname": "CastleStone",
    "tags": [
        "cheating wife",
        "betrayal",
        "cheating",
        "dork",
        "cooking"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/sophia-pt-02"
}