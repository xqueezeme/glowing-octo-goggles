{
    "title": "Dr, My Implants Are Haunted! Ch. 01",
    "pages": [
        "This story is definitely NOT to be taken seriously - - it's just a silly bit of fun I wanted to get out of my head. As it's the first time I've tried writing in the Humor/Satire category I hope you'll be gentle with me as far as comments or votes go.\n\nAs always, everyone is 18 or over.\n\n\u2020 \u2020 \u2020 \u2020 \u2020\n\n\"Doctor Freeland? Mrs Wilson is here for her appointment.\"\n\nThe Doctor thanked his receptionist and turned to Mrs Wilson's notes. Married, 39 years of age, mother of two boys aged 18 and 19. Her husband, Walter, had paid for her to have breast implants several months ago to \"increase her confidence\" as he'd put it. Everything had gone fine - - even if Mr Wilson had proved to be keen to spend as little as possible - - and Mrs Wilson had been released some months before. Her routine check-up had been completed by the nurse who noted nothing unusual, so why was she back?\n\nEmily Wilson entered the doctor's office and - - even though he knew what to expect - - Dr Freeland couldn't help admire both her and his handiwork. When he'd first met her, she'd been something of a middle aged wall flower - - now, with judicious application of make-up, tight yet smart clothes, and a new hair cut, she was the definition of a MILF. A large part of that - - or perhaps that should be TWO large parts - - were thanks to Dr Freeland's handiwork - - her enormous fake breasts sat high and perfect on her chest, the beginnings of a deep cleavage visible above the neckline of her dress.\n\n\"Mrs Wilson, how good to see you again,\" the doctor said, indicating the chair in front of his desk.\n\n\"Thank you, doctor,\" she said, \"but I'm afraid I've come with a problem.\"\n\n\"Straight to the point, Mrs Wilson. Well, what can I do for you?\"\n\n\"It's these,\" Emily said, sitting up straight and thrusting her impressive bosom forward, her dress straining tight against them.\n\n\"Your breasts?\" the doctor asked. \"What's wrong? Are you in pain?\"\n\n\"Oh no, doctor, no,\" Emily said. \"From that point of view, they're perfect. Everyone thinks they look great and I love having big boobs for the first time in my life.\"\n\n\"Then what's wrong with them?\"\n\nEmily paused, blushing slightly. \"I think - - I think they're haunted, Dr Freeland,\" she said eventually.\n\n\"Haunted!?\" the doctor laughed. \"What on earth do you mean?\"\n\n\"Since I've had them I've been acting - - differently at certain times.\"\n\n\"Of course you have. Your confidence has increased so your behaviour is bound to have altered.\"\n\nEmily shook her head. \"No, doctor, you don't understand. If I hear a certain word - - it's like a switch going on in my head - - I swear I hear a different voice, I become a different person who makes me do - - awful things.\"\n\n\"What sort of things, Emily? You haven't hurt yourself or anyone else, have you?\"\n\n\"No, nothing like that.\" Emily paused again. \"When I hear this word - - I become - - very sexually charged.\"\n\n\"And - - and what is this word, Emily?\" the doctor asked.\n\n\"It's the coarse word for breasts, beginning with T.\"\n\n\"You mean ti - - \"\n\n\"Don't say it!\" Emily said, clapping her hands over her ears, her forearms inadvertently squeezing her huge breasts together.\n\n\"It's alright, Emily,\" the doctor said, staring at her breasts for a moment. \"It's alright, I won't say it.\" Emily put her hands down. \"Why don't you tell me what's been happening?\"\n\nEmily thought for a moment then looked at him with an expression of hope.\n\n\"Maybe if I tell you what's been going on, you'll understand and try to help me?\" she asked.\n\n\"Of course, of course,\" the doctor said.\n\n\"Very well. It all started a couple of months ago - - \"\n\n\u2020 \u2020 \u2020 \u2020 \u2020\n\nWalter was at work, Adam and Mark - - our sons - - were both out with friends leaving me in the house just doing some chores, cleaning up, that sort of thing. Because of that, I was wearing an old pair of denim shorts and a loose T-shirt - - although so few of my clothes are loose since the operation.\n\nThe doorbell rang and I went to answer it, finding a delivery man stood there with a parcel.\n\n\"Package for Mrs - - woah!\" he said, obviously staring at my boobs.\n\n\"Don't be so rude,\" I said. An appreciative glance is one thing - - simply staring is another.\n\nAs I signed for the parcel, he said \"I'm sorry, ma'am, but I hope you don't mind me saying but those look to be the biggest tits I've ever seen!\"\n\nAnd that was when it happened - - I was about to tear a strip off him for his rudeness when I heard another woman's voice in my head saying Finally, someone appreciates me! Invite him in!\n\n\"Would you like to come inside and get a better look?\" I heard myself ask him in a huskier, sexier voice than my own.\n\n\"Shit yeah!\" he squealed. He charged in almost knocking me over in his eagerness and we stood in my hallway, looking at each other.\n\nCome on, show him those big titties of ours! the female voice in my head said.\n\nI swear I wasn't in control of myself as I lifted the hem of my old T-shirt and whipped it off over my head, revealing my new, huge boobs.\n\n\"Oh man, oh man, oh man!\" the delivery guy babbled as he stared at my boobs, his tongue lolling out the side of his mouth, his eyes almost on stalks.\n\nGo on, let him have them, the woman's voice said. Jesus, do I have to do everything around here?\n\nI watched myself reach out and take hold of his hands, bringing them up so that they were filled with my boobs. This delivery guy - - whose name I didn't even know - - became the second man after my husband to ever get his hands on me.\n\nHe almost passed out as his hands roamed all over my enormous bosom, his hands nowhere near big enough to contain all of my new boobs as he continued gibbering \"Oh man, oh man, oh man!\"\n\nGet his dick out - - it's been too long since I've had any cock!\n\n\"What?\" I asked in surprise. The delivery man was too involved with my boobs to pay any attention to me holding a conversation with myself.\n\nHis cock - - I want his cock! the woman in my head said.\n\nThe next thing I know, I'm undoing his shorts, pushing them and his grey, dirty undies down to the floor, revealing his stubby little penis that's standing straight out and pointing at me.\n\nIt's definitely smaller than I'm used to, the woman's voice said, but I guess I'll take what I can get right now.\n\nI'd never done what I did next, not even with my husband but without a second thought I dropped to my knees - - the delivery man bending over, never letting go of my boobs - - and swallowed his dick in my mouth as he was small enough to take it all in one go.\n\nThat's it, suck his dick! the woman said.\n\n\"Oh man, oh man, oh man,\" the delivery guy said. \"The boys at the depot are never gonna believe this!\"\n\nI'd never had a man's dick in my mouth before - - my husband thinks it's dirty - - but I couldn't stop myself, bobbing my head up and down, sucking and licking at his stiff little hard-on as he thrust back and fore, faster and faster. He groaned, his dick swelling and the woman in my head suddenly cried He's cumming! Take it on your tits!\n\nThis again is something I had never done, but I moved back as the delivery man's dick twitched and spurted a thin line of his stuff over my boobs followed by one or two others before his dick softened and hung limp between his legs.\n\nThat's it? Three spurts and he's done? the woman's voice said. Fuck, that was hardly worth the time.\n\nI looked up at the delivery man who looked down at me.\n\n\"I still need you to sign for the parcel,\" he said.\n\n\u2020 \u2020 \u2020 \u2020 \u2020\n\n\"Well,\" Dr Freeland coughed, unsure what to make of Mrs Wilson's story. \"It - - errrr - - it sounds as though your new - - errr - - confidence has really - - ummm - - taken on a new - - ummm - - new form.\"\n\n\"Weren't you listening, doctor?\" Emily said. \"It wasn't me. I'd never done things like that before. It was the woman's voice in my head. It was like she was taking control over me, making do these things time and again.\"\n\n\"Time - - and again?\" Dr Freeland said. \"You mean there have been other - - incidents?\"\n\n\"Plenty,\" Emily said, hanging her head in shame.\n\n\"And they all started because someone said the word ti - - \"\n\n\"Don't say it!\" Emily cried again, once more covering her ears.\n\n\"Sorry, sorry,\" the doctor said. He looked at his beautiful, busty patient and wondered what was going on with her. At the same time, he was more than a little conscious of how tight his pants were around his crotch right now. \"Why don't you continue your story?\" he said, trying to surreptitiously rearrange himself beneath his desk.\n\n\u2020 \u2020 \u2020 \u2020 \u2020\n\nAfter the delivery man left, I went upstairs and washed to get his muck off me and then finished cleaning the house. The woman's voice didn't return and I started to wonder if the whole thing had even happened - - had it not been for the parcel containing some new shoes I'd ordered, I could have put the whole thing down to a dream.\n\nI certainly didn't tell my husband about it when he returned home and, over the next few days, just put it out of my head. By the way, as much as Walter appreciated my new boobs, he never referred to them using that coarse word. In fact, he was a silent lover, just mmm-ing and ahhh-ing rather than use words and, as he'd been my first and only lover - - up until the delivery man - - I assumed all men were the same.\n\nI was soon to be corrected in that assumption.\n\nSeveral days later I went out jogging - - a new fitness regime had become part of my new life since getting my boobs done - - and went down a country lane I had used countless times before. At one stretch, I saw ahead of me some repair work being done to the road surface by two burly workmen. As I approached they stopped and blatantly stared at me - - despite my most constrictive sports bra and lycra top, my big boobs were still moving around quite a lot.\n\n\"Fucking hell,\" one of them said as I got nearer. \"Would you look at the tits on that?\"\n\nAgain, as with the delivery man, it was like a switch came on in my head and the voice that had been silent for days suddenly spoke up.\n\nLet's go say hi, shall we? the woman said.\n\nI slowed my run and walked up to them. \"Morning boys,\" I said in that sexy, husky voice that wasn't really mine. \"Like what you see?\" I asked, thrusting my boobs forwards.\n\n\"Fucking right I do,\" the older, bearded one of the two said. He nudged his younger work mate. \"Looks like we got a live one here, Andy.\"\n\n\"That right, love?\" Andy asked. \"You up for a bit of fun, eh?\"\n\nWe're definitely up for some fun, aren't we Emily? the woman said, using my name for the first time.\n\n\"What do you have in mind?\" I asked, stepping closer and putting my hands on their chests. Instantly they did the same, their hands grasping my enormous boobs.\n\n\"Let's have a look at these puppies to start with, shall we?\" the older one with the beard said.\n\n\"Good idea, George,\" Andy said as they worked together to lift up my lycra top and pulled down the cups of my sports bra, freeing my big boobs.\n\n\"Fucking hell,\" George said. \"I've never seen such big fucking tits.\" He bent down and began sucking one of my nipples, using both hands to hold my big boob up so he could stuff as much into his mouth as he could.\n\n\"Nor me,\" Andy said, doing the same with the other one. \"I think she likes it.\"\n\nThat's it, boys, suck those big fucking titties! the woman said inside my brain. You like that, Emily? You like having two men suck on your tits?\n\n\"Yes!\" I cried, realising that I did. Never had I thought of doing anything like this but I couldn't deny how good it felt.\n\n\"If you like that so much,\" Andy said, standing up and opening his overalls, \"you're gonna love this.\" He pulled out his already hard dick - - bigger than the delivery man's, about the same size as my husband's, maybe five or six inches.\n\nWell that's an improvement on last time, the woman's voice said as my hand reached down and took hold of his dick.\n\nGeorge laughed and fumbled with his own overalls, having to lift his big beer belly out of the way so he could reach in and fish out his dick which - - quite simply - - was enormous! He stroked it to full hardness and I swear it was about ten inches long. \n\nNow THAT'S a cock! the woman said. Get your mouth on that, Emily - - quick as you can!\n\nLike a woman possessed, I dropped to my knees and stuffed my mouth with George's big dick. I gagged a little as it was obvious personal hygiene wasn't high on his list of priorities but I couldn't resist the woman's voice in my head. The fat workman began thrusting his big, solid dick in and out of my mouth and - - unlike with the delivery man - - I found myself enjoying it, the size clearly making a difference to me.\n\nDon't forget his friend, the woman said. I turned and found Andy standing next to us, his own dick in his hand, pointing it at me. I turned and sucked on his for a moment, swapping back and forth between the pair of them.\n\n\"Fucking hell, look at her go!\" Andy cried. George stepped away as I sucked on Andy's dick, moving behind me and lifting me up, holding my head at Andy's crotch so that my legs were straight but I was bent at the waist. He pulled my jogging shorts down and I realised he meant to enter me.\n\n\"Jesus, girl,\" he said as he lined his dick up. \"You need to get a razor down here. It's like the Black fucking Forest!\"\n\nHe's right, the woman's voice said. When we get back home, I want that hair shaved.\n\nI'd never been one for more than the occasional trim of my pubic hair but I knew I'd have to do what she wanted.\n\nI couldn't help groaning around Andy's dick as I felt George's big dick push inside me. I was turned on - - more than I ever had been with Walter - - so I was wet down there but there was still some discomfort as a much bigger tool than I was used to pushed inside.\n\n\"Fuck she's tight!\" George groaned, sliding his dick in and out of me.\n\n\"Bet she's never had a big cock like yours before!\" Andy laughed.\n\nHe's right, isn't he, Emily? the woman said. But I'm going to make sure we get plenty more like it from now on.\n\nHer words both terrified me - - and excited me!\n\nAndy groaned as he moved his dick in and out of my mouth, reaching down and taking hold of himself, jerking himself off as I sucked him.\n\nHe's going to cum, the woman said. Make sure he cums on your tits! Tell him now!\n\nI looked up at Andy and - - to my shame - - said \"Please - - cum on my tits.\"\n\n\"Oh you dirty bitch!\" he said laughing. \"George, let her lay down for a second,\" he said. As his workmate withdrew his big dick, they rearranged me, laying me on the floor on my back. George spread my legs and stuffed his big tool back inside me, moving in and out as Andy knelt to my side, jerking on his dick.\n\nHold those big titties together for him, the woman said and I did it without thinking, pushing my big boobs together. It only took a moment before Andy sighed, his dick jumped in his hand and several long strands of cum splashed across my boobs.\n\n\"Fuck yeah!\" he cried as a load much more copious than the delivery man's landed over me.\n\nDo it! the woman sighed in my head. Cum all over my tits!\n\n\"You dirty cow!\" George grunted, still pounding away inside me, what little pain I felt having long passed as I became used to his size. In fact I was more than a little enjoying myself and even reached down, seeking between my furry lips for my love button, stroking it as he did me, something I had never done with Walter. \"You gonna cum for me, eh?\" he asked as he picked up his pace, his fat belly wobbling over me. \"You gonna cum?\"\n\nI'm almost ashamed to say that I did - - orgasms had previously been something I enjoyed by myself on the few occasions I masturbated - - but here I was, cumming on the long dick of a fat workman I'd met only minutes before.\n\nYes! Fuck me - - fuck me you big dicked bastard! the woman shouted inside my head as I came, shaking and moaning. He's going to cum, Emily, she said urgently. On my tits - - make him cum on my tits!\n\n\"Cum on my tits!\" I cried, making him laugh. He pulled his big dick from me - - leaving me feeling emptier than ever before - - and crawled up beside me, stroking his dick. He puffed and panted a few times then let out a long groan as he shot his load over me, coating my boobs with his stuff.\n\nYeah - - yeah, that's it! the woman moaned as George unleashed a large amount of semen over my boobs. Cum on my tits, she sighed.\n\nFinally George looked down at me.\n\n\"We're going to be here for the next week or so finishing this road,\" he said. \"Feel free to come again.\"\n\n\u2020 \u2020 \u2020 \u2020 \u2020\n\nThe doctor coughed and tried to make his groin comfortable without much success.\n\n\"Do you realise that the - - the voice is now referring to my body and my ti - - \"\n\n\"Don't say that word, doctor,\" Emily cried, cutting him off again. \"How many times do I have to tell you that? It's like you want to trigger an episode.\"\n\n\"Sorry,\" the doctor said. \"The voice in your head - - does it have a name?\"\n\n\"Oh yes, and that's part of why I've come to see you, doctor.\" Emily smiled at him and Dr Freeland felt his crotch throb a little more. \"I know my husband likes to save as much money as he can so I'd like you to tell me where you got my implants from and who they belonged to before me.\"\n\nDr Freeland felt himself blush. \"Now Mrs Wilson - - Emily - - surely you know implants can only be used once? There's ethical reasons, not to mention health and the communicability of infection from one person to another to consider - - \"\n\n\"Spare me, doctor,\" Emily said interrupting him. \"I have no doubt that Walter would find a way to use second hand implants if it could save him a bit of cash. Now I have a name of who owned these before me, but I want you to write down the owner before I tell you that name.\"\n\nDr Freeland wondered for a moment if there was something to her crazy story - - but how could there be? He took a page from his notebook and wrote something on it.\n\nEmily smiled and continued her story.\n\n\u2020 \u2020 \u2020 \u2020 \u2020\n\nWhen I returned home, I showered then trimmed and shaved between my legs, leaving a neat landing strip at the top, the rest as bald as a coot. When I was finished, I stared into the mirror, thinking about the two encounters I'd had and what triggered them. Taking a deep breath, I looked at my reflection and said \"Tits.\"\n\nIn the mirror, the scene behind my reflection shimmered and another woman appeared - - blonde, blue eyed with the face of a model and a pair of huge tits exactly the same as mine. She walked up and embraced me from behind, her boobs squashing against my back, her hands coming around and cupping my own, kneading and squeezing them and I swear, doctor, I could feel her hands on me as I stood alone in front of the mirror.\n\n\"Hello Emily,\" she said. For the first time I heard her not in my head but as though she were standing in front of me. Or rather behind me.\n\n\"Who are you?\" I asked.\n\n\"My real name isn't important,\" she said, her hands working over my boobs, fondling and caressing them. \"My stage name was Terri-Ann Titties. I think you can guess why,\" she said, tweaking my nipples, making me moan in pleasure.\n\n\"Stage name?\"\n\n\"Screen name really, I suppose. I was an adult actress.\"\n\n\"Why are you here? Why are you in my head?\" I asked her.\n\n\"Your cheapskate husband paid for you to have these implants,\" she said, \"but he bought them as used goods - - they were mine before I died.\"\n\n\"You're dead?\" I cried.\n\n\"Of course I am. How else could I be haunting you, the new owner of my pride and joy?\" She hefted up my boobs, squashing them together, forming a deep cleavage.\n\n\"Then it's you making me - - have sex with strangers?\"",
        "\"That's right, Emily. Every time you hear the word tits, I get to influence you. Every time a man cums on my tits, my influence over you grows. I'm just getting you used to being fucked and having hot, dirty sex with total strangers. Be honest - - tell me you enjoyed that fat workman with his big cock.\"\n\nI shook my head, but my body betrayed me, my nipples hardening beneath her ghostly hands as I thought back to the huge dick the fat workman had.\n\n\"No, no, I didn't,\" I lied.\n\n\"Yes, you did,\" Terri-Ann said. \"And I'm going to get you a lot more of that as well but with much better looking men. I'm going to make you a pornstar!\"\n\n\"What?! Why!?\"\n\n\"Because I need to get back into the porno business and track down the son of a bitch who killed me!\" She bent down and kissed my neck, one of her hands travelling down over my belly and into my newly trimmed and shaved pussy, making me shudder as she fingered me. \"I'm going to make you a pornstar, Emily,\" she said before she vanished.\n\n\u2020 \u2020 \u2020 \u2020 \u2020\n\nDr Freeland coughed as Emily paused in her story, wondering if he should call someone to have her taken away.\n\n\"So you see why I came here, doctor,\" she said.\n\nBecause you're as mad as a box of frogs? Dr Freeland thought to himself. \"Errrrr no, Emily, I'm afraid I don't.\"\n\n\"I need you to confirm whether what Terri-Ann said is true. Did you use second hand implants? Did they belong to a dead pornstar?\"\n\nDr Freeland felt himself blush. \"Well, ethically I couldn't possibly - - I mean, from a health point of view - - saving your husband some money - - he was quite insistent - - \"\n\n\"So it's true, then?\" Emily said, her eyes widening. \"Doctor, you have to help me. My implants are haunted!\"\n\n\u2020 \u2020 \u2020 \u2020 \u2020 \n\nIf you liked this story, please take a second to vote and/or leave a comment - - you can do both anonymously if you want to - - as feedback is what keeps me writing! Just remember this is my first Humor/Satire story so please be gentle with me!"
    ],
    "authorname": "SirSinn",
    "tags": [
        "big tits",
        "implants",
        "ghost",
        "possession"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/dr-my-implants-are-haunted-ch-01"
}