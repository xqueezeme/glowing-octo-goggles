{
    "title": "Fool Me Once",
    "pages": [
        "Chapter 1\n\nSome say life is a road whose forks are determined by an individual's decision from one moment to the next. If that's so, the choice that drove Ryan Gilchrist down a disastrous detour one day was a damn small one to have such an enormous impact. Maybe that's the way things always are. Who knows?\n\nThe owner of the house where Gilchrist's crew was renovating the garage into a spare bedroom had spoken enthusiastically to a friend of his about the quality of the work being done. Not quite understanding what was happening at first, Ryan took the owner's cell phone from his outstretched hand. He found the man's friend on the line and wanting an estimate on remodeling his kitchen. The friend said it would be an anniversary present for his wife. Ryan's small construction outfit needed the work, so he set up a meeting for just past noon.\n\nThe friend lived all the way across town and the most direct route came within a mile or so of where the Gilchrists lived. Even so, Ryan would not have dropped by the house if the red Taurus hadn't cut him off. Ryan had to dodge quickly into the left turn lane and, once there, he couldn't get back out. He had to make the turn. After that, it was actually easier to go by home and take another major east/west thoroughfare from there than it was to fight through the heavy noontime traffic back up to the street he'd been on. \n\nHe wasn't that upset. The laptop with its Excel spreadsheets and small CAD program would make things easier in the interview with the possible new client. He would use the former to work out an accurate estimate for the client and the latter would show the man and his wife a reasonably good 3-D representation of the finished kitchen. \n\nOh, yeah, he could have easily done without them. He knew the pricing calculations by heart and could have given them a pretty good freehand drawing instead. When you get right down to it, the decision to get the laptop from the house was an awfully little thing to change a man's life. \n\nCoasting to a stop in front of the house, Ryan was surprised to see his wife's brown Toyota Corolla parked in the driveway. Carrie had found work as a teller in a branch office of a big downtown bank a couple of years ago. She was a hard worker and had already received a number of pay raises. The hours were okay; she only had to work half-days on Saturday, and even that only one in four weekends. This Saturday wasn't on her schedule, though, and today wasn't her day off even if it had been. \n\nHe didn't know why Carrie was home. It concerned him because it was so out of character for her. He walked quickly around the side of the house and in through the kitchen door. \n\nThe door hinges were well lubricated. After all, he was a building contractor. It was a matter of professional pride to make sure small repairs around the house were taken care of immediately. Everything was well maintained. He liked things that way; he hated squeaks, drawers that didn't open, windows that didn't close right...things like that drove him crazy. \n\nNeither the screen door nor the kitchen door itself made any perceptible noise when he opened them. The couple he could see through the doorway into the living room probably wouldn't have heard him anyway. They were too involved with each other. \n\nRyan froze in his tracks when he saw them. He'd never contemplated seeing his wife in the arms of another man even kissing him...and he'd surely never thought to see another man cupping Carrie's bare right breast and working the nipple to a dark red erection with a rapidly moving thumb.\n\nCarrie was naked to the waist. Ryan saw her blouse and bra draped across the couch just beyond her. Her skirt was hiked up past the crotch of her pantyhose and Ryan could see the man's other hand on her sex. The man's body hid Carrie's hands, but her upper right arm and elbow were quite visible. They were moving rhythmically back and forth. There was no doubt her hand was on the strange man's penis and giving him a slow hand job. Her partial nakedness said the hand job was only a preliminary.\n\n\"God, Carrie,\" the man said hoarsely, \"I've waited so long for today. Don't tease me, okay?\" His voice turned more than a little plaintive right at the last. Carrie giggled delightedly.\n\n\"Have you, Marshall?\" she replied in a light, coquettish tone. She was playing with the man. She brought her hand up to his chest and ground her lower body against his.\n\n\"Was it worth the wait?\" she asked seductively.\n\nA red-hot fury engulfed Ryan. He didn't think; he couldn't. He could only react. One moment he was frozen in shock. With his next heartbeat, he was moving swiftly forward, striding purposefully through the kitchen and partway into the living room. Planting his left foot solidly on the carpet, his brought his right one up in a tight arc that ended in the man's crotch. \n\nAt the last moment, \"Marshall\" sensed something behind him...a whisper of Ryan's shoes on the carpet perhaps, or his looming presence. Without thinking, Marshall moved away from a threat he had not yet properly identified and into closer contact with Carrie. That was unfortunate for the woman. She probably wouldn't have been hurt if he'd kept still.\n\nThe instep of Ryan's heavy workman's boot smashed into the other man's testicles and drove the man's whole body forward and up. Ryan was a strong man and he'd had a few steps to build up momentum. It was only the steel-reinforced tip of the boot that slammed into Carrie's groin but it was more than enough. \n\nSensitive nerve endings fired instantly, sending simultaneous pain signals to two badly confused brains. For a long moment neither of them had any breath to scream; it had been driven from their bodies by the sudden intense pain in their abdomens. They stumbled against the sofa and clung to it for an instant.\n\nRyan had time to set his right foot back down on the floor and ready himself to deliver more punishment. His normally pleasant features were twisted into a rictus of tormented rage. He took a step deeper into the living room and closer to the pair of interrupted lovers. He'd been planning to do further damage to the man in front of him but it was abruptly clear nothing more was required.\n\nMarshall, whoever he was...Ryan didn't recognize him...began to scream in a high-pitched voice that filled the room. Carrie's even shriller cries started a split-second later. Both of them collapsed to the floor and began to writhe in agony. \n\nThe excruciating pain was overwhelming, worthy of the Marquis de Sade's most inventive tortures. Marshall and Carrie were locked in their own private little universes, unable to do anything but scream so piercingly they were close to rupturing their vocal cords.\n\nRyan stood back, watching the two thrash around on the floor while the screams assaulted his ears. He saw his wife's breasts bounce wildly on her chest as her body jerked uncontrollably. Her lower body was exposed, though covered by her pantyhose. He could see her palms pressed tightly against her vulva. The other man's prick was still jutting obscenely from his zipper. There hadn't been enough time for the blood to leave it. It was still hard...still ready to be driven into Carrie's willing cunt. \n\nThe vulgar display sickened Ryan but something else was wrong too. He looked down. To his horror, he saw the bulge in his work pants. He realized his cock was hard, perhaps harder, longer, and thicker than it had ever been before. A deep shame overcame the anger in his mind, blanking the fury in the space between two heartbeats. He was mortified. His own body was betraying him. \n\nHe could not be aroused by the sight of his wife about to have sex with another man. It wasn't possible; he was not that kind of man. His roars, born of renewed fury and deep humiliation, blended with the agonized shrieks of the other two. \n\n********\n\nWhen he thought about the incident long afterward, Ryan saw he'd been doing everything he could to resist the urge to use the Glock Model 21 in it's holster. From time to time, he still congratulated himself for not yanking it out. At the time, every nerve in his body had cried out for him to use it to kill both of the people who had dishonored him. He wondered sometimes if he would have reserved one bullet for himself to cleanse himself of his own body's treachery. The gun held thirteen rounds in its magazine and he carried the weapon with an additional round in the chamber. The fourteen .45 ACP caliber bullets would have been more than enough...\n\nThe urge for violence hadn't bothered him at the time and didn't worry him overly much today. Ryan Lincoln Gilchrist had been raised by his grandfather after Ryan's parents had been killed in a fiery car wreck when he was seven. His mother's father was half Comanche and the old man had been close to his grandfather. Ryan had quickly learned his great-grandfather, twice removed, had ridden on any number of raids when he'd been a young warrior in the late 1800's. He and his fellow fighters had made any number of forays into central and east Texas from the Llano Estacado, the Staked Plains of West Texas. The warrior had died protecting that last stronghold of the Comanche from the soldiers who came to punish them for killing Anglos and Mexicans. \n\nHis grandfather had taken young Ryan camping up on the plateau many times. He'd show the boy secret places only descendents of the old raiders knew of...places Anglos and peoples of the lesser Indian nations still would not go. The wildness of those wind-swept high plains was still with Ryan. He loved the solitude of the rough country. It called to something inside him and there were many times he longed to return. Things would be so simple up there...just himself, the wilderness, and a need to survive. \n\nNo, that he had wanted to put an end to the two adulterous lovers didn't bother him. In fact, he'd been unhappy for a short time that he had not taken care of the pair. The feeling had passed. This was the 21<SUP>st</SUP> century, after all. One couldn't do things like that anymore. \n\nThere was a far worse problem he had to deal with. It made him a basket case after discovering Carrie's infidelity. It wasn't so much the mental pictures of the sex he'd come home to find his wife engaging in. Well, it was, they were terrible images for a man to live with...but at least as upsetting was his own body's betrayal. It offended him on a very deep level to have been physically aroused at the sight of his wife preparing to engage in sex with that other man. He hadn't understood it. It made him less than a man and he couldn't stand himself. He had been so filled with revulsion he again considered suicide. \n\nIt had been a painful six weeks before he'd found a psychotherapist who'd been willing to take him on in a long series of individual counseling sessions. The wildness in his eyes had unsettled two other counselors and they'd found they had no openings in their practice to see him. Doctor Christopher was in his seventies though. There wasn't much that could intimidate him. He turned out to be a godsend.\n\n********\n\nWhat it was, the doctor said, was a response his body made on a primordial level. Male animals, including human ones, have instincts hardwired into their brains that drive them to reproduce. It had to do with the propagation of the species, he told Ryan. \n\nIt was about semen competition, the doctor said. Many researchers even thought the male penis actually evolved as a \"device\" for a man to displace other male's semen from a woman's vagina and replace it with his own. The doctor explained how the shape of the penis, with its larger glans and comparatively narrower shaft, could function to displace existing quantities of semen in woman's vagina and \"pump\" it out. \n\nDoctor Christopher explained to Ryan the instinct to displace another male's semen in a female's vagina was why he became aroused when he saw his wife's partially nude body and the other man's penis so openly displayed. Ryan was a civilized man, the doctor said, but no amount of civilization could overcome some of the most deeply ingrained primeval instincts. Ryan's subconscious, where mankind's most primitive instincts still lurked, had taken over when he came unprepared upon the illicit sex scene. Now that he knew what it was, it probably wouldn't happen again. The conscious mind could take precedence in such things.\n\nMost of what he learned was a lot more information than Ryan ever wanted to know about such things. He found peace with the first revelation that it was a primitive response to a situation he'd not been prepared for. Everything else had been added information he had no need for. He assured the doctor it would most assuredly never happen again, period. Doctor Christopher had made note of the grimness of Ryan's expression when he said that. It was disquieting...that is to say, threatening.\n\n********\n\nIt had been a rough four years. He and Carrie managed to stay together but it had been a near thing. His preoccupation with his own body's reaction had consumed him for a long while. When he came out of his bemusement a couple of months later, he found Carrie doing everything she could to show him she wanted the marriage \"to work.\" \n\nShe showered him with affection, respect, and admiration, offering sex of all kinds and at all hours. She was, in short, doing anything and everything she could to keep him as her husband. She was deeply remorseful. Ryan didn't doubt that. He was angry at the deception and infidelity, but she was obviously repentant.\n\nAfter a while, he'd stopped thinking of leaving her and asking for a divorce. A separation ended after a few weeks when Carrie tracked him down at a local motel and tearfully pleaded with him to come home. They went to marital counseling for more than a year to get their marriage back on an even keel and, when they examined themselves carefully, cracks in their relationship were still showing up years afterward the counseling ended.\n\nLovemaking never fully recovered, though casual sex did improve after the counseling the special sex they had to show their love did not. It was a year and a half before Carrie noticed Ryan did not like touching her right breast, the one he'd seen the other man fondling. She quickly figured out why...and then worked out the root cause for the fact that he didn't care very much for her taking his penis in her hands either. It had sparked another round of counseling, this time with each of them seeing their couple's counselor on an individual basis, in addition to the joint sessions. After a long time the sex got better, but things were never the same. Something at the core of their relationship had been shattered and never returned.\n\nCarrie had demanded they buy a new home after she determined Ryan's love for the old one had died. There were just too many triggers in the one they'd bought as a \"fixer-upper\" and made a good home of. In unguarded moments, Ryan would find himself gazing at the area of the carpet where Carrie and her fuck buddy had writhed in pain that day. It was clear to both Ryan and Carrie he was never going to be able to come in the back door again without wondering what he'd see through the doorway into the living room. \n\nThe two-story house they found for a good price (and actually in a better neighborhood) had four bedrooms. In many ways, it was too big for the two of them and they were always behind on the housekeeping. They kept it though, saying they would grow into it.\n\nFor a while in their reconciliation, they actually talked about children, but Carrie didn't really want any...not right now, she said. Over the months, the discussions about having children gradually withered and died away again. They'd talked about having a baby right after they were married too, but Carrie had plans for a career and kids didn't fit into her vision back then...and they still didn't. When she let the subject die this time, Ryan decided he'd never raise the idea of having children again. The decision left him empty, but he didn't know what he could do about it.\n\nEventually, Ryan overcame most of his conscious and unconscious disgust with his wife's deceit and got beyond her adultery. He'd finally had to remind himself neither he nor Carrie had been virgins when they married. It wasn't easy, but he forced himself think of the man he'd caught Carrie with in the same terms as he considered the nameless ones Carrie had been with before he met her. \n\nThings got better but Ryan couldn't get back to where he'd been with his wife. Something had gone out of the relationship, something he couldn't define but he knew it was missing. They never really sat down and discussed her adultery in spite of everything their counselors could do to promote it. Neither Ryan nor Carrie wanted to go into the details. Perhaps they should have. Ryan didn't know.\n\n********\n\nRyan was going to be thirty-three in July and some days he felt every bit of it and more. Today was one of those days. He'd found a small patch of gray over each temple in March and it devastated him for a time. Carrie had just shrugged. They made him look distinguished, she said. Ryan had stared after her as she walked unconcernedly away. \n\nDistinguished? That was the way young women described older men. It was the kiss of death in the mating game. Bothered by the implications, he'd brought the subject up again a few weeks later. He didn't need to worry about it, she'd assured him. He was a married man and wasn't in the game anymore. He'd felt better...not much...but a little.\n\nHe didn't feel good about it at all anymore. Oh, he'd learned to live with the gray hairs, but he become concerned about other matters in the late spring. He wasn't at all certain he was going to be married very much longer. Though affectionate and attentive for most of the time since Ryan had caught her with another man, there was something different in her attitude and behavior these days. \n\nHe didn't go off the deep end the first time she started an argument that didn't need to happen, the first time she criticized him unnecessarily, or the first time she seemed a little distant for no good reason. He didn't go crazy the first, or the second time he found out she wasn't where she said she'd be. After a number of such incidents, though, he knew in his heart what was happening. Soon, there was no doubt. \n\nAll the signs were there now; the signs that said she was cheating. They'd been there for three months now, beginning just after Carrie's latest promotion. It wasn't entirely unexpected. He'd been concerned it would happen again and he'd trained himself to watch for the first signal her conduct had begun to change. \n\nHe'd read books over the last four years--lots of books--most of them paid for in cash at a variety of used bookstores. Some of the books were by doctors of psychiatry or psychology, and others were written by licensed counselors with no other degree. Most of these delved into the psyche of a straying spouse and spoke of ways to recover from adultery. Some of them, though, were written by retired private investigators. It was this group of books that Ryan found most interesting...and the most useful.\n\nThese books told of ways to catch a cheater. They detailed indicators that should raise red flags in the mind of an alert spouse. Some of them had a hundred or more signs a wife or husband might be unfaithful. One of these was written by an investigator and a psychologist team and Ryan found that one very informative. Other books concerned themselves with techniques of spying; some of them even used that term, on a suspected cheating spouse. \n\nHe had a nice library of books like this now. He kept them hidden in a storage cupboard out in the garage where Carrie never went. The spider webs in that corner of the garage and the heavy, greasy rags piled in front of the bin repelled her and she shuddered anytime she came within ten feet of it. ",
        "Lately, he'd taken the time to review many of the books...just to make sure he hadn't forgotten anything. Alarmed at the arguments about trivial matters and his wife's increasingly hostile indifference, Ryan hid a miniature, voice-operated tape recorder under the front car seat in his wife's two-year-old Celica. When he retrieved it early one Sunday morning--while his wife still slept--he discovered his suspicions were well founded. \n\nHe listened to two conversations with girlfriends who had been in the car with her, and a half-dozen one-sided cell phone calls Carrie made. They all included references to someone named \"Sean.\" The last conversation on the recording, partially cut off by the end of the tape, confirmed Ryan's suspicion the man they were talking about was Sean Michaels, Carrie's immediate supervisor in the main offices of the big downtown bank. \n\nIt didn't surprise Ryan much. Carrie's first adultery had been with a co-worker at the bank where she'd worked at the time. \"Marshall\" had been the supervising teller on Carrie's shift. They'd grown close over lunches and during long, boring interludes of little activity. It wasn't a big stretch to understand Carrie would be unfaithful to Ryan again with another supervisor. \n\nOnce he made himself look, he found numerous signals she was cheating and all of them were mentioned in the books. Carrie thought she was being smart and hiding what she was doing. She thought she had him fooled. Instead, Ryan knew what she was up to almost as soon as she started trying to deceive him. Such knowledge must inevitably lag behind the events a little, but he caught on very quickly...faster than he could have without having gone through Carrie's first adultery and its aftermath.\n\nOnce he was sure of what was happening, he began detaching. He let each newly discovered deception wound him. He let the acid of betrayal eat at the love he had for his wife. It was a measured thing. He wanted it all to hurt. He wanted his feelings for Carrie to diminish as quickly as they could. It worked, and actually faster than he thought it would. Gradually, Carrie's adultery burned away his love for her. When he couldn't find a trace of love for her inside him--even in the lonely hours of the night--he knew he was ready.\n\nChapter 2\n\n\"Hey, handsome...want a booth or a table?\"\n\nThe friendly woman's voice brought Ryan back to his senses. He'd allowed his mind to wander a long way afield while he waited for the hostess to seat him. He was preoccupied a lot these days. He looked forward to getting his mind back. Not having himself under control bothered him.\n\n\"Oh...whatever,\" he replied, not caring in the least if he sat in a caf\u00e9 booth or at a table. \"How about some place near a window where I can see out, but where it's quiet too?\"\n\n\"Sure,\" the short, rotund waitress shot back cheerfully. \"Let's go...over this way.\" \n\nRyan followed her to a sunlight booth against the rear wall beyond the big group of regular customers and separated from them by a chest-high partition.\n\n\"Can I get ya some coffee, honey?\" she asked while Ryan folded his 6 feet, 1inch frame into the constricted space between the tabletop and unmoving bench seat. It was tight for a big man getting in, but once there, the table was at a convenient height and a good distance from his body for eating or working on his laptop.\n\n\"Black, hot, and lots of it,\" Ryan returned. \n\nThe hostess/waitress smiled. Not that they had any of the designer brews here, but she didn't even like being asked for a \"cappuccino\" or the like. It made her wonder just how much of a man a guy could be to want to drink something with a name like that. Her approval showed in her eyes.\n\nWhile she filled the insulated pitcher back at the counter, she let her eyes rest on the big man who'd begun coming in every morning and evening last Thursday. He owned a small construction company, she'd learned--one that specialized in minor renovations, interior remodeling, and some building restorations. He dressed well and usually in a tailored business suit, but his strong hands were callused. This man had worked hard with his hands in the past, and most likely still did on occasion. Yesterday morning, Sunday, he'd came in with blue jeans and a work shirt on that had seen a lot of use.\n\n\"What can I get ya this morning, sugar,\" she asked after pouring her customer his first cup. She put the pitcher on the table close enough for him to reach out with his long arms and far enough from his hands to not be in the way. He smiled his appreciation.\n\n\"Orange juice, western omelet, hash browns, biscuits, and a side of ham?\" he answered, pointing at menu item number six. She'd expected that. His order hadn't changed the last three mornings. She took the refolded menu from his hands after writing up his order.\n\n\"Comin' right up,\" she told him and walked away. She'd love to stay and chat with the man. The more she saw of him, the more she realized how much she liked his clear blue eyes, the strong chin, and...well, he looked like he was a hunk under those clothes. She wondered...and then she made herself cut off that line of thought. She was seeing Fred...had been for near a year now...and she didn't want to get sidetracked. He was too young for her anyway.\n\nRyan watched her slide the check with his order under the spring clip on the shiny metal order wheel and spin it around so the cook could see it. The cook nodded his understanding he had a new order. The hostess rushed off to greet more customers. \n\nThe line was getting longer. It looked like most of the little town had decided to not cook their own breakfast this early Monday morning. \n\nThere was a rising buzz of affable conversation, punctuated with the sounds of pieces of crockery being bumped against each other and the occasional peal of laughter. The smells of cooking eggs, bacon and sausage, biscuits, and cinnamon rolls emanating from the kitchen was making him salivate. \n\nRyan smiled. He liked it here, and he was beginning to like the cheerful, pleasant waitress a lot. She seemed to typify the folks in this small town...a village really. There probably weren't five hundred souls in the whole place. Most of the people he'd seen here so far were a lot like the waitress...reserved at first...outgoing and friendly once she got to know you. Yesterday, Sunday, she'd sat down across the table from him and chatted with him for twenty minutes in a slow period. It had impressed Ryan no end.\n\nThere was a crowd of people trying to get seated now. It was early, but folks in rural parts of Texas still started their days early to avoid the heat of the day. It probably wasn't necessary anymore, and there would be even less justification once Ryan's crew upgraded the air conditioning in the old courthouse, but it was a thing their parents and grandparents had done. In the absence of any really good reason to change, they kept on as they always had. \n\nOnly fifty miles or so outside of San Antonio...a metropolitan area with 1.5 million citizens...this small town hadn't changed that much from the way it was in the late nineteenth century. Oh, the big slab of concrete that was Interstate 10 ran east and west just a couple hundred yards from the front door of the caf\u00e9, but the regulars hardly noticed. \n\nHe thought their grandfathers and grandmothers had probably taken as little note of the big herds of longhorns coming through after the civil war. For the umpteenth time since he'd come here, Ryan wistfully wondered what his world would have been like if he'd been alive back then. He'd always had this feeling he'd been born about 150 years too late.\n\nHe shook off the nostalgic mood. The hot coffee helped. He looked at it suspiciously. It looked, and tasted, strong enough to float one of the horseshoes another of his crews had dug up last Friday. They were clearing land out behind one of the local rancher's house to put up a separate garage and had come across a number of interesting finds. A second sip confirmed his first impression. It might even have floated a couple of the heavy iron shoes. He was glad he'd come to the little town to personally supervise a number of small-scale renovation projects. This was some good coffee.\n\nRyan Gilchrist was a small-time contractor, just as he'd been four years ago. He was still a little frog in a big pond but, that having been said, he'd grown quite a bit during that period. There were plenty of tadpoles swimming around in the pond that were a lot smaller than he was now. In fact, the operation had grown so large, he had to spend most of his time with his butt firmly fixed in a chair behind a desk. He'd had to rent office space in a big building downtown. He hated working there. He often told folks he'd given up doing useful work. \n\nHe'd finished up a degree at UTSA over the past four years, going to school at night mostly. He'd had to take time off from work and finish some courses in residence during the daytime toward the end. He came away with a Bachelor of Business Administration in Resource Management but it wasn't as useful a thing as he'd thought it would be. \n\nWhen he'd been looking through the school's catalog, he'd thought the courses in this degree plan would teach him to better manage his burgeoning little company. Some actually had proven to be very useful and others were \"okay\" courses. Most of them though...well, he'd had to figure out how to \"learn\" any number of irrelevancies just so he could answer test questions correctly. More than once, he'd had to grit his teeth and select answers he knew were totally wrong in the real world. That had irritated him no end. It was all over now, and the memory of the aggravation was fading quickly. He knew, though, he'd never go back to get a higher degree. \n\nHis mind drifted from topic to topic...and then back again. He was waiting for his breakfast to be served in a warm caf\u00e9 full of friendly people. He appreciated the warmth...and the friendliness. There was little of either at home these days. His thoughts automatically shied away from thoughts of home. He didn't really have one anymore. There were better things to think about.\n\nHis business...things were going pretty well with it, everything considered. He'd even had to hire a secretary just to field all the phone calls that were coming in. Between her and a part-time CPA, the payrolls were processed and sent electronically to the employees' banks on payday. All of the Federal and State reports were filled out and forwarded to the correct agency on time too. Ryan concentrated on scheduling, personnel issues, and getting all the logistical details taken care of. He had eight crews working for him now--fifty-two men and women all together. Half of them were ex-marines and soldiers. \n\nHe'd come to rely on their maturity and high sense of responsibility and they'd responded. Most of the projects Ryan turned up were based on word-of-mouth advertising. His ex-servicemen and the others easily impressed the company's clients with their dedication, attention to detail, and the overall quality of the finished product. Today, he had three crews here in this small Texas town, out away from the big city. They were all working hard. \n\nHe told himself, and anyone who would listen, that he was here in the little town supervising the joint effort. In fact, he was here hiding from his wife because he couldn't stand the sight of her anymore. \n\n********\n\n\"No, no,\" he growled softly into his coffee cup. \"Fool me twice...shame on me. Huh uh...no damned way that's gonna happen.\" \n\nHe wasn't about to accept a second adultery on Carrie's part. He wasn't certain why he'd stayed around the first time but whatever the reason had been, he sure wasn't going to do it again. He had a plan...and it was almost time for the endgame.\n\nAfter he heard the first tape recording, he made a point of secreting the tape recorder with a fresh miniature cassette in his wife's Celica every morning, and listening to the used ones sometime later in the day. He was amazed to hear his wife deriding him, his small contractor company, their friends, and virtually every aspect of their lives together. \n\nMore than once he listened as she completely rewrite much of their history together. Some of the things she said he did, particularly anecdotes about how he treated her...damn it, they flatly had not happened. He'd never taken a hand to her, much less had he ever beaten her as she claimed. Most of the other remarks were similarly colored by revisionist history. He didn't understand why the woman he'd married was doing this.\n\nGradually, Ryan had begun to put things together. As vigilant as he'd been, certain things had gotten in below the radar. He realized now many of their friends had been exposed to a steady litany of complaints she'd thrown their way. He could see the effect of her lies in their eyes. Some of the couples he and Carrie had regularly socialized with now avoided him whenever possible. When he did attend a function, he understood why they were reserved, even withdrawn, around him. It had to be because of things Carrie was saying about him. He knew why his brother-in-law and both sisters-in-law avoided him now. He understood why his wife's parents would hardly speak to him these days.\n\nHer disrespect changed what he intended to do. Before, he'd determined he would simply confront her with his knowledge and let her know he was leaving. Texas was a no-fault state. It would have been a simple matter of waiting sixty days for a judge's signature on a piece of paper. \n\nNow...now, he wanted proof of her adulterous conduct. He needed to go through a divorce trial; he would demand one so he could tell his part of the story. He'd have his attorney challenge every motion made by hers. Ryan's lawyer would propose hard-to-meet conditions in return. The hearings, proposals, and counter proposals would go on indefinitely. It might bankrupt him but he didn't care. If his business went under, it would have the beneficial effect of keeping her from getting a share of the little construction outfit that was just beginning to grow into something nice.\n\nHe had no way to refute most of her allegations. Most of the things she said were going on simply had never occurred...and it was damned difficult to prove something didn't happen. One of the persistent themes was that he was physically abusive; she'd repeated that in several cell phone conversations he'd overheard. \n\nThat one he thought he could rebut. He had a persistent daydream of standing up in court and tearing off his shirt to show everyone the work-hardened muscles in his chest and arms. He was going to ask the judge whether he thought a 220-pound man with his obvious strength could possibly beat his wife, as Carrie told more than one of her friends, without putting her in the hospital for lengthy periods. It was only a fantasy. He knew it would never happen, but it kept him from freaking out in some of the darker nights. \n\nCarrie's deceit ate at Ryan's insides. It was a thing that demanded punishment of some sort. He couldn't understand where her revisionist history was coming from. He didn't know why she felt compelled to destroy his image with her family and everyone they knew. She shouldn't be allowed to do this but he was helpless to do anything about it right now. \n\nThe helplessness only made things worse. The anger was building inside him and he didn't know how much longer he could go on. He knew himself fairly well. He just wasn't a man who could take something like this for very long without lashing out. \n\nHe chuckled as he stared at nothing outside the caf\u00e9 window. He'd remembered something the psychotherapist said to him.\n\nDoctor Christopher had told Ryan, while he was still a patient of the doctor's, that he was just a tad confrontation-prone. Ryan had laughed with his counselor. He knew the old doctor was absolutely right. In fact, he'd quit carrying the Glock a few weeks back because he was afraid he'd do something he'd regret. \n\nBefore he'd have used it to protect the love he had for Carrie. Now there was nothing left. She was no longer worth the possibility...the probability, more likely...that he'd spend a long term in the Huntsville prison if he shot her or her lover, Sean. She just wasn't worth it. He didn't want to go to prison.\n\nHis mind was still in neutral. There was nothing pressing he had to deal with and he didn't bother trying to keep his thoughts confined to one channel. He wasn't trying to think his way through his problems; his thoughts wandered a little further afield while he waited for his breakfast. \n\nHe didn't like jails. Even his slight acquaintance with them had soured him on them forever. The judge had given him an unbelievable light sentence for smashing his wife's first lover's balls and bruising Carrie's groin so badly. The prosecutor, knowing his jury pool, had opted beforehand to reduce the charges to a misdemeanor and the court had gone down that road with him. Seeing this, Ryan's attorney had talked Ryan into not asking for a jury trial.\n\nThe sentence had been 40 hours of community service and 30 days in the county jail, a far cry from hard time in one of Texas's prison facilities. On top of that, all but 7 days of the jail time had been suspended as a \"deferred sentence.\" Even those 7 days had been pretty easy time. He'd only stayed in lockup at night and been released every morning to go to work. After 18 months with no additional violent incidents, the judge had vacated the rest of the sentence. \n\nHe'd already done the 40 hours of community service, of course and didn't regret it a bit. Those hours, and a couple hundred of hours extra, had been spent reading to children in the public library. He'd enjoyed that part of the sentence. \n\nRyan had heard through the grapevine that his wife's fuck buddy had been outraged at the light sentence Ryan received. \"Marshall\" lost one testicle and the other one healed very slowly. The man hadn't made any formal protest though. His wife had told him sweetly they already had three children and that was enough. Besides, she said, if he didn't shut up and start making things up to her and the kids, she was going to cut the remaining ball out of his scrotum and feed it to him for supper. \n\nThey moved to Denver when he was well enough. The first time he saw them on a restaurant menu, Marshall was physically ill when he realized exactly what \"Rocky Mountain Oysters\" actually were. The family had to leave the restaurant, with grinning apologies from Marshall's wife to the hostess who'd just seated them. The kids were just as happy to eat fried chicken at the KFC down by the Interstate anyway. Marshall never knew his wife passed the story on to friends back in San Antonio. The grapevine is a wonderful thing.\n\nThe smile the memory brought to mind faded slowly. Another recollection took its place.\n\nOn a business trip to Dallas a year ago, he'd found a store that was going out of business in a moderately rundown suburban strip mall. They sold all kinds of \"spy\" equipment but the location had been poorly chosen. The owner was going to relocate to one of the major downtown malls, but there was a gap between the ending of his lease there and the availability of space downtown. He was in a position where he had to get rid of his inventory at cut-rate prices or store it at ruinous monthly rates in a warehouse somewhere. Ryan picked up a dozen lipstick-case sized cameras, phone line recorders, binoculars, a good digital camera, three VCRs, and plenty of other supporting gear for professional-style surveillances.\n\nHe'd only used the equipment lately, within the last three months actually. It hadn't been necessary before. He'd hidden the small spy cameras upstairs and down, not knowing where Carrie would entertain her new lover if, and when, she brought him home with her. As it happened, she showed no scruples at all in taking Sean into her and Ryan's marital bed when Ryan went hunting one weekend with her father. ",
        "Ryan was bitter about her choice of places to have sex, but he'd almost expected it. Her lack of respect, her contempt for him lately almost dictated she'd do something like that. He'd covered the master bedroom with three of his twelve cameras and they caught all the action. Carrie and Sean's enthusiastic sexual antics in that room were featured in the tape Ryan began compiling for his in-laws and friends. \n\nHe also thought the bank, where Sean headed up a major department, would be interested in the videos Ryan had of a naked Sean working on his laptop in Ryan and Carrie's kitchen. Sean had plugged into the easily accessible phone jack beside the kitchen table. Ryan assumed...he thought it was a good bet...that Sean had logged in to the bank's server and was pounding out a little work while he waited for his body to recover from the excesses he was placing on it with his subordinate.\n\nIt was icing on the cake that, while resting between sexual bouts, the adulterous couple also discussed both Sean's and Carrie's families and more than a few of the friends they had in common. Ryan planned to highlight these sections and distribute them to the family members and acquaintances who believed Carrie's lies about him. He looked forward to exposing the adulterous pair. He really did. He had everything he needed. It was just a matter of when.\n\n********\n\n\"Excuse me, sir...sir?\" The caf\u00e9's hostess was surprised when Ryan didn't respond immediately. He was usually very alert. \n\n\"I'm sorry,\" Ryan said. \"I'm afraid I was drifting there for a bit.\" \n\nHe blinked. The distasteful memories and musings had a powerful hold over him. It wasn't the first time he'd found it difficult to snap back to the real world.\n\n\"Awwwww, no big thing, sugar,\" she replied. \"Listen, honey, we're just about full up this morning, ya know? And I was wondering if you would mind sharing your table with Connie and little Belinda here?\"\n\nRyan looked around, seeing for the first time the little restaurant did indeed have every table occupied, but there were other tables with open seats. He was a little surprised the hostess was talking to him about accepting strangers at his booth, but then, it probably was the largest table available. He wasn't in the mood, but he saw no way out of it.\n\nHis eyes fastened on the tall, attractive woman with long, jet-black hair standing at the waitress's shoulder and the little girl beside her. In the space between one breath and the next, his mood changed. He was very glad the hostess had singled him out.\n\nStill not running on all cylinders, it took him a moment to respond. When he realized he was still sitting there like a bump on a log, he flushed and contorted his body to get up.\n\n\"I apologize,\" he said to the trio. \"I was brought up to be polite...I want you to know that. I really was...but sometimes I'm just not as quick on the uptake as I could be,\" he added. He reached out and patted the waitress on her forearm.\n\n\"Uh...I'd be happy if...uh...Connie and...Belinda would join me,\" he said, thinking fast. He thought he remembered the names correctly.\n\n\"Thank you,\" the little girl trilled. Her high, small child's voice was clear, her words easily understood. Ryan had been expecting the woman to reply; he'd been looking at her and not at the young child. He glanced down, but the youngster had already walked around him and had climbed onto the bench seat.\n\n\"May I have my boos'r seat, please?\" she asked sweetly. She held out her hand, pointing behind him.\n\nConfused, Ryan looked around at the woman he guessed was the little girl's mother and then saw the booster seat the waitress was holding out to him.\n\n\"I'm so sorry,\" Ryan said contritely. He took the seat from the waitress and held it steady on the bench while the girl climbed in.\n\n\"Thank you,\" she said, smiling up at him.\n\nRyan stood back and was about to move over to the other side of the table when the youngster interrupted again.\n\n\"I want my mom to sit over there,\" she demanded. She pointed at the opposite bench seat. \"You sit here.\" The little girl was pointing at a position next to her own seat. Ryan looked up at the girl's mother, confused and more than a little apologetic. \n\n\"She's soooo shy and unassuming, isn't she?\" the woman asked in a soft contralto. Her lips parted in a wide grin. She gestured at him to go ahead and sit. \n\n\"If it's all right with you, I don't mind,\" she added. The little girl's matching grin decided the issue for Ryan.\n\n\"I'd be most happy to sit with you,\" he told the child with mock formality. He slid into the booth beside her. He could see the delight in her eyes and couldn't help but respond. It had been a long time since he'd felt welcome anywhere.\n\n\"I'm Ryan,\" he said, introducing himself. \n\n\"Connie...Consuela Robertson,\" the woman responded, \"and that's Belinda, the terror of the Vargas Preschool,\" she added, motioning toward the towheaded youngster beside Ryan. \n\n\"Mommy!\" Belinda protested, scandalized. \"That's not nice.\"\n\nRyan chuckled, completely enchanted by the woman and her daughter. The woman extended her hand and they shook. He liked the feel of her hand in his. It was slender, very feminine, but it had strength too. He looked up at her.\n\n\"Do folks call you Connie...or Consuela?\" he asked matter-of-factly. She hesitated, giving him with a vaguely hooded look. \n\n\"I like Consuela,\" she said, \"but Connie is okay. Lots of people call me that,\" she added quickly.\n\n\"Consuela is a beautiful name,\" Ryan replied. \"It...fits you better than \"Connie,\" I think. Is it okay if I call you Consuela?\" he asked. \n\nHe watched her for a reaction that didn't come for a long moment. He was beginning to think he'd made a bad mistake.\n\n\"I think I would like that,\" she said quietly. \n\nThey two matronly women in the booth behind Ryan stiffened slightly. They smiled knowingly at each other. Consuela had moved here just after her baby had been born, coming home after a bad marriage had ended in divorce. Little Belinda was four...four and a half, now. It was the first time anyone had seen any sign Consuela--Connie to some--had shown any sign of enjoying a man's presence. The two women sneaked looks at the three when they got up to leave. No one in the booth noticed.\n\nChapter 3\n\nWednesday found Ryan waiting for Consuela and Belinda before he ordered breakfast. When they came through the door, Belinda shook free of her mother's hand and raced through the tables to him. Her last two steps included a little hop to launch herself into the air for him to catch her. \n\n\"'Linda!\" her mother scolded when she caught up. \"You know you're not supposed to do that.\"\n\n\"It's okay, Mommy,\" the four-year-old explained. \"Mister Ryan catched me.\" \n\nThat settled it as far as she was concerned. She went on to another topic. \n\n\"I'm going to sit on his lap today and eat brea'fus,\" she announced.\n\n\"Honey, I know he catch...he caught you...but what if he hadn't seen you coming or something? Besides, you don't even know if Mister Ryan wants you to sit on his lap or eat breakfast with us.\" \n\nBelinda looked into Ryan's face for a quick instant and then turned back to her mother.\n\n\"He does,\" Belinda said succinctly. There was no doubt in her voice. Ryan cleared his throat.\n\n\"It's true, but to make it official,\" he said, \"Miz Robertson, would you and the charming Belinda care to join me to break your fast?\" he said lightly. He and the woman shared a chuckle as they arranged themselves around the table they had this morning. \n\nBelinda did sit on his lap for a good part of the meal, sitting up to eat morsels from his plate or hers, and then lying back to rest contentedly against his chest. Toward the end of the meal, she got restless. When one of her playmates came in with her parents, Belinda scrambled down to go visit. It left Ryan and Consuela alone for the first time. \n\nThings were suddenly and unexpectedly awkward. Neither could find the proper opening.\n\n\"You don't remember me, do you?\" Consuela asked unexpectedly. \n\nRyan cocked his head and looked closely at her. He studied her for a long moment. Her long, raven hair framed the finely molded features of her face. Her fair skin was flawless. She wore, and needed, only a small amount of makeup...only a little mascara on her eyelashes and lip gloss on her lips. Actually, her dark eyes didn't need anything more to make bring out their loveliness. Her lips were full and...he'd already admitted it to himself...very inviting. He knew when he stood, the top of her head was right at his chin; she was probably five feet and maybe six, seven inches tall. She had a slender body with generous curves at the breast and hips, and her legs...from what little he'd caught in quick peeks...were excellent...no, they were outstanding.\n\n\"Consuela,\" he said finally, \"if I've seen you before, I'm reasonably sure I would remember it. I'm not in the habit of forgetting beautiful women,\" he said with finality. None of his words gave any hint of anything but a serious answer to a serious question.\n\nConsuela colored slightly, both from his close examination of her before he spoke and the words he used.\n\n\"Well, it was only twice, and both were very quick,\" she said. \"At the bank where your wife works?\" she prompted. \"A long time ago, the girl next to me cashed a check for you once while your wife stood with you. That was before I got transferred to Mr. Michael's section. \n\n\"Then, Carrie waved at me another day when you were there and you turned around to see who it was. Remember that? A year and three months, maybe year and a half ago?\" \n\nRyan shook his head. He tried to place the woman sitting across from him in the bank setting, but failed completely.\n\n\"I'm sorry,\" he said. \"If I was with Carrie, I probably was talking to her or listening to her...or trying to...or something,\" he said lamely. \n\n\"So you do forget women on occasion eh?\" Consuela grinned to take away any sting in her words. \n\n\"I had to have been badly distracted at the time,\" Ryan protested, chuckling at the same time. \"If I was with Carrie she would have been working hard to occupy all my attention...back then anyway.\" \n\n\"I know,\" Consuela said. She looked Ryan in the eyes for a bit. She thought she seen something when Carrie's name came up.\n\n\"How is Carrie these days?\" she asked suddenly. \n\nShe nodded her head when a wall slammed down behind his eyes.\n\n\"You know then,\" she said in a sympathetic tone. Ryan frowned. Consuela shrugged.\n\n\"I was...I left there two months ago. Everyone at the bank...even all the customers who've seen them together...know what's going on.\" \n\nRyan snorted softly and shook his head. His eyes were clouded and troubled. \n\n\"They're not even trying to hide it huh?\" She shook her head.\n\n\"They did for a while but most of us could see what was happening. From what I hear from a couple of friends who are still working there, it's gotten more and more...\"\n\n\"Obvious?\" Ryan suggested.\n\n\"Worse. Brazen was the word I was going to use,\" Consuela replied. \"For what it's worth...I'm sorry. Everyone down there thinks Mr. Michaels is a real ass. No one knows what Carrie sees in him.\"\n\n\"Yeah, I'm sorry too,\" Ryan said quietly. \"I've suspected it for about three months and I've been collecting proof for the past couple of weeks,\" he told her. \"I think I have enough now to hang the both of them,\" he added. Consuela looked at him in surprise.\n\n\"An interesting choice of words,\" she said finally. Ryan could see an excitement building quietly. Her eyes were bright, she was breathing quicker. She glanced quickly around to check on Belinda. \n\n\"I...I didn't leave my job in San Antonio exactly the way I...implied I did,\" she said finally. \"I left because I filed a sexual harassment complaint against Sean Michaels and...it went up all the way to the main headquarters in Chicago,\" she said. \n\nRyan waited. He'd been waiting since Monday for Consuela to open up. He'd known there was something.\n\n\"After a while...a few months...the complaint came back down. The Chicago office said the complaint had not been substantiated and they couldn't act on it.\" \n\nConsuela's face flushed with anger at the memory. Her dark eyes flashed lightning.\n\n\"After that, I got a couple of bad performance reports. Three times, the accounts I was handling had minor...and very temporary...balancing problems and they wrote me up,\" she said bitterly. \"A little research and they all came into balance but that didn't seem to matter. They didn't do anything to anyone else for differences that had to be researched, but of course, me...me, they slam.\" \n\nConsuela shifted in her seat for a long moment, fuming at the way she been treated. It had humiliated and infuriated her at the same time. Ryan nodded encouragingly to get her to continue. \n\n\"They shifted me over to the investment banking division for a while, but a woman came back from her maternity leave and all of a sudden, there was no slot for me. After a while, they made it clear I would have to go back to working as a window teller. Not only that, I would be working every weekend and I was going to be moved eventually to a special late shift they were setting up so they could advertise the drive-through was open late. They knew I had a young daughter and there was no way I could take those hours.\" \n\nConsuela's voice was strained. She was frustrated and mad. She looked around and forced a smile when she caught Belinda's eye and the little girl waved. \n\n\"They let me go easy, I guess,\" Consuela continued. \"I'll give them that. Nothing was ever said, but it was plain I could quit and they'd give me good references. If I stayed, I'd see my daughter so seldom she'd forget what I looked like...and if I pushed the complaint, I'd be blacklisted and never work in a bank again.\" \n\nShe was breathing deeply; she couldn't sit still. Her fingers twisted and twinned about themselves in her lap. Consuela's pain and anger were ghosts sitting at the table with them. They joined the ones Ryan brought in every morning with him. All of them were so real they could have reached out and touched them. \n\nConsuela shut her eyes tightly, willing herself to be calm. It took a while but the trembling slowly eased. Her face relaxed; her shoulders slumped.\n\n\"Hi, Mommy,\" the little voice came as a shock. Neither of them had noticed Belinda coming back to the table. \"Mommy?\" Belinda asked worriedly. \"Are you crying?\"\n\nConsuela's eyes had snapped open at Belinda's first words. Now she leaned down and opened them wide to show her daughter there were no tears. She forced a gentle smile onto her lips.\n\n\"No, honey,\" Consuela said. \"I just had them closed to think a little bit,\" she explained. Belinda looked doubtful, but she let it pass.\n\n\"Tasha and her Mom and Daddy are eating so I came back,\" she told her mother.\n\n\"And I'm glad you did!\" Ryan exclaimed. He swept the little girl up in his arms and pulled her onto his lap. \"Now...\" he said, \"I'm still not quite sure where it is that you're ticklish.\" \n\nBelinda began squirming on his lap, already anticipating being tickled. Her tiny hands flew up to her neck to protect the sensitive flesh there. Ryan's hands darted to her ribs and tickled the small child for a few seconds. When Belinda dropped her hands, he shifted to her neck and Belinda shrieked.\n\n\"'Linda!\" Consuela said quickly. \"You can't...\"\n\n\"It was my fault,\" Ryan interjected. \n\n\"I know better, don't I, Belinda? Give me a hug and I'll quit,\" he told the little girl. She didn't want him to stop but she knew what she was supposed to do. She wrapped her arms around Ryan's neck and hugged tightly.\n\n********\n\n\"I have a confession to make,\" Consuela announced. The noise from the children racing through the large plastic tubes overhead was almost deafening. She had to lean close to Ryan to make herself heard without shouting. \n\nRyan had suggested the McDonalds out by the Interstate after asking them to dinner. He'd known Belinda would love the playroom. She'd barely been able to sit still long enough to eat her three chicken nuggets and a couple of french-fries. \n\nThis was the first time Ryan had seen the mother and daughter except over breakfast, and also the first time they'd been together twice in the same day. Wednesday was turning out to be a day of firsts. \n\nRyan looked at Consuela for a bit, digesting what she'd said.\n\n\"You'd been wanting to tell me about Carrie and also about your sexual harassment complaint since Monday?\" he guessed. Consuela's eyes widened, and then narrowed again. \n\n\"You knew?\" she asked in a tight voice. He could tell it wouldn't take much to light up a temper that was easily sparked anyway. He'd only known her three days and he knew that much about her already. To save himself, he shook his head.\n\n\"I knew there was a reason Trish sat you at my table,\" he said carefully. \n\nTrish was the head waitress and hostess at the caf\u00e9 who'd taken Ryan under her wing at the caf\u00e9. Trish had taken the time to talk with Consuela and Ryan for a long while when they paid their breakfast bill this morning. It had been a nice exchange.\n\n\"I hoped it was because of my masculine beauty at first...but then I got a look at myself in the mirror,\" he said. His tone was light and cheerful.\n\n\"That left only that you'd asked her to put you with me because you wanted to talk to me about something...or wanted something from me, once I eliminated a couple of less savory possibilities. They just didn't fit who you are,\" he said quietly. \n\n\"I figured you'd get around to it sooner or later...and in the meantime, I was having more fun with you and Belinda than I've had...in so long I can't remember the last time.\"\n\nThe woman flushed faintly. It looked good on her. \n\n\"That's part of it. I guess I should have just come out and told you when I recognized you Monday,\" she mumbled. \n\nShe tried to get mad because Ryan had guessed she had a reason for seeking him out the last couple of days...but it wasn't happening. He was so disarming with his candor she couldn't summon even a tiny kernel of anger.\n\n\"I didn't mind,\" Ryan assured her. \"I enjoyed your company...I already told you I did.\" He looked at her speculatively. \"What is it you think I can do for you?\" he asked. Consuela took a deep breath.\n\n\"Well, we didn't get to everything this morning. I don't just have a sexual harassment complaint anymore. I have a suit I filed in Federal court three weeks ago. I was wondering...I was hoping...I could get you to testify to...the fact that Sean Michaels is having an affair with your wife,\" she said. \n\n\"My attorney doesn't know about you yet, but she's told me in the past if we could show Mr. Michaels has continued to do the things he tried to do with me, we have a chance to...\" \n\nShe threw her hands up in the air, giving up the explanation. She looked at Ryan for a moment.\n\n\"Me too,\" she added diffidently. Ryan's eyes scanned hers. A blank, confused look came over his face while he wondered what he'd missed. \n\n\"I enjoyed...me and Belinda have enjoyed having breakfast with you too,\" Consuela offered by way of explanation.\n\nRyan's features cleared and he smiled.\n\n\"I'm glad,\" he said quietly. There was a small silence.\n\n\"If it will help for me to tell what I know about the affair...sure,\" he said, returning to the original conversation. \"I'm not up on lawyer things but I'll testify to anything I can,\" he told her. \n\n\"You know for sure?\" Consuela said in a low, intense voice. \"You can say you know Michaels is...is...that he's...\"\n\n\"Actually having sex with my wife?\" Ryan asked. Consuela nodded, too embarrassed to speak. \n\n\"Oh, yeah...I can testify to that,\" Ryan assured her. Consuela sat quietly, her eyes holding his. Hers were filled with a sudden sympathy. \n\n\"Maybe not,\" she said hesitantly. \"Maybe you shouldn't...it might not be a good thing...there'd be questions...and...\" ",
        "Ryan smiled. It was the predatory smile of a shark nosing in for the kill.\n\n\"Consuela, my marriage is over. Our vows were broken before...they've been shattered now. My marriage was over the minute she began a relationship with Sean Michaels. I've been collecting evidence to show a court to prove her infidelity. I'm going public with it to show God and everybody what she's done...what she's doing. I'm getting a divorce from Carrie to make everything official, but it's been over for a long time.\n\n\"I've spent the last few months watching her and letting her burn the love I used to have for her out of my soul. I don't care for her now, and nothing can embarrass or humiliate, me anymore than she already has. I'm going to lower the boom on her and her...friend...and I'm going to do it hard.\"\n\nConsuela looked at Ryan, seeing something in him she'd not noticed before. His blue eyes had gone an icy shade of blue as his anger built. She believed him. He was going to make a believer of Sean Michaels too. She smiled slowly.\n\n\"It takes a lot of strength to do what you're going to do, Ryan. I think you are one hombre Mr. Michaels should never have messed with,\" she said softly. \n\nRyan was startled at the comment. It broke his concentration and his rage ebbed away. He smiled at the beautiful woman sharing his table. As he looked, her face changed.\n\n\"You have proof, you said?\" she demanded. \"You have pictures or something?\" Ryan nodded.\n\n\"I've got video tape of them together, tape recordings of cell phone conversations, and other tapes of her talking to girlfriends in her car about her lover...heck, I got a bunch of things,\" Ryan told her. \"I know the cell phone conversations can't be used for much...maybe not the tapes from the recorder I put under her car seat, unless she gets on the stand and denies the conversations ever took place. Then they can be used to impeach her, I'll bet. \n\n\"The videos? Well, the videos I have of her hugging and kissing that asshole inside the bank, on the city streets, and I've got them walking arm in arm with him into our house...those can be used. I'm almost certain the ones of her and Doofus in our bed are legal too. I think I have a perfect right to videotape things that go on inside my house. They're pretty...graphic...as they say.\n\n\"Oh, wow...\" Consuela whispered. \"Oh goodness, I'm sorry. It's so sad you had to see things like that, but you've got her good, don't you?\" \n\nRyan chuckled.\n\n\"Oh, yeah,\" he said, drawing out the last word to emphasize his satisfaction. \"Got him too,\" he added. \n\n\"I haven't seen a lawyer yet, but I have my own suit to file, you know. I re-read Carrie's contract and there's a morals clause right there in big black letters on the second page. It's not even in the fine print. I don't see how there would not be a clause just like that in Michaels' contract too. That should mean the bank is...uh...liable if they don't enforce their own rules and regulations, right?\" \n\nRyan thought for a moment. \n\n\"I...like I said, I don't do lawyer stuff...but I think we can help each other out on these things. You can testify in my civil suit that...what do they call it? Uh...something about establishing a pattern of conduct or something like that? Hmmmmm...and how about not taking action to...uh...well...stop it. What are the legal words for saying that, I wonder?\" \n\nHe grinned and made a mental note to call a lawyer and run these things by him or her. For the first time in a while, he saw a way he might be able to keep his little contractor firm afloat after his wife took her pound of flesh in the divorce proceedings. \n\nTexas family law was structured so that property settlements were affected by such things as adultery on the part of one of the spouses. He'd already been counting on that and now there was an even better chance of getting enough cash from a settlement to buy out whatever percentage Carrie's share of the business was.\n\n********\n\nThursday was a disappointing day in the caf\u00e9. Ryan was there, as the locals had come to expect, but Consuela was not. It was because, as Ryan knew, Consuela had to go in early to open up the small town bank where she was the assistant manager. The crowd of regulars thought it was sad he was sitting alone, but they really should have noticed he'd brought a book to read while he waited for his omelet. He wouldn't have done that if he'd thought he'd have company for breakfast.\n\nThe book was a western by Louis L'Amour. Ryan loved westerns. They were about a day when a man could make a place for himself through sheer force of will, courage, and an attitude of being unwilling to accept a slight at the hands of another. It worked for L'Amour's heroes again and again. In this novel, one of the minor players was a young married woman who had taken a lover--a bad man who was good with a gun. Her farm boy husband had tried to use his gun on the bad man, but he'd had no chance. The simple farmer died a painful death when the wife's lover shot him.\n\nRyan identified with the farm boy. Regardless of the consequences, he'd taken up an unfamiliar tool, a pistol, to defend the marriage and his personal honor. It hadn't been smart, but Ryan could see where the man hadn't been willing to live with the alternative. Ryan understood the man; he understood him well. \n\nThe omelet was especially good that morning. Trish had given the high sign to the cook to include extra amounts of the mushrooms and sausage that Ryan especially liked. He was being given privileges some long-term regulars still didn't get. A few people noticed the fat omelet and knew the head waitress and hostess had given Ryan her seal of approval. \n\n********\n\nAt her suggestion, Ryan and Consuela met Thursday night at a Golden Corral restaurant a little further out of San Antonio. The chances of contact with anyone they knew were slim. They'd agreed this was better than being seen together. After all, he was still a married man and people wouldn't understand they were planning two lawsuits against a multi-national banking institution, its regional headquarters in San Antonio, and a number of its senior officers. \n\nRyan commented on the fact that Consuela asked questions and talked while waving her fork around like a symphony conductor's baton. It was her Latina heritage, she said. Her grandmother had been raised in a small village in the south of Mexico. She needed her hands in order to speak properly. Ryan teased her, saying if her hands were tied behind her, it would be the same as putting a gag in her mouth. She thought about it for a moment, then stuck out her tongue at him. He laughed out loud. He couldn't remember when he'd last done that.\n\nShe was surprised, in turn, by the fact that his great-grandfather had been a full-blood member of the Comanche nation. She studied his face closely, remarking the only contribution she saw from that side of the family that she saw was his high cheekbones. His blue eyes and blond hair certainly came from somewhere else. They'd ended by deciding contributions from the Scots and the Irish overwhelmed most of the genes in both their ancestries. \n\nConsuela asked if Ryan knew there were more than a few Irish Dance schools around San Antonio? Did he know they held an annual Feis, a contest, in one of the downtown hotels? Ryan did not. Consuela told him he should go next October. He said he would if she would go with him. She said she would. \n\nThere was a pause while they both paid attention to their plates.\n\n\"Will the videos and stuff be admissible in court...even in divorce court?\" she asked finally. Ryan shrugged.\n\n\"I'm sure a good lawyer will find a way to get them introduced somehow,\" he replied after a while. \"If not, I'll make copies of the DVDs and mail them to her family and all our friends as Christmas presents,\" he added with a grin. \n\n\"I thought you said you had video tapes,\" Consuela remarked idly, after finishing a bite of Caesar salad.\n\n\"I did...I do,\" Ryan replied. But I bought a really fast computer a couple months ago for the office and I loaded a program on it to convert movies from a digital camera to a DVD...uh...format.\" He saw her confusion. \"Oh. First I had to play the VHS tapes and record from the VCR to my digital camcorder,\" he explained.\n\n\"Sounds like a lot of work,\" she commented.\n\n\"Yeah...not a very elegant solution,\" he replied, \"but I'm doing all this spy work on a shoestring and I didn't want to get advice from anyone, considering the subject matter. I had to find a few workarounds.\"\n\n\"I think you did very well,\" Consuela said quickly. \"You've got a lot more proof for what you want to do than I have,\" she added.\n\nRyan took a moment to absorb what she'd said. It felt good to be complimented for something he'd done instead of having faults pointed out, as Carrie invariably did these days.\n\n\"Well,\" he said after swallowing a chunk of rare steak doused in A1, \"I think I can do some things for yours and my case...I've got a couple of shots of the dork sitting at our kitchen table, naked as the day he was born, but working on something on his laptop.\"\n\n\"No!\" Consuela exclaimed. \"Really?\" She flushed faintly as her delight fought with embarrassment at the mental picture Ryan's words built.\n\n\"Oh yeah,\" Ryan replied, \"signing on to a network, logging in to a server it looked like, and then doing some transactions...what is it he does anyway?\"\n\n\"Oh, he runs the division that does high-end personal wealth management,\" she said. \"He manages accounts for the very, very rich customers...makes investments for them if they've authorized him to...keeps track of trusts...sends transfers to other banks if they ask him to...stuff like that.\" \n\nRyan nodded. His brow furrowed.\n\n\"Transfers?\"\n\n\"Wire transfers,\" she explained after a sip of ice tea. \n\n\"Like...oh...Western Union, say?\"\n\n\"Oh...yeah...kinda sorta...but on a much bigger scale,\" she explained. \"Millions of dollars are sent and received every day.\"\n\n\"I see,\" he replied. \"They trust him with that huh?\" he said speculatively. \n\nHe laughed.\n\n\"If they could seem him trying to enter his password three times and screaming like a spoiled child at his laptop when it won't take, I'm not so sure they'd trust him very much at all.\" He laughed again. \"He might send a rich guy's money off to Timbuktu or something, instead of Tucumcari...he's really not very good at doing computer stuff.\"\n\nConsuela laughed with him.\n\n\"Putting in his password three times huh? You saw him do that?\"\n\n\"Yeah...once he tried again and again and it never did process,\" Ryan remarked. \"Carrie came downstairs once, naked as he was, the little...well, anyway, she input his password for him. That's a no-no I'll bet the bank won't want anyone to see.\" \n\nHe thought for a moment.\n\n\"I have a feeling all of a sudden I won't have to go to court at all...and maybe not you either,\" he said. \"The people down at the bank are not going to want any publicity on this. When I tell them what I have, they're going to fall all over themselves trying to get me...and you...to settle out of court. How 'bout that?\"\n\n\"You might just be right,\" Consuela agreed. \"You can see him entering the keystrokes...and Carrie knows his password too?\" she asked idly. \n\n\"Sure do,\" Ryan replied. \n\nConsuela snorted her contempt.\n\n\"The idiot,\" she said contemptuously. \"I had a security level that only allowed me to do small-time stuff. His access level lets him work on all the accounts and do all kinds of magic with them,\" she said. \"Only a fool allows someone else to know their password,\" she added. \"The other person might be as honest as the day is long, but...\" She shrugged her shoulders expressively.\n\n\"Yeah, that's a fact,\" Ryan agreed.\n\n\"Good thing Carrie hasn't used what she knows,\" Consuela said after another swallow. \"She could ruin him if she did.\"\n\n\"Yeah, I guess she could,\" Ryan said. He thought for a while. \"Actually...so could I,\" he said thoughtfully. \"'Cause I know his password too, you know. I watched him type it often enough.\"\n\n\"Darn good thing you're an honest man,\" Consuela remarked with a quick grin.\n\nRyan shook his head.\n\n\"Huh-uh...he shouldn't count on that too much,\" he said. \"I don't like him one damn bit...or her,\" he added.\n\nThey laughed.\n\n\"You like Louis L'Amour?\" she asked. Ryan had brought the book inside to read while he waited for her to arrive. She'd said she might be late.\n\n\"Oh yeah,\" Ryan said quickly. \"He and Tom Clancy are my favorite writers...both of them are natural storytellers.\" \n\n\"Uh-huh,\" she answered. \"I like Tom Clancy...what's Louis L'Amour about?\"\n\nThey talked for another hour. They had to tip the waitress well. She'd cheerfully brought let them sit unmolested, except for refilling their iced tea glasses, when they lingered a long while after eating as much as they could. \n\n********\n\nOn her way home, Consuela Robertson ran over the conversations she'd had with Ryan Gilchrist this evening. It was more than enjoyable to be in the company of a good-looking man after so long. It took her years to get over her divorce. She hadn't trusted men in general for a long time, but she did this one. \n\nHe listened to her, and he was big...very strong...she thought. But he was incredibly gentle with Belinda. He didn't think he was handsome at all...he'd said something about it last night...but he was. He spoke so well too. He didn't seem to need to rush to contradict her, to correct things she said he thought were wrong. It was good to be with him.\n\nHer thoughts were all over the place as she pulled into the gravel driveway. She sat in the car for a long moment with the lights off. It was a thing she'd learned to do while living in Albuquerque when she first got married. Their house had been right at the edge of one gang's territory and too close to another. The sounds of shooting could be heard most weekends. She'd learned to look into the shadows before getting out of vehicles. It was necessary to see who was there before exposing oneself.\n\nThere was no one in the shadows here. She knew there was some gang violence in San Antonio but it hadn't spread out this far yet. It wasn't a very \"pretty\" neighborhood but her neighbors were all retired folks or hard workers at a variety of jobs in the area. \n\nShe sighed. Sometimes she thought this neighborhood was a metaphor for her life. She was nearing thirty years of age. Time was passing her by just as it was the houses on her block. The houses were a little rundown, in need of some care, and the atmosphere was a little desperate because that care was slow in coming. Some of her neighbors had already given up. She rolled her shoulders and shook her head to shake off the mood. She got out of her nine-year-old Mercury and trudged next door to Mrs. Alvarez to pick up Belinda. \n\nA little while later, as she was getting her little girl into pajamas and her teeth brushed, Consuela found herself staring into space. A thought had occurred to her...a plan that blossomed and matured in the space between two heartbeats. \n\nThere was a way to get some payback. The trouble was, what would Ryan think of her idea? What would he think of her? His opinion meant more to her than she'd realized until just this moment.\n\n********\n\n\"You want to look at the DVDs?\" Ryan asked. He was confused. It was Friday night, a night for partying, but that wasn't Consuela's way...what he knew of her anyway. And there was the baby in the bedroom just a few steps away.\n\nBelinda had been sent to bed but she hadn't gone willingly. She hadn't wanted to go to sleep at all with Ryan there. It had been the first time Ryan had been invited here. Belinda had climbed into Ryan's lap when he got there and had resisted every attempt Consuela made to get her to leave Ryan alone for even a moment. Ryan hadn't cooperated with Consuela's efforts very much. The little four-year-old was making a deep impression on him. \n\n\"Lady, those aren't for casual viewing you know? It's a lot of...sex...and talking about sex...and them disrespecting everyone in their little world. They just not--\"\n\n\"I know, I know,\" Consuela exclaimed. She was fighting to keep the redness visible in the hollow of her throat from spreading. Ryan studied her briefly, then grinned.\n\n\"On second thought, none of the videos are really good porn. Most of them are pretty boring actually. If you want to watch them I guess it's okay with me.\" \n\nHe was teasing. He didn't think she really wanted to watch the sex. There was another reason he hadn't figured out yet. He watched as the red spread from her neck to her ears.\n\n\"No, no,\" she protested. She searched for the words she needed. She tried again.\n\n\"Look, Ryan...remember we talked about the book you had with you last night, right?\" \n\nRyan pursed his lips. He still didn't see where this was going.\n\n\"Yeah...\"\n\nConsuela wet her lips with the tip of a pink tongue. The sight caught Ryan's attention and nearly distracted him from what she said next.\n\n\"You said you understood why that farmer boy tried to kill his wife's lover, right?\" she asked. \"And you told me you don't know how you did not kill your wife's first lover...didn't you tell me that just last night? And you had to quit carrying your gun because you were afraid of what you'd do about Sean Michaels if you ran into him or something?\" \n\nRyan nodded. Their conversations had traveled pretty far afield last night. He'd told Consuela many things he'd never told anyone else.\n\nConsuela got up to pace. Her house was small. There were only three steps from couch to TV. Her pacing was quick and nervous.\n\n\"There is a way to make this...this cabron a lot more miserable than just losing his job,\" she said.\n\nRyan grinned in astonishment. She'd said the word cabron with considerable fierceness. The word's literal translation from Spanish was \"a male goat.\" In slang, though, it meant something more like \"asshole fucker bitch.\" It was not used lightly by a woman as well bred as Consuela was. It was an indication of how furious she was at the man. \n\nHe took a moment to consider his alternatives while she continued to walk up and down the living room. Consuela was concerned only with getting some retribution from Mr. Sean Michaels. She was incensed at Michaels' request six months ago that she meet him for sex in an apartment he maintained close to the downtown bank. He hadn't accepted \"no\" for an answer and had badgered her for weeks before trying to get her fired. \n\nRyan, on the other hand, was more furious at his wife's betrayal than he was at the man she'd done it with. That was not to say there wasn't enough rage left over for Michaels though. Carrie had not bothered to take off her wedding band to fuck Michaels. It had been clearly visible in all of the videotapes Ryan had of the pair of adulterous lovers. Even had he not known Ryan, and they had met on several occasions, Sean Michaels had known quite well he was having sex with another man's wife. \n\nIn another day...in the days of Ryan's great-grandfather, twice removed, for instance...Ryan would have been completely justified in hunting Michaels down and shooting him where he stood. Abruptly, the scenario in the Louis L'Amour book he'd read came to mind. Ryan had always considered himself a throwback to an earlier time. He could do with a little payback directed against the man who had dishonored him. He grinned fiercely. \n\n\"What did you have in mind?\" he asked.\n\n********\n\n\"So...what do you think?\" Consuela asked nervously. She sat perched on the edge of the sofa cushion. Consuela looked at Ryan uneasily. She didn't know how he would feel about her idea. It was, after all, dangerous...and highly illegal.\n\nIt was Ryan's turn to pace up and down for a long while. He was a reasonably honest man. He wasn't a fanatic about it though. If nothing else, his contacts with the local union when his little company had gone over 35 employees taught him there was a little avarice in everyone. ",
        "The payments to the non-existent security firm he'd been making to avoid labor problems were illegitimate. He didn't want the union in his shop and they were willing to look the other way for a consideration. He didn't know if it was against the law to pay the extortion, but it was certainly unlawful for the union rep to ask for it. Ryan had cooperated to the extent that he had never complained to the authorities. This was way beyond that minor...involvement...with something illegal.\n\nCould he live with this?\n\n\"It's risky...\" he said finally, \"...awfully risky.\" \n\nHe sat on the opposite side of the sofa and leaned his head back and closed his eyes to think.\n\n\"But...not too risky...if we're smart,\" he said at length, \"and if we don't get too greedy,\" he added. He thought a moment longer.\n\n\"How would we set up accounts to send wire transfers to?\" he asked.\n\nConsuela gulped and didn't answer for a moment. The comment, and the follow-up question, indicated Ryan had more than half accepted the premise of punishing the bank, Sean Michaels, and Carrie Gilchrist all at one time.\n\n\"My mother's Uncle Roberto lives in Mexico City,\" she said unsteadily. \"He has an import and export company and he travels all over the Caribbean on business. He knows lots of people. Some of them have...contacts...\" \n\nHer voice trailed off. Neither commented on the implication her great-uncle knew people in both high and low places--people he could call on who knew how to keep their mouths shut...for a price of course. \n\n\"We know the passwords,\" he mused, \"but no one knows we do. Actually, no one could reasonably expect there would be any way in the world we could know.\" He thought for a moment.\n\n\"Well, unless my video is shown somewhere,\" he remarked. He opened his eyes and looked at Consuela. \"This had better be worth me losing my revenge on my wife,\" he told her quietly.\n\n\"Why?\" she asked, confused at the comment. \"You can still show the times when she was having sex with that man...it's just the kitchen that you couldn't show anyone.\" \n\nShe stopped. Ryan was shaking his head. \n\n\"Nope. We can't afford the possibility someone might wonder if I had spy cameras in one place, why wouldn't I have cameras somewhere else. See?\" \n\nShe nodded. It made too much sense to be debated. Ryan closed his eyes again and tilted his head to rest on the back of the sofa.\n\n\"I paid cash for the cameras and everything else,\" he said reflectively. \"That's all they would accept. The guy was moving, liquidating a lot of merchandise, and needed cash quick. There were no credit card receipts with Ryan's name on them...heck it was up in Dallas more than a year ago. There's no paper trail at all really. They gave me a cash receipt but I know where it is. I can burn it and then there is nothing. He probably has a cash register record of the purchase...but it's not linked to my name.\n\n\"Hell, he didn't ask my name and I didn't give it. He doesn't know me from Adam and couldn't identify me at this late date if the cops do find him and talk to him. There's no problem there...\"\n\n\"We can destroy the VHS tapes, the DVDs, the tape recordings, the cameras, tape decks...everything. All the equipment is one place in my garage and all the evidence I got with it is with me, out in my pickup,\" he said. He was talking to the ceiling...think of all the details. \"We can get rid of all of it some way...after wiping my prints off, of course.\"\n\n\"I didn't drill any holes in the wall to mount the cameras or anything,\" he mused. \"They were all just laying around...hidden in places I knew Carrie wouldn't look.\" He snorted. \"Suzy Homemaker she is not.\"\n\n\"Hmmmmm. What else? Am I missing anything?\"\n\nThey talked for hours, finally winding down in the early hours of Saturday morning. Most of the discussion had involved how to dispose of all the gear and the mountain of evidence he had gathered on his wife. It was hard letting that go, but there could be no hint Ryan had any idea of what was going on, much less that he had done some personal investigating. If that was known, there might be questions about what he'd seen during those investigations. That was a long shot but there was no sense taking the chance.\n\nConsuela had wondered how she would get access to Michaels' laptop, but Ryan knew the answer to that already. Michaels and Carrie were in a hurry when they came in the house for their trysts. The laptop was always parked quickly on the sofa while the two adulterers rushed upstairs. It rested there until the first time one of them came downstairs.\n\nHe also knew how he could get himself and Consuela to the Gilchrist's house without anyone upstairs knowing. There was a large swath of undeveloped land behind the house choked with scrub oak, some scruffy cedar, and lots of underbrush. Ryan had investigated it to some extent when they first moved into the new home. He knew how to work his way through from a street on the other side of the undeveloped land and right to their backyard. It was only a couple of hundred yards--five...maybe ten minutes, tops.\n\nOnce there, the chain-link fence around the back yard could be negotiated by anyone in reasonably good shape. He and Consuela were in excellent physical condition. It would be no problem for them to jump the fence.\n\nAt the house, the patio door rolled open and shut easily. It was silent for all practical purposes. He could leave it unlocked when he went to work. He'd make sure he left after Carrie...and he was willing to bet Carrie would never check it when she came home with her lover. The patio door opened into the dining room and it was only a few steps into the kitchen where the phone jack was. The sofa in the living room where the laptop would be sitting was just beyond the dining room through a doublewide doorway. Extricating themselves would be a simple matter of retracing their steps. \n\nThey didn't know how long Consuela would have on the laptop. They'd made a note to themselves to use a stopwatch on the VHS tapes to figure out how long the breaks were that Michaels and Carrie took between couplings. They'd been thinking the amount of transfers Consuela could make would be limited by the time they had on the day they pulled this off. It had finally occurred to them, they could do this several times. Admittedly, it would have to be over a short time frame, say...a week, but that should be more than enough to drain enough funds from the bank for it to hurt.\n\nRyan had a fair idea Carrie would jump at the chance to invite her lover over if she thought Ryan was out of town. As a matter of fact, she had probably been doing Sean every day this week while he was gone. He'd know when he went home tomorrow. There'd be more videotapes to review because he'd left the all cameras and recording equipment in place.\n\nThey broke for the night, too tired to make more plans. Before they parted, they agreed once they started this operation, they would never again make notes on paper or on a computer. The ones they had already taken to remind themselves of things they needed to investigate further, and other notes they'd make when there was no alternative, would be strictly controlled. When their use was over, they'd be burned and the ashes disposed of somewhere safe. \n\nThey'd never make phone calls from phone numbers that could be traced back to either of them. They could never speak to anyone else about this, and most importantly, there was no way they could ever be seen in public together until this was over. \n\nThe last agreement hurt the most. They'd become comfortable with each other even though they'd only known each other for five days. It hurt to realize they couldn't afford to attract attention by been seen together. \n\nRyan went back to his motel and Consuela went to bed after checking on Belinda. The little girl would be sad when she woke and saw Ryan was not there.\n\n********\n\nWhen he got home Saturday afternoon, Ryan found more proof of Carrie's infidelity waiting for him. He wouldn't have bothered watching it except he needed to time the gaps between the sexual bouts the two engaged in. He wasn't interested in an average or a maximum period he and Consuela would have. It was the minimum amount of time they would plan for. \n\nHis review of the tapes showed they'd have a little more than twenty-five minutes each time for Consuela to do her magic. The sexual interludes Carrie and Sean engaged in were never less than thirty minutes...and there was only one time it was that short. Ryan figured if he and Consuela were in the house only twenty-five minutes, there was no way they'd ever be caught. They had a five-minute margin.\n\nIn the garage, he dumped all the tapes into a cardboard box along with most of the cameras, recorders, the audiotapes, and recorders. The box went into the passenger side floorboard in his pickup. It had been a year and more since Carrie had been near the truck so it was a safe hiding place for virtually anything.\n\nSunday afternoon, he drove to Austin and purchased half a dozen prepaid cell phones. Ryan and Consuela would use them to contact each other while they were avoiding each other for public consumption. They were untraceable and he paid cash for them at six different convenience stores to ensure the purchases were also untraceable. \n\nBefore going inside the stores, he checked to make sure those neighborhood stores had no security cameras. He smiled gently or kept his face comfortably blank, and was appropriately courteous everywhere. No one would have any reason to remember the man dressed in nondescript clothing.\n\nWhen she wasn't being cold and hostile, Carrie ignored him the entire weekend. That suited Ryan to a \"T.\" He had no intention of spending any time with her he didn't have to, and sex was out of the question. It made him physically ill to think of making love to her. \n\nShe even slept most of the weekend. Ryan figured she was tired and he considerately left her alone so she could recuperate. He was beginning to relish the idea of what he and Consuela were going to do to Carrie and her Mr. Sean Michaels.\n\nChapter 4\n\nMonday night, Consuela made a call from her Aunt's house to her Great-Uncle Roberto, asking her aunt to leave the room for a short time. Her aunt had a bit of unrepentant larceny in her soul and would have loved to know what Consuela was planning. She was moderately disappointed Consuela wouldn't share that information, but she understood. She figured she'd find out sooner or later. \n\nGreat-Uncle Roberto wouldn't normally have accepted calls from an unknown number but now he was primed to answer when any of six numbers showed up on his caller ID after Consuela spoke to him. She ended the call by \"padding\" it with domestic chat she would normally have had with him on any other occasion.\n\nRyan had made one trip to her house in the late afternoon, driving a car loaned to him by one of his workmen. The man had needed the big pickup to go back to San Antonio to pick up a load of building supplies Tuesday morning and had actually suggested the switch. \n\nRyan made a mental note for him and Consuela to use rentals on their trips to and from his house. He didn't quite know how he'd arrange for them without leaving a trail of credit card transactions, but he thought it could be done. Maybe he could reserve the car with a credit card and then pay the final charge in cash...or maybe he could make a large cash deposit for them. He'd see what turned up.\n\nBelinda had been delighted when her mother left her at home with Ryan while she went to her Aunt's. Ryan enjoyed it too. When Consuela got home and entered quietly through the kitchen door, she found her small daughter cuddled in Ryan's arms while they both dozed in the big easy chair. \n\nShe watched them for a long time before waking them. It took that long for the unshed tears to dry up in her eyes. \n\n********\n\nConsuela spent every free moment the next week...not that there were many...speaking with her great-uncle. When he wasn't talking to her, he was busy calling in favors with contacts he had in Belize, the Cayman Islands, Barbados, Bermuda, Antigua, Curacao, Aruba, Jamaica and in other places Consuela had never heard of. In days, accounts were ready for use in offshore banks that had reputations for maintaining extremely tight security on behalf of their clients. Most of the accounts had been there for a long time, sitting idle and waiting for someone to activate them. A very few were brand new.\n\nBy the time the preliminaries were taken care of, Roberto had set up a path for money to flow through such places as a London bank, to the always friendly Swiss Credit Bank, and from there to the Bank of Nigeria, and then back around to a Caribbean destination. He set up several hundred separate accounts because he knew whatever his great-niece was doing had a half-life of only a few days. There would be no time for the funds to accumulate and no way for typical investment transactions to be processed. \n\nA week and a half after Great-Uncle Roberto finished setting up the routing and accounts, a smiling young Hispanic boy knocked on Consuela's front door and handed her a rewriteable CD. Surprised, Consuela accepted the jewel case containing the CD. She looked up to find the boy had turned and left without saying a word. \n\nThe CD contained a spreadsheet Consuela and Ryan loaded on a second-hand laptop Ryan bought for cash. It was the only record they allowed themselves. There was no way to memorize all the accounts or they wouldn't have had even this one piece of incriminating evidence around. The CD was sanded smooth, broken into small pieces, and melted before being dumped into the San Antonio River.\n\nThe revengeful pair anticipated having to let the money lay in an account somewhere for a couple of years or so to give the inevitable investigations time to die down. This was no real burden. They expected to be able to file civil lawsuits just as they'd planned anyway. They figured they had a good chance of winning them too. \n\nThe lawsuits would hurt the bank directly and penalize it for not enforcing their own contract's morals clauses. Pilfering the accounts of super-rich bank customers was designed to create the appearance Sean Michaels and Carrie Gilchrist had conspired in bank fraud. The jail terms they would get were in lieu of being shot they way they would have been a hundred years earlier in this same city. \n\nRyan and Consuela reasoned the money looted from the rich bank account holders would be replaced by the bank. The bank couldn't afford to lose their business if all the rich customers threatened to take all their funds out and those people could be relied upon to make exactly that threat. The loss to the bank would be a further penalty they'd just have to absorb. Next time, they'd make sure one of their senior supervisors didn't sexually harass a single mother or help himself to another man's wife on company time.\n\nConsuela's older second cousin, Richard, would store the laptop for them when she and Ryan finished the active phase of their plan. Richard was not computer literate and would have no interest in the laptop. He was also a recluse who had no friends. Actually, he associated with very few of the members of his own family. \n\nHe lived in a cabin with no conveniences back off behind a mesa and so far out in the sticks even the ranch's cowboys never came there. He'd built there with the owner's permission in compensation for a favor Richard had done him twenty years earlier. No one knew quite what it had been. \n\nThe only thing about Richard's living arrangements that interested Consuela and Ryan was that his home was extraordinarily remote and no one could get near the place without Richard seeing them coming for a long way. No one visited Richard without very carefully identifying themselves at the edge of the parcel of land he considered his. He'd been known to take a shot at interlopers to get them moving along. The laptop was safe with him; Consuela was sure of it and she'd easily convinced Ryan.\n\nA month and a half after Ryan and Consuela first met, all of the groundwork had been laid. The accounts were ready. The first pair of non-traceable cell phones they'd used to communicate with each other so far had been smashed and the component parts scattered in a half-dozen San Antonio dumpsters. All the gear Ryan had purchased from the spy shop and the recordings he'd made with that equipment had all been destroyed, burned, and the remnants deposited a city dump a hundred miles away. All their written notes had been burned and the ashes dumped in the San Antonio River south of town.\n\nThe storage bin in the garage where he'd kept the books had already been emptied and the contents carefully disposed of. He hadn't wanted that area in the garage to stand out so he cleaned the whole thing thoroughly, using copious amounts of cleaning fluids and lots of elbow grease. They were as ready as they could make themselves.\n\nTheir plan called for Ryan to stay home for a week or two to interfere with the lovers' trysts. He took off from work, telling Carrie he needed the time to recharge and rest after several months of hard work. She could hardly object; there was no good reason to shove him out of the house. Ryan was exceptionally attentive all week long; showing up several times at the bank to take her to lunch or just dropping by in the middle of the afternoon to show her a purchase, ask her advice on something, or just to chat for a moment on her break. \n\nOn Friday evening, he and Carrie attended a dinner hosted by one of the bank vice-presidents at one of the posh hotels down on the Riverwalk. It was an excuse for a formal evening out in the early fall to fill in the gap after Labor Day and before the traditional holidays. Ryan hadn't gone to the one last year. He didn't like many of the people Carrie worked with and he surprised Carrie this year with his enthusiasm about attending. She tried once or twice to dissuade him but Ryan wouldn't hear of it.\n\nHe surprised her again when she saw the beautifully tailored tux he bought just for this event, along with the best accessories he could find. A visit to the barber that afternoon had corralled his unruly hair and he'd taken extraordinary care with his shave. She noticed his well-manicured nails and commented on them. In his line of work, keeping one's nails long enough to manicure was difficult.\n\nAt the dance, Ryan stayed near his wife, though she tried a few times to divert him to other groups of partygoers. He smiled inwardly when she introduced Sean Michaels to him again. Ryan already knew who he was, from previous meetings, if nothing else...but it was interesting to look down into the man's eyes and squeeze his pale hand when Carrie took him over to Sean and his cronies. \n\nThe slightly widened pupils and the distinct expression of pain when Ryan's grip began to tighten were well worth the price of the tuxedo. Ryan hadn't realized until now that his six feet, one inch frame was so much taller than Mr. Michaels. He could tell Michaels didn't like it...and Carrie didn't seem to appreciate the clear distinction between the two men either.\n\nRyan wandered away from Carrie's side not long after that but he wasn't alone for long. A number of women, unattached and otherwise, had noticed the byplay when Ryan shook Michaels' hand and wanted a closer look at the winner of the contest. He noticed a look of irritation on Carrie's face when she saw him across the room with three women vying for the attention of her tall, strong husband. \n\nCarrie grew visibly more concerned when Ryan reintroduced himself to Sharon Michaels, Sean's wife. He'd met her earlier in the year at one of the regular functions, but hadn't seen her since. \n\nThe attractive blond spent a half hour chatting casually with Ryan. Near the end of their conversation, Sharon was distracted by something behind Ryan. He turned to see Carrie standing close to Sean and smiling up into his face. They were part of a crowd; there was nothing overtly suspicious about their postures or attitude, but Sharon was watching closely. ",
        "When he turned back to Sharon, a ghost of a frown was just fading from her face. There was a sadness in her eyes she couldn't hide. Ryan didn't know what to do. He didn't know her well enough to say anything about what he knew. He wasn't sure how she'd take it and now was not the right place or time to chance it.\n\nAll of the contrived interest in being with Carrie...Ryan thought of it as a smokescreen and bait for a trap...slowed in the second week. It had served its purpose. Carrie and Michaels were so spooked, they didn't even try to arrange a rendezvous for fear Ryan would show up somewhere unexpectedly. Ryan did come by the bank again a couple of times, as he'd done the week before, just to keep the adulterous twosome off balance but they were short visits he made to and from other destinations.\n\nIt worked. By the end of the second week, Carrie was clearly frustrated and anxious. It was assumed Sean was in the same state of sexual dissatisfaction. Ryan and Consuela congratulated themselves. The pump had been primed. \n\n********\n\nIt was even easier than Ryan had estimated to get into the house on Carrie and Sean's first \"date\" on his first Monday back at work. Ryan had been able to orchestrate almost the exact time the time the pair of lovers would leave work for the afternoon by making a point of taking Carrie to an early lunch. He set it up on Sunday, telling Carrie he would come by to pick her up on his way out of town for a business appointment in Austin. She'd agreed--she could hardly say no the way Ryan put it to her--and suggested a Taco Bell near the downtown bank's location. Ryan knew the proposal of a \"fast food\" meal was made to get it over with quickly and get Ryan out of town speedily. \n\nThat was fine with him. His only goal in eating lunch with her had been to make sure she and Sean Michaels couldn't leave work in the morning. Ryan and Consuela wouldn't have to wait all day near the Gilchrist residence waiting for something to happen.\n\n*******\n\nInstead of renting cars to travel back and forth, Ryan and Consuela borrowed nondescript vehicles from Consuela's family. They were in Consuela's cousin Alfredo's car today. The rest of the week they would have the loan of automobiles--a different one each day--from other individuals in Consuela's family and friends of the family. \n\nThe way it worked was that Consuela's Aunt had spoken with a number of people she trusted. She arranged for a gassed up, smooth-running vehicle to be sitting in an out-of-the-way parking lot with the keys under the mat each morning by 7:00AM. Consuela and Ryan, though Consuela's Aunt had no knowledge he was part of this, had full use of the vehicle all day. When it was returned to the parking lot, it was understood there would be an envelope under the mat with the keys containing a few hundred dollars in twenty-dollar bills. No questions would be asked, and none answered.\n\nRyan had told his senior foremen he was going to continue his time off and go out to the deer lease he'd had for years up near the little town of Marble Falls. It wasn't unusual, even though he'd already been away from the job for two weeks. Ryan always got some deer tags about this same time each year and took a little vacation time to drive north of San Antonio up to the cabin on the lease near Marble Falls. It wasn't remarkable enough to even comment on. The business hadn't been making enough money in prior years to permit the three-week vacation. Everyone wished him good luck in the hunt.\n\nConsuela was sick. It was that crud going around, she told her boss...or maybe it was the flu. She really hoped it wasn't a new strain because she hadn't gotten a shot this year. Anyway, she was going to use some sick time. She hoped she'd be back in tomorrow or maybe the day after. The bank manager wished her the best and hoped she'd soon be feeling better.\n\nRyan and Consuela talked about anything that came to mind while they waited in the small BBQ restaurant's parking lot. It helped pass the time and they were slowly coming to realize they enjoyed just sitting and talking. Just being with each other for any reason was beginning to be important to them. \n\nRyan had left one bug in place, a sensitive listening device taped to the back of a small table in the foyer that would tell them when Carrie and her boss came in. Consuela had gone into the restaurant and brought out a bag of pulled pork sandwiches. She and Ryan had each eaten a couple--he was still hungry after his rushed lunch with Carrie--but the primary purpose of the purchase had been to establish a reason for the thoroughly unremarkable auto to be parked in the restaurant's parking lot. \n\n\"Well, it's about damn time,\" Ryan commented. He'd just glanced at his watch, thinking his wife and Michaels should have had enough time to set up their excuses after lunch and leave for a few hours of licentious pleasure. The key rattling in the front door lock was clearly audible coming from the speaker of the portable receiving unit resting on the dash. The excited voices that followed almost immediately made it a certainty. Carrie and her lover had arrived. \n\nConsuela and Ryan got out of the big gray Ford quickly. They had no time to lose, but they were careful. Taking a slow look around to make sure no one was watching, Ryan led Consuela into the scrub oak and brush to the west of the restaurant. It was the same stand of stunted trees and heavy underbrush that ended just behind Ryan's home. \n\nThey'd talked about dressing in black and maybe drawing a mask over their faces or something, but they'd quickly discarded the idea. Going about dressed like ninja wannabe's would draw attention from everyone in sight. Instead, they settled for a wig to conceal Consuela's true hair color; plain, faded baseball caps; and dark sunglasses, and thoroughly unremarkable clothing.\n\nThe colors in their shirts and pants were muted greens, browns, and dark grays. Their footwear was unremarkable, and dark colored. The sizes on the shoes and boots they'd bought for this job were varied. On one day, they could put up with too tight shoes for the short time they would need to. Another day, they would wear multiple pairs of thick socks in shoes that were too big. \n\nEverything they wore was clean, but well used, and had been obtained from Salvation Army and Goodwill stores in Austin, Dallas, and Houston. Nothing had been purchased locally. Each of the six sets...the five they thought they'd need plus a spare...of clothing and footwear would be burned at the end of the day in which they were used. The metal zippers, other bits of metal, buttons, sunglasses, etc., would be scattered in the deepest part of several regional lakes. \n\n********\n\nIt took only ten minutes...maybe a little more...to negotiate the couple of hundred yards through the tangle of brush and undersized trees. They could have done it in less, but Ryan deliberately led Consuela on a roundabout route through places where they wouldn't leave tracks. Actually, it wasn't difficult to find stretches of hardpan soil, or stretches of bare rock where their shoes wouldn't leave any tracks. They would come back the same way and Ryan would use a branch to sweep across the sections where they did leave a trail. They would use this particular path only this once. Nothing they could control was being left to chance.\n\nAt the edge of the woods, they took disposable latex gloves from their pockets and pulled them on. They checked each other's appearance carefully to make certain their disguises, such as they were, remained intact. Ryan gave Consuela a thumbs up gesture and she returned it with a nervous smile. Without waiting any longer, the pair hopped the fence and walked purposefully to the patio door. They didn't run. They'd planned their walk to appear as natural as possible. \n\nThey kept their eyes moving behind their dark glasses. They saw no one at the windows of the house they would be entering and nothing alarming from the houses to either side. Three steps into the yard, tall shrubs on both sides of the Gilchrist house hid them very effectively from anyone who might have been at the windows in the neighbors' homes.\n\nRyan opened the patio door with the ease of long familiarity and slid it open in one sure movement. As he'd predicted, Carrie had not thought to make sure the house was secured when she came home in the middle of the day. Seconds later, the glass door was closed softly behind them. He and Consuela moved to the side, where they'd be out of sight from anyone outside and stood close together. They hardly dared to breath for a long moment. \n\nRyan looked at his watch and showed the face to Consuela. They'd decided they would be out of the house at the twenty-six minute mark no matter what they'd accomplished or left undone. The woman nodded her understanding. Ryan started the stopwatch function and let his arm drop to his side. \n\nThey spent a moment longer just listening. They were amateurs. Their hearts were in their throats and had been since they got out of the car. Their bodies had dumped quantities of adrenalin into their bloodstreams and their pulse rates were skyrocketing. They needed the moment just to focus on what they were about to do.\n\nThe moaning from upstairs told them the adulterers were already hard at it. The wet, smacking sounds of naked flesh slapping against flesh were clear.\n\n\"Oh, God, Sean,\" Carrie screamed, \"do that...it's been so long, darling.\"\n\nRyan's forehead was suddenly creased with deep lines. He stood stock still in the kitchen doorway. The fury he'd felt to a greater or lesser extent since he'd discovered Carrie's second infidelity had ebbed over the past couple of months while he and Consuela were working on this plan. The anger came flooding back as he listened to the pair of lovers up the stairway in front of him and down a short hall. This was too much. \n\nHe'd already shifted his weight to his left foot and was preparing to step off on his right to go up the steps when he felt the weight of Consuela's hand on his forearm. He looked around. Consuela's eyebrows were raised in question. They'd agreed they would not speak a word until they were safely back in the car. Her touch brought a measure of sanity back to him.\n\nSuppressing the rage, Ryan gave her a strained smile and a weak smile. He took a shuddering breath. It wasn't easy, but he settled back squarely on his feet and set himself to listen only for signs his wife and Michaels were about to come downstairs. \n\nHe checked. He was not aroused. The sexual activity in which his wife was engaged upstairs was not keying the primitive response he'd learned about. He'd beaten it. \n\nHe grinned at his partner and gave her a firm nod. Reassured, Consuela looked around the living room, spotted the laptop on the sofa, and walked carefully across the living room carpet to retrieve it. Ryan had taught her to walk the way his grandfather had showed him. It was the way Comanche warriors walked when they were stalking game or enemies. After some practice at odd moments over the past two weeks, someone walking beside her couldn't hear her footsteps as she crossed a creaky hardwood floor. Ryan grinned wolfishly. \n\nConsuela took the laptop into the kitchen and sat down at the table. In another minute, she was logging in to the bank's server and entering Michaels' password. They were mildly surprised when it worked. They knew the bank regulations called for all users on the institution's server to change their passwords no less than every sixty days. Sean Michaels thought himself above all that though. He hadn't bothered.\n\nFlashing Ryan a smile, Consuela laid out the pages of a printed spreadsheet of account numbers set up by Great-Uncle Roberto on the table beside the laptop. The sheets of paper would be burned sometime tonight, along with the clothing they wore. They would rely on the digital version on the laptop cousin Richard was guarding and the backup Great-Uncle Roberto had. They had other printed spreadsheets, with other account numbers, hidden in Ryan's pickup for the raids they would conduct on the bank during the rest of the week's visits. \n\nConsuela went to work locating the accounts of a number of very, very rich people who'd entrusted their wealth to Sean Michaels and Carrie Gilchrist. Soon she was typing commands into the system as fast as her fingers could move.\n\n********\n\nBack in the car, they couldn't restrain themselves. They laughed wildly at each other's comments, no matter how weak the humor was. Consuela kept reaching out to touch Ryan's hand and forearm. She couldn't help it. They'd conspired, and had now committed a serious crime. They needed the closeness to reassure each other. After a while, the adrenaline wore off and they were quiet. Her hand was still protected in his though. It was a comfort for both of them while the enormity of what they had done sank in. By the time they got to where they would exchange cars, holding hands just felt good, period.\n\nThey left the BBQ restaurant's parking lot immediately, making a point of driving well within the speed limit along a route they'd mapped out a week earlier. It had been difficult, but they'd found a path through the city that dodged around all the places they could see had security cameras pointed at the street, or places they would reasonably expect such devices but couldn't immediately find them. \n\nWith their dull, uninteresting car, their wigs, caps, dark sunglasses, and carefully unremarkable clothing, they didn't think they'd catch anyone's eye even if the tapes from every private home and business along that route were examined. They kept their caps pulled down and brought a hand up by their face whenever they could, just in case. There was always the incredibly remote chance someone either of them knew might see them as they drove by. \n\nBack at the lot where Ryan and Consuela's cars were parked, they stripped down to their underwear and put everything they'd used this day into a big trash bag. The bag went into the back seat of Ryan's pickup. \n\nThey were mildly embarrassed at their partial nudity before each other. This was, after all, the first time they'd seen each other undressed. Neither noticed the other's discomfiture. Each thought the other was calm and businesslike. Neither thought the other was in the least self-conscious. \n\nThey dressed quickly and departed in different directions. Consuela left to pick up Belinda from daycare and Ryan raced to get to the hunting cabin he was using in the hill country near Marble Falls. Tonight, he would burn everything in the bag and the ashes sifted for metal parts, buttons, etc. \n\nSometime around sunrise, he would get in the flat-bottomed 16-foot fishing boat he kept up there and dump the ashes and metal parts in the deepest parts of the nearby lake. He might even catch a bass or two for breakfast, who knew? There would be no evidence of anything he and Consuela had done left behind, though, and that was the important thing.\n\n********\n\nBy Friday, it was a well-settled routine for Ryan and Carrie. It was almost boring. They had to work hard at reminding each other to not relax on the tight security measures they were practicing. They parked at different locations each day, somewhere close to the BBQ restaurant because the only good place to enter the brush was just off the restaurant's parking lot. Their disguises, and carefully staged changes in their pace and posture, ensured no one would notice the same couple wandering around all week long.\n\nSean Michaels and Carrie Gilchrist found time to sneak off to the Gilchrist home every day that week. The times of their meeting varied, but they always made their rendezvous and it was always at the Gilchrist home. Ryan thought it was sad that Sean Michaels never sprang for a motel room, just for a change of scenery. The man was cheap; that's the best that could be said about him. Consuela thought that there was nothing better to be said about the man was particularly sad.\n\nChanging to their disguises on Friday took Ryan and Consuela less than half the time it had Monday. Parking just down the street from the BBQ restaurant, they strolled slowly toward it arm in arm...and walked past without stopping. Ryan let the earpiece from the remote portable receiving unit slip off his ear and tucked it into his breast pocket. \n\nThe two Bexar county sheriff's patrol cars parked nose out in the parking lot were almost certainly there only because the officers were inside working their way through a big plate of ribs. There was no officious bustle of law enforcement officers coming and going...and no activity around the place that hinted of an ongoing investigation inside the restaurant or in the little patch of wilderness nearby. No one showed any interest as they passed by and no one pursued. None of that mattered in the least.\n\n\"Wave off?\" Ryan said in a low voice a block away from the place. Consuela wasn't familiar with the term, but it's meaning was clear enough. She nodded imperceptibly beneath the floppy army surplus bush cap she wore today. At the corner, she turned back, seemingly to check the traffic before they crossed the street. \n\n\"No one coming,\" she murmured. \"Still...\"\n\n\"'Tis the better part of valor,\" Ryan remarked.\n\n\"It's an omen,\" Consuela said decisively. \n\nRyan didn't question her appraisal. Without appearing to hurry, they walked completely around the block and back to the borrowed car they had for today, got in, and left. They filled their last black trash bag with the clothing they'd just removed, added the sets they hadn't used, and put the bag in Ryan's pickup. \n\nHe put an envelope with three hundred dollars under the seat--there was no floor mat in this car--and got out of the area quickly, parting with a quick kiss both badly needed from the other. There was an urgency to their movements that hadn't been there before. They told themselves nothing had changed from yesterday's adventure, but the threat they felt from the inoffensive patrol vehicles gave the lie to their words. They were relieved this phase was over.\n\nThe next day, after \"returning\" from his supposedly unsuccessful hunt, Ryan removed the audio pickup near the front door. He crushed it under his heel on the concrete garage floor and carefully picked up all the pieces. They were placed temporarily into a trash bag and were dropped individually that night into a handful of dumpsters across the city.\n\nThat same Saturday evening, an hour after a late evening phone call from Consuela, Great-Uncle Roberto began spreading the word. The next Monday, at a myriad of banks all through the Caribbean, men and women with imminently forgettable faces and nondescript appearances began emptying accounts using passwords the banks \"knew\" only the true account owners could possibly know. They took the cashier's checks, sometimes cash, and made their way to other private banks where they made deposits according to their instructions. \n\nSecondary accounts suddenly flush from cashier's check deposits were looted almost as quickly as computers could process the transactions. None of the accounts had a positive balance the next afternoon. From that point on, every deposit and withdrawal was in cash. Eventually, thousands of comparatively small amounts...generally in U.S. dollars...began to find their way to Roberto's special number accounts in private banking houses. \n\n********\n\nThree weeks passed without a cry being raised. Ryan was sure he'd see something in the paper or on the radio as quick as something hit the fan. It would be the most significant event to hit down there in the history of the bank. He knew that because when Consuela totaled everything up, they found they'd sent just short of nine million dollars out of the country into offshore accounts. "
    ],
    "authorname": "Longhorn__07",
    "tags": [
        "cheat",
        "busted",
        "suit",
        "lawsuit",
        "tv show",
        "bank",
        "caribbean",
        "llano estacado",
        "comanche"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/fool-me-once"
}