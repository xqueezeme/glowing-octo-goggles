{
    "title": "Extending the MILF List Ch. 19",
    "pages": [
        "THE CASTING COUCH: \n\n\n\nMrs. Olivette: Sonny's professor that he and Holly Morrison did in her office\n\nEllen Collier\u2014red head, slight woman works for Alissa Honeywell, presently boning Sammy Honeywell\n\nAlissa Honeywell\u2014black attorney, one of the original MILFs, wearing Sonny's collar. \n\nJames St. Vincent\u2014Alissa's new, surprising obsession\n\nSam Honeywell\u2014Alissa's wandering-eyed husband, consigned to share her sister with her son...\n\nSammy Honeywell\u2014one of the original MILF sons, part of Sonny's deal with Melissa Crawford, who wants a father and son to do her at the same time.\n\nMelissa Crawford\u2014Alissa's Sister who persuaded Sonny to get Sam and Sammy to doubleteam her. \n\nImogen Travers\u2014she is fucking Sonny and as Sonny directs in payment of a penalty incurred by her husband, Rictor Travers who is an asshole.\n\nMiriam Travers\u2014she is part of the debt payment, but whose actual identity remains in question...daughter to Imogen or rental playing a role? Unknown.\n\nQuilla Favors\u2014assigned to fuck Seth Morrison who traded Holly, his sister, to Sonny for her mother, Lydia, (only on the phone). \n\nLaura Wills\u2014blonde original MILF, mother of Chris, likes life on her knees.\n\nMarjorie Romelingame\u2014wife of Gary Romelingame, traded her ass to Sonny for Holly Romelingame. \n\nGary Romelingame\u2014husband of Marjorie, wants Holly as his submissive but fears his wife.\n\nTia Maria\u2014Filipino dominant who has moved into the Wills house as their \"maid\", yeah, right. \n\nChilton St. Vincent\u2014James' father, husband to Mercy St. Vincent\n\nCarol Lynn Northcutt\u2014ex-wife of Borland Northcutt\n\nBorland Northcutt\u2014husband of Suzanne Northcutt, his second and present wife. \n\n\n\n\n\n\n\n\n\n\n\n\n\nI woke with the uncomfortable feeling I was forgetting something and my phone rang. It was Sammy. \n\n\"Dude, you have an economics mid-term today. Did you forget?\" \n\n\"Uh huh.\" I was stunned. Shit, what else was I forgetting? \"Really? Or are you shitting me?\" \n\n\"Mrs. Olivette stopped me and asked me to pass the message along to you.\" \n\n\"Uh oh.\" I said, but really thought I was just thinking it. \"I better go then, hadn't I?\" \n\n\"Up to you. Your mom is out of town so I think you're on your own.\" \n\n\"We in college for fuck sake, what's our mom got to do with it?\" \n\nSammy chuckled.\n\n\"Easy for you to say, your mom is gone and my mom fucks you whenever you wink at her. By the way, what have you done with Ellen?\"\n\n\"Just what Ellen wants done with Ellen.\" I muttered.\n\nSammy laughed.\n\n\"That sounds just right. Are we on for tonight?\" \n\nI had to reset my brain. \n\n\"Oh right. I have a surprise for you.\"\n\n\"You promised another Mother-daughter duet.\" \n\n\"Oh.\" I'd forgotten. \"Right. Still on.\" \n\n\"I might be late. Mom has me an interview with Bickerstaff and Kline late in the afternoon.\" \n\n\"Really?\" I was surprised, pleased but surprised. I'd forgotten about that little tidbit. \n\n\"I'll call you when I'm ready and you can give me directions.\" \n\n\"Jeeze, if you don't know how to fuck a woman by now, I'm not sure my directions will be much help.\"\n\n\"Fuck you, Sonny.\" \n\n\"You, sir, are not my fucking type.\" \n\n\"Glad to hear it. Later.\" \n\nWe hung up. It was seven. I notified the sleepy pussy I was called to a higher calling, which was a clear misnomer since fucking Miss Miriam and Mrs. Imogen was a far higher calling...still, I decided I better bugger off to class despite my resolution to skip the whole week in favor of a world raining pussy. I tried to arrange things with the pussy at hand but not one of the three wanted to talk to me. I re-showered and scampered off to campus, realizing reviewing the material on the test might make some sense. \n\nI had it cold. I settled in at the library and by the time I needed to head for class, I felt pretty good about all that preparation I'd engaged in with such single minded assiduous attention. I felt good walking to class.\n\nAlissa called. I flinched and then flinched again when I glanced at the phone. What could she be after this time of day? \n\n\"Sonny,\" she began but her voice tightened and hitched, the catch in it created the pause and gave me the same. My ears pricked up and my prick grew ears. Something was afoot. I felt it. I knew it. Adrenaline pumped in my veins like I'd snorted it off a compact mirror. \n\n\"Sonny, I must see you. Can you come to the office?\" \n\n\"I'm headed to class.\"\n\n\"Skip it. Please. I'll, I'll buy you lunch.\" \n\n\"Lunch, right. At the prices I'm paying to be made smarter...?\"\n\n\"Please, Sonny. I never, I rarely ask for much but I'm asking, pleading, come to the office.\"\n\n\"After class. I'll call you.\" I refused her as a matter of course and principle, our intercourse and my principle position which was in her. \"You forget, Mrs. Honeywell, you wear the collar.\" \n\n\"But he won't wait.\" \n\n\"He?\"\n\n\"Please, not on the phone.\"\n\nI stopped on the stairs and a little bitch rammed into me because she was trying to climb stairs and text at the same time. I gave her the glare and moved over to moor at the wall out of the current. Assholes still bumped me. \n\n\"Alissa, what is this about. Tell me.\" I tried my masterly voice but I sounded more like a bullfrog who swallowed a Senator and I don't mean in that good way. \n\nAlissa gave me no notice. \n\n\"Sonny, please, not on the phone. I want to tell you face to face, so I can make you understand.\" \n\n\"Alissa, you're weirding me out. What the fuck is wrong!\"\n\nSilence. \"Sonny, I've met someone.\" She said. \n\nMy eyes watered and I couldn't see. No, asshole, I wasn't crying. Some bimbo had too much perfume between her legs and it got in my eyes. They hurt. It wafted up in the stairwell like someone gas bombed us. \n\n\"Remember the first time? The first time you had me? Remember when I said it? Remember when I crossed the line? Remember what I said?\"\n\nI closed my eyes, tears running down my cheeks. They stung like I'd been sprayed by a skunk. I turned to the wall and pressed my forehead against it. \n\n\"Alissa, what the hell?\"\n\n\"I remember.\" She was whispering now, her voice desperate. \"I told you how much I wanted you.\"\n\nDid she? I remembered kissing her and then my hands on her ass. If she was talking I was busy gathering empirical data to support my theory that she had the finest ass on the planet. I wasn't going to argue with her though. \n\n\"Sonny, I felt it then. The need, the desire, the compulsion. I remember the fire in me, the flames consuming my very soul and when you began to undress me, my wildest dreams came true. I knew I wanted you inside me. I knew I wanted to open up and have you plunge into me and I'd go crazy with lust and love and, and, well, lust. I wanted it. Do you remember taking me the first time? Your lips on my breasts. My nipples heat when I just think about it but when you come into the room, they radiate that heat, a desire of my body to have your mouth on me.\" \n\n\"Mrs. Honeywell, I really have to get to class.\" Yeah, like I could move from my spot on the stairs with my cock sticking straight out like a bow spirit. I remembered that first time, her tits bared, her body quivering with the excitement,thrilled with the forbidden fruit of seducing a friend of her son's, a regular guy before I got all fancy pants and MILF drunk. I remembered and frankly, whenever I got close to her, I felt that same jazz again, which explains why I keep going back. Well, that, and the fact that I have a lifetime membership in her club. That does help, I must admit. \n\n\"Sonny, right now there is another young man in my office asking for me to fuck him, for business but Sonny, I want to. When he came in the room, my knees went weak. I was breathless. I couldn't move, I couldn't think. I had to leave him and go to the ladies' room and regain control of myself. It was like being dipped in cold water. I tingle everywhere and I mean everywhere, deep inside where the tingling really matters and turns into that itch you just have to scratch. I still feel it. Sonny, he wants me to have sex with him and I want to. I do! I am so excited, I almost offered up my dear little sister as a bribe to make sure he knew I was interested but then I touched the collar and I realized I don't own my body or my lust any longer. But Sonny, god, I need him. I want him.\"\n\nI heaved a sigh of relief. It is funny, rejection never feels good, even if you know you deserve it or its inevitable, when it occurs, it takes away your reason and strips you of empathy. All you know is what you feel. \n\nHowever, I realized this was serious. It was important, to her but also to me. She'd encountered her chemical match on a chance meeting. \n\n\"Has he touched you?\" I asked, feeling clarity seep into my mind. \n\n\"God, no! If he'd have touched me I'd be sitting on his face right now.\" She giggled and she sounded nothing like the business woman. Something had happened. \"Sonny, he, he told me to call you. He, he knows about the collar, what it means, that I'm yours and that all he can do is watch you fuck me before you offer him some other MILF from your catalog. He told me to call you, to ask you to, to come. He said he wants to negotiate an arrangement, that's what he called it, an arrangement whereby I'd be his. Sonny, before now, I saw the logic, of the collar of you owning me as a ward against the flighty assholes clustering around my open door reputation for welcoming men between my legs, but this, this is different. God, Sonny, he came into my office, sat down, looked me in the eyes and told me I would be his, that he wanted me and then told me to call you so he could offer you something in return. Sonny, god, he wants to trade you someone for me. He said so, he said he had the perfect combination of crazy, sexy, cool to make it worth your while.\" \n\nAlissa was panting into my ear. God, I swear I could feel her breath licking along my skin and shivering through those fine little hairs that make you itch when they are ruffled. Her voice dripped with her arousal. \n\n\"Alissa, tell him I have a mid-term and I'll be there when I can.\" \n\n\"Oh no, he might leave.\"\n\nI grunted.\n\n\"Then he leaves. If this is a negotiation, you can be eager to let him mount you but if you leave the matter up to me, I'll negotiate as I wish.\"\n\n\"Oh, Sonny, please!\" \n\nI suddenly had a brilliant idea, but I had to get it set up just right or I'd fuck it up.\n\n\"Alissa, listen, if you want to manage this little tryst without me, take off the collar. I won't be offended. I just ask that you keep good records because I'll want you to give an accounting of it to me and some of my friends.\" I snickered. \"Like Ahmay, maybe? Oh, and her brother.\" \n\nAlissa gasped. She panted into my ear, but her breath quavered, warbling like a throat singer gargling ginger ale. She found her voice.\n\n\"No. No, Sonny, I won't take off the collar.\" She paused. I waited. \"I don't think I really understood what Mrs. Wills experienced, being as she is. Now, though, now knowing that you have the right to hand me off to him, or refuse us both, my god, I am so aroused, I think I'd let Travers finger me just for a little attention.\" \n\n\"No orgasms with the collar on. I don't want you tainted if he proves worthy of you.\" \n\n\"Who? Travers?\"\n\n\"No, Alissa, the guy you want to mount on your wall.\"\n\n\"I'd mount him anywhere. Sonny, will you come as soon as you can?\" \n\n\"I'll be there. As soon as I am done with the test. Alissa, tell him exactly what you told the last guy, Hughes. Exactly! And wait for me. Alissa, Mrs. Honeywell, tell me clearly, do you want me to trade you to him?\"\n\n\"Oh god yes, you do understand! Oh Sonny, I knew you would. I won't take off the collar but I want you to hand me off to him to be handled till I am spindled and mutilated and too fucked to come again. He can do it. I know it. I feel it between my legs and behind my tits and in my throat. I want to suck him so badly, I am gargling desire! God, I am out of control! Come here, rescue me!\"\n\nI think she meant come give her permission. \n\n\"You know I have to negotiate with him, to hand you off, otherwise, everyone will assume....\"\n\n\"Yes, of course. I won't take it that way. You own me, Sonny, if you want to rent my garage out to a foreign car once in awhile, that is part of wearing the collar. The who. I just want, I want the who to be James. I want to bend the rules a little.\"\n\nI chuckled. \"Rules? What rules? I am just following my dick around. Listen, I am going to go to class.\" She gasped \"no\", nearly bawling. \"It will attenuate the feelings. Resist, luxuriate in them, bask and lull in them. Let them soak into you so that when he does touch you...you'll be ready and willing.\"\n\n\"I'm ready now. Willing, god, I think I'd alway be willing. It's like someone gave me something!\"\n\n\"Alissa! You are mine so long as you wear the collar. Take him to lunch. Text me where and if you leave, text me so I know where to find you.\" \n\nSilence. Finally she squeaked, \"Okay.\" \n\n\"Oh, Alissa, I should warn you that doing this at your request like this, it means I get to ask something of you, something you might not want to do...and now, if I do hand you off to this guy, you'll have to do it, anything I ask of you, sight unseen.\" \n\nThe lawyer on the other end of the line realized what I was asking, what I proposed and she had the good sense to hesitate. \n\n\"Sonny, its you, so yes, I accept that. I mean, I accept that you'll find something for me to do that I would refuse to do and I'll find a way to do it, to make it work, to have it fit for me even though you propose something so utterly disdainful, I'd never agree otherwise, collar or no collar. I'd fuck a Great Dane if it meant this man would have me. I've fallen into a pool of passion and I don't want to leave without having my fill of it. But Sonny, its like you. The only reason I brought it to you is because it made me so excited, thinking of you handing me off to him. I wanted to see if you would. So, yes, ask anything and I'll comply, if you hand me to him. I promise I won't take off the collar and refuse you.\" \n\nMy god, she was serious. My god, I had her right where I needed her. I almost chortled to let her know I already had something in mind but I didn't. Instead I said nothing. \n\nI hung up and sprinted for the closed doors of the lecture hall. \n\nWhat followed was the longest hour and a half of my adult life. For some goddamned reason, I was thrilled to the core at the prospect of handing Alissa off to a dick of her choosing rather than mine. I know, it seems backwards. I dearly wanted to have skipped class but I needed to do well on the test. I was constantly wobbling off the subject of the next question but when I came back from thinking about renting Alissa out and her obvious thrill at the prospect, the answer shown like a light. I did really well, I thought and so time would tell. \n\nI began with the idea of giving her away despite what I'd told her. I was just being difficult. I figured I'd just show up and have her take off her bra for me and that would be that, I'd open her up for him, till I realized I couldn't do that, shouldn't do that. Sid wanted me to protect her. Giving her away would subject her to constant pleas for equal compliance. I kept coming back to negotiation and I realized I needed to trade him something. I mean, I needed him to trade me something, something of equal value to Alissa Honeywell. I had to get something back, in kind. I was almost calm till I finished the test just at the end of time and I broke like a filly at the Derby. I was in my car and on the freeway in ten minutes. \n\nI got the text about halfway downtown. I checked it at the stoplight. She was dining with James St. Vincent at the Crookshank down a few blocks from her building. I was racing, slowly, to get parked to arrive there before they finished and left, plus I was starving since I'd skipped breakfast. I found them sitting at a table out of the flow of the room, a little lover's alcove. They sat in the round booth at 12 and 4, not touching. If Alissa had been white, she'd have been pink with embarrassment. As it was, the only real clue I had to her state of mind, and body for that matter, was her voice, which was an octave or more higher than usual and she was talking really fast. Maybe someone had drugged her.\n\n\"Mr. St. Vincent, this is my owner, Sonny Duncan.\" \n\n\"Ah, the lucky stiff arrives.\" \n\nThe bloody bloke was British. Fuck me. I felt jealousy raise its ugly green head which I promptly bonked soundly with my sense of fair play. Plus, Melissa was arriving tonight so I needed Alissa's compliance if I was going to satisfy her sister and her husband. This was surely going to be an interesting weekend. \n\n\"James St. Vincent, but call me Jamie.\" \n\nWe shook hands in the American way and I pushed in beside Alissa, shoving her closer to him. I felt the tension like energy on her skin. I patted her full thigh under the table and she groaned like she had climaxed. \n\nMr. St. Vincent inspected her and then looked at me. \n\n\"You own this fine lady? So that is the reason she refused to have sex with me, as part of our business arrangement?\" \n\n\"I did not say that!\" Alissa screeched. \"I said, I was owned and without his consent....\"\n\nI patted her leg and she cut off, like I'd pulled her plug. \n\n\"Mr. St. Vincent,\" I began.\n\n\"Jamie, please. This is not formal business. I wish to speak frankly, so I'll go first and you can assess your response as you like. My father sent me here with the clear intention of gaging my suitability for handling these negotiations on my own. Furthermore, he had full knowledge that Mrs. Honeywell is rumored to provide sexual favors in order to close a deal. She has what he called rather euphemistically, a frosting touch. Once the deal is settled, she seals it soundly with a bit of stuff of her own devising, or so goes the rumors. In our business, it is as important to verify rumors as it is to validate lies. So here we are.\"\n\nI nodded but instead of responding, waved a weak hand at the wait staff. I really was starving. I ordered off the menu, getting something quick. They had a tuna salad I told him to bring immediately. When the guy misunderstood, I insisted now meant now. He scarpered away to bring it. \n\n\"Yes, so here we are.\" I said, looking across at the other fellow. He had English good looks. Good hair, black and a sort of plain handsome face that was not striking so much as calm. He seemed ethereal to look at but did not demand the eyes as the truly striking beauties in life do. One could look past him, like his face was so smooth the eyes slid right past it.\n\n\"So? How do we proceed. I am a bit callow, I'll warrant but I am heartened by seeing that you are not much older than I.\"\n\n\"Younger, I expect.\" I said, mimicking his accent. Alissa gave me a look and I moved my hand onto her thigh and pulled it towards me. She resisted then relented. Her legs widened smoothly, splitting to grant me access. I moved my hand up between her legs. She wore pantyhose. I scratched at the blocked entrance to her body with a fingernail like a cat at a screen door. I fancied I heard the echo. She gasped and slumped back in her seat, her half-eaten meal forgotten. \n\nThe tuna salad came and I took a quick, big bite. I ordered a steak as the proper follow up.\n\n\"Tastes like chicken, smells like fish.\"\n\n\"I should think it would taste like tuna.\"\n\n\"I wasn't referring to this, it was a random comment connecting to a memory of my girl here.\" I grinned at the man.\n\nHe blushed. He may have been twenty-five, but not older. He had a worldly way about him that intimidated me, not the least related to the accent and the knowledge that he was in a foreign country negotiating for cunt. I wondered in that moment, my mouth full of tuna salad, if cunt and country were in any way related in their distant origins in the English language. Try cunt? Sounds like a marketing line posted in a gay bar. I almost asked him about that possibility but my mouth was full and saved me. ",
        "The salad was gone in jig time. I sat back, the raving hunger gone for the moment but glad I'd ordered a fillet to top it off. I had to keep up my strength.\n\n\"Let us be clear,\" I began, sitting forward, impressed that the other fellow had been silent and let me eat in peace. \"You want Mrs. Honeywell to have sex with you.\"\n\nThe man did blush then, but just a slight pinking of one cheek, just the right one, which seemed peculiar but aren't we all in some way? Peculiar, I mean? He nodded. \n\n\"That is the essence of it.\"\n\n\"No.\" I said flatly. \"She's mine. However, it is not without awareness of the penchant of people to, as you might say, frost a deal to settle it and screw you to the sticking place.\"\n\nThe man nodded. \n\n\"Macbeth I believe.\" \n\n\"Lady Macbeth,\" I countered. \"I think.\" I shrugged. \"So, sir, I offer you a selection. I have access to a very nice blonde that will suck you and fuck you very nicely, I think.\"\n\nHe shook his head. \n\n\"No thank you. I want Mrs. Honeywell?\" \n\n\"What about a redhead? A brunette? Brown hair and golly gee as you please? I have a young woman with skillz between her knees and ears, both and tits you can bounce on.\" \n\nHe shook his head to them all.\n\n\"No? Well, Mrs. Honeywell is not available unless....\" I glanced at Alissa. I was gently stroking her crotch with the back of my hand or the tip of my fingers. When the steak came, I'd need both hands, unless it was so perfect I could cut it with a fork. A guy can hope. God, I sound like a woman, rhapsodizing about food. I was still hungry, really hungry. \n\nMr. St. Vincent caught up my phrasing and followed up perfectly. \n\n\"Unless, what? What?\" \n\nI finally heard the same urgency in his voice that I'd heard earlier in Alissa's. She was wound tight as a Swiss watch. I was cheered in suspecting that he had the same response to her as she had to him. In the right measure, such mutual attraction can be combustible. \n\nI peered across the table at him and squinted a little. \n\n\"Unless you have something to trade.\" \n\nI'd seen what I rightly presumed was our waiter bringing me my steak. His arrival interrupted the conversation. We sat in a companionable silence while I ate, using both hands. Alissa resumed eating her cob salad, assiduously ignoring both of us. \n\n\"Mr. Vincent, I do not hand my women off to anyone, they are mine. However, I am willing to trade her, for something of equivalent value.\" Shit, I forgot the \"saint\" but maybe I was holy skeptical. \n\n\"Something? Or someone? And, please, really, call me Jamie. Let us be friends because we have this beautiful creature between us and I hope to have her in common.\" Jamie smiled and I thought it a bit rapacious but in the main, it was friendly. \n\n\"Someone. I mean specifically someone.\" I glanced at Alissa. She had released her hair and it tumbled about her face, obscuring her eyes as she huddled over her meal, giving her a sensual appearance. \"I mean someone of about the same value to you as Alissa is to me. Like a mother or a sister. I'd take a daughter but yours could not possibly appeal to me. Sister then or even a favorite Aunt. I'd prefer a mother or sister, though.\"\n\nAlissa stopped eating. She lifted her head and peered through her fallen bangs at me, her eyes haunted. I patted her thigh to reassure her but she did not seem reassured. I cut the steak for another bite. \n\n\"So we are to strike a bargain? Good. I presumed that would be the case and barter rather than the Capitalist exchange of capital...I approve. I do, Sonny. May I call you that?\"\n\n\"Sonny is fine, Jamie.\" I felt it then. That odd feeling that we might be great friends, circumstances being different. \n\n\"How about a step-mother. Would that be sufficient? Or her, ah, half-sister.\" He smiled then and looked away, as though avoiding my eyes. When he looked back into my eyes, I felt that connection, that he liked me and I him. He smiled again and nodded as though agreeing with a voice I could not hear. I hoped he wasn't, that it was an internal negotiation and not some delusion speaking to him. \n\n\"I have not been wholly honest with you, Mr. Duncan, Sonny. I know much more of your activities than I have let on and I want her but I want you too, for a reason all my own. I want to make this clear to you, Sonny, I wish to trade you my step-mother and her half-sister who has taken up residence with us in our town home in London. It is a bit cramped. It is a relief to travel, I confess. I want you to have them both.\"\n\nI finished chewing and lay down my knife and fork. \n\n\"I must say I doubt you can deliver a half-sister, much less the step-mother. She surely has less affection for you than a real mother would have.\"\n\n\"If I could, so we are clear about the exchange rate here, that would be sufficient?\" He pointedly looked at Alissa. \"In exchange for her?\" \n\n\"No.\" I said. \n\nJamie looked surprised as I intended and predicted. I felt that warm flush of confidence you get when you predict something accurately. \n\n\"Two for one is hardly a fair trade.\" \n\nJamie grinned, recognition and a slice of relief in his eyes. \n\n\"When you meet these two, you'll understand that you are getting shortchanged.\" \n\n\"Ugly? If they are not beautiful....\" \n\nJamie held up his hand. \"On the contrary, Mercy is my father's second wife and so, as you might rightly surmise, she is a trophy wife. She is duly shiny. She knows it, he says it and yet they behave like lovers. It is hardly a match made in heaven but they bring each other some happiness, which is better than none at all as was the case between my father and mother. Patricia, however, she is another matter. She is along for the ride and refuses to leave. She has undo mastery of my step-mother and I confess, of me. When you meet her, you'll understand.\" \n\nJamie tightened his lips and looked down at the table. \n\n\"I need to tell you something, that makes this a complex matter. Patrica is Mercy's half-sister and her aunt, not by marriage, by blood.\" \n\nI chewed around that combination and could not get the pieces to make a finished picture. It remained a puzzle in my mind. \n\nJamie noted my confusion and explained. \n\n\"My step-mother's mother had sex with her husband and produced Mercy. Somewhat later, but not that long, she had sex with her very own father and produced Patricia. The aunt is a younger half-sister, having a common mother but two different fathers. The father and son have shared Mercy's mother for some years in obvious defiance of social acceptance. It explains why both girls were desperate to leave home. Mercy became a model and Patricia followed. \n\n\"They met my father and when Mercy married him, she brought Patrica with her. Both failed as models because, well, they have busts to be proud of. Putting them in designer clothing at eighteen would have been like putting a lamp shade on a chair. It might fit but not nicely. When Mercy hit eighteen, her bust assumed adult dimensions and two years later, Patrica followed her expansion with a fine, expansive pair of teats of her own. First, they switched from Mercy as the model to Patrica being the model and then, when the boobs grew, faced either breast reductions or rejection from the sisterhood of traveling runways. Mercy kept her tits and quit modeling, working to make Patricia successful. When Patricia's tits appeared and then overburdened her torso, they left the business and, as might be expected, sought a husband, successfully as it turns out. My father married Mercy soon after. \n\n\"I wanted to believe he was being magnanimous and not lusty but I was wrong. She and my father are as lusty as if they were of the same generation, embarrassing as that sometimes is. He's younger with her than even when he was young, I suspect. Patricia, not to be left out, seduced him too. Alas, now, those two women are wild for sex. My father is often away, and when he is home, he is faced with having sex with both of them and that usually leaves someone unsatisfied since his stamina is not what it used to be. They are quite open about their willingness to absorb all his sexual energy and when he is home, they do. The poor man rarely accomplishes anything while at home and must travel to wield any of his considerable skills in our business. \n\n\"As it turned out, I attended the London School of Economics and commuted from a flat in London nearby. This, together with my father's habit of leaving home to attend to business, just to escape his wife and her sister, led to a different sort of arrangement. Of course, given the boundaries or lack thereof, in their past, they have turned on me. I don't believe my father knows about this state of affairs, if you'll pardon the expression, but he may well find out soon, if I have to face that situation alone. So you see, if I offer them and I deliver them to you, and you succeed in putting them each to the sword, so to speak, then you would be doing me an equivalent favor. I would yield the two of them to you, happily, if you can interest and engage them, I would be pleased to release your woman from her collar and plunder her right sporting well.\"\n\nI regarded him for a moment, imagining the complexities of the situation. I glanced at Alissa. She swept her hair back. Her chestnut eyes regarded me with tense stillness. \n\n\"No, still. I cannot take two for one, it just isn't fair.\" I grinned at Alissa's chagrin etched in her ebony features. She sat like a hound on point, quivering to be released. \"However, I might be able to trade you Mrs. Honeywell and her sister, Mrs. Crawford.\" \n\nJamie's eyes widened. He stared at me for a moment, before glancing at Alissa. She looked as gobsmacked as he did. \n\n\"You can trade me her sister? Can he?\" Jamie directed his eyes at Alissa.\n\nAlissa turned her head to look at him. \n\n\"Most assuredly. I know he can. My sister, she'd be traded by Sonny just like I would be, or at least equally as willing.\" She smiled then, her white teeth gleamed. \"I predict she'd have the same reaction to you that I have. Make no mistake, Mr. St. Vincent, if I had not had this collar on my neck, I'd have opened my knees for you two minutes after you arrived. I want you, Mr. St. Vincent and I wager my sister will want you as well.\" \n\nJamie kept his eyes on Alissa, drinking her in, taking her with them and she surely felt it, how his gaze invaded her. \n\n\"Your sister, is she as beautiful and sensual as you?\" He asked.\n\nAlissa nodded. \"She's younger and she, she loves sex....\" Alissa hiccupped then. \"...with Sonny as much as I do but I think she'd be pleased to be distributed to another man just as I am.\" \n\n\"You like the idea of being handed around in this manner?\" Mr. St. Vincent asked, his voice betraying his slight amazement. \n\nAlissa nodded. She was going to speak further but I squeezed her thigh. She moaned and closed her eyes, tipping her head back.\n\n\"She has had quit a reaction to you, Mr. St. Vincent.\" I said. \n\nThe man looked sheepish, almost embarrassed. \n\n\"I know. The feeling is mutual. I arrived, committed to winning her from you, to show my father that I am worthy of the trust he has shown by allowing me to arrive here alone and on my own to manage the arrangement, Peppers, Bickerstaff and Kline is handling for us, and Mr. Kingston, do you know Mr. Kingston? A fine man but challenging to work with. It will be quite a boon for me if I can manage to make this connection to our benefit and his. If I can show myself capable of bedding this fair lady, I shall be doubly expecting of my father's praise and perhaps his grudging respect. I say only perhaps, though.\" He smiled thinly then. \n\nI nodded agreement. \n\n\"Let me show you their pictures, Mercy and Patricia.\" He fumbled for his phone.\n\nI guess I was thinking they'd be blond and look alike. They didn't. Despite the closed loop in their gene pool, they didn't look alike. Mercy had black hair and breasts. Patricia had a mop of brownish red hair that appeared dyed but accentuated the rapacious look in her eyes, at least in the picture. Her tits were a mouthful but seemed hardly enough to get her kicked off a model's runway. Then he flipped to a different version of her and saw that she'd grown out, not up. Her breasts were as big as her head, I swear it. Still, the attitude in common in both pictures demanded a brass pole, which I did not mention to Mr. St. Vincent. \n\n\"Good enough?\"\n\n\"Do you have a picture of Messy?\" I directed the question to Alissa.\n\nJamie waved his hand dismissively. \n\n\"Her sister would be nothing but lovely, I am sure.\" He nodded. \"Good then? Alissa and her sister for my step-mother and Patricia, whatever she is, aunt and half-sister?\" \n\nI nodded. I guess I thought this could be managed later, in some distant future but that was a misapprehension of the situation. \n\nJamie grinned. He stuck out his hand and we shook. \n\n\"Who goes first?\" \n\nI shrugged. \n\n\"What did you have in mind?\" \n\n\"I, well, I thought that perhaps now would be a good time.\" \n\nI shook my head. \n\n\"She has to work. When would you be able to provide your...a Mercy and Patricia was it?\"\n\nJamie nodded. \n\n\"Oh, we are all in town for the weekend. I'll need a little time to...shall we say, make arrangements.\" \n\nI wished I could be a fly on the wall in that little tete a tete. I was amazed at my own success at lining up pussy to lay down and turn over and moan to me while I entered them and I was curious to know if he had some mechanism I might be able to copy, just for variety you understand. Then I reconsidered and realized I didn't need more variety, what I needed was lessons in consistency, a tactic I seemed unable to bring under my control. I smirked but barely and briefly, lest I be misunderstood. \n\n\"Suppose I, ah, see to my arrangements and we'll see about the trade when I have them made. I expect tomorrow some time.\" \n\nI gulped. \n\n\"You understand they are in demand and you may well be lined up between others, right?\" \n\nJamie regarded me, looked at Alissa and smiled thinly. He nearly had no lips but they were pink in a light way, but distinct, giving him a curious look, I tried not to say pretty but that was the impression I had, that he had that pretty look that women all want to mother and then they are surprised when the guy whips out a horse cock and rogers them into a screaming orgasm they can't control. He had that look, the look that said, be careful because I'll surprise you the moment you relax. It put me on guard. \n\n\"I am happy to have entrance to her granted at all. Dad will never believe me.\" He chortled, then sobered. \"Bugger. What if he needs a distraction?\" He grinned. \"I think he has a fetish for oriental women.\"\n\nI laughed, all full of pride of ownership.\n\n\"By god, I have just the thing for him. If he needs a distraction, I assure you I can put a woman astride him that will keep him distracted for days.\" Of course I was thinking of Annie.\n\n\"Hours would be sufficient I think. But I get your point.\" Jamie looked at me and smiled again but this time it had less of the tension in it. \"Mrs. Honeywell, we have business to discuss then, don't we?\" \n\nAlissa moaned. \n\n\"I thought we'd, I mean, right now, I thought, you'd want....\" She sputtered to a halt. \n\nI patted her full thigh. \n\n\"Mrs. Honeywell, you will just have to wait. Waiting is good for you. Stew in your own juices and all that.\" \n\n\"I think I'm going to drown.\" She whispered, her voice twanging with tension. \n\nI smacked her leg. \n\n\"Pull yourself together. Sid is counting on you. Go. Do what needs doing. I'll call you when we are ready.\" \n\nShe nodded. \n\nI wasn't done eating but I stood and she hugged me from the side, bracketing me with her tits. I never get tired of that feeling, her tits pressed against me like that, her one arm around my neck. \n\n\"You have Friday. I'll arrange to have Melissa there but she might be a little worse for the wear. Saturday, I'll collect from you, however.\" \n\nShe gave me a dark look, the expression that she'd have when she found hand cuffs in her Christmas stocking. They left me then and I sat down to eat. \n\nMy fucking phone rang after two bites. \n\n\"Where the hell are you?\" Ellen yelled in my ear. \n\n\"On earth, bitch, where are you?\" \n\n\"On planet starving!\" \n\n\"What? Are you unable to fend for yourself? Don't know how to order room service?\"\n\n\"We were waiting for you.\" \n\n\"I had a lunch engagement.\" \n\n\"Thanks for telling us! We need to eat, something beside each other.\" \n\nI cleared my throat but Ellen interrupted.\n\n\"Kidding. We have been good little girls. No one has come without you. It seemed unseemly to have sex with each other without you here. Are these two really mother and daughter?\" \n\nI shrugged.\n\n\"I am a little confused on that score myself. Does it matter?\" \n\n\"It might. Not that it would change what happens next much, though.\" \n\n\"What happens next?\"\n\n\"They are going to see me have sex with a man and his son.\" Ellen laughed evilly then. \"God, that makes me so crazy hot. Am I right or not?\" \n\n\"Not right, but you've always been a little tilted.\" \n\n\"Tilted! That's the right word. What have you got planned for us the rest of the day or shall we go shopping?\" \n\n\"Go eat. I'll get back to you.\"\n\nI hung up and cleaned my plate. The waiter came over and asked me if I needed anything else. I didn't. I just wanted to sit still for a while and breathe. After a while just letting my engine idle, purring along, I took out my phone and called Sam. \n\n\"Hello.\"\n\n\"Sam. Sonny. Listen, are you busy this afternoon?\" \n\n\"Busy? You mean as in something I can't drop to do something else?\"\n\n\"Yeah, like that.\"\n\n\"Nope. Not even a little. Fact is, I was going to go to a movie by myself.\" \n\n\"I have a different option.\" I was calculating where to be and where to go. I decided keeping Sam and Alissa apart for a while seemed sensible and resolved to keep the hotel room for a while longer. \n\n\"I'm listening.\" \n\n\"I have three women to divide between us. One, one wants to get it both ways, you know, like Melissa wants from you and Sammy.\" \n\n\"Jesus Crust.\" He muttered. \"Crusty bread I mean. It makes me a little nuts when you say that.\" \n\n\"I get that, I do.\" I said softly. \"I was wondering if you'd mind helping me out this afternoon.\" \n\n\"I...yes, okay.\" He sounded like he had half-swallowed a golf ball and was talking around it. \"Then, then Melissa?\" \n\n\"Tomorrow, till maybe five, then she has another adventure waiting for her but then by then I should have something else lined up for you. Tonight, I have someone else who'd like to the pleasure of your pleasure.\" \n\n\"No shit. I mean, no kidding. Gosh, Sonny...I thought I had it going on but you make me seem narrow and unimaginative. Say, have you seen Suzanne lately?\" \n\nSuzanne? I shook my head. \n\n\"You have no idea what that woman is into.\" \n\n\"I don't care what's she into, I just care about what goes into her.\" \n\nI almost snarked about being too obvious but gave it up. I didn't want to rattle him before I got Alissa between him and his son. \n\n\"Well, plenty of time for that.\" I muttered. \"You at your apartment?\"\n\n\"I can be.\" \n\nI wondered where he was but didn't ask. None of my business. \n\n\"I'll knock on your door in say, half an hour, forty-five minutes.\" \n\nHe agreed and we hung up. My phone rang again. I answered it only to find it was a text, no voice greeted me. Melissa was telling me her flight was on time and she'd be in on schedule around eleven tonight. \n\nI left the restaurant and went back to the Sparrow. I found Ellen and the Travers girls, or whoever they were, still at table in the Sparrow Garden. They noticed me five minutes after I sat down. I hate it when women hit it off and chose not to notice I exist, as though they've sworn off dick. It is a horrifying feeling to feel the \"ancillary\" stamp on your forehead. I felt Ellen's tweaking of my male ego and managed to remain silent and still while they jabbered about shit I cared nothing about. After five minutes, I signaled the waitress and told her to bring me the ticket to sign. I put it on the tab for the room. I left them to finish eating and extended the room stay until Sunday night. What I needed with an additional hotel room to go with the downtown apartment, I didn't know but I had the feeling that I'd benefit from having both locations available. ",
        "The women met me in the lobby, finally deigning to acknowledge my existence.\n\n\"So, Sonny, what have you got planned.\" \n\nI looked Ellen right in the eyes. \n\n\"I thought I'd introduce you to Mr. Honeywell.\" I said evenly. \n\nHer eyes widened. The idea that had thus far been only an abstraction suddenly solidified. I watched the realization soak into her brain and begin to affect her eyes. They twitched several times before she squeezed them closed. \n\n\"I told you about this.\" She said to no one, or at least, not to me. \n\n\"I thought you were kidding. You mean you are really going to have sex with your boyfriend's father?\" Imogen inquired.\n\n\"Boyfriend?\" Ellen appeared genuinely confused. \n\nImogen laughed. \n\n\"I don't care what you call him, he's a boyfriend. Sammy, was it?\" \n\nEllen nodded. \n\n\"I have a boyfriend and I'm having sex with his friend and then his father?\" Her voice revealed the difficulty she had in processing that concept, not really. Here confusion, however, was tinged with a delightful aura of scarlet interest. \n\nI looked at Miriam. Her eyes were dark, somber. When she caught me looking at her, she fixed her gaze on me. \n\n\"I want what she got.\" She said softly. \"I want two men. I don't care who.\" \n\nImogen looked around us, checking to see if there were auditors. I smiled at her court awareness. I didn't respond to Miriam or to the look on Ellen's face. She clearly thought she'd go first. \n\nI felt the dependence on me and my right to set the agenda as their expectation, like I was balancing something and had to maintain the right equilibrium or I'd lose them all. I went to the valet and ordered my car and we drove to the apartment. I could see the Travers women were clearly impressed. Ellen acted nonchalant but she enjoyed the other two womens' appreciation as much as I did. \n\nUpstairs, I opened the apartment and found it cold. We went inside, turned up the heat and I left them to go get Sam. I tapped on his door. It opened as if he'd been standing there at the peep hole waiting for me. \n\n\"Sonny! God, I was about to call you.\"\n\n\"Why?\" \n\nHe grinned. \n\n\"I guess I'm a little impatient. Let me slip on my shoes. We aren't going out so I don't need a coat do I?\" \n\nI shook my head. \n\nHe exited and locked the door. We walked towards my door at the other end of the hall. \n\n\"I've been thinking about it, about sharing a woman with Sammy. Once I got around the idea of having sex with Melissa, finally, after all these years...I got to thinking about that, having her with Sammy, and I confess, I got all nervous and shit, stuff, nervous and stuff.\" \n\nI nodded. I could understand. I stopped at the door.\n\n\"Now listen, Ellen is the redhead. I want you and Sammy to do her first. In fact, I may just tie her up and make her watch while we do the other two. They might be mother and daughter, maybe not, I have conflicting information.\"\n\n\"Good lord, mother and daughter? Really?\" \n\nI nodded, feeling the glow of his amazement. It warmed me up and made me eager. Then my agenda changed. I finally noticed the elegant symmetry of the elements if I'd arranged them properly. \n\n\"I changed my mind. I think you should have the mother and daughter and then share them with Sammy. He might be a bit jaded by now but you should but a little fish in his pond.\" I grinned, thinking of it. \"I'll take Ellen with me to pick up Melissa and bring the two of them by tomorrow morning. There's the ticket. You'll need to conserve your energy but don't be dismayed if things don't go swimmingly at first, you'll have another chance. I am handing your wife and her sister off to someone else tomorrow night, so they should be a little wobbly when its time for you and Sammy. Sammy is going to be here around five. I'll handle the introductions.\" \n\n\"Introductions?\"\n\n\"He doesn't know you are going to be here but he knows Ellen is.\" \n\n\"Oh.\" \n\n\"And Sam, Ellen works for Alissa.\"\n\n\"Oh shit! Shoot!.\" He shook his head. \"Do you really think she'll, I mean Alissa, will she let Melissa and me, you know, do it while she is in the room?\" \n\nI chuckled. I was sure I had that nailed. \n\n\"I have that nailed. She will.\" I suddenly wondered if I was stretching her limits too profoundly. What if she came apart watching her sister fuck her estranged husband? I knew I had to have Sammy there. She'd never let herself come apart while he was in the room, or in her, might be what I meant. I sort of wished I was part of that family and could participate. I guess I rather thought I'd emcee the proceedings but realized there at the door that I'd likely be escorted out of sight and mind if I had any sense. \n\nSam was staring at me.\n\n\"Well? We going to go in or what?\" \n\n\"Ellen is sleeping with Sammy.\" I said. \"She wants to be the woman between a man and his son, specifically between you and Sammy. I am thinking we keep her waiting until Melissa is present so she'll feel...competition. That'll make her try harder. Melissa arrives late and I'm going to put her up at a hotel.\" I was setting my agenda as I spoke. I realized then that my duffel was at the China Sparrow. So that would work out.\n\n\"Sonny, enough already. Open the door.\" \n\n\"Oh, right.\" I did. We strode into the room. The women were sitting around the bar each sipping a finger of scotch. The place had warmed up, they'd removed their coats. \n\n\"Ladies, this is Sam Honeywell.\"\n\nImogen caught the name immediately. I saw it register on her face. \n\n\"Honeywell?\" She whispered. \"Any relation to Alissa Honeywell?\" \n\nSam nodded, suddenly suave and debonair. \n\n\"She's my wife.\" He said softly. \n\n\"I'm Imogen and this is my daughter, Miriam.\" Miriam nodded and smiled. She appeared delighted with the second cock in her anticipated configuration. \n\n\"I'm Ellen Collier. You're Sam Honeywell?\" Her voice betrayed her as it rarely did. \"I've seen you around here.\" \n\nSam studied her. \n\n\"Oh yes, I thought you came with this apartment.\"\n\nEllen laughed. \n\n\"I have been fucked in this apartment but I only came after Sonny inherited it.\" She gave me a look that told me to shut up. \n\n\"You're having sex with my son?\" Sam asked. \n\nEllen's look turned to daggers. \n\n\"Holy Anglican angles!\" Miriam muttered. \"Her boyfriend is his son?\" Imogen gave her a wave of the hand to keep silent, or at least not to be so explicit. \n\n\"Well, since we all know about each other....\" I began but Sam held up his hand.\n\n\"Wait a bit, Sonny. Are you two really mother and daughter?\" \n\nThey both nodded. I filed that reaction away, no longer bothering to be confused. I guess I no longer cared either way, whatever their story was. \n\n\"I, she, Sonny and another guy, Landon, they had my mother yesterday. I want you two to have me today.\" \n\nEllen's face fell. I could see it. She was off-balance. Normally Ellen's face betrayed nothing but standing with Sam's eyes on her nipples showing through the diaphanous blouse she wore seemed to have rattled her. \n\nSuddenly they were all looking at me. I glanced at Ellen. \n\n\"Listen, Sam, why don't you and Ellen use that bedroom. I have some things to do with these two. When you want, come over and we'll fuck Miriam front and back. Your choice. Oh, and tie Ellen up, so we can fuck her later. Don't let her get too much, I want her warmed and ready when Sammy gets here. I thought Sammy and I would use the Travers women to get warmed up and then you can get involved.\" \n\nEveryone nodded. \n\nSam looked at Ellen. \n\n\"I'm not as old as I look.\" He said lightly. \n\n\"You don't look old or worn, for that matter.\" Ellen returned. She extended a hand, the scotch in the other hand. \"How do you feel about fucking me with your son?\" \n\nSam shook his head, put his hand around her little one and let her lead him into the bedroom to the right.\n\nThe Travers women watched them go. When the door closed their heads swung around and their eyes snapped to me. \n\nI ignored Miriam. I took hold of Imogen's elbow and steered her into the left bedroom. She let me. Miriam trailed along behind. I felt her like a fluffy presence behind us, just about cuddling up to us but not quite. \n\nIn the bedroom, Imogen turned into me, wriggled her arm out of my grasp and put her arms around my neck. \n\n\"Mr. Duncan, what do you want to do with me now?\" \n\nI kissed her. Her lips were rich with arousal, her breath was hot on my skin. Her body melded with mine. We ignored Miriam. We kissed until she kicked off one high heel and used the stocking-clad foot to caress my calf. I opened my eyes and looked down at her. \n\nI wanted to make love to her. She was beautiful. We continued to kiss. Well, she did, I was busy planning out how to maneuver her onto her back with her panties off and me between her legs. I know, that sounds distracting and it was. It may also sound stupid since presumably I was kissing one of three sure things in the apartment but that was the sort of maneuvering I refer to. I mean the maneuvering that doesn't break the mood, so, when the head of my cock brushes against the lips of her pussy, she gasps and pushes her hips up in that wonderful way a woman has of asking to be entered without speaking a clear syllable. I wanted her to feel the moment I entered her and to remember it for the rest of her sexual days. \n\nA high standard, perhaps but hell, if you don't aim high, you aim low, which one is the better target? Imogen solved the issue for me but not close to any of the options I'd been sorting through. She eased away from my lips and looked up at me. \n\n\"She wants us to watch.\" Imogen whispered. \n\nI played like I had no idea what she was talking about. \n\n\"Who?\" I said as cluelessly as possible, which is pretty clueless. Still, I knew. Fuck me.\n\n\"Miss Collier.\" Imogen said, her voice dripping with sarcastic glory as though I should have figured it out by myself. \n\n\"Oh. When you say us...?\" \n\n\"She meant you too. She, she said she wanted us to watch her have sex with her boyfriend's father.\" \n\n\"Exhibitionist.\" I muttered. Ellen Collier took explicit responsibility for her own sexual needs, twisted as they were. Did I say \"twisted\"? I meant surprising. Surprising, not twisted. If there's one thing I hate its the pot talking to the kettle in that mean way. \n\n\"Maybe.\" Imogen whispered, as though she were trying to keep secrets from Miriam. \"I want to see it, watch them, too.\" She shook her head once. \"When she said it, I didn't think I did, that I would but, but....\" \n\nI rolled my eyes. \n\n\"You didn't know he was black?\"\n\nShe snorted. \n\n\"I didn't know he'd be so sexy.\" \n\n\"Oh.\" I was duly chastised for my breech of PC etiquette. Imogen humped her hips at me, bumping me with her pubic bone, in the most PC way. \n\n\"So? We going to stand here all night?\" She turned to find Miriam, extracting herself from me. The two women walked out of the room. Shit, I had to trot to catch up, my cock being all hard and shit. I think I bent it. \n\nImogen opened the door gently as I waddled up behind them. No one spoke. The door cracked and we heard it, the steady squeak of a bed and the soft pulse of a woman panting. Imogen pushed the door open. \n\nEllen Collier lay on her back. Sam Honeywell lay between her brilliant, white legs which seemed to sparkle they seemed so brilliant, made all the more so by his coal black ass, flexing up and down. He was naked. She was naked. They were fucking. While we watched, Sam rose up on his arms and began to rumble Ellen good. She arched under him, taking him deep. Her legs curled up around his ebony body, hooking her heels behind his thighs and then flexing her body up at him, taking him deeper still. \n\nEllen groaned. \n\nI realized a moment later she was talking.\n\n\"See.\" <grunt> \"I told you.\" <grunt> \"They'd come.\" <grunt>\n\nSam stalled in mid thrust, arched his back to look back at us, his face expressed some sort of strain but with no barcode to tell us what sort it was.\n\n\"Oh. Hi.\" He said, tensed. \n\n\"Do you mind if we watch?\" I asked, feeling all polite and shit. \n\nSam looked nonplussed. He twisted back to look down at Ellen underneath him. \n\n\"I don't mind. Do you mind?\" He grunted his voice tense as his flexed ass suspended between Ellen's legs clipping her onto him. She hung below him so they were both straining to maintain the junction. \n\n\"I invited them to watch, for fuck sake.\" Ellen growled. That sounded just like her, maybe because it was her. \"Don't stop. I think that's sort of the point, don't you?\" \n\n\"Oh. Right. I guess I thought maybe you wanted to start over.\" \n\nEllen had to giggle. She giggled. It slipped out of her like a puff of smoke. \n\n\"Jesus, do you know how much you are like your son?\" \n\nSam lifted his ass and slammed her down into the cushion of the bed. She moaned with the impact. \n\n\"I think you have the backwards, don't you?\" \n\n\"You mean, ugh, that you aren't like him?\" Ellen asked and then chortled around another moan, making an indescribable sound out of the two.\n\n\"No, bitch, I mean he is like me, not me like him. I came first, so to speak.\" Sam said through gritted teeth. \"Christ you feel good.\"\n\n\"It's Ellen. Christ is someone else altogether. And anyway, I met him first, so actually he came first, as far as I'm concerned. God, you are like him. Always distracting me with some off the wall shit that is so funny I can't ignore it. Fuck, have you ever tried to come and giggle at the same time?\"\n\n\"No.\"\n\n\"It takes talent.\" Then she did, giggle and come at the same time, the braggart. \n\nI looked around at the Travers women who stood beside me, one to each side. Sam sped up, his ass rising and falling. Ellen writhed under him, around him, with him. They were fucking right in front of us. The room filled with the wet sound of their conjoined bodies. Something about the sight of his dark skin glinting with sweat and her white skin, pale as an old moon clinging to him while he rode her, unsettled me. \n\n\"It's beautiful.\" Miriam whispered. \n\n\"I know. Right?\" I muttered, the bitch read my mind. I was a little embarrassed. They seemed to move together, like a horse and rider...maybe not the best analogy, like an equestrian and his mount...is that better? Nope, not much. My internal censor sometimes gets persnickety. I know, they moved like a pas de deux, graceful and in sync, even when Ellen climaxed, that graceful motion persisted even as Sam fucked her. She'd lay back and then ecstasy would roll through her again and she curl up under him, her knees chafing along his sides, like a dirty Escher cartoon, all figure and ground without needing any caption, white and black blending but not into gray, into a thrusting, moaning whole that harmonized and groaned, figure and ground vying for attention. I think they'd forgotten us, though, so their little dance was artless.\n\nImogen felt the ignorance and moved around to the other side of the bed to stand next to their heads, looking down at Ellen clinging to Sam's black shoulders, pulling him into a kiss, even while he hammered down into her. Miriam moved to take the other prime position on the right side of the bed which left me staring at Sam's ass grinding down between Ellen's spread white legs. I needed a better alternative and I had one, I just hadn't realized it yet. When I did, it made me happy. \n\nI moved over behind Miriam. \n\nSomehow, Ellen sensed me moving even as she hadn't sensed the Travers women moving closer, or perhaps she just ignored them, at any rate, she moved her head to the side to peer out from under Sam, her eyes fixing on us. I put my hands on Miriam's waist and pulled her against my hard cock. She wore a simple black dress that, I could see, zipped up the back. It ended at mid-thigh, exposing her fine legs, showing she wore no hose or stockings. Her legs were bare. \n\nMy hands moved down to Miriam's hips. She bent forward slightly and pressed her ass against me, shifting it back and forth against the hard arch of my cock. \n\nI moaned softly. God, the plush feel of her firm ass felt so good I wanted to throw her on the floor and fuck her fast and hard. Later. I moved my hands up to her breasts, clutching them, covering each with one hand. Miriam sighed. Her mother, across the bed from us, hissed. I looked up, she was glaring at me. I didn't understand and at that moment, really didn't care what was causing her leak. \n\nI massaged Miriam's breasts. She sagged against me, letting me handle her as I wished and I wished to handle her a lot. I mashed her breasts for a while. Sam fucked Ellen and between each clinching orgasm, Ellen watched me handling Miriam. \n\nI let my hands release Miriam's tits. The woman sighed, clearly it was regret. No matter. I moved my hands down her tummy and onto the plain of her abdomen and lower, onto the flex of her thighs. When I found the hem of her skirt, I lifted it up, exposing her crotch. Ellen shook away Sam's attempt to kiss her. Sam turned his head and found us with his eyes, slitted with effort. His head was about even with Miriam's crotch. His ass coasted to a stop. If you want a man's attention, flash your pussy at him...works every time, that is, if he likes pussy at all. \n\n\"Oh good Christ, what are you two doing?\" He mumbled.\n\n\"Nothing. Just watching.\" I returned equally mumbling. \n\nHe didn't acknowledge my response. He lay down on Ellen, planting his head beside her, so she could watch me, us, me, whatever. He moved his ebony hands down to her ass, under them, and began to grind into her. Ellen lurched under him, groaning as if a new wave of pleasure rolled through her. I had no reason to think she was acting. \n\nI felt up Miriam's thigh and found panties, simple, cotton panties that clasped her pussy tight inside them. I probed and found the waist band of her panties and pulled them down. They were granny panties, practical and as sexy as a rocking chair. I pushed them down her legs. I felt Miriam tremble, a brief spasm that rattled through her body. My finger touched her pussy. She was oozing wet.\n\nI felt around and found her entrance. I pushed a finger into her. She moaned, her body shaking as I entered her. Her ass hitched up, pressing against my hard cock. I withdrew my finger and let the skirt drop. Miriam moaned. Ellen groaned. Imogen hissed. It was a fucking orchestra, well, a three piece band. \n\nI moved my hands back to Miriam's waist and held her still while I peeled my body away from hers. Shit, I wanted to mount her on my cock like an Easter bonnet. I'd decided something else was in order. I released her and she swayed without the steadying influence of my clever hands. She went still when I fingered the zipper on her dress. She moaned as I drew it slowly down, down, down her back to the nice gentle swell of her ass that her tight lower back made appear so luscious and fine. \n\nMiriam didn't move a muscle but she was having trouble breathing. I pulled the dress apart, exposing her bare back and the thin band of the timid bra strap across the middle of her back. I moved down and unhooked her bra. She shivered a little feeling the release of her tits. I smoothed the dress off her shoulders. \n\nSam continued fucking Ellen and Ellen rattled through a longer, more complex orgasm with various grunts and hissing that conveyed the depth of penetration into her of the pleasure she was experiencing. I looked for her and found her eyes fixed on me, her hands clung to Sam's square black shoulders. She gestured with her chin at me, that motion that means keep going, so I kept going. \n\nI pushed the dress off Miriam's shoulders and down her arms. It was lacy black with taffeta holding it together. Her pale body shown through it as though lit from inside. She held still, wheezing while I reached around her and pulled the sleeves off each hand. I then released it and let it drift down her bare legs. She bent her forearms up to hold the bra, covering her breasts. Ellen's eyes were intense, tight with excitement or perhaps the anticipation of another orgasm that was approaching her body. ",
        "I reached around Miriam and grasped her by the wrists. I straightened her arms and the bra toppled down them. I let go of her and the bra whispered down her cool skin and off and out of sight. My hands itched, desiring to feel the skin of her body, of her breasts. I cupped her breasts and she gasped, her hands rose to cover the back of my hands, holding me against her body. She groaned softly. I withdrew my hands and skimmed the panties down her legs, bending behind her to remove them off her feet. \n\nMiriam was nude. \n\nShe shook like an elm in a hail storm. \n\nI looked past her at Imogen and saw something phenomenal in her eyes. Lust. Naked, unmitigated, unmistakable lust and the bitch wasn't looking at me, she was looking at naked Miriam. I shrugged. I am not greedy, I'd be happy to share. However, I am not above teasing and titillating from time to time. Titillate. That word is an onomatopoeia. Well, close anyway, real close. \n\nI turned Miriam. She was in a sexual trance. Her eyes were half open, half closed. She moved like smoke on a windless day and just as light. With the lightest of nudges she whispered against me and I kissed her. Her mouth was open at the start, her tongue probed past my teeth and l met it and returned the embassy of lust. She groaned. I groaned. She was naked in my arms, climbing against me, I was still clothed. I ran my hands down her back to the bulbs of her ass, clutching them and then sliding back up her fine textured skin to her shoulders. She wanted more but I pushed her gently back, till her knees were against the bed. \n\nSam was fucking Ellen still but making sounds like his tour of delight was nearly done. Ellen watched us with hooded eyes, closing them from time to time as a new spasm wrestled around inside her. By now, she was merely holding on, not really moving at all but letting Sam chase himself around inside her. \n\nCasually, I undressed. Naked, I used my hands to turn Miriam around and bent her over the copulating couple. Sam began to come. He ground down between Ellen's legs and groaned, galloping into a full shimmy, as he pumped her full of cum. Ellen's hips bobbed under him as though her pussy was swallowing each gob of cum as he passed it into her. Her legs clutched at him, pulling them together while he groaned. The white of her legs on the black of his back, ass and legs pulled at my eyes, making their copulation something artistic, like a minimalist fuck except neither one were minimizing anything. If anything, they were baroque or art deco, all French flourishes and English excess, flowing together in a storm of erotic passion...but I'm getting rhapsodic when the moment was the prelude to getting down to business, that is, double-fucking Miriam. I hadn't exactly promised but I just love popping someone's fantasy cherry, first her and hers then Ellen would get to take a father and son into her body at the same time. Shit, that made me all misty and shit. I had this image of my long deceased father butt fucking my sisters while I got to watch from between their spasming legs. I bet they'd have fucked him before I got out of grammar school, the minxes. I shook my head. Pay attention for fuck sake!\n\nI positioned, Miriam over them and felt between her legs. She cooed, shifting to give me better access. She was so slick if I'd been running I surely would have slipped and fallen in. I pushed a finger into her and she sloshed, erupting around my finger. I felt her running over, coating my knuckle and the back of my hand. I repositioned myself and entered her, thrusting my cock through her goo and deep into her. She lurched before me and then leaned into me, taking me deep into her pussy. I held her by the hips and pulled her back against me. \n\nSam, on the bed, was coasting, moaning as he bobbed idly between Ellen's legs. He finally shifted and got to his elbows so Ellen could get a nice deep breath again, which sounded more like a bathtub emptying. He turned and found Miriam's body bent over them and tried to look around her to see what I was doing. I pulled free of Miriam. She keened with the loss. \n\nI stepped back and looked past the naked tableau before me at Imogen. She stared at me as though she had x-ray vision, although I'm not sure what she could have been looking for, I was pretty well on display as it was. Her face looked like she was about to speak but I moved and my motion silenced her, since it was towards her side of the bed. \n\nSam, meanwhile, rolled onto his back beside Ellen. She lay, one leg crooked to the side and the other out straight so they looked like the numeral four. She didn't move but watched me, looking occasionally at Miriam who had straightened and stood beside the bed, her naked body shimmering with her undisguised desire. Ellen reached up and took her hand. \n\n\"Do me.\" Ellen whispered. \n\n\"Oh god!\" That wasn't Miriam, it was Imogen. I arrived beside her but she put out a hand, placing her palm against my stomach as if holding me back, like I was about to frighten the fish or something. \n\nMiriam carefully got onto the bed, carefully levered herself between Ellen's legs and proceeded to lick and kiss the woman's pussy. Ellen closed her eyes and lay back, her body vibrating with this new sensation. Sam lay still beside them, a little confused about what to do. When he looked at me, I just patted the air as though to say stay put and don't make a sound. He got it and lay back, his cock at half mast. \n\nI moved behind Imogen. \n\nEllen's eyes opened, as though they were spotlights at a prison. They fixed on me and I knew it was pointless to run. Imogen wore a maxi wrap that tied at her waist but gaped in front, around her breasts and left her legs visible, glittering with the sheen of her stocking if she stood just right. The little cut away in front was very inviting and I'd noticed it before. Now, all I cared about was how to get it off. It had a simple tie, a line around her middle tied to a like one in the back that held it together. When I pulled that tie loose, the dress wafted open, like a curtain malfunctioning, dangling over her tits and then slipping free, showing her clearly. Ellen and Sam were both watching us now, though Ellen's face kept crinkling and occasionally her hips bobbed under Miriam, making the brunette's head bob between Ellen's legs. \n\nSam wasn't moving an inch. \n\nImogen didn't move either while I unwrapped her. She let me slip the dress off her shoulders. She wore a simple bra that came loose and her fine tits breathed a sigh, I swear I heard them whispering their thanks for my liberating efforts. She, however, wore a garter belt around her waist over a tiny little thong and attached to the dark blue stockings encasing her legs. Rather than untangle her further, I simply grasped the string on the thong around her waist and pulled. It gave me the finger and snickered. It wasn't meant to break easily.\n\n\"On the table, I have a pocket knife.\" Sam whispered.\n\nI was embarrassed but not enough to let it inhibit me. If found the little cigar cutter and opened it. The blade was sharp and sliced through the thong string without any effort at all. I pulled the thong from between Imogen's legs and put it with the knife on the table against the window curtains there. She didn't speak, she didn't move. \n\nI felt between her legs. Like daughter like mother. This time I did the daughter first but there was little difference. Imogen was gushing like her daughter. She bent over before I put my hands on her back, leaning over Sam, dangling her tits over his face. I couldn't see him but she went still, waiting for me to enter her, so I did. She accepted me like a small town welcomes a movie star. I slid deep into her, opening her up and sliding in deep until we were sealed together, her ass bunched between us, swelled up, full and soft against me. I gripped her by the waist and thrust into her several times. She groaned and then growled when I pulled out of her. \n\n\"Blow him.\" I whispered. \n\n\"Yeah, blow me.\" I heard Sam echo. \"Great fucking idea!\" \n\nI stepped away from her and she got on the bed, crouching between his legs, fingering his black cock. She bent down and it disappeared from my view with a wet sucking sound. Her head descended and Sam's eyes rolled up in his head. I don't know if he was acting or not. I decided I needed to be wearing something, naked as I was, I worried about catching my death. I moved to the end of the bed and dragged Imogen's legs off the end. \n\nShe understood, propping herself on her elbows between Sam's legs. Miriam lapped at Ellen's puddled pussy and Ellen studied me like an anthropologist at a frat party. I got Imogen's body positioned properly and I entered her. She was soupy but when I slid into her, she tightened, clamping down on me like I was looking for something she didn't want me to find. I groaned when she did. She had incredible control, her internal muscles seized on me and held onto me. I liked, no loved the attention. I grasped her by the hips and fucked her, ramming into her while she sucked on Sam's cock. \n\nImogen had skills because she never once inhaled when she was better off exhaling. I pounded against her, all wrapped up in the lure of orgasm, convinced it was time to fill Imogen with my cum. Wrong again. \n\n\"Sonny. Sonny. Sonny!\" Ellen's voice got my attention the third time, mostly because she screamed at me. \n\nI coasted to a stop, panting with my efforts. \n\n\"What? What is so bloody important that you stop a guy right as he is in the home stretch? Jesus fuck a duck!\" I was a little miffed. I admit it.\n\n\"Her. Do the daughter.\" \n\nMiriam's head came up. \n\n\"In the ass, I mean.\" Ellen whispered now but everyone heard. \n\n\"Oh fuck me.\" Sam muttered. \n\n\"We aren't ignoring you. You get the other side. Miriam wants to be the meat in a man sandwich, if you don't mind.\" \n\nI knew the answer to that query. Sam needed to know it and I knew Ellen was testing to see if he'd back out. I knew what she was after. Hell, so did Sam but plans are like desserts, they are usually just to make us feel good, not to nurture our health. The people who can follow their own plans and not blow shit up run the world. Not me, though, I was an itinerant motherfucker and you know, it seems there are mother's everywhere just waiting to be given a lick and a promise before they open their legs and dare you to hit their little bull's eye...or is it a cow's eye? I hate this gender shit, makes me crazy. \n\n\"I don't mind.\" Sam squeaked. He did, he squeaked like a poodle with a chew toy. \n\nI pulled out of Imogen. She lifted her face off Sam's cock.\n\n\"What about her?\" Sam asked. \n\nI didn't know which \"her\" he was referring to since I was busy helping Imogen stand up. \n\n\"We'll take care of everyone. For now, just lay there and let Miriam cowboy you.\" \n\nWe all moved, like the ballet that stage hands do during a play, moving everything just so to get where it needs to be at the right time and with a minimum of fuss but so no one notices and no attention is pulled away from the main event on center stage. \n\nI stood back and watched Miriam get astride Sam Honeywell and mount him, taking his cock into her pussy. She groaned as she slid down onto him. He groaned as his cock penetrated the young woman. Imogen had gotten off the bed and stood beside me. Ellen slipped off the bed and walked to the toy cabinet and opened it up. A moment later she tossed a tube at me. \n\n\"You need to replenish. We're getting low on supplies.\" She sneered at my lack of response. \n\nMiriam was mounted on Sam but had bent over and was kissing him. His dark hands grasped her by the waist, then moved down to cover her ass, helping her ride him. She began to moan as her body bobbed up and down on Sam's, taking his cock up inside her with each motion. \n\n\"God, they look hot. My turn later but now, she wants a little pressure from behind.\" Ellen spoke from my side. \"We'll get the pillows under him, hang tight till the runway is ready.\" Neither one of us moved. \"God, imagine pale, white little me between Sammy and his dad. It'll look like an Oreo, well, maybe one that just got run over by a steam roller.\" \n\nI snickered like a six grader seeing a bra strap. I was thinking of Mercy and Patricia on this runway. My mind whirled, realizing that I'd just been handed a new duo to fuck. I hadn't given Jamie and our trade much thought, not sure why but it might have had something to do with the Travers women. \n\nEllen patted me on the ass. \n\n\"Giddy up, little doggy.\" She said softly. \"Time to be the brown dirt cowboy!\" \n\nImogen gasped. \n\n\"My god, is that what that means? Is that what Elton John meant with that old album, Captain Fantastic and the Brown Dirt Cowboy?\"\n\nEllen just laughed. \n\nI lined up for my landing, my landing gear was down and locked in place. Sam's black legs were wide and Miriam's were wider. She was nearly doing the splits over him, her thighs flying out to the side. Ellen smacked me on the shoulder. \n\n\"Hey, knucklehead, forgetting something?\" She held up the tube of lube I'd laid on the night stand. \n\n\"Oh. Right.\" My mind wasn't right. That rattled me that I was lining up to do Miriam's ass dry. Fuck, I was getting tired or worn out or maybe just plain jaded? \n\nEllen got some lube on her hands and handed it to Imogen. \n\n\"I'll do him.\" Ellen said, her eyes serious and tight. \"You do her.\" She indicated Miriam.\n\nImogen looked liked she'd been offered a rabid cat to shave. She held the lube tube by the end staring at her daughter riding Sam with clear relish. Miriam's hips rocked and rolled over him, grinding her body down on him, her hands planted on his chest, his dark fingers spidering over the white of her ass, directing her. \n\nEllen drifted over to me where I stood at the end of the bed. She slathered lube on my cock. \n\n\"Come on, Mrs. Travers. Miriam is waiting for it.\" \n\nMiriam, clearly tuned into the conversation, leaned over Sam and arched her back, exposing her ass hole. Ellen and I stared at Imogen until she glanced our way and realized we were giving her the look. She uncapped the lube, looked down at it and then crawled carefully onto the bed. Miriam flinched when Imogen's finger touched her ass hole, a little dimpled eye winking at us. When Imogen pushed her finger past the security check, Miriam moaned.\n\n\"Oh my god, I can feel that in my throat.\" \n\nSam pulled her down into a kiss immediately to see if he could feel it too. Imogen leaned into probing the woman's ass, pushing her finger in deep and then withdrawing and adding more lube. Over and over until the woman squelched with her finger's passage in and out of her ass. Sam and Miriam broke the kiss so Miriam could groan and keen at once, a curious duet coming out of her. \n\n\"My gosh, you're right, you do feel it in your throat.\" Sam muttered. \"Wow. What will you feel like when his cock is inside you?\" \n\nMiriam moaned again her hips shimmying over him.\n\n\"Mrs. Travers, I think that's enough lube.\" Ellen muttered.\n\nImogen looked back at us and smiled bashfully. \n\n\"I, I've never done that before, put my finger in someone's ass.\" \n\nI giggled and Ellen poked me in the ribs with her elbow. I didn't know why but I had to admit I deserved it. \n\nImogen got off the bed. \n\n\"Your majesty, your ass is ready.\" Ellen gestured at Miriam's bobbing ass. \"I hope you can hit a moving target.\" She snickered and then laughed when Miriam's body stilled. Miriam moaned softly. \"She's waiting, sire, don't keep her waiting.\" \n\nEllen gave me a little shove. My knees were against the bed so I didn't have any room to be pushed except onto my face. Still, I absorbed the impetus and used it to get onto the bed again behind them. Miriam's body quivered like she was cold. When I put my hands on her back, Sam moved his hands to her shoulders and then one to the back of the head. They began to kiss, both making little sounds like they were tasting a strange new delicacy and had to let the cook know they approved. I moved my hands down to her ass and peeled her open. Her little winking eye gleamed with lube. She was stuffed full of black cock. \n\n\"Fuck her.\" Ellen, the delicate, said. \"Ram her in the ass.\" \n\n\"Okay, okay, don't rush me. I was just admiring the view.\" \n\n\"Jesus, Sonny are you turning into some sort of fucking artist?\" She laughed uproariously at that. I twisted to look at her and saw the aghast look on Imogen's face. I decided I'd better get to work, or whatever. \n\nThe sounds of Sam and Miriam kissing on the bed before me touched me, as though someone turned up the volume on my hearing. I shuffled forward and my cock head touched the back of her thigh. Her rump wiggled, like she was wagging some imaginary tail I couldn't see. I clamped down on her ass, holding it still because I had no hope of hitting a moving target. I knew that for certain.\n\nI used a hand to direct the end of my cock to her rear entrance. A great shudder passed through Miriam's body and thence to me, traveling through my cock like a radio signal on a wire. I pushed. \n\nMiriam cried out but her ass tilted backwards, capping my cock with her butthole. I pushed inside her. She clinched, then relaxed, clinched and relaxed, almost like her ass pulsed with the sensation of my cock penetrating her. I gripped her hips and pulled back on her body. She lifted and rolled back. My cock slid into her ass. It clamped down on me, slick and hot, tight as a midget's ear. I groaned. \n\n\"Fuck, he, he's in my ass!\" Miriam cried out. Her body jerked but didn't really move. I had her pierced and my hands held her ass. I pushed forward. She rocked with the pressure but then she opened up and half of my cock slipped into her before she tightened down on me again. I pulled back an inch and pressed forward. The penetration proceeded, a tight, slight fight to fill her ass with cock. Inch by inch my cock entered her. She groaned. Miriam was still but she continued to quiver, shaking, shivering and moaning. I had a moment of concern and hesitated just before she bowed her back, backing her ass a little way off my cock and then she arched her back and shoved herself onto me. I agreed with her impulse and pushed my cock deeper, shoving it deep into her body, smoothly and continually until her ass bunched up pleasantly between us. I was buried in her ass. \n\n\"Oh my god, I am so full of cock.\" Miriam whispered, her voice panting with passion. \"My god, I love that feeling. Two cocks, one in my ass, one in my twat! I have two cocks in me. I am being fucked by two men at the same time!\" \n\n\"Chatty little Cathy isn't she?\"\n\nI looked at Ellen, a little amazed that she had the gall to take note of Miriam's loquaciousness, given her own ability to carry on a running commentary regardless of the rest of us. I groaned. My body jerked and slammed down onto Miriam. She squeaked. \n\n\"You, you make Howard Cosell look like a mime.\" I muttered over my shoulder at Ellen. \n\nShe giggled in a way that didn't connect with what I said. I was just preparing to start pumping Miriam's ass when I felt the bed move. First, the back of my neck started to tickle and then it ran down my spine and ended up twinkling my balls. The bed shifted behind me and I felt it sag and then a pair of hands were gripping my ass. \n\nI breathed deep and exhaled, determined to be a sport, a little curious but a little apprehensive, to tell the truth. I felt a draft up my ass. Then I felt a finger probing me, the sharp end of a finger nail and then the slick gooeiness of lube. The finger pushed into me. I grunted, shivering, a shiver that ran down and into Miriam. She rose up, bending her back below the ribs, leaving her ass perfectly pointed at me. \n\n\"Oh god, Sonny, fuck me!\" She cried, her voice twisted tight. I decided to ignore the hands on my ass. I pulled back from Miriam's fine ass and then slapped us together. It sounded like a door slamming closed. She cried out, her body pinned between us. I rooted down into her, feeling her writhe around me, clinching and chewing as if testing the accommodation she made to hold me inside her. I felt Sam rising up under her, piercing her from beneath, ramming his cock up into her. She shook with it. The finger in my ass pushed further into me. Something popped. ",
        "My eyes clinched closed and the orgasm rose up in me like a fire flower, blooming and sparkling, filling me with light and fire and the euphoria of a sudden, unexpected climax. I surrendered, leaning over Miriam's back a little, feeling the quaking tension in her spine just before she screamed and came between us. Her hips bucked and bucked and bucked, thrashing between us like a bookmark seeking air in a dictionary. She couldn't really move, pinned as she was, one spike from below and the other from above, holding her in place. But she could shift and shimmy with enough motion that created the luscious friction that attentuated my orgasm, muting it but drawing it out like a bit of imagination caught on the tip of your tongue, taking you back to another place and time. \n\nI ground down into her and the finger behind me followed, grinding deep inside me. I exploded, all timidity of pleasure vanished. I growled and hammered Miriam down onto Sam's cock. I swear I felt him swelling inside her. She groaned. He groaned too, his body rising under her, putting all my weight on her back and in her ass. She sighed, she shifted, she cried again as another imprisoned climax escaped and rampaged through her. She shook and babbled, her body given over to the pleasure ravaging her. \n\n\"Jesus, she's enjoying that.\" Ellen muttered.\n\nI heard the envy.\n\n\"Shut up, Howard. You're fifteen minutes are coming.\" \n\n\"Oh shit, if I came for that long I think my heart would stop.\" \n\nI lifted off Miriam's back, strength and will returning, pirouetting as though nothing had happened inside me. The flush of ecstasy faded. I pulled my cock out of Miriam. The finger left my ass. I sat back onto my heels, feeling the lingering sensation of her penetration. I twisted to look at Imogen and sure enough, she held up her glistening finger before her, a slightly guilty look on her face. I stared hard at her until she got off the bed to go wash up. \n\nI was for the shower myself. We grazed each other at the door, slipping past each other like two subway trains. I felt the erotic whoosh of her nude body but wanted to rinse off before I boarded her again. \n\n\"Sonny?\" Her voice touched my back like a single finger. \n\nI turned to face her, my drooping cock ignored her and she it.\n\n\"What?\" I asked, feeling the absence of whatever I'd left inside Miriam.\n\n\"Thank you.\" She whispered. \n\n\"For what?\"\n\nShe shrugged, making her tits wobble. \n\n\"This could have been much worse, much more difficult. I...I'd almost be willing to do it again?\" Her voice made it a question, despite the sentence structure. \n\n\"Almost?\" I chided. I confess I felt slighted.\n\nShe nodded. \n\nI waited for more but there was nothing else to be said. Miriam rocked on the bed, cooing as she came for the eighth time. Ellen still stood behind them, watching them couple. Ellen glanced at me, her eyes hooded and dark. I swear I knew what she was thinking. I turned to the shower. \n\nI took a long shower, trying to determine if I knew what I was feeling. The water felt good, hot and steady. I think I expected company but when none arrived, I got out, toweled off and wrapped the towel around my waist. When I stepped into the bedroom, I could see why things weren't following me into the shower. Imogen was mounted on Sam's face, coming, and Ellen had Miriam on her back, eating her with a focused gusto. Miriam sensed my arrival and lifted her head to look over at me, her eyes glazed with pleasure. Her head dropped back to the bed. \n\nEllen lifted from between Miriam's thighs to look at me. \n\n\"Your phone rang.\" She panted, her body twitching. \n\nImogen groaned from astride the black man's face, twisting and shifting to get the most out of him. Sam's black hands gripped her ass, while his head bobbed between her crouching thighs. She grunted and tipped forward, her hands gripping the headboard. \"Oh god, Sam, eat me!\" She whispered, her voice raw. Her hips ground down onto his face. She lurched, responding to her own actions, bucking and crying out. \n\nMy cock got hard. The towel was too tight. \n\nI rummaged around and found my pants, pulled out my phone and wandered away from the mini orgy on the bed to the living room. I sat down and checked the recent calls. \n\n\"Fuck.\" I muttered. Sammy had called. His girlfriend would soon be sitting on his father's face. I had that moment of clarity that had been stalking me for several days, the clarity that I was engaged in putting Sam and Sammy together in Melissa and that I now had the sure leverage to put them both in Alissa. I shook my head, father, son and mother all locked up in a fucking embrace...not the first time, I realized. I wondered how Chris and Jeb were managing that house of pussy and if Annie was getting any attention? \n\nSammy didn't leave a message. I wondered where he was. I was about to call him but realized I just needed a little breather, a chance to let my cock settle back and sigh for a moment before going spelunking again in the wet caves of Lesbos. I decided it was time for Sam and Ellen to have some privacy, even if she didn't want any. I walked into the bedroom and tapped Imogen on the shoulder. \n\nShe looked at me like a hound does when it thinks you are after the bone between its jaws. \n\n\"Come on. You've had enough of that. Time for something else.\" She climbed off of him, reluctantly. \n\nI coaxed Ellen out from between Miriam's legs. Miriam regarded her with a mixture of idle lust and sated curiosity. \n\n\"Why don't you two take a shower. Sammy will be here pretty soon, I think.\" \n\nI found my robe and donned it. I took the Travers women by the elbows, one on each side of me and we walked through the apartment, me with a towel around my middle and the two nude women. They seemed sanguine, drifting along in my grip without any internal impetus. \n\n\"Take a shower. I'll be back in a moment, a few minutes. \n\nI'd closed the other bedroom door and I closed theirs behind them. Their clothes were in the other room, tossed away and abandoned. I walked over to the couch and sat down, feeling the week roll over me. \n\nI opened my phone and dialed Sammy. \n\n\"Sammy?\" I spoke when he answered. \"Where are you?\" \n\n\"Fuck, Sonny, I'm lost. I was sure I knew how to get there but, shit, let me pull over.\" \n\nAfter some more swearing and the rattle and bang of a phone in one's hand acting as a nuisance, his voice finally returned. I got his location and then directed him to the parking garage. I told him where to park and told him to call when he was there. I'd meet him at the door. \n\nIt was possible the doorman down below would know him and let him in but I thought it would make sense to go down and meet him and bring him up. I sat there, cogitating for a moment, several actually. I about had everyone in one place and I still wasn't sure how I was going to manage things. I decided to just explain to Sammy what was what and see what happened next. I am not much for trying to format reality. Either you get it or it gets you. I guess I believe getting it is better than it getting me. Usually. \n\nI snapped awake. I think I'd been sitting there just staring off into space. \n\n\"God, this pussy flood is trying to drown me.\" I was careful not to say anything pejorative about that state of affairs. My phone rang.\n\nI answered. \n\n\"Sonny? It's Quilla.\" \n\n\"Quilla, how are you?\"\n\n\"You knew he'd be weirded out about fucking me, didn't you?\" She whispered. \"He found out mom was gone and I nearly had to bonk him on the head and drag him up to my bed. He did fuck me, you know but with more moaning and carrying on than I ever heard from one man. God, you'd think he was fucking the virgin Mary on Christmas Eve while God was still out buying condoms from the devil.\" She snorted. \n\n\"Quilla, how nice for you. What are you calling me for?\"\n\n\"To tell you he wants more of me.\" \n\n\"How much more?\" \n\n\"I don't know. God, Sean came home with Annie and she screamed her fool head off. Seth couldn't take it and left but he's called me four times today wanting to know if Mom was home. Finally, I lied and he said he'd be right over. I think he suspects I was fucking with him just to get him over here but I also think he wanted me to, he wants me to drag him to bed again.\" \n\n\"Where's Sean?\" \n\n\"I don't know.\" \n\n\"Why did you call again?\"\n\n\"To see if you cared if I fucked him again. He's kinda fun, in a antiquarian sort of way. He's...he's...quaint.\" \n\n\"Never call a man antiquarian when he's naked.\"\n\n\"Oh, is that a thing?\"\n\n\"Only if you're naked and I suppose it'd be for Seth Morrison in any case. Have a good time and don't break him. Your mother might want him in full working order. Is she out of town?\" \n\n\"Yes. I'll be careful. If I break him, I'll keep the pieces. Mother can put him back together.\" \n\nShe hung up. \n\nI staggered to my feet and went to the door behind which I'd stored the Travers women. I opened it and found them sitting on the bed, one on each side, both wearing the light green robes that apparently came with the apartment. They regarded me, giving no indication they'd had any discussion at all behind the closed door. \n\nMiriam lay on my left, her arms over her head, the robe parted down the center of her torso. Imogen lay her arms folded across her belly, her wrists crossed, hands on each bare thigh. Both had the look. I wanted them both. \n\n\"Walk.\" I muttered. \"No need to run.\" I dropped my robe and the towel around my waist. \n\n\"Mrs. Travers, you told me what you wanted.\" I said softly.\n\nShe nodded.\n\n\"What was it?\" She didn't hesitate to answer me.\n\n\"I wanted a man, front and back. And I got that.\"\n\n\"So did your daughter.\" I pointed out to no purpose really, just commentary. I turned my eyes from her to Miriam. \"Miriam, what did you tell me you wanted?\" Ah, my purpose became clear. Her eyes widened. \n\n\"Sonny, please...?\" She whispered. \n\nI waited. When I didn't speak, Miriam glance sideways at her mother and then licked her lips. \n\n\"Sonny, we lied.\" Miriam whispered finally, her eyes squinting through her own chagrin. \n\n\"Which time?\" I asked, noting I wasn't even very curious. I did her the courtesy of acting like I was though. \"About what?\" \n\n\"I am her daughter. Truly. We, we thought you were a little freaked out about seeing a mother have sex with her daughter so, well, we made up the story.\" \n\nI regarded her, butt full of skepticism. \n\n\"Uh huh. So? What does that mean? You are having sex with your father? Or you don't want to have Imogen go down on you?\" The shock on her face appeared plainly, unmistakably. \n\n\"I....\" \n\nI considered what Hassum had said, in his inimitable way. In life, you occasionally arrive at a fork in the road and you have no idea which to take but know only you can take one, do one thing and then the probability wave collapses and Schroedinger's cat appears. At that moment, I considered telling them what Hassum had said, getting that on the table for them to deny or affirm but then I didn't. No reason, I just didn't, the feint that turned out to be the right move. I felt the writhing of the curiosity in me but I was distracted by Sammy's pending arrival and believe it or not, these two and their silly charades were suddenly secondary to what was coming for my buddy Sammy. I could not imagine the sensation of having Mom pinned between me and my father because I had no father, hadn't since I was a child. He was a distant memory and one that had no potential to appear fucking Mom with me in the room, even though I'd fucked her myself by now. \n\nI guess the idea that Sammy was about to have both mother and Aunt with his father added to the likelihood that Chris was sharing Laura with Jeb or had by now, it all bunched up behind my chest and made me bull up, filled with a distracting sensation. Miriam spoke into my silence and dispelled the emotions that I hadn't really named or given words to, the longing to have had a father...despite the perverse implications of that at the moment. In the company of such pussy and its replete satisfaction, I felt lonely. I shook my head, trying to unweb my mind from that sordid infatuation. Of course I couldn't because Alissa was going to be fucked by husband and son and I'd measure her willingness to let me push her to the limits of her endurance. Had I truly changed her? Was she going to accept Sam between her thighs again while she sucked her son? \n\n\"Sonny?\" Miriam whispered. I think she sensed we were not alone in the room and that didn't refer to Imogen. \n\n\"What?\" I muttered, the distraction clinging to me, whichever one you take in that way.\n\n\"I do want her.\" Miriam whispered, then looked over at Imogen. \"I want her to go down on me. I want her to show me she's a lesbian.\" \n\nI still didn't know who was fucking whom but I just didn't care. I had an image of Sammy in Ellen while she rode Sam and the distraction became all Christmasy and shit. I wanted to give the woman what she wanted. I had the thought that I was fucking up where Sid was concerned. I shrugged mentally then. If this was a test, I supposed I'd screwed the pooch by now. If Hassum was waiting for a call from Travers complaining about the treatment of his women, it wasn't going to happen. \n\nMy eyes cleared and I looked over at Imogen. \n\n\"You heard her. You got what you wanted. Now its her turn.\" \n\nImogen quit fiddling with the hem of the robe on her thigh and looked up at me. \n\n\"She got what I wanted too.\" She said.\n\nI couldn't think she actually comprehended her objection so I decided I'd help her out. \n\n\"One thing at a time.\" I gestured at Miriam's crotch. \"I think she deserves a little of your expertise.\" I almost made it a question, as I am wont to do but this time it just didn't seem right. \"Eat her.\" I said, my voice rasping like my tonsils had a heartbeat. \n\nWhen Imogen sat up and untied the sash of her robe, Miriam quickly loosened and stripped hers off and tossed it onto the floor. She lay back, opening her legs. Imogen did the same, becoming nude in a moment. She gazed at me.\n\n\"She is my daughter.\" She whispered. \"Are you saying I must...eat her?\" \n\nI nodded. \n\n\"She's full of cum. Are you telling me now that you don't care for the taste of man cum?\" \n\nShe flicked a little smile at me but then moved around, crawling between her daughter's open legs. She positioned herself over Miriam's bubbling pussy. Miriam's ass pulsed on the bed, rising and falling like a bobble head on a bumpy road, or a bobble pussy? Imogen leaned between the younger woman's legs and licked up the pussy before her face. Miriam groaned. Imogen looked around at me, her hands clutching Miriam's body. \n\n\"You could help, you know.\" She whispered roughly. As if to explain herself, she widened her own legs. She didn't wait to see if I got the hint but returned her tongue to Miriam's pussy. Miriam groaned, jerking into an immediate orgasm while Imogen plunged her tongue deep into her. \n\n\"Oh, oh, oh fucking dog!\" She growled. \n\nI almost chuckled. I'd only used that expression once I thought, and she'd picked it right up. I did get Imogen's hint. She lay with her ankles on the edge of the bed, her smooth, perfect thighs parted, y'd behind her like a formal invitation. I crawled up between her legs and lay over her back. I reached down between us and probed for her pussy. Finding it, I positioned my cock at her entrance and pushed into her. She lifted her head and groaned her full satisfaction. \n\nMiriam opened her eyes, gazing down her body at us, her mother's face between her legs and me mounted on her back like a mounteback fresh out of fraud and so having to resort to a hot meat injection to cure what ailed her. \n\n\"Fuck her.\" Miriam whispered. \"I knew she was no lesbian.\" To ensure Imogen didn't add to the discussion, she put a hand on the back of the woman's head and held it in place at the entrance to her body. In moments, Miriam jerked once and a new spasm of pleasure flashed through her. \n\nI did my best. I ground at her from behind, getting maybe half of my cock into her. Imogen's full ass bunched between us and kept me from riding full in her. She didn't seem to mind. In fact, it wasn't clear she even noticed. Her dining pose had turned suddenly serious, her head bobbed and she hummed while she worked, since whistling was out of the question. Her head bobbed and worked, while one hand rubbed at Miriam's clit. Miriam dissolved into a cataract of coming over and over, her body jerking like she was being fucked in the ass by a strong midget. She balanced on her elbows, allowing her body to convulse freely as her climaxes possessed her. \n\nSuddenly I remembered Sammy. Shit, I mentally went in search of my phone and found it out by the couch. Shit. I thought. I pulled out of Imogen's pussy. She groaned as I left her but didn't pause at her daughter's pussy. This was her chance to earn points towards retirement. Miriam gave no indication she noticed me get off the bed. She lay back her back arched, standing on her shoulders, her hand knotted in her black hair while her body jerked and shook with each new orgasm. \n\nI tiptoed out of the room and closed the door. \n\nWhen I checked my phone, Sammy had called three times. He left a message the last time. \n\n\"Jesus fuck the Easter bunny, Sonny, where the hell are you. Oh, well, don't answer that. Shit, I guess I'd likely ignore me too if Ellen was there butt dancing on my cock. Oh, wait, no I wouldn't! Fucking answer your phone!\" Before the recording clicked off, my phone rang again. I answered it.\n\n\"Sammy?\" \n\n\"No. This is Moses, I have a ten point list of shit you shouldn't do but I didn't think I needed to include don't fuck your sisters!\" Sammy horse laughed. \"Jesus, where are you?\"\n\n\"You'd have to ask him. Where the hell are you?\"\n\n\"I'm downstairs. The doorman let me in, out of the cold. He said he'd call you in a minute if you didn't call.\"\n\n\"I'll be right down.\" I had to go back into the room to get my robe. Imogen was still eating Miriam and they neither one seemed to notice I was gone. I patted myself to see if I was real. I didn't pinch myself, that always seemed extreme to me. \n\nI left them and with a pair of slippers walked down to the elevator. I felt like Hefner, but I had no cigar and no shapely women on my arm. They were busy. \n\nThe elevator opened and I strode out into the chill of the building's foyer. Sammy was sitting in one of the chairs, fiddling with his phone. He saw me and his eyes got wide. I glanced over at the doorman. He watched me with a lascivious grin. I ought to have one of the women blow him sometime. No sense in being greedy. \n\n\"Sonny! Dude, where...what the hell? Too busy to bother to dress?\" \n\nI just gestured at him to come along. He walked towards me, slow-boating it. \n\n\"Hurry it up, asshole. It's cold down here.\" \n\nHe trotted the rest of the way and we got on the elevator. \n\n\"How's your week been?\" He asked.\n\nI looked over at him, wondering if he was asking or probing. \n\n\"Good.\" I muttered and he left it there. We rode the elevator up in silence. \n\nHe followed me down the hall to the door. I halted there, realizing that things might have shifted since I left and I might open the door on the surprising aspects of what was inside, namely Sam Honeywell. It might be just like Ellen to have him riding her draped over the couch when we walked in. \n\n\"What?\" Sammy asked. \"You nervous about me and Ellen? Don't be. We're, we're cool.\" \n\n\"Dude, this may look like a door but its really a looking glass. I know you think you know what's going on but, well, you don't, not entirely. If I open this door and you feel your eyes pop out, just pop them back into place and give me time to explain.\"\n\n\"Jesus, Sonny, your weirding me out. You have men in there or something?\"\n\nI rolled my eyes. \n\n\"Why do people always think the worse thing is having men fucking each other? What if it was a Shetland pony fucking Ellen?\" ",
        "\"Better than a jackass.\" Sammy said straight faced. \"Hey, I don't mind men fucking men, more pussy for me!\" Sammy chortled. \n\nI confess his rejoinder soothed me somewhat. The enormity of what was before me, us had finally impacted me. \n\n\"Come in but just hold your water until I have a chance to explain.\" My hesitations were for naught. The living room was empty and both bedroom doors were closed. I fixed us both a scotch and we sat down. Sammy is no dummy, he sensed something was up. \n\n\"Do you remember when we fucked your Mom and Aunt?\" I asked, inanely I realize in retrospect.\n\n\"Only as clear as any moment in my life. It got an Oscar in my life movie review.\" \n\n\"What did you remember about what we said to Melissa? About what she wanted when she came back?\" \n\nSammy looked at me oddly, his face screwing up like he bit into an olive with the pit still in it. He shrugged a little.\n\n\"We said a lot of things.\" He muttered. \n\n\"Your Aunt Melissa wants to have sex with you and your father.\" \n\nSammy's eyes widened. \n\n\"Shit, is that why she's coming here?\" \n\n\"Partly. There's the other thing. Do you remember that?\" \n\nSammy shook his head. \n\n\"I don't think that much about Mom, Sonny, since you have her signed, sealed and defeathered.\" \n\n\"What? Defeathered?\"\n\nHe shrugged. \n\n\"I panicked.\" He sipped the scotch and then downed it all. He extended the glass to me and I felt the role of the waiter but since I'd fucked his mother and handed her around like a bong at a hippy wedding, I didn't take any umbrage. I got him a refill. I hoped he'd had lunch or he'd fit nicely into a sandwich bag in about ten minutes. \n\nI handed him his drink and sat down. I sipped mine, then downed it and had to go get my own refill. Poor planning. I blame the Scotch. When I was sitting again, I regarded him, searching for the right words to start down this particular primrose path.\n\n\"Sammy, your father is in the bedroom fucking Ellen.\" I said finally, opting for direct. \n\n\"You're shitting me.\" He said, his face suddenly draw and tense. \"She fucking...he's...in there...!\" \n\nI couldn't read his tone of voice or his expression. The happy-go-lucky pose he greeted the world with was gone. He shook his head, not looking at me. \n\n\"She wants what Melissa wants.\" I said. \"She wants to be fucked by a father and son.\" I grunted. \"She calls it the Oreo fuck.\" I said, trying to lighten the moment. \n\n\"And Melissa is, shit, she is coming her hoping to get Dad and I in her together?\" Sammy clinched his eyes closed and then opened one, carefully set down his drink. He closed the eye again and then rubbed them both with the knuckles of his hands. \"Jesus, Sonny, you do know how to rattle a guy.\" \n\n\"I'm not done.\" I breathed but I don't think he heard or cared.\n\n\"My god, Mom will blow a gasket.\" \n\n\"And the gasket won't appreciate it nearly as much as I do.\" I said, still trying to lighten the moment.\n\nSammy lowered his fists and stared past them at me. He did not even blink. \n\n\"You mean Aunt Melissa is coming here to have sex with me and Dad together? Does Mom know?\" \n\nI shook my head and then nodded. \n\n\"Jesus, Sonny, which is it? This is kind of important.\" \n\n\"I know. Sammy, I'm sorry I don't mean to make light of this. I got myself into a bit of an ass crack and I am working to get out of it. I think I made a promise or two to your family without really thinking through the implications...but....\" I didn't get any further.\n\n\"Holy shit, do you think? Just how do you purpose to get my father to...oh, Jesus's fucking froglegs! You said he was here? In there? Fucking Ellen? What the fuck are you thinking, Sonny? You mother....\" He stopped, his mouth open, his eyes wide and his nostrils flared. His mouth clamped closed. \"No. I know what you were thinking. It'd be cool for Sammy and his Dad to fuck Melissa and you threw in Ellen as a bonus. Jesus Christ in tennis shoes and nothing else!\" \n\nI patted the air between us. \n\n\"Sammy, listen, listen, I think I have the bases covered.\" \n\n\"Oh you do, do you?\" \n\nI could see he was skating on some really thin ice. \n\n\"Hey, listen, you know Chris is sharing Laura with his Dad, let's call him and see how that's working out.\"\n\n\"Oh sure, like...oh sure, do that, Sonny.\" \n\nI was happy for the distraction. I knew he was being sarcastic but ignored it, his sarcasm and my knowledge of it. I picked up my phone from the end table and called Chris. He answered after a dozen rights.\n\n\"Thank you, Marie. Hello?\" \n\nI knew it was a gamble but I put it on speaker phone. That Marie was still there gave me some confidence. \n\n\"Chris? It's Sonny. Dude, I was just calling to see how things were working out.\"\n\n\"You mean with me and Mom?\" \n\n\"And Jeb.\" I added to be certain we understood each other.\n\n\"Oh, he's gone. He got a call and had to go.\" Chris went silent. \n\nI was thumbing through my note cards looking for something to say next but Chris rescued me. \n\n\"Sonny, did you, did you know about him? I mean, that he's like Mom? I mean before you brought him over?\" \n\nThis was another one of those Y-s in the road. What to tell and what to keep to myself. I decided to stick to my own business and not volunteer all that I knew. \n\n\"Yes. I thought that Marie would fit in just fine with them and give you a little something extra.\" \n\n\"What does Tawny think about all this?\" \n\nI shrugged, glanced at Sammy who was watching me like an umpire in the ninth inning of a tie game and I was home base. \n\n\"I don't think she's had much time to give it a lot of thought.\"\n\n\"You're fucking her now, then?\" \n\n\"Tawny fucks who she wants.\" I said, my voice dropping a little. \"You know that by now. But yes, I fucked her the other night for her pleasure...and mine.\" \n\n\"Big of you.\" \n\n\"You said Jeb is gone?\" \n\n\"Yes, Sonny, we both did Mom while Marie watched us. Then we did Marie and then Annie.\" Chris stated the situation almost without inflection, without any of his thespian chops. \n\n\"Nice of you do include Annie.\" \n\n\"I want to share him with Tawny. I mean, share Tawny with him.\" \n\nI couldn't help it. I chuckled. \n\n\"More the first then the second. I bet she never considered...I don't know if I even told her Jeb was back.\" \n\n\"He's gone now, so don't go lining anything up.\" \n\n\"How is your father taking this?\"\n\n\"You mean how is he reacting to having Mom fucking me whenever I like? He...god Sonny, I think he is wild about it. But with just Marie and Mom here, when he catches us...\" here Chris grunted a chuckled. \"I keep thinking of it like that, as though he is catching us. At first, it made me nervous. Mom, god, she came like a house afire when he'd walk in on us when I was taking her but then I realized that he was running to Marie and asking permission and she was giving it. I corrected that straight away.\" He laughed then and it was the latter day Chris. \n\n\"I told her she should come ask my permission before letting anyone catch us fucking or anything. Now, Dad asks Marie and Marie taps on the door and comes to ask if he can come watch. The last time he was gagged and bound, his knees tied together and his arms behind him. He walked like...like...I don't know what, like he was tied up. He leaned against the wall and Marie came in and asked if she could blow him while I fucked Mom. I told her no, got Mom up and had her blow him while I did her from the other end. Dad watched me like I was a stranger fucking his wife and he was tied up. He came though. Fast. Then I had Marie go down on Mom....\"\n\n\"I don't need a full play by play.\" Like hell I didn't. What was going on in the Wills house was fascinating. I wanted to hear more but that wasn't the present point. \n\n\"So Jeb is okay with it all?\" \n\n\"Why do you ask? Has he said something to you?\" \n\n\"No. No, but I did sort of set that all up.\" \n\n\"You worried about what we're doing? A little late, don't you think?\" \n\n\"Chris, Jesus, I am thinking of getting Mr. Honeywell to fuck Alissa with Sammy and I was looking for some feedback. Am I crazy or not?\" When in doubt, tell the truth. \n\nChris didn't respond for a moment. When he did, he wasn't talking to me.\n\n\"Marie, please suck on my cock will you. Mom, come over here. That's right.\" There was a sharp slap and Laura's squeal. \"Don't ever do that again.\" Chris growled. \n\n\"Sonny, listen, I have to go but as to your question...Dad has been fucking Mom whenever Marie tells him to do so but she has been keeping him for herself most of the time. She makes Mom go down on her when she's full of Dad's cum. She really likes that and Mom gets just crazy. I've fucked her a dozen times in the last few days while she was eating Marie. She comes like its more important than breathing. Then I fuck Marie and she comes. Then they both suck off Dad until he can't get a woody at all and then I fuck them while he watches, spent. What does that sound like to you?\" \n\n\"Perfectly fucked up.\" \n\n\"Only if you think he doesn't love it. Sonny, fucking my mother with my father is the best thing that ever happened to us. God, in a few weeks we're going to do my aunts, without the Uncles. I am working to get Mom and Marie triple fucked at the same time so, I thought I'd give my Uncles a shot at the two of them. That is your doing, sharing. I never thought I'd think of it but by god, it is more blessed to share than hog it all for yourself. Shit, that's Annie and Sean. I gotta go.\" \n\nHe hung up. \n\nSammy stared at my phone like he couldn't believe that little thing could say such things and not explode. He finally looked up at me, waiting.\n\n\"Sammy, listen, I have it worked out so you and Sam can fuck Melissa tomorrow but she's got an appointment at five. So its all play and no work, so you'll have to be dull.\" \n\nSammy grunted. He finally looked at me directly.\n\n\"What the fuck are you talking about, Sonny?\" \n\n\"I thought maybe you should demonstrate on Ellen. She's really jazzed up at the prospect of having a father and son in her at the same time. Your Dad is used to sharing her by now.\" \n\n\"You both did her?\" Sammy's voice lashed out at me. There was hurt in his eyes.\n\nI nodded. What else could I do?\n\n\"I wanted Sam to get used to that idea. He...he has an apartment just down the hall. You remember Suzanne Northcutt? She's been doing your father. That was how I met her the first time around.\" \n\n\"Jesus, Sonny.\"\n\n\"Jesus yourself.\"\n\n\"That's not a verb.\" He growled. \"What's your point?\" Then it sank in. \"He has an apartment here? You mean this is where he...where he spends his time?\" \n\n\"Fucking his other women?\" I finished for him. Sammy nodded.\n\n\"I have your mother lined up to fuck a guy tomorrow night with Melissa. I wanted them to have the chance to share someone on their own. When they are done, then I thought it'd be okay for them to share Sam and then the four of you could...you know.\"\n\n\"Fuck?\"\n\n\"Right. Fuck. Listen, Sammy, Melissa demanded it and Sam was, a, susceptible to the idea of having Melissa. I didn't know that you and your mother would actually get added in until...well, I got flummastered and had to add it in. I could tell you it was Ellen's idea and you'd probably believe me and she'd be proud to get the credit but really it was mine. It, your mother gets off on having sex with me while others are watching. She looks them right in the eyes and tells them she's mine. I thought it would be interesting to have her fuck Sam while I watched, then while you watched and, and then she'd have to watch Sam while he fucked Melissa and he'd have to watch while you fucked your mother.\"\n\n\"Mix and match.\" Sammy said dourly. \"Jesus, how did this happen?\" He spoke so bleakly I nearly couldn't breathe. \n\n\"Look, Sammy, there is nothing here that can't be undone, well except for Ellen. I think you do have to fuck her with your Dad...the rest, I can unravel if you...\" \n\nHe shook his head.\n\n\"It's not that, not really. Shit, we all fucked Mom and Melissa and we've all contributed to the pussy kitty....\"\n\n\"Hey, isn't that redundant?\" That stopped him. He gave me a fierce stare then smiled a little.\n\n\"Fuck off, Sonny.\" He muttered. \"I mean, we all have someone close to us that we've all fucked. Shit, your sisters and my aunt...Chris' aunts and, and Landon will let Darlene free...eventually. We'll all have someone. The MILF list extends way beyond what I thought it would be...but I never thought my mom and dad would end up part of it. I mean, together. I don't know how I feel about that, not really. I mean I've sort of gotten accustomed to the idea that they are getting a divorce. Now you tell me they are on the books to fuck each other while Aunt Melissa watches?\" He shook his head. \"My brains are omelets. I'm a cheesehead.\" He looked at me, his eyes glittered darkly. \"Jesus, Sonny, you need to give a guy some warning.\"\n\nI shrugged.\n\n\"That's why I thought of Ellen. I thought sharing her with Sam might be better than starting with Aunt Melissa, for both of you, but, if you like I have a mother and daughter in the other room who would be happy to have a man in each hole again. They can suck me and that'd add them to our list of triple plays.\"\n\n\"You mean the airtight express, right?\" \n\nI nodded. \n\nHe finally smiled, a bleak smile like a guy with a limp dick gives a woman who says its okay so long as he takes her to breakfast, sex and food makes a woman's clock tick. Both is best, one is better than none. \n\n\"That or whatever. Ellen really has it in for you two though. Since you do her up so fine, it makes a little sense that your Dad might have a similar chemistry with her.\"\n\n\"I think she likes the idea of fucking anyone that would make me fit her better.\" Sammy shook his head again for the umpteenth time. Then he looked at me, his face was utterly deadpan, I say deadpan because of what he said next but it seemed serious as nuts in a vise at the time and it made my stomach hurt. Then he spoke and I felt better.\n\n\"Sonny, really, does my Dad have a bigger dick than mine?\" \n\nI stared at him. Was that the classic Oedipal question? I shook my head.\n\n\"Jesus, Sammy, what a fucking question.\" I stared at him. Finally he broke into a huge grin, and then laughed uproariously.\n\n\"Ho, ho, ho, Sonny, you should have seen your face! God, what a look! You looked like you just slipped on your underwear that I'd smeared full of peanut butter. Holy shit you looked uncomfortable.\" He couldn't stop laughing. \n\nI just sat and stared at him. \n\n\"Does this mean...?\" I wasn't sure how to end that particular sentence. \"What does this mean?\"\n\nSammy braked his guffaws to a halt and panting, looked at me, wiping tears from his eyes. \n\n\"Dude, listen, you are asking me if I want to fuck my mother? My aunt? And my girlfriend? What sort of question is that?\" \n\n\"No, I'm asking if you'll share them with your father?\" \n\nThat did sober him up a little. \n\n\"Share my mom with my old man?\" Sammy looked left then right, up then down. \"Jesus, Sonny, I have no idea how to think about that, so fuck yes. I mean, how many people can say they have fucked their mom while she sucked off their father? I mean really! Isn't that a little like discovering the Amazon or the source of the Nile or that Pluto isn't a planet?\" \n\nI groaned with relief. \n\n\"Well, maybe, except the thing about Pluto, that doesn't make any fucking sense.\"\n\n\"I know, right. Of course it's a planet. Who wants to go tell the god of Hades that he doesn't measure up? Shit, that could get you fucked up but good!\" Sammy laughed again. \n\nI waited for him to quiet. He did and finally focused on me.\n\n\"So? What do we do now? Fuck Ellen?\"\n\n\"How about if we warm up on a mother and daughter in the other room? I don't think Ellen will care much but she might. This is weird with a capital A.\" \n\n\"You can't spell worth a fuck, Sonny.\" Sammy grunted. \"Show me the mother and daughter.\" \n\n\"I'll go get Melissa and tomorrow you and Sam can have her until four or five. After that, it'll be just you, Ellen and your dad, so I was thinking if you kept Ellen waiting, you know, tied up and watching or something while you fucked with Aunt Melissa? Not in the pussy though. She should be clean, particularly since there is every possibility that Alissa will be going down on her, so finding her bubbling with Honeywell will be risky, if she has any taste memory.\"\n\n\"Not to worry.\" Sammy muttered. \"I doubt she's blown Dad in several years.\"\n\n\"I was talking about you.\" I muttered back. Sammy's eyes got wide and he nodded. \n\n\"Oh. Right. I did feed her a steady diet of cum the last time I had her to myself.\" He grunted. \"Shit, I bet Ellen'd love to watch us doing her, me and Dad. Ellen is such a twisted perv. I believe she'd fuck outside the species if she thought it'd bring her a new and better orgasm.\" \n\n\"I'm going to tell her you said that.\" I growled.\n\n\"Go ahead. I like it when she's a little pissed off. Fucking her when she fights back is a bit of a treasure. She's always so eager to mount my sausage, its kind of cool when its just my idea. I'm always making her late to work. She fights me off but I pin her down and pump her full of cum and then send her off to work smelling like a hooker on vacation.\" He laughed. \"So? Where are they?\" \n\nI got up and glanced at his clothing, blue jeans and a turtle neck. \n\n\"You need a shower?\" I asked, not the most comfortable thing to ask a buddy. The look he gave me confirmed that sentiment. Then his face changed and he nodded. \n\n\"Clean as a whistle. I thought it was the two of us, Ellen and a pair of strange. I wanted to make a good first impression.\" He grinned. \"I'm tasty as a lolly pop.\" \n\nI was afraid to ask and so I didn't. \n\nI pulled my robe around me and got up. I downed the last of my scotch and led Sammy to the left bedroom door. I cracked it. I could hear it, the sound of two women moaning. I opened it further and found them locked in a tight but expressive sixty-nine. I pushed the door wider.\n\n\"Jesus, is that them?\" Sammy whispered at my shoulder, peering around me. I could feel him, close. His cologne wafted around us. I looked over my shoulder at him.\n\n\"God, Sammy, did you use the whole bottle? You smell like a boudoir.\"\n\n\"I am a boudoir, Sonny. I thought you knew.\" \n\nI moved carefully into the room. Miriam was on top, dipping her head between Imogen's arched legs, standing on her elbows and knees so she could carefully maneuver her pussy around on Imogen's face. She was the first to notice us. She looked up and groaned through a gentle little orgasm before speaking to us.\n\n\"Look what Sonny brought us.\" She mumbled. \n\nImogen made some growling sound. \n\n\"Oh, sorry.\" Miriam said and lifted her fine ass, revealing Imogen's cum smeared face. \n\n\"I said, I can't see anything but your pussy plain.\" \n\n\"Abdomen.\" Miriam offered.\n\n\"That's it, the word I was looking for.\" Imogen chortled. She twisted to look around at us, peering down the long, bare thighs beside her head. \"Oh my, more chocolate!\" \n\n\"Mother!\" \n\nIn that moment, I believed they were truly mother and daughter. I chortled. \n\nThey rolled apart and Miriam turned around so she was aimed in the same direction as her mother, that is Sammy and I were staring up their open legs. \n\n\"Let's do them both.\" Sammy muttered, eying them like he was afraid they were going to flutter away.\n\n\"Which one do you want?\" I asked.\n\n\"Which one is the mother?\" He returned, making a thing of looking back and forth between them. They both swelled up, arching their backs and raising their tits like national flags on a mountain peak. Since Miriam had spoke the word clearly before, it was pure flattery but who doesn't like a bit of flattery now and then, so long as it leads to a lot of pussy later, or in their cases, dick. \n\n\"We can switch, you know, go back and forth. Compare them.\" \n\nSammy looked at me, asking for my response to his suggestion."
    ],
    "authorname": "Contrasting",
    "tags": [
        "everyone fuck everyone",
        "anal",
        "lesbian"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/extending-the-milf-list-ch-19"
}