{
    "title": "Ho White and the 7 Dicks",
    "pages": [
        "1 - THE PRINCESS\n\nPrincess Ho White had never seen an orgy. She did not even know what an 'orgy' was. She overheard her new stepmother telling a servant to, \"make sure there are enough beds in the great hall for the orgy. I have invited 700 people.\" \n\nHo asked politely. \"What's an orgy?\" \n\n\"Nothing,\" replied her stepmother. \n\nThis made Ho even more interested. She was eighteen and she hated it when adults treated her like a little child. That night, Ho pretended to go to sleep early but instead she waited quietly. After half an hour she began to hear the faint sound of wailing and screaming. She was frightened at first. Did she really want to see an 'orgy'? Might it be a monster? Ho's curiosity got the better of her so she climbed out of bed and crept down the stairway. With every step she took, the sounds grew louder. At the bottom of the stairway she could make out words. \n\n\"Fuck me. Fuck me harder,\" she heard someone scream. \n\n\"Cum on my face,\" she heard in another voice. \n\nThe Great Hall's door was half open. Ho tiptoed forward and looked in. 700 naked bodies were writhing on beds laid out in the hall. Closest to Ho, the queen of the neighboring kingdom of Loch Ness was sucking a large cock. As she sucked one cock, the queen was stroking another with her right hand. Ho had sucked one cock in her life -- the stable boy's -- and she marveled at the woman's expertise. The Queen of Loch Ness slurped enthusiastically at the glistening penis in front of her. Her tongue flickered as fast as a fairy's wings. The man receiving this treatment groaned and said, \"Take me into your mouth.\" The Queen smiled and cradled the tip of the man's penis with her lips. She began to bob her head back and forth, swallowing more of the cock every time until -- amazingly -- she had the whole cock in her mouth.\n\n\"Wow,\" exclaimed Ho. \n\nOn another bed the Minister of Agriculture was fucking a red haired woman from behind. At the same time, the red-haired woman was licking the pussy of a woman in front of her. The woman being licked was trembling and screeching, \"Shove your tongue in me. More! More! Fuck my pussy with your tongue!\"\n\nThis was too much for Princess Ho. She placed two fingers on her clitoris and began moving her hand in small circles. Her pussy was dripping. She slipped the tip of her index finger into her folds and shoved the digit as far as it would go. She imagined she was being fucked like the Empress of Narnia. A huge cock was pounding in and out of the Empress' cunt while she sucked ravenously on an even larger cock. \n\nIf it was me, Ho thought. I would have that cock in my pussy and suck the other one. What a waste! Or, Ho thought, increasing the pace of her masturbation, I would have that cock in my pussy, while the other one fucked me up the ass. Ho nearly came at this thought. Oh, to have five dicks to play with, Ho fantasized enviously when she saw the Queen of Fantasia pour wine on five cocks surrounding her. The Queen sucked the wine off the cocks one at a time. She then poured the wine over her buoyant breasts and the five men dived at her hungrily. Ho imagined bouncing on a cock -- any of the cocks in the room would do. Everywhere she looked she saw cocks being sucked and pussies being fucked. She fingered herself wildly, reaching out for balance.\n\nUnfortunately, Ho picked the door of the Great Hall to lean on. It opened and Ho collapsed into the room. She landed on the King of Oz's dick. He yelled in pain. Ho tried to kiss it better -- well actually she tried to kiss, suck and swallow it better -- but it was too late. Ho's father untangled himself from the five women pleasuring him and rushed to hear what the yell had been about. When he saw his daughter happily bobbing up and down on the King of Oz's dick he was enraged. He punched the King of Oz in the face and declared, \"the orgy's over\". He chased all the guests out of the Great Hall.\n\nThe Tsarina of Lilliput, who had been seconds away from orgasm, was so angry she shouted, \"I declare war on your country.\" \n\n2 - THE QUEEN\n\nAfterwards Ho's father, August White, was tormented with guilt. He spent hours praying to the Godmother to forgive him for his sins. \"Sex should only be for reproduction, sex should only be for reproduction,\" he muttered angrily. \"If only I hadn't lost sight of that.\"\n\nThe White Kingdom was deeply religious and, until recently, August had been a strict follower of the Godmother's laws. He had only had sex with his first wife once, and that had been to conceive Ho. August's second wife, Goldicocks, was from a different kingdom and she was used to having sex whenever, and wherever, she wanted. She had convinced him that he needed to loosen up sexually and organized the orgy. He blamed her for what had happened. The next day, when Goldicocks walked into the royal bedroom, he averted his eyes from her curvaceous body. \"Vile harlot,\" he declared. \"We shall sleep in separate beds tonight.\"\n\n\"You don't mean that,\" she objected. \n\n\"I do.\" The very sight of her filled him with shame. \n\n\"You aren't serious about that.\" Goldicocks unbuttoned her top, revealing her large, perfect orbs.\n\n\"Have some modesty woman.\"\n\n\"I'm your wife.\" \n\n\"Get out,\" August yelped.  \n\nAugust rejected Goldicocks every day for the next month. No matter what she said he held his ground. She was outraged. As time passed, her anger was coupled with a great deal of desire. She needed to be fucked. She began to spend a lot of time alone with her magic dildo. Her magic dildo was a very powerful object. In fact, the witch who had given it to her had warned her that anyone who had an orgasm while using it would fall into a deep coma and never wake up. This was not a danger for Goldicocks because she had an orgasm problem. For most of her life she had been unable to orgasm. She had fucked many men but all of them had penises that were too big or too small. She had longed to find one that fit just right. A few months ago, she had been about to give up on ever having an orgasm when she met the witch. The witch had instructed her to rub the magic dildo against her clit and say, \n\n'Dildo dildo on my clit\n\nWhere is the dick with the perfect fit.'\n\nIt had led her to August.\n\nIt was extremely frustrating for her to have August's perfect dick in reach, but not be able to use it because he was so prudish. Every evening she would lie down, spread her legs, and stick the magic dildo into her cunt. She would imagine August fucking her slowly and deeply for an hour. Unfortunately, all the magic dildo could do was bring her close to orgasm. She could not be satiated so her desperation increased.\n\nBefore she had met August, she had coped with her sexual frustration more easily. Now that she knew what she was missing, it was harder. Orgasms are very addictive, even more addictive than opium, cocaine, or fairy dust. Goldicocks began to suffer from withdrawal symptoms. She was tormented by sexual fantasies at all times of the day. She rubbed her crotch against furniture, fingered herself during meals, and all her dreams were of fucking. Every night she begged August to fuck her just once and then they could go back to abstinence but he refused. He suggested that she say a few prayers. \n\nAs Goldicocks' need for an orgasm grew, she began to lose all logical and coherent thought. She lost the ability to do mathematics or hold a long conversation. All that existed in her mind was a thick fog of sexual need. Whenever Goldicocks saw Princess Ho strolling down the palace corridors, she was consumed by resentment. \"That little bitch is the reason I can't have a good fuck,\" she cursed bitterly. More time passed and her sexual depravity turned the resentment into hate. Goldicocks began to imagine that if Ho White were dead, all her problems would be solved.\n\n3 - THE GARDENER\n\nIt was generally agreed that the palace's newest gardener was a strange lad. He had come looking for a job four months earlier and immediately shown an aptitude for gardening. He trimmed hedges into marvelous unicorn sculptures and his flower arrangements exploded with color. However, Dick -- that was the young gardener's name -- asked a lot of questions. Questions were expected from new gardeners, but Dick's were peculiar. He had asked the palace's chief gardener, \"How many kinds of beans grow in the White Kingdom?\" He had asked the palace cook, \"How different is a boiled bean from a fried bean?\" They answered as best they could, but all of them worried a bit about Dick's sanity.\n\nOne morning, Dick was weeding a patch of roses when Queen Goldicocks walked out of the palace. She approached Dick. He knelt and asked, \"How may I serve you your highness?\"\n\nShe spoke in a soft voice. \"How would you like to make five hundred gold pieces?\"\n\nDick's mouth fell open. That was more than he made in a year.\n\n\"I'll assume the look on your face means 'yes',\" laughed Goldicocks. \"I have a job for you but you will have to keep it a secret.\"\n\n\"As you wish your highness.\"\n\n\"I would like you to take my stepdaughter Ho for a picnic in the old forest.\"\n\n\"No problem.\"\n\n\"Take her to the middle of the forest and then kill her.\"\n\n\"What?\" Dick was horrified. \n\n\"Is that something you think you could do for five hundred gold pieces?\"\n\n\"Y...yes,\" he stammered.\n\n\"Good. When you bring me her heart I will give you the money.\" Goldicocks said as casually as if she was ordering the kitchen to make potato soup. She turned and began walking away.\n\n\"Just one thing,\" Dick shouted after her. She stopped and he asked, \"Do you happen to know anything about beans?\"\n\n\"Beans?\"\n\n\"Yes.\"\n\n\"No,\" said Goldicocks, shaking her head in confusion. She continued back into the palace.\n\nOne of the other gardeners overheard Dick's shouts and approached. \"What is your obsession with beans?\"\n\n\"I'm not obsessed,\" Dick defended.\n\n\"The first question you asked me when we met was whether I knew anything about beans. You've asked every gardener in the palace, every cook, maid, stable hand, and now, the queen! What is it about beans?\"\n\n\"It's complicated,\" mumbled Dick and he walked to Ho White's room. \n\nHe found Ho slipping into a black sweater. She was wearing tight fitting white riding pants which clung to her pert buttocks like a glove. He had just been thinking to himself how sexy Goldicocks was. Her stepdaughter was sexy in a different way. Where Goldicocks was buxom and voluptuous, Ho White was thin and athletic. Where Goldicocks had blonde hair, Ho's was as red as blood. There was something uniquely titillating about redheads. Ho's skin was smooth and as pale as snow. Dick wondered what she would look like naked. Her breasts were small but buoyant and Dick was instantly fantasizing about how wonderful it would be to pull off her sweater and feel them under his palms. He imagined they would be milky and soft. If he had one wish at that moment, it would have been to push her against the bed and fuck her. Would she be a ferocious lover or a tender one? He could as easily imagine her wailing like a banshee and screaming 'fuck me', as he could imagine her whimpering innocently with his every thrust.\n\nI have to stop these thoughts, he told himself. With five hundred gold pieces I can travel as far as I need to find a bean expert. I've been searching for two years and I can't give up on this opportunity because the woman I'm meant to kill is sexy. \n\nAs they rode to the forest Ho White spoke effusively. \"Thank you so much, I've been forbidden to leave the palace for days. If it weren't for my stepmother I'd still be cooped up in there. I think my dad is overreacting. All I did was suck the King of Oz's dick for twenty seconds, at most. He didn't even come in my mouth. My dad thinks it was my first time. He doesn't know I've sucked the stable boy's cock a few times. You know, the blonde haired one. What's his name? I always forget.\" Ho thought for a few moments. \"Oh well, I never forget his cock.\"\n\nDick tried to ignore her, but it was impossible. Her talk about blowjobs was making his dick stiffen. I have to kill her, he reminded himself. Can't think about sex. Can't think about sex. The more he told himself this, the more vividly he had images of Ho pressed against him in a sweaty union. Licking, fucking, biting, sucking, grinding... The saddle began to hurt his rigid cock. He asked Ho a question to move the subject away from blowjobs. This did not help. Ho was more witty and interesting than any woman he had ever met. As much as he tried not to, she kept making him laugh and respond. By the time they reached the forest he was half in love with her. \n\nHe laid out a picnic spread for her. It was just a few fruits he had picked up from the kitchen and he felt guilty her last meal was so meager. As she ate, Dick got up and walked behind her. He took out a knife and lifted it to stab her. She turned to look at him just as he was about to strike. She screamed. Dick's hand darted forward, grabbing her by the collar and he pushed her to the floor. He climbed on top of her, pinning her. He lifted the knife up in the air and prayed that the Godmother forgive him. His hand trembled and he brought the knife against Ho's neck. One swift cut was all it would take. It would be as easy as slicing through butter. Dick's hand was frozen. He couldn't do it.\n\n\"Help! Help!\" Ho screamed. She struggled for a little while and then realized Dick was not killing her. \"You evidently don't want to murder me. Why don't you just let me go?\"\n\n\"I'm sorry,\" Dick said politely. \"I have to kill you. If I don't I might never find a bean expert.\"\n\n\"A bean expert?\"\n\n\"Yes. It's a long story.\"\n\n\"Why don't you tell me? It's not like I can go anywhere.\"\n\n\"All right,\" Dick agreed. \"I come from a big family. I have six brothers and my mother was very uncreative. She named each of us 'Dick'. Can you imagine how chaotic the house was? If she said, \"Dick clean the dishes,\" or \"Dick carry this\" none of us knew who she was talking about. \n\nMy oldest brother is the one who realized that we needed nicknames to make things easier. Unfortunately for me, this idea came to him when we bathing in the river. He gave us nicknames after our... well you know...\" Dick pointed at his crotch.\n\n\"Your penises,\" Ho put in. \"You are my would be assassin. I think you don't have to worry about being vulgar.\"\n\nDick smiled. \"My oldest brother nicknamed himself 'Mighty Dick' which I think was unfair. I could think of much more appropriate names for him. The second oldest became 'Itchy Dick' because he was always scratching it. There was 'Horny Dick', because it was always hard and 'Lengthy Dick', because his was the longest. Then came 'Curvy Dick', and 'Veiny Dick'. I was nicknamed 'Tiny Dick.' I quickly became the object of everyone in the village's ridicule. It's hard enough to have a tiny dick without everyone knowing about it. Young girls would even pretend they wanted to sleep with me just so I could undress and they could laugh at how small my dick was.\"\n\n\"It's not size that counts,\" suggested Ho.\n\nDick held his thumb and forefinger three inches apart.\n\n\"Ohhh,\" said Ho sympathetically. \"That really is tiny.\"\n\n\"After years of humiliation, I met a fellow named Jack in a pub. He claimed to be carrying magic beans that grew giant beanstalks. I came upon an idea and I bought them from him. That night I ate one of them and the next day, my penis had grown an inch. I realize now that I should have just eaten two or three more but after years of being teased about my dick I ate them all.\"\n\n\"How many?\" \n\n\"Twelve.\" \n\n\"But that would make your dick...\" Ho gasped.\n\n\"Sixteen inches long. It's actually worse for me now than before. Even though women would laugh at my tiny dick, I still managed to have sex one or two times. Now women just run away screaming. It's also a terrible nuisance. Every time I get turned on, it hurts. When we were riding here for example.\"\n\nIt was Ho's turn to smile. \"You were turned on? By me?\"\n\n\"Of course. Do you know how sexy you are, and with all your talk of blowjobs.\"\n\nHo laughed. \"Why do you want to kill me? Sexual frustration? There are more fun ways to deal with it.\"\n\n\"No, I've been trying to find a bean expert for the last few years so that I can reverse what happened to my penis. When your stepmother said she would pay me to kill you, I realized I could use the money to go to the fairylands. Someone there would surely be able to help.\"\n\n\"My stepmother wanted you to kill me!\" Ho was bewildered. She had been sure Goldicocks liked her. It had felt so good to finally have a mother.\n\n\"I'm sorry. I have no choice.\" Dick held up his knife to strike.\n\n\"Wait,\" shrieked Ho. \"I'll do anything if you don't kill me. I'll have sex with you.\"\n\nDick stopped. This was a very tempting offer. He got up and began unbuttoning his trousers when he suddenly didn't want to keep going. As much as he wanted to fuck Ho, he knew that when she saw his gigantic dick she would want to scream and run away. If she did actually fuck him it would be because she was afraid of dying. He didn't want. He realized now that he wasn't half in love with Ho; he was all the way in love with her.\n\nHo, meanwhile, had risen to a kneeling position and began to stroke Dick's thigh. She was thinking back to the orgy. There were a couple of things she had seen that she wanted to try. \"Pull out that big dick so that I can suck it,\" she said as she unbuttoned his trousers. She reached in and grabbed a hold of his dick. She pulled it out and was astonished by its length and girth. She had been planning to give him a blowjob but she reconsidered. His cock wasn't even erect yet and she wasn't sure if she could fit the head into her mouth. Could she really fuck him? His cock looked like it would split her apart. Oh well, she thought. I don't have much of a choice. \n\nDick saw Ho's expression and said, \"Stop. I just got an idea. You can pretend you're dead. I'll take a cow's heart to your stepmother and say it's yours. She'll give me the reward.\"\n\nHo was surprised. \"That's real nice of you. Don't you want to fuck me?\" \n\n\"Of course I do. You are beautiful; but why don't you owe me that fuck. I'll go find a bean expert and we can continue where we left off when we started.\" \n\n\"What will I do in the meantime?\"\n\nDick thought for a while. \"You can stay with my brothers.\"\n\nWith that, Dick took Ho to his home and introduced her to Mighty, Itchy, Horny, Lengthy, Curvy and Veiny. He kissed her good-bye and then set off on his quest to shrink his dick.\n\n4 - THE COMPETITION\n\nAll their lives, the seven brothers had competed for everything. When they were young it was for their mother's favor and the big piece of chicken. As they grew older they competed in athletics, games, and for women. The oldest brother, Mighty, was always the winner. He was the quickest, strongest, tallest and cleverest of the brothers. Unfortunately, he knew that he was and bullied his six brothers mercilessly. He never missed an opportunity to rub their faces in his superiority.\n\nWhen Ho White moved into their cottage, Horny said to Mighty, \"She's really sexy.\"\n\n\"Yes she is,\" said Mighty. \"I'll be the first of us to fuck her.\"\n\n\"No, I will,\" said Itchy, Curvy, Veiny and Lengthy. \n\nAnd thus began the brothers newest competition. \n\nHo quickly became aware what was going on and she was delighted. There was nothing better than having six strapping young men trying to get into her pants. Even though she was horny herself she decided to take her time deciding. The idea of teasing the six of them to frustration made her laugh. She started 'accidentally' forgetting to button her top so that her breasts were almost in full view. When eating dinner, she moaned deeply with every bite and she made sure she announced it very loudly whenever she was going to bathe. Of course, the six brothers followed her and hid in the bushes. She put on a series of shows for them. Initially she would simply bathe, then after a few days she started caressing her body for their entertainment. She would linger over her breasts and pubis while washing herself. It excited her to know she was being watched. She fantasized that all six of them were touching themselves while watching her. She was right.",
        "One day she went further. She knelt on the shore of the river with her ass in the air and began fingering herself frantically. She began screaming, \"fuck me, fuck me, fuck me harder Dick. Please fuck me.\" Each brother was convinced she was talking about them.\n\nEach brother had come up with a strategy to seduce Ho. Itchy tried the sensitive method. He wrote Ho little poems and picked her flowers. Unfortunately for him, Ho was worried his constant crotch scratching might mean he had a sexually transmitted disease. Veiny tried to get Ho drunk but he underestimated Ho's alcohol tolerance. He ended up under the table long before she did. Lengthy brought up his long cock in conversation as often as he could. Ho had already seen his brother Tiny's 16-inch dick, so she wasn't impressed. Curvy decided to befriend Ho but did it too well. Soon she thought of him as such a close friend she couldn't imagine sleeping with him. Horny put her off because he had no control. He leered at her whenever he saw her and he tried to fondle her every time they spoke. \n\nAnd then there was Mighty.\n\nMighty irritated Ho White to no end because he was so overconfident. He barely pursued her. He didn't flatter her or talk to her at all. He just smiled smugly whenever he saw her. He laughed at all his brothers pitiful courtship techniques and told them they had no chance. Mighty was rude and arrogant but Ho couldn't help noticing his muscular frame and something about his chiseled good looks made her keep looking at his face. It was strange. All the brothers had similar angular features, blue eyes and blonde hair, but Mighty's impish face fascinated her more. \n\nAfter dinner one day he leaned over and whispered into her ear, \"I know you want to fuck me, but you have to ask nicely.\"\n\nHo was infuriated. She considered sleeping with one of his brothers just to spite him but didn't really want any of them. That night she couldn't stop thinking about Mighty. His impertinence made her want him all the more. She closed her eyes and imagined kissing his lips. They looked soft. What would they taste like? She imagined those lips running a trail of kisses down the back of her neck and her nipples stiffened. She let her finger wonder down her belly and tickled her pubis. A nail scraped against her clitoris. She moaned. In her mind, Mighty was licking her: slowly, patiently -- not as an excuse to fuck her -- licking for the sake of licking. Ho began rubbing in soft, gentle circles. Simultaneously, her thumb burrowed into the hot depths of her vagina. She pushed the digit in and out of her folds, coating it with her juices. \n\nHer masturbation was interrupted by the sound of a breathy giggle. She opened her eyes and Mighty was standing at the foot of her bed. \"Thinking of me?\"\n\n\"Get out,\" she shrieked, but even as she said this she began to tremble with orgasm.\n\nMighty laughed and walked out of the room. \n\nThe dance continued for another week. Daily Ho's need for Mighty built exponentially. Finally, she approached Mighty while he was bathing in the river. Grinning as always, he stepped onto the shore. He was naked but unbothered. The droplets of water gleamed off his rippling muscles. His thick cock swung freely between his legs. \"What do you want?\"\n\n\"You know what I want.\"\n\n\"No I don't,\" said Mighty. He walked up to Ho. \"You have to tell me.\"\n\n\"No I don't.\"\n\n\"Then I'll go,\" he said and pushed passed her. \n\n\"Wait,\" she said.\n\nHe turned, smiling.\n\n\"All right you bastard,\" said Ho angrily. \"You want me to beg, then I'll beg. I want to fuck you. I want you to tear off my clothes and fuck me like your life depended on it.\"\n\n\"Well, since you asked so nicely...\" Mighty was upon her instantly. He ripped off her clothing and in a moment she was naked as well. His palm made contact with her thigh. His flesh was coarse and sent chills through her body. His palm rose upward swiftly and stopped between her legs. He cupped her vagina and she ground against him. It wasn't enough. She needed his penis. She slid her hand against his shaft and masturbated him slowly. She was shocked by how hard it was. She squeezed and his penis lurched. \n\n\"Take me into your mouth,\" he said huskily.\n\n\"No time for that,\" she replied. \"Lie down.\"\n\nShe saw the impulse to refuse flicker in his eyes then vanish. Somehow he quashed his impulse to be difficult. He lied down and she lowered herself onto him. She only allowed the tip of his cock to enter her and she began jerking her body rapidly, teasing both of them. The torture continued for a minute and then Mighty, arched his hips, thrusting into her drenched valley. She met his thrust in kind and undulated against him. She began to move up and down and as she rode him, her insides grew hotter and wetter. Mighty's body was still wet and slippery from being the water and Ho lapped droplets of water off his neck. They tasted salty. She continued fucking him, creating a slow rhythm like waves lapping against the coast. She let her body feel each moment completely and let out a hollow moan. Her insides felt was though they were melting. She began rotating her hips against Mighty's more vigorously. Her body pulsated with excitement. The persistent friction was delicious. After few more minutes, Ho's knees dug into Mighty's thighs and she squeezed tightly. Her head reeled. She felt her orgasm brewing.\n\nBut then something peculiar happened. Even though she was looking down at Mighty and it was his cock was thrusting inside her pussy, Ho White found herself thinking of his brother. Not Itchy, Curvy, Veiny, Horny, or Lengthy. The image that popped into her head was of Tiny. As soon as his image came into her mind, her pleasure increased tenfold. She went over the edge, exploding with orgasm. \"Ohh, Dick,\" she wailed, and Mighty thought she was talking about him.\n\nMighty continued thrusting. In the aftermath of her orgasm, Ho wondered about why she had thought of Tiny. While she continued to fuck Mighty, she thought back to the day Tiny had taken her into the forest. She remembered how he had spared her life. If her stepmother Goldicocks found out, Tiny would have been beheaded. He risked his life for me, she realized. She also remembered how Tiny had not forced her to have sex with him. He had been so sweet. If only he was here. \n\nHo looked down at Mighty and realized that of all the brothers, he looked most like Tiny. That was why she had been attracted to him despite his loutishness! With that, she pulled herself off Mighty.\n\n\"Hey,\" he objected. \"I haven't come yet.\"\n\n\"Tough,\" she said. \"I changed my mind.\"\n\n\"What?\" Mighty's voice was strangled. His dick stood upright like an abandoned pillar.\n\n\"Sorry, I don't want to fuck you any more.\"\n\n\"Then can you give me a blow job until I come?\"\n\n\"I'm afraid not. I just realized I'm in love with your brother.\"\n\nMighty was stunned and watched, half in disbelief, as Ho got up and began putting on her clothes. \"You can't just leave me like this,\" he objected.\n\n\"Watch me,\" Ho said and began walking away.\n\n\"Which brother?\" Mighty demanded in frustration.\n\n\"Tiny.\"\n\nThis was the last thing Mighty expected. Tiny was the quietest brother, the least clever brother, the weakest brother. \"This isn't happening,\" he muttered. \n\nMighty tried to sleep with Ho again over the next few days, but she turned him down every time. No one had ever preferred any of his brothers over him. It irked him. He soon became obsessed with Ho. He wanted her more now than anything else. He had to have her. \n\n5. THE DILDO\n\nThe palace of the White Kingdom was filled with gloom. Ever since Ho's disappearance, August White had been downcast and depressed. He spent his days brooding and he rejected Goldicocks' sexual advances harshly. Goldicocks had arranged for the murder of Ho White to be blamed on the Lilliputians who were presently at war with the White Kingdom. August put all his energies into the war effort. Revenge was all he had to live for.\n\nGoldicocks, meanwhile, was despondent. Her body was sex starved. No amount of masturbation satiated her. She needed an orgasm. Goldicocks cursed August. Other neglected wives, she thought angrily, can cheat on their husbands. If only August was not the only one? Suddenly Goldicocks realized that he probably wasn't the only one. She had never even considered it even though it was common sense. How many possible penis sizes and shapes were there? Surely, somewhere on the planet there was another cock that would fit her perfectly. \n\nShe pulled out the magic dildo and spread her legs. She pressed the ivory tip of the dildo on her between her legs and spoke the magic words:\n\n\"Dildo dildo on my clit,\n\nWhere's the dick with the perfect fit.\"\n\nThe dildo burst into life immediately. It glowed brightly. Goldicocks expected this; after all, August was nearby. She packed the dildo away and put on a black wig. She dressed in common clothing and with this simple disguise, rode away from the castle. When she was a few miles away, she pulled out the dildo. It glowed faintly when she pointed in the direction of the palace but she ignored it. She kept rotating and it glowed faintly in a Westward direction. A smile bloomed on her face. \"So there is another,\" she whispered.\n\nShe rode for a few hours. When she entered the old forest, she was shocked. The dildo began to glow brightly. She had expected it to lead her to another kingdom. To think, she thought with amusement. All this time the solution to my problem has been so close by. She raised the horse's speed to a gallop. She was looking forward to a good fuck.\n\nA little later she came down a path to a blond young man who was cutting wood. His shirt was off and she admired his bulging pectorals. She was delighted. She had been afraid that she might find the perfect dick on a gray haired geriatric. She dismounted and approached the young man.\n\n\"Good afternoon,\" she said to the lad.\n\n\"Good afternoon,\" he replied.\n\n\"And what is your name?\"\n\n\"Mighty Dick,\" he said proudly.\n\nGoldicocks nearly burst out laughing, but repressed the urge. No need to waste time, she decided and lifted her shirt over her head. \"Well can I have a personal test of how mighty that dick is?\"\n\nMighty admired Goldicocks' heavy breasts but he did not move towards her. \"I'm sorry milady. If you had come to me a week ago I would surely have had sex with you but now I want only one woman.\"\n\n\"Don't worry,\" reassured Goldicocks, palming one of her breasts and squeezing it. She lifted the orb to her lips and licked the nipple, coating it with a crown of saliva. \"She'll never find out.\"\n\n\"No,\" said Mighty, turning away. \"I'm just not interested in anyone but Ho.\"\n\nGoldicocks shrieked with anger. \"Who did you just say?\"\n\n\"Ho White,\" he repeated. \"Do you know her?\"\n\nGoldicocks couldn't believe it. That harlot was meant to be dead. She should never have trusted that gardener. \"Yes, I know her,\" she replied, reining her anger. \"We're old friends. Where is she?\"\n\n\"Just a mile or so up the path,\" said Mighty. \"She's staying with my brothers and I.\" Mighty picked up his axe and continued chopping wood.\n\nGoldicocks got back her horse and mentally cursed Ho White. Even now, that little bitch was coming between her and her orgasm. She had to kill Ho. She would do it herself this time. She rode up the path and realized that she had no weapon on her. She wasn't strong enough to strangle Ho, and she had no poison. All she had on her was...\n\nA memory resurfaced in her mind: back when she had been given the dildo, the witch had said 'anyone who had an orgasm while using it would fall into a deep coma that they could not awaken from'. \"Perfect,\" she said to herself. \"Perfect.\" \n\nWhen she saw a cottage at the end of the path, she dismounted. She covered her face with a hood and bent over like she was an old woman. She shouted. \"Dildos for sale, dildos for sale. Highest quality dildos for sale.\"\n\nCoincidentally, Ho White at that very moment was thinking how much she would like a fuck. She had decided never to fuck Mighty again, but Tiny was taking his sweet time returning from his quest. She felt quite horny so when she heard 'dildos for sale', she ran to the door. She rushed to the old woman she saw.\n\n\"What kind of dildos do you have?\" Ho asked.\n\n\"I'm sorry,\" came the reply. \"I only have one dildo left, but it's a very special dildo.\" Careful not to let her face be revealed, Goldicocks pulled out the magic dildo. She handed it to Ho.\n\n\"Wow,\" Ho exclaimed, touching the diamond studs along its length. \"I'm afraid I can't afford this. I wish I could though.\"\n\n\"How much money do you have?\"\n\n\"None,\" Ho realized. \"Sorry to waste your time.\"\n\n\"Wait,\" came the firm reply. \"Do you have anything you could barter?\"\n\n\"We're not very rich. All that's in the house is piles of wood and a few apples.\"\n\n\"Perfect,\" said Goldicocks. \"I'm very hungry. I'll give you this dildo for an apple.\"\n\nHo White was suspicious. Why would the old woman sell such an expensive dildo for something as common as a dildo? Maybe the old crone's batty? She rushed into the house and fetched an apple. She brought it out and they made the trade.\n\n\"Thanks a lot Ho,\" said Goldicocks and walked away.\n\nHo White was too excited at her purchase to wonder how the old woman knew her name. She dashed back into the cottage and lay down on her bed. All of the six brothers were out so she had the house to herself. She spread her legs and shoved the dildo against her vagina. Her body suffused with warmth. Her body tingled. There really is something special about this dildo! She felt heat kindle in her loins and pushed the dildo into her moist folds. Her cunt was on fire. Her hips gyrated frenetically and she tried to fuse herself to the dildo. Copious juices poured from her vagina and the ivory length of the dildo stroked her tantalizingly. She parted her legs further. Rivulets of pleasure tore through her body as she pushed the dildo into her cunt. She gave a groan of pleasure. She slowed down the pace of her thrusts. No need to rush, I've got all the time in the world. She stopped using her hand to move the dildo and simply held it in place. She used her hips to grind against it like a lover. The ocean of sensation that Ho was immersed in was amazing. She lost all concept of time and place. There was only her and the dildo.\n\nHo's eyes were closed so she did not realize when the dildo began glowing. All she felt was a sudden increase in the level of pleasure she was feeling. Although only her pussy was receiving attention, she felt as though a hundred lovers were stroking and licking her. She felt electric jolts swimming through her and she fucked herself faster. She punished her cunt with the dildo, ramming it in and out violently. Her head whirled with a flood of images and sensations. Every nerve in her body hummed with ecstasy. The climax was building up in her loins. Her clitoris was aflame and her body shook without control. She wailed, pushing her pussy against the dildo harder and harder. In, out, in, out, in, out. Over and over and over.\n\nThe climax came without warning. She was lost in a maelstrom. Her pussy gushed and her every muscle contracted. She could not breath. She could not think. The pleasure was too intense. She screamed as the orgasm racked her body. It was like nothing she had ever experienced. Within the chaos of her orgasm, she heard the sound of music. She could not give it a name because it was not made by instruments or voices. It was the embodiment of raw pleasure. The music suffused her and she became the epicenter of an eruption. The explosion began at her clitoris and then spread over her body. It was amazing.\n\nHo White lost consciousness. \n\n6 \u2013 CLARITY\n\nThe six brothers returned to their cottage in the evening and found Ho naked in her bedroom, in a coma. They covered her with a sheet and tried to revive her, but they failed. She was totally inert. They had no idea what had happened and all of them went to sleep with troubled minds. \n\nMighty was awakened just after midnight by a tapping at his window. He got up and opened it. Goldicocks was standing outside. \"May I come in?\" she asked,\n\nA little confused, Mighty let her in and turned on a table lamp. The room suffused with light and revealed that Goldicocks was wearing a thin negligee that was almost see-through. He wished he were wearing something other than his pajamas because his stiffening rod would be painfully obvious.\n\n\"I heard about what happened to Ho White,\" said Goldicocks.\n\n\"It was very strange. We are going to call a doctor tomorrow. \n\nGoldicocks threw herself at Mighty, wrapping her arms around his shoulders. She pretended to be crying. \"Ohhh, I am so worried about Ho. Please hold me.\"\n\nMighty put his arms around her. She pressed against him and he felt the warmth of her body through her negligee. Her breasts squashed against his thighs, and he could feel the twin points of her nipples. Goldicocks' breath was hot against his neck and goose bumps raised on his flesh. He wanted her badly. He wondered what had changed since the afternoon. The answer was obvious. Back then, Ho White had still been conscious. It was not that Mighty had been in love with Ho White. He just hadn't been able to stand the thought of her wanting Tiny more than him. Now that she was in a coma and Tiny couldn't have her either, his mind was free to appreciate the body of Goldicocks. And my what a body it was.\n\nMighty's palm descended and cupped Goldicocks buttocks. The mounds were warm beneath his touch. He squeezed. She smiled triumphantly and reached for his crotch. He was taken aback by how firmly she gripped his penis. \"Finally,\" Goldicocks said huskily. Mighty lay back on the mattress and Goldicocks stroked his penis gently. In the faint light of the oil lamp, his penis looked like a marble pillar. Rigid. Pale. Inviting. She continued caressing his shaft, applying feathery strokes with her fingertips. Mighty relaxed and enjoyed her attentions for a few minutes. The pleasure built until it was too much for him. He growled and pounced at her. She grappled him aggressively and they wrestled for control. They rolled off the bed. Mighty landed on top of Goldicocks and he impaled her with his dick. She yelled in celebration. \"Yes!\"\n\nMighty fucked Goldicocks with enthusiasm and energy. Her desire had been building for so long that she reached the point of orgasm quickly. Her nails tore into the flesh of his back and drew blood. Her neck flailed and her pelvis shuddered. \"Yes, yes, yes,\" she screamed as she reached a crescendo. She finally got the orgasm she had been waiting for.\n\nMighty continued fucking her but, in the moments following her orgasm, Goldicocks had a moment of clarity. The dense fog of sexual need that had clouded her reason dissipated. She saw her actions now for what they truly were and guilt overwhelmed her.  \"Stop,\" she ordered.\n\nMighty was almost bursting with spunk and he kept on fucking her. In response Goldicocks grabbed him by the shoulders and shoved. She pushed him back against the bed and stood up. \n\n\"What are you doing?\" demanded Mighty. \"I was still...\"\n\n\"I have to go,\" replied Goldicocks and she rushed out of the room.\n\nMighty was left looking after her in confusion. \"Again,\" he gasped. \"I can't believe it happened again!\"\n\nGoldicocks rode back to the palace at full gallop and, once there, she told August everything. With a tear soaked face she told him everything she had done: the gardener, the dildo, Mighty. August felt a whirlwind of conflicting emotions: anger at Goldicocks, guilt that his abstinence had pushed her to such actions, relief Ho was alive, and fear that she might never wake up. He immediately sent a group of soldiers to bring Ho's comatose body to the palace. \n\n7 - PRINCE CHARMING",
        "This was not the first time that a princess had fallen into a deep sleep that she couldn't be awoken from. It was common knowledge that Princess Aurora in the north head been in a deep sleep for a hundred years. It had taken the kiss of a prince to wake her up, so August and a repentant Goldicocks sent messengers in all four directions. Whichever prince woke Ho White would marry her and become heir to the throne of the White Kingdom. \n\nThe White Kingdom was extremely wealthy so the princes began to arrive within a week. The first was a dashing young fellow with brown hair that billowed in the wind. He swaggered proudly to Goldicocks bed and kissed her gently on the lips. She did not wake up. The next prince arrived three weeks later. He too kissed her, and again she did not wake.\n\n\"Do not worry,\" Goldicocks reassured August, who finally was starting to forgive her. \"As soon as a worthy enough prince comes to the palace, she'll wake up.\" \n\nThere seemed to be a shortage of truly worthy princes because over the next eight months seventy-one princes tried to wake Ho White and all of them failed.\n\nMeanwhile, Tiny Dick had succeeded in his quest. His travels had taken him through the perilous fairylands until he had met the fairy of earth. She had grown a special beanstalk with her mastery of nature. The beans she gave him made his cock shrink. \n\nAs he was about to leave her realm, Dick overheard the fairy of earth shouting at her youngest son. \"How could you fail? Do you know how rich the White Kingdom is? All you had to do is wake up their stupid daughter.\"\n\n\"What are they going on about?\" Dick asked one of the fairy courtiers. He was told about the sleeping Ho White and how whichever prince woke her from her sleep would marry her. Every day of his quest Dick had continued to think about Ho. He had to be the one. But I'm not a prince, he lamented. Still, if all these princes are failing, maybe I still have a chance. He decided to do some research. Dick left the realm of the earth fairy and traveled north. He reached the kingdom of Queen Aurora, the legendary 'Sleeping Beauty.' It was impossible for him to get admitted to the palace so he applied for a job in the royal gardens. He worked hard for the next week and kept trying to find a way to see Prince Charming alone. His chance came a week later when he saw the prince walking around the garden muttering to himself.\n\n\"When you see me, you see you,\n\nBut when you kiss me, I quiver.\n\nI can be hard and soft,\n\nI can fly in the air.\"\n\n\"What is that you are saying your highness?\" Asked Dick.\n\n\"It's a riddle. That irritating Duke Butternut bet that I couldn't solve it. No one in the palace had been able to figure it out.\n\nDick thought for a few moments. He had always enjoyed riddles. When you see me, you see you... Well it could be a mirror? But when you kiss me, I quiver. Then maybe it was the eyes of some princess. But no princess could fly in the air. \"I've got it,\" he declared. \"The answer is water. You can see your reflection in it, it trembles if you kiss it, and it can be as hard as ice or fly when it evaporates.\"\n\n\"Brilliant,\" said Prince Charming. \"Thank you.\"\n\n\"Maybe you could help me in return? I was wondering how you woke up Aurora.\"\n\n\"It's common knowledge, I kissed her.\"\n\nDick explained the situation with Ho White and Prince Charming smiled. \"All those stupid princes. You helped me with the riddle so I'll tell you, but you must keep it secret.\" With that the prince whispered instructions to Dick. \n\nDick thanked him and then rode all the way to the white kingdom. He demanded a chance to see Ho White.\n\n\"You're not a prince,\" said August.\n\n\"Still, I know how to wake her up.\"\n\nAugust was skeptical. He suspected Dick just wanted a chance to kiss a princess, but after so many failed princes he was desperate. Goldicocks remembered Dick. \"You're the gardener I sent to kill Ho aren't you.\"\n\n\"Yes he admitted. I'm sorry I disobeyed you.\"\n\n\"No thank you,\" said Goldicocks. \"I was insane back then.\" She smiled at August, glancing at his crotch. \"Since then I have been regularly getting a special medication.\"\n\nAugust blushed and led Dick to Ho White's room. Dick sighed when he saw her. She looked so beautiful. \"Would you please leave,\" he asked the king.\n\nAugust objected.\n\n\"I have to do this alone,\" insisted Dick. \"If she doesn't wake up you can punish me.\"\n\nAugust nodded and left the room. When he was alone with her, Dick walked up to the bed. Prince Charming's advice had been simple; \"It's not how you kiss her, but where. How could a kiss on the lips wake anyone?\" Dick pulled up Ho's skirt and placed his face between her legs. He kissed her clitoris gently, and he heard her murmur in her sleep. He licked it, and it became rigid under his ministrations. His tongue swooped down, outlining her outer vaginal lips twice and then he returned to the clitoris. He sucked it into his mouth. Ho moaned again, and her thighs began to move of their own volition. He grabbed hold of her hips and held her down. He then went at it relentlessly. His tongue lapped her clitoris for almost ten minutes and then he spread her vagina with his fingers and tasted her core. She tasted salty. He used his tongue like a penis, shoving it as far as it would go into her moist canal. He pushed the rough surface of his tongue against her upper vaginal wall and lingered. His face was dripping with her juices. Suddenly, hands grabbed the back of his head and pulled him harder against Ho's pussy. \"Don't stop,\" she screamed. She was awake! Dick continued enthusiastically. He lashed her with his tongue, enjoying her heavy breathing and moaning. Her hips buckled. \"Stop doing that and fuck me,\" she demanded but he did not stop. He continued using his lips and tongue on her cunt. He slipped two fingers inside her pussy and continued licking.\n\nHo White's body vibrated. She could hear the music she had heard before she fell into the coma again. She gasped at the onslaught of sensations. Her clitoris pulsated. The pleasure was too intense. \"Yes, yes, oh yes,\" she shrieked. \"Fuck me with your tongue. Do whatever you want, just don't stop. Don't you dare stop!\" Her fingers clasped the bedposts and her legs locked themselves around Dick's back. Her body began to convulse and the torrent of orgasm whipped through her.\n\nOnly now did she look down and see who the adept cunnilinguist between her legs was. She was overjoyed. She hugged him tightly. \"I love you,\" she said.\n\n\"That's great,\" Dick replied. \"I love you too.\"\n\n\"You came back. Did you succeed?\" \n\n\"Yes I did.\"\n\n\"Is it...\" Ho began then stopped herself.\n\nDick saw the fear in her expression and laughed. \"Don't worry, it's not three inches again. I took just enough beans to bring it to a nice, respectable, seven inches.\"\n\nHo hugged him again then her expression shifted to a mischievous smirk. \"If I remember correctly, I owe you a fuck.\"\n\nAUTHOR'S NOTE\n\nThis is a story in a series of inter-related Fairy tales. The prequels are 'The Legend of Goldicocks' and '1001 Nights'."
    ],
    "authorname": "the brothers cum",
    "tags": [
        "white kingdom",
        "magic dildo",
        "loch ness",
        "white prince",
        "goldicocks orgasm",
        "goldicocks",
        "fairy earth",
        "dick perfect",
        "dildo clit",
        "oldest brother"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/ho-white-and-the-7-dicks"
}