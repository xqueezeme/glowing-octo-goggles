{
    "title": "Matchmaker 06: June",
    "pages": [
        "<center>Brooklyn</center>\n\nI smiled as my gaze traveled over the elegant wedding invitation. Mr. James Watson Hurley had asked for the hand of Ms. Jacqulyn Leigh Perry in matrimony. I'd placed Ms. Perry as a companion with Mr. Watson almost eighteen months ago, setting them up in private villa in Italy for six weeks. They'd seemed very happy during my follow up call, and I was pleased to see things were still going well for them. I didn't know how many of my clients ended up marrying their companion, but I received one or two wedding invitations a year on average.\n\nI flicked the card with my finger as I thought. My latest client was looking for someplace warm, and the companion I'd selected for him had never been south of the Mason Dixon line. As I recalled, one of Mr. Hurley's homes was in South Carolina or Georgia, and considering his net worth, it was likely the houses were very nice. I sat down at my desk and drummed my fingers, thinking, before I opened my contacts and looked up Mr. Hurley's number. Considering I'd introduced him to his fianc\u00e9e, he owed me a favor. I found his number and dialed.\n\n\"Jim.\"\n\n\"Mr. Hurley, this is Brooklyn Lancaster. How are you?\"\n\n\"Brooklyn! It's so good to hear from you!\"\n\n\"I received my invitation today. Congratulations.\"\n\n\"Thank you. Thank you very much... for everything.\"\n\n\"I'm glad things worked out between you and Ms. Perry.\"\n\n\"We couldn't be happier. Will you be coming to the wedding? I'll send my plane to pick you up and fly you home.\"\n\nI smiled to myself. \"Perhaps. May I get back to you a little closer to time?\"\n\n\"Of course! Jacki would love it if you could make it.\"\n\n\"I'll let you know.\" I paused before I changed the subject. Like most of my clients, in the heated rush of first love, Jim and Jacki had promised their help. I sometimes took my clients up on their offers of help, strictly to help other clients, but this was a pretty big ask. \"I'd like to ask a favor, if I might.\"\n\n\"Anything. Just ask.\"\n\n\"Don't you own a home in Georgia or South Carolina somewhere?\"\n\n\"Yes, in Charleston.\"\n\n\"Would you consider renting it to me for the month of June? It's for another client. Of course, I will insure the property against damage and have it thoroughly cleaned once the client leaves.\"\n\n\"I think that will be fine. I only use the home in the winter. It's too hot there in the summer, but there's no need to rent it. Considering what you did for me, for us, you can use it for free.\"\n\nI smiled. Jim was a good guy. \"Thank you for your kind offer, but I'll have to decline using it for free. You understand how this works. If I can't pay you for the use of the home, then my client and his companion could be considered guests, then if anything happens...\"\n\n\"I hardly think that's going to be a problem, Brooklyn.\"\n\n\"Neither do I, but nevertheless, there are liability issues.\"\n\n\"I understand. Then of course, I'd be happy to rent the property to you for a month.\"\n\n\"Can you tell me about the place?\"\n\n\"Sure. It's in a gated community in Charleston. It's on the salt marsh with access to Clark Sound and Charleston Harbor through Schooner Creek and the canals.\"\n\n\"Salt Marsh?\"\n\n\"When the tide comes in, it fills with water, and when the tide goes out, it becomes a marsh again.\"\n\n\"Oh, okay. Got it. How big is the house?\"\n\nHe chuckled. \"Big enough for two for a month. About six thousand square feet. It also has a pair of boat garages on the canal.\"\n\nI began nodding. That was certainly big enough. I did some quick mental calculations. \"I'd like to rent the house, from May twenty-eight to June twenty-ninth. Will that inconvenience you?\"\n\n\"Not at all.\"\n\n\"Will sixty thousand for the month be enough?\"\n\n\"Considering I'd let you use the house for free, that's more than acceptable.\"\n\nI nodded. \"I will take out a two hundred-thousand-dollar insurance policy against any damages.\"\n\n\"That should cover it. The place is fully stocked except for food. If you make sure the boat and car are covered under the insurance policy, they're welcome to use those as well.\"\n\n\"What kind of car and boat? I ask only to know if I need to raise the amount of the coverage.\"\n\n\"2017 Range Rover and a 2013, thirty-eight-foot, Formula Fastech 382.\"\n\n\"And the replacement value of both, if they were destroyed? Your best guess.\"\n\nHe paused for a long moment as he thought. \"A million should do it. The boat alone is worth almost seven hundred thousand.\"\n\nI nodded to myself. \"Okay. I'll take the policy out for 1.5 million. That should cover any damages.\"\n\n\"Yes. Anything short of a hurricane, and my homeowners will cover that.\"\n\n\"I'll get the contract and paperwork to you as soon as possible. If you agree, please sign it and return it to me.\"\n\n\"You got it... on one condition.\"\n\nA small chill ran through me. \"What?\"\n\n\"You have to seriously consider coming to our wedding.\"\n\nI smiled. \"Deal.\"\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Shelby</center>\n\nI rumbled south and east in my '57 Chevy Bel Air convertible, occasionally smiling and waving at people passing as they gave me a thumbs up. I had the top up to block the sun, the windows down for fresh air, and I'd said I wanted to go someplace warm, but as I wiped the bead of sweat from my forehead, I was prepared to admit that mistakes may have been made.\n\nI'd left Bismarck, North Dakota, two days ago for Charleston, South Carolina. I spent my first night, after a hard twelve-hour drive, in Chicago, Illinois. After another twelve hours behind the wheel the next day, I'd reach Charlotte, North Carolina. I'd left Charlotte at seven this morning, and now, at ten, I was only about an hour outside of Charleston. Virginia was scheduled to arrive at Charleston International at one, and I'd be there to meet her.\n\nI didn't mind the drive. I'd seen a lot of beautiful country, and traveling anywhere in my '57, a favorite of my collection, made any time behind the wheel time well spent. I wiped at my brow again. On the other hand, the Porsche had air conditioning. \n\nBeing born and raised in North Dakota, I was starting to get a taste for what hot meant. According to my phone it was going to be almost ninety today, and with the bright, southern sun, I was feeling every degree. I'd started the trip with the Bel Air's top down, but the farther south I'd traveled the more uncomfortable I'd become. When I stopped for gas in Kentucky I threw in the towel and put the top up to block the sun. Having the top up helped, but it was still hot!\n\nI motored on, the 283 V8 purring under the hood, following my phone's GPS until I saw signs directing traffic to the airport. I followed the signs and parked the car in the lower parking deck so it wouldn't sit and bake in the sun, sighing in relief as I entered the blessed coolness of the airport. I had almost ninety minutes to kill, so I settled into the only restaurant in front of the security checkpoints. Typical for an airport, the bar and grille was overpriced, but at least I could get a beer and the air conditioning was working.\n\nFifteen minutes before Virginia's flight was scheduled to arrive, I paid my tab, picked up my folded sign, and made my way to baggage claim to wait for her arrival. I waited until I saw her flight had arrived and unfolded my sign at the bottom of the escalator where she couldn't miss me.\n\nThe sign wasn't large, only about two foot by two and a half foot, but I'd had my art department run it up so it was a little more presentable than my scrawled handwriting. Virginia's name was large, front and center, with Welcome to Charleston below almost as large. A palmetto tree, as seen on the South Carolina flag, decorated each corner for a bit of flourish. I'd wanted to put her last name on the sign, in case there were two Virginia's on the flight meeting someone, but Brooklyn steadfastly refused to give me Virginia's last name. All I knew was her first name was Virginia and she was flying into Charleston from Philadelphia.\n\nAs a knot of people approached, I held the sign to my chest and waited. I immediately discarded women traveling with kids or families and women over fifty or so. That narrowed my selection to a handful. My gaze fell to a very attractive woman in her early twenties. She was tall, slender, with blonde hair dyed with red, blue, and green streaks. She smiled at me and I smiled back. She wasn't normally the type of girl I went for, if I had a type, but I was keeping an open mind.\n\nI opened my mouth to say hello and introduce myself as her gaze slid past mine. I turned enough to see a man about her age with bleached hair dyed a vibrant blue smiling in return. The woman rushed past me to throw herself into his arms.\n\nI turned back to the stragglers where a pixie was approaching, her eyes hesitant. \"Shelby?\"\n\n\"Virginia?\"\n\nShe nodded, smiled, and extended her hand. \"Virginia McKay. Nice to meet you.\"\n\nI took her dainty hand into my paw like grip. \"Nice to meet you, Virginia. Shelby Rockford.\"\n\nI was careful not to squeeze too hard, afraid I'd break her hand. She was tiny, probably not much over five one or five two, and at six foot and a bit, I towered over her. I didn't want to stare, but it was difficult to tear my gaze away. She might be shorter than the average woman, but what she lacked in height she made up for in beauty.\n\nShe had a slender, athletic body, but what really captured me were her eyes. They were large and such a vivid blue it was almost as if they were being lit from behind, their color making me think of a crystalline lake reflecting a bright summer sky. Her features were delicate, with a small nose and full lips that were quick to smile, and her sandy brown hair cascaded around her face in a short mass of curls that stopped at her shoulders, giving her a fun and carefree aura.\n\nBy force of will, I forced myself to not stare. \"Welcome to Charleston.\"\n\nHer smile spread. \"Thank you.\"\n\n\"Shall we get your luggage?\" I escorted her where a group of people were waiting, tossing the sign in the first trash bin I could find. \"Are you from Philadelphia or was that where your flight came from?\" I asked to fill the growing silence.\n\n\"Willow Grove, just outside Philadelphia. You? I can tell you're not from around here.\"\n\n\"Bismarck, born and raised.\"\n\n\"North Dakota?\"\n\nI nodded. \"That's right. I've never seen the ocean. That's one of the things I wanted to do.\"\n\nShe nodded. \"I've seen the ocean, from Atlantic City, but that's as far south as I've been.\"\n\nI smiled and nodded. \"A first for both of us, then.\"\n\nShe nodded in agreement before we lapsed into another, slightly uncomfortable silence. I was trying to think of something to say to her when a loud buzzer began shrilling and a red strobe flashed over one of the carousels. We moved with the crowd to where the luggage would appear and waited in the knot.\n\n\"That's my bag,\" she said. \"The pink one,\" she added, pointing to a bright pink hard sider that was gliding along on the belt. I grabbed it, pulled it off the conveyer, and set it on the floor beside her. \"One more. The green one.\" I pulled a near identical case off the conveyer, and then picked up the pink one.\n\n\"This it?\"\n\n\"Yep.\"\n\n\"I bet you don't have to worry about people mistaking your bag for theirs.\"\n\nShe grinned. \"Nope. That's why I have them. I have another pink one, a blue one, and a red one at home. I pick them up at garage sales for when I fly. As you noticed, they're easy to spot, I don't think anyone will steal it, and when it gets beat to pieces, I throw it away and go to the next one. I think I paid five dollars for the green one, and maybe six or seven for the pink one.\"\n\nI nodded. It actually made good sense. Smart and beautiful. That was a deadly combination. \"Good flight?\" I asked as we made our way to the car, struggling to fill the growing silence. I envied men with their smooth lines that charmed the ladies.\n\n\"Not bad. Typical crap flying out of Philadelphia.\" She paused. \"Is that our car?\"\n\nI smiled. \"Yeah.\"\n\n\"Wow! Where'd you rent that?\"\n\n\"I didn't. It's mine.\"\n\n\"Yours?\" she asked in confusion. \"Wait, you drove from Bismarck?\"\n\n\"Yeah.\"\n\n\"Are you crazy?\" she asked, but she was smiling.\n\n\"Maybe. I don't fly. If I can't drive there, I don't go.\"\n\nI popped the trunk and hefted her cases into the trunk. Now that I was thinking about it, I should get some suitcases like hers. Her bags fit in with the character of the car much better than my modern leather luggage did.\n\n\"Wow,\" she breathed again. \"This thing is something,\" she said, her graze caressing the car. \"Can we put the top down.\"\n\n\"If you want, but it makes it even hotter than it already is.\"\n\n\"I don't care! Driving this thing with the top up is just doing it wrong. It's a Chevy, I can see that, but what is it?\"\n\nI slammed the trunk. \"'57 Bel Air in Larkspur Blue.\" I opened the door for her and she settled inside. I saw her looking around. \"Sorry, no seatbelts.\"\n\n\"Oh.\" She grunted.\n\nI flopped into the car, started it, and started the top motoring down. \"The car didn't have them when new, so I didn't install them.\"\n\n\"You did the work yourself?\"\n\n\"All but the paint, interior, and top.\"\n\nShe looked around again. \"Amazing. I'm almost afraid to ask how much.\"\n\nI grinned. \"About one-thirty to restore, plus another thirty for the car itself. It's a fuelie convertible, and that makes it rare. Especially this one. It's loaded. The only option it doesn't have is factory air.\" I grinned as I backed out of the parking space. \"You don't really need air conditioning in Bismarck if you have a convertible.\"\n\nShe looked at me with wide eyes. \"No, I guess not. It's an amazing car. Did you drive it all this way to impress me? If you did, it worked.\"\n\n\"No,\" I said as I stopped in the shade of the parking deck to pull up our next location, the house where we were staying, on my phone's GPS. \"Like I said, I don't fly.\" I punched the button and the phone started giving me directions.\n\n\"Can I ask why?\"\n\nI shrugged. \"Sure. I was on the UND ice\u2014that's the University of North Dakota, by the way\u2014ice hockey team. We were returning from playing the Quinnipiac Bobcats when the plane made a bad landing in a storm and skidded off the runway. They don't call it a crash, but I do. I don't care what they say, when you break your airplane in a landing, it's a crash. Nobody was seriously hurt, but we got tossed around pretty good and the firetrucks showed up. That was the last away game of my senior year, and I haven't set foot on an airplane since.\" I smiled at her. \"I survived one plane crash with just a bump on the head from stuff falling out of the overhead bins. I figure I've used up all my luck for flying and don't want to tempt fate.\"\n\nShe nodded. \"Yeah, understandable.\"\n\nWe rode in silence, and once again I struggled to find words. I didn't know how to talk to women, except in a professional manner, and this was anything but. I rolled to a stop before a set of heavy gates.\n\n\"How do we get in?\" she asked.\n\n\"I have a code.\" I looked at my phone and typed in the code Brooklyn had given me on the keypad at the gate. The gates clicked and slowly opened. As soon as there was enough room, I drove through, watching the gates close behind me in the rearview mirror. I followed the winding road with what appeared to be a park on my left and huge houses on the right. I couldn't see the ocean, but I could smell it. I turned into the drive of the house that matched the address Brooklyn had given me.\n\n\"This is some place,\" Virginia breathed.\n\n\"Yeah,\" I agreed. I pulled up to the first door, and as she waited in the car, I typed in another code on the garage.\n\nThe door slowly rumbled up and I pulled the Chevy inside. There was an empty stall, and in the far stall, nearest the door into the house, sat a gleaming white Range Rover. Before I could get around the car, she'd opened her door and stepped out. I winced to myself as she slammed the door shut but said nothing. I again opened the trunk and lifted out her two bags, along with my two, setting the four bags on the polished concrete floor of the garage and shutting the trunk. I picked up her two bags.\n\n\"I can get those.\"\n\n\"I've got them. Leave those,\" I added when she started to pick up my bags. \"I'll come back for them.\"\n\nShe started to ignore me, but after she picked them up, she sat them down again. \"Yeah, okay.\"\n\nI led her inside. The huge kitchen was amazing with a polished wood floor, granite counter tops, a six-burner stove, and large stainless-steel appliances. If the house was anything like the kitchen, it was probably amazing.\n\nWe wandered through the house, her bags in my hands, before we decided all the bedrooms were upstairs. \"Which room do you want?\"\n\nShe peaked into each bedroom. The master suit was obvious, but the other three bedrooms all appeared to be the same. \"Any is fine. That one,\" she said, picking the room on the opposite end of the hall from the master suite. I tossed her suitcases onto the king size bed. \"Thanks.\"\n\n\"You're welcome. I'll go get my bags while you unpack.\"\n\nI left her to her task and returned with my own bags. Since she hadn't selected the master suite, I took that. I knew from Brooklyn this was someone's vacation home, but all the clothes had been removed from our closets and drawers, and I wondered where they'd gone. If the owner could afford this as his second or third house, he or she could afford to leave a wardrobe here so they wouldn't have to move clothes back and forth. As I finished hanging the last of my clothes, I smiled to myself. Brooklyn was very good at her job, and she'd apparently thought of everything.\n\n\"I'm finished,\" Virginia said as I stepped out of the large walk in closet.\n\n\"Me too.\"\n\nShe looked around. \"This is some place.\"\n\nI nodded in agreement. \"Yeah.\"\n\nI stepped to the large window overlooking the yard with the salt marsh beyond. There was a long wooden dock, low to the ground, leading from the yard almost a hundred yards to a large garage like structure at the edge of a small river. That must be the boathouse, and I was interested in seeing the boat Brooklyn said was at our disposal. We went back downstairs and explored the house in more depth. The place had everything we needed to keep us entertained, from a game room complete with a pool table and giant television to a swimming pool.\n\nWhat the house didn't have was food. With the exception of some canned vegetables in the pantry, there was nothing in the kitchen, though it was well stocked with high quality cookware and utensils.\n\n\"Looks like we need to go shopping,\" I said as I closed the refrigerator door.\n\nShe looked at me, a bemused smile on her face. \"I guess we should get to it, then.\"\n\nI nodded, grabbing the set of Range Rover keys occupying a bowl on the counter beside the garage door as we left.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Virginia</center>\n\nShelby and I put away groceries in relative silence. I didn't know what to make of him. I'd tried to engage him in conversation several times since he'd picked me up at the airport, but I was having to do most of the heavy lifting. He would answer my questions, his voice friendly and warm, but once he did, he lapsed into silence again.\n\nIt was almost as if he were shy, which was hard to believe considering the way he looked. Standing at least six feet tall, if not a little more, he was a damn good-looking guy. Wearing a loose-fitting shirt and shorts, it was hard to get a good idea of what he looked like under his clothing, but from what I could see, he had nothing to be ashamed of. His bulging biceps and thickly muscled legs certainly hinted that he was packing some serious muscle. Another clue to his power was how he slung my bags around. Though I could carry my bags, they were heavy as shit, but he tossed them around like they weighed nothing at all. Not to mention his bags. It would have taken both hands for me to lift and carry even one of his bags, yet he'd carried both without apparent effort.",
        "In addition to what I suspected was lurking under his loose-fitting clothes, he was sporting a close cropped, neatly trimmed, dark beard that rode just below his cheekbones into a well-trimmed mustache. Not the three-day stubble that some thought passed for sexy either, but a real beard. Combined with his dark, soulful eyes, neatly cut hair in a timeless masculine style, and the deepest voice I'd ever heard from an actual man, I suspected he had to beat women off with a stick. What did he have to be shy about? Despite how he looked, he acted like a bashful boy. He couldn't hold my gaze for very long, and other than answering my questions, we'd spoken little.\n\n\"So, what are we doing for dinner?\" I asked, trying to draw him out again. \"Eating in or out?\"\n\n\"What would you like to do?\"\n\n\"Can you cook?\"\n\nHe smiled. It was a nice smile, his teeth impossibly white against the darkness of his beard. \"Yeah. Want me to make you dinner?\"\n\nI thought about it. That would be a unique experience, a man cooking for me. \"No. Do you mind if we go out? I'd like to relax after my trip.\"\n\n\"If that's what you want to do, but I don't mind cooking for you while you prop your feet up.\"\n\n\"No, that's okay. It's not fair for you to do all the cooking.\"\n\n\"I cook for myself at home, so it's no bother.\"\n\n\"Would you rather eat in?\" I asked, wondering if that was why he was reluctant to go out. I smiled to myself. Maybe he had other plans, though I wasn't going to sleep with him on the first night, no matter how panty dropping handsome he was.\n\n\"No, no. Whatever you want to do is fine.\"\n\nI had to stop myself from rolling my eyes. \"What would you like to do?\"\n\nHe shrugged. \"I'm easy. Anything is fine.\"\n\nI sighed. \"Let's go out then. What do you want?\"\n\n\"Anything. Like I said, I'm easy.\"\n\n\"Okay,\" I said, drawing the word out. \"What won't you eat?\"\n\n\"I'm sure I can find something no matter where we go.\"\n\nI tamped down my rising annoyance. Didn't the guy have an opinion of his own? \"Seafood?\"\n\n\"Sounds great.\"\n\nSomehow, I knew it would. \"Okay, great. Since we missed lunch, I'm starving, how about you?\"\n\n\"Uh, sure.\"\n\n\"You had lunch?\"\n\n\"Well, I grabbed a quick bite while waiting on your plane, but we can still go.\"\n\n\"If you don't mind.\"\n\n\"Not at all.\"\n\n\"Can we take your car?\"\n\nHe paused, then nodded. \"Okay, sure.\"\n\n\"You don't want to?\"\n\nHe snorted out a chuckle. \"No, it's not that. It's just that it's so damned hot down here.\"\n\n\"We can take the Range Rover if you prefer.\"\n\n\"No, the Chevy's okay. I'm sure it'll start cooling off after the sun goes down.\"\n\n\"That's three hours from now, at least.\"\n\nHe grinned. \"Then we'll have a leisurely dinner.\"\n\nWe talked it around until we agreed on a place for dinner. Agreed as in he let me choose. Before we left, he hunted around in the kitchen until he found a garage door opener. With an easy way back into the house, we backed out of the garage, and as we worked our way through town, I realized he was onto something about riding in an air-conditioned car. Still, his Chevy was awesome, and I wanted to enjoy it as much as I could. I could ride in a Range Rover any day.\n\nBy the time we arrived at Drum Island Seafood, we had lapsed into a slightly awkward silence again. We were early for the dinner rush and were seated at a table immediately.\n\n\"So, tell me a little about yourself,\" I said after we'd been seated, still trying to draw him out. I'd agreed to meeting him with the expectation of having a fun and adventuresome month, not sitting around and staring at each other in silence.\n\n\"Nothing to tell.\"\n\n\"Huh-uh,\" I grunted. \"There has to be more to you than you won't fly and used to play college hockey. Did you get recruited for professional hockey?\"\n\nHe grinned and shook his head. \"Nope. Not good enough. But really, that's about all there is. Have you heard of Rockford Tire?\"\n\n\"Yeah, I think.\"\n\n\"My family owns that. I'm the COO, Chief Operating Officer, for the company. I like to restore old cars, and I have about a dozen, and that's about it.\"\n\n\"What does a COO do?\"\n\n\"Make sure the dealers are doing what they're supposed to, make sure the facilities are kept up, that sort of thing. I do the same thing a store manager would, except I do it for the entire company.\"\n\nI waited but he didn't continue. Most guys loved to talk about themselves. \"So that's it?\"\n\nHe nodded. \"That's it. Since my dad started the business, we've been a retailer only, but we're getting squeezed by the manufactures and their corporate stores on one side, and the discounters selling cheap, poorly made, imported tires on the other side. I finally talked Dad into expanding, so we just bought a tire plant Goodyear was closing, and we're going to start manufacturing our own line of off-road tires. Once we get our feet under us with that, we'll begin introducing passenger tires. That one plant can supply all the tires we'll need for the foreseeable future.\"\n\n\"That was your idea?\"\n\n\"Yeah. Been fighting for it for years.\"\n\nAt least he had an opinion on something. \"But he didn't want to do it?\"\n\nHe shook his head. \"No, not really, but we had to do something if we wanted to stay relevant. That should come online in about six months. That's why I wanted to do this now, while I could.\"\n\n\"This?\"\n\n\"A vacation. First one I've taken.\"\n\n\"Ever?\" I asked, trying to keep the shock out of my voice.\n\n\"If by ever, you mean getting out of Bismarck for more than a couple of days at a time to do something fun, yeah.\"\n\n\"How long as it been?\"\n\n\"About fifteen years.\"\n\n\"Fifteen years?\" I asked, unable to keep the shock out of my voice. I had to have a mini vacation after every book or I burned out.\n\n\"Yeah. I started working for Dad when I turned sixteen, mounting tires. I became an assistant store manager while I went to college, a district manager when I graduated, and now I'm COO.\"\n\n\"Wow.\"\n\nHe smiled. \"Yeah. I'm tired.\"\n\n\"Do you even have a life?\"\n\n\"Outside of work?\" He looked down, his eyes suddenly sad. \"No, not really.\"\n\n\"Then you need to relax and enjoy this opportunity,\" I said, feeling a little sorry for him. No wonder he was slightly timid. He was out of practice in having fun.\n\n\"What about you?\" he asked as our meals arrived.\n\n\"Ever heard of Rose Griffin?\"\n\nHe shook his head. \"No. Should I have?\"\n\n\"No, probably not. She's a writer.\"\n\n\"Okay... oh! You're her?\"\n\nI smiled. \"Yeah. Rose is my middle name, and Griffin was my mother's maiden name.\"\n\n\"That's really interesting. What do you write?\"\n\n\"I have a series of books about a female police officer working in Philadelphia. Bridget Nelson? You've probably never heard of her, either.\"\n\n\"No, but as soon as we're done here, I'm finding the nearest bookstore. How many books have you written?\"\n\n\"Under my own name? Six. The first four I'd written as an independent author, but about a year ago I got picked up by Wellington Press. I've written two for them, and they've rereleased the other four.\"\n\n\"That's amazing,\" he said, the admiration in his voice, so different than what I was used to, filling me with a pleasant warmth. \"I may not get all six read before I have to leave to go back to Bismarck, but I can start them. Will you sign them?\"\n\nI snickered. I wasn't big enough yet to go on book tours, but hopefully with the marketing muscle of Wellington Press behind me, that would soon change. \"Sure.\"\n\n\"Great! Thank you. You're the first famous person I've ever met.\"\n\n\"Hardly famous.\"\n\n\"More famous than me, though that's not saying much.\"\n\nWhile we ate, conversation was tough. He was pleasant enough, but he didn't hold up his half of our t\u00eate-\u00e0-t\u00eate, and as dinner began to wind down, I was ready for the meal to be over. If this were a regular date, I'd begin making my excuses to get out of there.\n\nHe paid and escorted me back to his car. The sun was still shining brightly, and it was uncomfortably warm as I sat down on the cloth and vinyl seats. He started the car and over the next half-dozen stop lights, he searched his phone.\n\n\"Here we go,\" he finally said, typing his phone to start the guidance prompts.\n\n\"You read much,\" I asked as we entered the bookstore, trying one more time to get the ball rolling.\n\n\"No. Don't have time. I like to read, though.\"\n\nAnd that was it. With a sigh, I lead him to the mystery section and found my books. They were only available in paperback, but he pulled all six from the shelf without hesitation. We walked to the checkout, he paid, and we were on our way back home. We drove the entire way without a word being spoken as I watched the city pass by. When we reached the house where we were staying, he pulled into the garage, and as soon as he put the car in park, I opened my door and entered the house.\n\nHe followed and shut the door behind me. \"Virginia? You okay?\"\n\n\"Great,\" I said, my voice sharper than I meant for it to be.\n\nI could tell he didn't know how to react to the disconnect between my tone and my words. \"Have I said something to upset you?\"\n\nI rolled my eyes. \"How could you say something to upset me when you won't talk to me?\"\n\nHe held my gaze a moment. \"Sorry. What do you want to talk about?\"\n\nI wanted to growl in frustration. \"I don't know, anything.\"\n\nI watched as he struggled to find something to say. \"You like boats? There's supposed to be a nice one here we can use.\"\n\n\"Really? 'You like boats' is all you've got?\"\n\n\"What do you want me to say?\"\n\n\"Nothing,\" I snapped. \"I just don't get you. I won't bite. Haven't you ever been with a woman before?\" His face turned red, but I couldn't tell if it was in anger or embarrassment, and I hoped to hell he wasn't the thirty-year-old virgin.\n\n\"Yes.\"\n\nI waited but he didn't continue. I gave up. \"You want me to sign those?\"\n\n\"Yes, please.\"\n\nI pulled the books out of the bag, found a Sharpie pen in a kitchen drawer, and quickly signed them, Hope you enjoy the book! Rose Griffin. When I finished, I capped the pen and tossed it back in the drawer.\n\n\"Thank you.\"\n\n\"You're welcome. I think I'm going to turn in early. I've had a long day.\"\n\n\"Okay.\" He looked around. \"I guess I'll sit up and read a little while.\"\n\nNot even a good night kiss. Maybe he is a virgin. \"See you in the morning.\" I stomped up the steps to my bedroom and stripped out of my clothes before stepping into the shower to wash off the day.\n\nI'd signed up on Brooklyn's dating app because I was looking for someone to fill a hole in my life. During our interview, when she'd explained her service and what she offered, I'd explained how I was looking for someone 'normal,' someone that wouldn't be high maintenance like all my previous relationships had been. In the past I'd been drawn to people that 'got me' as a writer, people that tended to be artists themselves, typically writers or musicians. Until the last year or so, I'd been one of the masses of starving artists, barely making it, surviving by waiting tables while sales of my books languished.\n\nI'd sit around with other like individuals, complaining about how our talent was wasted and how if we could just get a break, we'd be rich and famous. I'd never hidden the fact that I wrote with the intent to make money, not for the sake of art alone. When I was as broke as the rest of my friends and lovers, it didn't matter, but now that I had a modicum of success and could support myself with my writing, I found the constant complaints tedious at best and the sniping about how I'd sold out hurtful at worst.\n\nI stood in the shower, allowing the water to pour over me. In the last year I'd moved into a nicer apartment in a better neighborhood, and once I did, I'd slowly lost touch with my group of friends as they subtly began to shun me. I was ready to meet someone new, someone without the baggage of the past, someone that could celebrate my successes without belittling them or being envious.\n\nI'd thought I wanted someone who was 'normal' and 'down to earth,' but I hadn't realized that normal and down to earth were synonyms for 'dull' and 'boring.'\n\nI slapped the shower off, stepped out, and began to dry. Shelby hadn't done anything to drive me away and I was free to leave at any time, so I'd give him a few more days to see if he came around. Worst case, maybe I'd take the Ranger Rover and explore the city and get some ideas for Bridget's next adventure. Maybe I could send her to Charleston on vacation in her next book, and I could use the time to soak up some local flavor.\n\nI stepped out of the bathroom wrapped in a towel. I almost hoped Shelby would be in the room waiting on me, just for the surprise of him doing something unpredictable, but as I suspected, my room was empty. I opened the dresser and pushed aside the three racy pieces of lingerie I'd brought and shrugged into my worn but comfortable sleep shirt.\n\nI dried my hair and snuck out of my room. The light was on downstairs. I paused at the top of the steps and looked down. Shelby was sitting in a chair, a beer close at hand as he read one of my books.\n\nWith a sigh I returned to my room and fell into the wonderfully large and comfortable bed. I'd never slept with a man on a first date in my life, and I wouldn't have with Shelby either, but it would have been nice if he'd at least acted like he was interested in fucking me. I sighed as I played with my phone. It was too early to think about going to sleep, but being alone in my room was better than being around Shelby and the tedium of trying to carry on a conversation with him.\n\nI checked Amazon, reading the new reviews on my books. Finished, I sniffed in exasperation. Friday night in arguably one of the most romantic cities in the south, and I was sitting in my bedroom alone reading reviews of my books on Amazon. I need to start being more careful of what I ask for, because I might get it.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Shelby</center>\n\nThe big twin Mercury Marine inboards burbled as I carefully backed the boat out of its garage into the narrow canal. The boat was amazing, and with its flashy graphics of red and silver over white, it looked like it was doing a hundred miles per hour sitting silent in its protective shed. Once free from the garage, I spun the wheel, turning the craft for Schooner Creek, and beyond that, Charleston Bay. I was going to take it slow and easy until I got a feel for the boat, but once I got Banshee out in the harbor, where I didn't have to worry about hitting anything, I'd see what she had under the hood.\n\nI smiled at Genny, as I learned she liked to be called, as she sat beside me while we puttered along the narrow, curving channel. It was our first time out in the boat, and she was wearing an eye-popping swimsuit. It might be a classic one-piece, but with its deep silver color and striped cutouts on the side to add some flair, it certainly flattered her. Her breasts were probably no larger than average, but on her small frame, they filled out her suit to devastating effect.\n\nIt had been almost a week since I picked her up at the airport. After the first night I was afraid she was going to tell me to get lost and demand I take her to the airport the next day. She'd stomped up to her bedroom, clearly upset with me, though I wasn't entirely sure why. I'd tried to make it up to her the next morning with a breakfast of eggs, ham, coffee, and fresh orange juice in bed, and that had done a lot to thaw her.\n\nAfter she went to bed, since it was so early, I spent the evening reading the first Bridget Nelson mystery. I'd been drawn into the story and had read until almost two. I hadn't finished it, but I'd gotten close, and that afternoon, as we explored Charleston, we'd talked about the book and its heroine. That had thawed her even more. It was clear she wanted someone to talk to, but because I didn't know anything about her or her interests, finding something to talk about had been difficult the first day. I couldn't imagine she wanted to talk about the retail tire business, and so far, that had been my life.\n\nHaving almost completed the first of the six books gave us something in common I could latch onto. Once the ice was broken, I discovered other things about her. I didn't pry, but as I got more comfortable around her, I was able to pick up on little things to help me fill in the mystery of Virginia McKay. I'd discovered she was close to her mother but estranged from her dad, she liked animals, and she had a weakness for ice cream. I could see a lot of Bridget Nelson in Genny McKay, or maybe it was the other way around, and there was a lot of Genny in Bridget. I smiled as I thought about Genny's heroine. While they seemed to share a lot of personality traits, there was one big difference. Bridget was five foot ten, a black belt in Jujitsu, and could kick ass with the best of them.\n\nWe'd spent the day touring Middleton Plantation and finished the day with a ghost and graveyard tour that night. The tour guide had done a good job building suspense with eerie tails, and Genny had hung on my arm. That night I felt confident in offering her a good night kiss, and that seemed to please her. Later in my room, I'd finished the first book and started the second. It was during the second book that I began to really see the similarities between Genny's fictional hero and the woman behind the computer that brought her life.\n\nThe third night, after a day with a horse drawn carriage ride though the historic parts of Charleston and a ferry ride through the harbor where she'd been delighted to see a pod of dolphins cavorting with the boat, I'd kissed her good night with a little more passion, though I didn't try to take her to bed. I couldn't be sure, but she'd seemed a little disappointed when I left her at her room after the kiss.\n\nWomen were complicated creatures and I'd never had much luck with them. Hell, I was a year out of college before I'd lost my virginity. If I came on too strong, I got slapped down for being a horn-dog. If I held back, as I had with Genny, and treated them with courtesy and respect, I'd often get the feeling they thought I wasn't interested in them, and sometimes even worse, not interested in women in general. It was a delicate balancing act, and I'd fallen often. Her sneering comment about not being with a woman before had stung, but it was uncomfortably close to the truth. It was embarrassing that at twenty-eight I'd only been with two women before Genny, and I was a bit self-conscious over my lack of bedroom skills.\n\nI looked at Genny again and couldn't help but smile. She was an amazing woman, full of life and passion, and so completely different than me. When we reached the much wider Schooner Creek, I cracked the throttles open a little more and Banshee responded. She was obviously a responsive craft and was begging for me to set her free.\n\nGenny and I had gotten off to a rocky start, but things were improving. The fourth night, while watching Mother Nature's light show during a thunderstorm, I'd taken her lips for the first time outside of a good night kiss. As the storm raged outside, a storm of passion and desire had engulfed me. When she'd moaned softly as I kissed her neck, I'd asked her to my bed, and I'd done my best to make sure she had no complaints, focusing on her pleasure above my own. The next morning I'd brought her breakfast in bed again, and that combination seemed to have finally cleared the tension between us.\n\nShe was so incredibly beautiful and sexy, and the only thing I wanted to do was spend the day in bed making love to her, but I'd kept those thoughts buried deep. The first of my two other relationships had ended on the rocks when my then girlfriend left me because, as she said, 'You're nothing but an oversexed pig who doesn't care about my feelings!' It wasn't true, but balancing work and my social life had been difficult. Despite my best efforts, she'd felt neglected and claimed I cared more for work than I did for her.",
        "The accusation had hurt, probably because I knew it was a least partially true, and when I'd met my second girlfriend, I'd made sure to try to do things with her and not be so focused on sex. Our relationship had started out great, but over the next several months it had withered and died, and she'd left me for another man. Someone, she said, 'who makes me feel wanted for more than a friend.'\n\nIt'd been almost a year since I'd felt the touch of a woman. I'd had friends try to fix me up, but I'd rarely gotten past a second or third date. I sometimes felt like I was cursed with the dreaded 'he has a good personality' or 'he's a nice guy' stigma, and Rockford Tire was getting to be ever more of a problem, consuming more and more of my energy and time.\n\nThat was the past, but it was part of the reason why I'd contacted Brooklyn. I'd found out about her through someone who had used her services and was very pleased with the result. Her fees were ruinously expensive, but he'd assured me she was worth every cent. I clearly needed help selecting someone compatible, and I had to get away from the office. All I knew was work, and I was burning out.\n\n\"You okay?\" I asked, pulling my thoughts back to the present.\n\n\"Sure, why?\"\n\nI shrugged. \"No reason. Just asking.\"\n\nShe smiled at me in that way she had. Things were better between us, but not great. We got along okay, and the sex was good, but there didn't seem to be any spark. Worse, I didn't know what was missing. She was fascinating, and I wanted to know more about her, but I could feel her slipping through my fingers, as every woman I was interested in had before.\n\nWe'd done everything she'd wanted to do, but it was almost as if she was looking for something in me that I wasn't providing, and I felt like I was running out of time to discover it. I hoped taking her out on the boat for a little excitement would give me a clue about what I was missing.\n\nWe burbled out of the creek into the open expanse of the harbor. \"Shall we see what she can do?\"\n\n\"You know how to drive this thing, right?\" she asked, her voice telegraphing her nervousness. She could clearly sense the power the boat had and the danger it presented if not treated with respect.\n\nI'd driven boats before, but never one this large or powerful. \"Sure,\" I said with more confidence that I felt.\n\n\"Then, yeah, let's go.\"\n\nI rapidly advanced the twin throttles and the dual seven hundred horsepower inboards roared, catapulting us forward. The supercharged engines screamed as we pounded across the water, and I knew immediately where the boat had gotten her name. Had I been anywhere other than the wide expanse of the harbor I would have immediately throttled back, but with plenty of space to let her run, I gave Banshee free rein.\n\nWe wailed across the harbor, clearly the fastest thing on the water. I was concentrating, not wanting to kill us through a stupid mistake, but I took the time to glance to Genny. She was beaming, her hair whipped by the wind. I glanced down at the control console, and my eyes opened slightly wider. If the speedometer was accurate, we were doing eighty-six miles an hour across the water. That was fast, far faster than I'd ever gone in a boat before, but it felt like a million.\n\n\"This thing is fan-fucking-tastic!\" she called to be heard over the screaming bellow of the engines.\n\n\"I might have to buy one of these!\" I shouted in return.\n\nI gave the same boat we'd rode earlier in the week plenty of room as we howled past, Genny clearly enjoying all the eyes on her as we passed in a blur. It was difficult to be heard over the roaring engines and whipping wind, but she didn't seem to mind, and I was having the time of life. I'd been into cars my entire life, but after this, I might have to check out powerboats. I stayed in the harbor as I gained confidence with Banshee, getting a feel for her. She felt like a sturdy, easy-handling craft, and I pulled the boat into a long, sweeping, full-power turn around an island and headed for the ocean. I felt comfortable enough now with the boat to venture out of the harbor, as long as I kept the coastline in sight.\n\nWe roared north, Banshee skipping over the waves with ease. At almost ninety miles an hour, it didn't take long for us to reach our destination. I pulled the throttles back and we rumbled around the north end of Cape Island and crept along the natural channels as I kept a close watch on the depth gauge. The last thing I wanted to do was ground us. Once we were well inside the estuary and away from the ocean, I switched the engines off. The silence was complete.\n\n\"That was something!\" Genny gushed as she stood.\n\nI smiled, glad she was pleased. \"Yeah. This thing is wicked fast. We were doing nearly ninety.\"\n\n\"That's all?\" she asked. \"It felt like a lot faster.\"\n\nI nodded. \"That's all, but you're right, it felt a lot faster. You want to drive back?\"\n\n\"No, that's okay,\" she said as she shook her head, but I could see a yearning in her eyes. I made a mental note of another thing we had in common, and I'd bring it up again when we were ready to leave.\n\nShe threw a towel onto the sundeck and stretched out on her stomach. I knew what was expected. I spread her back with sunscreen, slowly working my way down her arms and legs as I did. The feel of her smooth skin under my hands and the way the oil made her glow in the sun gave me a raging erection. I wanted her so badly, but I remembered my past failure and restrained myself. It was unlikely we'd be seen, but this wasn't the time or place, and we'd made love last night.\n\nI picked this spot, a bird sanctuary, because of her love of animals. We spent the next hour with her sunbathing on the rear deck and admiring the uncountable birds as Banshee floated silent and still. We saw a lot of wading birds from the house, especially when the tide was going out, but here the shallows and trees were thick with them.\n\nAs she continued to soak up the sun, I went below to prepare lunch. We cooked together at the house, but this was my treat and there was only room for one in the tiny galley anyway. I prepared a light lunch of cold, thinly sliced, turkey topped with cucumber slices, lettuce, and a drizzle of Ranch dressing, all wrapped up in a tortilla. It was too hot for anything other than cold sandwiches. Wraps finished, I pulled a pair of beers from the small refrigerator, picked up the two plates in one hand, the beers in the other, and started abovedeck, pausing to glance again at the bed tucked into the bow of the boat, dreaming of what I'd like to do to her there.\n\n\"Lunch is up!\" I called as I climbed the short, steep, staircase.\n\nShe sat up and smiled. \"Thanks, but let's eat below. It's too damned hot to eat up here in the sun.\"\n\nI almost wilted in relief. \"Thank God!\"\n\nShe giggled as she slid off the sun deck and followed me below, bringing her towel with her so she wouldn't get sunscreen on the cushions. I started the generator and the air conditioning, sighing in relief as the wonderfully cool air began to flow.\n\n\"Good,\" she said after taking a bite of her wrap.\n\n\"I slaved over it.\"\n\nAs we ate, we talked about the boat ride, the birds we'd seen, the progress of her tan, and other trivial matters. It was wonderful. We cleaned up, a simple matter of throwing everything into the trash, before I killed the generator and the air conditioner with it.\n\n\"Ready to drive back?\"\n\nI could see the eagerness in her eyes. \"No, you probably should do it.\"\n\n\"How about this,\" I began. \"I'll get us out of here, but once we're out in the ocean, you take over?\"\n\nShe licked her lips, clearly wanting a chance to try her hand. \"I don't know. I've never driven a boat before.\"\n\n\"Come on, you can do it,\" I said as I started the engines. \"Once we're out in the ocean, what can you hit?\"\n\nShe beamed. \"Okay, sure. You get us out of here, though.\"\n\nI spun the wheel and juiced the throttles to get us turned before pulling them back to just above idle. \"Great. Leave me to explain to the owner how I wrecked his boat,\" I grumbled but smiled at her to show I was teasing.\n\n\"You got it in here, you can get it out.\"\n\nI slowly worked the boat back to the ocean, piloting it until we were three or four hundred yards off the coast before I stepped aside, holding the wheel until she took my place.\n\n\"Just like a car, except there are no brakes, and just like in a car, the faster you're going, the gentler the turns. There's the throttles. Let her rip.\"\n\n\"Stay close,\" she said as she slowly advanced the throttles, causing Banshee to gently pick up speed.\n\nI stood behind her, her back against my chest. I didn't expect her to have any trouble, but it was a good excuse to stand close to her. She quickly gained confidence, and well before we reached the Charleston harbor she was at full power. We wailed past the harbor entrance, never slowing, the tall rooster tail from the engines marking our passage.\n\nWe pounded along the coast for over an hour before she pulled the boat into a long sweeping turn to return us to the harbor. I smiled as I watched her control the boat, the craft making her even more alluring, and she doing the same to it. It was entirely coincidental, but the silver of her swimsuit was almost the exact color of the silver graphics on the boat, making her seem part of the machine. I could have watched her pilot the boat all day, but the twin Mercury Marine racing engines were thirsty beasts and we didn't want to run out of fuel.\n\nShe kept control of Banshee until we reached the narrow, unnamed channel that led to the house, where she turned the controls back over to me. I tried to talk her into keeping the boat all the way home, but she proved she was smarter than me because I nearly hit the garage trying to return the boat to its garage in the narrow channel.\n\n\"That was so much fun,\" she purred as I tied the boat off and lowered the door to secure the building.\n\n\"Yes, it was. I'm glad you had a good time.\"\n\n\"I did.\"\n\nThis house was amazing, and it had everything, including its own fueling station for Banshee. There was no fuel tank visible in the boat garage. I assumed it was located somewhere ashore, probably so if it leaked it wouldn't foul the waters. Putting the holding tank somewhere near the house would also make replenishing the tank more convenient because the delivery guy wouldn't have to drag a hose to the boat garage or drive across the lawn. I started the pump and filled Banshee from the hose hanging in neat loops on the wall as we talked about the day. Banshee secured and fed, I reversed the pump to empty the line before we started for the house. Taking her hand, we ambled along the long wooden walk, the tide water lapping at the pilings. I glanced to the south, watching as the clouds built. It rained a lot in Charleston, a thunder boomer arriving almost every day. It didn't matter if it rained now. We were back home. I was unlocking the door when I heard the first rumbles of distant thunder.\n\n\"Looks like it's going to rain... again,\" I said as I pushed the door open and stepped back for her to enter.\n\n\"Yeah. Let's stay in tonight. I don't feel like getting out in the rain.\"\n\n\"Okay. I'm sure we can find something to eat.\"\n\n\"I'm sure,\" she murmured as she turned to me and melted into my chest, \"but there's something else I want to do first.\"\n\nI smiled down at her, my heart thudding in my chest. \"Oh? What?\"\n\nShe stretched up. \"I think you know what,\" she breathed as I lowered my lips to hers.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Virginia</center>\n\nI lounged by the pool on a chaise, my eyes closed with my face turned up to the bright South Carolina sky. I'd have a terrific tan by the time I got home. I'd even bought another bathing suit, one that showed a lot more skin to maximize my tanning, though I only wore it around the pool.\n\nAs I soaked up the sun, Shelby sat to the side in the shade of a pool umbrella he'd found inside the pool house, wearing only a bathing suit and reading one of my books. I'd never seen a guy sweat so much. He never complained about doing things outside with me, but he had to be miserable.\n\nWhen I'd first seen him without his shirt on, I'd had to work to keep my jaw from dropping open. He was a real looker, with a sculpted chest to go with the beefy arms I'd noticed the first day. His stomach was flat, and though he didn't have a six-pack of abs, I could tell there was some serious muscle there as well. I also liked the fact he wasn't vain about his appearance, almost like he didn't realize how mouthwatering he was.\n\nI didn't think he was ever going to ask me to bed. When he'd kissed me the second night, he'd kept it sweet and innocent, a perfect ending to a terrific day. The next day he'd held my hand, but at no point had he gotten grabby, and when he'd kissed me good night for the second time, I'd relaxed around him enough, and felt safe enough, that had he asked, I'd have let him take me to bed. I was a little disappointed he hadn't asked, but I'd already figured out he was a slow mover.\n\nThat was surprising, considering how he looked. I'd also discovered he had the goods in the bedroom. He was a gentle lover, well equipped to please a woman, and he always made sure I was well satisfied. I couldn't figure out why he was so... reserved... for the lack of a better word. He should be an arrogant ass like most men who were rich and good looking, but he wasn't.\n\nNot only was he wealthy and handsome, he was also competent in everything he did, both in the bedroom and out. Our first night together he'd sent me soaring with his lips and tongue before finishing me off with a slow and gentle love making that left me relaxed and smiling as I fell asleep in his arms. In addition to his bedroom skills, he'd handled the Banshee like he'd been piloting her for years, taking her into places I'd have been terrified to try to go, and when his Chevy wasn't running properly, he'd quickly diagnosed the problem, and with nothing more than a small screwdriver, and fifteen minutes of tinkering, he'd adjusted something so the stumbling, sluggish performance when puttering around town disappeared.\n\nI liked Shelby, and he was a truly nice guy. He was unfailingly polite to everyone, and he treated me with kindness and respect. Good looking, kind, good in bed, handy with tools, raved about my talent and books, and he could cook. He was perfect. Or should have been. I sighed to myself. I should be holding him tight, with claws and fangs bared at any woman who glanced his way, but I wasn't.\n\nI'd thought I'd wanted someone who was low maintenance, and I'd gotten that, but I was missing the ardor of my other lovers. Yes, sometimes they hurt me or pissed me off with their self-centered, and occasionally uncaring, attitudes, but there'd been passion. Shelby was so... accommodating. He was completely unflappable, even when he had every reason to be mad.\n\nThe first night, when I'd questioned his manhood, rather than verbally slap me down or telling me to take a hike, he'd brought me breakfast in bed the next morning. It made me feel like a shit for what I'd said, but he'd seemed to have forgotten about and I didn't bring it up again. He'd since proven me wrong, but just once I'd like him to have some fire. I was enjoying the hell out of his slow, gentle, attentive love making, but for a change, I'd like him to pull me to him, rip my clothes off, and fuck the shit out of me.\n\n\"I found a typo,\" he said, smiling at me over the top of my fourth book.\n\nI opened my eyes and rolled my head to look at him. \"Where?\"\n\nHe rose from the chair and brought me the book, pointing to the page with his finger. \"Right here. 'Marti said shed picked up the gun...' instead of 'Marti said she'd picked up the gun...'\"\n\nI felt the prick of annoyance. \"Well, shit.\"\n\nHe chuckled. \"Don't worry about it. I know what you meant.\"\n\n\"Still, it pisses me off. The editors are supposed to catch stuff like that.\"\n\nHe shrugged and began to return to his chair. \"It happens.\"\n\nWhen he turned to sit, I saw his eyes flick up as he looked past me toward the marsh. I turned and saw a guy walking toward us down the plank walkway from the boat garage. Shelby frowned as he closed the book and placed it on the table. I'd heard the buzz of a boat but hadn't paid it any attention. There was plenty of boat traffic in the canal, and after two weeks I no longer noticed it. I sat up, so I could see better, and noticed there was a drab green Jon boat tied to the side of the boat garage.\n\n\"Who's that?\" I asked as the man continued to approach.\n\n\"I don't know. Can I help you?\" Shelby called, walking toward the man as the newcomer stepped into the yard.\n\nI rose and followed. I couldn't imagine it was the owner, but it could be someone the owner knew, and I wondered if we'd done something wrong and our vacation was going to be cut short.\n\n\"Yeah, sorry to bother you, man. Kevin Stutton, nice to meet you,\" the man said, extending his hand as he approached us.\n\nKevin was a big guy, a little taller than Shelby, and though he had a hint of a gut, his big arms and broad chest suggested he was a man that did heavy physical labor. He was probably a little younger than us, perhaps in his early to mid-twenties, and was wearing only a swimsuit and some flip-flops. He wasn't a bad looking guy with his dark hair and eyes, but something was off about him. He was too frenetic, his body in unceasing motion, and he was constantly glancing around, like he was looking for something.\n\n\"Nice to meet you, Kevin,\" Shelby said, taking the guy's hand, \"but this is private property.\"\n\n\"Yeah, yeah, sorry man, sorry. I need some gas. You got some gas I can buy?\"\n\n\"Gas?\" Shelby asked.\n\n\"Yeah, for my boat,\" Kevin said, jerking a thumb back toward the marsh. \"I'm about out.\" He turned his attention to me and extended his hand. \"Hi! Kevin Stutton! Nice to meet you!\"\n\nI took his hand but said nothing. He was giving me the creeps with the way he was looking at me. If Shelby weren't there I'd consider fleeing and locking myself in the house.\n\n\"Yeah, I think I can spare a gallon or two. Come with me,\" Shelby said, motioning toward the boat garage. He started toward the walk, but after a couple of steps, realized Kevin wasn't following. \"Kevin? You want the gas or not?\"\n\nKevin finally tore his gaze from me. \"What? Oh! Yeah! Sorry. Yeah.\"\n\nThe two men walked away as I watched. I didn't like Shelby being alone with Kevin. I imbibed in nothing harder than alcohol, but I'd seen more than my share of drug use among my former friends. Kevin was clearly on something, probably crank or speed. I knew that shit made people nuts sometimes, and I'd had two friends go completely batshit crazy on a bad speed trip.\n\nA few years ago, at a party with friends, a couple took a large hit of speed before going into the bedroom. They'd done it before, so they could fuck longer, harder, and with increased intensity, but this time the stuff must have been cut with something nasty. While they were fucking their trip had gone bad, and what had started out as cries of pleasure had ended up in screams of rage and pain. When a couple of the guys there pulled them off each other, Josh had a pair of scissors buried in his side, Megan had been bleeding badly after being hit in the head with a lamp, and Megan had Josh on the floor trying to gnaw a hole in his shoulder as he repeatedly stabbed her in the back with the remains of the lamp. I hadn't been there when it happened, but I'd seen the results when I visited them in the hospital. I'd never done drug before, and seeing that was enough to ensure I never would.\n\nAs I watched, Kevin stepped off the walk into his boat, did something I couldn't see, and handed up a large red can. Shelby took it and disappeared into the boat garage. The moment Shelby was inside, Kevin hopped back up onto the walk and started walking toward the house. That made me very uncomfortable, and I turned to go inside and lock the door.",
        "When Kevin was about halfway to the yard, Shelby stepped out of the garage, gas can in hand. \"Hey!\" Shelby called. \"Hey, Kevin! Here's your gas! Kevin! Stop!\"\n\nI slowed, halfway between the pier and the house, watching as Kevin kept coming, oblivious to Shelby's call. Shelby put the can down and started after Kevin, trotting to catch up. Shelby caught up with Kevin at the edge of yard and took his arm.\n\nKevin snatched his arm away. \"Don't touch me! I don't like to be touched!\"\n\n\"You need to take your gas and go,\" Shelby said, his voice firm as he pointed down the walk.\n\n\"Okay, yeah, okay. I'm just going to say goodbye to\u2014\"\n\n\"No, you're going to get out of here.\"\n\nKevin started toward me again, but before he completed a step Shelby took his arm again and pulled him to a stop.\n\n\"I said don't touch me!\" Kevin screamed, pushing Shelby.\n\nShelby backed off, holding up his hands. \"You need to calm down,\" he said, his voice hard.\n\n\"I'm just going to say goodbye to that fine piece of ass you're fucking and then I'll\u2014\"\n\n\"That's it,\" Shelby growled, cutting Kevin off and talking him by the arm again. \"You either get the hell out of here or I'm\u2014\"\n\nWith a snarl, Kevin turned and drove his fist into Shelby's face, causing Shelby to stumble back a step and fall. \"You'll what, you fucker?\" Kevin sneered as he kicked Shelby hard in the side.\n\nI heard the thump of his foot connecting with Shelby's ribs, and Shelby's hard grunt, from fifty feet away. I stood in mute horror, unable to comprehend what was happening as Kevin turned from Shelby before reaching into his swimsuit and pulling out his erect penis.\n\n\"Come here, you bitch! I want to say goodbye!\"\n\nKevin started toward me, slowly stroking his cock, but before I could shake myself out of my frozen shock and run for the house, Shelby staggered to his feet behind Kevin, blood pouring from the corner of his mouth. There was death his eyes as roared and lunged at the other man, wrapping his arm around Kevin's throat as he drove him face first into the grass.\n\nI stood with my hands covering my mouth as I stared in shock and dismay. I wanted to help but I was helpless, frozen in fear as Kevin bellowed, reaching behind him to claw at Shelby's face as Shelby rode his back, holding him down. They rolled, coming to a stop with Shelby on his back, Shelby's arm still locked around Kevin's throat. Kevin was pinned, his back against Shelby's chest, as Shelby wrapped his legs around Kevin and held him fast. Kevin roared again, the men's muscles bulging as they strained against each other, Shelby's teeth bared in pain, effort, and rage.\n\nSuddenly Kevin relaxed, clearly beaten, and after a moment, Shelby released him and shoved him away. The two combatants tumbled to their feet and faced each other.\n\n\"Get the fuck out of here before I call the cops,\" Shelby panted.\n\nI couldn't believe it, but rather than accept his defeat and do as he was ordered, Kevin shoved his swimsuit the rest of the way down and began to rapidly stroke his cock. \"Come on, you fucker! You want to fight? I'll cockfight you! I'll fuck you in the ass and your bitch too!\"\n\n\"Put your pants on, you crazy son of a bitch, and get the fuck out of here!\"\n\n\"Come on, you limp dicked motherfucker! Let's fight! I'll fight you with my dick before I bury it in her pussy!\"\n\n\"Genny, go call the cops,\" Shelby ordered, never taking his eyes off Kevin.\n\n\"Come on, you pussy!\" Kevin bellowed as he charged Shelby.\n\nShelby set to take Kevin's charge, but Kevin powered through him, lifting him with an enraged roar and driving him off the edge of the yard and into the swamp beyond. The tide was going out, so they landed in the muck with a squishy splash. I was again frozen, unable to move as the men roared and bellowed like bull elephants as they tumbled briefly, each fighting for advantage. They broke apart and staggered to their feet, completely covered in the slimy, clinging mud, moving clumsily as they sunk almost to their knees in the thick, quicksand-like mire.\n\nShelby lunged at Kevin, throwing a hard right that staggered the other man and caused him to fall back. Shelby struggled after him, throwing himself on the other man and taking him into a headlock. They grappled, grunting and straining, as they battled each other and the mud that slowed and hindered their movements.\n\nKevin slipped Shelby's hold, the mud making them slick, and grabbed Shelby by the throat, Kevin's eyes wide and bulging in his drug fueled rage. Shelby fell to his back, bent at the knee, unable to free his legs from the mud in time to back away. In desperation, Shelby grabbed Kevin's throat, their arms bulging in effort as they tried to choke the life from each other. They lay frozen and silent, their teeth bared, muscles straining for a long moment before with a mighty thrust of Shelby's hips, they rolled, burrowing deeper into the mud. Now on top, Shelby threw himself back, breaking Kevin's grip on his throat and sucking in a great lungful of air.\n\nFree from Kevin's grasp, Shelby lunged at his opponent again, leaning over him and kneeling between Kevin's legs. \"You're... not... fucking... touching... her,\" Shelby snarled, each word punctuated by a hard blow to Kevin's face.\n\nKevin tried to rally, hauling his opponent down to his chest to protect himself from Shelby's fists as he threw one, two, three hard punches into Shelby's side. They spun and squirmed as they kicked, punched, and clawed at each other, grunting and snarling as they sunk ever deeper into the quagmire. With every rolling tumble, the man on bottom was in more danger of drowning as they churned the mud into a thick soup that wouldn't support their weight.\n\nThey stopped rolling with Shelby on top. He grabbed Kevin by the face and forced it under the liquified mud. Kevin scratched and clawed, becoming more and more frantic as Shelby held his head under, Shelby's face twisted into a mask of rage, hate, and pain. I was beginning to panic, afraid Shelby was going to kill his foe, when he jerked Kevin's face out of the muck and staggered back, pulling him up by the hair. Kevin was wobbly as Shelby drew back and fired a right into Kevin's face, mud and blood flying from the impact. Kevin fell back before he slowly rolled over and tried to rise again. Panting, Shelby grabbed Kevin by the hair again, hauled him up while turning him to face him, and delivered another crushing blow as he bellowed.\n\nKevin dropped into the mud like a sack of potatoes as Shelby panted, watching him. Kevin was moving, but feebly. \"You wanted a fight?\" Shelby sneered, grabbing a handful of mud and throwing it into Kevin's face. \"What do you think of the idea now, you crazy fuck?\"\n\nStill panting, Shelby slogged around behind Kevin, the sucking mud squelching with every labored step, grabbed him under the arms, and hauled him out of the marsh and dropped him on to the grass. From the first blow until Shelby dragged Kevin out of the mud, the fight had lasted less than five minutes. Kevin was trying to rise as Shelby hoisted the man to his feet and started dragging him toward his boat. Kevin tried to walk, but his legs weren't working very well. I followed, and when they reached Kevin's boat, Shelby unceremoniously dumped him into the bottom, the resulting thud sounding painful with Kevin's soft cry confirming it.\n\n\"Sorry, man, sorry,\" Kevin muttered as he struggled to climb onto one of the boat's seats, wiping mud from his face.\n\nShelby said nothing, dropped the gas can into the bottom of the boat, and shoved the boat out into the canal. As the outgoing tide carried it away from the garage, Kevin slowly began to hook the gas can back to the outboard. He was well away when he pulled on the starter rope to start the engine, and then motored slowly away.\n\nShelby had been standing straight and tall, watching until Kevin started the motor, but as soon as he was out of sight around one of the many turns, he slumped sideways.\n\n\"Fuck,\" he grunted, hugging his side where Kevin had kicked him.\n\nShelby might be covered in blood and mud, but I'd never seen a sexier man. \"Are you okay?\" I murmured, my hands fluttering around him with my desire to touch him, but I was afraid I'd hurt him more.\n\n\"Yeah. The asshole tried to loosen a few of my ribs, though,\" he hissed.\n\nI nodded, wrapping my arm around his waist for support as I helped him back to the house. If he started to fall, there was no way I could hold him, but I wanted to help him as much as I could. \"Should we call the cops?\" I asked as we made our way slowly to the house.\n\nHe shook his head. \"No. What are they going to do now?\"\n\nI was going to take him directly inside, but he pulled me to garage where I washed him off with a garden hose first. Except for what had happened, it would have been humorous watching him stick the hose into his swimsuit to hose out the mud. Once most of the mud had been washed off, I led him inside and directly to the bath. I stripped with him, joining him in the large shower so I could carefully bathe him.\n\nAs I gently scrubbed him, I was amazed at how suddenly my perceptions of him had changed. What I'd thought was a lack of passion I now saw as thoughtfulness, and his reserved nature as restraint. Unlike so many in my past, he wasn't bothered by trivial matters, allowing little things to roll off him, but when it really mattered, he'd more than risen to the challenge. I couldn't imagine any previous lover fighting for me as he had. I warmed as I remembered him pounding Kevin's face into a pulpy mess, clearly explaining with every punch why Kevin was getting his ass kicked. It wasn't because Kevin had hit Shelby, it was because he'd threatened me.\n\nShelby was perfect. Kind and thoughtful, yet willing to fight for what he thought was important. As the last of the dark mud gurgled down the drain, I slowly turned him and snuggled into his chest. His arms surrounded me, holding me close as I carefully placed my head against his shoulder. We stood together, saying nothing, each of us lost in our thoughts, until the water ran cold.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Shelby</center>\n\nI swam up from the darkness of sleep. Genny was snuggled into my side, still sleeping, the warmth of her body a continued comfort. The ruddy glow of early morning was lighting the bedroom windows, but I was far too comfortable to consider leaving her alone in the bed. I was still a little achy and sore, but last night I'd felt able to get back in the saddle. Genny had taken the opportunity and tried her best to fuck me to death.\n\nFour days had passed since the incident with Kevin who's-his-fuck. Whatever spark that had been missing between Genny and me had certainly flared last night, and the inferno that resulted had threatened to burn the bed to the ground.\n\nAfter she'd bathed me, I'd tried to keep moving, knowing from my hockey days that if I didn't, I'd be sore as hell the next morning. Unlike the fights I'd had while playing hockey, when Kevin tried to kick my ass, I wasn't wearing protective pads, and moving hadn't helped much. As I slowed down, she'd insisted on preparing dinner alone, doting on me, trying her best to make me comfortable. That night, after turning in early, she'd taken my manhood into her mouth. Despite some over the counter pain killers, I'd tried to beg off, too fucked up for fucking, but she'd invited me to lay back, relax, and enjoy the ride.\n\nFor one brief instant, as I peaked in pleasure, all my aches and pains disappeared, her soft, warm mouth a far better pain killer than any pill could ever be. The relief was short lived but welcomed, and afterwards, as she curled up in my arms, the warmth of her body against mine leeched some of the discomfort from me.\n\nThe next morning, as I'd groaned awake, she'd give me another 'treatment,' and as I stood in the shower under cold water, trying to ease my misery, she'd prepared breakfast. The rest of the day I'd stayed inside out of heat, and I'd gotten another 'treatment' around noon, and a third one at bedtime.\n\nBy the next day, though I was still one big bruise, some of the soreness was leaving and I was more mobile. I was sure something had changed between us. She'd suddenly become more of a cuddler, and she was looking at me differently. She'd softened and was touching me far more often than she had before the fight.\n\nSince I was feeling better, we'd snickered about the fight, wondering how Kevin had explained showing up wherever he arrived, wearing nothing but mud, blood, and bruises. We dreamed up outrageous ideas, like mailing his swimsuit to him with an enclosed note telling him he'd forgotten them when he left, or sending him a rooster so he could have his cockfight, that caused me to hurt from laughing. Something magical was happening between us, and I gladly suffered the aches. That night, after I received my 'treatment,' I'd felt ready and able to give her one in return. I wasn't up to making love to her, my ribs still too tender for a lot of energetic moving, but my busted mouth was much improved.\n\nThe next day we'd gone out, enjoyed an ice cream and our time together as we strolled through old Charleston, going nowhere and not caring. She'd always let me hold her hand, but for the first time she tucked in close to my side. Having her so close made the already hot day even hotter, but I could have stood on the surface of the sun if it meant having her arm looped inside mine while holding my hand, her outside hand rested on my bicep as she rested her head against my shoulder.\n\nLast night, after we'd turned in, our passions had exploded into life as we ravaged each other. We'd made passionate love long into the night as our cries of pleasure filled the room, and I'd never had a more intense sexual experience. After she'd fucked me to a brain melting orgasm, she hadn't been satisfied and had kissed and licked me back to full hardness. When I'd orgasmed again, coming so hard my ribs screamed in protest as I shuddered through the hardest climax of my life, she'd tried to revive me a second time. I couldn't stay hard, but I'd managed to finish her with my fingers, lips, and tongue.\n\nI'd never heard a woman wail in orgasm before, but she had last night as we climaxed together during my second orgasm. It was the single most erotic thing I'd ever experienced, and I wanted to hear her again and again. I tucked her in close as I sighed into her back. Something was changing between us, and whatever it was, I didn't want it to stop. Sleep began pulling at me. I kissed her softly on the shoulder as I allowed the darkness to take me. I was smiling as I slid back into sleep. Never had someone trying to beat my ass been so worth it.\n\n<center>-oOo-</center>\n\nMy ringing phone pulled me out of slumber. I slapped for it as I glanced at the clock. It was my regular ten o'clock call from the office. I groaned as I lifted the phone to my ear. Normally we were up by now, but after last night's late and strenuous workout, we were slow to rise this morning.\n\n\"Shelby.\"\n\n\"Mr. Rockford, are you ready for your ten o'clock?\" Janice, my assistant, asked.\n\n\"Yeah, go ahead,\" I grunted, rubbing my eyes with my free hand.\n\nI spent twenty minutes on the phone discussing the upcoming plant take over, the progress of the design of our new line of tires, new tire disposal regulations being discussed in Congress, and other matters related to running Rockford Tire.\n\nWhen I hung up, Genny was looking at me. \"You're supposed to be on vacation.\"\n\n\"I am.\"\n\n\"Taking a phone call from work every day isn't a vacation.\"\n\n\"It's only twenty or so minutes a day.\"\n\nShe kissed me on the chest. \"Unless there's a problem. Why do you let them take advantage of you like that?\"\n\n\"They're not.\"\n\n\"No? We've been here three weeks and you've taken at least one phone call a day since we've been here.\"\n\nI nodded. \"I know, but there's nothing I can do about it.\"\n\n\"Yes there is. You're the COO, for God's sake, not to mention the owner's son. You tell them to stop calling you. What are they going to do, fire you? I don't think so.\"\n\n\"Yeah, maybe, but Dad works more than I do.\"\n\n\"That's his problem, not yours.\"\n\nI could tell she was upset. \"I'm sorry.\"\n\n\"Don't apologize. It's my fault. We've only got a week left, and I feel like I've wasted so much time. I don't\u2014\"\n\n\"Wasted time? What do you mean?\"\n\nShe hitched herself higher in the bed and kissed me softly on the lips. \"I... wasn't fair to you. Everything I thought I knew about you has been wrong.\"\n\nI frowned, unsure what she meant. \"I don't understand.\"\n\nShe swallowed hard and snuggled back into the crook of my arm, her head resting on my chest. \"I made some assumptions about you, assumptions that were wrong,\" she said softly. \"This week, I've seen you as you are, not as I assumed you are.\"\n\n\"What changed?\"\n\n\"I did.\"\n\n\"How?\" She shrugged but said nothing. \"Please tell me. I'd really like to know.\"\n\nShe was quiet for a long moment. \"I thought you were kind of dull and timid,\" she said, her voice soft and full of sadness. \"You never stood up for yourself, and because nothing ever seemed to bother you, that made you seem...\"\n\n\"Weak?\" I provided when she didn't continue.\n\n\"I'm sorry,\" she whispered.\n\n\"Look at me,\" I coaxed, gently prodding her until she rose and met my gaze. She had tears in her eyes and my heart went out to her. \"It's okay.\"\n\n\"It's not okay!\" she exclaimed as she looked away, her voice hard. \"This is what I'm talking about! You're so damned understanding. I thought that made you, I don't know, beta or something, like you're the type to let people run all over you. Why aren't you mad about how I treated you?\"\n\n\"What is there to be mad about?\" I asked. \"We're just now getting to know each other.\"\n\n\"See?\" she demanded. \"How can you be so calm about this stuff?\"\n\nI shrugged. \"What do you want me to say? Would me being upset make you feel better? Would it change anything?\"\n\n\"No,\" she muttered.\n\n\"I wasn't hurt by it. In fact, I didn't even know you thought that. If I had known and gotten upset, do you think it would have changed your mind?\"\n\n\"I don't know, maybe.\"\n\n\"But maybe not? Would you have believed me if I'd said, 'I'm not like that,' or would you have thought it was an empty protest?\"\n\n\"I don't know! I just feel like you should stand up for yourself more.\"\n\nI kissed her on the head. \"I do, and will, when it's important. It doesn't cost me anything to be kind to people, and I'd rather let people find out for themselves about me than going around all puffed up, talking about how great I am. Egotistical assholes...\" I paused as I shook my head, \"they rub me the wrong way.\"\n\nShe rocked her head slowly on my chest. \"I still think you let people take advantage of you.\"\n\nI smiled. \"I kind of liked it when you took advantage of me last night.\"\n\n\"I'm serious, Shelby. Like this work thing. Why can't you tell them to fuck off?\"\n\nI chuckled. \"Because Janice is a sixty-year-old grandmother and would be shocked to hear me say that.\" My joke fell flat, so I became more serious. \"Because I have a job to do.\"\n\n\"I understand that, but if the place can't operate a month without you, maybe you should consider training your people. What would happen if you were to get hit by a bus? If you're that indispensable, what would happen to Rockford Tire then?\"\n\nI thought about what she said. She had a good point. It wasn't that I was so indispensable, it was... what? Was the problem I couldn't let go? Dad was a workaholic and thrived on eighty-hour weeks. As I thought about it, he and Mom lived separately together. That wasn't the life I wanted, but he'd beaten into me since I was sixteen that work came before everything else. I agreed with the philosophy, but only to a point.",
        "\"Maybe you're right. Maybe I am letting them take advantage of me.\"\n\nShe rose and held my gaze. \"They are. You told me you haven't had a vacation in fifteen years. You still haven't.\" She stretched up and caressed my lips with hers. \"I want you to do something for me. Will you do it?\"\n\n\"If I can. What?\"\n\n\"The next time work calls, after you solve the crises du joir, tell them not to call you again. We only have a week left together, and I don't want to share you with work. Will you do that for me?\"\n\nI paused, thinking about her request. She was asking a lot. Dad had never taken a vacation, as far as I knew, and the only reason he'd allowed me to take a month off was I'd promised to call in every day. I'd dutifully taken every call for three weeks, but dammit, I deserved a vacation if I wanted one. It was only a week, now, before I'd be back to work.\n\n\"Okay. I'll do it.\"\n\nShe smiled as she kissed me softly on the lips while caressing my face. \"Thank you.\"\n\n\"You're right. If they can't make it a week without me, there needs to be some changes made.\"\n\nHer smile made my heart beat slightly faster. \"I'm sure we can think of something to do with the extra time.\"\n\nI wrapped her up and rolled, pinning her to the bed with my weight. I'd felt a twinge as we tumbled, both in my ribs and a bit lower. \"I'm sure,\" I rumbled as I slowly took her lips.\n\nThings were just getting interesting when my phone rang again. She recognized my work ringtone as easily as I did. \"Don't answer it,\" she whispered, holding my lips to her neck.\n\nI pulled away from her. The fact that she didn't want me to answer the call when before she didn't care was more evidence things had changed between us. \"It won't be but just a second. Plus I have to tell them to fuck off.\"\n\nShe smiled as I tumbled away from her and reached for the phone. \"Shelby.\"\n\n\"Mr. Rockford,\" Janice said, \"I'm sorry to bother you again so soon, but your father wants to talk to you.\"\n\n\"Put him on.\"\n\n\"Shelby, what's going on with the tire design? I just found out the design is behind schedule and isn't going to be ready for two more months.\"\n\n\"Yeah, so?\" I asked as Genny snuggled against my back and began kissing my neck and slowly caressing my cock. She was making it extremely hard to concentrate.\n\n\"So, we're spending eight hundred million dollars on this idea of yours, and I don't want any hitches.\"\n\n\"What hitches? The design team assured me they'll have the preliminary designs ready well before we take possession of the plant. Until we have the plant to build the tires for testing, they're just computer models, so what difference does it make if they're running a little behind? That's why I pushed so hard to get our design team up and running so early, for situations like this.\"\n\n\"I don't like things falling behind schedule when this much money is on the line. The tire design was supposed to be finalized this month.\"\n\n\"I told you, we're not behind schedule. If anything, we're slightly ahead. The initial design deadline was simply our best guess. Because we're starting from scratch on this, I built extra time into the schedule.\" I turned my lips to Genny, and she kissed my lustily.\n\n\"You need to get a handle on this.\"\n\nIt was torture, but I pulled my lips from Genny's. \"It's handled,\" I said, my tone making it clear I didn't like him questioning my competence.\n\n\"I don't think it is. This is the shit that happens when you start fucking off.\"\n\nMy annoyance began to rise. \"When we did this deal, you said it was my baby and I had to make it happen. So let me handle it.\"\n\n\"That's just it,\" he seethed. \"I'm not sure you are.\"\n\n\"Trust me, I am. In fact, I'm so confident everything is under control I'm taking this last week off. No more phone calls.\"\n\n\"Bullshit!\" Dad spat, drawing out the first syllable. \"You're not\u2014\"\n\n\"I'm hanging up now.\"\n\n\"Shelby, Goddammit, don't you hang up the fucking phone! What the hell is wrong with you?\"\n\n\"What's wrong with me is you questioning my competency.\"\n\n\"I'm not!\"\n\n\"No? Then why did you tell me I had to handle this not ten seconds after I told you everything is under control? Why are we even having this conversation? You made it clear this was my project and you wanted nothing to do with it.\"\n\n\"Because we're spending a shit-load of money and you're off in Bumfuck, Georgia, screwing around, when you should be here making sure this deal goes through smoothly.\"\n\n\"Goodbye, Dad. See you in a week.\"\n\n\"Shelby, Godda\u2014\" was all I heard before I hung up.\n\nThe phone rang again almost immediately, Dad's number on the display. I switched the phone off. I'd call Janice later and have her cancel the rest of my daily phone calls. I smiled at Genny.\n\n\"How's that?\"\n\n\"Well,\" she began with a smile, \"you didn't tell him to fuck off, but I think he got the idea.\"\n\n\"He's going to be pissed when I get back.\"\n\n\"Do you care?\"\n\nI took her face in my hand, drawing her lips close to mind. \"Not enough to keep wasting time with work when there are other things that I want to do.\"\n\n\"Like what?\" she breathed, her lips a hairbreadth from mine.\n\nI covered her lips with mine in answer.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Virginia</center>\n\nShelby piloted Banshee down the narrow channel to Schooner Creek as I sat in the chair beside the pilot console. I was wearing my bikini today, the same swimsuit I'd been wearing when that asshole Kevin had shown up.\n\nI was engaged in a little skullduggery. I'd packed us a lunch and suggested we take the boat out one last time before we left. He thought I wanted to drive it again, and I did, but that wasn't the only reason I wanted another ride on the boat. We only had three days left before our time together came to an end, and I wanted to wring as much enjoyment out of our last few days as possible.\n\nI glanced at him as he stood at the wheel, concentrating on his piloting. The tide was out, making the channel narrow and almost too small for the boat. Standing there, shirtless, his skin glowing with his sweat, he was possibly the sexiest man on the planet.\n\nI'd been so fucking stupid! I'd been completely wrong about Shelby. He was anything but passive and weak, and I'd learned a valuable life lesson. Strength and passion and kindness and tolerance are not mutually exclusive. All the lovers I'd had in the past, the men who were arrogant and uncaring, weren't as strong as I thought, they were simply assholes. Now that I'd had my eyes opened, I realized Shelby's strength flowed through and surrounded him. He didn't have anything to prove to anyone, so he could let life's little slights roll off him. More than that, I was touched when he stopped to help an elderly woman load her car with groceries for no reason other than we happened to be there and he saw her struggling, trying to hold her cart while moving her items to her car. She'd been so thankful, and I could tell she'd been moved by his kindness. I had been too. I had to look away for a moment so he wouldn't see the tears welling in my eyes. He was the type of person I suddenly aspired to be.\n\nWhile I now recognized Shelby for the person he was, I'd also learned that his gentleness as a lover was only part of his skills. I smiled as I looked away from him. I'd once dreamed of him ripping my clothes off and fucking me good. He hadn't ripped my clothes off yet, but Jesus Christ, had he fucked me good. When he'd fucked me for the first time after the fight, I'd learned he could be a fucking beast in bed. I'd been well fucked before, but I'd never been fucked like that.\n\nNow that he knew I enjoyed a good pounding now and again, he'd stepped up and given me just what I wanted. When I'd first met him, I couldn't decide what I thought about his beard, but in the last couple of days, I'd decided it was deeply erotic as it tickled the inside of my thighs when he was licking and kissing me to face melting orgasms.\n\n\"Ready to take over?\" he asked as he turned Banshee into the much wider Schooner Creek.\n\nI grinned, my excitement at getting to handle the massively powerful boat bubbling through me. \"Oh, yeah.\"\n\nWe switched places, and I carefully guided the craft, the engines barely above idle. As I steered, my thoughts returned to him, and I smiled. For the last several days, it seemed I did nothing but think of him. Good to his word, he'd not taken another call from work. Not that Rockford Tire hadn't tried, and we'd listened in amusement to the blistering, invective-laced messages his father left. Each time, he'd deleted them without comment. It had become almost a game. After we listened to his father's message, Shelby would delete the message, pull me to him, kiss me lustily, and begin stripping me bare before fucking me good, no matter where we were.\n\nI smiled in memory, almost wishing his father would call more often. So far, after one of his father's enraged tirades, I'd been fucked in the kitchen, family room, game room, and most exciting of all, outside in the pool.\n\nWe'd had to cheat a little on that one. He'd listened to the message beside the pool, but because the neighbor's kids were playing in their swimming pool, we'd exercised a little discretion, dove into the water of our own pool and churned its water good. Thank God the kids were screaming in fun and excitement next door. Their noise helped cover my own sounds as Shelby rocked my world yet again.\n\nAs Schooner Creek began to widen, I bumped the throttles forward a touch, then a bit more, Banshee slowly picking up speed. As I turned the craft into Charleston Harbor, I waited until a smaller, slower boat loaded with Mom, Dad, and a pair of kids to motor past before I turned the boat toward the ocean and pushed the throttles to their stops.\n\nBanshee howled its war scream as it leapt forward. I had to focus, the boat moving so fast I knew I could get into real trouble if I wasn't careful. We howled out of the harbor and into the ocean as I turned south, paralleling the coast a half-mile in the distance. I didn't know where we were going, and I didn't care. All that was important was being alone with Shelby.\n\nIt was all I could do not to laugh in excitement, the wind in our hair as we pounded along, the speed and power of the boat jazzing me up. Shelby thought I wanted a ride on the boat? I did. I planned to find a nice quiet spot to park the boat, and I was going to take him below and ride him until I was screaming and exhausted.\n\n\"What?\" he yelled to be heard over the wind and the roar of the engines.\n\nHis call pulled me from my reverie, and I looked at him. \"What, what?\"\n\n\"You looked like you were about to laugh or say something.\"\n\nHe could read me so well, something he'd put to good use in the bedroom. \"Nothing. Just enjoying myself.\"\n\nWe hit a wave unusually hard, the boat feeling as if it leapt into the air before landing back in the water with a hard thud. I'd learned to take those impacts with my legs, but that one shook me to my bones, and I grunted with the impact.\n\n\"I'm enjoying myself too,\" he said, staring pointedly at my breasts.\n\nI snickered and quickly adjusted myself. The bikini wasn't as secure as my normal one-piece suit, and while I hadn't fallen out, the girls had gotten jostled by the collision with the wave.\n\nGrinning like loons, we continued south. I saw an opening in the coast that looked promising, but by the time I noticed it we were almost past. I pulled the boat into an expansive looping turn and pointed its prow toward the inlet. When we got close, I pulled the throttles back and we motored into a wide river outlet. There were dozens of rivers, large and small, emptying into the small, harbor-like cove, and I picked the largest to follow.\n\n\"Where are we going?\" he asked as I slowed further, Banshee burbling along.\n\n\"I have no idea. I'm looking for a quiet place to stop and have lunch.\"\n\nThe waterway was narrowing rapidly and becoming increasingly muddy. I lost my nerve, afraid I would get into someplace I couldn't get out of, and quickly spun the wheel, giving the boat a squirt of throttle to help it turn. When I had it pointed back the way we came, I chopped the throttles and switched off the engines. The silence was complete. Having grown up in Philadelphia, I still hadn't fully adjusted to how quiet places could be, the only sounds those of birds and softly lapping water.\n\n\"Ready for lunch?\" I asked.\n\nHe smiled and wiped the sweat beading on his forehead. It had been relatively cool as the boat raced along, but now that we'd stopped, the heat was oppressive again. He must be miserable, but he never complained. Seeing him standing there, wearing nothing but his swim trucks, sweat beading on his skin, the drops trickling along the hills and valleys of his muscles, made me want to pant, and not just from the heat. I'd noticed how sexy he was the first time we met, but now that I truly knew him? I was like a little girl with a new toy, and all I wanted to do was play with it.\n\n\"Yeah. I could eat something.\"\n\nDamn him! I almost shivered with the thought of him eating something that wasn't in the picnic basket stowed below. I smiled. \"Yeah. Me too.\" I followed him below. The heat down in the hull was stifling. \"Let's eat up on the deck. It's too hot down here.\"\n\n\"I can start the air conditioning.\"\n\n\"No. I want to enjoy the quiet.\"\n\nHe didn't groan, but I saw the dismay flash over his face. \"Sure.\"\n\n\"Take the basket up and I'll bring the drinks.\"\n\nWe quickly transferred our lunch from the refrigerator to the basket. He picked up the basket and started up the ladder steps. I smiled as he disappeared. I didn't want him turning the air conditioning on down here because I had plans for later. I pulled two beers from the refrigerator and bumped it closed with a hip-check. I'd just finished opening the bottles when I heard the engines rumble to life. As my head popped out of the hatch, he was carefully steering the boat to a shady spot under an overhanging tree.\n\n\"Good idea.\"\n\nAs the boat glided to a stop under the tree, I began pulling out sandwiches and pickle spears. I'd planned our lunch carefully, selecting light dishes so as not to weigh us down. I handed him a beer and one of the chicken salad sandwiches.\n\n\"It's so quiet here,\" I sighed. \"It's like we're the only two people on Earth. No place is this quiet in Philadelphia.\"\n\nHe nodded. \"Yeah. I don't know how people live in the northeast. Bismarck isn't small...\" he paused, clearly thinking. \"Okay, compared to New York or Philadelphia, it's small, but it's big enough to have everything you want or need, but without all the people piled on top of each other.\"\n\n\"Sounds nice.\"\n\n\"It is.\" He wiped his forehead again. \"And best of all, it's not so damned hot!\"\n\nI grinned. He was going to be a lot hotter later. \"Yeah, but isn't it cold in the winter?\"\n\nHe smiled and nodded. \"Yeah, but you can come inside to get warm. That's one of life's simple pleasures, coming into a warm house from the cold outside.\"\n\n\"And if you have someone to snuggle with...\"\n\n\"Then it's even better.\"\n\nI nodded slowly. As much as I liked a hot and sweaty tumble, cuddling up on a cold winter day in front of a fireplace did sound wonderfully romantic. I said nothing. My feelings were a jumble. In less than two weeks I'd gone from thinking he was a nice guy, but someone I didn't care about except for the part of him between his legs, to something more. I wasn't sure what the more was, and that was the problem. I hadn't had the time to sort out if he was still just someone to fuck or if he was becoming more than that.\n\nThere's not enough time! He was so damned sweet, except when I didn't want him to be, and then he was full of fire and passion. I couldn't tell if what I was feeling for him was because of how he treated me in the bedroom, or how he treated me out of it. Maybe it was both. I'd heard it said that men wanted a lady out of bed, but a whore in it. Maybe that was true for me. Shelby was a true gentleman out of bed, but a hard-fucking beast in bed. Except when I wanted him to be gentle. Then he was that.\n\nThere's not enough time! He was exactly what I wanted him to be, when I wanted him to be it, but he wasn't weak or passive or any of the things I thought he was. He was kind, caring, and easy going, completely different than all my relationships in the past. It was what I thought I wanted, what I thought I was looking for, and then when I'd found it, I didn't realize what that meant.\n\nThere's not enough time! I'd wasted so much time at the beginning. I hadn't realized what I was asking for, what being 'low maintenance' meant. After meeting Shelby, I'd first thought 'low maintenance' was synonymous for passive. I'd since learned that wasn't true, but now our time together was almost over. Two weeks ago, I would have kissed him goodbye in the airport and not have given him a second thought. Now, however, I've found I don't want to kiss him goodbye. I wanted to spend more time with him, to explore how I felt about him, but, Goddammit, there's not enough time!\n\n\"Genny?\"\n\n\"What?\" I asked, shaking off my thoughts.\n\n\"You okay?\"\n\n\"Yeah, why?\"\n\nHe grinned. \"Because you zoned completely out there for a second.\"\n\nI snorted. \"Sorry. Thinking.\"\n\n\"About what?\"\n\nI waggled my hand in the air. \"Nothing. I was ruminating on how much things have changed in the last couple of weeks.\"\n\nHe chuckled. \"Ruminating. There's a word you don't hear often.\"\n\nI smiled, the heavy mood from my thoughts evaporating. \"Hey, I'm a writer. Words are what I do.\"\n\n\"And very well.\"\n\n\"You're sweet.\" I popped the last of my sandwich into my mouth and washed it down as I crumpled up the sandwich wrapper and tossed it into the basket. \"That was good.\"\n\nHe nodded as he upended his bottle, draining the last of the contents. \"Yes, it was.\"\n\nI picked up the basket. \"Bring the bottles?\"\n\nI carefully stepped down into the compartment below decks, Shelby close on my heels. I turned to him, taking the two bottles from his hand and placed them in the basket. I could have done that above deck, but I wanted him down here with me. I secured the basket back in the cabinet so it wouldn't fly around the cabin once we got underway.\n\n\"Nobody's called you in a couple of days,\" I sighed as I turned to face him, stepping in close.\n\nIt was probably well over a hundred degrees in the small cabin, but it was going to get a lot hotter before we were done. I stepped closer, pressing myself into him, his damp skin against mine revving up my desires.\n\n\"No. I think they've finally gotten the idea.\"\n\n\"Want to pretend they did?\" I asked with a smile.\n\nHe held my gaze for a moment. \"I'd love too.\"\n\nHe turned to start the generator so we'd have some air conditioning, but I captured his hand. \"No. I want it like this.\"\n\n\"Hot?\"\n\n\"Very,\" I purred, stretching up on tiptoes and offering him my lips.\n\nHe took them, and I could taste his sweat. I smiled out of the kiss, holding his hand and pulling him toward the small bed tucked into the bow of the boat. He was going to be sweating a lot more before I was done with him.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Shelby</center>\n\nSouth Carolina was in the middle of a cold snap, with the temperature only reaching the mid-eighties, and it was cloudy, the late evening sun playing peek-a-boo with the clouds making it feel cooler than it actually was. That, or after almost a month, I was finally getting used to the heat and humidity.\n\nThe Chevy's V8 rumbled as we made our way north and west, on our way to Congaree National Park outside of Columbia, South Carolina, where we were going to see the synchronized firefly display. The display lasted only for a few weeks a year when a specific type of firefly began mating, and Congaree was one of the few places in the country where it happened. Normally, the fireflies synchronized in late May and early June, but they were late this year, allowing us to catch the end of the spectacle.",
        "Tomorrow Genny would be returning to Philadelphia, and she seemed to be as reluctant for that as I was. This morning, after long and leisurely loving making, we both wanted to do something, just the two of us, away from the crowds of tourists in Charleston.\n\n\"It's hard to believe the month is almost over,\" she murmured, her voice quiet as she softly caressed my thigh.\n\n\"Yeah.\"\n\n\"I've had a good time.\"\n\n\"Me too.\"\n\n\"You going to miss me?\" she asked. Her tone was playful, but it sounded forced to me.\n\n\"Absolutely! Once you're gone, who's going to leak details of the next Bridget Nelson novel to me?\"\n\nShe grinned but looked away. We hadn't spoken much on the drive, the roar of the wind into the car making conversation difficult. We could have come in the air-conditioned Range Rover, but she'd elected to take the '57. Once the sun set, we'd put the top down for the drive back, and it'd be glorious.\n\nThe sun was just touching the horizon as we pulled into the parking lot of the park. The lot was nearly full, and I had to squeeze my car in on the end of a row, placing my passenger door only inches from the passenger door of the car next to me. Genny slid across the seat and exited on the driver's side, and I took her hand.\n\n\"So much for avoiding the crowds,\" I muttered.\n\nShe smiled as she snuggled into my side. \"It's okay.\"\n\nWe followed the crowd into the park, signs directing us along the 'Firefly Trail'. The raised wooden platform meandered through the thickly treed, swampy marsh. By the time we were in the thickest part of the bog, the sun was well down, and the flies were performing their mating dance, the forest slowly strobing with softly glowing, pale greenish-yellow light. I'd seen fireflies before, but never had I seen them flashing in coordination as they were doing here, and it was a remarkable sight.\n\n\"Amazing,\" she breathed.\n\nI nodded in agreement but said nothing. The flies weren't the only amazing thing here this evening.\n\nWe shuffled along with the crowd, the wetland first ablaze, then dark, only to blaze to light again a few seconds later, the uncountable millions of tiny insects providing an astonishing amount of light. It took almost an hour to make our way along the length of the trail, the throng moving as a single, seething, squirming organism, until we were dumped back into the parking lot.\n\n\"That was... something,\" Genny murmured as we walked back to the car.\n\n\"Yeah. I don't think I'll ever look at a lightning bug the same way again.\"\n\nThere were no lights in the parking lot, probably to avoid disturbing the bugs and to maximize the impact of seeing them blink, and it took a little searching before I found the Chevy again. The car I'd parked next too was gone, but another had taken its place. It was just as tight and Genny slid in first, but only went as far as the center. When I sat down, she snuggled close. I started the car and inched out of the parking space before putting the top down.\n\nAs we rumbled out of the parking lot, I put my right arm along the seat back, and she scooted even closer and put her head on my shoulder. I smiled as I looped my arm around her to rest my hand on her shoulder.\n\n\"So tell me, if my ass lit up, would you find that attractive?\" I asked.\n\nShe snickered. \"I don't know. Why don't you give it a try and let's see what happens.\"\n\nI made straining noises and she snickered again, but then she fell silent. \"You okay?\" I asked after a time.\n\n\"Yeah. Just thinking about tomorrow.\"\n\n\"Ready to go home?\"\n\n\"No.\"\n\n\"Yeah, me either. Unfortunately, the owner probably wants his house back.\"\n\nI could see her smile in the faint light of the moon. \"Unfortunately. I could get used to living in a place like that.\"\n\nI nodded in agreement. My apartment was nice, but it was nothing compared to the house with its huge rooms, private pool, and game room, not to mention the view of the tidewater marsh beyond and access to Banshee. \n\nOnce we were out of the traffic from people coming and going to see fireflies, we settled into a cruise, the soft night air over the windshield comfortably cool.\n\n\"I have an idea.\"\n\n\"What?\" she asked.\n\n\"Why don't you come home with me?\"\n\n\"Why?\"\n\n\"Why not? You said yourself you felt like we wasted our first couple of weeks together.\"\n\n\"Tempting offer, but I need to go home.\"\n\n\"Why? Can't you write anyplace?\"\n\nShe nodded. \"Yeah, but I won't, not if I'm with you.\"\n\n\"So? Take another couple of weeks.\"\n\n\"I have deadlines. I took a month off as a reward to myself for getting the last book finished and off to the editor, but I received an email last week that it's ready for revisions.\"\n\nI slumped inside. It was probably too much to hope that she'd agree to come home with me. \"I understand. But the offer stands if you change your mind.\"\n\n\"Thank you. Maybe I'll take you up on it sometime.\"\n\nI nodded. \"If you wait a few months, I'll show you a beautiful, white, winter wonderland.\"\n\nShe shivered playfully. \"I'll freeze my ass off.\"\n\nI snickered. \"Or we could stay inside.\"\n\n\"I like that idea better.\"\n\n\"Or...\" I began, drawing the word out dramatically, \"we could go out, play in the snow, then come back inside and I can warm you up in front of a fireplace.\"\n\nShe was quiet for a moment. \"That does sound tempting,\" she said, her voice soft.\n\n\"The offer's there. All you have to do is show up.\"\n\nShe was quiet for a long moment. \"Do you really want me to come home with you?\"\n\nI felt a flair of hope. \"Yes.\"\n\n\"Why?\"\n\n\"Why wouldn't I?\"\n\n\"What about your job and your dad?\"\n\n\"What about it? I'm not in the office twenty-four hours a day... especially if there's a reason to come home.\" She nodded, her head moving against my shoulder, but she said nothing. \"I'm not my dad, Genny. You won't be playing second-fiddle to work.\"\n\nShe nodded again. \"It's not that.\"\n\n\"Then what?\"\n\nShe shrugged. \"I don't know. Everything has started moving so fast.\"\n\n\"What do you mean?\"\n\n\"I mean, at first I thought you were a nice guy, but then, after you beat the shit out of Kevin what's-his-face, I realized you were a lot more than that. The last two weeks have been amazing, more than amazing, but I can't sort out how I feel, and that worries me.\"\n\nMy brows pulled together as I tried to understand what she was telling me. \"How you feel?\"\n\nShe nodded again. \"Yeah.\"\n\n\"I don't understand.\"\n\nShe sat up. The full moon was behind her, causing her to glow like an angel in its soft light. \"I don't either. I can't figure out if what I'm feeling for you is... real... or just infatuation.\"\n\nA weight settled into the pit of my stomach. \"I'm still not sure I understand what you mean,\" I said, though I did.\n\nGenny was amazing. She was beautiful and talented and I wanted to spend more time with her, to learn everything there was to know about her, make love to her and have her go to sleep in my arms, and wake up the next morning with her still there. I wanted to touch her and kiss her and see her smile and hear her laugh. I wanted to listen to her as she talked about her plans for Bridget, and though I hadn't seen it yet, I wanted to watch her work as she brought Bridget to life with the rattling tap of a keyboard. I didn't love her, but I wanted her to be with me, and I wanted to be with her. I could feel the first tendrils of attachment forming, and I wanted to give them time to strengthen and grow. I sighed to myself. In short, I wanted a chance to fall in love with her.\n\n\"I mean, before you were this hot guy that I liked boffing, but now, it feels like there's more to it than that.\"\n\nI waited, but she didn't appear to have anything else to say. \"Would it make any difference if I told you I feel the same way.\"\n\nShe looked at me. \"You do?\"\n\nI nodded, briefly pulling her more tightly into my side. \"Yeah. The only difference being that I've always been attracted to you.\"\n\n\"You have?\"\n\nShe asked the question like she was surprised. \"Duh,\" I grunted. \"You act like that surprises you.\"\n\n\"It does, a little, though I guess it shouldn't. It's that you were so... respectful at the beginning, I didn't realize what was going on.\"\n\nI smiled in the darkness. \"We're back to that, eh?\"\n\n\"I'm sorry.\"\n\n\"We've been over this. No reason to apologize. It takes time to get to know people.\"\n\n\"I know, but I was so completely wrong about you. You're nothing like I thought you were, and everything I thought you weren't.\"\n\nI glanced away from the road just long enough to kiss her on the head. \"Lucky for me, you're everything I thought you were from the beginning.\"\n\n\"It's because you're a better person than I am and didn't make assumptions based on appearances.\"\n\n\"Would you stop with that shit. I think you're a great person. You didn't know me from Tom's housecat. Exactly how were you supposed to know the kind of person I was until you had a chance to get to know me?\"\n\nShe sighed. \"I know.\"\n\n\"It was only a couple of weeks, and besides, am I really that different than your first impression? Really?\"\n\nShe paused as she thought. \"No, I don't guess. I very quickly realized you were a big softy, but\u2014\"\n\n\"See?\" I said, talking over her.\n\n\"But I had the reason you acted the way you did all wrong. I totally misjudged you.\"\n\n\"You thought I was a wimp?\" I asked, but my tone made it a statement.\n\n\"Yeah.\"\n\n\"But now you know I'm this big he-man macho knuckle-dragger.\"\n\nShe snickered. \"Hardly that.\" She sat up and looked at me. \"You know what you are, Mr. Rockford? You're fucking perfect.\"\n\n\"Ah, shucks,\" I drawled, trying to imitate the locals.\n\n\"No, really, I mean it. You're rock hard when you need to be, but soft and cuddly when I want you to be. You're nice to old ladies one moment and able to kick the shit out of assholes that desperately need it the next. You're hot as shit, but you're not some egotistical and vain prima donna. And that's the fucking problem. I can't decide if how I'm starting to feel about you is infatuation, because you're so different than anyone else I've had in my life, of if maybe there's more.\"\n\nI nodded slowly. \"I'm just a regular guy who\u2014\"\n\nShe spluttered. \"If only you knew how wrong you are. You're no regular guy.\"\n\n\"I'm just a regular guy,\" I repeated, \"who tries to treat people the way I want to be treated, that's all.\"\n\n\"And that, Mr. Rockford, is exactly the attitude I'm talking about. Do you know how rare that attitude is?\"\n\n\"So come to Bismarck with me,\" I suggested again. \"Come spend another couple of weeks, maybe a month, with me. I know how I feel about you, and maybe that will give you a chance to figure out how you feel about me.\"\n\nShe was silent for a long moment. \"How do you feel about me?\"\n\nI glanced at her, thinking, and decided to go all in. \"I think I'm starting to fall you.\" Her eyes widened slightly. \"Not 'in love with you,'\" I clarified, not wanting to scare her off, \"but I can feel myself starting to fall for you. I want to know everything about you. I want to come home to you every night. I want to make love to you and have you fall asleep in my arms, and I want you there when we wake up again the next morning. I want to kiss you goodbye and think about you all the time I'm away, counting the minutes until I can come home and do it all over again. I want to see you smile, and hear you laugh. I want to hold you and kiss away your tears if you're upset or sad. I want to do so many things with you, and nothing at all, except have you sitting at my side, like you are now.\"\n\nI paused. There was so much more I wanted to say to her, but I didn't want to overwhelm her, and I was afraid I was coming across as some kind of babbling idiot.\n\nShe watched me for a long moment. \"Wow. Can I use that?\"\n\n\"What?\"\n\n\"What you just said. That was really good.\"\n\nI smiled. \"You liked that?\"\n\nShe nodded and snuggled into my side again. \"Yeah. Remember when I said you were a big softy?\"\n\n\"Yeah.\"\n\n\"You're being one now.\"\n\nI swallowed hard. \"Is that a good thing?\"\n\n\"A very good thing.\"\n\n\"Do I hear a but?\"\n\n\"Nope. No buts. I think you almost perfectly summed up how I feel about you.\" She paused. \"Do you think these feelings... do you think they're real?\"\n\nI shrugged. \"I know mine are.\"\n\n\"You really feel like that about me?\"\n\n\"Yes.\"\n\nShe sighed. \"I wish I could be as sure about my feelings.\"\n\n\"Then come home with me,\" I said, my voice full of urging. \"Give yourself time to figure it out.\"\n\nShe sighed again. \"I'll think about it.\"\n\nI wilted a little inside. For a moment I had hope. \"The offer stands.\"\n\n\"For how long?\"\n\n\"Until you're sure.\"\n\nShe nodded slowly. \"Thank you.\"\n\n\"No need to thank me. I want you to come with me for purely selfish reasons.\"\n\nWe were quiet for a time, the heavy mood smothering the conversation. As the silence lengthened, I began to worry that I'd come on too strong, that I'd put her on the spot, made her uncomfortable or feel suffocated. I was trying to figure out how to walk back what I'd said without withdrawing the offer of her coming home with me, when she broke the growing silence.\n\n\"Remember when I said you were soft and cuddly but could be rock hard when you needed to be?\"\n\n\"Yeah.\"\n\n\"You'd better be tonight when I get you home.\"\n\nI snickered, the heavy mood thrown to the wind. \"Which? Rock hard or soft and cuddly?\"\n\n\"Both. Rock hard first, soft and cuddly later. Hopefully, more than once.\"\n\nShe looked up at me and smiled. I took her lips in a quick kiss and dipped a little deep into the throttle, the Chevy growling as I urged it on.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Virginia</center>\n\nShelby stopped the Chevy in the garage and switched off the key, the growling engine falling silent, the car ticking and pinging as it began to cool. I'd ridden the entire way back from Congaree in the center of the front seat, nestled into his side like couples did when the car was new. I slid out of the car on his side and he shut the door behind me.\n\nHe'd given me a lot to think about on the ride back from the firefly display. Emotionally I was in absolute turmoil. Having him tell me he was falling for me had rocked me back on my heels. I'd never been in love before and wasn't sure what the term meant. All I knew was I supremely attracted to him, but I couldn't decide if it was the beginnings of love or just lust.\n\nHe followed me into the house. I knew I wasn't in love with him. Insta-love only happened in books, but I was dreading going home. I wanted to stay with him, but I felt like I needed some distance to sort out my feeling for him.\n\nAs the door to the garage shut behind him, I turned and he pulled me into his arms, his lips finding mine in a slow, deep kiss. I sighed out of the kiss and smiled up at him. Was I in love with him? I didn't think so, but I was sure as fuck in lust with him. He made me feel like no man before him.\n\nBut there was even more. On the drive back, when he'd wowed me with his monologue about why he wanted me to come home with him, he made me feel like he wanted me for more than my body. He's said he wanted to make love to me, but that was only a tiny part of what he said, and his words had touched me in a way I'd never felt before.\n\nIn hindsight, I now realized that all my previous lovers treated me as an object. They'd complimented me on my 'fine ass,' 'great tits,' or 'tight pussy.' I'd reveled in the compliments at the time, but now they seemed shallow. They weren't complimenting me, they were complimenting my various body parts, parts they were using for their own pleasure first. They could sometimes be kind or generous, but I now felt like they did it not because they wanted to, but because they thought they had to so they could keep getting into my pants. I didn't feel like that with Shelby. He was kind and generous, because that was who he was, not an act he put on so he could fuck me.\n\n\"I want you,\" I whispered as our lips slowly parted.\n\nHe smiled down at me and I felt the tingle I often got when he looked at me that way. Was I falling for him? Maybe I was. I wanted to fuck him, often and with great enthusiasm, but I enjoyed his company just as much, maybe even more, when he wasn't making me squirm with pleasure.\n\nI squealed in surprise and excitement when he quickly dipped and picked me up, his strong arms behind my knees and shoulders, carrying me like I weighed nothing at all. I quickly relaxed in his embrace, feeling safe, and pulled myself close. He paused as we kissed, but I slowly pulled back and tucked my face into his neck. I'd never been carried like this before, and it was incredibly romantic.\n\nI nuzzled his neck as he carried me up the steps before depositing me carefully in the middle of the bed. I refused to release his neck and he settled onto me, his lips finding mine again. He kissed me slowly, gently, the perfect kiss to start the perfect ending to the perfect day.\n\nHe could fuck the shit out of me when I wanted him to, but tonight I was feeling especially close to him and wanted slow and easy. As he slowly pulled back, he watched my eyes, almost as if he were peering into the depths of my soul. I smiled up at him. I only now realized that he looked me in the eyes more than he stared at my breasts. I held his gaze, his eyes tender, but I could see the contained desire there. After a moment, a slow smile teased his lips before he covered my mouth again.\n\nFor the next eternity, he slowly undressed me, his lips and hands stroking and caressing. He never rushed me to the main event, taking his time, his lips and touches throwing fuel onto the fire that raged inside me. As he disrobed me, I'd occasionally pluck at his garments, silently indicating my desire that he shed his own clothes.\n\nHe kissed down my body again, his heavy breathing hot against my skin as I slowly stroked his cock until I could no longer reach him. He settled between my legs and began to kiss my flower, teasing the petals open with his tongue. I moaned softly as I wrapped my hands in his hair. I couldn't believe I'd ever been unsure what I thought of his beard as it tickled the inside of my thighs and the area around my pussy. It was the most erotic thing in the world.\n\nHe slowly built me up, my pleasure growing, my skin becoming hot as my blood surged with passion. Though he'd never mentioned it directly, I'd divined from his occasional comment he was unsure of his ability in the bedroom and was concerned over his ability to please me because of his lack of experience. I moaned, hard, an orgasm stalking me, causing me to pull his face more firmly into my womanhood. I'd tried to assure him he was the equal to any man, but he was a quick learner, and now I was concerned if he became much more skillful, I might not be able to survive his ministrations.\n\nHe could read me like a Bridget Nelson novel, and as I pulled him tighter to me, he began to flick and kiss with more enthusiasm, causing the hovering orgasm to begin its conquering march on me. I began to shudder as my climax surrounded me, burying me under its seething pleasures. I pulled him harder against me as I moaned, my rapture growing, until it roared over me, taking my breath with its power.\n\n\"Fuck...\" I moaned, the word loud and drawn out as I writhed in exquisite tortures, my orgasm burning through me and cleansing me with its erotic fire.\n\nHe held me around the hips, moving with me as I shuddered, my body no longer mine to control as it curled in upon itself. Afraid I'd hurt him, I released his hair and wadded my hands in the linens instead, desperate to hold onto something lest my pleasure wash me away and leave me adrift. I twisted, rolling onto my hip as I battled the pleasure.\n\n\"Shelby! Stop! Fuck! Please, stop!\" I begged, slapping at his head, but still he held me, his tongue busy, swirling around my button between hard flicks that caused me to crackle with erotic energy.",
        "He held me a moment longer, his tongue torturing me, and then, just before my heart exploded, he was gone. I lay on my side, shivering, my hands clasped between my legs as I waited the centuries for my rapture to release me.\n\nFinally, after a week, a month, a century, my climax washed out of me, leaving me feeling weak. No man had given me orgasms like Shelby could, and this one was one of the hardest yet. I lay still for a moment, trying to gather my scattered wits, when he gently rolled me to my back. His lips found mine, and I drank deep from that well, this kiss infusing me with strength and desire.\n\n\"You can be a real asshole, you know that?\" I whispered, but there was no heat in my words.\n\nHe smiled down at me. \"Yeah, but I'm your asshole.\"\n\nI pulled his lips back to mine, hungry for his kiss. How could he believe he lacked skills when he could clearly see the power of the orgasms he gave me was beyond me. Our lips slowly parted, and I opened myself to him. His lips so close to mine I could feel the tickle of his breath, he settled between my legs before slowly sinking into my depths.\n\n\"Fuck,\" he whispered as I moaned in agreement.\n\nHe was perfectly sized, large enough to fill me completely but not so big that he hurt when taking me in deep penetrating positions. He captured my lips again as his hips began to move. I wrapped my arms around him, holding him in the kiss as I moaned into his mouth. He felt so fucking good!\n\nAfter allowing me to take my fill of his lips, he slowly pulled back before taking my hands, his fingers intertwined with mine before holding my hands to the bed at my head as he nuzzled my neck. I moaned again as his cock plunged into me in a slow, pleasurable rhythm. He was expert in the gentle, loving domination. Pinning my hands, he was clearly establishing his control over me, but not in a way that was frightening or painful, and I fucking loved it! We moved together for many long moments as his lips roamed across my face, neck, and shoulders as his cock churned my butter in a slow, easy rhythm.\n\nI was spooling up for another orgasm, the feel of his lips, his plunging cock, his gentle control, raising my heat. I tugged at my hands, needing to wrap him up and feel him close. He released me and I surrounded him, my fingers biting into his flesh as I began to burn in pre-orgasmic fire, my flesh as hot as if I were baking in the hot, South Carolina sun.\n\n\"Harder,\" I squeaked, needing the push to finish me. His slow rhythm never changed, leaving me twisting in pleasure. \"Oh, God! Fuck me! Please, fuck me harder!\"\n\n\"No,\" he breathed.\n\nI groaned. He'd done this to me before, holding me on the knife edge of rapture, the asshole. I began to thrust my hips, trying to drive myself into the cleansing fire of orgasm, but I couldn't quite get there.\n\n\"Please,\" I begged.\n\n\"Please what?\" he breathed.\n\n\"Please make me come.\"\n\nNothing changed for several long moments, and I thought I would go mad before he held me tight and rolled so I was resting on his chest. Free from his weight, I began to pound my hips furiously, bracing on my hands as I used him for my pleasure, fucking him hard and fast, my teeth bared in a feral snarl.\n\nHe gently pinched my nipples and I was lost. I threw my head back as a monster of an orgasm rolled over me. I wanted to scream, but the power of my climax stole my breath. I was impaled on his cock, unable to move as I was shredded by pleasure. He slapped my hands off his chest, dragging me down and wrapping me up, holding me crushingly tight to his chest, but I wanted to be held tighter still.\n\nHe began to fuck me, pounding into me with tender violence. \"I'm going to come!\" he snarled.\n\nA third orgasm poured through me, so close on the heel of the previous they merged into one. \"Oh, fuck, I'm coming again,\" I murmured as my fingers dug deep into his shoulders.\n\n\"I'm going to come! Fuck! You're going to make me come!\" He pounded into me harder, growling in effort and passion. \"Fuck!\" he barked as he pressed up, driving himself as deep into me as possible before pounding into me hard and fast again. \"Fuck! I'm coming! You sexy fucking witch, you're making me come! Fuck!\" he snarled, slamming into me like an overrevved machine until he barked again, driving his cock deep and holding it there as he splashed into me.\n\nWe lay still for a moment, straining against each other, awash in our rapture, before we relaxed as one, our exhalations mingling in the air between us.\n\n\"Fuck,\" he breathed as he relaxed, his crushing embrace easing.\n\nI heaved a huge sigh of my own, nodding in agreement. We lay still for a moment before I found his lips. We kissed, slowly, deeply, as he held me warm and tight. I sighed out of the kiss and lay on his chest, his still hard cock deep inside of me.\n\n\"You called me a bitch,\" I whispered, not looking at him, a small smile teasing my lips. I didn't mind. In the throes of passion, it was kind of sexy, but he'd never done it before.\n\n\"No I didn't,\" he murmured as he kissed my forehead.\n\nMy smile grew. He'd been so worked up he hadn't even realized it. \"Yes you did. You called me a 'sexy fucking bitch.'\"\n\n\"Witch.\"\n\n\"Witch?\"\n\n\"A sexy, fucking witch... because you keep casting some kind of spell on me.\"\n\nI could hear the teasing in his voice and my smile grew. Even when he was coming after fucking our brains out, he was still Shelby. \"What kind of spell?\"\n\n\"I don't know. It makes me crazy. Even though I wanted to stop, I couldn't, and you make me come so damned hard.\"\n\nI rose slightly and looked into his eyes. I couldn't explain why, but I found his words enormously pleasing. \"I've enchanted you?\"\n\nHe smiled back at me. \"I guess.\"\n\nHe was beginning to soften, but he wasn't there yet, and I worked my hips. He tipped his head back with a hiss of pleasure. My smile grew even more. I began squirming my hips harder. \"Rise, my minion,\" I intoned, filling my voice with as much theatre as I could.\n\nHe chuckled before he pulled my lips to his and kissed me thoroughly.\n\n<center>-oOo-</center>\n\nI didn't realize my own strength, and I had to labor long and hard into the night to subdue the demon I'd called forth. The bed in tatters, the linens damp with our sweat, I lay exhausted in Shelby's arms, sleep pulling hard at me. I sighed softly, utterly content in ways I'd never experienced before. I didn't want to go home tomorrow. I didn't want to leave his arms.\n\n\"What?\" he whispered in the quiet darkness.\n\n\"I wish I didn't have to go.\"\n\n\"You could come home with me.\"\n\nI nodded but said nothing. I wanted to, but I couldn't. I couldn't explain why, even to myself, but even though I wanted to go with him, I couldn't bring myself to making the commitment.\n\n\"I can't.\"\n\nHis chest rose and settled with his sigh. \"I know, but the offer stands.\"\n\nI rose and kissed him softly. \"I know.\"\n\nI settled back against his side, his hand drawing soft, lazy, patterns on my back. Why can't I go with him? He's right. I can write as easily in Bismarck as Philadelphia. There's nothing holding me in Philadelphia since Mom moved to Alabama with her job. I was still mulling it over, trying to decide what to do, when sleep's dark embrace surrounded me.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Shelby</center>\n\nI sat in my office, reviewing the reports from Henry Gammon, the plant manager at the new RTPF\u2014Rockford Tire Production Facility\u2014plant. We hadn't taken possession of the plant yet, but we were in the transition phase. Goodyear was winding down their production, and Rockford Tire was hard at work to ensure all the pieces would be in place when Goodyear handed us the keys to the building.\n\nIt'd been two months since I drove home from South Carolina, and I'd thrown myself into my work. I'd asked Genny one more time to come home with me when I dropped her at the airport. She'd smiled sweetly, kissed me gently on the lips, and walked away. I'd watched until she disappeared into the crowd.\n\nI wouldn't beg. I'd spoken to her nearly every night for the next three weeks, but I hadn't asked her to join me again. The offer was there. It was up to her to take it. Now, another four weeks on, I could feel her slipping away. Another opportunity lost. I should be used to it by now. This was another in my long list of failed, or aborted, relationships.\n\nI hadn't spoke to her for almost a week. I'd called her couple of times and left messages, but she hadn't returned my calls. I wouldn't call her again. I missed her, but it was becoming increasingly clear I felt more for her than she did me. Maybe I was fun for a while, but she'd moved on, and I wouldn't pressure her. She had her life to live, and I didn't want to be the crazy ex-boyfriend that couldn't let go.\n\nI pulled my attention back to the task at hand, shoving my thoughts of her away. Working helped. It gave me something to focus on besides what I'd lost. The nights were the toughest. I'd thought about going out and trying to find some female companionship, someone to help me forget, but anyone I found would be a poor substitute, so I worked instead. I'd get over her eventually, and it made Dad happy that I was spending twelve to fourteen hours a day in the office.\n\nWe were still waiting for DOT\u2014Department of Transportation\u2014approval for our tires. Without it, our tires weren't legal for road use, but otherwise, the takeover of the facility was progressing smoothly, or as smoothly as anything like this could. I'd contracted with Goodyear, as capacity became available at the plant, and had a run of five hundred of our tires made up. They might not be legal for road use yet, but that didn't mean we couldn't test them, and we'd give four hundred of the tires to several off-road racing teams and asked for their opinion.\n\nThe feedback on the tires was generally positive, and we'd incorporated some of their suggestions into the design. We were going to do another run of the improved tire as soon as we took possession of the plant.\n\nI picked up my phone to call Hank, smiling as I swiped the device to unlock it. My background was a picture of Genny with her tongue stuck out at me. I'd snapped it while we were lounging by the pool only days after I nearly had my ass kicked, during the time she was changing in the way she interacted with me. I only had three photos of her, and of the three, this was my favorite. She seemed so alive and happy in this one. I should delete it, or at least stop using it as my background, but I hadn't been able to bring myself to do it.\n\n\"Gammon.\"\n\n\"Hank, Shelby.\"\n\n\"Mr. Rockford. How can I help you?\"\n\n\"I wanted to give you a heads up. I received an email from Tanya Littleton with Goodyear. She said they were going to begin the removal of the molds and tire machines sometime in the next two weeks. Do not let them take the tires machines. The molds were not included in the sale, but the tire machines were. I've sent her a copy of the contract that spells it out, but if they still try to remove them, you call me before they touch them. Call the cops if you have to.\"\n\n\"You got it, Mr. Rockford.\"\n\n\"How's things going there?\"\n\n\"The guys are starting to get antsy.\"\n\nI nodded. \"Understandable, but everything is on schedule on our end. We can't offer them jobs until we take possession of the plant, but assure them their offer letters are sitting on the corner of my desk, waiting to go out. Please pass that along to the men.\"\n\nThat was a white lie. The letters weren't even printed yet, but they were composed and waiting on the HR manager's computer. Human Resources nearly had a heart attack when I told them we were hiring 456 people all at the same time, but it couldn't be helped. We needed these men.\n\n\"That's good to know, and I'm sure it will help put some of their minds at ease.\"\n\nI nodded to the empty room. \"We're doing everything we can to make this transition as seamless as possible.\"\n\n\"Thank you. We're all excited about your plans and looking forward to working for you.\"\n\nI smiled. Dad and I had an absolute knock-down, drag-out screaming match, but I'd finally carried the day, and for the first year, every dime in profit from the sale of tires produced at the RTPF would go directly into the RTPF production employee's paychecks. The men and women where seriously motivated to meet their production goals, goals I'd developed with Hank to be difficult, but achievable.\n\n\"And us, you. Anything else?\"\n\n\"No. We're already starting to do some reconfiguring, on the sly, in preparation for your takeover.\"\n\nI chuckled. \"I appreciate the go get 'em attitude, but don't forget, it's not our plant yet. Don't do anything to get anyone in trouble or cause the deal to fall through.\"\n\n\"Hell, nobody at corporate knows what we do down here anyway. They'll never know, and it's stuff that needed to be done a long time ago, but I never could get approval for.\"\n\nThe light on my desk phone began to blink. Janice wanted to talk to me. \"I have another call I need to take. If you need anything, you have my number.\"\n\n\"I do, but don't worry. Nobody's taking nothing without your approval.\"\n\n\"Thanks, Hank.\"\n\n\"You got it, Mr. Rockford.\"\n\nI ended the call and picked up my desk phone. \"Sorry. I was on my cell.\"\n\n\"Mr. Rockford, there's a Virginia McKay here to see you. She doesn't have an appointment, but she says you're expecting her.\"\n\n\"If she doesn't\u2014wait, did you say Genny McKay?\"\n\n\"Virginia McKay, yes sir.\"\n\n\"I'll be right there.\" I hung up the phone and all but jumped from my chair, striding quickly across my office, pausing in the open door. \"Genny?\"\n\nGenny was standing next to my secretary's desk, her face twisting as if she might cry. \"I couldn't stay away.\"\n\nI crossed the remaining distance and took her into my arms, picking her up and holding her tight, her feet dangling six inches off the floor. She shuddered once and then sniffed as I held her. \"I'm so glad you came,\" I whispered.\n\nI held her for a long moment, my eyes closed as I soaked up the wealth of pleasure pouring into me from having her in my arms again. After a moment I gently placed her back on the floor and she stepped back, her eyes shining with tears. I glanced at Janice.\n\n\"What's on my calendar for the rest of day?\" I asked.\n\nShe looked at me, her face soft as a small smile teased her lips. \"Nothing that can't be rescheduled.\"\n\nI nodded. \"Do. I'm taking the rest of the day off.\"\n\nJanice's smile widened. \"Good.\"\n\nI pulled Genny into my office with me. As soon as we were away from prying eyes, I kissed her. I kept it clean, but I had to taste he lips again. \"What are you doing here?\" I whispered as the kiss dissolved.\n\n\"You invited me, remember?\" she asked, her voice soft, and I wasn't sure, but there appeared to be a hint of apprehension or fear in there as well.\n\nI nodded. \"I remember, but I thought...\"\n\nShe looked down. \"I've been awful to you, but I couldn't stop thinking about you and our time together. I tried to forget you, to move on... but I couldn't.\"\n\nI pulled her to me and held her again. \"You're here now. That's all that matters. How long can you stay?\"\n\nShe was quiet so long that I slowly pushed her back so I could look at her. \"Only a couple of weeks, for now.\"\n\n\"For now?\"\n\nShe couldn't meet my eyes. \"If you still want me.\"\n\n\"What kind of question is that? Of course I still want you.\"\n\nShe looked up at me, her smile slightly sad. \"Do you think we can start over?\"\n\n\"No.\" She looked disappointed, but I continued without pause. \"I don't want to start over. I want things just as we left them.\"\n\n\"Even after the way I treated you, especially the last month or so?\"\n\nI smiled down at her. \"You told me you needed time to sort out how you feel. Did you?\" She looked down, but I hooked her chin with a finger and forced her to look at me. \"Did you?\"\n\n\"Yes.\"\n\n\"And you're here now.\"\n\n\"Yes.\"\n\n\"And you'll stay for a couple of weeks?\"\n\n\"Yes.\"\n\n\"But you'll come back again?\"\n\nHer lips curled down, like she was trying not to cry. \"Yes.\"\n\n\"Maybe stay... forever?\"\n\nShe whimpered. \"Maybe.\"\n\nI smiled. \"Then no, I don't want to start over.\"\n\nShe whimpered again as she leaned into my chest. \"I don't deserve you, Shelby Rockford.\"\n\nI held her for a long moment. \"Let's get out of here.\"\n\nShe nodded, but she wasn't in any hurry to release her embrace, and truth be told, neither was I. I held her, my cheek resting on against her head. My eyes were closed as the warm glow I'd felt with her in South Carolina returned, burning brighter than ever before, burning away the dampening fog that filled me since my return to North Dakota.\n\nShe finally squirmed, and with supreme effort, I let her go, but not before I took her lips in another long, gentle kiss. She looked at me, two tracks of tears running down her cheeks.\n\n\"I'm sorry,\" she whispered.\n\nI kissed away the tears. \"Shhh... I murmured. \"It's okay. You said you needed time.\"\n\n\"I was a fool. I should\u2014\"\n\nI covered her lips with mine to silence her. \"We'll talk about it later,\" I breathed as the kiss dissolved.\n\nI took her hand and towed her out of my office and into the parking lot. It was glorious summer day, and I wished now I'd driven the '57 we'd used in South Carolina. I opened the door to the Pontiac, smiling as she slipped inside. I closed the door and had to force myself not to run around to the other side. I was all but bouncing off the walls with excitement. I'd been in a funk since I'd felt her slipping away, but I hadn't realized how much of one until it was suddenly gone. I threw myself under the wheel and started the car.\n\n\"What's this?\" she asked, looking around the car.\n\n\"1966 Pontiac GTO, with the 389 Tri-Power set-up.\"\n\nShe smiled at me. \"Meaning what?\"\n\n\"Meaning,\" I said as I backed out of the parking space and snicked the car into first. \"It can do this!\"\n\nI floored the car and dumped the clutch on the Muncie close-ratio four-speed, the rear tires howling over their mistreatment as the car crabbed sideways before rocketing across the parking lot. I slowed, checked for traffic, and pulled out onto the road that led to our corporate campus, pinning us back in the seat as I banged the car up through the gears.\n\n\"Jesus Christ almighty!\" she breathed as I began to slow.\n\nRockford, the road leading to our campus, was lightly traveled, but I was approaching Eddington, which was a major thoroughfare. I had to act like I had some sense. I grinned at her, bubbling over with enthusiasm.\n\n\"Have you eaten? Are you hungry?\" It was nearly one, but she may not have eaten on the plane.\n\n\"I just want to go home,\" she said, placing her hand on my thigh.\n\n\"Home?\" I asked, a chill falling over me.\n\n\"Your home.\"\n\nMy smile returned and I couldn't stop it. I wanted that too, and I liked how she said 'home' the first time. Not 'your home', or 'your place,' but 'home.' We were halfway there when the realization hit.\n\n\"Wait? Did you bring luggage?\"\n\nShe smiled \"Yes.\"\n\n\"Where?\"\n\n\"In the rental car.\"\n\nI blinked at her a moment. \"Why didn't you say something?\"\n\nShe smiled and my heart began to beat fasters. \"Because this is better. We can get the car later, can't we?\"\n\nShe was right, this was better. This was where she belonged, sitting beside me. \"Of course.\"\n\nI turned into the parking lot of my apartment, swiping my card to open the gates, the V8 burbling and rumbling as I crept into the covered parking. I parked the car, hurrying around to her side to open her door and offer her a hand out. We were alone in the parking lot, and as I shut the door, I couldn't resist another kiss. If the zeal of her return kiss was any indication, she wanted the same thing.\n\nAfter we sighed out of the kiss, I led her to apartment. It wasn't large, but it was billed as a 'luxury apartment' and had plenty of hardwoods and tile. She glanced around as she entered and nodded.",
        "\"This fits you. Manly, but not a cave.\"\n\nI smiled, her approval pleasing me. \"I'm so glad you're here. I thought I'd lost you,\" I said softly as I pulled her into another hug.\n\nI wanted her. I wanted to take her to my bed and make tender, sweet, mad, passionate love to her, but I didn't want her to think that was the only reason I wanted her with me.\n\nShe nodded, her hand going to the back of my head. \"I was confused. I didn't know what I wanted.\"\n\n\"You do now?\" I whispered.\n\n\"Yes. You. I want you.\"\n\nI tightened my embrace just a bit in acknowledgement of her words. \"And I want you.\"\n\n\"I can tell,\" she said, her voice light. She'd obviously felt the bulge in my pants.\n\nI released her and stepped back, holding her gaze. \"No. I mean I want you, not just your body. I want you in my life. You've been all I can think about since we left South Carolina.\"\n\nShe lips thinned as she nodded. \"I know. I've never felt this way about anyone before. I thought I could return to my old life, but I can't. That person, that life, doesn't exist anymore. I want you, Shelby. I want you in my life. I want...\"\n\nShe trailed off, her face sad. \"Me?\" I asked, understanding just how she felt.\n\nShe nodded slowly, but her eyes were down. I didn't like her looking at the floor all the time and I tipped her face up.\n\n\"And I want you.\"\n\n\"But I treated\u2014\"\n\nI covered her lips with mine to stop her comment. I didn't like her beating herself up either. I slowly pulled back from the kiss. \"I forgive you,\" I whispered, my lips almost touching hers. \"Is that what you need to hear?\"\n\nShe whimpered. \"Yes.\"\n\n\"You're forgiven. I love you, Genny, and now\u2014\" Her sharp intake of breath caused me to stop. \"What?\"\n\n\"You love me?\"\n\n\"Yes,\" I said slowly. \"I told you I thought I was falling for you. Now I'm sure. I'm falling in love with you, Virginia McKay.\"\n\nShe whimpered, sniffed, and whimpered again, her face twisting as tears began leaking from the corners of her eyes. \"I think I'm falling for you too. I couldn't stop thinking about you. I couldn't write. I couldn't sleep. I was a mess, and the more I tried to get control of my life, the worse it became.\" She sobbed briefly, then rallied herself as I pulled her into my arms. \"I missed you so much,\" she whispered.\n\n\"You're here now,\" I breathed, holding her close.\n\nShe nodded. \"And I want to stay.\"\n\nI smiled, taking a deep breath and letting it out slowly, no five words ever sounding sweeter. \"Then we'll figure out how to make it happen.\n\nShe nodded again. \"Take me to bed...\"\n\nI would, but I hadn't taken my fill of having her in my arms yet, so I held her. I held her, and I'd never let her go.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Brooklyn</center>\n\nI listened to the phone purr, my lips thinning. I always followed up with my clients, to make sure they were satisfied with my services, but Mr. Shelby Rockford was a hard man to reach. I'd called twice already and left a message, but he hadn't returned my phone call. I was trying again. If he didn't answer or return my call this time, I'd drop it and assume the reason he wasn't taking my call was because it didn't go well with Virginia and he was pissed off at me.\n\n\"Hello?\"\n\n\"Mr. Shelby Rockford, please.\"\n\n\"Speaking.\"\n\n\"Shelby, this is Brooklyn Lancaster. How are you?\"\n\n\"Brooklyn! It's so good to talk to you! Sorry about not returning your calls. It's been crazy around here the last couple of weeks.\"\n\nI began to relax. He certainly didn't sound pissed off. \"So things went well with Ms. McKay?\"\n\n\"All's well that ends well. We've had a few bumps in the road, but I think we're past those now.\"\n\n\"So you're happy with my services?\"\n\n\"Extremely. Genny is the best thing to ever happen to me. Genny! Brooklyn's on the phone!\" he called, obviously holding the device away from his mouth. \"Hang on. Genny wants to talk to you.\"\n\nThere was a pause before Genny spoke. \"Brooklyn. Genny McKay. How are you?\"\n\n\"I'm fine, Ms. McKay. How are you?\"\n\nShe giggled. \"Shelby! Stop it! I'm great. Happier than I've ever been. Happier than I thought I could be, all thanks to you.\"\n\n\"Hardly anything\u2014\"\n\n\"No,\" she said, interrupting me. \"It's all you. You introduced me to Shelby, someone I wouldn't have given a second thought to before, yet somehow you knew he'd be perfect for me. I don't know how you knew, but you did. Do you read?\"\n\n\"Some, why?\"\n\n\"The next Bridgit Nelson book is dedicated to you.\"\n\nI was quiet for a moment, shocked into a momentary silence. \"I don't know what to say. Thank you.\"\n\n\"No. Thank you. By introducing me Shelby, you've made me a better person, and that's no exaggeration.\"\n\nI smiled, her words pleasing me. \"It's not me, Ms. McKay. I'm sure that person was inside you all the time.\"\n\n\"Maybe, but you and Shelby are responsible for finding her and bringing her out of me. For that, I owe you a debt of gratitude I can never repay.\"\n\n\"You owe me nothing, Ms. McKay.\"\n\n\"Maybe so, but... I just want you to know how happy I am right now, thanks to you,\" she said, her voice heavy with emotion as she spoke.\n\n\"I'm glad I could help.\"\n\n\"Here's Shelby,\" she said quietly before I heard the phone being passed.\n\n\"Is Ms. McKay okay?\"\n\n\"She's fine. She just gets emotional sometimes. We're working through it.\"\n\n\"Anything I can do?\"\n\n\"No. As I said, we had a bumpy start, and she's still feeling a little guilty, but she's better every day. We'll get through it.\"\n\nI wondered about the bumps, but I couldn't very well ask. \"If there's anything I can do...\"\n\n\"Thank you for the offer, but we've got it under control. She's in her fourth week of her two-week stay with me, and she's writing like a woman possessed,\" he said, and I could hear the smile in his voice. \"I heard her say she was dedicating her next book to you. I think that's a great idea. I don't know how you do it, but Genny...\" He paused, but continued quickly, his voice softer. \"She's perfect. She's exactly the person I want, that I need in my life. Thank you. Thank you so much for everything you did.\" \n\n\"You're welcome.\" I wanted to wrap this up. \"May I count on you for a reference?\"\n\n\"Absolutely! Anything I can do, anything at all, all you have to do is ask.\"\n\nI smiled. \"Thank you. I want my clients to be happy and\u2014\"\n\n\"I couldn't be happier.\"\n\n\"And satisfied with my services.\"\n\n\"Very satisfied.\"\n\n\"Very good then. If there's anything else I can do for you, Mr. Rockford?\"\n\n\"Don't take this the wrong way, because this is a compliment, but I don't believe I'll be needing your services again.\"\n\nI smiled again. \"Thank you. In my line of work, a repeat customer isn't a good thing.\"\n\nHe chuckled. \"Yeah, I can see that.\"\n\n\"Enjoy the rest of your evening.\"\n\n\"Thank you, Brooklyn. You too.\"\n\nI hung up the phone before I rocked back in my chair, exhaling with a long, satisfied sigh. Shelby Rockford sounded like a different man from the one I first spoke to almost seven months ago. He seemed so alive and vibrant now.\n\nNot every pairing I made worked out, but I had a good feeling about Shelby and Virginia. I swiveled around in my chair and logged onto Amazon.com. My reading preferences tended to run more toward Danielle Steel and Nora Roberts, but if I was going to have a book dedicated to me, I figured I owed it to myself to at least read the books.\n\nI had to look through my notes to find Virginia's pen name, Rose Griffin, before I could find her books. The Bridget Nelson books were well reviewed, and as I read the synopsis and reviews on each of the books, I realized that I needed to expand my reading list. I quickly went down the list, adding each book to my Kindle.\n\nWhen I finished, I closed my laptop and rose from my desk. That was enough work for today. I had some reading to catch up on."
    ],
    "authorname": "SanityCheck",
    "tags": [
        "billionaire",
        "holiday",
        "millionaire",
        "romance",
        "romantic",
        "south carolina",
        "writer"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/matchmaker-06-june"
}