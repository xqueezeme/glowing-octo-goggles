{
    "title": "Ryan Ch. 06",
    "pages": [
        "It was early in the day, but Dani was already planning her outfit for the party that evening. The attire was dressy, but not necessarily formal. The festivities would get underway at six thirty with cocktails and h'orderves. \n\nThere was more than enough time, but she wasn't leaving this selection to the last minute. She remembered all too well the anxiety over the Sinclairs dinner party. Admittedly, there wasn't the stress involved with this event that she had with the other, but she wasn't taking any chances.\n\nThe other thing was, she felt a bit off. She wasn't sick, but her sinuses were stuffy and she had a headache. She was no stranger to the effects of allergies which rarely slowed her down, but she was beginning to feel fatigued too. She'd taken her usual remedies earlier in the day, but the symptoms were persistent. All things considered, she didn't really feel that bad, just not up to par. \n\n*            \n\nDani was deep into her walk-in closet when she heard Ryan call out, \"Baby, where are you?\"\n\n\"I'm in the closet, Ryan!\" she yelled.\n\nWalking to her bedroom, he saw an explosion of clothing all over the bed; dresses, shoes and purses. He had a sudden sense of deja vu. \n\nWalking into the closet, Ryan was greeted by Dani's awesome derriere which was sticking out as she bent over rummaging through her shoes. When he got near, he swatted her jean clad butt with the palm of his hand.\n\n\"Ouch!\" Dani yelled, quickly straightening up. \n\n\"Ryan Sinclair, you are a meanie for spanking me while I'm in that position,\" she complained rubbing her backside. \n\nGrinning, he pulled her into his arms and kissed her while his big hands simultaneously felt up her butt in the guise of soothing the swat.\n\n\"Aww, babe, it was only a little love tap. You know I wouldn't hurt the thing I love so much,\" he said before he swatted her again. \n\nThat time she felt it in her pussy and groaned, \"Ummmm,\" rubbing her belly against his growing erection.\n\nThe man was a danger to her peace of mind and he knew exactly what he was doing. She loved that he could send her hurling into orgasm just by spanking her. Even now, she was starting to tingle just at the thought of his hand burning up her ass.\n\n\"Shit,\" she thought, \"I need to put a stop to this.\"\n\nReluctantly, she pulled away from his hot body.\n\n\"No more of that. I need to get my stuff together for the party tonight. If you distract me, it'll be two hours before I get back to this. So save it and I'll be nice to you later,\" she promised with a smile as she stroked his firming cock through his slacks. \n\nRyan pulled her back for one last kiss, then said, \"It's a deal, but you had better be very nice to me.\" \n\nAdjusting himself, he stated, \"I have a few phone calls to make, so I'll leave you to it. After I'm finished, I'll fix something for lunch.\"\n\n\"Thanks, baby,\" Dani said as she continued her quest for the perfect pair of shoes. \n\nAfter lunch Ryan left to run a couple of errands.\n\nLater, while Dani was getting dressed, Ryan called and said he was on his way. \n\n*         \n\nLooking in the mirror, Dani was happy with her choice of dresses. It was one she bought for another party two years ago, which was the only time she'd worn it. Thankfully, she had it cleaned before hanging it up.\n\nThe dress was made of champagne colored silk. The bodice was a beaded corset with tiny color matching pearls and thin shoulder straps. The skirt of the dress fell in soft shimmering folds, flaring out slightly to just above her knees. She paired it with matching accessories which included shoes, earrings and a clutch.\n\nHer hair was a simple ponytail. The style was swept up with the base of the ponytail at the crown of her head. A length of hair was wrapped around the base and secured with pins hidden beneath the fall of her hair in the back. The sleek ponytail dropped down to the middle of her nape. \n\nLooking in the mirror again, she gave herself a nod of approval. \n\nWhen Ryan arrived, he was a sight to behold. He was wearing a two button Hugo Boss dark Gray suit with black shoes. He wore a medium tone gray silk dress shirt with a matching gray silk tie and stainless steel cuff links. \n\nGrinning at Dani's open mouth expression Ryan said, bowing slightly, \"Your carriage awaits, Milady.\n\nSnapped out of her silence, Dani grinned back and said, \"You are so close to having me tear off your clothes and jump your big bone. Damn! You are gorgeous,\" She gushed.\n\nRyan gathered her in his arms and kissed her deeply. \n\nComing up for breath, he said, \"Thanks, baby.\"\n\n\"You look absolutely delicious. I love the dress. It's got that sexy floaty thing going on and your breasts; shit, guys are going to be all over you,\" he said with a lusty gaze as he gently caressed the tops of her soft mounds.  \n\nFeeling the rising heat, Dani took Ryan's roaming hand into hers and said, \"Let me get my purse and we can go before you get too distracted.\"\n\nTurning, she walked back to her bedroom, Ryan's eyes following her every step. But before she got very far, she looked over her shoulder, fluttered her eyelashes and wiggled her butt at him. \n\nRyan chuckled and said, \"You're begging for a spanking, lady. Hurry and get your purse, you don't want me thinking about that too long.\"\n\nWith that, Dani hurried out of the room. \n\n*          \n\nWhen they got to bar, there was already a nice crowd with h'orderves being served by the wait staff. One of the spacious banquet rooms was elegantly decorated and there was a large birthday banner draped across the ceiling. \n\nThe space in the front of the room was for mingling and dancing. In the dining area, which could be seen through a large open doorway, was ten tables which sat eight people each. Each table had a small floral arrangement set in a clear round vase at its center. The table was covered with pristine white linen. The dinnerware was white china etched with gold banding, the flatware sterling silver with gold edging. Crystal glassware rounded out the setting. \n\nSome time later, Caroline Jameson arrived with her date. Dani was at the far end of the room talking with a small group of women which included, Monica, Jessica, Haley and Amanda. \n\nCaroline was dressed in an elegant sleeveless sapphire chiffon dress that flattered her tall figure. The long dress flowed to the floor in shimmering waves. Her date was a tall blond with dark brown eyes; his hair was long, but professionally cut. They made quite a striking pair. \n\nDani, with her back to the room, noticed that Monica's attention was drawn by something behind her. Looking back, she didn't notice anything unusual and wondered what piqued Monica's interest. But before she got a chance to ask, Monica said,\n\n\"Caroline Jameson just arrived. She's wearing the long blue dress,\" she said for Dani's benefit. \n\nDani looked back again and said, after a slight pause, \"Oh. She's very pretty.\" \n\nAlthough Ryan told her about his conversation with Caroline at the bar, somehow Dani had totally put the woman out of her mind. She knew Caroline was no threat to their relationship. Had Ryan wanted to be with her, he would have made that move long before now.\n\nAfter a momentary lull, the women went back to their conversation. \n\nA few minutes later, Caroline made her way to the small group. Dani, with her back to the room, didn't see Caroline approach, but heard Jessica's whispered, \"Here comes Caroline.\"\n\n\"Good evening everyone,\" Caroline said in a cloying sweet voice. \n\n\"Isn't this just a fabulous party? I'm so glad that I made it back home in time to attend,\" she enthused. \n\nEveryone greeted her and welcome her home. They also, agreed that it was a great party and complimented her on her lovely dress. After a minute of banal chitchat with the other ladies, Caroline turned her attention to Dani.\n\n\"I know everyone here, but I don't believe I've met you,\" Caroline said. \n\nJessica looked like she was about to say something, but before she could, Dani introduced herself.\n\n\"No, we've never met. I'm Danielle Carter.\"\n\n\"Danielle Carter? Do you know my brother Tony or his wife Lizzie?\" \n\nCaroline knew very well who Dani was having asked one of her friends to point her out from among the few black women there. Soon afterward, she had the opportunity to escape her date. Nice man, but not the one she wanted. She left him talking sports with some of the men. \n\nDani knew what Caroline was about and decided to humor her for a while. But with her increasingly painful headache, she thought she might well strangle her instead. \n\n\"Both,\" she replied.\n\n\"I've known Tony and Lizzie for about eight months now. I actually met Tony first through Ryan,\" Dani answered sweetly. \n\n\"Oh, you're Ryan's little friend,\" Caroline said in a condescending tone. \n\nJessica started to interrupt, when Dani put out her hand and said, \n\n\"No need Jess, I've got this.\"\n\nIn a low voice Dani said to Caroline,\n\n\"I was willing to play along with your childish little game, but I will not be disrespected. You know who I am, that's why you came hightailing it over here, probably as soon as you could dump your date. I'm not a child and I don't appreciate being called little in that tone. Although I'm Ryan's friend, I'm also his lover. A big girl like you should know what that means or have you developed memory loss?\" Dani asked sarcastically. \n\nWhen Caroline started to reply, Dani said, \n\n\"Save it. I really don't want to hear whatever it is you have to say. I know being dumped must have been hard on you, but you really shouldn't let it make you so bitter. If you'll excuse me, I'm going to find my man. I'll give him your regards.\"\n\nTurning to her friends, she said, \"I'll see you all later.\"\n\nAs Dani strolled away, she heard Carolina say, \"How rude!\"\n\n\"Shut up, Caroline,\" Monica retorted. \n\nThen she walked away, followed by the other women, leaving Caroline standing alone.\n\nAfter the women walked away from Caroline in disgust, she realized that she'd under estimated Dani. She never thought the woman would pick up on her little jab let alone tell her off in front of everyone. She imagined, from what Karen told her, that Dani was a wallflower who let her sister fight her battles. \n\nStanding there alone, Caroline was well aware that instead of coming off victorious, she made a fool of herself. Not only that, but if she continued her behavior with regard to Dani, she would lose what little social status she had. That thought led her to the conclusion that she seriously needed a drink. \n\nCaroline waded through the crowd, barely returning greetings, and took a seat at the bar. After ordering and receiving a gin and tonic, she took stock of how she came to be where she was.\n\nShe knew that Ryan was serious when he said there was no chance of renewing their relationship. That really hurt; but if she couldn't have him, she wanted Dani to feel insecure about her relationship with Ryan and jealous of her. She still didn't understand what he wanted with a black woman, no matter how pretty or how everyone had so easily accepted her into their circle. \n\nBut as she lingered at the bar and ordered a second and third drink, it began to sink in that Dani hadn't been the problem in her relationship with Ryan. He didn't leave her for another woman, it was all on her. That had been the deepest cut and the thing that she hadn't wanted to confront; Ryan just didn't love her, never had. . Caroline sighed, took another sip of her drink and tried to resign herself to the fact that Ryan was forever lost to her. \n\nWhile she lamented the loss of the battle and her love, Caroline knew at least one thing for sure; Ryan would never marry the woman. \n\n*\n\nDani did leave to seek out Ryan, but her headache was becoming more painful and she thought it best to take care of that first. She went to the bar to see if Dave had anything that might help. \n\n\"Hey, Dave, do you have any Advil or Tylenol?\" Dani asked.\n\n\"I'm getting a monster of a headache. I haven't had any alcohol,\" she quickly added.\n\n\"Good,\" Dave said. \"I wouldn't recommend alcohol after taking these either. I always keep them on hand for myself. A barkeep's life is sometimes stressful,\" he added with a smile, reaching under the bar for the pills. \n\n\"I hear you. It must be a laugh a minute hearing all the stories; or am I stereotyping bartenders?\" she asked. \n\n\"Nope, you're right. I have plenty of stories to tell, some you wouldn't believe. It's amazing what people are willing to tell a complete stranger as long as he's serving them alcohol.\" \n\nHe poured out a glass of water and handed it to Dani. \n\n\"Thanks,\" Dani said, then downed two pills with half of the water. \n\n\"I'd best be getting back to the party.\"\n\nTurning, she almost ran into Ryan. \n\nAfter steadying her with his hands on her forearms, Ryan pulled her to him, sliding his arm around her waist. \n\nWith a frown he asked, \"Are you all right, baby?\"\n\nLeaning on him, she said, \"I'm ok, Ryan, I just have a sinus headache. I took some Advil; I should be fine once it kicks in.\"\n\n\"Do you want to go home?\" he asked, lifting her chin with his finger to look into her eyes. \n\nShaking her head, Dani said, \"No. I'm sure I'll be fine, I just need to give the pills time to work.\"\n\n\"All right, but let me know if you need to go; Tony and Lizzie will understand,\" he assured her. \n\n\"By the way, I saw you talking to Caroline. Is she in any way responsible for your headache?\"\n\nDani shook her head before answering. \n\n\"She's a pain, but in the other end. I'll tell you about it later. I was coming to find you when I decided I was in immediate need of something for my headache.\"\n\nPlacing both of her arms around Ryan's neck, she nuzzled his chest. \n\n\"Ummmm.\"\n\n\"You sound like you're sleepy. Are you sure you don't want to go home. I could make some hot tea and put you to bed,\" he offered. \n\n\"That sounds wonderful, but we haven't been here long. I really think I can make it through dinner which will be starting in a few minutes. I promise that I will let you know if I need to leave,\" Dani replied. \n\nLooking up at him with a sexy gleam in her eyes she said,\n\n\"I just love to snuggle with you. Tell me why I'm staying here and not going home to bed with you.\"\n\nRyan chuckled and pulled her along as dinner was announced. \n\nThirty minutes later Dani was only picking at what was left of her food. She was starting to feel more fatigued and listless. Besides the headache, she was a little bit nauseated. She wasn't in distress, but she didn't want to take any chances. Running to the bathroom to vomit in the middle of a party wasn't in her plans. \n\nTurning to Ryan, she said in a whisper, \"Ryan, I think I need to go home. I don't feel so well.\"\n\nLooking at her with a frown of concern, he said, \"Ok, baby. Let me tell Tony. I'll be right back.\" \n\nWalking around the large Table, he bent down and whispered in Tony's ear. Dani saw Tony nod and give her a small smile which she returned. \n\nRyan came back and explained to those immediately around them that Dani wasn't feeling well and they were leaving. After they murmured their well wishes to Dani, she and Ryan left, navigating through the tables. \n\nThe conversation at the tables was lively and boisterous which allowed them to leave without much notice. \n\nHowever, there was a pair of envious eyes marking their departure. \n\nCaroline wondered what was prompting their haste to leave. She felt her cheeks heat as she recalled that a number of times she and Ryan fled parties to rush home and make hot passionate love all night long. Even now, the thought of those nights was causing her vagina to throb and ache.\n\n\"Oh, fuck!\" She thought as she felt her panties dampen. She glanced over at her date and knew he'd get lucky tonight. \n\n*\n\nRyan took Dani home and straight to the bedroom where she undressed while he got a gown from the large chest of drawers. He helped her into it and pulled back the covers on the bed. \n\n\"I've got to take off my make up and brush my teeth,\" Dani said wearily. \n\n\"All right, baby. I'm going to turn off the lights; do you want anything to drink?\" Ryan asked.\n\n\"Water, please,\" she replied and turned to go to the bathroom.\n\n\"Ok, I'll get it,\" he said. \n\n\"Get the thermometer out of the vanity,\" he called out. Before heading to the kitchen, he hung up her dress in the closet and placed her shoes on the closet floor. \n\nRyan returned to find Dani sitting in bed under the covers. He put the water on the night stand and picked up the thermometer she'd placed next to the lamp. \n\n\"Open wide, sweetheart,\" he requested. \n\nHe put the thermometer under her tongue, waited for the beep, and then checked the reading.\n\n\"Ninety nine point two,\" he said.\n\nHe reached into the side table, got a pen and small pad making note of the time and temperature. It was in the range of normal, but he'd keep an eye on it.\n\n\"With your symptoms, baby, you might have more than a sinus headache. If you aren't better in another day, I think you should to go to the doctor.\"\n\nDani nodded. \n\n\"If you need me during the night wake me, understand?\" he asked. \n\n\"Yes,\" Dani said with a weak smile. \"Are you going to be like a mother hen now?\"\n\n\"Oh, hell yeah,\" Ryan answered with feeling. \n\nLeaning down he pushed her hair back off of her forehead and kissed her there. \n\n\"You're my woman and I mean to take care of you.\"\n\nWith a sigh, Dani sank down into the bed. \n\nRyan went to the bathroom; when he returned, he undressed and got in bed behind her easing her into the spoon position. \n\n\"Goodnight, sweetheart,\" he said as he placed a kiss on her nape. \n\n\"Goodnight, baby,\" Dani whispered.\n\nMinutes later, they both were asleep.\n\n*\n\n     \n\n\n\nDani didn't feel any worse the next day, but that night was fretful with her waking up every few hours coughing. Her face hurt, her throat was sore and she had a bad taste in her mouth. \n\nShe awakened Ryan, but not intentionally. \n\nShe apologized profusely and offered to sleep in the guest room. Ryan told her, in no uncertain terms, that it wasn't going to happen. Dani didn't argue because she really didn't want to be alone.\n\nRyan took her temperature again and recorded it.\n\n\"One hundred one point two degrees,\" he said. \n\n\"Is there anything you want, baby?\"\n\n\"A glass of water, please.\"\n\nWhen he returned, she drank some of the water with two more Advil, which put her at the limit for a twenty four hour period. \n\nDani knew that she had a sinus infection. She'd suspected it before now, but chose to deny it. She hated to go to the doctor, but knew she would need to sooner rather than later. However, she didn't see a need to tell Ryan, at least not at that moment.\n\nShe finished the water and snuggled back into his arms. \n\nThe next morning Dani felt too sick to go to work. She probably could make it through the day, but didn't want to risk making mistakes. Ryan called and spoke to her boss, Mr. McClain, who wished her a speedy recovery and said she should take all the time that she needed. \n\nBefore Ryan went to the bar, he left instructions with Dani to call him if she needed anything. She would have preferred not to bother him at work, but Crystal was out of town meeting Isaac's family.\n\n*          \n\nDani's condition progressively worsened. She berated herself for not going to the doctor earlier, but regret was a little late. Just as she was reaching for the telephone to call the doctor, the phone rang, it was Ryan.\n\n\"Hello,\" she answered in a croaked voice.\n\n\"Hey, baby, you sound worse,\" he said.\n\n\"I think it's time that you went to the doctor. I'm coming home to take you. Call your doctor and let him know. If he can't see you, I'll call my doctor. Ok?\" \n\nRyan asked, but Dani knew that he would drag her there if need be.\n\n\"Ok, Ryan,\" she agreed. \"I'll be ready.\" ",
        "\"All right; I'm leaving here in about five minutes; I just need to let Dave know.\"\n\n*\n\nOnce they got to the doctor's office, Dani gave them her information and sat down to be called. It didn't take long for which she was grateful; the other patients were looking at her like she had the black plague. \n\nDr. Morgan confirmed the sinus infection and admonished her for waiting to come in. He gave her a ten day prescription of antibiotics and a prescription nasal spray along with a list of instructions. If she wasn't feeling better in a few days, he expected her to come back in. That edict was delivered with a stern expression. \n\nThe doctor phoned the pharmacy with the prescriptions and Ryan picked them up on the way home. Dani followed his regimen, going back to bed immediately after she took her medication. \n\nRyan called her office and spoke to McClain's secretary, giving her an update on Dani's condition. She was taking two weeks of her sick leave. \n\n*\n\nWhen Dani woke up the next morning, she felt like she'd been run over by a truck. As she tried to focus she realized that Ryan was not in bed. Then she heard running water in the adjoining bathroom. \n\nSlowly she got up and trudged to the bathroom. It was the shower running, but she couldn't immediately see Ryan because the shower was in a recessed area of the large room. Looking in the mirror, she took in her flushed face, droopy eyes and wayward hair. \n\n\"Eww!\"\n\nFinding a brush in the vanity drawer, she ran it through her hair to corral her wayward mane. \n\nWhen she got it under control she reached for her toothbrush, her mouth tasted foul. She applied a dab of toothpaste, but before she could get it to her mouth, the smell of the mint hit her and her stomach roiled. She couldn't make it to the toilet, instead she bent over and hurled right into the vanity sink, great gagging heaves. \n\nRyan heard her and immediately turned off the shower. Stepping out, not bothering to wrap a towel around his body, he hurried over to Dani. Standing behind her, he wrapped his hands around her hair and held it away from her face and the bowl. \n\nDani thought the inside of her stomach was going to come out of her mouth. She closed her eyes to keep from looking at the remains of her dinner. There was nothing she could do about the smell which made her want to hurl all the more.\n\nWhen she was finished, Ryan turned on the cold water and she washed out her mouth. Still leaning over the bowl with her eyes closed, she felt Ryan rub her belly with one hand to soothe it, while his other hand still held her hair out of the way. \n\n\"Ok now, sweetheart?\" he asked. \n\nDani nodded, straightened up and leaned back against him as he held her. \n\n\"Eww, that's nasty,\" she said.\n\nChuckling, he said, \"Yeah, been there, done that.\" \n\n\"I called Micah to let him know that I'm not coming to the bar for at least a few days. He'll be on call for any major problems, other than that Dave can handle things. Jason will bring over the receipts for the week and I'll work on them here.\" \n\n\"You really don't have to stay home, Ryan, I'll be ok.\" \n\n\"I know if I weren't around, you'd take care of yourself, but I am around and I intend to take care of you. That's how it's supposed to be,\" Ryan told her resolutely. \n\nLooking in the mirror at him holding her, Dani tried not to tear up as she said, \"I love you, Ryan Sinclair.\"\n\nKissing her neck, he replied, \"I love you, Danielle Carter.\"\n\nDani let his warmth engulf her for a moment. \n\n\"Ok, I need to brush my teeth and take a shower. Will you get me another gown please, you got me wet and not in a good way,\" she said giving him a weak little smile. \n\n\"All right, but don't try to shower alone. I'll come back and help you after I put on a pot of coffee. Promise you'll wait.\" he said looking her straight in the eyes. \n\n\"Ok, Mr. Mom, I'll wait,\" she said with some sass. \n\n\"Good,\" he said and gently pinched her butt.\n\n\"Hey!\" she croaked.\n\nRyan didn't reply, but rubbed her butt and kissed the top of her head before saying, \"I'll be right back.\" \n\nAfter he left, Dani quickly brushed her teeth before her gag reflex engaged. She got a black elastic band from the vanity and used it to pull her hair into a neat ponytail, making sure not to tighten it too much. \n\nSatisfied that her hair wouldn't be a bird's nest when she woke up again, she waited for Ryan before taking a short warm shower. Once she was finished he helped her into a long cotton gown and she went back to bed. \n\n*\n\n      \n\nThree days later, Dani was feeling better. She was still fatigued and congested, but she could see the light at the end of the tunnel. She was breathing better and thankfully she'd gotten that horrible taste out of her mouth. \n\nDani received a lot of calls from well wishers which mostly went directly to voice-mail. In the evenings, Ryan returned the calls for her except the ones from her family. She spoke to her mother and father and assured them that she was feeling better. She also kept Crystal up on her condition. \n\nAccording to her sister, Isaac was growing on their mother since he's shown that he's really serious about her. Crystal was happy and although she didn't say it, Dani believed her wild child sister was finally in love. \n\nJames called several times and Dani spoke to him. \n\n*\n\nA few days later, Dani was taking a nap when Ryan got home. \n\nHe went to the bedroom to check on her and found her burrowed under the covers. Her breathing was steady and even. After kissing her forehead, he went to the kitchen to start dinner. Even though he had a restaurant at the bar, he liked cooking their meals at home.\n\nAlthough Dani's appetite, which had been off, was slowly picking up, a light meal was still in order. He cooked homemade Garbanzo Bean Soup with smoked turkey sausage, along with some crusty bread. After he'd gotten the soup started, he sat on the sofa to read the newspaper.\n\nHe was sitting there when Dani got up an hour later. \n\nShe approached Ryan, her hips swayed gently and he was amused that she was attempting to seduce him. She had on a sexy hot pink baby doll nightie with a matching satin robe, which she conveniently left open. She'd obviously freshened up and her hair, which was in a ponytail while she slept, fell softly around her shoulders.\n\nWhen Dani got near she smiled and said, \"Hey, baby, when did you get home?\"\n\n\"I got home a little over an hour ago. I looked in on you and you were sleeping. I decided not to wake you, although you were awfully tempting.\"\n\n\"How are you feeling?\" he asked.\n\nBefore answering, she sat down next to him and snuggled into his body with her legs pulled up on the sofa behind her. The scent of his cologne was doing things to her libido, not to mention just being close to him. \n\n\"I still have a way to go before I'm completely well, but I'm doing a lot better,\" she said. \n\n\"But...\" she continued, letting the word linger between them, \"there are some activities which I do believe I'm capable of performing now.\"\n\n\"Is that right?\" Ryan countered running his hand down her back and cupping her butt. \n\n\"Uh, huh,\" she said, giving him an impish grin. \n\nHe softly kissed her on the lips and quickly deepened the kiss when she opened up. Feeling his desire rise, he eased Dani onto her back while still maintaining the kiss. Her legs unfolded and opened as he settled between them. \n\nComing up for air, Ryan said with a grin, \"Mmmmm, you taste like spearmint.\"\n\nDani returned his smile.\n\n\"Yeah, I took care of that before I came out. I was hoping I could get some nookie.\"\n\n\"Nookie? \n\n\"Yeah, you know, some attention from little Ryan,\" she clarified with a smile. \n\n\"I know what it means,\" Ryan said with a snort, \"but I didn't think people were still calling it that.\" \n\n\"Nookie?\" he said again, laughing so hard he started tearing up. \n\nThe word just struck him as hilarious.\n\nWith a little pout, Dani said, \"Well, I guess that means you aren't interested.\"\n\nWiping his eyes and regaining most of his composure, Ryan declared, \n\n\"You're not getting off that easily. I don't care what it's called, I'm getting some. It's been over a week and little Ryan, as you call it, wants to come home. Let's go to bed and get this show on the road.\" \n\nIn the bedroom, Ryan and Dani quickly undressed. Dani got in the bed, lying on her back. Ryan crawled in from the bottom. \n\n\"Feet flat, legs spread, baby. I'm like a starving man presented with a feast,\" he growled.\n\nWith a soft moan, Dani bent her knees, planted her feet on the bed and spread them wide. Her heart rate increased as Ryan approached and lay on his belly, giving himself full view and access to her feminine parts. \n\nSnaking his arms under her thighs, he looped his hands on top of them and pulled her body to him as he brought his head down. \n\nDani could feel his warm breath on her mons, eliciting a groan from her parted lips. Hearing it, Ryan smiled and kissed her there, his senses reeling with the scent and heat of her arousal. Extending his tongue, he flicked her clitoris until her panting increase and he felt her hands pulling at his hair. Looking up at her, he untangled her fingers and held her hands down on the bed. \n\nMoaning in frustration, Dani tried pushing her bottom up in hopes of regaining contact, straining to get her hands out of his grip. But Ryan held her fast and bit her clitoris gently which brought forth a squeal from her. Raising his head, he looked her directly in the eyes and said huskily, \"Keep them down and I'll make it worth it.\"\n\nTaking his hands away, Ryan gave full attention to her moist slit. With his long middle finger, he entered her hot pussy. Once it was all the way in, he bought his mouth back to her clitoris, sucking and licking as he plowed her pussy with his thick digit. \n\nDani's body bucked, but her hands stayed in place, gripping the sheets. She mewled as a rush of desire spiralled from her core upward to her breasts. Ryan stroked his finger in and out; slowly at first, gaining speed as her excitement grew. Soon another finger joined the first one, stretching her opening. \n\nIn the large room, the sound of Dani's pants and groans seemed amplified along with the sucking noises from the fingers rocketing into her now juicy pussy. Ryan stayed the course, tasting the essence of her desire as he delved into each crevice, withdrawing his fingers and stiffening his tongue to fuck her like a little penis. \n\nDani could feel the tightening in the steamy walls of her vagina portending the approach of her orgasm. Ryan's tongue and lips had the plump little nubby at the top of her sex throbbing and burning with the stimulation. A fine sheen of sweat covered her body as her hands clutched the sheets in an effort to keep them at her side. She needed to feel the rush of completion, but Ryan was going at his own pace.\n\nDani thrashed on the bed, her head rolling from side to side, her words unintelligible as Ryan brought her to the precipice of release and then eased her down over and over again. He played her body like a fine instrument with just the right touch of ebb and flow.\n\nJust when she thought she would lose her mind, he got to his knees, flipped her over onto her belly and spanked her ass hard causing Dani to wail and her entire body to tremble.\n\nGiving her another stinging swat, he ordered sharply, \"Up on your hands and knees!\"\n\nDani scrambled into position, mere moments from climax. Once she was set, Ryan spanked her again, in quick succession.\n\nWhack!\n\nWhack!\n\nWhack!\n\nWhack!\n\nWhack!\n\nDani screeched and felt the quivering of her thighs threatening to unbalance her, her pussy tingling and quivering, her ass burning. With her orgasm imminent, Ryan gripped the base of his cock, pressed the head to her opening and rammed forward until the head and a few inches of his shaft popped inside. He grunted, but held still. \n\nOnce he was sure that she could take more, he quickly slid the remainder of his cock into her passage and set up a sliding rhythm, gaining speed as his own orgasm approached. He hammered Dani's pussy, first with quick short jabs then long gut wrenching strokes until he felt her walls spasm, clutching his dick. \n\nWhen Ryan increased the speed of the long strokes, pistoning his cock into her over and over, Dani gave a shrieked of pleasure. Her walls tightened around his hard on as she tripped into climax, melting with long drawn out shouts of ecstasy. \n\nWith his big body covering her moist back, Ryan continued to spear her aching swollen pussy. Not letting up, his hips rocked with long deep pounding strokes as his cock expanded and his own long overdue orgasm took hold. \n\nHe pummeled her sweet spot as he released his hot load into her throbbing tunnel. Shot after shot of thick cream spewed forth as he hugged her body tightly to his, panting in her ear. Long wails of pleasure burst from Dani's strained throat, bouncing around the room, echoing Ryan's harsh grunts of pleasure and satisfaction.\n\nIt was a long time before either of them came down from the intoxicating high of their climax; long minutes while Dani stroked whatever part of Ryan's big frame that she could reach, long minutes while he touched and nibbled and licked her moist trembling body. \n\nFinally, Ryan pulled his softening cock from her body. Inch by glorious inch he enjoyed the warm pulsing of her core and felt the shiver of her body as the rim of the large gland tugged at her opening on its way out. \n\n\"Damn!\" he thought, \"I love this woman.\" \n\nRolling onto his back, he pulled Dani into his arms. There was no need for words; their fiery heat said it all. As their bodies cooled, their minds relaxed. Tired, but sated, they gave up consciousness for blissful slumber. \n\nMuch later, they got up and ate dinner and spent the rest of the evening talking about their plans for Thanksgiving and James's visit. When they went back to bed, it was to cuddle and whisper soft sweet words. "
    ],
    "authorname": "MissPrimrose222",
    "tags": [
        "wm/bw",
        "party",
        "confrontation"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/ryan-ch-06"
}