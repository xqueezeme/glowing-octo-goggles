{
    "title": "Eva's Valentine's Day Choices",
    "pages": [
        "Hi, this is my entry into the  and is a long romance, but please don't drop the story and claim, \"The story is in the wrong category.\" You'll need to read more to see if it makes sense.\n\n~~~***~~~\n\nFriday, 7th January.\n\nEva sat high above the railway tracks on the cap of the road bridge's central supporting leg's buttress. She could avoid looking down by leaning back on the high stone balustrade, which hid her from passing cars and pedestrians behind her. Unfortunately, by leaning back onto the stone, it also added to the cold attacking her body. \n\nDespite being mid-morning, the January sun barely warmed her, as it peaked over the local housing estate and hills beyond. Even with her thick coat on, she was freezing, with the cold seeping up out of the concrete into her backside and back. Her sketchers were great for driving her car and shopping, but were useless for keeping her toes warm whilst dangling in fresh air.\n\nShe looked across at the unresponsive hooded stranger she was sitting alongside. Their scruffy, black hoody pulled over their head, obscured any chance of recognition with their hands thrust deep into the hoody's front pocket. At the bottom of their ragged jeans, a pair of Doc Martins dangled in the air, not caring about the drop-down to the ballast and tracks below.\n\nAs yet another train thundered under the bridge from behind without warning, Eva jumped in shock, to then watch it heading to the south coast or possibly London. Eva's leggings slipped on the concrete, forcing her to scoot and creep herself back up the slope, not wishing to fall. Her silent companion's jeans kept them inert on the same sloping ledge.\n\nStill, the silent stranger alongside her showed no emotion, unmoved. Eva was now regretting her choice to be a Good Samaritan. She could have continued walking, like all the dog walkers on the path alongside the railway tracks, but no... She had chosen to look up and saw the stranger perched on the ledge.\n\nMaybe they were just a devoted train spotter and not about to throw themselves to their death, but Eva couldn't turn her back and walk away. She couldn't risk the possibility of having that guilt on her conscience when maybe she could have made a difference.\n\nIn the distance, she could see an express coming towards them. This was worse than the ones that emerged from beneath the bridge unannounced. She could see this one approaching, anticipating the diesel screaming past and the blast of hot air. Worse still, was that the stranger could also, timing their leap to their deaths in front of it.\n\nHave I left it too late?... Jeez, if they jump with me here, the police could think I pushed them off, but if I hold on to them, they could pull down to my death with them. \n\nThen she had an idea... Maybe not her best one today, but now she was sitting there, cold and committed. Reverse psychology works in novels, but would it work today?\n\n\"Hi, it's me, Eva, again. I'm a little scared being up here, with the trains being so fast and coming so close. Do you think you could hold my hand?\"\n\nAt last, the hoody shrugged its shoulders and turned. Eva was now full of apprehension. What are they going to look like, dishevelled, tattooed with piercings and teeth sharpened to points?\n\nToo late now girl, you just had to climb over the balustrade from the path and interfere.\n\nShe needn't have worried, as the hoody turned to expose a small, ashen, feminine face with deep blue eyes framed by jet black hair, which made their face seem even smaller and paler. Thin pink lips smiled and a small thin hand emerged from the cavernous pocket, as hoody shuffled closer to Eva.\n\n\"It's okay... Hold my hand if you're frightened. It'll be okay. I'm used to the trains, and they're nothing to be scared of.\"\n\nThe hand reached for Eva's, but felt like ice, shocking Eva, who grasped it with both of hers, trying to rub some warmth into hoody's limb. The hand was soft, but the voice was croaky, and despite looking feminine without makeup, Eva wouldn't want to second guess Hoody's gender.\n\nEva's gaze returned to the approaching train, unable to tell if the driver had seen them, but was still going too fast to stop. Eva wondered if she should try to signal the driver, to show them that they were okay, but at that speed, any signal would be a blur. \n\nAs the express thundered passed, a hot diesel smelling wind from the exhaust washed over them, to be followed by a larger blast of an icy wind. Hoody held Eva's hand, patting it reassuringly, smiling at her. Then, out of the blue, their arm let go of Eva's hand and wrapped around her shoulders to give her a warming hug.\n\n\"What's that for?\"\n\n\"Umm Err... I wanted to reassure you, hoping you feel safer now.\"\n\nCheeky bugger... I'm up here to reassure them.\n\nEva tried to see if hoody's eyes showed signs of drug use, but not being familiar with drug use, she wasn't too sure what to look for.\n\nAre the pupils supposed to be tiny dots or overly large? Their eyes are narrow, but the winter sun is low and in our eyes.\n\n\"I do feel safer, thanks.\" Maybe I can keep them talking.\n\n\"Do you normally ignore strangers, and then give them a hug?\"\n\n\"Oh... No, sorry, it was a spur-of-the-moment thing, as you looked scared\"\n\nYeah, scared you'd jump or I fall off.\n\nEva nodded and smiled back.\n\n\"Yeah... I was thanks. Are you okay up here on your own?\"\n\n\"Yeah, I often sit up here on my own... They can't see you from the road. No one looks up from the path below. I like to sit and watch the trains, more often in the dark.\"\n\nHoody returned to their thousand-yard stare to the end of the railway tracks in the distance, but then, as if they'd remembered something long forgotten, they turned to Eva.\n\n\"If you're scared of trains... Why did you come and join me?\"\n\nHoody caught Eva unawares and bang to rights. Her face must have told the story.\n\n\"You thought I was going to jump?\"\n\nEva felt her face blush and cheeks burn, despite the cold. There was no avoiding it and hoody knew it.\n\n\"Ah... Er... Yeah, hi, I'm Eva.\" \n\nEva held out her hand, hoping she could help this stranger.\n\n\"Yeah, you've told me, several times. No one ever notices me, but you thought I was going to jump?\"\n\n\"Well... I've dropped my car off for its MOT annual inspection, at the garage over there, and I didn't want to sit in the waiting room. I was going to walk to the old playground over the back.\"\n\nEva pointed over her shoulder, meaning the other side of the bridge.\n\n\"I used to play there as a kid and now they're going to build new houses on it, so I thought I'd go and maybe take some photos, for old time's sake. So took the old ash path.\"\n\nEva pointed down to the path next to the railway, which also ran under the bridge, where they could see a passer-by's head bobbed along over the top of the overgrown bushes.\n\n\"But unlike all the others, you looked up... And cared enough to come and sit with me?\" \n\n\"You don't mind?\"\n\n\"No, it's kind of sweet and very brave... Thanks\"\n\nHoody hugged Eva, to peck a light kiss on her cheek and their spare, even colder left hand shook Eva's.\n\n\"Hi, I'm Mandy... No... Er... Mark.\" \n\nEva saw confusion and hurt in the Mandy-Mark's eyes, as he or she returned to staring out along the railway, releasing Eva's shoulders and returning their hands to the hoody's pocket.\n\n\"Not sure?\" \n\nEva wondered at how big a Pandora's Box she had opened.\n\n\"Uhh...\"\n\nMandy-Mark pulled their other hand free from the hoody's pocket and tugged the hoody's neckline open, gathering a T-shirt's neck to peer down to their chest.\n\n\"Ahem, Mark today... I don't like being Mark...\" \n\nThe stranger's voice deepened, a little more masculine, but Mark looked deathly saddened by the discovery.\n\n\"Why don't you like Mark?\"\n\nPlease, don't let Mark be a mass murderer.\n\n\"He's sad...\"\n\nAgain, Eva regretted her judgment at volunteering to be the Good Samaritan.\n\n\"So I assume you like Mandy?\"\n\n\"Yeah...\" \n\nMark's eyes lit up.\n\n\"What do you like about Mandy?\"\n\n\"She's pretty... She's nice... She wears nice clothes... I feel happier.\"\n\nMark looked directly at Eva, to smile, and Eva could see what looked like a light smear of lipstick in the corner of his lip. \n\nIs Mark suffering from some form of psychosis, a split personality or just a depressed, lonely cross-dresser? \n\nDesperate to change the topic, Eva piped up.\n\n\"Well, now I'm here, do you mind if I keep you company?\"\n\n\"No, it's nice to have company, thanks...\"\n\nEva still wasn't a hundred percent of the stranger's gender with their hoarse voice, although it dropped to a softer tone sometimes. Not as if he was practising a softer voice, more as if he were testing a coarser, masculine voice. \n\n\"You been here long?\"\n\nEva's arse was so cold it hurt and the wind chill was freezing her to the bone.\n\n\"Dunno...\"\n\n\"Do you live local?\"\n\n\"Yeah, over there...\" \n\nMark nodded to the older housing estate, to the right of the railway, fed by the link road next to the MOT garage. This hopefully gave Eva the opportunity to talk Mark away from their freezing shelf.\n\n\"Wouldn't it be warmer back home?\"\n\n\"Nah... Heating packed in... Yesterday I think... It's freezing, so I came out for a walk...\"\n\n\"Do you know what's wrong with your heating?\"\n\n\"Dunno, the thermostat went blank, no readout... Busted.\"\n\nMark shrugged, looking helpless.\n\n\"Is the Thermostat Wi-Fi or wired to the heating? Mine is a Wi-Fi connection and the batteries can go. Is your thermostat on the wall, or can you move it around?\"\n\n\"Yeah, it's like a little digital clock. I moved it to sit by the front door, so it cheats it into thinking it is colder, so I stay warmer watching TV.\" \n\nMark's eyes brightened a little.\n\n\"What if I come home with you? I could look at it. It may just be a duff battery, the same happens to mine.\" \n\nEva tried to grasp at any straw to get them both off the freezing cold ledge. \n\n\"Come on then, let's get back over the wall and we'll see if we can fix it.\"\n\nEva hoped this was their ticket to somewhere warmer.\n\n\"Ooo wait, another train is coming.\"\n\nMark fidgeted in excitement, nodding to the distant horizon where another express train was thundering towards them. Both his hands grasped Eva's, and he even patted her knee to comfort her. \n\nThis time Eva was sure the driver was watching them, with a co-driver holding a phone in his hand. The noise and warm exhaust blast, followed by the icy blast, encouraged them both to move. \n\nMark rose creaking, with stiff cold limbs, having to shake and stamp his legs to get the blood flowing. His hand came down to hold Eva's and pull her up, struggling to rise on freezing cold limbs. Now standing, Eva was a little shorter than the concrete balustrade, realising that the climb back won't be easy. Mark cupped his hands together, gesturing for her foot to step in.\n\n\"It's okay, I'm used to it. I can easily scramble back over on my own. Step in and reach up, but don't fall backwards.\"\n\nEva stepped into his hands, placed her hands on his shoulders, and straightened up. Mark lifted her up, and she easily flopped over the top of the balustrade, swinging her legs over to stand on the more sheltered side. She looked back in time to see Mark following her, swinging his leg over and jumping down.\n\nThe two ignored the passing cars as they stamped their feet and shook themselves, trying to force the blood back into their stiff, cold bodies. Now Mark was standing alongside Eva, who at five foot six, could see he was no taller than her. Despite his baggy hoody, he looked petite, not helped by his black hair peeking around his face and his long thin fingers, with long nails.\n\n\"Is that better?\"\n\nEva nodded, and retrieved her phone from her pocket. Checking the screen, she'd missed a text from the garage confirming her car was ready. She feigned more warming up as she pondered on what to do now.\n\nMark pulled his hoody off his head, flicked his dark flat hair around that hung just short of his shoulders. Hair that had the look of someone trying to do something with short hair, that they're trying to grow longer, but wasn't there yet. \n\nHis long thin fingers brushed through his hair as he shook his head, then flicked the fringe out of his eyes, flicking his hair back behind his ears, as any woman would.\n\nLooking at his petite face, Eva noticed his feminine button nose. Not unknown in men, but with other hints of feminine features added to her confusion. Eva had heard about facial feminisation surgery for men, but not enough to guess if he'd had it done. If he had, it wasn't in the last few months. If so, why would anyone that committed still dress in baggy, masculine clothes and maintain a male name?\n\nAlong with his broken voice, this confused Eva, unable to label her new friend, whether a lost soul, lonely single male in uncertain times, a pan-sexual, or a cross-dresser trying to come out or what? Who knows? But she had nothing better to do today, and Mark didn't seem threatening. Maybe he just needed company and some heating to warm him.\n\nEva lived alone and thankfully with the onset of Omicron, could work from home but being Friday she had no teams meetings or client calls booked today. Her day was largely free and tomorrow was the weekend.\n\nShe certainly didn't want to walk away and find out either Mark or Mandy had returned later and had done the unthinkable, despite his denying it. She resolved to continue being the Good Samaritan.\n\n\"Have you had breakfast, Mark?\" \n\nEva's MOT slot was at eight-thirty and Mark had been there long before. So it was doubtful.\n\n\"Err... I don't know... I remember it was dark when I left home...\"\n\n\"My car is ready. How about we get a Mackey Dee Breakfast each, go to your house and see if I can mend your heating?\"\n\nMark checked his scruffy jean's pockets and looked horrified. \n\n\"I've not come out with any money, sorry.\"\n\n\"Mark, two breakfast rolls with coffees will only be a couple of quid. It's not a problem.\"\n\nMark didn't look convinced.\n\n\"How about I buy us a breakfast roll each and you brew us up a cup of tea at home?\"\n\nMark seemed happier with the barter system and nodded happily in agreement.\n\n\"Right, come on then, we'll have to pick my car up at the garage.\"\n\nBefore they had taken a step, Mark's chilly hand held Eva's, his other gripped her arm as they walked together. Anyone watching would have thought they were two close girlfriends walking rather than two strangers. \n\n\"Do you have a mask?\" Eva asked as they arrived at the Garage.\n\nMandy checked her pockets, pulling one out of a back pocket. At the office door, they both slipped on their masks.\n\n\"Come into the warm while I pay.\"\n\nMark nodded and followed her into the tropical warmth of the garage's office. Eva sorted out her car and the bill with the receptionist. Thankfully the car passed, with only a warning on front tyre wear, so it will need a new one in a month or two, otherwise it would be good for another year. \n\nMark stayed close to Eva as she paid, ignoring the empty comfy chairs for customers. Once finished and outside, they got into Eva's car. Mark settled into the passenger seat and Eva buckled her seat belt. As she started the engine, she looked across at Mark.\n\nMark smiled back. His teeth were porcelain white and as the sun streamed through the windscreen two things struck her. One was he was holding the seat belt off his chest, as a woman would do. The second was how pretty he was, with his blue eyes and long eyelashes. Not a hunk or handsome but prettier than her last girlfriend and thinner too, if you could ignore the oversized, baggy hoody.\n\nWhaaat... Are you mad? This Good Samaritan kick is getting to you. \n\nEva shook the image from her mind, then drove back out onto the main road and made her way to the local McDonalds. In the drive-through, she ordered two breakfast rolls. Collecting their rolls from the drive-through window, Eva saw the hunger in Mark's eyes, so rather than driving on, she parked up in the car park and suggested that they eat.\n\nMark's breakfast roll barely touched the sides as he wolfed his down, confirming Eva's worries. She offered him her roll, and before he could politely refuse, he wolfed the second one down, too. Realising his greed, Mark shot Eva a guilty look of apology.\n\n\"That's okay. I had breakfast before coming out. I could see you were hungry. When did you last eat?\"\n\n\"I don't know, but I'm not hungry now, sorry. I've got some carrot cake we can have with our tea at home.\"\n\n\"Haha, that's okay, carrot cake sound's lovely.\"\n\nEva started her car, and they left the car park, heading back towards the garage and the railway bridge.\n\nOn the railway bridge, a police car had parked and two officers were peering over the balustrade, talking into their radios and looking around. Eva felt guilty, a part of her wanted to tell the officers everything was okay, but she didn't want to open a can of worms and paperwork.\n\n\"Well, there's a first. Maybe I'll have to avoid sitting there for a while.\"\n\nMark shrank down in the chair as if they'd recognise him.\n\nMark gave Eva directions, taking them down a side road, past the garage and along a suburban road with small one and two-bed terrace houses. Midway down the street, Mark indicated for Eva to park up outside a red door. \n\nSitting there briefly, Eva ran felt unsure. After the lockdowns and now omicron, she was about to enter a stranger's house. But she couldn't walk away from this poor individual. She could see the confused and depressed state he was in.\n\nWhat are the risks, Covid versus having a flattened Mark or Mandy on her conscience?\n\nEva made her choice to continue her Good Samaritan role and exited her car. Mark already had his key in the door, unlocking it. Eva locked her car and entered Mark's house.\n\nThe house was freezing cold, but at least inside there was no wind chill. A whole mixture of smells products permeated the house, not masculine stale sweaty smells, but cleaning products, air fresheners and a hint of female antiperspirant.\n\nIt was a typical one-bed terrace house, where a short hallway opened up to the lounge, linking to the kitchen in the back with a stairway up to the single bedroom and bathroom above the kitchen. As Eva stepped into the immaculately tidy lounge, Mark presented her with an alarm clock sized thermostat. \n\n\"See, the screen is blank.\"\n\nEva rolled it around in her hands and found the battery compartment, popped it open to drop out two double-A batteries.\n\n\"Where's your boiler, and do you have two new ones of these?\"\n\n\"Here in the kitchen.\"\n\nMark nodded and Eva followed him into the small kitchen, which, like the lounge, was spotless. Mark pointed to the boiler, tucked up on the wall in the corner. \n\nEva recognised the white rectangular combination boiler as being similar, but smaller to hers. She popped open the little hatch and saw the blue flame in the window, then the little dial gauge, showing water pressure was in the green region.\n\n\"Well, your pilot light is on and you've water pressure.\"\n\n\"That's good, right?\"\n\n\"Yeah...\" \n\nEva looked back at the thermostat. It too had a little hatch that she popped open, revealed some buttons and easy-to-read instructions.\n\nMark rummaged around inside a cabinet drawer to pull out a pack of batteries and popped two double A's out and handed them to Eva. Eva popped them in the thermostat and reread the instructions. She pressed two buttons together, counting to five, then saw the screen double flash and then she toggled the temperature button up.\n\nAs the numbers passed ten, the boiler fired up, bringing a huge smile to Mark's face.",
        "\"We can set the clock easily enough. What time would you like the heating to come on in the morning?\"\n\n\"I'm up at five, for the six o'clock shift.\"\n\nAha, that's good, he works.\n\n\"Okay, so I'll fire it up for four-thirty, so it will be warm for you and shut it off when you leave, say, five-thirty?\"\n\nMark nodded.\n\n\"What time do you come home from work?\"\n\n\"I'm six until two. If I catch the bus, I'm home by two-thirty but I often walk, so I can pick stuff up at the shops, say, three-thirty at the latest.\"\n\n\"Okay, you have five-weekday settings, so we can put the heating on at two, at a low setting, say sixteen degrees, to take the chill off the house... Then at three-thirty boost it to eighteen?\"\n\nMark nodded and gave a huge, wide grin.\n\n\"Ok, then what time do you normally go to bed?\"\n\n\"Depends if I'm working the next day or not.\"\n\n\"Okay, what time do you go to bed when you are working the next day?\"\n\n\"Sometimes eight, sometimes nine.\"\n\n\"And what days do you work?\"\n\n\"Ah, well, that depends on the shift pattern. I've got a three-day weekend starting from today, but every fourth weekend I get four days. Sometimes I get invited to do overtime, so work the weekend.\"\n\n\"Ahhh, not helpful... What time do you go to bed when you aren't working?\"\n\n\"Not much later. Ten at the latest.\"\n\nEva fiddled with the buttons, toggling through the times and settings.\n\n\"There you go. So the heating will go off at eight every night. If you want it warmer than eighteen degrees, just toggle the temperature button higher, but you'll need to toggle it down if you decide to go to bed. Like this.\"\n\nEva showed Mark the thermostat as she toggled the temperature up to twenty-two, then back down to eighteen. \n\n\"Wonderful, thanks. It's brilliant to have it back on. I was distraught yesterday when I couldn't even have a shower. I really owe you, you've been very kind to me, and people aren't normally that kind to me.\"\n\nMark stepped forward and gave Eve a hug. Not a strong manly one, but the sort an aunt would give you on your birthday. With Eva having her head on his shoulder, she caught a faint hint of perfume. This added to Eva's confusion, bolstered by Mark looking as if he was learning about his heating system for the first time, yet he must have lived here for years and should know this.\n\n\"I'll put it back in the hallway.\"\n\nShe passed him the thermostat and Mark took it to place on a key rack in the entrance hall. Eva felt guilty wearing her coat, with the heating now on, so she followed him, pulling her coat off to hang it on the empty hooks in the hallway. Wondering with the four bare hooks if Mark owned a coat.\n\n\"So... Where do you work?\"\n\n\"Oh, at that big distribution warehouse up on the large industrial estate, just off the motorway junction. Would you like that cup of tea I owe you now?\"\n\n\"Please.\"\n\nWhen they returned to the kitchen, Mark continued talking as he gathered mugs and started making them both a pot of tea. Eva stood in the doorway. \n\n\"Initially they furloughed me, but with everyone at home over the first lockdown and buying online, they called us back in. So I've been working ever since.\"\n\nAs Mark continued to make tea, Eva noticed Mark moving around her and the small kitchen more like a woman, rather than a man, or camp cross-dresser. So either he was much practised or had expert tuition.\n\n\"Sorry I don't have sugar, just sweeteners if you want any?\"\n\n\"Just the one, please.\"\n\nMark ducked across to reach high into the tea mug cupboard. Even being still in his baggy hoody, with it hanging off him, leaving Eva wondering how thin he was. As he turned to shake the sweeteners packet at Eve in confirmation, Eva was sure she saw the swish of hanging boobs underneath the loose hoody.\n\nMark went through the motions of pouring the hot water into the pot, dropping tea bags in and pouring milk into the mugs.\n\n\"Fancy some homemade carrot cake?\"\n\n\"Please... You bake?\"\n\n\"Not really. One of those cookery programs inspired me last week. I'm not brilliant, but hope it's passable.\"\n\nMark swooped around to the oven and pulled out a half-eaten carrot cake. He pulled a knife out, centred it, rotating the knife, looking at Eva for direction, to confirm the size of the slice she'd like.\n\n\"Say when.\"\n\n\"Oh, not that big... A little smaller, perfect. Thanks, that looks nice, moist, not dry.\"\n\n\"Thanks.\"\n\nHe cut two slices, then spirited two plates from a cupboard, paper napkins and coasters, placing them on a tray. He set out the mugs and poured the tea.\n\nEva convinced his movements were now more feminine and deliberate, even kicking his hips out as he stepped from side to side. More than once, she thought she'd witnessed boobs swinging inside Mark's baggy top.\n\nMark picked up the tray and led the way into the modest lounge. He placed the tray on the coffee table, set coasters down, then the mugs, plates, cakes and napkins, to place the tray down by the side of his chair. Eva thought it strange as she watched a man layout tea in mugs, with coasters, paper napkins and three-pronged cake forks, with meticulous care. \n\nNow, at home with heating on, Mark was definitely less melancholy now, and seemed happy to chat. \n\n\"Please try the cake. I'm dying for someone to give me an honest verdict. I've taken some cupcakes into work before now, but they're just gannets and will say anything to get free cake at break time.\"\n\nEva picked up her generous piece and sampled it. She was right; it was perfectly moist, with the right tangy taste and the cream on top was perfect. This was not Mark's first bake.\n\n\"Mmm, no, it's gorgeous. It's as moist as it looks and the topping is perfect.\"\n\n\"Oh, thanks... Not bad for my second try.\"\n\n\"No, not bad at all... So you like your work?\"\n\n\"Oh, it's boring work, keeping you on the go, so the time passes quickly but it keeps me fit and the gang I work with are a happy enough bunch. We still have to mask up in the office or restroom, but not in the enormous warehouse. We're not on top of each other, as we load parcel delivery vans, stacking the parcels in the vans.\"\n\n\"Not stressful then?\"\n\n\"Oh, yeah... The van drivers are a nasty lot. They'd happily drive off with you still inside if it saved them time. They won't wait for you... You need eyes in the back of your head as you'd be surprised how many have reversed into the dock and damaged the conveyors or their vans.\"\n\n\"Do you get downtime in between vans?\"\n\n\"There's almost a constant stream, whether loading deliveries or removing arrivals, but our team is full of banter much better than my last.\"\n\n\"They move you around?\"\n\n\"Ah... Mmm... About March last year, I came out as trans, so they moved me to a more sympathetic group. My old group is still funny about it and not nice at all.\"\n\n\"Ah, so you were Mandy and are now Mark?\"\n\nWhich seemed odd to Eva, as he said he didn't like Mark?\n\n\"No... I was Mark and now transitioning to be Mandy.\"\n\nMark-Mandy gave Eva an odd look, as if it was obvious.\n\nWhilst it explained many things, there was still something that struck Eva as odd... She's come out, but is still using her old gender's name and still attempting to pass as male. Whilst it would hint at it being a recent change, she suggested that this in March, less than a year ago. \n\nIt also confirmed that Eva had seen boobs through the loose clothing, but was ten months enough time for such a size to be noticeable? But was that enough time for the facial feminisation? Eva didn't know, nor wanted to judge. But it still seemed strange that someone dedicated enough to their cause to come out to their employer was still using their birth name and dressing as such.\n\nThe big plus side was that Mark-Mandy was now a different person than the inert stranger she originally sat alongside earlier. Her voice was more relaxed and at ease, without a hint of anxiety of suicide that Eva feared earlier in the day.\n\n\"But, you introduce yourself as Mark earlier?\"\n\n\"Ah... yeah... It's not been a good few days for me... What with the heating packing up, I just won't feel like Mandy until I've had a shower and changed... Sorry, I can get a bit confused myself...\"\n\nMaybe that was why he was up on the bridge earlier, trying to sort all that confusion. \n\n\"Less about me. What about you Eva?\"\n\n\"Oh... I left school and got a purchasing apprenticeship. I passed my three-year apprenticeship and after a year on the job, they paid for me to go on a further college course, so I am a qualified purchaser for the NHS.\"\n\n\"Oh, wow, that must be interesting?\"\n\n\"Yes, I purchase everything and anything, from paperclips, PPE, and surgical instruments to blankets, x-ray equipment and cleaning products.\"\n\n\"Oh, so you deal with re-order stock levels, just-in-time and expediting everything you brought?\"\n\n\"Oh, you know all the terms...\"\n\n\"Ah, er... Well, just things I overheard at work.\"\n\n\"Yeah and all the rest, it's very full-on, but as it's all online, allowing me to work from home, which is great.\"\n\nAgain, Eva's suspicions were raised.\n\nFor someone who works in a parcel warehouse, he knows a lot about my job...\n\nWhat would a parcel distribution depot know about re-order levels?\n\nSurely parcels come in regardless and go out... Maybe they have PPE supplies to worry about...\n\nEva and Mark continued to nibble and sip tea, both pleased to feel the house warming as the heating creaked and squeaked. Eva glanced around, still a little surprised at the cleanliness of the small lounge.\n\nThere was a large flat-screen TV in the original fireplace in the corner, obviously to share chimneys with the neighbour. The mantelpiece behind had a few obligatory photos and candles centred by an old carriage clock.\n\nThe one photo was of an elderly couple and on the other end of the mantelpiece was one of a large-sized Mark, filling his hoody out, cuddling a similarly sized girlfriend, both the epitome of two gaming geeks.\n\nBoth would look at home at a Goth or vampire convention, pale-skinned and dark hair. The photo reinforced Eva's suspicions. For Mark to have lost that much weight in roughly ten months was nothing short of miraculous, whilst also taking hormone pills to grow size `C' breasts and have facial surgery whilst amid a pandemic.\n\n\"The two elderly people are my parents. Dad died nearly five years ago and mum died of a broken heart soon afterwards.\"\n\n\"Sorry, I didn't mean to pry.\"\n\nEva wanted to ask about the other photo, but after that, she didn't want to add any more painful experiences to Mark-Mandy's day.\n\n\"The other one is of me with my last girlfriend, Sarah... We broke up before the first lockdown.\"\n\nOkay, that lengthens the timeline, to lose that weight over eighteen to twenty months was more realistic. Maybe I'm clutching at straws.\n\n\"The carriage clock was mum and dad's.\"\n\nStrange, nothing about his ex-girlfriend... Maybe they weren't close and yet he's a photo of her on the mantelpiece.\n\n\"That was lovely Carrot cake, you should bake more... But after a cup of tea and being out in the cold, I need the loo. Is it alright?\"\n\n\"Yeah, of course. Top of the stairs, you can't miss it. Be careful on those stairs. You'll need to walk like a duck coming down, as they're thin, steep treads.\"\n\nEva got up and headed to the stairs, just like any old house, steep and narrow. She climbed up with the balls of her feet on the treads, but her heels off the narrow treads. The stair carpet, stair rods, handrail and posts were all clean and polished, as if Mark-Mandy were expecting visitors.\n\nThe bathroom door was open, waiting for her after the short hallway at the top of the stairs, but so was the bedroom on the left. Like all good visitors to any house, Eva tried to avoid looking in, but similarly, neither could she resist. Well the door was open.\n\nSo that's where all his coats are.\n\nEva saw the bed, tidily made, but covered in coats, giving testament to how cold the house must have been last night. The bedroom certainly didn't look like what you would expect from a single crossdresser or trans bedroom. No `Hello Kitty' posters or walls of pink fluffy pillows.\n\nStop being judgmental... Perhaps a Good Samaritan should keep her suspicions to herself.\n\nAnd why should she have 'Hello Kitty' posters and pink pillows -- you don't!\n\nEva scolded herself, as she surveyed the extremely tidy bedroom... Odd in that women's clothing occupied any spare space, even dresses hanging off the door. \n\nIt must have taken months of shopping to buy this much... Despite lockdowns and the low wages Mark must be on. Rather than sexy, burlesque wear, that you would assume a crossdresser or trans to wear, these were all-day wear. Some fashions were a few years old, but all current and wearable down any high street.\n\nStop it... Why should she have lingerie spread over her bedroom?\n\nHow do you know what anyone likes to wear, stop judging her Eva.\n\nEva pulled her eyes away from the haberdashery and entered the spotless bathroom. As she pulled the light cord to turn on the lights, she could have sworn every surface twinkled with cleanliness. She shut the door and got on with her business...\n\nAlthough, now I'm here, it wouldn't hurt to check in the medicine cabinet... \n\nNope, nothing there untoward.\n\nJust the usual, toothbrush and paste, hair colour, eyelash curlers, hair scissors, and various nail varnish bottles. All spotless, even the shelves, not showing any witness as to the original location of any item. Thankfully, there weren't any medicines, of any kind. Beneath the sink was the same story, spotlessly clean, various cleaning products, spare loo rolls.\n\nBut then something that knocked Eva off balance. She had to double-take and check the packaging of an open packet of tampons with a spare full pack behind.\n\nWhat does a transitioning woman need tampons for?\n\nShe closed the cabinet doors, deep in thought and guilt.\n\nYou're the good Samaritan, stop judging...\n\nWith the toilet alongside the bath and shower head, she couldn't resist checking, the level of cleanliness was impressive... The glass condiment shelf, with shower gels and shampoo, was immaculate. No bottle rings on the glass, even the bottles were clean. Mark was an expert cleaner.\n\nEva sat on the loo, looking around, thinking about her findings... She felt guilty for both looking and judging, but taking note to google the use of tampons by transitioning males. Her gaze fell upon the shower. The unit was wall mounted. A small low powered one, similar to the one in her spare bathroom.\n\nAnother suspicion clicked... looking back at the doorway. Yes, one cord pull for the light, but on the other side, a second cord pull. The shower was electric, separate from the gas heating of her boiler.\n\nMark could have had a shower...\n\nDoesn't he realise? Surely he knows the workings of his own house?\n\nStop judging... Maybe it was just too cold, even with a hot shower, \n\nit would still be cold once out drying and changing.\n\nAfter washing her hands, Eva felt guilty about leaving any witness of her being there on the spotless surfaces. Heading downstairs, she heeded Mark's advice; the stairs were steep, and she had to walk like a duck to fit her feet on the treads.\n\n\"Wow, Mark, your house is spotless. I wish I had the patience to clean mine as well as this... I hate dusting and cleaning tile grouting.\"\n\n\"Thanks, I hate to admit I enjoy it... It stops me from thinking about anything else, sort of occupational therapy.\"\n\n\"Oh, if you enjoy it, then maybe you should come and do mine?\"\n\n\"I'd love to...\"\n\nMark-Mandy perked up, sitting on the edge of his seat.\n\n\"No... I was only joking, sorry... I didn't mean it.\"\n\nMark-Mandy's face dropped. \n\n\"You sure? It's not as if I have anything else to do after work.\"\n\nEva felt a pang of guilt. She had only meant it as a joke, but Mark-Mandy was serious. Not that she didn't have enough time to keep her house tidy, she didn't have the time to clean this deep... To dust every nook and cranny or clean every tile's grout...\n\nEva had previously thought of getting a cleaner, but not with Covid and now Omicron... Her house wasn't that big, but like Mark-Mandy, she was lonely. Working from home did distance you from people and imprison you in your own home. \n\nAt weekends, she liked to get out, work in her garden or walk some of the local woods and hills. The last thing she wanted to do was to clean and dust her workplace.\n\nMaybe having Mark-Mandy clean would be therapy for them both... \n\nHe seemed good company and harmless enough.\n\n\"Okay... But only if I pay you... Although, I don't know what cleaners charge.\"\n\n\"You don't have to pay me much... As it will be cash in hand, I'm only just above minimum wage as it is... I don't mind as I'll enjoy doing it.\"\n\nEva couldn't resist Mark-Mandy's pretty face and deep blue puppy dog eyes blinking at her. She couldn't turn him down now and maybe it will do them both good. For her to have some human contact and Mark-Mandy said he liked the idea of some therapy.\n\n\"Okay, but before we agree, you'd better come to my house and see what you're in for. Then you'd get an idea of how long you think it will take.\"\n\n\"Oh, when?\"\n\nEva looked at the carriage clock, showing nearly two o'clock.\n\n\"Well, why not now? I'm working tomorrow and now your heating is on, you'll have a warm house to come home to.\"\n\nMark-Mandy's face pondered then lit up... \n\n\"Is that okay?\" \n\n\"Why not?\"\n\n\"...Would you mind if I showered first?... And... Changed, to come as Mandy?\"\n\nShit... I'd not thought of that... Now, now, don't judge, you're the good Samaritan.\n\n\"Okay, you get showered and changed whilst I wash up these things.\"\n\n\"Thanks.\"\n\nMark leapt up and made as if to collect the tea mugs. His hands stopped in midair to look apologetically at Eva, then smiled and dashed upstairs. Again, his actions were feminine, as he took each step, one at a time not leaping up several, light-footed not stomping.\n\nEva collected everything back up onto the plate and took them back into the kitchen. She ran some hot water into the washing-up bowl and emptied the teapot. As the bowl filled, she went to drop the old tea bags in the waste bin but found it full.\n\nOnce the washing-up bowl was reasonably full, to cover plates and mugs, Eva peered out the kitchen window to the garden to see a wheelie waste bin. She pulled the bin liner out of the kitchen bin and drew the bin liner's drawstring tight before going outside.\n\nWhilst it was cold outside, knowing there was a warm house waiting for her inside, once she'd dropped it into the wheelie bin she looked around. The garden was only as wide as the narrow house, flanked by standard six-foot-high panelled fencing. \n\nAt the end of the garden was a small shed and more panels. A path from the small paving slab patio Eva was standing on lead up to the shed and a small concreted area, with a table and garden chair. Some very poor, thin, patchy grass flanked the path.\n\nWith the gardens on either side having greenhouses at the ends where the shed was, Eva assumed that the sun only caught the bottom of the long gardens, hence the table and chair. She wandered down to look inside the shed.\n\nA simple padlock latch held the door, held closed by a loose four-inch nail dropped in the loop, rather than a padlock. Eva pulled the nail free and peered inside. Inside, Eva was disappointed to find what she expected, an electric lawnmower and some garden tools.\n\n\"I suppose you're some fancy social worker, at long last.\"\n\nCame an old voice behind her.\n\nEva closed the door and slotted the nail back into place. She turned around to see that the last panel was half solid, half trestle and standing behind the trestle was an elderly man in a thick brown coat.",
        "\"Sorry?\"\n\n\"I asked if you were a social worker. I've been phoning the council, asking one to see the poor lad for months now.\"\n\n\"Sorry?\"\n\n\"Ever since his sister died, he's not been the same lad. During the first lockdown, we used to sit out here and share a beer over the fence, but now, he doesn't speak.\"\n\nEva could see that mirroring the table on her side of the fence was one on the other side, with a chair. She could imagine the two sitting in the sun, sharing a beer over summer.\n\n\"Mark's a good lad... He's lost so much weight now after his sister died... I've seen him, in the kitchen, or throwing rubbish out, often wearing women's clothing now... It ain't natural. He used to have a girlfriend, you know?\"\n\nEva nodded, now seeing that maybe here was the catalyst for Mark becoming Mandy.\n\n\"I didn't like her... She was bossy, fat, and tried to lord it over him... I can't remember her name... But he found out she was gaming with someone else and having internet sex. How that happens over the wires I'll never understand, but thankfully he dumped her...\"\n\n\"Er... Mr?\"\n\n\"Ted, call me Ted... Mark used to call me Father Ted, after that TV show... When he still spoke.\"\n\n\"Okay, Ted... When did Mark's sister die?\"\n\n\"It was terrible... He shut himself off ever since, it's only because I can hear him moving around through the walls can I tell he's home... Terrible for him, he was close to his sister, I liked her... I met her once, lovely girl lived up north, Birmingham.\"\n\nEva felt a lump in her throat, as the pieces of the puzzle fell into place.\n\n\"But, you should know all this... Being his social worker, so why are you asking me?\"\n\n\"Er, yeah... But I'm interested in your thoughts, Ted. How do you think he's coping?\"\n\n\"He ain't... He used to help me all the time, taking the bins out or in my greenhouse or with my veg, digging my patch. Now, nothing, not even a smile over the fence. He's not right, you know, dressing as a woman, it ain't natural.\"\n\n\"Just to confirm this all happened after his sister died?\"\n\n\"Yes... Terrible for him, dreadful... With his parents a few years back, then his sister.\"\n\n\"So he's lived here for a while?\"\n\n\"Yeah, a good eight or so years... You should know this? It must be in your records.\"\n\n\"Well, we don't keep a record of everything on everyone... And we're all working from home, so not all the records are available. I just want to be sure.\"\n\n\"Oh... Okay. Well, ask away.\"\n\n\"So, when did his sister die?\"\n\n\"Mark had been isolating. He'd tested positive, so I'd not seen him for a few days... Then he went quiet for a few days. I assumed he'd gone to see his sister, as his car had gone.\"\n\n\"When was this?\"\n\n\"The weekend before the second lockdown, late October. Everyone was going mad, buying up all the loo rolls and rice again. On the Sunday Mark's car returned, so I assumed he was okay, but we've not spoken since.\"\n\n\"But, his sister?\"\n\n\"Oh... Overnight and early Sunday, whilst Mark's car was gone, there was a host of train cancellations in the Birmingham loop, so they were rerouting trains off the main lines via Oxford.\"\n\n\"How's that anything to do with his sister's death?\"\n\nEva was getting frustrated with the old man now, labouring out the story to keep her engaged. She looked up at the frosted bathroom window; it was still closed and condensation was streaming out of the extractor fan. Hopefully, Mark-Mandy was still showering,.\n\n\"I'm getting to it. Mark's car returned on Sunday and shortly after, the police turned up. We thought he was getting arrested for breaking his isolation or something. But when I went down the Red Lion, for the chance of one last pint and a chat with Bill, who used to work on the railway... He'd heard that they canceled the trains because of a jumper... A suicide, off a bridge out in the country.\"\n\nEva gulped... Maybe she had been in the right place at the right time, after all.\n\n\"What with Mark returning on Sunday, then the Police, but they didn't take him away, I put two and two together... I checked the local Birmingham news on Monday on the computer and it was his sister. He must have gone to identify the body.\"\n\nTed looked as sorry as Eva felt. She needed to return inside, not wanting Mark-Mandy to think she was gossiping over the fence.\n\n\"Thanks for your help, Ted. This helps a lot. I'm taking Mark out this afternoon, so hopefully, we can help him. I fear it may be a long road. You'll need to be patient... All these lockdowns have been an anxious time for us all, but with the loss of a sibling, Mark could be struggling with survivor's guilt.\"\n\nEva hoped this may sound the kind of thing any social worker would say.\n\n\"Ahh, I'd not thought of it that way... Okay, thanks.\"\n\n\"Can I ask one more thing of you, Ted?\"\n\n\"Yeah.\"\n\n\"Mark, dressing as a woman may be his way of coping with the loss of his sister, or it may be a more personal choice... Please try to understand and be sympathetic. You may be the closest person he has to a friend, outside of work, and I'm sure you'll both be chatting over the fence again soon. Thanks... Stay warm and safe, Ted.\"\n\nEva turned and walked back up the garden path, hearing Ted agree. She didn't want him asking any further questions about her name or council credentials, but he had filled in a lot of gaps in Mark's behaviour that morning.\n\nBack in the warm kitchen, Eva warmed her hands up in the warm washing up water, swilling out the cups, plates and cutlery out, to sit them on the draining board. She replaced the teapot to the cupboard Mark had removed it from.\n\nEva hunted around until she found a new bin liner to place in the chrome kitchen waste bin. After she poured the water out of the bowl and once she'd checked that everything was how they found it that morning, she returned to sit in the lounge.\n\nEverything seemed to pivot around the weekend before the second lockdown... The weekend his sister died... A good fifteen months ago, surely not enough time for any surgery, during lockdowns and when all clinicians were focussing on the sick, injections and boosters... Maybe enough time for boobs to grow though?\n\nEva didn't know... But first, she wanted to examine the photograph on the mantelpiece. In the lounge, she could still hear the shower running, and Mark-Mandy's muffled singing. The photo was innocent enough, but why would he keep a photo of his ex, if she left him and he was going through a transition?\n\nShe wasn't Eva's type, too large, geeky, but looked a little mean... Not helped by the Goth image and her expression on her face, despite Mark looking relaxed. \n\nMark was recognisable, same eyes, same hair, just a lot shorter, spottier, bushier eyebrows and a slightly bulkier nose, one that suited his larger frame. To lose that much weight in fifteen months was plausible and would have taken a lot of motivation, that somehow, she wasn't sure Mark had at the moment.\n\nEva replaced the photo and glanced at the photo of their elderly parents. You could see Mark and Mandy in them both. Eva sat back down, pulled her phone out and started googling the first of many questions she had.\n\nEva heard the click of the bathroom door lock, then the door opening and Mark-Mandy humming as he padded into the small hallway.\n\n\"Oh, bugger,\" Mark-Mandy's female voice exclaimed...\n\nAn aerosol can dropped into Eva's view, bouncing on the second step, then down to the fourth, to roll down to the bottom step and into the entrance hall, with a loud clatter.\n\n\"It's alright, I'll get it,\" Eva called, as a small, bare, wet foot stepped down onto the top step.\n\nAs Eva rose, a second bare wet foot padded down onto the second step, showing a bare shaved thin leg. Eva made her way to the hallway, as Mark-Mandy descended the stairs, with a towel wrapped tightly around him, his one arm reaching for the bannister.\n\nEva noticed the towel perched, covering two pert breasts, showing an ample cleavage. Her surprise must have shown on her face, as Mark-Mandy's hand left the rail to cover the obvious additions to his body.\n\nLosing the handhold made Mark's duck walk down the narrow old stairs, very precarious in wet feet. His one foot slipped forwards as his weight fell backwards. Eva saw the inevitable in slow motion. Mark fell on to his backside on the staircase, but his weight was still moving downwards. His whole body bobsleighed down the stairs with multiple bumps.\n\nThe towel initially reefed up with the passing of each step, but by the third step pulled away from his body. His legs flayed, trying to catch a step, to slow his progress, but only encouraged the towel to unwrap itself from around his body.\n\nAs Mark's Body came to a halt on the hallway floor, Eva had a clear view of two wonderfully rounded breasts, a freshly shaved, thin body with a narrow, landing strip of pubic hair. Eva felt shocked and surprised at having been given a cock and bull story, as beneath the landing strip there was definitely no male genitalia hanging between her two athletic legs. \n\nEva had seen her fair share of attractive pussys and Mandy certainly had one. If this had been the finale of some pre-planned role-playing scenario, Eva would have been a thrilled participant. But without warning or planning, this was a whole more shocking affair.\n\nEva looked up at what was obviously Mandy's face, now free from her baggy hoody. Her stunning, pretty face glowed red in shame, knowing her secret was out. Tears of pain watered her eyes, as her hands scrambled to both stand and wrap the towel back around her.\n\n\"Eva, I can explain.\"\n\n\"I bloody hope so... You've taken me for a fool all day.\"\n\nIf Mandy hadn't been in the way, as she tried to cover herself and stand, Eva would have stormed out. She couldn't even use the back door with the garden being enclosed. Eva's eyes travelled up and down Mandy's stunning body as the towel closed to hide it from her view.\n\n\"NO... Eva, you've been wonderful... I can explain, please?\"\n\nMandy, now covered and standing, with her one arm gripping the towel, the other spread, blocked Eva's escape route. Both women stood facing each other in a Mexican standoff.\n\n\"Please, let me explain... I need to tell someone.\"\n\nEva saw Mandy's face change from shock to defence.\n\n\"Yes... I'm Mandy and that was my brother Mark in the photo.\"\n\nHer face dropped to resignation.\n\n\"All I wanted was to escape, and I just got myself into deeper trouble... I'm in such a mess and... Confused.\"\n\nThe water filling her eyes flooded out, and she threw herself at Eva, wrapping her damp arms around her, as her flood gates of emotion opened.\n\n\"I'm in so much trouble... I had no choice... Oh, Eva, you've been so kind. I don't know what to do. I get so confused trying to keep my stories right.\"\n\nMandy fell into blubbing hysteria on Eva's shoulder, whilst holding Eva in a tight hug. Eva tried to ride it out, but Mandy's crying seemed endless.\n\n\"Mandy, come on... I half suspected, so many things just didn't add up. Come on, you need to explain.\"\n\nEva pulled Mandy over into the lounge and got her to sit on the sofa, both pleased the heating had warmed the house up. Mandy curled up with her knees on the sofa, looking directly at Eva, pulling the towel up to cover her knees. Eva pulled a tissue from a box on the coffee table and gave it to Mandy to wipe the tears from her eyes.\n\n\"I've made such a mess of my life... After mum and dad died...\"\n\nShe sniffed and sniffled, wiping the wet tissue over her nose.\n\n\"Start at the beginning.\"\n\n\"Oh, it's so jumbled up... I confuse myself... After mum and dad died, I met a wonderful man, and I thought my life was on the up. Soon I realised he was after my half of their house. Thankfully, I got my brother to hold my half in a special account. I wanted to use it as a deposit on a house of my own, but Steve wanted me to move in and extend his house.\"\n\nEva nodded but didn't want to interrupt, as Mandy she was now intrigued and wanted to know more.\n\n\"At first, I thought I was being careful, maybe a little overzealous, but Mark agreed. So we lied, saying I had brought half into this house... Steve sent a solicitor, supposedly on my behalf, to sign a document that he was to sell the house and share the equity fifty-fifty, as the housing market had gone up.\"\n\nEva pulled another tissue for Mandy, as she cleared her nose again.\n\n\"Do you know what lamp lighting is?\"\n\nEva nodded. She had a rough understanding.\n\n\"Well, Steve was very good at it... He got into all my online accounts without my knowledge... He wanted me to stay home, sending texts to work colleagues, so they thought I was having an affair with my boss, and losing me that job. I managed to get another before the first lockdown. He went mad, barely avoiding striking me. Then he repeated his old ways, unknown to me.\"\n\n\"He told me my car failed the MOT... I signed the documents for it to be scrapped... It was only later I found he had sold it and it is still out there, taxed, insured and MOT'd.\"\n\n\"The first lockdown was perfect for him, keeping me stuck at home. I could work but I was at his disposal... Soon it all became normal... Then the sex went from wanting me dressed as a schoolgirl or maid to slut or hooker and it got rougher. There was no one to see the bruises. Twice I passed out when he strangled me.\"\n\nEva was now welling up herself. She placed her hand on Mandy's knee to console her.\n\n\"I don't want to go into detail, but it got worse... I was so relieved when the lockdown finished, I almost begged to return to the office. Then, with the threat of a second lockdown, I became terrified. He hinted at having a rape fetish, wanting to enact a scenario where I knew he would get violent.\"\n\n\"Surely the police or someone could help?\"\n\n\"No... They would never believe me. I tried to talk to my brother, but he never answered my phone calls. In the preceding weeks of the lockdown, they held team-building meetings at work. During one breakout session, we were joking with the IT guys about things and it came out about my previous job. Steve had already weaselled his way to create more rumours in my new job.\"\n\n\"Several women had texts from me, asking advice about my having an affair with the boss... The IT guy checked, saying they hadn't come from my phone. Somehow Steve had cloned my number... I don't understand how. The same guy checked my phone; it had a sophisticated tracker hidden on it. Sending Steve any number, I phoned or text or received. He also found Steve had blocked my brother's phone numbers.\"\n\nEva didn't know what to say or do... Her hand felt useless on her knee, even more so when she patted it, making her feel worse.\n\n\"I rang my brother, he was isolating, having tested positive. He told me he'd received a text from me telling him to leave me alone and never call again. He was distraught after mum and dad died as I was his only family. Steve was behind it all. The IT guy went to his desk and got a spare old phone and charger. After some IT thing, he transferred the tracker from my phone to the spare one. I could use it as a dummy, so Steve wouldn't know where I was.\"\n\nMandy burst out crying again... The memory of her brother had opened the floodgates again. Eva still hadn't put two and two together. She collected the tissue box off the coffee table and gave them to Mandy.\n\n\"The anticipation of the lockdown was terrifying; each night I feared watching the news, knowing Steve was getting stronger, unafraid of consequences. Then, the last weekend before the lockdown, he announced he was going with friends on their last chance to play golf... I can't remember the details, but I decided I had to leave him.\"\n\n\"As soon as he'd gone on that Saturday morning, I left and caught the train home, taking only the essential things, travelling light. I left the spare tracking phone at home, so Steve thought I was following his instructions.\"\n\nMandy Burst out crying and threw herself at Eva, wrapping her arms around her, head on her lap, hugging her waist and sobbed into Eva's jumper.\n\n\"When I got here, I still had my spare key... I found Mark at the bottom of the stairs, just like me, just now... But head first... His head, resting on his cast-iron boot rack, without a pulse, clothed in some jogging bottoms and a T-shirt... He was barely warm.\"\n\n\"Oh, Mandy, you should have called for an ambulance.\"\n\n\"What and risk ending up with Steve again...\"\n\n\"I cried for ages, there at the bottom of the stairs... Our live's flashing before my eyes, our school days together, mum, dad... The times we used to watch trains together... Then I realised he could be my salvation... We're very rare... Identical twins of the opposite sex.\"\n\n\"But the authorities... You could have gone to them and stayed here... free from Steve.\"\n\n\"Eva, you have no idea how cruel he was... He seeped into every pore of your being, to command it, to have control of it... He'd come down, I'd never be rid of him, he was too clever... No one would believe me.\"\n\nEva hugged her back... She was right Eva didn't know. Maybe she had been lucky with her girlfriends, with reasonably normal relationships. Yeah, the odd hiccup, imperfections, breakups and arguments, but nothing that couldn't she couldn't walk away from.\n\n\"I panicked but had an idea that would free me from Steve... I swapped his clothes with mine, not a good fit, but I hoped it would pass. I wrote a suicide note, outlining Steve's control over me and his abuse. It was a devil of a job getting his body into the car. I then drove back to Birmingham.\"\n\nMandy composed herself, sitting back up, wiping her eyes and resting her hand on Eva.\n\n\"There is an isolated railway bridge, within walking distance of Steve's house... By the time I parked on the bridge, it was dark. It was difficult, but I pulled Mark out of the car and balanced him on the bridge wall. I slipped my phone and suicide note into my coat, which I hung on the wall... And when the next train approached, I waited until the last second and tipped him over. \"\n\nEva was aghast... This was more like some thriller or horror story, she wasn't sure. Mandy sobbed again as another tissue fell to the floor.\n\n\"But surely they would notice he had the additional equipment and male pelvis in the autopsy?\"\n\n\"Oh... I hadn't thought that far ahead. On the wall, I hoped he would fall, land with his waist on the rail, crushing his bits... But I hadn't realised that as one train came towards me, another was coming from behind. He was now stiffer and as I pushed, he twisted. I couldn't watch, keeping my head down, but the noise as his body bounced between the two trains was awful.\"\n\nMandy's eye clamped shut, as her shoulders shook with more sobbing. Eva couldn't imagine the emotional anxiety Mandy was experiencing.\n\n\"I drove back here terrified the police would stop me for something silly, or be noticed by someone who could be a witness. Once back here, the reality of what I'd done sank in. I felt like I'd murdered my brother... And dismembered him... I couldn't bear to see the boot rack, so I threw it out with the recycling.\"\n\n\"Did the authorities contact you?\"\n\nEva knew from Ted but wanted to be sure.\n\n\"Yeah... They were lovely, very considerate, and professional. I strapped my boobs up, wore several layers of clothing, and a mask. They explained the circumstances, and they had a phone and suicide note. They said there was very little left, which tested positive for Covid, so they'd not be doing an autopsy, as they had enough evidence for identity, including my driving licence. I confirmed he would be happy with a cremation.\"\n\n\"And what about Steve?\"\n\n\"He wasn't playing golf... The Police took my suicide note seriously... They arrested him for questioning and when they checked his phone, he had cloned and was tracking other phones. He was stalking his ex-girlfriends and others. Four out of six previous girlfriends came forward, echoing similar experiences. He is waiting for his case to be heard, but after an outburst in court, the judge has held him until the court case. I'd hoped for a few days to escape and now he could be at her majesty's pleasure for years.\"",
        "\"Oh, Mandy, you're so brave.\"\n\n\"No, I'm not... I'm just glad to be free from him. I miss my brother terribly, but nothing I do will ever bring him back and this is a chance for a new life that I can build. I don't want Steve appearing on my doorstep in the future.\"\n\n\"I'm sorry... I think I understand.\"\n\nEva squeezed Mandy's knee, not sure of how complicit she was now, knowing the truth.\n\n\"So, you were able to find work to carry you through?\"\n\n\"Oh, no... This is Mark's old job. I'd love to go back to doing something I used to do would be so much more interesting.\"\n\n\"What did you used to do?\"\n\n\"I've had various office jobs in factories, mainly stock control or stores or good inwards.\"\n\n\"Which was how you understood some of my work?\"\n\n\"Yeah, but I won't be able to use my old CV... The hardest part was finding Mark's notebook with his passwords to his email accounts, so I could write an email to his HR, outlining I was transitioning from Mark to Mandy. I stayed off, isolating as long as I dared and then gave negative tests. They were understanding and moved me to a more sympathetic workgroup and gave me training. Thankfully, Mark was very much a loner, so no one knew any different when I arrived in a mask.\"\n\n\"But you'd still be Mark, a man, legally on your passport?\"\n\n\"I don't care; I need to be free from that monster... My real name is Christine, but I can't bear the thought that one day I may hear Steve call out that name in the street to me and I'll turn to acknowledge it and give myself away. Mandy was an obvious, simple way for Mark to transition to. I'll change his name by deed poll later this year.\"\n\n\"Maybe in a few years, when I feel more comfortable, I may find the man of my dreams, but until then, I just want to sleep without fear or relive that awful night.\"\n\nMandy looked at Eva, her face exhausted and eyes red, but relieved to have told someone.\n\n\"But surely, anyone knowing your cover story will expect you to have something extra?\" \n\nEva raised her hand and wiggled her little finger.\n\n\"I hadn't thought that far ahead, but now I've had the chance to read up on it... I'll go on holiday and claim I went abroad to have the surgery, so I'd be fully transitioned.\" \n\n\"You will need to get to know Ted next door... He misses the old Mark. If you help him with the bins next week and add a little conversation, he may become an ally and friend.\"\n\n\"How could you have met him?\"\n\n\"When I put your kitchen bin liner out the back, he introduced himself. He wants his friendly neighbour back.\"\n\n\"He's a harmless soul, but he'll know I'm fake, so I've been avoiding him.\"\n\n\"He knows you wear dresses, and I confirmed it... If you act like Mark, he may forgive you that transgression and at an appropriate time whilst pretending to be Mark, call him 'Father Ted', but treat him as a mate.\"\n\nMandy nodded, smiling back at Eva. The two women watched each other, pondering their next move. Eva shot first.\n\n\"This morning on the bridge, were you going to jump?\"\n\n\"Oh, god no... It's my way of keeping Mark alive and connecting with him. Before he was a gaming geek, he was a train spotter. As a kid, I would join him watching the trains go by. Plus, I hope that if I hear enough trains, it will erase the sound of Mark bouncing and tearing apart between the two.\"\n\nMandy couldn't cry anymore, but the pain ran deep inside her eyes. Eva believed her, knowing she couldn't walk out on her now she knew. Eva is now committed to her choice of being the Good Samaritan. Mandy looked at her with her puppy dog eyes.\n\n\"Is the offer still open for me to do your cleaning?\"\n\nMandy reminded herself of her obligations in the role of the Good Samaritan and her previous pros and cons of having a cleaner.\n\n\"Yeah,\" she looked at the time on the carriage clock. They'd been there most of the afternoon and it would be dark outside. She couldn't leave Mandy until she was sure she was okay.\n\n\"How about you get dressed and I'll take you home, so you can see what you're signing up for. I've a casserole in a slow cooker, enough for the both of us if you like?\"\n\n\"I'd love that.\"\n\nMandy dried her eyes, sat up, and picked up the discarded tissues around her.\n\n\"No... I can do that. You focus on getting dressed.\"\n\nMandy went to pass Eva the collected tissues, but seeing her tut in frustration, she placed them on the sofa between them and rose. She checked the towel around herself and headed off to the stairs, picking up the aerosol can. \n\nEva found herself watching Mandy's naked legs and small, tight backside as she made her return trip upstairs. Eva felt the hunger for another female body return. She'd missed having a special person in her life, with the closeness of friendship and body that it brings. She made a mental note that it was time to try to get back out there.\n\nAs she collected the tissues littered around, Eva went through the choices available and how she could put herself back out on the social rounds. Omicron had put paid to her last attempts. Everyone was being cautious, even with pubs and clubs open.\n\nWhilst working from home was convenient, it didn't help her social life. Being attached to several hospitals, their inevitable flow of female nurses and clinicians, all with active social lives, made for an exciting pool of possibilities. \n\nEven at twenty-eight, she was still attractive to student nurses, trying to expand their sexual experiences, whilst also an appealing long term prospect to women in her age range. She'd always found the one hospital's planning manager attractive, but working from home, killed any opportunity to meet anyone casually whilst grabbing a coffee, or flirt at either end of a meeting.\n\nEva collected and compressed down the tissues in the kitchen bin, so she didn't need to risk meeting Ted outside again, emptying the bin. She washed her hands in the sink, seeing the world outside was once again dark. \n\nAs she dried her hands, Eva heard tentative footsteps padding down the stairs. She found Mandy in the hall, hanging up coats. With her back to her, Eva found herself admiring her legs, but a sparkly jumper hung over her backside.\n\nTut Tut, Your the Good Samaritan, remember? Not some vampish huntress.\n\nAs Mandy tucked the third coat up, she turned to see Eva watching her.\n\n\"No need for coat duvets, now the heating is on. I really can't thank you enough. I feel like a new woman.\"\n\nMandy stopped in her tracks, seeing Eva left her transfixed and a little gob smacked. Mandy was the prettiest plain Jane Eva had ever seen. Eva could barely note any makeup, a little on lipstick, maybe a little eyeliner, but her face shone.\n\nMandy was the confirmation of less is more. Her black, sparkly jumper seductively hung off her breasts and shoulders, falling to the right in a false knot. Her jumper hung over a pair of dark grey leggings and black flat shoes.\n\nWithout the hood around her head, her jet black hair framed her face perfectly, with a sheen that any model would be jealous of. Her blue eyes penetrated through a lock of hair strategically dropped over one eye.\n\n\"I hope you don't mind? I wanted to feel a little girly without going overboard. At work, I have to play this transitioning persona, dabbing a little too much make-up and accidentally dropping into male mannerisms...\" \n\n\"No, you look fine... I've tidied up all the tissues, so you needn't worry.\"\n\nMandy grinned... \"My OCD is dying to check, sorry. Shall we go?\"\n\nMandy handed Eva her coat and plucked a nice black puffer jacket off the rack.\n\n\"It's just nice to see you out of that hoody. I've locked the back door.\"\n\nMandy led them through the door, out into the street. Eva unlocked her car, as Mandy locked her front door. The two women settled into the car and Eva drove home.\n\n\"Ah... Eva, is there a Mister Eva?\"\n\n\"No, never has been... I prefer the fairer sex...\"\n\n\"You sure? You can't be. You're nothing like the butch girls at work.\"\n\n\"Butch ones? Are we all supposed to be like that, then? The archetypical lesbian, short hair and butch.\"\n\nEva tried not to look at Mandy as her blood boiled.\n\n\"For someone who is pretending to transition, you're a little bigoted.\"\n\n\"But...\" \n\nMandy could hear the anger in Eva's voice. \n\n\"Lucy and Bev are the only ones I know.\"\n\n\"Well, now you know another one...\"\n\nEva's shoulders clumped in a sulk, not wanting the discussion to go further and not sure she wanted Mandy in her house now... \n\n\"I... I'm sorry Eva, I didn't mean to offend, but empathy is low down my list at the moment... I've a few demons to put to rest first.\"\n\nMandy sat alongside Eva, looking at her as she wound their short way through the housing estates. This woman climbed up a bridge to sit and befriend her when she needed it most.\n\n\"I'm sorry Eva... I truly am... You're right, I'm being self-centred and bigoted. It's no wonder no one likes me at work...\"\n\n\"That can't be true.\"\n\n\"The first week terrified me, in case anyone discovered me as a fraud, so by being over-cautious I pushed people away and now they just carry on in their cliques. So if there isn't a Mr Eva... Is there a miss?\"\n\nEva gave her a brief look this time.\n\n\"Really?\"\n\nEva pulled the car into a short driveway and stopped the car. Her hands remained on the steering wheel. She shook her head, deep in thought, to give a short giggle.\n\n\"Okay, I give in... No, there is no Miss or Mrs Eva. My last girlfriend was more of a convenient distraction for both of us. When they threatened the first lockdown, she returned to France and her family. We keep in touch, but we're barely friends.\"\n\nMandy wanted to ask further, but Eva opened the door to leave the car, signalling the conversation was over. Mandy followed her, impressed at the large 1950s house, with a bay window and the front door set back in a small brick porch. \n\nFollowing Eva inside, Mandy found the timber floored hallway was almost as large as her lounge. Mandy closed the door behind her and took off her coat to hang it alongside Eva's.\n\n\"Come on into the kitchen, so we can check on the casserole. It should be ready by now.\"\n\nMandy popped her shoes off and followed Eva through a door at the end of the hall, into the kitchen. Mandy soaked in the kitchen's warmth, and the aroma of a winter warming casserole. Again, the kitchen was larger than her lounge, with more counter space than she had empty floor space. \n\n\"Wow Eva, your house is lovely.\"\n\n\"Thanks. Luckily, I had the kitchen done just three years ago. The old one was very 90s, sad and tired.\"\n\nEva popped the lid of the slow cooker pot off and stirred, pleased to see Mandy peering over her shoulder, appreciating her culinary skills with a quiet, \"mmm.\"\n\n\"How about I give you the tour, then we can eat.\"\n\nMandy was already in OCD mode. Despite her height, her arm went up and stroked a finger along each shelf and cupboard top. More than ample for your average homeowner, but not for Mandy, who smiled politely. She ducked into the cupboard under the sink, where everyone keeps their cleaning products.\n\n\"I'll need to get some cleaner. Lidl is cheaper and you get more.\"\n\nEva watched her politely take inventory of all the cupboards, humming and smiling as she went, finding the dishwasher, to inspect it. When finished, Mandy stood, pleased with her inspection.\n\n\"Is the vacuum under the stairs?\"\n\nEva acknowledged by taking her out and opening the stair cupboard, showing the ironing board, hoover and shoe rack. Mandy ducked inside for a hunt.\n\n\"Dusters?\"\n\n\"Behind the ironing board, there are some narrow shelves.\"\n\nMandy emerged, with some grubby dusters, \"Lidl will have a dozen for next to nothing and we can wash these.\"\n\nMandy headed back into the kitchen to pop the dusters into the washing machine. She returned to find a smiling Eva...\n\n\"What?\"\n\n\"You're hired. You're enjoying this way too much for it to be a chore.\"\n\nMandy grinned and followed Eva upstairs, to the main bedroom, where she was more diplomatic in her inspection. She ignored closed wardrobes, cupboards and drawers, but again ran her hands over furniture tops, and behind the vanity mirror, to show Eva her fingers carrying dust.\n\nShe inspected the small en-suite, to return non-judgemental. She repeated the inspection in the spare room and bathroom.\n\n\"Do you have spare bath mats, as this one needs a clean?\"\n\nEva nodded, \"Uh-huh,\" as she blushed with guilt, but enjoyed watching Mandy. She opened the third bedroom door to show Mandy her office. She was sure this was the tidiest room in the house, to have Mandy return with two used tea mugs, smiling.\n\n\"I don't know if I want you to look further.\" \n\nEva laughed, following Mandy downstairs.\n\nMandy deposited the two mugs into the dishwasher. She proceeded past Eva to stand at the lounge door, looking for clearance.\n\n\"Dare I delve deeper?\"\n\n\"Well, you're hired, miss OCD... Fill your boots.\"\n\nMandy laughed as she opened the door to gasp when she flicked the light switch, stepping from the Hallway's hardwood floor into the double-sized lounge onto the deep soft carpet.\n\n\"Some previous owner knocked the lounge and dining room into one.\"\n\nMandy went to inspect the curtains and rails before she swished them closed. She repeated her inspection of shelves, bookcases, behind the enormous TV screen and the cable box tucked deep inside the TV cabinet.\n\n\"I love your glass table and chairs. Very modern.\"\n\nMandy moved the sofa away from the wall to peer at the dust on the skirting board behind. Her fingers trailed over the top of mirror frames and picture frames and she peered into the up lighting lampshade.\n\nEva couldn't bear the suspense...\n\n\"You accept?\"\n\nMandy burst out laughing. \n\n\"I accepted the minute you asked, back at my house... I'm just pleased to have something else to occupy my time, to pay you back for your kindness and sympathetic ear.\"\n\n\"Oh, that is wonderful... It's not too bad... Is it?\"\n\n\"No... Not at all, it's just not up to my OCD levels,\" Mandy laughed.\n\n\"Phew, so shall we say eight pounds an hour?\"\n\n\"Oh, no I couldn't... Cash in hand and `mates rates', say four?\"\n\n\"Well, if we're friends... But I'll meet you halfway, six.\"\n\nMandy grinned and Eva instinctively put her hand out and the two women shook on the deal, possibly their first handshake with anyone for two years.\n\n\"Watching your inspection has made me hungry. Are you ready to eat?\"\n\n\"My stomach has been rumbling since those breakfast rolls.\"\n\nEva walked back to the bookcase, pulled a drawer open, pulling two placemats, coasters and cutlery out to lay the table.\n\n\"Do you like wine? I've a nice Red to go with a casserole.\"\n\n\"Yeah, but not too much. I've not drunk in ages.\"\n\nMandy followed Eva back out to the kitchen and out the back door into a large conservatory, which was freezing cold.\n\n\"Don't worry, I don't expect you to clean here, well maybe not until spring when we can sit back out here. Now, all it's good for is keeping the wine cool.\"\n\nNext to a cycle training machine was a small wine rack. Eva pulled a few out and selected one for them to take back to the kitchen.\n\n\"I've some nice granary bread if you like?\"\n\n\"Please.\"\n\nMandy opened the bread bin to find a sliced loaf and a half-used granary loaf. Pulling the bread out, she found the breadboard behind and placed them on the countertop. Mandy handed her a bread knife.\n\n\"Do you mind if I have the knobby?\"\n\n\"No, that's okay, Mandy... I don't like the ends. I'm happy with two slices. I've butter and margarine.\"\n\n\"Butter will be nice for a change, thick or thin slices?\"\n\n\"Thick.\"\n\nEva ducked into the fridge and picked out the butter, passing it to Mandy.\n\nMandy cut and buttered the slices for both of them. Found plates and tidied the bread away, placing the used knife in the dishwasher. Eva had two bowls filled, the wine opened and two wine glasses were already on a tray. Mandy followed Eva into the lounge and they sat at the glass table.\n\nEva poured some red into Mandy's glass. \n\n\"Say when.\"\n\nAs the glass was only half full, Mandy confirmed, \"Oh, that's fine... Ooo, I feel as if I'm in some posh restaurant.\"\n\nThe two women laughed, as Eva raised her glass up for a toast, \"to friends.\"\n\nMandy's heart pumped, \"friends.\"\n\nShe'd not had a friend since Steve had chased them all away, although they were really only work colleagues. She looked up at Eva as she sipped the sharp liquid, relieved that she had befriended her. That she knew her darkest secret without judgment made her even more special.\n\nBeing such a caring soul, Mandy couldn't understand why Eva didn't have a partner. She was more than pretty. Her long blond hair, brown eyes and curvaceous body would be attractive to either sex. Mandy blushed as she imagined Eva being her girlfriend. Then she shook the silly notion away.\n\n\"This is lovely, so you prepared all this, this morning.\"\n\n\"Yeah, once back from my MOT, I was going to have a tidy up in the back garden. It's all a bit overgrown from summer, now all the leaves are off, I can cut it all back easier. So I wouldn't have to prepare anything once the dark brought me back inside.\"\n\n\"You've made loads, more than enough for one. Were you hoping to meet anyone?\"\n\n\"Noo... You were just a nice fluke... I planned on walking up along the Cotswolds Sunday, so once again I could return home to something precooked, so I could just pop it in the microwave.\"\n\n\"Ah, sorry, I've just ruined your Sunday.\"\n\n\"No, it's far nice to have company for a change.\"\n\n\"Thanks... I like this restaurant...\"\n\nThe pair of diners laughed and toasted each other once more.\n\nEva had forgotten how nice it was to share a meal with a woman on these terms. After their conversation in the car, knowing anything romantic was off the table. It pleased her it was all behind them and both women were more relaxed as they continued to chat and eat.\n\nMandy was ecstatic, if not a little full, with this being the largest meal she'd had an appetite to eat in a long time. Eva made perfect company. Mandy had never felt such friendship from anyone, making it even more special. After Mandy had insulted her in the car, Eva had rebooted to her standard settings, forgiving her. \n\nEva finished, whilst Mandy was still slowly trying to finish her meal. \n\n\"Sorry, did I give you a bit too much?\"\n\n\"I shouldn't have filled up on bread, but it is far more than I would normally have. I've not had much of an appetite for a while.\"\n\n\"So a top-up of wine and the offer of a tub of tiramisu or a chocolate sponge pudding would be too much?\"\n\n\"Haha... You temptress... I couldn't possibly decline such an offer, although I think I'll need to let this go down a bit.\"\n\nMandy finished her last mouthful, leaned back in her chair, blowing her cheeks out, \"Stuffed... Thanks.\"\n\n\"Would you prefer to sit on the sofa to let things go down? If you want to bring the rest of your drink over or if you'd prefer coffee or tea.\"\n\n\"I'm more worried about spilling red wine on that wonderful cream carpet of yours.\"\n\n\"Well, your feet are dry and there aren't any steps. Come on, you can use the coffee table like me.\"\n\nEva carried her glass to the faux leather sofa and pulled the central coffee table closer. She shuffled two coasters out of a pile and placed her glass in front of the middle seat. She placed Mandy's drink in front of the comfier corner seat.\n\nShe turned to catch Mandy tidying up. \n\n\"Now, now, no OCD cleaning here tonight, you're my guest...\"\n\nMandy picked up all the dirty washing and made her way to the kitchen. \n\n\"I won't be able to relax seeing it there.\"\n\nMandy placed all the dirty plates and cutlery in the dishwasher and returned to the lounge. Eva sat in the middle seat, patting the corner seat, which already had Mandy's nearly finished glass on its coaster.\n\n\"Thanks.\"",
        "\"I hope you didn't mind, but when I went to the loo, back at your house, I couldn't resist a look in your bedroom.\"\n\n\"I guessed when I saw I'd left the door open. Sorry it's a mess, but at least there aren't any coats on the bed now.\"\n\n\"It was the wide range of clothes hung up that impressed me.\"\n\n\"Ah... Some were in storage from when I left my flat to live with Steve. The way he first put it, was that I would get a whole new wardrobe... But not in the way I expected, my new clothes comprised chic day and evening wear but during lockdown became satin, nurse, slutty maid, hooker and schoolgirl outfits.\"\n\n\"That's okay. You don't have to explain. I'm sorry I brought it up.\"\n\n\"It's alright, you weren't to know... Before the Police took Steve into custody, he threw all my belongings in bin liners out. Thankfully, the police picked it up when they arrested him and after checking it for evidence they brought it down to me. I kept the nice things, washed them and kept them for when I can wear them again. The rest I either binned or gave to charity.\"\n\nMandy reached for her glass and finished it. Eva joined her and finished hers.\n\n\"Fancy a small top-up, tea or coffee?\"\n\n\"I'll have a small top-up, please.\"\n\nEva retrieved the bottle and topped her glass off, but only poured enough to fill a third of Mandy's.\n\n\"Perfect thanks.\"\n\nMandy sipped her wine, knowing not to gulp it. Whilst she felt a little relaxed because of the wine, she'd seen Eva sink two and this was her third... So she hoped she wouldn't mind her asking a few questions to answer her curiosity.\n\n\"You've been single for quite a while. Are you thinking of getting back in the game, or is there anyone on the horizon?\"\n\n\"I had contemplated celibacy,\" Eva joked.\n\n\"Amen to that. I'm on that diet for a loooong time.\" \n\nMandy lifted her glass to Mandy to toast celibacy.\n\n\"But, being honest, meeting you today has made me realise how I yearn for human contact. Team meetings and face time are just not the same. Earlier, I was thinking about getting back into the dating scene, but I think it has changed beyond my recognition.\"\n\n\"I think it has... Lucy and Bev at work use a local dating app. They talk about it all the time, sign up for that...\"\n\n\"The butch twins? No, I think I'm a bit too old for that kind of thing.\"\n\n\"No, you're not... You must be on my side of thirty... They say they chat with women of all ages. You set your locality, your sexual preferences and the distance you're willing to travel, set up a profile, say nice things about yourself and then wait for people to chat with you. You can then decide if you want to meet.\"\n\n\"No, it can't be that simple.\"\n\n\"They set up new Gmail accounts, so they don't get spam on their real email addresses and don't give any real location information or data that can give you away.\"\n\n\"Really?\"\n\nEva found it intriguing but unsure, then Mandy added, \"come on Eva, let's find you a hot blond for Valentine's Day.\"\n\n\"That's not for weeks.\"\n\n\"Yeah, but you don't want the last one standing. You want the cream of the crop, a real hottie, so you can treat yourself. You deserve it.\"\n\nThe two laughed and giggled. Eva capitulated and picked up her phone.\n\n\"Can I have a fiery redhead for a change?\"\n\n\"Your choice.\"\n\nEva sipped her wine and went into google play. \n\n\"What is the app called?\"\n\n\"Ahh, I'm not sure... Something like `date local'\"\n\n\"All I'm getting is `date local guys and girls' but it gives dozens of different apps, some linked to xxx sites. I don't want to be on those.\"\n\n\"That can't be it... Try `street date'\"\n\n\"Noo, that sounds like hookers.\"\n\nEva flipped screens and typed furiously. Mandy curled up, pulling her feet up and holding onto Eva's arm as she looked over her shoulder. Eva had googled the app and was checking various apps reviews. As she scrolled, one flicked past.\n\n\"That's it, 'Local City date'.\"\n\n\"It's not got the best reviews...\"\n\n\"Nor the worst. Look at that one.\"\n\n\"Okay, but only because you said the butch twins like it.\"\n\nThe two giggled as Eva downloaded the app. Despite her experience, Eva felt a rush of excitement. She felt like a naughty girl being egged on by her friend... A slug of wine helped calm her nerves.\n\n\"Before you do anything further, you need to set up a random Gmail account, so you don't get a load of spam in your main email address.\"\n\n\"Okay.\" \n\nEva scrolled through, clicking through buttons and screens, \"Arghh, what name do I choose?\"\n\n\"You could use an expanded derivative of Eva, or your middle or last names?\"\n\n\"I don't think I can use 'Rogers' when looking for female company. Mae is just as unusable.\"\n\n\"Eva Mae Rogers?\"\n\n\"Don't say it like that, mum used to use my full name when she caught me doing anything I shouldn't\"\n\n\"I think using your full name is in the arsenal of any parent.\"\n\n\"Mae2022?\"\n\n\"Let's see... No, it's not taken and only a few relatives know my middle name, okay.\"\n\n\"Okay, there sending a confirmatory email to my account,\" her phone buzzed. \"Got it. I just need to click on the link and set up a password... There you go. Mae2022 is born.\"\n\nEva realised Mandy sat twisted on the sofa to see what was going on, having to fidget to keep comfortable. She picked up the TV remote, switched it on, selected Bluetooth and, after a few presses on her phone, her phone's screen appeared on the TV.\n\n\"Wow, you can do that?\"\n\n\"Yeah, okay, let's fire this app up.\"\n\nThe screen flickered as the app loaded and presented them with the first of many questions.\n\n\"I'll use Mae2022 as my profile\"\n\n\"No... Haha, why not Mae-West?\"\n\n\"Ooo love it... Mae-West. It's accepted. So I'm now Mae--West. Hopefully, that will appeal.\"\n\nThe two friends giggled their way through Eva's profile, adding a description of herself, her likes, favourites, and pastimes.\n\n\"Climbing bridges and saving damsels?\"\n\n\"Haha, I think that was one strange man... I am not making a habit of that, young lady... Once is enough.\"\n\nThen it asked about sexuality. \n\n\"Be honest here, Eva, or you'll end up with a lot of cock photos.\"\n\n\"Is that the voice of experience?\"\n\n\"Nooo... The butch twins, Lucy and Bev, keep moaning about it.\"\n\n\"Ok, full-on lesbian it is, looking for a woman... That's a shame. They don't have a predator selection.\"\n\n\"You're not... Are you?\"\n\n\"No, it's a joke... A bad one maybe, but a joke.\"\n\n\"So what are you looking for in your ideal woman?\"\n\n\"Hmm, that's a hard one... I just want a close friend and a lover, whether at home watching TV or on a pristine beach somewhere or walking in the woods.\"\n\n\"So write that... Stick with a 'close friend' for now and see who and what type crop up. You can amend your profile later to suit.\"\n\n\"Argh, I don't have an ideal woman... I'd like a redhead, but only because I like the caricature, but I don't want to discount a brunette, who may be a better fit.\"\n\n\"So jump past these, as they're all subjective, and again, you can always tweak your desires.\"\n\n\"Oh... I wasn't expecting desires...\"\n\n\"A smoking hot Valentine date.\" Mandy giggled, taking another sip of her glass.\n\n\"I think I'll leave that blank. There's enough elsewhere to attract the right person.\"\n\n\"Oh... There's an option to add photos to your profile.\"\n\n\"Leave that blank for now and see what others have done.\"\n\n\"Locality range, blimey that goes up to hundreds of miles.\"\n\n\"Reduce that to a reasonable catchment area. How far do you want to drive for a date?\"\n\n\"Twenty? That will stretch to cover town and the local area.\"\n\n\"Yeah, then if you drain that pool, you can extend the range.\" \n\nEva entered her selection, and a few choice selections popped up. They all had photos, but no headshots.\n\n\"Have a look at their profiles.\"\n\nThe first one has three thousand friends, \"No... Try another.\"\n\n\"Why?\"\n\n\"If she has that many friends, why is she going to talk to you? Maybe there's a reason she's been on here long enough to collect that many... Not a good choice for a date.\"\n\n\"Hmm, suppose not... What about her?\"\n\nEva picked the next profile... \n\n\"Much better, only ten friends and she's only been on since last year, during the lockdowns...\"\n\nEva scrolled through the profile. \n\n\"She ticks the boxes and has a few photos, but no headshots... She's not online?\"\n\n\"Ok, if you PM her, she can pick up the message next time she's on.\"\n\n\"What do I say?\"\n\n\"Hi, I like your profile. We have a lot in common, have a look at mine & leave a PM?\"\n\nEva smiled and typed away. They moved on, accepting a few, discounting others. Eva wasn't brave enough to PM any people who were currently online. They noticed a trend, whilst a few people had headshots, most had body only, or a hint or even a Hentai style photo.\n\n\"Right, now we know what others are doing, lets sort you out some pics.\"\n\nEva looked at Mandy after her suggestion. Now a little nervous, they both took a large swig of their drinks and smiled. Eva scrolled through some photos on her phone.\n\n\"No, no, maybe... no, maybe... Can we Photoshop your head off these?\"\n\n\"Hmm, I can crop my head off... Like that?\"\n\n\"Yeah... No, scroll back, that one, where you're looking over a balustrade to the ocean below, so all we can see is the back of your head... It's seductive... The way you've bent your one leg up behind you, where was that?\"\n\n\"Oh, Dubrovnik, I went with an ex for a long weekend.\"\n\n\"Ok, we've a few good ones. How about a main profile pic?\"\n\n\"Surely the Dubrovnik one is the best?\"\n\n\"No, look at all the others. They're tiny so it would be too busy... The best ones are simple. Look.\"\n\n\"Mmm, I like the high-heeled ones.\"\n\n\"I assume you have a pair?\"\n\n\"Uh-huh...\" \n\nEva smiled, passed Mandy her phone, and got up to leave. Mandy heard her run up the stairs. After a short while, her footsteps came back down, then she heard the cupboard under the stairs slammed shut. \n\nEva couldn't resist going one step further, as she strut back into the lounge, in black stilettos, fishnets and a tartan micro mini skirt. Her reward was seeing Mandy's face light up as she gave a long wolf whistle.\n\n\"If that doesn't get you a hot valentine date, nothing will.\"\n\nThey tried various poses, with Mandy taking the photos. In the end, their favourite was of Eva sitting on the floor, resting her arms on the sofa, her legs tucked behind her. The picture framed her skirt, stockings, thighs, legs, ankles, and her feet in the stilettos.\n\nThey uploaded the photo and now Mae-West's profile was perfect, easily as good as any other. Lots of info about Eva, a few photos, likes, dislikes, and her desire for a Valentine's date. She was already getting views and likes, but no PMs.\n\n\"Do you want another top-up, Mandy?\"\n\n\"Ahh, maybe not. I can just feel the wine taking hold. Maybe we should have some of that chocolate sponge cake to help soak it up?\"\n\nEva stopped the app and the two progresses to the kitchen... Several pings of the microwave later, they returned with dishes and coffee cups to sit on the sofa once more... The two sat talking for a long while after their dishes were empty, laughing about childhood memories or school, or just about anything but the way the world had turned out.\n\nEva couldn't believe how relaxed she felt, in her fishnet tights, short skirt, next to this straight and extremely attractive new friend. Neither felt they could have wished for a better start to a friendship. \n\nIt got long past the point where Mandy should have gone home, with neither woman wanting to call an end to the evening, hoping it could last forever... Eva swapped the TV from Bluetooth to the film channels on cable, turning the sound down, she hoped for an excuse for them to just sit there and continue.\n\nAs she quietly channel surfed, the lower end of the film channels, Doris Day in Calamity Jane, had just started...\n\n\"Oh, I love Doris, these songs are just fab, a real Sunday afternoon film.\"\n\n\"Hahaha... I should have added that to my profile earlier. I love her films too...\"\n\nMandy's head dropped onto Eva's shoulder, and she snuggled up to her arm. As the film progressed, the two sang along and could even quote most of the script, giggling and laughing...\n\nAs the film ended, Eva noticed Mandy's breathing had become more regular. She looked at her friend on her shoulder, now slumped, eyes closed and sleeping like a lamb. \n\nWhilst she was pleased not to send Mandy out to walk home this late, nor drive her home either, she was too tired herself to sit there much longer. Thankfully, she had a spare room already made up, just in case family visited. Eva nudged Mandy by raising her shoulder and saw her wake.\n\n\"Come on sleepyhead, I think the sandman's got you. You can use the spare bedroom, it's all made up, as you inspected earlier.\"\n\nMandy stirred, shaking herself awake. \"I had the best dream ever... I made a wonderful friend and had a lovely evening with her...\"\n\nShe got up and immediately started picking up their pudding dishes and coffee mugs.\n\n\"Oh, no Mandy, those can wait until morning.\"\n\n\"It's alright it's just as easy now.\"\n\nMandy carried their detritus out to the kitchen and loaded the dishwasher, closed it and looked at Eva, who had followed her, now without her heels.\n\n\"Can you set it to run overnight?\"\n\nEva walked over, loaded the door with cleaning granules from a cupboard, closed the door and turned the dial and pressed a button, as Mandy watched, taking notes in her mind. Mandy let Eva lead her out, turning all the downstairs lights off, even though she knew where the spare bedroom was.\n\nWith each step upstairs, in her fishnet tights and micro mini skirt, Eva was very much aware that Mandy could see her backside and panties if she wished. After months of suppressing any desires, Eva knew it was the right time to get back on the horse and get back into the dating game.\n\nEva opened the door and flicked on the light, \"Your room for the night madam, I've a spare baggy T-shirt you can use for pyjamas and as we're similar build, I've got some clean underwear you can borrow... But no spare toothbrush I'm afraid.\"\n\nEva ducked back into her bedroom to return with a large white T-shirt and some underwear. She placed the T-shirt on the bed...\n\n\"I hope you don't mind the unicorn?\"\n\n\"No, I love it.\"\n\nShe followed it by dropping a pair of high waist pants on the bed, then a pair of modest lace panties.\n\n\"I got you a choice, passion killers, or something a little more ladylike.\"\n\n\"I'm happy with something more ladylike... After months of being Mark, it's so nice to be Mandy again...\"\n\nMandy rushed to Eva, pecked a light kiss on her cheek, and hugged her. \"Thanks, Eva...\"\n\nWhen they separated, Mandy was blushing bright red.\n\n\"Uh... Eva, I'm really grateful for everything today...\"\n\n\"But?\"\n\n\"Ah... Please, no hanky-panky tonight... I...I.\"\n\nEva held her hand to reassure her but spoke up before Mandy said anything she'd regret...\n\n\"It's okay, Mandy even us butch, hard-ass, predatory lesbians are allowed female friends. It's in the rule book.\"\n\nMandy's face blushed a deep red, showing she now realised her brutal mistake and went to speak...\n\n\"It's okay Mandy... Goodnight.\"\n\nEva turned and headed for her bedroom, before Mandy dug her hole deeper, closing the door behind her.\n\nLater in bed, Eva ran over the events of the day, possibly the weirdest day she'd ever had... Mandy was a lovely person, caught in the oddest circumstances... If they'd met in any other way, Eva would have flirted like a vamp and she would tiptoe across that hallway.\n\nSaturday, 8th January.\n\nIn the morning, Eva slept in a little, getting up at eight. Having the master bedroom with an en-suit, she could sort herself out and get dressed without leaving her room, not wanting to unsettle Mandy further. Stepping down the stairs, she could hear the TV or radio on in the lounge.\n\nEva stepped through into the lounge to find it uncharacteristically cold and windy. Mandy was still in her unicorn T-shirt, standing barefoot on the steps. She kept in the kitchen, feather duster in hand, dusting the curtain rails. She'd cracked the windows open and a chilly wind howled into the room.\n\n\"Morning sleepy head. I thought I'd get a start on.\"\n\n\"No Mandy, there's no need to... What time did you get up?\"\n\n\"I slept like a log, so I had a little lie-in and got up at six. That bed is so comfy. I didn't want to hoover until you were awake.\"\n\n\"Oh, my God, Mandy, have you had any breakfast?\"\n\n\"Not yet... I stripped the bed, and it's all in the washing machine ready to go on. I dusted the bedroom, so it's ready to hoover, and then started down here.\"\n\n\"You silly mad thing, that's not a lie-in, you're mad. Come on you, get down, come and have some breakfast.\"\n\n\"I'm normally up at four-thirty, so it was a lie-in for me... Nearly done up here... Hang on... There.\"\n\nMandy stepped down, beaming with pride at Eva, but with her two nipples pressing through her bra and unicorn.\n\nHoly cow, this girl is making it hard for me... I need to get out there.\n\nEva laughed, heading for the kitchen after trying not to stare. She put the kettle on and started making herself some cereal. Mandy padded in after her.\n\n\"Be careful. I popped those dusters in the sink to soak a little. I'll just rinse them through and they can go in the wash with the bed linen.\"\n\n\"Mandy... Chill.\"\n\nShe's almost too good to be true. \n\n\"It's alright, it won't take two minutes.\"\n\nMandy headed for the sink and to wash, wring, then rinse the dusters. She rinsed the sink out, then replaced the bowl and popped the wet dusters in the washing machine. Soon she'd added washing liquid and conditioner, to start the machine.\n\n\"You're incorrigible... What would you like, cereal, porridge or fruit?\"\n\n\"Two rounds of toast, marmalade, and a nice mug of tea?\"\n\nMandy was already at the bread bin, getting two slices of bread, as Eva put tea bags in the teapot. Thankfully, for Eva, by the time they were sitting together at the small breakfast bar in the warmer kitchen, the points on Mandy's chest were more rounded. The two ate, drank, and chatted. As Eva finished, she checked her phone.\n\n\"Mandy, I've alerts from that dating app.\"\n\nShe tapped away at her screen...\n\n\"Oh, my goodness... Not just one or two, at least half a dozen... Haha, I've your classic butch lesbian here, Mandy.\"\n\nShe showed Mandy her screen, which showed a large, heavy-breasted, short-haired woman in a Chelsea football club shirt and shorts.\n\n\"Ha ha ha ha... That's Lucy from work, let me see.\"\n\nEva passed Mandy her phone for her to scroll through Lucy's profile.\n\n\"Oh my, her nose should be six feet long with these lies.\"\n\n\"What?\"\n\n\"Well, the furthest she walks is from her car into work, so I seriously doubt she's ever walked a beach at sunset. She may have seen one from a beach bar. The same with mountain trekking, only if it has a road to the top with a coffee shop... The only novel she's read is the TV schedule. Haha, tell her you like Wham, ABBA and unicorns and she'll drop you like a stone.\"\n\n\"Why?\"\n\n\"She's into death metal, whatever that is, but I seriously doubt radio one or two play it on the BBC.\"\n\nMandy giggled as she passed Eva her phone back.\n\n\"Okay, what about LuckyLouise95?\"\n\nEva handed her phone back...\n\n\"Hmm, she looks promising... Oh... Er... Her profile reads okay, but her primary desire is to share a threesome with her husband, which wasn't in yours.\"\n\n\"Oh, dear... what about the others?\"\n\nMandy looked at each one as if she were an experienced user but used her life's awful experiences, the overheard exploits of Lucy and Bev at work, with a little paranoia to see through the various white lies to protect her friend.\n\n\"There you go, four out of six... See what you think.\"\n\nShe handed Eva the phone. Who had a skip through the remaining profiles that sent Eva a PM.",
        "\"They all look attractive, although SueSunFlower is way older than us.\"\n\nThe two friends giggled, although Eva's use of including Mandy by using `us' helped seal their friendship for Mandy.\n\n\"Don't get picky yet. This could be all you've got for your Valentine's Day choices.\"\n\n\"Okay, miss dating guru. What do we do now?\"\n\n\"Be nice back... For example, SueSunFlower's message. Thank her for her friendly comments about your photos and profile, confirm it is Dubrovnik. As she loves walking, ask her what her favourite walk is. Find something in common and expand on it.\"\n\nEva typed away, as Mandy cleared the table, filled the now empty dishwasher and put the kettle back on.\n\n\"Done SueSunFlower's reply, before I send, what do you think?\"\n\n\"You're asking me?\"\n\n\"Well, you are my Valentine's Day campaign manager.\"\n\nThe two laughed as Mandy read through the PM reply.\n\n\"That's fine.\"\n\nMandy handed back her phone and went to the now finished kettle to fill the teapot, adding fresh tea bags. Eva sent the PM and moved on to reply to her other PMs. Mandy returned to her stool at the breakfast bar with the teapot.\n\n\"Okay... What do you think about this one?\"\n\nMandy read through, giggled, and tweaked the reply.\n\n\"You must be getting excited, a couple of spelling mistakes and you missed that she had put a red heart, hinting at Valentine... So I added a little cryptic reply.\"\n\nEva reread the PM, giggled, and smiled at Mandy. \n\n\"Love it.\"\n\nShe continued until they'd sent all four.\n\nBy the time Eva had sent the last, with Mandy's approval, Mandy had finished her tea and was swilling her mug out ready for later.\n\n\"I'm going to hoover the lounge, then the spare room. As I am up there, I'll run the hoover over your bedroom and the stairs. If you're going outside to garden, I can make us coffee for half ten?\"\n\n\"Aw Mandy, you're not a maid. I'd love a coffee at half ten with my campaign manager and friend.\"\n\n\"It's no trouble. I'm sure I can work out your coffee machine. It's only those little tin cartons.\"\n\nEva gave Mandy a scornful look.\n\n\"Okay.\"\n\nMandy smiled apologetically and left the kitchen for Eva to hear the hoover switching on in the lounge. Eva washed her mug and went to find a jumper to wear. The two worked separately through the morning.\n\nAt ten-thirty, Eva was busy filling her council green recycle wheelie bin with some of the hedge cuttings from her work, to hear Mandy knocking on the kitchen window. She glanced up to see her smiling at her, waving their two mugs, turning them upside down, to prove she hadn't filled them.\n\nEva was glad to return to the warmth of the house and Mandy's company. She showed Mandy how to work her coffee machine, using the various coffee pods, and then produced the last of a Christmas cake for them.\n\nAs they chatted, Eva checked her phone for messages. Scrolling through a few work orientated emails, an alert from the dating app caught her eye.\n\n\"MaggieWill95 has returned our PM and we have two more.\"\n\nEva tapped at her phone to start the app and look at MaggieWill95's PM.\n\n\"Haha, cheeky cow... She's suggested if I play my card's right she'd be my hot date for Valentine and to start my application I'm to meet her for a coffee Sunday morning. She suggests the Costa's in town, the one in the shopping centre... She goes on, a little cryptic but clever and witty.\"\n\n\"Wow, you've not even been on the app twenty-four hours yet, it seems you're not the only one in the race for a Valentine.\"\n\nEva scrolled through the other PMs she'd received.\n\n\"Ugh no... Should I delete ones I don't like?\"\n\n\"Yeah, they're probably used to being ignored if they're that bad. What does she say?\"\n\n\"Er... She goes into detail about what she would like to do to me, in fishnets and heels... You don't need to know, Ugh... It's deleted.\"\n\nEva scrolled on...\n\n\"Oh, much more pleasant... Look at her profile. She suggests meeting up for a coffee this afternoon, as she's in town, but busy tomorrow.\"\n\nEva passed Mandy her phone, who read the PM, then clicked through to her profile.\n\n\"Nice profile. Her photos are chic, especially the black and white pics. She's tastefully avoided any headshots. She seems safe enough... A farmer with a smallholding, so no power plays or office chat.\" \n\nMandy passed the phone back to Eva, who looked pensive, with a furrowed brow, deep in thought.\n\n\"You okay? Is it all too soon?\"\n\nEva nodded.\n\n\"Now I'm back on the horse I'm a little nervous.\"\n\n\"I'm not surprised after being all those lockdowns and working from home, we're all cranky... Me being a case in point... What if I come along to be a safety net? Rather than a corny random phone call, that is in every rom-com film used as a get-out.\"\n\n\"You sure?\"\n\n\"Yes... I could give you fifteen minutes to get acquainted and come in for a coffee. If you wave in recognition, I could come over, sit, and chat. No one wants a third wheel. You could introduce me as a work colleague... If you ignore me, I'll get a takeout and catch the bus home.\"\n\n\"That sounds a little more plausible... If you give me your number, I could text to wave you off or plead for rescue.\"\n\n\"That may be a little lame and rude.\"\n\n\"Ah, you're right... Let's swap numbers anyway... There's a new boutique opposite the other side of the concourse. If we sit outside, you'd be able to see me. If I furiously scratch my head, come rescue me...\"\n\n\"Stop worrying, they may both be the perfect date and you'll have to choose.\"\n\nBut what will you do in the meantime?\"\n\n\"It's okay. I've not window shopped in a while. Once I know you're happy, I'll catch the bus home.\"\n\n\"You sure about this?\"\n\n\"Yeah, what else have I to do, or I could stay here and finish dusting?\"\n\n\"No, I'd be more comfortable knowing I have a safety net with you there.\"\n\n\"If you agree to three, then we can finish here, have some lunch. Then I'll have time to walk home and change before you pick me up. Then we can put the next stage of our Valentine's Day date campaign to work.\"\n\n\"How will they recognise me?\"\n\n\"Do you have anything unusual, like a unique hat?\"\n\n\"I'm not wearing a hat indoors... As a tease, I could wear red and carry a red handbag?\"\n\n\"No tartan micro-mini?\"\n\n\"No, I'm not wearing that for them... Well, not yet anyway.\"\n\nThe two women chuckled at their plan. Eva typed away, responding to the PMs, and Mandy went to the hall to fetch her phone from her coat pocket. As soon as Eva had finished, they swapped phone numbers. Mandy was jubilant. To have a genuine friend on her contact list at last.\n\nThe two returned to their tasks, Eva back in her garden and Mandy cleaning the kitchen. A few times, Eva paused in her task to look back at the kitchen window. Seeing Mandy beavering away, Eva felt a pang of loss. Mandy would be her perfect catch, being such a friend at short notice and very attractive in her plain Jane way, with a gorgeous body...\n\nWhen Eva finished for lunch, the warmth of the kitchen embraced her with a wonderful smell of cooking.\n\n\"Hi, whilst cleaning I found your soup maker, so I thought I could multi-task and cook... I've made an off-the-cuff leftover soup... I hope you don't mind?\"\n\nMandy had changed back into her sparkly jumper and leggings, looking very proud of herself... Despite Eva's frustration at Mandy dropping into 'maid' mode, she couldn't be angry with her, as it did smell lovely.\n\n\"I thought I told you not to cook?\"\n\nMandy gave her puppy dog eyes...\n\n\"You said coffee... So I've made soup and tea, thinking you'd need warming up after being out in the cold.\"\n\n\"You're terrible Mandy and that's why I Lu...\" \n\nEva paused. In her haste, she nearly let the cat out of the bag.\n\nMandy looked wide-eyed at her, waiting to finish her sentence.\n\n\"I like you so much, you daft thing, you...\"\n\nThankfully, it seemed to work...\n\nMandy smiled and put two soup bowls out on the breakfast bar and poured the tea. Eva took her coat and boots off, slipped on her slippers and went to wash her hands. Mandy spooned the soup out into the bowls and cut the last of the granary bread.\n\nEva washed her hands in the bathroom upstairs, still full of mixed feelings. Mandy could be the catch of a lifetime and yet... CIS women can get upset if they think another woman has a crush on them. Others take it as a compliment, but she didn't want to risk losing Mandy. Coming down the stairs, Eva tried to reboot back to normal relationship settings.\n\n\"Come on, sit down. There's enough left over for another bowl, so I've filled one of your soup storage bowls. Once it's cool, we can pop it in the fridge.\"\n\nThe two sat at the breakfast bar once more and ate.\n\n\"Oh, Mandy... I can't thank you enough... Mmm, this is lovely. What recipe is this?\"\n\n\"I just grabbed some leftovers and followed the instruction book.\"\n\n\"You found the instructions? I thought I'd lost them.\"\n\n\"No, I found it pushed to the back of a drawer. All it took was a thorough spring cleaning. Now it's with your cookbooks on the shelf.\"\n\nEva couldn't resist a laugh, pleased with her wonderful OCD cleaning new friend.\n\n\"The kitchen is much cleaner, thanks... Judging by the taste of this and your carrot cake this morning, these aren't just a lucky first time?\"\n\nMandy blushed.\n\n\"You got me there... I had to get my mind off my problems during the last two lockdowns. I enjoyed cooking, although, like everyone else, I struggled with getting flour and rice. It forced me to try different meals and styles of cooking.\"\n\nThe two continued to chat as they ate. After, whilst sipping tea, Eva checked the app. Both women had confirmed their coffee dates. No new PMs had arrived, so Mandy put the dishes away, with protests from Eva not to be her maid. \n\nAfter thanking Eva, Mandy left and headed out to return home. Eva only had to wipe the countertops, as Mandy had done everything else. She had even cleaned the soup maker. Eva couldn't resist checking the lounge. She had never seen the glass-topped table crystal clear.\n\nEva felt guilty using the lounge, so returned to the kitchen to make another mug of tea and phoned her mother. When the time came, she changed into a black skirt, with black tights, a tight red jumper, to match her red coat and handbag.\n\nShe drove to Mandy's house, annoyed at how excited she was. The anticipation of seeing Mandy again was far greater than the impending coffee date. As she parked up, she saw Mandy's excited head pop out her door, smile, then duck back in. \n\nMandy stepped out wearing a nice black wool coat, with tall black boots, topped off with a small black beret. She locked her door and headed for the car. She opened the door to sit first and then pull her legs in. Eva's eyes locked onto her legs, watching her coat ride up, to reveal black tights over perfect knees. She tried to keep her mouth closed as she watched her tuck into the seat and pull the seat belt across her chest.\n\n\"Hi Eva, I didn't want to keep you waiting.\"\n\n\"Bloody hell, Mandy, you look gorgeous.\"\n\nEva now wished she had worn a hat.\n\nMandy blushed.\n\n\"Thanks, but look at you... No Tartan micro-mini?\"\n\n\"Haha, no...\"\n\nEva drove them into town, to park in the multi-story car park. They had time, so meandered around, window shopping. As they closed in on the shopping centre, Mandy dropped back and began ducking into shops to give Eva room.\n\nAt three o'clock, as Eva stepped into the Costa Coffee in the centre, Mandy noted the time and wandered to the boutique opposite Costa. Eva joined the queue to see a single woman at a table in the window, giving her a wave.\n\nEva swallowed her nerves, broke from the line and wandered over. As her coffee date stood to knock elbows.\n\n\"Hi, I'm Pony Petra Pet. I can only assume you're Mae West.\"\n\n\"Yeah, hi, I'm Eva. I'll go buy a coffee and be back in a jiffy.\"\n\nWhilst waiting for the barista to announce his coffee was ready, Eva checked the time ticking away. Their plan hadn't countered for this. She hadn't given Pony Petra or whatever her real name was a fair try. She quickly typed a text.\n\n[ Mandy, 10 more mins... still getting coffee. Thx. ]\n\nFeeling better about herself, she collected her coffee and sat back down with Pony Petra. Who informed her she was Penelopy with a 'Y' not an 'E'. As she droned on, Eva soon regretted asking Mandy to wait for another ten minutes.\n\nMandy was happy to spend ten more minutes perusing the lingerie in the boutique. She had loads of supermarket cheap end underwear but nothing to make her feel special... Flicking through the one rack; she glanced up to see people sitting outside Costa's but no Eva.\n\nShe peered across to see Eva scratching her head, sitting at a table inside the cafe. Mandy placed the hangers back on the nearest rack and, as calmly as possibly crossed the concourse to enter the Cafe. The relief on Eva's face was obvious, as she waved politely to attract her attention.\n\nMandy walked directly over to their table, ignoring the date, her stomach full of butterflies. She never liked confrontation, but felt braver, seeing as Eva needed help. Eva stood as she got close, but neither friend was sure what to do.\n\nEva was now panicking. This woman was unbelievable. She hadn't stopped talking about herself, not one question about Eva, not even a polite enquiry. Worse still, she hadn't even bothered to dress for the date. She still wore a riding jacket, jodhpurs and riding boots. Even worse was the prevailing horse smell from her.\n\nAs Mandy closed in on her, Eva knew saying she was a work colleague wouldn't work with this selfish, extrovert. She needed a mild shock to shut her up.\n\n\"Hi, I thought it was you, Mandy.\"\n\n\"Hi Eva, long time no see.\"\n\nBefore Mandy could string out about her needing a coffee or wait for Eva's prompt, Eva hugged her, kissing her on her cheek. Mandy responded, although a little stunned by her reaction, trying to catch up on her dilemma.\n\n\"Oh, I'm sorry, Mandy this is Penelopy with a 'Y'... Penelopy, this is my ex, Mandy.\"\n\nEva stepped to one side, so Mandy obscured her to Penelopy. She winked and mouthed 'Save me'. Mandy wrapped her arms around her and turned to Penelopy.\n\n\"Yes... And I never should have let her down as I did... Eva, could you forgive me and be mine again?\"\n\nPenelopy stood up, furious.\n\n\"I'll make it easier for you. I'm off and you can forget us riding together at sunset, along any beach.\"\n\nShe stormed off, her riding boots clacking on the hard tiled floor of the concourse outside. Anyone nearby who'd heard the conversation was staring at the couple, who now hugged and laughed.\n\n\"Oh my, Eva I'm shaking... I need a coffee now.\"\n\n\"Mandy, you absolute star, you saved me from pony death... she even smelled of them. You sit down and I'll get you one... Cappuccino or Latte, frothy mocca-chocca or what?\"\n\n\"Just a simple cappuccino, no chocolate sprinkles, thanks.\"\n\nMandy didn't want to sit in the warm vacated seat, so swapped it with an empty one close by and removed her coat. Eva waiting at the counter turned and watched Mandy move Penelopy's half-finished drink to a nearby empty table where others had left theirs to then sit down. \n\nEva's jaw hit the floor, seeing Mandy with her coat off. She was wearing a narrow pencil black, with black tights, accentuating her svelte body and legs. Her ensemble was topped off with a tight, wine glass shaped, white cotton shirt overhanging her skirt, making her the spitting image of Uma Thurman. Not in Kill Bill, but as she was in the diner dance scene in Pulp Fiction.\n\nOh, Jeez... Be still my heart... Give her black slacks and I could dance with her all night.\n\nAs Eva was served, she missed Mandy trying to relax as she fidgeted with excitement at being identified as Eva's ex. Eva returned with Mandy's drink and two celebratory Pain-Aux-Raisin pastries.\n\n\"You really saved my bacon there. She was a nightmare... Despite me trying all kinds of escape clauses, but she would not listen to anyone but herself... I'm so glad you were here, or I'd have had to walk away and risk her stalking me on her horse, which is probably tied up outside.\" \n\nEva giggled, trying to hide her nerves.\n\n\"Well, first one down. Let's hope it gets easier... Red suits you.\"\n\n\"Thanks... Now I'm not so confident about this type of dating.\"\n\n\"Maybe we jumped the gun in meeting prospective dates too soon, without time to go through the applicants, swap more PMs and get to know them.\"\n\n\"No, I think just unlucky. We've only got five weekends before the big day to arrange my Valentine date.\"\n\nThe two chatted and enjoyed their trophy pastry and coffees. They discussed the plans for later and Sunday morning's next coffee date. Once finished, they wandered around town. Whilst window shopping and chatting, they did a little horse-trading to settle on buying a bottle of wine and order a curry to be delivered to Mandy's.\n\nIt was a short walk to the car park to drive back to Mandy's house. Once parked outside her house, Eva followed Mandy inside, passing her to stand in the lounge to remove her coat. She turned to pass Mandy her coat and waited as Mandy hanging her coat up with her back to her.\n\nEva held her breath, waiting to be close to Uma as Mandy turned, allowing Eva a closer inspection of her shirt clad body. Mandy took her coat and hung it up. She invited Eva to open the bottle of wine, while she changed into something comfier. \n\nMandy dashed upstairs to join Eva in the kitchen in the same blouse but now in loose purple leggings and slippers. They chinked a little toast to the day and sampled the wine.\n\nThey were just walking into the lounge as the doorbell rang with the curry. Mandy set out all the tin foil trays in the kitchen so they could pick what they wanted onto plates and carry the trays out to sit on the sofa.\n\nMandy found a romantic film for them to watch.\n\n'The Fault in Our Stars'\n\nAs they sat eating, sipping their wine. At first, they tried to hide their tears, but as the film progressed, neither could hide it. Towards the end, with plates and glasses empty, the two were sobbing and furiously pulling tissues out of the refilled box on the table.\n\nSeeing the state of each other, they both laughed and waved tear sodden tissues at each other. Mandy offered to top up Eva's glass, or as she was driving, to have a coffee. Eva accepted the coffee, as Mandy cleared the dirty plates away and put the kettle on.\n\nEva felt a little despondent. Mandy was as near as a perfect partner she'd ever found, except she wasn't in the one aspect that would be perfection. She was brilliant company, whether sat watching a film, window shopping and supportive in everything. Life just doesn't seem to deal the cards you want. She'd have to settle for having the best, best friend.\n\nEva turned to her phone and the dating app, hoping to pick up some extra cards, one of which may be a queen of hearts. She should have expected that PonyPetraPet would leave a nasty public text. She checked the three-dotted icon in the corner to delete and block her.\n\nWhen Mandy returned with two mugs of tea, Eva had read through the extra PMs she'd received.\n\n\"I had to block Penelopy... SueSunFlower has come back with a nice chatty text and a link to some poems she's written. I'll have a look at those later... I've a few other PMs that are sweet, the one is a short 'Hi' so I'll ignore that one for now, but I think the others are worth a reply. What do you think?\"\n\nEva gave Mandy her phone to view the new PMs.\n\n\"Hmm, yeah ignore the 'Hi', her profile says she's chatty and always up for a flirt, but based on her PM, I don't think so... Mmm SueSunFlower is nice, she doesn't look too old, it depends on what you're looking for. Forty to forty-five, maybe, but she looks nice, as is her prose... Not so sure about this other one, maybe she's nervous... \"\n\nMandy scrolled onwards."
    ],
    "authorname": "Nellymcboatface",
    "tags": [
        "lesbian",
        "romance",
        "first time",
        "love",
        "best friends",
        "lesbian romance",
        "lingerie",
        "kissing"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/evas-valentines-day-choices"
}