{
    "title": "Deciphering the Bloom Ch. 03",
    "pages": [
        "Thank you to everyone for reading, voting and/or commenting. You cannot know how grateful I am. Constructive criticism is welcome.\n\nHuge happy hippie hippo hugs to Klastbreath for emergency editing. As always I tinker, so for any mistakes I ask your forgiveness.\n\nMy gratitude to nomoretears00 for always saving my bacon.\n\nAH you are the other set of eyes I needed, I am one blessed hippie.\n\nThis is a copyrighted work of fiction by the author seeker71. All rights reserved.\n\n*\n\nMorning came. Davey raised the thin folds of protection that held him in the realm sleep and was greeted by the sight of his dreams made flesh. \n\n\"Good morning,\" Nicolao murmured before dipping his head and kissing David. Far from a morning peck, it left him breathless, and panting.\n\n\"Morning Nicolao,\" he said as he nuzzled into his lover's body, closing his eyes again.\n\n\"Oh no, I've been watching you sleep for half an hour, it's time to get up.\" Nic slid away.\n\n\"You should have gotten me up.\" Davey liked to snuggle for a while awake before getting out of the bed. Many mornings it led to other activities, but if not he cherished the closeness before facing the day.\n\nNicolao stood and stretched, \"I thought you needed the rest, and I got to watch mi joya que averg\u00fcenza el sol.\n\nDavid wrinkled his brow, \"Nic you know I don't understand Spanish.\"\n\n\"Good, because even by my standards that was sappy, though true.\" Nicolao turned to go to the bathroom. The unfamiliar twinge caused by the previous night's activity caused him to grimace and step gingerly. \n\nNic adjusted the water for their morning shower. Davey came in not meeting his gaze.\n\n\"I'm sorry.\" David's voice was barely a whisper.\n\nNic came closer, and raised his chin until their eyes met. \"What are you sorry for?\"\n\n\"You're hurt.\" He began to shake thinking he had caused Nic pain.\n\n\"I swear to you it's the most pleasurable ache I have ever felt.\" Nicolao touched his forehead to David's. \"I needed you last night. We made love, you can't be sorry for that. It's my fault; the sore muscles wouldn't be so bad if we soaked. But the night got away from me.\" Nicolao rested his hands on David's slim hips.\n\n\"I was okay?\" \n\n\"More than okay, the best I ever had, mi lirio de los valles. Now I'm sure I'm not the only one with sore untrained muscles, why don't we see if a hot shower helps a bit.\" Nic straightened.\n\nDavey followed him in the shower. The pulsing hot water did feel good on his back. \"When was the last time you...\" he left the question unfinished.\n\nNicolao shrugged, but kept lathering David's skin, \"Bottomed, thirteen years ago, and that wasn't what I meant. I may not prefer it, but last night was you and me. It was special because it was us, making love, top or bottom, and nothing else in my life compares. Dee, you just have to accept that.\"\n\nNic turned Davey's body to clean his back, missing the glorious smile that touched David's lips.\n\nAfter their shower Nicolao called Breezy offering Davey's services. She quickly agreed giving him her address. \n\nDuring their morning walk and ride Davey would glance at him, and smile thinking about what had happened. Nicolao made himself completely vulnerable to him, they had made love, and he said he loved him. He hadn't said it back, and didn't know why. Nic was so open with his feelings; he was incapable of being anything less than candid. Davey felt he couldn't afford that kind of honesty.\n\nThey parted with a kiss. The next two weeks Nicolao would be spending long days, and possibly nights working with Jeremy. Nic was going to take every opportunity, public, and private to reassure David.\n\nNicolao was welcomed by Breezy, who followed him into Jeremy's office. \n\n\"Good morning Evangelista, Miss St. James would you go get us some coffee while I get him caught up?\" Jeremy rose from behind his desk to a stack of boxes.\n\n\"This is a long term contract with Muecci International. The maritime shipping is fine; the products are arriving without delay. The company we contracted with for ground transportation has gone under, and they also held the storage facility.\" Jeremy moved to the couch in his office. The table was covered in papers.\n\n\"Sit down, get comfortable. We have transportation, and storage to work on. This was one of my first contracts. I handed it off years ago, but there has been some neglect on our part. Muecci has very specific needs for its imports; there isn't enough time for mistakes, that's why I tapped you. We have weeks to save this, but I don't want to put a band-aid on it, I want a system in place that they can rely on, not a temporary fix.\"\n\nNicolao took a seat across from Jeremy. He questioned Jeremy's assertions mentally, why weeks for what normally took months, and what specific needs? Nic would not have thought twice about it, save for his lunch with Breezy. He took in the stacks of papers on the table. It indeed was going to be a long two weeks.\n\nDavey arrived at Breezy's house before the children did. His stomach had been in knots all day, when he was with Nic it was so easy to forget who he was. But when he was faced with the world away from Nic, he wasn't his David, he was just Davey. What was he doing at this lady's house? And what was he supposed to do with two kids? \n\nGroupings of children walked past, and he knew the school bus had arrived. He stood, shoving his hands in his pockets. Two figures approached the house, stopped, and stared up at him. \n\n\"Um, hi,\" Davey greeted them. \n\nA young boy climbed the steps, he was burdened with his book bag as well as a cello strapped to his back. \n\n\"Hey, David?\" The boy questioned, extending his hand. \n\nDavey took it, surprised by the grip, and serious large brown eyes that held his.\n\n\"Abel, so you hanging out with us?\" Abel dropped Davey's hand to open the door.\n\n\"Rude!\" The girl stomped up the stairs, stopping in front of David.\n\n\"Sorry, I... \"Davey began.\n\n\"Not you, the challenged one,\" she rolled her eyes dramatically. \"I'm a lady he should have made our introductions, mom says so.\" \n\n\"I am Averie,\" she smiled, \"it is a pleasure to make your acquaintance.\" She curtsied, and then swept past her brother, who watched her with the door open. \"Don't bang my cello on the way in.\" She growled as she walked by him.\n\nAbel met Davey's eyes and shrugged, not disturbed in the least by his sister's antics. Davey smiled, following him inside. The two self-possessed kids were not what he had imagined, lately most aspects of his life weren't, and he was suddenly glad he had come.\n\nThat night when they were home David's joy was infectious he related everything he and the children had done. Nic held him as he spoke, then he was sure to add Breezy and her family in his prayers before he slept.\n\n*****\n\nThe week blurred, due to the amount of work, and the time difference, work days were twelve to fifteen hours. Breezy took care of the current contracts, while Nic and Jeremy worked together on the Muecci problem. Nicolao was reminded of what drew him to Jeremy in the first place. He was fiercely intelligent, ruthless, and to the unobservant, insensate. His chestnut hair was never out of place, and late at night his clothes remained impossibly neat. Nicolao once wanted to break those controls... no, that wasn't quite right; their mutual goal was to splinter the others will. A compulsion, Nic recognized, as a shadow he was drawn to because of August. \n\nUnlike Jeremy, David was not an echo of his past. Which was why these long days with Jeremy was beginning to weigh on him. David's last day of class he was working, while Breezy made sure she left early. She and the children not only took him to dinner, she'd had a cake made for him. Nicolao was torn. He was grateful for the time Dee got to spend with them; maybe a bit jealous, and angry he had to miss his David's celebration. And for what, so Jeremy could flirt with him every free moment? He was going to cut this exercise in futility short. He made sure Breezy was on board, and he approached Jeremy when they were eating. \n\n\"Saint and I are going to work through the weekend, when I leave Wednesday night everything should be done except the signatures and filing.\"\n\nJeremy stopped chewing, and then swallowed slowly. \"You and Miss St. James decide our schedule, I wasn't aware.\" Jeremy replied the only sign he was annoyed was a slight tightening of his jaw.\n\nNicolao shrugged in response, he really didn't care. As long as the contract was done and all parties agreed on the terms, Jeremy had no reason to object.\n\n\"I put in for time off next week; I'm going to visit my family. We won't take any shortcuts, Saint and I will sleep here in the office if need be. We will have it done by Monday, scanned, and faxed by Tuesday. That should give you time to make any changes, but that shouldn't be necessary. This way I get to see my family, and the Muecci contract will have been handled properly.\"\n\n\"Miss St. James' has children; she's going to spend the weekend here with you?\" Jeremy began to suspect the student was not his only rival for Nicolao's affections.\n\nRelieved Jeremy had no real objections, he clapped his back affectionately. \"Saint's kids will be at my house, safe and sound. Dee has been watching them for her.\" Nicolao smiled with the thought of Davey.\n\nThe place on Jeremy's back where Nicolao had touched him was warm. The light contact had sent a jolt from his shoulder blade right to his neglected dick. Jealousy roused within him, Jeremy wanted Nicolao's face to light up when he thought of him. He had done everything expected of him, everything. Wasn't his debt paid, couldn't he have just one thing that he really wanted? Jeremy's mind balanced internal scales, in his measure he was due, and Nic was the payment.\n\nJeremy took another bite of his sandwich, quickly averting his eyes. The enduring despair that rested in his core stirred. Why couldn't Nicolao give him more time?\n\n\"Alright, we work through the weekend,\" he declared, \"I would hate to keep you from your family. You have been invaluable this week. I would have been lost without you.\"\n\n\"Thanks Jeremy, you should work on having more people in your corner.\"\n\nJeremy crumpled his sandwich wrapping. \"Evangelista, let's get back to work now, and fix my life later.\"\n\n*****\n\nDavey waited for Averie to complete his second look for the day. She had decided her task for the weekend would be to act as his stylist when he mentioned the need for a haircut. \n\n\"Rie, leave him alone, and let him play!\" Abel ordered. Davey was trying to play the video game with his sister buzzing around his head.\n\n\"Be quiet, Bud! This is working,\" she stepped back to admire her work. \"Mr. Nic is going to love it!\" Averie declared.\n\n\"Thanks Rie, I'm sure I'll love it too, as soon as I see it.\" Davey hoped it was better than her attempt to straighten his hair with a flat iron.\n\n\"You're welcome,\" she wrinkled her nose, \"maybe I could work on Mr. Justice's look.\"\n\nBefore he was able to answer, the doorbell rang, making the trio jump. Who could have gotten past the gates?\n\nDavey gave the children a reassuring smile. \"Hold on for a minute.\" He adjusted his glasses, and looked at the screen by the door; he didn't recognize the dark haired man.\n\n\"Yes, who is it.\" He called out.\n\n\"This is Jeremy Mylonas, and I was hoping to have a word with you.\"\n\nDavey threw the door open, worried something had happened to Nicolao.\n\n\"Is Nic alright?\" He barked.\n\n\"Whoa,\" Jeremy raised his hand, \"yes, when I left the office Nicolao and Miss Saint James were fine.\" \n\nDavey waited, he didn't want to know the reason Jeremy was there. The man was handsome. Of course he couldn't hold a candle to Nic, but there was no denying he was good looking. \n\n\"I came to have a word with you.\" Jeremy stepped forward, but Davey didn't move to let him in.\n\nThey kids had been teaching him the finer points of having sleepovers, point one everyone had to sleep, eat, and socialize in one room. The second point was no cleaning until the sleepover was officially over. He had enjoyed himself so much he could not regret it, but facing the man who he knew would be taking Nicolao from him, he wished he had on clothes; and he could have cleaned a bit. Davey wasn't going to let Mylonas near the kids. They were fully clothed, but he didn't know the man. No, he wasn't going to even see Breezy's kids.\n\n\"I'll come outside.\"\n\nDavey closed the door, and emerged seconds later with Nic's jacket and slippers on, covering his pajama bottoms and t-shirt. Jeremy evaluated his competition. David's styled hair was loose, ash blond curls; tendrils clung to his ears and the nape of his neck, outlining a face of startling pulchritude.\n\nHe was a looker, if that type suites you, Jeremy thought. He also appeared to be savvy; Jeremy admired how he would not let him enter his territory, and covered himself with Evangelista's jacket. \n\n\"Has Nicolao mentioned me to you?\" \n\nDavey rested his hip against the railing. \n\n\"Yeah, he said you were why he moved here. In a way I should thank you.\" Davey's voice was low, reserved.\n\nJeremy was almost put off-balance by his directness.\n\n\"Evangelista is one of my few friends, he means a great deal to me.\" \n\n\"He means a great deal to me too, but you want him back, and not as just your friend.\" Davey had tucked Jeremy away in the back of his mind when Nic told him about him. He knew someone worthy was there for Nic, and now he was meeting him.\n\n\"That's true, very true, but he doesn't feel the same way about me, now that he has you to take care of.\" Hazel eyes bore into blue. \"I had to see you. I wanted to know why Nicolao won't even try to work on our relationship.\"\n\nDavey's breath caught in his throat, Jeremy was like August. He wouldn't be a burden to Nicolao, they would be equals. \"He loves me.\"\n\nJeremy shrugged, in spite of the stirring in his chest, \"You work fast Dee. But tell me, how many people love things that are not good for them?\"\n\n\"It's Nicolao's decision not yours.\" Annoyance flared when Jeremy called him what only Nic did. He wasn't ready to let Nic go, not yet.\n\nJeremy was shocked David hadn't denied he wasn't good for Nicolao. \"But sometimes, if you love someone you have to be strong enough to do the right thing for them, to face the pain of losing them if it is best. Not that I can't see what he sees in you, you obviously get by on your looks.\"\n\nDavey straightened, \"Are you willing to give up on Nic? You did before, what makes you so sure you're the best for him now?\"\n\nJeremy wasn't ready to comment on his past failings, and voiced no answer.\n\nDavey grabbed the doorknob, but waited for an answer. \"Just what I thought, you still aren't who Nic needs, yet.\" Davey called over his shoulder and went inside.\n\nJeremy was left to ponder what he meant by yet. He hadn't meant to come to Nicolao's home. But he saw how determined Nicolao was to be done with their project and he couldn't stop himself. Jeremy returned to the office and made a call. The visit yielded nothing, except he liked the student. Davey almost had him convinced he was what Nicolao proclaimed, almost. Jeremy called a number he seldom used; he would find out if he had lost Nicolao to the better man.\n\nDavey returned to find the children cleaning up their weekend disarray. After hanging Nic's jacket he joined them, and they silently restored order to the house. He was grateful to them for their intuitive silence. When they were done they sat on the couch, and put in a movie. Averie and Abel settled in on either side of him. They felt like pieces of his life now, not just Nicolao's. They were the brother, and sister he could have had, if life weren't cruel, it always returned to cruel. Jeremy's coming here was proof; he had come, announcing it was over, his sweet respite.\n\nBreezy picked up the children, and dropped Nicolao off. Davey had never seen him look so haggard. His eyes had dark circles under them, and his clothes were a disheveled mess. \n\nDavey tried to feed him, but he declined opting for a shower. \n\nBetween stretching and yawning, Nic told him he was satisfied with their progress, and felt they could leave in the middle of the week. Davey decided not to mention Jeremy's visit. He seemed so tired, why upset him? \n\nNicolao dragged Davey to the bathroom with him, smiling as he removed his clothes. \n\n\"Nic you look like you're about to fall over.\"\n\n\"Stay, if only to catch me.\"\n\nNicolao turned the water on in the shower, and pulled Davey to him. David returned the embrace, but Nic didn't move. He held him flush against him. Nic's chest would expand as he took great breaths, inhaling David's scent.\n\n\"God I love you.\" He declared as they stepped apart. \"Very dapper hairdo, Averie's handiwork I assume, she's got talent.\"\n\n\"She said you'd think so.\" Davey said as the stepped in the shower. \n\nHe scrubbed himself as Nic washed his hair. Davey wasn't tall enough to reach, but when Nic was done Davey cleaned him, memorizing every inch of skin as his hand glided over it. He would remember Nic by sight, touch, and taste until the end of his days. \n\nNicolao crawled into bed, his body weary. He ached from trying to rest his large body on Jeremy's couch. David settled over him and drew him into a drugging kiss, his tongue worked in unadulterated carnality. David severed the contact, the kiss left him dizzy, and shaken.\n\n\"Nic, I...\" His voice left him. He couldn't say any of the things he wanted. Davey's eyes pleaded silently for him to understand, to know, he wanted to tell him, but couldn't.\n\nA smile lifted the edges of Nicolao mouth. \"I know Dee, I love you too. And I will keep saying it until every part of you believes it. When that happens, and you trust me completely, you will be able to say anything.\"\n\nDavey's face contorted. He told Jeremy he was not what Nic needed, yet he couldn't even tell him the truth. The simplest truth he knew. Proof he wasn't who Nicolao needed either.\n\nNicolao saw Davey's pained expression, and was seized by paroxysms of emotion. He rolled pinning his slight frame beneath him. He nuzzled Davey's neck, inhaling the scent that was his David.\n\n\"I missed the smell of you,\" Nic's voice was a low rumble, the sound made Davey's skin come alive with creeping sensation, as the vibrations travelled through him. \n\nTheir trapped, engorged shafts wept tears of desire that formed a puddle between their bodies. Nicolao ground his hip into Davey's, rubbing their slick members together. Skin slithered on skin, moistened with their own issue, pressing deliciously closer, exacting moans from them both. \n\n\"I missed your eyes, and how they say everything you think.\" Nicolao continued, his hands on either side of David's head, holding his gaze.\n\nHe began to undulate against Davey in earnest. Their rutting bodies moving against one another, developed into two parts of an animated mechanism, driven by the promise of their unfettered release.\n\n\"For two days I missed the feel of your skin, so responsive.\" Nicolao's brows drew together; he wasn't going to last long. Their pre-come lubricated the lair between their stomachs, and the heated friction was fast pulling him over the brink. \"The taste of your mouth is divine.\" \n\n\"The sound of your voice makes me hard, especially when you moan like that... so sexy. You give me so much, you don't know how much,\" Nicolao paused, the built pressure was about to break. \"I'm coming love!\"\n\nNic's hips slammed into David's as cream ribbons erupted from his cock. He did not want to break eye-contact with Davey, but as pleasure enveloped him he threw his head back. The sinewy cords of his neck were on display, as he groaned his satisfaction.\n\nDavey was lost in Nicolao; his eyes held his, his word low and sensuous, his touch hard and heated. Nic's erupting tremor covered him in sticky cream, and then, without him knowing, his own release was there. He began to quiver, and shoot, making desperate sounds in his throat, unable to form words. ",
        "Nicolao swiftly cleaned them up. David fell asleep in Nic's arms. His fears of Jeremy securely tucked away in the back of his mind. Nic's words milled in his head even as consciousness slipped away. It was another memorable night in one another's embrace. It was also the night Davey did not cry silently in his sleep. It was the night he woke up screaming.\n\n*****\n\nNicolao hated going in to work. David's screams had been hair-raising. His body was drenched in sweat, and his heart was racing. Nic gathered in his arms, but did not ask any questions. In spite of himself Nic fell asleep, but judging from David's darkened eyes he had found no such relief.\n\nHis day was spent thinking about David. He left the office late that night knowing he had done little to assist Breezy or Jeremy. If he had not been so preoccupied he would have noticed Jeremy's tension. He was on edge all day waiting for Evangelista to attack him for upsetting his twink. When Nicolao left, he accepted that David hadn't mentioned it. The hustler had made a mistake with that, but one he was grateful for.\n\nDavid and he ate a late supper. Nicolao knew he was retreating from him. Their night was unease. He was back to looking at his lap when he spoke, unable to meet Nic's eyes.\n\nThey were in bed when Nic decided he had to say something, \"Maybe it would help if you tell me about it.\"\n\n\"There's nothing to tell. It was a nightmare. I'm alright,\" Davey paused, and swallowed to get the lie out, \"I don't even remember what it was about.\"\n\nNicolao nodded, and turned the lights out. He didn't know what hurt more, the fact that David was constructing walls, or the lie. He prayed Augusts' prayer that he was strong enough to be the man David needed him to be, then to be spared more Marigolds and Morning Glories.\n\nHe awoke to David's shrill screams.\n\nNicolao left the next morning without waking David. He did not have to be at Breezy's until the children were out of school, and Nicolao wanted him to get some rest. He was at a loss. He had no idea how to help David. Maybe if he would unburden himself, let him know about his past it might help. Nic guessed he had some idea of what it was, but he would have to tell him. Last night David wasn't capable of speech, he kept whispering how sorry he was, as he clung to him. Nicolao held him close, and told stories, much the way he had when he was breaking through David's shell on the bus. Finally, he felt his lean body go limp. Nicolao spent the remainder of nightfall keeping vigil against sinister vagaries.\n\nNicolao leaned against Jeremy's desk, waiting for Jeremy and Breezy to return. The Meucci contract was all but done. He texted David whenever he could, and even called him, the sleep appeared to have helped. The office was empty, but Nic was confident he would be able to leave before sunset. If he did he would take David to a nice dinner out. Nicolao was lost in his thoughts, he missed Jeremy entering the room, and locking the door.\n\nNic felt the hard body pressed against him a second before he was forced face down on the desk, his arm twisted painfully behind his back.\n\nJeremy laid his body over his, bringing his mouth to the edge of Nicolao's ear. \"We talked about this Evangelista, me taking your ass on my desk.\"\n\n\"God dammit, the things we talked about aren't going to happen.\" He was annoyed, but not alarmed; he just had no time for games. Jeremy couldn't dominate him, even when he was available. But the idea of it obsessed the man. \n\n\"They can happen, if you'd forget about that bottle blond, little twink of yours for a while.\" Jeremy pressed his blood filled length against Nicolao's ass.\n\nJeremy's words coalesced in Nic's mind, the tension in his body fled, and his words were almost a whisper. \"Let my arm go, within the next five seconds, or you will be drinking from a straw when I'm done.\"\n\nJeremy straightened immediately taking a large step back. The ominous truth in the declaration couldn't be missed.\n\n\"How do you know what David looks like?\" Nicolao stood at his full height, his brown eyes narrowed to slits.\n\nJeremy was tempted to take another step back, but met Nic's stare as casually as he could. \"I stopped by Hope's Cove over the weekend. I went to see your student. What he didn't tell you?\"\n\nNic's jaw twitched. If he beat Jeremy into abstract art he would lose his job, and probably go to jail for his trouble. He struggled to control the familiar prickling sensation forming at his scalp, radiating downward throughout his body; the curious euphoria rage, and danger gave him. But standing before him was one of the reasons why David was having nightmares. It certainly couldn't be a coincidence. \n\n\"What did you say to him?\"\n\n\"That's between the twink, and me. Maybe I offered him a better fiscal opportunity. I do have more money than you.\" Jeremy shrugged.\n\n\"If you say one more rude thing about him, or call him anything other than his name I promise to make the use of a straw permanent. Now what the fuck are you playing at?\"\n\nJeremy closed the distance between them, his own anger and frustration boiling over. \"What am I playing at? What the fuck are you playing at? You moved here to be with me, me, a few months ago! That isn't minor, or without implications of some kind of feelings. I know you felt something for me. Then you put a halt to everything after one damned conversation. You won't give me time to fix it, you're being unreasonable.\" \n\nNicolao didn't flinch at the display. \"You couldn't tell me how long you needed, a week, a year, five years. I was supposed to what? Fuck you in your office, or have clandestine sleepovers at your place, or is that what Hope's Cove is for? So you can hide your shameful, dirty, queer lover's away.\"\n\nJeremy smiled, \"That is not what Hope's Cove is for, but nice suggestion,\" he exhaled. \"Who said you were going to fuck me in here?\"\n\nNicolao snorted, this was the norm for their discussions. Reveal genuine emotions, and the topic would invariably swerve away from the issues; everything was glossed over, just like Mylonas. \"I was never going to submit to you, you and I both know it.\"\n\nNicolao paused, \"The one conversation you refer to wasn't the only thing that stopped us from moving forward. It's the whole power dynamic you're a slave to. You were afraid to show weakness, afraid to let me in. You think setting up these competitions where the winner gets to top saves face somehow. You and I both know I would have won, each bet. Because what you want most in this world is to belong to someone. You can't even give that, yielding control, as a gift. You need someone to take it. I admit I was interested in the challenge. But I know I'm not the one for you. Butting heads with you for a lifetime isn't what I want, and I can't live in a room that is four by two.\"\n\nJeremy moved closer, there was scarcely an inch between them. Hazel eyes peered up at Nicolao, \"What if I submit? What if I trust you with all of the bits and pieces of me? What if you didn't have David where would we be?\" He could feel Jeremy's breath on his neck.\n\nNicolao assessed whether this was once again one of Jeremy's games. The thought of being welcomed in a body gave him pause, but it would be hollow if the body wasn't David's. Nic sidestepped Jeremy, drawing in a shaky breath. \"I'm not getting lost in the hypothetical. The reality is I have Dee, and if you can't accept that then when my contract expires, I won't seek to renew it.\" \n\nNicolao walked to the door, and unlocked it, \"Look, I'm tired and going to head home. I'll see you tomorrow for the conference call, even though I don't think you'll need me. Goodnight.\" He left quickly not waiting for a reply. \n\nJeremy caught the uneven breath and the slight bulge in Nic's pants before his exit. Hypothetical can become reality, it wasn't over yet he decided. \n\nNicolao sent Breezy text messages letting her know he would be at her car waiting for her. He struggled to understand why David hadn't told him about Jeremy's visit. It clearly rattled him; the night terrors were proof of that. Breezy came down a half hour after he sent her the texts, she was unusually silent as she began their drive.\n\n\"How much did you hear?\" He asked.\n\n\"Enough to be titillated, and creeped the fuck out.\" \n\nAway from her children, and the office Brescia St. James had a mouth to rival a sailor. \n\n\"Jeremy took it upon himself to see Dee.\"\n\nBreezy gave him a quick glance, \"Yeah, the kids told me.\" \n\n\"And you didn't think to mention it?\"\n\n\"Not my place, but the kids did think Davey was upset.\"\n\nNic knew she was right. \"I know, but he's so...\" He hesitated to say fragile, David wasn't weak he had survived too much for that label. But he didn't know how to convey why he needed his protection.\n\nBreezy frowned, taking up his abandoned statement. \"Davey is walking wounded, goddamned tattered flesh and soul. As a mother I want to hug him, throw him in the Winnie and roll. Carry him till he gets stronger, the way his mama would've. But he has you, and he's a man, not a child, that's why it wasn't my place to tell you about Mylonas, the jackass.\"\n\n\"I could lose him Breezy. The things in his past won't let him go, I thought I was making progress, but he can't trust me.\" Nicolao allowed some of the helplessness he felt spill out in his words. Breezy paused wanting to reassure her friend. \n\n\"Wounds scab over, sometimes way before the flesh has healed. To heal it proper, you've got to peel the dead skin off. You ever had one of those hurts? The pain is a son-of-a-bitch, because you have to go in, and clean out the debris, and rot. Now think about it, he's healing, I can see it, so can you. You can't expect it not to vex him, and maybe it'll hurt so much he'll want to run or fold under the pain of it. But that's when you'll be there, in the here and now, rendering the past impotent whispers.\" They stopped at a light; Nic noted she had as amber glow in under the light.\n\n\"That's just my two cents, but if you want, you can slip Mylonas a mickey, and put him in the back of my truck. I'll make a call, and that jackass is gone. Just don't ask me any questions.\"\n\nNicolao chortled, \"Right when I was about to swear you were a true saint!\" He sobered, \"You're right about David, I see his pain and I worry.\"\n\nBreezy nodded, \"You're human my friend. It's that you're in it, and it hard to see the progress, but I can. Anytime you need to talk I've got two good ears.\"\n\nThey completed the drive back and forth in companionable silence. Nicolao wondered after she drove away from he and David, how she was so intimately familiar with pain.\n\nNicolao and Davey settled on take-out for dinner. The distance of yesterday was apparently gone. \n\nDavey realized, with all of the text messages from Nic, he was worried about him. He wasn't going to let his time left with Nicolao to be anything less than it had been, perfect. Now it was almost over, he had to accept letting it go, nothing good ever lasted long. \n\nIn the shower together, Davey playfully began running his tongue along the defined lines of Nicolao's muscles. It led to a great deal of laughter, his licking post was ticklish. \n\n\"Dee, I think you have a muscle fetish!\" \n\nDavey pulled away from his inner thigh, and looked up at him, \"I have a Nicolao fetish.\" He quipped before continuing activities. \n\nNic's body blocked most of the spray. The hot water, and David's puckish attention was close to overloading his senses. For all of his tasting, he had yet to make contact with the part of him that was imploring him for care. If he moved to touch himself he would brush his hand away.\n\nNic was approaching pain before he spoke, with his teeth clenched, \"Love, please I don't know what you have planned, but this is torture.\"\n\nDavey rose, his eyes smoldering. \"The plan is for you to make love to me.\" \n\nNicolao's mouth was ajar in disbelief. Davey pressed against him, grabbing the nape of neck and urged him down to his waiting lips.\n\nNic's amazement mingled with this desire. He picked David up, and pressed his back against the shower wall. He lost his breath when Davey wrapped his legs around his waist, and began to move in bewitching circles while clinging to him.\n\nHe maneuvered to turn the water off, exit, and drape a towel across David's shoulders as he suckled Nic's neck. He managed to dry them, and David was in bed before his lust filled mind cleared a bit. \"Are you sure?\"\n\n\"Nic I want you, please.\" Davey crooned.\n\nNicolao's erection could have been used on a constructions site, it grooved in time with his heartbeat. He wished David had allowed him to take the edge off before they got to bed. He needed control, or he would plough into him operating on animal instinct. \n\n\"Lie down.\"\n\nDavid lay face down on the bed. Nic reached in the nightstand removing massage oil and lubricant. He leant down, kissed the small of his back, and straddled his body. He coated his back in massage oil, and began with long strokes down his back. Nicolao lodged his cock between his butt cheeks, as he rocked back and forth basking in tactile sensation. \n\nNicolao worked his way downward and kneaded David's glutes. He was reassured by the mewling sounds emitting from his lover. He breached him with a lube covered finger, desperate to open the channel up. David's muscles tensed, but he soon relaxed as Nic continued to massage his back and work his finger in and out. He sought the hidden jewel, hoping to stimulate pleasure while opening him. A sharp inhalation let him know he was at the right spot. \n\nGrowing confident they were making progress, he was about to have him roll onto his back. He could take him in his mouth, when he added another finger. David's hands where clenched, and his body began to tremble. Nicolao's gut wrenched, something was wrong. He moved off of his legs and watched in dread as David scrambled to the head of the bed, curling into a ball of flesh and despair.\n\nDavey pulled his knees to his chest, his eyes squeezed shut. He'd fought to keep it at bay, and now he was bombarded by it. Terror clawed through him, robbing him of breath, causing his chest to constrict painfully. He heard Nicolao calling him, much in the tone you would use with a child. Davey opened his eyes to see Nic reaching for him. He couldn't stand for anything to touch his skin; he drew back from his hands. Davey hastened to pull himself up to a seated position. He rested his head on his knees, and struggled to gain control of his body.\n\nNicolao watched in regret and horror. He had caused this. David was dripping with sweat, and his eyes were open, but unfocused. He had recoiled from him, and he deserved it. He should have moved slower, should have paid closer attention. David obviously wasn't ready, so much for the impotence of whispers.\n\n\"Dee, it's alright. I'm sorry, I am so sorry.\" Nicolao repeated the litany, hoping to soothe him.\n\nDavey fought to speak, \"I'm fine, it's fine,\" he swallowed heavily, his throat was so dry. \"Please,I don't want to be alone, please, please Nic. Just give me a minute, please.\"\n\nNicolao was at a loss. What was David pleading for? \"I'm not going anywhere. And it's going to be alright. We're alright. I love you Dee and I'll not leave you alone.\"\n\nNicolao stayed on one side of the bed. Watching as David's breathing returned to normal, when he was sure the attack had passed he carefully enfolded him in his arms. They slept with the lights on, having dealt already with too much of the dark.\n\nThe next morning Nicolao called in his apologies to Breezy, and sent the message that if Jeremy wanted to have him terminated that he should see to it. Otherwise, he would return to work on Monday. \n\nThey spent the rest of the morning packing for the short visit. Each stoically fought their shame over failing the other. Davey did roll his eyes when Nic mentioned shopping for a few things. Nicolao picked up the rental surprising Davey with his chosen vehicle, a mini-van. They shared a laugh, when Nic declared it the \"the Cadillac of mini-vans.\" The van was loaded with their luggage, and Nicolao found himself getting excited for David. He hadn't crossed the state line since he was seven. \n\nDavey buckled in and wondered, not for the first time, what Nic's family would think of him. Would they see him as trash, out to use Nic like Jeremy did? He heard Nicolao sigh.\n\n\"What is it? I figured you'd be tired today.\" Davey asked. A part of him wanted Nic to say he was too tired to leave, and would wait another day.\n\n\"No I'm not tired. Dee I know I said it last night, but it feels like there is some tension between us. I'm sorry for last night, love. I went to fast, and I triggered something in you.\"\n\nDavey was stunned; liquid brown eyes entreated his forgiveness, where none was needed. He bit his lip.\n\n\"Nicolao I'm the one who's sorry, screaming like I've been, and waking you up.\" Davey closed his eyes, and pressed his head back against the head rest. In the silence, Nic admired his long lashes, and flawless profile. \n\nFinally David opened his eyes, but did not alter his gaze. \"I don't want to be this way. I'm trying to be strong. I want to be with you so bad, and I hate myself for not being able to. And it doesn't matter if you say I shouldn't, but that's how I feel.\"\n\n\"I keep telling you, we have time. It's enough for now that I know you want to. Last night you left me, it was as if you didn't see me. Something bad happened to you, didn't it David?\" Nic urged gently. \n\nDavey nodded, \"Almost three years ago, something bad, but I can't talk about it, I...\" He blew a breath out; the tightening in his chest was starting. \n\n\"We're okay; you don't have to talk about it. I don't need details to understand.\" Nic grabbed David's hand and twined their fingers together. The simple gesture always reminded David of their first date. He relaxed at the touch.\n\n\"I didn't leave Nic. I wasn't asleep, like with the screaming. I was aware it was you, I was so hot for you, and it happened anyway. I freaked out even knowing it was you, and that you won't hurt me. I'm sorry I'm so messed up.\"\n\n\"You aren't messed up. Remember that's the man I love you're talking about, and no one can hate him. And no one will hurt him again if I have anything to say about it.\" \n\nNicolao cranked the van, and then continued, \"There is nothing for you to be sorry for. Thank you for telling me what you could. I know that wasn't easy. Now, we have to go to the convenience store, and load up on rotating hotdogs, and stale nachos.\"\n\nNic guffawed at the astonished expression he gave him. He had told David many times that those items weren't really food. \"Don't look at me like that. It's a road trip requirement, I didn't make the rules.\" \n\nThey locked the main gate, and began their drive. The specter of discontent not completely banished, but less potent by their accord.\n\nNicolao avoided the interstate for most of the drive. He insisted they stop and take pictures in front of the state border signs. They ate at a dingy diner, with the best greasy burgers Davey had ever tasted. Nicolao pulled into a lonely shop after four hours on the road. It was an antique store, which also had original glass blown art. Nicolao bought his family gifts from the talented owner, and a few pieces for their house. \n\nDavid absorbed the scenery for the entire drive. He wondered what life would be like if he grew up on a farm like the ones they passed. He knew Nic was doing everything he could to make the trip special for him. The shopping, the food, even the music he had on the player was the instrumental rock Davey preferred. For a man who wouldn't own the label of perfection, Nicolao kept demonstrating it with every act.\n\nAfter six hours Nicolao let him know they would have to get on the interstate, and that he should rest while he drove. David had tell tale circles underneath his eyes, he didn't need his company, as sweet at is it was. The drive finally lulled him into a light sleep, when he was resting his eyes for a moment. ",
        "The change in the rhythm of the car roused David. They were in a neighborhood. He sat up and Nic grinned at him.\n\n\"Dee, we're almost there.\"\n\nDavey rubbed the sleep from his eyes. He knew where they would pull in before they did. It was a large house with cars lining the street. The house and the driveway was lit by multiple flood lights, every light in the house seemed to be on. \n\nNic pulled, \"Pop must have insisted they leave the driveway clear,\" he met Davey's eyes as he cut the engine. \"Are you ready? If not, I can turn around; we can find a nice bed and breakfast.\"\n\nDavey loved him even more for offering, \"No, I'm excited to meet your family Nic. I think you've told me enough to be prepared.\"\n\nNic leaned in and kissed him, \"Okay Dee, we'd better head in, or they'll all come out.\"\n\nThey exited the van and walked up the steps to the front door. Nic was about to knock when the door opened. A large man, with grey curly hair greeted them with a warm smile. \n\n\"Hi pop,\" Nic stepped readily into his father's embrace. \n\nAfter a moment he pulled back, \"You look good Nico. I made everyone wait in the family room; I didn't want them mobbing you.\"\n\nMr. Evangelista stepped back making room for Davey and Nic to enter. \n\nNic place his arm around David's shoulder. \"Pop, this is my boyfriend, David Bradley Collins, Dee that's pop.\"\n\nDavey moved out of Nicolao's embrace to shake the large man's hand. \n\n\"Natanaele or you can call me Sr., or pop if you like.\" \n\nPop... Sr. ... Mr. Evangelista was a large, powerfully built man. His hands were calloused and rough from a lifetime of work. They followed him to the family room where all on Nic's siblings were. As soon as they crossed the threshold they all surged around them. Nicolao was wrapped in a blanket of arms and kisses. \n\nDavey pressed back against a wall. Amid the flurry of activity a small woman moved past Nic's greeting mob and approached him. David thought she looked no more than forty. Her long, straight black hair was streaked with grey, and she stood an inch shorter than he. She was stunning, with brown skin and delicate bones structure.\n\nDavey stepped forward, offering his hand, but she pressed into him and wrapped her arms around him. Not knowing what else to do, he hugged her back.\n\n\"It is so good to finally meet my other son,\" she declared and pressed a kiss on his cheek.\n\nWhen she stepped back, Davey was surprised to see the assembly was watching them. \n\n\"Everyone, this is David, your brother. And this is Hilaria our ma.\" Nicolao leaned down to hug and kiss his mother.\n\nDavey recognized everyone from photos Nic had shown him. Nicolao and Nieves got their fine features and smaller bone structure from Hilaria as well as their black, straight hair. All of the Evangelista children were gifted with Nate's height, and topped six feet. Natanaele Jr., Nerina, and Narisco all had curly, dark brown hair and thicker bodies. Only Nicolao inherited his mother's watery eyes.\n\nNot long after they walked in the group moved to the dining room. They had been holding dinner until their arrival. Davey felt guilty over their stops, but Nic insisted they shouldn't have waited. The dinner was delicious, and full of stories about Nicolao. David listened, seated between Hilaria and Nic. He had never been witness to such a congregation. They ate, laughed, and conversed with ease, no one tripped over the other, and the invisible lines of kinship guided the right voice to the correct ear. Even Sera, Nate Jr.'s wife navigated the multiple discourses without pause, Davey noted. They had no idea, he was sure; it was all a foreign performance to him. But one he enjoyed none the less.\n\n\"How was your drive David? Did Nico stop and make you shop at every shop he saw?\" Hilaria asked.\n\n\"No ma'am...\" he stammered, but laughed when he saw the knowing look in her eyes. \"We did a little shopping.\"\n\n\"For you ma! I left the gifts in the van; I'll get them for you after dinner.\" Nicolao explained, couldn't David and his mother bond over something other than his shopping.\n\nHilaria rolled her eyes at her third born. \"Driving is not bad for you; you do not get motion sickness, or any of those things?\" She patted his hand on the table next to hers.\n\nDavey glanced at Nic, but he shook his head. They had established the trip went well.\n\n\"No, ma'am, I think I like travelling. It was fun.\"\n\nShe rewarded him with a smile and squeezed his hand, \"Good, when we go to Santa Fe you should love it.\"\n\n\"Ma, Dee doesn't have a passport.\" Nic began, he loved his mother for accepting David as her own, but he knew Dee wasn't fully his yet.\n\n\"Nico, the trip is next year, plenty of time for a passport.\"\n\nDavey was confused. Why did he need a passport to go to New Mexico? \n\n\"We're all going to Argentina next year,\" Narisco explained from across the table. He was watching his three year old Joshua's handling of a glass of juice. His curly brown hair was cut low, showing off his handsome face, a balanced mix of both parents. Davey noted that when he wasn't focused on Joshua he seemed to be studying him.\n\nDavey wasn't able to mask his shock. Was he going to South America on a family trip? Nic hadn't mentioned it; did he want him to go?\n\nNarisco smiled, his dark eyes kind, \"Hey there's plenty of time to decide what you want to do, don't sweat it.\"\n\n\"Of course you do not have to go, but I want you to think about it.\" Hilaria explained, giving his hand another squeeze. \n\n\"Yes, plenty of time for vacation decisions, but less time for business, Risco.\" Natanaele chimed in from the head of the table.\n\nNarisco furrowed his heavy brows and picked imaginary lint from his shirt. \"I know pop, I'll make a decision soon I promise.\" He said, giving his father a weak smile.\n\nNicolao mentally patted himself on the back for moving away. Unlike Narisco, he did not have to endure pop's ever present push for them to all own businesses, preferably Natanaele and Sons garages. Perhaps that was why his little brother was so reserved tonight. His compulsive grooming was a clear indicator that Risco had something on his mind.\n\n\"Nate's taking orders from all over the country, another shop would thrive.\" Natanaele explained to the table.\n\n\"Your shop is doing that well Nate?\" Nicolao asked his older brother. \n\nThe most reticent member of their clan, shrugged noncommittally. \n\n\"Business is great. Nate and those green ideas of his are really something.\" Natanaele bragged for his eldest.\n\n\"It's not all me pop.\" Natanaele the younger asserted, obviously uncomfortable with the praise.\n\nNic nudged Sera with his elbow. \"Still humble? After catching you, I'd have thought he would be comfortable with thumping his chest a bit.\"\n\n\"No one is as comfortable as you are with chest thumping. When you caught David I'm sure you put King Kong to shame.\" Sera elbowed him back. Nate and Nicolao couldn't be more different. Her husband was a reserved, gentle man hidden underneath wild hair, and intelligent eyes. His younger brother was a vibrant peacock, drawing the attention to himself in order to relieve any stress on Nate. Sera smiled appreciatively at Nicolao. \n\nNicolao winked, \"When you have something great to crow about why be shy?\" \n\n\"When are you ever shy?\" Sera raised an auburn eyebrow as she ribbed him. \n\n\"I was nervous about approaching Dee.\"\n\nDavey's face blanched, \"When?\"\n\nNicolao shook his head trying to look sincere, \"There was a minute there...\"\n\nThe assembly laughed at the improbable statement. \n\nNicolao met David's eyes; to be sure he was at ease with their banter.\n\n\"Right after I asked you to sit down?\" David said smirking.\n\n\"He made the first move? Way to almost blow it Nico.\" Nieves teased.\n\n\"I thought he was untouchable jailbait.\" He explained.\n\nNieves theatrically turned her coffee eyes to David. \"Yeah, old boy it looks like you're cutting it close.\"\n\n\"I'll be twenty one soon.\" Davey said, delighting in the fun.\n\n\"How soon?\" Hilaria interjected in their exchange.\n\n\"June fourteenth.\" Davey and Nicolao answered in unison.\n\n\"Nerina I think you should be able to put together a nice party by then.\" Hilaria suggested to her oldest daughter. \n\n\"Yes ma, that's plenty of time.\" Nerina assured her with a smile. Her parents had given her the money for her events planning business, Evangelista Event Designs.\n\nDavid turned to let her know that would not be necessary, but fell silent as he faced Nerina. She was smiling, but it did not touch her eyes. For the first time since their introductions he felt like the outsider he was.\n\n\"Does anyone want dessert?\" Nerina asked breaking her gaze. \n\nDavid shot a desperate look at Nic; he would burst if he ate anything else.\n\n\"No Neri, I think I'll head to the van and get our bags.\" Nic pushed away from the table and stood up. \n\nDavid and Narisco followed his example. \n\n\"I think Josh and I have had enough.\" He explained, swinging the boy into his arms. \n\nNicolao knew then Narisco was eager to speak with him, notwithstanding his uncharacteristic silence, his sibling never passed on dessert.\n\nDavey moved to pick up his empty plate.\n\n\"No, leave it, this time. You have had a long day. We will clear the table.\" Hilaria shooed him as she spoke.\n\nNieves, a tall, youthful replica of her mother winked mischievously at David, \"Why do Nico and Risco get a pass from cleaning?\"\n\n\"That's because you never leave! Why don't you go away?\" Nate Jr. offered.\n\n\"Will I get a pass when I come back?\"\n\n\"That depends on if we missed you enough to cut you some slack. Leave for a year or two and we'll see.\"\n\n\"You'd miss Lil' Nico too much.\" She challenged. Adult eyes rested on her six year old, named Nicolao.\n\n\"You can go ma, I'm staying here.\" The child responded in earnest.\n\nNate exploded with laughter. He was the eldest, but he and Sera had no children. They treated his nephew like the son they did not have.\n\n\"Okay that's Nico and Davey, what about Risco?\" Nieves pressed.\n\n\"Do you have the money you borrowed from me?\" Narisco asked.\n\n\"No.\" Nieves answered, regretting her challenge.\n\n\"Then you owe me, I'll deduct twenty.\" \n\nThe three men left the room as Nieves was questioned about her loan from her brother. Nic turned as they passed the cavernous family room and kissed David. Davey couldn't help himself, and he blushed at the display of affection in front on Nic's family members.\n\n\"You're adorable when you turn red like that.\" Nic guided him in the room and seated him on the center couch, the room had three. He turned the television on and handed Davey the remote. \"I'll get the bags, you're exhausted. The nap wasn't long enough, and it looks like it did more harm than good.\" Nicolao knew David hadn't had enough sleep over the past few nights and he worried over the stress of dealing with his family.\n\n\"I'm fine Nic, let's go to the van.\" Davey said, moving to get up.\n\n\"Oh, I'll help Nico; will you keep an eye on Josh for me. If you need something give ma a holler.\" Narisco deposited his burden on the cushion next to David.\n\nIt was obvious the brothers wanted to talk, so he acquiesced. \n\nAt the van Nicolao opened the driver's door and sat. Risco was itching to talk to him about something, more than likely it was pops Nic figured. But Narisco enjoyed working in the garage, so Nic didn't understand his obvious distress. What was more puzzling was his younger brother normally kept his own counsel. The family was rarely consulted about his life inner workings; he acted and dealt with his consequences. When his girlfriend became pregnant Narisco convinced her to not terminate the pregnancy, insisting he would take sole responsibility for their child. Alyssa signed over all parental rights and disappeared. Unlike Nieves, his brother called on the family as little as was necessary. \n\n\"What's up?\" He asked when the younger settled in the passenger's seat.\n\n\"Man, David's really short.\" He announced as he adjusted the seat, and then sat studying the arm rest.\n\n\"Risco.\"\n\n\"Nico, we never talk about this stuff.\" He pressed his lips together.\n\n\"Risco, we aren't talking about anything now.\"\n\nNarisco ran his fingers through his short hair. \"No one ever talked about the fact that you dated women and men. It's never been a topic of discussion, not once.\"\n\nNic wondered if his brother was now some rabid Christian. He doubted he would go to jail if he knocked him around a bit; after all, what good was family if not to knock some sense into one another from time to time.\n\n\"Because I brought David home you think this should be open to discussion?\" His voice was the same alarming quiet as it was in Jeremy's office.\n\nNarisco realized what the tone signaled immediately. \"No! David is a good guy, you can tell. He's something special, his face is so expressive, blue eyes, pink lips, and he's thin, but damned sexy.\"\n\nNicolao's head snapped sideways as he bolted upright. He had to look at his brother to know if he was reading him right. Had he been checking out his David?\n\n\"I'm not interested; I mean ma said he's my little brother, so I know hands off.\"\n\n\"Narisco, 'ma said', 'ma said', who gives a shit what ma said. Yeah, he's your brother because he's mine!\" God his family had boundary issues. \"And since when are you into men?\"\n\nNarisco plucked imaginary lint from his shirt. \"Since always Nico, I've always been scared of standing out; I've never been like you.\"\n\nNicolao forgot his annoyance, seeing Narisco retreat. He was twenty five, only four years younger than him, and they had always been very different. Nic was made with a love of danger and excitement. Risco, to any observer, was gregarious and funny, but at his core he was sensitive and thoughtful. \n\nIt never occurred to Nic to hide his relationships with either sex from his family. When asked by his mother if there was anyone in his kindergarten class he wanted to marry he replied yes, Angie Morales. When pressed what he would do if Angie declined, he told her he would marry Charles McElroy. Pop asked if that was a good idea, and he responded why not. That, as far as he knew, was the only time they spoke of it. \n\n\"I'm not confident like you are. I keep thinking how will this affect Josh? I mean dating when you're a single parent is rough, but how many men are up to raising a kid.\"\n\n\"Raising a kid? Aren't you getting ahead of yourself? You have to date woman and men before...\" Nic stopped; the smaller man was shaking his head.\n\n\"No, Nico, no more women. I'm gay not bi. But I can't do the clubs. I know I want what you and David have.\"\n\n\"What exactly do you think that is?\"\n\nNarisco snorted, \"Are you kidding me? That kiss was nauseatingly sweet, good move not going for tongue; he'd have died from embarrassment. But you two are talking without saying anything already, you did it all through dinner, and look how you both just left the table. It may be months, but you already have hive mind. You're just like Nate n' Sera and Ma n' Pop.\"\n\nNicolao smiled, it was obvious that the only thing he could see when he looked at David was forever. \n\n\"Narisco you know ma and pop will support you. What do you need?\"\n\nHis brother's eyes were almost black they were so dark, \"I need my brother to tell me it's going to be okay. That he doesn't think I'm a coward for not being as honest and brave as he's been my entire life.\"\n\nNicolao saw his brother's fear, even in a clan like the Evangelista's the possibility of rejection for one fault or another felt real. Nic reached over and pulled his little brother in a tight, awkward embrace. When he let him go tears glistened in his brother's eyes.\n\n\"I haven't told you enough how proud I am of you, for being such a good father to Joshua. You are a good man, one of the best people I know. You aren't a coward; if anything had been done differently you wouldn't be the man you are. And that man is damned impressive. You will find the right person for you because you believe they're out there, and that belief is half the battle. I love you Narisco, and I promise you everything will be alright.\"\n\nNic watched as his brother wiped his eyes. He ran away from his family a great deal. They were always there to support him, he questioned if he was as supportive of them as he could be. Narisco was in need of someone to not just accept him, but understand what his challenges would be. Why hadn't he kept in closer touch with his siblings? Aside from the fact Risco admitted to scoping out David as talent.\n\n\"You want to talk to the rest of the family?\" Nicolao queried, he would stand beside his brother to shield him if necessary. Nerina was consumed by appearances, and Nieves had no clue when jokes became cruel.\n\n\"No, this visit is about getting to know David. I needed to tell you first... as always. Come on, let's get these bags out. We've left David in there, and Vess was looking to start trouble.\" Narisco said as he opened the van door.\n\nDavey found himself alone with Joshua. He could hear the Evangelistas in the dining room and kitchen, either eating dessert or cleaning. He took in his surroundings. The family room was massive, with three sofa and two recliners. Pictures lined the walls and the overall feel was of comfort. The house, much like the family, simply welcomed you. \n\nThe three year old watched as Davey absently changed channels. When a cartoon appeared on the screen he turned his dark eyes on the holder of the remote. He noticed the look and rested the clicker on the arm of the couch. \n\n\"My dad tried to make me drink from a sippy cup.\" Joshua's r's were not well formed.\n\nDavey nodded his head solemnly, it seemed his choice in entertainment merited him conversation. \"I saw you at dinner, you did good not using the sippy cup. You didn't have an accident or anything.\"\n\n\"Yahun, I didn't spill, nobody else has a sippy cup. I have accidents sometime, but I sleep in big boy pull-ups.\" \n\nDavid fought back his smile, the little boy was serious. \"I don't have those kinds of accidents, but I do have bad dreams.\"\n\n\"Me too, poppy got me a night light.\"\n\n\"Does that work? Maybe I should get one.\"\n\n\"I can tell Uncle Nico for you.\"\n\n\"Thanks, Joshua.\" \n\nThey both turned their attention to the vivid colors on the screen. After a few minutes Joshua yawned, stretched and climbed unbidden into Davey's lap.\n\nA few minutes later Nic's parents and Nate came into the room. Davey felt self-conscious for having the child in his lap. But they appeared delighted to see him with Joshua.\n\n\"You are a natural David. Joshua hardly goes to anyone but his poppy.\" Hilaria explained as she sat down.\n\nA natural, Davey thought. The only children he had been around as an adult were Averie and Abel. Breezy said they smelled fear like any animal, the key to kids was not to show fear, and allow them to come to you. She claimed it worked for pets and the young. As usual her quirky logic worked. He would have to thank her later.\n\nNarisco and Nicolao finally re-entered the house. Nic brought in their bags and his brother carefully handled the gift bags. \n\nNarisco paused when he saw his son settled peacefully on David's lap. Damn if he wasn't Nico's he'd go for it.\n\n\"Special.\" He muttered to Nic as he put the bags down.\n\nDavey heard the one word utterance and raised questioning eyes to Nic. He smiled and shook his head, indicating it was nothing. Davey could feel he missed something. And there was an emotion in Nic's face, he was having trouble placing. That coupled with the long stare from Narisco made him feel unsettled.\n\nNieves, Nerina and Sera joined them in the family room. Nicolao had David hand Narisco his son back and they gave presents to the females in the family. Nieves punched Nicolao's arm for the gift of the 'prettiest ashtray she'd ever seen'. Nerina squealed with delight over her elephant encrusted music box. ",
        "Nic placed the gift in Sera's slender hands. Her green eyes grew moist as she realized what it was. She threw her slender arms around Nicolao then Davey, \"So thoughtful, thank you,\" she murmured taking her seat next to Nate Jr.\n\nDavey saw for once Nic looked unsure as he explained the delicate item to Nate, \"I think we beat everyone welcoming our niece or nephew. When he or she comes, however they get here the first present will be from me and Dee.\"\n\nThe eight by ten picture frame was made of layers of colored glass strands, where the picture would one day go the words, Baby's First Picture was written. Nate's faith they would ever conceive had begun to waver. The doctor's could find nothing wrong with he or Sera, but months had turned into years of waiting. They had begun the paperwork to adopt, but it was an exhausting, emotional task. The subtle faith the frame represented was unmistakable.\n\nNate was only an inch shorter than Nicolao. He had a full beard and his long curly hair was only semi tamed in a braid. He missed his brother, but would never hamper him with the knowledge. The frame only reminded him of why Nicolao was so important to them.\n\nNate rose and hugged the air out of his brother. They nearly the same height, but he had fifty pounds on him. He then embraced his new little brother, who he knew by the shy smile was in on the present. Nate didn't squeeze him as hard, but he did pick him up, leaving is feet dangling. Then he returned to his seat next to his wife and took her hand.\n\nThey gave Lil' Nico a video game and Joshua a ceiling projection night light. After his father explained what it did, he hugged each of them.\n\n\"Uncle Nico, you can come get my old night light to keep the bad dreams away.\" He offered before he went back to Narisco's waiting arms.\n\nThey had both gone to their knees to receive the tyke's affection. Their eyes connected and they both wanted more than anything to be alone. They were both acutely aware that they were now sharing their time. \n\nThe final gifts were wine glasses Hilaria declared would be used at tomorrow's dinner. Nic kissed his mother's cheek and pressed a vial filled with murky liquid into her small hand. David had no idea what was in the vial, and by the expression on everyone's faces neither did they. Hilaria began to cry silently, and kissed David again. \n\nNicolao was quizzed about the expense of his gift, which lead to a more tales of Nic's shopping sprees. Eventually, Narisco began to gather his things, saying he had to get Josh to bed. Vess left with little Nico, saying she may use her new ashtray. Nate Jr. exited next with Sera, but not before extracting a promise from the duo they would come by his shop. Each departure held another round of hugs. Davey knew why Nicolao was so physically demonstrative. \n\nDavid tried to participate in the conversation Nic was having with ma, pop, and Nerina but he was too tired. He excused himself to go get a drink of water. When he closed the refrigerator he was startled to see Nerina. \n\n\"Making yourself at home I see.\" She quipped with a smile that again did not touch her eyes. \n\n\"Just thirsty,\" Davey looked down, struggling to find something to say to the sinister amazon. \"Everything was delicious.\"\n\n\"I only use the best ingredients, top quality, but you wouldn't know...\"\n\nNerina was interrupted as Nicolao entered the kitchen. \n\n\"You two getting to know each other,\" Nic moved behind David and pulled his back against his chest.\n\n\"Yes, I think I understand his appeal Nico.\" \n\n\"His appeal? I love David, Rina ,that goes far beyond appeal.\"\n\nA smile appeared on her face, which to Davey made her all the more sinister, \"That's what I meant Muscle Head.\"\n\n\"Muscle Head? That's pretty brave from a girl who was afraid of the circus.\" Nicolao replied smiling.\n\nNerina ran her hand through her mass of curly hair, a genuine smile lit up her face. \"And my little brother has been giving me my own music box circus one gift at a time.\"\n\n\"Always our warrior guardian Nico,\" Nerina uttered, her face softening. \"I'd better go. I'll see you at dinner tomorrow.\" She called as she abruptly exited the kitchen.\n\nDavey did his best to hide his yawn, but Nicolao saw and piloted him into the family room. They bid his parents goodnight and he followed Nic upstairs to the bedroom. \n\nNic put their bags on the large bed. He explained that when it was evident all of the children would have Natanaele's height they were all given queen sized beds. As he spoke he got out the shaving kit with their toiletries, behind one of the doors was a small bathroom and he turned the water on.\n\n\"You go first, Dee, as much as I love our showers there just isn't enough room in there for the two of us.\"\n\nDavey settled himself in Nic's arms after their showers.\n\n\"Are you alright? I told you my family is exhausting.\" He studied Davey's face for any distress.\n\n\"No, they're amazing; they're everything you said they'd be.\" He paused. \"Thank you for bringing me here.\"\n\n\"You are most welcome,\" he dropped a kiss on top of his head. \"Did anything make you uncomfortable?\"\n\nDavey lifted his head to frown at Nic, tempted to tell him he was ill at ease with Nerina, but decided against it. \"Well a little with all of the hugging and kissing is going to take getting used to, but in a good way. Nerina I don't think likes me. And the trip to Argentina talk, but it's okay. I know it's for family.\"\n\n\"You are family. I didn't mention the trip because I wanted to see how you got along with everyone first. If you don't go, I don't go. Nerina doesn't like anyone at first; I told you she is slow to accept change. Risco didn't bother you?\"\n\nDavey shrugged, \"You talking to your brother isn't going to bother me.\"\n\n\"Good to know, but what I meant was you missed that predatory look? He was checking you out; I thought I saw you squirm.\" \n\nNicolao pulled him closer as he laughed at his expression, \"It seems you're my little brother's type. That's one of the revelations he had for me in the front yard. Narisco's gay, he got it in his head I'd think less of him for not coming out sooner. He tied himself in knots over my opinion.\"\n\n\"You mean so much to them, we tease your shopping, but every gift was something special you found just for them.\" Davey was tired, but he did have a question, \"What was that you gave your mom, perfume?\"\n\nNic tensed, he turned on his side so he could face his David. \"Ma's a little peculiar. That was a vial of her tears. After August's letter they all stayed with me. I was never alone, but ma I don't think she ever left. When I was better she gave me that vial of her tears. She said for every sorrow I carried, to remember it was her sorrow too. That would always be true until I found the one who I could share my joys and sorrows with. I have you now, love.\" \n\nDavid leaned in and they kissed, without heat, just infinite tenderness. Nicolao's words and actions declared his feelings. It was up to David to believe it. \n\nHe turned the light off next to the bed and replayed the day in his head, Nic a warm wall at his back. Desire crept up his spine when he recalled Nic's face upon his return with Narisco. It was possessive. He was Nicolao's if he allowed himself to be. He wanted to turn around, wrap his body around those hard warm muscles, and ignite the embers of passion until Nic was in him, marking his innermost self as his. But Nic was asleep, he had done all of the driving and needed his rest. Plus it never worked out. He'd hate to have a repeat of the previous night. Finally he dosed, drifting into a light dreamless sleep.\n\n*****\n\nDave woke to the smells and the sounds coming up from the kitchen. During the night Nic had flipped onto his back, and he was splayed across his chest. It was time to wake Nicolao up. Carefully he pulled the sheet back to expose Nic's naked form. Davey wiggled down, buried his face in his crotch taking the soft orbs in his mouth and applying suction. Nic moaned to wakefulness and his dick lurched against his face. Davey ran his tongue on the sensitive underside of his hot filled shaft.\n\n\"Good morning,\" he quipped as he met the eyes that were staring down at him. Nic answered by placing his hand gently on the back of his head.\n\nDavey sealed his lips around the crown and slowly began to bob up and down. The satiny steel in mouth never failed to drive him wild, and make him want to take more. He twisted his hand as it moved up and down Nic's rod in rhythm with his mouth. Nicolao was bucking helplessly beneath him, his breath, hard gasps, as he fought to hold back the usual torrent of words and intonations that accompanied their morning ritual. With a muffled cry Nic's body arched as he coated David's talented tongue. Davey rested his forehead against his hip as he pumped his swollen member, coating his fingers in three firm strokes. Nicolao pulled him up by his shoulders, and guided his hand to his mouth licking the sticky fingers clean.\n\n\"Good morning,\" Nic said pulling Davey down onto his chest. \"It smells like ma's making a breakfast.\"\n\n\"Should we get dressed?\" \n\n\"No, let's stay put for a while. I'm going to have to share you the rest of the day, no need to rush.\"\n\nThey waited until a knock came before they got out of bed. They ate breakfast with Hilaria and Natanaele. Nicolao insisted they had to leave the next morning saying he had left some loose ends at work. He wasn't certain he still had a job, but he wanted some time alone with David before Monday. \n\nPop followed them to the car rental company, and the three drove to his shop. His shop dealt with traditional automotive repair and restoration. It was how he had supported his family for the better part of twenty years. Nate Jr. opened the second Natanaele and Sons location, which specialized in higher end cars and conversions. Until Nate explained it, he hadn't given the \"green\" movement any thought. Now the success of the second shop made life extremely comfortable for the Evangelista's. \n\nNieves worked the front counter. She greeted all three men with a kiss. They made their way into the garage where Nic was welcomed by the mechanics. David's introduction as his boyfriend didn't cause an eyebrow to be raised. \n\nNatanaele led them through a back door and into his \"shed\". The shed was a temperature controlled showroom for the cars the shop owned. Chrome gleamed as the lights were turned on.\n\n\"Take your time and pick what you want, if you think you want electric you can get Nate to convert it later,\" he waved his arm casually. He had offered Nic a vehicle so many times, only to be turned down. \n\nThe four of them walked slowly down the middle of the showroom. Cars lined either side of it. Nic and Natanaele began a detailed discussion with the words horsepower and torque in it. Davey couldn't follow. Nieves grabbed his hand, and pulled him away from them. \n\n\"Hey, you'd look great in this!\" She led him to a green car, and motioned for him to get in on the driver's side.\n\nWhen he did, she gave him a smile that would have any man falling in love with her, if they were so inclined. David thought maybe a piece of him was. \n\n\"You look great! Tell Nico you want this one.\" She said as she flopped in the seat. \n\n\"Nieves, l don't think Nic will be comfortable in this car. He wouldn't fit.\" Davey couldn't imagine Nicolao having to squeeze behind the steering wheel.\n\n\"Oh, you're too cute, worrying about Muscle Head fitting in. If you get this one, then you get to drive it more.\"\n\n\"I... I could never,\" he stammered.\n\nNieves laughter halted his speech. She regarded him, her eyes warm, \"No, you couldn't. I thought it would be funny to watch Nico driving this around. He'd take it, if you said so, but you won't.\" She sobered, \"I'm really happy my brother has you, David. You're good for Nico; you know he hasn't owned a car since he crashed the Impala.\"\n\n\"I didn't know that. I never thought to ask why Nic didn't have a car.\" He confessed.\n\n\"He's forgiven himself. I think it has a lot to do with you.\" Nieves patted his thigh. Suddenly she reached into her bra and held out a thin white tube, \"Later at the house do you want to toke up to celebrate?\" \n\nDavey was very familiar with drugs, and Vess was offering him a share of a joint. Before he could decline the door was snatched open, causing both of them to jump. \n\n\"Vess get out,\" Nicolao ordered, his voice tenderly malignant.\n\nNieves swiftly put the doobie back in her bra, as she rose she kissed her angry brothers cheek and walked away.\n\nNic sat down, leaving his legs outside.\n\n\"Nieves was telling me she thinks I'm good for you.\" David offered.\n\n\"Nieves needs to grow up. I wish Vess would find her footing soon.\" Nic shook his head, and then looked around the interior of the Mini Cooper. \"You want this one?\"\n\nDavid laughed, Nic really would take the car, just as Nieves has said, \"No babe, I don't want this one.\"\n\nNicolao's smile made his heart skip a beat; Nieves had nothing on her brother. \n\n\"Come on; pop says he has one out back he wants us to look at,\" when David joined him at the back of the car Nic took his hand and deliberately added, \"babe.\"\n\nDavid had never used any form of the nomenclatures of love Nicolao freely spoke. Saying Nic was as close as he had come, and now it had slipped from his lips he was ashamed it had taken him so long. Nicolao was the best thing that had ever happened to him, and he could hardly express how he felt.\n\nThey walked to the back of the building, led by pop and Nieves, to a black Chevrolet Impala. \n\nNatanaele pressed the keys in Nic's free hand. \n\n\"Before you say anything Nico, I don't want to hear about the expense. I gave you that car like I'm giving you this one. It's all about second chances son. I respect that you are making a life all on your own. But your ma and I want to do something for you. Just say thanks pop, and you and David can go see Nate.\"\n\nDavid thought his hand would be crushed, but he didn't pull away. Instead he gripped Nic's hand tighter. \n\n\"Thanks pop.\" Nicolao choked out. \n\nNatanaele clapped him on the back, \"You're welcome Nico.\"\n\nThey got in the car and headed to Nate's shop. Nic wanted to talk to David, but Nieves had insisted on coming. He suspected she would remain with them for the remainder of the day. He smiled as he drove the restored classic. His destruction of the Impala ten years ago had utterly changed his world. The stress and worry he had caused his family still shamed him. If he deserved punishment it was for that. Nicolao glanced over at David. He supposed if ever there was time to let it all go, it was now.\n\nNate's shop wasn't far. Nate proudly gave David a tour. He explained the conversion process and showed off some of the cars they were working on. While the two of them spoke Nic pulled his sister aside.\n\n\"When are you going to grow up?\"\n\nShe shrugged, \"It's only weed.\"\n\n\"It's illegal, switch to cigarettes, even if you destroy your lung. They are legal, that's what the ashtray is for.\"\n\nNic pressed a kiss to his sister's forehead, \"I know thing didn't work out with you and John, but you can't be a brat kid and a mother. No one else may call you on it, but Vess you know better that.\"\n\nNieves had been floundering for two years in the wake of John leaving. John was eighteen when they had Little Nicolao and her sixteen. When a snarky comment brought her to his attention the intense school artist had gone from ignoring her completely to making her his entire world. John called her his muse and their son the greatest masterpiece of his life. One day he looked at her and said he felt nothing for her or Little Nicolao, and he left. \n\nNicolao hurt for his sister. Avoiding her sense of loss made her seek distractions. Dangerous and illegal distractions much like him. But unlike him, Nieves has a son, and it was time she remembered that.\n\nNieves nodded, but couldn't meet Nico's brown eyes. If she saw disappointment in them she'd crumble. \n\nNicolao moved to join David and Nate. When she felt her composure would hold she joined them as well. As always Nico was right, she did know better.\n\nNicolao chatted with everyone in the shop before the four of them went to lunch. David watched as they ate their fill, he knew if he ingested a heavy lunch he would not be able to eat dinner. After the meal Nate went back to work and they dropped a reserved Nieves off. \n\n\"Are you alright with the car?\" Nic asked.\n\n\"Of course, I've been riding a bus my entire life. It could be a scooter and I'd be happy.\"\n\nNic shook his head, \"I'm too big for a scooter, I can see if they have a motorcycle.\"\n\n\"No, that's alright Nic, this is more than fine.\" \n\nThey were both grinning.\n\n\"You called me babe.\" Nic said.\n\nDavid blushed, \"You are a babe. The best looking thing in any room and you love me.\"\n\n\"I do, Mr. Collins. Indeed I do.\"\n\nThe remainder of the day was spent with Hilaria. She sent them on various errands, designed for Nic to have as many people see him and David as possible. She began to talk about the trip to Santa Fe. She explained to David her mother was Argentine Toba, and though her father was a Spaniard she spent most of her early life with the tribe. When her mother died, Hilaria and her father moved to Spain. She hadn't been back since she was eight. Nicolao promised he and David would discuss going once they returned home, which seemed to satisfy her.\n\nEvening arrived and the four women were busy preparing dinner. Nicolao, the children and his brothers were watching basketball. David quietly went into the backyard. He was startled when he saw Natanaele on his knees in the garden.\n\n\"Oh sorry, Mr. ...\" he wasn't comfortable calling him pop, but Mr. Evangelista was too formal.\n\n\"Come on over David. You can help me weed my garden. There are gloves on the bench.\" \n\nHe agreed eager to be of help. He slipped the gloves on. \"This is your garden?\" He asked looking around before getting on his knees.\n\n\"Yeah,\" Sr. smiled proudly, \"I planted it for Hil.\" He began to pull weeds and move earth with his hands. David mimicked his movements.\n\n\"You see I'm not that good with words, not like Hil. She takes one look at people and has an entire story to tell you from a few minutes of contact. She goes on about the spirit of the person, and the elements she sees in their eyes. When I met her she gave me a world brought to life with her words.\" \n\n\"Then that beautiful woman gave me our kids, more beauty. So I decided to give her a garden with plants like the ones in Argentina, but that didn't work out. There was too much about climate and soil I didn't get. She worked nights sometimes at the hospital, she was an aid, and so I would come out here and work. Nico decided to help me. Even then he was always quick to catch on to languages. He brought up the language of flowers, and that I should plant what I felt in the garden. He checked a book out from the library, and that's how all of this got started.\"\n\nNatanaele showed Davey the various flowers and gave him the meanings. Each of his children and grandchildren had assigned flowers, including Sera and John.\n\n\"John got a place because of Josh, but Hil knew it wouldn't last,\" he smiled at David. \"As soon as I figure out what is the right one for you I'll plant yours.\"\n\nDavid was at a loss for words, he latched onto something he had forgotten, \"Um, what does the Eglantine Rose say?\"\n\nSr. furrowed his brow as he thought, \"I think it's the healing of wounds. I can't be sure, I can look it up. We have the internet.\"\n\n\"No, that sounds right, thank you.\"\n\n\"My pleasure son,\" Natanaele responded. \n\nThe word washed over David. They worked steadily for an hour before the elder announced his old joints were too tired to continue. David relished the beauty of the garden and asked not to go in.\n",
        "\"Well dinner should be ready soon. How about come in and wash up in a half an hour, that way Nico won't be mad at his old man for working you too hard?\"\n\n\"Okay and I really like working in the garden.\"\n\n\"I know, you're a natural son,\" he said as he brushed off his knees.\n\nDavid sat alone and contemplated the last two days. He had been labeled good at two things while here. There was little mystery as to why Nicolao was the man he was. He heard the door open, Mr. Evangelista had gone in only ten minutes before, so he thought he had more time to be alone with his thoughts.\n\n\"You even got to play in the dirt with pop.\"\n\nDavey turned to face the speaker, it was Nerina.\n\n\"Look you; I only have a few minutes to say my peace.\" She walked closer to where David was kneeling. \n\nThe hostility she radiated was unmistakable. His only thought was, here it is.\n\n\"You may have everyone else fooled but not me. This family is finally coming into some financial success and vermin like you show up. Ma's already trying to buy you a ticket and that Nieves is one conversation away from getting pop to give you some car. \" \n\nDavid was confused, \"I don't know what you're talking about.\"\n\n\"Oh sure you don't. Don't try it with me, just because the rest are gullible doesn't mean we all are. I got a call about you from Jeremy.\" Nerina had stolen Jeremy's number from Nicolao's phone when he announced he was moving away to be with him. The conversation hadn't gone well, but apparently he had kept her number.\n\n\"He says that Nico pulled you out of the gutter and is carrying you,\" she paused for a denial, and snorted when none came. \"I know he looks fine, but it took years to get him back. What makes you think he needs to nurse you?\"\n\n\"Oh, the perfect Evangelistas in there won't talk about the fact that they worked so much we had to take care of ourselves growing up. But Nico took up taking care of everyone. Even when he was cracking from the pressure of it, he was still our strength. When that August died, it took all of us to hold Nico together. I don't know if any of us are strong enough to do that again. The last thing he needs is someone to look after. He needs Jeremy, someone who can look after him.\" Nerina looked at the door, her voice dropped as she shot her last venom, \"He has some information for Nico, from a private detective. If you don't want Nicolao to find out, I suggest you find a way to disappear.\"\n\nDavey watched her back as she went into the house. The tight coil in his belly felt as if it had unwound. The anticipation was always worse than the real thing. Davey sighed, removed his gloves, dusted his legs, and went inside to wash up before dinner.\n\nDinner was consumed. Hilaria used her new stemware. They bid Nicolao's siblings and nephews good-bye with a promise to return soon. Joshua gave Uncle David his old night light. Davey and Nicolao helped with the dishes. They went to the room, but when Nic got out of the shower David looked to be asleep. They got up and packed their new car with the suitcases. Natanaele went over the insurance information with Nicolao before they could leave. Davey readily hugged Nic's parent's calling them ma and pop while thanking them for their hospitality. They drove home. They laughed as they recounted their trip. Davey committed every word spoken to memory. As they drove into Hope's Cove the joy of being back at he and David's home filled Nic. They brought the bags in. Davey went to the bedroom and emerged with his back pack.\n\nDreaded innate knowing made Nicolao speech slow and deliberate, \"What are you doing with that David?\"\n\n\"I'm leaving Nicolao, I don't belong here, I'm going back to my uncle's.\"\n\n... next chapter soon \n\nSpanish and Flower translations (sorry should have added earlier)\n\nmi joya que averg\u00fcenza el sol: my jewel that shames the sun\n\nmi lirio de los valles: Lily-of-the-Valley\n\nLily-of-the-Valley: You've made my life complete\n\nMarigolds: Grief, despair\n\nThistles: Nobility\n\nEglantine Rose: A wound to heal"
    ],
    "authorname": "seeker71",
    "tags": [
        "gay romance",
        "gay novella",
        "gay drama",
        "oral sex",
        "frottage",
        "gay love",
        "latino male",
        "younger male",
        "rival",
        "m/m"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/deciphering-the-bloom-ch-03"
}