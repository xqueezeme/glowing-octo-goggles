{
    "title": "Photographing at the Pond Ch. 02",
    "pages": [
        "All of my writing is fiction and the stories and characters are all products of my imagination. They were created for my fun and, hopefully, your enjoyment. Some of the events in the stories are not particularly condoned nor encouraged by the author but are there to create and enhance the story of the imaginary characters and their lives. Comments are always encouraged and carefully reviewed. Enjoy!\n\nReading chapter one of this story would certainly be a huge help in understanding this chapter.\n\nWe went to the back room, Linda a little nervous at seeing Peggy's pictures with Peggy there. I found the memory card with the Mr. Martin's Mrs. pictures on it and brought up the first one. We clicked through them pretty quickly, Peggy commenting on a couple and finally she decided to just let me pick them and she'd see online what I had chosen. Then she turned to Linda.\n\n\"I'm just guessing here but unless I'm way out of bounds, I think there were more pictures taken here today and I'd love to see them. Can you do that?\"\n\nLinda looked at Peggy and then at me. They were so different but that difference made each of them unique and Linda, of course to me, something very special. She took a very deep breath and, I think she realized that her seeing the pictures of Peggy had been the catalyst for me taking the pictures of her and, it almost would be unfair not to let Peggy see her pictures.\n\n\"Sure,\" she finally said and I switched the memory cards. The pictures came up and we clicked through them, the big flat-screen monitor making them all look very good. Finally we came to the one of Linda, coming up out of the water at the pond, mimicking the one that Peggy had done there also.\n\n\"Whoa,\" Peggy said, \"you look delicious in that one.\" Linda looked at her quickly, but Peggy just smiled back at her.\n\nLinda, a little braver now after going through all the pictures said, \"Thanks to you.\"\n\n\"And thanks to our photographer friend here.\"\n\n\"Yes,\" Linda quickly replied and then, as if staking her claim, she leaned over and gave me a very nice kiss.\" Another big smile from Peggy. I removed the memory card and put it in my file. I had a number on each card and a record of what was on each card in a notebook I kept in my desk.\n\n\"I still think I should pay you more,\" Peggy said, serious again.\n\n\"No way, it was a great training session for me.\"\n\n\"If you insist,\" she added, \"but, I'm trying to help you out a little. I have two friends I'm sure will be calling you about appointments for boudoir photographs. Don't count on them being like mine though,\" she laughed. \"Plus, I'm working on my sister as well. She's 42 now I think, but you would never guess it from looking at her. If it works out you'll enjoy photographing her. She won more than one beauty contest when she was younger. She is,\" Peggy added conspiratorially, \"a lot like me so I'm not sure what to expect. Obviously her husband has lots of bathing suit pictures of her so, he could want more. Does that tantalize you just a little?\"\n\nI got a punch on the shoulder from Linda. \"Wow, three more possibilities. This could get interesting.\"\n\n\"Oh, Peggy added. \"I'll let you know how Steve likes the pictures. His birthday is only three days off so it should be interesting. She got up to leave, then turned to Linda and gave her a hug. \"Take good care of our photographer.\" I got another kiss on the cheek and she left.\n\n\"So, this sister is better looking that Peggy is,\" she said, smiling at me.\n\n\"But, she's much older.\"\n\n\"We'll have to see.\"\n\nTwo days later I got a call from Wanda Prescott who said she was a friend of Peggy Hollister and was interested in some boudoir pictures similar to those that Peggy had showed her.\n\nAnother two days and I got two calls, one from Peggy saying that Steve had been ecstatic about the pictures and just sat and looked at them over and over. The second call was from Connie Warfield, the other friend of Peggy's who also wanted some boudoir style pictures for a birthday coming up.\n\nAnd one day later came the second call from Peggy who said that Steve wondered if she might be able to get him a few \"even more intimate\" pictures. She said he didn't need prints and to put some of the more intimate pictures we had taken on a memory stick and she'd stop by and pick them up. Then .there was a slight pause. The voice on the phone then said, \"I might as well tell you that he's fantasizing about me with another man and, when I say with, he means more than just with.\" I heard her sigh. \"I have to admit, with him giving his approval I'm kind of looking forward to it myself. So, if you can set something up, just let me know.\" She sounded both excited and nervous. I told her I'd take care of it and would give her a call to set up a time and place. She quickly said the back room of the studio would be fine. A couple of good byes and she hung up.\n\nI shared that with Linda, whose unbelieving eyes got very wide and then she smiled. \"I've never seen anything like that so am I going to be there too, or will it be totally private?\"\n\n\"Peggy knows you and I may need help on this one. If she's really going to go all the way I think some video might be appropriate too. Can you handle video?\"\n\n\"Make up and video, that's me,\" she said enthusiastically.\n\nWe set up the shoot with Wanda and I now had some pricing set up which she readily agreed to. When she showed up for the shoot, with a shopping bag full of additional outfits I was a little surprised as was Linda. Wanda was about Peggy's age, maybe just in her early 30's with a very pretty face. She was about 5'-5\" tall and probably weighed 180 pounds but, at that weight, she didn't look fat at all, just a little larger than average. It was obvious she worked out and, I could easily see that the feature we'd dwell on were her breasts which were fairly enormous. Linda questioned her about what type of look she wanted so that she could get the makeup taken care of and a sweet and soft look was decided on and Linda went to work. When she was finished, I was amazed. The woman who had walked in the door with a pretty face now told Linda that she was a magician as she now looked totally gorgeous.\n\nWanda went into the bathroom with her bag of outfits and reemerged in a bustier that left more breast exposed that most women have, total, without exposing any of the critical parts. She spoke to Linda quietly for a moment, then went to the big mirror and began pulling up on the top of one breast until a dark circle began to appear above the top of the material. As she kept pulling, more and more dark brown appeared until there was nearly an inch of areola showing without any nipple appearing. She then processed the other breast in the same manner and was ready for the pictures. Linda helped me pose her, first on her stomach on the bed with those breasts showing with none of the bustier showing at all. Then, she turned to her back with those huge mounds standing high on her chest. Most poses, one with her silhouetted against the bright light of the window. Several more in the bustier and then she turned to me.\n\n\"One more outfit, okay?\" she questioned. I nodded and she returned to the rest room and reappeared in a sheer white nightgown, about as diaphanous as I'd ever seen. Quite a few pictures in that, with those huge areola and accompanying nipples highlighted through the thin material of the gown. More pictures and we decided there were enough taken and Wanda felt she didn't need more outfits. \"I just want to rile the old boy up a little,\" she said, standing in front of me and smiling and it was very difficult to look her in the eye with those surprisingly well formed and gigantic breasts with the huge brown headlights just a few feet away. \"He can be a voyeur, looking at these, only it will be me and that will charge him up good.\n\nI took the card to the flat screen and let her flip through all the shots. When we were through she shook her head.\n\n\"You pick the ones for the album. You're a male and you know which ones suit males the best.\"\n\nI agreed and she dressed and was quickly gone.\n\n\"I've seen things like that but always covered up. Those were nearly beyond imagination. If I had her nipples they'd cover my whole breast.\" Linda was laughing now and had obviously enjoyed this shoot.\n\n\"Speaking of covered breasts,\" I said, starting toward her.\n\n\"Not now,\" she squealed. \"You have another appointment.\n\nI watched her back away from me, giggling, and grabbed my cell phone. I needed to call my brother.\n\n\"Hey, Larry. What's going on? Oh, and thanks again for the other day. That was fantastic.\"\n\n\"You're welcome and that's kind of what I called about.\n\n\"Go on,\" he replied expectantly.\n\n\"Well, you may not believe this but Peggy's husband liked the pictures so well he wants to get some more and, here's the weird part, he wants to see her with another man.\"\n\n\"Go on,\" he repeated.\n\n\"I'm not quite sure what that means yet. You game for it?\"\n\n\"Are you kidding? If it's Peggy Lambert I'm game for anything.\"\n\n\"Can you get off and be available when we need you?\"\n\n\"Shit yes I can. Just let me know and I'll be there, wherever and whenever.\"\n\n\"I'll let you know,\" I said and we hung up. So, the man that Peggy needed for her pictures was ready and willing and eager. Both Linda and I were totally curious as to what kind of shoot that would be.\n\nWe got a call from Peggy's other friend, Connie Warfield, and set up the appointment for, of course, the day after tomorrow. I was still very busy with other photography projects, weddings, family, senior pictures and the like, with the new boudoir possibilities adding to the busy-ness. Plus, Linda was now suggesting that, since the boudoir business was certainly bound to grow, I should turn that back room into a proper feminine bedroom, add a dressing room for the ladies to change in and that I should then move in with her. The thought of crawling into bed every night with Linda was very, very tempting and something I was going to have to consider very seriously. Tempering that was whether or not this boudoir business would continue to grow and whether or not to advertise in order to push its growth. Lots of decisions.\n\nTwo days later Connie Warfield arrived at the studio right on time. She was very different than Wanda Prescott had been. She had on a pair of denim fashion pants that might as well have been painted on as they couldn't possibly have been any tighter. They did highlight some fairly long legs that had little heart tattoos just above each ankle. The sleeveless sweater-blouse she wore untucked was draped nicely over an obviously large set of breasts that didn't appear to droop at all. She was obviously mid-thirties with a pretty face and very short black hair with a long tail on each side that angled down across her cheeks. The arms, nicely tanned, highlighted the purest complexion I think I'd ever seen. She was like heavily creamed coffee, with not a mark or blemish to be seen anywhere. When she spoke, her voice had that husky sound that most men find very appealing in a woman. And, she had the requisite bag with the things she was thinking of wearing for the shoot.\n\nLinda was there to question her about make-up to a shrug from Connie. In about 15 minutes, the very pretty face was transformed into a delectably desirable and very sexy face that the two of them had agreed on. Now that Linda had kind of assumed the role of my assistant on the boudoir shoots, she had done some research and now had a notebook with pictures and notes she had made regarding her internet research on the subject. I certainly bowed to her wisdom on the subject as she had the facts and the intuition to stage some very nice photos.\n\nNow, with Connie going into the rest room to get ready, and Linda following her, I got the camera and lights ready and didn't have too long to wait. Linda emerged first.\n\n\"Turn your back and I'll tell you when to turn around,\" she cautioned and I dutifully obeyed. I heard footsteps, murmuring talk, rustling of material and finally received the okay to turn around. Connie was in the bed, sitting up with the sheet pulled up to cover her chest. Linda has positioned her so that a good bit of cleavage was showing and, with that flawless complexion and tan that Connie had, she looked very alluring. \"Come over here to the side,\" Linda directed, so that you get the edge of her obviously bare back in the photo and, I noted, a bit of the bulge of one breast as well. I took several shots like that with Linda directing Connie to move this way and that, to look at the camera and away. I thought the photos were looking pretty good. \"Turn your back again,\" I was directed and there was more rustling of material. When I was able to turn around, I had to suck in my breath just a little.\n\nConnie was now stretched out flat on the bed, the sheet pulled up between her legs and then quickly off to the side. She was totally bare except where the sheet slipped off across her right hip and where she held a small, red pillow over her breasts. Linda pulled a step ladder over beside the bed and I climbed up, getting some shots nearly straight above Connie who had a knack already of having the most sultry looks imaginable. Linda arranged the sheet slightly, baring just a little more skin without revealing anything, and I snapped away. She asked Connie a question, told me to look away, then gave the okay again. Now the red pillow was gone and Connie's right arm was hiding her breasts, or at least the most important part of them.\n\nNext Linda had her roll onto her stomach with the sheet again up between her legs and then off to the side. She twisted a little sideways to look up at the camera so the bulge of her right breast was clearly visible, a sultry smile cast at me. And finally, Linda had her sit on the bed, her back to me, who had returned to floor level, with the sheet barely covering her butt crack, her head turned back toward the camera with that delicious right breast clearly in half profile. Of course, with that tanned and perfect complexion I decided that any shot of Connie would be delicious and made a mental note to somehow highlight that on the finished prints.\n\nConnie disappeared into the bathroom again as I was cautioned to turn around once more, and returned in a small, strapless black bra and matching bikini panties. Linda had her lay on her back on the bed with her head hanging over the end, looking back at the camera. The bra was small enough that it barely covered her nipples and there were a couple of inches of space between the little strap that tied the two halves together and her cleavage. Several more shots like that and then on her stomach, licking her lips at the camera this time. Linda had her sit on the edge of the bed, then stand, looking into the mirror and a few more before she decided to try something new.\n\nLinda ran the shower in the bathroom on full hot until the glass door was steamed and foggily translucent. I turned my back knowing that a very nude Connie would be getting into the shower. At the ready signal I took some very steamy (no pun intended) photos and then Linda, bless her heart, told Connie to come on out, neglecting to tell me to turn around. Just as my eyes were focusing on that wonderful sight I heard a screamed, \"TURN AROUND,\" which I did, savoring what I had seen. Little did I know what was coming next as Linda and Connie were talking quietly again. More rustling and Linda said, \"She wants one more and she's ready.\" I turned around to see Connie, sitting on her knees on the bed, the sheet draped across her legs to hide those special female parts but those fantastic breasts looking right at me while Connie looked away, off into the distance with a now very innocent look on her face. I clicked three or four times and dutifully turned my back again.\n\n\"I hope I didn't embarrass you with that last one but I just wanted a very special one for the end of the album. Plus, he'll be very excited knowing that you saw my bare breasts.\"\n\nWow, where had I heard that one before? My mouth began to water in anticipation as I thought of the pictures that Peggy had wanted because of her husband's similar reaction and fantasized about Connie doing the same. It could happen. Linda watched me, a little smirk on her face, as I was sure she knew exactly what I was thinking. Connie handed me a check for the whole amount of my fee and, despite my saying she should wait till she got the album she demurred and said it was fine. She gave Linda a big hug, thanking her for all the help and shook my hand, smiling broadly. Then she bounced out the door and was gone.\n\nI couldn't turn around fast enough, before Linda's arms were around me, squeezing me as she gently bit my ear, then began unfastening my pants. My instinct was to fight it since it was the middle of the day, but my hormones weren't about to let that happen. She got the belt undone quickly, then the button and finally the zipper, pulling the pants down around my ankles, followed quickly by my boxers. Her hand closed quickly around my cock.\n\n\"I can feel your pulse, and,\" she giggled, \"it's growing right in my hand.\"\n\nThat hand was moving as I grew in it, making it grow even faster. She was kissing my neck as her other hand slipped between my legs and held my balls.\n\n\"I can't get you undressed with you holding me like that,\" I gasped out. She let loose of my balls and swung me around by my cock, still pumping it relentlessly. I grabbed her shirt and pulled it up as high as it would go with her still holding on. She threw her arms over her head as the shirt came off and flew through the air. Her bra followed in a similar manner. Now it was my turn to hold onto something as both my hand and my mouth went to work, delightfully squeezing one firm but oh so soft breast and two lips pulling on the other nipple while my tongue flicked away. Now it was my turn as I moved my mouth and stammered out, \"I call feel it growing right in my mouth.\" She jammed my head against her chest, then pushed me back and took off her shorts and panties\n\nThen she was on her knees in front of me, and her mouth went into action. I don't think she had to worry about me growing any more as I was as hard as I could be and, her head moved back and forth and her tongue massaged the soft underside of that erection until I could barely breathe. I looked down to see her smiling at me. She loved being able to make me feel this way and I wasn't complaining at all. And, I wasn't going to be able to last very long either.\n\n\"Let's get in bed,\" I gasped out, holding her face in my hands.\n\n\"Umm umm'\" she said, never letting loose and I knew I wasn't going to argue -- it just felt too good. My body was tingling and the heat began forming where she was sucking and it spread up and down until it felt like I was burning all over. My body tensed, then suddenly erupted as my hips vibrated to her delighted moans as stream after stream of hot liquid shot into her mouth and throat. She didn't stop and I couldn't stand it any longer and collapsed on the floor with her still holding on.\n\n\"Stop, before I die,\" I mumbled as the ecstasy that filled my body totally overwhelmed my brain and my muscles and nothing seemed to work. Finally she stopped and let loose and, although I wanted to drag her to the bed I knew I couldn't do that so I just moved a little until my head was between her willingly parted legs and the curly blond hairs there were rubbing against my face. The smell and the feel kept me overwhelmed as I felt her hands in my hair, guiding me to where my lust dulled mind was willing my face to go without any success. As she pressed my face against her wetness, my tongue came to its senses and began to probe and her murmured, yeses, fueled me anew as it darted in and up and around, searching and then finding the warmth of her love canal, then moving upward to that nub that was soft and hard at the same time. That brought an arching of hips from her so I stayed right there, flicking, rubbing, and finally forcing my lips in there to grasp it and pull it into my mouth where my tongue could work more magic.",
        "\"Stay right there,\" she gasped, \"please,\" and her hips moved in time with my tongue for long minutes until she arched her hips upward hard into my face and, with my brain functioning again, I reached a hand up and put it over her mouth as a now very muffled, \"Ooooooohhhhhh,\" came from deep down as she began to vibrate and jerk and, as she looked at me it was my turn to yell.\n\n\"Be out in just a minute,\" I called loudly as Linda's face changed to a very horrified look and now her own hand went to her mouth as I jumped up and quickly pulled on pants and shirt. I smiled at her and then headed to the front of the studio. Somehow, through my lust dulled senses, I had heard the front door open. As I was talking with a mother and daughter about senior pictures, Linda appeared beside me, smiling and I think hoping her slightly flushed look wasn't apparent to mother and daughter. When the arrangements were all completed and scheduled, mother and daughter left and I turned to Linda.\n\n\"Am I going to get raped every time we have one of these special shoots?\" I asked, smiling at her.\n\n\"I can stop it if you want.\"\n\n\"I didn't say that. I just want to be ready.\"\n\n\"Well, you'll just have to wait and see,\" was her smug reply and I laughed.\n\nWe received a call from Peggy's sister, Lana, and we scheduled a time for her shoot, which she did mention that she would like to have done at the pond if at all possible which I readily agreed to.\n\nWhen she arrived at the studio we could see that Peggy hadn't exaggerated a bit about how she looked. We knew she was 42 but certainly didn't look it. Probably 5'-10\", a figure that looked to be nearly perfect and a huge smile with the same very dark hair her sister had and that tanned and smooth complexion, I was looking forward to taking these pictures. She glanced at Linda who was standing beside me.\n\n\"Peggy said you were a wonder with makeup so I didn't bother.\" Linda looked at me and I at her as we each had the same thought. She was gorgeous as she was, and she had on no makeup. Linda was licking her chops to get at this one.\n\nThey decided that, since the pictures were outdoors in the woods and the pond, that the makeup should be very simple and natural. In an hour, Lana was ready and it was easy to see why she had won so many beauty contests and been a model. Even simple and natural she was just a total beauty and I was looking forward to taking these pictures.\n\n\"You know,\" she said, glancing at me and then quickly away, \"that my husband has seen lots of pictures of me in swim suits and bikini's and some lingerie as well since I made a little money modeling for a while. So . . . \"\n\nShe trailed off and I knew where she was heading and was perfectly willing to head there with her as well. I felt Linda poke me in the ribs.\n\n\"Peggy said you were willing to take any pictures that I'd want and that I'd love the woods and the pond.\" It suddenly struck me that she didn't have a sack or bag of any kind with extra clothes. This was going to be interesting again for sure.\n\n\"That's right,\" I replied, a little smile on my face. Now I noticed Lana's cheeks getting just the smallest touch of red in them.\n\n\"I don't know if she told you or not but we are a little unique. We are two sisters who married two brothers, even though we were those many years apart.\" Now I was getting even more curious and could feel a little movement in my pants as thoughts began racing through my head. \"We're very close and she shared some things with me about, well, about her next group of pictures.\" I wasn't sure how to reply to that so I just stayed quiet and waited. \"Who knows?\" she finally said. Then a little shake of her head and, \"Well, shall we get started?\"\n\nWe headed to my car, climbed in were off to the woods. Lana talked to Linda as we drove along, seeming able to talk to her about today and other possibilities as well. She mentioned that Peggy had showed her some of the Mr. Martin's Mrs. pictures and that she was kind of fascinated by the idea of that. Just listening, I was getting very excited about the possibilities.\n\nBefore long we were at the little parking cove and were heading off along the path to the pond. As we walked we noted that the sun was gone and clouds were moving in, a good breeze stirring the leaves on the trees, a low moan being heard when we'd pass a pine tree. Before long we were at the clearing and Lana explained that she was not looking for hundreds of pictures, just a few that she could present to her husband. I did mention that we had the video camera with us as well and Linda could operate it while I took the stills. She seemed excited by the possibility of video as she hadn't really thought of that before. Then, without hesitation and very quickly, she stripped off her clothes and was standing there very casually, talking to us about the pictures. Even as she was doing that the breeze was blowing her long, dark hair and I knew that could provide us with some very sexy pictures and video as well.\n\nLana began posing and it was quickly obvious that she knew what she was doing and how to do it as I was just snapping pictures as she did her thing, peeking around a tree, straddling a fallen trunk, partially hiding herself behind some bushes. It wasn't too long before the darkened sky began spilling its load of water on us. Now she was using the rain to her advantage, her hair getting wet and, as it rained harder, the water cascading off that fantastic body. Linda was shooting away with the video camera as I was sure Lana would want to give a copy of that to her husband along with the pictures. She raised her arms and spun, the water splashing off her tanned body, she lifted her breasts as she turned her face upward, her mouth open, catching the rain. She was totally enjoying this and her sexuality exploded with each and every pose until finally she stopped, breathing hard from the dancing and spinning she had been doing.\n\n\"What do you think?\" she said, looking from me to Linda and back.\n\nI nearly answered what came to my mind but quickly caught myself. \"I think there'll be some great pictures in there and the video will be fantastic.\"\n\n\"Can you edit it so it's not too long?\"\n\n\"Sure can.\"\n\n\"Good. You and Linda pick out say, 18 pictures that you think are really good and put them in an album and let me know what I owe you.\" She seemed in no hurry to put her clothes back on and, standing there with the rain still streaming off her body, she was beautiful, enticing and very exquisite. She turned to look at the clothes she had taken off which had been totally forgotten and were now very wet. Of course, Linda and I were wet as well so Lana just put on the shorts and blouse she had worn. The white blouse, of course, clung to her nicely full breasts and her nipples were dark and hard so I took a couple of pictures of that now too.\n\nAs we walked along the path Linda was holding my hand as we chatted. Lana smiled at her. \"How do you get along with this guy taking pictures of naked and nearly naked women?\"\n\n\"Well,\" she began.\n\n\"I can answer that,\" I interrupted, a big smile on my face.\n\n\"Don't you dare,\" she said, putting her hand over my mouth.\"\n\n\"Ohhhh,\" Lana giggled. \"Now my imagination can run wild.\"\n\nLinda's face was glowing a bright red.\n\n\"When you leave the studio . . .\" Again a hand over my mouth. Lana was laughing out loud now.\n\nWe climbed into the car and headed back to the studio where we went quickly inside. Lana dried herself and her clothing as best she could and then I walked her to the front door, letting her know that I would probably have the pictures ready in two or three days. She thanked me and left and I headed back in to the back room where I discovered a naked Linda, nipples hard and erect and already breathing hard. Through the next 20 minutes of sheer ecstasy I was thankful I had found this new outlet for my artistic expression.\n\nLinda and I looked over the pictures taken at the pond, picked out the eighteen to be used and I began making the prints. She had quickly learned to use the video editing program I had and she was working on the video in between her regular cosmetics work at the mall. When she was through I watched the edited version and was sure that, were she my wife or just someone I had photographed, it was about as sensual as it could get. The rain had worked out perfectly. We picked up a very nice album and filled it with the selected pictures which also turned out even better than I had expected. Working with a tall and very beautiful as well as very well-built lady like Lana made my job very easy. She stopped by to pick up the album and paid including a nice tip for Linda who was pleasantly surprised but very happy.\n\nIt was several days later that I got the call from Peggy that I had been expecting and we set up the date for the shoot that had me excited but also a little nervous as I wasn't quite sure what to expect. Linda was nervous too as neither of us had every watched a man and woman together like that. Jimmy was notified and was eager as well and was at the studio waiting in the back room when the day finally arrived. Peggy came through the front door and we greeted her only to have our mouths drop open as she was quickly followed by Lana.\n\n\"You look surprised,\" Peggy said to our dumb-faced stares.\n\n\"Didn't expect to see me again did you, or maybe you did,\" Lana added.\n\n\"It's getting so I never know what to expect,\" I finally managed to stammer out. Linda just stood there looking from one to the other.\n\nLana obviously couldn't resist when she added, \"May I make you blush again, Linda?\" Linda just closed her eyes, waiting to hear what was coming next. Hearing no protest, Lana continued. \"When I left the other day I didn't realize I had dropped my bra so I came back in to pick it up.\" She had a huge smile. Linda's face was reddening more with every word. \"I see what Larry means now when he said something about when I left the studio. Now it was my turn to blush a little, but also to smile broadly. \"Sorry,\" she added, then followed in a few seconds with, \"but it really sounded wonderful.\"\n\nSurprising me, Linda said, \"Well, I guess we've seen your secrets so now you know ours.\" I got a big kiss.\n\n\"Lana's husband is my brother-in-law and she said she told you about that and, the boys seem to be close, like Lana and I are, and they shared more information than they should have and shared their fantasies as well, which seemed to mesh. So, here we are.\" She looked at Lana and held out her arms.\n\nThere was nothing else to do but head to the back room. Once inside we found a nervously smiling Larry. Peggy was eyeing him intently.\n\n\"You look familiar,\" she finally said.\n\n\"We went to high school together,\" he responded.\n\n\"That's probably it, but I don't remember you.\"\n\n\"I remember YOU,\" he said, nodding.\n\nPeggy handled that well, smiling and saying, \"I'll take that as a complement.\"\n\nIt was a little awkward now as we weren't quite sure how to handle this and how to start and everyone was just kind of looking around when Linda grabbed the video camera, handed me my camera and said, \"Well, I guess we better get going.\"\n\nPeggy looked at Lana who smiled back at her and then nodded. The both walked over to Jimmy who looked from one to the other, a very expectant look on his face. Peggy began unbuttoning his shirt and Lana worked on his belt and his pants. Quickly the shirt was off and then the pants followed by the boxers. Larry had not been hiding when male genitalia had been passed out and both ladies took one look at him and then at each other and smiled again. Then they stood in front of him and began to strip themselves, first blouses, then shorts, then bras and finally panties. Larry couldn't decide where to look as, I'm sure, the thought of seeing Peggy naked had been kind of a hidden life-long fantasy and here she was but, standing beside her was someone even more beautiful and enticing than Peggy. His eight and a half inches was throbbing as he looked from one to the other. I was clicking away and Linda had the video going as well.\n\nSmiling at Larry, Peggy stepped forward and kissed him, her tongue darting between his awe-struck lips as he took a deep breath. Lana stepped behind him, her breasts pressing into his back as she reached around and held his erection, pumping it ever so gently and nibbling on his ear as she did. His arms were around Peggy now as he hugged her to him, her breasts crushed against his chest. Her hand joined Lana's on his erection and they pumped him together to his accompanying groans. Then, quickly, as if on cue, they pushed him toward the bed until he collapsed backward onto it. He squirmed until he was lying flat in the middle and Peggy slid her leg over his chest and slowly moved until she was directly over his head. Slowly she lowered herself onto the tongue that greeted her, pressing into her dampness, then sliding quickly inside as she spread herself a little. Then it was out and seeking that pleasure nub that responded eagerly to its touch, as now she began to moan in rhythm with each flick.\n\nAs this was happening, Lana had settled between Jimmy's legs, his balls in one hand and his erection in the other. Slowly her lips slid over the head and she realized she had to open her mouth very wide in order for that to happen. She felt it sliding over her tongue, then against the back of her throat as his hips lifted to meet her. As she heard the sensual moans coming from her sister and the grunts and gasps coming from Jimmy she was nearly overwhelmed as she had never heard anything like this before and had only vaguely imagined that it really could happen as the possibility of being involved in a three-way had never crossed her mind before. But here she was, and she suddenly wanted more.\n\nLana had never been shy about showing her body, in bathing suits or a bikini for the contests, and even for the photos that Larry and Linda had taken. But she had always kept that part of her separate from the sex and love making side of her, being much more restrained there, as if to balance the two things. Even with her husband the sex was good, but certainly nothing very daring or extraordinary. But, here, today she was having feelings she'd never had before, a lack of restraint and a sense of letting go and letting what happened, happen, no matter what it might be. It was as if a certain uninhibited side of her had suddenly burst out of the closet and taken possession of her. And, surprising even herself, she was enjoying the feeling and the anticipation of what might happen.\n\nPeggy could hear the hard breathing behind her and knew exactly what Lana was doing, even through the ecstasy that was shaking her body and making her blood seem to boil. She felt Lana's hands on her shoulders and somehow sensed what she wanted and lifted herself off Jimmy's face. She slid to the side of the bed and watched as Lana fairly leaped on top of Jimmy, her mouth seemingly trying to swallow his, her tongue probing with groans and moans she'd never imagined coming from her sister. This went on for long minutes as Jimmy man-handled those full and still very firm breasts. Then quickly Lana was upright and reaching between her legs to guide that huge erection home, grunting as its size stretched her but loving the feeling as she slide down till it was all the way in. She eyed Jimmy greedily as she began to move her hips up and down and side to side, faster and faster, slapping against his thighs to his loud and repeated, \"OH, OH, OH,\" as it was clear he too was where he had never been before. As his exclamations got louder and louder and her pumping faster and faster he suddenly rolled his head backward and his hips began thrusting against her as he shot load after load of hot sperm inside to her equally loud, \"YES, YES, YES,\" as her body vibrated and shuddered to a gigantic orgasm as well and she collapsed on his chest.\n\n\"I hope you left something for me,\" Peggy said, smiling at her sister.\n\nSurprisingly, Jimmy gasped out, \"I've got plenty more for you in just a minute, don't worry.\" Lana raised herself on her elbows, almost looking a little embarrassed as she met Jimmy's eyes. \"Anytime you need more pictures, just give me a call,\" he said, panting hard with each breath. She rolled to the side and off of Jimmy and gestured with her eyes to Peggy\n\n\"Let me see if I can help,\" she was finally able to get out, her breathing still very labored. She leaned over and took Jimmy's slightly limp member in her hand, then took it in her mouth, tasting both herself and him as she went to work. The very thought that she was tasting her own juices as well as another man's sperm had her ready to start over again from where she had left off but she just used her mouth in ways she hadn't really thought of before and, very quickly, his instrument swelled and filled her mouth completely.\n\nPeggy was anxious to help as well as she sensed both what Jimmy wanted now and also what would make good pictures for what her husband really wanted to see. She gestured and Jimmy moved and she lay down in the middle of the bed and held her arms out to him. \"So,' she said breathily, \"you used to watch me in high school. I bet you dreamed about fucking me, probably when you were in bed at night and doing yourself. You've wanted this for a long time haven't you?\" He moved his legs between her now spread legs, weight on his elbows and his face just a few inches from hers as she continued to talk softly to him. \"Here I am now, ready for you. And you'll have pictures to remember this. I'm naked and you're lying on top of me and your big cock is ready to slide inside of me and I can hardly wait for that to happen.\" And that's exactly what Jimmy wanted to happen too but he was teasing himself, wanting this moment to last as long as possible. As he looked at her he could still hardly believe that it was Peggy Lambert that he was about to fuck, but it was and she was reaching down between them so he raised a little and felt her hand on his cock as she guided it between her now parted lips and put the head against that magical opening.\n\nHe pushed his hips forward slightly and felt her warmth surround the head and heard a wonderful moan just a few inches from his face. Her eyes were open, barely, and looking at his as he began to press against her a little harder and could feel her tightness giving way gradually as he slid home. It felt wonderful as he was halfway in, then maybe three quarters and then his legs were solid against her beautiful ass. She still looked at him as he moved slowly out and then slowly back in again and then once more, again to the most sensual moaning he could imagine. She pulled his head down and her tongue probed his mouth as he began moving a little faster. He felt her legs lock around his waist as their tongues dueled and, despite his wanting this to last forever, and her obviously wanting the same, his body just moved faster and faster, the slapping of his legs against her ass only making him lose all control and all thoughts as instinct overwhelmed him and, before he wanted it, he felt his groin tensing and electric shocks going from head to toe and, for the second time today, he shot a load of hot and milky cum into a Lambert sister. As his thoughts returned toward normal he pulled himself out of her and slid down between her legs, parting her with his hands so that red and engorged nub of her clit was right there, begging to be rubbed and sucked which is exactly what he began doing.\n\nNow he was tasting both her juices and his own cum as well, as Lana had done with him and it was Peggy's turn to twist and left her hips and groan even louder than before as his tongue and lips did their work. And, after what today had been, she wasn't going to last very long as he heard her cries getting louder and louder until suddenly her hips fairly exploded and her whole body seemed to shake and twist for long seconds until he could hear her mumbling, \"Stop, please stop.\" As much as he didn't want to, he did.",
        "Jimmy sat on the end of the bed, still with a very clear view of Peggy's pussy as she hadn't bothered to close her legs at all. He looked from there to her face and back again. Now she put her legs together and, with great effort, sat up and looked at Lana who was still sitting on the side of the big bed. They both looked back at Jimmy who, unusually perceptive, heard the unspoken message, realized he was the \"hired hand\" and stood up, dressed, thanked each lady with a big smile, and left.\n\nLana was eying Linda who had put the video camera down and was looking almost hungrily at Larry. He caught the look and glanced quickly at the other two ladies. \"Don't mind us,\" Lana said coyly. \"We're just two very well-used ladies at the moment, sitting here trying to recover.\" Then with a huge smile and a wink she added directly to Linda, \"Just go on with what you were thinking about doing.\"\n\nI saw the look in Linda's eyes and couldn't believe what I was seeing. But, that look certainly stoked my furnace and the heat radiated all over my body. I just knew she was going to do it and, no matter what I really thought, I was just going to let her. As she walked toward me she was unbuttoning her blouse and, not too surprisingly, she had on no bra. She obviously knew what was going to happen after this shoot -- maybe not the audience -- but she was ready. The shorts came off next and she was naked and, oh my lord, she was glistening, already damp with perspiration. My heat multiplied by about a factor of 10 and I could hardly wait for her to go to work on me which was almost instantly. My shirt came off over my head, my pants dropped to the floor. Instead of lowering my boxers, she just slipped my erection out through the little fly, took hold of it and said softly, \"Hi there, friend.\" Then the boxers were stripped off and she pulled me toward the bed by that erection. \"Now lay down,\" she said again softly and I did. She turned to the two ladies, both still on this same bed. \"The photographer needs a reward, doesn't he?\" Two nods. \"Well, there are three naked ladies here and one naked man but Linda is not letting those two touch her man, you understand.\" She pointed her finger at me and I shook my head in agreement. \"Linda is all you need and all you get.\" She climbed up on the bed.\n\nLots of times Linda was not only more than I needed but was more than I could handle. She could be very insatiable at times but totally understanding as well and was happy to supply me with that \"more than I could handle\". Now, from that look in her eye I knew she was going to do her best, even with an audience -- or maybe because of the audience. I was a little conscious of the other two ladies who were only a few feet from me and certainly hadn't gotten any less attractive over the last hour or so. But it was not them that were holding my attention now. It was that amber-eyed, ash blond that was climbing on top of me, those delicious breasts, pointed and velvety soft with the nipples now hard and very erect hovering over my face until I couldn't resist and took one in each hand, squeezing and rolling those nipples between thumb and forefinger and pulling them until there was a gasping squeal from her. But, she wasn't going to wait any longer as she grabbed that throbbing erection and slid down on it until it was buried in that fantastically warm and wet place that I craved to violate so often now.\n\nShe had me in her spell and in her control as her hips began to move, seemingly in all directions at once, up and down and around creating wonderful sensations that coursed through my body until I almost couldn't breathe from the sheer ecstasy of the feelings. \"Just you,\" she was whispering, \"this is just you.\" She was moving faster now and when my eyes were open I could see hers watching me, enjoying totally what she was doing to me and reveling in her ability to do it. She had that amazing ability to make it all about me, even though she was a part of it and totally absorbed in the feelings that were being created in her body too. The slightly sloshing sounds of my penis moving in and out of that very wet pleasure tube of hers were so erotic they just multiplied the intensity of what was happening to me. Now she was raising up slowly, then slamming down hard and was whispering to me again, \"Let it go, make it cum, just fill me up,\" which she knew I couldn't withstand and I felt my body tense as I erupted inside of her to her, \"Yes, yes, yes,\" as she continued to slam against me. I realized finally that she had stopped and I felt her lips against mine, very gentle and tender and heard, for the first time, \"I love you.\"\n\nI kissed her back, arms around her, squeezing gently as it was my turn to whisper, \"I know, and I love you too.\"\n\nNow I was aware of two other people, smiling at us as they stood up and began dressing. Linda just lay there on top of me, not moving.\n\n\"I think just the pictures for the men,\" Peggy finally ventured. \"The video may be a little more than they were expecting.\" An affirming nod from Lana. \"But, I think Lana and I would like to have the video, just as kind of a reminder.\" There were two giggles after that.\n\n\"Now,\" Lana added, \"we'll leave you two alone.\"\n\nI couldn't help but wonder what might be next from this new aspect of the photography business that had started. "
    ],
    "authorname": "PickFiction",
    "tags": [
        "watching",
        "showing"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/photographing-at-the-pond-ch-02"
}