{
    "title": "Exposure Compensation Factor",
    "pages": [
        "All characters in the following work of fiction are over the age of eighteen. \n\nThis is a new stroryline. I hope you enjoy it. \n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt was a Friday night, typically one of the busier nights at your local watering hole. Even though I wasn't a local, it still applied. \n\n\"I'm sorry...say it again?\" I laughed, pretending not to hear her. The bar was loud, but not that loud. It was my one and only trick, but it always worked. She leaned closer, and I tipped my head down, so she could get closer to my ear. While she repeated the name I'd heard just fine despite the din, I took a deep breath, inhaling the strawberry scent of her hair, and took a good look down the top of her burgundy coloured dress, finding a very nice, full, round rack residing in the scoop neckline. \n\n\"I said, my name's Deirdre,\" she reiterated, cupping her hand around my ear. I checked out the dusting of freckles that adorned the upper curves of her breasts, and then replied. \n\n\"Deirdre? That's a very nice name,\" I said loudly. Nice tits, too, I thought. \"Unusual, but nice. You don't meet a lot of 'Deirdre's. It's sexy.\"\n\nOkay. I guess you could say that was also a trick, but I considered it common sense. Most people would rather talk about themselves than any other subject, and I had found that to be especially true of exceptionally attractive women. They always liked to hear that they were gorgeous. Deirdre qualified in spades. \n\nTall, slender, shapely in the most feminine of ways, and stunningly beautiful, I wondered how the hell no one had approached this goddess yet, but I had found her sitting alone at the bar, and merely introducing myself had already paid dividends. Maybe the myth was true : men were afraid of beautiful women. Wanted them? Oh yes. Lusted after them? For sure, but afraid of the potential rejection. \n\nI was looking at her face, trying to figure out who she resembled. Paget Brewster? Sort of. She did have Paget's stature, but the face was not quite right. It took another few seconds before the light bulb went off. The huge, dark soulful eyes...the lustrous, sweeping waves of brunette hair, reaching well beyond her shoulders...the full, delicious looking lips. Yeah that's it. Sometimes, being trained to observe the nuances of shadow and light pays dividends. \n\nSalma. Hayak. Oh good lord. She looked like Salma Hayak, but taller, with what appeared to be bigger tits, and an absolutely incandescent smile. That smile was glowing right now. \n\n\"I think I'm in trouble,\" she blushed, looking down. When her eyes came back up, they met mine again. \"The way you're looking at me is turning me to jelly.\"\n\n\"Sorry,\" I replied. \"I don't mean to stare. Do you mind if I tell you something? I know we've just met and all, but...\" \n\n\"Go ahead,\" she said, and the loud cacophony of background noise abated, as if also wanting to hear my words. \n\n\"I know it sounds like a line, and you probably hear it all the time, but I mean it. I think you... \" The rest of my compliment was lost, as the wall of noise returned, washing away any possibility of civilized conversation. Deirdre cocked her head, trying to hear, but it was a lost cause. \n\nShe held up her hand. Standing, she took two steps away taking her drink with her. I thought my chance was blown, until she turned, tilting her head and gesturing for me to follow her. No problem there. I'd follow that ass to the moon, and stayed close enough to keep any interlopers at bay, while being far enough back to watch. The skirt of her dress swished from side to side, following the sexy wiggle of her hips with each step she took. Her legs were long, strong and smooth, with calves that flexed and rippled as she walked. We weaved through the raucous crowd, finally reaching the dining room entrance, where Deirdre held up two fingers. \n\nI don't know if you've noticed this, but I have found that beautiful women rarely spend much time waiting in line for anything. Sure enough, we walked straight in, despite the crowd waiting around at the entrance. Maybe they were all together, and waiting for a table for 20.\n\nThe waitress seated us, and left us with our menus. \n\n\"I hope you don't mind\" she laughed, suddenly sounding very loud in the much quieter dining area. She lowered her voice a bit. \"I haven't eaten yet, and I'd really like to talk to you, without either going deaf or losing my voice.\"\n\n\"Not at all, Deirdre,\" I replied opening my menu. I had eaten, but I could scarf something else down if it meant spending more time with her. \n\nA few seconds of quiet perusal followed, and she closed her menu softly. I followed her lead, and the waitress returned. We placed our orders : a caesar salad, with garlic bread, and some wine for the lady, with me getting some stuffed mushrooms, mozzarella sticks, and a soft drink. I was driving. \n\n\"Now, before you were so rudely interrupted, you were saying?\" she asked, leaning in, both arms on the table. She formed a tent with her fingers, and rested her chin on them, giving me her undivided attention. Those spectacular eyes, so warm and deep, batted a few times, then waited patiently. \n\nOkay buddy, this is a test, I thought. Do not...repeat, do not look directly at the cleavage, no matter how much you want to. Shit! She was doing the 'resting her boobs on the table thing', and that view was incredible. Thank god for peripheral vision. \n\n\"Yes Deidre, \" I started. \n\n\"Call me Didi,\" she suggested. \"That's what my friends call me.\"\n\n\"Really?\" I asked, genuinely touched. \"Well, thank you... Didi. I'm honoured that you consider me a friend.\" \n\nShe laughed. \"You're welcome. Now?\" I noticed that there was a subtle tone in her voice that had been lost in the noise of the bar. Just a hint of sarcasm. Looking carefully, I could see that her eyes, while beautiful, were a bit cynical. I'd missed that too. \n\n\"Oh right. You derailed me,\" I apologized. \"What was I saying?\" I paused, as though trying to remember, but actually just stalling for time and courage. She would hear every nuance of every word in here, so I had to get it right the first time. \n\n\"I...think you...are the most beautiful woman...I've ever seen. You have the most remarkable eyes, and the most luscious lips. I consider it a privilege to have met you, and your beauty will be remembered by me, long after this night is forgotten.\" Through it all, I stared attentively into her limpid pools, never deviating, trying to adequately convey my honest intent. \n\nSilence. She stared back, her mouth slightly open. Otherwise, her face was neutral. I couldn't tell if she was happy, or pissed. Eternity seemed to pass, until her lip twitched, just on one side, and a crooked smile broke out. Her eyes fluttered down again. \n\n\"Jesus! You don't mess around, do you?\" she hissed.\" First you give me that look in the bar, now you drop a bomb like that on me? You're not playing fair!\" The thinly veiled sarcasm was more evident. \n\n\"Didi, I get the feeling that you're messing with me,\" I laughed.\n\n\"Maybe just a little,\" she smiled, as the waitress arrived with her wine. \n\n\"Yeah, I thought so. I didn't think I had a look capable of 'turning women to jelly',\" I replied. \n\n\"Well, you know, as lines go... that whole 'your beauty will be remembered long after this night is forgotten' thing?...\"she giggled, \"that was pretty good. Well above average.\"\n\n\"You know, you are reasonably good looking,\" I said, letting my facetious nature show as obviously as possible. \"It is possible, as hard as it may be to accept, that what I said wasn't a line at all. I might have been sharing my true feelings.\"\n\n\"I'll accept that it is possible. I do rather enjoy the way you look at me. That's why I'm sitting here with you,\" she said. \"Did that come out as conceited as it sounded to me?\" she laughed. \n\n\"Maybe just a little,\" I replied, mocking her previous reply. She was not only gorgeous, but witty, and obviously not lacking in confidence. Good. I would have accepted a roll in the hay with a pretty pushover, but I didn't mind having to work a little harder. This could be fun. \n\n\"So what's your next move? Are you going to tell me you're a photographer, and that you'd love me to model for you?\" she asked. A bit smug. Her first mistake. \n\nI laughed. Then I laughed some more, shaking my head. This was just too good to be true. I reached into my inside jacket pocket, and came out with a business card. My business card...and no, it wasn't a fake. I put it face up on the table, and pushed it across with one finger.\n\nHer reaction was quite gratifying. Her perfect brown eyes, looked down, opened slightly wider, and fluttered closed. \n\n\"Is it too late to take that last barb back?\" she whispered. \"Kenneth Winslow, freelance photography? Really?\" \n\n\"Yup. Really.\" I replied. I smiled, watching her squirm a little. \n\n\"Sorry,\" she said quietly. \n\n\"It's okay, no real harm done,\" I laughed. \"You were just protecting yourself.\" I leaned closer. \n\n\"So if I were to say I'm a photographer, and I'd love it if you'd model for me...knowing that I'm not lying...what would you say?\" I paused, for effect. \"If I said that, in my professional opinion, you are an exceptionally beautiful woman, and that you should seriously consider modelling as a career...what would you say?\"\n\n\"I'd say 'thank you', and that I already am a model,\" she volleyed, with a smile, sipping her wine. Her confident swagger was back. \n\n\"And I'd say that I'm not surprised. You certainly are very photogenic, and it would be a shame not to share that beauty with the world,\" I returned. \n\nDidi put her wine glass down, and smiled. It really was some smile. At the risk of blowing my reputation as a professional photographer, I pulled my phone out. \n\n\"Just in case this evening should end without me having the opportunity to do this properly, I'd like at least one shot. May I?\" I asked. \n\n\"Oh, I suppose. Go ahead,\" she laughed. \"Any particular pose?\" \n\n\"Let's start straight on. Put your hand up,\" I began, and she beat me to the pose, lifting her chin, making it look like she was resting her head on her hand, but just hovering, so that her perfect lines weren't ruined. A sultry smirk on her lips, her stared me down. Click. \n\nNow she smiled, her 1000 watt version, and turned slightly in her seat, tilting her head back playfully, and giving me a glancing view of her eyes. Click. \n\nTurning back face on, she tugged a few perfect curls out of place, dangling them across her left eye, and tilting her face down. She licked her lips, gave a slutty pout, and glared her best sexy gaze through her hair. Click. \n\n\"That will do,\" I smiled. \"It's such a pleasure to work with professionals.\" I took a few seconds to check the pictures. Despite having been taken with what had unfortunately become most peoples definition of a camera...the ubiquitous, but photographically inferior cell phone...they were good. The soft light, and the shitty lens, made for a naturally soft cast to the images, giving her an angelic look. Except for the one where she looked like a seductress. No angel there. \n\nDidi sighed, and held out her hand. I passed her the 'camera'. \n\nShe looked at the images, flicking back and forth, before smiling. \n\n\"Okay, I'm impressed. If you can do that with this piece of shit, I'd like to see what you can do with a real camera.\" She handed it back. \n\n\"Well, you make it easy. You really are beautiful,\" I replied. \"Still think I was feeding you a line?\" \n\n\"I'm beginning to reevaluate that stance,\" she giggled. She hadn't fixed her hair yet, and gave me the seductive look again. This one was a little different, though. This one was looking into my eyes, not the camera's lens. \n\n\"We might need to do something...something that might make tonight more memorable, just so you don't forget so quickly, and be left with only my beauty. If it's alright with you?\" she purred. There could be little doubt that she was jerking my chain. Despite being proven wrong once, she was hedging her bets. \n\n\"Are we talking about a private modelling session?\" I smiled. \n\n\"Oh yes. Very private. These photos will not be for sharing,\" she whispered. \n\n\"So there will be photos?\" I asked, curious how far she'd take this. \n\n\"Well, that depends on two things,\" she parried. \"First, that you have your camera nearby... \"\n\n\"In my car,\" I nodded, \"parked outside. What's the second condition?\"\n\n\"That you pay for dinner,\" she whispered, \"I am a professional, after all. You normally couldn't afford me. What do you say, Mr. Photographer? I've got a room in the hotel upstairs. I'll show you my portfolio, then I can show you some other things you'd probably like to see.\"\n\nLike I said... not lacking confidence. She was a modern woman, and despite a career in what most feminists would consider an objectifying business, she was far from being exploited. Didi was strong, with strong opinions, and she made the decisions. Tonight, I was just fortunate to have her decision include me, even if she was playing games. I wondered how she'd react when she leaned the whole truth. \n\n\"Would you excuse me for a moment?\" I asked, slipping out of the booth. She smiled and nodded. \n\nI had decided not to take any chances. I was going to get my camera now, and since my car was only a few yards down the street, I would be back very quickly. Indeed I was, and within a minute, I walked back in, with one bag over my shoulder, and a small rolling case behind me. She looked up as I approached. \n\n\"I like a man who's eager. It's a compliment,\" she giggled. \"Anxious?\" \n\n\"Maybe just a little,\" I replied with a smile, placing the bag gently on the seat. The rolling case I parked out of the way under the table. \"Back in a sec,\" I said, and walked quickly to the bathroom. I was fast, but not fast enough to keep her from snooping, which is what I wanted her to do anyway. Better she figures it out on her own, than to have me point out how wrong and arrogant she was appearing. \n\n\"Okay,\" she laughed, as I sat back down. \"I think I owe you an apology. You're not full of shit. You really are a pro,\" she said casting her eyes down. \n\n\"I thought we'd settled that?\" I asked, tapping the card that still lay on the table. \n\n\"Yes. Well, part of me still thought you were just hitting on me,\" she replied. \"I'm sorry.\" \n\n\"Well, I was hitting on you...but not 'just' hitting on you,\" I answered. \"I meant what I said. So what makes you believe me now?\"\n\n\"I peeked in your bag, and that thing costs more than my car!\" she admitted sheepishly. \"Sorry. Again. I'm not making a very good impression, am I? Acting like a conceited bitch, calling you a liar...now invading your privacy? Can you forgive me?\" The tone of her voice and look in her eyes told me this was sincere. \n\n\"Of course Didi. Want to start again?\" I laughed. Her eyes lit up, followed by her smile. Before she could answer, our food arrived. \n\n\"I'm terribly sorry about the wait,\" the waitress said, \"we're short staffed tonight. Want anything else while I'm here?\" she asked, obviously being run ragged. \n\n\"No, we're fine,\" I replied. She scurried away. \n\n\"Hi, I'm Deirdre,\" she laughed, extending her hand, \"but my friends call me Didi. Nice to meet you Kenneth. I'd love to model for you, yes.\" I was still holding her soft hand. She looked around for prying ears, and lowered her voice conspiratorially. \n\n\"Would you like to know what my really good friends call me?\" she whispered. \"And by 'really good', I mean those who are friends of an, ahem...horizontal...nature .\"\n\n\"I'd love to know,\" I whispered back, \"but why don't we eat now, so we can get out of here, and up to your room. Tell me when we're horizontal.\" I winked, and she blushed, giving me the seductive look again. We were, at last, both on the same page, and knew where this was heading. \n\n\"Deal.\" \n\nI know I'd just told her to hurry up, but now that I had my camera, I just had to capture that look properly. She really did look beautiful in this light. \n\nDigging into my bag, I came out with my toy. She was right ; it did cost more than most people's cars...and a few smaller houses.\n\nFor those of you who aren't in the imaging business, let me enlighten you a little. Back when dinosaurs roamed the earth, and film was still used to capture photographs, a film negative from a 35 mm camera measured about 24 x 35 millimeters, hence the name. A good image, but if you wanted to crop, or enlarge it, there were limitations, as the negative wasn't that big. Professionals, especially in fashion and studio work, used the much larger 6 x 4.5 format, measured in centimetres, which produced a negative over three times bigger in area. Given that the film emulsion and grain were the same, the bigger negative gave much better resolution, especially for enlargements. \n\nGot it so far? Good. Now, digital photography follows the same idea. There are DSLRs on the market with resolution levels in the mid 20 megapixel range. Those take images better than most film cameras did, with mind-blowing clarity, and will set you back between five and ten grand, depending on how fast you want to take sequential frames. Essentially a faster computer, and expensive enough to weed out most of the wannabes. \n\nThe Phase One 645DF I held in my hand had a digital back in place, capable of 80... yes you read that right... 80 megapixels! And it's forty thousand dollar price tag put it in the realm of professionals only. That concludes our photography tutorial. We now return you to our regularly scheduled programming, joined in progress... \n\nI brought the camera up to my eye, and she smouldered at me. I adjusted the iris, opening it to allow for the dim light and provide a nice shallow depth of field. Click. Click. Click. \n\nIsn't it funny how you get what you pay for? Cars, hookers, and cameras all fit that category, and with cameras, there was a sub-category ; lenses. The cell phone shots were okay...good, even, but these were remarkable, largely because of the intricate optical and mechanical device that processed and focused the light before capture. The brilliance and clarity of her eyes...her lashes, so long and sexy...the deep, soft brown of her shining hair...and, of course, the ruby redness of her moist, succulent lips, so perfectly rendered I could almost taste them, something I hadn't done yet, but would really like to. \n\nI turned the camera around, and showed her. \n\n\"Oh my god! Don't I look ready to fuck!?\" she laughed. \"Damn, you're good!\" \n\n\"I have my moments,\" I replied, trying not to let her words go to my head. I mean the head on my shoulders...the other head was more interested in having those perfect lips wrapped around it. \n\nCurrently, those lips were eating garlic bread, and their close personal, friend, her tongue, swept out quickly to remove a few renegade crumbs. Watching this was giving me a stiffy. \n\n\"Am I the only one eating?\" she asked, grinning slyly. \"You'd better catch up, because I'm rather looking forward to what comes next. I want to show you my portfolio.\"\n\n\"Oh...\" I said, looking disappointed, I'm sure. \"I thought you were referring to the other things you were going to show me.\" \n\n\"Patience, Mr. Photographer. Besides, I think you'll find my portfolio interesting,\" she smiled, and winked. \n\nI waved at the waitress, and started to slam back the mushrooms in rapid succession. She was back with the bill just before the last mozzarella stick met the same fate. Moments later, with the bill paid, we were waiting for the elevator. \n\n***\n\n\"May I ask how old you are, Didi?\" I asked, adjusting the strap over my shoulder. \n\nShe eyed me cautiously for a few seconds. \"Twenty-eight,\" she whispered. \"I've been modelling for almost ten years now. You?\" \n\n\"Forty-one... Sixteen years behind the camera.\" The elevator doors opened, and we stepped in. ",
        "\"You know,\" she said softly, \"I do have a thing for older men, especially talented older men.\" \n\n\"And I have a thing for beautiful women, of any age. We might even get along well.\" \n\nIt was a long ride up to the twenty-third floor, where Didi's room was. Long, interminable seconds passed, with her looking at me, and me losing myself in the depths of her eyes. I may have imagined it, but it seemed like she was moving closer...like she was tilting her head back, perhaps to allow me to sample those lips...until the fucking elevator doors opened, and someone else got on. Grrrrrr. \n\nAt last, we arrived at her floor, and I followed her out. She gave me the same view I'd had in the bar, when I followed her to the dining room, but this walk was longer, and I swear she wiggled those hips just a little more, every sexy step of the way. \n\nShe ushered me into her room, and closed the door behind us. I noticed that she locked it, and put the latch on. I guess I was staying for a while.\n\n\"Nice room,\" I said. \"You're here to work, I assume?\" I had a feeling. \n\n\"Yeah. Four days of catalogue shoots, starting tomorrow. It pays well, but it's a grind. At least,\" she laughed, opening her arms and turning slowly, \"they make us comfortable. I wish my apartment was this nice.\"\n\nShe opened a drawer and came out with a thick folder ; her portfolio. She sat on the bed, and patted the spot beside her. \"Please?\"\n\nI joined her, and she set the folder in my lap. All right then. \n\nSome of the photos were god awful. That would be the photos themselves ; the composition, the angles, the poses. Didi was gorgeous, but even she could only drag bad photography up so far. Thankfully, as I leafed through things, the images got better. As she became more experienced, she caught the eye of better artists. I flipped the page. \n\nIt was a black and white, nicely framed showing Didi laying on her stomach, leaning up on her elbows, with a mischievous smile on her face. She was naked. \n\nDidi had been watching me silently as I flipped pages, but spoke up when she saw me stop at that page.\n\n\"Oh shit. I remember that day. My first nude shoot. God I was so nervous,\" she giggled. \n\nIt was a nice image, hiding, yet revealing. Of course, my eyes were drawn immediately to the smooth curves of her rump. \n\n\"I've never yet met a model who wasn't nervous the first time she had to pose nude. It's understandable. There's nowhere to hide. It tests the self image of the most experienced performer,\" I said. \"But, that...\" I pointed at her behind in the photo, \"... is one nice ass!\" \n\nOn the following pages, about ten shots from that first nude session gave me a fair idea of what was under her dress. Sort of. They were all artistically posed, with lots of smooth skin, but really showed nothing. Teasing hints of her glory, but nothing more. Another page. Holy shit! \n\nI'd seen thousands of breasts. I'd personally photographed hundreds of models in the buff. I had seen big ones, little ones, perky ones, not-so-perky ones, white ones, black ones... all sorts of breasts. But never had I seen a prettier pair. \n\nShe was turned three quarters, which narrowed her waist slightly, and showed one perfect globe straight on, while the other was profiled. It was a classic pose, taught to every figure photographer since the dawn of time. Casual, almost candid, and very sexy with any model. Didi took it to another level, however. At the risk of feeding her ego to the extreme, her breasts were... perfect. Full, smooth and rounded, they were big enough to make her very popular with lingerie and swimsuit designers, but had just enough sag to prove their natural origins. Her nipples stood, tall and thick as thimbles, on her firm, beautiful breasts. She had a bright smile on her face. \n\n\"Cold that day?\" I jibed, turning the page. She smacked me on the shoulder. We laughed together. \"Seriously, that's one good picture. A good photographer can make a plain woman look beautiful, and a bad one can make a goddess look plain. You were both at your best that day. No question. Absolutely gorgeous.\"\n\n\"Why, thank you Kenneth,\" she answered. Her eyes sparkled at the compliment, and she put her hand on mine as I started to turn the page. I looked at her. \"Later,\" she breathed, turning my chin with her hand to face her. \n\nI wasn't imagining this. She leaned closer, and her perfect lips found mine. It was heavenly. I closed the folder, and put it aside, pulling her down to me as I laid back. My god, she was incredible. \n\nAs first kisses go, it was...how to say this?...Un-fucking-believable! There was no fumbling, no nervous hesitation, and no reason not to return her ardour. She tasted delicious, and I could feel the passion in her lips. She wasn't playing games now. \n\nI let her lead. She was doing fine, so why fight it? Her lips were every bit as soft, succulent, and delectable as they had appeared through the viewfinder, and when her tongue joined the party, dancing a wild tango with mine, we both moaned in unison. \n\nMy arms encircled her slim waist, holding her tight, pulling her body fully atop mine. A curtain of long, luxuriant brunette locks tumbled around our faces. I could smell her hair again. Strawberries. She tasted of them too. \n\nI rolled us over. It was a test, of sorts. If she wanted me off, her body would tell me, but her legs spread slightly, and one long leg hooked around mine. Her hands ran through my hair, as she held me in place, the kiss continuing unabated. Her tongue was a wonderful dance partner ; playful, sensuous, at times aggressive, then demure and withdrawn. A final moan, this time of reluctance, brought the embrace to an end. \n\n\"I'm sorry,\" she whispered, \"but wine goes right through me. I need to pee!\" \n\nI couldn't help but laugh as I rolled off her. \n\n\"Bet you never thought you'd be sharing that little bit of information with me when we met in the bar?\" I asked. She was walking toward the bathroom, and paused, turning to face me. She put her hands on her hips. \n\n\"I have a feeling were about to share more than just information!\" she giggled. \n\n\"Mmmm, that sounds promising...but leave your clothes on,\" I directed. \"I'll get the camera ready, then you can take them off, for me.\" \n\n\"Ooooooo, I do like the way you think!\" she giggled, over her shoulder as she closed the bathroom door. \n\nI flew into action, readying the camera, and an assortment of lenses within easy reach. The rolling bag had three collapsible stands in it, which might have been used to hold lights, but tonight would hold merely reflectors, which were also in the bag. No flash, but I turned on every light in the place, so the ambient light actually wasn't bad, coming from several directions and casting a warm glow around the room. I would usually have had at least one assistant for a shoot, but tonight, I was a solo. It would take a little longer, but I had a feeling the anticipation would enhance the mood. \n\n\"Oh Mr. Kenneth Winslow, freelance photographer?\" her voice sang playfully from within the bathroom. \"Are you ready for me?\" \n\nI ran a quick mental checklist : camera - check... batteries - check... lenses - check... reflectors for illumination - check... dick, ready willing and able - check. \n\n\"All ready, Didi,\" I called. I was wrong. She had taken the time to primp while I was busy setting up, and when she opened the door, she took my breath away. \n\nThe most obvious change was her hair, it's style now perfected, and more voluminous. Her lips were now a deeper shade of red, and looked more attractive than before, if that's even possible. Her lashes seemed twice as long, and she batted them demurely as she walked in. \n\n\"Wow!\" I said. \"You look... Wow!\" \n\n\"So...where do you want me?\" she growled. Her voice was smoky, sultry, and without even trying, emphasized the word 'want'. \n\nIt turns out I did have an assistant, after all. He was about seven inches tall, but had a surprisingly big voice, and he was just full of suggestions on the topic of 'where I wanted her'. For now at least, I ignored him, and took control. \n\n\"Standing. Foot of the bed. Side view...\" I said it...she did it. Like I said before, it's a pleasure to work with professionals. \"Turn your head to me...perfect. Soft smile, now...there you go. Okay, turn left...good. Hold it.\" I'd taken about ten frames already. I stepped back to adjust one of the reflectors. \n\n\"Okay, side view again...\" she turned, and I reached forward, unzipping her dress until the back of her bra was just visible. \"Turn a bit more, good...now look over your shoulder. You're getting undressed, and someone's watching. How do you feel?\" Her face registered surprise, fear, and seductiveness, in order, and I captured them all. \n\n\"Unzip, a little more...good. All the way now...good. Drape off one shoulder for me...a bit more. That's it. Now both shoulders bare.\" I adjusted the way her dress was falling, making sure I could see the side of her large breast, cradled in her bra. \"Very nice.\"\n\nMy assistant was trying to get my attention. He wanted to see her tits. I concurred. \n\nOkay Sweetheart, now turn to face me.\" She did, her arms still holding the dress loosely against her chest. \"Show me those emotions again? Very good. One would almost think you've done this before,\" I laughed. \n\n\"The modelling?\" she asked coyly. \n\n\"No, the taking your clothes off for an audience,\" I smiled. She blushed, obviously enjoying it. \n\nHer dress showed just a hint of cleavage. \"Let it slip a little lower please,\" I asked. She did. \"Good girl! Now both arms out of the dress...\" it dropped to her waist, \"... and you're surprised by the voyeur. Cover those big tits!\" Her face showed the surprise, and her hands tried to hide the sumptuous curves, only succeeding to make them more delicious by pressing them together more as her arms wrapped around. I paused, checking my battery level. \n\n\"How you doing Didi?\" I asked. \n\n\"Having fun!\" she purred. Her eyes looked at mine, not the camera, and smouldered again. \n\n\"Good,\" I replied, bringing the camera up. \"You've been caught undressing, and now you're no longer surprised, or scared...you like it. It turns you on. Let me see it.\"\n\n\"That'll be easy,\" she giggled. \"I'm so hot right now I'm about ready to spontaneously combust!\" \n\nThat comment caught my assistant's attention. \n\n\"Good. Go with that feeling. Lure him in,\" I directed, taking shot after shot. \n\nHer eyes bored in, burning with lust, and she licked her lips, parting them slightly, panting with desire. She leaned forward, hanging her beautiful breasts enticingly. She cupped them in her hands, squeezing them together, making them bulge out of her bra. She hooked her thumbs under the straps, easing them over her shoulders, until they hung loose. A hint of areola appeared...teasing, until she pulled one cup down, and her nipple stood proud, so tightly puckered, erect and engorged that it almost looked purple. \n\nShe slipped the dress down over her hips, and stepped out of it, flicking it away with her foot. Now clad in only her panties and bra, with one breast fully exposed, she ran her hands through her hair. Raising her arms lifted her breasts, until her other nipple popped into view, every bit as stiff as it's twin. One hand stayed in her hair, while the other snaked down, pausing briefly to tweak her nipples to even greater heights, then continuing on until three fingers dipped into her panties. Her breathing picked up, and the fingers pushed deeper, dragging the silky fabric with them, until a few whisps of brown curls appeared. The fingers moved in rhythmic circles. \n\n\"Kenneth, darling...are you watching?\" she breathed. Her voice, like her breathing, was quivering. \n\n\"Yes, Didi. You're absolutely spellbinding!\" \n\n\"Thank you...keep watching...get ready...don't miss it...\" she hissed. \n\n\"I'm ready, baby,\" I said, moving closer, framing her from breasts to hairline. \"Do it...cum for me, you naughty girl!\" \n\nOn cue, she did. Her eyes flew open wide, along with her mouth, as the first wave hit her. Then, her head rolled back, her jaw hung slack, and her eyes screwed shut tight, wrinkling her cute nose. She grunted, and let out a moan of joy that resonated through the room. This sequence of photos was perfect. You could see the pleasure, intensity, and ecstatic agony in every frame. \n\n\"Holy shit!\" she gasped, her legs wobbling slightly. I stepped in and steadied her, helping her sit on the bed. \n\n\"Easy there, baby. That was some show.\" She was still having trouble staying upright, so I helped her lay back. \n\nA wet spot marked her panties, attesting to her arousal. I eased her legs apart, improving the composition, and took a few frames. A few renegade pubes glistened with wetness. Then it was off to her nipples, which looked ready to burst. I leaned in and sucked one for a few seconds, eliciting a moan from her. I really just needed it wet, and took another few shots. \n\n\"Didi?\" I asked. \n\n\"Hmmmm?\" she moaned. \n\n\"Your left index finger please, on your left nipple. Don't press...I don't want to lose the erection. Just touch, please.\" \n\nI know...am I an idiot? Put the camera down and fuck her, right? My assistant was lobbying hard for that. \n\n\"Don't think my high beams will turn off for quite a while,\" she giggled. Her fingertip appeared in the frame, and touched the tip of her nipple softly. Click click. \n\n\"Gently pull your fingertip straight up, off the tip, about a quarter inch, please,\" I asked. \n\n\"If you wanted coordination, you should have asked before I had the orgasm!\" she laughed. \"I'll try!\" \n\nHer fingertip lifted away. It was one of the ones that had been up her pussy, and was still damp with her juices. I was hoping for strings of moisture to stick, connecting the tip of her finger with the tip of her nipple, and wasn't disappointed. I used my own shadow to make it more back lit, then moved aside for front lighting. She slowly pulled her finger back, and the combined saliva and pussy juice stretched elastically, reaching nearly an inch, or one nipple length, before snapping. \n\n\"Got it?\" she asked. \n\n\"Got it,\" I answered. \n\n\"Good. Now put the camera down and fuck me!\" she demanded. \"I need a nice hard cock inside me!\" \n\n\"How about if I keep the camera nearby and fuck you?\" I asked. I could tell these photos were hot, and was reluctant to miss anything. \n\n\"If you insist, mister photographer,\" she sighed, \"as long as I get fucked.\"\n\nI put the camera on the bed beside her, and sat up, pulling my clothes off quickly. She had only to undo and shed her bra and panties, so she was naked far sooner than I was, and sat watching eagerly as I finally peeled my underwear down. \n\n\"Ooooooo! Nice dick! I think I'm going to like this,\" she cooed. \"Lie down. It's my turn.\" \n\n\"Just a sec,\" I said, grabbing a spare battery and wide zoom lens, before returning, and taking the offered place beside her on the king sized bed. \"I'm all yours.\" \n\n\"Good, because I'm hungry,\" she growled, moving between my legs to caress my cock. She rubbed it against her cheek, and sighed. \"Now, let's see how steady your hands are when you're the one who's horny as hell.\" \n\nI watched through the viewfinder as her lips moved closer to the head of my dick. Normally, I sought to capture images that made you feel the emotion of the subject. I had a feeling that I was about to have that demonstrated to me literally. \n\nMy finger depressed the shutter often, as those perfect, deep red lips puckered and planted a loving kiss on the helmet of my dick, who was normally on my side of the camera. Tonight, he was talent, playing a part in Didi's photo set. I was framed tight, but widened slightly, so I wouldn't miss her eyes, should her expression be memorable. Her lips parted, and inched slowly down my shaft, consuming my hard meat with a soft moan. It looked incredibly sexy. It felt like I was getting a blowjob from a goddess. Her lips slid up and down as she bobbed her head gently, opening wider, and extending her tongue, allowing my cock better entry into her throat. Her lips wrapped the base of my cock, and my finger twitched reflexively, triggering the shutter, and taking a picture I would have taken myself, if my brain hadn't been shortcircuiting due to her mouth. \n\nI laid back, surrendering to her, putting the camera aside. As long as she was doing this to me, I would be incapable of focusing on focusing, if you'll pardon the pun. She sucked me for a few more minutes, before moving on to new business. \n\n\"No more directions?\" she smiled, straddling my hips. She positioned herself on one knee, and one foot, displaying her pussy to me for the first time. I shouldn't have been surprised that her little flower was as beautiful as the rest of her. I scrambled to grab the camera. \n\n\"Can you hold it there, honey?\" I asked, putting my lover persona on hold for a minute. I took a few frames. \"Could I ask you to spread your lips?\" \n\nHer fingers appeared, insinuating themselves into her vestibule, and parting her labia. The moist pink interior peeked out. This would be where I'd normally have an assistant with a reflector shining the reflected light on her pretty pussy, to eliminate the unavoidable shadows. That obviously wasn't going to happen tonight, since my assistant was just about to be engulfed by her cunt. I watched as she lowered herself slowly, until the head of my cock and her spread lips were in the same frame, mere fractions of an inch apart. \n\n\"May I proceed, please?\" she asked. Her voice was quivering again. Despite her cool, controlled appearance, Didi was obviously a very sexual woman, and she had needs, which I was fortunate enough to be satisfying tonight. \n\n\"Absolutely, my dear,\" I replied. \"Please fuck me.\" \n\n\"With pleasure,\" she hissed, impaling herself. I captured a few images as my cock spread her pussy wide, then set the camera aside again. \n\nThis was not my first rodeo, but it was the first time I'd had sex with a model. Believe it or not, after sixteen years of spending time around beautiful women, many of whom had no problem discarding their clothing at the drop of a hat, this was the first time I had met a model in a social situation...at least, the first one I wanted to spend time with. At the risk of generalization, most models are pretty full of themselves, and notoriously difficult personalities to be around for extended periods. Even if the prize for tolerating those personalities was an enjoyable dalliance, after being around them all day, the price of entry was too high. \n\nDidi was different. Challenging, yes, but in a good way, and far too beautiful to ignore. She ground her pussy down onto my cock, and groaned. \n\n\"Now that's a nice cock,\" she giggled, \"not too big, or too small. Not too hard, or too soft... It's juuuust right!\" \n\n\"Funny, you don't look like Goldilocks,\" I laughed. \n\n\"Goldilocks doesn't have these,\" she asked, cupping her big breasts, \"does she?\" \n\n\"Only in the XXX version,\" I moaned. She was skewering herself slowly, driving me crazy. \"So you do mostly lingerie and swimsuit, right?\" I asked. \n\n\"Mmmm hmmm,\" she nodded, maintaining her motions. \"For the same reasons you know I'm not Goldilocks. I'm not a scrawny stick, so I'm not what the high fashion designers are looking for. That's where the big money is, but I'm glad they don't want me. I find that shit boring, and the clothes are...\" she paused, reaming herself deeply, \"... at best ridiculous, and at worst hideous.\" \n\n\"So, what's this nickname? The one your really good...horizontal...friends gave you?\" I asked. \n\n\"Oh that,\" she giggled, pausing at the bottom of her stroke to grind on her clit. \"Toody,\" she smiled. \n\n\"That might take some explaining,\" I laughed. \n\n\"A play on words,\" she whispered. \"Deirdre becomes Didi. Didi... DD... Double D... Two D... Toody!\" ",
        "\"Ah, cute,\" I replied mesmerized by her as she pleased herself on my dick. \"Why?\" I had a feeling there was more. \n\n\"Well, it has to do with where I like my men to...um... shall we say...unload themselves.\" She smiled again, and bounced her tits suggestively. \n\n\"Understood,\" I laughed. \"Okay, Toody. I think you are pretty perfect, built the way you are. I've always liked my women with curves,\" I said, reaching up to fondle her breasts firmly, \"and you've certainly got some nice ones.\"\n\n\"Thank you,\" she moaned, leaning closer. Her breasts hung within sucking range, and I took the hint, gathering one of her stiff buds gently. \"Mmmm, that's nice. Suck them good.\" \n\nDeirdre / Didi / Toody began to grunt softly, picking up her pace slightly. Her eyes were closed, and a blissful expression painted her face, making her even more beautiful and irresistible to me. \n\n\"Oh fuck, baby, your pussy is so wet...it feels incredible on my cock,\" I moaned. \n\n\"Mmmm, yes...fuck me... fuck me,\" she whispered, bouncing more energetically. Her cool, professional demeanour was fading, being pushed aside by her desires, and when her eyes opened, there was a fire in them that hadn't been there before, a desperate need that I had to try to capture. \n\nShe was fucking herself pretty hard now, so I knew I wouldn't be able to stay steady. I bumped up the ISO and shutter speed to compensate, and brought the camera to my eye. \n\n\"Fuck!...yes fuck me...yes...yes...yes!\" she gasped, pounding her hot pussy down onto my cock. Her once perfectly styled hair was flying wildly around her head, dangling curls of beautiful brown sexiness that obscured her eyes. The images were remarkable, with those eyes playing peek-a-boo, hidden in one frame, then boring straight into my soul with pure lust in the next. I put the camera down, and enjoyed the view. \n\nDidi's beautiful tits were making the view most enjoyable. She was now fully engaged in pleasuring herself with my hard tool, and her boobs were very mobile ; bouncing, jiggling, wobbling, and slapping together uncontrollably. It would have been great on video, but unlike a DSLR, my camera doesn't do that, a trade off for the much higher resolution. \n\nDidi continued to skewer herself deeply, moaning her pleasure loudly, the melody of her voice echoing throughout the suite. Her hands were on my chest, balancing her vigorously active body. I felt her perfectly manicured, brightly painted talons tighten, digging into my skin, as she threw her head back and shrieked. If there were actual words in there, I couldn't make them out, but the meaning was clear enough. She was cumming again.\n\nI held her hips while she ground herself down onto me, extracting every bit of orgasmic joy she could from her ride, until it became too much for her to bear, and she collapsed sideways on the bed. \n\nI untangled myself from the knot of legs, twisting around to take a position parallel to her. I could only see one of her eyes through the mop of brunette hair that fell across her face. That eye opened slowly, found me watching, and smiled. Yes, eyes can smile. \n\n\"Stay there,\" I said quietly, suddenly realizing what a great image was presenting itself. The camera was close by, and I wasted no time in retrieving it. I brushed a few strands of hair aside, improving the composition, until a portion of her expressive mouth was visible, as well as one eye. \"Okay, now give me that smile again,\" I instructed. \n\nShe did, and I took several frames. With half her face obscured by being pressed into the sheets, and the other half peeking out through a screen of luxurious brown tresses, I set the focus to the plane of her eye and lips. 'Playfully sexy' would be a good description of the resulting photos. I moved closer, again laying parallel to her, and brushed the hair out of her face, for purely selfish reasons this time as I pressed my lips to hers. The kiss that followed lasted several minutes, with Didi and I rolling happily around the bed, caressing each other and sucking each other's tongues passionately. Kissing Didi was quickly becoming one of my very favourite hobbies. \n\nSince we were now officially intimate, I suppose I could call her Toody, and I really did find the rationale behind that moniker quite cute. I was planning to follow suit, and looked forward to seeing my pearlescent load of cum glistening wetly across the full, round curves of her breasts. Still, it didn't quite fit, so I decided to stick with 'Didi' until I could find my own pet name for her, assuming this was to be more than just a one time thing. \n\nDidi was on top of our embrace when she pulled her lips away from mine. She gave me a little grin, and climbed off, clambering up the bed before dropping her shoulders to the mattress, with her butt high in the air. She wagged her ass at me playfully. \n\n\"Arf, arf, arf,\" she laughed, flashing that grin at me around her hip. \n\nThose pictures in her portfolio that showed her ass to such great effect suddenly seemed woefully inadequate. The addition of her juicy pussy, gaping open deliciously, at the centre of the perfect confluence of her thighs and rump, made these photos spectacularly erotic. The few wisps of pubic hair that remained unshaven were adorned with tiny droplets of her secretions that showed clearly in the images. My assistant wasn't interested in the view, however ; he wanted a more tactile experience again. \n\nI knelt behind her, and slapped my hard dick against her waiting pussy. Didi moaned, and undulated her hips, reaching back between her legs. Her soft hand found its quarry, and rubbed the swollen head of my cock into the moist gap of her eager cunt, before pushing back to impale herself. I watched as my shaft slowly disappeared inside her, spreading her lips wide. \n\nMy hands gripped her hips firmly, pulling her back to meet my strokes. I wasn't quite ready to just cut loose and fuck her hard yet, so I kept my assault gentle. I wanted her to know that I fully appreciated her presence, and wasn't just interested in using her for my own gratification. There was no rush to finish. Call me a hopeless romantic, but I felt that every woman I took to bed deserved to be treated as if she was 'the one', until either she or I decided it wasn't the case. That's the main reason I hadn't slept with any models before Deirdre. Most of them had such abrasive personalities that I had already crossed them off the list before the prospect of sexual intimacy even presented itself. I counted myself lucky that I hadn't known she was a model before I approached her. I might have made a very incorrect assumption about her. I might have bypassed her entirely. I might have missed the opportunity to sample this delicious creature altogether, and that would have been tragic. She was growing on me, and her pussy was heavenly. \n\nDidi was purring happily, resting her head on her folded arms, with a contented smile on her face. She rocked back and forth with my firm but smooth thrusts, gasping softly each time my hips met her muscular rump with a soft slapping sound. \n\n\"Mmmm, Mr. Winslow, you are a very good fuck,\" she moaned. \"Very considerate, which in my experience, is rare in today's world. Most guys just want to plough me, then crow to their friends about it.\"\n\n\"Thank you, Didi,\" I said quietly, maintaining my rhythm. \n\n\"That's probably why I get along better with older guys...not that you're 'old'...but rather than guys my age or younger,\" she whispered. \"Oh shit, your cock is so good!\" \n\n\"Thank you, Didi,\" I laughed, repeating myself. \n\nShe was putting a little more oomph into her end of the movement, generating a sharper slap with each collision. She raised up onto all fours, and became more frenzied. Her hair flew about her face. \n\n\"Fuck!\" she grunted loudly, \"So fucking good! God, you're gonna make me cum again!\" She threw her head back, bringing her long, dark hair within range with purpose. \"Pull my hair!\" she hissed. \"Pull my fucking hair!\" \n\nI guess there was a little cave woman left in even the most modern female, so the hair pull still had an appeal. I grabbed a handful of her glorious brunette mane, and tugged. \n\n\"Harder!\" she gasped. \"Fuck me harder, and pull harder!\"\n\nShe was directing now, and I wanted her to get what she needed, so I did as asked, pulling her harder onto my cock using her hair as leverage. \n\n\"Yes!\" she screeched. \"YES! THAT'S IT! FUCK ME LIKE THAT! YES!\" Her breathing ramped up suddenly, and she screamed. \"Oh fuck, I'm cumming again! Oh godddddddddddddddd!\" \n\nHer body twisted as her orgasm hit, and she raised up, leaning back against me, resting her head back on my shoulder. I released her hair, instead grabbing two handfuls of her beautiful breasts and holding her close. We both crashed forward onto the bed, with me landing atop her, still holding her tits, still with my cock buried up her pussy from behind. I managed to cushion the blow of my weight on her back by landing with my elbows on the mattress. \n\nWe both laid there, catching our breath, for a minute or two, with me resting on her back. \n\n\"You okay, baby?\" I asked, lifting off and laying next to her, with my arm across her back. \"I didn't squish you, did I?\" \n\n\"A little,\" she breathed, \"but I'll live, and it was worth it. Man, did you ever make me cum! I may smile for a week!\" \n\n\"Does that mean I'll be remembered long after tonight is forgotten, like your beauty?\" I laughed. \n\n\"Mmmm hmmm,\" she moaned softly. \"Touch\u00e9, smart ass!\" She turned slightly to face me. \"That was wonderful. Thank you.\"\n\nFor several minutes, we laid in silence, looking deep into each other's eyes. \n\nEverything I had said to her was true. She was easily the most strikingly beautiful woman I'd ever met, and I wanted this to continue. While I gazed at her, she smiled. \n\n\"Remember when I said you were turning me to jelly? Well, that's the look that would do it, for real this time.\" She rolled onto her back, and opened her arms wide. \"Let me hold you while you fuck me, baby, and then cum for me.\" \n\nIt was by far the best offer I'd had in a long time. I climbed aboard, into the welcoming embrace of her pussy as well as her arms. She had one hand on my shoulder, while the other softly traced the contours of my face in a gentle, loving caress that matched the look in her eyes. I knew what I was feeling, and if I was interpreting her expression correctly, I wasn't alone. I found that prospect particularly appealing. \n\nHer pussy gripped my shaft in a warm, snug embrace every time I pulled back, then relaxed as I pushed into her, a deliciously subtle way of letting me know that she was still an active participant in this lovemaking session. I was fucking her a little firmer now, and her breasts were wobbling with each stroke, grazing their resilient fullness against my chest. I leaned down closer, feeling those perfect globes crush into me as I sought out her equally perfect lips for a few decidedly passionate kisses. \n\nDidi's legs came up and wrapped tightly around my hips, and she spurred me in the ass with her heels, a slightly less subtle way of letting me know she wanted more...harder...faster. She moaned the same instructions into my mouth while we kissed, but I was already in action by then, fucking her more vigorously, pounding down into her juicy snatch, grinding against her clit firmly. \n\nThere are a few occasions in life, when a woman's radiant beauty cannot be contained, diluted or hidden by anything, or anyone. Being a photographer by trade, I was fortunate enough to be present at some of those moments, with my eye in the viewfinder. I had seen that radiant glow in the faces of countless brides. I had been present at several marriage proposals, and saw the embers of the flame to come be ignited. I'd even photographed a few births...not the part where mom had her feet in the stirrups, having her cunt stretched beyond belief by the emergence of a new life...rather the part just after, when the new mother held her child for the first time. No one could argue that a woman isn't at her most beautiful at these times, even if she is hot and sweaty from exertion. \n\nThere's another time, though, when a woman has that glow, and I was looking at it now. Didi was enjoying this, nearing another orgasm, virtually incandescent with emotion. For my part, I was feeling a similar way, and also proud that I could give her that luminance. \n\n\"Fuck,\" she hissed, \"I'm going to cum, again...keep fucking me, baby!\" Her eyes widened, and her jaw hung slack, until a grunt of pleasure was finally heard, along with a quivering gasp of breath. \n\n\"Didi?\" I asked, plunging into her pussy a few last times, \"Is Toody ready for her reward?\" \n\n\"Oh yes!\" she giggled. \"Frost me, baby!\" \n\nI pulled out and scuttled up the bed, kneeling beside her and aiming my weapon at her chest. She cupped her boobs and held them up for me to paint, which is exactly what I was going to do in a few seconds. A final stroke, and I felt my balls send their ammo up the barrel. It was more of a shotgun than a rifle, so the target area was broad. \n\nRopes and globs of hot cum erupted, spraying everything within a 45 degree area. While the bulk of my considerable load did hit the two perfect, rounded globes of her tits, there was some collateral damage, as a few gobs of goo now hung like Christmas decorations from her chin, lips and hair. Apparently, my lack of accuracy wasn't a big issue, and Didi was still smiling up at me as the last drops landed. \n\nMy assistant was trying to turn out the lights, and go home for the night, but I wasn't done just yet. \n\n\"Hold it there, babe,\" I directed, as I scrambled for the camera one last time. These were going to be for the 'adults only' section of her portfolio, but I guess that covered most of the shots from this evening. \n\nI took a few overall photos, showing her from the waist up, hands still supporting her breasts, covered with cum and looking very pleased with herself. Then I switched lenses, and moved in for the closeup work. \n\nHer nipples were standing up, liberally coated with the translucent white discharge that was slowly oozing across her curves. Click, click, click. \n\nHer fingertips scooped up some of the goo, and it dripped in long strings back to her chest. Click, click, click, click. \n\nNow the really good stuff. I focused tight on the corner of her mouth, where her dark red lips glistened, moist and wet, the red colour glowing through the semi-transparent string of cum that laid across her skin. Click, click, click, click. \n\n\"Come on, baby,\" she hissed through clenched teeth. She didn't want to mess up the natural placement of the cum. \"I feel like a fat kid covered with cake icing, and not allowed to lick it off! I don't know how much longer I can be patient.\" \n\n\"Okay, Didi. I need your help now, anyway,\" I laughed. \"When I tell you, go ahead and lick your lips. Ready? Go.\" \n\nHer lips parted slightly, and the tip of her tongue slithered out, searching for and finding the gloppy deposit. Click, click, clickity, click, click, click. I backed off and reframed, now showing her eyes and the rest of her face. \n\n\"Go for it Didi. Scoop and swallow,\" I said, ready to capture the action. \n\nShe didn't need to be told twice, immediately scraping up loads of cum with her fingers, before letting it drip in slimy strands into her open mouth, onto her extended tongue. Click, click, click, click, clickity, clickity, click, click! That's a wrap. \n\n\"Shower?\" Didi asked, licking her fingers as she rolled out of bed. I was hot on her heels. \n\nThe warm water, and her warm kisses, made our time in the shower very enjoyable, and we probably spent longer in there than necessary to get clean. I was good with that. Didi felt great in my arms, wet or dry. \n\nWe settled into the bed together, snuggling silently in each other's arms. It had been quite a while since I had enjoyed time in this way with such a beautiful young woman, and I wasn't in any hurry to depart. \n\n\"Can we look at the images?\" she asked softly. \"I hope it doesn't sound vain, but I'd like to see what I look like having sex.\" She smiled, and kissed me gently, repeating her request. \"Please?\" \n\nTo be honest, I was curious, too, so I got up, and grabbed my laptop. At least we didn't need to wait for the files to transfer, as I had my camera set up to send them wirelessly direct to the attached portable hard drive, so it was just a case of browsing the thumbnails until we found one worth investigating. As it turns out, almost all of them were good, and a bit of massaging with the editing software would make a few of them great. \n\nDidi gasped when she saw the ones of her face as she had her first orgasm, on her fingers. \n\n\"Oh my god!\" she giggled, bringing her hand up to cover her eyes in a display of false modesty. \"I guess you didn't have to be there to know what's happening in this one, do you? So that's my 'O' face?\" She brought her gaze back to the screen. \"Look at my eyes!\"\n\n\"I see them,\" I laughed. \"The windows to your soul...and you, my dear, have a very naughty soul. I like it.\" This seemed like a good time to taste those lips again, and I did, much to her delight. She wrapped her arms around my neck, and we shared a long, gently passionate embrace. A few minutes later, we were asleep. \n\n***\n\nI awoke all alone in the huge bed. Didi was nowhere to be found, but there was a note, with a business card on top of it. The card was simple and elegant : \"Deirdre Hendricks, Professional Figure Model.\" Her agency number was on it as well, but she had written her personal cell number on it, and given it a lipstick print of approval. The note was a bit more interesting. \n\n\"Good morning, Ken. I'm sorry that I'm not there with you right now, but I have a long day of bikinis, bras, and panties ahead of me, so I let you sleep. You're very cute when you sleep, and I couldn't bring myself to wake you. We never had a chance to talk about where this is headed, and I'm not sure I can put my feelings down on paper just yet, but if you are still in town tonight, perhaps we could have that discussion then? I'd very much like to see you again. Thank you for last night.\"\n\nI smiled. Oh, I'll definitely still be in town...and if I'm right, you'll be very surprised at why, I thought. It was nearly nine, and I had to be at a shoot at ten. Since an evening with Didi had filled my hard drive, no pun intended, I was going to need another one, so I dressed quickly, and hustled to the nearest electronics store. \n\nShopping done, I drove to the shoot, parked, and went inside. We were using this nice house, with a big pool area out back. There were plenty of people standing around, adjusting lights, and doing other tasks. I wasn't the only photographer here today, as there was one other, and at least a dozen girls, a few of whom were milling about as well, dressed, as it were, in their scanties. \n\n\"Well, hello!\" I heard from behind me, and turned to see those same beautiful brown eyes looking back at me. The luscious body was clad in a very brief bikini. \"My name's Deirdre Hendricks,\" she smiled, extending her hand in greeting, before lowering her voice. \n\n\"Have something you'd like to tell me?\" Her eyes sparkled, happy to see me.\n\nThat conversation would wait until later. \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThanks for reading. Please let me know your thoughts on this story, as well as if you'd like more with these two. \n\nOh...and cast your votes. Thanks."
    ],
    "authorname": "ilikeithot6308",
    "tags": [
        "brunette",
        "younger woman",
        "older man",
        "big boobs",
        "erotic photography"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/exposure-compensation-factor"
}