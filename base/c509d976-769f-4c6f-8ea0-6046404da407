{
    "title": "A Very Nellie Fantasy",
    "pages": [
        "Author's Note:\n\nIn this special edition Nellie story, Nellie and J.P. take the next logical step in their relationship: light bondage and gentle femdom with a side of butt stuff. \n\nLike all of Nellie's adventures, this story can be enjoyed on its own or read as part of the larger series. Fans of the series may want to know that this takes place after A Very Nellie Christmas. Given the premise of the story, you can expect discussions of some kinkier/fetishier things than the usual Nellie fare. Given that it is a Nellie story, you can expect it not to go where you expect it to. If you are concerned, check the tags, however consider this is a reasonably \"vanilla\" couple exploring their kinkier side for the first time together.\n\n**\n\nAt some point in their life, everyone has a record-scratch moment.\n\nYou know the one. I guess boring people might call them defining moments where you learn a valuable lesson as you reevaluate your life choices, but that would imply I had some sort of regret or shame for getting myself into the situation. \n\nThat's not really what a record scratch moment is, though. \n\nIt's that moment when you're almost outside of yourself, viewing the events of your life through the lens of a statick-y CRT television. It's that moment that you question how you got there, what series of events could have possibly led you into that situation. It's that moment when you're standing at the end of your bed in stilettos that are far too high and a corset that was far too expensive given how cheap it looked, a feather in one hand and a butt plug in the other, with a completely naked man\u2014who was nearly choking on the panties you shoved in his mouth to make him shut up\u2014tied to the headboard.\n\nRecord scratch. \n\nFreeze frame. \n\nYep, that's me. Nellie Belanger, two months away from my university graduation, dressed like an approximation of a dominatrix who has no idea what she's doing, mostly because I had no idea what I was doing. That guy tied to the bed? That's J.P., my boyfriend, a complete horndog and all-around bastard that I loved way more than I wanted to admit and who, despite being the one who put this whole fucking thing in motion, was laughing so hard that he was having trouble breathing through the lacy black panties I'd bought especially for the occasion. \n\nI guess it was a good thing he'd wanted to experiment with breath play.\n\nBut I'm getting ahead of myself. \n\nYou're probably wondering how I got into this situation, and frankly, so was I. I mean, that was the whole reason for the record scratch moment. It was a pause, a break, an internal question of how we went from attending my soon-to-be-stepmother's baby shower to this moment of me wondering if it would have been more effective to shove the butt plug in his mouth instead of my panties.\n\nIt all started when I walked in on J.P. jerking off.\n\nI guess I could say that I caught him jerking off, but that would imply both that it was something to be ashamed of\u2014which it wasn't\u2014and that he was trying to be sneaky about it, which he absolutely wasn't. If he was, he wouldn't have been watching porn as he sat on the bed in my room at my father's house while the last few high-society types attending the baby shower of my not-yet-out-of-the-oven sibling lingered downstairs.\n\nAt least the door was closed.\n\nOr it was, until I opened it to see my boyfriend absorbed by some video in full view of the doorway, hand down his pants as he stroked himself lazily to the dulled sounds of fucking coming from the speaker of his phone.\n\nThankfully, there was no one else in the hallway.\n\n\"Whatcha watching?\" I asked as casually as I could while trying to find that balance between hurriedly closing the door and trying not to slam it so I didn't attract attention.\n\nA normal person might have yanked his hand out of his pants and hurriedly turned off the video. Not J.P., though he at least stopped moving his hand. Instead of turning red and stammering some kind of excuse or apology, he smirked.\n\n\"I doubt it's anything you'd be into, babe,\" he said.\n\nHe couldn't have said anything that made me want to find out more, even though I knew he was just appealing to my competitive streak and trying to goad me into a reaction.\n\nWhich, of course, worked.\n\n\"Fine then,\" I said lightly. \"Don't tell me what kind of dirty videos you're watching so I don't have to cater to yet another one of your weird kinks.\"\n\n\"Weird kinks?\" he scoffed. \"What weird kinks?'\n\n\"The Christmas one.\"\n\nHe laughed, finally taking his hand out of his pants and pausing the video. \"Oh, right. Says the girl who got all hot and bothered by the Santa suit I had to wear.\"\n\n\"Actually, I got all hot and bothered harnessing you up in the fake beard.\" I kicked off the black pumps I was wearing and flexed my toes, finally relieving the sore spots beneath the sheer fabric of my stockings. \"Remember? Your voice was a little muffled by the hair, so it was like I could get five seconds of peace.\"\n\nJ.P. grinned. \"You know, I had forgotten, but you're right. Maybe you should come take a look at this video.\"\n\n\"Maybe now I don't want to.\"\n\nHe shrugged and unpaused the video, the sound of bodies slapping together resuming loudly as he put his hand back into his pants. \"Fine then. I'll just take care of this myself.\"\n\nI gave him the dirtiest look I could muster, which made him laugh harder, and started working the backing off the studs in my ears as I walked towards him. Before he could properly start jacking off again, I put my earrings on the nightstand and crawled onto the bed beside him. The skirt of my far-too-expensive dress pooled around my legs as I plucked his phone from his hand.\n\nI knew J.P. well enough to know that whatever porn he was watching, it shouldn't be that out there. Or rather, it shouldn't be that unexpected. J.P. was a complete and total bastard and had been ever since we were kids. That hadn't stopped me from crushing on him hard while we were growing up, and it also hadn't stopped me from losing my virginity to him when I turned eighteen. And a few years later, it hadn't stopped me from hooking up with him again, and then again, and then for nearly six months before he confessed that he'd fallen in love with me. And of course, I'd freaked out and insisted I hated all things relationship-y and monogamous and serious, but somehow I'd ended up back in his arms, admitting I'd fallen in love with him, too.\n\nIt helped that he kept promising me things like threesomes and the possibility of an open relationship, if we wanted that. Funnily enough, we hadn't explored either of those things, even though those were two of my biggest concerns in agreeing to be his girlfriend. I didn't want to be tied down or suffocated. I liked exploring my sexuality and trying new things and being open to different experiences. And so did J.P., which is truthfully why a relationship between us had potential. But even though we were both open to it, those things hadn't come up.\n\nA big part of that was because our sex drives were totally in sync; that is, he was as horny as I was, which was basically all the time, and... well, he was really fucking good at fucking. \n\nThere's no way our relationship would have worked if he wasn't. \n\nThe point, though, was that sex was a big part of our relationship. Nothing was off the table for us, and that meant we had discussed a wide variety of past experiences and future hopes. I'd told him about the threesome I'd had with two men and how I'd kind of wished they'd been more into each other; he told me about how he'd never had a threesome with another guy involved but that if he did, he'd want to explore things with the other guy. \n\n\"Really?\" I had said, unexpectedly surprised.\n\nJ.P. had been running his fingers along my collarbone, tracing the edges of the dragon I had tattooed there. \"Yeah, really. I didn't think that would bother you.\"\n\n\"It doesn't bother me,\" I replied, mildly insulted. \"I just didn't know you were...\"\n\n\"Were what?\"\n\n\"Like, bisexual.\"\n\nHis fingers traced the dragon's tail, dotting each of the scales that trailed off its body as he chuckled with amusement. \"Hmm. That's news to me.\"\n\nI felt my cheeks turn red. \"I didn't mean to\u2014\"\n\n\"It's okay,\" he interrupted. \"You're not totally wrong. I don't mean that I'm not, I just mean that... I dunno. That word doesn't feel right.\"\n\n\"I am. Bi, I mean.\"\n\n\"I know.\" He kissed the top of my head. \"I never thought about it before. I don't know how to define what I am.\"\n\n\"You don't have to label it.\" I ran my fingers along his pecs as I rested against his chest. \"I was just curious.\"\n\n\"About what?\"\n\n\"What else you're attracted to.\"\n\nHe smiled. \"Everything. I think that's the problem with the label. I mean, I think I'm more into women. I don't think I could ever give up tits. But if a person consents and is into it, I probably wanna fuck them, regardless of how they identify or what they've got in their pants. I'm... I'm sex-sexual.\"\n\n\"You're... what?\"\n\nHe laughed. \"I just like sex, babe. I like fucking.\"\n\nJ.P.'s unreserved frankness was one of the many things I refused to admit I loved about him. It could be argued that his lack of shame could be a double-edged sword, but I'd argue that it was more positive than anything. It meant we could have those discussions, that we felt comfortable telling each other about our many, many adventures before we got together. It meant that we didn't feel the need to hide our desires, that as unusual as our relationship might be, we knew we could explore things together.\n\nSo when I looked at the video J.P. was watching and saw something I didn't expect to see, that was saying something.\n\nIt wasn't anything horrible. Open as we were, we both knew each other's hard limits and were very much on the same page about all of them. He had just never mentioned wanting to try that, and for whatever reason, I'd never considered it.\n\nThe man in the video was tied down, straining helplessly as a woman dressed in a skin-tight black leather corset and thigh-high boots sat on his face. She had clearly just moved up his body to do so; his cock was slick and glistening, so hard that it was practically purple, and precum was dripping relentlessly from his tip. As she ground her pussy against his face, she reached back and grabbed the man's balls, demanding to know whose balls they were. A low, braying moan was muffled by her thighs, but the word he spoke was unmistakable.\n\n\"Yours.\"\n\nI jumped as she slapped his balls and his body jerked.\n\n\"Yours, what?\" she pressed.\n\n\"Y-Yours, M-Mistress!\"\n\n\"That's right, you sissy little slut. You're barely good enough to lick my pussy, aren't you?\"\n\n\"Mmmf.\"\n\nShe gripped his balls harder. \"What was that?\"\n\nThat braying cry came from between her legs again. \"Y-Yes, Mistress!\"\n\nShe slapped his cock and I winced. \"Wow.\"\n\n\"She wasn't doing the hitting stuff before,\" J.P. said. \"But I mean, as long as it's not my balls...\"\n\nI settled against the headboard, holding the phone so he could still see it as I watched, entranced. He had taken his hand out of his pants again at some point and wrapped it around my shoulders as I tucked my legs under me. Together, we watched the woman in the video come against the man's face before standing up. He gasped for breath, but there was a look of glazed awe in his eyes as he stared up at her.\n\nShe told him that he had made her come, which meant he was a very good boy, and that good boys got rewards. Apparently, getting to wear the panties she'd discarded before I started watching the video was that reward.\n\nI wasn't entirely sure how it was a reward for him, but I was incredibly surprised at how much of a reward it was for me. My mouth went dry as I saw his cock bulging beneath the black lace of her panties, his tip poking out the top and leaking precum onto his stomach.\n\n\"Don't you dare get cum on those,\" the woman ordered, and then proceeded to start stroking him through the fabric.\n\n\"How much you wanna bet he totally gets cum on those?\" J.P. asked from beside me.\n\nI jumped, having almost forgotten he was there, and he snickered.\n\n\"You're really into this, eh?\" he asked.\n\n\"Having someone do as I say without being a smart ass?\" I asked flatly. \"Of course not. I try to keep my fantasies a bit more based in reality. Besides, I hate that word.\"\n\n\"What word?\"\n\n\"'Mistress.'\" I rolled my eyes. \"It sounds so... I dunno. Dramatic. Harsh.\"\n\n\"I could call you something else, if you want.\"\n\nI snorted. \"Yeah, right. Because you're so well-known for listening to me when I tell you not to call me something.\"\n\n\"When have I ever\u2014\"\n\n\"You have never once stopped calling me 'babe' when I've told you to stop calling me babe.\"\n\n\"That's because I know how much you love it, babe.\"\n\n\"At least it's better than 'Mistress.'\" \n\nHe leaned in, his breath warm against my cheek. \"What if I called you something else?\"\n\n\"Like what?\"\n\nHis voice went low, enticingly sexy as he nuzzled against me. \"What if I asked really, really nicely if you'd please stroke my cock, Miss?\"\n\nI felt a rush of heat roll through my body. I was almost certain it had stained my cheeks pink, but if J.P. noticed, he didn't say anything. Without responding or even taking my eyes off the video, I slipped my hand into his lap. He made a soft noise, then a louder one as I pulled his cock out. He sighed heavily as I curled my fingers around his shaft and began moving my hand, slowly at first and then faster as I spread his precum along his throbbing cock.\n\n\"Oh my God, Nellie,\" he groaned breathlessly.\n\nI ignored him, biting my lip as the woman in the video stopped stroking the man's cock, replacing her hand with her pussy. She ground against him, the thin piece of lace between them soaked within seconds, and the man whimpered beneath her as he fought back his orgasm. \n\n\"Just wait,\" she breathed.\n\n\"Mistress, please,\" he begged.\n\n\"Wait,\" she ordered.\n\n\"God, please... please, Mistress. I can't\u2014\"\n\n\"You can and you fucking better,\" she snapped, and she began rolling her hips faster. \"Don't you dare come, pet.\"\n\nI had a feeling she was purposely trying to make him fail. I was more certain of that when ropes of cum soaked the semi-sheer fabric and coated his stomach as she grinned wolfishly. \n\n\"You know what that means,\" she purred.\n\nApparently, that meant stripping the ruined panties off and making him clean the mess with his mouth, then pulling on a long pair of gloves that matched her corset and boots before lubing up a finger and pushing it into his ass. My eyes widened as she started fingering him, his cock hardening as she plunged a second finger in his ass. It was starting to seem like he might come again when I was distracted by the sound of J.P. groaning beside me.\n\nI tore my eyes off the video and looked at him. He glanced back at me, his face flushed, his breath coming in those quick gasps that told me he was getting close. Meanwhile, I was still fully dressed, my panties soaked and my nipples painfully hard.\n\n\"Not yet,\" I said.\n\nJ.P. laughed breathlessly, the sound strained as his cock twitched in my hand. \"I might not have much of a choice, babe.\"\n\nHe didn't give himself enough credit. Once I'd stopped so I could stand on the bed to slide my panties off, he'd regained enough control to grab me and guide me onto my back. After shoving his pants down, he bunched the skirt of my dress around my waist and sank his cock into me. I brought my hand to my mouth, biting the base of my thumb to muffle the noise I made as he started to fuck me. It didn't do much, not when J.P. was so hard and I was so wet and his cock felt so fucking good. \n\n\"Come for me, babe,\" he instructed. \"Come on, Nellie.\"\n\nAnd despite the fact that I was getting off on the idea of being in charge of him, I did as he said. Distantly, I hoped that the last lingering baby shower guests had left, or at the very least, that I'd managed to muffle my cries enough that no one heard us. I had no idea how loud I'd been; J.P. had this funny way of making me lose myself, of using his cock to separate my mind from my body and turn me into a mess of quivering limbs and pulses of pleasure. \n\nJ.P. did a better job of keeping quiet, which I only knew because I was coming down from my orgasm as his began. He groaned in my ear, a low, rumbly sound that I swear could have made me come all on its own, and shoved himself harder and harder inside of me until I felt his cock start to spasm. Wave after wave of cum spilled in my pussy as he gasped, his breath hot against my cheek. I clung to him, enjoying the feel of his body pinning mine to the bed and the way his arms held me in place.\n\nHe rested heavily against me after he came, my pussy still enveloping his cock. Then, moving carefully, he shifted so he could sit back and I could straddle his lap with his arms around me. My dress blanketed our laps, hiding that his cock was still inside me as I leaned against his chest.\n\nThose moments were some of my favourites. J.P. knew that; I'd told him it was because I usually fucked him so good, he was finally quiet for a while, but it was more than that. Those moments were the moments we communicated best, even if we weren't speaking; those moments were the ones where I was certain he knew how much I loved him, even if I didn't say it out loud as often as I should. \n\nWe stayed that way, silently content as we held each other, until J.P.'s cock began to soften. Before it slipped out of me, I shifted so it stayed in place, but the movement broke that peaceful haze around us.\n\n\"So that was new,\" I said as I settled against him.\n\n\"What was new?\"\n\n\"Oh, you know, just the sex we've had eight thousand times.\" I rolled my eyes, even though he couldn't see me. \"The video, genius.\"\n\n\"Well, yeah. I don't usually rewatch them. I mean, once I know how it ends, the plot kind of loses its appeal.\"\n\n\"I don't know about that. I might rewatch that one once or twice. I mean, there was a lot going on.\"\n\nHe nodded sagely. \"Ah, yes. One of those ones that you have to see again to catch all the little details. Like Memento or something.\"\n\n\"Exactly. It was a bit of a mindfuck, you know?\"\n\n\"I think it was more of a regular fuck, but whatever floats your boat, babe.\"\n\nI raised my eyebrows at him. \"Really? You consider that to be a 'regular' fuck?\"\n\nHe tried to keep his face blank, but failed as the corners of his eyes crinkled. \"Why, what was so unusual about it?\"\n\n\"I mean, the whole chained-to-the-bed, fingers-up-the-ass thing was new.\"\n\n\"I've put my fingers up your ass many a time.\"\n\nI glared at him. \"You are infuriating.\"\n\n\"You love it.\" He stole a kiss before I even knew what he was doing. \"And you're infuriating too, for the record.\"\n\nI faked offense. \"Me?!\"\n\n\"Yes, you.\" He nipped at my bottom lip. \"Instead of just asking the question I know you want to ask, you're talking around the thing like you're trying to be all clever.\"\n\n\"And what question do you think I want to ask?\"\n\nHe flicked an eyebrow up at me and didn't say anything. He didn't need to; I knew him well enough to know what that eyebrow was saying. The memory of the man's cock pressed against his stomach by the waistband of the lacy panties flashed in my mind and I felt heat rise in my cheeks. \n\nI wanted to know why he'd never told me he liked that sort of thing. Why, after all this time and all the things we'd talked about and tried, the idea of tying him up and having my way with him had never come up. In fairness, it hadn't come up the other way, either; he had never asked to tie me up or anything. Part of it was because he didn't have to. It was almost pathetic how he could take over me, how the entire world knew me as a person who said what she wanted to say and did what\u2014and who\u2014she wanted to do, but J.P. could simply take from me without so much as a second thought.",
        "And I loved it. I fucking loved that he couldn't get enough of me, that I could tease him all I wanted, but he'd eventually get his way. He may have to work for it, but he'd get there because I wanted it as much as he did. It was never a matter of doing something I didn't want to do. I trusted him completely and that meant I knew if I told him something wasn't right, he'd listen and stop. \n\nBut that had never happened, and I very much doubted it would. He knew every bit of me intimately; he knew what I liked and was in tune with what I didn't, which wasn't much.\n\nThis, though.\n\nThis was new. This was a different dynamic than our dynamic. And part of me liked it; part of me wanted to know if he wanted me to do those things to him.\n\nWell, some of them. I was pretty open-minded, and stuff like playing with his ass or making him wear panties or sitting on his face didn't throw me off, especially since I'd definitely sat on his face before. But part of me didn't want to do it, either. He might be a bastard, but I had no desire to hurt J.P., or degrade him, or humiliate him. \n\nNot that humiliating him was easy. It was hard to humiliate someone who didn't seem to feel shame, and J.P. barely got embarrassed about anything. He proved as much when, before I could ask the question he thought I wanted to ask, my bedroom door flew open and a whirlwind of energy wrapped in a designer gown blew into my room.\n\n\"Cherie, are you almost ready for dinner? My mother said you and Jean-Paul should\u2014oh!\"\n\n\"Anne-Marie,\" I said tiredly, glancing at J.P.'s sister. \"Have you ever heard of knocking?\"\n\nShe leaned against the doorframe, grinning maniacally at us, as she tended to do whenever we \"proved her right\" about being the perfect couple she'd always thought we would be. \n\n\"Nellie, cherie,\" she said, amusement threaded through her voice. \"Are you incapable of keeping your hands off my dear brother for any significant length of time?\"\n\n\"Don't put ideas in her head,\" J.P. said before I could say anything. \"I'd like her to keep her hands on me for all lengths of time.\"\n\n\"Disgusting,\" Anne-Marie giggled. \"All that baby talk put you in the mood, did it, cherie?\"\n\n\"Oh, fuck off,\" I muttered. \"It did not.\"\n\nShe smiled knowingly. \"Whatever you need to tell yourself. In any case, before you get too deep into things, my mother asked if you two were ready for dinner, because for some reason she is incapable of walking next door on her own and so wants us all to walk over together. So come on, you can practice making a little niece or nephew for your new baby sister or brother after we eat.\"\n\n\"Anne-Marie\u2014\"\n\n\"Nellie, please,\" she sighed dramatically. \"My mother is getting restless. You know she hates being around when the caterers begin to clean up after a party.\"\n\nI felt J.P. shake, which made his cock twitch inside me, and I struggled to hold back a giggle. \"Fine. We'll meet you downstairs in a few minutes.\"\n\n\"If I walk away, I know what you two will do. Just come now.\"\n\nThere was a heavy silence. J.P.'s shoulders shook again.\n\n\"Don't,\" I warned, though it was too late.\n\n\"We already have,\" J.P. said at the same time. \"So unless you want to see what's under her dress when she moves off my lap\u2014\"\n\n\"Oh my God!\" Anne-Marie shrieked, but she was giggling hysterically at the same time. \"Are you inside her right now?! Jean-Paul, you little manwhore. You two are awful.\"\n\n\"You're the one who barged in without knocking,\" I pointed out.\n\n\"Just hurry up and take my brother's dick out of you so we can go to dinner,\" she huffed unconvincingly before closing the door.\n\nI hurried off J.P.'s lap, not because Anne-Marie was waiting but because he was still inside me, and him laughing while he was inside me was one of those weird things that I absolutely loved. And since J.P.'s sense of humiliation was irreparably broken, his sister walking in on us having sex was hilarious to him rather than embarrassing. \n\n\"Is it weird how involved in our sex life she seems to be?\" J.P. asked as I slid off his lap and crossed the room.\n\n\"Completely.\" I rooted through my bag for a dinner outfit that wasn't a designer gown I'd been fucked in. \"Almost disturbingly so.\"\n\n\"Good, it's not just me.\" He stood and did up his pants. \"See, this is why I had to stop watching step-sibling porn. It's all Anne-Marie's fault.\"\n\n\"Oh, is that why you were watching some guy get his balls slapped around?\" I asked lightly as I changed. \"Your porn options are too limited now?\"\n\n\"Yep,\" he said cheerfully. \"That's it, babe. Too much step-sibling porn plus not wanting to rewatch stuff I've already seen equals dominatrix porn. It's basic math.\"\n\n\"Look at you, doing math. And here I thought you were a boring old lawyer.\"\n\nHe came up beside me as I finished buttoning my jeans, sliding his arm around my waist.\n\n\"I have a multitude of talents,\" he whispered, then captured my lips again. \"Like pinning you to the bed and making you scream my name. And eating your pussy until you scream my name. And fucking you in the ass until you\u2014\"\n\nI rolled my eyes. \"I don't scream your name that much. But since you're doing the math anyway, what percentage of watching that video was because it was something you would want to try?\"\n\nJ.P. smirked against my lips. \"I think that's something we should talk about when it's less likely for my sister to barge in on our conversation and demand we go to dinner. Unless you're into her, in which case\u2014\"\n\n\"Oh my God, you've got to be\u2014\"\n\n\"\u2014I'm going to put a hard limit on involving my sister even further in our sex life,\" he finished. \"I love you, babe, but not that much.\"\n\nThe redness of my face must have told him that it was yet another thing we agreed on, since I didn't have a chance to tell him I had zero interest in hooking up with his sister when she flung my bedroom door open yet again.\n\n\"Will you two stop sticking your tongues down each other's throats for five seconds so we can go, please?\"\n\nJ.P.'s eyes glinted mischievously and without so much as a warning, he gave me the wettest, sloppiest, tongue-down-my-throatiest kiss he'd ever given me. As both Anne-Marie and I gagged, he straightened up and grinned.\n\n\"All right, let's go to dinner.\"\n\n**\n\nWe didn't end up having that conversation.\n\nDinner with his parents went well. It was the best dinner I'd had with his family, actually. His dad only insinuated I was ruining J.P.'s life once and actually seemed interested when he asked what my plans were after graduation. That probably had a lot to do with me mentioning one of the forensic labs I was interested in working for was in Montreal, where the law firm he was still trying to talk J.P. into returning to was located.\n\nBut still, it was progress and was also why I didn't mention there were labs in Ottawa and Toronto I was looking into. And that was if I decided to go with the government-run facilities; there were a few private organizations I was still thinking about.\n\nIn any case, it meant that we stayed at his parents' place a little longer than we thought we would and consumed a little more wine than we had intended, so we couldn't manage much more than a sloppy-but-satisfying fuckfest when we returned to my bedroom at my dad's place. The effects of the wine lingered into the next day, so despite our drive back home being the perfect time to discuss important things like me tying him to the bed and making him wear my panties, neither of us were in the right state of mind to do so. He dropped me off at my apartment and hung out for a bit, but had to go back to his place that night seeing as he needed clean clothes and a shower.\n\nThen the weekend ended and J.P. went back to work, where a new case was consuming his life, while I went back to school, where midterms were consuming my life. We tried to make time for a couple of hasty hookups throughout the week, but between our schedules and general exhaustion, we only managed to see each other once. When the weekend rolled around, J.P. remembered that he'd committed to going to a workshop in Toronto. I would have gone with him, seeing as my mom lived there, but she'd gone off to Mexico to meet up with some guy she met in Vegas a few months earlier. \n\nIt wasn't that big a deal. Life got busy. Anyone who was anyone knew that, and it's not like either of us was the clingy type. Still, after I wrote my final midterm on Friday, I was kind of bummed that not only had I not seen him for most of the week, but that J.P. was leaving for the airport right after work and wouldn't be around to celebrate with me.\n\nThe moment I had that realization was a mini record-scratch moment. The last time I'd gone through midterms, J.P. and I hadn't even officially started dating and I was still highly resistant to the idea of being in any sort of relationship with anyone. Just a few months later, I was missing him intensely, and what was worse was that I didn't even seem to mind that I felt that way.\n\nThat said a lot of things, and it had already been a long and busy week so I didn't really want to think about what that meant. Instead, I asked my best friend, Sydney, if she wanted to go out that Friday and celebrate the end of midterm week at Lou's Pub. She, of course, did.\n\nAs did a number of our other friends.\n\n\"Nellie!\" Calvin said joyfully when Sydney and I walked up to the table. \n\n\"Hey! Long time, no see,\" I said as casually as I could, given that sitting directly beside Calvin was none other than Brandon.\n\nBrandon, who had watched me fuck his best friend, a.k.a Calvin.\n\nBrandon, who I'd given a blowjob to in a closet during a game of Truth or Dare.\n\nBrandon, who I'd taken home with me that night after indulging in his fetish for voyeurism.\n\nBrandon, who I'd tried dating for a few weeks and broke up with because I didn't do relationships, then proceeded to spend the next six months or so getting into a relationship with J.P. \n\nI'd always felt bad about how things ended with Brandon. Not because I was particularly mean to him or anything, but because he was such a sweet guy. And for some reason, he'd really, really liked me. But we'd wanted different things: he wanted a girlfriend and I just wanted to fuck.\n\nAt least, I thought that's what I wanted.\n\n\"Hey, Nell,\" he said. \"How's it going?\"\n\n\"Good,\" I said, wishing that there were any other open seats at the table besides the ones directly across from him and Calvin. \"Really, uh, good. How are you?\"\n\nSydney gave me an apologetic look as she took the seat next to her roommate-and-unrequited-crush, Reid, leaving the one at the end of the table. Still, it wasn't in my nature to dance around awkward situations and it wasn't like I had to mention J.P. to him, so I resolved to have at least two beers and settled into the open spot.\n\n\"I'm doing good,\" Brandon said in his booming, cheerful voice. \"Finished my last midterm today, so I figured that called for a beer or five.\"\n\n\"Tell me about it,\" I agreed. \"Speaking of, I should probably go order a drink at the bar, hey?\"\n\nCalvin rolled his eyes and shoved the pitcher of beer in front of him and Brandon towards me. \"Help yourself. You buy the next round and we'll call it even.\"\n\nI raised my eyes at Brandon. \"Is that cool with you?\"\n\nHe grinned beneath his wild, bushy beard, a genuine smile that seemed to fill the small pub with warmth. \"Of course.\"\n\nI shrugged and grabbed the pitcher and a glass. \"I just wanted to make sure. I mean, I'd get it if it wasn't. No offense taken.\"\n\nBrandon shook his head. \"Full disclosure? I was kind of a mess after you ended things. But that wasn't about you, it was about how I handled it, because you were right. We weren't right for each other and I get that now. So if you're cool with it, let's be friends. Or at least beer buddies.\"\n\nI grinned as I lifted my pint to him. \"That sounds fucking fantastic.\" \n\nHe raised his own glass and clinked it against mine, and we each took a long drink. It was while I was drinking that I felt another pang of guilt and realized if Brandon was being totally open and honest, I should be, too. I finished my sip and sighed, putting the glass on the table.\n\n\"Full disclosure?\" I said, staring at my beer. \"I should probably tell you I'm, um, seeing someone.\"\n\n\"I thought you didn't do relationships,\" Calvin piped up.\n\n\"I don't. Didn't.\" I glanced at Brandon. \"I know when we broke up I said I wasn't looking for that and I wasn't, I just... I kind of met someone and\u2014\"\n\n\"You don't have to justify it to me,\" he interrupted. \"Seriously, Nell. I wasn't the right person to make you consider a relationship, and that's cool. I learned a lot about myself because of you. Just because it didn't work doesn't mean it didn't work out in the end.\"\n\nI studied him. Things hadn't ended horribly, but I'd felt awful about how upset he'd been for ages. Sure, he could've simply matured in the past few months and gotten over me breaking his heart, but honestly, how often does that actually happen?\n\nSlowly, it dawned on me, and a half-smile started creeping up my face.\n\n\"You're seeing someone,\" I declared.\n\nSurprise flitted across his face, and then he laughed. \"Uh... yeah. Guilty.\"\n\n\"That's awesome,\" I said. \"Tell me about her! What's her name? How'd you meet?\"\n\n\"We met online, sort of. In a local Dungeons and Dragons group. And then ran into each other a couple of times at different game nights, got talking and one thing led to another. And, well... uh...\" He glanced at Calvin, who nodded encouragingly, and then cleared his throat. \"His name's Matthew.\"\n\nI don't know if he expected me specifically to be shocked or surprised that he was dating a man, given the way we'd first met, or if he was still just nervous about admitting it. Either way, it didn't matter; I grinned and raised my drink again to clink it against his. \"He sounds perfect for you. Do you guys ever get anything done or is it D&D, all day, every day?\"\n\nA small patch of pink appeared on his cheeks above his beard, but he was grinning. \"We manage to find time for, uh, other things.\"\n\n\"I bet you do. What's he like?\"\n\n\"He's amazing,\" Brandon said earnestly. \"You'd like him, I think. He's got a really dry sense of humour and\u2014\"\n\n\"\u2014and he's super kinky, so you have that in common,\" Calvin added.\n\n\"Dude,\" Brandon said exasperatedly as I cackled.\n\n\"What?\" Calvin replied, leaning forward as if to pretend he was creating some semblance of privacy. \"If there's anyone you can talk to about this shit other than me, it's Nellie.\"\n\nI grinned. \"Yes, please tell me.\"\n\nBrandon laughed uncomfortably. \"I don't think I've had enough beer for that.\"\n\n\"Fair,\" I said, and poured the rest of the pitcher in his glass.\n\n\"Well, in the meantime...\" Calvin wiggled his eyebrows at me. \"What about you, Nellie?\"\n\nI took a sip of beer. \"What about me?\"\n\n\"Come on. How'd this guy get you in a relationship?\"\n\nI put up with their good-natured razzing for a bit before caving. \n\n\"His name is J.P. I was friends with his sister growing up and he lived next door.\"\n\nCalvin looked skeptical. \"That's it? That's how you met?\"\n\n\"What more do you want?\"\n\n\"Well, I mean, Brandon and Matt had a way more interesting story with this whole roleplay thing that got out of hand and\u2014\"\n\n\"Dude!\" Brandon said again, his face turning red.\n\nI pointed a finger at Brandon. \"Keep drinking. I need to hear this story.\" Then, I turned back to Calvin. \"Yes, well, he was the first guy I ever fucked.\"\n\n\"Mm,\" said Calvin, unimpressed.\n\n\"And I didn't tell him I was a virgin.\"\n\n\"Mmm,\" he said again, sounding slightly more intrigued.\n\n\"Until I was sitting on his dick. And then he fucked the hell out of me and made me realize how awesome sex was, which turned me into the lovable whore sitting in front of you.\"\n\nBrandon choked on his beer, and though he managed to keep most of it in his mouth, some of it ended up in his beard. He grabbed a napkin to wipe his face.\n\n\"When was this?\" he asked. \"'Cause I'm ninety-nine percent sure you weren't a virgin when we were together, so\u2014\"\n\n\"Just after I graduated high school,\" I said. \"And then his sister almost caught us since I was only in his room because she was in her room getting fucked by her boyfriend, and they finished up so she came to find me. So I managed to keep her from seeing us, but I didn't get to talk it over with J.P. or anything. I didn't see him again until last summer.\"\n\n\"And you started dating him?\" Calvin asked.\n\nI snorted and gulped my beer. \"Not even. We started dating in the fall.\"\n\n\"He had to wear you down a bit.\" Brandon grinned. \"He must've been pretty convincing.\"\n\n\"Yeah, well, he is a lawyer, so...\"\n\nCalvin snorted. \"You went from 'relationships are evil' to 'monogamous relationship with the lawyer next door'?\"\n\nI raised my eyebrows at him. \"Who said we were monogamous?\"\n\nBoth men stared at me. It was almost funny, watching the wheels turn.\n\n\"I mean, right now, we sort of are,\" I continued. \"But it's on the table to be... you know. We can explore things.\"\n\n\"So he's as kinky as you are,\" Brandon said.\n\n\"Maybe a little more, actually.\"\n\n\"Seriously?!\" Calvin said again.\n\n\"I'm not all that kinky, apparently,\" I said. \"I mean, I'll try pretty much anything but in terms of actual kinks, I... well.\"\n\nThe memory of the video J.P. and I watched after the baby shower floated into my brain. Again, I felt that warm thrill as I remembered the man coming in the lace panties and the confident, unshakeable way the woman had commanded him. I frowned, staring down at my glass as I started to realize why I'd never asked J.P. the question we both knew I'd wanted to ask, and more importantly, the question that had been nagging at me without me even realizing it.\n\nThe waitress chose that moment to return to the table and Calvin ordered another pitcher, even though it was definitely my turn to get the next round. As soon as she walked away, both he and Brandon leaned forward again.\n\n\"What's bothering you?\" Brandon asked.\n\nI sighed. \"The other day he was watching this video and it was super hot, but I'd never even considered trying it. I didn't even know it was something he might be into. And that bugs me. Being kinda crazy about sex is my thing.\"\n\n\"Wait, you caught him watching porn?\" Calvin asked.\n\nI shrugged. \"I was at a baby shower and he was bored. I caught the end of it with him.\"\n\nBrandon started laughing and shook his head. \"What was so kinky about it?\"\n\nI suppose I could have given a vague explanation of the video's premise. I mean, I definitely didn't have to get into the specifics of what we'd watched when I could have just said it was a dominatrix and a guy tied to a bed. \n\nBut where was the fun in that?\n\nCalvin's face started going red before I even got to the part where she'd made the man wear her panties. I thought he was embarrassed or maybe turned on, but once I started describing how she'd punished the man by fingering his ass, he almost howled and slapped Brandon's arm.\n\n\"Dude, you gotta tell her!\" he exclaimed.\n\nI glanced at Brandon, who was biting back a cautious smile. \"Tell me what?\"\n\nHe glanced around the table, where no one was paying any attention to us. Even Sydney was sitting with her back to me, engrossed in a conversation with Reid. When he was confident no one else was listening, he scooted his chair as close to the table as he could.\n\n\"So, full disclosure?\" he asked quietly. \"Matthew and I are, uh... he's my Dom. So he'd kinda be like the woman in the video and I'd be, uh... the guy.\"\n\nThe revelation wasn't unexpected\u2014I knew Brandon was totally into voyeurism and it wasn't a surprise that he'd be into other things\u2014but I did try to hide some of my unexpected relief at finding someone I was reasonably close to that could possibly help me.",
        "\"That's... I have so many questions,\" I said. \"Did you just... did it just happen or was it\u2014\"\n\n\"It was literally during one of our D&D sessions,\" he said. \"Matthew's character was sort of flirting with mine and things kept escalating. Everyone at the table was laughing about it because... well. But when it finished and everyone was leaving, I stayed at the table 'cause I was just\u2014\" He stopped and cleared his throat. \"Standing up would've been revealing, let's just say that.\"\n\nRevealing was right. I knew what Brandon's cock looked like and I knew damn well it couldn't be that easy to hide it. I tried not to giggle, but when he caught my eye and grinned, I couldn't help it.\n\n\"Which Matthew figured out, even though you thought you were being so subtle,\" Calvin added.\n\n\"Yeah, well, I wasn't exactly functioning at full brain power,\" Brandon said. \"But I was kinda confused 'cause I'd never... I mean, he was another guy and I was hard as a rock because of him. But not bad confused,\" he added hurriedly. \"Just like... I'd considered it before but never actually thought... whatever. Anyway, everyone left and I was hoping Matthew would go to the bathroom or something so I could at least adjust my dick without being super obvious, but he just kept sticking around.\"\n\n\"Because he knew you were turned on?\" I asked.\n\nHe chuckled and nodded. \"Finally he came back to the table and sat beside me. Called me oblivious and told me that he liked me and had for a while, and that if I wanted to 'keep playing,' he'd be into that.\" He took another sip of beer and shrugged. \"That was that. I was hooked. We spent the rest of the day 'playing,' as he calls it, and the next day I had a boyfriend.\"\n\n\"A love story for the ages,\" Calvin said. \"He failed to mention that he showed up at my place that night and freaked the fuck out.\"\n\n\"You did?\" I asked.\n\nBrandon nodded. \"It was a lot at once, you know? He was the first guy I'd been with but I kinda felt like I hadn't been with him because we were roleplaying and I'd never been... I mean, he was unquestionably in charge. And I liked that, but I was confused and nervous and thought if I told him what I was feeling, he wouldn't want to... well.\" He looked at me meaningfully. \"I thought maybe he'd think I wasn't kinky enough for him or something, and I didn't want that to happen because I liked him a lot.\"\n\nIt was like looking into a mirror, if that mirror had a filter that gave me a man's body and a bushy beard and didn't at all work the way a mirror should. But emotionally, I completely understood what he was saying.\n\n\"What happened after you freaked out?\" I asked.\n\n\"I told him he was a fucking moron,\" Calvin said. \"And also that Matt was a piece of shit.\"\n\n\"Wait, what?\" I asked. \"I thought you liked him.\"\n\n\"Yeah, now, but I mean, you know I'm totally into kinbaku. Or shibari, or whatever you want to refer to it as.\" Calvin glanced at Brandon. \"Similar sort of thing. Anything to do with bondage or power dynamics should have way more discussion and explicit consent. If Brandon was feeling so out of it that he came to me in that state after they 'played,' that means Matt fucked up.\"\n\n\"In fairness to Matthew, I may have exaggerated how experienced I was with, uh... well.\" Brandon looked uncomfortable as he sipped his beer. \"Look, I didn't explicitly lie to him, but I didn't tell him I was in over my head. And after Calvin got my head on straight, I came clean with Matthew and he was a bit pissed that I hadn't told him but mostly upset that I'd left feeling like that. And we had a long talk about communicating and expectations and what we wanted from each other and it just...\" \n\nThe look on his face gave me a warm sort of feeling. His eyes were soft and he had an almost-dopey smile that showed how enamoured he was with his boyfriend. \n\n\"Once we laid it all on the table, I stopped worrying that I wouldn't be enough for him,\" he continued. \"He told me what he was into and I got to decide whether or not it was stuff I'd be open to exploring. And if it wasn't, then it wasn't, and we'd go from there.\"\n\nThe key was that I'd have to talk to J.P. about it. That was the point Brandon and Calvin were both trying to make, and that made sense. The problem was that I still wasn't exactly sure of how to go about it. Luckily, both of them were all-too-happy to share their thoughts.\n\n\"Communicate, communicate, communicate,\" Calvin instructed.\n\n\"Pick a safeword. Respect the safeword. Always obey the safeword,\" Brandon said. \n\n\"Aftercare. So much aftercare. Even if you're not into pain or whatever, shit can get intense.\"\n\n\"Get a few toys. And a sexy outfit. And so much lube.\"\n\n\"But make sure you buy decent toys. Restraints that don't restrain are useless at best and dangerous at worst.\"\n\n\"If you're gonna play with his ass, make sure he cleans up first. And make sure he enjoys it before you invest in a strap-on or something.\"\n\n\"Seriously, lube is your friend.\"\n\n\"Be sober.\"\n\n\"Decide how far out of the bedroom this goes ahead of time.\"\n\nThere was a lot to consider. An overwhelming amount to consider, actually, but once I got them talking, it was kind of hard to get them to stop. Over a third pitcher of beer, they dissected the ins-and-outs of my relationship with J.P., asking questions about the dynamics and the things we'd tried and why I hadn't thought of doing something like this before, and how much it had thrilled me when he called me Miss and asked me politely to stroke his cock.\n\n\"So you think I should do it?\" I asked. \"Tell him I want to... what do I even say? 'Hey, J.P., I wanna dominate you'?\" \n\nBrandon raised his eyebrows and tilted his head from side to side. \"I mean, that'd do it for me.\"\n\n\"Here's what you do,\" Calvin said, a splash of beer spilling from his glass as he knocked it. \"First, you tell J.P. you're gonna sex him up. Then, you're gonna go to the toy store and get yourself the necessities.\"\n\n\"What are the necessities?\"\n\n\"Lube,\" Brandon said immediately.\n\n\"Restraints,\" Calvin added.\n\n\"Stuff to tease him with.\"\n\n\"Hot outfit. Sexy panties. High heels.\"\n\n\"Ooo, stockings!\" \n\n\"Oh, fuck yes!\" Calvin exclaimed. \"This J.P. is gonna be one lucky bastard, Nellie. You can tell him 'you're welcome' from us.\"\n\nWhen all was said and done, my head was spinning\u2014from the conversation as much as it was the alcohol\u2014but I walked out of the bar with a list of things to purchase and stuff to try and rules to abide by. As we were leaving, Brandon put an arm around my shoulder.\n\n\"Are you doing this for you or for him?\" he asked me as we stumbled to the exit.\n\n\"What d'you mean?\"\n\n\"Being a top. Is it something you actually want or are you just trying to keep him happy? 'Cause if it's the second one, it's not gonna go well.\"\n\nAn image of J.P. tied to my bed with his arms bound and possibly a tiny pair of panties encasing his cock flashed in my mind, so clear and so sudden that I felt my heart hiccup and heat rise on my face.\n\n\"Do I look like the kind of person who would do something just because he wanted me to?\" I replied.\n\nBrandon grinned and hugged me a little closer. \"That's the spirit, Miss.\"\n\n**\n\nI broke the \"be sober\" rule immediately after I got home.\n\nIn fairness, I didn't intend to. It wasn't super late, but I assumed J.P. would either be out with his colleagues because he needed to fulfill the time-honoured lawyer tradition of schmoozing every time he went anywhere, or he'd already be in bed because he was old and boring when I wasn't around.\n\nAlso in fairness, I didn't entirely think out what I was typing before I texted him.\n\nI need to talk to you.\n\nI put my phone down, grabbed a water bottle from my fridge, and proceeded to begin pounding it back so my hangover would hopefully be manageable the next day. Before I'd even managed to chug half of it, my phone began vibrating on the counter. I took a final swallow, wiped my hand on the back of my mouth, and picked it up.\n\n\"I thought you'd be asleep, old man,\" I answered.\n\n\"Really? So you intended for me to spend the entire workshop panicking about why we need to talk?\" J.P. asked skeptically over the sound of music and people talking in the background.\n\n\"What?\" I asked. \"Why would you be panicking?\"\n\n\"Oh, I dunno,\" he said, his voice unnervingly light. \"It might be that I've never received a text that said 'I need to talk to you' and after attempting to break up with me an average of three times a week since we got together, I thought this might be one where you were serious.\"\n\n\"No, I just need to talk to you about a sex thing.\"\n\nHe made a noise that was both dry and relieved. \"Jeez, Nellie. It's a good thing I love you.\"\n\n\"You were seriously worried?\" I asked incredulously.\n\n\"Enough that I walked away from one of the Associate Deputy Ministers from the federal Ministry of Justice to make this call.\"\n\n\"Oh.\" Guilt knotted my stomach. \"I'm sorry.\"\n\n\"Don't be. He's a pretentious prick. One sec.\" There was a swell of noise, cut off by the sound of a door closing. J.P. sighed. \"Sorry, was trying to get outside. Anyway, now that I know you're not dumping me, I should be thanking you for getting me out of there. Your timing is impeccable, babe.\"\n\n\"Hmm. So are you?\" I asked.\n\n\"Am I what?\"\n\n\"Going to thank me?\"\n\nHe paused, then that low little chuckle that made my heart race floated through the phone. \n\n\"Thank you, my dear, sweet, amazing goddess of a girlfriend who managed to get me out of a dreadfully boring situation that she couldn't have possibly known I was in. I can hardly state how much your generosity and kindness means to me. You're the pinnacle of human decency and so goddamn sexy that I'm half-considering jumping on the next flight out of Toronto so I can come down there and use my tongue to show you just how grateful I am for your unplanned but coincidentally convenient interruption. There aren't enough words to express just how beautiful, powerful, and smart you are, especially since what the fuck, Nellie, you never let me get away with saying this kind of shit for so long.\"\n\nI stifled a giggle. \"Maybe I decided I kinda like hearing how amazing you think I am.\"\n\n\"Is that so?\"\n\n\"Mm-hmm. In fact, I think you should do it more often.\"\n\n\"Yeah? What's in it for me?\"\n\n\"Funny you should ask,\" I said.\n\nJ.P. burst out laughing. \"I fucking knew it.\"\n\n\"Knew what? That there was something in it for you?\"\n\n\"Well, no,\" he replied. \"But that there was some reason you wanted to talk.\"\n\n\"Wow, you figured that out all on your own after I texted you saying I wanted to talk and then proceeded to tell you what it was regarding approximately ten seconds ago? Move over, Einstein.\" \n\n\"Ha, ha,\" he said. \"Are you drunk?\"\n\n\"Of course not. I only had like, a third of all three of those pitchers of beer we had.\"\n\n\"Mm. So a full pitcher of beer. What'd Syd drink?\"\n\n\"I dunno. She was talking to Reid the whole time.\"\n\n\"So who'd you drink the beer with?\"\n\n\"Brandon and Calvin.\"\n\n\"Don't think I've met them.\"\n\n\"You haven't. Calvin's the one I fucked when we were playing Truth or Dare that one time and Brandon's the one I gave a blowjob to in the closet on the same night and then tried to date for a few weeks.\"\n\n\"Nice. So Brandon got over the whole breakup thing?\"\n\n\"Yep. He's seeing someone. We're beer buddies now.\"\n\n\"And what do beer buddies talk about over three pitchers of beer?\"\n\n\"Sex. Which is why we need to talk.\"\n\nJ.P. laughed again. \"Okay, babe. I'm intrigued. What are we talking about?\"\n\nAnd just like that, my tongue was tied.\n\nI knew what I wanted to say. I knew what Brandon and Calvin had told me to say. But in the moment, faced with actually saying the words, I hesitated, suddenly worried about what J.P. would think.\n\nAnd then I mentally kicked myself for letting what J.P. might hypothetically think stop me, so I blurted it out anyway. Or, well, I tried to blurt it out. What I actually said was:\n\n\"I wanna do the thing like what that woman did in the video.\"\n\n\"What?\"\n\n\"The video,\" I clarified, my face burning. \"That you were watching. With the... the...\"\n\n\"The porn we watched together last weekend at your dad's?\"\n\n\"Yes. I want to... to dominate you.\"\n\n\"Yeah?\" J.P. asked, amusement floating through the phone.\n\n\"Yes,\" I said firmly. \"I mean, I don't want to hurt you or slap your balls around or anything. Unless you want that.\"\n\n\"Nellie, babe, let me be completely, thoroughly, one-hundred-percent clear,\" he said. \"Absolutely fucking not.\"\n\n\"Good.\" I fidgeted with the water bottle I'd put on the counter. \"But I wanna do some of the other stuff she did. Like tie you up. And not let you come unless I say so. And maybe make you wear my panties.\"\n\n\"I see,\" he said. \"And what about the stuff at the end?\" \n\n\"What stuff at the end?\"\n\nHe started laughing, but lowered his voice. \"Look, if you're planning on sticking stuff in my butt, I'd like to know about it ahead of time.\"\n\nHeat rose in my cheeks. \"Do you want me to stick stuff in your butt?\"\n\n\"I mean, I'd be open to that.\"\n\n\"If you're not into it, I'm not going to do it. That's like, Domme rule number one. Consent and... and all that stuff.\"\n\n\"Oh, so you're a Domme now?\" \n\n\"I'm gonna be.\" I bit my lip. \"If you wanna try it.\"\n\n\"Babe, honestly, besides having my balls literally busted, I'm willing to try whatever you want,\" he said frankly. \"You wanna tie me up, put your panties on me, choke me, sit on my face? Give it a shot. You know I'm game to at least try most things.\"\n\n\"What about me telling you what to do?\" I asked.\n\n\"You can tell me what to do all you want.\"\n\nI felt that familiar heat pooling deep in my stomach, a tingle of excitement dancing across my skin and down my spine.\n\n\"Okay. When?\"\n\n\"When what?\"\n\n\"When can we do this?\"\n\nHe let out a soft breath. \"Well, considering you were excited enough by the idea of it to scare the shit out of me with a 'we need to talk' text and the fact that I'm gonna have to sit out here flexing my thighs for a while before I look respectable enough to go back inside, I'm gonna say... soon?\"\n\n\"How soon?\"\n\n\"My flight gets in mid-afternoon on Sunday.\"\n\n\"Sunday night?\"\n\n\"Your place or mine?\"\n\n\"Mine. I'll tell you what time to be here.\"\n\nHis voice was practically dripping, which meant I was practically dripping. \n\n\"It's a date, Miss.\"\n\n**\n\n\"What about this one?\" I asked.\n\nSydney looked at the package I was holding and raised her eyebrows. \"You don't think it's a little... big?\"\n\nI snorted. \"It's not that big.\"\n\n\"I mean, it says right there 'Not for Beginners' and you said J.P.'s never had anything in his ass before so...\"\n\n\"True.\" I sighed and put the butt plug back on the shelf. \"But it's pretty.\"\n\n\"The smaller ones are pretty too,\" Sydney said. \"But I'm pretty sure the point isn't how pretty it is.\"\n\n\"No, but it helps.\" I picked up a smaller butt plug with a clear jewel set in its base. \"What about this one?\"\n\n\"Just get these, Nellie.\" She picked up a pack of three functional-yet-boring silicone butt plugs in various sizes. \"You don't even know if he'll like it yet, and he didn't actually say he'd be into wearing a butt plug at all.\"\n\n\"I know, but I want to be ready.\" I put the jewelled butt plug back sadly. \"And if he doesn't, it's not like I wouldn't use it myself. But according to Brandon, he'll probably like it.\"\n\nShe rolled her eyes. \"And Brandon's suddenly the final word on everything? He doesn't even know J.P., let alone if J.P. likes it in the ass.\"\n\n\"Oh, so we're introducing our partner to the joys of prostate stimulation?\" came an ethereal voice from behind us.\n\nI turned to see a beautifully androgynous person approaching us. They were tall and wiry with wildly frizzy hair tucked beneath a silk scarf. There was a hoop through the middle of their nose, two hoops through their bottom lip, and approximately eight thousand tiny hoops in each of their ears in addition to the large gold hoop on each earlobe. \n\nI decided their name was Hoops.\n\n\"Sort of,\" I said.\n\n\"Oooh, do tell.\" They sidled up beside us, leaning against the shelf. \"I love hearing the shenanigans people get up to.\"\n\n\"Do you?\" Sydney asked warily.\n\nHoops smiled and winked. \"Not like that, but yes. More people need to explore their sexuality and discover all the ways we can experience bliss. It may be sex, but it doesn't have to be sexual.\"\n\nSydney and I exchanged looks.\n\n\"What?\" Sydney asked.\n\nThey smiled airily. \"We can speak about sexual things without it being about titillating ourselves. Much like if we were speaking about a love of sports or an enjoyment of true crime, we would not necessarily want to play baseball or commit murder.\"\n\nThey were my kind of person, I decided, and grinned at them. \"Makes sense.\"\n\nA bright look lit up their face and they nodded toward the butt plugs Sydney was holding. \"So what is the purpose?\"\n\nI explained my plan to Hoops and they listened intently, then nodded in understanding.\n\n\"These are most certainly the best options for beginners,\" they said. \"But if I may make a suggestion?\"\n\n\"Suggest away,\" I said.\n\n\"Purchase this as well.\" They picked up a very pretty but rather large metal butt plug from the shelf. \"For the purposes of torment, implying that you are going to use this on him may be a fun way to tease. After consent is given, obviously. I would not suggest taking it too far, but\u2014\"\n\n\"Oh, he'll love that!\" I exclaimed, grabbing the butt plug from them as Sydney rolled her eyes.\n\n\"Excellent,\" they said. \"What else is on our shopping list?\"\n\nI may have gone a little overboard.\n\nWhen I had talked Sydney into coming with me to the little sex shop a few blocks away from our apartment building, I'd only intended to buy a few things: a butt plug, restraints, possibly a cock ring, and maybe a vibrator if I thought it was something I could use on myself sometime. I already had plenty of lube at home, I could make do with a scarf or something for a blindfold, and I intended to buy a cheap but sexy pair of lace panties from somewhere else.\n\nAfter all, it was going to be hard enough to explain the so-discreet-it-was-obvious charge on my credit card to my dad already.\n\nBut Hoops was simultaneously the best and the worst person I could have had helping me. They seemed to know everything and had far more fun ideas than I'd thought of myself.\n\n\"Feathers, if you think he'll enjoy being tickled. A perfect way to tease while avoiding pain.\" \n\n\"Certainly, you could use a scarf, but a blindfold will be more comfortable and less likely to slip.\"\n\n\"The more alluring a view we give, the more torturous losing sight will be. And the key to dominance is confidence in ourselves, so the sexier we feel, the better submission we can expect from our partner. Besides, the matching panties will look gorgeous on him as well.\"\n\n\"Think of how he will look in these. Muscles bulging, writhing beneath you, the cuff digging into his wrist as he strains to reach you. Buttery soft vegan leather and glistening, sweaty skin... you won't get the same effect with a tie or the basic set of restraints.\"\n\nEven Sydney wasn't immune to the enticing images Hoops was planting in our heads. The way they were describing the scene, it was like they were peeking into my mind and peering through my fantasies, as well as one or two or thirty explicit thoughts of J.P. in compromising positions.\n\n\"You should go with the vegan leather ones,\" Sydney agreed, her voice strangely husky, and I knew she'd never be able to look at J.P. quite the same way again.\n\nWhen all was said and done, I had a corset, a pair of stockings, heels that made my legs look a mile long and my ass look killer, four various sizes of butt plugs\u2014one for teasing purposes only\u2014a large peacock feather, a satin blindfold, two vibrators\u2014one bullet and one wand\u2014a small tub of whatever the fuck \"arousal balm\" is, nipple clamps, a set of cock rings, regular lube, flavoured lube, and three pairs of skimpy lacy panties, just in case.",
        "I drew the line at the cock cage, though.\n\n\"No way,\" I said when Hoops tried to talk me into it. \"That's more of a punishment for me than it is for him. I like his cock, that's the whole point of this.\"\n\nThe phone rang and Hoops excused themself. We were finished anyway, so Sydney helped me carry my various purchases up to the till, plus the little bullet vibrator Hoops had talked her into getting for herself. We began putting everything on the counter in front of a bored-looking man who was scrolling through his cell phone.\n\n\"Did you find everything you were looking for?\" he asked robotically.\n\n\"Yep.\" I plunked the final butt plug on the counter. \"Your other associate was incredibly helpful, thank you.\"\n\nThe man looked up and frowned. \"What other associate?\"\n\nI glanced at Sydney warily. \"Uh... the one that we were talking to for like... the entire time we've been in here?\"\n\n\"Ah,\" he said, nodding knowingly. \"Yeah, they don't work here.\"\n\n\"What?\" Sydney said, gaping at him.\n\nThe man held his straight face for a moment longer, then dissolved into obnoxious giggles. \"Nah, I'm just fuckin' with you. That's Hoops. They own the place.\"\n\n\"Wait, their name is actually Hoops?\" I asked.\n\nHe shrugged. \"I dunno. Everyone just calls them that on account of all the hoops.\"\n\n\"And here I thought I was so original.\"\n\n\"You should see them on the days they wear the hoop skirts. There's dildos flying everywhere because they can barely fit down the aisle.\"\n\nFar too much money later, Sydney and I each grabbed a heaping bag of sex toys and headed towards the exit. Hoops called after us and we waved, promising we'd come back to visit them when we needed more butt plugs, though between J.P. and me, we now had five, so it probably wouldn't be for a while. \n\n\"Is there anything else you need for tomorrow?\" Sydney asked as we began the trek back to our apartment building.\n\n\"I don't think so. Other than coming up with a safe word. And maybe a plan.\"\n\nShe raised her eyebrows. \"You don't have a plan?\"\n\n\"I have a rough idea,\" I said nonchalantly. \"I just need to brainstorm some of the details. And I guess talk to him first.\"\n\n\"Good.\"\n\nI snorted back a laugh. \"Jeez, Syd. What did you think I was going to do? Walk in there wearing the fuck-me stilletos, tie him to the bed, and immediately shove a butt plug up his ass?\"\n\n\"Well\u2014\"\n\n\"Seriously?!\"\n\n\"I'm just making sure!\" she protested. \"It's still all a little weird to me.\"\n\nI looked at her and frowned. \"Weird how? The idea of kink in general or\u2014\"\n\n\"No, no. That's not weird.\" She thought for a moment. \"Honestly? It's because it's hard to picture J.P. doing whatever you tell him to. I mean, when does he ever do what anyone tells him?\"\n\n\"When there's something in it for him,\" I said. \"Literally, in this case.\"\n\n\"You're so funny.\" She rolled her eyes. \"Look, it just doesn't feel like it's in J.P.'s nature to do as he's told.\"\n\n\"Syd, I have so many butt plugs. He's going to beg me to order him around.\"\n\n\"You think so?\"\n\nI scoffed. \"Of course. He's obviously into this. We wouldn't be doing it otherwise.\"\n\nShe sighed. \"Even with the fuck-me stilettos and an assortment of butt plugs and more lube than you know what to do with, I think you need more than a 'rough idea' if you want this to work. I mean, up until last week, you didn't even know this was something he was into. If it's something he's been fantasizing about, don't you think it would've come up before? I don't think he's going to obey your every command like you seem to think he will.\"\n\nI slung my arm around her shoulder as we walked. \"I appreciate the concern, but he and I talked about this and he explicitly said I could tell him what to do. I've got this under control.\"\n\nShe put her arm around me. \"If you say so.\"\n\n\"I do say so. And so did he.\"\n\n**\n\nJ.P. was a lot of things.\n\nHe was disgustingly attractive. Disgustingly. He could have easily been a model, and that wasn't an exaggeration. With his thick blond hair that somehow managed to fall perfectly in place, sparkling blue eyes that were as intense as they were jovial, and a face that straddled the line between chiselled and boyish in the best possible way, it was indisputable that he was gorgeous. \n\nHe was funny as fuck. No one could make me laugh quite like J.P. could, and somehow the fact that he was completely shameless worked in his favour. Nothing fazed him. Nothing embarrassed him. He was easy-going and mischievous and never took anything as seriously as he should.\n\nHe was too smart for his own good. Far too smart for his own good. As if it wasn't enough to be hot and hilarious, he had to go and be intelligent, too. And because that intelligence was paired with charming charisma and a strong moral compass that seemed almost unbelievable for someone who'd grown up with as much privilege as J.P. had, he was also a good lawyer.\n\nHe was a very good lawyer.\n\nAnd that was great for when he was working at his job as a lawyer.\n\nLess so in the bedroom.\n\nWe didn't have much time to talk on Saturday. His workshop finished late and then he was supposed to be attending another dinner event, but he called when he got back to the hotel so we could chat while he got ready. As much as I'd insisted that I had everything under control to Sydney, I'd spent a bit of time trying to at least make the most basic of plans for the next day.\n\n\"I don't know if I want you to tell me about them,\" J.P. said. \"I don't know if I have time to, uh...\"\n\n\"Do the five knuckle shuffle?\" I finished, and he snorted.\n\n\"Exactly. As much as I'd love to help put Mr. Kleenex's kids through college, I'm meeting Adrienne and Brad in a few minutes. Maybe you should send me a couple of nudes so I can give myself a low five later tonight.\"\n\nI opened my mouth to respond, then bit my lip as a smile spread across my face. \"No.\"\n\n\"No?\" he repeated, faux hurt filling his voice. \"You won't send me nudes?\"\n\n\"No, you won't be painting the ceiling in your hotel room,\" I said firmly.\n\n\"Says who?\" he asked indignantly.\n\n\"Says me,\" I replied. \"Don't you dare come tonight, J.P.\"\n\n\"Or what?\"\n\nI hadn't thought that far ahead. \"Do you really want to find out?\"\n\n\"Yeah, babe, I'd love to\u2014\"\n\n\"What did you just call me?\"\n\nHe went silent, then made a knowing sound. \"Yes, Miss.\"\n\nThat absolute rush of warmth filled me, even though I knew he was trying not to laugh. \"Good. No jacking off tonight.\"\n\n\"Whatever you say, Miss.\" \n\nI tried not to seem too pleased with myself as I made a mental note to tell Sydney that I'd told her so.\n\nWe hung up a few minutes later and I spent the rest of the night cleaning the new toys and laying out everything I needed for the next day. Initially, I'd considered telling J.P. to come to my apartment right away. When he arrived, he'd find a note telling him to strip and wait in my room until I was ready. And while the thought of that made me very much want to take a break to paddle the pink canoe myself, I knew it wasn't the right thing to do. At the very least, J.P. and I needed to make sure we had a safeword and a boundary or two. \n\nIt felt somewhat strange to have that conversation. I was far better known as the kind of person who jumped into things, but Brandon and Calvin had hammered the importance of it into my head. Besides, I didn't want to get into a situation like Brandon and his boyfriend did. I knew it was fairly unlikely I would do anything that J.P. didn't want, but I loved him and I didn't want to risk hurting him.\n\nThat was another mini record-scratch moment. I loved the damn bastard so much that instead of defaulting to my usual \"fuck it, let's see what happens\" attitude, I was actively making mature, responsible decisions. Even worse, I found that I didn't mind it at all. \n\nSo instead of a semi-cryptic note instructing my very good-looking boyfriend to strip down and wait for me, when J.P. arrived at my apartment the next day, I was sitting at my kitchen table waiting for him. As soon as he opened the door, I stood, and before it closed behind him, he had his arms around me and his lips on mine.\n\n\"Afternoon, Miss,\" he murmured against my mouth.\n\nI almost shivered.\n\n\"How was your flight?\" I asked.\n\n\"Horrible,\" he said cheerfully, kissing me one last time before letting me go. \"I had to sit there for an hour listening to my asshole coworker talk about the random hookup he had last night after we went out and how he thought I must be so jealous that I couldn't do the same on account of the whole 'having a girlfriend' thing.\"\n\n\"You should've told him that as long as you use a condom and promise to tell me all about it while you fuck me afterwards, it's not a huge deal.\"\n\n\"I did.\" He slipped his shoes off and put them on the mat by my door. \"But see, the problem with that is I started thinking about my incredibly sexy girlfriend and how she's been teasing me since Friday night with this 'I wanna tie you up and have my way with you' thing she's been going on about. So then while Brad was insinuating a whole bunch of lewd things about said girlfriend, I sat there miserably wishing time would move faster so I could get to the part where she ties me up and has her way with me.\"\n\nHe moved to kiss me again, but I put a hand on his chest to stop him.\n\n\"Unfortunately, you're going to have to wait a little longer,\" I said.\n\n\"Well, that sucks,\" he said.\n\nI raised my eyebrow at him and the corners of his eyes crinkled.\n\n\"Right, sorry.\" He cleared his throat. \"Well, that sucks, Miss.\"\n\nI rolled my eyes and grabbed his shirt. I could feel his surprise at the unexpected kiss, but when he started to smirk, I pulled back and looked up at him.\n\n\"We need to talk first.\"\n\nHis eyebrow twitched before he pressed his lips together. \"Jeez, babe. Remember when you used to hate having to 'talk'?\"\n\n\"Yes, and I still do, but it's necessary.\" I gestured to the table. \"I want to do this right.\"\n\n\"I mean, it's pretty simple. Step one, my dick gets hard. Step two, you spread your legs. Step three, insert dick into\u2014\"\n\n\"You're going to get stuck on step one if you don't start behaving yourself.\" I moved to the table and sat down.\n\n\"You make a compelling argument.\" He settled in the chair across from mine. \"Okay, Miss. What do we need to talk about?\"\n\n\"I mean, at the very least, we need to decide on a safeword.\"\n\n\"Do we?\" he asked, his tone almost amused. \"You think things are going to get crazy enough that we need one?\"\n\n\"Don't be a moron,\" I said. \"Yes, we absolutely need a safeword.\"\n\n\"Okay, Miss.\"\n\n\"This isn't a 'Miss' moment. This is a 'Nellie and J.P. need to be serious for a moment' moment. I don't want to do anything you don't want but if something's going wrong then\u2014\"\n\n\"Okay, Nell.\" He held his hands up defensively. \"I didn't think we were being that formal about it, you know? I know you're taking this super seriously but\u2014\"\n\n\"Are you not?\"\n\n\"I am,\" he said patiently. \"I kind of assumed if it was too much and I asked you to stop, you'd stop.\"\n\n\"Well, yeah,\" I replied. \"But what if I was doing something you liked and you started saying 'don't stop' and then a while later you did want to stop but I misheard you? Or what if I'm sitting on your face and you can't talk?\"\n\n\"Okay, good point. Any suggestions?\"\n\n\"Something we wouldn't usually say,\" I said. \"Or we could use colours. Red means stop, yellow means slow down, that kind of thing. It's... I feel like it should be something you'll remember since it's more likely you'd need to use it.\"\n\n\"Hmm.\" He thought for a moment. \"Cherie.\"\n\n\"What?!\"\n\nHe grinned. \"For the safeword. Neither of us would ever say that. I mean, I guess we could make it 'Anne-Marie' instead, but\u2014\"\n\n\"I thought you didn't want to involve your sister in our sex life.\"\n\n\"Yeah, but what's going to stop us faster than bringing up Anne-Marie?\"\n\nI bit back a laugh. \"Fair. Okay, let's use 'cherie.' Using her name is...\"\n\n\"A little much,\" he finished. \"Yeah. And if I wanted you to stop while I couldn't talk, what should I do instead?\"\n\n\"Brandon suggested snapping. Even if you're tied up, you should be able to snap your fingers.\"\n\n\"That works.\" He looked at me expectantly. \"Anything else?\"\n\nI nodded. \"Is there anything you know you don't want? I already know not to hit your cock or anything.\"\n\nHe shrugged. \"That's the main one, babe. I guess no... I'm not into toilet stuff.\" I made a face and he laughed. \"Okay, good. We're on the same page.\"\n\n\"Seems so. Is there anything specific you do want to try?\"\n\nHe twisted his mouth to the side as he thought. \"Doesn't have to be today, but I'd kind of like to see what the big deal about breath play is.\"\n\n\"Like, choking?\"\n\n\"Sure.\" He shrugged again. \"Like I said, not necessarily today. But if you wanted to give it a shot in the moment, I wouldn't say no.\" \n\nI nodded. \"Okay. Anything else?\"\n\nHe raised an eyebrow. \"Like?\"\n\n\"Like... I mean, you said on the phone you'd be open to butt stuff but I wasn't sure if\u2014\"\n\n\"Nellie, I trust you,\" he said. \"I'm open to trying it. I don't know if I'll like it or not. But I also know I've done it to you before and that you'd make sure you were careful and stuff. Look, you're the one who wants to be in charge, babe.\" His smile was somewhere between smug and enticing. \"You do what you want to do.\" \n\n\"Okay.\" I took a deep breath and let it out. \"Here's what's going to happen.\"\n\n\"Oh, this is what I've been\u2014\"\n\n\"Shh.\" I pointed a finger at him. \"You're going to go take a shower and clean everything.\"\n\nHe grinned. \"Because of the butt stuff?\"\n\nI glared at him. \"What did I just say?\"\n\n\"You said 'shh,'\" he replied. \"Miss.\"\n\n\"So shh.\" I folded my arms. \"Shower, clean everything, then go straight to my room and get on the bed. Naked. Lie on your back. I'll join you when I'm ready.\" I waved a hand at him. \"Go.\"\n\nHe was fighting back a smile as he nodded and stood up. \"Yes, Miss.\"\n\nWhile he showered, I went to my bedroom and changed into the outfit I had purchased, carefully doing up the garters and adjusting my corset before shrugging my bathrobe on. Earlier that day, I'd cleaned my room, and the other toys and supplies I'd bought were laid out in the top drawer of my dresser so J.P. wouldn't see them when he came in. Other than the restraints, of course, which I'd fought to set up but had managed to get in place. I checked the drawer one final time to make sure I had everything I thought I'd need, had another moment where I looked at the nipple clamps and thought maybe I'd overdone it a little, and smoothed down the sheets before going to the other room to wait for J.P. to finish.\n\nI tried to scroll idly through my phone to pass the time, but the anticipation shooting through me was too distracting. Tapping my fingers on my thigh, I listened impatiently for the water to shut off and the bathroom door to open. Once I heard it, I took a deep breath and forced myself to wait. Even though I'd been ready since Friday night when I called him, I wanted to make him wait, to leave him lying there naked, staring up at my ceiling and wondering what I had in store for him. I wanted him to start imagining it, picturing things as I was picturing him, his cock already starting to harden for me before I'd even stepped foot into the room. \n\nFrom there, my intention was to walk into the room and ignore what I assumed would be an anticipatory and excited expression on his face, not saying a single word until I'd fastened the restraints around his wrists. Once I had him tied up, my plan was to stand at the end of the bed and slowly take off my robe as though I was someone far more sensual and mysterious than I actually was. I had a feeling the outfit I was wearing would be a big surprise for J.P.; I'd never worn anything like this for him before, so I was eager to find out what his reaction would be.\n\nAfter that, I hadn't decided what would happen. I had J.P. at my mercy and permission to do nearly anything. I figured once I got into the room, I'd decide what to do next.\n\nThe problem with that, and with all of my intentions, was that they relied on J.P. to be naked and lying on the bed on his back as I'd instructed. \n\nI had not anticipated walking in to see him on the edge of my bed with a towel wrapped around his waist and a dangerously clever sparkle in his eyes as he played with one of the ankle restraints.\n\n\"Nice bathrobe, Miss,\" he said brightly. \"Isn't that the one I gave you for Christmas?\"\n\nI folded my arms and gave him my dirtiest look. \"What do you think you're doing?\"\n\n\"Sitting.\"\n\n\"Why?\"\n\n\"I got bored.\"\n\nI felt a muscle in my face twitch. \"You were in here for five minutes. And regardless, I told you to be naked.\"\n\n\"Oops,\" he said innocently, but made zero effort to move from his spot.\n\n\"You're not starting off well here, J.P.,\" I finally said.\n\n\"J.P.?\" he asked skeptically. \"Really? I have to call you 'Miss' but you couldn't even come up with a pet name for me?\"\n\n\"I can call you a bastard, since that's what you are.\"\n\n\"Ehh. You call me that all the time anyway,\" he said. \"Got anything better?\"\n\nMy mouth dropped open. \"Excuse me?\"\n\n\"I said, 'Got anything better?'\" he repeated. \"Miss?\"\n\nI didn't. I did not have a single thing better to call him. The woman in the video had called the man 'pet,' but that felt stupid. So did all the other things I could think of off the top of my head. J.P. called me 'babe' all the time, but if I'd ever called him any sort of pet name, it would have been sarcastically.\n\nSo I called him the only thing I could think of to let him know how annoying he was being.\n\n\"Jean-Paul, if you ever want to come again, you're going to start listening to me,\" I said in a low voice. \"Like you said you would.\"\n\nThe sparkle in his eyes seemed to grow brighter as he fought to keep a mostly straight face.\n\n\"Yes, Miss,\" he promised. \"Although I didn't say that.\"\n\nI frowned, hesitating somewhere between shock and confusion before speaking. \"Uh, yes you did.\"\n\nJ.P. smiled wickedly. \"No, I said you could tell me what to do all you wanted. I never said I'd listen.\"\n\nI opened my mouth, but nothing came out. Of course he hadn't said he'd listen. And of course I'd misinterpreted that, because of course he was such a fucking lawyer and I was so excited and turned on that I'd slipped up and missed what he said. \n\nPart of me wanted to scream in frustration. Another part of me was kicking myself for believing he'd really make it so easy for me. A third part of me, the desperately competitive part that seemed to be the same part that was incredibly turned on, was twice as eager as I had been to take charge and prove that I had what it took to tame his defiance.\n\nWhich is what he wanted, of course.\n\nThat seemed to be the part that was in control when I unfolded my arms and looked at him.\n\n\"Take your towel off and lie down,\" I ordered.\n\nHe licked his lips as he stared up at me with a defiantly playful smirk that was as infuriating as it was tantalizing.\n\n\"Make me,\" he said, as much an invitation as it was a challenge. \"Miss.\"\n\nI made a mental note to ask him after we were done if spanking counted as causing pain, since never before in my life had I wanted so badly to dish one out, and stepped slowly towards him.\n\n\"For someone who isn't allowed to come until I say so, you're pushing your luck on when that's going to happen,\" I said softly. \"I would've thought not being able to come since... when? Before your workshop yesterday? I thought that would've made you a little more obedient.\"\n\n\"You'd think, but that's not what you told me to do.\"\n\nI raised an eyebrow at him.\n\n\"Miss,\" he added.\n\n\"I told you no jacking off.\"\n\n\"You told me no jacking off last night.\"",
        "It was pointless to fight back my own laugh, but I was at least able to contain it to a soft chuckle as I shook my head. I took another step forward so I was standing in front of him, close enough that I could trail my fingers along his bare chest.\n\n\"You're right.\" I let out a small but dramatic sigh. \"I just would've thought you'd want to see all the special gifts I got for you.\"\n\nThat, of all things, seemed to surprise him. \"You got me a gift?\"\n\n\"Gifts. Plural.\" I traced a small pattern up to his collarbone. \"Do you want to see them?\"\n\nHe rolled his eyes. \"Uh, yeah babe, of course I want\u2014\"\n\nBefore he could finish talking, I put my hand on the base of his throat\u2014not hard enough to cut off his breathing or hurt him, but enough that his eyes went wide and he lifted his chin\u2014and glared at him.\n\n\"Then take off the towel and lie down, Jean-Paul.\"\n\nHe almost didn't. He almost, almost made another smartass comment. Luckily, his cock finally seemed to notice what was going on, and I was certain I saw the towel shift. Beneath my palm, I felt J.P.'s throat flex as he swallowed, though the roguish look didn't disappear from his face before he nodded.\n\n\"Yes, Miss,\" he said, and I was secretly thrilled to see I'd been right about what was going on under the towel as he slipped it off.\n\nI resisted the urge to bolt around the bed and tie his wrists down. Knowing J.P., he'd start undoing one restraint before I could even make my way around to the other side of the bed. Instead, I waited until he was settled before I undid the belt of my bathrobe\u2014and yes, it was the one he'd gotten me for Christmas so I'd have something to open in front of my mom that wasn't a butt plug, which had been his actual gift\u2014and let it fall to the floor.\n\nHe didn't say anything, which was a little disappointing, but I chalked it up to him actually fucking listening to me for once. J.P.'s eyes raked down my body, taking in the dark lace of the corset and the way the panties hugged my hips. His eyes lingered on my thighs where the lacy top of the stockings met the tiny clasps of the garter, then followed the curve of my legs as I crawled onto the bed next to him.\n\nMindful of the stilettos, I straddled him so I could pin him down with my weight. As I reached for the cuff, his hand moved to my hip. I caught his wrist and grabbed the restraint, pushing his arm up towards it. \n\n\"You haven't earned that yet.\"\n\n\"I'm sure I'll earn it pretty quickly,\" he teased. \n\nThe restraints were loose enough that he could move his arms a bit, but not by much. I tightened the leather cuff around his wrist and tugged it a few times to make sure it was snug. \"Maybe you should focus on learning quickly. Otherwise you're going to be stuck on step one for a long, long time.\"\n\nI punctuated my sentence by grinding against his semi-hard cock as I shifted from one arm to the other. J.P. made a soft noise, but before he could say anything, I'd finished tightening the cuff on his other wrist and crawled off him so I could turn around and put the cuffs on his ankles.\n\nIt was only when I went to move from one leg to the other that I noticed his cock had gone from semi-hard to fully erect, because of course it had. J.P.'s love of my ass was practically public knowledge, and he currently had a full view of it clad in a tiny lace thong as I worked on the restraints. \n\nGrinning, I finished tightening the final cuff, then stuck out my tongue and teasingly licked the head of his cock. He didn't seem to expect that and jumped as I tasted him.\n\n\"Hmm.\" I sat back on my heels and tapped my fingers against his thigh.\n\n\"Hmm what, Miss?\" he asked.\n\n\"You're enjoying this too much.\" I glanced over my shoulder at him. \"I'm supposed to be punishing you for not listening to me.\"\n\n\"And teasing me by shoving your perfect ass right in my face knowing I can do fuck-all to reach it isn't punishment enough?\" he asked.\n\nI turned back around, leaned forward, and ran my tongue along his cock. He jumped again, groaning quietly this time and making me grin.\n\n\"Not even close,\" I said, then kissed his tip before moving off the bed. \"You have a lot to be punished for, Jean-Paul.\"\n\n\"Yeah?\" he asked, raising an eyebrow. \"Like what, Miss?\"\n\n\"Since when do you play dumb?\" I walked over to the dresser and opened the top drawer. \"Let's see. You jacked off last night, even after I told\u2014\"\n\n\"I did not,\" he insisted. \"I jacked off this morning, thank you very much.\"\n\n\"You're interrupting me,\" I continued loudly, reaching into the drawer. \"You disobeyed my instructions for after your shower. You've failed to call me the proper name how many times now?\"\n\n\"I didn't realize we were keeping track, Miss,\" he said flippantly.\n\n\"You're deliberately misinterpreting what I'm saying, you tried to touch me without asking first, and you didn't even remind me to make you wear my panties before I tied you up.\" I turned around, a fake pout on my lips as I held up one of the other pairs. \"But mostly, I'm tired of your attitude. So you're going to be quiet for a while now.\"\n\n\"Oh, am I?\" J.P. said, his eyebrows raised in amusement. \n\n\"Yep.\" \n\n\"And just how\u2014\"\n\nBut he didn't get to finish asking, mostly because I'd returned to the bed and shoved the balled-up panties I was holding into his mouth halfway through his sentence. A muffled word or two escaped, but that was it; moments later, he was staring up at me as I tried not to laugh.\n\n\"That's better,\" I said, then glanced at his bound hands. \"You can still move your fingers okay?\"\n\nSomething like a smile appeared behind his stuffed mouth and he flexed his hands, proving he could.\n\n\"Good boy,\" I said, turning around.\n\nI could feel his eyes on me as I marched back across the room. The silence was almost unsettling; J.P. might have been a pain in the ass, but at least he was a funny pain in the ass. I wouldn't go so far as to say I missed whatever smart-ass comment he would have come up with, but it did throw me off in a way I hadn't been expecting.\n\nNot that I was going to admit that. Instead, I let him watch as I looked into the drawer again, taking my time as I debated which of the new toys to show him first. I was supposed to be punishing him, but I wasn't ready to tease him with the vibrators yet. And I'd forgotten to ask about his feelings on nipple clamps before shoving my panties in his mouth, so those were out. The cock rings might be okay, but that was pretty short-lived as far as me actively punishing him went, and where was the fun in that? \n\nThat left the feather and the assortment of butt plugs. I glanced from one to the other, then reached into the drawer and grabbed the feather as well as the large metal butt plug Hoops had suggested would be perfect for taunting him. \n\n\"I'm feeling nice,\" I said, turning around. \"Do you want me to tickle you or shove this up your ass?\"\n\nHe took a long, hard look at the items in my hands, then stared straight into my eyes. I watched his face begin to contort as he tried\u2014and really, he did try\u2014not to start laughing, but my face betrayed my exasperation and there was nothing J.P. loved more than driving me crazy. As soon as I let out a resigned sigh, gales of smothered laughter broke through the lacy panties in his mouth, and I was left watching his face turn redder and redder as he completely lost it.\n\nRecord scratch.\n\nFreeze frame.\n\nI let him carry on for a while; each time it seemed like he was settling down, he'd glance at either the bushy plumes of the peacock feather or the larger-than-expected butt plug and the hysterics would start all over again. When I stuck out one hip and folded my arms, looking as unimpressed as I could, it turned into a choking, snorting sort of sound. A few moments later, tears began pooling under his eyes and I sighed again, putting both items down before going over and digging the panties out of his mouth.\n\n\"S-Sorry,\" he managed to spit through his hysterics. \"Sorry, babe, but that was just... fuck, that was the funniest goddamn thing I think you've ever... did you even look at that feather? And did you see the size of that fucking\u2014\"\n\nHe cut himself off with another round of raucous laughter. \n\nThis wasn't working the way I wanted it to. I mean, clearly. Sydney had been right. J.P. wasn't just going to go along with whatever I said. And yes, that was part of why I loved him; I knew it was part of why he loved me. We challenged each other, competed with each other, teased and taunted and played with each other. \n\nAs I watched him lose his mind, I wondered if I should give it up and call it a failed experiment. It wasn't that I was upset or angry; if I untied J.P., it just meant we were going to fuck like we usually did, and that wasn't a bad thing. I loved fucking him regardless of the situation. We'd laugh about it as he pushed his cock inside me and I couldn't deny how much I loved that sound, the sort of breathless giggles that turned into gasping moans as we began to move together. And that would be fine; it would be good, and I would gain four more butt plugs to add to my collection.\n\nBut on the other hand, J.P. would be annoying as fuck about wearing me down so quickly, and I really wanted to see him in my panties. \n\nAnd wasn't that the whole reason I'd started this? Wasn't that the thing that had sparked my interest in the video; not the cock-slapping or the toys or the outfits, but the almost-humiliating way the mistress had \"rewarded\" her pet? \n\nJ.P.'s reaction wasn't all that unwarranted. I was standing there dressed like I was, holding a feather and a butt plug because that's what everyone had told me I needed to do, but it wasn't what I'd wanted. I was caught up in the whirlwind of different ideas when all I really wanted to do was tease my boyfriend a little more than I usually did. I wanted to be in control of him, to play with him, to make him absolutely beg me for more.\n\nAnd I didn't need a fucking peacock feather to do that.\n\nSilently, I went back to the drawer and dug out two more of the items I'd bought. When I returned to the bed yet again, his laughter was beginning to fade.\n\n\"What's that?\" he asked, still chuckling.\n\n\"What's what?\"\n\n\"Oh, sorry.\" He took a steadying breath, his face still red. \"What's that, Miss?\"\n\n\"What's what?\"\n\n\"The items in your hand?\" he pressed.\n\n\"This one?\" I asked, holding up the vibrator. \"It's a vibrator.\"\n\n\"Uh-huh. And what's it for?\"\n\n\"Vibrating.\"\n\nHe snickered. \"Okay, Miss Sass. And what's the other thing?\"\n\nI held up the blindfold. \"It's a blindfold.\"\n\n\"I see,\" he said.\n\n\"Not for long.\"\n\n\"What?\" he asked, almost affronted. \"Aw, that's not fair, Miss. I don't have my hands or my eyes?\"\n\nI shrugged. \"What do you need your eyes for?\"\n\n\"Looking at you, Miss. I don't want to miss a second of your beauty.\"\n\n\"Liar. You didn't even compliment me on my new outfit.\"\n\nHe licked his lips. \"It's very, very pretty, Miss. I especially like the part where I can see your entire ass, since there isn't a single piece of lingerie in the world that could make you look sexier than you do naked.\"\n\n\"Aw, look at you, being all sweet to get what you want,\" I said. \"But it's a little late for that.\"\n\nThe humour on his face began to fade. \"Come on, Miss. I need my eyes.\"\n\n\"For what?\"\n\n\"Seeing what you're going to do with that vibrator.\"\n\n\"Oh, don't worry about that. The vibrator's not for you.\" \n\nIf he raised his eyebrows any higher, they would have ended up in his hair. \"I think that means I should get to have my eyes uncovered even more.\"\n\nI tried to hide my delight at finding something that actually seemed like a punishment for him with a sympathetic look and a patronizing tone. \"I guess you should have thought about that earlier, Jean-Paul.\"\n\nHe protested as I slipped the blindfold over his head and adjusted it around his eyes, but I ignored him. His pleading continued as I unclasped the garters and slid my panties off, then undid the corset and slipped off the stilettos. \n\nI wasn't used to hearing J.P. beg. At all. Between that and the insistence in his voice, I started to wonder if I was going too far. I mean, it was the first time we'd done anything like this. I had no reason to think blindfolding him would strike a nerve, but how was I supposed to know? And what if he'd forgotten about the safeword?\n\n\"Jean-Paul,\" I said, cutting off his begging.\n\n\"Yes, Miss?\" he asked.\n\n\"Can you still move your fingers?\" \n\n\"Yes, Miss.\"\n\nI tried to mask the concern in my voice with a stern expression that was useless because he, of course, couldn't see. \"Do you need to move them right now?\"\n\nI could see him frown beneath the blindfold. He was silent, then seemed to realize what I was asking.\n\n\"No, Miss,\" he said. \"I'm good.\"\n\n\"Good,\" I said. \"Then be quiet.\"\n\nI watched his throat flex as he swallowed, his usual smirk all but wiped off his face. He opened his mouth, then seemed to think twice and closed it before nodding. \n\n\"Smart choice,\" I said.\n\nHis mouth twitched and he nodded again, but didn't say anything. That was fine; if anything had come out of his mouth besides \"Thank you, Miss,\" I would have gone to the other room to masturbate.\n\nInstead, I crawled onto the bed wearing only my stockings and picked up the wand-style vibrator. J.P. took up most of the space on my mattress, but there was enough room between his splayed arms and legs for me to fit comfortably alongside him. I licked my lips, then carefully nestled myself beside him with my ass almost\u2014but not quite\u2014touching his arm. He twitched as I brushed against him and settled my head against his thigh.\n\n\"Problem?\" I asked.\n\n\"Yeah, Miss,\" he said bluntly. \"You're completely evil.\"\n\n\"And you're a complete bastard,\" I replied, grinning. \"Now shut up so I can get off, since you're too busy being a smartass to do it for me.\"\n\nHe was quiet for the amount of time it took to get my hand between my legs and begin a wandering circle around my clit to collect the wetness that had been soaking my pussy since J.P. first got home. I'd barely begun touching myself before he couldn't hold it in any longer.\n\n\"Gotta say I'm a little surprised,\" he said.\n\n\"About what?\" I asked, closing my eyes as I touched myself.\n\n\"Well, you went to all this trouble to tie me down and have me at your complete disposal, and now you're doing all the work yourself?\" He turned his head in my general direction, though I knew he couldn't see me. \"Who's really getting punished here, Miss?\"\n\nI stroked my slit and sighed as I dipped a finger inside myself. \"That's assuming that getting myself off is something I consider work instead of something I really, really enjoy doing.\" I shifted, letting my stocking-clad legs brush against his arm. \"You should see what I'm doing right now.\"\n\n\"I'd love to. Why don't you show me?\"\n\n\"Because you've been a bad boy.\"\n\nThe words felt ridiculous coming out of my mouth. They apparently sounded ridiculous, too, since J.P. started laughing again, but I was able to cover my own chuckle by grabbing the wand and turning it on.\n\nEven on the lowest setting, the buzzing vibrations were loud. They were strong, too; almost as soon as I brought the toy between my legs, I had to grip the bedsheets with my other hand.\n\n\"Oh!\" I gasped.\n\n\"Oh what, Miss?\" he asked.\n\n\"Ungh,\" I managed to say as the muscles in my stomach tensed and I dug my feet into the mattress to support myself. \"Oh, Jesus. This thing is amazing.\"\n\n\"My tongue is more amazing,\" he said suggestively.\n\n\"I don't know about that.\" I pulled the vibrator away from my clit, panting softly. \"This is the lowest setting and I can barely take it. I've never said that about your tongue.\"\n\n\"Ouch, babe,\" he snickered.\n\n\"What's that?\" I asked innocently. \"You want to feel how strong it is?\"\n\n\"Well, I mea\u2014oh, fuck!\"\n\nJ.P.'s entire body jerked as I pressed the tip of the wand against the underside of his cock. And by pressed, I mean I barely touched him; his stunned shout was still on his lips when I pulled the toy away and started giggling. Still, it was enough to get him panting, and enough that his hips strained up, eager for more.\n\n\"Amazing, right?\" I asked as he panted. \"This thing is going to make me come so hard. If you don't start behaving yourself, I might even decide to use it instead of calling you whenever I get horny.\"\n\nHe was laughing again, but it was a strangled sound that was underlined by a low groan. \n\n\"Fuck, Nellie,\" he breathed. \"I mean, Miss. Please let me watch you use it.\"\n\nI grinned and brought the toy back between my legs.\n\n\"No,\" I said, and if he said something else, it was drowned out by my moan as I pressed the wand to my clit again.\n\nThe vibrator was amazing, but the best part of the whole thing was the view of my boyfriend. With my head on his thigh, I got to watch the way his cock throbbed and twitched, the pre-cum that oozed from his tip, and the rise and fall of his stomach just beyond as he took in breath after steadying breath. The blindfold hid the most expressive parts of his face, but the tension in his lips and the clenching of his jaw told me that he was enjoying this, even if he wasn't enjoying it. His inability to see me meant I got to drink in his body greedily, looking at every inch of his perfect skin and tight muscles, at the way his usually perfect hair was falling out of place against his forehead and there was nothing\u2014not a damn thing\u2014he could do about it.\n\nIt made so much sense that I was almost embarrassed I hadn't thought of it before. J.P. was an incredibly visual person. He loved to watch my tits when I rode him and given the choice on which position to fuck me in, he usually picked from behind so he could stare at my ass. So really, I should have realized far sooner how effective it would be to take away his ability to watch.\n\nThe vibrations on my clit were too intense to spend much time focusing on that, though. I moaned again, tilting my head back as I let go of the sheets and brought my hand up to my breast, rolling my nipple between my fingers as I held the vibrator against my pussy. My elbow nudged against J.P. as I did and I felt him squirm involuntarily as more pre-cum dripped from his cock.\n\n\"You should see how hard your cock is,\" I gasped.\n\n\"I can tell.\"\n\n\"Mmm, but you should see it,\" I continued.\n\n\"Maybe I should see how wet your pussy is, Miss. You know, for... science.\"\n\nI laughed. I couldn't help it. And J.P. grinned as he heard me giggle.\n\n\"Do I get a reward for making you smile?\" he asked.\n\nI thought about it, then bit my lip. \"Yeah.\"\n\nI couldn't see his eyes, but I assumed they were wide with shock. \"Yeah? Really?\"\n\n\"Mm-hmm.\" I put the vibrator down beside me. \"Just a little one.\"\n\nHis eager grin was practically smug. I pushed my hand between my legs and dipped my fingers into my pussy, then sat up. He tilted his head back, likely assuming I was about to take the blindfold off. Instead, I traced one slick fingertip along his bottom lip. The grin faded slightly and he exhaled, his lips parting just enough that I could slip my fingers into his mouth.\n\n\"See how wet I am?\" I asked softly.\n\nThe noise he made thrilled me as his tongue flicked against my finger tip.\n\n\"Yes, Miss,\" he replied after I pulled it out of his mouth and sat back.\n\n\"Good boy,\" I said, and my eyes widened when I saw him shiver.\n\nApparently, he liked that, too.\n\n\"Are you going to start listening to me, Jean-Paul?\" I asked.\n\n\"Yes, Miss,\" he groaned. \n\n\"Are you going to start doing what I tell you to?\"\n\nHis lips flicked up. \"Yes, Miss.\"\n\n\"Are you saying that because you think it's what you need to say to get me to take the blindfold off?\"\n\n\"Abso-fucking-lutely, Miss.\" ",
        "\"Well, at least you're honest. Maybe that deserves a reward, too.\"\n\n\"Yes, please,\" he said, his voice feverish. \"I wanna taste you again, Miss.\"\n\nEventually, he'd figure out that telling me what he wanted meant he wasn't going to get what he wanted. I wasn't about to tell him that, though. Instead, I got to my knees and crawled forward until my pussy was over his hand.\n\n\"You can touch my pussy while I finish,\" I said, then pressed the vibrator to my clit again.\n\nJ.P. didn't hesitate. He brought his hand up and pushed two fingers between my soaking folds. I whimpered as my pussy stretched around them, gripping him needily as he worked his hand up and down as much as he could.\n\nIt was what I needed; the vibrator was fucking phenomenal, but regardless of my claims that I could replace J.P. with it, there was nothing in the world that felt as good as having part of him inside me. Whether it was his cock or his fingers, whether it was in my pussy or my ass or my mouth, it didn't matter.\n\nBetween the vibrator and his hand, it didn't take long before I was crying out and trying my damnedest not to break J.P.'s wrist as my hips bucked against him. Pleasure shot through me and I braced myself on the headboard as my body shook, holding the wand against my clit so my orgasm was drawn out for as long as I could take it. When it got to be too much, I pulled it away, my arms trembling as J.P. fingered me slowly, his hand soothing my overwhelmed pussy as I gasped for breath.\n\n\"Holy fuck,\" I mumbled.\n\n\"Sounded like a good orgasm, Miss.\" There was no mistaking the jealousy in his voice. \n\n\"Very good.\" I pushed myself away from his hand, leaving his pussy-soaked fingers behind as I settled beside him. \"Definitely in my top ten orgasms of all time, for sure.\"\n\n\"I'm sorry I missed it.\"\n\nHe startled slightly as I kissed him on the cheek unexpectedly.\n\n\"Me too.\" I brought a hand up to the blindfold. \"It'd really be a shame if you had to miss the next one too, wouldn't it?\"\n\n\"It would,\" he agreed.\n\n\"So are you going to start doing what I tell you?\"\n\n\"Yes, Miss,\" he murmured.\n\nI assumed he was lying again, but that was okay. Carefully, I lifted the satin fabric over his head, revealing the rest of his stupid, attractive face. His eyes were on me immediately, not straying even as he blinked to get used to the light in the room.\n\nI didn't quite know what to do next. It was all off-book, not that there had been much of a book to begin with. Instead of worrying about it, I dropped the blindfold and brought my hand back to his face. There was no need to turn his head towards me\u2014his eyes were still on mine, a hint of laughter and excitement tucked behind passion and yearning\u2014so I caressed his cheek as I pressed my lips to his.\n\nThat moment, more than anything, was when I realized just how much power J.P. was giving to me. There was no way for him to wrap his arms around me or use his weight to pin me against the bed; there was just his lips and mine, his breath sweet and warm against my mouth, a quiet moment that I was fairly certain J.P. wouldn't have given to anyone else in the world but me.\n\n\"I love you,\" I whispered, and I felt him smile.\n\n\"I love you too, Nell.\"\n\nI spent a little longer kissing him, tracing my fingers along his throat and collarbone and chest. Slowly, I let my hand fall lower, and lower, meandering from his ribs to his belly button, then tickling along the path to his cock. His breath caught as I reached the base of his shaft and he anticipated my touch; moments later, the corners of his lips were curling up as he realized I wasn't moving my hand anymore.\n\n\"Please, Miss?\" he asked. \n\n\"You want me to touch it?\" I asked.\n\nHe made another one of those groaning sounds. \"So much.\"\n\n\"Do you think you've earned it?\"\n\n\"I mean, I was partly involved in your recent addition to your orgasm hall of fame, so...\"\n\n\"That's true.\"\n\n\"And\u2014ugh.\"\n\nHis hips lifted and his head tilted back involuntarily as I wrapped my fingers around his cock and stroked it. His eyes fluttered shut and I kissed the base of his neck, grinning as I lazily spread pre-cum along his shaft. \n\nEdging him hadn't been something I'd considered, though it was something both Brandon and Calvin had mentioned during their drunken domination lessons. In my mind, the whole thing was a great big teasing session; I didn't see the need to bring him to the brink of orgasm only to stop.\n\nBut that was before.\n\nNow, I had J.P.'s cock in my hand and his heartbeat beneath my lips. He was breathing heavily already, squirming as I stroked him. And was I really ready for it to be over? Sure, I'd had an orgasm that had rocketed into my top ten of all time, but J.P. hadn't, and I definitely hadn't gone through all this trouble and spent all that money for him to have a boring old everyday orgasm. \n\nSo when I felt J.P.'s stomach tighten the way it did when I knew he was getting close, I stopped.\n\n\"Nell?\" he asked almost desperately, lifting his head and looking at me.\n\nI grinned at him.\n\n\"Oh, come on,\" he groaned, but he was laughing at the same time as he collapsed back on the bed.\n\n\"You will,\" I promised. \"In a bit. I'm not done with you yet.\"\n\n\"No?\" He looked at me again, intrigued. \"What are you gonna do to me next, Miss?\"\n\nI smiled, kissed him again, and got to my hands and knees. Without saying anything, I moved to his ankles and undid the cuffs around each of them. Intrigued, J.P. watched as I then stretched across his body, reaching for the nightstand and the bottle of lube that I'd placed there.\n\n\"Oh,\" he said knowingly as I nudged his legs apart and settled myself between them. \"I see how it is.\"\n\n\"I can put the blindfold back on if you'd prefer not to see it.\"\n\n\"You're so thoughtful, Miss,\" he said. \"But I think I'd rather be able to see what kind of things you're about to stick in my ass, if you don't mind.\"\n\nI smirked, glancing up at him as I wiggled my fingers. \"Just one of these. Two, maybe, if you're lucky.\"\n\n\"Yeah? You're not going to pull out that monster butt plug you threatened me with?\"\n\n\"That wasn't meant for you, at least not today. I have a bunch of smaller ones, since you're an inexperienced little virgin.\" I flipped the bottle of lube open and squirted some in my hand.\n\n\"Me,\" he laughed. \"A virgin.\"\n\n\"Have you had stuff up your butt before?\"\n\nHe stifled the last of his chuckles. \"No, Miss.\"\n\n\"Then you're a virgin, Jean-Paul.\" I smiled up at him. \"One day you'll be begging me to shove that great big thing in your ass, but today I'm just going to use my fingers. If you think you can handle that.\"\n\nHe rolled his eyes defiantly. \"Of course I can handle that.\"\n\n\"Good boy,\" I said, and his cock twitched.\n\nYep, he definitely liked that.\n\nI felt him watching me as I carefully began exploring. J.P. had a seriously nice ass, because of course he did, because some insane genetic lottery had blessed him with an absolutely perfect body and that included his ass. I'd been in this position a million times before, basically every time I sucked his dick, but I'd never done what I was about to do. \n\nAnd for once, I was kind of nervous about it.\n\nI spent some time caressing his balls before moving my hand lower and lower until the tip of my finger found the puckered little hole. J.P. shifted and I glanced up to check on him, expecting to see a face full of nerves. \n\nInstead, I was surprised by dark eyes studying me, desire pooled in them as his chest rose and fell with each excited breath. \n\n\"Please, Miss,\" he breathed, and I almost abandoned the whole thing so I could shove his cock inside me.\n\nI didn't, though. I ignored the way my pussy seemed to throb and my heart began to race as I spread lube against his asshole. I didn't let the soft noise he made as I touched him get to me, even though it made that throbbing turn into more of an ache. I didn't let a single thing distract me as I gently pushed my finger forward, listening intently for any hint that J.P. was uncomfortable while I tried to commit the feeling of him around my finger to memory.\n\nI worked the tip of my finger into his ass before pulling it out and adding more lube, then glancing up to check on him before I carefully pushed a bit more of my finger inside of him. As I found my rhythm, my finger went slightly deeper each time until I brushed against a spot with a different texture and J.P. cried out loudly.\n\n\"Oh, fuck,\" he groaned, his voice low and husky. \"Oh my fucking God, Nellie.\"\n\n\"You can just call me Miss,\" I said lightly, then brushed my finger against the spot again.\n\n\"That's my joke,\" he managed to gasp.\n\n\"Well, I'm the one in your ass right now, so it's my joke,\" I said, fingering him slowly. \"You can have it back when I'm done with you.\"\n\nHe didn't seem capable of a witty retort, just another low groan, which was how I knew he was really into what was happening. And that should have been enough, but I was competitive, and I had every intention of turning this into something he would beg me to do again and again.\n\nSo as I continued fingering his ass, I leaned forward and wrapped my lips around his cock.\n\n\"Oh, shi-fuh-ungh-ck,\" he grunted, so out of it that he apparently forgot both how to speak and that his arms were restrained, pulling them so hard in his effort to grab my hair that the entire bed shook. He groaned again, his arms resigned to flopping back on the bed, and I began to bob my head as I kept my finger on that magic spot in his ass.\n\nAnd see, this is where I might have taken things a little too far.\n\nBecause it was unquestionably good. He was making noises I'd never heard him make before. His legs were trembling and he couldn't seem to decide whether to try thrusting up into my throat or bearing down on my hand. I mean, seriously, it was probably the closest I or anyone else had ever come to straight-up breaking J.P. And hadn't that been my goal? Wasn't the whole purpose of this to play with power dynamics that we didn't usually play with? Wasn't this proof I was succeeding?\n\nSo yes, I could\u2014and maybe should\u2014have used my newfound power to work him into the orgasm of a lifetime. I could have shown a touch of mercy to him, given it was our first time doing something like this. I could have kept sucking his cock and playing with his ass until he came down my throat so hard that he wouldn't be able to move for a few minutes.\n\nBut here's the thing.\n\nThe whole situation was hot as fuck. Those sounds he was making were hot as fuck. The taste of his pre-cum leaking in my mouth was hot as fuck. The way his stomach moved, the way his ass gripped my finger, the way his body was shaking was\u2014you guessed it\u2014hot. \n\nAs. \n\nFuck.\n\nI was as turned on as I'd ever been in my life, and this whole thing was supposed to be about me doing what I wanted. And I definitely didn't want to wait for J.P. to recover from what I assumed had the potential to be a literal earth-shattering orgasm before I could get off again.\n\nSo when he started panting like he was about to come, I took my finger out of his ass and my mouth off his cock.\n\nHe wasn't confused this time. He knew right away what I was doing and started laughing in a dry, choking sort of way. When I glanced up, his eyes were squeezed shut, and for half a heartbeat I thought I might have made him cry. Thankfully, his eyes were dry when he opened them and looked down at me, though there was a wild gleam in them that I hadn't ever seen before. Hair stuck to his forehead, which was shiny with sweat, and those dry chuckles gave way to a groan even as he smiled.\n\n\"You're evil.\" I could have sworn there was pride in his voice. \"What do I have to do, Miss?\"\n\n\"What do you mean?\" I asked.\n\n\"To come.\"\n\nI bit my lip and glanced at his swollen cock. \"Do you think you've earned the right to come?\"\n\nHe opened his mouth to say what I assumed was \"yes,\" but instead, his hips bucked up and another one of those laughing groans spilled out as I dragged my finger along the underside of his cock. \n\n\"I will do anything, Nellie,\" he finally managed to say. \"Fucking anything, just... please.\"\n\nI raised my eyebrows. Who knew that all it would take was a finger up his ass to turn a regular blowjob into one where he was, unprompted, swearing to do whatever I wanted him to do so I would let him come?\n\n\"Well, I just wanted to fuck you, but now that you're bringing up anything...\"\n\n\"Anything,\" he repeated. \"Please, Miss.\"\n\nHis voice cracked and that was when I decided I'd tortured him enough.\n\nWell, almost enough.\n\n\"You can come once I do,\" I said. \"Any earlier and you'll be cleaning it up with your mouth. Understand?\"\n\n\"Yes, Miss,\" he breathed.\n\n\"Don't you dare come before I finish, Jean-Paul.\"\n\n\"I won't,\" he promised, and that time I believed him.\n\nI moved out from between his legs, taking my time as I crawled on top of him. That had nothing to do with wanting to torment him; I was trying to be fair and give him a few more seconds to calm down before I started riding his cock, since he was going to need all the help he could get to stop himself from coming before I did. \n\nI straddled his lap, then leaned forward and pressed my lips to his. He kissed me back, his skin warm and his lips eager, and once I thought he might have a fighting chance not to come, I pulled away and positioned his cock at my entrance. My pussy was drenched and I sank down on top of him in one swift motion, sighing as he filled me. J.P. moaned, his eyes closing again as I placed a hand on his chest for balance and started to roll my hips.\n\nIt was okay. The sex, I mean. His dick was inside me and I liked that, and he was moaning and I really liked that, but it wasn't... well. I wanted to be touched, to be kissed, to have someone run their hands along my body and grab at me and hold me. \n\nNot that it was J.P.'s fault. He certainly wanted to be touching me. He had bent his knees and his hands were opening and closing in the cuffs as though he was desperately trying to reach me. \n\nThat was why it was extra surprising that, when I reached for the cuffs, J.P. shook his head. \n\n\"Don't undo them.\"\n\n\"What? Why not?\"\n\nHe laughed, his cock jostling inside me as he did. \"Babe, if you undo those cuffs, I'm not going to be able to stop myself from grabbing you and fucking the fuck out of you.\"\n\n\"Fucking the fuck?\" I repeated.\n\n\"You know what I mean.\" He turned his head and his eyes met mine. \"I don't think I'm gonna be able to listen to you if you undo them, Miss.\"\n\nI held his gaze for the half second it took me to consider what he said, then touched his cheek as I kissed him heatedly before reaching for the cuff clasped around his left wrist.\n\nJ.P. made a noise like a low growl as he realized what I was doing. His muscles were tense and as soon as I loosened the cuff, he wrenched his arm out and threw it around my waist, holding me tightly as he began thrusting up into me. I reached for the other restraint, which took a bit longer to undo on account of the way my body was bouncing. \n\nBut I managed to undo it, of course, and the very second it was off, he had me in his arms.\n\nHe sat up, crushing his lips against mine and pushing his tongue into my mouth insistently. I threw my arms around his neck, gripping his hair as I tried to match his passion, nipping his lips as he bit at mine, shoving my body into his as I fucked myself on his cock. I knew I'd won whatever little battle we were having when he tore his mouth away and buried his face in the crook of my neck, kissing and licking and biting at the tender skin there.\n\nI maintained that control for approximately ten more seconds before he took over. He was a fair bit taller than me and far stronger, so the moment he decided he wanted me on my back, it was set in stone. I barely had time to react before he practically threw me against the mattress, a laugh bursting out of me as I landed.\n\nThe sound was muffled by his mouth claiming mine again and I writhed, loving every second of it. His lips were still on mine when a hand found the back of each of my thighs, pushing my stocking-clad legs up as high as they would go. We parted so he could position himself at my pussy again, his eyes meeting mine as he buried his cock inside me with so much force I couldn't stop myself from yelping. \n\n\"Babe?\" he gasped, concerned.\n\n\"I let you out of your restraints for this?\" I panted, trying to push my hips up to meet his. \"Honestly, Jean-Paul? Why don't you try fucking me like you mean it?\"\n\nAnd oh, did J.P. love a challenge like that.\n\nA cacophony of sounds filled the room: the panting, gasping sound of our breathing, the crashing of his body against mine, the low grunts and uncontrollable moans and bang of the headboard as it slammed against the wall. I had no choice but to hold onto him; if I didn't wrap my legs around his hips and brace myself against the mattress, I would have gone flying off the bed. My breasts bounced almost painfully with every thrust as J.P. did his best to fuck the actual fuck out of me like he said he would.\n\nThen he fucked up.\n\nApparently, J.P. thought that because he was on top of me fucking me as hard as he could, he was in charge. He thought that meant he could smirk in that infuriatingly arrogant way and wind his fingers through my hair, gripping it hard like I'd just let him take control.\n\nThe absolute bastard.\n\nSomeone needed to remind him that he was only fucking me because I'd let him and clearly, that someone wasn't going to be him. As he leaned in to claim my mouth again, I slipped my arm between us and up to his throat.\n\nSurprise flashed across his face, followed quickly by him biting his lip as he smiled impishly and tugged my hair. I held his gaze as I tightened my grip slightly; he held mine as he leaned in, forcing my hand to press against his throat even harder. \n\nAnd oh, fuck, was that hot.\n\nThat was how we came; not him trying to hold back so I could come first or me demanding he wait until I was finished, but together, him with my hair woven between his fingers and me with his pulse beating into the palm of my hand. I practically shrieked when I fell over that edge, forcing myself to pull my hand away from him so I didn't accidentally hurt him as I lost control of my body. Light flashed in my eyes and my heartbeat pounded in my ears; distantly, I heard him cry out, a long, gasping sound as he spilled inside me, wave after wave after wave of cum flooding my pussy. I had just enough awareness to realize he was coming more, and harder, and far longer than he usually did; past that, the world dissolved around me as absolute bliss took over.\n\nThings were hazy for a while, even after I came down from that orgasm. Some instinct deep inside of me took over, and when the majority of my senses returned, I was lying on my side and holding J.P. tight against my chest, my lips pressed against the top of his head as he hugged my waist.\n\nI didn't know how much he needed that moment, but I knew I needed it. No amount of conversations with Brandon or Calvin or Hoops could have ever prepared me for the surge of emotion I felt as his breath tickled my skin, his face buried against me. I couldn't quite give it a name; there was elation and fear, protectiveness and guilt, pride and gratitude and strength all wrapped up around a core of weakness and a sudden tendency to describe things far more poetically than I ever had in my fucking life.\n\n\"J.P.?\" I whispered. \"Are you okay?\"\n\n\"Mmm,\" was the response that vibrated against my chest.\n\n\"Does that mean yes or no?\" I asked.\n\nI felt him smile against my skin.\n\n\"Very yes,\" he mumbled.\n\n\"...what?\"\n\nHe brought his head up and stretched his body alongside mine, looking tired but happy.\n",
        "\"I'm okay, babe,\" he said. \"I'm very okay. That was... I mean, that's definitely going in my top ten. It might be my top five.\"\n\n\"In your top five, you mean.\"\n\n\"Nope. That's my first, second, third, fourth, and fifth best orgasm of all time.\" He brought his lips up to mine. \"You're amazing.\"\n\n\"I know,\" I said. \"But why, specifically?\"\n\nHe nipped at my lip. \"I mean, you clearly put a lot of work into this. It might not all have been my cup of tea but\u2014\"\n\nI pulled back, alarmed. \"What wasn't your cup of tea?\"\n\n\"Not anything that you did,\" he said. \"I mean the stuff like... like...\"\n\nAnd then he burst out laughing again.\n\n\"That fucking feather, Nell,\" he said, shaking his head. \"Oh my God.\"\n\n\"Shut up.\" My face started to burn but I couldn't help but laugh as well. \"I didn't know what you would like so I kind of... you know.\"\n\n\"Bought the entire toy store?\" he finished. \"Including a selection of butt plugs and a feather.\"\n\n\"Shut up,\" I mumbled again. \"I was trying to be ready for whatever fucked up kinky thing you were going to inevitably throw at me. I was trying to make you happy.\"\n\n\"What you did made me happy,\" he replied. \"That was what I wanted, babe.\"\n\n\"To be told you couldn't come and a bit of choking?\"\n\n\"For you to do what you wanted.\" He trailed a finger up my stomach, making me shiver. \"I like it when you take charge, babe. I mean, yeah, you looked hot as fuck in that outfit, but I didn't need that or all the toys or... well, maybe the restraints. Those were pretty handy. And surprisingly comfortable. But the best part of all this was getting to be part of your fantasy.\" His hand came up to my chin, tilting my face up. \"If you can look me in the eye right now and tell me that you've legitimately got a deep, dark fantasy about tying me up and tickling me with a giant fucking peacock feather, I swear to you, I'll put myself back in those restraints and let you do it.\"\n\n\"Sure you would,\" I said, rolling my eyes.\n\n\"I would!\"\n\n\"You can't even say the word 'feather' with a straight face. You'd laugh me out of the room if that was something I wanted.\"\n\n\"You think so?\" He leaned back, looking arrogantly affronted. \"Did I laugh at you when you said you wanted to dominate me?\"\n\n\"Yes.\"\n\n\"No I didn't!\"\n\n\"Yes, you did, you bastard.\" \n\n\"Babe, I didn't\u2014\"\n\n\"We were on the phone, and I said I wanted to dominate you, and you were laughing.\"\n\n\"I wasn't laughing at what you said. I was laughing because you were half-drunk and could barely get the words out.\"\n\nI twisted my mouth to the side, not sure what to say.\n\nHe nudged me gently. \"Come on. Did I laugh when you said you wanted to tie me up?\"\n\n\"I... well, no.\"\n\n\"And did I laugh when you said you wanted to tell me when I could come? Or that you wanted to make me wear your panties, which frankly, I'm kind of surprised you didn't given how\u2014\"\n\n\"I did want to do that, but I had to waste so much of my time trying to make you do literally anything I told you to that I didn't get around to it.\"\n\nHe bit his lip as the corners of his eyes crinkled, hiding a smile. \"Well, I couldn't make it that easy on you, babe. Where's the fun in that?\"\n\n\"I wouldn't know,\" I said flatly.\n\nHe grinned and tried to pull me in for a kiss. I turned my head, pouting immaturely, but that didn't stop him from pressing his lips to my cheek and nuzzling against me.\n\n\"Fine,\" he said in that cheesily husky voice that was far sexier than I was willing to admit. \"I'm sorry I didn't listen, Miss. I'll wear them for you next time.\"\n\n\"Next time?\" I repeated.\n\nHe paused. \"Well... yeah. We're doing this again, right?\"\n\nI shrugged half-heartedly. \"Maybe. I mean, it was a lot of work and you're pretty high-maintenance.\"\n\n\"High-maintenance? Me?\"\n\n\"You know damn well you're high-maintenance.\"\n\n\"Well, yes, but I'm worth it.\"\n\nI rolled my eyes. \"I'm glad you think you are.\"\n\n\"Babe.\" He moved back so he could look at me. \"You said that was one of your top ten orgasms.\"\n\n\"It was.\"\n\n\"And you came twice.\"\n\n\"I did.\"\n\nHe looked incredulous. \"So you'd want to do that again, right?\"\n\n\"We'll see.\" I surprised him with a quick kiss. \"What's in it for me?\"\n\n\"What's\u2014\" He stopped, then chuckled as he shook his head. \"Come on, Miss. I'll do anything you ask me to.\"\n\n\"Mmm, there it is.\" I squirmed closer to him. \"Anything at all?\"\n\n\"Anything you want, Miss.\"\n\n\"What about... laundry?\"\n\n\"Laundry,\" he repeated. \"Your laundry?\"\n\n\"Mm-hmm. And you know, I hate vacuuming. And dishes. And cleaning the shower.\"\n\n\"I see. Do you also want me to peel grapes and feed them to you while you lounge on the couch?\"\n\nI shrugged. \"Couldn't hurt to try. And maybe a neck rub while I'm studying. You know how stiff it gets hunching over books.\"\n\n\"I do.\" He ran his fingers up my side again. \"You know what would make doing all of this for you a lot easier, Miss?\"\n\n\"If I promised it meant I'd dominate you and choke you and stick my fingers up your butt again?\"\n\n\"If you moved in with me.\"\n\nRecord scratch.\n\nFreeze frame.\n\nIt came out of nowhere. One moment, there was nothing, and the next, a hundred thousand thoughts were tumbling down the mountain of insanity that had appeared in my mind. \n\nHe wanted me to move in with him.\n\nJ.P. wanted me to move into his apartment.\n\nWith him.\n\nMe.\n\nMaybe it wasn't a hundred thousand thoughts. Maybe it was a hundred thousand iterations of the same thought, which was my way of trying to process the concept of moving in with my boyfriend. \n\n\"Babe?\" he asked when I didn't respond. \"Are you\u2014\"\n\n\"I have to pee,\" I said, and before J.P. could say anything else, I rolled out of bed and rushed to the bathroom. I immediately closed the door behind me and turned the tap on full blast before taking a huge, gasping breath. Shakily, I cupped my hands beneath the stream and filled them, then splashed the cool water on my face.\n\nIt was insane. It had to be, right? I mean, regardless of the fact that J.P. and I didn't exactly have a normal relationship, it wasn't normal to move in with someone I'd only officially been with for less than half a year. Like, yeah, maybe we'd been hooking up for six months before we'd gotten together. And maybe we'd known each other for years, and maybe I'd lost my virginity to him, and maybe I loved him in a way that I'd never even have guessed I was capable of. But it was insane. It was too much. It was too soon.\n\nWasn't it?\n\nI mean, we had no idea if we'd even be good at living together. I didn't even know if I was good at living with other people in general. Neither of us had ever had a roommate; I'd lived alone for all of university, and J.P. had lived in a single dorm for all of his degree, then stayed with his parents over the summers while school was out.\n\nAnd speaking of school, I was a couple months away from graduating. I had started looking for jobs, and I had no idea where I was going to end up. We'd talked about it a little bit, since some of my options would require me to move, but I hadn't decided anything yet. Moving in with J.P. when I didn't even know where I'd be six months from now was just a bad decision. \n\nExcept my lease was up not long after I graduated. And sure, my dad would probably keep paying for my apartment while I sorted my life out if I asked him to... but moving in with J.P. would mean I would be free from that debt. And moving in with J.P. would mean more nights like this, more days together, more sex and laughter and fun. We might not be good at living together, but we'd also thought we wouldn't be any good at being in a relationship.\n\nBut it was too soon.\n\nIt was too much.\n\nWasn't it?\n\nI took a deep breath, dried my hands on the towel, and turned the tap off before going back to my bedroom.\n\nJ.P. was standing at the edge of the bed, holding the towel he'd been wearing after his shower in front of him. He looked up as soon as I entered, his eyebrows furrowed.\n\n\"Nellie, I\u2014\"\n\n\"Yes,\" I said.\n\nHe stopped, staring at me. \"What?\"\n\n\"I want to move in with you.\"\n\nHis mouth was half-open. He closed it, pressing his lips together as a smile spread across his face. \"Damn.\"\n\nI raised my eyebrows. \"What?\"\n\n\"I said, damn.\" He grinned wider, shaking his head. \"Here I am thinking you rushed out of the room because I pushed things too far too fast, trying to figure out how the hell I'm going to get out of this situation without you trying to break up with me for real. So I was all set to pretend it was a joke to try and distract you from my super-awkward timing, and instead you had to go and make me the happiest I've ever been while wearing women's underwear.\"\n\n\"I... what?\"\n\nHe dropped the towel. Beneath it was the pair of lacy panties I'd been wearing earlier. They were a little tight for him, which wasn't a bad thing; all it meant was that I could see every inch of his cock bulging through the semi-sheer fabric. The black lace contrasted against the paleness of his skin, small amounts of hair poking out from beneath the stretchy waistband.\n\n\"What do you think?\" he asked, gesturing towards the panties.\n\nI let my eyes linger on his cock for a moment longer, biting my lip before I looked up at him and grinned.\n\n\"I think I'm gonna like being your roommate,\" I said, and he started laughing as I rushed forward to tackle him back onto the bed.\n\n**\n\nThank you to chasten and OneAuthor for proof-reading, as well as the amazingly awesome people who beta read. Paul M, Kevin Matheny, centralsquareguy, KW, AG, PM, N, ED, KJ, MidNyt, RP, and Christian Sonberg - thank you all for your support.\n\nAnd thank you for reading! I hope you enjoyed the story."
    ],
    "authorname": "MsCherylTerra",
    "tags": [
        "men in panties",
        "gentle femdom",
        "toys",
        "light bondage",
        "prostate massage",
        "butt stuff",
        "breath play",
        "kink exploration",
        "edging",
        "bisexual"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/a-very-nellie-fantasy"
}