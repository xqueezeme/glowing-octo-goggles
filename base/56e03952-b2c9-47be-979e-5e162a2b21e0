{
    "title": "Ryan Ch. 03",
    "pages": [
        "Dani slept all through the night. In fact, she overslept. As a consequence, she was jolted awake by the shrill ring of the cordless phone on the night stand. Struggling to come up from under the covers and her peaceful slumber, she wondered who in hell could be calling her at this ungodly hour. \n\nGlancing at the clock next to the phone, she realized the hour wasn't ungodly, it was almost noon. \n\nIrritated with the persistent ringing, Dani grabbed for offensive phone and knocked it off the night stand. Cursing, she quickly recovered it before it stopped ringing. \n\n\"Hello?\" she groused.\n\n\"Hey, baby Sister. Why didn't you answer your cellphone?\" Crystal asked.\n\nMoaning, Dani pushed her hair out of her face and sat up, bracing against the upholstered headboard.\n\n\"Crystal, you woke me up, from a sound sleep I might add.\"\n\nCrystal laughed. \n\n\"Oh, it's like that. You're already worn out by Mr. Fix It? Hell, I have to meet this guy to see who could get my baby sister heated up so fast.\"\n\nFully awake now, Dani said, \"Uh, no, Crystal. I'm not introducing you to Ryan until I know if he wants to have a real relationship with me. You can eat men alive and even though Ryan is a big boy, I don't want you cross-examining him with your sarcastic wit.\"\n\n\"Who me?\" Crystal asked with a chuckle. \"I'm as innocent as the day I was born.\"\n\n\"Yeah, right!\" Dani retorted. \n\nThe sisters exchanged light hearted banter as Dani told Crystal about her date with Ryan. Crystal, again, cautioned Dani to be careful. Dani assured her that she would be and again admonished her sister for being such a mother hen. \n\nThinking of her mother, Dani wondered how long it would be before Crystal spilled the beans to her about Ryan. It wouldn't do to ask her not to say anything to their mother because that would put her sister in a bad position and Dani didn't want her to lie. Their mother put the fear in them about lying at an early age\n\nAfter reassuring Crystal that she knew what she was doing, she goodbye and hung up. As for knowing what she was doing, she hoped that was true. Giving herself a mental shake, she got out of bed and headed to the bathroom to take a quick shower. There were things to get done and now that she was fully awake, she might as well get to them. \n\nDani spent the rest of the day cleaning her condo and doing laundry. It was boring and tedious, but someone had to do it. She could afford a house keeper once a week, but she just didn't like the idea of other people touching her things. Besides, just the thought of someone coming to clean her place would have her tidying up before the housekeeper arrived. \n\nShe was finishing up folding her laundry when her cellphone rang. Checking the caller ID, she saw that it was Ryan. \n\n\"Hi, Ryan.\" \n\n\"Hey, baby, I'm calling about our date. The concert starts at one o'clock. It would be best to get there well before that time. There's going to be a lot of traffic and although parking is free, we'd have to park somewhere in the boonies if we didn't get there early.\"\n\n\"Yeah, I know,\" Dani said. \"It was a big hassle the last time I went because Crystal was late, as usual. What time do you think we should leave?\" \n\n\"I think about eleven,\" Ryan replied. \"There will be some pre-show things going on and we could relax, get something to eat and talk before things get into high gear.\" \"Ok, that sounds like a good idea,\" Dani agreed. \n\n\"Listen, babe, I don't want to wait until Saturday to see you again. We've only been on one date and I'm already getting withdrawal symptoms,\" he laugh, not entirely joking. \"Are you doing anything Tuesday night?\"\n\n\"Nope, I'm free,\" Dani said. \"Would you like to come over?\"\n\n\"Hell yeah, I'd love to come over. I could get some Chinese take out for dinner. That is, if you like Chinese.\"\n\n\"I love Chinese. Bring some egg rolls and orange chicken and I'll feel like I've died and gone to heaven,\" she chuckled. \n\n\"Ok, babe,\" Ryan said with a smile in his voice. \"I've got to get to the bar now, but I'll see you around six Tuesday night.\"\n\n\"All right, I'll see you then.\" \n\nDani did a happy dance in the middle of the room before she went to take a shower. She had dreaded the day knowing all the work she had to do, but as far as she was concerned, the day had turned out golden. \n\n*  Dani thought Tuesday would never arrive. Ryan was now an almost constant fixture in her thoughts. More than one time she'd snapped herself out of a Ryan induced trance. Now that she had the work day behind her, she looked forward to getting ready for her date. \n\nAfter showering, she put on a pair of dark blue shorts and a plain white cotton top with capped sleeves. On her feet, she wore a pair of light blue sandles. She didn't see any reason to dress up as they weren't planning on going out for the evening and there was nothing wrong with Ryan seeing that she had nice legs. \n\nShe took a look at herself in the full length mirror behind her bedroom door. The shorts showed off her rounded bottom without being obvious. They weren't too long or too short; the hem hitting a few inches past the bottom of her butt. She liked her body, but she also liked leaving some things to the imagination. Giving herself a nod of approval, she went to the living room to wait for Ryan. On his way over, Ryan had his own thoughts. He knew that he was falling for Dani, fast. She wasn't just beautiful on the outside, but the inside matched. He remembered how her eyes sparkled and danced with laughter when she talked about her family and their antics. It was only her parents, Crystal and her brother James and they were as close as his own family. Both of her parents was an only child and there wasn't any close extended family. Even so, they nurtured and looked after each other. He liked that. Family was extremely important to him and eventually, he wanted a big family of his own. \n\nRyan knocked on the door and waited impatiently for Dani to answer. He smiled knowing he was hooked, but he didn't mind in the least. \n\nWhen Dani opened the door, she was, again, taken by how big he was.\n\nShe stepped aside to let him in as she said, \"Hi, Ry.\"\n\nRyan noted the shorten version of his name and returned the greeting with a smile.\n\n\"Hi, baby.\" \n\nHe entered the condo and Dani closed the door behind him. \n\nSetting their dinner on the dining room table, Ryan walked back to Dani, still seemingly stuck against the closed door. He took her hand and slowly pulled her away from it and enclosed her in his arms. Dani felt the warmth of his body and his even heartbeat as she pressed closer, inhaling the spicy scent of his cologne along with his own essence. \n\nHolding her closer, he felt the blood in his veins slowly ignite. He bent down and pressed his lips into the side of her neck as one hand gripped her hip, while the other squeezed the roundness of her butt. Dani shuttered as he pulled her up and into his now hardening cock.\n\nA low growl escaped Ryan's throat when Dani rubbed against his straining arousal. She was trying to get more of him, even though it was impossible through the layers of clothing. Still, when she felt his hand on her hip join the other one on her buttocks to lift her up, she wrapped her legs around his hips thrusting harder against his full erection. \n\n\"Fuck, baby,\" Ryan moaned, kissing her face, her eyelids, then scorching her sweet full lips. The next instant, his tongue was deep in the wet confines of her mouth, sucking her tongue, lightly biting it and then soothing it as he caressed her oral cavity's deepest regions. \n\nDani was lost in a sea of moans and whorling desire. He pussy swelled dampening her panties, her entire body ached for Ryan's hands, his mouth, his.... \n\nShe lost all thought as the situation spiralled out of control. Ryan reached down deep to find the brakes knowing that Dani wasn't ready for what he wanted so badly. He withdrew his tongue from her mouth and softly kissed her swollen lips while running his hands slowly up and down her spine. Finally, he brought both of them back to reality. \n\nDani sighed and rolled her head onto his shoulder, still clasping him with her arms and legs. Ryan chuckle and moved to the sofa, with her in his arms. She still straddled his body when he sat down, not wanting to break the contact. \n\nHer face was turned into his neck, she was too embarrassed to look into his eyes. It made her face flush to think of what he must think of her behavior. She'd never, not ever, reacted that way to any guy. She knew deep down that what really bothered her was that she would not have been able to stop herself if Ryan had continued. She had wanted him inside her so desperately, she still did. \n\nRyan ran his hand through her hair; grabbing a handful, he gently pulled her head back so that he could see her face. Lowering her eyes, Dani brought her head up from his shoulder. She was trying to hide, but Ryan wasn't having any of that. He wanted them to start their relationship the way they meant to go. \n\nReleasing her hair, he brought his hand down to rub her buttock, then kissed her forehead. \n\n\"Look at me, baby,\" he entreated. Dani's chocolate brown eyes met Ryan's emerald green eyes, shadowed with his own obvious arousal. \n\nOnce he had her attention he said, \" I know this is going faster than either of us could imagine, but I think that we should talk about what we're feeling and what we want from each other.\" \n\nDani nodded and he continued.\n\n\"I want a monogamous relationship. To make it clear, it means that we do not date anyone else; you are my woman, I'm your man.\" \n\nSeeing Dani's eyes widened, Ryan smiled and hugged her to his hard body for a moment. He then drew back and said to the unasked questions,\n\n\"Yeah, I'm already invested emotionally and I don't share. I'm not a jealous man, but I am possessive. My hands are the only ones that will be touching this hot little body,\" he said, leaning in to nip at her bottom lip. \n\n\"Only my lips, my hands, my cock,\" he whispered with a growl. \n\nWith the intimacy of the conversation and the proximity of his erection to her still tingling body, Dani damned the clothing that separated them. She wanted every inch of Ryan's manhood to take up residency in the place that she now considered it's home; deep within the confiens of her feminine counterpart. Looking into his beautiful eyes, she saw nothing but honesty there and felt she could be no less honest with him. \n\n\"Ryan, this is going way too fast for me, but I can't deny the attraction. I don't want to date anyone else either. Right now, I can't even remember the name of the last guy I went out with or what he looked like,\" she said, feeling a bit self-conscious.\n\n\"I don't know where this is going, but I do know that I'm drawn to you in a way that I've never been drawn to any other man. It's only been three days and I was ready to.. ...well, you know what I was ready to do.\" \n\nRyan smiled at the fact that she couldn't actually put it into words. \n\nDani was a lamb in a world of wolves. It's a good thing he'd come long, he thought. He was intent on protecting her, even from himself. He didn't want to rush things either, but he knew that eventually they would be lovers. He was a grown man who knew what he wanted and that was more than just sex. He could wait, because he was going to make damn sure that Dani understood that it wasn't just physical. \n\n\"Yes, I know what you wanted, baby,\" Ryan soothe. \"It's what I want too, but I want a lot more.\"\n\n\"You don't understand, Ryan, I've...uh, I've never gone all the way with a guy. I know you're experienced and I don't want to... uh... disappoint you,\" she sighed, feeling foolish, like the only twenty four year old virgin in the world.\n\nSurprised, Ryan said, \"I knew that you were inexperience, I just didn't know you were that inexperienced. You didn't react to me, when we met, the way more experienced women have. For the record, that isn't a bad thing. As for disappointing me, you could never do that. I'm already practically salivating, wanting to get into your panties as it is.\" \n\nHe grinned and his dimple winked at her. \n\nDani smiled feeling more relaxed. \n\n\"Let's do this,\" he said. \"We'll take it easy, go on dates, get to know more about each other. Although I know we need to slow it down, I don't plan on treating you like one of the untouchables. We're much too attracted to each other for that to even be possible, but we'll go at your pace. If I do something that doesn't feel right or if you're not ready to go there, tell me and I'll stop. It might give me a stroke, but I will stop, ok?\" \n\nDani nodded her approval. \n\n\"Yes, I can do that. I just don't want you to think that I'm a tease. I've been called that before. Some guys seem to think even kissing means you're ready for something more,\" she revealed.\n\n\"I'm not that kind of man, baby. No means no,\" Ryan assured her.\n\nDani leaned forward and dropped a soft kiss onto Ryan's lips, and said shyly, \"Thank you for understanding, Ryan.\"\n\n\"You're welcome, my little tease,\" he whispered before pulling her in for a long hot kiss, while Dani's brain temporarily short circuited. \n\nWhen she recovered from the kiss, she grinned and hit him with a pillow. \"I heard that!\" \n\n*\n\nThe outside concert was a huge success. Ryan ended up suggesting Dani invite Crystal and Isaac along. Crystal jumped at the chance as she was more than eager to meet him. \n\nCrystal was a mixed of her father and mother, while Dani favored their mother. Her dark brown hair was cut short by design, she never liked spending much time fidgeting with long hair. She was two inches taller than her younger sister and about twenty pounds heavier. The additionally height suited her taller frame perfectly. \n\nIsaac was what Crystal called a worked in progress. They'd been dating for a few months, but they still have some hurtles to get over before they could move to the next step in their relationship. Issac at six feet one inch tall, solidly built with medium brown eyes, close cropped black hair and warm dark brown skin was a good looking man. Crystal wasn't sure that he was the perfect man for her, but she knew that he had potential. \n\nThey all met up at Dani's apartment. \n\nCrystal's first sight of Ryan was accompanied by a whispered \"Damn!\" She looked around to see if Isaac heard her, but he was shaking Ryan's hand and hadn't noticed her slip up. \n\nHer next thought was, \"He's white!\" \n\nIt wasn't lost of Crystal that her brain registered how hot he was before his race. Thinking on it, she decided that she might have to change her attitude towards interracial relationships. She could definitely see why her baby sister would want some of that. \n\nCrystal notice that throughout the day, Ryan was very attentive toward Dani and didn't seem to notice the furtive glances thrown his way by more than a few of the women. Frankly, some of them didn't even try to hide their interest. Dani also had her share of admires who didn't even receive a glance from her. She couldn't blame her sister, who wanted hamburger when they had steak. \n\nSilently chiding herself, Crystal lamented all her efforts to push Dani into relationships that, she now knew, weren't right for her. It wasn't the guys fault nor was it Dani's. Even if her sister couldn't describe exactly what she wanted in a man, in her heart she had known. She should have had more faith in Dani. It seemed that she hit the jackpot with Ryan. * Over the next couple of months the bond between Dani and Ryan grew even tighter. They went out on double dates and to events with friends, all of whom accepted them as a couple. Eventually, they exchanged keys to each other's home. Ryan was the first to offer his. He wanted her to be as comfortable in his home as she was in her own. She thought it only fair to reciprocate, but knew she would not abuse the privilege nor the trust Ryan placed in her. \n\nNow that the flood gates were opened, Dani became more comfortable exploring her sexuality with Ryan. Although they didn't have intercourse, Ryan did keep her satisfied in the most amazing ways. He touched, kiss and licked every inch of her body, while she pleasured him in ways that made her face flame with heat. \n\nDani started on birth control pills two weeks after having the relationship talk with Ryan, but she wasn't sure about having intercourse so soon without a condom. The fact was, she didn't want anything between her and Ryan when they had intercourse the first, second or one hundredth time. She knew it wouldn't be risky, he'd shared his written medical history and he always used condoms, even his first time. \n\nEven though the thought intrigued her, Dani wasn't looking to get pregnant as yet. So, during her initial visit she asked her doctor how long she should wait after starting on birth control. She'd been shy about asking, knowing that she was ready for it to happen and she was sure that her eagerness was evident to the doctor. \n\nJames McClaren was her gynecologist of long standing, but that didn't keep her from feeling embarrassed about discussing sex with him. He was very understanding and made it as easy for her as possible. He suggested that she wait until the end of the second course of birth control pills before engaging in intercourse without a condom, but expressed the importance of safe sex. \n\nDani could wait. Barely.\n\n* \n\nBy the end of their third month together, Dani was on good terms with a few of the women in Ryan's circle. Most of them were close to each other and went on regular girlfriend outings, just as the men had their guy time together for sports and poker. \n\nDani didn't know any of them extremely well, but she and Jessica spent more time together than the others. Jessica was Wheeler's girlfriend, she and Dani hit it off at first sight. They enjoyed having lunch together and they talked on the phone regularly. Jessica was only a year older and was independent, outgoing with a great sense of humor. All of Ryan's friends were characters, especially Wheeler.\n\nJessica at five feet four inches tall, with short brown hair, brown eyes and 34B breasts was not Wheeler's typical type, which was tall, blonde and busty. Very busty. But, when he took Ryan's advice and looked beyond the double D's he was accustom to, he found a woman who meant more to him than he would have imagined. \n\nRyan took every care to make sure that Dani was integrated into his life and that included introducing her to his friends. She appreciated his efforts and Jessica's in acquainting her with their circle of women friends. Deep down, she'd been afraid that some of his friends might object to her being black. While she didn't know what they said in private, they seemed open and engaging to her personally. Frankly, she couldn't see Ryan having any other type of friends. There were still more to meet, but she already felt like an integral part of Ryan's life. \n\n*\n\nDani was preparing dinner when Ryan called to say he was just leaving the bar and would be at her place in about thirty minutes. He asked if she needed him to pick up anything from the store. She assured him that she had everything well in hand with the only thing missing was his sexy self. \n\nRyan chuckled, liking the fact that Dani had lost most of her shyness where he was concerned. She'd become flirtatious and sometimes aggressive in their loving making. Even though they still hadn't engaged in intercourse, there was no doubt in either of their minds that they were making love. He knew that it wouldn't be long before Dani would be all his.\n\nA short while later, the meal was finished and the table was set. Dani took the opportunity to take a quick shower, put on a pair of white-wash demin jeans and a red short sleeved knit pullover shirt. She brushed her hair back into a ponytail and put on a thin layer of lip gloss. She was returning to the kitchen when she heard the key in the lock. ",
        "Upon seeing her, Ryan opened his arms and said theatrically, \"Honey, I'm home!\" \n\nWithout a word, Dani rushed into his arms, backing him up against the door and giving him a long deep kiss. Ryan picked her up by her firm buttocks as she wrapped her legs around his hips. Without relinquishing the lip lock, he turned and pinned her to the door. \n\nRyan continued his oral salutations with his tongue sliding into her mouth. He licked inside her lips and sucked on her tongue, drawing a long drawn out groan from Dani who squirmed as he delved into the warmth of her mouth. Grinding herself against him, she couldn't get close enough, couldn't taste enough of this man. \n\nRyan's mouth slid down to her neck as he fought for control. She was so damn hot, so tuned in to his desire that he was on the brink of coming. Dani's hand slipped down and stroked Ryan's growing erection through his jeans. He grunted, then pulled her hand away and kissed her palm.\n\nHe held her in his arms taking note of her droopy eye lids and the sound of her labored breathing, a testament to her arousal. Leaning forward, he touched his forehead to hers trying to bring his own breathing under control. It was long minutes before the tightness in his groin eased and the risk of shooting his load in his briefs passed. \n\nOnce he was under control, Ryan chuckled and smacked her on her luscious ass. \n\n\"Ouch, that hurt, \" Dani complained, but she couldn't hide the shuttered that zinged through her body. Any touch from Ryan made her nerve endings go haywire. The man was a sexy beast. \n\n\"You loved it, admit it,\" Ryan teased as he set her back down on her feet, still holding her body pressed to his. Before she could answer, he gave consideration to another thought. \"Hmmm, I might have to give you a real spanking in the near future. Add a little heat to these buns,\" he said squeezing her butt. \n\n\"Umm, sounds yummy. Do I get to spank you too?\"\n\n\"Baby, you would break your delicate little hand trying to spank my hard ass. It won't be nearly as much fun as I'll have spanking you and then soothing your sweet caramel cakes.\"\n\n\"Caramel cakes, huh? Cakes are for eating, you know.\"\n\n\"Oh, make no mistake about it baby, there will be plenty of eating and licking and....\n\nHe never got to finish because Dani clapped her hand over his mouth and then went off in peels of laughter with Ryan joining her. When the laughter died down, she quickly kissed Ryan and wiggled out of his grasp. Reluctantly, he backed up allowing her to walk past him. \n\nAs they headed to the dining room, On cue, Ryan's stomach started to growl. Dani smiled at him and gave his belly a little pat. \n\n\"That's your stomach begging for food,\" she said with a grin. \n\n\"It has a right since I worked through lunch.\"\n\n\"Ryan,\" Dani said exasperated, \"how can it be that you didn't eat lunch? For Pete's sake, you own a sports bar.\" \n\nShaking her head, she finished setting the table. \n\nAfter sitting down, Ryan replied.\n\n\"It's easy, babe. I was working on the books and didn't realize how much time had passed. Everyone knows not to bother me when I'm going over the accounts, except in the case of an emergency. When I realized how late it was, it was nearly time for me to leave any way. So here I am with a stomach that's talking to me and a sexy woman who thinks I'm going to waste away from one missed meal,\" he teased. \n\nDani went over and kissed the top of his head while leaning into his big body. \"Ok, I realize I'm being the mother hen that I always accuse Crystal of being. But I care about you and I get to nag you about stuff like eating regularly. \"\n\n\"I care about you too, baby and I love that you're looking out for me,\" he said as she sat down next to him. \n\nAs they stared into each other's eyes, Ryan brought her hand to his lips and kissed the back. Dani felt her next breath leave her body on a wispy sigh. However, the moment was lost when Ryan's stomach growled again. They both looked surprised and then laughed. With the mood broken, they turned their attention to the meal, cloaked in the happiness of what felt like domestic bliss. \n\nIt was a delicious meal of steak and roasted root vegetables with home-made dinner rolls. Dani wasn't a stranger to cooking, she knew how to cook even before she got out on her own. Growing up, many hours were spent helping her mother in the kitchen and thanks to her sweet tooth, she'd paid special attention to baking as well. Her grandma Carter's decadent chocolate lava cake was a family favorite which she made for Ryan. \n\n\"Ummm,\" Ryan groaned as he took the first bite of the dessert.\n\n\"Baby, this is delicious. Whenever I've had a bad day, make this for me and I assure you I'll be a happy man,\" he vowed. \n\n\"I'm glad you like it. I'd love to make it for you again and I won't even wait until you've had a bad day,\" Dani said with a warm smile.\n\nAs great as the meal was, it was not the end of the evening's enjoyments. Dani and Ryan spent a good deal of time feasting on each other on the sofa before they went to bed and continued their exploration of each other's body. * \"Aww, come on Crystal,\" Dani pleaded, \"it's only shopping with me and a couple of Ryan's friends.\" \"Yeah, yeah Dani, but I don't know these people. What is he doing with women friends anyway,\" Crystal asked, slightly perturbed. \"They're the women of his male friends, Wheeler and Grant,\" Dani explained patiently.\n\n\"Jessica is Wheeler's girlfriend. Monica is Jessica's sister and Grant's wife. They're bringing along their friend Karen. You can't get to know people until you meet them, so that's no excuse. Besides, you'd be helping me out,\" Dani reasoned. \n\n\"This is the perfect way to get to know them better and build our friendship. It's one day and you don't have to make a major commitment to them. It's important to me Crystal,\" Dani said with a theatrical sigh, knowing she was laying it on pretty heavily. \n\n\" Ok, ok, I'll do it, Crystal capitulated. \n\n\"You know I'm not much of a people person, but for your sake I'll make the effort. Unless one of them says something I don't like, then all bets are off,\" she warned. \n\n\"Thanks Crystal. I'll hold you to being on your best behavior. Although Jessica and I are pretty friendly, I don't know Monica as well and I don't know Karen at all, so I need a little support. I want to make the effort because they're Ryan's friends and I'm going to see a lot of them and what better way to really get to know them than away from the guys. \n\n\"Huh! I didn't say best behavior. Hell, I don't even know what my best behavior would be,\" Crystal laughed. \"As long as there is no bloodshed, I'll be happy,\" Dani teased. \n\n\"Ok, Dani. I'll see you at ten tomorrow morning.\"\n\n\"Good. Thanks again Crystal, bye.\" *  True to her word, Crystal was on time.\n\nDani was trying to get dressed while talking to Ryan on the phone. Hearing the doorbell ring, she hopped to the door, trying to put on her shoe while holding the cordless phone between her head and shoulder. She made it to the door and opened it to let Crystal in, nodding to her in greeting.  \"What should I wear?\" she asked Ryan. \n\nCrystal sat down on the sofa smiling at Dani as she finally got her shoe on. She was unabashly listening in on the conversation and was able to follow a bit of it even without hearing the other side. What she missed, she figured Dani would fill in later.  \"Yes,\" she heard Dani say. \"What time will you be home?\"  Dani waited for Ryan to answer, then said, \" Ok. I'll be back before then. I'm making dinner tonight.\" \n\nShe laughed at something he said and then told him, \"You'll just have to wait. You are so bad Ryan.\"\n\nDani laughed again, then paused for his response. \"Ok, baby. I miss you too. See you later, bye.\"\n\nDani felt flushed after talking to Ryan. That man could get her hot just with words and he didn't mind doing it over the phone. Smiling, she turned to see Crystal looking at her with a raised eyebrow, waiting for an explanation. \n\n\"Oh, no Crystal, I am not telling you what Ryan said.\" Fanning herself, Dani sat down, but she couldn't keep the smile off of her face. \n\n\"Whatever he said sure got you hot. You sure there isn't something you want to tell your big sister? We've done the facts of life talk already, but you might need a little refresher course,\" Crystal suggested. \n\n\"Thanks a lot Crystal, but I'm in the master class with Ryan. Oh, my God, if you only knew!\" Dani groaned then slapped her hand over her mouth as she looked at Crystal wide eyed. \n\n\"Yeah, I bet. That man is a walking wet dream. Well, if you like that type,\" Crystal said with a straight face.\n\nWhen she saw Dani's incredulous expression, Crystal serious demeanor gave way to a gut wrenching laugh. \"Shit, who wouldn't like that type. I have to admit that as much as I love me some chocolate, that white boy is damn fine.\" \n\nDani just shook her head, got her purse off the breakfast bar and dragged Crystal, who was still laughing, out of the house. Crystal offered to drive and Dani accepted reluctantly knowing that she'd have to curb her sister's tendency to speed. \n\nThey were meeting the women at The International Plaza. There were a ton of stores and restaurants in the complex. They could do all the shopping they wanted and go to lunch, all without having to fight traffic. \n\nDani particularly wanted to go to Victoria's Secret. She'd shopped there a couple of times in the past months replacing underwear that Ryan tore while trying to rid her out of them. Sometimes the man just didn't have any patience. \n\nHe offered to pay for them, going so far as to say that he'd go with her to pick them out. She almost hyperventilated thinking of Ryan going with her to buy sexy underwear. She could imagine herself having an orgasm while he caressed the crotch while asking her opinion or the opinion of the salesperson. The man was bad, bad, bad.\n\nShe declined the offer, but not for that reason. The thing was, she didn't want to take the money because, frankly, she was buying them for him. He loved how she looked in sexy lingerie, not that she kept them on for very long. Before she met him, she was content with basic underwear, feminine, but not particularly sexy. This was sort of like a gift for him, one with fringe benefits for her. \n\nThe roll of the car had lulled Dani into a daydream. When she came out of it Crystal was pulling into the parking lot. Their first stop was Sephora's as most of them wanted to buy make-up and skin care products. The place was crowded, but they managed to find a parking space fairly close to the store.\n\nBefore they got out of the car, Crystal said, \"Oh, there was something I wanted to ask about your phone call with Ryan. You asked him something about what you should wear, are you going somewhere special?\"\n\nDani grimaced a bit, then answered.\n\n\"His folks are having a get dinner,\" she said with a little apprehension. \"I'll be meeting his entire immediate family and their significant others this coming Saturday. I'm kinda nervous about the whole thing. Meeting the family is suppose to be a big deal, isn't it?\" \n\n\"Yep, especially with a guy like Ryan who's very close to his family. It's showing them that he's serious about you. I'm sure they're curious about you anyway, the same as Mom and Dad would be curious about him, if they knew about the two of you.\" \n\nSeeing Dani's anxious expression Crystal said, \n\n\"Don't get your britches in a bunch about it, the guy is crazy about you. If his family is anything like him, they're going to think you're great too. It's a good thing, Dani.\" \n\n\"From your mouth to Martha Stewart's ear. I just hope they like me,\" Dani sighed. \"When they were picturing a partner for Ryan I'm sure it wasn't a black woman. Race doesn't matter to Ryan and he said his family doesn't care about that either. I just have to trust his judgment.\" \n\n\"Well, I'm glad you've talked about that, but has he actually told them that you're black?\" Crystal asked.\n\n\"Yeah, but I know people can say they're not prejudiced, until it comes to a member of their own family. Ryan means so much to me, I don't want anything to mess this up. Girlfriends can come and go, but your family is always your family,\" Dani said. \n\n\"You're in love with him, aren't you,\" Crystal asked, quietly.\n\nLooking Crystal straight in the eye, Dani smiled and said, \n\n\"Yeah, I am. I don't think I could of hidden that from a blind man. He is the most incredible man and I think I knew it would be like this, at least for me, from the first time I saw him. I think he loves me too, although he hasn't said it.\" \n\n\"Well, hells bells, Sis, you finally got your man and without any help from me. Hmm, I'm kind of put out about that. All that time I spent trying to find you the perfect man and you find him at Lowes. Who the hell would believed a story like that?\" she chuckled. \n\n\"Not me. But, that was before I met Ryan,\" Dani replied with a sigh. \n\n*\n\nThe ladies were waiting for them just inside of the store. Monica and Jessica smiled as they entered, but the other woman, who Dani assumed was Karen, was tapping her foot impatiently. \n\n\"Have you guys been waiting long,\" Dani asked with a little concern.\n\n\"Oh, no,\" Jessica assured her.\n\n\"We've only been here a couple of minutes. Besides, you're not late,\" she said checking her watch, \"you're actually a few minutes early.\" \n\nBy the way,\" she said turning to her friend, \" Dani, Crystal meet our friend Karen Wentworth. Karen meet Danielle Carter and her sister Crystal.\"\n\n\"Hi Karen, pleased to meet you,\" Dani said holding out her hand. Karen hesitated a second before offering Dani a stilted smile and a tepid hand shake. \n\n\"Likewise, I'm sure,\" she said in an overly proper voice, then reached out to shake Crystal's hand giving her a genuine smile. \n\n\"Ok. It's not because I'm black,\" Dani thought. \"She seems to like Crystal. How could she have an attitude towards me when she doesn't know me from Eve? Something just doesn't feel right about this.\"\n\nDani hadn't a clue what the woman's problem was, but she'd get to the bottom of it sooner or later. Right now just wasn't the time or place. \n\nThe women spent the next six hours power shopping. They went to the same stores at times, at other times they split up and agreed to meet up somewhere central at a specific time. \n\nThey were all bag heavy and tired when they finished their marathon store hopping spree. Happy with their purchases, they took them to the cars, then went back into the mall to have a leisurely lunch. \n\nAlthough Dani caught Karen giving her a strange look once or twice, her mood improved somewhat, but not enough in Dani's mind. \n\nThe women decided to eat lunch at the Brio Tuscan Grill. After being seated by the hostess, she told them about the specials and took their drink orders. Monica and Karen choose white wine, while the others opted for sweet tea. Once the hostess left to fill their orders, they perused the menu and decided on their meal choices. \n\nBefore they could get a good conversation going, the waitress appeared with the drinks and was given their lunch orders. \n\nThe conversation was casual with the talk centering first on their purchases, their families and their likes and dislikes, not in any particular order. They all told stories about growing up and dating for the first time. Both Jessica and Monica told hilarious stories, but Karen had to be cajoled by Jessica into taking part in the conversation. Dani didn't think it was because Karen was shy. \n\nEven Crystal was talkative which amazed Dani. Her sister was practically badgered into coming, but she looked to be having a great time. Crystal said she wasn't a people person, but she was really open and friendly with people she liked. It was obvious that she liked Jessica and Monica. \n\nDani noticed that Crystal wasn't as talkative with Karen, although Karen did try to engage her in conversation. She thought Crystal might have sensed the woman's attitude towards her. With other women, Crystal rarely missed a trick. \n\nIt was close to the end of the meal when the conversation turned to the man/woman relationship paradigm. It was then that Karen, out of the blue, said, \"I heard from Caroline and she's coming back home soon.\"\n\nThere was a small smile on her thin lips which was directed towards Dani. \n\nJessica and Monica's eyes cut sharply to Dani. Seeing no reaction from Dani, Jessica turned to Karen and asked, \"When did you talk to her?\"\n\nKaren, now having everyone's attention, savored the moment before she answered. \n\n\"Yesterday morning. She's nearing the end of her overseas contract and should be transferred back here in a few weeks. It's been quite a while and she's looking forward to renewing old friendships.\"\n\nWith a sly smile, she continued. \n\n\"She asked about Ryan. I told her he's still playing the field.\"\n\nThere was an awkward pause with Karen practically grinning at Dani who thought she'd turned into some kind of mad hyena. She wasn't going to take the bait as she caught on to the fact that Karen was talking about Caroline Jameson, Ryan's ex-girlfriend. \n\nDani didn't like public scenes and decided to just let it ride.\n\nHowever, Crystal wasn't of the same mind. She didn't know who Caroline was, but she knew by the look on Dani's face that she did. \n\n\"Who the hell is Caroline?\" Crystal asked, her tone making it clear that somebody had better get to talking. \n\nKaren smiled and offered,\n\n\"Caroline is Caroline Jameson, my best friend. She and Ryan are in love, but broke up because of a misunderstanding. So, she took a job overseas to let things off.\"\n\nShe ended the explanation with a stare at Dani. \n\nCrystal looked from Dani back to Karen before saying anything. She knew that Karen was deliberately trying to bait her sister and she wasn't having any of it. \n\n\" So, let me get this straight. Your friend use to date Ryan, then he kicked her to the curb, for whatever reason, and she skipped town to hide her humiliation.\"\n\nKaren opened her mouth ready to refute that statement, when Crystal raised her hand, palm forward, to stop her. \n\n\"Save it,\" Crystal said. \"There is no way in hell you're going to convince me that some broad just up and left that fine ass man because of some misunderstanding.\"\n\nKaren sank back into her seat glowering at Crystal.\n\nStaring back, Crystal said, \"After licking her wounds in England for a while she's coming back to try to stake a claim on him again. The man wouldn't have dumped her if he wanted her, even you should be able to see that, Karen. Now you're here trying to stir up shit.\"\n\nDani tried to intervene, but Crystal was on a roll. \"Crystal, it's ok, I'm not... \n\n\"No! No, Dani,\" Crystal said trying to calm her growing anger. \n\n\"This bitch has been brewing her crap all day. I knew something was up with the way she was looking at you when she thought no one was watching. She brought this up, so we might as well get the book read and close out this chapter.\"\n\nKaren's smile was long gone and she was now squirming in her seat. Both Jessica and Monica were frowning at her, letting her know that they didn't appreciate her treachery. After the tongue lashing from Crystal, Karen knew it was too late to do anything about the predicament that she'd gotten herself into. \n\nNeither Jessica or Monica could believe that Karen was trying to blind side Dani like that. They knew she was upset that Caroline got hurt, but they thought she and Caroline were over this thing with Ryan, at least that's what Karen led the sisters to believe. \n\nThey knew that Ryan wasn't playing the field. Both Wheeler and Grant said that Ryan was crazy about Dani. They'd trust their men over Karen any day. Besides, they'd seen with their own eyes how much he cared for Dani.\n\nRed faced and still misguided, Karen tried to save face and mustered up courage to voice her outrage. ",
        "\"Wait a minute! You can't talk about Caroline like that. She and Ryan were perfect together. They've known each other since they were kids. Besides, Ryan hasn't been in a serious relationship since he broke up with Caroline. He hasn't even dated the same woman for more than a few months. It's just a matter of time before he realizes that Caroline is the one he wants,\" she said looking pointedly at Dani.\n\n\"Bitch, are you crazy,\" Crystal retorted. \"Why do you care? It seems to me that you should have been spending more time paying attention to your own personal life than sticking your nose into something that isn't any of your business.\"\n\nBefore Karen could respond, Monica asked incredulously, \"Have you been keeping tabs on Ryan and reporting back to Caroline all this time?\"\n\nThe guilty look on Karen's face was answer enough. \n\n\"How could you Karen! Ryan hasn't given the slightest indication that he wanted to rekindle his relationship with Caroline. She's been gone two years and he hasn't made any attempt to contact her. I thought I knew you. I just can't believe you did this.\"\n\nKaren was starting to tear up. \n\n\"She's my best friend,\" she cried, \"You know how she was after Ryan broke up with her. She just thought that once he had time to think about things, once he had time to miss her, he would change his mind. I only tried to do what I could to help her.\"\n\n\"Girl, you've got more problems than your friend Caroline,\" Crystal stated. \n\nJessica turned to Dani and said, \"I'm so sorry about this Dani. If I had known what Karen was up to I wouldn't have invited her to join us. \n\nShocked, Karen said in an anguished voice, \"Jessica!\"\n\n\"I'm sorry Karen, but that was pretty low. Ryan is a grown man who's perfectly capable of making his own decisions, which I believe he did when he broke up with Caroline. You can't fix Caroline's life. She needs to move on. I might not have known what you were up to, but I do know this, if you hurt Dani, Ryan will make you very, very sorry.\"\n\nEverybody suddenly realized how quiet Dani was. \n\n\"Are you ok, Sis,\" Crystal asked, concerned. \n\nDani smiled slightly, amused at the sudden attention.\n\n\"I tried to tell you I was fine, but you went all Madea on her. I knew about Caroline and I know why Ryan broke up with her. Karen is wasting her time, but it's her time to waste. Ryan is never going back to her, even if I'm not in the picture.\" \n\nKaren bowed her head knowing she took a gamble and lost. Because of her stupidity she might well lose two of her good friends, Jessica and Monica. \n\n* \n\nOnce Dani got home and Crystal left, she was able to think about what Karen tried to do.\n\nWhile she thought it was admirable that Karen wanted to help her friend, she'd step over the boundaries by fostering hope for Caroline when there was no chance that Ryan would reconcile with her. Ryan was lost to her, not because of another woman, but because of his own feelings. Nothing was going to change that. \n\nThe past was the past and Dani saw no reason to burden Ryan with this little bit of drama. \n\n*\n\nDani was making herself comfortable at Ryan's place. In fact, she was spending a lot of time at his house, her clothes in his closet attested to that. Ryan called earlier to say that he was working late giving her more than enough time to take a long warm bubble bath and put on something more comfortable than her work clothes. \n\nAfter the bath, she wrapped herself in a big fluffy blue towel and went into the bedroom, but stopped dead in her tracks. Ryan was lying on the bed dressed in jeans and a black polo shirt. He was on his side, with his hand propping up his head as he grinned at her. \n\nHe'd arrived while she was in the shower. Hearing the sound of running water, he walked into the bathroom, peeped into the shower area and saw her sliding the loofah over her sexy body. His imagination kicked in as he thought of the warm water slooshing over her silky brown skin as he slid his hands over her wet slippery flesh. His palms itched and his cock twitched as he restrained himself from doing just that. \n\n\"I thought you were working until eight tonight,\" Dani said, smiling back at him. \n\n\"Didn't need to be there. Micah came by and relieved me. He'd finished his meeting downtown and wasn't ready to call it a day, so here I am,\" he explained. \n\nSitting up on the edge of the bed, Ryan pulled Dani to him. \n\nHe loosened her death grip on the towel and pulled it from her body. Dani heard his intake of breath as he looked at her, his eyes touching all the curves as he felt the warmth radiating from her moist body. \n\nGroaning, he pressed his face into the valley between her firm breasts, taking in the light fresh scent of her body wash and the heat of her beginning arousal. No matter how many times he saw her naked, touched her sweet body, it was always the same exquisite pleasure.\n\nHe turned his head and kissed the right nipple, then swiped it with a broad stroke of his tongue. Dani's hands flitted through his short hair, her nails scraping his scalp as her intimate recesses started to tingle. She signed when she felt his thick middle finger slip into her tight wetness, the slight roughness making her walls constrict. \n\nRyan stroked in and out, slowly at first, then increased the pace as her vaginal fluids lubricated his finger. By the time he inserted a second finger, Dani was pulling at his hair, groaning in need. With his left hand holding her ass tightly, he slotted his index and middle fingers into her now spasming pussy, picking up the pace as her desire grew. \n\nDani panted his name over and over, as he delved faster into her burning vagina. Within minutes, she threw back her head and screamed out her orgasm, her warm cream flowing into his palm. \n\nHer legs felt like jelly, but Ryan held her and gently pulled her down to the bed. Still panting with her eyes closed, Dani felt Ryan ease off the bed. She heard the rustling of clothing and knew what he was doing. In her mind's eyes she could see the hard planes of his body and the jutting thickness of his cock.\n\nRyan head was spinning with desire as he quickly undressed. Every time he touched Dani, it was becoming harder to stop. Although he always orgasmed during their love play, he wanted more, he wanted to feel his dick deep in the slick haven of her sweet body where he could spilled his seed.\n\nHe knew from the beginning that waiting would be difficult and that had proven to be true. But despite what he wanted, he needed her to trust him to keep his promise to go at her pace. Whatever that would take, he'd do it, as long as she wanted that way, he would do it. \n\nHe knew that she wanted him bareback. Just the though of nothing between them heightened his arousal and made waiting even more difficult. Looking down at her gloriously naked body, he felt desire sweep through his entire body and felt a burp of pre-cum from his rigid cock and the tightening of his abdominal muscles.\n\nDani opened her eyes as she felt Ryan's weight on the bed. She continued to watch him as she moved to the center of the bed, entralled by his arousal. His green eyes were so dark with desire that they almost looked black. She smiled as he opened her trembling legs and crawled his big body between her thighs settling into the cradle of her sweet curvy body. \n\nWith a sigh, he held her head in his hands and rained soft kisses all over her face. Dani arched her back and moaned as he bit and licked her lips until they were swollen. While he devoured her with his oral ministrations, the head of his long cock rubbed against the small patch of fine hair on her neatly trimmed mons. \n\nDani arched and groaned deeply.\n\nRyan, momentarily having his fill of her lips, slid down to her full breasts, taking a hard nipple into the hot interior of his mouth. He teased the sweet bud with the tip of his tongue, rasping it with each stroke. Dani 's back bowed as she luxuriated in the pleasure zinging down from her breast to her throbbing core. \n\nRyan continued to ravage her plump breasts, but she wanted something more. With her hands on his shoulders, she urged him down the length of her body, pushing him closer to the source of the fire that inflamed her entire body. On the way down, he stopped to briefly flick his tongue in search of her deep belly button, licking and sucking before moving on. In a rush of pleasure her pussy throbbed and gushed its fragrant juices. \n\nBy the time his lips brushed the tuft of soft hair, Dani was almost delirious with desire for her man. No one had ever touched her the way Ryan did. He drove her wild with the merest touch and claimed her body and soul. She didn't know what power he held over her, but she understood that it was the sweetest pleasure she could ever know.\n\nDani's mind melted, as did her body when his mouth slid down to her opening and her rich nectar flooded his tongue. He groan and slurped as he devoured the delicious banquet set before him, growling his enjoyment. Then his eyes caught hers as she watched and she knew in that moment that this would be the night. \n\n\"Ryannnnn,\" Dani groaned on the threshold of a searing orgasm. She needed that release, but at the same time she wanted it to go on and on. But it was too late for waiting, the fine tentacles of burning heat were crawling up the walls of her pussy.\n\n\"Oh, fuck, baby! Oh, yessss.... Right there, right there.. Oh, my godddddddd!\" she screamed as Ryan took her clit in his mouth and suck down hard, hurling her into into a splintering roaring climax.\n\nDani's orgasm rolled over her in huge waves as Ryan alternately teased her clit and suck at her opening, swallowing her creamy goodness as if it were a lifeline. Just as she thought it was over, her orgasm built again, but this time it rocked her into oblivion. \n\nLong minutes later, when Dani became aware of her surroundings again, Ryan was still licking her pussy and her inner thighs. Her breathing was far from normal, but at least she could catch a breath without feeling she was losing consciousness.\n\nShe sighed and stroked his head. \n\nLooking up at her, he flicked her clit with his tongue and watched her eyes flutter close then open again as she arched her body into his glistening lips. Giving her clit a final nip and a kiss, he smiled at her, licking his wet lips. \n\nReturning his smile, Dani pulled slightly on his hair and whispered his name. \n\n\"Ryan.\"\n\nHis face grew suddenly hard with need. \n\nRyan pulled up onto his knees, with his thighs supporting the back of hers as he held her open to his gaze. Reaching down he dipped his thumb into her pussy, coating it with her pearl essence. As Dani watched, he licked the juices off of his thumb and grinned when her eyes widen. \n\nLeaning over her, he bowed his head and softly kissed her, pushing his tongue into her mouth, letting her taste the flavor of her arousal. Dani caught his tongue with her lips and lightly sucked, then explored the interior of his mouth. She hummed as she shared the tang of her desire with him. \n\nAs they continued to kiss and stroke each other, the heat began to rise again. Dani looked up at Ryan and said the words he'd been waiting to hear.\n\n\"Come inside me, Ryan,\" she begged. \n\nRyan breathed a deep sigh and pressed his forehead onto hers as his heart started to hammer. His fingers once again coaxed her burning pussy into giving up it's silky fluids. When he heard her crying out for completion, he rubbed the head of his cock against her opening sliding it up and down while adding his pre-cum to her lubricating juices. \n\nDani arched her back as she locked her arms around his neck, gasping for each breath as she ran her hands through his hair. Her entire body was on fire, even her fingers felt like the nerve endings were over stimulated. \n\nRyan, pressed his cock head into Dani hot pussy, straining from the effort not to take her in one thrust. When the head popped in, he heard the sharp intake of her breath and felt the tightening of her body as he breached the fortress of her virginity. He stopped to let her get accustomed to his hardness and width. Within seconds, Dani was urging him for more, wrapping her legs around him. \n\nRocking his hips slowly, Ryan slid more and more of his cock along Dani's tight channel. He started a rhythm that would allow a few inches of his shaft to slide in and out rapidly until her body lost some of it's tension. There was little pain, however, the pressure from the girth of his shaft was considerable. She arched her back, her bottom lip trembling slightly. \n\nPulling his head down to kiss him, she whispered, \"Mine.\" \n\nRyan groaned at Dani's possessiveness, but remained still a few more seconds before slowly sliding his cock in and out of her soft willing body. He began the long deep strokes, patiently accustoming her to his size. Soon his movement flowed into an increasingly smooth rhythm, her fluids pouring out to aid the delicious ride to fulfillment. \n\nRyan looped his arms under hers at her shoulders, as Dani tightened her legs around his hips. With their mouths opened and searching, their breaths fanned the fires of desire and their approaching orgasm sent shivers up their spine. \n\nHe felt Dani's pussy clasp his cock more firmly in fluttering waves, her breathing becoming more erratic. Ryan was now pounding into her, every stroke hitting her clit, searing it, burning the nerve endings with aching pleasure. He reached the height of his own pleasure when he felt his balls draw up, his lower back stiffened and his body jerked as his hot sperm rushed through his shaft and spewed out into Dani's quaking body. \n\nDani screamed out in joy, her body jerking and throbbing in wave after wave of immeasurable rapture. The pulsing walls of her pussy clutched Ryan's spurting organ sending him shouting into the throes of glorious ecstasy. \n\nThe passage of time became meaningless as they floated through the warm haze of their climax, their senses attuned only to each other. When the rush of pleasure eased, they found themselves smiling in the wake of sexual fulfillment. Ryan let out a heart felt, \"Damn!\" While Dani stroked his moist shoulders and back and was engulf in the earthy scent of their lovemaking. \n\n\"Fuck, baby, that was more than worth the wait,\" he declared, withdrawing his softening cock from her flushed body before rolling onto his back and pulling her close to him. \n\nDani stretched, noting the soreness in her body, but it was a good soreness. She rubbed herself against Ryan, her body still trembling with the after shocks of the most sensual experience that she'd ever had. \n\n\"Oh, yeah. If I had known it would be that good, I would have jumped your bones the minute that I saw you,\" Dani teased with an impish grin. \n\nRyan rolled back on top of her, sucked her neck, then licked it. \n\nLooking into her eyes, he confessed, \"I think my dick has been hard since the moment I saw you.\" \n\n\"Ummm, baby,\" she sighed, reaching down to stroke his cock back to fullness.\n\n\"How soon can we do it again?\" \n\nRyan eyes darkened as he lowered his head, \"Are you sure you're ready for more?\"\n\nDani nodded and pulled his head down to hers. "
    ],
    "authorname": "MissPrimrose222",
    "tags": [
        "black woman",
        "white man",
        "drama",
        "relationship"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/ryan-ch-03"
}