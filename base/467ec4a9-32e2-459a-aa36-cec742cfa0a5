{
    "title": "Santa's Helper",
    "pages": [
        "Ten-year-old Marcus Chapman the fourth slowly twirled as he gazed into the magical, twinkling wonder of tonight's crisp, clear sky. A hand softly touched his shoulder.\n\n\"Come on Mark; it's getting late and we still need to finish this block.\"\n\nGrabbing the handle of the wagon with his gloved hand he took a couple of quick steps to catch up with his grandpa. \n\nThey'd stopped at every abandoned building, which seemed like every third one in this neighborhood. Grandpa listened before shining a flashlight and calling out.\n\n\"We're not the police. We're just checking to make sure you're okay and staying warm. We have gloves, knit caps, and a blanket if you need them. We have hot coffee.\"\n\nThey'd handed out six blankets, four caps and three pair of gloves. Most they found had enough clothing but accepted the hot coffee.\n\nMark nervously looked behind him and then into the darkness between the decaying two story buildings when a dog barked. This was creepier than the fun house he'd been to on Halloween. \n\n\"Grandpa, why do they stay here? Can't they go some place better?\"\n\nHe'd been waiting for the questions. They were the same ones his son asked him years ago. They were the questions he'd asked his father.\n\n\"Some feel safe here. They've found shelter and know where to find food and temporary work. If they go elsewhere, they'd have to start over. There's also the problem of travel. They don't own a car or have much money. \n\n\"They could walk, but many towns don't want them around, even if they're just passing through. They don't want to chance getting arrested and have what little they own thrown away when they're jailed.\"\n\nThey continued down the block checking on those they found; handing out gloves, blankets, hot coffee, or just the few minutes of conversation to make sure they are okay.\n\nGrandpa saw a board pulled back on an abandoned apartment building. He approached with his flashlight as Marcus nervously stood a few feet away.\n\n\"Hello. Is anybody in there?\" Grandpa heard nothing. \"We're not the police. I'm just checking to see if you're okay. Do you need a blanket, knit cap, or gloves; it's going to get close to zero tonight.\" \n\nHe leaned down and shined the light inside.\n\nHe saw movement to his left and moved the light. It was a young girl, eighteen tops, with dirty long blonde hair. She wore a light spring jacket over a small cut off top and a pair of jeans with assorted rips and holes. She was also very pregnant.\n\nShe stood still like a deer in the headlights staring into the light. She held a three foot piece of wood clinched tightly in her two hands ready to swing it like a baseball bat if he tried to enter.\n\n\"I'm not here to harm you young lady; my grandson and I are just checking to see that you're okay.\"\n\n\"I'm fine, now go away and leave me alone.\" She was slowing moving out of the light but still hadn't lowered the board.\n\n\"How old are you miss?\"\n\n\"Too young for-\"\n\n\"That's not what I meant.\"\n\nHe'd found a survivor. He could hear the fear in her voice, but she was ready to fight if necessary.\n\n\"There's a youth center on the other side of town. We can take you to where you'll be fed and have a warm place to sleep.\"\n\n\"Been there. The place is crawling with drug dealers and pimps trying to get you hooked so you'll sell your ass to pay for your habit. I'm safer here.\"\n\nHe knew she was right. The police couldn't keep the area cleared. They were like cockroaches. They seemed to multiply and crawl out of the cracks as soon as the police left. \n\nThis wasn't a place for a young pregnant girl. She'd be ill in a couple of days with the cold weather that was predicted. He had to get her out of there.\n\n\"Do you have your cup? We have some hot coffee. It'll help take the chill off for a while.\"\n\n\"Had to leave it at the last place when my boss thought he should receive special payment for letting me sleep in the storage room. What I have on is what I left with.\"\n\nHe turned to his grandson and handed him the keys. \"Please fill a travel mug with coffee for this young lady... and bring one for me. She also needs a blanket.\"\n\nHe watched as his grandson walked toward their car at the far end of the block. \n\n\"Now that the boy is gone. Are you on drugs? Have you been selling yourself to survive?\"\n\nHe saw fire in her eyes. \"I'm not like that. I don't do drugs and I told you I left my last job because the bastard wanted to make me his backroom entertainment.\"\n\nGrandpa saw the sadness in the girl. She still had her pride and he'd injured it. \n\n\"I'm sorry if I offended you, I'm concerned and only want to help you young lady. I worry about your welfare with the cold front that coming in.\" \n\nHe saw his grandson coming, struggling to keep the blanket from falling and not spill the coffee.\n\n\"Thank you, Mark.\" He took the coffees and leaned them against the building. He held the blanket inside the building until she took it. He moved the light to shine on the back wall instead of her. He held the coffee inside as he took a sip of his.\n\n\"It'd help if you set your stick down so you could hold your coffee and blanket.\" \n\nHe heard the sound of wood clanking on the concrete floor. \"If you don't mind me asking, why don't you go home to your parents? They must be worried about you.\"\n\n\"They don't want me back.\"\n\n\"So you left and fell in love with a boy who said he loved you but took-\"\n\n\"You heard it before.\"\n\nHe sadly nodded. \"Too many times. What's your name? I hate to keep calling you young lady. It sounds like I'm a teacher correcting you for some mistake.\"\n\n\"Amber. What's your name?\"\n\n\"Marcus. Marcus Chapman. You met my grandson and assistant, Marcus.\"\n\n\"Marcus and Marcus, sounds like a law firm.\" \n\nHe chuckled. \"It does, doesn't it? His father is Marcus the third and this young man is the fourth.\"\n\nShe giggled. \"Makes it easy to get one of you to answer.\"\n\nHe thought she was a lovely young lady when she smiled. \"You can call me Santa's Helper; many people out here do.\"\n\nHer smile left. \"Sorry Marcus number two, but Santa forgot about me a long time ago. He's supposed to fill wishes. In my book, he's a big phony. I doubt if his helper is any better.\"\n\nIt was Grandpa's turn to lose the smile and his eyes lost their constant glitter.\n\n\"I want you to listen closely because I rarely tell this story that happened a few miles from here. It happened a long time ago by your thinking, but not too long ago to me.\"\n\nHe took a moment to drink some coffee. \n\n\"It was Christmas Eve. An older gentleman was walking home when he heard a scream from the abandon building he was passing. The building was much like the one you're standing in. Anyway, he crawled through the broken window and listened. He heard the scream again followed by a voice pleading for help. The man followed the voice until he found her. She was a young woman, about your age, all alone giving birth on the dirty floor of that abandon building.\n\n\"The baby was lying on the floor not breathing. He was a bachelor and never touched a baby. He'd seen in the movies the doctors holding the baby by the feet and slapping it on the butt so that's what he did.\"\n\nGrandpa's hand was holding an imaginary baby as he swung his other hand toward the butt. He gave out his version of a baby cry, causing Amber and young Marcus to flinch. \n\n\"The baby gave out a huge cry and began to breathe. He wrapped the boy, that's what she had, with the umbilical cord still attached in his shirt and laid it on the girl's chest. He covered them both with his coat.\"\n\nGrandpa looked down to see Amber standing by the window watching him closely. \n\n\"The man ran out into the freezing cold in just his undershirt pounding on doors pleading to use their phone until someone left him in. He called the fire department and told them where the girl and her baby were. The man returned and stayed with her, riding in the back of the ambulance to the hospital. They took her and the baby into the operating room to finish the delivery.\n\n\"While he waited, the hospital began asking him questions about the girl and her husband. He told them he was the girl's father and the boy responsible ran off. He would pay the bill. That satisfied them. The worst part was he didn't know her name, so he wrote down Ellie and gave her his last name. He chose Ellie because he always thought it was a beautiful, cheerful name. \n\n\"He stayed with her when she came out of delivery, holding her hand while giving her praise. He confessed about making up a name for her. She said it didn't matter. She was grateful that Santa filled her wish for someone to help her.\n\n\"The man visited her every day. She asked him his name. As she wrote it down she told him her son would be named after him. They continued to talk for the rest of his visit, but what she did greatly affected him.\"\n\nGrandpa saw both of his young people were mesmerized by his tale.\n\n\"The next day he offered something special for her and her son. They would live in his apartment. He would hire someone to watch the baby so she could return to school. When she graduated high school, he would teach her about his business.\"\n\nHe took another sip of coffee, remembering the day his father told him the story.\n\n\"What happened Grandpa?\"\n\n\"Did she take the offer,\" a soft voice by the opening asked. \n\nHe smiled. \"Yes Amber, she accepted.\"\n\nHe took a deep breath and let it out slowly. \"Amber, I have an offer for you.\"\n\nShe looked at him with a questioning expression.\n\n\"You need a place to stay that is safe and warm for you and your baby. My mother is alone in the apartment below ours. She's getting older and sometimes needs a little help. She could also use the companionship. What do you think about coming home with my family and meeting my mother? If you find you like each other, the job is yours; if you don't, I'll take you wherever you want to go. The decision is yours.\"\n\nAmber noticed a man and woman standing on the sidewalk watching them. The young boy ran to them. Something felt right about this. \n\n\"Okay. Let's try it.\"\n\nGrandpa saw them out of the corner of his eye. \"Son, give me a hand helping this young lady out of this hole. Carol, this child's shivering; put a blanket in the back seat.\"\n\nFather and son lifted Amber out of the building. Carol waited in the back seat and covered Amber. Grandpa, preferring to stay close to Amber, rode in back, letting young Marcus up front with his father.\n\n\"Son, tell your mother I will be there shortly.\"\n\nGrandma looked at the dirty young girl they brought home. She saw the belly and smiled.\n\n\"Mom, this is Amber. Amber, this is my mother, Mrs. Chapman.\"\n\nShe looked from the girl to her son. Her slight smile said he did right. \n\nMarcus helped her from the rocker. She grasped the young girl's hands.\n\n\"Child, you're freezing. Marcus make some tea and see what is in the refrigerator for her to eat.\"\n\nWhen he said the tea was ready, she hooked her arm in Ambers and pointed toward the kitchen.\n\n\"Did my son say your name was Amber?\"\n\n\"Yes, Mrs. Chapman.\"\n\n\"Amber, we're gonna share this apartment, call me Ellie.\"\n\nAmber hesitated a minute. \"Your son told me a story about an Ellie tonight.\"\n\nEllie smiled the smile of remembrance and sadness. \"I believe I've heard it. The man was a real Santa's Helper.\""
    ],
    "authorname": "slow_n_gentle",
    "tags": [],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/santas-helper-10"
}