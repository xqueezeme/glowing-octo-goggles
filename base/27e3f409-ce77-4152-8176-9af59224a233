{
    "title": "Hitchhiker's Guide to Women",
    "pages": [
        "The other day my boyfriend showed me an email he'd gotten called \"Ten Common Mistakes Men Make With Women\"... it was written by a man. Which was all well and good, and he got some of the mistakes right, but not WHY they were mistakes. Of course, he was just trying to sell his product - i.e. his book - but I got to thinking, why doesn't a woman write something like that? After all, men are always complaining that women seem to be from another planet, and vice versa (In fact, if a man could write a piece like this for us girls, that'd be fantastic! *hint*hint*).\n\nSo, I'm going to tell you a lot of the common mistakes men make, WHY they're mistakes and hopefully how to fix them (or what to do instead). As with all how-to's, this is a general type of thing and not every single thing will work exactly the way I say, and this will not apply to all women... so YOUR job is to figure out what DOES apply to you and what applies to your woman and go from there. This is less a how-to on how to get a woman as it is on how to keep one and have a good time doing it!\n\nOne of the very first mistakes men make is either thinking that women ONLY care about looks and money or that they don't care about looks and money at all. It's neither... and both! Those are not what we're REALLY attracted to. Sure, good looks can be attractive... right up until we find out that you're an asshole. A complete and total asshole. And then those good looks start fading away to something else..\n\nNow some of you are probably sitting there going, \"Well hey, I'm a nice guy, and trust me, nice guys finish last.\" That can be very true, and we'll get to fixing that later. The important thing to realize right now is that most women are not attracted to looks or wealth alone. There has to be some kind of attractive personality there... did you ever see \"Hitch\"? All those gorgeous women fixed up with average looking guys? It's because those guys have something more going for them than looks, and although I would never recommend following what goes on in Hitch as a way to get the girl, it does give a good example.\n\nWhat ARE women attracted to? A sense of humor - not just telling jokes but the ability to laugh at yourself. A guy who can laugh at himself has a stable ego, not too insecure but not egotistical either. Thoughtful guys, who have something interesting to say, who aren't afraid to put their observations out there and who listen well. And when I say listen well, I don't mean sitting their nodding your head. I mean remembering and giving feedback.\n\nExample: \n\nYou're in an art gallery, she says,\n\n\"Oh I love Van Gogh... I think he's just so passionate!\"\n\nIf you just nod, to her that means that you're thinking something and you don't want to share it. And then she starts wondering why you don't want to share it. \n\nIs it because you hate Van Gogh and you don't want to disagree with her? Well, that's just kind wimpy. It tells her that you're going to agree with her no matter what, it means that you're not sharing your true thoughts and feelings with her and that means that you're lying. You're a liar.\n\nOr is it because you have no opinion? But why no opinion? Do you not care about her opinion? Are you just shrugging her off? Why don't you care about her opinion? Do you not care about HER? Why is she on a date with you if you don't care about her?\n\nOr is it because you're checking out that woman over there... that pretty one with the huge boobs. Are you wishing you were with her? Are you just not looking at the painting... you're...you're looking at the other woman. You asshole. You're on a date with me and you're looking at another woman already. We haven't even gotten to dinner yet.\n\nOr is it because you're agreeing with her?\n\nNow, believe it or not, ALL of that is going to go through her head in about 15 seconds... and probably more than that with all its varied conclusions. And so she will then say something that seems completely harmless and your reaction to it will make or break you because it will tell her which one of the above options was the reason for your nod.\n\nYes. Women psychoanalyze that much. And it is quicker than you can ever imagine. And not only that, but women are better at reading body language then men. You know that thing called \"A woman's instinct\"? Apparently it's not instinct, it's body language. We KNOW. \n\nSo, INSTEAD of nodding - it's better just to avoid that whole thing you can say something like\n\n(If you love Van Gogh): \"Oh yeah, he's one of my favorites. I really like his later pieces where you can see his madness creeping into the art, with all the shadows and everything.\"\n\nOR (If you think Van Gogh's a sap): \"Yeah, he's passionate, but I'm just not that into impressionists. I like the more defined stuff.\"\n\nOR (If you don't have a clue about art and you ARE just there because she wanted to go): \"Really? I don't know much about him...\"\n\nAny of these are better than a nod. Just about any answer is better than a nod.\n\nNow, let me get into the whole \"Nice Guy\" thing. Yes, there are some women who are attracted to the rebel guys and would never go for a nice guy, but there are a lot of women who are still attracted to nice guys. The problem is being TOO nice.\n\nYou know those big romantic gestures? Well, a lot of women find them kinda cheesy. And not very specialized. The whole flowers, dinner, movie, go back and watch the stars under candlelight... meh. Everyone does it. If you want to do a romantic gesture, show her that you pay attention to what she likes. If you're going to do flowers, get her FAVORITE. If you're doing dinner... cook it! And make something you know she'll like ALONG with something that's one of your favorites. Movies... meh. Unless of course it's something you both are really excited about. But what about taking her to somewhere she would really want to go?\n\nMy boyfriend took me out for my 21st birthday with all the regular stuff... but after dinner he took me to see Phantom Of the Opera. Not the movie, the show. I had never seen it before, always wanted to and I LOVE theater. \n\nAnother note for nice guys... DO NOT DO EVERYTHING SHE WANTS TO DO. Do NOT ask permission to do things, do NOT make her make all the decisions, do NOT keep your opinions to yourself just because they contradict hers. She wants to know what YOU like too. \n\nIf you want to go out with your friends on Friday night phrase it as, \"Hey, I think me and the boys are getting together on Friday night for a guys night. Just wanted to let you know.\"\n\nPLEASE PLEASE PLEASE don't say \"Honey, is it ok if I go out on Friday night with the guys?\" You're a big boy, make your own decision. \n\nThe only time it is acceptable (and mandatory in fact) to ask permission is if you're canceling something with her. And then it better be a damn good reason for canceling. \n\nDo not always ask what she wants to do for dinner. Or if you are going to ask, be prepared for her to say \"I don't know... what do you want to do?\"\n\nThis is not a trick question. She is honestly asking what you want to do, do not go back and ask what SHE wants to do. It is time for YOU to make the decision.\n\nNow, that said, YOU STILL CONSIDER HER DURING THE DECISION MAKING PROCESS. If you know that she HATES Mexican food (because it makes her gassy, she hates spicy, WHATEVER the reason) you do not then suggest a Mexican restaurant just because you love it. A restaurant that serves Mexican AND other food is acceptable. But she wants to know that you are going to consider what SHE likes as well, that you care enough to remember what she does and doesn't like and that you care enough about HER to factor that in. And of course, don't forget to make sure that it's a place you'll like too (although you do get extra points if you choose her favorite restaurant).\n\nOh, as a sidenote, an acceptable question after she says \"I don't know, what do you want to do?\" is to ask, \"Are you in the mood for anything in particular?\" And she will then give you her preferences. And because you asked, you had better honor them.\n\nThe problem with most nice guys is, they're TOO nice. They don't want to take a step forward without knowing that it's ok... hey, it's cute sometimes when guys make mistakes. And it keeps things interesting (as long as the mistake isn't gigantic). Also, getting flowers, chocolates, jewelry... all very cliche. And not that we don't appreciate it, but after awhile it just seems commonplace... mix it up a bit. Personally, I get all tickled when my boyfriend PICKS a flower and brings it home and i have no idea what it is but he picked it cuz it was purple and he thought I'd like it. And I do.\n\nMost women don't want to make the decisions all of the time. They don't want their guy constantly asking permission to do things. But they DO want to be taken into consideration when the guy makes decisions.\n\nNow, along with the flowers/chocolate/etc... BIG BIG THING. DO NOT EVER buy them because you've done something bad. Or because you know we're upset at you. If you buy them because you already know we're upset it just seems manipulative and ruins the gesture. If you get them when you've done something bad and you're bringing them along to your confession, it just means that the gesture becomes LESS then meaningless. And either way it means you think we can be bought.\n\nI understand that it's not how guys see it... but honestly, getting presents because of either of those feelings is actually hurtful. And it makes us see you in a lesser light, to think that we'd be less upset because of those things. It's like putting a band-aid over a cut that needs stitches... and it makes us feel like you don't care about what's actually going on.\n\nThat being said... DON'T forget about the little things. Not all the time of course, but every once in awhile it IS nice to get flowers. Not huge bunches necessarily, but just a single flower, picked or bought, either way. A little note in our wallet that says \"I'm thinking of you\". Keep track of the little things, and keep the big romantic gestures for special occasions. And no matter what, show that you always have our likes and dislikes in mind. \n\nLittle things that guys can do:\n\nSend a text message/email/ecard sometime during the day that just says \"Thinking of you\" or \"I love you\"\n\nbringing home dessert... our favorite dessert\n\nleaving a Hershey kiss somewhere that we'll find it\n\nlittle touches or hugs throughout the day\n\na foot or back or full body massage\n\netc. etc.\n\nSeriously, little things. They usually cost from nothing to very very little. But they mean the world.\n\nNow this is something that a lot of guys don't always realize. The phone is important. Use it. And if you say that you are going to call at a certain time, you had better not forget. You know why? Because we're watching the clock. We're sitting there waiting. We might be doing something else as well to keep our hands and minds busy... but we're waiting. For us, it's like a date... and if you're late it's like showing up late for a date. And if you don't call at all... \n\nWhen you say you're going to call at a certain time, it is a date. Treat it as such. Or just say \"I'll call you later\" (and try to make sure it's not TOO much later or you still get in trouble).\n\nOne of the most important things that men don't realize, is that it is NOT just an action that upsets us. Forgetting to call, not listening when we're pouring out our hearts, checking out another women when you're on a date with us, choosing a restaurant that we hate... It's not the action. It's the reason behind the action... because to most women, what all those things say is: \n\n\"I Don't Care About You.\"\n\nActions speak louder than words, and if you do something that upsets her, chances are it's because for some reason it showed that you didn't care - about her, about her feelings, her opinions. Whatever. It shows a lock of consideration and courtesy.\n\nWhen we get upset and we sit you down and tell you, chances are we will start telling you WHY we're upset.\n\nAnd chances are you will react with something like, \"I KNOW, I KNOW, I messed up, I get it, WHY do we have to go over HOW I messed up again?\"\n\nBecause if we don't, and you don't understand WHY what you did upset us, then you will do it again. Not the same action, but something that sends off the same message, and then we'll be REALLY upset because to us it's a repeat offense although YOU still think it's something completely new. It's not. \n\nI recently got into a fight with my boyfriend because he said he was going to call me after rehearsal and he didn't. In fact, I realized my phone was turned off and called HIM, thinking I was an awful girlfriend because I hadn't even realized that my phone was off and he must have called and not been able to get through and I call him ready to apologize... and he hadn't called. Not only hadn't he called, but he wasn't coming home. He was staying to play a game of Capture the Flag with his castmates. Normally something I wouldn't have a problem with, but it was already 11:30pm and once I realized that he hadn't called I realized that he wasn't even planning on calling.\n\nFaux Pax #1: He forgot that he said he would call. He forgot = he doesn't care about me = i was going to be sitting up waiting for his call while he played a game.\n\nNow, that's bad enough, trust me. But then I got upset and he asked me what I wanted... and I said I wanted him to come home. He said \"Well... we're already at the field.\"\n\nFaux Pax #2: He asked what I wanted and then brushed it off. A second instance of showing that he didn't care about me, because he didn't care about what I wanted even though he'd asked.\n\nI got upset, started crying (Hey, I was sick and over emotional and lonely and I'd been alone ALL day waiting for him) and said \"FINE.\" And hung up. Five minutes later, I realized that he had not called back. I realized that he was going to stay there and play the game and not call back and not come home until after he'd played with his friends.\n\nWhich is like multiple faux pax's all at once. And after a week where I'd already told him a couple times that I was feeling neglected, having THAT happen... I was ready to break up with him. When I called and told him that I needed him to come to my place NOW or never come again at all, he got very upset that I would do that just because he hadn't called and because he wanted to play with his friends.\n\nWhat he didn't realize was that every single thing he had done that night had sent ME a message of \"I don't care about you.\" and \"I care about myself more than I care about you.\" and \"I don't care that you're upset and hurting.\"\n\nWorst of all, when I was trying to tell him why I was upset over the phone, he did not leave to come home right away. He kept trying to say things that would allow him to stay and play the game - which had not started yet. And he kept asking if I REALLY wanted him to come home, which to me just said that HE didn't want to come home, which at this point was really not an option if he still wanted to be with me.\n\nSome of you may think I overreacted, and I did a little, but I had already told him twice that week that I was feeling neglected, I had been sick all week, had no one to take care of him, and I had been alone in my house all day by myself since he had left that morning at 10am. 10am-11:30pm I was alone. And tired because I was sick and still waiting up for him.\n\nAt any rate, if a girl feels like you DON'T CARE, she will not want to stay in the relationship. Period. \n\nJust some little tidbit ground rules:\n\n- If we hang up because we're upset, CALL US RIGHT BACK. If you don't, it shows that you don't care we're upset. And maybe it's stupid and maybe it's a testing thing, and if you don't like it then don't call back, but I can guarantee you it's more trouble than it's worth if you actually like this girl. Just call back.\n\n- Try not to check out other girls when we're out with you. You don't have to be perfect, just try.\n\n- Never ever ever forget a date. Or our birthdays.\n\n- Always offer to pay, if she says NO twice, then let her pay but make a deal that you get to pay next time (date offer too!).\n\n- If we answer \"I'm Fine\" in an angry tone of voice, you're in trouble. If we say it in an upset tone of voice you are in a LOT of trouble. If our voice is neutral, you need to get on your knees and very quickly figure out what it is you did so wrong.\n\n- We know when you're attracted. We can tell when you're about to kiss us. We can tell when the proposal is coming. We can also tell when you're lying.\n\n- Try not to ask her if she's mad at you EVERY TIME you speak to her. Actually, if you THINK she might be mad, try to find out WHY and do something about it.\n\n- If she says she's cold, don't be an idiot and say \"me too\" and stand there, give her your jacket or just simply hold her in your arms.\n\n- don't cheat. ever. \n\n- don't check out our sister or best friend. a VERY bad idea.\n\nAnd this is a list of things that I received from a male reader of things NOT TO DO (his contribution to this piece):\n\n- Just because I'm hard doesn't mean she's in the mood.\n\n- No, she doesn't want a 3 some with the hot looking chick from the bar. (Even if it would be smokin!)\n\n- Don't fondle her breasts 15 minutes after she has told you about how much her head hurts.\n\n- Just because she has told this story before doesn't mean it might not contain a new fact or 2 that you will need to know at a later date.\n\n- Just because what she is telling you is long and boring doesn't mean its not important.\n\n- Ask before you jump in the shower with her.\n\n- She's your wife/girlfriend/partner not your sex slave, Mom, or maid.\n\n- Just because your doing what she wants to do tonight, if you are a prick, you score no points (and probably loose points!)\n\n- Just because you saw or read it on the internet doesn't mean she wants to try it (or discuss it in some instances)\n\n- NEVER refer to her sister as the \"sperm burping gutter slut\"!\n\nAnyway, I hope this helps some of you in some way... women are hard, I know that. Trust me, men are hard too. I really wasn't kidding when I said that I would love it if a man wrote something like this for us ladies... I realize that all the stuff in here seems like a lot of work, but trust me it's worth it. First of all, the better you treat her and the more in tune with her that you seem to be, the better she will treat you. \n\nI am definitely not saying that the men should do all the work, what I am saying is that I know a woman's mind a lot better than I know a man's, and I do not feel qualified to write a guide similar to this for the ladies. I think it's something a man should do.\n\nBut yeah, I hope it helps, I hope you found something useful, and I wish you all the best of luck with your relationships!"
    ],
    "authorname": "Goldeniangel",
    "tags": [
        "advice",
        "dating"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/hitchhikers-guide-to-women"
}