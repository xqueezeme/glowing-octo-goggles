{
    "title": "The Year of the Cat Ch. 11",
    "pages": [
        "100% Fiction. All sexualized characters are adults. \n\nMonday had arrived. The first work day of the new year. Janice's trepidation of returning to her office and possibly seeing Hank, her assailant, had been slowly growing all weekend. \n\nHer hand was shaking as she grasped the door handle to enter the building. \n\nIn her waking nightmare she expected Hank, in his green shirt, to be waiting at her cubicle for her to arrive, but instead, she saw Mr. Woodward, the company Vice President, pacing at her desk anxiously. \n\n\"Oh! Ms. Paige!\" the elderly man exclaimed. \"I'm so relieved to see you! Are you well?\"\n\n\"Yes, sir.\" Janice replied, unable to keep her eyes from darting to the door every time someone new entered. \n\n\"Don't worry, dear.\" said Mr. Woodward, smiling sympathetically. \"Mr. Humbert is currently under police investigation. The sheriff is obtaining a warrant to search his premises. In the meantime, we're providing you a temporary restraining order against him. Needless to say, he won't be stepping foot into our building again.\"\n\nJanice breathed a deep sigh of relief. \n\n\"Thank you, sir.\"\n\n\"Now...\" Mr. Woodward cleared his throat, standing straight, becoming more formal. \"There's a meeting today at one o'clock in the corporate boardroom. I'd like you and Ms. Jefferson to join us, if you would be so kind.\"\n\n\"Of course, sir.\"\n\n\"I'm very happy you're healthy and whole again, Ms. Paige. I look forward to our meeting today. Until then!\" Mr. Woodward gave Janice a charming grin and a wink, before turning on his heel and strolling towards the elevator. \n\n~~~~~~~~~~~~\n\nAt lunch, Kendra and Janice met in the cafeteria. \n\n\"Where's Franny?\" Kendra asked, craning her neck towards his usual station. \"I don't see him.\"\n\n\"Hola, friends.\" a soft voice came from behind. \n\nThe startled women turned to see Fransisco smiling bashfully. He wasn't wearing his usual uniform. Instead, he had on a sharp polo shirt, neatly tucked in to a pair of business khakis. \n\n\"Franny!\" Both women rushed to embrace him. They could feel the trembling excitement in his chest against their squashed breasts. \n\n\"How come you're not at the register?\" asked Kendra. \n\n\"Oh!\" Fransisco beamed. \"They gave me a new job and a raise! You're looking at the new cafeteria Day Manager!\"\n\n\"Congratulations!\" exclaimed Janice. \"You totally deserve it!\"\n\n\"Thank you, friends.\" Fransisco said, humbly. \n\n\"That's not all you deserve...\" said Kendra, stepping forward, giving Franny a sexy smile. She cast her eyes around the room and then subtly undid the first button of her blouse. \n\nFransisco gulped, watching Kendra's fingers dip into her bulging cleavage. She pulled out a small, thumb sized flash drive. \n\n\"Since your photo shoot got interrupted at the party... I went ahead and snapped some pics for ya.\" Kendra spoke softly. \"...You DEFINITELY should wait until you get home to open it!\" She winked, seductively. \n\nKendra dropped the flash drive into Fransisco's trembling cupped palms.\n\n\"Dios Mio!... Gracias.\"\n\nKendra furrowed her brow, suddenly realizing something. \"Damn... I guess we're gonna have to start paying for our lunches now, huh?\"\n\n\"Kendra!\" exclaimed Janice, admonishing her friend's rudeness. \n\nFransisco chuckled nonchalantly at the women. \"... Not in MY cafeteria!\"\n\n~~~~~~~~~~~~\n\nLater, after lunch, Janice and Kendra sat next to each other on the padded bench outside the corporate boardroom. \n\n\"What's this meeting about?\" whispered Janice. \n\nKendra shrugged. \n\nJust then, the door opened and Mr. Woodward appeared. \"Ms. Paige, Ms. Jefferson... this way, please.\"\n\nInside, at a large boardroom table, were seated two women and a man dressed in business suits with their briefcases opened and a row of papers laid out before two empty chairs, opposite. \n\n\"Thank you for coming, ladies. Please, have a seat.\"\n\nOnce the girls were seated, the three introduced themselves as representatives of a law firm employed by the company. \n\n\"We are very regretful of the event that took place on December 31st at our company function. The actions of that individual in no way reflect our core values here at this company. As a form of an apology, we are willing to compensate you in exchange for your signatures on this very standard NDA.\"\n\n\"What kind of compensation?\" asked Janice. \n\n\"How does... a promotion to upper middle management sound?\" spoke the Vice President \"You'd enjoy a substantial pay raise, benefits and many perks besides.\"\n\n\"For both of us?\" Janice queried. \n\n\"Yes, of course... Ms.Paige, you will remain here at our Central branch...\" he turned to Kendra with a bright smile. \"And, Ms. Jefferson, you should be pleased to hear that we've expedited your transfer request from last September. Your new position will commence upon your arrival at our Southern branch in... say, thirty days?\"\n\nJanice could have sworn she saw the color dull from Kendra's face. The two women's shocked, mournful eyes met. Tears were pooling in Janice's vision. Kendra took her hand. \n\n\"It's ok, girl... it's ok.\" \n\n\"Now...\" Mr. Woodward continued. \"In order to qualify for this promotion you'll have to be certified. Luckily, we have a leadership conference taking place in two weeks at an exclusive resort in Miami, Florida. You will both be flown out, first class, and stay at the resort's deluxe accommodations. After attending the three day conference you'll receive the proper certifications.\"\n\n\"And all we have to do is sign this paper?\" asked Kendra, looking over the document in front of her. \n\n\"Uhhm...\" spoke one of the female lawyers. \"You'll also be obligated not to speak to any media or affiliates concerning the incident on the 31st, or this meeting... or it's our legal right to pursue litigation.\"\n\nKendra took a moment to think, then turned to Janice. \"My momma is alone down south... and in a bad way.\" She held Janice's hand in both of hers. \"I have to go home... she needs me.\"\n\nA tear ran down Janice's cheek. She nodded to her friend, offering a peaceful smile. \n\n\"We'll sign.\" said Janice. \n\n~~~~~~~~~~~~\n\nAfter the meeting, the ladies were allowed to finish their day early. They both felt the need to sit with a cocktail in front of them at the nearby bar, either to celebrate or to grieve... or both. \n\n\"Everyone's leaving me!\" Janice pouted into her margarita. \n\n\"We both knew this day was coming sooner or later. Besides! We're gonna have a blast in Miami together!\" Janice still sulked, looking down at her drink. \"Plus!! You know I'll be back to visit. It's only a day's drive to get between here and there. I tell you what: I'll come up for your birthday! When is it?\"\n\n\"August.\" \n\n\"No lie? Me too! We'll plan on partying together in August! Deal?\"\n\nJanice had to smile. \"Deal.\" she replied. \n\nKendra sipped her drink. \"Speaking of parties... we really have to do something for Matt before he leaves.\"\n\n\"The sooner the better. He's got less than a week.\" Janice spoke, trying not to slip into a depressed mood. \n\n\"Well then, why not tonight? Seems appropriate... right?\"\n\n\"I mean, yeah, but... what do you want to do for him?\"\n\n\"Hmmm...\" Kendra thought for a moment, then that familiar naughty smile crept across her face. \"...ever wanted to be a stripper?\"\n\n~~~~~~~~~~~~\n\nMatt arrived home from work to a quiet, dark apartment. The only light came streaming from beneath Janice's closed bedroom door. He heard the slight murmur of a conversation occurring within. \n\n\"Time to hit the shower, then hit the books...\" Matt relegated himself, silently. \n\nThe hot water spraying from the shower head washed away the work day from his mind and body. \n\nWhen he was dried, dressed and refreshed, Matt decided a snack was in order before diving into his studies. \n\nHe was surprised and somewhat perplexed to find the apartment lit up when he opened his door. In the middle of the living room stood a single dining room chair. \n\n\"Uhh... hello?\" Matt called out, stepping into the room. \n\nJust then the stereo switched on by remote control and the song \"Pony\" by Ginuwine began blasting from the speakers. \n\nFrom the doorway leading into the dining room, Kendra and Janice peeked in at Matt from opposite sides. They both were beaming bright smiles at him. \n\nMatt responded with a quizzical smile, shrugging his shoulders for an explanation. \n\nHis smile dropped to an awestruck stare when the ladies stepped into the room. \n\nThey each wore almost matching T-shirts, white and well worn. The tops were extremely tight over their jutting bust line, the only relief in the fabric coming from a slit that had been cut down the middle, letting about six inches of bulging cleavage burst forward. \n\nThe shirts rode high, revealing both of the women's bare abdomens leading down to a pair of minuscule, black g-string panties, the tiniest he had ever seen Janice wear. \n\nKendra and Janice approached Matt, gently taking him by the hands and leading him to the chair in the middle of the room. \n\n\"I was just gonna get a sn-\" Matt tried to explain. \n\n\"Shh!\" Kendra interrupted. \"Just sit here and enjoy the show!\" she cooed seductively in his ear as he took a seat. \n\nThe girls stood before Matt smiling serenely. Kendra spun on her feet behind Janice, gliding her hands gracefully over her friend's arms and shoulders. From behind Janice's back, Kendra's dark hands then grasped her shirt at the ripped neckline, pulling the cloth slowly apart. The weak fabric allowed a tear almost down to the bottom edge. Janice continued to smile into Matt's eyes as he watched Kendra's hand then reach between Janice's gorgeous, huge breasts and procured a familiar, brightly colored bottle from her cleavage. \n\n\"Body oil\" Matt remembered the delicious image of massaging Janice's sumptuous curves using the contents of that very bottle. \n\nMatt gripped his chair watching Kendra's hands unscrew the cap and slowly pour a liberal amount of oil over Janice's exposed bare d\u00e9colletage. The remaining cloth keeping Janice's breasts covered became transparent in the oily flow. \n\nThe bottle disappeared and Kendra's hands slid to the front of Janice's upper chest, spreading the ointment downward. Kendra's chocolate brown colored skin contrasted with Janice's winter paleness in a gorgeous dance of sensually as her hands caressed and squeezed Janice's beautiful enormous breasts out of her ruined top. \n\nJanice's creamy flesh globes sparkled under the glistening oily glaze. Kendra's fingers teased Janice's erect pink nipples, causing a moan of appreciation. \n\nThen, it was Kendra's turn to receive her oil bath. The two women switched positions. All Kendra had to do was arch her back, pushing her chest forward to spread the ripped neckline of her shirt with a tearing sound Matt could hear even over the loud music. \n\nJanice's hands came forward beneath Kendra's arms, gripping, then ripping her shirt completely open. Kendra winked and ran her tongue over her lips seductively at Matt while Janice began slathering her friend's gorgeous brown breasts with oil. \n\nJanice's hands struggled to grip the slippery massive orbs as Kendra's skin absorbed the fragrant balm. \n\nMatt squirmed in his chair, enraptured by the spectacular display occurring. \n\nKendra turned her head towards Janice as a subtle signal. Janice ceased massaging Kendra's breasts and sauntered slowly past Matt, running the fingertips of her right hand up his thigh. She then grasped the bottom hem of his loose T-shirt and lifted, dragging her knuckles over his muscled torso. \n\nMatt's vision was obscured by the T-shirt fabric passing over his head as Janice lifted it off of him. When his head emerged through the neck hole he found Kendra settling herself down on his lap, facing him in a straddling position. The feeling of her barely covered pussy smothering the shaft of his clothed erection caused Matt to moan in pleasure. His breath shuddered as she began her grinding motion against him. Kendra bit her lip, closing her eyes, concentrating on attending to Matt's every inch, while simultaneously feeling a predictable orgasmic buildup happening within her. \n\nJanice occupied her time behind Matt, running her hands over his shoulder and pectoral muscles, occasionally dipping lower to his abdomen. Her soft, slick breast skin crowded against the back of his neck and head. \n\nAfter several minutes of Kendra grinding her pussy against Matt's throbbing erection the song switched to another track, a slower r&b groove. Kendra, once again, raised her eyes to Janice to signal a switch. \n\nKendra lifted herself from Matt's lap as Janice silently prepared herself for her turn. \n\n\"It's ok, Janice... \" she told herself. \"It's for Matty and it's just for tonight... One little lap dance.\"\n\nShe cautiously stepped to Matt's front, keeping his eyes locked on hers. Janice positioned her legs on either side of his thighs and took a deep breath, lowering herself upon him. \n\nWhen she made contact the extraordinary thickness of Matt's dick split Janice's labia within her micro panties, almost keeping her lifted off his legs. The feeling sent Janice jolted back in time to the moment she first felt his cock make contact with her pussy during their ill-fated make out session on the couch. \n\n\"Oh jesus! This feels so much more intense than last time!\" she fretted, watching a euphoric expression wash over Matt's face. Once his hips began to rotate and the grinding pressure commenced, Janice knew she was in trouble. \n\n\"Fuck!\" her mind cursed her selfish body for wanting more. \"Ohmygod!! It's coming too fast!! I can't stop it!!\"\n\nThe usual spark that ignited Janice's orgasms most occasions had been replaced this time by a blast furnace. The intensity of the rushing sexual flood overwhelmed Janice's desperately clinging composure. \n\n\"Oh!... oh fuck! OHMYGOD!!\" Janice shouted in panicked ecstasy as her body began convulsing. Matt's eyes widened, growing concerned for Janice, watching the rigid spasms course through her body for several long moments. \n\n\"I c-can't stop cumming!!\" she whimpered in a high pitched squeal. \n\nJanice fell back into Kendra's waiting arms when the rush finally faded. Her chest heaved in labored attempts to regain oxygen. Kendra assisted Janice to her weak legs, where she then collapsed onto the nearby couch. \n\n\"Fuuuuck!... I... I need a break...\" Janice breathed, exhausted. \n\nKendra winked at Matt, who still wore a concerned look for Janice. \"Got her!\" she laughed. \"I told you he was the real deal!\" Kendra said to Janice, who laid on the couch, legs spread wide to allow air to cool her throbbing vagina. A pink pussy lip peeked out from her shifted underwear. \n\nJanice couldn't respond. Her mind was reeling. \"Did I seriously just have the greatest orgasm ever?\" Her eyes were glued to the massive bulge in Matt's lap. She didn't even register Kendra watching her as she bent towards Matt's ear.\n\n\"I think 'Mr. Perfect' just gained a new fan!\" she whispered. \n\nKendra then got down on her knees between Matt's legs. Bending over, she rested her cheek on Matt's bulge, smiling at Janice. \n\n\"You ok, girl? Show ain't over yet.\"\n\nJanice hesitantly nodded her head.\n\nJanice couldn't stop herself from wetting her lips when she saw Kendra start placing kisses up and down the large, cylindrical bulge. Then a dark skinned hand crept up to elastic waistband and pulled down, revealing a bulbous mushroom tip and then a veined shaft that didn't seem to have an end the more she pulled down.\n\nMatt assisted his pants off, watching with a quiet pride, the excited reactions on both the women's faces as his phallus slid into view. \n\n\"Hey, J...\" Kendra said, smiling at Janice. \"You remember sending Matty to Titty Heaven last night?\"\n\nJanice nodded her head slowly from the couch again. Kendra brought herself up, resting her gargantuan brown, oil slicked breasts against Matt's thigh. \"Why don't we send 'Mr. Perfect' there next?\"\n\nA dawning realization fell over Janice's distracted mind. She bit her lip in excitement, climbing down from the couch, on to her knees opposite Kendra. \n\n\"Oh... ssssshit!\" Matt hissed watching two pairs of gargantuan tits collided against each other, pinning his dwarfed cock smack dab in between their enormous cleavages. Only the very tip of his oversized dick could be seen peeking from the \"yin yang\" contrast of oily breast meat surrounding his cock, lubricating his sensitive skin. \n\nThe girls looked up at him, smiling serenely as they began sliding their tits up and down his shaft, swallowing his wide mushroom tip in the sumptuous softness, then pressing down again, letting his cock crown as far as possible, repeating the process over and over. \n\nMatt was beside himself. \"This is the greatest fucking thing that's ever happened to me!\" he meant to say in his head. When the girls began giggling, only then did he realize he had practically shouted the phrase out loud. \n\nJanice and Kendra's eyes met. They traded a knowing smile between each other. Occasionally, Kendra or Janice would seek out each other's lips, exchanging soft kisses while their breasts massaged Matt's member for several blissful minutes. \n\nMatt tried desperately to think of something that would make this glorious event last as long as possible, but the inevitable flood could not be stopped. \n\n\"Oh jesus!\" Matt gasped. \n\nJanice and Kendra's tongues were ticking each other when suddenly a warm, thick splash of cum doused their mouths and chins. Kendra leaned close and took the second blast of warm jizz fully upon the face, moaning in enraptured bliss. Janice squeezed her eyes shut when the third blast glazed her cheek and the bridge of her nose. The remaining gushes of semen coated the women's breast tops like icing on a half chocolate, half vanilla cake. \n\nThe girls regarded the sticky mess on their faces, grinning at each other. They giggled, leaning in close and kissing the cum off of each other with strings forming between their lips when they pulled away. Matt's cock didn't even reach half mast before blood started engorging it again at the sight. \n\n\"Mmm! Tasty!\" cooed Janice, licking her lips. Kendra stood to her feet, peeling her minuscule panties off of her hips. \n\n\"Time for you to put that mouth to use, baby!\" Kendra said to Matt, taking position on her back upon the couch, spreading her legs wide. \"Check this shit out, J.\" she said excitedly to Janice. \"He's gonna show how it's supposed to be done!\"\n\nMatt proudly descended to his knees in front of Kendra's bright pink pussy. He leaned in close, letting his lips linger on hers. He looked and caught Janice watching him, wide eyed. He gave her a playful wink, then proceeded to wrap his lips over Kendra's pussy, dragging his tongue up and down over her clitoris. \n\nJanice stared in amazement, watching Matt's oral abilities send Kendra to the stratosphere. \"Bobby would NEVER in a MILLION years do anything like that to me! God! Look how much she likes it... Is it really THAT good?\" she thought, only half aware of her hand sliding towards her panties. \n\n\"Oh my fucking god! Oh shit yes!! Oh fuck!! Eat that pussy so good, baby!!\" cried Kendra in near hysterics. She reached out and grabbed Janice's hand, squeezing hard when her orgasm soon was thundering through her core. \n\nJanice's other hand was buried in her tiny thongs, rubbing her own clitoris, vigorously while she watched, entranced. \n\nMatt continued to lavish Kendra's clit with passionate strokes and tender flicking of his tongue. Kendra bucked herself almost on to Janice's lap in her orgasmic flailing. She rested her head upon Janice's bosom. \n\n\"Oh god I need that dick, baby!\" Kendra pleaded. \"Give it to me, please, baby! Give me that big fat cock!\"\n\nMatt hadn't reached full flaccidity once since the women had first appeared in the doorway. Now, of course, his cock was red with pressure, so solid it practically felt carved out of stone. ",
        "Janice leaned forward, watching in anticipation, as Matt straightened himself upright. The bulbous mushroom head of Matt's dick teased Kendra's pussy lips, rubbing lightly against her, up and down. Janice bit her lip and watched Matt then place his cock to her opening and push forward. \n\n\"Oooooh shit yes!!\" screamed Kendra, feeling her inner walls fill to capacity. Janice could hardly breathe, watching inch after inch of Matt's fat, solid dick slowly sliding its way into Kendra's sopping wet vagina. \n\nWhen Matt's hips began an isolated rotation, thrusting himself back and forth, Kendra had to let go of Janice's hand to grip the edge of the couch for traction. Her eyes rolled back in her head in ecstasy as the dominant sound in the living room went from music to passionate moans from all three. \n\nJanice's now free hand crept to her panties, where the fingers of her other hand toiled laboriously against her clit. She pinched the outside edge, pulling the fabric aside, bringing her gorgeous pussy into view for the first time. Matt had to look away to prevent himself from cumming too soon. He squeezed his eyes shut and began to thrust his hips faster.\n\n\"Oh my fucking god!!\" wailed Kendra. \"It's so good... oh fuck, I'm gonna miss this cock so much!\"\n\nMatt grunted through his exertions \"It's ok, baby... when I get back... we can do this... every night!\"\n\nJanice tried not to let the shadow of concern drape over her face upon hearing Matt's statement. She subtly turned to look at Kendra. She wasn't sure if the tear rolling down her friend's cheek was brought about by joy or sadness. \n\nBy the time Matt was ready to blow his load, Kendra and Janice were both exhausted from the multiple orgasms coursing over their bodies again and again. \n\n\"Oh... oh shit. Here it comes!\" he shouted. Matt urgently pulled his cock from Kendra's dripping pussy and squirted ropes of warm cum all over her tits and stomach. \n\nThe three drew a collective sigh of relief when the thrum of their sex bliss died down. Matt helped clean Kendra, noting Janice licking his cum from her fingers while she assisted. \n\nThe music was turned off. The activities of the night had come to an end. Janice yawned and stretched, plotting to sneak off to her bedroom to dive beneath her covers and drift off to slumber. When Kendra grabbed her hand and began leading her towards Matt's room, she balked slightly. \n\n\"We're just going to sleep.\" Kendra spoke low. \"Come join us. There's plenty of room.\"\n\nMatt couldn't believe his cock coming to life again when he saw Janice smile and nod, following them into his bedroom. \n\nOnce in bed, Matt laid down on his back while the girls approached him from either side. Janice peeled her useless panties off before sliding beneath the sheets. The two women cuddled Matt's body between them, pressing their enormous breasts against his chest and each other. \n\nHis cock remained at full attention as the trio exchanged 'goodnight's and closed their eyes on the extraordinary day.\n\n::::::::::::::::::::::::::::::::::\n\nMatt emerged from sleep the next day to the blissful feeling of his morning hard-on being stroked gently by a soft hand. \n\n\"Hmm! Best alarm clock ever...\" he murmured, sleepily with his eyes closed.\n\nMatt turned to Kendra, expecting her to be awake. When he opened his eyes, however, he saw that she was fast asleep on her side, her back towards him. \n\nSurprised, he quickly turned his head the other way to see Janice awake, facing him as she lay, smiling with a glowing expression. \n\n\"Good morning, honey.\" she cooed. \n\n\"M-morning, Jan...\" \n\nShe batted her eyelashes as she spoke softly. \"I saw that 'Mr. Perfect' was awake already, so I was just wishing him a good morning too... I hope you don't mind.\"\n\nMatt gulped. \"Uhhh... no. I don't m-mind at all!\"\n\nHe wasn't sure if Janice's seductive smile was real or an illusion of having just woken up. \n\n\"You have to wish my girls 'good morning' now.\" she said softly, removing her hand from Matt's dick and hoisting a gorgeous, heavy mass of breast towards his face. \n\nMatt grinned at the erect pink nipple probing his lips. \"Good morning, beautiful ladies!\"\n\nHe kissed Janice's sensitive areola, sending his tongue forward to massage her nipple. Janice was able to bring her face close and aid in bathing her pink skin with her tongue. \n\nTheir tongues grazed each other again and again while they both flicked Janice's solid nipple together. Soon, the two were focused primarily on sliding their tongues directly against each other. Both of their breathing intensified as they began making out in earnest.\n\n\"What time is it?\" Kendra moaned. Her back still turned. \n\nMatt and Janice froze, startled when they realized she was awake. \n\nJanice spoke, looking at Matt's clock on the bedside table. \"Uhh... damn. Almost time for us to get ready for work.\"\n\n\"Shit... \" Kendra cursed, staying still. \"J?... You mind if I talk to Matt alone.\"\n\nMatt curiously watched Janice gasp and cover her mouth. \"Of course!\" she exclaimed, urgently. \"I'll just be in my room getting ready.\"\n\nJanice gave Matt a mournful glance before she quickly turned, got out of bed and left the room. \n\n\"Everything ok, Kendra?\" Matt asked, feeling a sudden sense of dread. \n\nKendra rolled over to face Matt. He could see her cheeks were wet with tears. \n\n\"Baby... I'm going home... back to Louisiana.\" she spoke softly. \"I'll be gone by the time you get back from your trip.\"\n\nMatt paled. \"For good?... Like, you're moving away?\"\n\nKendra nodded, solemnly. \n\nMatt felt the wind leave his lungs briefly. \"That... sucks!\" He paused for a moment, then shook his head. \"I mean... it sucks for ME! Is it... going to be a good thing for you?\"\n\nKendra nodded again, this time with a serene smile. \n\n\"Ok then...\" Matt nodded, matching her serenity. He was quiet for a moment. \"I'm gonna miss you, Kendra.\"\n\nKendra winked, smiling. \"I've already made plans to visit in August. In the meantime... you need to focus on what you got in front of you!\"\n\nMatt blinked. \"...Y-you're in front of me...\"\n\nKendra scoffed. \"Janice, dummy!\"\n\n\"Janice?... I mean, YEAH. I'd love to, but... she's got a guy already.\"\n\n\"Yeah... a guy that ain't hittin' on shit! She needs someone like you, Matty.\"\n\nMatt found no words to reply. Kendra raised herself up and gazed down at Matt with a menacing glare. \"I swear to god... if you two aren't fucking by the time I come back to visit, I am going to be SERIOUSLY pissed!!\"\n\nMatt gulped, intimidated. \"I'll... I'll see what I can do.\" he chuckled, nervously. \n\nKendra didn't laugh, or even smile. She turned and climbed out of bed. \n\n\"I'm serious, Matt. That girl still needs saving.\""
    ],
    "authorname": "Jugg_Head",
    "tags": [
        "big boobs",
        "enormous breasts",
        "huge tits",
        "slow burn",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-year-of-the-cat-ch-11"
}