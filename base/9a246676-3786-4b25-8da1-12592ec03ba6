{
    "title": "FocusTunes Ch. 07",
    "pages": [
        "Author's Note: All characters are over the age of 18. Story will include soft themes of mind control (fucking duh, mate) and rough sex.\n\nTo all who left a comment: I appreciate your kindness.\n\n-----\n\n\"I will fix this.\"\n\nThat was the promise I made Miranda, and it was a promise I intended to keep. Just...maybe not the way she expected. And...you know...a different problem than the one she was talking about. Whatever.\n\nMy conversation with Miranda had made it very clear: the joyride in the new car was over. The spending spree after the robbery was drawing unwanted attention. You'd think I had seen enough heist movies to play things smarter, but alas -- no use crying over spilled cum. I had made mistakes, but I still had the song, nobody knew what I was doing, and I hadn't been arrested or murdered yet. I was still playing from the position of power.\n\nThat Wednesday night, I logged the terrain. I'd been roaming without a map, begging to get lost on unfamiliar ground. I finished my notes on Emily -- I'd given her almost 15 total commands, whether via FocusTunes or through my secondary influence -- and opened and completed dossiers on Miranda and Heidi alike.\n\nMiranda's commands to this point:\n\n\u25cf You want to suck my cock\n\n\u25cf Beg for my cum\n\n\u25cf You've always wanted to fuck me\n\n\u25cf You are able to control your sexual urges\n\n\u25cf You trust me\n\nInitially, I was a little worried that Number 5 wasn't kicking in over recent days, but then I realized you can trust someone and still be extremely pissed off at them. And I had done plenty to piss Miranda off. That trust could end up helpful down the road, after her anger abated -- but it wasn't going to matter in the short term.\n\nAnd I couldn't afford to wait. I realized late that Wednesday, tossing and turning in bed, that this predicament demanded a quick resolution. I had no commands buttoning Miranda's mouth as I did on Heidi and Emily. She could tell anyone that Emily and I were fucking, or that she and I had fucked -- realities that would stun their mutual friends. Sure, Miranda thought she'd always wanted to fuck me -- but she'd never told anyone that (because it wasn't a real fucking feeling), and she certainly had no explanation for why Emily had fucked me.\n\nAnd if confronted, Emily wouldn't admit that she fucked me because I had told her to keep it secret -- even though she'd already admitted it to Miranda. God, that had been so fucking dumb! I thought making Miranda jealous would push her to dire straits of fucking me, but that wasn't a real plan -- that was Horndog Devil in control. It was time to permanently bench him, much to his chagrin; I needed cool, calculating autonomy.\n\nSo I started my own clock. The longer Miranda languished in her funk, the more attention it would draw, and eventually, the secret would get out. I needed to get her back in the fold, and that meant putting her under FocusTunes. But of course, I'd never get her to listen to the music again. I considered hoping that she stumbled back on the song during Friday tutoring, before I realized: there was no fucking way Miranda and I were doing Friday tutoring this week. Wow. End of an era.\n\nI thought about exporting the file and sending it to her via text message, hoping she'd open it just out of curiosity, with no reason to expect harm. It was a bad idea in theory and a worse idea in practice: a quick perusal of the app offered no method for downloading the song, and I had no idea if recording it on a different device would preserve its magic -- even if I could do it safely.\n\nIt was after 1 A.M. that I realized my solution: a truly elegant one, which felled two birds -- maybe more! -- with one stone.\n\nI opened my phone.\n\nB: Come over tomorrow morning once you're ready, same as earlier this week\n\nI sent the text and fell asleep more promptly than I expected: hard work trumped tormented thoughts, I suppose.\n\n-----\n\nI was halfway through my morning routine when I heard the front door pop open. After a moment of sheer panic, I remembered: I told her to come \"same as earlier this week,\" which meant sneaking in with the spare key. The literalness of this superpower was gonna be the death of me.\n\nEmily was marching towards the stairway when she caught my eye in the kitchen and about-faced. She wore her hair straight and flat over a stormy-blue button down, oversized such that it fell long over her ass, the sleeves bunched over several times to crest her slender wrist. Dark leggings slunk along long legs into mini Ugg boots.\n\n\"Morning!\" I said brightly, handing her a mug of coffee. \"I didn't know how you took it, but there's cream and sugar...\"\n\n\"I don't drink any caffeine.\" She fished a smoothie bottle from her voluminous shoulder bag, brown-green muck sloshing within. \"Way healthier for you, you know.\"\n\n\"That's good to know. But if I didn't have caffeine, I think I'd be fully unhinged.\" I took another sip of my coffee (light and sweet, anyone who says they like bitter coffee is an asshole, fuck you) and gestured to the kitchen table. \"Take a seat.\"\n\n\"I didn't really expect...all this,\" Emily admitted as she sat down.\n\n\"What do you mean?\"\n\n\"Well, you said 'same as earlier this week,' so...\"\n\n\"Oh, shit.\" Eventually I'd fucking figure this out. \"This isn't a booty call, Em.\"\n\n\"Then...what is it?\"\n\n\"Listen to this first.\" I gave her my phone, headphones in, song pre-selected. \"And I'll explain everything.\"\n\n-----\n\nAnd explain everything I did. I read Emily her new truths from my script: \"Emily: everything Ben does is normal, reasonable, and justified. You never get upset with Ben for anything he does.\"\n\nMy plan was a risk-riddled one, and for Emily to just robotically follow my orders would make it doubly so. She needed to be able to make decisions, on the fly, without my oversight, but for my benefit. Obedience was not enough; I needed loyal, motivated participation. I needed devotion, and that meant full immersion in my mission.\n\n\"So, Emily: I can brainwash people. I brainwashed you to make you do everything I say, and to get horny whenever you do what I say. That's why we've been fucking recently, and why you like it so much, and why you do what I ask. Does that make sense to you?\" I said it flippantly, assured that, even if I had fucked up, I could still command her into silence and back under my influence.\n\n\"Yeah, of course.\" Emily was completely nonplussed. My heart leapt in triumph.\n\n\"And I brainwashed Miranda as well. I made her obsessed with fucking me and sucking me off, which is why she's been acting weird recently -- we were fucking over the weekend.\"\n\n\"I knew it!\" Emily smirked, triumph now hers.\n\n\"You knew we were fucking?\" Immediate panic!\n\n\"No, I just knew something was going on with her.\" Emily said. \"Though, usually when she hooks up with somebody, she isn't like, weird and embarrassed about it.\"\n\n\"Well, maybe it was the brainwashing that threw her off.\" I said wryly, taking a bite of toast.\n\n\"No, I don't think so...\" Emily murmured her disagreement. \"From another guy, definitely. But that's pretty normal from you.\"\n\nThat comment sat in silence for a second; I had stopped chewing.\n\n\"You know...you still have to keep the brainwashing thing a secret.\" I mumbled through a half-full mouth. \"Like...everything I'm telling you right now is a secret. You have to act like you don't know any of this when we're around anyone else.\"\n\n\"Oh, okay.\" Emily smiled sweetly. \"You can trust me.\"\n\n\"I know I can.\" I smiled back, enjoying my newfound freedom in a legitimate confidant. \"Okay, so the problem is that Miranda is pissed at us for getting together, and she isn't programmed to listen to whatever I say, so I can't just brainwash her again -- she wouldn't let me do it. So I need to find a way to brainwash her again, so that I can get her back to liking me and listening to me. And liking you, obviously, as well. Does that make sense?\"\n\n\"Yeah, I think so.\" Emily took a sip of her smoothie. \"But I don't get something.\"\n\n\"What's that?\"\n\n\"Why is she mad at you for fucking me?\"\n\n\"Uh...\" I was not prepared for this question. \"Because you and her are friends, and I was kinda already fucking her, so...\"\n\n\"Well, I get why she's mad at me,\" Emily said quickly. \"But like, if we just tell her that you commanded me to do it, won't that solve the problem?\"\n\n\"Why would it solve anything?\" I asked, staring at her like she was nuts.\n\n\"Because you did it!\" Emily said, staring at me like I was nuts.\n\n\"No, see, this is what I'm talking about.\" God fucking dammit. \"Other people don't think that everything I do is justified. You think that. Because I brainwashed you into thinking it. Other people just react to me...regularly.\"\n\n\"Ohhh.\" Emily nodded sagely, as if the words I just said formed a coherent, reasonable thought.\n\n\"Yeah. You kinda have to think, like...\" I scrambled for a bit. \"Like, everything I do, you have to react as if fucking Gilbert Gerwin did it. If Gilbert Gerwin was fucking you--\"\n\n\"Eww! No thank you.\"\n\n\"Yes, obviously -- but if he was, and then he started fucking Miranda, you'd be...\"\n\n\"Disgusted.\"\n\n\"Yes, but also...\"\n\n\"Pissed.\"\n\n\"Right. So if others learned that I did that to you and Miranda, they'll react as if Gerwin did it. Or some other random guy. And they'll expect you to react that way, too.\"\n\n\"I've got it.\" Emily took another sip. \"So, are you going to brainwash Miranda like me? So that she isn't pissed at you anymore.\"\n\n\"I'm gonna try.\" I checked the clock. I had to get this conversation moving. \"But I need your help.\"\n\n\"What do you need?\"\n\n\"I need to use the app on Miranda. It's downloaded onto her phone, so --\"\n\n\"What app?\" Emily was confused.\n\n\"The app.\" I thumbed through my phone. \"It's what I use to...well, do the brainwashing, I guess.\"\n\n\"There's an app that can brainwash people?!\" Emily nearly got out of her chair, she was so stunned.\n\n\"What? I just told you that I was brainwashing people! Did you think...\" Oh, wait, yep, she definitely thought it was just me doing it myself.\n\n\"Holy shit. Holy shit!\" Emily shook her head. \"Can anyone just fucking download it? How...the fucking...\"\n\n\"Okay, listen: I made the app, nobody else can use it but me and the people I give it to, uh...yeah. The app is aboveboard. Also: our secret, as per usual.\" I sighed. \"Does that cover everything?\"\n\nEmily nodded solemnly, all of her worries quelled by my blessing. \"Makes sense.\"\n\n\"Course it fucking does.\" I muttered. \"So, as I was saying: I've gotta brainwash Miranda, with the app. It's downloaded on her phone and mine, and there's a specific song on there that starts the process. But there's no way she'll listen to anything I tell her to, or you -- she's way too pissed at us. But we can, however, get someone else to play the song for her.\"\n\n\"Who?\"\n\n\"Someone she trusts. I'm worried that she's going to tell someone about our drama this past week, and then I'll get a lot of attention regarding how I just randomly started fucking two of the hottest girls in school. So...who do you think Miranda would tell, if she had a secret of that magnitude?\"\n\nEmily thought for a moment.\n\n\"I dunno...either Abby or Bianca, or Amanda.\"\n\nThat's what I was looking for.\n\n\"Amanda was my guess as well. She talked with her a lot during the Oliver saga because she's not super-close friends with your friend group, and I figure she won't want to talk with Bianca or Abby because they're tight with you, too.\"\n\nAmanda Colombo was a sweet little thing. Her eyes were bluebird from afar, but danced with etchings of green and crystal from up close. A round face often hid behind a bushy curtain of thick, curly brown hair, but the big tits and big ass that filled out a short, curvy frame couldn't hide if they tried -- during track practice, which we shared, she did little else but flaunt it. She wasn't particularly beautiful, but she was absolutely bangin', and had a wholesome and earnest vibe that attracted the friendship and trust of a wide friend group.\n\n\"You're kinda friends with Amanda, right?\" I asked. Emily nodded. \"Okay. If I show you how to use the app, will you use it on her?\"\n\n\"I dunno. I'm scared of doing...that.\" Emily's face reflected her words. \"The idea of brainwashing another person freaks me out.\"\n\n\"But if I command you to do it...\" I trailed off. Emily swallowed.\n\n\"I'll do it.\"\n\nAnd like that, I had my first agent of world domination.\n\n-----\n\nI downloaded the app on Emily's phone and showed her my secret weapon, the revolutionary hit single: Hippocampus Hop. She nearly clicked it out of ignorant curiosity, but I just got the save off in time, keeping us both from perpetual hypnosis. I described how the song needed headphones, how Amanda would need to be alone, how she'd go wandering into the distance if unattended, and the exact wording of the command I'd like to be given to her.\n\nThen I had Emily repeat all of it back to me. Twice.\n\nWe were pushing the clock yet again, so with the plan in place -- and an assurance that, if she got confused or uncertain, she'd abort the mission and circle back with me -- we hastened out of the door. As I followed her to our cars, her shirt flicked in the wind, and I stole a glance at her ass. Not a single pantyline interrupted that smooth expanse. It looked tasty, so as I walked by her, I gave it a hearty pinch.\n\n\"Emily,\" I said, my voice neutral. \"Did you not wear any panties today, like I told you to?\"\n\n\"Yes.\" Her voice was a little urgent. \"Of course.\"\n\n\"I'm not sure if I believe you.\" I tilted my head indecisively. \"You'll have to find a way to prove to me you did what I asked.\"\n\nI had arrived at my car; Emily was still frozen along the walkway.\n\n\"...how?\"\n\n\"I don't know.\" I shrugged. \"But I expect proof before dismissal, and remember -- nobody can find out.\"\n\nI got proof just before first period: a video sent of a headless torso in a bathroom stall. One manicured hand slid into frame, tugged on the waistband of the leggings, and wriggled a hip free. One more tug pulled the tights to mid-thigh, revealing nothing but velvety chocolate legs. One final tug pulled the shirt up, revealing Emily's hairless, pantiless pussy.\n\nB: This could be anyone\n\nE: it's me texting you!\n\nB: I'm unconvinced\n\nAnd a moment later, another file came through: this one a picture, taken from higher up, with a simpering fake pout painted on Emily's face, now captured in frame. Far below: a still naked waist.\n\nB: That's my girl\n\nAs I smiled at the messages, I realized: my texts with Emily were all pretty incriminating. My newfound focus on discipline murmured its disapproval, so I quickly sent a follow up.\n\nB: Delete all of our texts. Best to keep our tracks covered.\n\nAnd I did the same...after I saved the photo and video, storing them away in \"Catan Strats.\" For a rainy day.\n\n-----\n\nAs such, my messages were empty when I got another text from Emily during the final period of the day. Just two words at the top of an empty page:\n\nE: Mission accomplished\n\nMy heart leapt in my chest. I'd been a nervous wreck the entire day, jumping at every passing gaze from one of Miranda's friends, wondering when the accusations would descend. Miranda had ignored me pointedly, only exchanging cursory words with Emily when their larger social circles intersected. Emily, at my behest, was avoiding her at all costs.\n\nNo shoe had dropped, however, and my time on the frenetic defensive was finally over. I could go back on offense now.\n\nIf the mission was indeed accomplished, Amanda would do whatever I told her to do -- and text messages would work just fine, as they had with Emily. I had a message already typed out and saved for this occasion.\n\nB: Meet me at my locker at dismissal. S1036.\n\nIf Emily had somehow failed, this would be an odd, unsolicited text, but easily waved away as an embarrassing wrong-contact blunder. That'll teach me to text under the desk!\n\nI didn't get an immediate response; I didn't even get a timely one. The seconds became epochs as fifth block traversed the expanses of unidirectional linear time, its engine slowed to a merciless chug by the doldrums of Professor Nossock's vacuous monotone. Nobody gives a fuck about classical antiquity on a regular day you relic, you flatulant nudnik, you champion of dullards, you splattering of beige upon the earth, you--\n\nThe bell rang.\n\nI was in the hallway before Nossock's sigh hit the smartboard.\n\nI ripped down on my messages again, refreshing the feed: no answer. Of course no answer. Class had just finished; she'd just now be looking at her phone. She'd see the notification. She'd read the command. She'd obey.\n\nI flipped over to my Notes app, wherein I'd composed the commands that I had Emily relay to Amanda.\n\n\u25cf You always do whatever Ben tells you to do, and you like doing it.\n\n\u25cf Everything Ben does is normal, reasonable, and justified.\n\n\u25cf You keep everything that Ben does a secret. You keep everything that you do for Ben a secret.\n\nThree commands had felt like pushing it, even though all of them were commands I'd used before. I was just so worried about the amount of time it would take. But what if she read the message and wasn't responding; what if Miranda had told her my secrets, and now she was getting inexplicable messages from me? What would she think about that?!\n\nWheew, buddy. Calm down.\n\nIf it hadn't taken, that's fine. Miranda had lots of friends I could angle for. I didn't have all the time in the world, but I'd built this plan to look plausibly deniable from all angles. I'd taken my joyride. I was in control now. In control. In control.\n\nI repeated this over and over as I arrived at my locker. But after my third failed attempt to open it, I had to admit that I was lying to myself.\n\nI shouldn't have worried: there Amanda was, turning the corner and peering at the lockers as she did, navigating unknown terrain. Her fountain of curls bounced as she walked, books clutched to her chest but unsuccessful in concealing her remarkable bust. She wore a bright yellow top with thin straps and tight jeans with a patchwork sun sewn over one ample thigh. Happy girl; happy colors.\n\nI waved awkwardly at her as she scanned. Seeing me, she beamed, and hastened over.\n\n\"Hey, Ben! Good day?\"\n\n\"Uh, yeah, pretty solid. You?\"\n\n\"Can't complain, I guess.\" She leaned against the locker beside mine. \"So...what can I do for ya?\" The phrasing was probably innocent, but it made me jerk, and she sent me a quizzical glance.\n\n\"Right, what can you do for me...\" I pulled out my phone, scrolling down through my Notes to the next step of the plan. \"So, you need to--\"\n\n\"Ben!\"\n\nI whirled around, just a few syllables away from compelling a fresh new victim in broad daylight. Paranoia flooded me. It was Emily, warning me that the police were descending on the school. It was Miranda, confronting me in public about her sudden and inexplicable urges. It was my father, stoked to hear I was boinking two broads.\n\nIt was actually Rachel. Yeah, the Rachel from Chapter 1, who Miranda encouraged me to ask out? Same one as from Chapter 6: the friend looking at me and Heidi as we chatted privately at lunch. She's only a minor character here -- I'm trying to keep the different players down to a manageable number, I promise. But I don't ever try to fuck her -- wasn't my type then, certainly isn't my type now. So...she doesn't really warrant a physical description.\n\nSorry sis. That's the game.\n\n\"Do you know what's going on with Heidi?\" Rachel asked, approaching with intent. Egads. The last girl who cornered me at my locker and asked me about a girl I had brainwashed...became a brainwashed nymphomanic...and just brainwashed another girl for me. Speaking of which...",
        "\"Uh...no?\" My eyes darted back to Amanda, who was looking in on this sudden intrusion with interest.\n\n\"Heidi Ryan? Is she okay?\" she asked, concerned.\n\n\"Oh!\" Rachel noticed Amanda for the first time. \"Uh...I'm not really sure. She never misses school, and she hasn't responded to any of my texts today, which is really weird because we're supposed to rehearse for strings ensemble today. And I just wanted to know if you knew anything...\"--she turned to me--\"...in terms of like...if she was okay, or anything.\" Rachel trailed off pointedly. Ah. This wasn't a question about Heidi's physical health, but her emotional health.\n\n\"So, how'd I do?\" A third voice; I wheeled back around. There was Emily, one hand over her mouth in embarrassment. Emily had recognized Amanda from afar and figured that I was completing the next step of the plan -- but had not noticed Rachel, who was decisively not part of the plan.\n\n\"Oh!...I'm sorry!\" Emily continued, scrambling for an excuse. \"I, uh...sorry, Ben's been tutoring me on chemistry, and I just wanted to see how I did on the...problem set he was going over for me.\"\n\n\"I didn't know you were getting tutored!\" Amanda said, smiling at Emily. \"Mom putting more pressure on you to get your grades up?\"\n\n\"Ben?\" Rachel said impatiently, pulling my attention back to her. She sent a sidewards glance at Amanda and Emily -- to her knowledge, not the friends I would reasonably be considered about at this time. After all, what relationship did I have with these girls? Right? Right?!\n\nIt was time to get back on top of the situation. In control. In control. In control.\n\n\"Rachel: I haven't spoken to Heidi since yesterday, and she seemed fine then, but I can go check on her this afternoon. If something's seriously wrong, you'll be the person I call.\"\n\n\"Okay, good.\" Rachel simpered. \"I just worry, I don't want--\"\n\n\"No, of course--\"\n\n\"Ben...\" Emily muttered urgently. Amanda had seen a friend crossing through the hallway and started leaving, having already fulfilled my commands for the day.\n\n\"Amanda, no!\" I called out firmly. \"Stay here for a secon--no, wait, just...stay here.\" I nearly flubbed it (okay, I fully flubbed it), but Amanda wheeled back into our little nucleus, totally unperturbed by my insistence. That was one way to verify that Emily's commands had indeed taken hold, I suppose.\n\nRachel was a little perturbed, sending another odd look my way. I was back on top of her before she could comment. \"I'll go check on Heidi, and if she doesn't want to talk to me because of you-know-why, then I'll tell her to talk to you because you're getting worried.\"\n\n\"Okay. You'll text me either way?\"\n\n\"Of course.\" I slammed my locker shut -- I don't think I actually put away any books; I just needed to punctuate the end of that conversation. \"C'mon, let's go this way.\" I said to nobody in particular, but both Amanda and Emily took the command as gospel. We went quick enough down the hallway that, if Rachel were thinking of following, she'd have to hustle to catch up.\n\n\"Okay, Amanda: are you free tonight at any time?--and wait! Answer all of my questions honestly.\"\n\n\"I'm free after 6-ish.\"\n\n\"Perfect. Come to my house at 6:30 then. I'll text you the address.\"\n\n\"What if my parents try to stop me?\"\n\nThat question alone sent a quick twinge through my dick. Not \"I have to ask my parents.\" Not \"My mom might say no.\" Just \"What if my parents try to stop me?\"\n\n\"Figure out how to get their permission. Lie and say that you're going over to Emily's to study or get extra chem help from a tutor or something. You should make them not suspect you're doing anything out of the ordinary. I'll only need 15 or so minutes anyway.\"\n\n\"Okay, I can do that.\" Amanda smiled. \"This is exciting: finally getting to do something for you!\"\n\nOoh. Second twinge. The joy in her voice was authentic: Amanda had always wanted to fulfill my commands, and now she was finally getting the chance for which she had forever longed.\n\n\"Ben!\" Emily hissed, and I looked up, following her eyes down the hall. On our walk, we'd made it to another wing of the building. There, Miranda was at her own locker, filling her bag and preparing to make her way to the parking lot.\n\n\"Amanda, go back the way we came. Go! Go!\"\n\nJust as Amanda turned and beelined back, Miranda closed her locker, turned down the hallway, and saw Emily and I, shoulders brushing against each other, staring straight at her. Her face darkened, her rosy cheeks tightening in an anger that I had once found extremely cute and not at all intimidating. That was a different life.\n\nShe made an effort to wipe her expression clean as she stalked by, but the pain remained etched in her eyes as she leered at me, and then at Emily.\n\n\"Slut,\" she muttered softly, chin held high, as she slid past us.\n\nMy first feeling was anger -- Emily was not a slut. My second feeling was guilt -- Emily was not a slut, but I definitely was, and I'd made Emily seem like one. My third feeling was remorse -- I wanted to call out to her and tell her that I had nearly fixed it; tell her that soon, she wouldn't be mad at me or at Emily or at anyone. That I could make her happy again; happier than she'd ever been, with her dumb relationships and stupid friends.\n\nBut I couldn't do that. I was in control, no matter how much control fucking sucked.\n\nI turned to Emily. \"I'm sorry she said that,\" I said softly.\n\n\"I get it,\" Emily responded, her voice light and unaffected. \"It's like you explained to me: if I was in her situation, I'd be so pissed.\" Then she looked at me, her eyes hopeful. \"But once you brainwash her, she won't be mad at me anymore.\"\n\n\"I guess you're right.\"\n\n\"And then you can tell her that I get to call her a slut as much as I want, and she can never say it back.\"\n\n\"Oh my God.\"\n\n----\n\nI was outside of the Ryan residence now,...three? four? days removed from my last afternoon visit. I'd texted Heidi to warn her of my coming, but received no response, so nobody was waiting for me on the porch. I knocked on the door as I checked my watch: 5:45. I should have enough time to get this done right, and still get home by 6:30.\n\nMr. Ryan answered. He was a burly man, his hair once fiery like his daughters', but now growing white with age. Deep-set eyes, square jaw, bushy mustache, a tattoo of some Irish biker gang peeking out from below the sleeve on his left bicep. A hallmark to his less scrupulous days.\n\n\"Benjamin!\" He tended to bellow his words. \"Come to borrow some sugar, I imagine?\"\n\n\"And contend with your lawn upkeep. The homeowner's association has a bone to pick with you.\"\n\n\"Knowing Marjorie Roderick, I hardly imagine you're joking.\" He stepped aside. \"You've probably come about Heidi, then.\"\n\n\"Oh?\" I was legitimately concerned now. \"Is that obvious? All I know is she missed school today.\"\n\n\"Yeah.\" He scratched his mustache. \"She spoke to her mother this morning, said she wasn't feeling well, has been holed up in her room ever since. I offered to make her chicken noodle soup but she won't let me beyond her door. A fortress up there, I say!\"\n\n\"Well, I just wanted to check and make sure she was okay.\" I pointed toward the stairs. \"Mind if I go up?\"\n\n\"Sorry, son.\" Mr. Ryan held up a hand, shaking his head. \"I know you're a good kid, but we've got rules about girls and boys alone in rooms in this house. Let me go see if she'll come down and say hello.\"\n\nMr. Ryan was up and back in a flash, returning with another mustache rub.\n\n\"Ah, she's as squirrelly now as she's been all day. Says she doesn't want to get anyone else sick.\" He shrugged. \"Why don't you give her a call or a FaceTime? She'd appreciate it, I'm sure.\"\n\n\"She hasn't been answering anyone's texts, but I'll try it out.\" I grabbed my phone from my pocket and gave him a little wave. \"I appreciate you trying, though.\"\n\n\"Of course!\" Mr. Ryan started walking me to the door. \"You should drop by more often, we'd love to have you!\"\n\nI wasn't listening; I was looking at the phone in my hand.\n\n\"Wait.\" I turned suddenly. \"There was this video on Facebook I saw that I wanted to show you, super cute: two little Dachshund puppies.\"\n\n\"Oh?\" Mr. Ryan was famously soft on the Ryan's two Dashchunds, Ketchup and Mustard, regularly walking around with each scooped in a meaty paw.\n\n\"Yeah, they're making these little barks that sound like talking.\" I held my headphones out as I scrolled through my phone. \"You should probably use my headphones, otherwise it'll be tough to hear.\"\n\nYou know where this is going.\n\nAs I hit play, I had a moment of sheer panic. \"I've never tried this on a man before. That probably won't matter. But whatifitmatters?!?!\" Of course, it didn't. Mr. Ryan acted like all others before him, growing quiet and looking about, casually investigating a decorative map the Ryans had in their foyer. I gave him only a few seconds of the song before I cut it.\n\n\"Earl: you're okay with Ben seeing Heidi alone. You're okay with Ben seeing Heidi alone.\"\n\nAs I waited for life to return to his eyes, I reflected on what was my most casual usage of FocusTunes to this point. I didn't even have a nefarious angle here -- I just wanted to check in on Heidi, make sure she was okay, and assuage Rachel's concerns as well. I didn't need this to become a longer distraction to my main project...but I also felt pretty bad about blowing Rachel off. And it wasn't like Heidi to miss school -- she once came in with bloodshot eyes and beads of sweat on her forehead, and it took us until third block to convince her to head home.\n\nMr. Ryan was awake.\n\n\"Benjamin! Why don't you head on up and see Heidi anyway? I'm sure she'll be happy to see a friend.\"\n\n\"A good idea, Mr. Ryan.\" I smiled to myself. \"Good idea.\"\n\nI'd successfully convinced Heidi's dad that my visit was appropriate; I still needed to convince her. I was at the door to her room now -- a place I'd seen from afar but never up close. Another thrill rushed through me as I knocked. Sacred space.\n\n\"What, Daddy?\" Heidi said, her voice a bit impatient.\n\n\"Not Daddy.\" I said softly. I heard a scramble through the door.\n\n\"Ben?!\" she half-whispered, her voice closer now. \"Why did he let you up here?\"\n\n\"He said he didn't mind me coming up. Thought you needed to see a friend.\" I leaned against the door, smiling. \"You feeling sick?\"\n\n\"Yes.\" Heidi said. \"I really don't think I should see anyone right now though.\"\n\n\"I get it. Rach's worried about you, though. You know how she motherhens when someone's sick.\" I chuckled. \"And she's kinda pissed you didn't text her back.\" I heard a wry chuckle in return.\n\n\"I just...I didn't really want to talk to anyone.\"\n\n\"Is it that bad?\" I asked. \"Like, are you puking or...?\"\n\n\"...yeah.\"\n\n\"Damn. I'm sorry.\"\n\n\"Yeah.\"\n\n...\n\n\"Okay, well...I'll tell Rachel you're alive. Is there anything I can get for you? Coke slushies work wonders, you know.\" Another chuckle.\n\n\"No. Thanks though.\"\n\n\"Okay. Let me know if you change your mind. Hope you feel better.\"\n\nI was only a step away from the door when I heard it crack open.\n\nI turned back around. Heidi was peering through the slit, her hair tied up in a messy bun, her shoulder cloaked in an oversized Local University sweater. I smiled despite myself: she looked cute.\n\n\"Hey, there's that smiling face.\" I joked; Heidi's face was anything but smiling. But I saw a crack of a grin break her frown as I stepped back closer.\n\n\"Did he really say you could come up?\" she asked.\n\n\"Ask him yourself, if you want.\"\n\n\"Okay.\" The door opened the rest of the way: her sweater was paired with pajama pants and thick woolen socks. \"Come in.\"\n\n\"Sure you're not radioactive?\" I joked again, entering the sacred space. Heidi's room was a lot more simple than Emily's. There was a crucifix and a few icons mounted on the walls, a wide desk with a laptop and standing mirror, and a wider bookshelf overgrown with volumes and tomes. Pillows and stuffed animals waged war on a dishevelled bed, the available surface area of which could not possibly have held one Heidi-sized body; a mountain of tissues climbed from the bedside trash can.\n\n\"Tissues?\" I turned to Heidi, confused. \"I thought your stomach was upset...\" And as I turned, I saw her eyes: a little bit bloodshot, the lids flushed red.\n\n\"You've been crying...\" I realized softly. Heidi smiled weakly, leaning against her bookshelf and folding her arms, as far away from me as her room would allow.\n\n\"I...saw you this morning...\" she said, her voice mortified with embarrassment. \"...with Emily.\"\n\nAh, fuck it all right down to fuck.\n\n\"What do you mean, you saw me with Emily?\"\n\n\"In your driveway...I was driving by, and I just looked over, and I saw you with a girl in your driveway...and at first I thought it was Miranda, but then you kinda...you grabbed her butt and I...\" Heidi's voice started to break. \"I'm sorry, this is so dumb...\"\n\n\"No, no, it's not dumb.\"\n\n\"It is dumb...\" Heidi said, trying not to blubber. \"I knew you didn't...like me, I just...I know that...that those girls are a lot prettier than me, s-so I know that--\"\n\n\"No, Heidi, it's not--\"\n\n\"Can you please just let me!...\" Heidi chuckled softly to herself, wiping a tear from her cheek. \"I just...I can't even talk to anyone about it, because I don't want to tell your secrets...so can I just talk?\"\n\nI swallowed my words and nodded.\n\n\"I...I know that those girls are a lot prettier than me, but I didn't think...I just didn't think that you cared about that so much. You always talked to me about how...annoying all of those girls were...how Miranda took advantage of you...and how rude Emily was...and now you're...you're...I don't even know what you're doing...but with both of them?! You're...you're acting just like Oliver or Steven or Danny or any one of those guys that you hate.\" She shuddered in a steadying breath. \"I don't care if you don't...like me, or anything...but you're not acting like yourself. And it's ugly.\"\n\nShe wiped a fresh tear from her cheek. I could nearly see her little heart pounding in her chest, even underneath the lumpy sweater.\n\n\"That's it. That's what I wanted to say.\"\n\nOkay, so we can all agree: fucking Emily was the dumbest thing I ever did. When she was operating of her own volition, she was bordering on ruining things -- now, under my control, she was still ruining fucking everything.\n\n\"Nuh-uh,\" the angel spoke to me now, quiet for so long. \"You're the one who ruined everything. Everything Miranda ever did to you, you did to Heidi. Right down to the intentional attraction blindness to hide your own guilt.\"\n\nFuck.\n\n\"Angelina over there's right. You fucked the pig on this one, buddy.\" the devil chimed in. \"But you've basically got Miranda fixed. And you know how to fix this one, too.\"\n\nFuck again.\n\n\"You're right.\" I shook my head. \"I've been acting like a dick. To a lot of people. And I'm glad that you called me out on it, because I'm not sure anyone else would have.\" Because they've all already lost their free will.\n\n\"It's not that--\"\n\n\"Wait.\" I held up a hand. \"My turn.\" Heidi pursed her lips, but nodded.\n\n\"I want you to know something, right now, before...anything else happens.\" I looked up at her softly. \"I really never knew that you liked me. I never thought that you would, because I just...I don't know, we obviously want different things out of relationships at this stage in our lives. And I wouldn't have wanted to lead you on, but...I've always loved hanging out with you. I think you're beautiful -- just as beautiful as Emily or Miranda or anyone else. I think you're smart as a whip, and kind when others don't deserve it, and passionate and loyal and fun. If I thought I could have dated you without ruining our friendship with our different expectations for physicality, I would have asked you out in a heartbeat. But I wanted to respect your limits.\"\n\nI took my own steadying breath.\n\n\"Now, there's something I need you to watch on my phone. It'll help you understand why Emily came over to my house yesterday morning. It's...not what you think. Just trust me.\"\n\nI needed Heidi's spell to run a little longer than her father's did, so while she listened to her music, I took time for reflection. I had wanted to respect her limits. I 100% would have asked Heidi out if I thought we could have fucked. Maybe that was shallow, but it was better than dating her and pushing her. In the same way that Miranda was an unattainable girlfriend, via the limits of social status, Heidi was an unattainable fuck, via the limits of faith. To disrespect those limits would have been irreparably damaging.\n\nBut nothing was irreparably damaging anymore. No limits existed anymore.\n\nI paused Heidi's music, and her eyes glazed over. It was the least erotic time it had ever happened. Well, save for the one with her dad earlier. I guess he was hot in a sailor-sorta way? Anyway.\n\n\"Heidi: nothing I d--\"\n\nI stopped. I had just told Heidi that I was glad she had called me out -- and I had meant it. If I gave her a \"Nothing I do upsets you,\" as I just had Amanda and Emily, I'd lose that. I...I wanted the things I did to still upset Heidi. Not all of them, obviously. But she wasn't an Amanda or an Emily. I had a previous relationship with her. She proved just five minutes ago that she served as a functional moral compass. I wanted more of Heidi, but I didn't want to lose everything I already had.\n\nThe clock was ticking.\n\n\"Heidi: you like that Ben is seeing other girls. You like that Ben is seeing other girls.\"\n\nThe clock was still ticking; my mind was running.\n\n\"Heidi: you want to...you are willing to explore your sexuality with Ben. You're willing to explore your sexuality with Ben.\"\n\nThe clock was running low. Tell her to fuck you, tell her to fuck you, tell her to fuck you, tellhertofuckyou, tellhertofu--\n\nHer eyes woke back up.\n\n-----\n\nToast is an underrated dinner food. Three minute prep time, fat and carbs, nearly impossible to fuck up. (The exact setting for perfect toast on my family toaster, by the way, is 2/3rds the way between 3 and 4. In case you're ever in my dad's house and overwhelmed by the 10 level dial on his shitty toaster.) I sat at my kitchen table, peered at my driveway, and snagged another $20 from Slick Rick. These women were emptying my gas tank in more ways than one.\n\nAt precisely 6:30, headlights turned toward my house. By the time I made it to the doorway, I realized why.\n\n\"Did you wait until 6:30 to show up?\" I called at the two dark figures exiting the car.\n\n\"You said come at 6:30!\" Amanda responded indignantly. \"We just pulled over in the street for a few minutes.\"\n\n\"This fucking thing...\" I muttered to myself as the girls stepped into the light of my stoop.\n\nAmanda looked excellent. She'd teased up her hair with even more volume, sweeping it from one side to the other so it fell in a dramatic waterfall over one shoulder, leaving her chest bare to thrust her significant cleavage into my eyeline. Mascara added contrast to the electric blue of her eyes; brief Daisy Dukes added a tight hug to the curve of her ass.\n\nAmanda's ass, of course, was not the point of the visit. It was important to stay on task. But as she walked through the opened door, I gave it a long glance, just to make sure I knew where it was. In case I needed to find it again.\n\nEmily followed her in. She was dressed as she was earlier in the day: still attractive, still pantyless. (At least, she better be.)\n\n\"I don't remember telling you you had to come,\" I said lightly, so she knew I wasn't actually mad.\n\n\"You said I had to help.\" She shrugged. \"And Amanda's mom wouldn't let her go without a ride anyway.\"",
        "\"Appreciate you getting her out here. And...well, setting all of this up.\" I gave her a soft glance. \"How are you feeling?\"\n\n\"Still kinda freaking out that I can brainwash people now.\" Emily bit her lip. \"But knowing how much I like doing things for you...I can see how much Amanda's already liking it. Though you've gotta do something about the secret keeping.\"\n\n\"Whaddya mean?\"\n\n\"Hey, Amanda...\" Amanda's eyes perked up. \"Why are we at Ben's house right now?\"\n\n\"Oh...I dunno, he just needs...something.\" Amanda shrugged, offering an innocent smile.\n\n\"What did you and Ben talk about after school today?\"\n\n\"Nothing really. I don't really remember.\"\n\n\"Oh my God, I was there, Amanda. I heard him tell you to come here tonight. I offered you a ride. You think I don't know what he's doing with you?!\"\n\n\"I, uh...\" Amanda looked at me in desperation and confusion, clearly faltering to keep everything I did or said a secret. I chuckled to myself.\n\n\"Amanda, it's okay if Emily knows about my secrets. Same goes for you, Emily, with Amanda. You're both part of the...uh, part of the team, as it were.\"\n\n\"Oh, thank God.\" Amanda huffed a sigh of relief. \"I had no idea what to tell her in the car. I was bullshitting like crazy.\"\n\n\"I'm sure you did fine.\" I promised, and she smiled in relief. \"Let's sit down and talk about next steps.\"\n\nWe convened in my kitchen -- I hadn't made refreshments as I had this morning, but hey, I was dog tired. I pulled out my phone and scrolled heavily, bouncing off the bottom of my Note in victory. We were nearly there.\n\nBut first, I had to run Amanda through the same debrief through which I took Emily.\n\n\"Okay, so. Amanda.\" She and Emily were seated at my table. I leaned against the counter, trying to find an angle to peer down Amanda's cleavage with only moderate shame. \"I can brainwash people. I use an app to do it, and nobody else knows about the app or how to use it but me and people I tell.\" (FocusTunes, I'm learning, is just a giant exercise in only making each mistake once. That which you learn at the kitchen table at breakfast, you implement by dinner.) \"I used it on Emily, and she used it on you to put you under my control. That's why you do everything I say and believe everything I do is justified. You don't feel that way about anyone else, right? But you feel that way about me because I made you feel that way. Does that make sense?\"\n\nAmanda nodded and murmured her assent, her large eyes locked in unblinking focus. No explosive reaction this time -- but best to double check.\n\n\"Can you tell me how you're feeling right now?\"\n\n\"Yes.\"\n\nThere was silence for a second.\n\n\"God. Fuck. Right. How are you feeling right now?\" Why couldn't I just get the mystical slave medallion or psychic mind control or fucking sex goddess blessing shit? Why'd I have to get saddled with this Hoop Jumping McGee horseshit?\n\n\"I'm okay. Just...feeling a little awkward, I guess.\"\n\n\"Awkward?\" I half-chuckled. \"I was worried about furious or terrified, so awkward is just fine.\"\n\n\"Yeah...\" Amanda gave a fake chuckle and stole a glance at Emily. She actually did seem pretty uncomfortable. I furrowed my brow.\n\n\"Amanda: why do you feel awkward?\"\n\n\"I mean, I just...\" Amanda averted her eyes. \"I don't really know you all that well, and I've never really done the casual hookup thing, so I'm just a little...\"\n\n\"Wait, wait, wait.\" I put my hands out. \"Who said anything about...hooking up?\"\n\nAmanda looked up at Emily guiltily. I rounded on her.\n\n\"Tell me what you did.\"\n\n\"I mean, that's what you do with the girls you brainwash: you fuck them!\" Emily said, indignant but still respectful. \"And when Amanda came out of her house, she was clearly dressed for a regular night, and there's nothing more embarrassing than hooking up with a guy when you're wearing your granny panties and some shitty bra from junior high school, so I just told her that maybe she wanted to get into something a little sexier, and then she started to freak out, but I couldn't tell her that you were probably gonna fuck her because of the whole secret thing, so eventually I just said \"Ben told me to tell you to look sexy tonight,\" and then she went in and changed.\"\n\n\"So you lied and made up a command from me?\"\n\n\"Yes, but I had to get her to stop freaking out somehow. She was being really fucking annoying.\"\n\n\"Wow, so sorry for freaking out that I had to look sexy for some guy I barely know!\" Amanda whined.\n\n\"He commanded you to go to his house with no explanation and tell nobody. Did you think it was because he wanted to fucking get to know you better?\"\n\n\"Both of you, shut up!\"\n\nThey both did.\n\nI took a deep breath.\n\n\"Okay, first things first. You are both going to be nicer to one another. I don't want to hear any more arguing. Understood?\" Two nods.\n\n\"Next: Emily, I understand why you made up a command from me, but you are only allowed to do that in situations that protect my secrets or help you accomplish a command I've given you. Not when someone is pissing you off. It's a last resort. Do you understand?\" One nod.\n\n\"Amanda: I'm sorry Emily scared you with what she said.\" I took a second to think. \"Actually, wait: Emily, apologize to Amanda for scaring her.\" The complete silence had created a pure space for my puppeteering, and I was enjoying the ubiquity of my domination, weilded swiftly over the room.\n\n\"I'm sorry that I scared you,\" Emily said, a sneer in her voice.\n\n\"It's disrespectful to me if you don't take this apology seriously,\" I said, a light threat in mine.\n\n\"I'm sorry that I scared you, Amanda.\" Emily's voice trembled earnestly now. \"Sorry I didn't get it right, Ben.\"\n\n\"That's okay.\" I smiled to myself, turning to Amanda. Knowing what I knew now, I could see the defensiveness in her posture: hunched shoulders, hair adjusted to obscure her chest, her chair tucked far under the table to hide her exposed thighs from my eyes.\n\nWhen I had taken Emily, I had given her the same command-enjoyment treatment that Amanda had now. But I had also forced Emily to treat me with respect, and she was a naturally more...confident, go-get-em sorta person. Amanda hadn't been given that character yet, so she was just uncomfortable in this new, uncharted water. She liked doing what I told her to do, sure, but even that wasn't inherently sexual. Because I hadn't really been planning to fuck her.\n\n...\n\nI mean, okay. it had OBVIOUSLY crossed my mind as an eventuality, even an inevitability...but tonight was all about the Miranda plan. So I was gonna keep it about the Miranda plan.\n\n...\n\nShe didn't want to fuck me. I didn't need to fuck her right now. I was tired as shit. I just needed to set up the plan and save my stamina for Miranda.\n\n...\n\nIn control. In control. In control.\n\n...\n\n\"Amanda...stand up for me.\"\n\nAmanda stood up. I took her seat, spun it to face the center of the room, and sat down in it. I stole a glance at Emily, who was watching me with interest, her eyes hunting for connection with mine. Amanda blushed at me but said nothing, still under the \"shut up\" command, her doe eyes turned away. I remember back when Emily didn't look me in the eyes.\n\n\"Amanda, look at me.\" She did -- goodness, her eyes had visible electricity. \"It feels nice to look at me, doesn't it?\" She nodded. \"Good. You don't have to do it all the time, but remember that it feels nice to look at me. You can do that whenever you want, and it'll always feel nice.\" She nodded again.\n\n\"Now: Emily said you dressed sexy for me tonight. Is that right?\" Amanda blushed again, her eyes flickering between mine and the floor -- and then she nodded. \"Tell me about your clothes then. Why did you pick them?\"\n\n\"Because...I mean, I didn't know what you liked in a girl, so I just wanted to...I know that guys usually like...\"\n\n\"Amanda, don't have a filter when you talk to me.\"\n\n\"I know that guys usually like my boobs, because they're pretty big, and this bra really makes them look perky, too. And I wish my legs were a little skinnier and my ass wasn't as fat, but I know some guys don't mind that so I kinda changed to the shorts last minute because they kinda give me a bubble butt look.\"\n\n\"Show me.\" I said softly.\n\nAmanda turned quickly, pivoting on one heel and thrusting the other leg back, arching her back to thrust her ass out and give it some extra pop. It surely worked, as the bottom of her ass winked from below the torn denim fringes. I felt like I had my own personal TikTok thot in my kitchen, and it made me feel hot as hell.\n\n\"For the record...I am a boob guy. But those shorts really do look good.\"\n\n\"Thanks...\"\n\nAn erection had begun pushing against my pants. For the first time since...well, since all this started, I didn't feel the immediate instinct to hide it. There were two women in this room, strangers to me a week ago, now convinced that everything I did was justified. After contending all day with a bastion of resistance in Miranda, I had finally found a space of total obedience.\n\n\"Emily...come over here.\"\n\nEmily walked across the table, casting a quick glance at Amanda -- still frozen, holding her profile-enhancing pose -- before settling her eyes on me and waiting for her next command.\n\n\"On your knees, please.\"\n\nI separated my legs to make room. She understood, and settled in place within comfortable proximity of my bulge, prominent enough in my shorts to draw color to her cheeks.\n\n\"Take it out.\"\n\nEven as Emily wiggled my waistband down and extracted my dick, I had my eyes on Amanda -- and she had her eyes on me. She was posing for some guy she barely knew, while another of her friends kneeled at his feet and prepared to service him. She was also completely nonplussed. The only tremble in her expression was one of excitement. She was beginning to experience the cumulative swell of following my many commands. Even without an explicit \"this turns you on\" command, she was doing sexually taboo things, the raw sexual energy of which no longer contended with awkwardness or uncertainty. I was letting her be free, and she was loving the feeling.\n\nI checked down on Emily. Every feature of hers was different than Amanda's: sharper nose, darker skin, darker eyes, lighter brows, sleeker hair, defined cheekbones, detailed makeup, slyer smile. The only similarity was the wiggle of excitement in her eyes.\n\n\"You can start sucking now.\" She leaned, almost lurched forward like a horse out of the gate, quick to seal her lips around the head and start playing with her tongue.\n\n\"Amanda,\" I said, putting my hands behind my head and leaning back. \"Emily said the most embarrassing thing is hooking up with a guy while wearing your granny panties. So...are you wearing your granny panties?\"\n\n\"No.\"\n\n\"Tell me about what you're wearing instead, then.\"\n\n\"Uh, okay...I bought them with my cousins because I knew my mom wouldn't let me keep them if she knew I had them.\" Amanda's words were confident, because I had removed her filter, but her cheeks were burning red: plenty of embarrassment, but a healthy dose of arousal too. \"They're blue and mostly lace, so they're kinda see-through, and they've...it's a thong, so...\"\n\nEmily gave a soft moan from my crotch. She had felt my dick stiffen in her mouth at Amanda's description. I slid a hand on top of her head to feel the riverstone smoothness of her hair as I kept my eyes on Amanda.\n\n\"Do you want to show me? Honest question.\"\n\n\"I mean, you can just make me show you, right...?\"\n\n\"That wasn't the question.\"\n\n\"Okay, well then...no.\"\n\n\"That makes sense.\" I nodded to myself. \"Now show me.\"\n\n\"Okay.\" Amanda blushed again but didn't hesitate, undoing her buttons, hooking her waistband, and revealing to me her promised thong. Her ass, for all its size, didn't have a ripple of cellulite visible to the naked eye -- just two mountains of pale, smooth skin, framed ever so nicely in navy.\n\n\"Your ass looks amazing, Amanda.\" I said earnestly. \"You shouldn't be worried about its size at all.\"\n\n\"Okay...\"\n\n\"Now tell me: does your bra match?\"\n\n\"Yeah.\"\n\n\"Delightful. Show me that as well, please.\"\n\nAs Amanda reached for the hem of her shirt, Emily gave the head of my cock a light twirl with her tongue. My hips lurched in response; that elicited another twirl; which elicited another lurch. Emily's eyes glinted with mischief as I stole a glance down at her dancing tongue. Maybe she was coordinating her teasing with Amanda's stripping for my own enjoyment; maybe she was trying to steal my attention away. Either way, I put my eyes back where they belonged.\n\nAmanda Colombo dropped her shirt at her feet, a live-action lingerie advertisement curated for my personal consumption. She subconsciously arched her back further to push her already impressive tits into display -- two heavy mounds of creamy skin crashing into one another between a navy bra with white lace accents. She was a sexy girl in sexy underwear, and unlike the other sexy girls in sexy clothes I'd seen over the last few days, I hadn't even really tried to make her happen. At this point, she was an inevitability; a byproduct of my growing influence.\n\n\"Take it off,\" I growled. \"Take it all off.\"\n\nI buried my hand in Emily's hair now, taking a firm grip and forcing her as far down on my cock as her throat would allow. I kept her there firmly for a second, watching Amanda hasten to unclip her bra.\n\n\"Wait.\" My mind had cleared enough. \"Do it sexy. Like a tease.\"\n\nWith one arm pinning her bra to her chest, her tits squishing out over and below her narrow forearm, Amanda's demeanor changed. She went from obedient automaton to engaged participant, even if the red flush of embarrassment in her cheeks grew ever darker. She bit her lower lip -- maybe in uncertainty, maybe in arousal -- as she pinned her tits with both hands now, her eyes searching mine for approval as she softly groped herself.\n\nI ripped Emily off of my dick, her explosive gasp for breath sending strands of saliva across her face.\n\n\"Do you like knowing I'm using you to get off while I watch a different girl?\" I asked her, my voice low and aggressive.\n\nShe nodded avidly, her chest still heaving.\n\n\"Why?\"\n\n\"Because it's fucking hot,\" she panted.\n\nI paused for a second.\n\n\"You don't want me to grill you about why you're liking this, right?\"\n\nShe shook her head softly, looking penitent.\n\n\"Because you like when I just do things, right?\"\n\nBack to the avid nod.\n\nI paused again, watching Amanda smile sweetly over her shoulder as she wiggled her ass in my direction.\n\n\"Suck my balls, Emily. Just use your hand on my dick.\"\n\nAnd she did exactly that, bending down low to suck my left nut hard into her mouth as her soft fingers found the saliva left on my dick and began spreading it over the head. I widened my knees to afford her better access as Amanda spun back around, her tits now hefted naked in her hands, large, puffy pink nipples winking at me from behind her fingers.\n\n\"I want to cum on those tits.\" I said out loud, feeling no reason to be anything less than radically selfish. Amanda blushed and smiled, the flickers of uncertainty fewer and further between the blazes of arousal.\n\n\"Tell me you want me to cum on your tits, Amanda.\"\n\n\"I want you to cum on my tits, Ben.\"\n\n\"Tell me you only have big tits for my pleasure.\"\n\n\"I only have big tits for your pleasure.\"\n\nEmily was jacking me off with intensity now.\n\n\"Tell me I can touch your tits whenever I want.\"\n\n\"You can touch my tits whenever you want.\"\n\n\"Tell me I can grope you whenever I want.\"\n\n\"You can grope me whenever you want.\"\n\n\"Tell me I can walk up to you in school, take your tits out, and titfuck you in the hallway.\"\n\n\"You can walk up to me in school, take my tits out, and titfuck me in the hallway.\"\n\n\"Keep telling me stuff like that.\" I wasn't nearly out of ideas, but I wanted Amanda to deliver new fantasies. \"Dirty talk to me, as best you can. Make me want to cum.\" I wasn't sure she had the instinct for it that Emily and Miranda had shown; she didn't disappoint.\n\n\"You can make me strip for you whenever you want. I can buy more skimpy clothes that barely cover my tits, and then you can make me wear them wherever you want. I can do sexy things and pretend I don't notice you staring at my tits. I'll get all wet in a T-shirt without a bra so you can see my tits and I'll bounce around and do titty drops. I'll--\" she glanced at Emily uncertainly \"--I'll let other girls touch them and play with them while you watch. And I'll give you a blowjob while you watch other girls, I'll suck your balls and I'll...I'll brainwash other girls for you, too.\"\n\n\"Say that again.\"\n\n\"I'll brainwash other girls for you. Like Emily did to me...for you.\"\n\n\"Get down on your knees.\" I stood up out of my chair and batted Emily's hand away, stepping beyond her to loom over Amanda, kneeling on the floor. \"Cup your tits with your hands. Push them up.\" I started stroking my dick in earnest as she followed my instructions, her entire chest flush with color now. God, she had so much tit it literally spilled out of her hands. \"Tell me about brainwashing other girls for me.\"\n\nI watched her speak from below my throbbing dick and pumping hand, my pace increasing and grip tightening with each passing word. \"I'll brainwash other girls for you, just like Emily did. Whoever you tell me to do, I'll do it, and I'll...I'll get them to be sexy for you, like Emily did to me. I can get Addie and Danielle, or I can get Becca...or Morgan -- I can get Miranda!\" My face must have told Amanda something, because she continued urgently, bouncing slightly on her her heels in excitement. \"I know you and Miranda were hooking up, and I can get her to hook up with you again, so that she listens to everything you say, just like me and Emily. She has big tits, too, and you can use her tits just like you use my tits, or you can be with us together and you can cum on both of our tits, or we can...we can play with each other's boobs, too and...\"\n\nI came. I mean, I came. The first jet exploded onto Amanda's lower neck and splattered across her collarbone, catching her by surprise and sending her recoiling back. That just offered a wider target, as my next spurt of cum landed right on the crest of her clutched right boob, dripping down onto her fingers. I stepped forward as my spurts began to lose pressure and velocity, bending my knees to coat her other tit with my remaining jizz. For my first ever cumshot, I think I did a respectably symmetrical job.\n\n\"Am...am I supposed to keep talking?\" Amanda looked at Emily uncertain as I staggered backwards, my head spinning with the intensity of my orgasm.\n\n\"I think you're okay for now, babe.\" Emily said as she crawled forward, still on her knees, eyeing Amanda's chest hungrily. Her tongue was only a few centimeters away from a gob of cum before Amanda realized what was happening and shot backwards.\n\n\"Ew! What the fuck are you doing?\"\n\n\"She's swallowing my cum,\" I sighed, my heart pounding as I found my seat again. \"As she always does. Let her.\"\n\nAnd Amanda did, looking flush with arousal but still a little perturbed as Emily lapped at her chest, sneaking peeks at me when the angle allowed, letting her tongue linger for my visual pleasure.\n\nBut still, the tongue bath was a bit more methodical than it was sexual -- I still hadn't quite figured out how to make the girls keep performing for me when I wasn't giving them explicit commands. As it was, my head swam with possibilities for the continuation of the evening: \"Make out with each other\" and \"Come clean my dick together\" and \"Sixty-nine vigorously.\"\n\nBut one rang clearer than all the rest: \"Finish the Miranda plan. In control, in control, in control.\"\n\nEmily had nearly finished cleaning Amanda of my cum, so I watched the last few licks before bringing them to attention. \"Okay girls...\" They both turned to me, one stark naked, her tits glistening with cum and saliva; the other fully clothed, licking her lips contentedly. \"...here's what we're gonna do.\""
    ],
    "authorname": "FroPilk",
    "tags": [
        "mind control",
        "harem",
        "high school",
        "male dominant",
        "female submissive",
        "obedient",
        "cumshot"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/focustunes-ch-07"
}