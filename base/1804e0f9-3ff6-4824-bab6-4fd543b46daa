{
    "title": "Sk8r Boi",
    "pages": [
        "\u2014\u2014 Boy meets Boy \u2014\u2014\n\nIt had been maybe an hour in the waiting room when this asshole sitting opposite me started to really drive me crazy. What is it with people who don't realise you can't just play games on high volume in public?! Especially in a fucking hospital emergency department where there were already crying children and gossipy mums and some drunk idiot who obviously went way too hard way too early. \n\nI glared at the guy playing whatever it was. Despite Kiwi sensibilities of never actually saying anything directly to an asshole, I had been tutting and sighing for almost half an hour and he hadn't responded so I was on the verge of asking him to turn it the fuck down when the unmistakable sound of a Grindr message rang out through the room. He glanced up and the tips of his ears turned red, but naturally the sea of mothers and children and the guy puking his guts out didn't notice. I caught his eyes almost immediately though. I raised my eyebrows. He chuckled and cleared his throat. He quickly muted his phone. \n\nI looked him over and slowly put my magazine to the side. It was too fucking funny to stay mad at him. I leant over.\n\n\"He hot?\" The guy glanced up at me again and smiled.\n\n\"Fucking incredible.\" He replied, obviously as bored as I was if he was willing to talk to me. He leant forward awkwardly and showed me a picture. I scrutinised it. \n\n\"Well yeah.\" I said, taking in the chiseled abs and broad chest. \"That's William Seed. Looking hot is his job.\" \n\n\"Oh.\" The guy's face fell. \"Dammit. I'm guessing William Seed probably isn't in Newtown?\"\n\n\"I'm guessing he doesn't need to trawl Grindr.\" The guy sighed and slumped back in his chair. \n\n\"Thanks anyway.\" He said. \"Ash. Nice to meet you.\" \n\n\"Dusty.\" He laughed. \n\n\"Really?\"\n\n\"Really. And shut up, I didn't name myself.\" He rolled his eyes. \n\n\"My parents named me Ashley dude.\" He winced. \"Just a weird coincidence that you're Dusty and I'm Ash.\" I grinned.\n\n\"What are you in for?\"\n\n\"Fucked my arm up.\" \n\n\"Me too.\" He glanced at my arm, which you had to admit, looked pretty awful. It was just bending slightly the wrong way and there was an awful lot of swelling. He winced and glanced at his own arm. I couldn't really tell because he had long sleeves on but his thumb was swollen to twice the size of mine and his hand was purple. \n\n\"Looks bad.\" I said.\n\n\"Really? Here I was thinking I'd just get a bandaid and a lollipop.\" I laughed. It kind of hurt to laugh. I think my ribs were fucked too. \"Least you did your left arm in.\" He said. I frowned. \n\n\"Why is that better?\"\n\n\"Well, you can still write and shit.\" \n\n\"Unless I'm left handed. Which I am.\"\n\n\"Oh.\" Ash grinned at me and jerked his head up as the nurse called for an Ashley Wang. \"Looks like I beat you in.\" He said. \"Nice to meet you Dusty.\" I nodded and winced as the pain returned. \n\n\u2014\u2014\n\nAbout an hour later they'd moved me to Orthopaedics. I grinned as I heard his stupid phone going off from the front desk and sat next to him.\n\n\"You know, most people keep their phone on silent because it's less obnoxious.\" I said. Ash looked up and me and smiled. \n\n\"I'm not most people.\" He looked around and leant in conspiratorially. \"The nurse is really cute.\" He said. \"Give you ten bucks if you can work out if he's gay for me.\"\n\n\"You're on.\" I laughed. \n\nI was called in a couple of minutes later and inspected and booked in for an X-ray and offered all manner of painkillers. \n\n\"I'm fine.\" I said. I wasn't fine. But I might have been playing it tough to impress the cute nurse just a little bit. \n\n\"I won't tell.\" He said seriously. I looked at him and checked that the other nurse wasn't around. \n\n\"Maybe some panadol.\" I said quietly. He smiled and turned away to retrieve me some relief. I took a deep breath. Right. Gay? Honestly, I have shitty gaydar. One of those dudes who needs a flashing sign saying -Yo, I'm into you- before I even have an inkling that the beers he's been buying me all night are a sign of anything other than friendship. That at least is why I prefer Grindr. Well, no. Grindr is a cesspit of despair and married assholes who think because I'm younger I'll go along with their stupid fucked up fantasies until they delete the app because the wife might find out... but hell, at least if you're able to take a good pic you know the guy messaging you wants it. \n\nI blinked as Nurse Cavander cleared his throat. He was holding out the panadol and a plastic cup of water. \n\n\"Oh I'm good.\" I waved away the water. He sighed. \n\n\"Dusty, no one is judging how manly you are.\" His eyes crinkled. I shrugged and swallowed the pills. I'm sure there's a whole reason you're meant to swallow pills with water but it's never been a big deal for me. \"You can take that with nuerofen.\" He offered. \"Better to knock the pain head on.\" \n\n\"It's really fine.\" I said. It is. It's funny- when I was a kid I used to hurt myself all the time, and I would cause the biggest fuss.... but only because it made Mum all soft and cuddly, and Dad would buy me Fanta and KFC and we all looked after each other. These days I'm not such a... well. Let's call it like it is. Attention seeker. Turns out my tolerance for pain is pretty phenomenal, which is good luck for me because the last two years have been nothing but accidents. \n\n\"Ash was begging for code\u00edne.\" Nurse Cavander offered. I laughed. \n\n\"Well ok then.\" He went to grab the neurofen and I brought up YouTube and turned my sound on. One surefire way to know right? \n\nI played the notification sound that had got me talking to Ash. \n\n\u2014-\n\n\"Straight. Sorry dude.\" Ash grumbled and fumbled with his wallet. Both our arms were in slings now and we were waiting in Radiology. He handed me $10 and paused before I could take it.\n\n\"How'd you know?\" I played the sound and shrugged at Ash. \n\n\"He gave me nothing.\" I heard a chuckle from the desk and the radiologist quickly looked away as we caught each other's eyes. \"Ooh.\" I muttered, pointing him out to Ash. Ash leant in. \n\n\"Not my type.\" He muttered. \"You should go for it buddy.\" I looked at the guy. A blush was creeping up his neck as we unsubtly checked him out. He had short hair and glasses- kind of nerdy. Kind of hunky. I bit my lip. My type was a bit more hipster. Long hair and tattoos and stuff. A bit more... Well. Like the guy sitting next to me, with his long dark hair spilling over his shoulders and his not quite designer scruffy moustache. I glanced at Ash. \n\n\"Fuck it, I will.\" I said. I reached for the $10 and Ash held it away. \n\n\"Hold up.\" He said. \"Nurse Cavander might still be gay. Maybe he's just not a whore like us.\" I laughed. \n\n\"Alright fine. I'll keep working at it buddy.\" I looked up as my name was called and winked at Ash. \n\n\"Wish me luck.\"\n\n\"You don't need it.\" He smiled as I went into the room and got the whole spiel. \n\nI cleared my throat as the radiologist arranged my arm.\n\n\"Hurts?\" He asked. I shrugged. \n\n\"Maybe I'm being a big baby, but I think there's a chance it's broken.\" He laughed. Callum. That's what his name tag said.\n\n\"You know, this is gonna seriously impress you but even without the X-ray I think I can tell you it's cooked.\" He said. I laughed.\n\n\"Damn.\" I sat back. \"I work in Construction. Could you use those crazy deductive skills to tell me if it'll be ok by Monday?\" Callum raised his eyebrows. \n\n\"You're not gonna like the answer. Alright. Stay there.\" He left the room and I watched him as he took a photo. He winced as he looked at his monitor. I tried to ignore that. Maybe if I pretended I was fine I would be fine. Power of thought or prayer or whatever right? \n\n\"So what do you do?\" I asked as he came back to rearrange me. I groaned and let my head hang. \"Oh my God.\" I said. \"We are both gonna pretend I didn't ask that.\" Callum carefully moved my arm and I could see him smiling. \n\n\"I'm an actor.\" He said seriously. \"I do this on the side so the bills don't pile up.\"\n\n\"Ah-huh.\" I caught his eye and he grinned at me. \"Should I know you from anything?\" I asked. He laughed. \n\n\"Shortland Street.\" He said. He paused as he went to leave the room again. \"I play a cute radiologist.\" I bit my lip as he left. I think the pain was doing dumb things to me. I don't normally flirt- but I guess I kinda wanted to show Ash I was great at this. \n\n\"Oh yeah.\" I said, looking at him carefully when he came back to lie me down and take a photo of my ribs. \"Actually I think I do recognise you. You're that one who gave his number to that kid who broke his arm trying to do BMX tricks right?\" Callum blushed. \n\n\"You saw that episode?\" He asked. I grinned triumphantly as he rolled his eyes at me and walked away.\n\n\"Didn't it end with drinks and you going back to his?\" I called out. He laughed as he looked at the photo.\n\n\"Hmmm.\" He said, coming back, and gently positioning me. He had a nice touch. \"And nothing happened because BMX dude had cracked ribs and believe me sex was gonna hurt like a bitch.\" I winced.\n\n\"That's not what I remember....\"\n\n\"Last photo.\" He said. \"Your mate is back in Orthopaedics.\" He left the room and when he came back he pressed his number into my good hand. \n\n\"I can't believe that worked.\" I blinked. He smiled at me and shrugged.\n\n\"Me either. Do you need me to call an orderly?\" I shook my head. \n\n\"I know my way around. Believe it or not I'm kind of a big deal here. They know me as 'that idiot again'.\" Callum smiled. \n\n\"So I'll see you again Dusty?\"\n\n\"You will definitely see me again, Callum. Maybe I'll break my leg next time.\" He blushed and I left, taking the stairs by two and regretting it as I had shooting pains running through my torso. \n\n\u2014\u2014\n\n\"So?\" Ash asked as I sat next to him. I grinned and showed him the number. \n\n\"Irresistible.\" I said. \n\n\"Nice.\" He automatically raised his right arm to hi-five and winced. \"That's right.\" He said as the sling stopped him. \"We were in here to get our arms fixed up, not just to get laid.\"\n\n\"Any luck with Nurse Cavander?\"\n\n\"He's not married and doesn't have a girlfriend.\" \n\n\"Good start.\" \n\n\"You're up next. I just need, like, absolute confirmation he's into me.\" I rolled my eyes.\n\n\"Easy.\" \n\n\u2014\u2014\n\nI swung my legs as the doctor talked me through what I'd done to myself. Basically smashed my elbow it sounded like. Which was gonna be so great when you work construction. God I was gonna get so fucking fat if I couldn't work. I glanced at Nurse Cavender as the doctor walked out. \n\n\"So that sounded bad.\" He laughed. \n\n\"Hey, sounds like you'll get a cushy few weeks off.\" He smiled and sat opposite me. \"That could be nice. Can't say I'd mind a few weeks off.\"\n\n\"What would you do?\" I asked. \"My only hobby is biking.\" Nurse Cavander looked thoughtfully at the wall.\n\n\"I'd garden.\" He said. \"And cook. Shift work means a lot of takeout. And I'd get the house in order and read and catch up with all the friends I never get to see.\" I sighed. \n\n\"Oh well.\" I said. \"I'll find something. That's not exactly up my alley.\" He smiled and handed me- fuck, ANOTHER DAMN FORM? I'd filled in like 7 already. I glanced at him as I awkwardly filled it in. Ok, he liked gardening which I guess is a little gay but I know straight dudes who do plants. I swallowed. \"So this cracked rib sitch.\" I said slowly. \"Uh... I didn't want to ask the doctor because she was scary but between you and me... odds of fucking are...?\" He laughed. \n\n\"I would recommend a few weeks off.\" He said. \n\n\"Ah.\" I sighed. \"I feel like that's a disservice.\" He laughed again and looked at me seriously. I waited for the telling off. \n\n\"There's a lot of dick out there.\" He said instead. \"I'm sure with yours out for a couple of weeks they'll make do. Even with the top shortage.\" Oh he was SO gay. I grinned and started laughing. Nurse Cavander grinned back. \n\n\"Do you and Ashley have a bet?\" He asked. \"I've got to say I've never felt so inappropriately hit on consistently my entire life.\" \n\n\"Is that inappropriate?\" I shrugged. \"Uh... Tell Callum in Radiology I'm real sorry.\" He rolled his eyes. \"Ok.\" I said. \"The deal is I get $10 if I figure out if you're gay. And ahh... then I think Ash might be initiating another inappropriate conversation...\" Nurse Cavander laughed.\n\n\"$10 was not enough.\" He muttered. \"You can tell Ash I'm sorry.\" I laughed. \n\n\"Oh man, you're gonna break his heart.\" Nurse Cavander took my form off me. \n\n\"Nope.\" He said. \"You can give him the bad news that medical professionals, despite what TV might tell you, have other things to think about than a kid 12 years their junior hitting on them.\" He smiled at me. \"Back into the waiting room Dusty.\" I stood up. \n\n\"Thanks.\" I said. \"Good luck getting Ash off your back.\" \n\n\u2014-\n\n\"Bad news bud.\" Ash looked up at me and sighed. \n\n\"Straight.\" He said. \"Dammit.\" \n\n\"Even worse bro. Gay and not into you.\" Ash wailed and I laughed as he clutched his heart. \n\n\"Say it ain't so.\" He moaned. \"I'm so pretty!\" I laughed. \n\n\"Maybe it's your personality?\" He sighed.\n\n\"Must be. Maybe he hates skaters.\" I looked at Ash. God. A fucking skater. Of course he was. \n\n\"That how you fucked yourself?\"\n\n\"Yeah, didn't say I was a good skater.\" I laughed. \"You?\" He was really nice to look at when he smiled.\n\n\"BMX.\" I said slowly. Ash nodded and he pushed his hair off his face as it fell into his eyes. I almost helped him. His hair was thick and dark and... I just really wanted to touch it. Weird night. Most times I'm in here I'm just concerned with getting out but... well. You just don't come across hot guys browsing Grindr in an ED room that often. \n\n\"Nice.\" He sighed. \"I'm so screwed. I work for DoC and I'm gonna be stuck on paperwork for weeks.\" \n\n\"Do you one better. I'm on site and believe me there's not a lot of paperwork for a grunt on an apartment build.\"\n\n\"Oh shit.\" Ash glanced at me. \"You gonna be ok?\" I shrugged. \n\n\"ACC? I don't think they're allowed to fire me. But I guess there's always the dole.\" Ash bit his lip. \n\n\"Dude. That's really lame. I'm sorry.\" I looked at him. I opened my mouth to say something vaguely along the lines of 'Hey Ash wanna make it better...' but his name was called, and then my name was called. \n\nAnd then I realised that was it. I was being sent home, with surgery booked in, and a shit ton of painkillers. Fuck. \n\nI definitely had the wrong guy's number. \n\n\u2014\u2014\n\nNot that Callum was a terrible second choice. I texted him a few days later while I was lying in the hospital doped up.\n\nThat shortie street episode was so cute where that hot radiologist dropped in on room RRE4 to see how BMX dude was getting on after surgery... \n\nHe didn't reply. But he did show up half an hour later and sat on the end of my bed.\n\n\"How are you feeling?\" He asked. \n\n\"Super.\" I smiled at him and tried to sit up. He stopped me and fiddled with the remote for the bed. Oooh. One of those mechanical beds. Well yeah. I guess that made sense for a hospital.\n\n\"Go easy, man.\" He said. \"You did quite a number on yourself.\"\n\n\"Yeah these wankers say I'll be in a cast for six fucking weeks.\" Callum narrowed his eyes at me.\n\n\"Promise you won't cut it off.\" I smiled at him.\n\n\"I'm a man of my word, Cal, I cant promise you that.\" Callum sighed.\n\n\"Then you're looking at a weak elbow which you'll probably fracture again in a month when you swing a sledgehammer too hard. Guess I'll be seeing you a lot more.\" \n\n\"Would that be so bad?\" Callum reached out and took my good hand. He smiled at me.\n\n\"I guess you do look pretty cute in a hospital gown.\"\n\n\u2014\u2014 Boy gets laid \u2014-\n\nHe texted me a week later and asked how I was doing, which was not good at all. I was stir crazy, I was mad at myself and my boss was mad at me, and as much the pain had rescinded- my ribs meant even jerking off was a pain in the ass. And, because I went from biking everyday then working on site for 8 hours to doing sweet fuck all, I was hungry all the time and had to stop myself from eating. \n\nI am an absolute nightmare to be around.\n\nI texted back.\n\nBut maybe I could be charming over drinks.\n\nWell why don't we make it my shout? Get you in a good mood. \n\nHuh. You know, I think it's working already. \n\nWe agreed on 7 at LBQ and I jumped up and made my way to the living room. \n\n\"What.\" Jared said grumpily as I plonked myself down next to my flatmates and winced. I wasn't used to working with a body in pain. \n\n\"Date.\" I looked at his girlfriend Nicky. \"Help.\"\n\n\"Can it wait?\" She sighed. They were drawing up plans for a protest about the housing crisis. I looked at it. \n\n\"Oh come on. This isn't going anywhere.\" I gestured at the plans. They frowned at each other. They were trying to buy a house. They had 80k and couldn't find a place within budget, couldn't get a loan.... but we're all fucked for housing. And I didn't want them to leave me, but I'd never tell them that. I bit my lip and tried the wide eyed puppy look. Nicky refused to look at me. \n\n\"Is he doing the face?\" She asked Jared. \n\n\"Eyes on me.\" He said firmly. \n\n\"Please...\" I whimpered. \n\n\"Don't look at him.\" Jared warned. \"It's manipulation.\" \n\n\"I'm not looking.\" Nicky gritted her teeth.\n\n\"His name is Callum.\" I sighed deeply. \"He held my hand when I came out of surgery...\"\n\n\"Aw...\" Nicky glanced at me and Jared sighed. Heh. Game over. \n\n\"Go on.\" Jared huffed and started to pack away their plans. \"I wish you'd fall for me the way you do for that stupid trick.\" Nicky laughed as she looked at me. \n\n\"You're not as cute as Dusty.\" She said. \n\n\"Don't I know it.\" He sighed and turned to look at me. \"So you found skater boi?\" I bit my lip.\n\n\"Ummm... Noooo....\"\n\n\"Ugh.\" Nicky rolled her eyes. \"You are the only guy on earth who breaks his arm and makes hooking up his priority.\"\n\n\"Well, that's not true.\" I said. \"Skater boi was definitely making hooking up his priority too.\" I sighed. \"Just not with me.\" Jared rolled his eyes at me.\n\n\"Stop being so dramatic. Nicky, fuck it, go do your thing.\" He sighed and packed up the table as I jumped up with glee and moaned in pain again. That's right. Ribs.\n\n--\n\n\"Well. Sleeves are out.\" Nicky said as we tried to wrangle one of my nicer button ups over my cast. There was no way. I grumbled to myself. \n\n\"I can't go in a singlet. I'll look like an idiot.\"\n\n\"Maybe just go shirtless?\" She teased. \"Not a bad look for you.\" \n\n\"Na, I'm going to get so fat over the next few weeks, I don't want him to know what I used to have.\" I sighed and picked up a black t-shirt. I started to try to put it on and Nicky sighed as she watched me struggle with my right arm.\n\n\"Wow, you really are useless.\" She said, helping me out and pulling it down. \"Hmmm.\" She said. \"You're gonna hate me but I think we go with white.\" I moaned as she started gently pulling the shirt off me again and swapped it out. \"Better.\" She said. \"Wear those dark blue jeans you never wear...\"\n\n\"Because they're too tight...\"\n\n\"They make your legs look good.\" She said firmly. \"And do you have a single pair of shoes without holes in them?\" I glanced at the bottom of my wardrobe as I struggled with the jeans. God knew what was even in there. Nicky sighed as she turned around and zipped me up. \n\n\"Thanks.\" I grumbled. I hadn't worn actual pants since I got out of the hospital, and turns out buttons are hard one handed. Nicky's nice though, and it's not like she hasn't seen everything- the three of us go back to high school and we've done enough harmless skinny dipping over the years that her and I lost any shame some time ago. \"My steel caps don't have holes.\" I said. Nicky raised her eyebrows. \n\n\"Sorry I should have been clearer. No holes and not covered in paint primer.\" She dug around in the wardrobe and found an old pair of Timberlands that I guess passed. She held them to me and I looked at her awkwardly as I slid my feet into them. \n\n\"Unmmmm.\" I winced. \"You couldn't help with the laces mate?\" Nicky sighed as she looked at me. ",
        "\"You sure you should be going out? Maybe you should rest up for a few more days.\"\n\n\"I'm going crazy in here. I need this.\" Nicky sighed as she looked at me. \n\n\"I'll pick you up after.\"\n\n\"I can Uber. Anyway we might go back to his...\" I grinned and wiggled my eyebrows at her. \n\n\"Ah-huh. And what exactly do you think you're gonna do with cracked ribs and an arm in a cast?\" She folded her arms as she looked at me. \n\n\"You might have noticed my mouth works just fine.\" I grinned as she groaned and left the room, half laughing and half swearing at me. \n\n\u2014\u2014\n\nCallum was a little late, so he missed me trying to carry two beers to a table outside which was a dumb thing to attempt in the first place. And meant I paid for four beers before he even arrived. Maybe he didn't even drink beer. Dumbass. \n\nHe waved to me as he arrived and thanked me for the beer. \n\n\"Nice.\" He sipped on it. \"What are we drinking?\"\n\n\"Bitterbitch IPA. Not that we need it when you've got me.\" He laughed. \n\n\"So how's your time off?\"\n\n\"I hate it. I'm going crazy.\" I said. \"I can't do anything and ACC barely covers rent.\" Callum nodded sympathetically. \n\n\"Yeah I knew you'd struggle.\" He caught my hand over the table and squeezed it. \"How's the pain?\"\n\n\"Fine if I don't move.\"\n\n\"Let's guess.\" He said. \"You're one of those guys who can't sit still for two minutes.\"\n\n\"You got me.\" I laughed. \"This is the worst!\" \n\n\"You should pick up crochet.\"\n\n\"Sounds gay.\" I laughed. \n\n\"Ew.\" He said. \"One of those self hating ultra masc guys huh?\" I rolled my eyes at him and stroked his hand. \n\n\"I love me.\" I said truthfully. \"And I love soft boys who crochet and stuff. You might have noticed that my arm is in a cast though dumbass.\"\n\n\"You can crochet with just your fingers.\" He smiled at me. \"I could show you.\" \n\n\"That's as good an excuse as any to get me back to yours.\" I teased. He blushed slightly. He bit his lip as he looked at me. \n\n\"I should probably say- I'm not looking for anything serious.\" He told me. I shrugged. \n\n\"Alright.\" I mean. I was. But I didn't mind hooking up, especially not with cuties like Callum. He sipped on his beer and I had to pull my hand away to keep drinking mine. \"Well lucky for you I put out on the first date so you can lose my number after, no hard feelings.\" Callum laughed. \n\n\"Baby, how are you planning on putting out?\" He looked me over pointedly and I sighed. \n\n\"Jesus is that all anyone's going to ask me for six weeks?\" I grinned at him as I sipped my beer. \"Trust me, we can still have fun, Cal.\" \n\n\u2014\u2014\n\nHis flatmates were conspicuously absent when we got to his- a short walk from the dive we'd been drinking at. I inspected his house- nice place- lot's of plants and books. \n\n\"No one's home?\" I checked. He shrugged and blushed a little. \n\n\"They're at a gig.\" He said. \"We ah... I used to get in trouble for bringing guys over and being too loud so I like to wait now.\" I grinned and pulled him into me gently. \n\n\"Oh so I'm a booty call.\" \n\n\"Kinda...\" He winced. \"Sorry?\"\n\n\"No, I like being someone's booty call.\" I squeezed his own sizable booty. I slipped my hand down his pants and he moaned as I let my fingers slide down his crack. \"Where's your room?\" I whispered. \n\nHe led me to his room and helped me out of my shirt. \n\n\"Oooh.\" He touched my chest. \"You know under all that bruising you got some really nice abs Dusty.\" I smiled. \n\n\"Give me two weeks, I'm gonna be an absolute lardass.\" He laughed and I wormed my hand under his shirt and tweaked his nipples. He moaned and glanced up at me. \n\n\"Alright. How did you see this actually working?\" He murmured, his fingers lightly tracing rings around the bruises on my rib cage. I sighed. \n\n\"I'm going to have to lie down.\" I said. Callum nodded and pointed to the bed. \n\n\"Shoes off.\" He said. I sighed as I sat down and grunted as I began to lean over. \"Oh. Hold up.\" He fell to his knees before me and deftly unlaced the boots, pulling them off softly. \n\n\"You don't have to...\" I said, too late. He smirked at me and kissed my toes. \n\n\"Alright. Lie down then.\" I moved into position as he stood up and started stripping for me. Fit bod, he worked out. Big soft hairy thighs and a delectable ass. I grinned. \n\n\"Get up here.\" He obliged me and straddled me carefully, resting his weight on my things and leaning up. I pushed his hair off his face and looked into his eyes. \"Can I kiss you?\" I asked. He smiled. \n\n\"You know, guys always use that line on me.\" I bit my lip and raised my eyebrows.\n\n\"Does it work?\"\n\n\"Always.\" He leant in and pressed his soft lips to mine. His stubble scratched my chin and I moaned and licked it. He laughed and continued making out with me as I felt him up gently with my right hand, touching his nipple, running my fingers down his chest and slowly, oh so slowly, teasing his dick. He moaned into my mouth and I wrapped my hand around him. He was average sized, a hot bend in his dick that I bet the right guy would love. \n\n\"Hey.\" I murmured. \"Let me taste all that sweet pre you're dripping baby.\" He moaned and shuffled until he was kneeling over me, his arms holding himself up against the headboard. \n\nI wrapped my tongue around the tip as I peeled back his foreskin, using my hand to play with his balls and slowly move between the base of his cock... and slowly up his crack... \n\nHe was moaning and thrusting lazily, like his hips couldn't help themselves. His whole body was soft and pliable, desperately responding to my single hand touching him in every way I could. I was so horny, I was lifting my own hips involuntarily and moaning at the slight friction from my jeans... we both needed more. We needed so much more. \n\nI kept my fingers lubed with the spit from my exceptionally sloppy blow job and started to probe his ass gently. He moaned and started humping into my mouth harder. I let him set the pace- I'm not great at blow jobs because I like to move on to eating ass so I'm out of practice... but I'm not a total moron. He grunted as I slid another finger in, moaning around his dick as I felt him suck me in hungrily. \n\n\"Let me eat your ass.\" I breathed, and he shifted to accommodate, so I could wrap my hand around his cheeks, squeezing them hard as my tongue found his glorious butthole. God knows what acrobatics he was pulling but bless his hot soft little ass and those big fuzzy cheeks. He tasted so good. He tasted like desperation and I love a guy desperate for it. I moaned as he relaxed and I felt him pulsing against my tongue as I swirled and sucked, and bit his inner thigh... \n\n\"Oh you're good at that.\" He whined. \"Please, please don't stop...\" \n\nI moaned, feeling my own dick painfully straining against the jeans I'd stuffed it into. I continued to lap at his ass, pushing my tongue deep so he shivered and probing him with my fingers when I could. His balls were all over my face and I hungrily sucked on them as I started to fuck him harder with my fingers. \n\n\"I need your dick.\" He said suddenly, pulling away and looking at me wide eyed. I winced. \n\n\"I can't fuck.\" I said. \n\n\"I know. I'll do all the work... please Dusty.\" His face was flushed and his hair was damp. \n\n\"Yeah.\" I panted, even as my logical brain was screaming no. It hurt when I came, I'd had to stop jerking off... oh but I couldn't say no to him. And his fingers were already working their way into my jeans, shuffling them down carefully so I didn't have to move... and his mouth was already on my dick- which was bigger and harder and veinier than his...\n\n\"Fuck Dusty, that is a beautiful cock.\" Callum moaned, lapping at the tip, and swallowing it. I grunted in pleasure. \n\n\"Gotta fucking big load for you.\" I moaned. \"Haven't wanked in three days.\"\n\n\"God stop it.\" He whined. \"You're not going in raw.\"\n\n\"Smart boy.\" I sighed. \"Wish you weren't.\" He laughed and briefly got off me to retrieve his condoms. \"Lube?\" I suggested. He looked at my dick thoughtfully.\n\n\"Might feel better without.\"\n\n\"Might send YOU to ED for a change without.\" I said back. \"There's some in my bag if you don't have any.\" Callum laughed and got his lube as well. \n\n\"As if a horny bottom doesn't have lube.\" He teased. \"Just thought, you know, with the condom...\"\n\n\"Your ass is gonna be the hottest thing that big boy has taken in months Cal. And I'm useless right now. Use as much lube as you need baby.\" He grinned and unwrapped the condom. \n\nHe... placed it in his mouth and leant over my dick, rolling it on with his mouth. My cock twitched against his lips. \n\n\"Fuck thats hot.\" I grunted. He smirked. \n\n\"Used to practise on cucumbers in high school.\"\n\n\"Little slut.\"\n\n\"Big damn slut.\"\n\n\"You wanna sit that big damn slutty ass on my dick then Cal?\"\n\nHe nodded and reached for the lube, fingering himself and stretching his hole. Ugh, I love watching a guy work himself open for me. He smiled as he started to push me into him with a moan- I got what his flatmates said about being loud- he was crazy fucking loud. Moaning and swearing and telling me I was his daddy... I smiled a bit as I watched him, his eyes closed in concentration.\n\n\"Ugh, I need this so bad!\" He cried out.\"Fuck, your big dick... fuck it feels so damn...\" \n\n\"I'm in.\" I whispered, and his eyes flew open, his mouth parted as he moaned. I took in his face as he relaxed around me- his cheeks all pink and his eyes all wide. We paused as we looked at each other. He was perfect. Soft and flushed and as slutty as anyone I'd ever met. \n\nI grinned as I thrust the last inch in. \n\nI will never get tired of the look when I do that. His head threw back in surprise and I felt his ass clamp down and relax as he felt me- all of me, really this time, thrusting deep into him. \n\n\"Oh. My. Fucking...\" He whined and rested his weight on my ribs for a second as he adjusted again. I breathed heavily. The final inch thing had already sent shooting pains through my torso, but this really wasn't helping. My own damn fault though- serves me right for trying to be such a stud. I moaned in half pleasure and half pain and Callum sat up, gyrating his hips.\n\n\"Sorry.\" He winced. \"Forgot you were incapacitated.\" I moaned as he started to roll his hips. \n\n\"Keep forgetting.\" I said. \"You feel so good.\"\n\n\"Yesss...\" He whined, and started bouncing on my dick. His thrusts were so good- I was hitting him deep every time and he loved it- screaming my name and pawing gently at the bedsheets. \"Oh fuck me Dusty, fuck my hole daddy.\"\n\n\"Oh yes baby, that hole is gonna be fucking wrecked. You slutty little boy. Keep working for me baby... your hot ass is so tight..\"\n\n\"Not for long.\" He whined. \n\n\"No, you little bottom. Once I've fucked you you're never gonna feel full again are you?\"\n\n\"No daddy...\"\n\n\"Slow down.\" I whispered. I mean, I hadn't jerked off in three days. I couldn't last if he kept up the pace like this. \n\n\"You're good.\" He whispered back. \"Hold it back baby.\" I moaned and tried, and to my relief he did slow down, pulling all the way off and slowly down again. Ugh, he knew what he was doing- keeping me so close to the edge... \n\nHe rode me painfully slowly as I moaned beneath him. He gently took my hand and wrapped it around his cock and started riding me again, hard, and moving my hand to jerk him in time with his thrusts. \n\n\"Oh daddy... I'm gonna cum.\" He whispered. \n\nI used every ounce of strength in me and gripped him tight as I lifted my hips and started thrusting back. I was so close. He was closer.\n\n\"Daddy!\" He shouted as he started to cum over me in hot pulses. \n\n\"Yes baby!\" I moaned as I felt his ass twitch and tighten around me. I came hard- in thick spurts that would have coated his insides if we weren't using protection. Oh. Shit... that felt good. \n\nFor like a second before the pain returned and he collapsed on top of me. \n\n\"Oh fuck.\" He whined, pressing his head to my chest. I moved my arm to cradle him- cast and all, and I let him lie there as I tried really hard not to be a jerk and yell at him to get the fuck off me. He squeezed me hard with a sigh. \"Oh Dusty.\" I couldn't stop myself from making a strangled cry of pain and he sat up suddenly. \"Oh my god.\" He said, his post nut clarity finally setting in. \"Dust- shit. I'm sorry. We just went way too hard. Have I fucked you up?\" I laughed. \n\n\"Yes, asshole! God, you're lucky you're cute.\" He jumped off me and threw me some ibuprofen from his bedside table.\n\n\"I'll grab an ice pack.\" He said. I laughed and tried to sit up. \n\n\"Dude! It's fine.\" I patted the bed next to me. \"Do you like...\" I paused looking at him. \"Sorry.\"\n\n\"What?\"\n\n\"Nothing.\" I blushed. \n\n\"You ok?\" I closed my eyes in shame. \n\n\"Just wondered if you wanted to... jeez uh. Cuddle. For a bit. Then I'll get an Uber.\" Callum cracked into a smile as he looked at me. \n\n\"Aw.\" He jumped back on the bed and curled up beside me, so my good arm wrapped around him. He lay his head gently on my chest and blinked up at me.\"This ok?\" He asked.\n\n\"So nice.\" He smiled and played with my chest hair gently. \n\nI could have fallen asleep very happily but I didn't want Callum to think I was getting all mushy and gonna annoy him with texts, so after stroking his hair and holding him close for a few minutes I sighed. \n\n\"I should probably get going.\" Callum sat up and stretched out. \n\n\"Want a lift?\" He asked. \n\n\"I can Uber.\" I slowly sat up and he laughed as he looked at me. \n\n\"Hold up.\" He left the room and came back a minute later with a warm damp towel. I laughed as he gently wiped his cum off my chest. He helped me into my shoes and t-shirt and threw his clothes back on. \"Come on Dusty, let me give you a lift yeah?\" I grinned and wrapped my arm around his shoulder. \n\n\"Alright. Thanks.\" \n\nWe kissed goodnight in his beat up Honda and he stopped me just before I opened the door.\n\n\"If that's what you can do when you're basically immobile I can't wait to try it when you're all healed up.\" He said. \"Maybe I'll see you again? In like, six weeks?\" I grinned. I couldn't say I'd mind being Callum's occasional booty call. \n\n\"Alright. Don't delete my number just yet.\" \n\n\u2014\u2014- Boy's back in Therapy \u2014-\n\nI made quite the show of coming home, loudly yawning and banging around in the doorway, dropping my keys a few times.... Nicky and Jared are notorious for going at it whenever I go out and I've seen enough of them banging on the living room couch to last me a lifetime. I had texted to say I was on the way, and got no response, which meant they were almost definitely balls deep or whatever.\n\nI opened the door cautiously and dumped my stuff loudly on the kitchen table. I headed to my room, hearing nothing, which was wildly suspicious, and I turned to my PC and plugged my headphones in. \n\nGaming \n\nI texted Jared so he knew he could finish whatever perverse fantasy they were playing out and I wouldn't hear a thing. \n\n\u2014\u2014\n\n\"So?\" Nicky asked over breakfast brightly. I glared at her. She'd decided I couldn't sleep until noon anymore and had dragged me out of bed to 'get a head start on the day' with her and Jared. I don't know what exactly she thought I was getting a head start on. Moping around is just as effective in the afternoon as in the morning. \n\n\"Ooh I know.\" I said. \"I'll come do a day at the office with you two.\" They looked at each other, exasperated. \"Like take your daughter to work day, except take your unemployed loser flatmate.\"\n\n\"Why don't you pick up a hobby?\" Jared suggested. \"Research one handed hobbies and get back to us.\"\n\n\"I've been researching one handed hobbies my whole life.\" I joked, miming jerking off. Jared rolled his eyes and looked at Nicky for help. \n\n\"Anyway, how was your date Dusty?\" She asked. I grinned and sat back in my chair. \n\n\"Who's got one functioning thumb and got laid last night?\" I grinned and pointed to myself proudly with my thumb. \"This guy!\" Nicky rolled her eyes. \n\n\"Idiot.\"\n\n\"A congratulations would be nice!\" Nicky glanced at me and glanced at Jared. Uh oh. \n\nI knew that look. Those two share it once every few months and it's usually followed by a lecture. Jared nodded at Nicky and mouthed something I couldn't see. \n\n\"Congratulations.\" Jared said as he stood up and cleared the plates. He was checking his watch at the same time and I stopped him. \n\n\"Yo, I'll do the dishes.\" I offered. He glanced at my cast, obviously tempted. \"I've got all day.\" I said. \"I'll take it slow.\" \n\n\"Thanks Dusty.\" He smiled warmly and grabbed his bag, tapping his foot as he waited for Nicky. \n\n\"See ya tonight!\" I waved them out the door and sighed. I think I knew what was coming. \n\nI tidied the dishes away and did some housework. I always do more than my fair share in all my flats because on the whole I'm the worst to live with. I have parties, I have guys over all the time, I have a bad habit of talking to bible bashers on the doorstep for way too long and everyone gets annoyed at me for it when they swing round for months and months afterwards. \n\nEverything took so much longer than usual, but it kept my mind on something other than feeling shitty. It did feel a little productive. Better than lying in bed wanking till 2pm and then playing video games. Alright Nicky, you might have a point.\n\nI sighed as I ran out of things to do. Dammit. My own thoughts. Which were drifting to the look Nicky and Jared shared over breakfast. I'm pretty sure my worst fears were becoming a reality... it's inevitable when you live with a couple. At some point you overstay your welcome.\n\n\u2014\u2014\n\nI was back in my room, stuck on The True Monk, when Jared knocked on the door. \n\n\"We made too much dinner.\" He said. \"Want some?\" I glared at him. Nice play. I sighed and stood up. \n\n\"Alright.\" I walked out the door and slammed myself down heavily on a chair at the table. \"Let's get this over with.\" \n\nNicky and Jared looked at each other for a second. I avoided their eyes as they looked back to me. They always look so pityingly at me. \n\n\"Ok, Dustman...\" Jared said. \n\n\"How long have I got?\" I cut through the shit. \n\n\"Huh?\" Jared frowned. \n\n\"To move out. What's my time frame?\" Nicky shook her head and Jared sighed. \n\n\"Aw, bro. We like living with you. We don't want you to move out.\"\n\n\"Oh!\" I grinned. \"Oh that's ok then. I thought you were kicking me out.\" Nicky bit her lip and looked at Jared. He sighed. \n\n\"No, we just... look. Dustman. We're worried about you.\" \n\n\"What? Why?\" I sat back in my chair. Nicky winced. \n\n\"Because you've been drinking like stupid, and sleeping with any guy who gives you the time of day, and you keep getting into accidents and now you're so fucked you can't even work... and instead of that being a wake up call you're out fucking some guy you just met!\" Nicky had raised her voice as she spoke and I felt myself blushing. I cleared my throat and glanced at Jared. \n\n\"Dusty.\" He said quietly. \"It's scary watching you at the moment. It's like you're...\" He searched for the right words. \n\n\"Dust, are you trying to hurt yourself?\" Nicky said quietly, taking my hand. \n\nThis was so much worse than the conversation I thought we'd be having. I pulled my hand away from Nicky and rolled my eyes. \n\n\"Jesus dudes. I'm doing fine ok?\" Jared sighed deeply. \n\n\"You're not doing fine. Look in a fucking mirror Dust.\"\n\n\"I promise!\"\n\n\"Don't fucking lie to us!\" Nicky slammed her hand on the table and I jumped. \"Mags was there when you came off your bike. She said you'd landed that spot a thousand times.\"\n\n\"So I didn't stick it on the thousand and first! So what?!\"\n\n\"She said you fucking BIKED to the hospital WITHOUT a helmet on.\" \n\n\"If she was so concerned why didn't she stop me?\"\n\n\"She didn't have a chance! Dusty, you're gonna get yourself killed if you keep doing shit like that.\" \n\n\"Would that really be so bad?\" I joked. Nicky and Jared's faces fell. They looked at each other with this... look of devastation in their eyes. I swallowed. Uh oh. I felt my eyes prick and I breathed deeply. You're not gonna cry, Dusty. ",
        "\"We love you Dust.\" Jared said. \"Since Drew...\"\n\nOh god no. \n\nI grabbed my phone and stood up. \n\n\"Thanks for dinner.\" I grunted, glancing at our three untouched meals. \n\n\"Wait...\" Jared stood up and tried to stop me but I was out the door before he could get a hold on me. \n\n\u2014\u2014\u2014\n\nI was SO fine. \n\nI kicked a rock angrily. \n\nI wasn't trying to hurt myself! I was just distracted. And a bit delirious when I biked to the hospital. The thought of calling an Uber... or hell, I guess an Ambo hadn't really crossed my mind. \n\nAnd Jesus, those two. Could they fucking cool it with the 'I'm so worried' faces? I know I've been a bit of a mess but...\n\nI swore to myself as I found a park bench and lay down. \n\nWhen did they grow up? When did they get over it? I huffed as the dull ache in my ribs started up again. At least it took away from the dull ache in my brain. \n\n\u2014\u2014\n\nAbout all of two minutes later I heard Jared calling for me.\n\n\"Yeah.\" I called back. \"Over here.\" I sat up as he came over and sat beside me. \n\n\"You're shit at running away.\" He said. I laughed. \n\n\"Left my wallet at home.\" He put his arm around me and I let my head fall onto his shoulder. It was one of the things I liked best about Jared. He wasn't scared of intimacy. Most straight guys I know struggle with a handshake- let alone a hug. \"Therapy.\" I said slowly. \"The doctors mentioned it again.\" \n\n\"Good start.\" Jared said. \"Need a hand getting an appointment?\"\n\n\"I'll let you know.\" I said. We looked out across the street and I closed my eyes. \n\n\"Drew would be so disappointed in me.\" I whispered. Jared patted my shoulder. \n\n\"Never.\" He said. \"He would be worried though.\" I breathed deeply. \n\n\"Don't tell Nicky, she'll freak out.\" I said. \"Sometimes it just hurts so bad that I...\"\n\n\"I know.\" Jared said. He looked at me. I looked at him and he got all blurry as the tears that had been threatening me since dinner finally started to fall. \"Dusty. You can't do this forever. You can't just fucking try and kill yourself when you have a bad day.\" I squeezed his hand. \n\n\"I'm not trying to...\" I choked. \"I promise. I just get so...\"\n\n\"I know.\" Jared said. \"But you can't do that Dusty. You hurt all of us in the process.\" I sighed and wiped my eyes as I sat up. \n\n\"Right.\" I said. \"Therapy.\" \n\n\u2014\u2014 \u2014-\n\nAghhh. Therapy. It helps. I'm not going to pretend it doesn't help. \n\nBut I was so close to being normal. Until I fucked up my stupid arm it had been like 6 months without a breakdown. \n\nOf course, the only reason I fucked up my arm in the first place was because of a breakdown. I was just having a good time at the bike track around the zoo in Newtown and it was a normal night and everything was fine and then some cunt who I didn't know me started talking about Drew, telling me he used to know a dude who rode around here, who volunteered at Everybody Eatz, who was about to finish his Law Degree with honours... \n\nHe told me how much he missed that guy and I actually laughed. I missed him too. \n\nAnd as we hopped back on our bikes I heard the same familiar thoughts start to run through my head, and even turning up the volume on my phone and trying to listen to Long Legged Larry- which NEVER fails to make me smile I couldn't drown it out. Why him? Why not me? Why does that world have to live without the charming wonderful smart guy everyone loves and the fucking idiot who drinks too much gets to slouch on? What the fuck is a fucking brain aneurysm? What's the point in living a good life if it can be robbed from you at any second? What's the fucking point of anything? Why him? Why the fuck him? \n\nBecause life's a bitch and I knew it.\n\nI never actually mean to hurt myself. But there's a part of me that doesn't care anymore. There's a part of me so fucking mad at the world I hope I die and get a chance to fight whoever it is who makes the rules. And here's the thing... A set of cracked ribs is in fact a wonderful distraction from a permanently broken heart. \n\n----\n\nI guess I had a lot of headspace available while I was off work. That's not a good thing for me. Celia was glad I called. \n\nI sat on her couch with a peppermint tea and shrugged as I looked at her. \n\n\"So not going great huh?\" She said with a smile. \n\n\"Been better.\" I shrugged. \"Been worse though so that's something.\" I sighed. \"I don't understand how everyone else can keep it together.\" Celia nodded. \n\n\"I'm sure they think the same about you.\" She said. I laughed and held my cast out. \n\n\"Uh-huh.\" \n\n\"You said you've been promoted at work?\" She asked. I swallowed and nodded. I'd worked on my craftsmanship and found a job in a smaller company that registered me with the Master Builders Association. That's one of the reasons the boss was so pissed off at me- he'd given me a chance to prove myself and I was too busy fucking myself up to take advantage of it. He sent over a bunch of plans for me to look at while I was at home. Told me he was going to have to get me used to paperwork if I kept injuring myself. I was thinking about work when I heard Celia clear her throat. \"Sorry.\" She said gently. \"Let's bring you back.\"\n\n\"Daydreaming again.\" I mumbled.\n\n\"Are you still doing the meditation?\" She asked me and I winced guiltily. \n\n\"Hmm.\" I grunted. \"The problem with mindfulness is a lot of it is about staying present in your body... but I hate my body and I don't want anything to do with it.\" Celia smiled at me.\n\n\"When you say hate your body... Can you unpack that a bit for me?\"\n\n\"I... it's like.... I just don't want to, you know... be there with it. I can have fun when I'm not thinking about anything, you know when I'm like, on site, or biking, or hanging out... but when it's just me... I just... \" I wrinkled my nose. \"I think it's uh. You know. Guilt.\" I felt my eyes prick a bit and tried to blink it away. \n\n\"Guilt.\" She nodded. \"It's very heavy isn't it?\" \n\n\"Will it ever go away?\" I asked quietly. I knew she couldn't answer that. I wanted her to say yes of course, darling. It takes exactly three years and four months so you only have to wait for 7 months and 14 days and then you'll be alright again. Shocker- she didn't say that. \n\n\"Managing it is a good start.\" She said. \"Instead of sitting on that guilt and trying to push it away, or write a narrative around it, could I ask you to try something really hard, and just sit with it? Just let yourself feel it, where it sits in the body.\" \n\nI sighed and looked at her. \n\nI hate this part. \n\nI always end up crying.\n\n----\n\n\"How was your day?\" I asked Jared and Nicky over the dinner table. Jared had called me out of my room, pretending they made too much again. They look after me, it's really very sweet. Jared laughed.\n\n\"Actually quite interesting. A couple of guys on the floor above me turn out to be fucking. Nicky lost money on that.\" I glanced at Nicky.\n\n\"You bet on who's fucking each other at work?\" She laughed.\n\n\"All the time! I'm usually right.\" She sighed. \"But Ryan screams straight right?\" She looked at Jared who shrugged. \n\n\"You know I don't have gaydar.\" He said. I picked at my food thoughtfully. \n\n\"Are they hot?\" Jared rolled his eyes and Nicky blushed. \n\n\"Go on Nicky.\" He teased. \"Are they hot?\" She laughed.\n\n\"Not your type.\" She told me. \"Corporate guys. Suits.\" I made a face. \n\n\"Nope. Gross.\" I looked at my food thoughtfully. \"I wonder what skater boi is up to.\" I sighed. Jared laughed at me. \n\n\"Not over skater boi?\" I shrugged. \n\n\"It was the perfect meet cute and I forgot to get his number. Maybe I should post on reddit.\" \n\n\"I don't think that's what reddit is for.\" Nicky said. \"But hey- all the meet cutes in movies end with the guy releasing he forgot to get manic pixie dream skater boi's number. You'll run into him again.\"\n\n\"He's on Grindr...\"\n\n\"If you download Grindr again we really will kick you out.\" Nicky frowned at me. Hookup apps were banned in the house. I went through kind of a major whore phase a year ago. Nicky and Jared had probably heard more horny bottoms describing my dick than they'd had hot dinners. I laughed. \n\n\"Na. I'm not really looking for a bunch of hookups anyway. Cal was kind of a one off.\" Jared and Nicky looked at each other. \n\n\"Tell me you're not going celibate.\" Nicky said. \"No work and no sex... you'll drive us fucking crazy.\" I sighed. \n\n\"First you want me to stop hooking up, then you tell me I need to get laid... choose a lane.\" I grinned. \"Anyway. I didn't mean I was gonna go celibate. Just, you know. Maybe I'm looking for a little more.\" Nicky smiled at me. She glanced at Jared. I tried to ignore their little unspoken conversation. I knew I'd reached the point of wanting to start dating again some time ago, but I hadn't said it out loud. I was always a bit better at expressing myself after therapy. \n\n\"Well you're never gonna meet a nice guy stuck inside.\" Jared said. \"Thought any more about picking up a hobby?\" I shrugged. \n\n\"Fishing. You can teach me..\" I suggested. Nicky shook her head.\n\n\"You can't cast a line until that's off.\" She pointed at my arm.\n\n\"Chess.\" I joked. Jared and Nicky laughed at me. \"Hey!\" I laughed. \"All I need are those magic chess drugs like that show right?\"\n\n\"I think the magic chess drugs only work if you're like... kinda already good at chess.\" Nicky said sympathetically. She patted me on the back. \"There's a community garden thing tomorrow.\" She mentioned. \"I have a ticket but I can't get off work. You wanna go?\"\n\n\"What is it?\" I asked. She shrugged.\n\n\"It's like... They teach you how to grow lettuce and rosemary and stuff. Give you some seedlings to take home. You could take over the pots on the deck.\" I laughed. That was ridiculously wholesome. \n\n\"God, Drew would have loved that.\" I said. You could have heard a pin drop. Usually any mention of Drew was followed by me hiding in my room for a few days. I took a deep breath and looked up and smiled at them. \"Yeah ok. I'll go. Sounds fucking lame but whatever.\" \n\n\"Nothing lame about learning how to cope off grid.\" Jared said firmly. Nicky and I laughed at him, he was such a prepper. He grinned a little as he caught my eye and nodded at me. I nodded back and we went back to talking about the guys at the office fucking. \n\n----\n\nI was horny lying in bed, and I was thinking about Ash. Something about the guy who got away was making me all wound up. I tried to imagine what he'd be like. Assertive, I reckon. Total power bottom. He would tie me up and use me like a big dildo. Maybe he'd even gag me. I laughed as I felt my cock stiffening in my hand. I like to manhandle a guy and get what I need from him but I can't say I mind being topped from the bottom so to speak. Not for the right guy. \n\nI tried to balance my phone between my legs and pressed play on a couple I'd been really into lately. Amateur porn is the fucking best. I grunted in annoyance as the phone fell off my knees and I had to rearrange myself so it was resting on my pillow. I had to turn my head to watch and I knew I'd get a crick in my neck but eh. I wrapped my hand around my dick and slowly started jerking off. It was only half worth it with my right hand. I just didn't have the dexterity I was used to. I switched between watching Chad and Dmitrij and pretending I was with Ash. Or anyone. Pretending I could actually fuck right now and could slam my dripping dick into his ass... whoever he was... totally fucking raw, his little hole all puffy and wet from when I bred him last... his little grunts, his sharp intake of breath when I twisted his nipples gently... unghh. \n\nI grunted as I came. It was starting to hurt less, my ribs must have been getting better- or I was just getting used to it. I rubbed my cum into my skin, which was really hot, and then I realised I was going to have to rinse that off at some point and grumbled to myself. I'm an idiot when Im horny. I lay in bed and tried to sleep. \n\n----\n\nWell. \n\nThat wasn't happening.\n\nI sighed and started browsing reddit. I checked r/wellington and crazily enough there wasn't anything from the last month from anyone saying they met the hottest guy ever in a hospital waiting room and wanted to smash. Where did he work again? That's right. Department of Conservation. Must be a ranger or something.\n\nI almost stopped myself, but there was no harm in looking and I knew I wasn't going to sleep now that the thought had crossed my mind.\n\nI found their website and found myself typing. Ashley Wong? Nothing. I tapped my fingers. I tried 'hot Asian skater boi' and crazily that had no results either. Then I tried Ashley, and after a few girls- there he damn well was. Ashley Wang. His bio read that he was based in Miramar and spent his days laying traps and planting trees. It should have read that he was a fucking hot piece of ass.It should have had his number. Although there was an email address... I looked around my room and thought about it. Ughhhh. On second thoughts maybe not. I'd have to be just one step more desperate to expose what a damn stalker I was. \n\nEventually I got up and made a cup of tea to help me sleep. I'd read somewhere that blue lights from your phone don't help so I picked up a book and curled up on the couch. God what an awful book choice though. I picked it up because it was slim and for children but Jesus Christ. I glanced at the cover. The Happy Prince by Oscar Wilde. Well damn dude, should have called it The Saddest Story because that's what it was. I made another cup of tea and blew my nose. Fuck man, I'd gone for months without crying. Now it just seemed to be leaking out of me everyday. \n\nI picked up one of Jared's comic books to distract me. Way better. This was fucking dumb shit I could get on board with. I read that, and slowly found myself drifting off, and I dreamt of the ridiculous adventures of Magnus and Merle and Taco- only Ash was there too and I kept chasing him and never quite pinning him down.\n\n----- Boy gets boy \u2014\n\nSo you'll never guess who was running Nicky's community garden thing.\n\nOnly you will, because Nicky was right. \n\nI grinned as he mulled around, introducing himself to the attendees. I tried to catch his eye but he was absorbed in meeting everyone else. My stomach was gnawing for attention. I felt tight in my chest. I couldn't wait for him to notice me.. \n\nSo I pulled out my phone, and played the notification sound. \n\nHis head wasn't the only one to glance at me, but he was the only one I was looking at. He grinned immediately and leapt over. \n\n\"Dusty!\"\n\n\"Hey Ash.\" He threw his good arm around me and I glanced at his cast. \"Aw man, you got to choose a colour!\" I admired his cast. He grinned.\n\n\"Like it?\" \n\n\"Hell yeah!\" Hot pink. Very eye catching. He glanced at mine. \n\n\"Oh dude, yours is dope though.\" I'd been stuck with plaster of Paris but thanks to Nicky's fine arts degree I had a fucking sick photorealistic dragon and an octopus battling each other on mine. I twisted my arm to show him. \"Did you do that?\" I rolled my eyes. \n\n\"Yeah. Left handed but surprisingly artistic with my right hand.\" He laughed at himself. \n\n\"Oh yeah.\" He said. \"Forgot. Hey you wanna grab a coffee?\" I couldn't stop the giant smile on my face. \n\n\"Well... should we... start with you teaching me how not to kill every green thing I touch?\" He laughed. \n\n\"I meant after. But good call. I should start.\" He grinned and squeezed my shoulder. \"I'm so glad you showed up.\" He said as he walked away and started to gather the others.\n\n----\n\nI enjoyed myself more than I thought I would, and sure, 9o% of that was the super hot instructor, but it was nice to be outside, and moving again. Ash was super into plants and took us through the garden, explaining what was going to grow well, how to diagnose issues and how to save cuttings and propagate herbs. Most of the people there seemed to already know almost everything, they were nodding along knowledgeably. I didn't know a damn thing and I had heaps of questions. Eventually he laughed as I thrust my hand into the air again.\n\n\"Any more questions you can ask me later Dusty, let's give the others a chance to speak, yeah?\" I blushed a little but I also felt a little special that he knew my name. A girl about my age gave me a withering look. I grinned. Well. At least her gaydar was worse than mine. Good luck, I wished her silently.\n\nHe finished the two hours with a beseechment to donate to some planting on various reserves and a pitch to buy a bit of space in the community garden. He hung around to answer questions and I waited for him. The girl who'd given me that look was flirting with him over a patch of sage and he caught my eye as she rambled on about rotating home crops. He winked and waved me over, pulling me a little too close. She swallowed and glared at me again. \n\n\"Here's my email if you have any further questions.\" He said. She took it and they said goodbye. I nudged Ash in the ribs. \n\n\"Don't lead her on.\" He grinned at me. \n\n\"I gave her my email, I didn't ask her on a date.\"\n\n\"Speaking of which...\" I flashed him a little sort of toned down version of my award winning puppy dog eyes cute pouty thing. He laughed.\n\n\"Oh god. Thats a fucking trap isn't it?\" He grabbed his bag and led the way. \"Nice place round the corner.\" He said. I nodded and fell in step with him. He cleared his throat. \"So ahhh... how's the cute radiologist?\" I smiled. Ha. He was totally into me. \n\n\"We're not seeing each other.\" I said. He raised his eyebrows and smiled. \n\n\"Oh ok.\" He tried to sound casual. \"So what, single?\"\n\n\"Yeah. You?\" \n\n\"Yeah.\" We caught each other's eyes and laughed awkwardly. \"Nice.\" He said. \"Two cool single dudes grabbing a coffee...\" I laughed. \n\n\"Two cool hot single gay dudes grabbing a coffee....\" He grinned and stopped walking. \n\n\"Hold up.\" He said, and walked around me so our casts weren't bumping against each other. \"That's better.\" He said. I glanced at him and he cautiously touched my fingers with his. I let my fingers curl back. \n\n\"Oh yeah.\" I said. \"That is better.\" \n\n\u2014\u2014\n\nWe ordered our coffee and went to sit down. \n\n\"I totally meant to grab your number.\" He said. \"I guess we missed each other on the way out.\" \n\n\"Yeah.\" I said. \"Thought you'd run off with Nurse Cavander after all.\" Ash smiled at me. \n\n\"Na. Stuck up. I'm more into...\" He paused and waved at someone who drifted over. \"Hey Colin.\" He greeted the guy. \"Dusty- Colin, Colin, Dusty.\"\n\n\"How was Water Your Plants 1o1?\" Colin asked with a grin. He turned to look at me and raised his eyebrows as he saw my cast. \"Holy shit.\" He said. \"BMX babe?\" Ash covered his face with his hands. \n\n\"Col.\" He muttered. \"I was trying to play it cool.\" \n\n\"BMX babe huh?\" I grinned at Colin. \"Thats cute.\" I said to Ash. \n\n\"Some other dude.\" Ash said. \"I have so many dudes in hospitals hitting on me it's not like I care or anything.\" I laughed. \n\n\"Well maybe you could pass on my number. He sounds cool. We could go for a ride sometime.\"\n\n\"Well I'd have to get your number first.\" Ash grinned at me and Colin rolled his eyes. \n\n\"Great line.\" He punched Ash in the shoulder. \"I'll see you in a bit.\" He paused as he turned away. \"Let me know if you need cover.\" Ash laughed and waved him away. He cleared his throat and looked at me. \n\n\"Soooo....\" \n\n\"Yeah.\" I laughed and we swapped phones. I put myself in as BMX babe. He smiled as he took it back. \n\n\"Well now how will I tell you apart?\"\n\n\"You can't .\" I said, shrugging. \"Unlucky for him.\" \n\n\"Oh well. I like you better anyway.\" Ash blushed and closed his eyes briefly. The same way I do when I immediately regret what I've just said. He shook his hair out and leant back in his chair. \n\n\"So you're interested in plants?\" He changed the subject. I winced. \n\n\"Uh... not really. I was a lot more interested once I saw the plant guy though.\" \n\n\"Hmmm he does have that effect on people.\" We laughed as we looked at each other across the table and Ash cautiously took my hand again. \"What are you up to tonight?\" He asked. He was blushing again. ",
        "\"Hmmm. Trying to remember what to do with all this shit.\" I gestured to the goodie bag of seedlings we'd all left with. \"If only I knew someone who could help with that....\" Ash squeezed my hand. \n\n\"I'm free.\" He shook his head as the words left his mouth. \"Not that you asked.\"\n\n\"You wanna come over?\" \n\n\"Yes.\" He coughed. \"Man I'm really nailing this ahhh... playing it cool thing huh?\" I laughed at him. \n\n\"Well if it's any consolation I find that pretty charming.\"\n\n\"That's quite reassuring.\" He bit his lip. \"Um.\" He glanced at me. \"I should probably say.... Despite the circumstances of us meeting... I'm uh... probably looking for more than a hookup.\" He looked at me quickly and looked away again. \"Not that I'd uh. Say no to a hookup. Just...\" I squeezed his hand. \n\n\"Well, I'm not looking for marriage ...\"\n\n\"No, no! Sorry- I came on way too strong...\"\n\n\"No!\" I stopped him. \"You're good Ash. I'm not really looking for a hookup either. So...\"\n\n\"So...\"\n\n\"Seems like it's good we met each other.\" I said. Ash smiled shyly. \n\n\"Yeah.\"\n\n\u2014\u2014\n\nI remember a book my mum used to read to me when I was a kid, called Manxmouse, about... god what was it about... like a clay mouse that comes to life? I vividly remember the first chapter where the mouses sculptor gets drunk and he can't describe how but he narrates actually swimming around the backyard. And that's how I felt walking home. I can't explain to you exactly how but I just know I was dancing mid air the whole way home. It was the lightest I'd felt in years. I took my time, walking, dropping in on Graphic; the comic book store and fusion; the skate store I liked and picking up stuff I couldn't really afford but I just knew the transaction would go through. It was that kind of day.\n\nI reached home and pirouetted into the kitchen only to suddenly crash back to reality remembering 1) I can't fuck, I'm broken, and 2) I can't fuck, I live with other people. \n\n\"Shit.\" I said, looking at Nicky unpacking groceries and checking the time. \"He'll be here in an hour.\" She and Jared sighed at each other.\n\n\"The rule is 24 hours notice if you're having someone over.\" Jared folded his arms. \n\n\"But I didn't know 24 hours ago.\" I said stubbornly. \n\n\"So push him to tomorrow.\"\n\n\"I cant!\" I wailed.\n\n\"If he can't wait 24 hours than he's not worth it.\"\n\n\"It's not about him!\" I showed them my bag of plants. \"These are gonna die unless he can help me!\" Nicky raised her eyebrows. \n\n\"You met a guy at the planting workshop?\" \n\n\"No I met a guy at the hospital, he just happened to also be running the plant workshop.\"\n\n\"Wait...\" Jared's face broke into a grin. \"No way. Skater boi?\" \n\n\"Yes way!\" Jared grinned and punched me in my good shoulder.\n\n\"Dude, nice!\" \n\n\"Please may I have him over?\" I started to pout at Nicky and she sighed. \n\n\"Jesus, you wet blanket.\" That was a yes.\n\n\"Thanks.\" I smiled and pulled them both in for a hug. \"I owe you one.\"\n\n\"Add it to the list.\" Jared snorted. \"He staying for dinner then?\"\n\n\"Ummm...\" I bit my lip. \"Well... I guess we were gonna plant these... and then... well I guess maybe we could have dinner later.\"\n\n\"He can eat with us. I mean if we don't like him he won't be sticking around anyway so you may as well rip that bandaid off.\" Nicky said. I laughed. As if they wouldn't like him. \n\n\"We can't eat together, the timings all wrong.\" I explained, hoping they'd pick up what I was putting down. \n\n\"This will be done around 7.\" Nicky said. \"That's more than enough time to do some gardening.\" I sighed and looked at Jared. Damn it, he didn't get it either. \n\n\"Yeahhhh...\" I said slowly. \n\n\"And Jar and I can go to a movie after.\" Nicky said. \"So you two can have some privacy...\" I cleared my throat. \n\n\"Ummm. It sort of, has to be dinner after umm, after some privacy.\" I said slowly. Nicky frowned. \n\n\"Why?\" She asked. Jared cleared his throat. \n\n\"Nick.\" She frowned at him. \n\n\"What am I missing?\" Jared and I glanced at each other. \n\n\"Seriously?\" He said. \"We've lived with the guy for like four years and you never noticed that it's sex before dinner?\"\n\n\"Uh...\"\n\n\"Because if you don't do anal sex right it can...\"\n\n\"Oh!\" Nicky said. \"Shit.\"\n\n\"Yeah that.\" I said. She laughed and started blushing. \n\n\"Oh god.\" She said. She looked at me. \"Dust. Just a warning... you know if your ribs don't heal properly now you know they'll never heal properly... and that might mean sex hurts for the rest of your life. Maybe you could take it easy?\" I frowned. \n\n\"That's not true right?\" I asked Jared. He shrugged. \n\n\"Dunno.\" He looked at Nicky and got a glare, prompting him. \"Uh... but Nicky's probably right. You should go easy.\" I sighed dramatically, \n\n\"Maybe he doesn't even put out on the first date.\" I looked at dinner. \"But maybe he'll think I'm not into him if I suggest dinner first...\"\n\n\"Maybe.\" Jared firmly pushed me into a chair and gave me a glass of water. \"Maybe you're overthinking this. Just ask him if he wants to have dinner with us.\"\n\n\"Well if he says yes maybe he's not that into me...\" Nicky sighed.\n\n\"He's coming over.\" She said, as she started violently peeling the carrots. \"People don't say yes I'll come over to yours if they're not into you.\"\n\n\"No, he's definitely into me.\" I reassured myself. \"He talked to his friends about me. I'm BMX babe.\" Nicky laughed.\n\n\"Did you tell him he's hot Asian skater boi?\" \n\n\"Don't you dare.\" I frowned at her and she raised her eyebrows. \n\n\"Hmm...\" She turned back to the carrots with a sly grin on her face. \"You know, I'm suddenly vividly remembering the time you let slip to that Ma'a Nonu look alike in your math class that I had a crush on him.\" I folded my arms.\n\n\"And I'm suddenly vividly remembering that worked out really well.\" I looked pointedly at Jared, nee Ma'a Nonu math guy. Nicky grinned at me.\n\n\"So maybe I should let it slip then.\" Jared laughed and went to help Nicky with dinner. \n\n\"Stop teasing him.\" He said. \n\n\"Oh, he can take it.\" She laughed, handing him the grater for the red cabbage. \n\n\"Can I help?\" I asked, watching them. Jared rolled his eyes. \n\n\"Just sit back and have a beer Dustman. You can cook for us everyday when your casts off.\" I smiled gratefully and got a bottle from the fridge. I tried to open it and sighed. \n\n\"Uhh... any chance...\" I glanced up and Jared. He laughed at me and ruffled my hair as he opened it for me. \n\n\"Cute that you cant open a fucking beer but you still think you're gonna fuck this guy.\"\n\n\"My dicks not in a cast.\" I said stubbornly. \n\n\"Mmmm.\" Nicky grunted. \"Yet.\"\n\n-----\n\nHe arrived 20 minutes late which was more than enough time to send me into a downward spiral imaging he would never show up. I leapt up when I heard the knock on the door and then tried to play it cool, stretching my legs and yawning. Nicky snorted.\n\n\"Jar, can you get the door...\"\n\n\"I got it!\" I interrupted and practically ran for it. I could hear them laughing at me. \"Hey.\" I said casually as I opened it, leaning on the door frame. Ash nodded at me. Ugh he looked good. He'd changed out of his work clothes and put on a loose t-shirt that exposed just a hint of his chest- he had a sparse sprinkling of hair there and I had to stop my mouth from watering. I knew he wasn't built- not like me- but he was toned, his arms had softly bulging muscles and were tanned from all his work in the sun. He had a sleeve trailing down his left arm, of flowers and native birds. He was wearing chinos that were rolled up loosely around his ankles and a plaid shirt around his waist. Total skater dude. He'd tied his hair up in a bun, and I couldn't wait to get my hands in it and send it tumbling over his shoulders again. I suddenly felt like I should have tried harder. I should have shaved for a start. I should have changed. I should definitely have showered.... \n\n\"Uh...\" Ash interrupted my internal monologue. \"You gonna invite me in?\" I cleared my throat.\n\n\"Yeah, come in. Meet the team.\" I'd texted to warn him the flat mates were in which hadn't deterred him- good sign. Also good to get Nicky and Jared's opinion because frankly it was never gonna work if the three of them couldn't stand each other. \n\n\"Jared- Nicky- this is sk - Ash.\" I caught myself just in time. Everyone did a very good job of pretending not to notice as they shook hands. Ash glanced around the place.\n\n\"I'm guessing the plants aren't Dusty's.\" He said. \"Impressive epiphyte collection.\" He was looking at Nicky but Jared grinned. \n\n\"Thanks.\" Jared said. \"They're my babies.\"\n\n\"Expensive children.\" Ash laughed.\n\n\"Cheaper than the real thing.\" Nicky said. They all laughed but I glanced at Nick. I mean. I knew she wanted kids. She had a whole thing about how biological ones were out of the question but I knew she and Jared had plans to foster.\n\n\"Aw.\" Ash said. \"Kids are kind of the best though.\" I grinned. Knew he'd be a winner. \n\n\"Beer?\" Jared offered. Ash held up his arm. \n\n\"I did bring wine.\" He said. \"Two bottles because I didn't know if you guys were red or white...\"\n\n\"Perfect.\" Nicky said. \"Because we all drink rose.\" Ash laughed as he put the bottles on the table awkwardly. I helped him and Jared started laughing at us. \n\n\"Jesus.\" He said. \"The two of you are a sight. Here.\" He took the bottles of us and poured everyone a glass of red as I pulled out a chair for Ash. \n\n\"Well now I'm double fisting.\" I gestured to the beer in front of me and Ash laughed. \n\n\"You're WHAT?\" Nicky and Jared started to laugh as well. \n\n\"It was an American friend of ours.\" I explained. \"He'd never heard double parked before and got the expression wrong.\" \n\n\"Whew.\" Ash said. \"I was beginning to worry about what I was in for.\" \n\n\"Don't worry I usually save that for the third date.\" I grinned at him as we sipped the wine.\n\n\"So Dusty said you're at DOC?\" Jared changed the subject. \"What kind of stuff do you do?\" I stopped myself from answering for him and sipped on my beer as we got comfortable.\n\nAsh got along well with the two of them, I knew he would, and we sat shooting the shit as Jared and Nicky cooked for us. \n\n\"Can I help?\" Ash offered. \n\n\"Are you more or less useless than he is right now?\" Nicky pointed at me. Ash grinned. \n\n\"On par I reckon.\" \n\n\"Then you can probably save it.\" She laughed. \"Didn't you have some gardening stuff?\" We glanced outside and shrugged at each other. \n\n\"Yeah, come on.\" I stood up and showed Ash the garden area. \n\nHe talked me through how a garden actually worked again and we had a lot of fun trying to plant with both of us using our wrong hands. \n\n\"You're well set up for a really nice veggie patch.\" He said, brushing a strand of hair off his face. \"Is it Jared's?\"\n\n\"Na he only does indoor plants.\" I said. \"This is--\" I trailed off. \"This came with the flat.\" I said. \n\n\"Shame to waste it.\" He said. \"Lucky I was here to save it\". My gut wrenched. I looked at him and noticed he'd trailed dirt all over his face and laughed. I tried to wipe it off and made it worse. \n\n\"Oops.\" I said. \"We should probably clean up for dinner.\" I blushed. \"I mean, sorry- you want dinner?\"\n\n\"Oh god, I was hoping you'd ask.\" He said. \"That smells amazing. You're so lucky. My flat is full of fucking lads. It's awful- they don't know shit about cooking and cleaning. I feel like fucking Cinderella.\" I grinned and pulled him to his feet. \n\n\"Didn't Cinderella meet a handsome prince and it all worked out?\" I said. He looked at me and blushed.\n\n\"Uh...\" He stammered. I laughed at him and pulled him into the bathroom to wash up. \"Hmm.\" He said, looking at his face. \"Good look for me. Rugged, I reckon.\" I wet a cloth and handed it to him. \n\n\"I like you better when I can see you.\" Our fingers touched as he grabbed the flannel and we looked at each other. I reached up to brush a strand of hair off his face, leaning in slowly... and then bonking him in the head with my cast. \n\n\"Shit. Sorry.\" We started laughing and he cleaned his face, putting distance between us. \n\n\"Are you always this clumsy?\" He teased. \n\n\"I'd like to blame it on the cast...\" I shrugged. \"But that's kind of why I'm in one.\" I took the flannel off him and dumped it in the laundry on the way out. \"Endearing right?\" He shrugged. \n\n\"If you like.\" He smiled. \n\n\u2014\u2014\n\nWe ate dinner, and Ash offered to help with the washing up which Jared firmly vetoed. \n\n\"I'm actually ok.\" Ash protested. \"Dusty can help.\"\n\n\"Very firm no.\" Nicky said. \"Dusty has broken enough of our plates this week, he's not going anywhere near them.\" \n\nAsh grumbled but let himself be talked out of it and we drank more as Jared and Nicky got ready to give us some privacy. Ash moved a little closer to me as they grabbed their stuff. \n\n\"Noticed you had Nitro- Fueled.\" He said. \"Wanna play?\" I glanced at him. Not really, I actually wanted to fuck. But we could game if he wanted. \n\n\"I've clocked a lot of hours.\" I warned. \"You sure you want to?\" He grinned. \n\n\"I can take you.\" He said. \n\nHe put up a good fight but he eventually sighed and put the controller down. \n\n\"It's because I'm using the wrong hand.\" He said. I grinned. \n\n\"Na, it's because you're shit at this.\" He rolled his eyes. \n\n\"Dickhead.\"\n\n\"That's loser talk.\" I grinned and turned to face him. He looked at me and shuffled closer. \n\n\"Let's up the stakes.\" He said. \"I reckon I'm better with the right motivation.\" \n\n\"Yeah? What's the right motivation?\" \n\n\"If I win....\" He paused and grinned at me. We'd had at least a bottle of wine by that stage and we were both loosening up. He looked me in the eye. \"You suck my dick.\" I smiled. \n\n\"Ok.\" \n\n\"And if you win...\" He placed his hand on my thigh. \"You get to suck my dick.\" I laughed. \n\n\"I'm starting to feel like this game is rigged.\" He moved his hand further up my thigh and I couldn't hold back a slight moan as I looked at him. He leant into me and slowly his controller fell to the ground as he kept gently stroking my thigh and adjusting himself on the couch until he was half straddling my leg. I reached for him and my hand found its way into his hair- and I finally got a chance to pull on it, and watch it cascade around his shoulders. I placed my hand at the nape of his neck and pulled him in. His eyes closed and we pressed our lips to each other feverishly. He moaned as I probed his mouth with my tongue and we started to make out. \"If I'm sucking your dick either way...\" I mumbled. \"Maybe we skip to that?\"\n\n\"I won't argue.\" He whispered. \n\nI pulled him up and took him to my room where he looked around briefly before undoing his trousers and sitting on the bed. He raised his eyebrows at me. I smiled a bit to myself at the absolute and utter lack of pretending for a second to be romantic- but I was horny too. I didn't want to make more small talk about my hobbies. I got immediately to my knees and looked at his dick in front of me. He was big, even with just a semi. Uncut and thick. I moaned and ran my hand over the shaft gently. He started to grow properly hard and moaned as I started to play with him. Shit, he was really big. Probably the same size as me. Thick, and veiny and throbbing as he grew totally hard in my hand. I played with his foreskin, peeling it back and moaning as I exposed his head, which leaked under my touch. I'm cut and I'm always kind of fascinated by guys who aren't. It made me so hot to gently push the skin back and pull on it again. I moaned and looked up at him. \n\n\"Shit dude, nice cock.\" He grinned. \n\n\"Thanks. Grew it myself.\" I laughed and I felt his hand on my head. I glanced up at him again, but his smile had dropped and he was eyeing me up hungrily. I leant forward and started to wrap my tongue around him. \"That's it.\" He breathed. \"That's really good.\" I tried to do what I always liked. A lot of teasing. A lot of gentle sucking, switching from my tongue to my hands, and moving my head so I could lick his balls. He groaned and shuffled his legs further apart so I could access him properly, and I made sure to press my tongue to his taint as I played with his shaft slowly, before wrapping my tongue around him again and jerking him off into my mouth. I glanced up at him. His eyes were closed with pleasure and his mouth was open. \"That's so good baby.\" He whispered. \n\nI felt pressure on the back of my head, and even though I knew I couldn't take him all I tried my absolute best, and started to really gag on his cock. \n\n\"Oh yeah.\" He started to thrust into me. \"You like that?\" I smiled to myself, because no, it felt like shit, but that didn't matter right now. I let him take total control, holding my head roughly and thrusting into my mouth. \"Oh that's so good.\" He whined. \"Such a good cocksucker.\" I moaned, and I reached between my legs to squeeze my dick- grunting a bit as I tried to find some relief. \n\nHe pushed me off eventually and held my head firmly with my mouth at the tip of his dick.\n\n\"Just...\" He grunted as he started to jerk himself off. I worshipped him, licking and sucking and kissing, and I watched his abs tighten. \n\n\"Gonna cum soon, is this ok?\" He choked out. I nodded and he glanced at me. \"That's a yes?\" He said. I tried to convey yes with just my eyes, enthusiastically taking his head. He sighed and his grunts got louder, and I moaned as I felt him tense up and start shooting his salty load in my mouth. I moaned with his moans, enjoying the sound of a guy losing it over me. His hand moved from his dick to my cheek, which he stroked gently, before running his fingers through my hair. \n\n\"Shit yes.\" He said. I sat back on my knees and narrowed my eyes at him. My turn. I grinned at him as his eyes slowly opened and he took me in- my face all messed up and the raging hard on that definitely needed attention. He moaned. \n\n\"Oh fuck, Dusty.\" He grinned and helped me to sit with him on the bed. We made out for a bit, and his hand slowly drifted to my dick. I pressed into him desperately and he started to stroke me through my jeans. I moaned into his mouth and pulled his hand to help me get out of my trousers... when I heard the front door open. \n\n\"Dammit.\" I sighed. There was no way I could stay hard when our walls were paper thin and Nicky and Jared had already given us more than enough time for this. I glanced at Ash and frowned at him. \"You totally owe me.\" I said. He laughed. \n\n\"Agreed.\" He said. \"That was the best blow job I've had in weeks.\"\n\n\"Good, when are you free next?\" I didn't bother to play it cool. Ash pushed my fringe off my face. \n\n\"Any day after 5. You?\"\n\n\"Yeah I'll just check my schedule.\" I rolled my eyes. \"Huh, look at that. After 5 works for me just fine.\"\n\n\"Friday?\" He said. \"Meet in town?\" I smiled at him. \n\n\"Yeah ok.\"\n\n\u2014\u2014\n\nWe said our goodbyes after I helped him back into his trousers- he was almost as useless as I was one handed.\n\n\"You took these off just fine.\" I grunted as I helped him. \n\n\"I was horny.\" He laughed. \"Thanks.\" \n\nNicky and Jared politely yelled goodbye from the living room so we had some privacy to kiss goodnight, which we did for a long time. I didn't want him to go, but I managed to hold myself back from being too clingy. It was a first date. I didn't need him to stay. I could just privately desperately want him to stay. He hesitated on the doorstep. \n\n\"Friday.\" He confirmed for the fourth time. I grinned. \n\n\"Well, unless Cal from radiology calls...\"\n\n\"Whatever.\" Ash said. \"Bet my dicks bigger.\" I laughed. \n\n\"It's not all about size buddy.\" He grinned and waved to me as he departed, and I watched him go. Nice ass. Real nice ass. \n\n\u2014\u2014- Boy moves forward \u2014\u2014\n\nI didn't see the others until the morning when I thumped down for breakfast. I looked at them expectantly. \n\n\"So?\" I prompted. Jared glanced at me. \n\n\"So what?\" I rolled my eyes.\n\n\"Can I keep him?\" I joked. He glanced at Nicky and raised his eyebrows. God damn it. ",
        "\"I wish you wouldn't do that.\" I grumbled. \"It's really rude for you to have conversations without me when I'm sitting right here.\" Nicky laughed and sat down with a pot of coffee. \n\n\"We like him.\" She said. \"Are you seeing him again?\"\n\n\"Friday.\" I smiled.\n\n\"Nice.\" Jared fist bumped me across the table. \n\n\"So sex after dinner worked?\" Nicky asked. I choked on my coffee, but I guess I'd invited that. \n\n\"We didn't.\" I sighed. \"He wasted all this time losing to me playing crash bandicoot and we ran out of time.\"\n\n\"Aw.\" Nicky smiled. \"Didn't even put out and you still want to see him again. Cute.\" \n\n\"I'm not cute!\" I frowned at her. \"How dare you!\"\n\n\"You are cute.\"Jared said. \"We've always said so.\"\n\n\"Fuck of!\" I laughed. \"You guys are assholes.\" I started digging into my eggs. \n\n\"So any plans today?\" Nicky said. \n\n\"Moping and wanking.\" I grinned at her. \"The usual.\" She rolled her eyes. \n\n\"You should start a project.\" She said. \n\n\"Oooh like a vision board. Good idea. I'll start printing off headless Grindr torsos.\"\n\n\"You could go through the hallway cupboard.\" Nicky said. Jared's head shot up and he widened his eyes at her frantically.\n\n\"I could go through it.\" I thought about it. \"I guess.\" I glanced at the hallway cupboard and cleared my throat as I felt my chest tighten. \"Only fully expect to come home to me bawling over a sock or something.\" Nicky reached for my hand and squeezed it. \n\n\"We can leave it all if you want.\" She said. \"I just thought maybe you could give it a go.\" I shuffled my food around my plate. \n\n\"I'll give it a go.\" I said slowly. \n\n\u2014\u2014\n\nI faced the cupboard dubiously. I stared at it and it stared menacingly back. \n\n\"Ok.\" I said to it. \"I don't like you and you don't like me. But let's put that aside.\" I put my hand on the door. \"Be gentle.\" I asked it quietly. \n\nI paused. And I took a deep breath and opened it. \n\nIt smelled like him. Old spice and Commes des Gargons Black and sweaty t-shirts. I bit my lip. \n\n\"Hey.\" I said to the piles of shit. They didn't reply. \"Sorry I've been avoiding you.\" I said. \"It's not that I haven't been thinking about you.\" I slowly reached in and started pulling out a bag of clothes. \"Ugh.\" I smiled to myself. \"You know, at least if we'd been the same size some of this could be useful.\" I sat down and looked at the pile in front of me. \"You wore this to Kaitoke.\" I said. \"You didn't change for three days. You're so fucking gross.\" I held the t-shirt in my lap. \"Ok, I'll hold onto this.\" I sighed. \"Dick.\" I muttered. \"There isn't going to be a single thing in here I can throw away, asshole. Why did you have to...\" I paused as I felt tears. \"Well. Ok. These shorts can go.\" I cleared my throat and blinked. \"Actually all the trousers. Anyone ever tell you you're too tall?\" I started to carefully divide the pile of clothes up. \"Make you a deal.\" I said. \"I'll keep all the t-shirts if you won't get mad at me for donating the rest.\" I sighed to myself as I sorted the clothes out. My hands brushed a pair of socks. \"Oh fuck.\" I muttered. \"I really am gonna cry over a pair of socks.\" I held them loosely in my hand. \"Stupid lucky socks. No one has those. It's stupid. You're so superstitious Drew.\" I squeezed them and hesitantly brought them to my face. I laughed as I caught sight of myself in the mirror. \"Nice.\" I said. \"Look what you've done, fuckhead. Now I'm some creep who sits on the floor sniffing some dead guys' socks.\" \n\nI felt the tears then, really, and I couldn't stop them. Because I don't think I'd really ever said the \"D\" word out loud. He was gone, he wasn't in my life, he was a memory- but.... \n\nI sniffed and let them fall as I slowly sorted through the clothes, and then all his textbooks, and all his stupid fishing gear- which Jared could have- and his books which his parents had given to me and I'd stuck in the cupboard with everything else. There was nothing that meant nothing. Every scrap of paper had something on it that I remembered. Every damn bit of shit had been a day out, or an argument, or a make up present, or a dumb competition to buy each other the ugliest thing we could... I paused as I hit the gardening stuff. My tears had been stopping and starting for hours now, and I might have been all out. I held his trowel and stared at it. \"I um. I met someone.\" I said slowly. I glanced at the cupboard. It didn't yell at me. It didn't look at me in shock or disappointment. It was a cupboard. \"Ash.\" I said. \"You um. You'd like him. I think.\" \n\nI sat with the trowel in my hand silently. I was right, I was out of tears. But I wasn't out of sitting on the floor, staring at an inanimate object. Holding it in my hand and feeling the wood, and the steel. Breathing deeply. \n\nThe door opened at some point and I glanced up. \n\n\"Oh Dusty.\" Nicky fell to her knees and embraced me. \"Baby, you ok?\" I shrugged her off. \n\n\"Keep.\" I gestured to one pile. \"Donate.\" I gestured to the other. I cleared my throat as I looked at the trowel. \"This lives in the cupboard for a bit longer.\" She nodded and sat next to me, stroking my back. \n\n\"I'm so proud of you.\" She said eventually. \"I couldn't face it.\" I squeezed her hand. \n\n\"I...\" I sighed. \"Yeah.\" I said. I glanced at the door. \"Jared on the way?\" She rolled her eyes.\n\n\"Boys were heading out. Fuck knows when he'll be home.\" She held me. \"Take out?\"\n\n\"Yeah.\" I said. \"And cheap wine.\"\n\n\"Absolutely.\" \n\n\u2014\u2014\n\nWe sat on the couch for dinner, burgers and chips, and we laughed when we realised burgers were a pain in the ass to eat one handed. Half the filling ended up in my lap and I almost pissed myself as we tried to clean me up and made it a whole lot worse.\n\n\"Hey Nick.\" I said as I wriggled out of my trousers, now dripping with oil and cheese. She glanced up. \n\n\"Is that an invitation?\" My eyes bugged wide and she started to laugh again. \"Joking, asshole!\" \n\n\"Whatever, no one can resist me!\" I grinned. \n\n\"You're right.\" She sighed dramatically. \"Ten years Dust... and eight of them with your best friend but it's only ever been you...\" \n\n\"I know baby. And I'm shipping out tomorrow. Let's make tonight count.\" She laughed as I put on my wounded warrior face. \n\n\"But the baby!\" She flopped dramatically on the floor. \n\n\"I'll come back for you.\" I said seriously. \"I'll come back for him.\" \n\n\"We'll always have Paris.\" \n\n\"Oui... je suis... excite.\" Nicky laughed. \n\n\"Tu es shit en francais.\"\n\n\"Merde.\" We laughed and Nicky poured me another glass of wine. \n\n\"What's up?\" She said. I sighed. I'd had a knot in my stomach all day. \n\n\"Hey it's... It's ok right... seeing Ash?\" I said slowly. Her face settled into the softest expression as she looked at me. \n\n\"Baby. You don't need to move on. But you should move forward.\" She reached for me and pulled me in close. \"And I can tell you that. And Jar can tell you that. And Drew would tell you that, but you need to tell yourself that.\" I lay silently in her embrace. \"It will never go away.\" She said slowly. \"Not for anyone.\" I looked up at her. Sometimes I forget I'm not the only one hurting. I squeezed her. \n\n\"You know he loved you more than me?\" I said. She laughed. \n\n\"Doubt.\" \n\n\"He tried to make me give you my signed Lupe Fiasco record.\" I said. \n\n\"You did give me...\"\n\n\"Yeah he was right.\" I held her tight. \"He was so good.\" I sighed. \"I guess I hoped I'd never meet anyone else, a bit. Fucking people is ok but... feeling something. For someone else...\" Nicky stroked my hair. \"It's like... I mean I couldn't say goodbye.\" I sniffed. \"And now...\" I never believed in heaven or hell. I believed in ashes. But that didn't stop me from feeling guilty, like I was cheating, like I had any stake in a life without him... Nicky cradled me. \"I just feel like an asshole.\" \n\n\"Yeah you are an asshole.\" I laughed in shock and she smiled at me. \"A really nice asshole who deserves love and a nice guy and a good job and a good life Dust.\" She sat up a bit and I shifted so we were facing each other. \"He always told me he'd be lost without you.\"\n\n\"Please.\" I rolled my eyes. \n\n\"You're a rock.\" She said. \"You're the strongest person I know. You kept him grounded and loving life- without you he would have been studying all fucking day, and had no friends, and become a lawyer with a weirdly right wing attitude. You gave him love and fun, and the best years of his life. And it's not fair.\" She choked. \"But given that life's not fair it's not fair for you to hold yourself back on his account. He'd be so mad at you. And I am so mad at you. Dust...\" She paused and looked at me. \"You bring a lot to the world. And you'll bring a lot to Ash's world. And he's lovely.\" I started to sob and we both collapsed on one another. \"Aw Dust.\" She held me. \"You're a good man. Just take it slow.\" I nodded and waited until I could speak. \n\n\"Sorry for fucking my arm up.\" I choked out eventually. She laughed. \n\n\"Maybe it was fate.\" She said. \"Maybe it was Drew telling you to get over yourself and stop being so depressed and go fuck someone you love.\" I started to laugh again. \n\n\"Well love is a big word.\" I said. \"But it's been a while since anyone gave me butterflies.\"\n\n\"Ash gives you butterflies?\" I grinned at her. \n\n\"He gives me the worst fucking case of butterflies.\" I admitted. \"You don't think he's too cool for me?\" \n\n\"Oh definitely.\" Nicky sat back. \"But I won't tell him that.\" She pulled away from me and started to nibble on a chip. \"So really, truly, not another hookup?\" She said. I sighed and sat back. \n\n\"I really hope not.\" I said. \"Because if Ash breaks my heart it's beyond repair.\" Nicky grinned and rubbed my shoulder. \n\n\"You gonna tell him?\" She said slowly. I swallowed. \n\n\"Think I have to.\" I said. \"But maybe not the second date.\" She nodded.\n\n\"There's no schedule.\" She bit her lip. \"I think you should tell him though.\" I looked at her and sighed.\n\n\"As always, dickhead, you're right.\" \n\n\u2014\u2014- Boy has a date \u2014\u2014\n\nBut not on the second date. \n\nI couldn't stop the smile as I approached the bar we were meeting at. I knew it was too early to be head over heels so I wasn't, but I couldn't wait to see him again, and joke with him, and touch his hair, and if I was lucky touch some more of his body.... \n\nHe waved me over and I slid next to him. \n\n\"Got you a beer.\" He said, pushing it towards me. \"I don't know what you drink so my first thought was something middle of the road.\" He shoved it toward me and I gulped some down and choked. \n\n\"Middle of the road?!\" My eyes started watering. \n\n\"Well then I remembered you're the kind of guy who breaks his arm doing BMX tricks and I opted for a weird pickle salsa beer I'd never heard of instead. It any good?\" \n\n\"No!\" I laughed. \"It's fucking awful!\" \n\n\"Yeah.\" He laughed. \"Let me try.\" He grabbed at the beer and swallowed some. \"Oh!\" He gasped. \"Yeah thats terrible. That's maybe the worst I've had all year.\"\n\n\"Thank you so much.\" I laughed. \"How much did that set you back?\"\n\n\"$17.00!\" \n\n\"Jesus!\" I sipped on it. It wasn't getting better. Ash laughed at my face. \n\n\"Wanna swap?\" He pushed his beer towards me with a twinkle in his eye. I took it and narrowed my eyes at him. He smiled, all innocent like. I sipped the beer and blinked. \n\n\"Dude you have the worst taste in beer.\" I laughed. \"What the fuck am I drinking?\"\n\n\"It's lemon souffl\u00e9 flavoured!\" I sipped on it again. \n\n\"Actually this ones mildly better.\" I pushed mine towards him and we continued to swap as we went, moaning about how dire they were. \"Alright.\" I said as we downed the last. \"My round.\" I grinned at the bar tender. \"Same again.\"\n\n\"Dude no!\" Ash tried to stop me but I'd already waved my card. I laughed at his face. \n\n\"Not worth it.\" He grumbled as the bartender handed us our drinks. \n\n\"Totally worth it.\" I cackled at his face. \"Play stupid games, Ash...\"\n\n\u2014\u2014-\n\nWe shared some chips and wings at the bar. \n\n\"Do you want real food?\" Ash said. \"I can't cook but we could go somewhere?\" I sipped on my beer as I overthought that. Well we were already drinking beer and eating fried food- I guess fucking was already off the table. I was hungry. But I was also broke. I hesitated for a fraction too long and Ash's face fell a little. \"Unless you want an early one.\" He checked the time. \"It's been a long week for me too.\" I smiled as he tried to give me an out. \n\n\"No, I'd love to grab dinner.\" I said quickly, and tried to think of something cheap and cheerful. \n\n\"Sweet.\" Ash said. \"There's a really nice place like two doors down, Italian, that work?\"\n\n\"Sure.\" I smiled half heartedly and excused myself to go to the bathroom, where I checked my bank account. Man. Being broke sucks. I guess I could put off paying power for a week. If I was lucky Nicky wouldn't kill me. \n\nIt was a small little place with dim lights and open windows tucked between some bars. Ash knew the guy behind the bar and I wondered if I was the latest in a series of men he took here. The guy Ash knew was eyeing me up thoughtfully. He leaned over and muttered something to Ash and Ash hit him playfully before steering us to a table in the window. \n\n\"You come here often?\" I asked as I browsed the menu. Ash smiled at me. \n\n\"I come here quite a bit.\" He said. \"I like it. Intimate.\" I smiled and nodded, and glanced at the menu. The guy from the bar drifted over with some water. \n\n\"The usual?\" He asked Ash. My heart sank a little. I tried not to think about all the guys Ash took here and shared whatever the usual was. Ash leant back and looked at me. \"Maybe you can help him actually finish a meal for once.\" The guy smiled. \"His eyes are bigger than his stomach eh?\" He nudged Ash in the ribs and grinned at me. \"We do him a platter and a pizza and he always tells me he's gonna finish it this time but he's always lying.\" He laughed. I glanced at Ash, who rolled his eyes. \n\n\"I'll get an aperol and he'll have a beer, but maybe you give him a minute to look at the menu Marcus?\" Marcus nodded and called over the restaurant to the bar. \"Usual for Ash and a Peroni.\" He pulled the menu from Ash's hands and looked at me expectantly. \n\n\"A minute?\" Ash implored. I handed Marcus my menu with a shrug. \n\n\"Whatever you usually have sounds good.\" I said and Marcus beamed. \n\n\"And we'll do you some extra bread, and we'll make you some nice potatoes on the side.\" He squeezed my shoulder and called over the restaurant again as he walked away. \n\n\"Ash's usual but bulk it up.\" He called. Ash sighed as he looked at me. \n\n\"Sorry- I didn't mean to order on your behalf.\"\n\n\"You didn't.\" I laughed. \"He did.\" I grinned at Ash. \"How'd you find this place?\"\n\n\"I come here after work when I want a night away from everyone.\" He said. \"You got a place like that?\"\n\n\"Sort of.\" I glanced at my lap. \"Not a restaurant though, just a place I go to with some whiskey.\" Ash laughed at me. \n\n\"You go drinking in a park when you need space?\" I laughed. \n\n\"Not exactly.\" I looked at him. \"You know the big fence around Zealandia?\" He nodded. \"There's a spot I go to, there's a morepork who's around there real late at night. I saw her take flight once, it was amazing- this silent giant bird just leaping out into the night... anyway it's a nice spot for thinking. No annoying Italian waiters who tell me what I'm eating for dinner.\" Ash laughed. \n\n\"You've sold me.\" He said. \"Maybe...\" He trailed off and looked away. I glanced down at my lap. I knew what he was going to say, and I didn't help him out. If it was a different spot then yes- I would love to walk with Ash up Mt Vic or the Massey memorial late at night and sit and drink... but the fence.... well. I wasn't ready. \n\nLuckily our drinks arrived and I teased Ash for the girliness of his and he laughed and told me I was an ass, and the antipasto arrived shortly after and we ate and talked about our work, and our friends and our knees touched under the table. I grinned at him. I hadn't sat down with a guy and done this in years. I loved everything about it. I loved the dim light from the candle, and the way Ash explained what I was eating, and asked me what I liked, and the way he ordered another round of drinks for us and took my hand between courses. \n\n\"Would you...\" Ash said slowly. I looked at him and smiled. \n\n\"Would I?\" I prompted. \n\n\"Like to come back to mine?\"\n\n\"Yes.\" I said as our pizza arrived and we pulled our hands away. Ash grinned at me. \n\n\"I bought Nitro- Fueled.\" He said. \n\n\"That's cute.\" I kicked him under the table. \"You didn't learn your lesson?\" \n\n\"What, suck at video games hard enough and you can talk your way into a blowjob?\" I laughed. \n\n\"New stakes.\" I suggested. \n\n\"I'm listening.\" \n\n\"I'll blow you again if you can win a single round. If not... we do whatever I want.\" Ash smiled. \n\n\"I've been practising all week.\" He warned. \n\n\"Good, you definitely needed to.\" \n\n\"I think I'm gonna fucking own you.\"\n\n\"We'll see.\"\n\n\u2014\u2014-\n\n\"Anyone would think you're losing on purpose.\" I grinned at Ash. \"Another round or do you submit?\"\n\n\"Another round.\" He said firmly. \"I'm still warming up.\" \n\n\"Your funeral.\" I shrugged and turned back to the screen. \n\n\"Give it a rest Ash.\" His flatmate Mike laughed. Mike and Harold had been watching us play for the last half hour while they waited for their ride to watch the game with Ash's other flat mates and some friends out in Seatoun. I'd forgotten it was on and kind of wanted to watch too, but I guess hanging with Ash wasn't a bad second place. We were sitting away from each other on the couch- he'd been kind of standoffish since we'd got home actually. But he lived with like 4 straight guys. He was probably used to toning down the whole gay thing.\n\n\"Right, Rog is downstairs.\" Mike said, standing up and stretching. \"We're out.\" Ash stood up to say goodbye, patting them on the back and telling them to have a good one. They nodded at me. \n\n\"Nice to meet you Dust.\" Harold said. Ash walked them to the door and I grinned as I heard Mike mutter 'nice work Ash'. \n\nAsh slumped beside me... much closer... and he glanced at the screen and back at me. \n\n\"Ready to lose again?\" I said. Ash grinned and put his controller down. \n\n\"What was it you said we were gonna do if I lost?\" I put my controller down and reached for his hand. \n\n\"Whatever I want.\" I said. Ash smiled and let me pull him closer. \n\n\"Well. What do you want?\" He asked. I grinned. \n\n\"You sure you don't want to try once more?\" I ran my fingers down his torso and he shivered. \n\n\"I think I'd like to see what you had in mind.\" He said slowly. I grinned. \n\n\"Last chance Ash.\" \n\n\"I submit.\" I grinned and pulled him into me. He straddled my knee as I reached my arm around him and pressed our lips together. He kissed me back desperately, moaning. His lips were so damn soft, and our stubble scratched each other as we wrested- I knew he'd be dominant, but so was I and he'd already lost this game. He moaned and pressed his crotch into my thigh, and I could feel how hard he was. \n\n\"Hey Ash.\" I whispered. He pulled away a fraction and looked up at me. I nodded at the TV. \"I wanna watch the game.\" \n\n\"What?\" Ash frowned. \n\n\"You heard me.\" I grinned and leant back on the couch. I gestured to the TV again. \"Put it on.\" Ash pouted at me and I grinned. \"Unless you want to try again?\" Ash rolled his eyes and slowly started reconnecting the TV. He turned it to the right channel and glared at me. \n\n\"We're really gonna sit here and watch rugby?\" He said. I shrugged. \n\n\"Well I'm gonna watch.\" I grinned at him. \"You're gonna be busy.\"\n\n\"Is that so?\" He frowned at me again, but it wasn't that convincing. His eyes were smiling. \n\n\"Why don't you help me out here Ash?\" I said quietly, looking at my jeans. He stepped towards me and slowly knelt down in front of me. He helped me out of my trousers surprisingly deftly, even unlacing my shoes and getting them off as well. He leant his head on my thigh as he finished and smiled up at me. ",
        "\"What now?\" He said. I grinned and ran my fingers through his hair. He looked so good. \n\n\"Take your shirt off.\" I whispered. Ash kissed my knee.\n\n\"Why?\" He said quietly. \"I thought you were watching the game.\" I stroked his face and I noticed the way he leant into my touch. My eyes flickered back to the TV and I grinned as he sighed heavily. He managed to get my attention back pretty easily though, peeling his shirt off and discarding it. I looked back to him and bit back a moan. He was strong, but not stocky... just some perfect well sculpted abs and pecs and biceps.... he didn't have a lot of hair, just a sprinkling on his arms, on his pecs... a soft trail highlighting how hot and tight his abs were.... I couldn't help myself, I leaned down and ran my finger down his chest, and stomach, and he closed his eyes and leant into it. I sat back and looked at him. He blinked at me. \"What now, Dust?\" I raised my eyebrows and looked at my dick, which was standing to attention now it had been freed from the confines of my jeans. I shuffled back further into the couch and waited for Ash to take care of me. He grinned and placed one hand on my thigh as he shuffled between my legs and started to kiss my dick. I moaned. \n\n\"That's real nice baby.\" He moaned in response and I suddenly didn't give a fuck about the game, because shit Ash was good at this. He was sucking hungrily, desperately, like he really wanted this, and I let my hand fall in his hair and stroke it, keeping it off his face as he wrapped his tongue around me and moaned in pleasure as he tasted me. \"Jesus you're good at that.\" I laughed weakly. He glanced up at me wide eyed and smiled, fucking his own throat. We held each other's gaze and I could feel my mouth was open, practically drooling as I watched him watching me. I tried to pull myself together, and tugged on his hair a little. He moaned and his eyes closed. \"Do you like that?\" I asked quietly. Ash paused for a second to mumble yeah, and I took the opportunity to pull my dick out of his mouth and tease him a bit. I held it loosely at the base and pulled it away as he moved towards it. \"You want it?\" I asked. Ash was debating. His jaw was clenched and a vein was popping near his eye... but his eyes were also zeroed in on my cock. I could see he was struggling. Would he give in and let me be in charge or would we fight for it? I didn't really mind. I could get him all subby for me, I knew I could- I didn't mind a bit of roughhousing to get there. \"Hey pretty boy.\" I muttered and snapped to get his attention. He narrowed his eyes at me but I clasped his chin before he could react properly and I really slowly, suggestively, started tracing his lips with my fingers. His eyes closed almost immediately and I gently pushed a finger into his mouth, and suddenly he was moaning and sucking on my fingers and wrapping his good arm around my waist. \"Fuck Ash, who knew you were such a slut.\" I whispered. Ash just moaned harder. \"You want the real thing?\" I teased, tapping my dick on his face. He blinked and nodded. \"What do you want?\" I asked. \n\n\"Your cock.\" He said. \n\n\"Yeah?\" A part of him looked like he was about to hit me- but a bigger part of him wanted it so bad. Bad enough that he bit his lip and looked up at me all wide eyed with messy hair and said-\n\n\"Please, Dust.\" And I almost creamed myself. God I love a guy who can beg for it. Especially Ash. Because I knew he wouldn't usually. He had this sort of in charge attitude. \n\n\"Go on then.\" I grinned. \n\nHe dove forward, but I held him back, just so he could suck the tip. He groaned.\n\n\"You're killing me Dust.\" He whispered, his eyes closed. I leant over and kissed his forehead and he tilted his head and we made out for a second before I pushed him back onto my dick and lay back, letting him really get to work. I kept one hand in his hair and stroked it, and I couldn't help but spread my legs and watch the game. This is the fucking life, I thought. All I needed was a beer and I was living the dream. I moaned as Ash started to deep throat me. Fuck he was good. Better than me, but he probably had more practise. I moaned and closed my eyes and focussed on his hot throat as he gagged around me. \n\n\"Oh Ash.\" I whined. \"Fuck you're good baby.\" He moaned around me. I opened my eyes as I heard cheering from the TV and watched as Smith converted a try. \"Fuck yes.\" I muttered. Ash moaned again and I turned my attention back to him. \"Fuck Ash.\" I moaned. He pulled away and looked at me. \n\n\"Dust- can we...\" He bit his lip and glanced behind him. \"Oh we're winning.\" He said. I laughed. \n\n\"Can we?\" I prompted him. He looked back at me. \n\n\"Go to my room?\" He said slowly. I hesitated and he hit my thigh. \"Unless you'd rather watch this, asshole. I guess I can take care of myself.\" I laughed. \n\n\"No TV in your room?\" He laughed and slowly stood up. He wrapped his arms and legs around me and nestled his head in my chest. \n\n\"Fine.\" He said. \"Continue on, sans distracting stud worshipping your dick.\" I laughed and wrapped my good arm around him. I steeled myself. \n\nI wrapped my other arm around him and with a grunt I stood up, and he wrapped his legs around me. \n\n\"Fuck.\" He said as I attempted to carry him to his room. I stopped two steps in and put him down laughing in pain.\n\n\"Shit you weigh a ton.\" I complained. He grinned. \n\n\"Not bad for a set of cracked ribs and a broken arm.\" He punched my arm playfully. \"I've never felt so emasculated in my entire life.\" He reached for my hand and led me to his room. \n\n\"Wait till I'm back on form.\" I said. \"I'll carry you everywhere.\" He laughed. \n\n\"You won't.\" He pushed me into his room and onto his bed and I fell heavily, wincing. \"Oops.\" He bit his lip. \"You ok Dust?\" \n\n\"Yuh.\" I rolled my eyes. \"Manhandling a cripple, real smooth Ash.\" \n\n\"You manhandled me first.\" He leapt up beside me and threw his legs over me. \"I'm also crippled dickhead.\" I ran my hands over his torso. \n\n\"I'm more crippled.\" He reached for my shirt and I let him pull it over my head. He stared at me. \"What?\" I said slowly. \n\n\"Uhhhh....\" He started to blush. I glanced down at myself. Everything seemed normal. I looked up at him again, frowning. \n\n\"What?\" Ash started to laugh. \n\n\"Uh, I don't know how to say this without sounding dumb. Dude, you're fucking built.\" I grinned. \n\n\"Thanks.\" Ash gave me a look that I couldn't quite interpret- but we were both horny and I was naked so I figured it couldn't be anything that bad. I pulled him into me desperately and we made out again, rubbing out crotches against each other. He reached for his pants and we worked them off together, grasping at each other, pulling on each others hair and nipples and sucking and biting and clashing our mouths against each other's flesh. \n\nI was already close, and when he wrapped his hand around my dick I knew I couldn't last, so I mirrored him, and we jerked each other off, our chests pressed together and our mouths only sort of catching each other's tongues. \n\n\"Oh fuck, Dusty...\"\n\n\"Ash...\" God he was such a hot fucking stud- his face all flushed and his hair everywhere... fuck I just wanted to ram my cock deep in his ass... but we were both way too close. We were sweaty and swearing and all over each other and I don't think either of us could have held back if we tried. I watched him bite his lip, and his hair was all over the place, and his abs were so damn tight... I was thinking about shoving myself in him raw and claiming him, and I grunted as my dick got ahead of me and started shooting all over his hands. I moaned his name. He grunted in my ear and held me tight as his own dick spasmed and I felt his hot cum hit me in the chest.. \n\n\"Shit.\" He panted. \n\n\"Fuck.\" I replied. \n\n\"You're so hot.\" He moaned. I moaned in response and pulled him to lie on me, wrapping my arms around him. \n\nWe lay there forever. For as long as we could, just touching each other and slowly breathing. He sat up first. \n\n\"Probably could catch the last quarter.\" He said. I smiled. \n\n\"Yeah, ok.\" We stood up slowly and he pulled his trousers on to my dismay. \"Keep them off.\" I whined. He laughed. \n\n\"Ok.\" He raised his eyebrows at me. \"You too then.\" \n\n\"Sure.\" I'm not shy about my body. He shucked his pants off again and I slapped his ass as we made our way back to the living room, where the game was still on and we were up by a hair . \n\n\"Beer?\" Ash offered. I glanced at him, and my heart swelled, and then I remembered the beer from earlier. \n\n\"Uh...\" He grinned. \n\n\"It's just lager.\" He said. \"Although it is home brewed.\" I rolled my eyes. \n\n\"You're such a fucking hipster.\" \n\n\"Want some or not?\"\n\n\"Yeah, thanks.\"\n\nHe grabbed us each a beer- surprisingly good actually, and we relaxed on the couch at either end, our legs entwined. We cheered as the ABs took it home and I sighed as I put down the glass. \n\n\"I should go.\" I stretched out. I glanced at Ash. He shrugged. \n\n\"If you want.\" He said. \"You could stay.\" \n\n\"For the night?\" Ash raised his eyebrows. \n\n\"No, for a fucking cup of tea.\" I laughed. \"Yeah dipshit, for the night. If you want.\" I smiled at him. \n\n\"Yeah.\" \n\n\u2014\u2014\u2014 Boy spends the weekend \u2014\u2014\n\nI hadn't woken up wrapped around a guy since...\n\nWell that didn't matter. I was wrapped around a guy now. A really hot skater dude with chiseled abs and long hair. He had the perfect frame for me to cradle- just a hair softer than me, lankier, shorter. And so fucking pretty. I kissed his neck as I woke up and he shifted against me.\n\n\"Morning.\" He yawned. I stroked his hair. \n\n\"Hey.\" I said. He slowly moved to face me and I ran my hands over his body again, as though it was new and I hadn't explored every inch of it last night. \n\nWell. To be strictly honest I hadn't explored every inch of it. At no point had he got up to shower, or prep, so I guess we were taking it a little slow. He grinned at me and yawned. \n\n\"Anyone ever tell you you talk in your sleep?\" He said. I blushed.\n\n\"Ah fuck. What did I say?\" Ash laughed. \n\n\"You said you hope Aquaman is gay.\"\n\n\"Like the c\u00f3mics or the Synder cut?\" Ash laughed. \n\n\"Dude, I don't know.\"\n\n\"Well, I'm surprised at subconscious me. Jason Momoa isn't really my type.\" Ash rolled his eyes.\n\n\"Some people are everyone's type.\" He said. I grinned and stroked his arm. \n\n\"Not my type.\" I insisted. \n\n\"Well what is?\" He said. I guess I invited that. I bit my lip as I looked at him. \"Oh god who is it?\" He asked as he looked at my face. I winced. \n\n\"George Clooney.\" I lied. Ash shook his head. \n\n\"Fuck off. Tell me.\" He poked me in the ribs and I winced. \"Wimp.\" He muttered. \"Ok. Celebrity crush on the count of three.\" He suggested. I started to laugh. \n\n\"Fine.\" \n\n\"Three... two... one... Chase Crawford.\" I laughed as Ash blushed when I said nothing.\n\n\"Oh you utter cliche.\" I rolled my eyes. \"Ew, he's so straight though.\" Ash sighed. \n\n\"Whatever. He's cute.\" He raised his eyebrows at me. \"Looks kind of like you Dust.\" \n\n\"Well now you're just trying to get on my good side.\" \n\n\"Anyway. You cheated.\" Ash pouted. \"Can't be that bad. Who is it?\" I sighed. \n\n\"Jordan Rodriguez.\" I mumbled. Ash shrugged. \n\n\"Never heard of him.\" \n\n\"Just a hot actor.\" I said slowly. \"He was in Ladybird.\" \n\n\"Didn't see it.\" I almost sighed with relief. \"What does he look like?\" Ash asked. \n\n\"I dunno. Hot.\" I said. Ash reached for my phone which I handed over and he started googling. I winced as he turned back to me with a grin. \n\n\"Oh you totally have a type.\" He said. I shrugged. \n\n\"Never said I didn't.\" Ash grinned at me. \n\n\"Man I am so totally your type.\" He stretched out as I tried not to blush. \n\n\"Never said you weren't.\" \n\n\"So why'd you get that twunk from Radiology's number instead of mine?\" He said. His voice was very faux casual. I felt my chest grow a little warm and because he was watching me I rolled my eyes, as though I didn't care. \n\n\"Because you had a hard on for our nurse?\"\n\n\"Well he also kind of looked like Chase Crawford.\" I nudged Ash in the stomach and he started laughing. \"I'm flattered.\" He said. \"I look exactly like him.\"\n\n\"I noticed.\" I grinned and rolled over on to Ash. \"So do I stroke your ego for a bit more or do we get breakfast?\" He sighed.\n\n\"Both?\" He half handed me back my phone, when he noticed the tab I had open next to Jordan Rodrigues's IMDb page. He frowned and clicked on it. I winced. Oops. The DoC homepage. He raised an eyebrow and clicked on the search bar. To my shame it popped up with two suggestions. Ash grinned at me. \n\n\"Ashley Wong.\" He read out loud, as if I couldn't see. \"Hot Asian skater boi. Huh.\" I let my head fall to the sheets. \n\n\"Some other dude.\" I said. \"I definitely wasn't looking you up.\" \n\n\"Sure thing Dust.\" He handed me my phone back with a grin. \"Hot Asian skater boi?\" \n\n\"We already covered the I have a type thing.\" I groaned. \"Please tell me it's breakfast now?\" Ash squeezed me tight. \n\n\"Ok.\" He kissed my forehead. \"But you're never living this down.\" I sighed as he grinned at me. \n\n\"Well aware.\" I muttered. \n\n\u2014\u2014-\n\nI turned up at the flat late the next day, after spending the weekend in and out of bed eating and laughing. I forgot to rattle around like usual and walked in and immediately turned around. \n\n\"Guys!\" I sighed. \"Jesus get a damn room.\" I heard Nicky start to laugh and Jared swore. They hastily shuffled some clothes on and Jared cleared his throat.\n\n\"We're decent.\" He said. I slowly turned around and rolled my eyes. \n\n\"Hey!\" Nicky caught my expression and folded her arms. \"You know perfectly well to give us some warning. Especially when you disappear for two days.\" \n\n\"I texted!\" Jared checked his phone. \n\n\"Oh.\" He said. \"Yeah he did.\" He glanced at Nicky. She shrugged. \n\n\"Oops.\" She said, supremely unconcerned. She fell on the couch and grinned at me. \"So things are going ok with hot Asian skater boi?\" I grinned in spite of myself. \n\n\"Too early to propose?\" I asked as I slowly sank down beside her.\n\n\"Probably.\" She grinned. \"That good an ass, huh?\" I bit my lip. \n\n\"We actually still haven't.\" I admitted. \"I mean we've done everything else...\" I grinned as I thought back to us lovingly 69ing, and jerking each other off, and eating each other's cum... I shook myself present. \"I dunno. Maybe he's not into anal.\" Jared choked on a glass of wine he'd just poured. \n\n\"Sorry.\" He said as he finished spluttering. \"Please continue to tell us all about anal sex, you know it's my favourite topic.\"\n\n\"As if you don't enjoy getting pegged.\" I rolled my eyes at him. Because I knew it. You don't live this long with a couple and not know a few way too intimate details about their sex life. Nicky laughed and pulled Jared on to the couch. \n\n\"Maybe you should ask.\" She suggested. I sighed. How the hell do you initiate that conversation? \n\n\"Maybe it's just the casts.\" I mulled. \"Maybe he'll be keen when we can do it properly.\" \n\n\"Maybe enough.\" Jared said. \"I'm not drunk enough for this.\" I conceded that was fair and let him pour me a drink. \n\n\u2014\u2014 Boy talks \u2014-\n\nDays passed into weeks, and Ash and I were as close to inseparable as you could reasonably be when you're still getting to know each other. We texted all the time, and I noticed he'd deleted Grindr, and we hung out four nights a week, playing video games and going to the Italian restaurant, and falling asleep in each other's arms. \n\nBut we still hadn't fucked. \n\nAnd Jared and Nicky were sick of hearing about it. And anyway, they were out tonight, and Ash was busy... and I hadn't been in so long....\n\nI packed myself a lunchbox with a tuna sandwich and a flask of whiskey and slowly made my way up the hill. \n\nIt's so fucking beautiful in Wellington at twilight. It's still, and the birds are chattering to each other. The light is eerie as it slowly settles on the hills and I always feel a weird prickle in my stomach when I'm walking alone. There's something bigger than me in those hills. Something I don't understand. \n\nI listened to the sound of my footsteps in the gravel, and my breathing which was even, despite the hike. Every now and then I talked to myself to fill the silence, only to stop in embarrassment when I thought I heard someone. Only it was always the wind. \n\nI always underestimate the walk. It's further than I think... and then suddenly, it's there. \n\nI grinned. \n\n\"Missed this.\" I said as I sat down with him. He's there. In the soil. You're not allowed to, probably, but this is where he was. Just ashes. \n\nI sat against the fence post with his name on it and hung my head. I usually talk to him, but first I just cry. He doesn't mind. \n\nI cry until I can start laughing, and that's when I start on the whiskey, pouring a little into the soil, because it's his favourite and I like drinking with him.\n\nThe wind is always still while I talk to him. \n\n\"Hey dipshit.\" I greeted him. \"Fuck the sky is pretty tonight.\" I said as I sipped on my whiskey. \"Like a damn Bill Hammond. Creepy and beautiful.\" I sighed. \"Sorry it's been a few weeks.\" I stared out over the hills that led to Brooklyn. \"It's not that I haven't thought about you. I'm just really busy. I'm back in therapy, you're probably happy to hear that, and boss has given me all this paperwork which I thought I'd hate but it turns out I'm pretty good at. I think I might actually have a future if I can stop getting myself into trouble.\" I laughed as I looked at my arm, and my laugh caught in my throat. \"Promise I won't do something that stupid ever again.\" I mumbled. \"I promised Jared and Nick too so you know I'm not lying.\" I sighed and started on my sandwich. \"And then there's Ash...\" I said slowly. I stared at the earth below my feet. \"Which I guess I know you won't be mad about, but I still feel so fucking guilty Drew...\" I closed my eyes. \"He'll never be you.\" I whispered. \"But he is who he is, and I think I might be starting to love him.\" I glanced up as I heard a shuffling and my eyes fell on a shape in the twilight, just inside the fence I was leaning against. I couldn't see it properly but I could hear it and my heart leapt in my throat. \"Drew!\" I whispered. \"That's a fucking Kiwi!\" My mouth dropped open in awe as it came up to the fence, shuffling around with its giant beak. I blinked in utter fucking incredulity. \"No way.\" I whispered. I watched it in silence as the light grew dimmer and dimmer around me, until it was invisible against the undergrowth. I lay back against the fence with a sigh. \"Holy shit Drew.\" I whispered. \n\nI felt warm, which was probably the whiskey, and I started grinning to myself. \n\n\"Here's the fucking rub.\" I started talking again. \"We haven't fucked.\" I laughed to myself. \"Maybe it's me a bit. I just like him so much. If I take that step I'm worried that... I guess I'm worried you'll think I've forgotten you. And Drew- I swear- I'll never forget you.\" I sighed and swallowed more whiskey. \"Sometimes I wish I could.\" I admitted. \n\n\u2014\u2014\n\nI got a call about an hour later from Jared. \n\n\"Hey.\"\n\n\"Hey. You with Ash?\"\n\n\"I'm with... I'm at the fence post.\" I bit my lip. I could practically hear Jared melting into the phone. \n\n\"How's Drew?\" He said quietly. I smiled. \n\n\"He's good.\" I said. \"He sent me a kiwi, it was fucking dope.\"\n\n\"You saw a kiwi?!\" I grinned. \n\n\"Yeah!\" I paused. \"Come up?\" \n\n\"We'll be there soon.\" I grinned to myself and sat in silence in the dark, watching a hedgehog, and listening to the morepork. Eventually I could see Jared's van from the hill and I heard them talking as they climbed up to join me. \n\n\"Nice night for it.\" Jared said as he sat down next to me. He held out a bottle of Passion Pop. I wrinkled my nose and Nicky plopped down beside me and handed me a mug. \n\n\"Save any of the good stuff?\" She asked and I passed her my flask as Jared poured me some of the sugary bubbles that Drew used to go ape shit for. She put her arm around me. ",
        "\"Missed this.\" She said. I squeezed her hand. \n\n\u2014\u2014-\n\nTonight. Definitely tonight. It was Jared's cousins wedding and he and Nicky were out all weekend, so it was just me and Ash, and if he hated anal well, fuck it, I'd get over it. But I was going to ask. \n\nHe arrived and handed me some wine and I swept him up in my arms. My ribs were all but healed and at this stage the cast was pretty much just decoration. As worried as I'd been about becoming a fat slob over my time off site I'd managed to stay in ok shape- I walked every day and Nicky had reluctantly helped me to count calories so I didn't get fat, which everyone said I shouldn't worry about but sue me, I'm vain. I knew I wouldn't be breaking any personal bests when I could get back to the gym but at least I still had abs. \n\nAsh sighed as I picked him up and let his head fall on my shoulder. \n\n\"Well if anyone has to emasculate me this regularly I'm glad it's you.\" He muttered as I carried him to my room. \n\nHe must have seen it as soon as we got in. My artful and unsubtle placement of condoms and lube on the bedside table. He looked at me and moaned as I lay him down and stripped him mercilessly. He helped me with my own clothes, and we reached for each other and kissed longingly. His hands curled in my short hair and I wrapped my hands around his waist, and he lay back on the bed, and then, all of a sudden his expression changed. \n\n\"What?\" I frowned, worried. He shook his head. \n\n\"Oh Dust...\" He sat up, and started to laugh as he looked at me. \"Oh no.\" He said. \n\n\"What?\" I grinned, catching his laughter. He closed his eyes and winced. \n\n\"Oh man.\" He stared at me. \"We haven't thought this through.\"\n\n\"I have.\" Ash bit his lip and smiled. He shook his head. \n\n\"Dust.\" He said carefully. He took my hand in his. \"You know how on Grindr you know exactly who's doing what?\" I looked at him. \n\n\"Ah....\" Ash raised his eyebrows. I looked at him and took him in. All his muscles. His tattoos. His hair. His attitude. His dick. I finally clicked. \"Ah, fuck.\" I said. I guess that hadn't really come up. We were too busy getting to know each other to actually discuss... \n\n\"Top?\" We asked at the same time. \n\n\"Dammit.\" I said. \n\n\"Fuck.\" He laughed. \"Total top right? Not a little bit vers?\"\n\n\"Not really dude.\"\n\n\"Oh no.\" We started laughing again. \"Ok.\" He said. \"We can work around this.\" \n\n\"Ah... ok.\" I stroked his chest, feeling the taut muscle. I ran my hand down to his happy trail and stroked the hair, watching his dick twitch as my hands grew near it. \"What do those guys call themselves? Sides?\" Ash shrugged and ran his hands over my chest, flicking my nipple gently.\n\n\"Yeah man, like blow jobs are great. We can just... touch each other and suck each other and...\"\n\n\"Yeah totally.\" I sighed. I really wanted to fuck though. Ash bit his lip as he looked at me.\n\n\"It would be a fucking dumb reason to lose the best thing that's happened to me all year over something like that.\" He murmured. I stroked his torso and smiled. What an utter sweetheart. \n\n\"Yeah.\" I agreed. \"Not ready to let you go yet.\" He smiled and pushed my fringe off my face. \"We could do threesomes?\" I suggested. \n\n\"Na.\" He said, biting his lip. \"Not cool with you finding some dumb dude you like more than me who takes it up the ass.\"\n\n\"Ok.\" We looked at each other and sighed. \n\n\"I'll try it.\" We said at the same time, and started laughing. \n\n\"Really?\" He smiled\n\n\"You really?\"\n\n\"Total top you said.\" \n\n\"Maybe for the right guy...\" I shrugged. Ash smiled at me. \n\n\"Yeah.\" He said. \"We'll just have to take turns.\" \n\n\"We'll both have to loosen up first.\"\n\n\"Oh god that's right.\" He grinned. \"We're gonna have to go and buy matching dildos.\"\n\n\"His and his.\"\n\n\"Baby's first butt plug.\" \n\n\"Are enema kits reusable?\" I wondered out loud. He laughed. \n\n\"Fuck those bottoms do a lot of work eh?\"\n\n\"You, my man, are gonna have to eat a lot more fibre.\" He wrinkled his nose.\n\n\"Gross.\" He said. I laughed as I swatted at him. \n\n\"I bet that dumb dude who takes it up the ass eats plenty of fibre.\"\n\n\"Ughhh he totally does. Man I fucking hate that guy.\"\n\n\u2014\u2014- Boy fucks boy \u2014\u2014\n\nWe found ourselves at a sex store after a couple of nights of research. I wanted to buy everything online but Ash convinced me it would be more fun to do it in person. \n\nWe trudged up the stairs giggling and walked into the store arm in arm. The dude at the counter looked up at us and glanced at the guy sitting across from him, reading a comic. \n\n\"Evening.\" He nodded at us and the other guy looked up from his comic and looked us over. They turned to each other with a smile. \n\n\"Cute couple.\" The comic book guy muttered. The clerk shushed him. \"Do you think they broke their arms fisting?\" He whispered way too loudly and the clerk blushed red.\n\n\"That would break their arseholes first.\" He whispered back. Ash and I tried to hold back our laughter and he dragged me into the store. He seemed to have a bit of an idea where we were headed. Maybe he knew this place. \n\n\"Ok.\" He said as we paused and pulled out a list.\n\n\"You made a shopping list?!\"\n\n\"Yeah, well I didn't want to get home and realise we'd missed anything!\" I laughed. \n\n\"Do you think everyone does this when they do it for the first time?\"\n\n\"I think most guys go on reddit and ask r/topsandbottoms.\" Ash said seriously. \n\n\"R slash WHAT?\" Ash raised his eyebrows at me. \n\n\"Oh it's seriously good jerk off material in there.\" He said. \"Bunch of horny dudes practising their erotica I reckon. With the occasional not so bad sex tip thrown in.\" I rolled my eyes. \n\n\"Jesus, heard of porn? He laughed. \n\n\"Heard of imagination? Guys in porn don't go into deliciously obscene detail about how good it feels to be a hole for their top and take his seed deep in their rectum...\"\n\n\"Oh my god stop!\" Ash grinned and shrugged. \n\n\"We'll read some when we get home.\" He said. \"Anyway. Here.\" He started pulling out an array of items from the shelves- lube, obviously, a couple of butt plugs. A range of dildos in varying sizes... two enema kits... he laughed as he saw a tub of Metamucil and pointed it out to me. \"That?\" He asked. I smiled. \n\n\"Dude I'm so ahead of you.\" I raised my eyebrows and Ash grinned. We'd agreed that I'd go first, because he seemed insanely nervous and if anything I was kind of intrigued. I'd done it before, but it never felt great- I just switched with Drew once in a while if he wanted to but we both knew it was for him. It had never been a big deal before but I was determined to enjoy it with Ash. There was no fucking way I wouldn't make it work. \n\nI carefully juggled Ash's selections as we headed to the counter and he double checked we hadn't missed anything as I dumped everything in front of the clerk, who's name probably wasn't Veronica like his name tag said. \n\n\"Jesus.\" He said. \"Heard there was a top shortage but has it gotten that bad?\" Ash laughed. \n\n\"Oh no is there?\" He said. \"Fuck better keep it on the DL that two of them have shacked up then.\" I nudged his thigh pointedly. He looked at me and rolled his eyes. \"Like he doesn't hear worse 20 times a day.\" He muttered. The clerk looked between us. \n\n\"I dunno.\" He said slowly. \"Two tops with two broken arms trying to make it work is definitely top ten this week, what do you think Mick?\" Mick glanced up from his comic book. \n\n\"Aw.\" He said. \"It'll never work but God loves a trier.\" Ash wrapped his arm around my waist. \n\n\"It'll work.\" He said firmly. \n\n\"Alright.\" The clerk looked at our selections. \"Well the least i can do is save you some money.\" He started pulling stuff to the side and Ash stopped him. \n\n\"I've thought about this.\" He said. \n\n\"Not hard enough.\" The clerk grinned. \"These are totally unnecessary.\" He gestured to the two largest dildos. Ash and I looked at each other. \n\n\"Uh.... I don't think so...\" Ash said slowly. The clerk rolled his eyes. \n\n\"So that's roughly you right?\" He gestured at them. Ash started to blush. \n\n\"Roughly.\" He said quietly. \n\n\"Right.\" The clerk said. \"So when you're ready for this... you're probably ready for the real thing, and you might as well just do that right?\" Ash and I looked at each other. \n\n\"Oh.\" Ash said. \"I guess.\" \n\n\"And there's no difference between these in size- so butt plug or dildo? Actually, Mick, help us out here...\" Mick looked at our selections again. He pointed at two dildos and a butt plug. \n\n\"This, this, and this.\" He said. \"All you need. You can use fingers to start with right, so you don't need to bother with the smaller ones.\" I glanced at Ash. He was so fucking red. Which served him right for insisting on doing this in person... I started laughing as I looked at him.\n\n\"Shit you were right about coming into a brick and mortar store.\" I said. \"This is great. And what about everything else?\" I blinked at Mick. \"Like... prep and stuff.\" Mick grinned at the clerk. \n\n\"This.\" He picked up a shower nozzle. \"Reusable and straightforward.\" He pushed the enema kits to the side. \"Eat clean. Take fibre. Clean out like a couple of hours before, but not for too long. You don't want to douche too hard and make everything loose, trust me you're in for a bad time... and anyway, just chill out and relax and go for it.\" I grinned at Ash. \n\n\"On me.\" I held out my card. \n\n\"On ME.\" Ash pushed me aside. \"You're still not working.\" \n\n\"You got dinner.\"\n\n\"You can buy me dinner tonight.\"\n\n\"I can't eat tonight!\" The clerk sighed and held up a machine. \n\n\"50/50.\" He told us. He raised his eyebrows at Mick as I waved my card. \"Two tops.\" He said. \"Fucking nightmare.\"\n\n\u2014\u2014\n\nWe split up because Ash wanted to drop all his work gear off so I headed home, not as laden as I'd worried about given I was stuck with public transport. I sighed as I entered the flat and saw Jared and Nicky lounging in the living room. \n\n\"I told you Ash is coming over.\" I warned. \"And I told you it's gonna be impossible to do this with you in the house.\"\n\n\"Chill out Dustman.\" Jared rolled his eyes. \"We're heading out.\"\n\n\"Tonight's the night!\" Nicky grinned. \"God speed.\" I rolled my eyes. \"Or not.\" She wrinkled her nose. \"God give you the stamina to last I guess.\" I cleared my throat and sat down. \n\n\"Hmmm.\" I grunted. That was actually the last thing I was worried about. I hadn't given them the whole story though, so I kept my mouth shut. \n\n\"What's this?\" Nicky grabbed at my hands and I groaned as she wrested the discreet package off me. \"Oh fuck.\" She started laughing. \"Jesus you really have tonight planned.\" \n\n\"Fuck off.\" I grabbed the stuff from her. \"Gonna shower. Have a good night guys.\" \n\n\"Wait what time is he coming over?\" Jared checked his watch. \"Thought we had till 6.30?\"\n\n\"You do.\" I gritted my teeth. \"I'm in the mood for a long shower.\" Jared shrugged and Nicky looked at me thoughtfully. She looked at the sex toys sprawled across the couch and looked back to me. She frowned and I caught her eye. I shook my head as she opened her mouth and looked pointedly at her oblivious boyfriend. She grinned. \n\n\"Alright Dust. See ya tomorrow.\" She said. I grunted and grabbed everything before heading to the shower. There are some things even we don't need to talk about. \n\n\u2014\u2014\n\nI'll tell you something. Cleaning out your ass can be genuinely scary. Who knew? Who knew there was that much... well. You get the picture. I don't think I've ever been so fascinated and disgusted with my body in my entire life.\n\nBut I got it done, and waited for Ash, forgoing the usual beer I'd drink and wishing I had weed. He was early and he fell into me on the doorstep. \n\n\"God, you smell amazing.\" He pressed his face to my neck. \"Jesus. What is that?\" I rolled my eyes. Marc Jacobs Bang. Something Nicky once pointedly picked up for me. Ash grinned as I invited him in. \"You outdid yourself.\" He laughed. \"Normally you don't even shower.\" Which was harsh but fair. I rolled my eyes and we went to my room and sat on my bed, a little awkwardly. Ash stroked my cheek. \"You good?\" He asked. \"You're very quiet.\"\n\n\"I'm good.\" I reached for him. \"Missed you.\" \n\n\"It's been like an hour.\"\n\n\"Sue me.\" \n\nAsh looked at me thoughtfully. \n\n\"Are you sur...\" I cut him off. \n\n\"Ash. I'll be fine. We're just playing.\" Ash pressed his forehead to mine. \n\n\"Ok baby.\" He wrapped his arms around me and kissed my forehead before shuffling to look at me. We were sitting opposite one another, fully closed, with our legs folded. Ash rested his chin on his hand, his eyes fixed on mine. \"Well, this is way too weird.\" He said slowly. \"You wanna just watch something for a bit? And maybe...?\" He pulled out a joint from his shirt pocket and smiled at me. I grinned with relief. \n\n\"That's gonna help.\" I said. \n\nWe put on Metalocalypse because it's about the right level of dumb and funny to relax to and Ash leant his head in my chest like usual and we smoked, huddled around my small iPad screen. We talked through the episode about nothing in particular and I slowly felt myself loosening up. Ash glanced at me as I started humping him slowly. He kissed my neck.\n\n\"Baby, stop thinking with your dick.\" He said softly. I chuckled.\n\n\"Then start playing with my ass.\" I said. Ash sat up. \n\n\"That can be arranged.\" He grinned and we slowly started to undress each other, peeling off shirts and tugging down shorts and caressing each other's exposed flesh. Ash lay me down like I was a fucking virginal blushing bride and I laughed at him. \n\n\"Not like that.\" I pushed him and all his gentle kisses off me. \"Don't treat me like a princess. Treat me like a slut.\" Ash's eyes flashed and he immediately seemed to sit up straighter. \n\n\"I can do that....\" He bit his lip. \"Hey uh.... maybe we use a safe word? If you wanna play slut and daddy...\" \n\n\"Red.\" I said. Ash nodded and looked me over. \n\n\"Ok.\" He said. \n\nHe knelt forward and wrapped his hand in the nape of my neck and jerked me up. \n\n\"You want to be a slut for me baby?\" He grunted. I moaned and let my eyes close, feeling a horny knot in my gut start to form. Fuck... I hadn't been subby in years... I didn't know if I could still get in touch with that part of me... and then I felt Ash's hand connect with my cheek- sort of softly. \"I asked you a question.\" Ash hissed. I moaned again. \n\n\"Yeah.\" I said. \"You can hit harder.\" I mumbled. He slapped me again- way harder- and my eyes flew open in annoyance but as I met his gaze I started to melt again. Shit, he was all fire. His eyes were boring into me. \n\n\"Say it.\" He said. \n\n\"I'm a slut.\"\n\n\"My slut.\"\n\n\"Yeah.\" Ash grinned and sat back. He slapped my thigh and gestured to me to turn over.\n\n\"Hands and knees.\" He directed. I complied and shivered as Ash gently spread my legs and arms wider, muttering an apology as he knocked my cast. He pressed on the small of my back to arch it and caressed my ass gently. \"Damn.\" He whispered. He squeezed my cheeks and parted them and I took a deep breath with him as he knelt behind me. \n\nGod. Damn. Ash knew how to eat ass. His tongue was so fucking adaptable, it felt like everything at once. He was tongue fucking me, and switching to gently kiss my hole, then biting my ass cheeks... and then his fingers were in my mouth and I sucked on them desperately. \n\n\"Fuck.\" He whispered. \"Damn you are a fucking slut baby.\" \n\n\"Yesss.\" I whined. \n\n\"You want to...\"\n\n\"Yeah.\" I felt Ash's fingers at my hole and moaned, lowering my head to the pillow and biting my lip. He was slow and tender and gentle with his insertion, even as he slapped my ass and called me a whore. His hand tangled in my hair and he had me pinned down- god how many fucking arms did he have? He felt like he was everywhere at once... I moaned and focussed on my ass as he hit the spot, and I tried to let go and just enjoy it... and suddenly I was REALLY enjoying it. Something about his rhythm or his filthy whispers in my ear... I don't know but... \"More!\" I cried out. Ash slowed down. \n\n\"More?\" He moaned. \"Oh fuck yea baby.\" He switched from two fingers to three, and at my insistence from three fingers to a dildo. He was fucking me hard, jamming it in and just grazing the right spot every time... and suddenly I knew I needed to be filed, really, truly, totally filled. I needed his cock so bad. I needed him to cum deep inside me. \n\n\"Ash.\" I whispered. \n\n\"Yeah?\" \n\n\"Fuck me.\" I glanced over my shoulder so he could see my wide eyes and know I wasn't fucking around. \n\n\"You... sure?\" Ash pushed his hair off his face. \n\n\"Yeah.\" I whined. \n\n\"Fuck.\" He grunted- and he thrust the dildo deep in my ass and left it there as he moved to grab the stuff on my bedside table. I whined and humped the air, squeezing my muscles tight to stimulate myself without him. \n\n\"Hurry up.\" I grunted. He laughed and slapped my ass as he returned. \n\n\"You big fucking slut.\" He said. \"Fuck baby you've been holding out on me. \n\n\"Fuck me.\" I whined. Ash laughed and started playing with the dildo again and I growled. I turned around again and was about to move and pin him down and MAKE him if he wouldn't, but he caught my head and yanked it back. I gasped as he pulled the dildo out and I felt him press against my twitching hole. \n\n\"You want this?\" He growled. \n\n\"Yeah.\" I panted. He pressed against me a little and I moaned... fuck, I was too tight, I knew I was. \n\n\"Beg for your daddy.\" Ash grunted. \n\n\"Please daddy.\"\n\n\"What do you want baby?\"\n\n\"Your dick, daddy.\"\n\n\"You want daddy's big dick in that little hole? Yeah?\"\n\n\"Yeah.\" Ash grunted and I felt myself start to accommodate him. \n\n\"Push out.\" He muttered. I moaned. I could do that. I pushed out against him and we moaned as I felt the tip of his cock breach me- spreading me wider than I'd ever been and welcoming him. \n\n\"Fuck!\" I cried out, and Ash held me tight, his arm curled around my waist. He squeezed me.\n\n\"You can take it baby.\" He whispered. \"You're such a good little whore. You're gonna take all of it, yeah?\"\n\n\"Yeah...\" I moaned. It was too much, it hurt so bad, but his skin against mine was so good, and there was a need deep inside me, a deep craving I'd never had before. \"Keep going.\" I whispered. \n\n\"Say please.\" He was so mean. I moaned. \n\n\"Please.\" \n\n\"Good boy.\" Ash continued to spread me wide around him, driving himself in, and pausing, and rocking back and forth to loosen me up- and I was pushing back, sweating with the effort, and his hand was still everywhere at once- stroking my abs and my shoulders and my hips... and he moaned as he thrust real deep all of a sudden, and I don't know if I was screaming or moaning but I didn't have time to think because he was fucking pounding me, his thighs were slapping against mine and his hand was gripping my hip.\n\nHe moaned and slowed down, and I could feel him trying to work out where it would feel good for me- he hit it all of a sudden and I twitched under him.\n\n\"Oh fuck.\" I moaned.\n\n\"Oh fuck, that's it.\" He grunted. \"You like that baby?\" \n\n\"Yeah.\"\n\n\"You fucking slut, taking my dick so good baby.\" I moaned and thrust back desperately. \"Oh you're a good boy.\" \n\n\"Yes daddy.\" Ash moaned and thrust deeper again. I lost my balance and fell to my forearm. \"Baby I'm sorry.\" He murmured. \"I can't last.\" I moaned in response and thrust myself back on him. His grunts were getting louder and his thrusts shallower. \n\n\"Ruin me.\" I whispered, and Ash's hand clenched around my waist and I could feel him throbbing deep inside me. \n\n\"Fuck, fuck, fuck.\" He muttered as his hips jerked against me. He unclenched his hand and started to stroke my abs, and my torso, and my ass, and he slowed down and fell against me, panting heavily. I pulled him into me and we collapsed on the bed together. He wrapped his arms around me and held me close, stroking my body gently with his good hand. \"Shit.\" He muttered. \"You sure you're a top?\" I laughed.",
        "\"Maybe a little more vers than I realised.\" I mumbled. \"That was...\" Ash squeezed me tight. \n\n\"I can't believe you did that for me.\" His dick slipped out of my ass as we turned to face each other. Huh. I felt so empty. I laughed. \n\n\"There is no fucking way you're getting rid of me that easy.\" I said. \"I'm utterly fucked for you and if I have to be fucked by you to make it work you can fucking have my ass.\" Ash kissed my nose. \n\n\"I'm fucked for you too.\" He said quietly. \"And I'm gonna be the best fucking bottom you've ever had.\"\n\n\"Better than Cal from Radiology?\" I teased. Ash hit me playfully. \n\n\"Anyway.\" He said. \"You must be starving. Let's grab dinner eh?\" I squeezed his hand.\n\n\"Can we just order in?\"\n\n\"Whatever you want.\" He kissed me.\n\n\u2014\u2014- Boy falls in love \u2014\u2014\n\nI was pulling the gardening equipment from the closet when Jared and Nicky arrived home. \n\n\"Hey.\" I nodded at them and grunted as a book on botany hit me on the forehead. \"Ouch.\" Jared laughed and picked the book up. \n\n\"Botany.\" He muttered as he looked at the title. I took it off him. \n\n\"No point it rotting in the closet.\" I said. \"Thought I might have a real go at the veggie patch.\" Jared smiled at me softly. \n\n\"Good luck black thumbs.\" He teased. I hit him with the book. My cast was finally off and the freedom was indescribable. He laughed and rubbed his arm. \"Well your muscles haven't atrophied.\" \n\n\"Re killing everything I touch, figured Ash could help.\" I pulled the last of the stuff down and set it on the ground with a grunt. \"I made dinner.\"\n\n\"You WHAT?!\" Nicky put her stuff down and turned to me. \n\n\"Ash is coming over in like half an hour.\" I shrugged. \"Beef cheeks. Real cheap and I'm not back at work till next week so I figured I'd try.\" Jared and Nicky glanced at each other. \n\n\"Alright.\" Jared said firmly. \"Enough. Who the fuck are you and what have you done with our dear Dusty?\" I started to laugh. \n\n\"Shut up!\" I said. \"It's a new thing I'm trying called not being totally fucking useless.\" Nicky grinned. \n\n\"I'm into it.\" She said. \"Is Ash bringing booze or should Jar and I get some?\"\n\n\"Maybe you could grab some ice cream? I got carried away and forgot about dessert.\"\n\n\"Is this like an occasion?\" Nicky looked at Jared. \"Is there a date we're forgetting?\" I laughed. \n\n\"If I ever remember a date you know I really have been replaced with a replicant.\" I grinned. \"Ash is taking two days off.\" \n\n\"Jesus.\" Jared moaned and threw his stuff on the couch. \"Is he staying here?\"\n\n\"Is that a problem?\"\n\n\"Yes!\" \n\n\"Come on, we won't be that bad.\" I said. \"It's not like you've never lived with a couple.\" Jared and Nicky looked at each other. I ignored them and swept past them because I could hear the oven timer going and besides, who wants to linger on that particular conversation. \n\n------\n\n\"Holy shit.\" Ash hit me on my shoulder.\n\n\"Ouch!\" I rubbed where he'd hit. He was always playful but he hit too hard. He rolled his eyes at me. \n\n\"Wimp.\" He said. \"Anyway why'd you never tell me you can cook, asshole? This is fucking incredible!\" I laughed. \n\n\"You never asked.\" I said. Jared snorted. \n\n\"Don't fall for it.\" He warned Ash. \"He has literally never done this before. When it's his night to cook he usually orders in.\" Ash laughed. \n\n\"What did you do during lockdown?\" He asked. \n\n\"Went back to Mum's.\" I admitted. \"Managed to wrangle my way out of my fair share of the cooking by taking on the cleaning. Ash sighed. \n\n\"Dammit, that's my trick too.\" We laughed and I squeezed his knee. \n\n\"Hmm. Maybe we'll have to learn to take turns.\" I grinned. Ash winked at me and we kept eating.\n\nWe all washed up together, sort of. The other three told me it wasn't fair and made me sit down drinking and talking to keep them company. Then we curled up on the couches, and I let Ash wrap his arms around me and we watched dumb cartoons until I started yawning and Ash convinced me it was time for bed. He looked up at me as we brushed our teeth and he rested his head in the crook of my neck.\n\n\"Hey.\" I muttered. He squeezed me and said nothing. \n\n\"I've never had this.\" He said quietly as we settled into bed. He looked up at me and blinked his dark eyes at me. \n\n\"Oh Ash.\" I sighed. He laughed suddenly. \n\n\"God I'm the worst.\" He said. \"Sorry Dust. Let's pretend I'm cool enough to not say that kind of thing.\" I laughed and squeezed him tight. \n\n\"Let's pretend you know how happy it makes me.\" He snorted. \n\n\"Shut up, Dusty.\"\n\n\"Hmmm\" I kissed his neck. \"Ash....\"\n\n\"Yeah?\" I sighed and turned over and pulled his hands around me. \n\n\"Nothing.\" I sighed. \"This is nice.\" He squeezed me. \n\n\"Yeah.\" He kissed my neck. \"This is nice.\" \n\n\u2014\u2014-\n\nHe woke up early, I'm not sure when, but he was lying next to me, reading a book when I was awake enough to reach for him and curl my hands around his chest. He looked down at me and smiled. \n\n\"Good morning.\" He said. \n\n\"Morning.\" I yawned. \"What are you reading?\" He glanced at the book. \n\n\"Persuasion.\" He said. He slowly put it down. \"Bit surprised to see Jane Austen in your collection Dust.\" I looked away. \n\n\"I read sometimes.\" I said. \"I guess.\" Ash chuckled and looked at me. \n\n\"We actually have that in common.\" He said. I stretched out beside him. Trust me to find yet another guy who reads. I pressed my head to his ribs and started to kiss them. \n\n\"You're too smart.\" I said. \"I wish I could keep up.\" \n\n\"Shut up dumbass. We're both dumb.\" I laughed. \n\n\"Well. I can't argue with at least half of that.\" I started licking my way up his abs. Ash shivered. \n\n\"Horny already?\" He smiled and ran his fingers through my hair. \n\n\"What's new?\" He grinned and pushed on my head. I let him manipulate me and move me down between his legs. I glanced up at him as I took his semi in my mouth and rolled his foreskin around with my tongue. \n\n\"Shit.\" He moaned, and lay back, spreading his legs. The book fell to his side and he lost his place, but he was gone. He moaned as I took him in my mouth and started sucking. I was so horny, but I was too distracted with giving him pleasure to do anything about my own cock, which was fucking leaking pre. I moaned as I slobbered on him, fucking my face and retching as he grew hard and hit my gag reflex over and over. His hands were tangled in my short hair and he was thrusting and pushing and pulling as we moaned over each other. \"Fuck, cumming.\" He grunted. He gripped my head tighter and held me in place as he thrust into my mouth, and I relaxed my throat as I felt his warm load shooting into my mouth. He slowly stopped thrusting, and his hands made their way to my shoulders, and he pulled me to lie on him and wrapped his legs around me. \"Shit Dust.\" He moaned. \"That's the best good morning I've ever had.\" I grinned and pressed my head to his chest. \n\n\"Breakfast?\" He laughed. \n\n\"You don't want...\"\n\n\"We have all day for you to take care of me Ash.\" I grinned. \"But pancakes only make sense until 11.\"\n\n\"Well that's bullshit.\" Ash squeezed me. \"Pancakes make sense literally anytime, idiot. Especially when we're both off work.\"\n\n\"Well they don't make sense to me after 11.\" I said. \"I'll make breakfast, you can let me know how Anne gets on.\"\n\n\"Oh you really have read this.\" Ash turned his head thoughtfully. \"Do you like Jane Austen?\"\n\n\"No.\" I sat up. \"Someone left them to me. Read it out of obligation. Hated all of it.\" I stood up and grabbed some shorts, almost missing Ash rolling his eyes. \n\n\"I like it.\" He said. \"Human connections. What the heart wants and what society thinks is right.\" I glanced at him. \n\n\"Boring.\" I muttered. He grabbed my arm and pulled me back into bed. \n\n\"Methinks you doth protest too much.\" He poked me in the ribs and started tickling me. \n\n\"Ash!\" I laughed and thrashed around and we started play fighting. \n\nAsh was strong, but I was stronger, and we tangled our bodies together, clawing at each other's skin and trying to wrestle each other into submission. I pinned him down and twisted his arm behind his back. \n\n\"Ugh.\" He grunted. \"Trying to put me back in a cast?\" I ignored him and pressed his face to the bed and he moaned as I nudged his legs open with my knee. \n\n\"Ash.\" I whispered in his ear. He moaned as I locked his neck and bit his earlobe. \"Go take a shower.\" Ash struggled below me and tried to get on top, but I held him firm. \"Now.\" I grunted. \n\n\"Pancakes?\" He muttered. \n\n\"Later.\" I wrapped my hand in his hair and pulled him up. He moaned as he looked at me wild eyed. \n\n\"Got it.\" He whispered. I shoved him out of bed and he narrowed his eyes at me as he grabbed my shorts and headed to the bathroom. \n\n\"Here.\" I reached under the bed and threw him the box. He took it silently. \n\nI would have joined him, but we both preferred to do it alone. Even with all the intimacy in the world there's something about prepping that feels private. \n\nI thought about jerking off. I'd last longer. But maybe I'd last too long. Neither of us were really marathon guys. Shit, neither of us had any fucking stamina around each other but that didn't seem to matter. I picked up the book instead and started reading at a random page. I didn't hate it. I didn't like it either, but like all of Drew's books I kept it near me. His favourite was Jane Eyre and he had about three copies. I must have read that book a hundred times over the last few years. I told him about it, but I still wished I'd bothered when we could have talked. There was so much we never shared together. \n\nAsh took his sweet time and I found myself deeply engaged in the book. I didn't even realise he'd entered the room when he gently touched my thigh. \n\n\"Dust?\" He looked at me. I blinked. \"Aw.\" He said, reaching for my face to brush away a tear. \n\n\"Fuck off.\" I laughed and pushed him away. \n\n\"Allergies huh?\" He teased. \n\n\"Yeah, allergic to melancholy love stories.\" I grinned and put the book down. \"Come here.\" I pulled him into my arms and we sat on the bed, holding each other. He rested his head in the crook of my neck and kissed me gently. I stroked his back. \n\n\"Dusty...\" He turned his head to look at me. I rolled my eyes and pulled on his hair. He might not admit it but he loved it when I did that. His eyes glazed over and he was instantly limp in my arms. \n\n\"Stop saying things.\" I said, holding his head back. \n\n\"Make me.\" He muttered. I grinned and rolled over, so he was pinned beneath me, and I assaulted his nipples and spread his legs, running my hands up his thighs and tracing the sparse hair. \"It's cute when you're mad at me.\" Ash smiled. I bit his nipple and he moaned, and I grabbed his head as it rolled back and held him off the pillow. \n\n\"You really wanna play this game?\" I grunted. He moaned and reached for my cock. I slapped his hands away. \"Na-uh.\" I said. \"That's a privilege for boyfriends who behave.\" \n\n\"I'll behave.\" Ash smiled sweetly at me. \n\n\"You gonna shut up and be my good little bottom?\"\n\n\"Yes.\" He grinned. \n\n\"Doubt.\" I knelt between his legs and he spread them obediently. \n\n\"Please.\" He moaned as I started running my hands over his ass, over his crack, feeling his hole but not pressing in. \n\n\"You want something?\" \n\n\"You.\" He parted his lips and reached for me, and I held him down. \n\n\"Beg for it.\" \n\n\"For a kiss?\" He whined. \n\n\"For what you want.\" I played with his nipple as he thrust his hips involuntarily. \"Beg for me.\"\n\n\"Please... please I'm so horny...\" His dick was hard again and I ignored it as I reached for the lube. \"Yessss...\" He moaned, watching me. \n\n\"You want me to loosen you up?\" I growled. \"You want to spread your legs and take it like a bitch baby?\"\n\n\"Yeah.\" He panted as I ran my finger down his crack. \n\n\"Say it.\" \n\n\"Please Dust...\" He whined as I pressed my thumb to his hole and he shivered beneath me. I wrapped my hand around his throat. \n\n\"Say it.\" \n\n\"Fuck me. Fuck me like a bitch.\" \n\n\"My needy, horny, desperate little bitch.\" I slowly started fucking him with my thumb and he opened his legs wider, and his hole let me in with no resistance, and his eyes closed and he moaned.\n\n\"Fuck me, fuck me, fuck me.\" He begged. \n\n\"Already?\" I grinned and withdrew my thumb and he whined as I moved to eat him out. \n\n\"Shit.\" He cried out. \"Fuck, do that. Don't stop.\" I smiled as I obliged him. Ash had been reluctant and shy when we first started doing this but when I spread him out and stuck my tongue in him he never failed to fall apart for me. Even on nights when he was topping I ate his ass, because I loved the way he threw his head back and let me control him. We always had a power struggle but when I spread his legs he let me own him. \"Dust fuck me please...\" He whined. \n\n\"Good boy.\" I murmured. I reached for the bedside table and he caught my arm.\n\n\"Dust...\" He said slowly. \"It's just us.\" \n\n\"Huh?\" I pushed his hair off his face and looked down at him. Christ he was beautiful. I stroked his cheek. \n\n\"I mean... you could... we don't need a condom? Do we?\" I moaned and felt my cock twitched against his thigh. \n\n\"Oh fuck Ash.\" I bit my lip. \"I don't know.\" I said honestly. \"I haven't been tested in a while.\" Ash held my arm tighter. \n\n\"But it's just been us for weeks. Yeah?\"\n\n\"Yeah.\"\n\n\"And we're on PrEP...\" We gazed at each other. \n\n\"I should know for sure.\" I said eventually. He sighed. \n\n\"Yeah but...\" \n\n\"No.\" I reached for the condoms. \"But yes. I'll get tested.\" He dropped his hand and pouted at me. \"Don't give me that look.\" I growled. He smiled. \n\n\"What look? The Please I'm begging you to fucking dump a load in me look?\" I moaned as I tried to ignore him and wrapped up. I put my hand over his mouth as I worked. \n\n\"Yeah, that look.\" I grunted. I could feel him smiling under my hand and I replaced my hand with my mouth. He kissed me hungrily. \n\nI tangled my hands in his hair, wrapping my fingers in it and pulling it gently. He melted into me. He was barely moving, he let me control him and turned to liquid under my touch. \n\n\"Oh fuck.\" He said as I started to push in without warning. \n\n\"You ok?\" I whispered. He drew his legs apart and moaned, pressing his head to my chest. \n\n\"Mmmm.\" He whined. \"Gentle, baby.\" \n\n\"Ok.\" I held him tight- my soft, sweet lover, and I let all the arrogance and roughness from before fall away as he lay vulnerable under my embrace. I shuddered as I worked my way in. He was so tight and warm. He was so hot. He was so good. \"Ash...\" I whispered. He didn't reply but his legs wrapped tight around me as we rocked back and forth, and his arms clasped around my neck as I drove in deep, whispering his name. \n\nI couldn't help it. He was too tight. He was too loving. He was too much. \n\n\"Fuck, I'm sorry.\" I whispered as I felt myself suddenly way too far gone. Ash pressed his face to mine and kissed me as I moaned, shooting into him and grunting. \n\n\"So. Damn. Good.\" He muttered. He pulled me into him- I was sweaty and gross and panting and he seemed so put together beneath me. I kissed his neck and rolled around so I could cradle him, my cock softening in his ass. \n\nHe let me lie there for a second before he rolled over. \n\n\"You mentioned pancakes?\" He grinned. \n\n\"Oh god, gimme a minute.\" \n\n\"It's almost 11.\" I groaned. \n\n\"Ugh. Fine.\" I grunted as I stood up. My legs weren't quite working properly. \"Ah you've wrecked me.\"\n\n\"I've wrecked you?!\" Ash laughed. \"Feelings mutual dude.\" I grinned and threw him some shorts and made my way to the kitchen. \n\nHe joined me a few minutes later and stretched out before hopping up on the bench beside me. \n\n\"Come here.\" He wrapped his legs around my waist and pulled me in. I grinned and put my hands on his waist. \"Mmm.\" He stroked my face. \"How the hell did I get so lucky?\" \n\n\"Beats me.\" I smiled. We looked into each other's eyes and I pressed myself closer to him as the warmth spread out from my stomach into my chest and all over my body. \"I....\" I choked on my words. \"Feelings mutual dude.\" \n\n\u2014\u2014-\n\nWe spent the day fucking around playing video games and drinking coffee. He dragged me into some clothes at some point and we went for a walk. He held my hand and we swung our arms and talked and joked as we walked. \n\n\"Don't you have a spot up here?\" He asked as we made our way through the undergrowth on the Polhill reserve. I felt my chest tighten. \n\n\"It's too far.\" I said. Ash raised his eyebrows. \n\n\"We have all day.\" \n\n\"Let's go to Brooklyn.\" I suggested. \"Fuck, we could even see a movie.\" \n\n\"Ok.\" Ash grinned. I led him away from the track and over the hill, back to the suburbs. We paused outside of the cinema. \"Predator in half an hour.\" He grinned. \"You in?\"\n\n\"Fuck yes. Grab a beer while we wait?\"\n\n\"Yeah.\" He wrapped his arm around my waist and we went in. \n\n\u2014\u2014\n\nWe hung out in my room, yelling a hi to Nick and Jared as they got home. We were lying on my bed and rebuilding a lego set which Ash had accidentally knocked over after lunch. \n\nAnd I was achingly horny. \n\n\"Stop it asshole!\" He laughed as I tried again, brushing his hair off his neck and feeling him up suggestively. I ignored him and wrapped my hands around him and pressed my dick into his back. \n\n\"No.\" I said. \"I wanna fuck you so bad.\" Ash pulled away and looked over his shoulder. \n\n\"We agreed you tonight.\" He said. I grabbed his hair. He moaned. \n\n\"Don't care.\" I murmured. \"Get on your fucking knees Ash.\"\n\n\"I haven't...\" He whispered. \n\n\"Don't care.\" I said again. I pushed his head forward and knelt behind him, manhandling him roughly. \n\n\"Fuck you.\" He whispered as I yanked his shorts down and spread his legs. He spread them though, and he moaned as I dove between them. \n\nI was too impatient to do it properly, but he lay still when I'd finished, and moaned as I swapped from my mouth to two fingers with no warning, and he bucked against me as I fucked him hard with my fingers. \n\n\"Fuck yeah.\" I watched him as I did my best one handed to huddle lube and a condom as fast as possible. \"Fuck you're a good hole. Just a fucking needy little hole.\" \n\n\"Mmmm.\" He whined. \"Oh god!\" He cried out as I started to push in. My dick was thinking for me and I was rougher than I'd ever been with him. I wrapped my hand around his mouth, and held his waist tight with the other. \n\n\"Shut up.\" I grunted. \"We have company.\"\n\nAsh moaned and fought against my grip but I doubled down and pushed his head to the bed, pinning him down. \"Oh fuck yes.\" I muttered. \"Take it. Take it.\" Ash reached behind me and clung on to my ass as I pounded him. He started moaning and I slapped his ass- which had the opposite effect as intended because he moaned again, really loudly. \n\n\"Fuck Dust...\"\n\n\"Shhhh!\"\n\n\"Oh fuck...\"\n\n\"Shut the fuck up or I'll gag you.\" He moaned and I felt him quivering underneath me. \n\n\"Dust go shallow.\" He moaned, and even though I just wanted to hump the shit out of him I listened and pulled back a bit. He was hot and shaking... I reached for his dick and he batted me away. \"So close...\" He whined. I moaned and kept going. Fuck, I'd never ever managed to give him a pgasm before. I gripped his waist because he was failing to hold himself up, and I reached for his nipple and teased it as I thrust in. \"Oh my god. Oh my god...\" He moaned. \"Fuck, fuck...\" He tensed up. \"Fuuu uck....\" He sobbed as his whole body spasmed beneath me. His whines had pushed me over and I let myself thrust in deep again- it only took a couple of deep strokes and I was cumming with him. \n\n\"Jesus.\" I moaned. \n\n\"Shhh.\" He said weakly. \"We have company.\" I giggled and fell on top of him and rolled us over... \n\n\"Ah fuck ow!\" I cried out as I realised we'd been fucking almost on top of a pile of lego. Ash laughed at me as I fell off the bed. \n\n\"That's karma.\" He said. \"Horny bastard.\" I winced as I lay on the floor. \n\n\"Fair.\" I said. I looked at him. \"Um. Owe you one?\" He rolled his eyes and suddenly blushed a violent red. ",
        "\"Oh my god.\" He said. \"Your flatmates...\" I shrugged. \n\n\"They've heard worse.\" \n\n\"Oh no.\" He buried his face in his hands. \"Ok well I'll skip dinner and lie in again tomorrow and then literally never see them again.\" \n\n\"You can't not see them again!\" I laughed as I stood up and shook myself off. \"Come on. Rip the bandaid off wimp.\" He sighed. \n\n\"I hate you.\" He said as he looked up and me between splayed fingers. I laughed and pulled him up. I kissed his forehead. \n\n\"That's a shame.\" I said. \"I was beginning to really like you.\" \n\n\u2014\u2014\n\nJared and Nicky were extremely polite and didn't say a word. Ash was bright red and it didn't seem to go away no matter how much wine I tried to press on him to relax him. He wasn't saying much but please and thank you as I made dinner again- a slightly less intensive meal of steak and chips. He caught my eye as we sat at the table together. \n\n\"Nice day?\" Nicky said. \n\n\"So good. We had pancakes. We saw Predator. Ash broke my Millennium falcon so we worked on that.\" I grinned. \"And then I...\"\n\nAsh choked on his drink. \n\n\"Dusty!\"\n\n\"Made dinner?\" I laughed as I looked at him. He sank a little in his chair. Jared tried to hide his laugh with a cough. \"It's fine.\" I placed my hand on Ash's thigh. \"Jared was even louder than you when he had his first...\"\n\n\"Dusty!!!!!\" Everyone said. I grinned as they rolled their eyes and hit me in various parts of my body. \n\n\"Oh you all love me really.\" I smiled as I stood up. \"More wine?\"\n\n\"A bottle each would be a start.\" Ash said. His face wasn't as red though. He'd get over it. \n\n\u2014\u2014- Boy comes clean \u2014\u2014\n\nAsh was reading again in the morning and he wriggled away from me as I tried to cuddle. \n\n\"Hey!\" I protested. He put the book down slowly and took a deep breath. \n\n\"We need to talk.\" He said slowly. I bit my lip as I sat up. \n\n\"Ok.\" Ash reached out and stroked my shoulder. \n\n\"Ok.\" He said. \"Ok, look Dust. Here's what I'm worried about. You're a dom guy, and so am I, and that is what it is, we both like it that way or I would have said something earlier. But I'm worried, now that we're switching, that you're not going to be fair on me. It's... I mean it's kind of hot that you made me bottom last night, and I do like it, but I'm scared that will keep happening, and you'll never let me top.... and that's not fair.\" He glanced at me. \n\n\"Oh fuck.\" I said. \"I got carried away. I'm so sorry.\" \n\n\"Don't be sorry about last night. Just... If we're switching we have to switch ok? If you want a soft little bottom that's not me.\" \n\n\"I know.\" I reached for his hand. \"I don't want anyone else. I want you.\" Ash gritted his teeth. \n\n\"Ok.\" He said. \n\n\"What is it?\"\n\n\"It's just...\" He sighed. \"You know how shit it is for guys like me?\" He looked up at me. \"It's always shit. Guys give me shit about my race and will message me on Grindr just to call me a chink, or even worse they want me to be a hairless Asian twink fetish for them. They want a sub they can throw around who wears panties.... and it's not fair and it's not who I am.\" I gripped his hand tight. \n\n\"I know that's not who you are.\" I said. \"And... ok...\" I started to blush. \"Um. Maybe I have a type... but that's not just...\" I winced. \"It's because you skate, and because you game, and because I like long hair and scruffy faces. It's because you're funny and cool. You're not a fetish, I promise. I love you. And... you really don't need to worry about switching. If I've learned anything fooling around with you it's that if it comes to it I'll be happy being your slutty power bottom.\" Ash raised his eyebrow.\n\n\"Really?\"\n\n\"Yeah, dude.\" I grinned. \"I love it.\" He laughed and relaxed. \n\n\"I like it too.\" He said. \"We're definitely both switching.\" \n\n\"Good.\" I said. Ash raised his eyebrows as he looked at me. \n\n\"Love huh?\" I blushed. Well. That had slipped out I guess. \n\n\"I... yeah. I love you.\" I said slowly. I looked up at him cautiously. \"Thanks for... talking to me.\" I said quickly. \"You know you always can right?\" He squeezed my hand. \n\n\"Of course.\" He said. \"No secrets.\" He leant back on the bed and motioned for me to lie down with him. \"And I guess... on that note... I love you too, Dust. I really love you.\" I sighed with relief as I fell into him and he cradled me. I looked up at him. \n\n\"I love you so much Ash.\" He pressed his lips to my forehead. \n\n\"I love you more.\" He whispered. \n\n\"Impossible.\" \n\nWe grinned and I settled into his chest as we debated breakfast. \n\nNo secrets though huh? \n\nDusty, you have to tell him. \n\n\u2014\u2014-\n\nWe were hanging at mine before a double date with Jared and Nicky and I got up to grab us more beer. When I came back he was sitting stiff, his arms folded. I nestled next to him and he flinched. \n\n\"Woah.\" I said. \"Uh, what was that?\" Ash sighed. He glanced at me. \n\n\"Well. Um. First- I'm so sorry for invading your privacy- I shouldn't have looked- but your phone just lit up and I...\" He shook his head wildly as he handed it to me. \"And second- you lying, cheating whore!\" I blinked as I looked down at my phone. Oh. \n\nHey stud. Flatmates are out and I know how much you love being my on call daddy...\n\nCallum. \n\nWhich it said very clearly. I glanced at Ash. He was shaking with anger and glaring at me. \n\n\"Oh Ash..\"\n\n\"Don't oh Ash me!!!\" He snapped. \"You said you weren't seeing him!\"\n\n\"I'm not, I promise! I mean, I saw him ok? Once! It wasn't anything serious!\"\n\n\"Uh-huh?\"\n\n\"This is the first time he's texted since then! Obviously I wouldn't go you fucking idiot!\"\n\n\"Why would he text though? Doesn't he know you're not single?!\" Ash looked like he was about to hit me and I sighed. \n\n\"Obviously not!!!\" I said. \"I swear Ash...\"\n\n\"Well why didn't you tell him about me?!\" Ash folded his arms. I raised my eyebrows at him. \n\n\"You're right.\" I said sarcastically. \"Let's both go through all our old hookups right now and tell them not to text because we're in love with each other.\" Ash singled dramatically and stared straight ahead. \n\n\"Ok. You're right. That's dumb.\" \n\n\"Ashley... I promise I'm telling the truth.\" I sat next to him and reached for his hand which he reluctantly slipped into mine. \n\n\"Call him.\" He said quietly. \n\n\"What?\" \n\n\"Call him.\" He insisted. \"On speaker.\" I sighed. \n\n\"Fine.\" \n\nI called him and put the phone on Ash's knee. \n\n\"Well hi.\" Callum picked up. \"You coming over?\"\n\n\"No.\" I said. \n\n\"Aw. Tease.\"\n\n\"I called to let you know I'm seeing someone.\" I said. \n\n\"Oh!\" Callum said. \"Sorry dude. I'll lose your number.\" \n\n\"Yeah. Thanks Cal.\" I looked at Ash to see if that was enough. He screwed up his face. \n\n\"How many times?\" He said into the phone. \n\n\"Huh?\" Callum said. I rolled my eyes, hoping Ash didn't see me do that. \n\n\"That's him.\" I said. \"You ah you surprised me with that text and we ah...\"\n\n\"Oh!\" I could hear him smiling. \"Well, dude, hi, And just the once.\"\n\n\"When?\" Ash asked. \n\n\"Like ... seven weeks ago? He was just out of surgery.\" Ash sighed with relief and sat back on the couch. He started to laugh as he looked at me. \n\n\"Just out of surgery? You damn whore.\" I laughed at his expression. \n\n\"Are we good?\" I asked. Ash squeezed my hand. \n\n\"Callum right?\" He said into the phone, picking it up and taking it off speaker. \"We met actually.\" He laughed at whatever Callum said. \"Ashley Wang. Shattered thumb. Yeah that's right. I know. I know, we're adorable.\" He laughed. \"Alright. Sorry to cock block you bro. Yeah you too. Alright man, see ya.\" He hung up and passed my phone to me. \"Nice guy.\" He said. I laughed and ruffled his hair. He leant into me and bit his lip. \"Sorry Dust. You gotta admit that was a red flag.\" I squeezed him tight. \n\n\"Totally.\" I said. \n\nWe held each other for a minute as my brain ticked over. Well. This was it. If I didn't, now I never would. I had to rip the bandaid off. \n\n\"Hey...\" I said slowly. \"I actually have another pretty giant red flag I should probably mention.\" Ash glanced at me. \n\n\"Oh?\" I nodded and pulled him up. \n\nWe wandered to the kitchen and I pulled open the pantry door. I looked at him as he looked at all the photos and the newspaper clippings. I bit my lip and pointed to one of us. \n\n\"So um. That's Drew.\" I said. Ash looked at me and his eyes softened. He reached for my hand. \"We're kind of a package deal.\" I said quietly. I squeezed his hand. \"I mentioned I was in therapy- and well. This is why.\" I slowly pulled the funeral program off the fridge and handed it to him. \"I've been a bit of a mess.\" I admitted. \"But I'm getting better.\" I sighed. \"I'm real sorry Ash. I'll always love him.\" Ash nodded and I cleared my throat. \"And I love you too. But... I totally understand if it's a bit much, sharing me with a dead guy.\" Ash choked, not sure if it was ok to laugh, and I squeezed his hand as I smiled. \n\n\"Well.\" Ash said slowly. \"I mean I think I just proved I'm a jealous cunt.... but I think I'm ok with that.\" He put his arm around me. \"I love you too Dust. If he's half the man you are I think I can adjust to sharing.\" I leant my head on Ash. \n\n\"He was twice the man I'll ever be.\" I kissed Ash's head and fell into his embrace. Ash held me tight. \n\n\"Then I'm honoured.\" He whispered. \n\n\u2014\u2014\n\nI led him up the hill and we paused by the post. I sighed and clasped Ash's hand. He squeezed it back, even though I was sweaty and gross. I gestured to the post. \n\n\"Hey dipshit.\" I cleared my throat. Oh man. I really thought I could do this. I felt my eyes get all wet and I sniffed. \"This is Ash. I uh. I think you'll like him.\" I choked on the last word as my eyes got blurry. Ash wrapped his arm around me as I stood still, stubbornly trying to keep my eyes focussed ahead. \n\n\"Hey.\" Ash said quietly. \"Nice to meet you Drew.\" \n\nIt was too hard. I took a deep breath and he could hear the shudder as I inhaled. Ash pulled us to sit down and I lay my head on his shoulder, silently letting the tears fall. \n\n\"You got a real nice man Drew.\" Ash said, stroking my hair. \"I'm trying to take good care of him for you.\" \n\nAnd we sat in silence. \n\n\u2014\u2014-\n\nIn memory of Michael- I hope the fact that I can't write a story without copious amounts of anal sex is taken in the spirit it was intended. Hope you laughed, hope you cried, home you came. \n\n\u2014 Nik\n\n \n"
    ],
    "authorname": "DrHenderson",
    "tags": [
        "gay romance",
        "romance",
        "top to bottom",
        "anal",
        "blow job",
        "gay love",
        "homoerotica",
        "switches",
        "vers",
        "gay sex"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/sk8r-boi"
}