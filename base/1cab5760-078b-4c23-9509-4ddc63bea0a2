{
    "title": "Money Well Spent",
    "pages": [
        "Chapter 1\n\nI smiled as I heard her complaining. She had been accosted by a homeless man, wanting a few dollars for bus fare, and she felt so bad she had given him a five, only to see him go into a Seven Eleven and buy a pack of cigarettes. He came out tapping the pack, looked up, saw her, gave a sheepish grin, and walked down the street.\n\n\"Well, damn, Jen, what did you expect?\" I asked, tired of her telling the story for the fifth time. \"These guys are hustlers, mostly veterans of years of street living. They know how to work people, especially young, gullible women. Most times, anything you give them goes up in smoke, in their arm, or into a bottle. You really think you're helping?\"\n\nShe gave me that stubborn look I'd come to know. \"Yes, I think I'm helping. I have to believe that there's good in people. If I didn't, my world would be a little too grim.\"\n\n\"Like mine, you mean? I'm older than you, honey, seen more of the worst side of life than I hope you ever do in your lifetime. One thing I've learned is that people will sink to the lowest level very easily. Anything could trigger it. PTSD(I had a little knowledge of that), divorce, death of a loved one, bad accident, loss of employment, any traumatic event, the list is pretty long. You want to help these people? Give them directions to the nearest shelter or soup kitchen. If they're vets, send them to the closest VA center. The ones that actually want help will take you up on it, the ones that don't , well they just don't.\"\n\nJen was a recent college graduate, working at the entry level at our station, the lowest of the low. She was twenty-three, fresh faced, still viewing the world through innocent lenses. Middle class background, from a loving home, parents still together, with a lot of brothers and sisters. She wanted to make it in the broadcast world, become a star on national television. I didn't want to be the one to burst her bubble, but it took a lot of very hard work and more than a little luck to rise to the top, and a pragmatism she didn't have. The ones I had worked with, and there had been more than a few, were cast iron bitches who would cut the throat of anyone they viewed as a threat or obstacle on their way to the top. There were a few exceptions, and those didn't usually last long.\n\nMe? I was a cameraman/producer. My training came from my Uncle. I was part of the green machine for six years, doing two tours in Iraq and one in Afghanistan. I wasn't a rear echelon soldier, my job was to go out into the field, film everything as it happened, for training purposes and to cover their ass. It took a long time to learn to go into combat with a camera instead of a rifle, and I got a reputation of hanging in until the last round was fired. \n\nThe group I was with got into a pretty hot firefight three months before I was to rotate out of Iraq. It was a clever ambush, we were outgunned and outnumbered and it was really iffy for awhile. I filmed until it got too hot, then picked up an M4. I was completely out of rounds by the time help arrived, and was hand to hand with a pretty determined enemy. He shot me, not a major wound, before pulling his knife. A tactical mistake, his AK actually had a bayonet. He did manage to cut me long and deep, three times from my chest to just above my groin, before I clubbed him to death with the butt of my weapon. I refused to leave the field until I retrieved my camera. I got a purple heart, a bronze star, a trip to Ramstein for treatment, and was shipped home for a year.\n\nThen they sent me to Afghanistan, with a plum assignment. I was attached to a Colonel, to film progress being made rebuilding schools and hospitals. My commander was a pretty no nonsense type a guy, and when he found that for every dollar in aid our government gave them for these projects, only about twenty cents actually went to building and repair, he was pretty pissed. The rest was taken as fees by the government and local tribal leaders. When he filed a report, the powers that be in the country ordered him to cease and desist.\n\nThe Colonel was actually retired but they called him back for this project. One night we found ourselves alone, and he casually asked if I still had friends among the network people I had worked with on occasion, someone who could be depended on to hold a confidence. I did, and soon one of the field producers bought some papers from a local, and blew the whistle on the corruption prevalent in the new regime. Popular theory was the local had stolen it while we were in transit from one village to another. Of course everyone knew what happened, but they couldn't prove anything. The did send the Colonel back into retirement, publically praising him for discovering the corruption, but not before we were ambushed. We were supposed to be well behind the combat line. It was blamed on the Taliban, but I recognized some of the bodies as workers for the corrupt contractor that lost his business. I got a couple more tin pieces to embellish my tunic, as did our driver, a woman who had never seen combat but was incredibly cool under duress, and a wickedly accurate shot. Between us we got everyone out of the vehicles and treated the wounded as best we could. The colonel was a tough old bird, firing his sidearm and cursing our attackers as I treated his leg. He got a limp for the rest of his life, and a triumphant return when he got stateside.\n\nI was rotated home and spent the rest of my time editing footage from the fronts. Some pieces were released to the public, other footage used for training and analysis. They didn't try very hard to get me to reenlist, and I was hired by a major network the day after I mustered out.\n\nIt paid well, and they sent me all over the world for another three years, usually war torn countries where the dangers were very real. I got shot in some hellhole African country, and when I recovered I told my bosses my war days were behind me. They grumbled, but sent me home. I settled here, at a station that didn't serve a large market. The pay wasn't the best, but the atmosphere appealed to me. And when it came down to it, I was pretty good at getting everything I could out of any assignment, and the piece often went in directions the station never saw coming. I even won two regional Emmys, which led to more offers from the networks. Not a chance.\n\nMy lifestyle didn't allow me much of a love life, so at thirty one I was still single. I dated, had sex pretty often, but found no one that held my attention for more than a month. I was beginning to think bachelorhood would be permanent.\n\nJen had that attractive mixed race thing going. Her father was half white and half Korean and her mother was Hispanic. The races mixed really well, she had flawless light brown skin, a riot of jet black curls that stopped just above her shoulders, and almost almond shaped eyes. She could shake her head and it would take almost a minute before her curls stopped quaking. Everybody from the interns to the evening anchor took a run at her, and she turned them down to a man. And in a couple of cases, to a woman. I was the only one who didn't pursue her, so naturally she wanted to know why.\n\n\"You're attractive beyond words, Jen, but you're twenty-three and on your way up, if you work hard and get lucky. I'm thirty-one, and exactly where I want to be right now. It would be cruel for us to get together, then have you move up or find someone who knocks you off your feet. Best we stay friends.\"\n\nChapter 2\n\nI worked a lot of weekends because I was single and didn't mind, letting the married guys be home with their families. Jen worked mostly weekends, stuck in what I called the \"Weekend Ghetto\". I once pointed out to the station manager that the entire Saturday lineup was all female and completely minorities. He nearly had a heart attack, thinking of the possible lawsuits, and scrambled to get white males in for Sunday. After he chewed the weekend producer a new anal orifice, a better balance was achieved, and Jen got to do a few things during the week. \n\nIf there was any hint of possible confrontation, I was the automatic producer/cameraman of choice, especially if the reporter was female, because of my military background and physical size. There had been a few incidents in the past, once during a protest sparked by an interracial shooting that turned into a small riot, another at a demostration over illegal immigration, and the most intense came while we did a field interview with a group of vets who were having trouble receiving benefits in a timely manner.\n\nA bunch of them were suffering from PTSD, and were already dancing on the edge. One guy lost it, and got into Jen's face. I stepped from behind the tripod and got between them. \"Chill, brother. How much help you think you'd get in jail? She has no idea what you went through, and believe it or not, we're trying to help.\"\n\nMy size and the way I held myself seemed to calm him. \"You were there?\"\n\nI sighed. \"Yeah, I was there. Iraq and Afghanistan. Sucked both times.\"\n\nThe man lost it, and fell sobbing into my arms. \"Sorry, man. Ma'am, I didn't meant to scare you. I lost my job because of my PTSD. We couldn't afford the mortgage, and lost the house. My wife left, took my kid, because she was afraid to be around me. Sadly, it was the right thing for her to do. I'm living on the street now, got nowhere else to go.\"\n\nAnother of the protestors snorted. \"Suck it up, you pussy. He can say anything. He don't know shit.\"\n\nI kind of zoned out. The guy I was holding stepped back and the other protestor flinched when he saw my face. I had a nice button up shirt and I yanked it apart, the buttons flying everywhere, the three scars evident on my chest and stomach. \"I was there, asshole, got the scars and the ribbons to prove it. Now stand down and let us try to help you.\"\n\n\"How?\"\n\nThat stopped me. How, indeed. Jen stepped in. \"By telling everyone your story. How you're suffering while your country neglects you. I admit it's not much, but it's a start.\"\n\nBy now I had a full head of steam. \"She's right. There's not much we can do. But we can talk, keep it to the forefront.\"\n\nI paused, thinking. \"The whole thing disgusts me. We let politicians give porkbarell deals to defense contractors, pour billions into the countires we tried to defend, knowing as it happened very little would go to help the people, the rest going straight into the pockets of every crooked politician and contractor involved. Hell, our government does things like give hundreds of millions to Brazillian cotton farmers just so they can compete with us in world markets, and give the VA small change. Men and women who served suffer and die every day because our politicians won't get off their ass and do the right thing.\n\nI noticed then that Jen was behind the camera. They all had a little training so they could do live remotes without having to tie up anyone else, so she knew what to do. I looked straight into the lens. \n\n\"Mr. President, members of Congress, what the hell is wrong with you? Scenes like this play out every day all across the country and you sit on your asses. How many of your sons and daughters would you let suffer before you stepped up? Breaking News, they're all your sons and daughters! You guys need to fix this, you hear me? You need to fix it right now, today. Stop worrying about which golf course you're going to shut down to play a round or two, the five thousand dollar a plate dinners, or where you're vacationing on a defense contractor's dime, AND DO YOUR DAMN JOB!\" \n\nI knew this would never see the airways, but damn, did it fell good to say it!\n\nChapter 3\n\nI was wrong. You get the inexperienced on the weekends, management figuring if they screwed up it would be less noticeable and more easily fixed. The guy at the station was so shocked he just let it stream, so the whole thing hit the airwaves, live. What was supposed to be a three minute segment turned into a twelve minute manifesto.\n\nJen and I knew nothing of this, and Jen insisted she get a hug from every one of the protestors. Many were crying when they did it, thanking us for our effort. I filmed the whole thing, thinking she might want it for a keepsake. I got my share of hugs and handshakes, as well as heartfelt thanks. I just wished what I had done would help.\n\nAs soon as we packed up Jen dragged me into a shop and bought me a new tee shirt. She was really quiet when she looked at my scars. Always the reporter, she asked questions on the trip back to the station.\n\n\"So, you're a vet? How come no one knew?\"\n\n\"I don't like to talk about it much. Too many painful memories. You can read all you want about war, but until you're in that situation, people trying to kill you, friends dying in front of you or in your arms, getting shot yourself, you have no clue. I got tired of trying to explain it, and just stopped talking about it.\"\n\n\"But you were a cameraman! Are you saying you carried a camera instead of a gun into combat situations?\"\n\nI shrugged. \"It was my job. And I wasn't exactly naked, I had my sidearm, and if it got really hairy there was always a rifle around I could pick up. Can we stop talking about it now?\"\n\nShe looked at me with tears in her eyes, nodded, and held my hand the rest of the way back to the station. I let her. We walked into the station to clapping and cheers. I wondered what was up until the weekend manager shook my hand. \"Guess you guys told them, huh?\"\n\nIt hit me then they had watched the whole thing. \"Thanks. Too bad it will never see the light of day.\"\n\n\"But it did! Jason was so mesmerized he let it stream, and I didn't try to stop him! Of course, we'll probably be unemployed Monday, but to me, it was worth it.\" He loosened his tie, unbottoned his shirt and pulled a sleeve down, and showed his tattoo. Rangers. I always felt like he was military, the way he walked, the way he reacted to situations, were trained responses you could only get one way. \"Three tours,\" he said, buttoning his shirt.\n\nI didn't need to show him mine. He'd already seen the scars. A thought hit me. \"Try to keep Jen out of it. She had no idea about what was going to happen.\"\n\nHe assured me he would try, but could make no promises\n\nNone of us could anticipate what happened. CBS, our affliate, got wind of the segment and featured it on their show Sunday Morning the next week. By Monday every network and most cable news stations were airing it, and all had links to websites where they could view the whole thing, down to Jen's hugs. Youtube played it, and it got five million views in three months.\n\nSurprisingly, there were a lot of vets at the station, and they all rallied behind us. We even did a PSA together, showing us in uniform and how we looked now, pleading for the government to help speed VA services up. All the other local stations ran the same PSA with their own people, and soon stations nationwide ran the same message. The last picture was of me, in full dress uniform, the service ribbons and medals on full display. Two purple hearts, a bronze star, and a silver star with oak leaves. All from actions I wouldn't discuss. The other veterans told Jen what they meant. She asked me later if I was a hero.\n\n\"No. I was just a scared kid doing what I thought was necessary to get us all out of bad situations. I honestly don't remember a lot of it, and never really understood the fuss.\" \n\nUpper management chewed the whole weekend crew out, but did nothing else. The publicity we were generating shot us to the number one spot locally for the first time in years. They were looking for ways to hold on, and one of the first things they did was make Jen and I a permanent team.\n\nOf course, a lot of our work was following up on the story, so we interviewed VA officials, local politicians, our federal representatives. We even requested an interview with the President, but that went nowhere fast. It was an election year, and they all treated us like we were radioactive. I don't know if it was my influence, or if Jen was maturing, but she didn't hesitate to ask the hard questions. We interviewed a local Congressman, and after the standard platitudes and cliches, she hit him with the hard one.\n\n\"I'd like to request an interview six months from now, so we can review progress made and discuss what you have done personally to make things change. I'm sure your constituents would love to hear how hard you've worked for them.\"\n\nThe man turned bright red, stuttering, before he composed himself and told her to call his office to set up a time. Jen shrugged.\n\n\"Fine. But if we don't hear from you, if you don't give us an interview, we'll do a 'report card' segment on the sidewalk in front of your office and review you actions and progress. I'm sure your supporters will be very interested.\"\n\nHe called the station, raising hell, saying he would give interviews, just never with us again. I would have loved to have seen his face when the manager replied. \"You're choice, Jack. But everyone else she's interviewed has already agreed, and if you don't, Jen and Dean will do a remote from your office steps like they said, laying out everything you have or haven't done. We'll even give you airtime for a rebuttal. Think about it.\"\n\nChapter 4\n\nBecause we were together so much we learned a lot more about each other. I was an only child, and my parents were killed in a car accident when I was on my second tour. I had one grandmother left. Jen came from a large family, five siblings, three sisters and two brothers. She was the second oldest, and her two youngest sisters were in middle school. Family was important to her, and she didn't get to visit as much as she wanted to. When I asked why she said she couldn't afford it.\n\nHer contract was almost up by then. I talked to the powers that be, telling them I expected to see her pay go up substantially. They balked until I reminded them my contract was running out as well, and we were being courted by stations all over the country, together and seperately. \"We make a good team, so if she goes, so do I. Think about it.\" \n\nJen was over the moon when they offered more money. I think I hurt her feelings when I laughed. \"Tell them no. Tell them you deserve at least what I make, maybe more. After all, you're the rising star. I'm just your sidekick. I haven't told you, but I've heard from people at other stations, here and across the country. They're interested in us as a package. Bring that up in conversation and see what management says.\"\n\nIn the end, she didn't get what I was making, but still got an almost thirty-five per cent raise. She was really happy, for about a week.\n\nWe were coming back from a piece on women's rights. She was quiet, withdrawn, and had been for several days. \"What's going on, Jen?\"\n\nShe roused herself, looking confused. \"What?\"\n\n\"You've been...off, for several days now. You've got something heavy weighing on you. Want to share? Maybe I can help.\"\n\nI knew she shared a large apartment with two friends, the sweet Lindsey and the insufferable Jasmine. I'd met both when Jen brought them in for a tour of the station, even got them seats for the midday talk show. She was dead on in her assessments, Lindsey was inpressed by everything while Jasmine seemed bored out of her mind. She only perked up when Jen was telling them what network anchors made.\n\n\"What do you make, Dean?\"\n\n\"Enough. What do you do, Jasmine?\"\n\n\"I'm the Personal Assistant to Mr. James Moody, CEO of Blanche Industries.\"\n\nShe said it with pride, like I was supposed to know who that was. I had no idea, and decided to ruffle her feathers a little. \"A Personal Assistant? Is that like a glorified secretary?\"\n\nShe flamed red, and Lindsey couldn't help herself, giggling at her reaction. \"I assure you, it's much more than that, and the pay is much better. Plus, I get to meet and socialize with very important people.\"",
        "Jasmine waited for me to make appropriate approving noises. \"Socialize? You don't have regular business hours? How much time do you put in a week, does it average out to a decent wage? I'm glad you like it. Sounds like an interesting life, though. Maybe Jen and I should do a piece on you, show how hard work and dedication sometimes pay off. I'm sure your boss would love the publicity.\"\n\nThe woman frowned. \"I don't think that's a good idea. Mr. Moody is a very private person.\" A CEO that doesn't like free publicity? Something smelled, and I dropped the whole conversation.\n\nBack to the present, and Jen was sniffling a little. \"Jasmine is moving out! Seems her boss wants her in a private apartment, so she can be available more quickly. He's even paying for it. Even with my raise, Linds and I can't afford to stay. She dropped the bomb three weeks before the lease runs out, and was gone the next day. We've been scrambling, but can't find anything decent. We've got two weeks before we're homeless.\"\n\nI felt bad for her. I'd never had to struggle for housing. I lived at home until I enlisted, then Uncle Sam housed me, and with the insurance money from my parents I could afford just about anything. I got out just as the economy was starting to rebound, so I decided to buy. I looked at several new homes, and thought about building, but I just couldn't find anything that suited me.\n\nFinding my home proved to be easier than I thought. Cutting through an area of town I'd never explored on the way to an assignment, I was impressed with the large lots and the stately old houses. One house, the \"For Sale\" sign looking slightly faded, caught my eye.\n\nThat's when I saw her. My house. Two stories, large lot, three bay detached garage. It had obviously been empty for quite a while, and the sign out front had a 'reduced' banner across the front. Four days later I met the realtor and she took me on a tour. Six bedrooms, three baths, updated kitchen, high ceilings, all original woodwork. 4200 square feet of faded elegance. She was almost a hundred years old, but had been well cared for and had been updated over the years. The garage was well maintained, and there was a two bedroom apartment up top, the servant's quarters at one time most likely. It could stand an update, but was useable. I let the realtor drone on until I made my decision.\n\n\"How much?\"\n\n\"Pardon?\"\n\n\"How much do the owners want?\"\n\n\"Well, they started out at 750, but with the ecomony they reduced it to six, a really good deal. It would be an excellent investment.\"\n\nI knew the woman looked at my age and appearance and thought she was wasting her time. Shocking her, I made an offer. I decide 500,000 would be my limit, so I started low.\n\n\"Tell the owners I'll give them 420 as is. And tell them I'll be paying cash, we don't need to do anymore paperwork.\"\n\nThe woman was obviously flustered. \"They won't accept that! It's almost half what it's worth!\"\n\nI shrugged. \"It's more than they have now. I did a little research. This place has been on the market for two years, and this is the first offer made. Talk to them, and get back to me.\"\n\nI figured she would get back with a counter offer, and you could have knocked me over with a feather when she called and told me they had accepted my offer. \"You're stealing this,\" she grumbled when we met at the lawyer's office.\n\n\"You mean I'm stealing a large chunk of your commision. Tell me, how many other homes have you sold lately with this kind of price tag?\"\n\nShe ccouldn't help but grin. \"None. This commision will go a long way towards our own dream house. I won't say it's been a pleasure, but it has been interesting. Congratulations, enjoy your new home.\"\n\nI spent another forty thousand fixing odds and ends. When the remodelers were done, I got a cleaning service to go over the whole house, even the apartment. The place gleamed when they were done, and I signed a deal for a quarterly visit. Uncle had taught me how to clean, and I only used four rooms., so it was enough.\n\nDeciding her name was Miss Agnes, when the weather changed and she groaned a little, I would talk to her. I know, a little crazy, but I lived alone, so it didn't matter. \"Buck up, old girl. You might be old, and be high maintenance, but you're beautiful, and worth every dime.\" I found some old pictures in the attic, and one woman stood out. Doing a little research, I found out she and her husband were the original owners, and the place was mostly built with her money. When I found out her name was Agnes, a chill went up my spine. I hung the picture in the hall, so she could watch over the place.\n\nI just grinned at Jen, and asked her if she'd like to meet Miss Agnes.\n\nChapter 5\n\nThey came out Saturday, and spent almost an hour wandering around the house and grounds. I showed them the apartment and asked if they thought they could stand living in the suburbs.\n\n\"How much?\"\n\nI grinned at Lindsey. \"How much are you paying now?\"\n\n\"Eight hundred apiece.\"\n\nIt must have been a really nice apartment. \"Well, we'll see what we can do. I'm thinking fifty a week, but there's a catch. I hope both of you can cook, because part of the deal is one homecooked meal from each of you per week, and I furnish the food. And you can each have a space in the garage, just don't bother the other bay. Deal?\"\n\nThey stared, they stuttered. \"Fifty isn't fair, Dean! We don't want to take...\"\n\n\"All right. You drive a hard bargain. Twenty-five then. And we'll sign a one year lease, just so you can be comfortable with the deal.\" Suddenly I had two hands full of crying women, and we stayed locked up for a long time, before they finally calmed down and let me go. They spent the rest of the day cleaning the apartment, borrowed my truck(and me) to move the furniture they wanted to keep. They were firmly in place before the weekend was out. I had one more condition they had to agree to before I gave them the keys.\n\n\"Do not tell anyone this is my house. I like privacy, and I don't care to have to discuss how I came to own such a big place. Understood?\" They agreed.\n\nIt was an adjustment. I took them on a tour of my house, and introduced them to Miss Agnes. \"She's watching, and she can be cranky. Best not upset her.\" They both looked at me funny, but after that, every time they came over, they greeted her, and told her goodbye when they left. I rarely went up into the attic, but one day I went to check on the heat ducts, and saw it. Her wedding album. I could swear it wasn't there the last time I was up. Agnes was a knockout when she was young. Before I knew it, I was talking.\n\n\"Gee Agnes, you were hot! I bet your husband was the envy of every male in town.\" I felt a soft sigh go through the attic. Wind, most likely. A box fell off a shelf. I picked it up and opened it. Love letters from each other while he served in WW1. A picture of him in his uniform. His medals. One of her with their first child. Her letters were lyrical, and downright erotic for the time. I grinned.\n\n\"Agnes, Agnes, I bet these warmed up the trenches he was in.\" The attic got a little warmer, and I remembered why I was up there, to check the ducts. I went to set the box down when I saw a smaller box in the bottom. I knew what it was as soon as I touched it.\n\n\"Oh no, Agnes, this is too personal.\" \n\nI couldn't help it though, and looked. A wedding set, her band, his band, and what could only be described as a rock for an engagement ring. They had to be worth a lot of money. I fingered the rings, remembering my research. They had been married for fifty-six years, and died within days of each other. Wishing I could find a love that enduring, I carefully placed the box back on the shelf. \n\nChapter 6\n\nTurns out Jen was a very good cook. \"Mom, Dad, six kids. I was the oldest girl, so I learned. It wasn't a gender thing, Mom made all of us learn, and we each had a specialty. Mine was fried chicken, pan gravy, mashed potatoes, green beans, and fresh biscuits. Allie made spaghetti and meatballs, Joe was a grillmaster. We all were proud of our dishes.\" Her fried chicken was really outstanding. We had it about every two weeks.\n\nLindsey was a blue eyed blond with a bubbly personality, a real piece of eye candy. They made quite a pair and quite a contrast at the same time. She couldn't cook as well as we thought. We suffered through three hot dog and hamburger meals before we started teaching her. Then she signed up for a cooking class featuring Mexican dishes, and our variety improved quite a bit.\n\nSo my home life improved dramatically. It was kind of interesting when we had dates over, they all had a hard time with our living arrangement, but after they learned they adjusted. If one had company, the other stayed absent. Jen even stayed in the house a few times to give Lindsey some privacy. We both consoled her when her relationships tanked. For some reason Jen never brought anyone home, although she did stay elsewhere every once in a while.\n\nSix months went by and we did a followup to our VA story. Our Congressman failed miserably, and denied an interview. We did our remote on his office steps, giving him a public F for his efforts. He did not win his re-elction bid. His replacement was from the other party, and a vet, so he jumped in, making it his personal cause, working both parties relentlessly. He made friends and he made enemies, but he got stuff done.\n\nWe did other stories, some fluff, some serious. Jen came up with a thing where we did the interviews together, tag teaming our subjects. Politicians and corporate types hated us, the average person loved us.\n\nWe started a side project, purely by accident, that changed the direction of our lives forever.\n\nWe'd done an Art Crawl, going from location to location doing clips. It had gotten dark, and the neighborhood we were in was right on the fringes of the event, a not so nice place to be after the sun went down. Jen decided to take a shortcut, to get back to the station earlier. She thought that because she was with me, she was bulletproof. It bothered me, it's one thing to intimidate a crooked salesman or corrupt politician, another to face down a junkie stoned out of his mind, or gang members on their home turf.\n\nA large man loomed out of the darkness, a street person by his looks. He didn't see me at first and accosted Jen. \"Hey lady, got a couple bucks for someone down and out?\"\n\nHe was using his size to intimidate, but Jen knew I was right behind her, and it made her brave. \"What's in it for me?\"\n\nThe man was obviously confused. \"Huh?\"\n\n\"I said what's in it for me. What do I get for my money?\"\n\nBy now he had seen me and was backing off. Jen was right on top of him. \"Tell you what, I've got a five here. It's yours if you sing me a song.\"\n\n\"Lady, I don't know any songs.\" \n\n\"Bullshit! Everybody has a song, one that means something to them. Sing me one verse and the money is yours.\"\n\nHe stood for a minute, thinking. Then, in a surprisingly strong baritone, he began singing.\n\n\"The itsy bitsy spider went up the waterspout.\n\nAlong came the rain and washed the spider out.\"\n\nHe sang it all, as tears started flowing down his cheeks. \"My mother used to sing that to me. I hadn't thought of her in years.\"\n\nJen was absolutely mesmerized. I turned my camera back on. \"I'll give you another twenty if you'll sing it again, and let me film it.\"\n\nHe went through it again, tears coming once more, choking up in spots. \"What's your name, brother?\" I asked as I handed him the money. \n\n\"Nobody uses their real name on the street,\" he said. Pulling on his shoulder length hair and long beard, grinning. \"Out here, I'm Shaggy. Thanks for the money.\" We watched as he walked into a burger joint. At least some of it didn't go to booze.\n\nShe was quiet on the way back to the station, even quieter on the ride home. Instead of going into her apartment, she followed me in and made us tea without asking. Once we had the Earl Grey on the coffee table, she started talking.\n\n\"My uncle was a street person. Everyone in the family was ashamed of him, and cut him out of their lives. All but Mom and Dad. They'd find him, bring him home, clean him up, give him some clothes, feed him a couple of good meals, then he would disappear again. They really tried to get him help, but he wouldn't accept it. We were in a cold snap, twenties during the day, almost zero at night. Mom had bought him a really thick coat and given it to him. We found out later he sold it for alcohol. They found him frozen to death in a cardboard box under an overpass. My folks had to pay for the funeral, no one else in the family wanted to help. Most didn't even come. I remembered him from when I was little, when he was a normal person, how he swung me around until I was dizzy and giggling. What a waste of life!\"\n\nShe was sobbing quietly, so I cuddled her, letting her soak my shirt. She got really quiet, and I realized she was asleep. I slid out, placing her gently on the couch. I was going to wake her up and send her home, but she looked so peaceful I left her, taking off her sneakers and covering her with a blanket, lifting her head gently to slide a pillow under her. Unable to stop myself, I kissed her cheek, amazed at how soft and warm her skin was. I ruffled her hair, whispering.\n\n\"Watch over her Miss Agnes. She's really special.\" I felt something brush my cheek, the air conditioner kicking on no doubt, and went to bed.\n\nChapter 7\n\nWe won a regional Emmy for our series on veterans. It was a big deal for the station, and we were ordered to attend. Jen was very excited, proud of our work. I didn't tell her, but I already had four, from my time with the network. They were in a box somewhere.\n\nI came home the night before the ceremony and found it full. Seems her parents and most of her siblings had decided to surprise her by coming up to celebrate her success. There were two girls, early teens by their looks, splashing around in the enormous above ground pool I had installed, and an older looking boy working with my gas grill. Something smelled great.\n\nThere was a very attractive Hispanic woman sitting at the kitchen table when I walked in, drinking coffee. A slender man sat across from her, his black hair edged with grey. I knew instantly who they were. Jen's parents, and looking at her mother, I realized Jen would still be a hottie as she aged. Her mother was in her late forties, still slender, still sexy, she looked like she might be in her late thirties. In no way did she look like she'd given birth to six children. She grinned when she saw me.\n\n\"Hi, you must be Dean. Jen insisted we wait to meet you, but well, we couldn't help ourselves. The girls had packed their suits for the motel pool, so they changed and jumped right in. I cuaght our son Joe drooling as he looked over your outdoor kitchen. Lindsey said it would be okay, so we bought some ribs, chicken, and steaks. They should be done in another hour or so.\"\n\nJen showed up just then looking scared to death. She had to stay late for a meeting, so she had driven herself that day. She pushed me into the living room before I could speak, babbling and apologizing. I held her for a minute. It always seemed to calm her down.\n\n\"Easy, Jen. Slow down. It's okay, really. Now, what do you need to tell me?\"\n\n\"It's not my fault! I didn't know they were coming! They just showed up, and Lindsey let them in, telling them to get comfortable. The girls were already in the pool and Joe was on the grill when she called. I couldn't tell them no. Please don't be mad.\"\n\n\"Calm down, honey. It'll be just fine. Now, why don't you get me introduced to everyone.\"\n\nShe went quiet instantly, a strange look on her face, It wasn't until I was almost asleep that night before I remembered I called her honey. I hope she wasn't angry.\n\nI met them all. Her oldest brother Roy, a year older than her. Her brother Joe, a junior in high school, and the twin girls, fourteen, Anne and Sandy. One of their siblings couldn't make the trip, but Mom(she insisted I call her that)showed me pictures and assured me I would meet her later. As the night wore on, I noticed Jen tended to cling to me, giving me little touches now and then. I looked at her and she mouthed \"later\" to me, so I let her keep it up. After a tremendous meal and a fun evening, we got everyone bedded down. They had intended to find a motel, but I shot that down pretty quick.\n\n\"Why would you do that? I have bedrooms that haven't been used since I bought the house. You're more than welcome to stay.\"\n\nWhen they all were down for the night, I expected Jen to leave, but that didn't happen. Around midnight I asked her if she didn't need to rest for our big night. She went about eight shades of red and confessed. \"Dean, I...um...I...\"\n\n\"I'm tired Jen. Spit it out.\"\n\nIt came out in a rush. \"I, uh, kind of told them that we were living together. I'm sorry, but it happened when Mom and Dad were getting on me for not finding anybody, and I told them I was already sharing your address. I just didn't tell them I was living in the apartment above your garage. They assumed we were together, so I let them. I had no idea they would just show up out of the blue.\"\n\n\"What does that have to do with sleeping? Tell them tomorrow, I'm sure they will understand.\"\n\n\"Please, Dean, Please. Let me stay the night, and pretend we're together until they leave. I'll give it a couple of weeks and then tell them we broke up.\"\n\n\"Where would you sleep?\"\n\n\"In your bed. I'll behave, I promise. Just one night, Dean. Please.\"\n\nShe collapsed into my chest sobbing. I couldn't help it, I was always a sucker for crying women. I rubbed her hair, patted her back. \"Stop crying, honey. Go to your place and get your sleepwear and a change of clothes. One night! And no hanky panky!\"\n\nShe stopped crying and giggled. \"Hanky panky? What grown man says hanky panky?\"\n\n\"This one,\" I growled, before swatting her butt lightly. \"Go get your stuff.\"\n\nShe shot out the door giggling again, rubbing her bottom. I took advantage of her absence and took a shower, putting on a tee and some lightweight sweat pants. She went straight into the bathroom when she came back, and I could hear her singing in the shower. She had never been in my bedroom or master bath, so she had never seen my custom shower. Six heads, including a fourteen inch rainshower head, all adjustable in power and pulse. I had drifted off by the time she came out, and she shook me awake. \"You're in the middle of the bed, honey. Move over. You want the right or the left?\"\n\nI slid sleepily to the left side, and she eased in, careful not to touch me. We were both worn out, so sleep came quickly. I woke up a couple hours later to find her half draped over me, her hair obscuring her face as it rested on my chest. She seemed really comfortable, so I ran my hand through her curls until I drifted back off. When we woke, she had spooned to me, and I had my arms wrapped around her, one hand on her soft(and bare)tummy the other tangled up in her hair. Seems I really have a thing for her hair. I had my morning erection, and she was pushing back in her sleep. It felt very, very good, so I lay there enjoying it. When she was awake enough to realize what she was doing, she let out a little cry and jumped out of bed.\n\nI didn't see what she was wearing last night, but I really appreciated it now. Sleep shorts that were so skimpy they almost qualified as panties, and a camisole held up by spaghetti straps that weren't really doing their job. One breast was bare almost to her nipple. She looked down, gave a little squeak, and pulled a short robe on, leaving quite a bit of leg for me to enjoy. It was funny to see her creamy skin glow from embarrassment.\n\n\"Morning, honey. Sleep well?\"\n\nBefore she could answer her mother knocked. \"Up, up, lovebirds. Time to face the day. Breakfast is ready, so hustle, before it disappears.\"",
        "Jen ran into the bathroom, dressing in shorts and a nice top, doing her hair. I changed in the bedroom, jeans and a comfortable tee, and she dragged me out, a death grip on my hand.\n\n\"Sleep well?\"\n\nI grinned at her mom. \"Not really. Princess here was firmly convince there was a pea under the mattress. She wiggled all night, keeping me up.\"\n\nHer father grinned, catching the innuendo. Jen seemed to have a permanent blush this morning. Lindsey had joined us, and she spun tales of how in love we were, while I held Jen's hand and gave her little public display of affections, even patting her bottom in front of her mother. I thought she might melt through the floor any minute.\n\nWhen afternoon came, everyone hit the pool. I have to say I enjoyed Jen and Lindsey in their cute little bikinis, and Mom really rocked the one piece she had. Everyone was in the pool but me and they noticed.\n\n\"Come in, Dean. It is your pool, after all.\" Her mother was grinning as she said it. \"Show us what Jen's been going on about these last few months.\"\n\nI looked daggers at Jen and she blushed, then tried to come to my aid. \"Leave him alone, Mom. He'll come in if he wants.\"\n\nThe twins joined in, wanting to see the 'hunk' that Jen was always bragging about. Finally I stood, and slid my tee off.\n\nConversation stopped. My main scar had healed, but would remain an ugly red the rest of my life. My two minor cuts and the bullet hole were just tiny white lines and a dot. Her father stood up and shook my hand, then slid his shorts up a little, showing two holes in his thigh that looked the same as mine. Bullet holes.\n\n\"I was in the first Iraq war, called up reserves, and forgot to duck. Nothing like you, though.\"\n\nI held his arm. \"Exactly like me, sir. You fought for your country and got wounded, same as me. Never downplay your service. Never.\"\n\nHe blushed and nodded. His wife and girls were looking at him like it was the first time they had ever seen him. Then we were both smothered by crying women. Him with his wife and young daughters, me with Lindsey and Jen.\n\nJen kept saying she was sorry, because she knew I didn't like people to see my scars. I kissed them both, telling them it was all right, and jumped into the pool, taking both with me. They shreiked, and her dad followed suit, pushing her mother, and soon everyone was in the pool, having a good time.\n\nThey ended up staying an extra day, so I had my little bed buddy for another night. Jen gave her a tour of 'our' bedroom, and I noticed things, little knickknacks and pictures, that hadn't been there before. When they saw the large shower, her little sisters begged to use it, so I got evicted from my bedroom while the girls, Jen, Lindsey, and Mom, stress tested my on demand water heater. I spent quality time with her Dad and brothers. We all had a few beers, except for the youngest, and talked about all sorts of things. Right in the middle, Dad asked me about our relationship.\n\n\"How old are you?\" I was thirty-one, Jen had turned twenty-four.\n\n\"You're not going to hurt my baby, are you Dean?\"\n\nI looked him in the eye and told the truth. \"I'd rather die than hurt her. She is really something special, and I'm not the only one who can see it. Jen could go far in this business, if she gets a few breaks and keeps a level head. On a personal level, being around her is like having a warm sunny day, after a week of cold rain. She has a natural ability to bring out the best in everyone, and make us all want to be worthy of being in her sphere.\"\n\nHe gazed at me for a minute before nodding. \"Good enough. I hold you to your word, Dean.\"\n\nWe didn't know it, but the women heard every word, and the kiss Jen gave me while her family watched had nothing to do with friendship. There was a defiant little smirk on her face when she pulled back.\n\nChapter 8\n\nAn odd thing about buying a property as is. You not only got the property, you owned everything that was left behind. I looked into the garage, of course, but it was full of what I thought was junk, so I left it alone for almost a year. Then I bought a motorcycle, and decided I was going to at least clean one bay so I could keep it out of the rain. It was after I had hauled four loads of trash away in my truck before things got interesting.\n\nIt was large, and covered with three layers of very old plastic, so old it split when I tried to remove it. Under the plastic was an antique sideboard, looking almost new. I regognized it instantly. My mother was a fanatic about antiques, and searched and bargained over the years until her dining room looked like it came right out of the roaring twenties. She had an oak table with two leaves big enough to seat twelve when fully extended, and twelve chairs to go with it. The china cabinet matched, sturdy oak with panes of glass so old they had a few wavy lines in them. All she needed for a complete set was the sideboard, and she was still trying to locate one when she died. They were sitting in my dining room now. This was the missing piece. \n\nWhen I tried to pull it out to better inspect it, it wouldn't budge. I opened the top drawer and found it full of silverwear, and I mean a full silver service. The bottom drawer held serving bowls, gravy boats, ladles, that sort of thing. The two doors held a complete service for eight, matching the bowls. A fine floral pattern, they had to be worth a fortune. I got a few boxes, padded them with blankets, and layered them in, moving them slowly into the dining room. The sideboard was still heavy, and I had to wait for the girls to get home from shopping to help me. It took both to carry one end.\n\nThey immediately took over, cleaning the sideboard carefully, until the finish matched the rest of the pieces. They they gently cleaned the service and polished the silver. They also looked everything up, and the whole package was worth over nine thousand. I had to threaten to evict them to keep them quiet.\n\nI got the bay cleaned out and got my motorcycle inside. Lindsey was almost quivering to help empty the other two bays, and Jen matched her enthusiasm. Jen and I had a rare Saturday off coming up, so we set that as a target. I woke to the smell of bacon and looked at the clock. 5:30! It was still dark outside. I stumbled into the kitchen to see both girls wearing old jeans, ratty tee shirts, their hair covered with bandanas. Both had work gloves hanging out of a back pocket.\n\nI got good morning hugs and they practically rammed the food down my throat, they were in that much of a hurry. I opened the door to the second bay and gave them a lecture. \"We are not going to hurry! Go gently. It might be nothing but junk. If there is something valuable in here, we don't want to ruin it by being impatient. Understand?\" They nodded and promised.\n\nWe may as well have used a bulldozer for the first two thirds. Nothing but junk. Then it got interesting. Lindsey found a small vanity, marble topped, with matching chair, under a tarp. We slid them to the door gently, to get a better look. It was in very good condition, the mirror still intact. It had two drawers and I let them each open one. Lindsey went first, gently pulling it out. Inside was a matched set of brushes and combs, silver with ivory inlays, that looked brand new. The handles were embossed with initials, A J M, in flowery script. I knew instantly they belonged to Agnes. Her full name was Agnes Jane Merchant. I knew from one of their letters that her husband had sent them to her while he was still in service, and that they were Italian. There was also twelve assorted hat pins, tipped in ivory and stones. I knew we would be looking them up soon.\n\nWhen we fully exhausted that drawer, Jen eased hers open. She pulled out a small jewelry box, frustrated because it was locked. I shined my light into the drawer, and there lay the key. I gave it to Jen, and her hands shook so bad it took four tries before she got it open. Both girls stared, wide eyed and speechless. A string of pearls. An elaborate broach, made of what I later discovered to be garnet. Pearl, ruby, and emerald rings, a garnet ring to march the broach, a diamond pendant on a fine gold chain, another necklace made of garnet beads. That was just what was in the top drawer.\n\nShe slid the second open, and both gasped. Two matching bracelets, gold and encrusted with small diamonds in twin rows. Tennis bracelets, I think they're called. They were very substantial and had to be worth a fortune. There were a few more slender bracelets, but if you had asked us a week later, we couldn't have told you what they were. I watched them, the hunger plain in their eyes. \"Stay right here,\" I ordered, walking into the house and heading for the attic.\n\nI kind of felt foolish, but I knew in my heart Agnes could hear me. \"Agnes, I want to ask a favor. Would it offend you if I gave the girls a bracelet apiece? I know they would treasure them. They're good girls, Agnes. They work hard, don't complain, try to better themselves, are kind and loving to their friends and family. Both came from modest backgrounds, and could truly appreciate how special they are. Do I have your blessing?\"\n\nI stood for a second, and watched, stunned, as a couple of photos floated down from the rafters. The first was Agnes and her younger sister Elizabeth, standing in front of a Christmas tree, holding up their wrists, so you could see the bracelets. The other wasn't actually a photo, it was a receipt, noting the cost for the engraving inside the rings. \"Sisters Forever\". I realized two things then, that Agnes could really hear me and was watching over the house, and that she approved of my idea.\n\nI walked back out to the garage. \"Girls, I just talked it over with Agnes, and she says the bracelets belong to you. All she asks is that you read the inscriptions inside and honor them, and that you treasure them, and only way you ever turn them loose is when you give them to your firstborn daughters. Will you agree to her terms?\"\n\nFirst they were silent. When they tried to talk, all that came out were sobs. They had just calmed down when I showed them the inscriptions, and then they started again. No more work got done that day.\n\nSunday morning they had calmed down and surprised me, trying to give them back. \"Don't you like them?\" \n\n\"We love them, Dean. That's not the point. The point is we looked them up last night, and got a pretty accurate guess on what they would cost if we had to buy them. Never in our lifetime could we ever own something like that unless we married really, really well. You need to save these, pass on to your family.\" Linds was sniffling, holding out the bracelet like it weighed a ton. I looked at Jen.\n\n\"You feel the same?\" She nodded, unable to talk.\n\n\"Well then, I guess that's settled then. You're right, the bracelets should stay in the family. That's presisely why Miss Agnes and I decided you should have them. I don't have a family, my only living relative is a grandmother that lives in another state. I love the old girl, but if I gave her something like this fights would break out as soon as she passed, and I couldn't deal with that. Since you obviously don't understand, I guess I need to get crayons and draw you a picture. First though, I have to talk to Miss Agnes.\"\n\nThey followed me into the hall and up to the portrait. I didn't recall her ever looking so haughty. \"Miss Agnes, I'm afraid I have some bad news. The gift you gave in a loving gesture is being returned. I guess they really didn't deserve them after all.\" I paused, for dramatic effect, while the girls hung on every word. I pretended to listen, and sighed. \"You're right, but then you always are. If you insist. I'll try one more time.\"\n\nI walked into the living room, and sat on the couch. They seemed afraid as they gingerly sat beside me. \"Girls, It seems you are a disappointment to Miss Agnes. She seemes to think you were a lot smarter than you obviously are. The reason I gave you those bracelets, you silly females, is because I thought you were my family. You two are the only thing that keep me centered. I can be down, or reliving a particularly bad memory, and one of you will hug me, or hold my hand, and I'm instantly better. You know without a doubt that I'm there for you every time you need me. I thought we had an emotional connection, but I guess refusing our gift proves otherwise. Miss Agnes is disappointed because she never got to spoil a daughter, she had five boys. She likes you here, almost as much as I do. She was going to treat you like the daughters she never had, and you insult her. It hurt her very badly.\"\n\nThey were both wailing now, wrapping me up while they shook. Of course I petted them, calmed them down. Once I did, I stood up and held out my hand. \"Give me the bracelets. I'll probably donate them to some worthy cause, maybe whoever buys them will treat them with the love they deserve. Maybe some man will buy it for his daughters, to show how much he loves them, or give them to his wife, in appreciation for the decades of loyalty and support. Who knows? And the money the charity will get will go a long way towards helping them turn lives around, redeeming humans deserving of love and respect. Give.\"\n\nThe last was more of a demand than a request. They had steadily been drawing back, clutching the wrist the bracelets sat on, protectively. Lindsey finally worked up enough nerve to speak. \"Is what you said true? Do you love us like family?\"\n\n\"All the way down to the soles of your cute little feet, baby sister.\"\n\nShe fainted. Never saw that coming. I found out later she was from a broken home, a latch key kid that practically raised herself. There wasn't a lot of love going around, her mother was always working and was emotionally repressed, so there were few hugs or words of endearment. It made Linds wary of everyone, and she had a hard time trusting people. She told me later that there was only two people in the world that she ever told she loved them, me and Jen.\n\nJen tackled me after we got Lidsey revived, kissing me everywhere her lips made contact. She stood back and grinned. \"I'm not your little sister. I've got something better in mind. And just to clarify, these bracelets are now family heirlooms, and will stay in the family as long as we live, at the very least. if I ever get a chance to pass this on to a daughter, I'm going to tell her a man I love very much, and who loved me back, gave it to me in trust, waiting for her to arrive.\"\n\n\"Me too,\" chimed in Lindsey. \"Now, as your first official act of big brotherdom, I think you should take us out for breakfast.\"\n\nI couldn't help laughing. Neither girl was over 105 pounds, but they ate like Olympic cyclists. They should have been wider than they were tall by now, but if anything, they looked thinner. If I looked at a piece of chocolate cake, I gained five pounds. Life isn't fair.\n\n\"All right, but before we go, you need to apologize to Miss Agnes. You hurt her feelings pretty bad when you refused her gifts. Explain to her you were just being silly girls, and how much you love the bracelets, and how honored you are to wear them. I'll go get dressed while you do. And that apology better be sincere, or she'll know.\"\n\nThey looked at me for a minute before going into the hall. I could hear them talking as I slipped on cargo shorts and a fresh shirt. When I came out, there was a lot of whispering going on. Excited whispering. They jumped when I spoke. \"Ready, girls? What was all that whispering about?\"\n\nThey shot out the door, yelling bye to Miss Agnes. I looked at her and grinned. \"Guess we got our point across, old girl. See you later. We're finishing the second bay, and might start on the third if we have time. Wonder what treasures you've hidden for us?\"\n\nI swear to God, she looked like she was smirking when I left.\n\n\"What was all the whispering about?\" \n\n\"Promise not to laugh at us?\"\n\n\"No, but I promise to take you seriously.\"\n\nThere was a little pause. \"Tell us the truth. Do you believe Miss Agnes can see us, that she understands who we are and why we're living there?\"\n\nOf course, I answered a question with a question, something I've always found annoying. \"Do you think she is?\"\n\nJen spoke out, her voice firm. \"I believe in her. She looked so severe this morning, but after what you told us, we did go out and apologize to her. We were sincere, especially Linds. We both felt it. Something brushed both our cheeks, and it felt like a kiss. And when we looked up again, SHE WAS SMILING!\"\n\nLindsey jumped in. \"Jen's right. We both felt it. And our bracelets got warm, in a gentle way, for lack of better words. I think your house is haunted.\"\n\n'Well if it is, it's probably by the nicest ghost I've ever heard of. However, I checked up on her, and according to family documents and letters, she could be very unforgiving if she felt wronged. Best stay on her good side. Now, let's eat.\"\n\nWe went into the nice buffet and the girls gorged. I'm ashamed to say I probably ate too much as well. The girls had had a very emotional twenty-four hours, so it was only natural that the force of gravity pulled them down onto the large sofa, until they were snuggled together, asleep. Lindsey was even snoring a little. I sat in the big overstuffed rocker I favored, and watched them sleep for a bit. I was restless, and something made me get up and roam the house, ending up in front of Miss Agnes. I didn't speak out loud, but I knew she could hear me.\n\n\"I wish I'd gotten a chance to meet you, Miss Agnes. I've read everything I could find on you, you know. I know yours was the will that held the family together when the Great Depression hit. You were what, 45 then? And you were a woman in a definitely man's world. But you made them listen, made them move your investments from stocks to jewels and precious metals, and you came out smelling like a rose, your family intact, even wealthier that you were when it started. Your husband must have been proud. I've read a few things about him, Miss Agnes, from all accounts he was a very impressive man. He would have to have been, to win your hand, The stories I've read say courting you was not a pursuit for the faint of heart. I need to thank you for what you did for the girls. I'd expect a lot more conversations with them from time to time, and I'll probably seek you out for advice myself, especially when it comes to women. I doubt I'll ever find anyone, now. Too old and messed up, I guess.\"\n\nA noise that sounded like a cross between a snort and a laugh came out of the vents. I needed to get that checked.\n\nThe girls woke and we spent the rest of the day finishing the second bay. We found a few things I knew belonged in the house, an ornate coatrack with a mirror, a couple of end tables, and a high backed sofa covered in horsehair. I decided on the spot to have it restored. We saved the last bay until we had another Saturday off.\n\nChapter 9\n\nWe worked for a couple of months before we had another encounter with a homeless person. Out of the blue, Shaggy came up to us, smiling. We were two blocks from where we had first encountered him. He looked different, somehow. He noticed me looking him over and grinned. \"Meeting you, talking about my mother, it gave me a wakeup call. Believe it or not, Mom is still alive. She's eighty-four and resides in an assisted living complex, in her own small apartment. It took me three hours by bus, but I went to see her, the first time we had laid eyes on each other in sixteen years. She cried so hard the attendants wanted me to leave, but she stopped them.\n\n\"I thought you were dead,\" were the first words out of her mouth. We talked for three hours, and enjoyed a meal together. She begged me to call her and asked me to give her my phone, so she could put the number in. I hadn't had a phone in ten years, so I lied, and told her I'd left it home, and wrote her number down. I came back here, cleaned up a little, ended up working as a day laborer about three days a week, more when I can get it. I took my first day's pay and got a cheap cell phone. She was the only one I've called. We talk every other day. Her attendant told me one day it had taken years off her, that now she's animated and takes an interest in things. She told me Mom bragged on me! Me! ",
        "I've been living on the streets most of the last twenty years. When I heard what she said, I cut my hair, enrolled in AA classes, and thanks to my AA contacts, found a rooming house geared towards people like me. I have a real address for the first time in years. My boss said if I kept up the job I was doing, he would put me on full time when he had an opening.\"\n\nHe still had the long hair, and beard, but they were neatly trimmed, and his clothes, though worn, were clean, and he had on brand new boots. I shook his hand, and Jen hugged him. He wanted to show us something, so we followed him, Jen walking ahead. I asked him in a low voice if the sobriety was sticking. He blushed. \"I've slipped, twice. My sponsor got me the first time, my boss the next. He put me in the construction office and made me work the next day. I was hung over, and it was hot, but I would have died before I quit. I threw up three times and drank a gallon of water, but I made it. That was six weeks ago. The pull is still there, but It's getting easier to control.\"\n\nWe reached the destination, 9th Street, the street where we first met him. He went to an old woman sitting on the curb by a shopping cart full of clothes and junk, and pulled her up. She had two mostly gray braids going down her back, wearing an old dress with tattered tails. She was tiny, I bet she didn't weigh seventy-five pounds, but she walked with her shoulders back, and looked you in the eye.\n\n\"This is Pocohantas. She's a full blood Indian, and a good person. When you got me to sing it set me to thinking. I want you to listen, and if you like what she does, I want you to give her what you gave me. It will be worth it.\"\n\nShe hadn't said a word, but when he finished she stood as tall as her four foot ten inch frame would let her, and started chanting, in her native tongue. Some homeless guys had a few trash can fires going, so she was bathed in fickering light, making her shadow grow and shrink as people moved around. The song was rythmic, reaching cresendoes of high, quavering notes, before sinking back to the chant. It sent chills up my spine, and I fought to hold the camera still as I filmed her. Two guys came up, sat on the curb beside her, and started thumping a cardboard box and a metal bucket it time. It added to the mysticism of the moment. She pulled a tin can out of her cart, one she had filled with pebbles and scrap metal. It made a very effective rattle. She was still shaking it seven minutes later as the last notes faded. \n\nWe didn't look behind us, and when I heard clapping I looked back in surprise. There must have been three dozen people standing there. One woman held her three year old child up, and the girl dropped a five in her rattle. Her can was full of bills and change in no time. The guys on the ground shared in their bounty, the money going into the large bucket. Jen was so impressed she hugged her, giving her a twenty. I added another. It had been worth it. She walked back to her cart, stately and proud, and sat down on the curb again, pulling the money out and counting it.\n\n\"Is that safe?\"\n\nShaggy shook his head no. \"If the two guys who played percussion for her weren't here, someone would take it away from her. Boom Boom is too old to scuffle, but he carries a really big knife. Tin Can is just bat shit crazy. he won't stop swinging until he's knocked out, and he starts back up as soon as he wakes up. They're like their own little village, even got a little shack built back behind that empty lot. Nobody, and I mean nobody, messes with their things.\"\n\nWe walked away, in deep thought. We were pretty quiet on the way home, and Linds picked up on it quickly. \"What happened?\"\n\nI set up the camera, patching it into my 50 inch television. First, we showed her Shaggy, singing the nursery rhyme, then Pocohantas and her drummers. She sat quiet when it ended, moisture leaking out of her eyes. When she recovered, she grinned and hugged Jen. \"When are you going to finish it?\"\n\n\"Finish what?\"\n\n\"This...documentary? On homeless people with hidden talents, you know it makes a great visual. If you could get them to say a few words about their lives, do a little background, people would eat it up.\"\n\nJen and I just looked at each other, before bursting into grins and grabbing Lindsey and doing a little circle dance. When we calmed down I shocked her.\n\n\"It's a great idea, Linds, but we can't do it by ourselves. We need someone to run sound while I film, for more depth. Know anyone, say for instance a Girl Friday at a corporation who is in charge of the audio/visual section, who would like to help? You've been balancing mikes and correcting camera angles for a couple of years now, you would be perfect. Plus, this way we keep it in the family.\"\n\nShe was all over it. We even kicked names around for fun. The most popular was Family Films, but we found out later someone already owned the name, so we registered it as My Family Films, which we liked better anyway. So it became a habit for us to take one weekend a month and scout for talent. We often used Shaggy as a guide, so far he had remained sober, and he knew almost everyone on the street, at least that part of town, anyway.\n\nWe met a man who was an amazing juggler, often having ten itens in the air, talking all the way, telling jokes. \"I got another talent I think you might enjoy. When I'm done here, ya'll give me your wallets, and watch me disappear.\" The crowd laughed at his jokes, and when he put everything down he did what he called challenge juggling. \"Here's the deal. I'll take five items, any five you select, and juggle them for three minutes. Everybody that gives me something owes me a five at the end. If I drop anything, I get nothing. My lovely assistant(He pulled Linds to his side)will hold the money, and toss me the items one at a time. When I get the last one up in the air, somebody needs to start the clock.\" As always, when we appeared and set up our equipment, a crowd would gather. We always went fairly early in the evening, Shaggy said it was best, less dangerous, and we were more apt to catch whoever he wanted us to see fairly sober.\n\nLindsey quickly had the items for him to juggle thrust forward. I went first, grinning, and handed him my wallet, one of those thick biker types anchored with a chain. I did take the chain off. I played to the crowd when I asked him loudly, \"This is for the juggling act, right?\"\n\nHe just grinned and told the crowd that maybe the vanishing act would be his big finish. He ended up with my wallet, a cell phone, two purses, and a full baby bottle. \"It needs to be shaken, so this works out really well for me.\" said the mother, grinning.\n\nHe started with the two purses, tossing them up in the air for thirty seconds before he called to Linsey to toss him the next item. She tossed him my wallet, then the cell phone, and finally the bottle. He kept his patter up the whole time. \"Wow, this is a dream come true. Two purses, a wallet, and a bottle. I might just disappear after all.\"\n\nSomeone called time, but he kept them in the air for another couple of minutes, before tossing them one by one to Lindsey. She gave everything back, after collecting the money. The crowd showed their appreciation by tossing coins and dollars into a ball cap someone had put down. Shaggy told me later he got well over a hundred dollars. Juggler, his street name, didn't say much about himself, but I found out later that he'd lost his entire family in a car wreck, his wife, three daughters, and a son. It sent him into a deep depression that ended up leaving him homeless, jobless, and broke. When they evicted him he walked away with just the clothes on his back and never looked back.\n\nThe next time we went out, we found a guy Shaggy called Longfellow, who could recite whole epic poems from memory, and never miss a line. Somehow he'd come up with a dinged up top hat and a shabby tux coat, complete with tails. He didn't recite in monotone either, his voice rising to a shout and descending to a whisper, according to how the line needed to be done. Many would walk by, but just as many would stop, mesmerized by his voice. He was fairly street smart, and we caught him early on a Saturday afternoon, in a park, where there were a lot of children out with their mothers, and he delighted them by reciting the whole of \"Green Eggs And Ham\", and \"The Cat In The Hat\", and as the shadows grew longer he did Frost, a few more contemporary poets, before going into a whole litany of seventeenth century love poems. He declined to tell us his backstory, but I suspect from the way he talked when we interviewed him he had been some sort of teacher or professor in the past.\n\nWe did Tin Can and Boom Boom without their partner, raising a storm of percussionsitic expression on wooden boxes, tin cans, a ten quart metal bucket, a five gallon plastic bucket, and blocks of scrap wood. They were good enough to get the people watching them dancing, and another empty bucket soon filled with money. Tin Can had been a pretty successful sessions drummer before he lost a leg, and Boom Boom said he just like to pound on things. Some of the things he pounded on were people, and he had spent years in and out of the prison system because of it. I asked where their partner was and they looked sad.\n\n\"Some of her tribe showed up and took her with them. They've done it before. It might take a year, but she'll just show up one day, and we'll be back together.\" Surprisingly, they both consider her the closest thing to a wife they would ever get. I decided not to go down that path.\n\nWe came up on a nun, with a group from her church, out trying to minister to the street people, giving them blankets, toothbrushes, soap, that sort of thing. She recognized us immediately, and stopped to talk. She praised us, leaving us confused.\n\n\"This is a tourist spot now. People come down on Saturday afternoons to watch and hear the street people. They get quality entertainment for almost nothing, and the street people get to make a little money. A few of them, like Shaggy here, got enough inspiration to try to change their lives for the better. You all have street names, you know.\"\n\nThat surprised us no end and we had to ask what they were. She just grinned and told us to get Shaggy to tell us. Then she shocked us by belting out \"Mercedes Benz\", by Janis Joplin, and if you closed your eyes, you would easily think it was her. It stayed in the documentary.\n\nLindsey was on Shaggy immediately. He was with us every time we went out, and I paid him fifty bucks. He tried to refuse the money, but I shut him down. \"You started this. You find the talent, get us the interviews, help with the back story. You're almost as good as Linds now in setting up the equipment. If this thing ever hits the light of day, I'm going to need your real name, so I can list you in the credits as an associate producer.\" \n\n\"So what do they call us? Is it cool?\" Linds just wouldn't let it go, and I admit, we were all curious.\n\nChapter 10\n\nShaggy let her beg for awhile before breaking down. \"All right, if you have to know.\" He looked down at Lindsey, the tiny frame, the blue eyes, the blonde hair, and told her she had two names. \"Half of them call you Fairy, half call you Angel, because you look like both.\" Lindsey seemed pleased.\n\nJen looked at him and he smiled. \"You, they call Madonna. Not for the singer, but for the religious one. You held a baby once for a mother, just as the sun was going down. You seemed to glow, and Preacher saw you. He declared you a modern Madonna, the symbol of hope and renewal. He even preaches sermons about you now and then, says you're proof saints still walk on earth.\"\n\nJen glowed with pleasure and embarrassment in equal measure. \"And Dean?\"\n\nShaggy seemed reticent, somehow. \"Him, we call Warrior. The shelters have televisions, and a lot of us saw the VA series, and the public service announcements. Besides, one look from him when somebody gets too close to either of you makes them realize touching you might not be such a good idea.\" \n\nThey turned and looked at me and I shrugged. They just grinned and took my arms, leaving Shaggy to struggle with the equipment.\n\nWe filmed an old black guy who was an amazing guitarist, a magician with a slide bar. He could make his guitar laugh, cry, cluck like a chicken and bay like a hound. He sang old blues, and introduced himself, tongue in cheek, as Blind Melon Chitlin. He had a younger man with him he called Harp, who was really good on harmonica, and they harmonized together pretty well. They refused to tell us about themselves. I filmed them through several songs, and their patter in between to the audience, before we gave them a hundred bucks and left.\n\nWe filmed Preacher as he stood on a wooden box, a Bible in one hand, and preached the gospels, surprised at the gentleness of his sermons. \"Anyone can preach hellsfire and brimstone, scare the shit..er crap out of people, but that's not how I see God. So I preach how I think He wants me to, and pray that I reach at least one person a week.\"\n\nHe was scruffy, his Bible falling apart. Apparently preaching the word of God on the streets doesn't pay as well as juggling. He was very frank when he talked about his life. \"I was a fool, living in the corporate world and chasing money and success, placing it above everything, family, health, integrity. I'd cut the throat of the best friend I ever had if I thought it would help me achieve my goals. It caught up to me when the economy collapsed, and I lost it all, the cars, the houses, my family. I ended up addicted, wandering the streets, until I met a street preacher. He took me under his wing, nursed me back to health and sanity, before he passed. I took up his mantle, and I've been here every since. It's amazing how little you need, and I don't miss my old life, except for my family. I have a daughter I haven't seen since she was twelve. she would be twenty now. My wife remarried, a good man by all accounts, and he treats them well. I thought it best to leave them to their happy life.\"\n\nWhen the interview was over, Linds and Jen took him into a thrift store, and bought him the three best suits they had in his size, along with half a dozen shirts and ties and four pair of wingtips. They insisted he look the part of a serious man of God, and he didn't argue. \"Far be it from me to fight an Angel and a Madonna,\" he said, grinning. There was a bookstore across the street, and on impulse I walked in, and bought the best Bible they had. He came out of the dressing room just as I got back, and I handed it to him. \"Here,\" I said, \"this completes the outfit.\"\n\nHe looked at me, at the Bible, and huge tears appeared, sliding down his cheeks. When he could talk he said, \"The word of God, delivered by a Warrior. Perhaps there's hope for this world after all. I would ask God to bless you, but He already has, when He led you to each other. Carry on in your good works.\" He walked out of the store, holding his Bible high, preaching before he had gone a dozen feet.\n\nWe ran up on a short, bald guy with a wispy beard, and was mesmerized by the quality of his voice as he sang bits of different operas, in the correct language every time. He told his street name was Caruso, and that's all he would share.\n\nChapre 11\n\nMonths had gone by. We were all dating, or so I thought. Lindsey found a guy she really liked. Jen spent the night in the house every once in a while, to give them alone time. She smiled for a few months, before he suddenly dumped her. She spent three days in the house, sleeping in the same bed with Jen, recovering. She didn't talk about it much, saying he wanted something she didn't want to give, so they went their separate ways.\n\nI got tired of everyone going out in the hall to talk to Miss Agnes, so I put her in the living room, over the fireplace. We would all talk to her, and every once in a while the girls would ask me to leave, while they talked about 'girl stuff'. I didn't mind, because I would do the same, talking to her when the girls were in their apartment.\n\nI started dating a new woman, a tall redhead I had met during an interview, and we seemed to hit it off. She and the girls had a mutual dislike of each other, and Miss Agnes expressed her opinion. Every time Simone was at the house, no matter what the thermostat was set at, she was either burning up or freezing cold, while the rest of us were comfortable. The girls would grin and look at the mantle, while she complained. \n\nJen became a little distant, not spending as much time in the house as before, as did Lindsey. I thought they were being kind and giving me space. Boy, did I get that wrong. I was talking about how high maintenance Simone was becoming with Lindsey when she hauled off and slapped me. \n\n\"What the hell was that for?\"\n\n\"For being a screaming idiot. The bitch is a gold digger. She walks around your house looking like she's appraising everything she sees for an auction. Why the hell you bother with her when you have so much better waiting for you is beyond me.\"\n\nOkay, I really am an idiot. I had no idea who she was talking about. \"Just who would that be?\"\n\nShe slapped me harder. \"Miss Agnes, a little help here?\"\n\nA picture of Jen and I, dressed to the nines in tux and evening gown, accepting our Emmy, fell of the mantle. I picked it up, smiling at the image, before it hit me. \"Jen? Really? I'm too old for...\" I managed to avoid the slap this time, or so I thought. I moved quickly, only to have a book fly off a shelf and hit me square in the nose. And the book was moving pretty fast.\n\nI rubbed my nose, watching Lindsey grin. \"Thank you, Miss Agnes. Think if we half beat him to death, he'll catch on?\" Another book flew off the shelf, stopped just short of my nose, and fell gently to the floor.\n\nLindsey grinned again. \" I think we've got his attention. Now you listen to me, big brother. Jen loves you, and she has for a long time. She hides in her bedroom in our apartment and cries every time that redheaded slut comes over. She's a gold digger, Dean. She looks at this big house and sees money. She's tried to pump us about how much money you got, but she can't get anything from us because we don't know and don't care, but in her mind the figure grows every week. You need to show the skank the door, and start working on your true love. I would bet everything I have or ever will have in this life that it won't take long before wedding bells ring. Now get off your butt and do the right thing. Miss Agnes and I will be watching, so you better not screw up.\"\n\nWith that she stood on her tip toes and gave me a kiss on the cheek, turned and walked out the door. I picked the book up, idly reading the title. Without thinking I asked. \"You really think Jen and I are a good match, Mom?\"\n\nI had been comparing my mother to Miss Agnes. My mom was a good woman, but she was never prone to show emotion. Oh, I was sure she loved me, but I later learned my parents had decided early on in their marriage not to have children, and I was a mistake. I look back now after I found that out, and wonder. It would explain the remoteness of their emotion, and had a lot to do with me joining the Army as soon as I graduated. I got exactly three letters the whole time I was in service. People would definitely think I was losing it if they knew I felt more connected to a woman who had passed over fifty years ago than anyone alive now, except of course, the girls.\n\nNo sooner had I said \"Mom\" when a warmth enveloped my whole being, it felt good, like...joy, maybe. I felt arms around me, and a scent I couldn't describe until later, when the girls found an old bottle of perfume that had to have belonged to Miss Agnes. Oddly, I wasn't the least bit surprised when I looked down and saw I was dangling several feet off the ground. I laughed.",
        "\"I take it's okay that I call you Mom now. And I'm pretty sure this is a sign you approve of Jen. Now, what do I do about Simone, and how do I go about finding out if Jen is open to us deepening our relationship?\"\n\nWhen I said Simone, she dropped me like a rock, and I almost didn't land on my feet. I felt a touch on my cheek, and then she was gone. I looked at the portrait and grinned.\n\nSimone came over that afternoon, for some reason she liked to come over instead of me picking her up. She could see I was a little stiff, and when she asked I told her I had some things on my mind. We were going on a bike ride, so when she went to the bathroom I took the opportunity to pull it out of the garage. When I got back inside the bathroom door was open, and I could hear everything she was saying. \"He's acting a little odd, Brenda. I need to pull him in pretty quick. Yeah, I know, but he's got to be worth some bucks, his house is probably worth almost a million, and as soon as I have him this piece of junk is going up for sale. It's always too hot or cold, and I feel like I'm suffocating half the time. While we wait for it to sell I'll get rid of those girls, I don't like the way the dark one looks at Dean, and the blonde looks like she could cheerfully kill me any minute. While we wait for the house to sell, I'll put Jackson in the apartment. After all, he works a lot of weekends, and I'll need someone to keep me company, now won't I?\" He'll never...\"\n\nThat was all she got out before the toilet literally blew up behind her, blowing every bit of the contents directly on to her. I could have heard her scream at the station, nine miles away. She looked up, still screaming, and saw me. She paled a little, wondering how much I had heard, and dropped her phone. Deciding the best defense was a good offense, she started ranting.\n\n\"Damn it, Dean! Look at this mess! Now I need to go home and change, and have a long shower. I'd do it here but you never seem to have enough hot water.You need to seriously consider selling this money pit. We could take it and buy a nice, modern house, maybe with a real pool and a hot tub, for entertaining.\"\n\n\"Do you intend to entertain Jackson in the hot tub? Maybe do a little skinny dipping in the pool while I work weekends? I heard every word, Simone, so don't try to do damage control, don't say anything at all. You're pretty good between the sheets, but that's all you got going for you. Did I ever once mention a deeper relationship, or hint about marriage? I did not, because when I do pick a life mate, it wouldn't ever have been you. Here's what I'm going to do. You clean up as best you can, while I lay some towels on your car seat. The I want you to leave, and never come back. And if you could, hurry it up, you're starting to stink the place up.\"\n\nHer face went from pale to red to pale and then to almost purple as I spoke. She was screaming when I closed the door, and I heard another whoosh of water and her screams became a gurgle. \"Let it go, Mom. You made your point.\" I lay some of my old towels I used for various projects on her seat, seeing no need to waste the good ones. I looked up once, to see the curtains flutter in the apartment. Someone was watching. I got on the bike and rode away.\n\nSimone was gone when I got back. Judging by the scraps of paper lying around, she had tried to leave a note. I sighed and got the vacuum cleaner out, then mopped and cleaned the bathroom. \"Did you really have to be so messy? The conversation I heard did the trick.\" All I heard was a faint sound like someone humming a happy tune, and I let it go.\n\nChapter 12\n\nFor the next couple of weeks, Lindsey seemed on a mission. She had a new boyfriend, and she made it a point to leave Jen and I alone as much as possible. Jen must have realized something had changed, because she started snuggling more, kissing me goodnight when she left. The kisses got longer, there was even a hint of tongue in the last few, and she seemed surprised at my enthusiasm. I was trying to figure a way to sound out her feelings towards me, when she took charge.\n\n\"My family is coming in two weeks, so we need to air out the bedrooms. I never told them we broke up, in fact, I told them our feelings were getting stronger. It wasn't a lie, at least on my part. When they get here, my things will be in OUR bedroom, and they won't just be window dressing. I'm moving in, tonight, into a full blown relationship with you. I've loved you forever, and I can't take it anymore. The choice is yours. Love me, or I'll move out tomorrow. I've had a really good offer from a station three states away. If you don't want me, I'll be gone in two weeks. Time to decide.\"\n\nShe was quivering, tears threatening to spill out, as she waited for my answer. I tried to look as serious as I could. \"I have conditions. I'm not sleeping with a bunch of stuffed animals. You need to pick a bedroom out after your folks leave, and decorate it for a little girl, and put them on her bed. I think our first daughter will really enjoy them, knowing her Mom had them when she was her age. And on the subject of children, I think three is a good number. I don't care if they're all girls or all boys. And we need to start in another year, I'm not getting any younger here. And we're keeping Lindsey for as long as we can, that way we'll have a built in baby sitter. What do you think?\"\n\nHer mouth quivered and the tears overflowed. When she finally found her voice, she said \"I think...I think...\" and fainted dead away. I picked her up off the sofa, carried her over to my big rocker, and rocked her, caressing her hair and cheeks, until she woke with a start. She looked confused until she saw me, than started crying again, soft little sobs as she held me like I might disappear. When she finally was able to speak, she whispered in a small voice. \"Do you really mean it?\"\n\n\"Yes, baby I do. I think I loved you from the first time I laid eyes on you, I just tried to fight it. I didn't think I was very good marriage material. But I can't deny my feelings for you. I want to marry you, have kids, celebrate our fiftieth anniversary together surrounded by our children and grandchildren, with maybe a great grandchild thrown in for good measure. So Jennifer Michelle Conlin, will you marry me? If you'll get off my lap, I'll get down on a knee for you.\"\n\nShe gripped me tighter. \"I like where I am just fine. And the answer is YES! I loved you as long as you've loved me, maybe longer. I think I've been searching for you my whole life. One thing though, I'm not sure about the kids. I'm kind of superstitious of odd numbers, so if it all right if we have four?\"\n\nWe were both a little hesitant at first, but got over it pretty quickly. Her body was lean, with just enought curves to make you realize she was a woman. Her breasts were small, but perfectly proportioned to her body, and I learned her nipples were really sensitive. I'm not going to go into the positions we used or the passion we had, suffice to say we did everything a man and woman in love could do for each other, as many times as possible. When we finally stopped, exhausted, we heard a giggle coming from the vents.\n\n\"MOM! You perv, were you watching?\" We felt the gentle caress on both our cheeks, and the same thought popped into our mind. Engagement ring. The covers flew off us, and I knew what the venerable lady wanted. I tugged Jen up. \"Come with me. Mom wants to give us an engagement gift.\"\n\nWe went, naked, into the attic, where I pulled the box down off the beam, opening it. I dropped to one knee. \"I know I don't have to ask again, but I'm doing it right this time. Jennifer, will you marry me?\" I slipped the engagement ring on her finger, not the least surprised that it fit like it was made for her. The diamond was large, and it looked enormous on her finger. She looked down and started shaking. \"I can't...it's too much...\"\n\nI closed my hand over hers. \"Hush baby. She wants you to have it. Wear it with pride, and remember the woman who thought you worthy of it.\"\n\nThe tears flowed, and as she sobbed, she whispered. \"I wish you were physical, Miss Agnes, I want nothing more in this life right now than to be able to kiss you.\" She stopped suddenly, suffused in light, and I saw her lips flatten, and the look of pure joy in her eyes. Jen didn't say anything afterwards, she just took my hand and lead me back to bed.\n\nWe woke up when a blond haired blue eyed fairy screamed and dove between us, smothering whoever she could reach with kisses. \"It's about time! Now, tell me everything.\"\n\nShe scooted down until she was between us, and refused to move. \"Uh, Linds, we're kind of naked here...\"\n\n\"That's supposed to surprise me? I'll bet it will be a long time before Jen discovers she has sleepwear again. You need to relax, believe it or not, big brother, I've seen naked people before.\"\n\nSo we alternated telling her of the events from the night before, leaving out the juicy parts, but she got the idea. When we got to the part about the ring, she had to see it. Tears glistened in her eyes. She then wondered aloud if Miss Agnes had a surprise for her when she got engaged.\n\n\"Why don't you ask her. And from now on, in this house, she will only respond to Mom. She had five boys and never got spoil a daughter, so you girls are going to get a lot of attention in the future. Prepare to be pampered. And I would bet my soul that when you find the right one, she'll let you know. Am I right, here?\"\n\nHer perfume wafted over us, and settled on Lindsey. Her hair ruffled like someone was stroking it. We all knew, Mom would not forget her.\n\nLindsey and Jen started to move things over. They were talking about furniture when I laughed. \"Unless you have something you hold special, honey, leave everything but your clothes and personal items.\" They looked at each other and giggled, and never brought it up again. Jen was firmly settled in by the time her family showed up, all of them this time, and for a week the house was filled with the small roar of a big, happy family. Jen never said anything, but made a lot of hand gestures when she talked, using her left hand. Jan, one of the twins, finally spotted the ring and screamed, holding Jen's hand high so everyone could see. Pandemonium set in, and the males wisely withdrew to the pool. We talked and sipped soft drinks while the women made plans. First, they had to talk about my prospects, followed by the ring.\n\n\"Honey, how much money does Dean have? This house is huge, and that ring probably costs more than your father would make in years.\"\n\n\"Dean is really good with money, Mom. That's why I'm putting him in charge of our finances after we marry. His parents were killed in an accident while he was in service. He inherited their estate, got both life insurance policies and a settlement from the trucking company. He paid cash for the house, his vehicles are paid for, and he makes decent money at his job. We're, oh, what did Uncle Saul say all the time? Oh yes, we're comfortable. We're going to need the room Mom, I intend to follow in your footsteps, but I think I'll stop at four.\"\n\nShe hesitated a bit before grinning again. \"As for the ring, it's an heirloom, a gift from his Mom. It was always supposed to go the the first daughter, but all they ever had was Dean. I got it by default, to be handed down when my time comes, probably to my first granddaughter.\" Technically everything she said was true, so no one questioned it.\n\nChapter 13\n\nWe settled into a comfortable routine, working at our jobs and our side project. Our contracts came up again, just when we were nominated for our third regional Emmy, as well as a national Emmy, for a story we did on corporate corruption. They knew the offers we were getting, and were desperate to keep us. I'd like to say the story came about from dogged investigative work, but it was dumped in our lap by one of the girls' old friends. Needless to say, we got a significant bump in salary.\n\nWe came home one Saturday night after working on what we were turning into a documentary on homeless people to find a surprise waiting for us. We had filmed two young black guys doing a rap while Boom Boom and Tin Can provided percussion. I personally didn't like rap but thought they had talent. Jen and I had decided to stop soon and start final edits. Even after that, we should have almost two hours of quality video we were going to try to market.\n\nThe surprise was Jasmine, their old roommate. She got out of her car warily, not sure what kind of welcome she was going to get. Lindsey was a little sharp with her greeting. \"Jasmine! What are you doing slumming among normal people? Shouldn't you be sipping champagne with your CEO in your private apartment, taking dictation or something?\"\n\nShe surprised us by starting to cry. Not little sniffles, but full on gasping for breath between sobs crying. My girls immediately went into protective mode, taking her into the living room, sitting her down between them on the sofa and hugging her while she cried it out. I made myself scarce, going into the kitchen and putting water on for tea, A die hard coffee man, my time overseas taught me the value of a good hot cup of tea. I preferred mine plain with just a slice of lemon, but Lindsey liked cream and sugar, and Jen went heavy on just the cream. When the pot had boiled, I put it on a service with the cups and condiments, and went into the living room, prepared to put it on the coffee table and disappear again. Jen got up and took my hand, pulling me to my big rocker.\n\n\"You need to hear this honey. Jasmine may be in real trouble, and I told her if anyone could help her, it would be you.\"\n\nIt was a sad, sordid tale, a young innocent seduced by the money, power, and lifestyle. Jasmine had gone from being personal assistant to mistress in less than a year. Incredibly attractive, he flaunted her as a showpiece on his business trips. He even got her to flirt with clients, to get better terms. Then one night three months ago he dropped his briefcase in a druken stupor, and it fell open. He passed out on the hotel bed, so she started sorting the papers and placing them back inside, in order. Naturally she read them, and was appalled at what she read. He was bribing contractors, federal inspectors, shuffling hidden money to his foreign clients, taking almost twice as much back for the clean money, and slipping the rest slowly into his business. He was literally making millions on this. What upset her most of all, though, was most of the clients he dealt with overseas, a part of his business she was never allowed into, were either out and out terrorists, or those sympathetic to their cause.\n\nShe panicked, shoving them back into the case until reason returned. Keeping an eye on her sleeping boss, she took every page out, captured it on her cell phone,and sent it into the Cloud. Closing it carefully when she was done, she placed it where he always kept it, on the nightstand on his side of the bed. Afraid to alter her routine, she slid into bed.\n\n\"It's been two weeks, and I bet I haven't slept three hours a night. I was wondering how to slip the information to you secretly, until he had a trip scheduled to Paris, to meet his customers. He wants me to go with him, and do more than flirt. His exact words were 'You have to be nice to them. Give them anything they want and smile. The deal I'm working on will be worth billions. Your bonus, should you please them, will be 250,000 in an offshore account.' I don't know what pisses me off more, him expecting me to whore myself out for the company, or him offering me a measly quarter million for helping secure a multi-billion dollar deal. Either way, there was no way I would have done it. I don't have a lot of pride left, but I have some, and the thought of putting American lives in danger nauseates me. I've got all the information with me. What should I do?\"\n\nThey all looked at me. \"Does he know you're here?\"\n\n\"No, he thinks I went shopping for new clothes to impress the clients. He even gave me ten grand to spend. I got on a plane to New York, caught a cab to a local rental agency instead of a national chain, and drove straight here.\"\n\n\"So, we have a day or two. Girls, keep an eye on your friend, make her comfortable. I need to go into the Library and make some calls.\" The library was just that, a room of dark paneled walls, comfortable chairs, and shelves of books. I checked, many were first editions and valuable. I asked the real estate agent once why no one took them and the other things we had found, and she said the last heir lived on the other coast, and had no interest in flying here to inventory the contents of a house and garage he had never seen. His instructions were to include everything, and make hauling away the junk my responsibility.\n\nI sat at the massive oak desk and opened my laptop. Once I found the number I wanted, I dialed.\n\n\"FBI, how may I help you?\"\n\n\"I need to talk to Agent James Donner. It's a matter of great importance, and it's fairly time sensitive.\"\n\nI could tell by the tone of voice the woman had probably heard those exact words a thousand times. \"I'm afraid Special Agent Donner is out of the office at this time. Would you like to leave a message or speak to another agent?\"\n\n\"I would not. You tell him Dean Harwell of KCBS called, with information vital to the nation, about terrorist activity here and abroad. Tell him if he doesn't call me back in thirty minutes I'm calling Paul Montgomery in Homeland, and give him the information.\"\n\nThat got her interest. These guys were supposed to be on the same team, but there was a lot of interagency rivalry going on, and the thought of another agency one upping them was something they couldn't stand. \n\n\"Would you please hold?\" I knew she was going to transfer me to some middle management drone who would only muddy the waters.\n\n\"Not necessary. You tell Jim he has twenty four minutes left.\" I hung up while she was still talking.\n\nFifteen minutes the phone rang. I answered on the third ring. \"Dean Harwell.\"\n\n\"This better be fucking good. I'm right in the middle of something.\"\n\n\"Bigger than exposing an international moneylaundring operation involving crooked contractors, bought federal inspectors, millions of dollars leaving the country and dirty money coming back, along with terrorist connections? If so, sorry to bother you. I'll let you get back to what you were doing.\"\n\n\"Goddamnit Dean! You sure about this?\"\n\n\"Got the paperwork to prove it.\"\n\n\"What do you want?\"\n\n\" Nothing, this is too big. Exclusive rights to the story would be nice. One leak and my informant stops talking. I also want full immunity for her, she's the one who brought it to me when she found out, and I want her put on the whistle blower program. If you want to make sure I'm serious, get up here as soon as possible. I can't risk the exposure of her coming to you, the guys you want will disappear like smoke.\"\n\n\"Give me an address. I'll charter a plane.\"\n\n\"Just you and one or two computer guys. You show up in force and it will not go well.\"\n\n\"Done. It'll be just me and one more, in case this is a wild goose chase.\" He got my address, and told me to meet him at the airport in ninety minutes. I'd met Jim while I was still working for the national network. He was a good guy. More importantly, he was like a bulldog when he latched on to a case. He couldn't be bought, he couldn't be frightened, he couldn't be intimidated by his superiors. Because he didn't play ball, he would never rise higher than he was right now, but he was so damn good they put up with him.\n\nHe showed up with Christen \"Christy' La Mond. If he was a bulldog, she was a wolf, sniffing around something, examining everything from all angles, finding a weakness and going in for the kill. They were a very effective team, partnered up mostly because no one else would work with them. I found out by accident they were secret lovers, and wouldn't marry because one would either have to give up their job or take another assignment, usually far away. I kept their confidence, and they knew they could trust me.",
        "They collected their luggage and were soon in my library. Jasmine had printed out the hottest of the information. It took them two hours to read, and when they sat back they couldn't even speak. Jen and Linds made them a late dinner, and we showed them to their room. We had put both sets of luggage in the biggest guest room. They looked at me.\n\n\"What? Unless things have changed, one or the other would sneak into a bedroom as soon as you think we're asleep. You're safe here. We'll call you at eight for breakfast. Oh, and if you hear something go bump in the night, ignore it. It's just Miss Agnes. She watches over the place. Sweet dreams.\"\n\nI shut the door before they could talk, and Jen giggled all the way down the hall.\n\nChapter 14\n\nOnce she got over being nervous, Jasmine told them everything, and gave them the rest of what she had. I thought they were going to pass out. Later, after they waded through everything, they sat with me in the library, sipping my scotch. I hated scotch, it was a taste I never acquired. I rarely drank anything, but when I drank whiskey it was always straight rye, on the rocks. I would sip slowly, letting the ice melt and dilute the whiskey. Usually two was all I had.\n\n\"You have no idea what you stumbled on to here, Dean. This is going to spread like a computer virus, and get just as ugly. You don't get away with this level of shit for as long as these guys have unless you've got a protector who is WAY up the food chain. Eventually, Homeland, ATF, hell every alphabet agency in the country is going to be involved, including the CIA. They might get to turn a few, and gather good intel for years. As long as we remain in charge, you get full access. And your friend should end up a very wealthy girl, if things play out like we expect.\"\n\nChristy grinned. \"On a personal note, we can't tell you what being able to stay here, get into the same bed and sleep the whole night together, means to us. It's almost like a honeymoon. I hope we didn't make too much noise. I heard somebody giggle just as we finished a marathon last night.\"\n\n\"I'm sure no one will say anything,\" I said. Mentally I said \"MOM! Stop perving, these people are our guests, and I like them.\" I felt her fingers on my cheek, and could almost see her grin. Just my luck to buy a house that's haunted by a ghost that's also a voyeur.\n\nJasmine had to go back to work, but as luck would have it, just before they boarded the plane her 'uncle' showed up, saying her grandmother had passed, and she was needed at home. Her boss tried to talk her into going, but Jasmine, her nerves so frayed the tears she shed were real, refused. He finally relented if she promised to be on the next plane after the funeral. Of course, both her grandmothers were alive and well, and Uncle Jim escorted her straight to a safe house, under heavy guard.\n\nThey had bugged the suite in Paris, state of the art stuff that beat the detectors his guests used to sweep the room twice daily with. Jim and Christy were there as guests while Interpol and French police listened. Christy dug her fingernails into Jim's arm so hard the bruises and scratches were still there when they got home as the name of a senior Senator and a mid-level Congressman were mentioned, the bad guys debating over how much they deserved for keeping them in the shadows. Jim instinctively pulled away from her when two Cabinet heads were mentioned, or Christy would have broken his arm.\n\nIn the end they let everyone go back to their respective countries, tracking every movement, listening to every phone call and conversation. Jasmine called her boss and told him she had inherited her grandmother's house and estate, and would not be returning. The Feds had it all set up when he checked it out, and they had copies of everything from the death certificate to the will available to 'hack'. Mr. Moody tired to talk her into coming back, citing their deep connection and feelings for each other, and Jasmine actually seemed sad when she refused.\n\nJen and I were outside a home three states away before daylight on a February morning, filming as they arrested a man, and taking a short but dynamic statement from the FBI. We had done this deliberately, leaving a false trail to where the leak originated, to protect Jasmine. Agent LaMond looked every bit the professional she was in her severe suit, her hair pulled back into a tight bun, as she issued the statement. We were streaming it live, and soon it got picked up by every network and cable news outlet in the country. We were featured on the national nightly news, with every installment we filmed of the story. The Congressman and the Senator sang like canaries, hoping for reduced sentences, but there is no reduction for treason. They both got thirty years to life, as well as the two Cabinet heads, various undersecretaries, and a few lower level flunkies. The treason insured most of them got to spend their sentence at Fort Leavenworth, and not a camp cupcake. They had to move all of them in less than six months. Even if the inmates were all convicted of crimes, they were all still soldiers, and they took a really dim view of anyone betraying the country and their brothers in arms. The wardens finally figured out the prisoners were all suffering from a malady that caused them to become clumsy and fall down a lot. They fell so many times they stayed bruised constantly.\n\nThe businesses had their assets seized by the government, and all the CEO's were arrested. Most of them got life, and most were divorced as they fought it in court, the women trying to secure a future for their children before the money ran out. The Inspectors who falsified reports were set to a supermax prison, and all but two died the first year. The President ended up firing several of his aides, three department heads besides the ones who were charged, assorted undersecretaries, his press secretary, and his lawyer. Faith in his ability to lead fell to a record low for a sitting President. The next year was an election year, and his campaign had been cranking out the ads, fueled by big business. The ads stopped when the big companies stopped funneling money to him, hurting because of the economic shortfalls the crisis had created, and he soon announced his plans to retire after this term. Jim told me much later that he had come within millimeters of having impeachment proceedings being started.\n\nWhat happened to Jasmine? Well, Jasmine ended up smelling like a rose, pun intended. Unofficially, Jim recommended a lawyer, a super eagle, who swooped down and protected her interests like she was his only child. She really hadn't done anything worse than having an affair with a married man, and she had turned everything over when she found it, contacted the FBI, and co-operated fully, so they never pressed charges.\n\nHer blown whistle saved the government almost a billion dollars. Her cut would have been staggering, and the feds were dragging their heels, when Jasmine, through her lawyer, said she would consider a smaller percentage, and her lawyer fees. It was a limited time offer, and they jumped all over it. I asked Jim once how much she got, and he grinned. \"Usually in cases like this, lawyers get at least a third, and her lawyer was thrilled to receive eleven million dollars. You do the math.\" Wow.\n\nThere was a downside. Jasmine would be a tempting target before the trial. Kill the only witness and things will be simpler to defend. Jim thought it a stupid idea. \"We already got enough to hang them several times over, and we're finding more every day. Even if they were to kill her, they would still go to jail. Killing her would change things, and it would be hard to get parole on death row. She's probably safe, but we're going to keep an eye on her, at least for a while. The first whiff of danger and we'll make her disappear.\n\nShe ended up staying with us for four months before the first trial date got close, then they moved her to a safe house. I had moved Lindsey into the house, because I didn't want her to be away from us if something did happen. We liked it so much she was still in her bedroom nine months later.\n\nI didn't worry too much about something happening because I had a foolproof security system. I had Miss Agnes. Apparently a ghost doesn't need a lot of sleep. One thing you never do is mess with a woman's daughter, especially if mom happens to be a supernatural spirit who is intensely protective.\n\nLinds was dating a new guy. He was handsome, he was charming, he said the right words. Jen and I couldn't stand him. \"He reminds me of a male version of Simone.\" Jen gritted her teeth, for some reason she still held resentment over her.\n\nI'd tried to love her out of Jen's mind, but it wasn't working until I accidentally said something that set her off. \"You know, she was trying to rob the bank. You ended up owning the keys to the vault, or in my case heart. Why try to steal something you already own?\" She just grinned and we pretty much forgot about her.\n\nLindsey had a little money, thanks to Jasmine and the documentary we had finally finished. The boyfriend was sniffing around, trying to find out more. After a couple of weeks she finally grew tired of him, and told us she was breaking up with him. He was coming over for a barbeque, along with a few more couples, some neigbors, some from the station, and she was going to tell him afterwards. We mingled, ate, laughed, played some couples games guaranteed to bring laughter. When one contest about how well you knew your partner was over, the numbers were tallied and Linds and her date came in dead last. He was a little peeved, and drank more, getting surly towards the end. He ended up passed out on a lounger. We left him, and the evening wound down.\n\nI looked over at him when the other guests left, and told the girls it looked like I needed to clean up. Linds said to let her handle it, so we watched, at a distance, as she woke him up, making him drink several cups of coffee. She came over to us. \"I can handle it from here. You guys look beat. Go to bed. I'll give you the post relationship analysis over breakfast.\"\n\nThey were talking quietly as we left them. Forty minutes later we were snuggled together, asleep. It had been a long day and we were spent.\n\nThirty minutes later the covers were snatched off and I was on the floor. Wondering what had happened, I could feel Miss Agnes, and she was really agitated. I woke instantly. \"What's wrong, Mom?\" Lindseys picture flew off Jen's dresser, and it was glowing. The drawer to my nightstand flew open, and the pistol I kept there dropped beside me. I was up in an instance, running out of the room with the Smith .40 in my hand, racking the slide as I moved. Jen was up, huddling in the middle of the bed. \"Stay here and lock the door! Where is she, Mom?\"\n\nThe back door flew open and the glow went up the steps to the empty apartment. I could hear Lindsey screaming as the door swung open for me. He had her tied to the bed, her clothes looked cut off and lay in a pile at her feet. He was mauling her breasts savagely while he told her what he was going to do to her. \"Tell me no, tell me we won't be together anymore? What the fuck, slut? By the time I'm done with you you'll be a good little bitch, do what I say. We're gonna take your money and move far away from here, somewhere your asshole friends can't find you, live like kings. Now stop screaming!\"\n\nHe backhanded her and blood flew from a split lip. She sagged back on the bed, out cold. Something must have warned him, because he turned slightly as I got to him. He got a closeup view of my pistol as I raked it across his face, blood pouring from the gash the front sight made. Before he could move I came back across his face, spliting the othe cheek. He tried to jump up, but his jeans were around his ankles and he fell in a heap. I probably would have beaten him to death if it hadn't been for Mom. She literally dragged me off him and held me wrapped in her astral arms until the bloodlust cleared. Jen, despite my instructions, had grabbed her own .380 and had come charging after me. Linds was unconscious on the bed, and Mom, feeling me calm, let me go. I grabbed the first phone I could find, and called 911, telling them I had stopped a sexual assault in progress and had subdued the attacker. When I told them Lindsey was tied to the bed and unconscious, they instructed me not to untie her until they got there, and not to touch her if at all possible.\n\nMine was a pretty upscale address, and they were there in four minutes. Jen had gone down the steps to wait on them. They came in, guns drawn, relaxing only when one of them recognized us from television. One look at the bed had them summoning the EMT's who had followed them. They took about fifty photos before they allowed Jen to cover her up. A policewoman removed and bagged the restraints, a look of sympathy on her face, turning to disgust when she looked down. He was still out, but was already in handcuffs.\n\nMy official story was that I woke, worried about Lindsey because of the breakup, and went to check on her. I noticed the light on in the apartment, and knowing no one was supposed to be there went looking. I caught him trying to rape her, a struggle ensued, and I managed to knock him unconscious. My weapon had already been secured, and I felt no need to bring it up. If it had been, they would have seen the blood on it, and realized it wasn't just a fight to subdue him.\n\nI had to admit to myself If Mom hadn't restrained me I would have beaten him to death, without a doubt. My battlelust was what kept me alive overseas, and once it's unleashed, it has to run it's course before I come back to reality.\n\nThe man was tried, convicted, and sentenced to seven to ten years in a state medium security prison, and would have to register as a sex offender when he was released. Come to find it out he was a middle school teacher, and he lost his career forever. He went to jail with two deep scars on his cheeks, something to remember me by. Lindsey didn't have to testify much, because she was unconscious early in the assault. She did tell how he dragged her up the steps, kicked the door open, and tie her to the bed. She remembered him hitting her, and the rest was a blank.\n\nMr. Teacher had an attorney that tried to spin it as rough sex and fantasy gone wrong and misunderstood, but no one bought it. The jury was out for a whopping twenty minutes before they were back with the verdict.\n\nChapter 15\n\nWe had finished our little documentary, \"What's In It For Me, \" and subtitled it \"The Talent On Ninth Street.\" Shaggy, Pocahontas, Tin Cup, Boom Boom, Longfellow, Preacher, Caruso(the opera singer), Juggler, The Nun, Street Rap, finishing with Blind Melon Chitlin and Harp. Oddly enough, they had gotten together and practiced an old gospel song, the voices blending together far more smoothly than one would think, for the grand finale. When the last notes faded I focused on Jen, doing a closeup of her face, the tears obvious on her cheeks.\n\n\"These people are in every large town or city. You probably walk by them every day. They more than likely have a hand out. Next time they ask, ask back. What's in it for me? What return will I get on this money? Maybe, like the people here on Ninth Street, they will surprise, possibly even move you. When you hand over the dollars, ask yourself, who got more out of the exchange, you or them? If you look at it like that, you'll realize it was money well spent. And even if they look like bums and make you uneasy, remember, these are people too, and there, but for the Grace of God, could be any of us.\"\n\nWe slowly faded into a blank screen and ran the credits as the gospel song played again. \n\nI knew some people in New York from my network days, and I sent them samples, to see if it was salable. In two weeks we had an agent and five firm offers. Netflix won, and they featured it in their ad campaign for coming attractions.\n\nAt my insistence, we each got thirty per cent of the profits. The other ten per cent went to Shaggy. He was stunned when we told us what we had decided, even more stunned at what ten per cent amounted to. He was listed in the credits as talent scout and associate producer, under his real name, William 'Shaggy' Peters. I was listed as director/producer, Jen was listed as executive producer, Lindsey was titled sound director and associate producer.\n\nShaggy said the best part was his mother calling to tell him how proud she was of him, and how she told every one at the facility he was her son. He took part of the money and upgraded her apartment, and put money in her account every month. We all went with him to the funeral when she passed the next year. He was surprised by the size of the turnout, but she had been a very popular woman. He renewed friendships with cousins he hadn't seen in twenty years. The most moving part of the service was when he got up and sang 'Itsy Bitsy Spider', looking at her coffin the whole time. Any eyes that were dry quickly watered.\n\nThings settled down for awhile, and wedding plans were completed. We invited very few people. I flew my grandmother in, and she was very taken by Jen and Lindsey, and Jen's large family. It seemed she was lonely, forced to live in a facility because of bad investments. They had taken her house and auctioned it off, using the money to defray costs, and soon it was going to run out. None of the rest of the family were inclined to help her. She never told me any of this, not, as she said, wanting to burden me with her problems. \n\nShe tearfully confessed this to the girls and Jen's mom one night, and the women of my family, her Mom included, were on me with a vengeance the next morning. Miss Agnes seemed to be frowning as well. I guess the shocked look on my face convinced them I really didn't know, and Jen's mother got right in my face. \"What are you going to do about it?\" \n\nI looked them all dead in the eye. \"I don't know. The only thing I can think of is maybe find her a nice room in a big house somewhere, rent free, where all her needs are taken care of, surrounded by girls that will probably learn to love her as time passes. Know anywhere with an opening?\"\n\nJen just grinned at the rest. \"Told you so,\" she smirked, as she went to find Grams and give her the news. Miss Agnes brightened, and her smile was back, so I guess she approved. Maybe they would hit it off.\n\nI think Gram and Jen's family were a little surprised with some of our guests. Shaggy had rented a large van and driven every one of the street people who wanted to come to the house. He and Jen had helped them with suits, and Pocahontas had on a very nice native costume, complete with beads and bells, her almost silver hair hanging to her waist in two thick braids.\n\nThe documentary had changed a lot of things. Ninth Street had become a tourist attraction, to the point police had to keep someone there just to move the crowds along. The Mayor wanted them to get what he called 'performance permits', and the whole thing was getting out of hand. Some could handle the pressure of being semi-famous, but many resented the loss of privacy. There were a lot of what Shaggy called 'posers and pretenders' around, people not homeless at all, but dressing the part, trying to make a few bucks and get noticed. Crime had also increased, the thought of all that cash floating around just too much of a lure to the bad guys. Tin Can and Pocahontas were roughed up pretty good before Boom Boom pricked the two guys with the tip of his knife. By pricked, I mean shoved as deep as he could get it before they ran away.\n\nIn fact, this would be the last time the Ninth Street group would all be together. Pochahontas was finally going back to the reservation to stay, and taking Boom Boom and Tin Cup with her. Preacher had gotten certified as an ordained minister by some group off the internet. He only did it so he could legally officiate at our wedding, and he had been offered a small church, independents who had lost their minister. It didn't pay much, but did come with a small house. He was excited, and we were happy for him. Shaggy, of course, had already moved on. The documentary money enabled him to get a better apartment. He was a little over three years sober now, and worked a lot with his AA group, trying to get others help. He admitted the success rate was pretty low, but if they got just one person a year sober, he said, it was worth every manhour they invested and more. "
    ],
    "authorname": "qhml1",
    "tags": [
        "novel",
        "novella"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/money-well-spent-1"
}