{
    "title": "A New Dawn Ch. 05",
    "pages": [
        "Hi kids. Fair warning: this one's kind of long and there's not a whole bunch of sex in it. Sorry; as I've said before, the characters decide what they're going to do and my job is just to write it all down. I'll make it up to you, though, because it appears that Ass Night is going to happen after all.\n\n- Chunks\n\nJay, Laura, and I were naked and lying in the backyard, enjoying the summer sun and talking, when a woman came through the gate and walked towards us. \n\n\"Hi Mom,\" Laura said.\n\nUh-oh, I thought. Laura was our neighbors' daughter and had been tanning nude with us for the last month, ever since she had come over to swim and caught me coming out of the pool sans suit. We had told her that she could come over to use the pool any time, and when she caught me I had to explain that we considered the pool a clothing optional zone. She had taken to it immediately and was pretty much spending her summer with us. Sometimes she brought girlfriends along. They were all only 16 or so and although I didn't touch them and was doing nothing technically illegal, somebody who was really pissed might try to charge me with contributing to the delinquency of a minor, or moral turpitude, or promoting skin cancer in naughty places, or some such. \n\nJay sat up and I stood. I had no idea whether Laura had told her parents what she did over here. I studied her mother's face as she approached, looking for signs of murderous rage. Instead, she had a quirky little smile on her face. She stopped in front of me, looked at my body for a while, then back up at me as she stuck out her hand.\n\n\"Hi, I'm Laura's mom Cyndi,\" she said as we shook hands. \"And you must be the famous Johnny.\" She looked down at my body again. \"I must say, you're exactly as she described you.\"\n\n\"Nice to meet you,\" I said. \"And this is my girlfriend Jay.\" They shook hands, too, and we all sat down.\n\n\"I was afraid you might be upset to find us all nude,\" I said.\n\n\"Laura and I don't have secrets,\" she said. \"I've known since day one that you're all nudists, that Laura has been joining you, and that you've never touched her except to put suntan lotion on her back when she asks you to. Although I know that she wishes you would touch her elsewhere.\"\n\n\"Mom!\"\n\n\"Anyway, I don't have a problem with it and neither does her dad, although he refused to come over here himself because he doesn't feel comfortable seeing Laura nude.\"\n\nThat was weird, I thought. He was okay with me seeing Laura nude but afraid of seeing his own daughter. If I had a daughter I suspect she'd be naked all the time like her dad. But I didn't have a daughter, so what did I know?\n\n\"I've been thinking about tanning nude at home,\" Laura said.\n\n\"I'll put 911 on speed dial for your father's heart,\" Cyndi said. Then she looked at me again. \"I don't know the protocol for nudism. But it's hard for me to not stare at your cock. Is that okay with you? Will your girlfriend strangle me if I do?\"\n\nLaura rolled her eyes and groaned, \"Mom.\"\n\n\"Feel free to stare,\" Jay said. \"I know I do.\"\n\n\"It's gorgeous,\" Cyndi said.\n\n\"Oh, my God,\" Laura said under her breath. \n\n\"Sure,\" I said. \"But if you stare at my body I get to stare at yours.\"\n\n\"Except that you can't see as much as I can.\"\n\n\"No. But I know how to fix that,\" I said.\n\nShe blushed. \"I couldn't,\" she said.\n\n\"Really? Why?\"\n\n\"I'd be embarrassed.\"\n\n\"Really? Why?\"\n\nShe stared at me as she thought about it. And thought. It was obvious that the answer was so basic that she couldn't come up with it.\n\n\"Let me help you,\" I said. \"A: you've always worn clothes. B: you've been taught to be ashamed of your body, at least parts of it. C: you've been taught that other people will be shocked if you don't have clothing on when you're with them. D: you've been taught that clothing is your defense against men getting to your naughty bits. Am I missing anything?\"\n\nShe looked at me for a while. \"No, that about covers it,\" she said. I noticed that sweat was beginning to form on her forehead. The sun was doing its usual work.\n\n\"Well, let me divest you of those learnings, out of order. C: we wouldn't be shocked if you got naked. D: having clothes on won't protect you against some men, and being naked is still safe with better men. A: you haven't always worn clothes. When you were a baby, and most likely when you were a child, you were free to run around nude including outside where the sun beat down on your naked body. You didn't know any better at that point; no one had yet beaten the joy of it out of you. B: you have nothing to be ashamed of for several reasons. First, you're fucking gorgeous. And that's an expert opinion, by the way. Second, every woman's body looks basically the same; you're not going to shock anyone by revealing that you have tits and a pussy. We've all seen it before. \"\n\nShe stared at me. \"You're good at this,\" she said. \"It all makes sense.\"\n\n\"Get naked, Mom!\" Laura said.\n\n\"Not this time,\" she said. \"I have to get back to your dad. Maybe next time. Oh, I almost forgot why I came over.\" She looked at me. \"Richard and I are planning a little getaway and we were wondering... we were wondering if you'd be willing to let Laura stay here with you for a few days.\"\n\nI stared at her.\n\n\"I know it's quite an imposition and it's totally okay for you to say no. I was just thinking that she already spends most of the day here, and that she'd enjoy staying here if you wouldn't mind having her.\"\n\n\"It'd be cool,\" Laura said, excited. \"Please, Johnny?\"\n\nI stared at Cyndi. \"I'd be naked most of the time.\"\n\n\"She doesn't seem to have a problem with that.\"\n\nI sighed. I was willing to do this but Cyndi needed to know what she was buying into.\n\n\"I live with two girlfriends. You've met Jay but not Mary Beth.\"\n\n\"I know about that. And that your niece Dawn lives with you, too. I told you: Laura and I don't have any secrets.\"\n\nI'm a very private person but for some reason I needed Cyndi to understand everything. \"Dawn shares our bed,\" I said.\n\nShe stared at me for a moment. \"Ah,\" she said. \"Well, your being willing to tell me that just reinforces my sense that I can trust you.\" She turned to Laura. \"Did you know about that, Sweetie?\"\n\nLaura was looking at me with an expression that I couldn't read. \"Yeah, I'd pretty much figured that out. I've seen them kiss, and it wasn't the usual uncle/niece kind of kiss.\"\n\n\"Has there been sex going on here in front of you?\"\n\n\"No,\" Laura said. \"Dammit.\"\n\n\"You're not afraid that I'll corrupt your daughter?\" I said.\n\nCyndi looked at me. \"I know that you've spent days with her, both of you nude, knowing that she wants you, and you've never so much as touched her. I don't think there's anyone I trust more not to corrupt her.\"\n\nJay spoke up. \"Johnny is the most trustworthy person I know,\" she said. \n\nI looked at Jay. \"What do you think?\"\n\nShe took on what I thought of as the \"Jay is pondering\" expression. \"We have too many rooms. Laura can have one all to herself. We all like her a lot. I'm fine with it, and the other girls will be, too. We can take her shopping!\"\n\n\"Don't spoil her,\" Cyndi said.\n\nJay made a pouty face. \"Just a little, maybe?\" she said.\n\nCyndi laughed. We worked out the logistics. Today was Saturday; Cyndi and Richard would leave on Monday and return the following Sunday. We talked about where they would be going, contact information, a medical release letter, and so on. Money for her board, which Jay and I politely declined. Cyndi agreed to type everything up. \n\nWe talked about ground rules. Laura apparently didn't have many of them.\n\n\"She's a great kid. Very mature and self-directed. You should know that we let her drink at home,\" Cyndi said. \"Wine with dinner, beer sometimes if she wants it. She had a margarita once.\"\n\n\"Twice,\" Laura said.\n\n\"Wow,\" I said. \"She's never gotten into the booze here.\"\n\n\"We took the European approach with her,\" Cyndi said. \"They start their kids on wine and water when they're pretty young. By the time they're teenagers, booze is no big deal. Unlike most kids here in the States who go crazy with it once they can get their hands on it. So feel free to let her drink with you if you're okay with that.\"\n\n\"Okay,\" I said.\n\nCyndi gazed at me for a while. \"And... you shouldn't have to worry so much about how you touch her,\" she said. \"She's gonna be your kid for the next week. You're probably going to have to hug her. And she'll need suntan lotion on more than just her back. And... I hear you give a wicked massage.\"\n\nWow. When Cyndi trusted someone, it was wholehearted. \"We'll see,\" I said. \"I may be trustworthy, but I'm still a male animal. With the typical male reactions.\"\n\n\"We'll keep everything on the straight and narrow,\" Jay said. \"There will always be at least one of us girls here.\"\n\n\"That's that, then,\" Cyndi said as she got up. \"Laura, please be home by six so we can eat and have time to figure out what you need to pack.\"\n\n\"We don't need to pack, Mom,\" Laura said. \"I'm five houses away.\"\n\n\"There's that,\" Cyndi said. \"Okay, I'm off. Thank you so much Johnny, Jay. I'll see you here next Sunday.\"\n\n\"No,\" I said.\n\nShe stared at me.\n\n\"Not unless you're naked.\"\n\nShe continued to stare at me. Then that quirky smile hit her face again.\n\n\"See you here next Sunday,\" she said.\n\n------------------------\n\nI was wearing shorts and a polo shirt in the kitchen making carnitas when Meyer came over on Monday evening. He gazed out the sliding glass door at the six beautiful young naked women in the pool playing Marco Polo. Every once in a while one would cheat and climb out of the pool, water running down her body as she ran to a different part of the pool and jumped back in. Meyer turned to me.\n\n\"Fuck you,\" he said.\n\n\"Why?\" I said.\n\n\"I don't know. Just... fuck you and this fucking thing you have going for you.\"\n\n\"Hey, I'm just a victim here. I can't seem to stop any of it from happening.\"\n\n\"As if you would.\"\n\n\"Georgia not keeping you occupied?\"\n\n\"She gives me all I can take, and then some. That doesn't mean I can't fantasize about your sex life.\" He squinted through the window. \"Speaking of sex, some of those girls seem a bit youngish.\"\n\n\"They are,\" I said. \"Just visiting.\"\n\n\"Meyer!\" Dawn jumped out of the pool and ran towards the house, all dripping water and jiggling tits.\n\n\"Asshole,\" Meyer muttered at me as Dawn opened the door and threw her wet self into Meyer's arms and kissed him. He hugged her, then cupped her ass with one hand as the other hand flipped me the bird. I chuckled as I added a little more orange juice to the carnitas, then put the lid back on.\n\nMeyer moved his hands back up to hug Dawn and she quickly flipped around so that her ass was against his crotch and her breasts filled his hands. He moved his hands away like he'd been burnt and looked at me quickly. I just shook my head and laughed as Dawn grabbed his hands and pressed them back against her tits and wriggled her ass against him. It's a game she'd been playing for the last couple of months. All of my girls loved Meyer. Part of it was that he was loveable. Another part was that I owed him my life.\n\nMeyer gave up the fight and squeezed Dawn's tits lovingly. \"Mmmmm, feels good,\" she said. \"We haven't seen you in forever. Why don't you come over anymore?\"\n\n\"Well, my young lovely, it might sound ironic given that I'm currently molesting your teenage body, but I have a girlfriend.\" He switched to rubbing her nipples, and she giggled. I checked myself for jealousy: nothing. Why could I watch Meyer play with Dawn's body and not feel jealous when the very thought of her doing anything sexual with Thomas Barker made me grind my teeth?\n\n\"Oh, my goodness, what's that I feel behind me?\" Dawn said as she ground her naked ass into Meyer's crotch. Meyer instantly let go of her and backed away. His slacks were tented obscenely.\n\n\"Oh God, I'm so sorry,\" he said, looking back and forth between me and Dawn. Her face changed as she realized that she'd maybe pushed the game too far. She looked at me for help.\n\n\"Meyer, Dawn was just playing. Given how we treat nudity and sex here, the games kind of run that way with the people we love. And... we all love you. So shake it off, big guy.\"\n\n\"I'm faithful,\" he said. \"I'm faithful to Georgia. I am.\"\n\nDawn went to him and wrapped her arms around him again, this time with no game playing. \"Sorry,\" she said. He hugged her back.\n\n\"But it did feel good,\" she said. \"And if Georgia and Johnny would let us, any one of us would be happy to take care of that thing that's poking me.\"\n\nHe started to pull away again but Dawn held on for dear life. \"Johnny is right, Meyer; we all love you.\"\n\nMeyer took a deep breath and let it out. He kissed Dawn on the forehead and let go of her.\n\n\"You don't know how good you have it here, you little yellow bastard,\" he said.\n\n\"Oh, I know,\" I said. \"I do know.\"\n\n--------------------\n\nMeyer stayed for dinner. Georgia was on a business trip to Russia. Such was the nature of our whacko world these days that irrespective of Putin's posturing, our spies and Russia's spies regularly met to drink vodka and swap secrets about other countries. My girls had sent the underage hotties packing and had dried off and come inside. Mary Beth and Jay both hugged Meyer and Laura gravely shook his hand. I convinced them all to go put on some clothes to help keep Meyer's blood pressure down.\n\n\"Killjoy,\" he said as they all walked away, waggling their cute little asses. When they were gone he turned to me and said, \"When are you coming back to work?\"\n\nI sighed. \"I don't know. I just put in for another week off. Laura is staying with us while her parents are off getting to know each other again.\"\n\n\"Why do you have to stay just because Laura's here?\"\n\n\"Would you leave a hot naked 16 year-old to go to work?\" I waggled my eyebrows.\n\nHe stared at me, then shrugged. \"I know you better than that, Johnny.\"\n\n\"Yeah, well... Dawn, Jay, and Mary Beth are talking about driving up to Sonoma for a girls' getaway. Laura is pretty mature but I'm not leaving her home alone.\" I took a sip of my drink, then looked at Meyer. \"The girls are once again trying to talk me into quitting. We don't need the money, they don't like not having me here during the day, and they don't like the danger that goes with the job.\"\n\nMeyer was silent for a while, thinking about it. \"The biggest danger we've run into lately is paper cuts,\" he said. \n\n\"Hard to think about giving it up, but I'm considering it more seriously than when I first got together with Dawn and Mary Beth.\" I sighed. \"We're good together, you and me,\" I said. \"We do it good.\"\n\n\"Nobody better,\" Meyer said, and sipped at his Scotch. \"But you already know that I'm thinking about retirement myself. You're the only thing that's keeping me on the job. If you go, I'm gone too. I think Georgia and I will have enough money to make it.\" He downed the rest of his drink and held the glass up hopefully. I grabbed the bottle and poured him more Highland 25. He raised the glass in salute and drank a bit more.\n\nI thought about money. I could give him enough to make him and Georgia financially secure and able to live high, but Meyer would never accept it. I wondered how I could be sneaky about it.\n\nWe heard peals of laughter coming from my bedroom. Some kind of girls' dressing game going on in there. This should be interesting, I thought. I'd only ever seen Laura in a bathing suit or nude. I wondered what she'd look like in clothes.\n\n\"Maybe I'll take time off while you're gone,\" Meyer said. \"God knows I've got enough vacation time built up. I kind of hate to waste it when Georgia's not here, though.\"\n\n\"Come hang with us,\" I said. \"Summers here are great these days. I have had as many as nine naked young beauties splashing around in this pool.\"\n\nMeyer thought about that. \"Hell of a lot better than television,\" he said. \"But would I have to be naked, too? I don't think anybody wants to see this hairy 50 year-old body, especially not little kiddies. Hell, I have to keep my own eyes closed when I shower.\"\n\n\"It's clothing-optional here, which means it's your option. But you're in great shape, Meyer, and I know my girls will do everything they can to get you nakkie.\"\n\n\"Don't you get jealous, Johnny?\" he said. \"When Dawn was doing what she was doing, and then I did what I did, I was a little afraid that you would pull out your Glock.\"\n\n\"She was just playing,\" I said. \"But I was thinking about that very thing just a while ago. Barker wants Dawn, and she wants him. The thought of them doing anything together drives me crazy. But if Dawn asked me to let her drag you into the bedroom and have her way with you, I'd let her. You're part of our family, Meyer.\"\n\n\"Best be careful what you say, Johnny,\" he said. \"Her boobies felt pretty damned wonderful.\"\n\n\"So, go find her and proposition her,\" I said.\n\nMeyer stared at me. \"Is it because you know I wouldn't try to take her away from you?\"\n\n\"Maybe,\" I said. \"I haven't figured it all out yet. I just know that she drives me crazy in bed, and that she would go out of her way to please you, and that you deserve it. It would make me happy.\"\n\n\"Shit,\" he said. \"Well, I can't anyway. Georgia and I have moved in together, and I'm going to do my best to make it work. I'm pretty sure that doesn't include having sex with a blonde teenager.\"\n\n\"You could ask her,\" I said. \"Or just bring her over here to hang out with us and see what happens.\"\n\n\"Huh,\" he said. \"Maybe I'll do that. Wait: if Dawn and I had sex, would you want to have sex with Georgia?\"\n\n\"Maybe,\" I said. \"Depends on a lot of things, mostly how you felt about it and whether Georgia even wanted to.\"\n\nHe thought about that. \"Strange,\" he said. \"I don't feel jealous either. I should, but I don't.\"\n\n\"Family,\" I said.\n\n\"If nothing else, I won't feel so guilty about feeling up your niece.\"\n\n\"That's good,\" I said. \"Right now, I'm trying to figure out how I'm going to get some sex myself tonight.\"\n\n\"What do you mean?\" he said. \"How is it even possible for you to avoid it?\"\n\n\"Normally it's not possible. But we have Laura with us for the whole week.\"\n\nHe just looked at me.\n\n\"Oh, she'll be in another room,\" I said. \"But Dawn and Jay are both screamers.\"\n\n\"Jesus Christ,\" he said, and drank some more Scotch. \"I can see it in my head. You four in bed together. You are the luckiest little fucker I know.\"\n\n\"Yeah, but it takes heroic endurance and massive sexual prowess to keep it all working,\" I said.\n\nMeyer was about to make some sort of retort when the phone rang. I checked the carnitas and turned off the stove, then picked up my cell phone. No caller ID. I pressed 'talk'.\n\n\"Hello.\"\n\n\"Johnny Dawn?\"\n\nIt's funny. Each time you face death your brain goes into overdrive. Things seem to happen in slow motion and take forever to play out when in reality only seconds or instants go by. This wasn't death, but my brain clicked into ludicrous speed and stopped me from saying \"Wrong number.\" It was some kind of code, or warning. From someone. More laughter came from the bedroom, but in here it suddenly felt deadly serious.\n\n\"Yes,\" I said.\n\n\"Listen very carefully and prepare to take notes,\" the voice said. \n\n\"Okay,\" I said. \"Give me a second. I'm putting you on speakerphone.\" I punched the right button and made a sign to Meyer. He set his Scotch down. I grabbed a pen and some paper.\n\n\"Ready,\" I said.\n\n\"We have Richard Morrison and his wife. They got one phone call and you were it. You work for Morrison Equity?\"\n\n\"That's right,\" I said. I knew from talking to Laura that her dad ran a managed fund that made himself and a lot of other people a lot of money. I had researched it and had been considering putting some of my own money into that fund.\n\n\"What kind of a name is 'Johnny Dawn'? Sounds like a character in a story.\"",
        "\"No need to get nasty,\" I said. \"What do you mean, you've got them?\"\n\n\"I mean that we've kidnapped them for ransom. You get the honor of being the ransomer. You're gonna pay me ten million dollars to get them back.\"\n\n\"You can't be serious. I don't have that kind of money,\" I lied.\n\n\"Not you, asshole. Your company.\"\n\n\"Richard IS the company,\" I said. \n\n\"That's right, he is, and that's why you're gonna pay to get him back. Ten million is chicken feed to you guys. You should be thankful that I'm not asking for more. He'll make it all back in a week. If you pay, that is. If you don't, we're going to chop them up and throw them in the river.\"\n\nI looked at Meyer, who was looking back at me. We both knew that kidnappings rarely ended well, even when the ransom was paid. Kidnappers were too afraid that the victims could identify them, or were just too busy to be bothered with returning them when killing them was so much easier.\n\n\"I need proof that you have them and that they're okay.\"\n\n\"Figured you would,\" he said. There was a brief pause and then Richard Morrison was on the line.\n\n\"Hello, Johnny,\" he said.\n\n\"Hi boss,\" I said. \"How are they treating you?\"\n\n\"So far, so good. I authorize you to pay them,\" he said, knowing that I had absolutely no access to his money.\n\n\"Okay,\" I said. \"Who do I make the check out to?\"\n\nAnother pause, then: \"Real funny, asshole. You've got your proof. Morrison says it will take you three days to turn stocks into cash. You've got one. Write down this account number.\" He spoke some numbers, an ABA bank identifier and an account. \"The money goes there. I'll need it to arrive by midnight tomorrow, please. Or else.\"\n\n\"Got it,\" I said. \"But if I liquidate that much of the fund, the market will know it almost instantly.\" I was guessing here, but it seemed like something a Johnny Dawn would say.\n\n\"That's your problem,\" he said. \n\nI thought fast. \"I'm going to need a phone number,\" I said. \"I'm going to call at random times to make sure that Richard and Cyndi are still okay.\"\n\n\"Sure,\" he said. \"I have throwaway cell phones and after this call we'll never be on long enough for a trace. Oh, and no cops, of course. I'll know if you call the cops in, and if you do it'll be chunks in the river.\"\n\n\"Okay,\" I said. \"Deal. Just don't hurt them.\"\n\n\"Good boy,\" he said. He gave me a cell phone number to call next and hung up.\n\n\"So much for paper cuts,\" Meyer said. \"What are you going to do?\"\n\n\"First, I'm going to call Barker. Then I'm calling Buddy.\"\n\n\"Rescue mission?\"\n\n\"Seek and destroy mission.\"\n\nMeyer sighed. \"I'm in,\" he said.\n\nI dialed Barker's house, still on speakerphone. Tina answered.\n\n\"Hello, stud,\" she said. \"I'm naked and aroused and only 15 minutes away. What are you going to do about it?\" \n\nMeyer rolled his eyes.\n\n\"Tina, I'm in trouble. I need Thomas.\"\n\nShe was instantly all business. \"Wait one,\" she said. \n\nThen: \"Johnny. What's up?\"\n\n\"You know all kinds of people in the electronics world. Do you know anyone who could figure out the location of a cell phone I have the number for?\"\n\nSilence for a while. \"Maybe,\" he said. \"Actually, I'm almost positive I do. Let me make a call and get right back to you.\" He broke the connection. I immediately dialed my friend Buddy Magellas.\n\n\"Impressive,\" Meyer said. \"You did the 'I'll need a number to call' thing so you could track them down.\"\n\nI nodded. \"Best I could come up with on short notice.\"\n\n\"Pretty goddamned good.\"\n\nThe phone rang and as usual Jen answered. \"Hello, lover,\" she said.\n\n\"Really, Johnny?\" Meyer said. \"Is there anyone you haven't fucked?\"\n\n\"Meyer? Good to hear your voice! Haven't seen you in like forever,\" Jen said.\n\n\"Same here, Jen,\" he said.\n\n\"Johnny and I haven't had sex, Meyer. I've tried everything I know to make it happen. I'm starting to think maybe Johnny is gay. He's got some excuse about not wanting to cheat on his buddy Buddy.\"\n\nIn the background I heard, \"You can have her!\" Then a short scuffle and giggles.\n\n\"Backup,\" I said.\n\nThe scuffling stopped. Then Buddy's voice, serious now. \"Talk to me.\"\n\n\"Kidnapping. Friends of mine. They think I'm the money mark.\"\n\n\"Ransom operation?\"\n\n\"Seek and destroy.\"\n\n\"Fuck, you know I'm in, Bro.\"\n\nIn the background I heard, \"Me too, this time, you bastards!\"\n\n\"Yes, you are,\" I said. \"Personal protection detail. They might know where I live. I need you to stay with my women while Buddy and I go hunting.\"\n\n\"Buddy and Meyer and you,\" Meyer said. I looked at him. He hadn't been in the Rangers like Buddy and me, but there was nobody I trusted more to have my back.\n\n\"Right,\" I said.\n\nJen grumbled about her assignment but agreed. She asked if I was willing to pay so she could bring her partner along. I thought about it. He was openly gay, but nobody gave him any shit about it. We had sparred several times and he could almost take me. I had taught him a few things and he picked it up quickly and I wasn't looking forward to our next sparring match. He was also perhaps the best shot with a handgun that I knew.\n\n\"No problem,\" I said. \"As long as he can keep his mouth shut. This is going to be off the books.\"\n\n\"I trust him,\" Jen said. And that was enough for me.\n\n\"I gotta go,\" I said. \"Barker's calling me. I'm hoping he can help me find them.\"\n\n\"Rog, out,\" Buddy said. \"We'll be there in half an hour.\"\n\nI pressed the button. \"Rand,\" I said.\n\n\"I've got your guy,\" Barker said. \"What's it all about?\"\n\nI told him.\n\n\"Well, he's in San Francisco. I can get him and his equipment here within two hours.\" \n\n\"How much will I owe you?\" I said.\n\n\"Shut the fuck up,\" Barker said mildly. \"Anyway, the next time you call them he'll be able to tell what network they're on and which cell tower is handling the call. And when they give you the new cell phone number, as long as it's on the same network it'll register with that cell tower and we'll be able to figure out where it is with pretty good certainty. Smart, the way you set that up.\"\n\n\"I just hope it works,\" I said.\n\n\"It'll work. What else do you need? I don't know how to help you do your job but I do have a big crapload of money.\"\n\nI thought hard. \"Helicopter?\"\n\n\"Done. What else?\"\n\nWe were going to take them in the dark, wandering around on terrain we hadn't scouted. \"Might your friend have night vision goggles, or the kind of headphones that SWAT guys or SEALS wear?\"\n\n\"No, but I know who does. You'll have it by the time the phone equipment gets here. What else?\"\n\nThis was like a candy store for warriors. \"Three silenced handguns. 9 millimeter or bigger.\"\n\nSilence. Then: \"This isn't strictly a police operation, is it Johnny?\"\n\n\"Nope.\"\n\n\"Who was kidnapped?\"\n\n\"Richard Morrison and his wife.\"\n\n\"Richard Morrison, the fund manager?\"\n\n\"That's right.\"\n\n\"Goddammit! They're friends of mine. Guess where a big chunk of my money is invested. Shit. I know a guy who can get you what you need, I think. No records.\"\n\n\"They've gotta be throwaways,\" I said. \n\n\"They will be,\" Barker said.\n\n\"Thanks for all of this.\"\n\n\"Teach me to fight like you and we'll call it even.\"\n\n\"Deal,\" I said. \"One last favor?\"\n\n\"Name it.\"\n\n\"They might know where I live. Would it be okay if my girls and a protection detail stayed with you until this is over?\"\n\n\"That's not a favor. You and your girls are welcome here any time, you know that.\"\n\n\"Thomas, they'll have a 16 year-old girl with them. She's still pretty innocent.\"\n\n\"We'll keep our clothes on.\"\n\n\"You don't have to do that, just keep her away from sex.\"\n\n\"You got it. Bye.\"\n\nI hung up.\n\n\"Good friend to have,\" said Meyer.\n\n\"Yes,\" I said. Very.\" \n\nThis had all happened in a very short period of time. The girls were still in the bedroom, giggling about something or other. \n\n\"I'll have to tell them,\" I said. \"And you have to call Georgia.\"\n\n\"She's better off not knowing.\"\n\n\"No, she's not. If things go bad you might not be coming back to her, or you might wind up in jail.\"\n\nHis eyes widened as he thought it through. This was perhaps the first time that Meyer had ever operated outside of the law.\n\n\"Shit just got real,\" he said.\n\n\"Fuckin' A,\" I said.\n\nWhile Meyer called Georgia I went up to my bedroom to talk to the girls. Dawn, Jay, and Mary Beth hadn't made much progress; they were all still nude. The floor was littered with women's clothing and Laura was twirling around amidst it, modeling one of Jay's little black dresses. Dawn looked at me and the smile instantly left her face.\n\n\"What?\" she said.\n\nI sat them all down on the bed and told them. Their arms went around Laura as she reacted with shock to the news that her parents had been kidnapped. Meyer walked in and sat down.\n\n\"What are you going to do?\" Mary Beth said. \"Are you calling in the troops?\"\n\n\"In a manner of speaking,\" I said. \"The kidnappers said they would know if the police were involved. And that's possible. If that happens, and the kidnappers find out about it, they'll kill Laura's parents. So I'm not involving the police. Buddy, Meyer, and I are going to track them down. Thomas Barker is getting us the equipment to do it.\"\n\n\"What are you going to do when you find them?\" Jay said.\n\n\"Free Laura's parents. Kill everyone else.\"\n\n\"Good,\" said Laura. There were tears streaming down her face. This was perhaps one of the most surreal moments of my life: my three beauties on our bed naked, hugging Laura, who was dressed to kill in a little black dress, while I talked about the possible death of her parents and what I planned to do to their kidnappers, as Meyer looked on.\n\n\"Get dressed,\" I said. \"I'm worried that they might know where I live. Jen's coming over and taking you to Barker's house. You'll ride it out there until it's over.\"\n\nMy girls got up and one by one hugged me and kissed me, then went to Meyer and did the same. Nothing sexual, just an expression of love, and a last connection in case we didn't come back to them. We'd done this too many times for my comfort level. Laura watched them, then stood up and came to me and threw her arms around me and kissed me on the lips.\n\n\"Thank you, Johnny,\" she said. \"Please bring my parents back to me.\"\n\n\"You got it, kid,\" I said. She went to kiss Meyer but he wrapped her in a bear hug and kissed her on the forehead instead. He wiped her tears away and rubbed her back.\n\n\"Johnny's pretty good at this, kid,\" he said. \"You keep your chin up while we're gone.\"\n\nEveryone was dressed and ready to move by the time Buddy and Jen showed up with Jen's partner Robbie. Laura had been overwhelmed with the emotion of the situation and had run to the bathroom to throw up. Dawn was in there helping her.\n\nI shook Robbie's hand and thanked him for coming. \"You know you can't tell anyone about this,\" I said.\n\n\"Tell anyone about what?\"\n\n\"Good deal,\" I said.\n\n\"But as payment, I get to have sex with you.\"\n\nI stared at him. He looked serious, and I knew from past experience that he was attracted to me. It was Jen who cracked up first, and that made Robbie start laughing too. A little joke at my expense.\n\n\"Fuck, Bro, you looked like you were gonna keel over,\" Buddy said, laughing.\n\nI recovered quickly. \"Naw,\" I said. \"I was just evaluating the situation as a value proposition. Anal is out, Robbie, but I think a couple of blow jobs might be in order.\"\n\nHis mouth hung open.\n\n\"I want to see that,\" said Mary Beth.\n\n\"I meant from you,\" I said. \"Robbie can close his eyes and pretend you're Brad Pitt.\"\n\n\"Okay,\" Mary Beth said.\n\n\"Crap, you really know how to turn a joke around,\" said Robbie.\n\nDawn and Laura came in and we cut the sex banter. My girls hugged Robbie while Jen hugged Laura and told her that she could count on me, Buddy, and Meyer. Everybody was telling Laura that. \n\nNo pressure.\n\nBecause of the number of people involved I drove us in Jay's limo to Barker's house. The electronics guy was already there. So were the guns. I shook hands with Barker.\n\n\"That was fast,\" I said.\n\n\"Leased jet to Van Nuys,\" he said. \"Helicopter to Santa Monica. It's waiting for you there.\"\n\n\"I don't know how to thank you.\"\n\n\"Get them,\" he said.\n\n\"Count on it.\"\n\nEverybody met everybody. Jen and Robbie went off to familiarize themselves with the grounds and the alarm system. Tina came to me and gave me a hug. \n\n\"Hi, hero,\" she said.\n\nI hugged her back. She felt good. \"Hi your own self,\" I said.\n\nShe pushed back and looked into my eyes. \"I know we joke about it, but I really do want you.\"\n\n\"I want you too, Tina.\"\n\n\"But it's never going to happen, is it?\"\n\n\"No.\"\n\nShe rolled her eyes. \"Jealousy is a terrible thing,\" she said. \"You two are so liberal... how can you be so jealous, too?\"\n\n\"I don't know.\"\n\n\"Well, you need to work it out. We could all be on the same bed. I could hold hands with Tommy and you could hold hands with Dawn.\"\n\nI pictured it in my head. It might work. Then again, I might kill him.\n\n\"I dunno,\" I said. \"It might destroy the sexual tension between us. Maybe we should concentrate on enjoying that while it lasts. It doesn't happen often the way our mates let us play with anyone we're attracted to.\"\n\n\"True enough,\" she said, and hugged me tightly. \"But my God, the pressure is building. The things I want to do to you, Johnny. The things I want you to do to me.\"\n\nThis wasn't helping my resolve. I reached up to push her away and somehow my hands magically wound up on her tits. She gasped. She was braless under a thin dress and she felt good. Very good.\n\n\"Sorry,\" I said. But I hadn't moved my hands.\n\n\"I'm not,\" she said. \"Keep doing that.\"\n\nI gave her tits a gentle squeeze and then let go. \"I can't,\" I said. \"I have people to kill.\"\n\nShe stared at me. \"You're serious,\" she said.\n\n\"Deadly serious,\" I said. \"They're going to kill that nice couple unless I can find them and kill them first.\"\n\n\"Okay, stud. Get to work. But make sure you bring yourself home safe.\" She kissed me softly on the lips and walked away. I turned and saw Dawn staring at me. Fuck.\n\n\"I'm sorry,\" I said.\n\n\"No need to be,\" she said. \"You want her. I've already told you that you can have her. It would be hot to watch. The thing that's stopping you is in your head.\"\n\n\"Barker and I agreed...\"\n\nShe threw her hands up in the air. \"Jealousy! Do you think me having sex with him would dirty me for life in your eyes?\"\n\n\"No,\" I said.\n\n\"I was coming out to the kitchen and stopped when I heard you tell Meyer to proposition me. Do you really want me to have sex with Meyer?\"\n\n\"No, but it would be okay.\"\n\n\"But not with Thomas.\"\n\n\"No.\"\n\n\"And that's why you won't have sex with Tina?\"\n\n\"Yes. No. Shit. Partly. I know how Thomas feels about her. I couldn't do that to him. It's the same way I feel about you. I would marry you if I could, and send everyone else away and live the rest of my life trying to make you happy.\"\n\nA lone tear rolled down her cheek as she looked at me. \"You would send Mary Beth and Jay packing?\"\n\n\"It would be very hard, but yes.\"\n\n\"As if I'd let you,\" she said as she caressed my cheek. \n\nBarker cleared his throat behind me. I had no idea how long he'd been there.\n\n\"Peter wants to explain the equipment to you,\" he said.\n\n\"Right,\" I said. \"Gotta go, Sweetie.\" I gave Dawn a hug.\n\n\"I love you,\" she whispered in my ear. \"And I always will, no matter what.\"\n\n\"Right back at you, lover,\" I said, and walked away from her.\n\n\"Those two women are trying to wear us down,\" Barker said as we walked.\n\n\"Yep.\"\n\n\"I've got your back, though.\"\n\n\"And I've got yours,\" I said. \"What do you think our chances are?\"\n\nHe stopped. \"Over the long haul? I think we're toast.\"\n\n\"Me too,\" I said. \"I like you a lot. It'll be a shame to have to kill you.\"\n\n\"It'll be a shame to be dead.\"\n\nWe shook hands and walked in to get our equipment briefing.\n\n--------------------\n\nWe were all dressed in black. We kicked Thomas' pilot out and let Buddy fly the chopper. The fewer people who knew about this mission, the better. Buddy was rusty. We lurched all around. I thought Meyer was going to barf.\n\n\"You think you can maybe fly straight?\" I said.\n\n\"Maybe,\" said Buddy. \"I've never flown one of these before. She's a little touchy.\" We were heading inland and really had no idea which way to go yet.\n\nMeyer looked green but he was working the equipment. \"Got the network he called you from,\" he said. \"And the location of the new phone. Buddy, fly one-eight-zero.\" \n\nWe banked right. I stared at Meyer. \n\n\"What?\" he said. \"I watch war movies. He looked at the screen again. \"We're close,\" he said. \"Maybe 50 klicks.\"\n\nI rolled my eyes. \"Klicks?\"\n\n\"Just let me enjoy the moment, asshole, all right?\"\n\nBuddy talked over the radio to someone about intended altitude and heading. He had filed what he called a \"joyride/check flight\" flight plan, meaning that he could go basically anywhere as long as he used the right airspace. We were soon over the mostly dark hills east of Irvine. \n\n\"Getting pretty close,\" Meyer said. I could see only one place on our heading that it could be. It was a big chunk of land and lights were on at the house. Buddy pushed it down hard before we got close enough to alert them. The landing was perfect. We sat there until the rotor noise went away.\n\n\"You should call,\" Meyer said.\n\nI put my cell on speakerphone and dialed. \n\n\"Johnny Dawn! What's happening?\"\n\n\"Let me talk to them.\"\n\n\"How rude. You don't want to talk to me at all?\"\n\nI was silent.\n\n\"Fine. Ron, bring her in here.\"\n\nSilence for a while. Then: \"Johnny? Johnny, please get us out of here. Please help us, Johnny!\"\n\n\"Yes, please help them, Johnny,\" I heard the asshole mimic in the background. There was a scuffle for the phone and then the connection went dead.\n\nMeyer was looking at his equipment. \"That's the place, all right,\" he said.\n\n\"And that was the sound of a woman in serious distress,\" I said. \"I don't know what's happening but it's more than just being held captive. Let's roll.\"\n\nWe put on the radios and checked them. Then I pulled the guns out of a gym bag: NATO 10mm semi-automatics with silencers. I hadn't asked Thomas where they'd come from and he hadn't volunteered the information. Better not to know.\n\nI looked at Buddy. This was going to be tough. \n\n\"You're not coming,\" I said.\n\n\"The fuck?\"\n\n\"You can't come. You're the only one who can fly this thing. You get killed, we're all in seriously deep shit.\"\n\n\"Aww, man, no! Please, Johnny!\"\n\n\"Sorry, Bro. Is what it is. Meyer, you ready? We gotta go. Cyndi sounded bad.\"\n\n\"Ready,\" Meyer said.\n\n\"Fuck, you better come back safe. Or Jen will kick my ass.\"\n\n\"That's the plan,\" I said.\n\n--------------------\n\nMeyer was in pretty good shape. We moved quickly across the dark terrain and made our way to the house we'd seen from the air. We were surrounded by dark farmland. I started worrying about what might have happened to the owners of the farm. We ran up to the front of the house and hunkered by the wall in the dark.\n\n\"Take the back,\" I said. \"I'll go in the front. Shoot anything bad that comes out your way.\"\n\n\"Okay,\" Meyer said, and moved off into the night.\n\nI worked my way across the front of the house and stopped next to an open window. A woman was in there, screaming and fighting. I took a breath and stood up and looked into the room. Cyndi was naked on a bed. A large man was on top of her, thrusting into her. Richard Morrison was on the floor next to them. His arms and legs were bound with plastic ties and his mouth was covered with duct tape. He was fighting to get up to help his wife. He looked like he might be about to have a stroke.\n\nGood call this time, I thought. They were going to kill these two for sure.\n\n\"She feels good,\" the man who was raping Cyndi said. \"Nice and tight. She's gonna make me cum real hard.\"\n\nRichard banged his head into the hardwood floor. I heard him moaning through the duct tape. Cyndi was fighting with everything she had, but the guy was just too big for her.",
        "Gut check. I drew my weapon and aimed it and took a deep breath, then let half of it out. He was trying to kiss her so their heads were right next to each other. But I had my sight picture. I shot through the screen. The silenced gun made a soft coughing sound.\n\nThe rapist's head exploded and Cyndi screamed again. The body was flopping around on top of her and she was covered in blood and brains. I couldn't imagine anything worse. She pushed him away and his body fell to the floor with a thud. Cyndi and Richard both looked at me. I put my finger to my lips in the universal \"Shhh\" signal.\n\nCyndi got off the bed and went to her husband. \"He didn't cum in me,\" she said. \"It's alright, he didn't cum in me, he didn't cum. Baby, it's alright.\" She managed to free his hands and legs and he immediately got up and went to the bed and started beating the dead guy's body. I could only imagine how he felt. \n\nI turned away and made my way to the front door. Behind it I heard a guy yell, \"Ron, you okay in there? She too much for you?\"\n\nShit, I thought. I should have had Cyndi keep screaming. Oh, well; is what it is. I went in through the front door.\n\nThree guys, all wearing guns. I double-tapped two of them but the third guy was fast and pulled his weapon while I was shooting the other two and shot me in the chest just above my bulletproof vest. I went down hard. I couldn't move my arm to bring my gun up. The guy walked over towards me. He was a big fucker. I heard Meyer trying to break down the back door but he'd be too late to help me. The big fucker pointed his gun down at me. I was a dead man.\n\n\"Johnny Dawn?\" he said. \"You come here to play hero?\"\n\nThere was a blur of motion behind him and something hit his head with a sickening crunch and he went down like a sack of flour. Cyndi was standing there like a perfect nude Amazonian woman, holding some kind of statuette. It looked like a cat. Meyer came around the corner, surveyed the scene and lowered his weapon. Cyndi dropped the cat and walked over to me and picked up my gun and turned and shot the big fucker in the face.\n\n\"Good girl,\" I croaked.\n\nMeyer came over to me, pulled off my vest and shirt, and checked the wound.\n\n\"You're bad at this,\" he said.\n\nCyndi was on her knees, crying and trying to kiss me as Meyer felt my body. \"It's high up, not through your lungs. But no exit wound. You're going to need a doctor.\"\n\n\"No doctor,\" I said. \"If this goes on the record, all of us are going down.\"\n\n\"I know a guy,\" Richard said. He moved toward us and hugged his wife from behind. \"You are going to get the best treatment money can buy. And I've got a lot of money.\"\n\n\"There you go,\" said Meyer. \"What do you think about that?\"\n\n\"Fuck, it hurts,\" I said, and passed out.\n\n--------------------\n\nLater they told me that the older couple who owned the house we shot up had been tied up and locked in a storage room and were safe. Had we not intervened, they likely would have been killed along with the Morrisons. Richard's doctor dug the bullet out of me and patched me up and gave me meds. Despite the antibiotics I picked up an infection and a fever. When I finally woke up I was weak as a kitten and the bed was drenched with sweat and I was lying next to a very naked Cyndi.\n\n\"You're awake,\" she said, and drew me to her. My head was lying on her breast and instinct took over and I sucked her nipple into my mouth.\n\n\"Hmmm,\" she said. \"Nice.\" Then louder, \"Girls?\"\n\nMy women came through the door along with Jen, Buddy, Meyer and Richard Morrison. I took my mouth off of his wife's tit.\n\n\"Sorry,\" I said.\n\n\"It's what I'd do,\" Richard said. \"It's good to see you're awake.\"\n\n\"How long have I been out?\"\n\n\"Two days,\" Dawn said.\n\n\"Why is Cyndi in bed with me?\"\n\n\"We've been taking turns,\" Mary Beth said. \"You had a fever and you were shivering. There's always been someone with you.\"\n\n\"Yeah, I feel so much closer to you now,\" Meyer said.\n\n\"Eeww,\" I said. \"Make him stop.\"\n\n\"Oh my goodness,\" Cyndi said. She pushed down the sheet and looked at me. My hard cock was pressed against her leg. She reached down and started stroking it.\n\n\"It's official,\" Jen said. \"He's recovered.\"\n\n\"God, Richard, I don't know what to say,\" I said.\n\n\"Are you fucking kidding me? We owe you everything. If my wife wants to play with you a little, so be it.\"\n\n\"I don't think I have the strength to roll over,\" I said to Cyndi. \"If I did, you might be in trouble.\"\n\n\"I'll take that kind of trouble.\"\n\n\"I need water,\" I said. \"And I gotta pee.\"\n\n\"Good signs,\" said Meyer. He put his arm around Morrison and they and Buddy left the room. I pushed myself up to a sitting position and paused. Then swung my legs out and rested them on the floor and paused again. Then pushed myself up to stand. And passed out. The girls told me later that my head hit the floor with a sickening smack. As soon as I was down I came to again. They were all over me, trying to make me well.\n\n\"I'm okay, I'm okay,\" I said. \"I'm dehydrated.\" I recognized the signs. \"I'll probably pass out again if I stand up. Need water.\"\n\n\"Right here,\" Jay said. She handed me an open bottle and I drank it down.\n\n\"Another,\" I said. She gave it to me and I drank that down too.\n\n\"Bathroom,\" I said. The girls got me up and we moved to the bathroom and I didn't pass out, but I was floating and woozy. Mary Beth pushed up the toilet lid and the seat and Jen and Georgia held me up and Cyndi held my cock.\n\n\"Go,\" she said. And I let loose.\n\n\"God, this is so cool,\" she said. \"I've never done this before.\" Cyndi moved my cock around to aim the spray at various parts of the toilet. Dawn giggled.\n\n\"I'm glad you're having fun,\" I said. I wasn't close to stopping. I didn't think I'd ever peed so much in my life. \n\n\"Oh, I am,\" Cyndi said. She looked at my girls. \"You know that I'm going to have to have him, right?\"\n\n\"Yeah, we'd pretty much figured that,\" said Dawn. \"But what about your husband?\"\n\n\"Nah,\" Cyndi said. \"He's only into women.\"\n\nThe girls cracked up and I finished peeing and I passed out again.\n\n--------------------\n\nMeyer and I turned in our resignations on the same day. My captain gave me hell up one side and down the other. We were responsible for a hugely impressive case clearance rate and he didn't want that to go away. But in the end there was nothing he could do.\n\nHalfway through my two week notice I was summoned to the chief's office. The fucking chief of police. I'd never even met him. The admin led me into his office. Meyer was there. I looked at him and he shrugged his shoulders.\n\n\"So,\" the chief said. \n\nWe said nothing.\n\n\"My two best detectives, partners, and you're quitting at the same time. How come?\"\n\n\"Spend more time with the family, sir,\" I said.\n\n\"Same,\" Meyer said.\n\n\"Ah,\" the chief said. \"Okay. How's the wound healing, Johnny?\"\n\nI stared at him, trying to keep my cool. I'd gone back to work as soon as I was strong enough to stay upright and able to move my arm semi-normally. Nobody knew I'd been shot outside of people I trusted and one doctor.\n\n\"Come again, sir?\"\n\n\"You know, where you were shot rescuing the Morrisons. Healing nicely?\"\n\nI stared at Meyer, who stared back at me, and we both turned to stare at the chief. There was nothing much I could say.\n\n\"I have a bit of a network outside the department, Johnny. You've come up on my radar a couple of times in the past. You seem to believe that you have the right to mete out justice upon those that the system can't reach, and to jump in and help people that the cops can't help, or can't help fast enough. Now you've sucked Meyer into your little game.\"\n\nI said nothing.\n\n\"Did it start when you killed Carlos Santos, or did you do things before that which escaped my attention?\"\n\nI said nothing.\n\n\"And how is your lovely niece? Are you two still having sex?\"\n\n\"Why am I not in jail?\" I said.\n\n\"Because you haven't done anything wrong,\" the chief said. You're rich, but you kept working for me and did a damned fine job. If you stayed here you'd be a deputy chief inside of five years. You've killed people on the side, but only people who needed killing and ones we couldn't get to. You're like this self-guided weapon I get to watch go into action when everything else fails.\n\n\"And I don't care who you sleep with. I haven't seen Dawn but people tell me that you love her and take care of her. That's nobody's business but yours and hers. And your other women's, of course.\"\n\nWas there anything he didn't know?\n\n\"Anyway, your lifestyle is still somewhat tame compared to Mr. Barker's. Oh, speaking of which... Come on in, gentlemen,\" he said. \n\nBarker and Morrison walked into the office.\n\n\"Shit,\" I said. \"I trusted you guys.\"\n\n\"And you should,\" the chief said. \"These men have been my friends for years. Richard has made me quite rich. Thomas has given the department tactical simulation training software that's improved my officers' combat readiness across the board. They've kept me informed of your activities because they knew I'd support you and help you if I could.\"\n\n\"Sorry, Johnny,\" Barker said. \"I had loyalties to the chief before you and I met.\"\n\n\"I understand,\" I said.\n\n\"I owe you my life, and my wife's life,\" Morrison said. \"This is a shitty way to repay you.\"\n\n\"It's okay,\" I said. \"I don't think the chief is going to slap handcuffs on me. But he does still need to make his point.\"\n\nThe chief looked at me. \"True,\" he said. \"I want you to work for me.\"\n\n\"We have been,\" Meyer said.\n\n\"I mean after you leave the department. I want you to convince Buddy Magellas and his wife to quit, too. I think the four of you should open a private security firm, or a private investigation firm, or something that will make a nice cover for what you'll really be doing.\"\n\n\"Which is?\"\n\n\"My weapon of last resort. My long lance. The people who can take over and make justice happen when the department can't, or when the courts fail.\"\n\nI thought about that for a while. \"How often would we be doing this?\"\n\n\"Not often,\" the chief said. \"And of course you could refuse any given case. In fact, I don't want you to think that I'm holding anything over your head and forcing you to say yes. You've already done enough for the city. If you want, I'll take your badges today and you can go on your merry ways and we'll never talk again.\"\n\nI thought some more. A private detective agency would let me keep working with Meyer, as much or as little as we wanted to. And Buddy would go crazy if he didn't have at least a little combat patrol work to do. \n\n\"I'm not sure that Buddy and Jen have enough money for him to quit,\" I said.\n\n\"I have some ideas about that,\" Richard said.\n\nI looked at Meyer. He nodded slightly. I looked back at the chief.\n\n\"Okay,\" I said. \"We're your boys.\"\n\n\"Splendid,\" he said. He pressed a button on his desk. There was a light knock on the door.\n\n\"Come in,\" the chief said, and the door opened and two women rolled in a table covered with huge amounts of food. It looked Jewish deli-ish. Meyer looked like he was going to start drooling. One of the women started pouring red wine.\n\n\"Join me for lunch?\" the chief said.\n\n\"Why not?\" I said. We each grabbed food and wine and sat at the chief's conference table. I selected a Reuben sandwich, potato salad, a pickle, and wine. Meyer had lox and a beer.\n\n\"What shall we talk about?\" the chief said.\n\nRichard looked at me. \"My wife wants to have sex with you,\" he said.\n\nI choked on my Reuben sandwich.\n\nBarker rolled his eyes. \"Welcome to my world, Richard,\" he said.\n\n--------------------\n\nMuch later, we met at Barker's house. My house wasn't really big enough for the whole group, and the whole group had to be in on this. My three girls were there, and Barker's five women, and Meyer and Georgia, and Buddy and Jen, and Richard and Cyndi Morrison. I explained the situation. I told everyone who didn't already know what I'd done to save Dawn, and to stop a child predator, and to save the Morrisons.\n\n\"I'm a killer,\" I said. \"A cold-blooded killer. If anyone here is disgusted by that, I'll understand.\"\n\nDawn hugged me from behind. Tina and Cyndi both got up and walked to where I was sitting. They looked at each other and communicated somehow and then Cyndi bent down and put her arms around me and kissed me deeply. Then she pulled away and Tina took her place and kissed me, too. \n\n\"You're not a murderer,\" Tina said. \"You're an avenging angel. You rush in when all hope is gone and fucking lay waste to the bad guys. You're our best dream and the worst nightmare for anyone who would harm us.\"\n\n\"What she said,\" Cyndi said.\n\nI looked at everyone and saw the same sentiment reflected back at me. \"Okay, then, let me tell you what the LAPD chief has in mind for us.\" And I told them.\n\nBuddy looked at Jen, then back at me. \"We can't both quit,\" he said. \"How would we live?\"\n\n\"You're rich,\" I said. \"You too, Meyer.\"\n\n\"I'm not taking your money, Johnny,\" Meyer said.\n\nI shook my head. \"It's not my money. Well, some of it started as my money. Thomas, Richard, and I each ponied up ten million and put it into... what did you call it again?\"\n\n\"The Stupidly Aggressive Tactical Action Investment Fund,\" Richard said.\n\n\"Anyway, Richard did his magic and quickly turned 30 million into... lots more.\" I turned to Richard and he pulled out his smart phone and fiddled with it.\n\n\"Two hundred and twelve million and change,\" he said.\n\n\"Fuck,\" Buddy said. \n\n\"What's that come to after taxes?\" Jen said.\n\n\"No taxes. We're off the books. I'll show you how,\" Richard said. \"Anyway, that sum now forms the assets of Rand and Associates. And it's still growing.\"\n\nI shook my head. \"Meyer Investigations,\" I said.\n\n\"I like Rand and Associates,\" Meyer said, lifting his beer in salute. \"I'm just along for the ride. I pretty much always have been with you, Johnny.\"\n\n\"How often would you have to take an assignment from the chief?\" Georgia said.\n\n\"I don't know,\" I said. \"Not often. Not at all, if we don't want to. But I'm pretty sure that whatever he wants to hand us, we'll want to take. Meanwhile, in between those assignments we can work as much or as little as we want. It's not like we'll need any income. Of course, we'll have to find something where Buddy can beat people up so he doesn't go stir crazy.\"\n\n\"Fuck you,\" Buddy said.\n\n\"You know he's right,\" Jen said.\n\n\"Yeah, I know,\" Buddy said.\n\n\"Let's celebrate,\" Barker said. \"It's late notice, but I think I can get some pretty good food and wine going here.\"\n\n\"You will need me to cook, Thomas?\" Juana said.\n\n\"Not exactly what I was thinking,\" Thomas said.\n\n--------------------\n\nFive hours later we were eating a dinner created by Geoffrey Zakarian, who just happened to be in Los Angeles and who just happened to be a friend of Thomas Barker. Given the short notice, Zakarian had picked up some two-inch thick aged prime ribeye steaks, coated them simply with olive oil, salt, and pepper, and grilled them. They were delicious, of course.\n\n\"They could be better,\" Zakarian said. \"They're supposed to marinate overnight.\"\n\n\"They taste incredible,\" Jay said. \"Thank you so much.\"\n\n\"My pleasure,\" he said. \"These days I don't often get to just relax and eat with friends.\"\n\nBarker raised his wine glass. \"To the Iron Chef!\"\n\n\"Iron Chef!\" we all repeated.\n\nZakarian raised his glass. \"To friends,\" he said.\n\n\"To friends,\" we echoed.\n\n--------------------\n\nLater that night I made love to my niece Dawn, because I loved her and wanted her, and because I wanted this chapter to stay in the 'Incest/Taboo' section. Jay and Mary Beth were beside us in classic 69 position as I went down on Dawn and she screamed out her pleasure for the fourth time tonight. Mary Beth's talented tongue was doing its work and Jay started screaming, too. I thought the two of them yelling together might break some windows.\n\nThere was a knock at the bedroom door, then it pushed open and Cyndi Morrison walked in. She and Richard had a key to the house now, as did Meyer and Buddy and Barker. She closed the door and started taking off her clothes.\n\n\"Hi, Cyndi!\" Mary Beth said. Jay was still working on her and she was breathing hard.\n\n\"Hi guys,\" Cyndi said. When she was nude she walked over to us and knelt on the bed. \"Hope I'm not intruding.\"\n\nMary Beth started to say something but instead started moaning and the moaning quickly turned into the low wail that told us she was cumming. Cyndi watched her cum, then looked at me.\n\n\"I'm here for you,\" she said. \"I still haven't thanked you for what you did for me.\"\n\n\"And you don't have to, and you never will have to,\" I said. I rolled over onto my back and looked at her. She was gorgeous. My girls were all different but one trait they shared was moderately-sized breasts. Cyndi's tits were huge and natural. Any little movement she made caused them to jiggle like Jello. It was fascinating to watch.\n\nDawn reached down and stroked my erection. \"He's ready for you, Cyndi,\" she said.\n\nCyndi looked down at my cock. \"You're very thick,\" she said. \"This should be fun.\"\n\n\"What about Richard?\" I said. \"I don't like to cheat.\"\n\n\"I have his permission,\" Cyndi said. \"We both occasionally play around on the side, just with our good friends. We love each other very much but we're both very sexual creatures and we actually get off on knowing that the other is getting off with someone else. Richard would be here to watch but he wasn't sure you'd be up for that.\"\n\nCyndi turned to Dawn. \"Is this okay with you?\" she said.\n\n\"You bet,\" Dawn said. \"Take him.\"\n\nMy girls watched and I groaned as Cyndi took me into her mouth. She bobbed up and down for a while but then got back up on her knees and straddled me.\n\n\"Had to do that first,\" she said. \"Been wanting to taste you for a long time. But I want this more.\" And I groaned again as she slowly sank my hard cock into her hot pussy.\n\n\"Oh God, thick, thick, thick. You're fucking thick,\" she said as she finished taking all of me inside of her.\n\n\"It's fun, isn't it?\" Mary Beth said.\n\n\"Fuck, yeah,\" Cyndi said, and she put her hands on my chest and started to move on me. I put my hands on her tits and massaged them while she bounced up and down on my cock. I had been hard for a long time, working Dawn over, and I didn't think I was going to last very long. As it turned out, it didn't matter. Cyndi quickly started gasping and shivering and suddenly tensed up and stopped moving. Her eyes were closed and her mouth was open in a silent scream. She didn't make a sound as she came, but her pussy squirted juices all over my legs and abs.\n\n\"Wow,\" Jay said.\n\nI played with Cyndi's nipples as her orgasm crested and waned, and then wrapped my arms around her as she fell onto my chest.\n\n\"Oh,\" she gasped. \"That was a strong one.\"\n\n\"I could tell,\" I said, and she yelped as I grabbed her ass and started thrusting hard and fast up into her.\n\n\"Gonna cum,\" I told my girls.\n\n\"In her!\" they all said happily. \n\n\"Oh, fuck!\" I yelled as the pleasure started.\n\n\"Oh my God, not again,\" Cyndi said as she went rigid and silent again. My cum shot into her as her juices let loose again. Her face and chest turned red and her body was frozen and her fists were clenched and her mouth was open but she didn't make a sound.\n\n\"Wow,\" Dawn said.\n\nCyndi fell onto my chest again and I stroked her back as she came down from her orgasm. After a while she raised up enough to kiss me. Our tongues did silent battle for a while. \n\n\"Thank you Johnny,\" she said when we were done. \"And thank you, girls.\"\n\n\"Our pleasure,\" Mary Beth said.\n\n\"We have a tradition here that you need to know about,\" I said. Above me I saw Dawn's eyes light up.\n\n\"Tradition?\" Cyndi said.\n\n\"It's easier to just show you,\" I said, and rolled her over onto her back and pulled out of her. Instantly, my girls descended onto her and kissed her and licked her tits and fought each other to suck my cum out of her pussy.",
        "\"Ahhh, shit! But I'm not... I can't... Oh, my God... Oh, FUCK!\" And she was off into another orgasm. Her juices squirted all over Dawn's face. Dawn just clamped down on the right spot and started drinking.\n\n\"Nnnnnnn God fucking dammit shit, shit, shit!!!\" Cyndi yelled, slamming her hands against the bed. \n\n\"I knew we could make her be noisy!\" Jay said.\n\nIt took some time for Cyndi to calm down. When she did, she hugged each of us.\n\n\"Is there any chance we could do this again tomorrow?\" she said.\n\n\"We could do it again tonight,\" Dawn said. \"You don't have to go.\"\n\n\"Yes, I do,\" Cyndi said. \"Richard is waiting for me. I'm going to go home and lovingly fuck his brains out while I tell him about what happened here.\"\n\n\"Are you sure he'll be okay with it?\" I said.\n\n\"Are you kidding? You saved our lives. You killed a man who was raping me when Richard couldn't do a thing to stop it. And I've already told you that we play around a little, only with each other's permission. I wasn't expecting the girl-on-girl action and I've never done that before, but I'm a believer now and hearing about it is going to make Richard cum pretty hard.\" She bent down and sucked my limp cock into her mouth, sucking off our juices. I started hardening in response. \n\n\"The only thing he might not like hearing is that his cock can't hold a candle to yours,\" she said. \"So I think I'll leave that part out.\"\n\n--------------------\n\nLaura and I were lying naked in the backyard, enjoying the summer sun and talking. My girls were in Sonoma, drinking wine and doing God knows what else. Cyndi and Richard were off on another getaway. I was enjoying being rich and jobless. Laura was now a permanent fixture in my house. She was almost as much my kid now as she was Cyndi's and Richard's.\n\n\"Why won't you have sex with me?\" Laura said.\n\n\"Because you're sixteen,\" I said.\n\n\"The age of consent is twelve in Mexico,\" she said.\n\n\"We're not in Mexico.\"\n\n\"We could be, pretty quickly.\"\n\n\"That's not the point. Besides, you're family now.\"\n\n\"Dawn is family, too.\"\n\nI turned to her. \"Can we talk about something else, kiddo?\"\n\n\"Sure,\" she said. \"Can you rub some suntan lotion on my tits?\"\n\n\"No, I can't do that.\"\n\n\"Why not?\"\n\n\"Because it's just a not-so-sneaky attempt to start up some sex.\"\n\n\"Don't you want me, Johnny?\"\n\nFuck. \"Yes, of course I do,\" I said. \"You're young and gorgeous. But we can't.\"\n\n\"Someday?\" she said.\n\n\"Maybe. Maybe in the next chapter. We'll see,\" I said. "
    ],
    "authorname": "chunks",
    "tags": [],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/a-new-dawn-ch-05-3"
}