{
    "title": "The Twelve Zenati Pt. 35",
    "pages": [
        "Authors note: Hello everyone. I worry that sometimes my Australianisms don't always translate to a majority of my readers. So just in case you have never heard the term or relate it to Peter Pan: The Never Never is the name of a vast, remote area of the Australian Outback. In two books, Jeannie Gunn described life in the Never Never of the Northern Territory, including the classic Australian novel We of the Never Never. (Wikipedia)\n\nAgain, I am grateful to MsSensualiTfor her continued help to be my second set of eyes. I hope those of you who enjoy this series continue to do so.\n\n~ellie. \n\n*****\n\nChapter 35\n\nMarcella was everything to Noah. He knew that to tell her that would scare her. Still, in the days, following their arrival at the Zenati family property, he did everything he could to reassure her of that fact without actually overwhelming her with his declarations. She was overwhelmed already by the words of his brothers and their partners. His mother and father had even sought them out and acted quietly proud of everything she had done and accomplished to help them track the man behind all of the table's troubles.\n\nHe brushed back a long lock of blonde hair and leaned down, kissing her cheek before shifting slightly to kiss the corner of her mouth. Marcella looked gorgeous, just how she was at that moment with the early morning light from the window falling softly on her face. Her hair was tangled from sleep and lips slightly parted as she breathed evenly, curled up around one of the feather pillows. Noah kneeled by the edge of the bed to watch her. His gaze traced over the curve of her cheek and the slender column of her neck. The turn of her waist to her hip fascinated him, and his fingers caressed her lightly, drawing a slight sound from her, and he pulled back carefully, eventually standing and pulling his rashie on over his head. He ran a hand through his hair, sighing as he continued to watch her.\n\nKnowing his cousin would be waiting for him, he stepped out of the bedroom, closing the door softly to keep from waking her. The sun was rising, bathing the surf in golden fire. Waves crashed further out from the shore invitingly. Noah smiled as he listened to the welcome sound of the sea and picked up his board, then started down the stairs. It was the second time he and Dominic had snuck out at dawn to surf and renew their strange bond now. It was weird to still be able to read each other's thoughts, but they couldn't do it with anyone else despite what they perceived to be closer relationships with others.\n\nThe two men took the time while in the water to talk about all the information coming in from members of the circle. The noose was getting tighter and tighter for Konrad in the various states. Although their fathers had not been happy about the interference of the other tables at first, once the hunt began in earnest from all of the tables, it became apparent that together the twelve tables were a force no man could overcome alone. This was precisely why Konrad had spent the last decade or more trying to sew dissent amongst the most powerful tables they now realised. So even the elitist Savoys joined their Martino counterparts in hunting for the Varangian guard and its leader Konrad.\n\nAs much as he enjoyed surfing and talking with Dominic, Noah was always eager to return to Marcella. So, he rarely dawdled as he reminded Dominic of what Emma might do if she caught him out on his board already. Returning to the deck an hour or so after he had left, he found Marcella awake. She smiled at him, her cheeks tinted pink as she moved around their kitchen in just one of his shirts. He should tell her not to do that. He should explain that any of his intrusive family could come in and see her, but at that moment, he was stunned and speechless with how happy and relaxed she seemed. He leaned a shoulder against the doorframe as she cooked, watching her silently and noting that she blushed when she became aware that she was the focus of his attention. She finally gave an exasperated laugh, turning to look at him, raising an eyebrow.\n\n\"Was this a favourite shirt or something? I won't get it dirty, don't panic,\" Marcella rolled her eyes. \"Go and shower all that sea salt off you, and I'll make breakfast for us,\" she instructed.\n\nShe could be a domestic goddess when she wanted to be, and he loved it. He moved into the kitchen with her, and he saw her eyes widen just a fraction as he dragged his rashie off, leaving his damp skin glistening in the early light. Those pretty green eyes flicked up to his face as he felt a grin stretch his mouth. He caught her by the waist as she squealed and tried to turn away. He lifted her into the air and onto the counter. She gave a soft gasp as she narrowed her eyes at him, they had both surrendered and erected flags of truce, but that didn't mean their sex life was without some fireworks.\n\n\"Why're you trying to get away from me, Kitten?\" he asked with a grin.\n\n\"Because your salty and need a shower,\" she sighed and licked his neck, screwing up her face at the taste a moment before he kissed her. Her fingers slid up his arms to his shoulders, wrapping around his neck and pulling him closer. He smiled in the kiss, and she pulled back briefly, \"You still taste like seaweed,\" she accused. She was smiling benignly at him, though, showing she had no real fear of him or his seaweed smell. He smiled down at her again and found his hands drifting from her waist up her body.\n\nShe made a slight sound as his hands found her breasts, and he hesitated before giving them a brief squeeze, marvelling at how they fit his hands so perfectly. He continued to massage them through the shirt as he leaned down, pressing another kiss to her mouth and rumbling with appreciation when he heard her let out a soft moan. The pad of his index finger rolled around one stiff nipple through the fabric, and it drew another low sound from her as she tilted her head back, allowing him access to her neck. He gladly accepted, his slightly chapped lips working at her pulse before he slid his tongue up her neck to her earlobe, taking the sensitive lobe between his teeth before kissing the shell of her ear and moaning with need against her.\n\nHe sank to his knees on the floor in front of her, almost as if he intended to worship her. Instead, he gently pulled her thighs apart, and to his pleasure, she wasn't wearing panties under his shirt. He groaned loudly, pulling her forward, so her ass sat just on the edge of the counter.\n\n\"Marcella...coming out here dressed like this...what did you expect me to do?\" Noah questioned softly against the inside of her thigh. He leaned forward, kissing the top of her mound before teasing at her folds with the tip of his tongue. She moaned and leaned her head back, arching her spine awkwardly. He watched silently as he traced up and then back down her folds, teasing around her clit, never directly going over it.\n\nShe was squirming in pleasure as she pushed her fingers through his hair, trying to encourage him as she bit her lip. She'd learned more about what he liked and didn't hold back. Otherwise, she would be threatened with punishment if he thought she was just going through the motions with him. She pushed her hips up towards him as his tongue entirely covered her pussy, drawing more sounds from her. He refused to go near her clit, though, his eyes sparking mischief at her as she groaned her need for release from him.\n\n\"Noah! Why is the door locked? We had that meeting this morning?\" Isaac yelled from the deck.\n\n\"Fuck, give me a minute,\" he grumbled back. They both groaned, but Marcella was instinctively shoving his head closer to herself, and she bit her lip harder when his mouth was forced to her clit. She squirmed as Noah pulled away, practically pouting when he stood up, grumbling as he adjusted his shorts, trying to find some extra room in them but was unsuccessful. She lifted a hand to cover the amused smile gracing her face as he grew petulant now.\n\n\"Oh, you think this is funny?\" he pointed to his tenting shorts. \"Go ahead and laugh, now, but I will be back, and this will need to be continued!\" He glanced down at her and raised a brow as he bent to pick up his rashie, tossing it over his shoulder. He shook his head as he headed towards the shower. \"And put some pants on before you let Isaac in,\" he said grumpily.\n\n\"Next time, don't surf for so long,\" she laughed and pulled on a pair of panties and a skirt before letting Isaac into the house and offering him some of the pancakes she had made for Noah.\n\n\"These are great. Do you put maple syrup in the batter or something?\" Isaac asked.\n\n\"Or something,\" she admitted setting a few in a napkin for Noah to take with him. He had been doing most of the cooking for them, and this had been her attempt to make that up to him. However, she should have known better because he had been in high demand since their return, and she had seen more of his brothers, Olivia and Vivienne, than the man who slept beside her for a few hours every night.\n\n\"Thank you, Kitten,\" Noah said softly, accepting the package of pancakes and kissing her thoroughly before heading out with Isaac.\n\n\"Do you want me to hold those for you?\" Isaac asked Noah.\n\n\"No! You can drive,\" Noah growled at his cousin and cradled his pancake's protectively, not realising Marcella was watching from the deck.\n\nNoah was physically in the meeting and could even concentrate for most of it, but the last few days with Marcella had been idyllic. He didn't have to argue with her or bribe her or trick her or even negotiate seriously to have the close intimate relationship and friendship he had finally found in her. But, of course, they snarked and teased each other, all the time. That was their normal. Still, it was no surprise Noah wanted to spend every moment of every day with her, even when he knew that wasn't possible until they found the madman who stalked her and constantly sabotaged his family and friends.\n\nHe ran a hand over his face and thought he could still smell and taste Marcella. He huffed slightly, settling uncomfortably in his seat and felt a guilty pang settle in his stomach. Here he was thinking about his sexy little Kitten, and all these men were looking to him as they did to Dominic for answers they couldn't see. He spent three hours discussing the latest developments, the entire time his mind wandering back to the amazing woman waiting for him at home. He wondered what she was doing, and several times, his attention had to be called back by his father barking his name.\n\nAfter the meeting finally broke for lunch, Noah didn't bother hanging around for additional questions or pleasantries. Instead, he hurried back to the beach house, intent on seeing Marcella and making up for the interruption this morning.\n\nHe growled lowly, making his way around the house to try and find her, and when he did, he breathed a sigh of relief. She was in shorts and a tank top, working in one of the back spare rooms they'd had fashioned into an office. He'd started to set up a working space for her in a lonely corner of the house, out of view of the visitors if she didn't feel sociable, especially when he wasn't here, she didn't have to be. He had promised he would not have her babysat all day and trust her not to run this time. He had watchers on standby, but Marcella knew that was part and parcel of a table life. He knew the watchers watched him as well.\n\n\"Oh no, you don't,\" she warned Noah when she caught sight of him. \"I am in the middle of something important here.\"\n\n\"So am I,\" Noah murmured and stepped forward, sweeping her up in his arms and grinning down at her, \"Do you have any idea how distracted I was during that meeting?\" He asked her with a slight growl in his voice.\n\nShe laughed and pushed against him, her long blonde tresses bouncing in her struggles as he pulled her up against himself. He leaned one hand against the wall, effectively caging her as he smirked at her. Her eyes danced as she reached out, pinching one of his nipples hard. He yelped in surprise and grunted, dancing back before he noticed her ducking under his arm. He swooped her back up and held her in his arms.\n\n\"So, we're back to battling, are we?\" He chuckled, thinking he could take her up against the wall right here, right now. His gaze grew a touch darker at the thought, and she drew a shaky breath at the unmistakable look.\n\n\"You are a cruel man Noah Zenati, leaving me to finish alone this morning and then expecting me to come to your rescue as soon as you deign to return,\" Marcella accused.\n\n\"Alone?\" Noah groaned. \"Details, I need details before my head explodes with that thought. Her expression turned into a mock scowl, but it looked more like an adorable pout, so he grinned, hiking her higher up on his much taller frame.\n\n\"You've seen it all before. You don't need details,\" Marcella chastised, refusing to give in to any of his requests easily. She had missed their sparring, and he deserved it after abandoning her this morning.\n\n\"Maybe I should just find out on my own,\" Noah said, nodding as he slowly set her back down and caged her against the wall once more, his expression turning hard. Her cheeks darkened as she eyed him cautiously, but remained silent. He felt the corner of his mouth turn up as one of his hands found its way to her waist, pulling her a little closer, \"In fact, you could put on a little show for me and refresh my memory which seems to be failing me, or I could help refresh yours, which might be an even better idea at this stage.\"\n\nShe didn't answer. She lifted her hand to his chest as if she might push him away, but he stood his ground. Her eyes flashed darkly at him from under her lashes, but that only made Noah rumble with appreciation for his feisty Kitten. His hand slid from her waist to under her shirt, stroking over her belly before he worked it into her shorts, sliding down to cup her covered mound. To his surprise, the panties she wore felt like cotton, a little bow on the low-slung piece and some lace for decoration. So simple, cute, and very much nothing like Marcella, the warrior, would typically wear. He smiled slightly as he massaged her mound, wondering if this was Marcie's choice of underwear. He watched her eyelids flutter shut and her lips part as he slipped a finger beneath the fabric to continue the massage.\n\n'Fuck, she was gorgeous like this,' and his fingers danced over her wet pussy before he slid two up against her entrance. Letting out a low, deep-chested growl, Noah leaned forward and kissed her parted lips. His jeans were uncomfortably tight, and he shifted slightly, trying to ease the pressure to no avail. He gave a huff and pushed his hips slightly forward when he felt her hand massaging him through his jeans. He wanted to tell her to undo his jeans and free him from the uncomfortable restraint, but he kept silent, letting her take her time to make the advances on him herself. He groaned when she tried to squeeze him through his jeans, his brows knitting together as he found her clit and once more danced around it. Impatience rode him though, he was still very much in need of her from their early morning play, and he slid his fingers back, teasing at her entrance. Her legs shuddered, and he had to grab her around the waist, pulling her forward onto his finger.\n\n\"Fuck, Marcella, you're all I ever want and need,\" he confessed as she gave a soft cry, her hands now gripping at his arms, and he pulled her closer as he sank onto the soft rug covering the floor, dragging her down with him. \"You're so tight,\" he marvelled, not understanding how that could be after everything he knew she had been through in her life. But there she was, wrapped snug and hot and wet around his fingers. He held her close as he started to move his fingers within her.\n\n\"Noah!\" Marcella gasped, now clinging to the front of his shirt and keeping herself slightly lifted so he had better access. His hand was too big for her tight shorts, but he managed to make room rather than take the time to let her undress, rumbling deeply as he explored her wet pussy. She let out another of those soft sounds as he swirled his thumb around her clit and smiled. What this woman did to him with every look and every sound and touch and ... fuck he needed her, just like this or however he could get her every single day.\n\nMarcella shuddered as he explored, finally rubbing along her G-spot, and then he grinned. He pulled his finger out only to slide another in alongside it. She let out a moan, her eyes rolling back in her head as she started to pant and mewl, her heat warning him of her growing climax. She was moving her hips in an attempt to ride his fingers, and he let her, his other hand dipping into the back of her shorts to grope at her cute ass. She let out another soft cry, her hands fisting in the front of his shirt as he took matters into his own hands and plunged his fingers in and out of her, the heel of his hand rubbing against her sensitive clit. He was so absorbed in the woman he held that he didn't notice the distant yelling of his name. She was panting, clinging to him, and he could see it written all over her face that she was close.\n\n\"Noah! We got a problem!\" he heard his name being called, and it was all he could do not to roar with fury. He clenched his teeth, his hand squeezing her before he went still, the words of his brother breaking through the lust in his brain.\n\n\"Come, now!\" he demanded of Marcella.\n\nMarcella bit her lip hard as he fucked her with his fingers, knowing that they could have another person in the room with them at any moment. She stiffened and arched in his arms, grinding down onto his hand as her orgasm hit. She whimpered, doing her best to hold back the cry of pleasure in her throat.\n\nNoah slowly pulled his fingers out of her, shaking his head slightly. He groaned at the slickness on his fingers and then licked each one, locking his gaze with hers. She watched him with heated eyes. She wanted him to stay and fuck her senseless. Yes, she had managed to get her climax, but she knew he would be more than a little bit frustrated by the second interruption today as she listened to him take a shuddering breath and finally answer the voice that called to him.\n\n\"What?\" Noah yelled, fighting the urge to ball his fist and pound something in pure frustration.\n\n\"There's news, and it's not good,\" Gideon said I his low rumble and Noah could hear the edge to his voice. His expression shut down into near fury before he composed himself.\n\n\"We'll finish this later, Kitten. Just wait for me, this time!\" She nodded in agreement, not trusting her voice as he picked her up from the floor and deposited her back on the chair she had been sitting on before he interrupted her. She had that wide-eyed look again, and he smiled, kissing her again before he walked off with an all too familiar awkward gait.\n\nEven as Noah rode in the cart beside Gideon to the athenaeum, all he could think about was Marcella's slick tightness and the look on her face while she rode his fingers. He wiped a hand across his face, groaning at the strong scent of her. His cock strained in his jeans again, and he considered that keeping her scent close was getting to be a bad habit. He had to clear his thoughts for the moment. Take care of business. Take care of... he groaned and smacked his head against the headrest.\n\n\"You okay there?\" Gideon asked. \"Trouble in paradise?\"\n\n\"More like no trouble in paradise,\" Noah groaned. \"It's never been this good. We aren't arguing or battling for who is right or wrong all the time.\" He glanced back towards the beach house and sighed, \"She consumes my every thought and action. It's fucking amazing, more than I would have believed.\" He smirked slightly at how sappy he sounded. \"I guess you know what I'm talking about,\" he conceded, finding it hard to believe anyone felt the same obsessive need he did for their partner.",
        "\"Yeah, but just wait until they're carrying your baby and then tell me how much you don't want to leave their side. And on that note, I am done being the escort, and I am off to find my beautiful wife and remind her how much I love her,\" Gideon chuckled. \"Go, they're waiting for you.\"\n\n\"Thanks, man,\" Noah stepped out of the cart and clapped his brother on the shoulder, saluting him as he drove off and then turned to enter the athenaeum. He went to where Xavier and Dom sat before a bank of screens with Lucio and Quinto, who seemed to be typing relentlessly on the keyboards in front of them.\n\n\"Good. You're here,\" Xavier waved him over. \"You probably don't know Joshua Donati, but you might remember Phil Sergi from our circle meeting.\"\n\n\"Yeah, Hi Phil, nice to meet you, Josh. Your reputation precedes you,\" he nodded, paying a compliment to the man who held his family together while under the most vicious attack of their era, from the Suebi and, if they were right, the Varangian Guard.\n\n\"Heh, I can only imagine with Dante as your point of contact,\" he chuckled.\n\n\"He has a light-hearted style for delivering serious information, that's true,\" Noah nodded, liking the man on the screen.\n\n\"It wasn't always that way, so I enjoy those moments now, mostly. That's why I'm here, with information. It seems this Varangian leader is trying to sew the seeds of discord between the Sergi and Donati. One of the Sergi family members has made a formal complaint against the Donati for stepping over the border into their territory to take out the Varangian nest we knew about from Marcella. We imagine that's exactly how he planned it, and we followed his playbook exactly as expected,\" Josh said.\n\n\"We've decided to act as if the conflict between our tables is real and ask for arbitration from the Battaglia, where he obviously has contacts to flush them out as well as give him a sense of confidence even though his nests in several states have been eradicated by using the geeks on the dark web to track unidentified flights,\" Phil continued.\n\n\"Okay, I got him back, but I don't know how stable the link is,\" Quinto said excitedly as another screen popped up with a man Noah didn't know.\n\n\"Chase, what's up?\" Phil asked.\n\n\"This patching networks together safely is a pain in my ass, that's what,\" Chase grumbled. \"Larry's here, Josh. He said he'd call you rather than try and tap into the secret network as well from out here.\"\n\n\"Good,\" Josh nodded. \"So, the info we got was good?\"\n\n\"Yeah, it seems they are keeping their staging area in the Outback and using mostly unregistered motorcycles to continue to fly under the radar. It seems the ones we have come across are all heading north to either Mt Isa or across the border to Katherine or a place called Bachelor and the Rum Jungle?\"\n\n\"They are probably thinking we are not looking at the moment because we are busy watching the Donati, so they think north Queensland is safe,\" Phil nodded, \"I'll alert our people out at Mt Isa and Cloncurry.\"\n\n\"Yeah, well, Larry and I agree that only the soldiers are out here on the roads. It seems like all the generals or anyone of importance have gone elsewhere. If I didn't know any better, I'd think they were out here as decoys, or else why wear the Varangian colours and cuts? We are trying to work out where they are, but when we ask about getting paid. We are told to give our details to Kievan Rus. Have you got any idea when Val will get to us?\" Chase asked. \"He's coming from the other direction, so we think he'll have more of a clue than us. Larry saw far more than me on his trip to this rendezvous.\"\n\n\"I'll try and get that info to you in a few hours. We have a lot of dead spots out here for communication relays. We've also got people coming up through the south and west,\" Xavier relayed the information.\n\n\"Alright, keep the tech guys guarding the common link to the tables, and we'll call if anyone has more information, but I think you might be right. He's used decoys to distract us from the real threats before,\" Phil said, taking the lead. \"Josh, you and Tyler Sergi can duel at dawn or something over the border violation. Make it a big enough spectacle to capture Konrad's attention for a moment, and we'll see what falls out. Everyone else, stay safe.\"\n\n\"Talk later,\" Xavier said into the noise of several goodbyes, and the connection winked out. \"Seems like Konrad is carrying on with business as usual,\" he said to Noah. \"If that's the case, he could be coming for Marcella. The only way into this property that doesn't have impenetrable fortifications is the beach and cove. So we have a couple of courses of action here.\"\n\n\"Okay,\" Noah said slowly, not liking where this conversation was going.\n\n\"We can let him think we are the arrogant men he thinks we are and do nothing to enhance our security here,\" Dominic shrugged, \"but be quietly prepared for him to make his move.\"\n\n\"We can put a lot of security around the beach to boost our fortifications and be unsure which way he will come from,\" Xavier offered.\n\n\"We can move Marcella to the safest place in the country, which at this point in time is not with us,\" his Uncle Lucio offered as the final solution.\n\n\"So, there is no good option here?\" Noah asked, and the other men slumped under his glare. \"Well, contrary to popular belief, I don't believe we should decide this for her. It's her decision to make, not mine and certainly not yours. If she wants to be used as bait, I will say nothing but stand by her side, and if she chooses the safe place, I will go with her,\" he sighed. \"You all suck, by the way,\" he huffed a sad chuckle and shook his head, not meaning the words.\n\n*****\n\nThe truth was that Marcella was bored within the first day of being on the property. Even working on silly baby shower games was preferable to the silence and monotony of days spent alone as Noah was called away more and more often. But, of course, she didn't mind that he didn't include her in that. The dithering deliberation of the men of this family only frustrated her, and she trusted now that Noah would tell her everything that concerned her when he returned.\n\nShe was grateful when he set her up with a home office to continue her investigations in the corner of the house where she could remain hidden if she didn't feel sociable. Now that both Olivia and Vivienne had put aside this afternoon to spend with their Zenati brother of choice, and she was here alone after Noah's sudden departure again, she felt restless and horny. Sure, he had gotten her off when he returned, but it wasn't enough after the interruption this morning. She decided that she needed a long walk to get rid of the restless energy she felt. Both she and Noah were respecting each other's rules this time, and it seemed to be working for them, so she picked up her phone and composed a message to let Noah know that she was going for a walk along the beach. By the time she made it down the stairs, she was sure someone would be shadowing her, so she slipped on her surf shoes before making her way down to the sandy track leading to the white sand beach that bordered the cove.\n\nThe sand was hot, and the water was cool. She had her earbuds in and was singing very badly off-key, \"Make lots of noise and kiss lots of boys, or girls if that's what you're into....\" She'd always liked country music since her Aunt Ursula had introduced her to it while they danced around the kitchen singing and cooking together. Only in her aunt's death, the good memories she had from being free of her father and Uncle came forward. Possibly because that time was so short-lived, and more often than not, they lived in fear of reprisals from the two men who should have loved and protected her, not hurt her so badly.\n\n\"Just follow your arrow where ever it points, yeah. Follow your arrow where ever it points....\" Marcella continued to sing. There was a sudden rush of water beside her. Confused, she turned to try and work out what was going on. It took a long moment for her to make sense of the wide jaw and teeth as a salty crocodile rushed forward and snapped its teeth, grazing her ankle as she leapt back. She screamed in fear, falling back onto the sand as the animal twisted its head, rushed forward, snapping at her legs again and connecting with her calf. She scrabbled backwards, digging her hands into the sand, but she was helpless against the slow unrelenting pull on the flesh of her leg where the jaws had connected with her calf muscle. Adrenalin kept her conscious and fighting as she kicked with her other leg aiming for the creature's eyes. The sand and seawater washed over her leg, causing the pain to shear through her, and she screamed louder than she believed possible.\n\nThen suddenly there were guns and men and wresting and more pain as the jaws seemed to give way only to snap back down on her foot before it was free of the teeth, black spots danced before her eyes as she was lifted into someone arms and the person was running back up the beach.\n\n\"Fuck, it hurts!\" she yelled, and her rescuer slowed a little, and the run was less jolting on her leg.\n\n\"I'm sorry, Miss Gambaro, but we need to get you to the clinic as soon as possible,\" the man said through gritted teeth as if holding back swear words of his own.\n\n\"Noah, I need to tell Noah he will panic if I am not home when he gets back,\" she murmured as he took a seat in the cart, still holding her across his lap. Only then, she realised another man had run with them holding her leg and now eased a towel around the bleeding puncture wounds.\n\n\"Someone is on their way to him now,\" the watcher reassured her as the cart rolled forward, making her gasp and grimace with the pain. It wasn't bad. Probably just need a stitch or two. After that, it would be fine, she told herself.\n\n*****\n\nA watchman appeared at the door to the athenaeum, wet and splattered with blood. Each man stood and began barking questions. All Noah heard was \"Marcella\", and he was moving. Another watcher was in a cart waiting for him, and they tore across the grassed paddock in the direction of the clinic.\n\n\"Crocodile in the shallows,\" the watcher said, then shut up and drove. He touched his ear as if listening to something and then spoke again. \"Shari is readying the helicopter, and Helena has called the hospital in Darwin to expect Marcella.\"\n\n\"When the fuck did it happen!\" Noah yelled, more panicked with everything he was being told. He would have gotten out and run if he didn't know that Val had supped-up their carts and they were capable of high speeds even if it didn't feel that way.\n\n\"I don't know, minutes? The others got her to the clinic, and I went straight to you. I can only tell you what's on my feed, but it looked bad when we got her free,\" he admitted.\n\n\"Well, at least you did that right,\" Noah grumbled and got out of the cart before it had stopped and ran into the clinic and the examination room where Helena was examining the wounds on Marcella's legs.\n\n\"Fuck, woman! I leave you alone for a few hours, and you do something this outlandish to get my attention?\" Noah went to her and leaned down, brushing her hair back from her face.\n\n\"Oh, you know me,\" she rolled her eyes at him but hissed and winced as Helen prodded a particularly sensitive spot. \"Just keeping you on your toes, so you don't get bored and start looking at your alternatives that would bring more of a challenge in your life.\"\n\n\"Hurt's pretty bad, huh?\" Noah grinned. \"Knowing I have alternatives.\" He waited for a beat until it looked like she would snark at him before he added, \"Just so we are clear, you have no other alternatives. None. So, I'm it for you, Kitten.\"\n\n\"I don't know. The guy who carried me here from the beach and stayed with me until you arrived was a nice alternative,\" she said offhandedly, making Helena laugh as a throat cleared and the man in question held up his hands in surrender at Noah's glare.\n\n\"While I'm grateful to you for watching her for me and getting her here so fast, I'm afraid you're fired,\" Noah said with a perfectly straight face to the watcher in question. \"See? No alternatives.\"\n\n\"Noah! Oh god, I'm so sorry. He didn't mean that. Tell him you didn't actually fire him after he saved me!\" Marcella demanded.\n\n\"Fine, you're not fired, but you will have to be neutered. Luckily the doctor is here, and we can sort that out as soon as she is finished with my fianc\u00e9's leg,\" Noah conceded with a perfectly straight face. There were several chuckles in the room, and Marcella let a slow smile creep over her face.\n\n\"You know, Noah. The first thing she said was that she had to talk to you, to let you know what happened, which is why one of us went to get you so fast,\" the man offered.\n\n\"Fine, you can keep your balls,\" Noah grumbled but looked at Marcella seriously. \"No alternatives, I mean it. The next one you point out mightn't fare so well.\"\n\n\"But I have to put up with you having alternatives?\" she accused, poking a finger into his chest and hissing again at whatever Helena was doing.\n\n\"You brought it up, not me. I'm not looking for alternatives because I have exactly what I want, and it's been so good between us since we got here. I thought we had moved on from all this trying to give me a heart attack stuff. Instead, I'm going prematurely grey!\" Noah complained, running his fingers through his hair.\n\n\"Ew, I'm sleeping with an old man,\" she wrinkled her nose. \"Are you sure there are no alternatives for me? I mean, Zanto's younger than you, a sweetheart, and you can't fire or neuter him.\"\n\n\"No way, you caused the grey hair. You have to live with it now. There will be no alternatives for you, Kitten,\" then, to stop her from another sassy reply, he kissed her. The relief of finding her alive and barely injured rolling through him like thunder at the end of a hot summer day. Barely was probably the wrong word he acknowledged, but it could have been so much worse.\n\n\"If you could keep your hands and mouth off my patient for a few minutes,\" Helena interrupted them. \"I have cleaned the wounds out as best I could and put temporary stitches in under a local, but we need to get her to a hospital where we can do more thorough scans,\" she explained. \"She's lucky it was only a young one. There would have been a lot more damage if it was an older or bigger salty. So, I'll let you think about that for a few minutes while I talk to Papa. He's in Darwin and waiting for my report.\"\n\n\"I have something for you to consider from the meeting I was at when you pulled this attention-seeking stunt and dragged me away from it,\" he said with a sly smile, still expecting her to lash out at him. Still, the funny Marcie who made him laugh when they had first met when they were caring for a newly discovered Olivia prevailed.\n\n\"Go big or go home,\" she laughed. \"It worked, didn't it?\"\n\n\"Too well,\" he chuckled. \"There are better ways to make me a silver fox than getting eaten by a crocodile,\" he laughed with her. Then stood finding the watcher who had brought her in blocking the doorway and an indignant Olivia telling him to move as Genesis scowled behind her and a moment later, Gideon and Vivienne appearing behind them.\n\n\"I guess we'll talk about that other thing later then,\" Marcella sighed and prepared herself for the onslaught of the people who cared about her while trying to embrace her new reality.\n\n\"Yeah,\" Noah replied and nodded to the watchman to let them in.\n\n*****\n\nMarcella stood and retreated to the bathroom using the crutches Helena had given her once everyone had made sure she was okay, and Noah had been called to yet another meeting. Her wounds were not so bad, but Helena was being careful by insisting she go to a bigger hospital. Today had scared her. She had to admit. It was silly that out of everything she had been through, a crocodile jumping out of the shallows to snap at her was what actually frightened her. She was still a little scared, if she was honest. Not of the crocodile, but of her feelings for Noah now that she acknowledged them as real and something she could have and enjoy for a long time if she could just let herself. She had a heightened awareness of every kiss he'd pressed against her from the moment he walked in, until Helena had bustled everyone out of the treatment room to speak to them about their options. She'd wanted him to stay. To kiss her and hold her more. But she knew he had to take care of the arrangements for their travel to Darwin, now too.\n\nThe man who had literally pulled her from the jaws of death, Ross, had subsequently been promoted and put in charge of not only her security, but Noah's as well. He'd been asked to assemble a team he trusted implicitly to meet them in Darwin. At the same time, she went to the hospital, where Ambrose would take over her treatment and ensure no infection arose from her injuries.\n\nShe stripped slowly and turned on the hot shower. Her bandaged leg was covered in plastic, and it felt awkward and noisy as the water streamed onto the plastic covering. She sighed as she washed down her body. She'd lost more weight, and her curves were now sleek and minimal in their appearance, but there. Her breasts appeared too heavy for her size. She had a cute face, she supposed, though she certainly couldn't find what Noah found so enthralling about her. Especially when she sometimes caught him staring at her in complete fascination. Or early in the mornings, when he thought she was still asleep, and he'd watch her or touch her or kiss her gently. Her heart lurched at these secret loving touches and looks, because she knew he didn't do them for her benefit but because he couldn't help himself. She fought down her urge to flee from the intense emotions like she had been all week and concentrate on what she had to do right here and now.\n\nShe hurried through her shower routine and, with the same awkward slowness, got dressed. Noah had been called away, and she had insisted she could do this on her own. Now though, she wished he was there to help her. It was a strange feeling wanting his help when while it may be awkward, she could do it herself and her warrior would have her not only showering on her own but marching right back to that beach to hunt the crocodile and make a handbag from him. Maybe a belt as well.\n\nThe fact was that since he had come to get her from Adelaide, Noah had been nothing but good to her. Well, after their initial argument, which she could admit she instigated and the interference of Chella, again not exactly his fault. He'd been sweet, thoughtful, funny. Above all, he had been truthful and hidden nothing from her, allowing her to make her own decisions as long as they included remaining under the protection of the tables until Konrad was caught and he knew she would be safe. She knew in reality, if she had have asked Oscar to allow her to stay with her family in Perth, he would have offered her the protection Noah insisted she have. She knew she could have returned to Adelaide to be with her sister if she had have asked Massimo for the same security, and Noah would have let her and followed her.\n\nWhen she came to Darwin, she'd never imagined that finding her sister and taking her home would lead her to someone who would love all her different facets. His dry, sarcastic humour had challenged her at first but, she found it comforting now. If he was making her laugh, there was no threat on the immediate horizon. By the time she finished in the bathroom, her earlier terror was wholly forgotten to be replaced by the desire for him that he'd been stoking all day between interruptions.\n\nHe treated her like the most precious of treasures. Her thoughts turned back to what he'd done to her in the study. She'd seen in the way he looked at her that he had intended to bring her to more than one climax, and she shuddered, anticipating what he would do when they were finally alone again. She wished she didn't have to go to Darwin, Marcella just wanted to go back to the beach house and the dream life she lived there before reality crowded in on her again, and she came face- to-face with the fact that there would never be a happily ever after for her. It wasn't her destiny to have a happy ending. Eaten by a vengeful crocodile is probably closer to the conclusion she would have,\" she gave a small, sad laugh.",
        "\"How's the pain after your shower,\" Helena asked.\n\n\"A few twinges, but the local you gave me seems to be holding up,\" she smiled. \"Umm, how important is it that I go to Darwin? Can't you have the antibiotics or whatever sent to us? You have Zanto here, and he is far sicker than me,\" Marcella reasoned. \"It was just a little crocodile love bite after all. It's not like he chewed off my leg,\" she laughed.\n\n\"It bit you in the sea and the sand, and without knowing what other bacteria covered those teeth, I can't guarantee that you won't get an infection. But, love bite or not, the risk of infection is real, and complications can arise faster than we can account for sometimes,\" Helena explained her decision to send Marcella onto Darwin.\n\n\"I would be a good patient here. The last time you put me in that hospital in Darwin, it didn't work out so well for anyone,\" Marcella said meaningfully. \"Please don't make me go there, I just don't want to go anywhere right now, and I will be good and let you play with my leg every single morning. Twice a day if you wanted!\"\n\n\"Plans have already been made,\" Helena said.\n\n\"Plans can be changed,\" Noah said, coming into the room. \"Have you met my cousin Hector?\" he came to sit beside Marcella on the edge of the bed. \"Tell me what's going on?\" he asked.\n\n\"I don't want to go to Darwin or be in this clinic even. Can't I just go back to the beach house? I will be the perfect patient there and take all the antibiotics in the world if that's what it takes,\" she bargained.\n\n\"Okay,\" Noah agreed, shocking Marcella speechless. \"Maybe not the beach house, but another house rather than a clinic or hospital. Could you handle that?\" he asked his cousins as they watched him.\n\n\"I guess the portable scanner can do the job. The wounds have been cleaned and stitched, and we know Helena would have done a thorough job. Fortunately for us, she doesn't know how to make a mistake. I want to look at her notes and treatment regime before agreeing to this plan of yours, though,\" Hector said.\n\n\"What plan is that?\" Marcella and Helena asked almost in unison.\n\n\"I appreciate that you are very careful with my fianc\u00e9's health, but from the preliminary notes and the damage I saw when I arrived to distract her while you put in the stitches needed, it didn't look so bad. It was a small croc compared to the ones we have seen on the beach or in the streams. I doubt she is in any danger of infection; her tetanus shot is up to date, and the mobile scan will reassure you if you insist on it. There is no need to subject her to a hospital stay when we know that is a trigger for her PTSD,\" Noah pulled no punches as he laid out Marcella's current condition for his cousins.\n\n\"Oh, shit,\" Helena whispered, looking horrified. \"Sorry, Marcie. I guess I do make mistakes,\" she admitted and scowled at the soft chuckle from her brother.\n\n\"Everyone has triggers and phobia's, but they are more like snakes or people chewing loudly, rather than receiving medical attention. So it's not exactly normal, I know,\" Marcella admitted finding it wasn't as hard as usual to admit to the weakness in front of Noah, who knew her well at this stage of their relationship.\n\n\"Noah's right. There is no need for her to go to Darwin except to appease your obsessive need to check every box,\" Hector said. \"Tell you what, you can take the decoy to Darwin, and I will take responsibility for not sending Marcella to the hospital.\"\n\n\"My obsessive need! You will take over my patient! You expect me to go to Darwin with a decoy? A decoy for what pray tell, little brother?\" Helena fired up as her voice rose in anger.\n\n\"Over to you, Noah,\" Hector chuckled and stepped away from his furious sister.\n\nNoah outlined the plans he had hastily made with Xavier, Dom and his brothers. First, Gideon and Genesis would take the girls and two decoys posing as himself and Marcie to Darwin with the new bodyguard he had just appointed. Then, while the eyes of Konrad were on the plane and the hospital, he and Hector would take the woman he loved somewhere safe where no one would even think to look for them until Konrad was dealt with for good.\n\n*****\n\nGideon taxied the plane toward the hanger as Genesis, one of their uncle's, and two cousins reminded everyone of the secrecy of their mission, even amongst the other watchers. They'd asked everyone to surrender their phones until they were at the safe house attached to the clinic, where security was at its tightest. By this evening, it wouldn't matter who knew they had taken off, with decoys on board, and that Noah and Marcella had gone into hiding. No one would be able to track their exit from the gathering with the plan they'd hastily concocted. Hopefully, all eyes would have been on the emergency plane if he had an inside man who told him of the crocodile attack like they assumed.\n\nHis main concern now was keeping Vivienne safe. Both she and Olivia were weak spots for Marcella. He didn't put it past Konrad to use them as pawns in his game, even though Noah pointed out he never did the dirty work himself and had no time to put any of his convoluted tactics in place. Even if he was capable of thinking several moves ahead, there was no way he could have planned for a crocodile bite. Still, if anything happened to Vivienne or his unborn child because of this mad man, he wouldn't be responsible for what he would do to find and catch the bastard.\n\nThey didn't disembark until the plane was in the hangar and the doors closed to anyone who may be watching. Still, the decoys were loaded into a waiting ambulance, and they all left the airport in the convoy down the main drag toward the heart of the city before making their way to the clinic.\n\n\"How are you holding up, Gorgeous?\" Gideon asked Vivienne, pulling her close once they were out of the cars that picked them up at the airport.\n\n\"I know we have just been sitting in a plane for forever, but I can never relax fully on a plane, and I'm worried that Marcie will flip again and kill Noah for isolating her from the people who love her. It's not fair Gideon, we only just got her back,\" Vivienne took a deep breath as her eyes misted. \"I think I will go and lie down and try to think happier thoughts, like the baby shower we started to plan.\"\n\n\"I'll check in with everyone and find out which room we can take,\" he said gently, leaving her with a worried looking Olivia and Genesis for a moment. When he returned, he smiled and held up keys to one of the spare rooms that had been remodelled since the new table had made this clinic their home base. \"You get your old room,\" he tossed Genesis one of the keys he held.\n\nGideon walked with Vivienne to their room and opened the door, letting her in. As usual, she made a beeline to the bathroom. He smiled. She was beginning to show now and becoming more aware of her body as it changed. He loved it, but she just couldn't see it and all the work he had done trying to make her comfortable by showing her how much he desired her body and how hard it made him seemed to crumble away. He did not doubt that she knew it logically, but while they had been so busy recently, sex had been relegated back to the bedroom with the lights out once again.\n\nWhile the drama in their lives was far from over, Gideon decided now was a good time to remind his wife how much he loved every curve on her delectable body, especially those caused by his child. So he took her into his arms and kissed her deeply as they exchanged places in the bathroom, letting her know what he was in the mood for this afternoon.\n\nWhen Gideon came back into the room, he couldn't help but smile. There was his beautiful wife sitting on the bed propped up by pillows. She was rubbing her belly and singing a slow lullaby to the baby. He removed his shoes and jacket, keeping an eye on her. She had changed into comfortable clothes to rest. She was wearing one of his shirts and, as always, sensible underwear. He had never thought sensible cotton tail panties would be a turn on, but this woman was his catnip. He couldn't get enough, not ever. The shirt rode up with her rubbing, partially exposing her belly and did little to disguise her braless soft round breasts. Gideon's cock was so hard as he stared at her, thanking his lucky stars that he had found her and that she loved him back.\n\n\"Stop staring. I'm so swollen and bloated,\" Vivienne said softly, looking away from his heated gaze. \"This, or these can't possibly turn you on,\" she indicated her belly and swollen feet, which had more to do with the constant flying than the pregnancy. She had only just started showing in the last week or two, but she loved her bump even if she had no desire for her husband to see her naked.\n\n\"You are gorgeous, even more so for having my baby in your belly,\" Gideon took a couple of big steps towards Vivienne and knelt by her feet, massaging them with large, strong hands. \"You are the most beautiful mother-to-be.\"\n\nGideon leaned up and kissed Vivienne hard, his hands caressing her breasts. He had had no idea how big they would get, but he looked forward to all the changes this pregnancy would bring them. He rubbed her large nipples she whimpered. Her sex drive was always equal to his since their marriage, and she had been enjoying exploring the many ways they could find pleasure together. Recently, however, she had almost always wanted it with clothes on, in the dark.\n\n\"Gideon, not now,\" Vivienne protested, but Gideon was not giving up. He stood up. His hands fumbled with his pant zipper as his eyes stared into hers. \"I want you right now just like I always want you, Gorgeous. Why not now? You're looking so irresistible in my shirt, even though I just want to take it off you.\"\n\nThe moment Gideon pulled down his pants and boxers, Vivienne smiled. He had no reservations about his body and made no apologies for any faults, not that she could ever see one. She had always loved sex with Gideon, yet at this moment, she was being torn in two directions. She was as aroused as he was, yet she didn't want him to see her naked. Gideon didn't give her a choice as he yanked off her panties and climbed up between her legs, kissing and nibbling to the apex of her thighs.\n\nShe squeaked and widened her legs as she felt him nip at her inner thighs. His first tongue swipe across the lips of her pussy made her body writhe in expectation, and her legs widen further. She felt her pussy pulling apart with her legs, his fingers pulling her further apart and his tongue tantalisingly flutter over her clit and inner core.\n\nGideon wrapped his hands around her hips and held her tightly to him. As his tongue explored her wet pussy, her squeals and whimpers told him of her pleasure.\n\nVivienne's thighs began to shake as he pushed a thick finger into her while flickering his tongue over her clit. She moaned and began rolling her hips. She tried to brace her feet on the bed to slow the shaking that had gripped her legs. However, she could barely control them, and she whimpered loudly, her head spinning as he pumped his fingers in and out of her and sucked on her clit until she howled out her orgasm.\n\nMoving quickly, he climbed on top of her. He lifted her legs high and rammed his cock into her wanting to feel the last ripples of her orgasm around him. He leaned down to kiss her open, gasping mouth, his cock buried deep within her before rising to begin a slow sensual fuck, wanting to make the moments last. Letting her legs go to wrap around his hips, he leaned in to kiss her deeply, sharing the same breath as their bodies moved together. He could feel her thighs begin to shake again as they gripped his hips, and his pace quickened. Kissing her deeply again, he broke the kiss, rose on his arms and began to pound into her hard and fast.\n\nVivienne felt as if her first orgasm never left her, but rather simmered on a low point below her skin, keeping her tingling and on edge. As he began to fuck her harder, she thought she could almost cum again until he stopped and started at a slower, more sensual pace. She wrapped her legs around his hips and reached up to stroke the hair at the nape of his neck as they moved together in unison, her hips rocking to meet his every thrust. The sensations built slowly again as he fucked her until, once again, her legs began to shake, and her body quivered in pleasure. Finally, she saw him rise above her and increase his pace and force, sending her quickly to the edge she tried to hold back. Her head exploded as she came hard, her inner muscles gripping his cock.\n\nGideon was in heaven as the body beneath him shook and writhed, the pressure on his cock milking his orgasm from him. He growled low in contrast to her howl as they both came, and he collapsed on top of her, trying not to crush her as he held her close and kissed her again. Finally, after a few minutes, he rolled off her, but unwilling to break the contact they shared, he pulled her with him to half lay on top of him and wrapped his arms around her.\n\nNeither of them spoke while their breathing slowly returned to normal. Vivienne wanted a drink, but like Gideon was loathed to break the connection, she felt with him at that particular moment. As she listened to his heartbeat, her head resting against his chest. Reluctantly, she lifted her head and went to wiggle free of his arms only to find them wrap tighter around her. He lay back and panted, trying to catch his breath He wanted to stay like this forever, his wife and the new life they had created growing inside her resting against his body as he cradled them to him.\n\n*****\n\n\"Trouble is here. Why ya bring yah white boy troubles to old Whipper? Ya dun visit nuff ta hear Aunty call me fat and lazy since I stop watching yah Trouble bum! Can't be that so what ya doing in mob country, ay?\" a loud voice called out before they had fully stepped from the Jeep they had been in for what seemed like forever to Marcella.\n\n\"Got lost back at the crossroads. There used to be a sign. I guess you haven't any idea how that went missing?\" Noah drawled and turned his head to find the speaker.\n\n\"Shit! You dating a ghost or what? That white girl is whiter than you,\" the voice chuckled.\n\n\"Jealous?\" Noah asked.\n\n\"Shit, yeah. How you get a girl like that she blind or something?\" the voice continued to antagonise Noah.\n\n\"I caught her. She's mine now. Never you mind how I did it,\" Noah shrugged.\n\n\"What he catch ya with, girl? Not that little pink pecker between his legs, O;' Whip know that much!\" The man grimaced and held up his pinky finger, wiggling it around, making Marcella laugh and Noah groan rolling his eyes.\n\n\"He followed me around until I just got used to him being there. Sort of like a stray puppy,\" Marcella said uncertainly but getting the impression that these men were long-time friends.\n\n\"More like a wombat bulldoze you, I bet. He don't stop when he wants something bad nuff. Come, I will walk with ya while he brings the bags, and old Whipp'll tell you a yarn or two 'bout some of the times I saved his life from crocodiles,\" the man walked towards her and wrapped an arm around her shoulders, turning her towards the vast expanse of red desert dotted with scrubby brush. \"Welcome to Kriol country, girl. What does he call ya?\"\n\n\"Marcella,\" she answered, truly enamoured by this man whose eyes twinkled under his hat and above a broad nose and white whiskers that covered the lower half of his face showing his age.\n\n\"Not ya name girl, what does he call ya?\" Whipper indicated Noah.\n\n\"Marcie?\" she asked, not sure of the answer he wanted.\n\n\"Kitten,\" Noah shook his head at Whipper. \"You, however, can call her Marcie, old man and stop flirting with my woman.\"\n\n\"Well, Kitten, it is now my job to keep you and Trouble safe, so just sit back and relax. Ol' Whipper has everything under control,\" he chuckled and winked at Noah. \"It's been too long, boy, but I'm glad ya here now.\"\n\n\"Who else calls you Trouble? I've heard that name before?\" Marcella frowned as she looked over her shoulder at Noah, who had followed them to the house with Hector.\n\n\"Madrina,\" Noah replied in a pained voice.\n\n\"Not just Madrina everyone knew Armando's boys by the same nicknames, and they lived up to the hype,\" Hector teased.\n\n\"True enough,\" Whipper nodded, \"Though it was only Trouble that needed his life saved more than once.\"\n\n\"Gave me lots of first aid practise at the gatherings,\" Hector chuckled.\n\n\"Alright, I think we have established that I did not always make the best choices when I was younger, which is why you two clowns spent the vacations with me. But, of course, this isn't news to Marcella. I already told her most of the stories because that was then, and I am a very safety conscious man now,\" he said. \"I own an adventure company known for its safety record, for shit's sake.\"\n\n\"So, somethin' finally sank in,\" Whipper drawled. \"The fact that you still travel with your doctor cousin tells me not everything stuck in that hard head of yours.\"\n\n\"Hector's here for me,\" Marcella admitted. \"It wasn't exactly my fault, though. I mean, who expects saltwater crocs to be in the surf shallows?\"\n\n\"Wholly shit, they made for each other!\" Whipper laughed. \"We have our work cut out for us now!\" He said to the air encompassing everything and everyone around him as if talking to the gods.\n\n\"Come in outta da sun before ya fry up like bacon on da fire,\" a large woman with an enormous bosom said tersely as they got close to the wide verandah.\n\n\"I see you, Aunty,\" Noah grinned, and the woman stepped into the sun and embraced him fiercely.\n\n\"Ya bringing trouble to my man agen?\" she asked in a scolding tone.\n\n\"He was getting too fat and lazy, so I have come to help you keep him from under your feet and skirts,\" Noah winked.\n\n\"You can stay because you brought the handsome doctor with you and the tiny crazy girl who says she will marry you. There is still time to talk her out, if it?\" Kylie huffed, but a smile played around her lips.\n\n\"Don't even joke about it. It took me too long to get her to say yes,\" Noah huffed back, not even one hundred per cent sure she had said yes since the mock engagement when they were staying at the casino.\n\n\"I'm gonna like you, girl,\" Kylie grinned widely. \"Come, I show ya the house 'fore we go home,\" she offered, turning and leading the way inside, expecting Marcella to follow.\n\n\"This isn't your home?\" Marcella asked, confused.\n\n\"No, Whippers, but he never stay here. He like my place better,\" she said as if it was no big deal that this beautiful country house stood empty and ready for them to take up residence. \"The Doc stay sometimes when he visits, the clinic down that way,\" she pointed to her left.\n\nKylie led Marcella into the house, leaving Noah on the veranda with Whipper as Hector walked in the direction of the clinic, followed by another of the indigenous men who had come out to greet them.\n\n\"Tell me, Trouble,\" Whipper said after he was sure they were alone. \"You did nah bring a drivah for ya spoilt bum. Something bad chasing ya this time.\"\n\n\"Yeah, real bad. I can count on one hand the people outside of my family that I trust with Marcie's life,\" Noah admitted. \"Even the watcher who saved her from the croc is undergoing further checks before I let him near her again.\"\n\n\"So, you come home to old Whipper,\" the man nodded his head and gave Noah a grin. \"You stay here tonight. We have a humpy for you tomorrow.\"\n\n\"You want to know about who chases her?\" Noah asked.\n\n\"He chased ya here. I know enough,\" Whipper shrugged. \"Tonight, ya have a yarn with who ya need ta because tomorrow ya disappear into the Never-Never, understand?\"\n\n\"I understand,\" Noah nodded and followed the women into the house with Whipper at his side.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "crocodile",
        "family",
        "brothers",
        "dominant",
        "submissive"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-35"
}