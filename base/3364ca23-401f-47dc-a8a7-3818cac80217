{
    "title": "I Will Love You Forever Pt. 2 Ch. 07",
    "pages": [
        "Kenji, Patricia and Joel left the office in high spirits. Joel had heard about the program but never thought that he would be able to participate. He wasn't at all surprised that Kenji was selected to participate. In his opinion, Kenji was brilliant but unlike many brilliant people, he knew how to interact with others. That he had been asked to join the group was a pleasant but welcome surprise and that a pretty dark-haired, dark-eyed medical student was in the group made it even better.\n\nThey found the books at the bookstore without a problem and were walking back out into the warm May sunshine in less than fifteen minutes. Patricia glanced over at Kenji and smiled, he was happy which made her happy. She then looked over at Joel, he was happy too. The thin frightened man that they had met at the beginning of the semester was rapidly disappearing and a more confident one was taking his place. He now walked with his head held high and with a spring in his step.\n\nPatricia realized that in many ways, Joel had always been brave even if he didn't realize it. Just the fact that he hadn't cared whether he was seen with them even though it brought him under even more scrutiny by Andrew and his friends spoke volumes. Now there was Miss Penelope Erikson who obviously liked him enough to get Dr. Nichols to take an additional student into the small group.\n\nShe reached over and took Kenji's free hand in hers enjoying the feeling of well being. Kenji looked at her, smiled and gave her hand a gentle squeeze. He was feeling it too.\n\nJoel looked over at the friends that he now considered family and wondered how Penelope would fit into their group. He stopped and reminded himself that it was much too premature to be thinking along those lines. Other than her name, he knew nothing about her other than the fact that he liked her and her bubbly personality. A small part of him urged caution, she didn't know anything about him either and he didn't know how she would feel about going out with a Jewish man.\n\nThe drive home was a happy one with Joel and Kenji planning how they were going to prepare for the classes. Patricia already knew what Kenji would do. He would start reading the textbooks and class schedule as soon as he had a free minute. He wouldn't take time away from her and the family but by the time class had started, he would have quite a bit of the reading done.\n\nShe listened to them as they planned and smiled. The feeling of well being grew. They were all going to be all right.\n\n*********\n\nNick tapped his fingers on his desk as he listened to Will.\n\n\"They have a new warden down there and from what I hear that while he agrees with Goodman to some degree, he's not in his pocket so to speak.\"\n\n\"What happened to the last warden?\" Nick asked.\n\n\"Apparently he was in Goodman's pocket.\" Will replied. \"Goodman was allowed to have what he called bible study meetings whenever he wanted and the protocols for a maximum security prison were waived for him and anyone in his little group.\"\n\n\"What prompted the change though?\" Nick asked his mind working.\n\n\"It wasn't a sudden change if that's what you're asking.\" Will replied, \"But what sped it up was the murder of a guard. Even though the body was found behind the cellblock of the black prisoners, the thinking is that Lawrence Goodman either killed the man himself or had someone do it for him. The problem is there's no apparent motive.\"\n\n\"What do you know about the new warden?\" Nick asked.\n\n\"His name is Theodore Ellis and he's a hard ass.\" Will replied. \"He's Klan all the way but he's a smart one. He believes that the way to control things is through legal channels and not through guerilla warfare although he concedes that it does have its place. Nick, this man is the most dangerous form of the Klan. He'll make them look reasonable and people will buy it. The Lawrence Goodman's of the world are visible; we see them for what they are but Theodore Ellis blends in. His kind is like a virus and if we're not careful every elected office will be infected with his kind.\"\n\n\"How do you think he'll handle Goodman?\"\n\n\"Here's the thing about Ellis, he believes that there are certain people who are off limits from the Klan. Fellow Klansmen, government officials whether they be elected or not and women and children as long as they're white are on that list. My guess is that he's going to make Goodman's life hell and I'll tell you why, he knows even though he can't prove it that Lawrence is responsible for several deaths including Doc Reynolds and the security guard.\n\nHe'll see Lawrence as a threat to the Klan and therefore a wildcard. The way I see it, he's going to do one of two things. Either he'll try to bring Lawrence into the fold and control him or he'll try to find a way to get rid of him... legally of course. If he got rid of him, it would solve a few problems.\"\n\n\"He hasn't signed the divorce papers.\" Nick commented.\n\n\"No he hasn't and it's all about control. He doesn't want Sally but he doesn't want anyone else to have her either.\" Will replied.\n\n\"Maybe you're right, maybe Ellis will take care of the problem for us.\" Nick said. \"How do you know so much about Ellis?\"\n\nThere was a long awkward silence as William squirmed uncomfortably in his chair.\n\n\"He's my cousin on my father's side.\"\n\nNick blew out a breath, \"you're kidding.\"\n\n\"I wish I were.\" Will said. \"Haven't you noticed that I don't talk about my family?\" he asked.\n\n\"Yes but I just thought that you were a private person so I didn't ask.\" Nick replied.\n\n\"I never talk about them because we don't really speak. Let's just call it a difference of opinion and politics.\"\n\n\"I'm sorry.\" Nick said.\n\n\"Don't be, it was a conscious choice on my part and I don't regret the choices that I've made any more than you regret the choices that you've made. At any rate, I agree with you in that we need to have a plan in place in case Lawrence shows up at our doorstep.\"\n\n\"I talked to Kenji a couple of weeks ago so he's aware of the situation.\" Nick said and then paused. He was missing Ralph and his lets not fuck around attitude. \"I think there's a party at Kenji and Patricia's house on Saturday, we'll talk then.\"\n\n***********\n\nLawrence stared in the direction of the warden's office. Ever since his arrival, the warden had made Lawrence's life hell. The bible studies had all but stopped and none other than the warden himself attended the ones that he did have. Mail and packages were scrutinized for weapons before being doled out to the prisoners and no one was allowed out after curfew no matter the reason.\n\nWanting to find out if the warden meant what he said; Lawrence had one of his men commit a minor infraction and made sure that the man was seen doing it. Within minutes after the infraction was discovered, the man was dragged from his cell and disciplined in front of the entire prison population. What got Lawrence's attention was that the punishment exceeded the crime of sneaking food out of the dining room. It wasn't even a lot of food, it was a measly piece of fruit that the man had snuck out and he was sentenced to a day without food in addition to the other punishment.\n\nLawrence started to speak up for the man but when the warden fixed his cold gray eyes on him, Lawrence kept his peace. He was quickly learning that he had to choose his battles carefully and that he had to be ready for anything. \n\nHe tore his gaze from the warden's office and turned it toward the cellblock where the blacks lived. He could see Jacob Lincoln sitting next to another black inmate talking about who knew what. He stared at the man with hatred in his eyes and his heart and wished him dead. As if he knew that he was being watched, Jacob looked up at Lawrence, smiled and then waved at him.\n\n\"How are you this fine day?\" he shouted across the yard and then turned his attention back to the inmate that he had been talking with. He knew that Lawrence wouldn't respond with anything except a glare and he simply didn't care, he wanted to make his presence known. He wanted Lawrence Goodman off balance, angry and afraid.\n\n********\n\nJacob Lincoln couldn't believe it. The man that he held responsible for the deaths of his wife and children was in the same prison! His family was just three more victims that no one had cared about simply because they were black and Lawrence hadn't faced justice for their deaths because he was white and no one could link him to the deaths.\n\nHe only knew of Lawrence's involvement because he found one of the men involved, captured him and tortured him until he told him the names of everyone involved. Whenever he closed his eyes, he could still hear the screams of his wife and children as the house burned with them inside of it.\n\nWhenever he felt guilty about the torture of the man and the subsequent murders that he committed to avenge his family, he remembered their screams and the guilt vanished. He could remember with unerring clarity the night that they died so horribly.\n\nthe strong smell of smoke is what hit him first and then seconds later the screams of panic, terror and pain that grew in volume and intensity the closer he got to home. He was too late. The screams had gone silent and the small wooden house was nothing more than charred ruins. He remembered trying to convince himself that it wasn't real. That he was in the midst of some horrible nightmare so he blinked once, twice, three times before he understood that he was awake and that the scene before him was real and not a dream.\n\nHe went through a period where he blamed himself. If he hadn't started that school, if he hadn't openly urged the people of his race to become as educated as they possibly could, if only he hadn't.....the list went on and on. He even remembered the day that the blame shifted from him to the guilty party.\n\nThat release from guilt came from a very unlikely source. A child.\n\nAfter the fire, Jacob moved in with his brother Elijah who along with others helped him find the charred bodies of his family and bury them. Rage tore through him as he listened to the prayer for their souls and their passage into heaven. The rage grew as the soloist sang \"It is well with my soul\" and then \"His eye is on the sparrow\" both of which were his wife Alice's favorite songs.\n\n\"It isn't well with my soul!\" he thought angrily as the song ended, \"And you weren't watching, you couldn't have been! He silently screamed. Hate that he had never felt in his forty years of life filled him as the tears flowing from his eyes dried up. He knew that to feel such hate was wrong but he didn't care. He would deal with god later.\n\nThree days after the service, Jacob was walking down the street lost in thought and not paying attention to where he was going.\n\n\"Hey nigger! Watch where you're going!\" a small voice yelled at him.\n\nJacob stopped and looked down to see Jimmy Hardin looking at him with undisguised hatred and disgust.\n\n\"I'm sorry, I didn't see you.\" Jacob said and continued on his way.\n\n\"My daddy said that your nigger family squealed like pigs.\" the boy called out.\n\nJacob stopped and then kept walking. That boast removed the blame for the death of his family from him to Joseph Hardin, but he hadn't been alone. In fact, it was Joseph Hardin who was squealing like a pig by the time Jacob was done with him.\n\nBy the time the law caught up with him, Jacob had killed three of the seven men who had been at his home that night. What surprised him and many others was that he wasn't sentenced to hang but had received a sentence of life without the possibility of parole. After giving it careful thought, he decided that there was a reason for why he didn't to die. He didn't know what that reason was but he could wait, he had nothing but time on his hands.\n\nLike everywhere else in the country, Lawrence's trial was big news at the prison. Everyone, whether they were black or white followed the trial with interest. Bets were being taken on the verdict but the consensus was that Lawrence would walk away a free man.\n\nEveryone at the prison was shocked when the jury came back with a verdict of guilty and everyone was even more shocked when the location where Lawrence would serve his term was announced. When he heard the verdict; Jacob didn't react. When he heard where Lawrence was going to serve his time, a big smile broke out on his handsome face. The reason that he was still alive would be arriving soon.\n\nFor several months after Lawrence arrived, Jacob laid low, but not because of fear. He wanted to watch Lawrence. He wanted to see how the murderer of his family carried himself and what he saw angered and disgusted him. What he saw was a man who had other people do his dirty work while he watched. What he saw was a man who was afraid to say and show what he really was even though he supposedly believed that what he was saying was right. In Jacob's eyes, Lawrence Goodman was nothing but a coward who knew how to bullshit people.\n\nGradually, Jacob began to make himself more visible, he wanted Lawrence to see him and become curious about him. And from what he could see, it was working. That he could and probably would die in his attempt to kill Lawrence didn't matter. If he was going to die, he couldn't think of a better reason than the avenging of his family.\n\n*********\n\nSally checked the mail, looking through it twice for the envelope that she was almost sure wouldn't be there. Lawrence had to have received the divorce papers by now and had more than enough time to sign and send them back. With each passing day, the certainty that Lawrence wasn't going to sign the papers grew. She threw the stack of envelopes on the table and sat down undecided about what she should do. She glanced at the phone and thought about calling him but Will had vetoed the idea when she brought it up a week ago.\n\n\"No.\" He said his tone firm. \"I don't want you talking to him and besides you may not be able to anyway. There's a new warden and he's cracking down.\n\n\"What are we supposed to do?\" Sally asked.\n\nWill knew what he wanted to do but didn't say it. He was ready to say the hell with it and take her to bed but he knew that Sally wouldn't go for it. For now, he had to settle for an occasional touch and an even rarer kiss. Everyday he hoped to hear word that the son of a bitch had died in prison therefore freeing Sally to marry him.\n\nTears of frustration and anger rolled down Sally's cheeks as she wished that Lawrence would just do them all a favor and die. A prayer for forgiveness that was only half-sincere promptly followed that wish. She loved Will but not enough to break her wedding vows any more than she already had. The fact that she was in love with another man and had kissed him was already almost more than she could handle. Once again, she prayed for Lawrence's death and prayed for forgiveness for wishing for it.\n\nSuddenly angry, Sally stormed over to the phone and called the prison. Immediately her call was transferred to the warden's office.\n\n\"Warden Ellis, may I help you?\"\n\nSally faltered and was about to hang up when he spoke again.\n\n\"Hello? Mrs. Goodman?\"\n\n\"Y...Yes, never mind, I'm sorry to have disturbed you.\"\n\n\"You didn't disturb me, how can I be of assistance?\" Ellis asked in his best accommodating voice.\n\n\"I was wondering if it was possible for me to speak with my husband.\" she replied.\n\n\"That depends, is there an emergency of some sort?\"\n\n\"No, I just wanted to know if he got the letter that I sent, it isn't important.\" Sally replied regretting that she had called.\n\n\"It must be important if you called, when did you send the letter?\"\n\n\"A month ago... as I said...\"\n\n\"I'll check into it.\" Ellis said interrupting her.\n\n\"Thank you.\" Sally said and hung up.\n\n**********\n\nEllis hung up, stood up and headed to the door of his office. It had been a few days since he'd spoken with Lawrence and reminded him who was boss. Moreover, he was curious about the letter that was so important that his wife called about it. On the way out, he motioned to a couple of guards to follow him. He loved the unannounced visits; it kept everyone the guards included off balance.\n\nHe already had two guards transferred out when he caught them chatting with the prisoners and sharing food from home and another fired for taking money for favors. It had finally sunk in that this was his castle and that he was the king and that anyone who disobeyed him was in deep shit.\n\nEllis strode through the yard and to the cellblock where Lawrence lived intent on intimidating him. The guards stood straighter, not one of them announced his arrival, and that was how he wanted it. Within minutes, he was standing in front of Lawrence's cell that now looked like any other cell. The writing desk was gone along with the lamp and chair plus he now had a cellmate.\n\n\"Good evening Goodman.\" Ellis said amiably.\n\n\"Good evening.\" Lawrence replied warily as he wondered what prompted this unexpected visit.\n\n\"I got a rather concerned phone call from your wife.\" Ellis said. \"It seems that you haven't replied to a letter that she sent you.\"\n\n\"I just haven't taken the time to reply.\" Lawrence replied wondering why Ellis was concerned about a letter that was none of his business.\n\n\"She said that she sent it a month ago, that's more than an adequate amount of time to reply even though it came from California.\" Ellis replied.\n\nLawrence bit his tongue; he was being baited.\n\n\"Show me the letter.\" Ellis demanded.\n\n\"Why? It's personal.\" Lawrence said knowing that he was stepping onto thin ice.\n\n\"This is prison and nothing is personal.\" Ellis said in an icy tone. \"The letter.\"\n\nLawrence thought to object but thought better of it, after all, what could Ellis do? Make him sign the papers? In addition, he would have his cell searched until he found it anyway. It was easier to give Ellis what he wanted and hoped that he would go on his way.\n\nLawrence dug the envelope from under the thin mattress and handed it to Ellis who looked at it curiously before opening it.\n\n\"A petition for divorce.\" he said after reading all of the pages of the document including the letter from Sally. \"No wonder you haven't responded but I see her point and even agree with her when she says that you have no marriage. Sign the papers and put her out of her misery.\"\n\nLawrence stared, \"You can't be serious! You can't make me do this! This is a private matter!\"\n\nEllis raised his eyebrows but said nothing for several seconds.\n\n\"You will sign the papers and relieve your wife of the burden of claiming you as her husband. You have disgraced her enough now sign the papers or do you need help?\"\n\nLawrence looked around and saw that he and the warden were alone; he hadn't seen his cellmate or the guards leave. There would be no witnesses to the conversation or the thinly veiled threat and even if there were who would talk? With a shaking hand, he took the offered pen and signed the document.\n\n\"Good.\" Ellis said taking his pen back. \"I'm sure that Mrs. Goodman will be relieved to have heard from you.\"\n\nWithout saying anything further, Ellis left the cell. Lawrence watched him leave still not quite believing what had just happened. Later when he had recovered from his shock, he added Theodore Ellis to his list of people that he wanted to visit. In fact, his death would take precedence over the death of the nigger. Maybe if he played his cards right, he could pin it on the black man. Maybe he could make it look like the nigger did it.\n\nAnother thing had become clear to him; he had to escape. He didn't have everything planned out but he would just have to improvise but before he left... two were going to die. He would have Duke find out which of his men was going on parole first and then send that man to California to pave the way for his visit.\n\n********\n\nNancy was still angry with Becca and hadn't spoken to her in almost a week. If her uncle and aunt noticed, they didn't comment on it but then again, they were so involved in their ministry. ",
        "\"Just imagine all of the men we could save while they're incarcerated!\" her aunt Rhoda gushed that morning at breakfast.\n\n\"Yes Lord!\" her uncle Leroy exclaimed.\n\n\"Are you set for the first bible study?\" Rhoda asked as she poured Leroy and then herself another cup of coffee.\n\nBecca only half listened, the only thing that she cared about was that she didn't have to go. She kept staring at the clock; Robbie was due to pick her up in an hour for a picnic. \"Maybe today.\" she thought to herself. She couldn't remember the last time that she had gone so long without a cock. She tried to pleasure herself but sharing a bedroom made it almost impossible and there was usually someone around.\n\nAs soon as breakfast was over, Becca packed a picnic lunch with the help of her aunt Rhoda who took it upon herself to step into the role of mother.\n\n\"I'm so glad that you're making friends and that Robbie is such a nice boy! But be careful. This isn't California....\"\n\n\"So everyone keeps reminding me.\" Becca said cutting her aunt off. \n\n\"I'm just saying that you have to be careful of ....\"\n\n\"Aunt Rhoda, I get it, can we just drop it?\"\n\nRhoda huffed but let the subject drop. She knew all about Becca's type, years ago she had been Becca. It took being saved and the love of a good man to turn her around. It was her hope that the same thing would happen to Becca and just maybe Robbie would be the one to bring her around and into the church.\n\nRhoda was well aware of Nancy's feelings toward Robbie but truth be told, she never thought them a good match. Whenever Nancy mooned over him, she had just listened with a sympathetic ear and made suggestions about other boys that she considered more Nancy's type. She also noticed the tension between the cousins but hadn't intervened choosing to let them work it out between themselves. But it had been about a week and the girls still weren't talking. She decided to give it a few more days and if they hadn't resolved their differences, she would intervene.\n\nBecca heard the knock on the door and knew that Robbie had arrived. She ignored Nancy's glare and ran down the stairs not wanting to keep him waiting. She heard her telling her aunt that they would be going to the creek just behind the church for the picnic.\n\n\"That sounds so nice!\" Rhoda gushed making Becca roll her eyes.\n\n\"Hi Robbie!\" she said interrupting any further conversation between her aunt and Robbie.\n\n\"Hi Becca, don't you look nice?\" Robbie said when he saw her. \"Are you ready to go?\"\n\nFifteen minutes later they were parked at the church and sitting by the creek. It occurred to Becca that she hadn't thought about home and Andrew for several days instead thinking about the next time she would see Robbie. \n\nAfter lunch, she sat by the creek with her toes skimming the water. Robbie was sitting next to her with his feet completely immersed in the cool water neither of them speaking.\n\n\"Becca?\"\n\n\"Yes?\" she replied hoping that he was going to ask her for permission to kiss her.\n\n\"Why do you think you have to act like a slut?\"\n\n\"Wh...what?\" she asked shocked.\n\n\"You're a very beautiful woman and you don't have to act like that.\" he said.\n\n\"I don't....\"\n\n\"I've wanted to talk to you about it but didn't know you well enough to say anything so I've been trying to get to know you.\"\n\nBecca was speechless. This wasn't a conversation that she thought that she'd ever have with a man. All she could do was stare at him shocked and listen as he talked.\n\n\"We've been out three times and each time you make some comment about what you can do for me. I don't know....\"\n\n\"If you're going to say that this isn't California save it!\" Becca snapped as she stood up.\n\n\"Becca wait... I wasn't trying to hurt your feelings.\" Robbie said.\n\n\"I'm surprised that you even want to be seen with the slut!\" She retorted.\n\n\"I didn't say that you were a slut, I said that you act like one.\" Robbie said standing next to her and touching her arm in a purely platonic way. He looked at her and then moved his hand as if he understood for the first time that Becca had feelings for him, feelings that he didn't return.\n\nHis sole interest in her was friendship and he could easily see how she would have thought otherwise. \n\n\"Becca, I'm sorry.\"\n\n\"Take me home.\" Becca said and walked to the car. She understood. Robbie had used her to get another star in his crown for saving a heathen.\n\nRobbie threw the remainder of their lunch into the basket and ran to his car where Becca sat waiting with her arms crossed over her chest and looking out of the window not looking at him when he called her name. She had nothing to say to him.\n\nWhen they arrived at the house, Becca jumped out of the car and ran into the house without a backwards glance. A feeling of d\u00e9j\u00e0 vu hit her as she slammed the door shut behind her. The last time she had seen Andrew it was like this with the big difference being Robbie hadn't threatened her with bodily harm.\n\n\"Shit!\" she swore as the door banged shut. She didn't want anyone to know that she was home. It was a minute or two before she realized that no one was home. She ran up the stairs, into the bedroom and slammed the door shut behind her. Tears ran down her face as she pulled her suitcase out and began to pack. She was going home no matter what her father said. Facing the people at home was preferable to having to face Robbie and again and having to come up with an explanation for Nancy as to why she and Robbie were no longer seeing each other. She counted the money in her wallet pleased to see that she had more than enough money to get her home if she took the bus as opposed to the train although the bus would take her longer. \n\nShe called a cab, wrote a note explaining where she was going and waited for the taxi to arrive.\n\n*******************\n\nThe day of the cook out had finally arrived. Patricia was both anxious and excited. This outing would be the first time that she and Kenji were invited anywhere socially as a couple or separately. She stirred the bowl of homemade potato salad that consisted of a recipe that she and Ralph had concocted together, covered it and put it in the refrigerator to chill.\n\nShe backed up into Kenji and yelped. \"How do you do that?\" she asked laughing. \n\n\"There is no secret.\" Kenji replied hugging her, \"you were so intent on what you were doing and didn't hear me.\" he replied. \"Are you nervous?\"\n\n\"Yes.\" she replied, \"Are you?\"\n\nA small smile played on his lips as he admitted that he was. He had been thinking the same thing that she had been.\n\n\"Kirei do you realize that this is our first social invitation?\" he asked hugging her tighter.\n\n\"I realize that, why do you think I'm so nervous?\" she replied returning the hug. \"I'm really proud of you.\"\n\n\"Thank you kirei and I am proud of you.\"\n\n\"Patricia?\" Hattie called from the living room, \"we're here!\"\n\n\"We're in the kitchen mama!\" Patricia called back.\n\nHattie went into the kitchen followed by John and hugged both her and Kenji.\n\n\"Where are the babies?\" she asked.\n\nPatricia smiled; proud of the way her parents were coming in their studies. She had started teaching them to read and write months ago. John had been resistant at first but Hattie had joined the cause and seemed to enjoy it so he joined in.\n\n\"They're in the back yard with Joel.\" Patricia replied.\n\nHattie and John went to the back yard to see Joel and the children. Kenji and Patricia went to the window to watch the children greet their grandparents. She watched as her father picked Marie up, kiss, hug her, and then do the same with Ralph. She noticed with sadness that neither of her parents moved as quickly as they used to and neither did Abby for that matter. She said a silent prayer that all three of them would live long enough to see her, Kenji and Joel graduate from college and then medical school.\n\nTaking her hand, Kenji led her out to the back yard. The neighbors now used to seeing them usually spoke if they saw them. That the conversations didn't go beyond hello didn't matter, saying 'hello' was a start.\n\n\"You be good for gramma and grampa.\" Patricia said when it was time for them to leave. Kenji got the bowl of potato salad and reiterated the instructions that they were to behave. The instructions were meant more for Marie than Ralph, as she was becoming stronger willed and prone to do as she wanted.\n\nWhen Patricia mentioned that to Kenji smiled at her.\n\n\"What?\" Patricia demanded not seeing the humor.\n\n\"Kirei, she is her mother's daughter.\" Kenji replied still smiling at her.\n\n\"I am not... Oh.\" Patricia replied when she saw Kenji's raised eyebrow.\n\nAt last moment, Kenji sat the bowl of potato salad down and called Marie to him.\n\n\"Come here pretty one.\" he said softly taking her hand when she reached him. He bent down to eye level and pulled the girl into his arms.\n\n\"Will you do something for me?\" he asked.\n\n\"Yes papa.\"\n\n\"Will you help gramma Hattie by being a good girl?\"\n\n\"Yes papa.\" Marie replied solemnly.\n\n\"Good.\" Kenji replied kissing her on her cheek.\n\nRalph stood back watching and approached only when he knew that Kenji was done with Marie.\n\n\"I'll be good too.\" he said quietly.\n\n\"Thank you Ralph.\" Kenji said hugging the boy. \"Is there something else?\" Kenji asked.\n\n\"Will I go to school too?\"\n\n\"Yes you will and soon.\" Kenji replied wondering what had prompted the question. Ralph's schooling was a topic that had come up several times but they had yet to make a decision on whether to go with home schooling or sending him to school although both of them were leaning toward sending him to school.\n\n\"He will need the contact with other children.\" Kenji told Patricia during one of their last conversations. Patricia agreed but was worried about how Ralph's treatment by not just the students but also the teachers. \"We will deal with that if and when it happens.\" Kenji told her.\n\n\"We will talk about school soon but for now, will you please help care for your sister?\"\n\n\"Yes papa.\" Ralph replied.\n\n\"Thank you Ralph.\" Kenji said hugging him.\n\n**********\n\nPatricia twisted her hands anxiously. Her anxiety grew the closer to Dr. Nichols' house they got. \n\n\"Kirei, it will be fine.\" Kenji replied not showing any of the nervousness that he showed earlier.\n\n\"I hope that you're right.\" she replied and looked back at Joel who was looking as nervous as she was.\n\n\"There it is.\" Kenji said as he pulled up to the address on written on a slip of paper. \n\nHe parked in front of a large home that had palm trees in the front yard and looked at the house. They sat there for a few minutes not wanting to be the first ones to arrive but Kenji's innate hatred of lateness prevailed.\n\nPenny answered the doorbell and ushered them in.\n\n\"Good! You're the first ones here and you passed the first test.,\" she said as she took the bowl of potato salad from Joel.\n\n\"Excuse me?\" Joel asked.\n\n\"Dr. Nichols hates lateness and this was your first test. If you're going to be late you'd better have a damned good reason for it.\" Penny said. \"Come on, the kitchen is this way.\"\n\nA short round man who could have been anywhere in age from forty to sixty was at the kitchen sink cutting up fruit when they got to the kitchen. He washed and dried his hands before turning to greet them.\n\n\"Welcome all of you!\" He said shaking Patricia's hand first, then Kenji and Joel's. \"I am so pleased that you came and that you're going to be a part of my summer group. Joel, I hope that you don't feel like an afterthought, I'm sure that Penny told you that you were on the list but I could only take six or so I thought and as it turned out, one of the original six dropped the program already.\"\n\n\"Thank you for giving me the opportunity to join the class.\" Joel replied.\n\nHe turned to Patricia and gave her a warm sunny smile. \"I hear that you're an excellent student as well, maybe in a few years you'll be going through my class too.\"\n\n\"I hope so.\" Patricia replied her nervousness disappearing.\n\n\"And you young man.\" Nichols said turning to Kenji, \"I have heard great things about you. Paul Mynt swears by you and he is a hard man to please but your grades alone made you a prime candidate for this program and I am very pleased that you accepted the invitation.\"\n\n\"Thank you for inviting me.\" Kenji replied with a slight bow.\n\n\"Can I help you with something?\" Patricia asked.\n\n\"Oh no my dear, it's finished. All we need is for everyone else to come with their dishes.\" Nichols replied with a cheerful grin. However, Patricia could tell that he was indeed irked that no one else had arrived. \"Let's go out back shall we?\" He said as he picked up the bowl of fresh fruit.\n\n\"I'll stay here and get the door.\" Penny said.\n\n\"I'll wait with you.\" Patricia said. She had the feeling that Nichols wanted to talk to Kenji and Joel alone.\n\nThe next guest arrived fifteen minutes later with a cake. Patricia was surprised that Penny didn't say anything about the lateness but then surmised that it would be addressed on the first day of class. After handing Penny the cake, the student handed his jacket to Patricia.\n\n\"Hang that up will you?\" he said without really looking at her.\n\n\"Excuse me.\" Penny said her tone terse. \"But she isn't a servant but a guest. This is Patricia Takeda wife of one of our classmates and you are?\"\n\n\"Oh shit... I mean... I'm sorry.\" the student stammered. \"I'm Barry Lavender and I am so sorry!\" he said taking his jacket back from Patricia, his face a bright red.\n\nOne more student made the same mistake, one didn't acknowledge Patricia at all and the remaining one spoke to her before Penny had a chance to introduce her.\n\n\"Their all finally here.\" Penny said taking Patricia by the arm. \"Can you grab the potato salad while I grab the lemonade?\" Penny asked.\n\nOnly the student who wouldn't acknowledge Patricia showed any displeasure at her presence but later in the evening she would find out that it just wasn't her presence but Penny's as well that had him scowling. Penny and Patricia both heard the comments made by Russell Cook.\n\n\"What in the hell is this world coming to?\" he grumbled to Clark Wilson the student who had introduced himself to Patricia.\n\n\"I'm sorry but is there a problem?\" Clark asked.\n\n\"You don't see the problem?\" Russell asked.\n\n\"I'm sorry but I don't.\"\n\n\"First of all, there's a black woman here or do they prefer to be called Negroes? Then there's a woman occupying a spot that should have gone to a man! What in the fuck is that all about?\" Russell asked.\n\nClark didn't know how to respond so he said nothing at first.\n\n\"And then we have a Jap taking another spot that should have gone to one of ours.\" Russell continued.\n\n\"By one of ours I'm assuming that you mean a medical student? Because if that's what you meant then Mr. Takeda is exactly where he belongs. A word of advice if I may.\" Clark said. \"I would advise you to keep your views to yourself. I'm sure that you heard about the professor who lost his job for some of the views that you've just expressed and for the record, I think it's great that women are getting into the medical field as doctors and it's about time we put aside our prejudices.\"\n\n\"You sound as if you approve of all of this.\" Russell said.\n\n\"It sounds that way because I do approve now, if you will excuse me.\" Clark said and walked away. He wanted nothing to do with the likes of Russell Cook.\n\nRussell stared after him, turned around and saw Patricia and Penny looking at him. With a sinking heart, he realized that they had probably heard the entire conversation with the other student. He wanted to make a smart assed reply but bit his tongue and walked away. He spent the rest of the evening wondering whether he was going to be asked to leave the home and the program. By the end of the evening, he decided that Clark was right. He had to keep his views to himself at least until he was done with school.\n\n********\n\nJoel kept watching Penny hoping for a chance to catch her alone. His chance didn't come until the evening was almost over.\n\n\"Hello.\" he said shyly.\n\n\"Hi! Did you have a good time?\"\n\n\"Yes,\" Joel replied, \"and thank you for talking to Dr. Nichols about allowing me to join the group.\" he added.\n\n\"You're welcome; I'm glad that it worked out.\" Penny replied as she walked around picking up dirty dishes.\n\nJoel swallowed hard, his mouth dry, \"would you... I mean could I take you to lunch or dinner sometime?\"\n\nHe waited for what seemed to be forever before she answered.\n\n\"I would like that.\" she replied with a sunny smile that made Joel's heart skip a beat. \"You have my number call me.\"\n\n\"Ok, Penny? You know that I'm Jewish right?\"\n\n\"Yes I know is that a problem?\" she asked not really seeing why he brought it up.\n\n\"No! I mean no.\" he replied. \"I just know that some people....\"\n\n\"Joel I'm not most people and if you change your mind about wanting to have lunch with me that's fine but it won't be fine if you think it's because I care about your religious beliefs. I don't care about that any more than I care that Kenji is Japanese and Patricia is black.\"\n\n\"Thank you.\" Joel said softly. \"Is tomorrow too soon?\"\n\nPenny laughed at his eagerness, \"Tomorrow is fine. I'll write down my address when I get into the house.\"\n\nAn hour later, they were on the way home. Patricia debated whether to say anything to Kenji about his classmate and decided to wait. The afternoon and evening had been so pleasant that she didn't want to ruin it by talking about something unpleasant. Instead, she turned to Joel.\n\n\"So what were you and Penny talking about?\"\n\nJoel told them about his conversation with Penny.\n\n\"So we're going to have lunch tomorrow.\"\n\n\"Joel that's wonderful!\" Patricia exclaimed, \"We're not going anywhere so you can use the car if you want.\"\n\n\"Thanks.\"\n\n\"Congratulations Joel, both Patricia and I like her.\" Kenji said.\n\nLater that night when they were in bed, Kenji cuddled Patricia close.\n\n\"It is really happening.\" he said kissing her head. \"In less than four years I will be a physician and you will be starting medical school.\"\n\nPatricia hesitated and then spoke. \"I've been thinking about Ralph and what happened to him.\"\n\n\"I miss him too.\" Kenji replied.\n\n\"Kenji, I want to know if there was anything more that we could have done to help him. I want to know what caused the stroke and if there's anyway to prevent them. I don't know if it's possible but I think that I want to go into neurology.\"\n\nKenji waited for her to finish.\n\n\"I know that you've been planning on us practicing together and its not that I don't want that but... do you understand?\" she asked exasperated that she wasn't stating her position clearly.\n\n\"Kirei you know that I want you to do whatever makes you happy.\" he said. \"And yes I would love to work with you and maybe we still can. Children have neurological issues too so why not do both? The question is whether it is possible and if it isn't now, it may be later.\"\n\n\"You don't mind?\" Patricia asked her voice filled with excitement.\n\n\"Kirei, if you told me that you wanted to be a brain surgeon, you would have my support.\" Kenji replied.\n\nPatricia kissed his cheek and then his lips as her hand slid under the sheet to stroke his cock, which hardened as soon as she touched it.\n\nKenji moaned into her mouth and pulled her tighter against him. He skimmed her back with his fingertips lingering on the sensitive spots like the base of her spine until she wiggled against him. Then in one smooth move, his body was covering hers and he was looking down at her. \"You are so kirei- beautiful.\" he murmured as she kissed her and slid inside of her.\n\nPatricia gasped and then moaned at the painstakingly slow way that he moved inside of her. She closed her eyes and forced herself not to move. They could last a long time if she could keep still and if Kenji didn't kiss her neck. As if reading her mind, he did just that and then gently nipped at the spot that he had just kissed.",
        "\"Kenji.\" she breathed, \"if you keep that up I won't.... \"\n\nKenji ignored her and kissed her neck again as he moved faster within her. Patricia began to move against him hurrying the orgasm that a few minutes ago had been on the horizon.\n\nKenji sealed his lips to her neck and gently sucked sending Patricia screaming over the edge with him not far behind.\n\nAfterwards, they held each other tightly and fell asleep confident that they were well on their way.\n\n*********\n\nThe next morning Joel showered, washed his hair until it squeaked, shaved and changed his clothes three times. Abby listened to him muttering to himself and laughed. Whoever this girl was, she had to be something special. She had never seen Joel as animated as he was when he came home the night before. She loved the smile on his face and realized that it had been far too long in coming.\n\nFinally, he came out of his room, stood in front of Abby and asked her opinion.\n\n\"I think that you look very handsome!\" she exclaimed with a smile.\n\n\"Are you sure that I look alright?\" Joel asked nervously. \"Would the blue shirt be better?\"\n\n\"Relax! You look fine.\" Abby assured him.\n\n\"Are you sure that it's alright if I use your car? I can take the bus or...\"\n\n\"Joel,\" Abby interrupted \"it's fine and if I need anything Patricia and Kenji are home and Nick and Hana are coming over later. Now get going before you're late and have a good time.\"\n\nJoel gave Abby a nervous smile and then went over to her, hugged her and kissed her on the cheek.\n\n\"Thank you.\" he whispered against her ear.\n\n\"Your welcome.\" Abby replied patting his back. She had come to love Joel as she had come to love Kenji and Patricia; he was now one of her children. When he left, she took out a pen and paper and wrote a letter that included additional instructions to her attorney. \n\nShe still felt relatively healthy, but after Ralph, she was taking no chances. She could plan all she wanted to attend the graduations of her three children but she knew that things didn't always work out as planned. She looked at the clock; Nick and Hana were due in about an hour. She wondered what was happening; she heard the underlying worry in Nick's otherwise cheerful voice. When Lawrence Goodman's name popped into her head, she involuntarily shuddered.\n\n*********************\n\nJoel made it to Penny's house with ten minutes to spare. In his nervousness, he had gotten lost and had to ask for directions to get himself back on track. He sat outside in the car for the full ten minutes before going to her door and ringing the doorbell.\n\nSomeone who wasn't Penny opened the door, looked him up and down before inviting him in.\n\n\"I'm Sandra one of Penny's roommates and best friend, she'll be ready in just a minute, care to sit down?\"\n\nJoel sat on the sofa and placed his hands in his lap as Sandra assessed him.\n\n\"So you're the one that she's so excited about.\" she commented as she lit a cigarette. \"She hasn't shut up about you since she met you.\"\n\nThe revelation both pleased and surprised Joel and made him blush.\n\n\"Hi Joel!\" Penny said as she walked into the living room. \"I see that you met my best friend and roommate Sandra.\"\n\n\"He's cute.\" Sandra said as she got up, \"I like him.\"\n\nJoel then understood what happened, he had to meet the roommate first and get her approval.\n\n\"I guess you passed.\" Penny said confirming his suspicions. \"Where to?\"\n\nThey went to a coffee shop that sold sandwiches as well as pastries, found a quiet corner and settled in to talk.\n\nJoel found out that Penny was the youngest of four and that she was the only girl. Her mother was a homemaker and her father a librarian. Two of her brothers served in the armed forces in the Pacific and both had come back unscathed.\n\n\"That was a really scary time for us.\" she said. \"I can't imagine what it would have felt like if one or both of them had been killed.\"\n\nHe also found out that she had always wanted to be a doctor. It surprised him to learn that she didn't have the support of her mother but the full support of her father. The more she talked the more enthralled Joel became with her.\n\n\"What about you?\" she asked. \"Where is your family?\"\n\n\"There isn't much to tell.\" Joel replied. \"I was an only child and we came here years before the war. My parent's owned a deli/grocery store that I sold several months after they died. Like you, I have always wanted to be a doctor but my parents had other plans for me. They thought that I would run the store and it took a while before they realized that I wasn't interested.\"\n\n\"Did you.... Did you lose people in those camps?\" Penny asked.\n\nJoel's hands trembled as he picked up his cup of coffee. Word of the first of his family to die in Auschwitz had been the beginning of the end for his parents. He had memories of his parents trying to get family to come to the states long before the war started and being unsuccessful. When Hitler began his rise to power, they tried again and failed. By the time his parents died, many of his relatives were gone. If there were any left, he didn't know but he hoped to go back to Germany someday and find out.\n\n\"Joel, I'm so sorry.\" Penny said softly.\n\n\"Thanks.\" Joel replied. Until now, he had never talked about his losses not even to Kenji and Patricia. He knew that they would have listened but they had so much going on in their own lives that he didn't want to bother them. Then there was the fact that Kenji had lost people during the bombings of Hiroshima and Nagasaki. Abby had just lost Ralph and was still grieving although she was better and Nick and Hana he didn't know well enough to talk about something so personal.\n\n\"You've never talked about it have you?\" Penny asked. \"Oh god, I'm sorry! I didn't mean to pry. You hardly know me and I'm asking for your life story.\"\n\n\"It's alright.\" Joel replied.\n\n\"No it isn't.\" she said, \"I really am sorry. I don't always think before I talk.\"\n\n\"Penny, really, it's alright.\" Joel assured her.\n\n\"Have you thought about a field yet?\" Penny asked changing the subject.\n\n\"I'm leaning toward obstetrics.\" Joel replied, \"What about you?\"\n\n\"I'm thinking either pediatrics or obstetrics... can I ask you another question? And please feel free to tell me that it's none of my business.\"\n\n\"Sure.\" Joel replied.\n\n\"How did you, Patricia and Kenji get to be friends?\"\n\n\"What you really want to know is how a Jew, a black woman and a Japanese man managed to form such a close friendship.\" Joel said.\n\n\"That's a crass way of putting it but yes.\"\n\nJoel told Penny about the first time he met Kenji and how the friendship progressed. An hour later, he was finished.\n\n\"They are more than my friends, they're my family and I would do anything for them.\"\n\n\"I can see that and I think that they feel the same way about you... were you in love with her? Patricia I mean.\"\n\nJoel's face burned telling Penny all that she needed to know.\n\n\"Don't be embarrassed.\" she told Joel taking his hand in hers. \"What's not to love? She's kind, compassionate, smart and let's not forget very pretty.\"\n\n\"So are you.\" Joel blurted out. \"And I won't lie and tell you that I didn't have feelings for her but I don't now at least not the romantic kind. And even if I did, I would never act on them, she's the wife of my best friend and I would never do anything to jeopardize that friendship.\"\n\n\"Joel, I know that and apparently so does Kenji. But even if you had tried to come between them, I have the feeling that it wouldn't have worked. God, the way they look at each other....I forgot to mention that I'm a hopeless romantic.\" she said with an uncharacteristic embarrassed grin.\n\n\"I happen to like romantics\" Joel replied as he realized that he was still holding onto Penny's hand.\n\nHe took her home and walked her to the door not sure of what was supposed to happen next.\n\n\"I had a really nice time today.\" Penny said.\n\n\"I ... I did too, could we do it again sometime?\" Joel asked his hands in his pockets with the fingers crossed.\n\n\"I didn't scare you off?\" Penny teased.\n\n\"No you didn't scare me off and I would like to see you again.\" Joel said feeling a little more confident.\n\n\"I would like that.\" Penny replied.\n\nThey stood on the steps looking at each other until Penny stood on her tiptoes and kissed Joel on the cheek.\n\n\"Goodnight Joel and thank you.\" she said before she went into the house.\n\nJoel touched the cheek that had Penny kissed and wondered if he hadn't just fallen in love.\n\n*********\n\nBecca slumped in the bus seat; she was hot and sweaty. She would have killed for a shower. She had several more hours before she reached L.A. and she still hadn't called her parents to let them know that she was on her way home. She was certain that they already knew; she had included where she was going in the note that she left for her aunt and uncle. \n\nShe had a variety of seat mates on the long trip back some bothersome and some not. The nicest one was a man who was from South Carolina who was toward L.A. The man still sat next to her and began to act as her protector whenever she was propositioned at the rest stops. \n\nIt wasn't too long before they were on a first name basis and sharing meals. He made Becca feel so safe that she began sharing information about herself and her family that was better not shared.\n\n\"So your daddy, he owns his own business?\" Tyrone Morgan asked.\n\n\"Yes, he's an accountant.\" Becca replied missing the cold calculating gleam in Tyrone's eyes.\n\n\"That's good money I hear.\" he replied still not quite believing his luck when he found out that Becca was headed to L.A. and actually lived there.\n\n\"I guess... I wouldn't know.\"\n\n'I mean you're going to college and it's all paid for, that means he must be doing pretty well.\" Tyrone said as he tried to figure out how to get a job with Becca's father. \"Do you know if he needs any help? I'm not an accountant but I know how to enter numbers.\"\n\nThen he waited hoping that she would take the bait. When she didn't, he did the one thing that he hadn't done yet, he appealed to her vanity.\n\n\"You never did tell me why a beautiful woman such as yourself is traveling alone.\"\n\n\"I left South Carolina suddenly.\" Becca replied not offering any explanations.\n\nTyrone let the topic drop and changed subjects only to return to one about her.\n\n\"I suppose that you have a boyfriend?\"\n\n\"Not any more.\" Becca replied looking into dark brown eyes.\n\n\"Now I don't believe that!\" Tyrone exclaimed.\n\n\"It's true, no boyfriend,\" Becca replied.\n\n\"Well then, I guess I can ask you out for dinner once I get settled and find a job.\" Tyrone said throwing the bait again.\n\n\"You're coming all the way to California with no job?\" Becca asked.\n\nTyrone bit his tongue, what he wanted to say was \"You stupid bitch why do you think I asked if your old man needed help?\" but instead he said. \"Foolish I know but I've always wanted to come west but that was why I was asking if your father needed help in his office, hell, I'll even take out the trash and mops the floors.\"\n\nSomething about the dark eyed, dark haired man attracted Becca. That he was a good ten years older than she was didn't matter but there was an air of intrigue and danger about him and he in no way reminded her of Andrew and Robbie. She thought that she was looking at a real man and not a boy.\n\n\"I can ask him when I get home, but how will I reach you?\" she asked.\n\n\"Give me your number and I'll call you in a couple of days.\" Tyrone replied.\n\nHe grinned as Becca scrounged around in her purse for a pencil and a piece of paper. This had gone so much better than he thought it would. Meeting the bitch sitting next to him had been a stroke of good luck. All that he had to do was to ingratiate himself with her family. He stole a look at Becca's breasts and licked his lips, he had been without a woman for far too long and if he played his cards right, Miss. Becca Cartwright would end that dry spell.\n\n**********\n\nMonday afternoon Sally went to the mailbox as usual. It had been an almost a week since she spoke to the warden at the prison and she decided not to tell Will about it. All that telling him would do was make him angry and she really didn't care to hear it...\n\nShe took the stack of envelopes out of the mailbox and started sifting through them as she walked up to the house. She stopped when she got to the one with the return address of the prison. She rushed into the house, threw the other envelopes on the couch and sat down still holding the envelope from the prison in her shaking hands. \n\nFinally, she carefully opened the envelope, took the contents out and closed her eyes. She knew what they were but the question was; were they signed? Sally slowly opened her eyes and looked through the papers until she came to the one that should have had Lawrence's signature on it.\n\n\"Please God.\" Sally murmured as her gaze went to the bottom of the page. Her eyes filled with tears as she saw Lawrence's neat strong handwriting at the bottom of the page. Tear drops fell on the pages as she cried tears of relief. She was no longer married to a man who taught hate and murder. \n\nShe was still sitting on the couch when Will came home.\n\n\"Sally? Honey what's wrong?\" he asked.\n\nShe handed him the papers without speaking and remained silent as he read the forms. While he was happy, he wondered what had prompted Lawrence to sign the papers after all of this time.\n\n\"I wonder why he changed his mind.\" Will asked sitting down next to her.\n\n\"Will, I did something that you asked me not to.\" Sally said not looking at him.\n\nWill stopped looking at the papers and looked at her, waiting for her to continue.\n\n\"I called the prison and asked to talk to Lawrence. I wanted to know why he wouldn't sign the papers and I was going to beg him to do it if I had to.\"\n\n\"Did you talk to him?\" Will asked.\n\n\"No but I spoke with the warden. He said that he would call me back but he never did so I thought that he just said it to be nice.\"\n\n\"You talked to Warden Ellis?\" Will asked.\n\n\"Yes, he seemed very nice.\"\n\n\"Theodore Ellis is many things and nice isn't one of them unless he wants something. Did he ask you for any favors or imply that you owed him something?\" Will asked.\n\n\"No... Will what's wrong?\" Sally asked.\n\n\"Sally, Theodore Ellis is my cousin and a Klansman. He got Lawrence to sign these papers I'm sure of it, the question is why.\"\n\n\"Call him and ask him.\" Sally suggested. \n\n\"I haven't spoken to him in years.\" Will replied. \"As a matter of fact, I haven't spoken to anyone from my family in quite some time because of our differences in politics.\"\n\n\"Does it matter why he did it?\" Sally asked. \"We can get married....\"\n\n\"I have to find out what he wants.\" Will said. \"He does nothing out of the goodness of his heart and I can guarantee you that he knows about us.\"\n\nWill stood up, went to the phone and dialed the number of the federal prison of South Carolina. After several minutes, he was talking to his uncle for the first time in years.\n\n\"Will! How the fuck are you? Still enjoying the palm trees?\"\n\nThat one sentence was Will's confirmation that his cousin knew about him and Sally.\n\n\"What do you want?\" Will asked skipping the niceties.\n\n\"I'm sorry? What do you mean?\" Ellis asked sounding hurt that Will was so abrupt but Will knew better.\n\n\"You know exactly what I mean, why did you make Goodman sign the divorce papers?\"\n\n\"Who says that I did?\"\n\n\"Don't patronize me! I know that you made him sign the papers; my question is why? And spare me the you were always my favorite cousin shit.\"\n\nWill listened to Ellis' explanation and so far it matched what Sally said happened but he still didn't trust Ellis and said as much.\n\n\"I don't know what you're hoping to gain from this but I want your word that you won't involve us in whatever it is. I also want your word that you won't call asking for a favor because if you do, the answer will be no.\"\n\nThere was several seconds of silence and then Ellis' deep laughter filled Will's head.\n\n\"You know son, you were and are still my favorite cousin. You've got balls and I like that but at any rate, you won't be hearing from me again and for the record? No matter how much you deny it, we are family. Give the ex Mrs. Goodman my best wishes.\"\n\nEllis terminated the phone call and cursed. How could he not have known that the woman that his nephew was living with was Goodman's wife? \"Because.\" he muttered, \"it was so damned unlikely.\" The one thing that he prided himself on was that he was a man of his word and he would honor his agreement with his nephew. He wouldn't contact them again.\n\nHe looked at the missed opportunity philosophically, it just wasn't meant to happen and other opportunities would present themselves.\n\nWill hung up and walked back to Sally who was wringing her hands.\n\n\"It's alright.\" Will told her, \"at least for now but if you receive any phone calls or letters from someone asking for a favor, you have to tell me right away.\"\n\n\"I promise.\" Sally replied.\n\n\"Good.\" Will replied as he got down on his knees in front of her.\n\n\"Sally, will you do me the honor of being my wife?\"\n\n*************************************************************************************************\n\nBy the end of September 1946, an atomic bomb was detonated for the fourth time in human history at the Bikini Atoll; the Luce-Celler Act of 1946 is signed into law. The act gives all Philippine citizens living in the United states the right to become U.S. citizens, Manuel Roxas is inaugurated as the first president of the Philippines, Micheline Bernardini was the first woman to wear a two-piece swimsuit named the bikini in honor of the atomic bomb released earlier in the week at Bikini Atoll. The first drive in theater opened in Canada, seven American Marines were taken prisoner in China's Hebei Provence by communist forces but were rescued eleven days later. The social Security Administration is established to replace the Social Security board, which had been in existence since 1935, The \"Report of the Joint Committee on the Investigation of the Pearl Harbor Attack\" was released. The last German prisoners of war in the U.S. are released- there had been 375,000 German prisoners in the U.S. during the war. Two African-American couples, George and Mae Dorsey and Roger and Dorothy Malcolm are lynched after their car was stopped near Monroe, Georgia. No one was ever prosecuted for the murders.\n\nMartin Luther King Jr. a 17-year-old Junior at Morehouse College began a lifelong crusade against racial prejudice with a letter that was published in the 'Atlanta Constitution' in response to an editorial. 'Santa Claus Land' located in Santa Claus, Indiana is credited as being the first theme park, the B-36 peacemaker designed to carry the atomic bomb is flown for the first time by the United States Air force. The body of African -American Veteran John C. Jones was found in a bayou near Minden, Louisiana, the NAACP performed an investigation. John Hersey's article \"Hiroshima\" is published in The New Yorker, the article that featured the stories of six survivors of the blast would later be published as a best selling book. \n\nPresident Harry S. Truman approves \"Project Paperclip\". The goal of the project was to bring German scientist to the U.S. Mass production of television sets began. RCA produced the first new TV since WWII, the first Cannes Film Festival is held. African-American actor Canada Lee impressed audiences at Boston's Shubert Theater by portraying Daniel de Bosola in a production of The Duchess of Malfi, opening a new field for black actors today by donning white make-up and portraying a white character. The Nuremberg War Crimes Tribunal announces its verdict on twenty-one members of the Nazi Regime. Walter F. White, Executive Director of the NAACP and 5 other Civil rights activists met with President Truman at the White House to ask for help in ending the violence against African-Americans. ",
        "************************************************************************************************* Sports\n\nIn the 1946 Major League All-Star game in Boston, Ted Williams helped the American League defeat the Nationals 12-0, on the same day in the Negro League, Josh Gibson hit a 600 -foot home run in a game between his team the Homestead Grays and the Cleveland Buckeyes\n\nThe Pittsburgh Pirates voted against joining a labor union. The owners of the National League and the American League teams secretly met and voted 15-1 to retain the ban against African-Americans stating that integration would be harmful to the Negro Leagues\n\nThe All American Football Conference held its first game. The Cleveland Browns hosted the Miami Seahawks. The Boston Red Sox win the American League Pennant.\n\nThe St. Louis Cardinals and the Brooklyn Dodgers lost their final scheduled games in the National League forcing the first tiebreaker playoff in Major League Baseball history. The Network Eagles won against the Kansas City Monarchs 3-2 to win game seven of the Negro League World Series.\n\n************************************************************************************************* Music\n\nThe top number one Songs included 'The Gypsy' by the Ink Spots, 'Surrender' by Perry Como, 'To Each His Own' by Eddy Howard and 'Five Minutes More' by Frank Sinatra.\n\n************************************************************************************************\n\nThe summer flew by faster than anyone could have imagined. Kenji, Joel and Penny excelled in the accelerated summer classes and studied together almost every night. It was obvious that Joel was in love with Penny even though he hadn't admitted it not even to her. That the sentiment was returned was just as obvious and Kenji and Patricia both wondered when they would admit to it.\n\nJoel was happier than he could ever remember being and it showed. Being with Penny drew him out a bit more revealing a more relaxed fun side of him that no one suspected existed. One night, the small group had finished studying early and was sitting around talking.\n\n\"Anyone want something to eat?\" Patricia asked.\n\n\"Sure.\" Joel replied having long outgrown his embarrassment about how much he could really eat.\n\n\"I'll help.\" Penny said as she stood up and followed Patricia to the kitchen. \n\n\"You love him don't you?\" Patricia asked as she got out the supplies to make sandwiches.\n\n\"Is it that obvious?\" Penny asked.\n\n\"It is. Have you told him?\"\n\n\"No... not yet, Patricia?\"\n\n\"Hmmm?\"\n\n\"Did you know that Joel was in love with you?\"\n\n\"I believe that he thought he was.\" Patricia replied. \"What does that have to do with anything? He loves you.\"\n\n\"I... nothing.\" Penny said.\n\n\"Penny, there was never anything between Joel and me except friendship. I think that you know that so what's the real issue?\" Patricia asked looking at her intently.\n\n\"Nothing, just nerves I guess.\" Penny replied. \"We'd better get these sandwiches made.\"\n\n********\n\nJoel took Penny home an hour later. She was unusually quiet which made him nervous. They parked in front of her house for several minutes not speaking. Penny took a deep breath and spoke.\n\n\"Joel, I love you. I know that the man is supposed to start these conversations but I had to let you know....\"\n\n\"Penny.....\"\n\n\"I'm sorry if I'm being too forward and all but....\"\n\n\"I love you too....\"\n\n\"And.... You do?\" she asked.\n\n\"I do and I think I have for a while.\" he replied.\n\nThey sat in silence for several minutes before Penny spoke.\n\n\"Would you like to come in?\" Penny asked.\n\nShe had asked him that question many times over the summer but now it sounded different. He thought he detected a hint of a promise in her voice. While they had kissed and touched each other through their clothes, they had resisted going any further than that. He had to wonder if that was going to change. Intercourse he knew was out of the question, they couldn't take the chance that they could get pregnant.\n\n\"Joel?\" Penny called again.\n\n\"Sure.\" he replied and jumped out of the car to open the door for her.\n\nOnce inside the house, Joel took the initiative, pulled Penny into his arms, and kissed her. Penny broke the kiss first, took Joel by the hand and led him to the one of the rooms of the house that he had never seen- her bedroom.\n\nHe was surprised at the d\u00e9cor... it was more girly than he would have thought with the walls painted pink with the bed spread and curtains a darker matching shade of pink.\n\nPenny stood in front of him looking up at him as he looked down at her. In that moment he realized that he had never really been in love with Patricia but with what she symbolized. Penny, he loved and he wanted to explain that to her.\n\n\"Shhh, it doesn't matter.\" she whispered as she pulled him down to her and kissed him as she began to unbutton his shirt.\n\n\"Your roommates.....\"\n\n\"Gone until tomorrow.\" She replied as he kissed his chest through his tee shirt.\n\nJoel's heart hammered so hard that he was sure that she could hear it. Penny stopped and looked up at him, \"I love you Joel.\" she said as she took one of his nipples into her mouth and sucked it through the tee shirt. \n\nJoel felt his knees go weak as his breath quickened and his cock hardened.\n\nPenny took a step back and unbuttoned her blouse revealing a white bra that contained her large breasts. Joel's mouth went dry as she watched her remove her blouse and toss it aside. Taking his hand, she led him to the single bed and sat down on it pulling him down beside her.\n\nHe looked into her eyes for several seconds before easing her back onto the bed and kissing her. Hesitantly, he let his hand wander across her stomach and up to her bra clad breast and pausing as if he was waiting for permission.\n\n\"It's alright.\" Penny assured him.\n\nJoel gently squeezed the breast that he had in his hand becoming more aroused as he felt the nipple harden. He had the desire to know what it would feel like in his mouth but was too nervous to ask. Once again, Penny assured him that it was all right to touch her.\n\nSlowly Joel slid the bra strap off her shoulder and pulled the cup of the bra down until the breast was in plain view. He looked up at Penny who was watching him silently urging him to do what he wanted to do, what she wanted him to do.\n\nJoel's gaze went from Penny's face to the turgid pink nipple that seemed to be calling to him. He moved closer, stuck his tongue out and touched it with just the tip of his tongue. He heard Penny's sharp intake of breath and did it again but this time, he licked it flicking his tongue across the tip of the nipple.\n\nPenny moaned and pushed against him willing him to take the nipple into his mouth and to suck on it. Joel took Penny's nipple into his mouth and gently sucked on it as she worked his cock out of his slacks.\n\nHe almost came with the first touch of her warm hand on the bare skin of his cock. \n\nPenny's skirt rode up and she opened her legs in invitation. Joel didn't hesitate in accepting the invitation and for the first time in his life touched the most secret part of a woman. He slid his fingers into the side of the crotch and stopped. That first touch took his breath away, when he felt her wetness, tears formed. He moaned at the softness of her damp pubic hair as he ran his fingers through it.\n\nPenny put her hand on top of his and gently guided it where it needed to be. Then using her hand to guide his, she began moving it back and forth between the lips of her pussy and then concentrating on her nub. When he was moving his hand on his own, Penny took his cock back into her hand and stroked him in time with his strokes on her clit.\n\nJoel sucked even harder on her nipple as he rubbed her clit harder even she stroked his throbbing cock even faster. He felt his balls tighten against him as felt his sperm begin their journey to the tip of his cock where it shot out landing on Penny's stomach, skirt and thighs. He cried out in pleasure as Penny began to convulse, her orgasm beginning just as his ended.\n\nThey lay on the bed holding each other until well after midnight. He didn't want to leave her but knew that he had to, it wouldn't do for him to be there when her roommates returned home. After kissing her goodbye, Joel drove away with a much better understanding of how his parents, Kenji, and Patricia felt about each other.\n\n********\n\nWill and Sally's wedding was scheduled for the third Saturday in September although they wanted it to happen weeks before. Will didn't trust his uncle and thought it prudent that they wait to see if anything happened. When they heard nothing from him, Will decided that it was safe.\n\nThe wedding was going to be in Kenji and Patricia's back yard and after the wedding; the children would spend Saturday and Sunday night with Abby. Joel would spend those nights with Kenji and Patricia giving them a chance to plan for the semester.\n\nPatricia was happy for Sally and pleased when Sally asked her to stand with her. This she realized, was another happy memory to be tucked away for a rainy day. \n\n*********\n\nTyrone Morgan now had Becca Cartwright where he wanted her, in his bed and on her knees and he had a job at her father's office. He knew that Becca was in love with him or thought she was but to be truthful, he cared for her but love was much too strong a word to describe what he felt. \n\nHe took the cigar box from under the bed and counted the cash he had hidden there. Some of the money was from his wages and some of it was money that he had stolen from Becca's father. A portion of it also came from Becca's allowance that she gave so willingly.\n\nHe was pleased with the way things were going and he knew that Lawrence would be too. The plan was that he would continue to stay in the small room that he was renting at a cheap hotel until he got word that Lawrence was going to be released. At that point, he would start looking for a small house to rent but in the meantime, he had other things he to attend to such as watching Lawrence's ex-wife and finding out everything he could about Nick Alexander. Now that he was set up, he could begin those things.\n\nThings were going very well indeed.\n\n**********\n\nBecca woke up not feeling very well and wondered if she was coming down with a cold. She sat up, looked at the clock and went back to sleep. She was too tired to go to school to pick up her books for classes. A few minutes later, she was in the bathroom and dry heaving. She washed her face, went back to bed and fell back to sleep.\n\n********* Lawrence looked at his cellmate with open disdain and disgust. It seemed that Ellis had searched the prison until he found the dirtiest, smelliest and most uneducated convict that he could find and tossed him in the cell with him. When the man started to speak, Lawrence silenced him with a glare and turned his back on him. He wondered how his man Tyrone was faring as it had been two weeks since he had last gotten word. All he knew was that things were going well and the man had gotten a job with an accountant.\n\nLawrence had instructed the man to write at least once a month and under the false name of a minister but to keep details to a minimum but to say enough so that he had a general idea of how things were going. He still had to decide when he was going to make his escape and take care of Jacob Lincoln and the warden. There was a real possibility that neither thing wouldn't happen until after his escape and as much as that irked him, he'd get over it.\n\nHe looked over at the dirty prisoner who was his roommate and the beginnings of a plan began to form.\n\n\"Hey boy! What did you say your name was?\" "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "japanese",
        "bbw",
        "drama",
        "post wwii",
        "historical"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/i-will-love-you-forever-pt-2-ch-07"
}