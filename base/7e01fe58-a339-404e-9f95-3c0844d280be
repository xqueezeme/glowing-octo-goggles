{
    "title": "Rebound Pt. 04",
    "pages": [
        "-----\n\nNate\n\n----\n\n\"Russ.\" I bounded over the second Jude left. \"Russ, Russ, Russss.... He's not... his ring is gone. I think he's single.\" Russell glanced at me and his eyes softened as he shook his head.\n\n\"Nate.\" He sighed. \"Come on man. Bad idea.\" I shook my head.\n\n\"I know, like, I really know. Just real quick, remind me why? I don't think I can stop myself.\" Russell sighed and smiled at me. He folded his arms.\n\n\"Number one, he is about to be your boss. Number two, even if he is single, he just came out of something with someone he at some point wanted to MARRY, he's not in the right headspace for you. Number three, he is way too old for you.\" I opened my mouth and Russell held up his hand to stop me. \"Number four, because I can already see you arguing with number three, even if the age gap is ok he's at a very different stage of life. Number five, I know you don't get it but you need a break from boys anyway. Number six, because it bears repeating, he's your new boss.\" I sighed.\n\n\"Ok, good. That's good.\" I nodded. \"Repeat that before he comes in everyday, ok?\" Russell sighed.\n\n\"Is it going to make ANY difference?\" I shrugged. Well. Maybe not.\n\n\"I'll hop on Grindr.\" I suggested. \"Like ASAP. Find a daddy type and get it out of my system. Hopefully before next week.\" Russell plugged his ears.\n\n\"Gross.\" He said. \"Do whatever you need to do. But fuck's sake don't tell me about it.\"\n\n------\n\nFriday\n\n----\n\nNate\n\n----\n\nRussell and I were hanging out with Shona at Havana Bar, waiting for some other mates to join us and see where the night went. We made fast friends with some strangers next to us, your classic group of gay men and one maybe straight who knows woman, because they had clearly been drinking for most of the afternoon and started teasing me about my hair from the second I stepped outside.\n\n\"Is it real?\" The girl said.\n\n\"Yes!\" I swatted her away.\n\n\"Can I touch it?\" One of her friends said, and I suddenly didn't feel annoyed in the slightest because... he had dimples and freckles and a really warm smile.\n\n\"Yeah, go on.\" I sat next to him and let him do whatever he wanted to my head and we talked about who we were and all the stuff you talk about with strangers. The girl was joking about how she literally could not go out to a bar and have a conversation with straight people, how everyone she ever met was queer and gestured at me.\n\n\"Like, how did I end up sitting next to you?\" She said. \"Is Wellington like, gayer than anywhere else or are we just magnetically attracted to each other?\"\n\n\"I guess like attracts like.\" I said. \"Ow.\" I muttered as the guy playing with my hair pulled too hard. He laughed.\n\n\"Oops.\" He said. \"I am drunk and not a professional. My apologies.\" I shrugged.\n\n\"Well how did YOU end up here?\" The girl asked Russell with a laugh. \"You're as straight, white and male as they come.\" Russell grunted and stood up.\n\n\"Need a drink Nate? Sho?\" We nodded and glanced at each other as he stormed off. Talk about hitting a nerve. The girl giggled.\n\n\"What did I say?\" She asked. Shona coughed.\n\n\"Ignore him.\" She said. \"He just needs another drink.\" She rolled her eyes at me and I grinned.\n\n\"Yeah, and someone to pull that stick out of his ass.\" Shona smiled at me.\n\n\"Give me time.\" She said. I shrugged. Good luck, Sho.\n\n\"Are you done with my hair yet?\" I changed the subject and turned to the guy beside me. \"This is starting to go from cute to torture.\" He laughed and nudged my shoulder.\n\n\"I'm making you beautiful.\" He said. I rolled my eyes.\n\n\"I'm already beautiful.\" He grinned.\n\n\"You're alright.\" He said. I felt my chest grow tight as I smiled at him. I hadn't met a boy in a bar.... Well... ever.\n\n\"Nate.\" I introduced myself. \"Russell is the macho man who just stormed out and this is Shona, his girlfriend.\"\n\n\"Rita.\" The crazy girl introduced herself. \"Ethan and Logan.\" She gestured to the two guys who were hanging off each other. \"George.\" The guy playing with my hair grinned at me.\n\n\"Rita and I do plays together.\" He said. He opened his mouth to say more but Russell returned with wine for Shona and beer for him and I, and he sat next to Shona with a sigh. I nudged his knee.\n\n\"We could always go to JJ's.\" I mumbled to him. \"Crowd's more your scene there.\" He shook his head with a grunt and sipped on the beer. He caught my eyes and smiled at my concern for him.\n\n\"We'll see.\" He mumbled. \"Maybe more my crowd but definitely less your crowd and the whole point of tonight was helping you get over Jude so...\" I laughed and looked at George with a grin. Russell shrugged. \"He's ok.\" He said dubiously. I sighed. He would literally never approve of anyone would he?\n\n-----\n\nAlthough it turned out it didn't matter what Russell thought of George. About half an hour later I was introduced to Richard, George's friend, and it was the weirdest introduction I'd ever had. I almost felt like I was being presented to Richard for inspection, the way George held my shoulders back and gestured almost proudly at me. My neck pricked as Richard looked me over- and even though I could see he liked what he saw, I didn't like the interaction at all. I felt... like a piece of meat to be quite honest. I looked around for Russell to help me out of the weirdness but somehow we were on the other side of the bar, just us three. My heart started to beat faster. This was so shady. George and Richard were looking at each other, almost right through me.\n\n\"Hey.\" Richard said warmly, and squeezed my hand with a smile. George somehow slipped away and I felt my whole body grow stiff as I was left alone with some guy I'd just met who was looking me up and down like he was going to take great pleasure in like... literally eating me...\n\n\"Hi.\" I let my hand fall to my side and moved fractionally, trying to get back to the others. Richard smiled at me and reached for my arm.\n\n\"What are you drinking?\" He laughed as I glanced at my hand, still clasping a beer, and he rolled his eyes at himself. \"Ha ha, sorry.\" He sat down and leaned on his arm as he looked at me. \"Well, I'll get you the next one then. Uh.... how do you know George?\"\n\n\"I don't.\" I somewhat reluctantly sat opposite him. \"Just met now.\" I hesitated. And I thought he was into me, I didn't say, but now he's bolted and left me with you. \"How do YOU know George?\" Richard smirked.\n\n\"He owes me a favour.\" He said. \"A lot of favours actually. I think he has this idea I'll let him off the hook if he keeps introducing me to hot guys. It's his way of apologising. Sorry, I can see you're a bit weirded out.\" I blushed.\n\n\"Oh.\" I didn't know what to say to that. \"Uh. Well, thanks?\" Richard rolled his eyes.\n\n\"---Thaaanks---.\" He mocked me. \"Like you don't know. Anyway are you single?\" He looked me over. I shrunk into myself a little self consciously. I was wearing my 'I want to get fucked' outfit, which consisted of a t-shirt that juuuust showed my bellybutton piercing if I stretched out and jeans that cupped my ass delightfully. I glanced at Richard. Well, he was hot. That tall, blonde, shaved sides of the head Scandi thing. I shrugged.\n\n\"Constantly.\" I said. \"You too, if you're getting George to hunt down men for you.\" He choked on his drink.\n\n\"Yikes.\" He said. \"That's not...\" He looked over to our party and sighed. \"Well, yeah. That kind of is what he was doing.\" He grinned at me. \"I live nearby.\" He said. I could feel my cheeks heating up. No. No, you make so many bad decisions Nate. This is like the ultimate in bad decisions. You've been... like, what.... Scoped? For a real shady guy? You really want to go to his huh? And what? Get fucked? Well, yeah. Get fucked. Which was actually why I was out tonight anyway. I glanced at Russell and he caught my eye and shook his head. Ugh. I wish he'd let me make my own decisions. Richard saw where I was looking and squeezed my hand where it was lying on the table.\n\n\"Blondie over there doesn't like me.\" He muttered.\n\n\"Blondie over there doesn't get a say.\" I smiled suddenly. Fuck you, Russel. I'm an adult. This guy wants me. I looked back to Richard and put on my bedroom eyes and he grinned.\n\n\"Oooh.\" He said. \"So someone has decided they're not freaked out after all.\" He looked at my beer and raised his eyebrows. \"Drink up, Nate.\" I obeyed him, sculling the dregs and standing up.\n\n\"Ok.\" I said. \"How far? I'm freezing.\" Richard looked me over.\n\n\"Should have worn actual clothes then.\" He said. \"Come on.\"\n\n\"Wait-\" I paused and glanced at Russell and Shona, who were both glaring at me. \"I'll just say goodbye.\" Richard laughed.\n\n\"Not goodbye.\" He grinned. \"I'll have you back soon.\"\n\n\"Either way.\" I went to say something to the two of them before Richard had a chance to escort me out of the bar.\n\nRussel sighed at me and handed me his jacket.\n\n\"Look.\" He said. \"I'm not going to police you but I will say I think going home with some guy you met one minute ago who won't even offer you his jacket when you're shivering is a bad idea.\" I took the jacket gratefully.\n\n\"Ok, obviously not marriage material.\" I admitted. \"But he's hot.\" Russell rolled his eyes.\n\n\"Have fun.\" He said dubiously.\n\n----\n\nRichard wasn't much of a talker so I bridged the silence with chatter as we walked to his. Which was actually way further than he'd let on, just in Newtown which was about as far away as you could get and still claim 'nearby'. He hadn't said a word to me since we left the bar. Asshole. But I guess he was getting what he wanted, it's not like he needed to seduce me. He led me into his apartment building and grinned as he looked me over.\n\n\"George might be reprieved.\" He grinned at me. \"He has exceptional taste.\" I winced and blushed as he pulled me into his room before I'd had a chance to look around properly. He grunted as he started pulling his clothes off and glanced at me. \"Get naked.\" He demanded. I obeyed him, and stood awkwardly at the foot of his bed. I wasn't horny. This wasn't hot at all. This was scary and mean. I glanced at him. Dammit. Go for guys smaller than you, I told myself. You are fucked.\n\nHe glanced at me and could probably see the fear all over my face because he sighed.He pulled me onto his bed and wrapped his arms around me, and stroked my hair, and touched my cheek gently.\n\n\"Oh Nate.\" He said quietly. \"I'm sorry. I didn't mean to scare you. Is this ok?\" I nodded. I was already knee deep, so no, it wasn't ok, but I'd literally walked into it. It was hard to feel particularly sorry for myself when at every step of the way I could have, and should have said no. Richard sighed and clasped my chin, tilting it up to look at him. \"Oh, it's not ok.\" He murmured. \"Sorry, the way you were dressed I... I read you wrong.\" He stood up and threw a dressing gown at me. \"There you are, honey.\" I slowly wrapped it around me as he pulled on a jersey that fell to his knees. \"Can I make you some tea or something?\" He said. I glanced at him.\n\n\"Uh... is that ok?\" I muttered. Richard smiled warmly at me.\n\n\"Yeah, of course.\" He said. He offered me his hand and pulled me off the bed. \"Come on.\" He led me to the kitchen and went to boil the jug, pulling out a bunch of tea and asking me which one I wanted. I sat quietly as he put the teabags in the cups and placed them in front of me. He glanced at me as he went to fill them and sat down at the kitchen bar opposite me. I glanced at the cup and he followed my gaze. \"Just Earl Grey.\" He said. \"I'm really sorry for scaring you Nate.\"\n\n\"No, you....\" Didn't, I was about to lie. I winced. \"Sorry.\" I said. \"I... haven't ever really gone home with someone I just met. You're... kind of a lot.\" He grinned and sat back comfortably.\n\n\"Yeah, that was a bad approach.\" He laughed. \"Try again, yeah? Hey Nate, welcome to my place. Do you want some food?\" I sipped on my tea and smiled slightly as it began to warm me up.\n\n\"No....\" I caught his eye. \"But thanks for the tea.\" His foot caught mine under the bar and I let our bodies stay that way, just barely touching.\n\n\"What do you do anyway, honey?\" He smiled. \"Something creative? Acting? Modelling?\" I laughed and felt my ears going pink.\n\n\"I'm... actually... just interning at MBIE.\" I said, the words sounding foreign on my lips. I wasn't, not till Monday actually, but it felt so much better than saying I make coffee. Richard wrinkled his nose.\n\n\"Boring.\" He said.\n\n\"What do you do?\" I asked. Richard glanced at me and swallowed.\n\n\"I'm a teacher.\" He said, not quite meeting my eye. Liar. I narrowed my eyes at him. I wonder why he was lying. He stared off into the distance.\n\n\"Cool.\" I said, eventually. \"Where? Like primary school or secondary or...\" He grunted.\n\n\"What's with the third degree, honey?\" I raised my eyebrows.\n\n\"That's hardly the third degree!\" I kicked him. \"That's called small talk, it's really easy usually, but I guess not for a guy who barely gets to know anything about you before he tells you to get naked.\" Richard laughed.\n\n\"Ouch!\" He said. \"I know.\" He sighed. \"Ok, I'm not a teacher.\"\n\n\"You're a bad liar.\" I grinned. He caught my eye and smiled at me. \"So what? Something illegal obviously? Ooh, actually, my guy can't get me MD anymore, do you know someone?\" Richard winced and shook his head.\n\n\"Do I really scream drug dealer?\" He mumbled. I smiled.\n\n\"Yeah.\" I said. \"I would bet money on it. Am I right?\" He looked across the bar at me. He narrowed his eyes.\n\n\"I don't know where to get your MD.\" He said slowly. \"Can we switch to small talk about... the weather?\"\n\n\"Sure. Fucking freezing.\" I said. He nodded and said nothing. I sighed. \"Small talk usually goes both ways.\" I smiled. \"Although I am pretty good at one-sided conversations. My flat is so cold at the moment, I have to sleep in like three layers. Your place is warm though. Central heating?\" Richard nodded. \"Nice. Imagine that. A well insulated house and central heating. Oh well, a guy can dream. I guess if I could ever get my own place... oh is this your place? Or do you rent?\" Richard's eyes crinkled as he looked at me.\n\n\"It's mine.\" He said. I glanced around the apartment.\n\n\"You should get a dog.\" I said. \"Number one thing I'd do with my own place.\" He shrugged.\n\n\"Not a huge fan of animals.\" He said. Ew. I wrinkled my nose.\n\n\"Biggest red flag so far, and you're throwing me a lot.\" Richard laughed.\n\n\"You're still here though, honey.\" He said quietly. I looked at him.\n\n\"I guess so.\"\n\nWe finished the tea and I suggested we go back to his bedroom. He seemed hesitant this time. I stood in front of him and looked up at him. I held his hand.\n\n\"I'm feeling a lot more comfortable.\" I whispered.\n\n\"Are you?\" He stroked my cheek. \"We don't have to, Nate. You could leave your number if you want and we'll try again another time. Or you can leave, I understand.\" I bit my lip.\n\n\"Well... or we could hang out in your bedroom for a bit....\" I mumbled. \"Just see where it goes....\" Richard smiled.\n\n\"I'd like that.\" He said.\n\nI lay curled up around him and he stroked my hair and let me make more small talk with myself. He really was taciturn, but he was warm. He didn't seem as scary now. I ran my fingers over his chest which was covered in hair and I could feel him getting hard. I glanced up at me and he raised his eyebrows as he caught my eyes.\n\n\"Sorry, honey.\" He turned a little pink. \"I can't control that.\" I smiled and pushed my hair off his face, and his breathing hitched as he looked at me. I wriggled down on the bed and looked at him.\n\n\"May I?\" I paused, my lips a hair away from his dick and he moaned.\n\n\"Can I ask you something?\" He whispered. I sat up a little.\n\n\"Ok.\" He reached for his bedside drawer and fumbled for a second before pulling something out. I turned really, really red as I looked at it. \"Oh, you're that kind of guy.\" I said lightly, trying to overcome the heat in my chest. Richard bit his lip.\n\n\"I just... it would look really hot on you.\" He said. \"But you'll be hot either way so don't feel obligated.\" I glanced at his hands.\n\n\"Would you like to...\" I searched for the right words. \"Would you like me to be a bit...\" I sighed. \"Subby?\" I suggested. Richard moaned.\n\n\"I would like that.\" He said. \"Is that something you'd be into?\" I shrugged. Sometimes. For the right guy. I pulled my hair up and knelt before him on the bed, presenting my neck to him, and he fastened the collar around my neck. Hmmmm. Maybe not my thing. But his eyes glazed over as he looked at me and, fuck it, I could do a bit of that if he liked it that much.\n\n\"Thank you, master.\" I whispered. He moaned and closed his eyes.\n\n\"Oh, that's good pet.\" He whispered. Pet huh? My name is Nate, not Pet. I almost said something, but I changed my mind and went back to doing what I'd been about to do. Richard stopped me before I could get started and pulled me off him by my hair. I whimpered. If only my hair wasn't wired for sex. He grinned as he looked at the expression on my face. \"You're meant to beg.\" He said. I blinked. I hate begging.\n\n\"Please, master.\" I parted my lips and made my eyes as round as they would go. He grinned.\n\n\"Please what, pet?\"\n\n\"Please, let me suck you.\" Richard smiled.\n\n\"Good boy.\" Well I liked that at least. He let me go and I pressed my lips to his cock reverently. I sucked on the top for a bit before running my tongue over everything- his inner thighs, his heavy balls, the vein popping out of the side of his cock. My face was flushing and my heart was beating faster as he moaned appreciatively and ran his fingers through my hair. \"Now that's a good little slut.\" He said. \"Cute little pet, desperate for your master. Good boy. Take it all baby, you sweet little whore...\" Huh. Quite verbose when we weren't discussing the weather.\n\nI took it all, his cock was lovely- thick and curved and cut- but nowhere near Darius so he was in for a treat because I knew I could take him really deep. He moaned and ran his fingers through my hair, calling me a slut and a whore and murmuring what a good boy I was. I was getting hard, and found myself humping against his thigh and he laughed and slapped my ass. It stung, and I wasn't expecting it, so I jolted off his cock swearing. Richard growled and grabbed my hair again. He clasped my chin hard, and his nails dug into my neck. I glared at him and opened my mouth to tell him to chill out and go easy, because I really wasn't into this, but he didn't let me speak.\n\n\"You don't even think about your dick when you're with me, pet.\" He said. My eyebrows almost flew off my face.\n\n\"I am not that guy.\" I choked out against his grip. \"You better fucking get me off, or I'll bite your dick in half.\" Richard's eyes grew wide and he suddenly laughed, letting me go.\n\n\"Christ.\" He said, patting my head. \"Sorry, I keep reading you wrong. I so thought you'd be into that.\" I swallowed and smiled at him guiltily.\n\n\"Not into power exchanges.\" I said.\n\n\"Right.\" he said. \"Got it. I'll make you cum, Nate.\" I smiled.\n\n\"Into sucking you off though.\" I said. \"I won't bite, promise.\" He grinned and his hand drifted to my chest, circling a couple of tattoos and grazing his hand against my nipple.\n\n\"Before we resume, at some point I was going to flip you over and fuck you. Is that ok?\" I grinned at him.\n\n\"THAT is ok.\" I said. \"Welcomed even. Thank you for asking.\" Richard smiled and bent over to kiss me.\n\n\"Alright.\" he whispered as I moaned into him. \"Go on then, little pet, suck me off.\" I smiled and knelt down again.\n\n\"Thank you, master.\" I said, all cute and subby for him now I knew he knew where we stood.\n\nI gagged on him, tears streaming from my eyes, getting off on his stream of loving degradation which was slowly turning into an incoherent sweat mess of drool, and moans, and even whimpers as I worshipped him and made him feel good. His hands drifted to my hair, which he kept stroking, and I could feel his balls getting tight against my chin. I moaned and went to switch to my hand... but true to his word he suddenly sat up and I found myself on my front, with him kicking my legs open and lifting my hips. He moaned as his fingers sought my ass, and after a pause as he fumbled in his bedside drawer again, I felt lube dripping down my thighs.",
        "\"Oh fuck yes.\" I moaned. \"Fuck me dude, I'm so horny.\" Richard reached for me and turned my face to look at him. He bit his lip, and my eyes went straight to his hand. Christ. Another damn prop. I was so not the right guy for him. He looked at my expression and his face fell.\n\n\"Not the gag then.\" He said. I sighed. Fine.\n\n\"Go on.\" I lifted myself up onto all fours. He winced.\n\n\"Na, I can see you're not into it.\" He said. \"That's cool.\" I smiled at him. He was ok, really. Just another big dumb dom who wouldn't know what a power bottom was if he was literally dicking one down. I mean, clearly. I shook my head.\n\n\"Go on.\" I repeated myself. \"I don't get it but I'm not mad about it.\" He smiled and stroked my hair.\n\n\"Really?\" He said. \"I just like the way it looks. But you're not really a sub, honey, and being gagged can be kind of rough.\" I laughed.\n\n\"I've been gagged before.\" I said. \"Only way to shut me up sometimes. Na, really, I'm cool, do it.\" Richard still looked dubious. \"Do it.\" I repeated, with a flash in my eyes. \"Or should I do you? Shut you the fuck up and ride you?\" Richard blinked in surprise.\n\n\"Uhhhh.... No.\" He said. \"Ok, pet. Here we go.\" He wrapped the ball gag around my mouth and checked I could still breathe. I felt- well. Ridiculous. Not hot in the slightest. But his eyes were glazing over again and he shoved me back onto the bed and moaned as he parted my cheeks again and started fingering me. He was really rough, he didn't seem to know what he was doing, and he was grunting about how much I loved it, and how easily I was opening up for him, and how cute my puffy little hole was. I squirmed a bit, trying to get him to at least hit the right spot, and when that didn't work because he only went harder, I changed tack and lifted my ass up, trying to beg him to fuck me without my words. He knew though, and I felt him moan and press up against me. I moaned back and parted my legs as wide as they would go as he lifted my hips and started thrusting, barely touching me, teasing me. I frowned as I felt him against me. Something was off. I was super horny, and wildly confused because I'm dumb when I'm horny- but I worked it out when he started to really enter my hole. Asshole!\n\nI pulled myself away but he held me so firmly I was sure I was getting bruises on my hips. I tried to twist to face him, but he pinned me down. Safeword. We hadn't set one up. Because I don't normally do this kind of thing and when I do it's with guys who know how to check in. He wasn't going to check in, I could tell. He felt so good as he started to fuck me and in spite of my anger I was melting underneath him. Ok, raw, amazing, it felt amazing. Even if it was so fucking deeply uncool not to use a condom. But... he was a pro- there was no way he'd actually cum in me. He'd definitely give me a facial, and that was hot as hell.\n\nMy body was enjoying the way he used me and I switched my brain off and let myself enjoy it wholeheartedly. He was... ugh. INCREDIBLE. He pulled me onto my knees and stroked my hair, and reached around me to play with my dick.\n\n\"Ugh, you're so hard.\" He moaned. \"God, you're like, leaking so much pre. Fuck, you love this don't you? What a good little slut.\" I moaned and bucked against him. This didn't need to last. He certainly wasn't going to, he was hot and shaking. I thrust into his hand and he moaned. \"You wanna cum baby?\" He panted. \"Keep working for it, pet.\" I whined and thrust even harder- getting myself close but getting him closer as well. He didn't give me any warning- I just felt his abs tense and his breathing grow erratic. I tried to pull out but he held my hips tight against him and I burnt with shame at the pleasure of feeling him fill me, throbbing and spurting a hot load of cum that coated my insides. Oh god. What a dick. God that felt good.\n\nHe moaned and fell on the bed with a sigh, and I pulled the gag off. I reached for him, still mad, and also about to be blueballed if he didn't get himself together.\n\n\"Hey...\" I touched his hand and he sat up with a sigh.\n\n\"Alright you gotta go.\" He checked his phone on his bedside table. I blinked. I mean, I wasn't expecting him to cook me dinner. But you know, I thought... \"Come on.\" He said shortly, glaring at me. He reached for me, and I leant into his warmth... I don't know what I expected.... But all he did was pull the collar off. I stared at him.\n\n\"I didn't cum.\" I said. Richard raised his eyebrows and glanced at my still hard, leaking dick. He sighed.\n\n\"I know, I'm sorry.\" He said. \"Thought you would, but we're out of time ok? Next time.\" I folded my arms.\n\n\"Next time?! Dude, you went in RAW! And you lasted like 5 minutes! There is absolutely not...\" Richard stood up and started gathering my clothes.\n\n\"Yeah, sorry.\" He didn't sound sorry. He sounded bored. Christ Nate! First impressions matter! Of COURSE this was how it was going to go. He just tricked you with tea to make you say yes. Dumbass. I sighed. Ok. I'd go. And go straight to a clinic and... ah STDs don't even show up right away. Great. I'd have to not have sex for two weeks. What an absolute fucking idiot.\n\nRichard threw Russell's jacket at me and all but pushed me out of bed. I frowned at him. Dick.\n\n\"Yeah, I'm off, just gotta use the bathroom...\" He sighed and jerked his thumb at the door.\n\n\"Out.\" He said. \"Now.\" I swallowed and felt myself turn red. I'd never felt like such a cheap whore in my whole life- but I didn't trust myself to argue with him. I just grunted and pulled on my clothes before throwing myself out the door.\n\nShitty didn't cover it. I felt like trash. I felt used and discarded and gross. I hated myself. His cum leaking out of my ass was just another reminder of exactly how little I meant to him. I can't believe I'd let him go on. I winced and wrapped Russell's jacket around my waist, because I didn't really trust that I wouldn't leak all over my jeans before I could clean out properly.\n\nAs the lift hit the ground floor a woman swept her eyes over me. I looked away. Yeah. I probably looked exactly like the whore I was, with my hair everywhere. She stopped and I found myself stopping too. I caught her eyes. She was frowning. She sighed heavily.\n\n\"Were you with Richard?\" She asked. My face went red. Oh. That was why he'd kicked me out so unceremoniously. I cleared my throat.\n\n\"Who?\" I said, though god knows why I was protecting the bastard. I guess I felt bad for her. I turned away with a hopefully confused frown- I'm not sure I was particularly convincing though because swore under her breath as she walked away, muttering to herself about 'that asshole'. I paused as I stepped out the door and felt a lump in my throat.\n\nWell. Yet again, you told me so.\n\nI texted Russell. He texted back in half a second.\n\nWhere you at? I'll send an uber.\n\n-----\n\nJude\n\n----\n\n\"Are you leaving?\" Ryan stared at me as I walked past him on the way to the lifts. I raised my eyebrows and checked my watch.\n\n\"Yeah? It's 5?\" He laughed.\n\n\"You normally stay till 7.\" He said. I smiled at him and glanced around.\n\n\"Yeah uh... you know that guy I met, Thomas?\"\n\n\"Oh, say no more.\" Ryan grinned. \"Have a lovely night.\"\n\n-----\n\nWell. That had been the plan.\n\nI offered to host- I was already living in a hotel room, I mean that was basically the perfect set up, but he was insistent on going back to his, which was fine. He offered dinner and I had to respectfully explain that there was no way I was doing dinner. For a couple of reasons- one, I really just wanted to fuck and get certain people out of my system, and two... well. I don't bottom that often. But I'm pretty sure that eating dinner right before is a bad idea.\n\n----\n\nHe invited me in, gently caressing my shoulders as he took my jacket, and pressing his lips to my temples. He had to lean up a bit to do that, and I helped him, ducking my head and smiling at him. He offered me wine, which I took gratefully... God forbid I do this sober.\n\nHe led me to the couch and arranged me over him. I kind of liked that. It was nice to just sort of... relax and do what I was told. He placed me so my head rested on his chest and his hands ran through my hair.\n\n\"I was surprised when I looked up and saw the guy yelling across the room about his ass was you.\" He said, sipping on his wine. I rolled my eyes.\n\n\"I know. I read straight. L... my ex always used to say that.\" Thomas mmmmed thoughtfully.\n\n\"Not just straight.\" He said. \"You also read... you know. Top.\" I blushed.\n\n\"Well, I mean. Mostly.\" I let my arm curl back around his neck and moved to lie in the crook of his arm. \"But I'm not going to deny myself anything.\" I grinned at him. \"Actually I used to be... what do you call it? Like a service switch? But L.... my ex wasn't really into that.\" Thomas laughed.\n\n\"You can't stop talking about him.\" He said. \"You really need this, don't you?\" He reached one hand under my shirt and just rested his hand there.\n\n\"Yeah. I really do.\"\n\nHe stripped me slowly, our tongues tangling as he caressed my body. It was almost romantic, the way he looked at me through half lidded eyes, and slowly peeled my clothes off, and gently ran his fingers over me. I didn't really feel anything for him, but my body liked the gentleness. He was stroking my arms and kissing my neck like he was trying to seduce a woman. And I think I liked it- being soft for someone, letting them take charge. And Thomas... hey, he wasn't what I'd call my type, but he was hot in his own way, muscled, kind of... swarthy. I moaned as he pressed me to the couch and kissed me, really, my lips.\n\n\"Bedroom.\" He lifted my wine glass from my hand and pulled me up. I think he would have swept me off my feet if he could. I smiled and took his hand and let him lead me.\n\nI only had to lose my trunks, but Thomas didn't seem to be that interested in discarding them. I knelt on his bed, my legs wrapped around his waist, my dick poking him hard in the stomach and I rutted against him as he kissed me.\n\n\"Wish you'd shaved properly.\" He laughed. \"Your face is itchy.\"\n\n\"Oh.\" I blinked at him. \"Sorry. It's.... A look I guess.\" He clasped my chin.\n\n\"Very manly.\" He said. \"I really dove off the deep end with you.\" I frowned. Off the... christ, what exactly did he mean by that?\n\n\"Huh?\" Thomas shrugged.\n\n\"But what's the point of a guy who looks like a girl?\" He grinned at me. I frowned.\n\n\"Is this.... You... do this with guys often?\" I asked hesitantly. Thomas shrugged and pushed his hair off his face.\n\n\"Not at all.\" He said. \"First time, actually. I'm straight.\" I glanced down at him. He might be straight but his dick wasn't. I bit my lip to hide a smile.\n\n\"Um.\" I tucked my hair behind my ears. \"Ok. Well, I really hate to be the one to tell you, Thomas, but... I'm not a woman.\" He laughed. \"You experimenting then?\" I winced. I didn't really want my first time in ages to be on the receiving end of some straight guy's tactless assault. Thomas nodded. \"Huh.\" I shuffled off his lap and he caught me.\n\n\"That's turned you off?\" He said. \"Weird. I thought the guy in the bar begging for literally any guy to take his ass would be ok with anything.\" I laughed.\n\n\"Ahhh... I just... I dunno.\" I blushed awkwardly. God. I'm too old to be indulging any 'straight' guys in their dumb fantasies. \"Look, I'm not into the straight thing.\" I said. Thomas shrugged.\n\n\"Ok, but you're still hard, and you must have prepped, are you really gonna walk out of here?\" He raised his eyebrows at me. \"You can take the lead.\" He said. \"Teach me how to make you feel good, baby.\" I sighed. Good point. I had prepped. That would be a huge waste of an afternoon.\n\n\"Ok.\" I said. \"Let's start where we left off, and go from there.\" He grinned and pulled me back into his lap, and started making out with me again, more passionately this time, desperately, and grinding his hips into mine so our cocks caught each other through the scant fabric. His fingers found the elastic around my trunks and he slowly snaked his hand in... and I had to stop him, pulling away and panting.\n\n\"Ok, so asses don't get wet.\" I said patiently. \"So we grab lube, and then you can go ahead and do that.\" Thomas laughed.\n\n\"Ok, baby.\" He wrapped his hand around my neck and gently pulled my head back. He placed his hand in front of me as I moaned and gently worked two fingers in my mouth. \"You better get those nice and wet.\" He whispered. \"Because that's what we've got for lube.\" I grunted.\n\n\"Well lucky for you I came prepared.\" I glared at him. \"Because that is NOT all I'm getting.\" Thomas laughed.\n\n\"Ah, I thought you might find that hot.\" He said. \"Bedside table Jude. Grab it for me will ya?\" I laughed in spite of myself as I grabbed it for him. He was... god, I really should have had a dinner date to vet him properly. This was exactly as bad as I'd worried about. I handed him the lube, and knelt over him. He moaned as he slowly began to explore me, and watched my face as I helped him, making sure he didn't go too hard, making sure he hit the spot because if I got NOTHING out of this I was going to be seriously depressed.\n\nHe did better than I expected, good enough that I found myself lying almost prone, my hips propped up, my eyes glazed over and my whole body flushed... and... actually whining as he withdrew his fingers.\n\n\"Condom.\" I directed him.\n\n\"Better without?\" He suggested.\n\n\"Oh my god,\" I struggled to sit up. \"You....\" He laughed and kissed my neck.\n\n\"Teasing, although one day...\" He sighed. \"Fine. I'll wrap up.\" I watched him do so. I didn't trust him for a second. But I was fucking aching for him. I moaned and stuck my ass up.\n\n\"Hurry up.\" I moaned.\n\n\"Aw baby.\" He stroked my hair. \"Less manly when you beg.\" I sighed. I wasn't BEGGING. I was DEMANDING.\n\nThere was something off about his dirty talk. Like it was only half directed at me.\n\n\"Oh Jude.\" He moaned. \"Jesus Christ, this is... awesome. You were right, baby. He's so tight, he's so fucking EAGER, aren't you Jude?\" I moaned and tried to work out what was going on- I guess Levi and I have 'being a bit dumb with a dick inside you' in common because I was really distracted by the waves of pleasure and discomfort as Thomas took my ass, sometimes a fraction too hard, and sometimes... just... perfect.... \"So much tighter than you.\" I glanced up as I heard him whisper that. He stroked my hair and pushed my head down again, wrapping his hand around my jaw. \"God this is the best sex I've had in years.\" He moaned. \"Fuck Jude, your little hole is so fucking tight.... warm. You're practically a virgin aren't you, baby? So sweet of you to stay so... ugh... tight....\" He grunted and I moaned. \"Ugh, I wish you were this good...\" He moaned. I jerked my head up again and he grasped my hair and pulled it back, and I stared at him as he smiled at me.\n\n\"Who are you....\" I moaned as he kept fucking me, and my legs started to shake.\n\n\"Fuck Jude. You're so much better. Fuck, I'm not going back, this ass is all I need now.\"\n\n\"Oh fuck yeah.\" I shook off the feeling of unease and arched my back. \"It's yours. Fuck me.\" I whined.\n\n\"Ahhh, good girl.\" He moaned. I winced. Good boy, mayybeeee.\n\n\"No...\" I panted. \"Not a girl.\"\n\n\"Not you.\" He groaned. My eyes flew open again as I felt the weight on the bed change, and I glanced behind me in horror to see... well... a... girl... moaning, naked, dripping, reaching for me....\n\n\"Oh my god.\" I leapt up and almost fell over myself as the physical sensation of seven inches slipping out of my ass caught up with me. \"Who the fuck are you?!\" I scrambled for something to cover me as I stared at the girl. Christ. I was way too old for this. This took me back to high school, and being hastily stuffed in Jonesy Martin's closet when his girlfriend came over for a surprise visit. I backed myself into a corner, my arms doing their best to preserve my modesty... but Thomas and the girl were both smiling at me.\n\n\"Shhh. Jude. Baby boy. This is Claudia.\" Thomas gestured to Claudia and I glanced at her. He smiled. \"I thought you might want to use her while I fuck you.\" My eyes flew open.\n\n\"Absolutely fucking no! I'm gay!\" I glared at him. \"What the fuck is this?\"\n\n\"An experiment.\" Thomas said. \"I thought even though I'm straight I'd still be more into it with a guy than I am with my girlfriend.\" Claudia moaned. My jaw dropped and I froze in confusion.\n\n\"What... is this?\" I squeaked out quietly in spite of myself. Thomas grinned.\n\n\"You know, if you relax you might like it Jude. You definitely liked me fucking you. You might like it with this little one sucking you, don't you think?\" I shook my head, and finally got myself together enough to stand up and walk out of the room, slamming the door behind me. \"Jude....\" I could hear him yelling after me, but I'd never wanted to hear someone out less in my entire life. Was one person REALLY not enough for ANYONE? And for fucks sake a WOMAN? And whatever their whole weird set up was... I grabbed my clothes and got dressed, shoving Thomas off me as he tried to stop me and explain.\n\n\"Just try fucking GRINDR.\" I spat at him. \"And maybe TELL someone what the FUCK they're walking into!\"\n\n----\n\nI stormed out and called Rita.\n\n\"You out? I'm on the way.\"\n\n\"I thought you had a date tonight?\"\n\n\"You will literally die when I tell you about it.\" I grinned into the phone. \"Hint- him telling me he was straight was not the worst or weirdest moment of the evening.\"\n\n\"Ooooh.\" I heard Rita smile over the phone. \"I cannot wait. Ok. Havana Bar. Outside.\"\n\n----\n\nI blinked as I got there and my eyes went to... Nate's brother Russell. Huh. Small city. He nodded at me as I approached him, chatting away to Rita, with a girl tucked in his arm.\n\n\"Hey.\" I greeted him. \"You guys know each other?\" I gestured to Rita. She grinned.\n\n\"YOU guys know each other?!\" She laughed. \"Ah, that's Wellington. His little brother just ran off with a total non starter and we're working out what to do if we need to hide a body.\" I glanced at Russell.\n\n\"Is Nate still seeing Darius?\" I tried to sound casual but I think the muscle in my jaw twitching and the way I clenched my fists and narrowed my eyes might have given away that I was... disappointed to hear that. Russell shook his head.\n\n\"Absolutely fucking not.\" He cracked his knuckles. \"He's trying to get over him.\" He sighed and glanced at the girl wrapped around him. \"Sometimes I wonder if Nate thinks 'out of the frying pan and into the fire' is like, a personal challenge.\" He bit his lip and looked at me. \"I'm still in the doghouse for beating up Darius or trust me, Jude, I would have fucking stopped him.\" He sighed. \"But you know, he's an adult. He's probably fine.\" I sat down and looked at Russell. His forehead was furrowed and he was clutching his girlfriend's knee a little too tightly.\n\n\"Yeah, he'll be fine.\" I reassured him. \"Nate seems to bounce back from stuff.\" Russell sighed.\n\n\"He does, doesn't he?\" He smiled sadly at me. \"Anyway, Jude this is Shona, my girlfriend, Shona this is Jude. You know, the guy Nate's... going to work with.\" He said that with a slight smile, and he and Shona exchanged a look. Huh. Looked like I'd been talked about in the Novak household. I can't say I minded that, actually.\n\n-----\n\nNate\n\n---\n\nRussell called me when I was in the uber.\n\n\"Hey.\" I muttered. He cleared his throat.\n\n\"So, Wellington is small.\" He said. I laughed.\n\n\"Ok?\"\n\n\"Ok, and turns out no one really knew that guy you went home with.\" He said. I rolled my eyes.\n\n\"Good.\" I grunted.\n\n\"But that chick Rita, and Ethan and Logan... ah they're friends of Jude's.\" He said. \"Jude's here. I thought I should warn you.\" I felt myself turn red. Jude was here. And I was... a disaster.\n\n\"Um. Maybe I'll go home.\" Russell sighed.\n\n\"I'd rather you didn't.\" He said. \"How bad was it? Like do I have to get in another fight?\" I felt a lump in my throat.",
        "\"Na.\" I said. \"But next time I meet a guy and go home with him two minutes later can you try a bit harder? Do that over protective 'absolutely NOT Nate' thing you do. I ah... I really should listen to that.\" Russell grunted. \"He kicked me out and I ran into his girlfriend outside of the lifts.\" I said. Not the worst of it, but he wasn't quite the right person to hear the whole story. I could hear Russell trying not to laugh.\n\n\"Oh god, dude.\" He said softly. \"You actually, truly have the worst taste in men. I almost can't believe you like Jude. I'm almost starting to think it's a good idea.\" I laughed. \"You will come back Nate? Let me be that annoying over protective brother and check you're ok.\"\n\n\"Ok.\" I sighed. \"Thanks.\"\n\n---\n\n\"Nate's back!\" Russell waved vaguely at Jude and the others. They all glanced at each other before smiling at me too widely and greeting me with enthusiasm. Gee, thanks Russ. I looked at him and he shrugged. Yeah, like he didn't tell them some sob story about what a fucking moron I am. I mumbled something about going to the bathroom and brushed past them.\n\nI'd just have to get over it. The last thing I needed right now was a bunch of people seeing me cry all over Russell because I was a stupid whore. I cleaned myself up. You know, with the right guy there's something fucking sexy as hell about his load leaking out of your ass. With this guy I felt nauseous. But I did it, trying not to think about how long I was taking, and eventually I returned to the group with a spring in my step and a smile on my face. I accepted the drink Russell handed me gratefully and slunk onto a stool and tried to distract myself with my phone. I glanced up as Jude sat opposite me.\n\n\"You ok?\" I glared at him and he flinched as he saw my face. Oops. He didn't come over to tell you off, Nate. Be nice.\n\n\"I'm fine. What exactly did Russell tell everyone?\" I grumbled. Jude shrugged.\n\n\"Said you had a bad date. You looked like hell when you came in. Figured maybe it was worse than a bad date.\" I smiled a little.\n\n\"Yeah.\" I sipped on my beer. \"Like... a really fucking awful bad date.\" I grinned and relaxed as Jude smiled at me. \"That's kind of my thing though.\" I winked and Jude rolled his eyes. He stretched out and looked at me with a sigh. Ooh. I know that look. I get it like 7 times a day from Russell. I frowned at him as he leant back in. \"Are you about to give me some unsolicited advice?\" I asked. Jude laughed and turned a little pink.\n\n\"Na.\" He said. \"I also just had a bad date. I was going to commiserate.\" I smiled at him.\n\n\"Bet mine was worse.\" He raised his eyebrows.\n\n\"Eh...\" He winced. \"I dunno.\" I raised my eyebrows.\n\n\"Had a girlfriend.\" Jude smiled smugly.\n\n\"Surprise threesome with a cuckquean.\" My eyes widened.\n\n\"Surprise threesome?! Oh my god! Did you fuck her?\" Jude laughed and motioned for me to keep it down.\n\n\"No I didn't fuck her!\" He laughed. \"I stormed out.\" He said slowly. \"I was really upset. I'm still feeling a little...\"\n\n\"Used?\" I suggested. Jude caught my eye and he frowned a bit. His hand slowly drifted to mine as we held each other's gaze.\n\n\"I think I'm cursed.\" He said slowly. I couldn't help but smile, and I brushed my hair out of my eyes.\n\n\"Fucking tell me about it.\" I moved my hand a fraction closer to his, unsure if he would notice. \"What is it about me? I seem to attract the WORST guys. I'm starting to feel broken.\" My voice, embarrassingly, shook a little and to my surprise I found Jude was hooking his legs around mine under the table. My heart started to beat faster.\n\n\"Nate.\" He smiled at me. \"It's not that you attract the worst guys. You attract everyone, ok? The mean ones are just pushier and get to the front of the queue first.\" I laughed.\n\n\"Yuh-huh. Please direct me to this queue.\" I gestured around the bar. Jude had a small smile on his face and he raised his eyebrows a fraction as I looked at him. Oh. Oh, Jude. I started to blush as he looked at me, with that small smile on his face.\n\n\"I really wish I hadn't gone on a date tonight.\" He said slowly. \"Should have gone with my first instinct.\" His eyes flashed as he grinned at me, leaning in a fraction. Oooh. My chest got warm as I looked at him and my mouth felt dry.\n\n\"Which was...?\" I led him on, reflecting his movements and moving in... when out of nowhere Ethan and Logan were sitting between us, glaring at Jude. I flinched in surprise. Jude sighed and inched away from me, giving them each a really firm gaze. I followed all the eyes as they seemed to talk to each other silently. I'm pretty good at reading people. I grinned to myself. Huh. They were pulling the 'stop hitting on Nate' card. Which meant he'd said something about me. I smiled at him shyly. I wonder how long he'd been into me? Forever? Or just since he split up? And he obviously knew I was into him because I am the world's least subtle person. Jude glanced at me and an expression of longing crossed his face. I grinned. Oh god, I loved it when he looked at me like that. But his friends didn't. I sighed as they directed the conversation to houseplants, because they're all adults and apparently that's something adults care about, and I was insanely bored. With Russell on my end and these guys on his we so weren't going home together. Which I suppose I didn't need. Not tonight. I wanted him when I was feeling warm and safe and when I was sure Jude knew how to read consent properly. And I wanted him to want me, really really want me, not just want a pretty hole to get over his ex with. I wanted someone who'd fuck me over and over, and switch, and still joke with me, and someone who liked me, really liked me. I felt myself growing warmer. Oh. I wanted a boyfriend. And Jude... was not a good candidate for that. For so many reasons.\n\n----\n\nJude\n\n----\n\nRussell sighed and bit his lip as he hung up his phone and returned to us. He slumped over on the stool beside me and stared at his phone\n\n\"Nate's on his way.\" He said. \"Um. He sounds a little upset.\" I felt my heart melting. Fuck's sake, Nate. Just go out with a nice guy. Why was his type apparently 'total douche'? Russel smiled as he read my expression. \"Yep.\" He said. \"I think that too. Anyway, you'll cheer him up.\" He said with a smirk. \"Just not too much.\" He warned quietly. I raised my eyebrows.\n\n\"What's that supposed to mean?\" I asked. Russell grinned at me.\n\n\"Oh Jude.\" He said. \"We both know you know what I mean.\" I found I was blushing. Oops. Nate's total inability to play anything cool must be rubbing off on me. I smiled at Russell. He was a really good brother. At least I knew Nate had him.\n\nWhen Nate arrived he glanced at everyone and made a beeline for the bathroom before quietly accepting a drink from Russel. He was smiling and looked lighthearted, but I could read him ok these days. Oh, Nate. Just fall for me. I thought silently. I'll buy you dinner first at least.\n\nI drew him in to talk to me and we began to exchange bad date stories. He didn't tell me much and I didn't pry. But as I looked at him, and he brushed his hair off his face and my heart started thumping heavily- I started flirting in spite of everything. And he was so game. The electricity between us was crackling in the air as we inched closer to each other... Only we were interrupted because apparently my friends have a sixth sense for cockblocking. They're very good at it. Eventually, once they must have decided they'd eased up the tension, I found myself alone with Nate again. He was fiddling on his phone and his head seemed to be very far away. He yawned and stretched out and I blinked as I saw he had a bellybutton piercing. Fuck that was hot. He looked at me and blinked.\n\n\"I'm going home.\" He said with a small sigh. \"I'm exhausted. See you Monday.\" I smiled and glanced at my phone. Huh, time had really slipped away.\n\n\"Ah shit. It is late. I should be going too.\"\n\n\"Where do you live again?\" He asked. \"I can drop you in the uber.\" I glanced at him, but he really didn't mean anything by that. He wasn't smiling or blushing or being cute. Aw, he's too sweet, he really is. No wonder he gets himself into so much trouble.\n\n\"Na, I'm ok.\" I said slowly. \"I'm nearby anyway.\"\n\n\"Oh, I thought you were...\" Nate's winced. \"Oh. I guess you've moved out huh?\" I sighed.\n\n\"Yep. I'm in a hotel just around the corner.\"\n\n\"Oh, huh, lame.\" Nate said. He looked at me thoughtfully. \"I have a spare room at the moment. Alex is away.\" He said that so casually. He shrugged at me. \"If you need a place to stay. For free I mean.\" I widened my eyes- but like the uber, he really wasn't suggesting anything at all. He was just a nice guy. I stared at him and he frowned as he looked at me. \"Uh... you don't have to.\" He said. I swallowed.\n\n\"Nate.\" I said quietly. \"Uh. You don't think that's kind of a bad idea?\" He suddenly turned pink as the penny dropped. He cleared his throat.\n\n\"No.\" He said with a sly smile. \"It's a great idea. I'm close to work, you need a place, you like dogs, I like company.\" And I like you and you like me, I didn't add. Nate grinned and his eyes twinkled. \"You really should think about it.\" He said. \"I'm a terrible cook and with Alex away I'm practically starving to death.\" I laughed.\n\n\"Oh I see. So this isn't for free.\"\n\n\"Cheaper than a hotel though.\" He grinned and stood up. \"I mean it Jude, least I can do for you. Think about it.\" And he bounced away to say goodbye to Russel with a real spring in his step.\n\n-----\n\nMonday\n\n----\n\n\"Right.\" I cornered Ryan as soon as I spotted him. He looked at me seriously.\n\n\"Right.\" He said in agreement, game for whatever I was about to throw at him. I really like that about Ryan. He's so... Earnest. I looked at him firmly.\n\n\"I have it bad.\" I confessed. \"I had a shitty date on Friday and now all I can think about is Nate. You have to keep him away from me.\" Ryan laughed.\n\n\"Aw Jude.\" He said. \"Have you tried Grindr? I never have, but I hear it's not all bad.\" I grumbled as I folded my arms tight across my chest.\n\n\"Ugh.\" I said. \"You know, I don't think one night stands with sluts is my thing. Is there like a gay ok cupid?\" Ryan shrugged.\n\n\"No idea, but I feel the same way about aps. Maybe you should find a gay hobby.\"\n\n\"What the fuck is a gay hobby?\"\n\n\"I dunno.\" Ryan said thoughtfully. \"My only hobby is the gym.\" He pondered that. \"Ummmm.... Pottery?\" I laughed.\n\n\"Yeah. No. Plus, what are the fucking chances Nate does pottery?\"\n\n\"Christ, you're right. Nothing creative.\" He leant on the wall and thought about it as I sighed and ran my fingers through my hair.\n\n\"Well, where did you meet Sam?\" Ryan frowned at me.\n\n\"What do you mean?\" He said. He gestured to my desk. \"He used to work there and I used to...\" He blushed. \"Shit. I guess that's not the best story to help you find someone else.\" He laughed awkwardly.\n\n\"Also proof that office romances can work out...\" I said slowly. Ryan sighed.\n\n\"Nate's like ten years younger...\"\n\n\"6 years!\" I corrected him hotly. Ryan shrugged.\n\n\"You make bank, and he's earning a hair above minimum wage.\"\n\n\"So? I'm not into him because of his money.\"\n\n\"Maybe he's into you because of yours.\" I glared at Ryan.\n\n\"Have you MET him? He doesn't give a shit about money!\" Ryan sighed and conceded that point.\n\n\"You're his boss.\" He said. \"That's not a great start.\"\n\n\"Not directly.\" I said. \"Also wasn't Sam your boss?\"\n\n\"That's different.\" He muttered. \"We met before that.\"\n\n\"So did Nate and I!\"\n\n\"Ok, ok, but really, the main reason Jude... you just came out of a really long relationship. Give it a couple of months ok? Especially if you want something serious. I dunno. I just worry that you... I'm sorry Jude, I'm worried Nate will end up really hurt. It's not fair to him.\" I sighed.\n\n\"I know.\" I grumbled. \"So I really need your help. Because every time I see him I end up flirting in spite of myself, and you know Nate- he flirts like it's his job.\"\n\n\"Does he?\" Ryan said. \"He never flirts with me.\" I winced.\n\n\"Even worse if it's just me.\" Ryan patted my shoulder.\n\n\"I'll do my best to help.\" He sighed. \"Although, honestly....\" He sighed. \"Well. We'll see anyway.\"\n\n-----\n\nHe did a great job, to his credit. He shadowed Nate all week, and I barely saw either of them, which was an absolute relief. Nate always waved at me whenever he rushed past me, but he always seemed to be moving and never stopped to chat.\n\nI hoped he was doing ok. I'd really meant to be holding his hand while he adjusted, but I was too scared I'd end up... actually holding his hand. But I missed talking to him. I missed him a lot, actually. He used to light up my day with his smile. Aw Jude. Get it together. Find a gay hobby. Whatever the shit that might be.\n\n---\n\nFriday\n\n---\n\nJude\n\n---\n\nA whole week of not having to talk to Nate and maybe my crush was fading? I didn't go to sleep thinking about him, that's progress right? Maybe I could be an adult after all.\n\nOf course, the minute you let your guard down... somehow he managed to run into me when neither of us were at our desks on Friday. His face lit up as he opened the door and he beamed as he saw me.\n\n\"Jude!\" He said, delighted. \"I've missed you! How are you?\" I frowned at him and felt myself grow red as I awkwardly looked away and stared at the wall in front of me. You know. It really shouldn't be charming, the fact that he's an utter airhead, but it is. I coughed and glanced back at Nate and he suddenly turned red and whirled around as he finally realised he was standing in the middle of a bathroom, watching me pee into a urinal. \"Sorry!\" He squeaked. \"I'm going to ask you that again, somewhere more... I... sorry Jude.\" He sprinted out of the bathroom and in spite of myself, I smiled as I watched him go.\n\n----\n\nHe caught me again when he was leaving for the night. He paused as he passed my desk and grinned at me.\n\n\"Look, I can let myself out now!\" He snapped his keycard at me. I rolled my eyes as he sat on my desk and slowly started to take his hair down. Crap, don't do that. I was just getting over you. Take your damn hair somewhere else. I looked away. \"I've missed you.\" He said. \"I guess I thought you'd be helping me. Not that Ryan's not great. But you know.\" I glanced at him. Yeah, Nate. I know. I leaned back and rubbed my eyes.\n\n\"You off now then? Me too.\" I stood up and stretched out and grabbed my stuff. \"You wanna grab a beer?\" Nate blinked at me and paused in detangling his hair.\n\n\"Like... a beer?\" He asked quietly. \"Or....\"\n\n\"A beer.\" I said firmly. But I held his eye as he looked at me, and we smiled at each other.\n\n---\n\n\"Ryan says you're born for this.\" I said as we settled in a booth in a shitty local bar down the road. I ran my eyes over him when he wasn't looking. He wore real shirts to work, ones with sleeves and buttons, and he'd rolled up his sleeves and shaken his hair all over his shoulders. He'd gone from office appropriate to looking once again like he'd just walked off set for some glossy magazine. Nate bit his lip.\n\n\"Well... I guess it's pretty straightforward.\" He said. \"I mean, you were right it's mostly just emails and getting people coffee.\" He shrugged.\n\n\"He said you have the whole office eating out of your hand.\" I laughed. \"Which I noticed, actually, everyone raves about you.\" Nate blushed and looked down at the table.\n\n\"They're just being nice.\" He muttered. \"Anyway, Ryan said your workload got really bad this week?\" He looked up at me and rested his chin in his hands. \"Can I help at all? Who's helping you with the inputting I was doing before? I can make time if that's back on your plate?\" I laughed at his eagerness.\n\n\"I'm doing fine.\" I said. \"And you should take it easy while you can. You'll be overworked in no time, trust me.\" Nate laughed.\n\n\"I hope so.\" He said with a small smile. \"I'm actually a bit bored. But don't tell anyone.\"\n\n\"Promise.\" I laughed at him. He grinned and relaxed a bit into the booth. I let out a breath I didn't know I'd been holding as I watched his shoulders fall backwards. My phone began to ring and I glanced at it. Weird. The hotel. I picked up with an apology to Nate.\n\n-----\n\nNate\n\n-----\n\nJude hung up and stared at the table, his cheeks red. Weird, normally I'm the one lighting up like Rudolph's nose at the drop of a hat.\n\n\"You good?\" I asked him. He winced and ran his fingers through his hair.\n\n\"I've... been kicked out of the hotel.\" He said slowly. I stifled a laugh.\n\n\"Really? Jude! What did you do? Like... trash the room?\" He chuckled and shook his head.\n\n\"No I was... um....\" He shook his head again and avoided my eye. \"Smoking. Inside. I thought with the window open and the smoke alarm covered I'd be ok... but....\" My mouth fell open and I felt myself kick him under the table.\n\n\"Jude! Are you like 16?? Come on!\"\n\n\"I know!\" He put his hands up in surrender. \"I know. I've been... a little... I dunno. Not myself. Since.... You know.\" My face fell. Poor Jude. He seems like he'd have it all together you know. Even at work he still has his hair all combed properly, and his belt and his shoes matching, and everything in on time. But of course he wasn't ok. And I guess smoking in hotel rooms wasn't the worst thing he could be doing.... Still.\n\n\"Well, anyway, I guess that's you with me for a bit.\" I said lightly. \"You can smoke outside.\"\n\n\"Huh?\" Jude looked at me blankly.\n\n\"I told you, I have a spare room.\" I grinned at him. \"I'll set it up tonight, you can come round with your stuff.\" Jude stared at me. But his brain wasn't totally functioning. I could tell, because he just... nodded quietly.\n\n----\n\n\"Hey.\" He said quietly as I opened the door.\n\n\"Hey!\" I grinned, and was bowled into his arms by Aioli, an adult Samoyed who was staying with me for a couple of weeks. I laughed as Jude caught me and wrapped his arms around me. Thank you Aioli, you wonderful beast. Jude set me upright and laughed. Thank God. He'd been so distant and moody. It was so nice to hear him laugh properly. \"That's Aioli.\" I introduced them to each other. \"She's annoyed because I am like, really late for taking her for a walk.\" Jude smiled and knelt down and started playing. My heart began to melt as I watched them fool around for a minute, Aioli getting slobber all over Jude's nice suit. Jude glanced up eventually and caught my eye. \"You wanna come on the walk?\" I asked. Jude nodded and stood up with a yawn. I looked him over. Hmmm. He had big dark shadows under his eyes, and he wasn't standing up straight. He was pale, and red eyed. I bit my lip. \"Better idea- we walk Aioli together tomorrow morning and right now you get settled?\" Jude smiled at me gratefully.\n\n\"Yeah, maybe that's a good idea.\"\n\n\"You should have a bath.\" I gestured to the bathroom. \"There's all my nice soap and candles in there. Just avoid Alex's stuff, not that you'd touch it anyway because it's all gross straight guy shit. I'll get it started. You can put your bags in here.\" I grabbed one of his bags and he followed me mutely to my room. Ok, I'd originally meant he could stay in Alex's room, but then I felt kind of bad because I hadn't exactly asked Alex, and I figured maybe Jude could just have my room and I'd sleep on the couch. Jude glanced around and smiled.\n\n\"This your room?\" He asked. I shrugged in acknowledgement. Jude smiled at me. \"Does Aioli sleep in here?\" He gestured to the dog bed at the end of the bed.\n\n\"Ah... yeah, but I'll drag that out...\"\n\n\"Don't you dare.\" Jude grinned. \"Just Aioli right now?\"\n\n\"Yeah, house is a bit quiet.\" A cat suddenly appeared and ran up my back. \"Ow, fuck!\" I swore. \"Oh and I guess the twins are here- Paprika.\" I gestured to the cat on my shoulder. \"Cardamom will be around. He hates strangers though.\" Jude smiled and reached for my shoulder, petting the cat that had settled there. \"Here.\" I handed him Paprika. \"I'll start running that bath.\"",
        "Aioli insisted on helping me and whining, because I really had left it way too long for a walk, and I tried to placate her as I lit some candles and pulled out my nice stuff. I showed Jude to the bathroom and he sighed as he sat down on the toilet and stretched.\n\n\"You're an angel, Nate.\" He said. \"Thank you.\"\n\n\"It's no big.\" I grinned. \"Alright. I'll see you in an hour.\"\n\n------\n\nI'd just got in the bath when the door opened a fraction and Nate's tattooed arm reached around the door with a fluffy robe.\n\n\"Might be a bit small.\" He said. \"But I thought you might want something other than a suit to put on and I didn't want to go through your stuff. Anyway, I'll lock the front door, but there's a spare key in the bowl in the hallway, it's the red one, ok, bye Jude!\" He closed the door and I could hear him talking to the big fluffy dog as they went for a walk. I lay back- the bathtub was a little small for me, probably the perfect size for Nate, and closed my eyes with a sigh. Man, a glass of wine and a cigarette and I'd be in heaven. Not that I'd ever smoked in a bathtub. Actually that sounds like way more trouble than it's worth. I smiled to myself and let myself relax. I closed my eyes, and before I knew it, I was asleep.\n\nI woke up to the smell of onions and a dog licking my face. I laughed as I gently pushed her off me and chided her kindly. She was very excited to make a new friend, and seemed a lot less whiny now that Nate had worn her out a bit.\n\n\"Crap.\" I heard Nate yell. \"Is she in there? Sorry, Jude!\"\n\n\"It's ok, I'm a prune anyway, I'll be out in a second.\" Not helped by the dog wrapping herself around my legs and jumping up on me as I tried to get dry. I tried on the dressing gown Nate had leant me and grunted. Hmmm. Barely acceptable, but I'd get changed right away.\n\nI ran into Nate in the hallway and both of us just stopped and stared. He'd changed, and was wearing a pair of shorts so short his ass was basically hanging out and a singlet with deep cut outs in the arms. I mean, he may have well have been naked, that was like almost all his skin on display. And his body was... well I knew it was hot. But that was the most I'd ever seen of his abs and his arms... and christ, his legs.... And he was totally on the same wavelength, looking at me hungrily in his robe which barely did up around my chest. I almost laughed as he suddenly turned away from me and waved vaguely in the direction of the kitchen.\n\n\"I'm... trying to cook.\" He said. \"Don't expect much.\" Aw, I'd really been hoping to cook for him, until I fell asleep in the bath. I laughed and went to get changed and rejoin him in the kitchen in a much more modest t-shirt and sweatpants. He grinned at me and offered me a bottle of wine. Cheap, probably shitty stuff, but I was grateful.\n\n\"Thanks Nate.\" He looked over his shoulder with a smile.\n\n\"Maybe if you're drunk you won't notice how bad this is.\" He said with a grin.\n\n\"What is it?\"\n\n\"Stir fry?\" He looked dubiously at the pan. It smelled good. I poured myself some wine and smiled at him.\n\n\"Can I help?\"\n\n\"Can you take over?\" He widened his eyes. \"Seriously I'm not joking, I can't cook.\" I laughed and stood up to join him.\n\n\"Looks fine so far?\" I took the spatula off him and stirred it. \"What's in here?\"\n\n\"Onions and a packet of frozen vegetables.\" Nate blinked at me. \"Rice in there...\" He pointed to a pot that was simmering with the lid on. I smiled at him and touched his shoulder.\n\n\"You're doing perfectly. Did you have some meat you wanted to add?\" Nate bit his lip.\n\n\"Sorry, no meat in the whole house- unless you count the dog food... Sorry, I'm vegan...\"\n\n\"Oh no, that's fine. Glad you told me I was going to add some eggs.\" Nate wrinkled his face.\n\n\"Ok, well, actually I eat eggs.\" He coughed. \"But only because Betsy and Bertha insist on laying them.\" I smiled at him.\n\n\"You have chickens?\"\n\n\"Oh yeah.\" He gestured vaguely outside. \"Chickens and bees. That's why we have eggs and honey, although I'll be honest, we don't have a cow so I can't explain the butter...\" He caught my eye and smiled. \"Ok, maybe not vegan- although like, I sometimes am.\" I laughed.\n\n\"I really don't mind.\" I said. \"I'm not going to hold you to anything.\" He smiled and poured himself a glass and hopped up on the bench beside me. I glanced at him. \"Smooth transition.\" I said. \"I'm making this then?\" Nate grinned at me.\n\n\"Please?\" He whined. I rolled my eyes.\n\n\"Nope.\" I decided. \"Where's your pantry?\" Nate glared at me, but he wasn't really mad, he was smiling, and he slipped back off the bench and pulled out a few drawers for me. I flicked through the bottles and herbs and looked at him. \"So your flatmate can cook.\" I said. \"You're well stocked.\" Nate shrugged.\n\n\"Yeah. Alex can cook.\" He moved close to me and watched me select a few things. I explained what they were as I added them to the vegetables, and he obediently stirred the pan. I added the rice and explained to Nate how to get it crispy and we sipped on our wine and stood too close to each other and talked about why he didn't cook- because he lived with his mum for way too long and couldn't sit still for long enough once he moved out to properly learn, and talked about why I did- because I grew up with a thousand foster parents who all worked too many jobs and someone had to be the grown up, and eventually he helped me plate it on a really nice set of ceramic bowls. I inspected them.\n\n\"These are stunning.\" Nate smiled.\n\n\"Thanks, I made them.\" I groaned.\n\n\"I should have put money on that.\" I laughed. \"You do pottery then?\" Nate shook his head.\n\n\"Na, I can. I don't like DO IT, but I hang out at the Wellington Pottery Studio sometimes.\" He sat down opposite me.\n\n\"These are really good for someone who doesn't 'do' it.\" Nate frowned.\n\n\"Na, they're a little heavy at the base.\" He said. I rolled my eyes.\n\n\"Nate, one day you better learn to take a compliment.\" He laughed.\n\n\"Ok.\" He said. \"One day I will. This tastes so good. Thank you.\"\n\n\"Tomorrow we'll do something Mexican.\" I said. \"Loads of easy vegan Mexican recipes.\" Nate grinned.\n\n\"Amazing.\" He said. \"I'll get so fat with you here.\" I laughed.\n\n----\n\nHe made tea after dinner and I helped him with the washing up, even though he told me that was unfair because if it wasn't for me we would have been eating rice swimming in soy sauce.\n\n\"That could be nice, you heard of Oyakodon?\" Nate shook his head and I laughed. \"Actually if you're vegan you really don't want to be eating Oyakodon.\" Nate shrugged.\n\n\"I did mention I'm a pretty half assed vegan.\"\n\n\"Well, maybe I can try it with tofu for you.\" Nate smiled at me.\n\n\"Can I hire you to cook for me when you find your own place?\" I laughed. I almost told him he could come over any time, but he yawned before I had a chance.\n\n\"Christ, I've done nothing but sit in front of a desk all week and I'm exhausted.\" He sighed. \"Alright, I'm going to brush my teeth. You can stay up.\" I glanced at where he'd be sleeping, inches from where I was sitting. No, bad idea.\n\n\"I'm pretty tired too.\" I said. \"Thanks again for propping me up.\"\n\n\"That's ok.\" Nate smiled.\n\nHis bedroom was covered in protest posters and art he'd collected from across the world, and I smiled as I inspected the walls, and his bookshelves, and almost his drawers- before I realised that was crossing the line. The dog did come to sleep on the bed, which I was delighted by, and I curled up. Something about being warm, in a room that wasn't devoid of personality, with a full stomach and the dog I'd always wanted in my arms meant I had the best sleep in months.\n\n----\n\nSaturday\n\n----\n\nJude\n\n----\n\nI woke up and stretched out and grinned at the dog, who was whining at me. Nate knocked on the door.\n\n\"Are you decent?\" He called out. \"It's breakfast for Aioli, then I was gonna take her for a walk.\" I drew the blankets up around me.\n\n\"I'm in bed.\" I answered, and I guess that was good enough, because Nate swung the door open and Aioli bounded up and jumped all over him.\n\n\"Calm down!\" He laughed. \"You're bigger than I am, dummy.\" He laughed and nodded at me before leading Aioli out for breakfast. I bit my lip as I watched him go. Did he... ever wear... actual clothes at home? Shoot.\n\nBut still. I smiled to myself. I did it. A whole night at his and I didn't even kiss him. We'd be fine. I'm a goddamn hero.\n\nOf course. There was an entire weekend to get through.\n\n----\n\nNate\n\n-----\n\nMy back was in so much pain. Ok, I guess I'd have to take Alex's bedroom after all, this was not going to work indefinitely. I tried yoga to stretch out the kinks... first time for everything, before I could hear Aioli whining and went to get her breakfast. Jude's eyes bugged open as I opened the door. Ah, yeah, Nate... maybe, since you're not living alone, you could stand to put on something a little less... revealing? My loungewear is mostly long singlets, and crop tops, and short shorts... but then again, I kind of liked the way he was looking at me. Like he couldn't look away. God, I was going to make his life a living hell, I could tell. I smirked to myself as I made breakfast for us and the dog.\n\nJude was trying really hard not to look at me too much as I sat up at the bench and watched him eat. He glanced at me.\n\n\"Um. You just gonna watch?\" He asked. I shrugged.\n\n\"Usually my breakfast is liquid.\" I said, holding out the mug of coffee. \"Am I being weird?\"\n\n\"Yeah.\" Jude grinned at me. \"You're watching me eat. It's disconcerting.\" I hopped off the bench and went to scrub out the pan I'd made his eggs with.\n\n\"Sorry.\" I laughed. He caught my arm as I walked past.\n\n\"Ah... did you really just... make this for me?\" He asked, turning a little pink. I grinned at him and shrugged him off.\n\n\"You looked tired last night.\" I said. \"And fresh eggs on toast is like, super easy good host points so you'll cook for me tonight.\" I looked over my shoulder at him and he rubbed his neck. Huh. I'd never expected Jude to blush like that. I grinned and turned back to the washing up. \"I'm heading to the shelter in half an hour.\" I said as I scrubbed the cast iron. \"So out of your hair all day.\"\n\n\"Hmmm.\" He grunted. I glanced at him, and swung my hair off my face.\n\n\"You could come?\" I offered. He looked at me with a sigh. \"There's a Rottweiler puppy in. He kinda reminds me of you.\" Jude raised his eyebrows.\n\n\"Aren't they... kind of aggressive?\" He frowned at me. I folded my arms and shook my head.\n\n\"Fiercely loyal.\" I corrected him. \"And smart.\" He smiled.\n\n\"What would Nate be?\" He wondered out loud. \"A Labrador? Smart, friendly, adorable?\" I laughed.\n\n\"Flattered. I'd be a Beagle. They're always getting into trouble.\" Jude smiled at me.\n\n\"Not if I have anything to say about it.\" he said. I rolled my eyes and grabbed his plate off him.\n\n\"See?\" I raised my eyebrows at him. \"Rottweiler. Excellent guard dogs.\" Jude stood up suddenly and mumbled something as he left the kitchen. I glanced at Aioli. \"Oops.\" I muttered to her. \"I think I just went a little too hard on the flirting.\" I stared at the seat where Jude had been all of two seconds ago. \"Although he was too, right?\" I stared at Aioli. She panted at me. Useless.\n\n----\n\nJude took himself out for dinner that night- I mean, I assume he was actually out on a date but either way he came home at a reasonable hour. I watched him from the couch as he let himself in, and dropped the spare key on the counter. On Sunday I'd agreed to go to an Art Exhibition with Russell and Shona, and as impolite as it was not to invite Jude, that would mean I'd have to admit to Russell I'd invited Jude to stay with me... and we could really save that. Jude didn't seem to mind. Actually, if I was reading him correctly, and I think I was... he was kind of relieved.\n\nI arrived home late, and he'd made dinner and left a note.\n\nEnjoy it, I'm teaching you how to cook tomorrow night, Nate so no more free meals x\n\nPS It's vegan, mostly, like you\n\nI grinned at AIoli and showed her the note.\n\n\"He really likes me.\" I told her. \"He has it bad. I just need to convince him that it's a good idea.\" I sighed as I looked towards my bedroom door. \"Which would be a lot easier if I actually thought it WAS a good idea.\"\n\n-----\n\nMonday\n\n----\n\nNate\n\n----\n\nWe had a tiny argument about getting to work. He wanted to uber, because he'd left his bike in storage, which was dumb becuase I had the Prius.\n\n\"Just come in with me.\"\n\n\"In your car?\"\n\n\"Well it's fucking stupid to get two cars going tot he same place! Do you care about the environment at all?\"\n\n\"Nate, is this really the hill you want to die on?\" Jude sighed. \"Look. What are people going to think when we get out of the same car?\" I wrinkled my nose. Oh yeah. I guess I hadn't got that far.\n\n\"Car pool.\" I muttered. \"Let's just say I picked you up because it was on the way.\" Jude frowned. But he gave in eventually. We got to work early and I went to say Hi to Russell and grab a coffee for everyone. I'd noticed that people in offices will basically melt and do anything you ask if you're constantly buying them treats. Kind of like dogs, actually. Russell glared at me as Jude waved and got in the elevator.\n\n\"Is there any reason you're arriving at work together?\" He asked. I shook my head, trying to look as calm and not guilty as possible.\n\n\"Bumped into each other outside.\" I said. Russel leant on the counter and shook his head.\n\n\"Has anyone ever told you that you're a shitty liar?\" I laughed.\n\n\"Yeah, actually. Anyway, gotta gap...\"\n\n\"Gotta wait for your coffee.\" He said firmly. \"So you caved already? Not that I blame you entirely, Jude's also an adult and I'm sure he also knows it's a bad idea.\" I sighed.\n\n\"He's just staying at mine for a bit.\"\n\n\"He's.... Staying... at.... Oh Jesus Christ Nate. Why?!\"\n\n\"I....\" I blushed. \"Ok, this doesn't sound believable, but I felt bad for him. I wasn't thinking it through. He got kicked out of his hotel, and I just... I thought it might be nice for him to be with a friend.\" I rolled my eyes as I heard myself speak. \"Ok, I hear it, underneath that there was definitely a layer of maybe I'd get to see him shirtless.... But....\" Russell sighed.\n\n\"Actually that does sound believable.\" He said. \"You're such a dork.\" He handed me two trays of coffee. \"I give it 48 hours until you cave. Here's your coffee.\"\n\n\"Thanks.\" I said. \"48 hours! That's a lot of faith!\" I laughed and waved to him. Way too much faith Russ. You know me better than that.\n\n----\n\nJude\n\n----\n\nI stood up to leave for the day, later than I'd like but without Nate as my personal assistant I was getting behind again. To my surprise he appeared at the lifts beside me and smiled.\n\n\"Were you waiting for me?\" I asked. Nate shrugged.\n\n\"For environmental reasons.\" He grinned. \"We should pick up your bike.\"\n\n\"It won't fit in the Prius.\"\n\n\"Can I ride it then? I've always wanted to ride one of those fancy e-bikes.\" I winced at the idea of Nate anywhere near my $5000 baby. No doubt I'd find him wrapped around a tree with that big goofy apologetic smile on his face. But beyond that....\n\n\"I can't actually drive.\" I admitted. Nate started to laugh.\n\n\"Really? Huh.\" I rolled my eyes. \"You don't seem the type.\" He murmured. \"You're so put together.\"\n\n\"I didn't have time to learn when I was a kid.\" I mumbled. \"And then my priority was getting out of the system, and getting an education, and getting a job... and learning to drive just slipped down the list.\" Nate smiled at me.\n\n\"You weren't tempted with that sweet Maserati?\" I laughed.\n\n\"Not a car guy.\" I glanced at Nate. \"Are you?\" He shrugged.\n\n\"Kinda? But I try to ignore it because you know....\" He rolled his eyes and pulled the peace sign at me with a very cute wink. \"Environment loving hippy here, it's off brand.\" I laughed. \"Where's your bike?\" He asked. \"We really should get it, can you ride it home or is it like out in Kaiwharawhara?\"\n\n\"Na, top of Thorndon Quay. I'll race you home.\"\n\n\"You'll win.\" Nate grinned. \"This baby is gutless.\" He laughed. \"Wish I could spring for a Tesla.\" I smiled at him. Wish I could buy you a Tesla. I bought Levi the Maserati, after all.\n\n----\n\nTo my surprise, I did actually beat Nate home, which was a little awkward, since I didn't have a key. I sat on the porch, waiting for him, scrolling on my phone, and after trying to talk myself out of it for ten minutes, gave in and lit a cigarette.\n\n----\n\nNate\n\n---\n\nJude was having a cigarette on the porch which he hastily tried to stub out as I approached. I laughed at him.\n\n\"Don't worry. In fact, blow the smoke my way.\" He sighed and wrapped his hands around his knees and lit another one as I moved his bike to the garage.\n\n\"Shit you must have gunned it.\" I whistled. \"Can't wait to have a go on this.\" I caught Jude's eye. He smiled thinly. Yeah, I wouldn't want me anywhere near a crazy fun expensive e-bike either. I sat beside him and looked at his packet of cigarettes, debating if I was gonna ask for one or not. He followed my gaze and sighed.\n\n\"It's bad at the moment.\" I swallowed and looked at him.\n\n\"It'll get better.\" I said. He looked at me. He looked and I looked, and then his hand was gently tucking my hair behind my ear and my heart was beating faster and I couldn't hear myself think. He leant in, and my eyes started to close, and then suddenly I heard him laugh, and I blinked as he pulled away, and squeezed my hand, which was somehow in his.\n\n\"Um. I'm going to finish this.\" He raised his hand. \"And brush my teeth.\" I bit my lip.\n\n\"I don't.... Really mind.\" I said. Jude smiled and cautiously reached for my hair, running his fingers through a strand.\n\n\"I do.\" He said.\n\n\"Ok.\" I smiled at him and glanced at where our fingers were entwined. I took a deep breath, and slowly moved until I was tucked in close against his chest, his arm around me, his fingers touching mine the whole time. He rested his chin on me and kissed the top of my head.\n\n\"Nate...\" I sighed and looked up at him.\n\n\"Hey, we tried not to.\" I said to reassure him. His eyes crinkled. \"Not our fault we're Bella and Edward.\" Jude shook his head.\n\n\"Huh? Who and who?\"\n\n\"Oh my god, what is wrong with everyone?!\" I laughed. \"Uh. Darcy and Elizabeth... except less witty.... Romeo and Juliet.... only less tragic... Rose and Jack... Anthony and Cleopatra...Tristian and Isolde, christ, why are most of these so sad?...\" Jude wrapped his hand around my head and suddenly I was facing him, and his eyes were closed, and his lips were pressed against mine... and I moaned and went limp in his arms as he parted my lips with his tongue...\n\nMaybe that kiss lasted seconds. Maybe it lasted hours. I was lost. I'd never been kissed like that- desperately, and passionately....\n\n\"Sorry Nate.\" I blinked as Jude's deep voice brought me back to life. \"I really did want a mint at least... but I was worried you'd never shut up.\" I smiled at him and started to laugh as he smiled back. \"Anyway, I know what you mean.\" He squeezed my shoulders tight. \"Richard Gere and Julia Roberts.\"\n\n\"Gee, thanks.\" I rolled my eyes at him. He laughed.\n\n\"I would have kissed you weeks ago.\" He said, resting his head on mine, and slowly moving his hands to hold me properly. \"And then, at the same time, I never meant to kiss you....\"\n\n\"I know.\" I reached for his cigarette- now that I'd had a taste I really wanted more, but he batted me away with a firm look. \"It's... cool, Jude.\" I said. \"I...\" I felt tongue tied. I wanted to tell him we were made for each other, like all those fictional couples I'd just mentioned, and I also wanted him to think I was calm, and didn't care way too much, and I also understood why he'd be hesitant to kiss me.... I sighed. \"You gonna cook me dinner now?\" He glared at me, but his eyes softened as I reached out to stroke his cheek, and he wrapped my hand in his.",
        "\"Absolutely not.\" He said. \"You are not wrapping me around your finger, Nate, even when you look at me like that.\" I smiled at him.\n\n\"You say wrapped around my finger like it's a bad thing.\"\n\n-----\n\nJude\n\n---\n\nI offered to walk the dog, and gave him a list of instructions for Enfrijoladas- I'd stopped in at a supermarket on my lunch break and we were all set. Nate looked at me and his bottom lip stuck out a little. I tried to hide my smile. Very, very cute, but I wasn't falling for it.\n\n\"This is a total hustle.\" He moaned. \"You get to hang out with a cute dog and I have to cook?\" I grinned as I attached the leash to Aioli.\n\n\"You have to learn to feed yourself.\" I waved to him.\n\n\"Fine, then I'm totally teaching you how to drive!\" He yelled after me as I departed.\n\n---\n\nIf I were a single straight man, the first thing I would do is get a dog, I thought as I fended myself off from a host of women of all ages and shapes and sizes who were enamoured with Aioli and sitting WAY too close, asking me questions about her and then about me. I sort of hoped being an idiot with the dog, rolling around and playing fetch would get them off my back but that dog was like crack. Eventually I got tired of being polite and just enthusiastically said how much NATE and I adored her and that he was NATE and I's baby and that NATE was cooking me dinner and I made a silent apology to Nate for being my fake partner- and honestly that kind of made it worse. Apparently a gay man with a dog is just fucking too much for the women of Brooklyn. I barely escaped with my life, let alone my dignity.\n\nI was exhausted when I got home, stomach rumbling, and I smiled happily at Nate as I opened the door. He had everything prepared but since the actual cooking time was only around 15 minutes he'd held off. I handed off the dog to him and went to have a shower. He yelled at me and asked if it was ok to wait till I was done to begin cooking because he really didn't want to fuck it up, and I laughed because he was really trying to get out of this.\n\nWhen I'd finished, and got changed back into my sweatpants I went to help him, and...\n\nThat's when I knew I was about to truly fuck it all up, officially.\n\nI don't know why it was inherently worse than the weekend- maybe I'd just been exhausted and sad then? But now I was... well rested, and happy because I'd already kissed him... and he was in his fucking obscene shorts and he reached for the wine in the cabinet, giving me a glance of the tattoos across his hips... and his hair was half up and sort of falling out he was wearing socks which was weirdly adorable....\n\nI lost my train of thought and stared at him.\n\n\"Earth to Jude....\" He stared at me. I caught his eyes and he started to blush because I wasn't looking away. He swallowed. \"So... you gonna help with the enfrijol....\" He didn't quite manage to finish his sentence because, out of nowhere, before my brain had a chance to wake up and tell me off, I was pressing him against the kitchen counter, wrapping my hands around his hips.\n\nMy heart shuddered wretchedly as I clasped his hands and twisted them around me, holding him firm so he couldn't wriggle away. I panted, losing any control I ever had over myself, and just pressing myself heavily against him- I wanted to devour him. I moaned and just managed to open my eyes, just in case I was wrong... just in case he was scared, or horrified, just in case... god, please no. Just in case he didn't want me like this after all.\n\nI released his hands and they stayed where they were, wrapped around me, and I glanced down at him, to see his mouth was open and his eyes were half closed and he was moaning, and pressing himself back against me with equal force. His whole face was pink and needy, and I ached for him, like a genuine ache in my bones as he blinked at me.\n\n\"Oh Jude.\" He whispered. I moaned and swept his hair to one side, gently kissing his neck. He sighed and went limp against me. \"I've wanted this for so long.\" He moaned. I pulled away and held his head in my hands, gazing deep into his eyes.\n\n\"You have no idea.\" I whispered. I wanted to tell him I thought I loved him. I wanted to wrap our souls together..., but my hand was running over his chest, and I pressed my hand to his crotch and... I wanted to fuck him so bad. He gasped as I pressed my hand to his dick and I groaned in pure desire, feeling how fucking hard he was. He reached for my cock in return, pushing my sweatpants out of the way and wrapping his hand over my trunks, and we pressed our dicks into each other's hands, panting and whining. I grabbed his hair at the nape of his neck and pulled his head back so he could kiss me, and we explored each other from the inside out. \"How far can we...\" I murmured. Nate shuffled up on the bench and wrapped his legs around me.\n\n\"Fuck me.\" He whispered, his eyes wide and desperate. I pushed his hair off his face and held his gaze, holding his hand and placing kisses on his fingers because I couldn't stop kissing him.\n\n\"Yeah?\"\n\n\"Yeah.\" He whimpered. Oh Nate. Fuck. He blinked and seemed to briefly get himself together. \"Bedroom.\" He whispered. \"Lube. Condoms.\"\n\n\"Yeah.\" I wrapped my arms around him and he laughed as I tried and failed to pick him up. \"Jesus.\" I said. \"I'll have to start working out.\" Nate grinned at me and jumped off the bench.\n\n\"No thanks.\" He said, taking my hand. \"Can't stand being thrown around.\"\n\nHe placed me gently on his bed and knelt between my legs, pulling at my shirt as I pulled at his. We peeled each other's clothes off desperately- our mouths catching each other's and our hands dancing across each other's bodies. I ran my fingers through his ridiculous hair and he moaned as I tugged on it gently.\n\n\"You like that?\" He moaned and pressed his head to my chest.\n\n\"Yeah.\" He panted. I ran one hand over his chest- god. He was surprisingly stocky but it really was all muscle. I hadn't expected it- the guy worked in a coffee shop. Where did he get off on having all that? I thumbed his nipple and he shivered. He pulled me down, lying on his back, spreading his legs and grasping at me- pressing his lips to my chest and directing my hands to his hair, which I tugged on- and his chest, which I caressed- and his ass, which I grabbed and smacked...\n\n\"Lie still.\" I had to direct him. I pressed him firmly against the bed, one hand on his chest and one hand on his cock- god his fucking hard, leaking cock which he moaned and pressed into me. His eyes flashed as he looked at me and he rolled over and jumped on top of me, pressing his lips to mine again and running his fingers over my body. I laughed and let my body fall back against the bed as Nate trailed his sweet kisses down my chest, sweeping his hair out of the way and moaning as he reached my dick.\n\n\"Oh fuck.\" He murmured in between starting to kiss it, and lick it. I moaned as I grabbed the base and dragged it over his face. He closed his eyes and pressed his face close to it, breathing in my scent. \"Fuck.\" He whispered again. \"Jude...\" God my name sounded so slutty when it was spilling out of his lips that were half wrapped around me.\n\n\"Suck it.\" I breathed. Nate obeyed instantly. He went slowly, peeling my foreskin back and playing with me gently- teasing me by licking all the way up my shaft and sucking on my balls. He moaned with every breath and his hand was wrapped around his dick- so turned on, but too distracted by my dick in his mouth to really take care of himself...\n\nMy hand found its way to the back of his head eventually, and I wrapped his hair around my fist so I could control him. I pulled him off to kiss his face, because I missed kissing him and I could feel him smile as I placed my lips to his. He knelt up for a second and we paused, just kissing.\n\nWe slowly drew apart, and looked at each other. His lips were parted and his eyes were wide and bright and lust filled. I grinned and let his head fall back to my dick. I held his head with both my hands and he let me take control.\n\nHe was so good. I felt myself almost lose it because he was so soft and eager, and god- the kid could fucking deep throat- I pulled his head back reluctantly and he pouted at me.\n\n\"Nate.\" I whispered. \"I really want to fuck you.\" He closed his eyes and moaned.\n\n\"Oh fuck, yes.\" He clambered over me and I laughed as he half threw himself off the bed and reached for condoms and lube. I grabbed them off him and set them to one side as I pulled him into my arms. Nate was straddling me, his legs wrapped around me and his head resting on my shoulder. He moaned as I started rubbing my fingers over his hole, and he pressed his dick into my ribs, holding me tight and pressing his ass against my hand. \"Oh fuck Nate.\" I whispered. I cradled him and rolled around to spread him on his back, and I gently moved his legs apart. He spread them willingly and sighed as I knelt between them.\n\n\"Oh yes... yesyesyes...\" He moaned as I started nibbling on his slightly hairy thighs and gently licking and kissing his ass, making my way to his hole, and teasing it with my tongue. His breathing grew heavy and he lay still for the first time, gently sighing with pleasure.\n\n\"Please...\" He mumbled eventually. I smiled as I looked up.\n\n\"You ready?\"\n\n\"Yes.\" He was almost drooling and his face was flushed red. I ran my eyes over his body. Mmmm, so strong- so muscular, so masculine with his tattoos... and so totally soft and weak for me. \"Please Jude.\" He whimpered.\n\n\"Play with your nipples.\" I demanded as I reached for the condoms. I watched him hungrily as he pleased himself for my entertainment- his dick was really straining and he was whining with passion and I wasn't even touching him. I grinned as I wrapped myself up and warmed up the lube in my hands.\n\nNate spread his ass for me and begged for me to start fucking him. God he was a slut. He barely let me finger him- but I could tell he was ready for me. His hole was soft and inviting and I pressed in slowly, wanting every second to last. He clutched at my forearm involuntarily as I entered him, and his back arched as he silently opened his mouth. His eyes flew open and he stared at me longingly as I thrust in slowly. He pulled me in, clenching his hole and moving his body as though he wanted to connect on every surface. His legs wrapped tight around me, giving me no room to thrust, and his arms were suddenly pinning mine to my slides and his face was pressed into my neck.\n\n\"Oh Jesus.\" He moaned. \"Fuck me Jude, please, fuck me.\" I grunted. My mind had gone totally blank. All I knew is that I wanted him so bad. I wrapped myself just as tightly around Nate and held him close as I started to fuck him, hard. Deep. Pounding him because he could take it. And he was giving it back, throwing his head back so his hair draped down his back and thrusting his hips into mine. We were thrusting and panting and swearing. His hole was clenching around me.\n\n\"Jesus, jesus... Jude fuck, you're so... fucking good, so big... oh fuck Jude....\"\n\n\"Good boy.\" I whispered. \"Good fucking slut, god you fucking love this.\"\n\n\"Yes... I'm such a slut...\"\n\n\"Fuck yes. My little slut. Such a good boy, spreading your legs for me....\"\n\n\"Yes Jude...\"\n\n\"Beg for my load.\" I whispered.\n\n\"Oh fuck...\" He whined and his fingers tore at my back. \"Please Jude, please give me your fucking big load.\"\n\n\"Good boy, you want it?\"\n\n\"Yes... please... please.\"\n\n\"Where?\" I whispered. Nate glanced up at me and he blushed furiously as we caught each other's eyes.\n\n\"My face.\" He mumbled. I moaned.\n\n\"Good boy.\"\n\nI pressed him against the bed and kept fucking him, wrapping my hand around his dick tightly and jerking him roughly. I got close- real close... and I wrapped one hand around his neck as I felt the point of no return approaching. He moaned as I pinned him down, and his eyes blinked open.\n\n\"You ready slut?\" I moaned. He moaned his assent. Not good enough. I tightened my grip. \"Ready for my big fucking load all over that pretty little face?\"\n\n\"Yes. Please.\" He managed to choke out. I grinned.\n\n\"Good boy.\" I pulled out and he sighed at the loss. I smirked as I saw his hand drift to his ass. It's so cute when bottoms do that. Feeling the gape from the cock that was just there. I discarded the condom and started jerking off, looking down at his big wide eyes and his soft lips that were sucking on me not long ago... Oh fuck.\n\nI started to cum, coating his pretty face with my load and he moaned as I hit him across the cheek, and then the other cheek, and then his forehead... oh fuck yes, he was mine now... I'd claimed him. He couldn't stop himself and he sat up and placed the tip of my dick in his mouth, closing his eyes and desperately sucking up the last of my seed until there was nothing left and he lay back reluctantly. I moaned at his eagerness. Jesus. Levi had never... never been so willing.... Ugh. I ran my finger through my cum and placed my finger in Nate's mouth as he lay there panting. He obediently sucked on it, closing his eyes as I ran my hands through his hair. He suddenly tensed up and I realised he'd been finishing himself off. I wrapped my hand around his as he came, moaning as I felt him pulse and his hot cum leak over our entwined hands. I closed my eyes and we breathed heavily, holding each other.\n\n----\n\nNate\n\n----\n\nJude blinked and laughed as he looked at me. He reached beside the bed and grabbed his singlet.\n\n\"Oh Nate.\" He said softly as he wiped my face. I laughed. He grinned and kissed my forehead. \"Suits you.\" He said.\n\n\"Everyone says that.\" I said. Jude scrunched up his face and shook his head.\n\n\"Ew.\"\n\n\"Oh come on, you're not the only guy who wants to give me a facial.\"\n\n\"You really are a slut.\" He smiled and nestled beside me. \"My little slut, Nate.\" He teased, singing in the My Little Pony theme tune. I pushed him off me laughing.\n\n\"Get out.\" I joked. He grinned.\n\n\"You'd miss me.\" I caught his hand as we looked at each other and I shrugged. Yeah. I would.\n\n\"Enfrijoladas?\" I suggested. Jude touched my face softly.\n\n\"Hold me for 10?\" He asked. I smiled.\n\n\"Bloody tops.\" I muttered as we lay down. \"Soft touches, all of you.\"\n\n-----\n\nHe helped me with dinner.... And by helped I really mean got in the way, kissing every exposed inch of skin, and it's my own fault that there was a lot of that. He directed me and stood behind me, his arms wrapped around my waist. He was touching me like he was in awe, and like he was scared I'd bolt if he moved too fast. As if. Eventually it was done and we sat opposite one another at the kitchen table. He entwined his feet with mine and we smiled, and talked about work, like any normal couple.\n\n----\n\nWe brushed our teeth and I awkwardly debated whether I was going to jump into bed with him or not... but.... We'd barely said anything about it. As soon as we got out of bed it was like that topic was closed for discussion. Because I don't think either of us knew what it meant. So I gestured to the couch and didn't even look at him to see if he'd be disappointed, only because I couldn't take it if he were relieved.\n\nAnd I lay on the couch, feeling like an idiot. I could hear Russell already. 'Nate, you dumb fuck, what did I say? He's rebounding! He's too old! He's out of your league! You'll end up hurt....' Like I didn't always end up hurt.\n\nI turned onto my side.\n\nHe was rebounding. No duh. He'd been broken up for like... two weeks. Officially. Although I swear he was flirting with me way, way before that. And he was older. So what? He was nicer than any guy my age. And he was wayyyy out of my league- he was loaded, and hot, and had a career....\n\nDammit. I sighed. You never do dating anyway, Nate. So just... do what you've always done. Fuck him, enjoy it, don't let your guard down, and for fuck's sake don't actually fall for him. I held myself closer. Don't fall for him. Because he's really nice, and he'll trap you by being really nice... but come on, all you are really is just some guy in front of him while he's trying to mend a broken heart. I nodded to myself. Don't fall for him, and this will be the best thing that's ever happened.\n\nI closed my eyes and willed myself to sleep.\n\n----\n\nWell. Sleep wasn't happening. I sighed and turned over and looked towards my bedroom. I swallowed and found myself standing up. I hovered in the doorway, looking at the lump in the bed. I cleared my throat.\n\n\"You awake?\" I asked.\n\n\"Yeah.\" He said clearly. I smiled widely.\n\n\"You horny?\" He sighed and the lump moved as he sat up.\n\n\"Come on.\" He said, throwing the covers back. I grinned and launched myself on the bed. He wrapped his arms around me and sat up. He wrapped his hand in my hair and kissed me desperately. \"Nate...\" He moaned, his fingers running over my body. \"Aw, fuck.\" He pressed his lips to my neck.\n\n\"Jude.\" I whispered, forcing him to hold me tight against him, his big arms wrapped around me. I looked up at him and smiled. \"Can't sleep.\" I said. He laughed.\n\n\"Yeah, that couch looks like hell.\" He ran his fingers through my hair. \"Well. Frankly I don't know why we pretended we weren't sleeping together in the first place. This is much nicer.\" I laughed.\n\n\"I dunno.\" I sighed. \"I guess I wanted to pretend I had some semblance of self control. But hey, I've never been hung up on that before.\" Jude laughed and tilted my chin up to kiss me. I moaned and my chest grew warm... and my cock jolted against his stomach and he pulled away with a chuckle. He looked at me thoughtfully.\n\n\"You ever switch?\" He asked. I grinned.\n\n\"Yes? Is that an invitation? Because yes, please.\" I eyed him up hungrily and he bit his lip.\n\n\"Ah... not... tonight...\" He winced.\n\n\"Oh right.\" I laughed and pressed my head to his chest. \"Yeah, I forget other people need to prep and stuff.\" He squeezed me tight.\n\n\"You don't?\" I rolled my eyes.\n\n\"I'm vegan and I eat plenty of fibre.\" I grinned at him. \"My ass is ready to go anytime. Well. Actually not anytime, you'll probably want to avoid taking me between like 5am and 8am....\" Jude wrinkled his face up and pushed me off him.\n\n\"Enough.\" He laughed. \"Yes, unlike Nate and his magical ass I do need to prep.\" He grinned at me. \"But maybe...\"\n\n\"Tomorrow?!\" I blushed and tried to reign in my enthusiasm. Honestly, Nate. Desperate is not sexy. But Jude moaned and pressed his head to my neck.\n\n\"Christ.\" He whispered. \"Yes.\" My cock stiffened as he panted heavily against me and I slowly pushed him down and pinned him down against the sheets, sucking on his neck and kissing his chest hungrily. I smiled at him and started to pull my hair off my face, slowly licking down his chest when he stopped me. He sat up and touched my arms.\n\n\"Nate...\" He mumbled. \"Can you lie down?\" He pressed his lips to my nipples and slowly locked my hands together above my head. I moaned and allowed him to move me, kneeling over me and pinning my hands together. \"This ok?\" He mumbled. \"You said you don't like being thrown around.\" His free hand stroked my chest, teasing me by getting close to my dick but never quite touching it.\n\n\"This isn't throwing me around.\" I sighed and bucked my hips involuntarily and Jude grinned.\n\n\"Lie still.\" He whispered, leaning over me and shifting on the bed and releasing my hands. I watched him as he pushed his short hair off his face.\n\n\"What are you...?\" Jude grinned at me as he opened his mouth and gently brushed the base of my cock with his lips. I felt a throb of desire shoot through me.\n\n\"Returning a favour from earlier.\" He whispered.\n\n\"You don't... have to.\" I moaned, as he teased me, just gently placing kisses between my legs. He looked up and suddenly his hands were pinning mine to my sides.\n\n\"Don't I?\" He growled. \"Well thank you sooo much, Nate. Now I know I don't HAVE to then I guess I'll leave it. Actually I guess I don't HAVE to do anything. I don't even HAVE to let you stay in this bed. I guess I don't HAVE to kiss you, or tease you, or fuck you, or....\"",
        "\"Stop it!\" I laughed. \"Shut up, Jude. I just meant... you know some dominant guys aren't into that. Like, I don't want you to if you're just returning a favour.\"\n\n\"Well, will it make you feel better if I said I've been lying here, rock hard, thinking about sucking you off?\" I blushed.\n\n\"Only if that's true.\" I muttered. He turned his head to one side and looked at me thoughtfully.\n\n\"You've dated some real cunts if you think I'm lying.\" He said. \"I like sucking dick as much as the next guy. And I'd really like to suck yours.\" Lucky the room was dark, I was so red.\n\n\"Well....\" I grinned. \"Go on then, stud.\" I tangled my hands in his hair and let my legs fall open so he could nestle between them. \"That's good.\" I moaned as he teased. He was an expert in teasing... kissing, and nibbling, and licking, and never really quite taking me... I felt my face turn red from his efforts and my breathing grow shallower. \"Ah Jude... fuck yeah...\" I whispered. I groaned as his tongue flicked over the tip of my cock, and as he pulled away I grunted, and grabbed his head.\n\n\"Fucking tease.\" I moaned. \"Suck it.\" Jude sighed and obeyed me, going limp in my arms. \"Oh that's good.\" I moaned. \"Fuck Jude, good boy.\" He moaned against me and the vibrations felt like magic. \"You like that?\" I whispered. I didn't think he would actually. He lifted his head and looked me in the eye. His face was glowing, and his eyes were moist, and he had a stream of spit dribbling down his chin. Oh fucking hell I was going to cream myself.\n\n\"I like it when you call me that.\" He said. Christ, Jude.\n\n\"Yeah?\" I stroked his face. \"Just me huh? My good boy Jude? Is that what you are?\" He closed his eyes and his tongue darted out of his mouth and wrapped around my fingers. He nodded, whining.\n\n\"Yeah.\" He panted. \"Oh yeah, Nate.\" I moaned and lay back, and let him return to my dick, stroking his short hair and whispering what a good boy he was. His dick was hard against my thigh and positively dripping. I moaned as I gently started to move my hips, and Jude moaned in response- so I thrust a little harder, and he just took it, moaning around me and letting me use him to get me off....\n\n\"Ugh shit.\" I pulled away. \"Jude, I'm going to....\"\n\n\"Please.\" He whispered, looking up at me with his desperate dark eyes.\n\n\"Where?\" I whispered. Jude closed his eyes and placed his lips around the tip of my dick. He looked up at me. Oh shit. I moaned and reached for myself, jerking myself off into his mouth as he watched me, his eyes blinking up at me. \"Fuck yes.\" I moaned. \"Oh Jude, you good boy, take my big fucking load, yessss....\" I grunted as I felt my balls tighten and my abs clench. He moaned and swallowed every last drop, even licking gently between my thighs as he pulled away. \"Fuck.\" I groaned. \"Damn Jude. Come here.\" I pulled him up to join me and he grinned and kissed my neck. I pressed my head into his chest- god his chest was fucking incredible, and I reached for his dick. He flinched slightly, and I could see why as I wrapped my hand around it. I frowned and looked up at him. \"Uhhh....\" I swallowed. \"Huh, that really didn't do it for you at all aye?\" I said lightly. Jude grunted and pulled my hand off him.\n\n\"No...\" He mumbled. \"I ah.... I already... when I was sucking... I just....\" Ohhh. I grinned. Hot.\n\n\"Really?\" I moved to rest my head on my arm. Jude started to laugh as he looked at me.\n\n\"Don't look so pleased with yourself.\" He said. I grinned.\n\n\"I can't help that. I'm very pleased with myself.\" Jude smiled and stretched out, and I admired his abs, and his pecs, and everything about his hairy chest as he yawned. He blinked as he settled in beside me.\n\n\"Big spoon or little spoon?\" He asked. I smiled. As if I'd let him get away with anything less than cradling me in those big arms and holding me tight. I tucked myself in and he stroked my hair as he held me. \"You surprise me.\" He murmured. \"I would have thought you'd like to wrap your legs around me. Keep me safe.\" I smiled to myself.\n\n\"Tomorrow.\" I promised.\n\n\"Alright spider monkey.\" I sat up.\n\n\"So you HAVE seen Twilight?\" Jude laughed at me and pulled me back to lie with him.\n\n\"Fuck no, looks like total trash.\" He said. \"But I'm not completely out of touch. You're better than Bella, Nate. You have a personality.\"\n\n\"Well, you're hotter than Edward. But it would be kinda cool if you sparkled in the sunlight.\" Jude laughed.\n\n\"Go to sleep, Nate.\"\n\n-----\n\nTuesday\n\n------\n\nJude\n\n---\n\nI woke up alone, but Nate was an early riser, I already knew that. And thank God he was, because it would give me a minute to comb through what I was feeling.\n\nRegret? Not for a second.\n\nConcern? No shit.\n\nBecause he was... famously shit at guys. Which didn't bode well for the huge desperate mushy crush I had on him. That wasn't going away anytime soon- I'd definitely made it worse by acting on it, by seeing him... so totally exposed and so totally mine. And the way his eyes lit up and went steely when I asked if he switched.... Ah Christ. If I wasn't careful this was just going to be straight up capital L capital O capital V capital E. Why am I such a pathetic fucking loser I can't just enjoy shagging the cute intern without making it weird? Oh my god. I thumped back on the pillows. I'm shagging the cute intern. Who the fuck am I?\n\nI slowly got out of bed and stretched out. Right. Go tell Nate you can't sleep with him ever again, because you apparently can't do casual. He'll be fine with that. It's not like he was looking for a fucking sugar daddy in his thirties. He was looking for a good time, and I just had to man up and explain that wasn't me, and he'd pout and be all cute about it, but I'm an adult. I can say no to things.\n\nI pulled on a t-shirt and sweatpants and groaned as I saw Nate in the kitchen, reaching for coffee on a high shelf in a pair of leggings, totally shirtless. Dammit Nate. Someone really needed to explain clothes to him.\n\n\"Ah fuck, Nate.\" I grumbled as I covered my eyes.\n\n\"What?\" I could hear him smirking.\n\n\"I was going to try and talk to you.\" I muttered. \"You're making that hard.\"\n\n\"Are my abs distracting?\"\n\n\"A bit.\" I said. I removed my eyes from my hands and looked him over. He was perched on the bench, grinning at me.\n\n\"Go on.\" He said. \"You're rebounding on me and you're worried about what it means.\" I blinked. He smiled. \"It's ok Jude. We have like, mad chemistry. It was gonna happen sooner or later. And I know you don't want it to mean anything. I get that. That's ok. We should enjoy it.\" Aw shit. No. That wasn't where I'd thought I wanted to go with this conversation at all. I looked at the table, avoiding Nate entirely. You know, I really wish I'd been born with whatever he had. The cavalier, doesn't give a shit thing. I wish I had the ability to just fuck someone and not catch feelings. He obviously did. I swallowed. As much as he liked me- I was really just the last in a long string of people he specifically didn't want to date, wasn't I? Did he even do boyfriends? Not that I thought he and I was a GREAT idea right now- but I'd like to.... Have that option. One day.\n\n\"Is that... like.... ok?\" I glanced at Nate, hoping his face would fall and he'd hide his blush with his hair, and I'd know he really did want something more. He slipped off the bench and knelt beside me, pushing his hair off his face.\n\n\"It's great.\" He said. \"Only promise me you'll get a therapist because this swings both ways and I can't handle whatever emotional baggage a breakup entails.\" I laughed.\n\n\"Good call.\" He knelt up and kissed me chastely.\n\n\"I....\" He looked at me thoughtfully. \"I guess we both regret it a bit. But also, since it happened, and since it was soooo good...\" He smiled goofily. \"I mean. I'm happy to just... keep it light. If that's what you want.\" He bit his lip. \"But on the other end if you are freaking out and need to move out right away and avoid me at work I totally get that.\" I smiled and pulled him to sit on my lap. I kissed his neck.\n\n\"I'm freaking out.\" I admitted. \"And I probably will avoid you at the office.\"\n\n\"Well, actually, Jude, you're already avoiding me at the office.\"\n\n\"A bit.\" We smiled at each other. \"You're alright with not telling anyone?\" I winced. \"It's not like... I don't want to.... It's just that you're....\"\n\n\"We absolutely are not telling anyone.\" Nate's eyes widened. \"I just started! I don't want everyone to think I whored my way into the job.\" I hit him playfully. \"And Russell will fucking murder you.\" He said. \"Sorry, he actually likes you, but the minute I fuck someone they're like, enemy number one.\" I laughed.\n\n\"If Ryan doesn't get to me first.\" I mumbled. Nate frowned.\n\n\"Why does Ryan care?\" I sighed and raised my eyebrows at Nate.\n\n\"Well... you know, Nate. You obviously know we have um... What did you say? Mad chemistry? I've been... noticing you... for a... while now. And.... Ryan.... might... have suspected....\" Nate's face split into a grin.\n\n\"I knew it!\" He hit me. \"Russell was telling me off for flirting like everyday but I KNEW you were flirting back.\" I laughed.\n\n\"Mmm.\" I rolled my eyes. \"Anyway, for obvious reasons I was really trying not to let that... go anywhere... so I sort of enlisted Ryan's help to keep you away from me. Because...\" I sighed and Nate held me closer as I withdrew.\n\n\"It's ok.\" He said softly. \"You're out of a long term relationship. You don't want to hurt me or hurt yourself.\" He kissed my nose. \"We'll keep it light.\" I pressed him against my chest and let myself cradle him. Fuck, Nate, you have no idea how much I am unable to 'keep it light'. He cleared his throat and his eyes went to my neck. \"And on the topic of not telling anyone...\" He glanced at me and winced. \"Sorry. I.... anyway please tell me you own a turtleneck.\"\n\n------\n\nI do not own a turtleneck. Nate did. I pulled it on and we both laughed as it stretched thin across my chest.\n\n\"Um... a scarf?\" He suggested. \"It's cold.\" I rolled my eyes.\n\n\"Not cold enough to wear a scarf indoors. Honestly Nate. Did you really have to give me a fucking hickey?\" Nate held up his hands in protest.\n\n\"Woah woah woah, we don't blame horny Nate for anything. That dude is a total fucking moron.\" I raised my eyebrows at Nate.\n\n\"I dunno. I'm pretty into horny Nate.\"\n\n\"Lucky for you.\" He grunted. \"You might be seeing a lot of him.\"\n\n----\n\nRyan looked at me thoughtfully in the office.\n\n\"Is it cold?\" He said. It wasn't. I was sweating my balls off with the scarf. I glared at him.\n\n\"I think I'm coming down with something.\" I said stiffly.\n\n---\n\nAfter a meeting from hell I found myself doing something I never do, and walking around the car park to where the depressed smokers hang out. I lit a cigarette. God this actually was getting REALLY bad. I should get Nate to help me quit. I sighed and nodded in greeting as someone else approached me. I looked up and coughed when I realised it was Russell. He glanced at me, and then guiltily to his own lit cigarette... and then to mine. I swallowed.\n\n\"Busted.\" I said. He smiled slightly.\n\n\"Likewise.\"\n\n\"Don't tell Nate.\" We said at the same time and that broke the tension as we started to laugh. Eventually he took a deep breath. I looked at him. He looked at me.\n\n\"I heard you're staying with him.\" He grunted. I looked at him. He looked at me. We stared at each other, locked in a game of chicken where if I looked away first I admitted I was fucking his little brother.... I sighed and glanced at the ground.\n\n\"Go on.\" I said quietly. He grinned.\n\n\"You're alright.\" He said. \"But you know. It's kind of my duty to tell you I'll fuck you up if you hurt him too much.\"\n\n\"I hope I don't hurt him at all.\" I said quietly. Russell raised his eyebrows.\n\n\"You're gonna hurt him.\" He said. \"Nate.... he....\" Russell smiled and ran his fingers through his hair. \"He always acts like he doesn't have deep feelings. But that's only because he has so many of them he doesn't know what to do with them. So he's decided to put all his feelings in a little box that he doesn't like to access. I guess the good thing is, I know it would take a lot more than you to break him, Jude. But at the same time, I really wish he'd just... find happiness.\" I looked at Russell and took a drag on my cigarette.\n\n\"He said he wanted to keep it light.\" I said. Russell shrugged.\n\n\"Yeah, that's my idiot brother for you.\" He said. \"Come on, Jude. You know he loves you.\" I stared at the concrete and the cigarette butts littered near the bin. My chest started to almost... hurt with how tight it felt. My lips twitched.\n\n\"He WHAT?!\" I laughed. \"Oh... I don't think it's....\" Russell sighed loudly and I glanced at him. He was rolling his eyes.\n\n\"I see the way he looks at you.\" He said. \"Go on, tell me you don't see it too.\" I swallowed. I know how he looks at me. It's a mix of wide eyed innocence and total unrepressed lust. It's warm, and shy, and desperate at the same time. It's sexy, and loving. I took a deep breath. That's just Nate though.\n\n\"I...\" I swallowed. \"I'm crazy about him.\" I said honestly. Fuck it, he may as well know. \"But my head might not be screwed on right now. So, you absolutely should beat my ass if I hurt him but... I really, really have no intention of that. I promise.\" Russell grunted.\n\n\"You're as bad as each other.\" He muttered. His face suddenly lit up as he looked at me, and for the first time ever I saw the family resemblance in that dazzling, out of nowhere, ray of sunshine smile. \"Well shit.\" He took a drag on his cigarette as he stared at me. \"Maybe that's a good thing.\"\n\n-----\n\nNate\n\n------\n\nI told Ryan I just wanted to double check something before leaving to get him off my back. He'd really taken me under his wing. To the point where it was a bit annoying, actually.\n\n\"Don't work too hard.\" He warned me as he reluctantly got up to leave. \"Don't do anything for free.\" I rolled my eyes and waved goodbye to him, and waited for everyone else to drift out of the office, before going to sit down on Jude's desk. He glanced up at me and smiled.\n\n\"Should have guessed.\" He said. \"You don't have to stick around for me Nate, this won't take long.\" I smiled at him.\n\n\"Let me help.\" I suggested. \"It'll be so much faster with both of us.\"\n\n\"Na.\" He said. \"I found a recipe for vegan ramen, I'll send it to you. You can have it ready for me when I get out of here.\" I rolled my eyes and slowly reached for his hand across the desk.\n\n\"Not your housewife.\" I raised my eyebrows at him. He grinned and squeezed my hand.\n\n\"I know.\" He said. \"A guy can dream. I'll cook tonight, trouble. I won't be long, truly.\" I snorted. Trouble. Thanks Jude, what a super hot nickname.\n\n\"You'll be less long if you let me help.\" I insisted. Jude sighed and pulled his hand away. He looked at me firmly.\n\n\"You really can't help me with this anymore, Nate. You're not on salary or getting overtime. If word got out you were in here after hours unpaid I'd be up shit creek.\"\n\n\"Can't I log it somewhere as volunteering?\" His lips twitched.\n\n\"No, you really can't. I'm sorry, Nate.\" I sighed and stood up.\n\n\"Fine. Send me that recipe.\" I pouted as I looked at him. \"I was REALLY looking forward to tonight. I guess we can wait till you're caught up.\" Jude caught my wrist as I tried to leave. He didn't even look at me.\n\n\"I. Won't. Be. Long.\" He growled. \"Be home in plenty of time for us to do whatever you were looking forward to before dinner.\" I grinned and squeezed his shoulder.\n\n\"Alright. See you soon.\"\n\n----\n\nJude grinned and ran his eyes appreciatively over me when I got the door for him.\n\n\"Aw, Nate.\" He kissed my forehead. \"You poor child. Did no one ever explain what clothes are?\" I laughed.\n\n\"Damn I picked this out just for you. You don't like it?\" He laughed.\n\n\"I didn't say that.\" He glanced at me as I helped him out of his suit jacket and closed the door behind him. \"Do you wear that with your flatmate around?\"\n\n\"Yeah, nah. I can usually find some trousers.\" I laughed and led him to the couch. \"God knows where they all vanish to when you're around.\" Jude laughed and pulled me into his lap.\n\n\"God Nate. You're... a nightmare.\" I laughed.\n\n\"A nightmare huh? Actually I've been called worse.\" I knelt over him and he gently clasped my ass with his hands and I leant over to trail kisses over his neck. He pulled me close to him and stroked my hair.\n\n\"Nightmare was a strong word.\" He muttered. He held my hair loosely and clasped my chin. \"Bedroom yeah?\"\n\n\"Yeah.\"\n\nI wasn't sure about taking the lead, but Jude let me undress him and he seemed to go limbless as I kissed every inch of flesh I exposed as I peeled his clothes off, and he whimpered as I touched his skin, and lay him spread on the bed before me. His eyes were following my every move and I grinned at him as I spread his legs.\n\n\"Hey, you do this a lot?\" I asked. \"Or should I like...\" Jude grinned at me and bit his lip.\n\n\"I don't do this a lot.\" He said. \"But don't go easy on me.\" I raised my eyebrow. I wondered if that was a jab at my endowment. I could get offended.... But I decided, fuck that, I'd just prove him wrong if he thought I'd feel like nothing. I grinned and lay him back, draping myself over him as attractively as I knew how, kissing his neck- being careful not to bruise it any worse than I already had, and gently making my way down again to his dick. He moaned as I took him in my mouth.\n\n\"Oh...\" He whispered as I paused. And then... \"OH.\" He gasped as I continued sucking, and also, oh so gently, started to play with his hole.\n\n\"You like that, baby?\" Jude panted.\n\n\"Yeah.\" He moaned. \"Fuuck Nate.\" I moaned and played with him, watching him writhe on my hand. \"Ungh...\" He whined. I closed my eyes, and worshipped him, playing with him, teasing him, making him wriggle and murmur my name. \"Nate...\" He suddenly tried to sit up, and I caught his arms.\n\n\"What's wrong?\"\n\n\"No nothing.\" He blushed. \"If you... keep doing that... both... I'll...\" I grinned.\n\n\"That's ok, Jude...\" His eyes flew open as I continued.\n\n\"No, please.\" He whispered. \"Please Nate, fuck me.\" I moaned and moved his hands to hold my hips as I knelt up over him.\n\n\"Oh, yesss.\" I moaned. \"Fuck yes, baby.\" His grip tightened around my waist and his nails dug into me as I fumbled for the usual accompaniments and wrapped up. He moaned as I pressed against him.\n\n\"Nateee....\" He moaned. \"Fuck me.\" I bit my lip, and slowly teased him, slipping my dick between his cheeks, grazing him with my fingers as I rubbed my cock up and down, enjoying his muscular ass gently clenching and unclenching. He moaned and bit his lip as he looked up at me. \"Nate, please.\" He whispered. I was way ahead of him. Well, my dick was way ahead of me. It was already poking at his hole, and I had to take a deep breath to stop myself from inelegantly humping wildly. I closed my eyes and let my hands fall to Jude's chest, his fat pecs and layer of hair. Christ he was such a sex god. He was exactly how I'd imagined him.\n\nI moaned as I thrust gently into him. I stifled a small smile. God, he really didn't do this often. He shuddered and whined, his hole basically rejecting me.\n\n\"Relax.\" I whispered, clasping my hands around his face. \"Jude, it's just me.\" He laughed weakly.\n\n\"That's... more than enough.\" He whispered. \"Oh Nate.\"\n\n\"You're such a good boy, Jude.\" I purred. That seemed to do as much for him as it usually did for me. He seemed to melt. So I moaned and held him tight as I rolled my hips. \"Jude, push out.\" I directed softly. He moaned, and I could feel him obeying me, welcoming me. Oh fuck. \"That's it.\" I moaned as I started to slip into his crazy tight ass. Shit Jude. \"Good boy.\" I stroked his hair. He relaxed even further and I carefully moved my hips and started to fuck him properly- oh Christ he was so hot. So tight. So sweet. We just slowly rolled our hips against one another and I shuddered as I rode him, watching him moan and fall apart beneath me.",
        "As he relaxed my dick started taking over, and I stopped holding him so softly and moved my hands to his hips, to hold him in place as I really fucked him. I moaned and threw my head back, and glanced down at Jude, my eyes half closed. He was soft, and limp, and moaning softly... but.... Huh. Maybe I was shit at this. He was.... giving me sweet fuck all. \"Jude, baby...\" I whispered. \"You ok?\"\n\n\"Huh?\" He glanced up at me. \"Yeah... just...\"\n\n\"Do you like this?\" I whispered. He closed his eyes again.\n\n'Fuck yes.\" He muttered. \"You're so good Nate... I'm sorry.... I....\" He moaned as I started to fuck him harder. His hands clasped at the sheets below him and he moaned. \"Shit. Nate, oh fuck, you're so good... fuck me... please....\" I moaned and moved faster... and his torso arched up from the bed as he let out a cry. Oh fuck... seeing his chiseled body writhe in pleasure underneath me... it was too much.... I slowed down, to breathe, and Jude's eyes flew open.\n\n\"Don't stop, I told you, I like it.\" He moaned.\n\n\"I'm not stopping for you.\" I whined. \"I'm....\"\n\n\"I don't care.\" He suddenly gripped my chest. \"Fuck me Nate. Don't you fucking dare stop.\" Oh crap. I moaned as he glared at me.\n\n\"Ok.\" I whispered. Suddenly my cheek stung as he lightly backslapped me.\n\n\"Not ok.\" He whispered. \"Say yes sir.\" I moaned.\n\n\"Yes, sir.\"\n\n\"Keep fucking me.\" he moaned. \"Harder, Nate. Fuck me harder, slut.\"\n\n\"Oh shit.\" Crap, Jude. I obeyed him, and he sat up and wrapped his arms around me as he bounced on my dick, throwing his head back and moaning.\n\n\"Jude.\" I whimpered. \"Baby... I'm so close...\" He bit me hard on my neck and I cried out and threw my head back.\n\n\"Hold it.\" He demanded. \"Hold it Nate. Make me cum first.\" I moaned and let my head fall to his shoulder.\n\n\"I can't.\" I moaned.\n\n\"You will.\" He held me tight and directed my hand to his cock... which was so hard... oh fuck.\n\n\"Jude.\" I moaned. He thrust into my hand and moaned, but his movement was sending me closer and closer... I whined. \"Shit.\" I panted. He held me.\n\n\"Nate... fuck yess....\" He throbbed in my hand and I sighed as I melted into him, finally able to let go. He stroked my hair as I practically sobbed as I came.\n\n\"Shit Jude.\" I moaned.\n\n\"Fuck.\" He moaned. \"I've literally never cum like that.\" I laughed as I pressed my head to his neck.\n\n\"Kind of a new one for me as well.\" I kissed his earlobe. \"Super hot though. Fuck, dude.\" He pressed his lips to my cheek and pulled me to lie down with him. I wrapped my legs around him and nestled my head into his chest before stretching out. Jude caught me.\n\n\"Hold me.\" He demanded. I sighed.\n\n\"I'm fucking starving.\"\n\n\"10 minutes ok?\" He pulled my arms around him and nestled into my chest. \"I like cuddling.\"\n\n\"Well I like eating.\" Jude laughed.\n\n\"I'm cooking for you. The least you can do is a 10 minute cuddle.\"\n\n\"Actually if that's all I have to do to get you to cook for me let's schedule it in more often.\" Jude nuzzled against me.\n\n\"Ok.\" He said. I grinned.\n\n\"What was it you were saying about not being wrapped around my little finger?\" He chuckled.\n\n\"Shh.\" He whispered. \"Just hold me.\"\n\n----\n\nTwo weeks later\n\n----\n\nMonday\n\n----\n\nJude\n\n----\n\nNate was driving me crazy. Ryan was doing his best to keep him busy but Nate still ended up with a lot of downtime, because the job he was in was designed for someone a fraction as competent as he was. He was outrageously flirty and always seemed to need my help with one thing or another in a way that allowed him to touch me in ways he knew he absolutely shouldn't be touching me at the office.\n\n\"You fucking squeeze my ass again at work and you're gonna regret it.\" I grunted to him once I'd made sure the office was empty. He grinned at me.\n\n\"Don't make promises you can't keep, Judo chop.\" I glared at him over my shoulder. Nate shook his head. \"That won't work.\" He said. \"You think that's your 'I'm so mad at you, Nate' face but it's really your 'god I can't wait to take you over a desk when everyone leaves for the night' face.\" I snorted.\n\n\"Cameras everywhere.\" I gestured to them with my head. He followed my gaze.\n\n\"Well.\" He grinned. \"That's hot.\"\n\n\"Get back to work.\" I stood up and put my hands on my hips. \"Seriously Nate, or I'll take myself out to dinner and you can fuck your hand.\" He rolled his eyes.\n\n\"Only teasing Judy Garland.\" He winked and turned away.\n\n----\n\nTuesday\n\n----\n\n\"You know I like to get mine later.\" I told Nate as he dropped off a round of coffee on our desks. He shrugged.\n\n\"Why? There's no cute barista to flirt with anymore, it's just Russell and that new chick.\" I glared at him and he smiled sweetly. \"Got it, boss. Skip Jude's coffee in the 9.15 round.\" If Caro wasn't sitting next to me I would have said something but I bit my tongue and waved him away.\n\n\"You know, I missed this.\" Caro sighed contentedly.\n\n\"Sorry?\" She grinned at me.\n\n\"Oh, you know, two people who are obviously seeing each other pretending they aren't.\" She leant on her hand and raised an eyebrow at me. \"You know on your very first day I thought you were gonna be the most boring man in the world, but look at you, all split up from your fiancee and fucking the intern.\" I stared at her.\n\n\"I'm going to get a coffee.\"\n\n\"There's one on your desk.\"\n\n\"A scone then.\"\n\n\"I won't tell.\" She said, watching me bolt for the door. \"And Nate flirts with everyone, no one else will notice.\" I grunted.\n\n-----\n\nNate left the office at a normal time these days which gave him time to get home so we didn't awkwardly head in the same direction- although I can't say I minded having a lift to work occasionally. I sighed as I finished up for the night, alone, and hopped on the bike, feeling a little ridiculous. I was up late in the morning thanks to some dickhead in bed grinding his ass on me, which I obviously had to take care of... and in my rush out the door I'd forgotten a change of clothes so I was riding in my suit. I caught sight of myself in the big mirrored windows of the hotel down the end of Bolton Street. Hmm. Maybe just the right side of debonair and European, and not pathetic and unable to drive.\n\nI parked in Nate's garage and grinned as I saw him in the kitchen, carefully dividing up several different kinds of pet food as he tried to keep the horde of animals at bay. I walked in and immediately got to work distracting the dogs- no point with the cat, she was way too smart.\n\n\"Thanks.\" Nate whistled for the dogs as he put the food out on the back porch. They bowled each other over in their enthusiasm and the chickens went mental, like they always do, despite this being a daily occurrence. Nate grinned at me and went to wash his hands.\n\n\"Missed you.\" He joked. \"I've had no one to flirt with for like an hour.\" I raised my eyebrows.\n\n\"Wow, Nate, must be a challenge. Apparently you flirt with everyone at the office.\"\n\n\"Aw, you jealous?\" I laughed.\n\n\"Na.\" I grinned at him as I peeled my jacket off and started unbuttoning my shirt. I grinned as he ran his eyes over my chest. I wouldn't tease him like this if he didn't take the bait every time.\n\n\"Well, trouble, I'm changing.\" I staggered out of the room and Nate followed me, just like I wanted him too.\n\nHe wrapped his arms around me and pushed me onto the bed before I could even start to get changed, and he wrestled the rest of my clothes off. I sighed. Living with a beautiful horny angel definitely had its moments. I wrapped him in my arms and he kissed me desperately.\n\n\"I hate working with you.\" He sighed. \"You are so distracting.\" I laughed.\n\n\"Me?!\" I sat up. \"You're the one who's always draped over my desk asking for help you don't need.\" He grinned slyly at me.\n\n\"It's awful of me.\" He said with wide eyes. \"But I love winding you up.\"\n\n\"You're a little shit.\" I grunted. He nodded in agreement.\n\n\"Such a little shit.\" He bit his lip. \"What are you gonna do about that Jude?\" I grinned at him.\n\n\"What do you think I should do?\" I ran my hands under his t-shirt and over his chest. He shrugged and smiled.\n\n\"Maybe you want to teach me a lesson?\" He said, leaning into my touch. I reached up and pulled his hair out of the topknot it had been in.\n\n\"I have absolutely no faith that any lesson you're thinking of will do anything other than reinforce bad behaviour.\" I growled. \"Here's what I'm thinking. I withhold sex until you prove you can behave.\" Nate pouted at me.\n\n\"Asshole.\" He raised his eyebrows. \"And also, good luck Jude.\" He grinned. But I had his number. I could tease him just as bad as he teased me. I grinned and pulled my hands away.\n\n\"You have the count of three to get naked.\" I said firmly. Nate leapt up and discarded his clothes in record time as I counted down. I smiled at him. \"Good boy.\" I said and he leapt back on my lap. \"Someones an eager puppy.\" I stroked his hair and he moaned.\n\n\"Hmmm, no ones ever called me that before.\" He smiled.\n\n\"Puppy?\" He nodded. \"I'm surprised. You're my needy little puppy aren't you Nate?\"\n\n\"Yeah.\" He panted, like a real puppy, and I grinned as I saw how hard he was.\n\n\"But you've been a bad boy.\" Nate's face fell and he sighed as he looked at me.\n\n\"Maybe a little.\" He rolled his eyes.\n\n\"Maybe a lot.\" I laughed. I moved to sit on the edge of the bed and motioned for Nate to join me. \"Get over here, trouble.\" Nate moved slowly towards me, a little unsure where I was going. I grabbed his waist and manipulated him until he was bent over my lap and his face was red. He looked at me and sighed.\n\n\"Ok.\" He mumbled. \"Fuck Jude. This is so embarrassing.\"\n\n\"Then don't tease me at work.\" I rubbed his ass and he shivered.\n\n\"Are you really going to... spank me?\" He wrinkled his nose.\n\n\"Only if you want me to.\" I grinned. Nate sighed.\n\n\"What if I say no?\" He asked. I shrugged.\n\n\"You can say no.\" I said. \"Only just say it if you actually don't want it, not to prove a point, because if you don't want it we're never doing this again and I'd hate to deny us something hot just because you were too embarrassed to admit you like it.\" Nate groaned.\n\n\"Fuck you.\" He said. \"Fine.\" I laughed.\n\n\"You know why I want to spank you?\" I asked. He sighed.\n\n\"Because you're a sadist?\"\n\n\"Because you are so fucking hot when you're embarrassed and horny.\" I said. \"I think it's my favourite.\" Nate rolled his eyes at me.\n\n\"Like I said, sadist.\" I grinned and fondled his ass and he moaned into my lap. \"Get it over with.\" He mumbled. I laughed. One day he'd beg for it. We'd get there. I brought my hand down firmly on his ass and he moaned. Oh, I KNEW he'd like that.\n\n\"One.\" I said pointedly. Nate shifted to look at me again and shook his head slightly as he caught my eye.\n\n\"One.\" He repeated. \"Thank you, sir.\" His voice was dripping with sarcasm. I smiled and stroked his chin.\n\n\"Good boy.\" I said, which made him melt a little. Easy trigger. He tucked his face away and waited for me to continue. He moaned again as I hit him.\n\n\"Ugh. Two. Thank you sir.\" He mumbled without prompting. I smiled and stroked his ass in between strikes, just gently caressing, and squeezing. He was really hard, and he shifted to let his dick hang between my legs. I brought my hand down hard again and he flinched. Yeah I'd been too rough that time. I stroked his hair to make up for it. But... \"Three.\" He panted. \"Fuck, Jude, don't stop.\" I raised my eyebrows. Little slut. He'd been holding out on me. \"Sir.\" he corrected himself as he heard me growl lustily and misunderstood. \"Don't stop sir, please.\" I grinned. Aw, Nate. You absolute angel. I hit him again, with the same intensity, and continued as he writhed in my lap, becoming a drooling mess and getting me really fucking hard as I toyed with him. When his ass was red and hot to touch I pulled him off me and he gazed at me as I let him drape himself over my lap and go loose in my arms. \"Shit Judey.\" He murmured. \"Fuck me, I'm aching for you.\" I grinned at him and pushed his hair off his face.\n\n\"Fuck you?\" I asked. \"Well that doesn't seem like much of a punishment does it?\" Nate turned purple and his eyes flashed.\n\n\"Right.\" He said and stood up. I was a bit taken aback and flinched as he marched over to his bedside table. He moved way faster than I anticipated and before I knew what was happening my arms were up by my head... and they were chained to the fucking headboard. I groaned.\n\n\"Shit, you're fast.\" I mumbled. Nate grinned.\n\n\"You're a tease.\" He said.\n\n\"Takes one to know one.\" I sighed and looked down at my aching dick. \"You gonna have your way with me?\" Nate widened his eyes and shook his head.\n\n\"No, sir.\" He said softly. \"I thought you weren't fucking me? Like a punishment? Isn't that right?\" I glared at him.\n\n\"So why am I tied up?\"\n\n\"So you can watch.\" Nate grinned and pulled a dildo only a fraction smaller than me out of his bedside table. I groaned as I looked at it.\n\n\"You are SUCH A LITTLE SHIT.\" I moaned. He smiled and knelt over me. I tried to at least wrap my legs around him, but I wasn't particularly good with my legs. He smiled and stroked my chest, and gently ran his fingers over my now leaking cock. \"There must be something in the Geneva convention about this.\" I moaned. Nate laughed and sucked on his fingers in front of my face.\n\n\"That doesn't apply here.\" He said. \"This isn't war, I'm just trying to be a good boy and take my punishment.\" He wrapped his mouth around the dildo and closed his eyes as he moaned, reaching behind him to open himself up.\n\n\"This will be war if you don't stop that right now, untie me, and beg for my dick.\" I swore at him. Nate bit his lip as he slowly pulled the dildo from his mouth and looked at me.\n\n\"Well, let's compromise.\" He whispered. \"I don't trust you if I unlock those. But if you really think it's ok... well... maybe I could beg for your dick.\" I sighed.\n\n\"You mean maybe I can beg for your ass.\" I grumbled. \"Which I am. Come on, trouble. Fuck me.\" Nate grinned.\n\n\"Thank you.\" He kissed me chastely and reached for his bedside drawer again. I grunted.\n\n\"Gotta feeling I am not going to like whatever comes out of there next.\"\n\n\"Probably not.\" Nate sighed as he showed me the pack of condoms and unwrapped one. \"But you know, let's be smart here.\"\n\n\"Yep.\" I sighed, kind of relieved. Nate seemed to have a whole fucking sex store in his bedside table and sometimes it scared me. \"You should get tested.\" I mumbled as he rolled the condom over my dick. Nate blinked at me.\n\n\"Well... you too then.\" I snorted.\n\n\"I'm clean. I've barely fucked in the last year. And that was only Levi.\"\n\n\"And he was squeaky clean?\" Nate raised his eyebrows pointedly. I winced. Ouch, Nate. But fair.\n\n\"Well.... Ok. I'll get tested too.\" I said. \"In the meantime I'm dying here.\"\n\n\"Aw.\" Nate grinned. \"Sorry.\" He sighed and reached up, releasing the handcuffs. \"There ya go.\" He smiled. \"You're in charge again.\" I pulled him in close to kiss me and he lay his head on my shoulder as I entered him. He shuddered and moaned quietly as I held him... and I realised as we gripped each other tight, and whined softly, trembling against each other... This was the first time I'd really made love in a very long time.\n\n----\n\nFriday\n\n----\n\nYou will never convince me work functions are anything less than an absolute nightmare. Ones where we actually celebrate a promotion or something worthwhile are bad enough but tonight's event at a crappy harbour side function centre was some hashed together midwinter Christmas pisstake that some moron from HR had decided would be nice for us. Nate didn't want to go. I didn't want to go either, but I didn't have the inclination, nor the ability to throw a tantrum like he could.\n\n\"Nate.\" I threw his suit at him, momentarily distracting him from whatever stupid reality TV thing he'd turned the volume up on to drown me out, with a whole bunch of hot British people spewing shit. \"We have to go.\" He sighed and paused the TV.\n\n\"Whyy?\" He folded his arms. \"I barely work there! No one cares if the intern shows up!\"\n\n\"Everyone will care if you're not there, they all really like you. Besides, you just HAVE to show up to these things, it's just what you have to do.\" He sighed.\n\n\"It's Friday.\" He whined. \"There's a gig on at Ivy....\"\n\n\"So go after.\" He took a deep breath and slowly stood up, inspecting his suit dubiously.\n\n\"I don't think they'll let me in at Ivy wearing a suit.\" He said. He sighed as I glared at him and his shoulders slumped forward. He draped the suit on a chair and pecked me on the cheek as he headed to the bathroom. \"Sorry. I'm being annoying. I'll have a shower.\" I smiled at him.\n\n\"Thank you.\" I said. \"I can't bear going alone.\" Nate rolled his eyes at me.\n\n\"Yuh-huh.\" He said. \"You want me to hold your hand?\" He muttered something as he left the room and I sighed and looked at the cats he'd been playing with. Despite insisting he wanted to keep it light, and not tell a soul... I'm not thick. There was some definite resentment building.\n\n\"Well.\" I said to the cats. \"I knew what I was in for.\"\n\n----\n\nHe apologised in the Uber over. He said he knew he was being a brat, and he really didn't mind showing up, he thanked me for dragging him out of the house, and he told me he couldn't get any E at the moment anyway so Ivy was out regardless. I laughed.\n\n\"You ever go dancing sober?\"\n\n\"Uh.\" He blushed. \"You don't get high much aye, Jude? It's fun.\" He shrugged. \"Yeah, I do it sober-ish sometimes. Music kind of gets me high anyway.\" He rested his head against my shoulder. \"You don't like it when I do drugs, huh?\" I cleared my throat.\n\n\"I don't... mind....\" I said slowly. \"You're an adult. I just worry, a little bit.\" Nate squeezed my arm.\n\n\"I worry about you smoking so much.\" He said. \"Maybe we could strike a deal.\" I glanced at him.\n\n\"Yeah.\" I said hesitantly. \"Maybe.\" He grinned at me. Hmm. First I taught him to cook, then true to his word he bought me a copy of the road code and was forcing me to learn to drive. Now we were gonna try and curb each other's bad habits? I looked away from Nate and out the window. Just how long could we really keep this 'light'?\n\n-----\n\nNate and I entered separately. Word getting out at work that I was staying with him indefinitely was a pretty fucking bad look, so I went for a quick walk along the waterfront and when I arrived Nate was already sitting at the open bar, chatting to some of the younger people working in policy. I made my rounds politely, not having much to say to anyone. Normally I'd do one round, three free drinks, and slip out, but I felt like I had to make slightly more of an effort given I'd practically dragged Nate here.\n\nRyan sought me out eventually and we quietly found a corner to sip beer in and complain about being here. I saw Sam talking to Nate and waved him over to join us. He drifted over and greeted me with a knowing grin.\n\n\"God he's pretty fucking obvious eh?\" He smiled up at Ryan as he put his arm around Ryan's waist. \"Worse than Ry was.\" Ryan and I both frowned at him.\n\n\"Huh?\" We said in unison. Sam caught my eye.\n\n\"Oh, do people not know?\" He said. \"Oops.\" He very casually glanced over his shoulder to where Nate was standing talking to his friends. I felt my face warm up a little as I followed his gaze.\n\n\"What don't I know?\" Ryan nudged Sam in the ribs. Sam glanced at me. I shook my head as desperately and imperceptibly as possible. He shrugged and turned back to Ryan.\n\n\"Jude and I had a bet on how long Nate would last before fucking someone in the office.\" He said breezily. Oh no. My chest tightened. \"He's totally shagged that guy Geoff, the kid on loan from ENR.\" I let out my breath. Thank you, Sam. I smiled at him and he winked at me. Ryan sighed.\n\n\"Aw.\" He said. \"Sorry Jude.\" I laughed.\n\n\"No it's grand.\" I said. \"Someone his own age who's not going through the turmoil of a breakup, I'm very happy for him.\"",
        "\"Yeah you... you actually seem...\" Ryan frowned at me. \"You're seeing someone too aren't you?\" I shook my head.\n\n\"Oh hell no. Single for a bit. I don't need feelings right now, believe me.\"\n\n\"Then why are you always covering hickeys?\" Ryan asked. He blushed. \"Ha. Sorry. I wasn't going to pry. But, come on, you can tell me. Who is it?\"\n\n\"No one you know!\" I laughed. \"Shit, is it that bad? He... He's a bit of an enthusiastic kisser...\" I coughed.\n\n\"Oh well, if you're happy.\" Ryan said with a smile. We talked about work for a bit, and how early we could make our excuses without being horrifically rude. Ryan and Sam invited me to a bar nearby and I was tempted but then Caroline drifted over and we talked more about work, covering the same ground again and again. God when did life get this boring?\n\nThe thought had barely crossed my mind when suddenly life stopped being boring, as Caroline frowned at me thoughtfully. She reached out and brushed my shoulder and I winced as she pulled off a long, dark strand of hair from my suit. She raised her eyebrows at me.\n\n\"Huh.\" She said. \"Sam, this yours?\" Sam laughed and turned a tiny bit pink.\n\n\"Must be.\" He said. \"Ha ha. Sorry Jude, I guess I'm shedding.\" Sam winced at his less than impeccable excuse and glanced at Ryan. Ryan stiffened up and looked stone faced down at Sam. Oh shit. Fuck I hope he didn't think Sam and I.... He glared at me. Oh come ON Ryan! I would never! I tried to communicate that with my eyes when Caroline grinned.\n\n\"Or maybe it's someone else....\" She said. Oh fuck you, Caroline. \"Who do we know with long, dark hair...?\" She said in a sing-song voice. I could feel my face turning red and I weakly tried to laugh it off.... But Ryan had turned to look over the room, where Nate was still perched at the bar. Poor kid. There was no way he couldn't feel four sets of eyes on him and he glanced up. Even from where I was standing I could feel the heat from his cheeks as he turned bright red as he saw us staring and looked away way, way too quickly. Dammit. That used to be cute when he did that. Eh. Still cute. Just also fucking annoying. l grunted as I felt a hand hit the side of my head.\n\n\"Ouch!\" I whirled to face Ryan. Ah. That wasn't a face I'd ever seen on Ryan. The cheery jock thing had totally dropped and he was genuinely growling at me.\n\n\"Jude.\" He folded his arms. \"Come on.\" I looked between the three of them... and my eyes drifted hopefully to the doorway but really, you can't just run away from your problems, and frankly while I could take Sam on a good day and had like a couple of inches on Ryan, I really didn't fancy my chances against both of them... and besides that. I'd dug my own grave.\n\n\"Look...\" I started to say. Ryan's eyebrows knitted together and he interrupted me.\n\n\"Jude.\" He sighed and leant in. \"Not Nate! I work with him everyday.... The poor guy... You can't just...\" Caroline nudged his shoulder.\n\n\"Calm down Thor.\" She muttered. Ryan shrugged her off.\n\n\"What the fuck, man? You're an ADULT. You should know better. You KNOW you're gonna break his heart.\" I opened my mouth to argue but Sam put a hand on Ryan's shoulder and I watched as Ryan breathed deeply and slowly moved so their hands were entwined. Sam looked at me.\n\n\"Jude's not gonna break his heart.\" He said softly. \"He's not a heartbreaker.\" I frowned.\n\n\"I could be.\" I said. Caroline grinned.\n\n\"You're not though. You've been watching him all night.\" She said. \"You're scared he'll disappear.\" She raised his eyebrows at Ryan. \"They love each other.\" Ryan scoffed, but I was too busy blushing to protest, or agree, or say anything. Shit. Watching him all night? Fuck, just how obvious was I? Sam laughed as he looked at my face.\n\n\"And it really doesn't help that Nate is maybe the least subtle person I've ever met.\" He said. \"I asked him how he liked working in an office and he somehow managed to answer me by rambling about how he missed seeing you everyday at the coffee shop.\" I swallowed. I glanced at Ryan.\n\n\"I'm not fucking him around.\" I said. \"He set the boundaries. I.... think we're on equal footing.\" Ryan shook his head.\n\n\"There is no equal footing.\" He said. \"You're practically his boss.\" I sighed.\n\n\"Yeah.\" I mumbled. \"I take your point.\" Caroline squeezed my shoulder.\n\n\"Not forever.\" She said. I bit my lip. Not forever, sure. But in the meantime...\n\n-----\n\nAdrian approached me just as I was about to slip out. He waved me to join him and I awkwardly sat next to him up at the bar. He sighed and handed me a piece of paper. I frowned as I glanced at it.\n\n\"What...?\" Adrian shrugged.\n\n\"That's the best we can do.\" He said. \"I know it's less than you're used to making, but we have a budget to work with here.\" I stared at him. Oh. A job offer. I looked at the figure he was offering. Probably more negotiable than he was letting on. And not a bad starting point.\n\n\"What would be the plan?\" I said. \"I've barely started here.\"\n\n\"And we don't want you to finish.\" He said. \"We're splitting the department up, expanding. You'd have your own team, someone to help you out with the work you're doing.\" I gulped down some beer and glanced at him. Someone to help me out?\n\n\"You're thinking of Nate aren't you?\"\n\n\"You two are a great team.\" Adrian smiled. I felt my chest thump wildly. Crap. I was probably two drinks too deep for this conversation. I took a deep breath.\n\n\"Adrian. I can't work with Nate.\" He frowned.\n\n\"Oh.\" He said coldly. \"Well, I suppose we could look into someone with a bit more experience. I thought it would be a nice stepping stone for him though. He's wasted photocopying and doing coffee rounds.\" I bit my lip. Say nothing. Or go with that. Or anything but the truth.\n\n\"He'd be great.\" I said. \"And actually a real fucking help, I'm drowning right now.\" Adrian raised his eyebrow.\n\n\"But you can't work with him?\" I shook my head.\n\n\"I can't work with him.\" Adrian frowned.\n\n\"Lost.\" He said eventually. I sipped on my beer. I turned to face him.\n\n\"Nate and I... \" I said, and I watched in fascination as a wave of understanding washed over his face.\n\n\"Oh.\" He said. \"Oh. I had no idea. Sorry Jude. No, of course. I'll come up with another plan for Nate, and in the meantime you can borrow Miri if you're drowning.\" I hung my head. This is why drinking and work should be kept separate. In two seconds I'd gone from a professional on top of things to an absolute loser who was behind and couldn't keep it in his pants. Adrian nudged my shoulders.\n\n\"You know we had a whole team doing your job before you came on.\" He said. \"I shouldn't have put that much pressure on one person.\" I shook my head.\n\n\"I'm not actually drowning.\" I cleared my throat. \"I'll get back on top of things, just a hard week.\" Adrian sighed.\n\n\"Jude...\"\n\n\"I'll consider the offer. Thanks.\" I slipped off the bar stool and started to turn away.\n\n\"Jude.\" Adrian said firmly. I paused. God, I hadn't felt like this since I was a kid, and the principal was telling me off kindly for doing my foster siblings homework. \"We can have you and Nate on separate teams in a week. No harm done.\" I swallowed. I looked up guiltily and caught his eye.\n\n\"Really?\" I asked. Adrian rolled his eyes.\n\n\"Believe it or not this isn't the first reshuffle I've had to do due to interpersonal relations.\" He shook his head. \"Nor, regretfully, do I think it will be the last. Of course, if you don't take the job we'll have to leave things as they are.\" I snorted.\n\n\"Did you just blackmail me into taking the job?\" I laughed. Adrian grinned.\n\n\"I prefer to think of it as bribing you.\" He said.\n\n---\n\nSaturday\n\n----\n\nNate\n\n----\n\nI played with Jude's hair as he lay on the couch, his head in my lap. Soft Dom. Totally called it. We were kinda watching TV- he'd made me put on Country fucking Calendar of all things, like we were 60 or whatever, telling me it was the best show on television and I was an ass if I wouldn't watch it with him. The segment was cute, they always are, about a couple down in Nelson brewing cider. I rolled my eyes watching it, mentally playing bingo with the camera work. Kiwi's in gumboots stomping across the mud. Shot of the kids pretending to drive a tractor. Ubiquitous shots of fields of sheep, of people drinking looking out over the orchard... blah blah blah.\n\n\"Honestly you think they'd run out of boring stories about farming families living their dumb dreams.\" Jude said nothing. Aw crap. He really likes this dumb sappy doco stuff. Maybe I'd offended him. \"Jude? Judey? Judas Priest?\" He stirred in my lap, but didn't react. Oh. I bit my lip as I looked down at him. So soft. He'd fallen asleep. I grinned to myself and moved to quickly switch to Netflix.\n\n\"Leave it.\" He said firmly, catching my wrist. I giggled.\n\n\"Thought you were asleep.\" I pushed his hair off his face and he opened his eyes and looked at me. He smiled.\n\n\"Getting there.\" He yawned and I tried not to stare as his shirt rode up as he stretched, exposing those fucking crazy abs and furry stomach. \"Never gonna get there with Too hot to Handle or whatever shit reality TV you're about to put on.\" I smiled at him.\n\n\"Fine. I'll go back to being bored shitless while you have a nice little nap.\" Jude grinned at me and shifted to lie on his side.\n\n\"Perfect.\" He said. \"You can change it if you like.\" He mumbled as he settled into my lap again. \"But that stuff will rot your brain, Nate.\" I rolled my eyes, but I left it on for long enough to make sure he'd actually fallen asleep before putting on some trash reality show. Yeah, it probably would rot my brain but hey, not too much to lose. I glanced up awkwardly as the front door opened and Alex nodded at me. My mind couldn't help but wander back to the last time he'd come home to me unexpectedly in the living room with a guy... but Alex barely glanced at us as he grabbed a soda from the fridge before settling on the couch opposite us. He glanced at Jude and I shrugged.\n\n\"Uh. This is Jude.\" I said quietly. \"The guy I mentioned.\" I'd obviously had to text him as his return became imminent, and confess that I'd offered to prop up a friend... and I almost left it there but after a bit of internal debate I mentioned I might also be sleeping with said friend, a little bit.... Alex nodded. \"He's asleep.\" I said. \"Usually he's wittier.\" Alex laughed.\n\n\"Well, as long as you both think he is.\" He said, sipping on his coke. I stared at him before grinning. Huh. Alex teasing me about a boy. Miracles do happen. He asked me politely if we could put on literally anything else on the TV because this was trite shit of the utmost tier and I reluctantly asked him to choose. Definitely outvoted on what made for good TV tonight. \"Does sleeping beauty get a vote?\" He asked. I poked Jude in the ribs- nothing.\n\n\"Na, he's really out.\" I said. Alex nodded as he put on The Midnight Gospel and sat back on the couch. He took a deep breath and looked at me.\n\n\"What?\" I froze. He shook his head.\n\n\"Nothing bad.\" He said. \"Just... with the hobo you've picked up...\" I snorted and he grinned and continued talking. \"He can stay.\" He said. \"Just thought I should put that on the table. I know you're really trying to sell that this isn't serious but...\" He raised his eyebrows at me and I tried to pretend I wasn't blushing furiously.\n\n\"Thanks.\" I muttered. \"I guess I'll uh... I guess I'll ask if he's interested.\"\n\n\"He is.\" Alex cleared his throat and looked pointedly at Jude. I laughed.\n\n\"Well I'll still ask.\"\n\n-----\n\nJude\n\n----\n\nI lay there, pretending to be asleep. My mind was racing and it was hard to keep my body still. You know, two months ago I was in an apartment with my very grown up fianc\u00e9, planning a wedding and a honeymoon to Raro and a kitchenaid mixer... and now I was... graciously being allowed to share a tiny flat with two guys younger than me and a thousand animals? What was I even doing? Holy hell, I was fucking my ex barista. I was fucking my fucking INTERN.\n\nBut even as my face burned in shame I had to pretend I was asleep, because the conversation had gone on too long. I kept my breath even. I tried to stay relaxed. And Nate stroked my hair as he talked quietly. I could hear the hesitation in his voice.\n\n\"I don't think...\" He sighed. \"Jude's got a real career and stuff.\" He mumbled. \"Honestly- I sort of think this might be a mid life crisis thing...\" I bristled a bit. Mid life? Quarter life maybe... \"There's a good chance he'll get back with his ex.\" Nate murmured. \"I feel like that kind of makes sense? Levi realises he was an idiot but true love prevails... blah blah blah.\" He sighed. I heard Alex mumble something in agreement. Man, everyone and their dog- in Nate's case like a hundred dogs- was so damn convinced this was such a quick rebound.\n\n\"You think you'll be ok?\" Alex asked over the soothing sound of whatever nonsense he'd put on.\n\n\"Course.\" Nate said. \"Knew what I was in for.\" His words were confident but I knew Nate. The way his voice always went high and bright whenever he was compensating for feeling like shit. The way he tensed up a bit. Oh. Oh, no.\n\nI lay there and slowly tuned out, focussed on my own thoughts.\n\nThis couldn't go on. Sneaking around with a toy boy just wasn't my style. So, what now Jude? Marry him? I swallowed my own laughter. I think marriage was off the table for me forever. Date him? Yeah? That's what I wanted wasn't it? Was it?\n\nI was embarrassed... but not because of Nate. He was gorgeous. And he made me laugh. I was embarrassed for falling so fast. For not knowing what to do with all my feelings. For not knowing what Nate wanted and being scared to ask.\n\nI didn't mind the different life stages thing, although I could see where that would get harder. But like, harder how? I second guessed myself. Nate wants to go out dancing? Let him go out dancing. You can have a night to yourself at Mason and secretly sneak some cigarettes. He'd been really fucking on at me about smoking. I hadn't had one in a week. Nate would never want to do work stuff- leaving do's and Friday drinks, but nor do I and at least together we would have good company. Then there was money. I didn't like thinking about it because it felt cheap and shallow- but I definitely did and probably always would earn more than him. So lean into it Jude, the asshole on my shoulder said. Be his hot sugar daddy. And besides, the angel said, if he got paid for all the charity and demonstration stuff he does for free he'd be making a lot more. He's a better person than you. I tucked myself into his lap and I felt his hand stroke my spine.\n\nAnd all of that aside, I asked myself, money, jobs, dancing... don't you just, like, really like the guy? I bit my lip. Sure. But I wasn't gonna move in. So what did I want?\n\nI sighed. I don't think I was getting over this. I guess I had to come clean.\n\n----\n\nMonday\n\n-----\n\n\"Found a flat.\" I greeted Nate when I got home. He grinned at me. Man, that boy has the best poker face. If I didn't study him in intense detail almost everyday I would never have guessed I'd just broken his heart.\n\n\"Brilliant!\" He rested his head in his hand. \"Where is it? Close to work?\"\n\n\"No.\" I sat down and bit my lip, beckoning him to join me at the table. \"Close to you, actually.\"\n\n\"Oh.\" He blinked and gave me a look as he sat down and rested his feet on my thighs, sitting back in the chair.. \"You know- even closer to me would be staying here.\" His voice was light but he wasn't joking. He was looking at the table and tracing little figures with his hands. I smiled and stopped him from distracting himself.\n\n\"I thought about that.\" I said quietly. \"I really, really did.\" I sighed. \"And I landed on I can't live out of your wardrobe forever and there's barely room for Alex with all your animals let alone me. But an apartment just around the corner came up, which is kind of the best of both worlds. My boyfriend on tap and my own space so I can finally get my shit out of storage.\" I shrugged as I looked at Nate. He blushed.\n\n\"Um.\" He said. \"Jude...\" I took his hand.\n\n\"Wait.\" I cut him off as I realised what had slipped out.... \"I just dropped the boyfriend thing. Hold on, what I meant to say was... I know we thought that was a bad idea, and I'm still very aware there are maybe some good reasons we shouldn't date... But I want to put that on the table. Because...\" I sighed. \"Because I can't do this anymore. I like you way too much. And I know I'm probably rebounding but personally I think that's a stupid concept anyway and I'm still me and I can't do casual, and I adore you.\" Nate bit his lip and let his hair fall over his shoulders, so I couldn't quite see his eyes properly.\n\n\"Well ah. I mean. I like you too.\" I brushed his hair off his face and clasped his chin.\n\n\"Get bent.\" I said with a smile. His eyes widened. \"I know how much you like me.\" I said, making him look at me. \"Almost as much as I like you- not quite- but a lot more than you're letting on.\" Nate suddenly cracked into a grin. A real, disarming, brighten up anyone's day grin.\n\n\"Yeah, I know.\" He laughed, relaxing into my touch and over the table. \"God, I like you so much Jude! But...\" He sighed. \"Look, I don't have a great track record.\" I sighed.\n\n\"I'm aware of that.\" I said. \"Nate... you know I'm not gonna hurt you, right?\" Nate bit his lip.\n\n\"That's not what I'm worried about.\" He sighed. \"I'm scared that you'll go out to a bar one night when I'm like, high or something, and Levi will be there.... And he'll be in a suit that cost more than everything I own and isn't covered in dog hair, and your eyes will meet across the bar....\" I sighed.\n\n\"And we shake hands politely and I'll leave.\" I said. \"Nate, I'm not going back to Levi. You have no idea how much he hurt me.\" Nate glanced at me.\n\n\"Fine.\" He said. \"Not even Levi. Someone in a conference. Someone smart, someone your age, someone tall and...\"\n\n\"NATE.\" I cut him off. \"I... don't understand why you think I would... even glance at anyone else.\"\n\n\"Because I'm a kid.\" He mumbled. \"And I'm never going to be your equal. I'll always be poor, and I'll never know how to dress properly, and I only just started a real job...\"\n\n\"Ohhh.\" I pulled him into my lap. \"Nate.\" I kissed his forehead. \"None of that matters does it? I don't care how much you make or what you wear- I actually really like what you wear, it's outrageous but it's hot... and you're not a kid. Come on, you're a fucking stick of dynamite.\" I squeezed him tight as he looked at me. He wasn't relaxed yet. Actually, this was the least relaxed I'd ever seen him. \"Nate, I've thought about this at least as much as you have. I want you. For you. Timing could have been fractionally better- but I would have fallen for you anyway. You're utterly lovely.\"\n\n\"I don't get it.\" Nate said. I held back a laugh.\n\n\"Have you looked in a mirror lately?\" I teased. In spite of himself I could see him starting to smirk.\n\n\"Eh, good point.\" He laughed. \"Um. It's gonna be hard to let my guard down.\" He said slowly. I stroked his cheek.\n\n\"I understand. But... will you try?\" Nate nodded.\n\n\"If you... truly...\"\n\n\"I'd never fuck you around. Swear to god.\"\n\n\"So... boyfriends...\" Nate shuffled off my lap. \"Actually, that's new for me. I'm definitely game.\" He raised his eyebrows and looked at me thoughtfully. \"But ah.... I'm still kinda your intern.\"\n\n\"Well ah... I'm already fucking you- I feel like the ethics don't get any worse if I start dating you.\" He rolled his eyes. \"And actually... I got a job offer. We'd still work together occasionally, but you know. You wouldn't be working under me. I could accept it. We could go official. Till then everyone can just pretend they don't know what's going on and Caro can run her betting ring or whatever.\" Nate wrinkled his nose as he looked at me thoughtfully. Adorable. \"Come on. Date me.\" I pleaded. He laughed.",
        "\"Well... I think I already am.\" He said. \"I definitely might be kinda a little head over heels.\" He blushed. \"You sure this won't cause a shitstorm of trouble for you?\"\n\n\"No more than for you.\" I grinned. \"Takes two to tango, stud.\" Nate laughed.\n\n\"No one would ever blame me.\" He batted his eyelashes at me and I slapped him playfully on the shoulder.\n\n\"Cut that out!\" He grinned and I caught his hand and kissed each of his fingers. \"So you don't mind if I move out?\" I asked. He squeezed my hand and sighed a little as he looked at me.\n\n\"I'll miss you in my bed every night.\" He said quietly.\n\n\"Yeah but my bed's bigger anyway.\" He smiled.\n\n\"Alright, dude. You're right. This place gets smaller by the day.\" Funny how he calls me dude. Levi always called me darling. I used to feel special when he'd say that- I was HIS darling. But I was Nate's dude, and the way he said he was so sweet and soft and I knew it meant more than a thousand of Levi's darlings.\n\n-----\n\nMonths later.\n\n----\n\nJude\n\n----\n\n\"Oh fuck.\" Nate said.\n\n\"Huh?\" I glanced at him. He was leaning on the bar and staring very pointedly at the scant drinks list in front of him\n\n\"Your ex is here.\" He muttered. I tightened my mouth. We don't see him much. Obviously we sort of go out of our way to avoid him. Not that I don't see him- Denise was true to her word and refused to let me go, and Levi and I saw each other at least once a month when our visits overlapped. We were kind and polite to one another, and he asked me about Nate, and I asked him about work because his whole new thing with men seemed way too complicated for me. Nate knew. He didn't... mind. He knew I didn't have a family and he loved his own mum so much I think he understood my need for Denise. But he didn't exactly love it. So we avoided seeing Levi, or talking about Levi.... but you know, this is a small city. I motioned for two glasses of the free plonk they call champagne at these events and handed one to Nate.\n\n\"Ye-ah... thought he might be.\" I mumbled. \"Drink up.\"\n\n\"Way ahead of you.\" He finished his first glass with an impressive scull and grabbed mine, with an apologetic smile that was cute enough I wasn't really mad at him. I made a mental note to slow him down in a minute though as I grabbed another two. He's always been more into uh.... Less... legal ways to relax, and as a result his alcohol tolerance is surprisingly low for a lad in his late twenties. \"Ah crap.\" He mumbled as he glanced across the room. \"He's coming over.\"\n\n\"You can run away, dude.\" Nate squeezed my shoulder.\n\n\"Na, gotta like you know, defend my territory or whatever.\"\n\n\"Defend your WHAT?\" I raised my eyebrows. \"Last time I checked I was a man not a fucking disputed piece of land.\" Nate grinned.\n\n\"No dispute.\" He said. \"Mine.\" He took a deep breath and plastered the fakest smile I've ever seen on his face as Levi approached us. I straightened up and nodded at Levi. He smiled at me.\n\n\"It's been too long.\" He shook my hand and leant on the bar next to me, reaching for a glass of something red. He glanced at Nate and looked him over. Nate's hand drifted to mine and I squeezed it tightly. He didn't need this. Levi was such an ass.\n\n\"Ah, Levi, nice to see ya- but we gotta gap...\" Levi blinked at me. He looked kind of... amused.\n\n\"Gotta gap?\" He raised his eyebrows and looked at Nate with a grin. \"That has to be your influence, Jude used to talk like an adult.\" To his credit Nate laughed.\n\n\"Ah shit.\" He said. \"That is all me, sorry dude.\" He smiled at me. \"Terrible influence. Jude's even got a tattoo now.\" Levi's eyes flew open.\n\n\"Really?\" He stared at me. \"Where?\" I laughed.\n\n\"Ah, story for another time. Nice to see you Lee.\" I ushered Nate away from the bar and he gave me a grateful look as we found some of our colleagues.\n\n\"Thanks.\" He said. \"Thought I could do that. Sorry.\" I shrugged.\n\n\"I'm not ready either.\" I glanced back to the bar, where Levi had been joined by his latest whoever, and he was draped around him, as charming and lithe, and blonde as ever. I looked back to Nate. He grinned as he followed my gaze.\n\n\"Well, I'm definitely cooler.\" I laughed.\n\n\"Hotter.\" I kissed his forehead. \"Kinder. Funnier....\" Nate held his hand up and cut me off.\n\n\"Ergh.\" He mumbled. \"Ok, no more comparing me to your ex. Tonight's about me.\" I nodded.\n\n\"Every night's about you, you're very demanding, but yes.\" I grinned as he punched me lightly in the arm and grabbed another glass of bubbles from a caterer passing by. \"And slow down.\" I took the glass from him. He pouted. \"Don't be cute.\" I rolled my eyes. \"That doesn't work on me anymore.\" Nate wrapped his arm around me.\n\n\"Really?\" He blinked his big blue eyes at me. \"You sure?\" I smiled at him. Ugh. I love him so much. I am completely and utterly wrapped around his finger. I don't even bother to pretend I'm not anymore. But one of us has to be an adult sometimes.\n\n\"Nate! Congrats!\" Ryan suddenly appeared between us, thankfully parting Nate and his wine which I was seconds from giving back to him. Ryan pulled Nate away to go and socialise, while I ended up on the outskirts. Nate's so good with people, in a way I never really got the hang of. He was making everyone laugh- he always was. He'd actually taken to an office cubicle like a duck to water, and was always remembering people's birthdays and listening to their life stories and somehow still managing to get his actual work done.\n\n\"Well.\" He admitted to me once. \"To be honest the work is really easy. I just have to be careful or they'll give me a promotion so I like to balance out my day with a lot of gossip.\" I rolled my eyes at him.\n\n\"You could be in middle management last year if you applied yourself.\" Nate shook his head.\n\n\"Nu-uh.\" He said firmly. \"You're management material. I'm here to look pretty dangling off your arm.\"\n\n\"Well, you definitely do a good job at that.\" I teased. I wondered if he'd ever change his mind. He was a little hesitant with new things, but once he felt confident he would usually quietly take over. He's an airhead, yes, but he's actually very smart. It makes me a little insecure sometimes because Nate's everything. Talented, smart, kind, popular. God, sometimes I really wonder what he's doing with me. And whenever I do, he always turns around and gives me that smile... and that's it. He's here because he loves me. God knows what I bring to the table... ok well, literally I do bring food to the table. Nate still can't cook to save his life. Maybe that's enough.\n\n-----\n\n\"They're doing the ceremony soon.\" I heard Ryan say. \"Maybe we should get moving...\" I glanced down at my arm which was suddenly in a vice like grip. Nate had gone white and was clutching me for dear life.\n\n\"I think I'm going to throw up.\" He said stiffly. I put my arm around him.\n\n\"You're fine.\" I said. \"We practised. Just look at me and pretend it's just us.\" He closed his eyes and winced.\n\n\"Can we just leave?\" He whispered. I stroked his back and held him.\n\n\"Well, yeah. Of course we can.\" I touched his cheek and he blinked up at me. \"You wanna ditch?\" I asked. Nate sighed.\n\n\"Yes.\"\n\n\"Well let's go then.\" I kissed his head and he sighed.\n\n\"I can't.\" He said. \"But thank you for giving me the option. Ok. Let's get through it.\" He squeezed my hand.\n\n\"Another drink?\" I offered without thinking. He grinned.\n\n\"Why not?\"\n\n-----\n\nNate was gracious in his acceptance speech. Probably only I could tell he was bordering on chopped- I don't think the stumble he did on stage was taken as anything more than nerves or the usual Nate just generally being bad at walking. He said that he was humbled to be there tonight among so many outstanding members of the community and he felt he'd cheated the system by basically hanging out with animals. But his Wellingtonian Award wasn't just to do with Nate's voluntary work with animals and we all knew that. They'd gone into detail about his work with marginalised groups, his work with Russell on the non profit they'd built together providing gender affirming clothes and free therapy to those who couldn't afford it- he even put me to shame by petitioning for a more vocal Maori and Pacific Island LGBTQIA+ presence in various government departments. Nate was a bouncing firecracker- he could never sit still, he could never do nothing if he could do something. He was the youngest person getting an award that night and he'd told me a million times he didn't deserve it. But he did. I knew he did. He thanked everyone he worked with as quickly as he could and paused before he escaped the stage.\n\n\"And thanks Jude.\" He swallowed. \"Love you.\" He turned bright red and skipped off as quickly as possible. \"Oh God.\" He mumbled as he threw himself in my arms. \"That was awful.\" I kissed his forehead.\n\n\"Love you too.\" I whispered. \"Proud of you.\" I held him as his breathing returned to normal and he slowly sat up in his chair as the other Wellingtonians being celebrated took their turns.\n\nLevi was there because Edgar was on the Wellington City Council. I'd heard through the grapevine they were getting married. I'd also heard they'd reached an arrangement Levi and I could never manage, which is why he'd been draped around some other guy at the bar earlier. It was Edgar who welcomed Nate and the other award receivers back on stage for a final cheer and photo op. Levi glanced at me as Nate shook hands with the others and for a second the rest of the world fell away as I caught his eyes. He sighed deeply and ran his fingers through his hair. He looked at Nate, and he looked back to me, and he nodded slowly, and began to clap.\n\nMaybe I couldn't read him- maybe I could- I don't know for sure. But I think I knew what he meant. I smiled as Nate sought me out. He was looking nervous again, going white and sweating... but he grinned as he saw me, and my stomach lit up because his smile has always made me happy.\n\n-----\n\nThe photo that they ran in the paper is one of my favourite of Nate. They took it while we were smiling at each other. I framed it, because I'm allowed to do that, because I love him- and he complains how embarrassing it is every time he sees it. I like to move it around the flat to annoy him- putting it over the bed, or in the bathroom cabinet, or over the mantlepiece...\n\n\"Ugh.\" He rolled his eyes and threw it at me as he reached in the kitchen cabinet for a bottle of wine. \"One of these days that's ending up in your ass if you're not careful.\"\n\n\"Wouldn't be the worst thing that's been up there.\" I grinned. \"It's your fault. Don't be brilliant and I won't have to save pictures of you from the paper.\"\n\n\"Oh my God, shut up dude!\" Nate hit me gently. \"You know I was just a diversity award.\"\n\n\"You're still brilliant.\" He rolled his eyes.\n\n\"Come walk Wasabi with me?\" He changed the subject. I grinned at the stupid and delightful Shiba Inu who's ears perked up the second she heard her name and the word 'walk'. Wasabi was being adopted in two weeks after months of being passed over because she only had three legs and in Nate's opinion the rich cunts who wanted Shibas were incapable of loving an imperfect dog. In the meantime she'd been living with us and was a pretty welcome addition to the rotating cast of cats and dogs and chickens and god knows what else Nate always seemed to be looking after.\n\n\"Landlord would flip if he saw the shit Wasabi gets up too.\" Nate bent down to pet the dog. I rolled my eyes.\n\n\"Landlord might have decided long ago that if he cared about resale value he'd be dating someone who didn't come with a small zoo.\" Nate grinned at me.\n\n\"I gotta put on real clothes.\"\n\nI sighed as I attached a leash, waiting for Nate to get everything else together, and I scratched Wasabi's ears.\n\n\"You excited dummy?\" I asked her, \"You're getting adopted soon.\" The dog panted at me, smiling. I grinned at her, a little sadly. I'm sure her new owners were delightful and kind and lovely.... but damn I was going to miss this dope. Nate stumbled out of our bedroom after a minute, swearing, tangled in a leash. I laughed as I caught him. \"I already have a leash.\" I pointed at Wasabi and Nate huffed.\n\n\"Tell me that before I almost garrotte myself next time.\" I grabbed his arm.\n\n\"God, how did you make it through childhood?\" I sat him down and untangled him as he rolled his eyes at me.\n\n\"I genuinely think it's getting worse.\" He grunted. \"Thanks, Jude.\" I kissed his forehead as we headed out.\n\n\"It's what I'm here for.\" I held his hand and we swung our arms as we headed to the dog park.\n\nNate lay down with me after I'd exhausted myself running around the park like a total dork playing fetch, and he entwined his hands with mine.\n\n\"You know, ditch the suits and you're actually kind of an idiot, Jude.\" I laughed.\n\n\"It's that stupid dog.\" I said, watching Wasabi wind up a dog twice his size. \"I think I love her.\" I sighed and Nate grinned at me.\n\n\"How much do you love her?\" He said. I sat up and narrowed my eyes at Nate. I knew that tone of voice. He blushed as I looked at him- still cute, but decidedly less cute with that guilty tone of voice attached.\n\n\"Nate...\" Nate bit his lip.\n\n\"Lot's right? Like you wouldn't be mad if I got really upset when her owners backed out last second and I felt really bad and maybe I stepped in and filled in some paperwork....\"\n\n\"Nate!\" I laughed happily. \"Please tell me when we adopt a kid you'll at least ask me?\"\n\n\"But you love Wasabi!\"\n\n\"Yeah, you got lucky this time.\" I squeezed his waist. Nate suddenly froze and looked at me.\n\n\"Wait. WHEN we adopt a kid?\" I bit my lip and shrugged.\n\n\"Uhhh....\"\n\n\"Uhhhhh.\" He mocked me. \"Kid, huh? A human one?\" He stared at me, resting his head in his hands as I looked literally anywhere else.\n\n\"Well...\" I swallowed. \"Well. I think we'd be pretty great for a kid. A human one.\" Nate looked away from me, and he reached for my hand.\n\n\"Ok.\" He said slowly. \"Uhh... like not tomorrow or anything....\" I started to laugh.\n\n\"No.\" I smiled. \"And I guess.... On that note I have to say that marriage turns out to be... not my thing....\" Nate shrugged.\n\n\"That's ok.\" He said quietly. \"It was never my thing either.\" He cleared his throat. \"Having said that I'm not opposed to... like... spending the rest of my life with you.\" He looked down at his lap and I could almost feel my heart growing.\n\n\"Oh... Nate....\" I couldn't stop myself. I pulled him close to me, circling my arms around him... and Wasabi was suddenly all over us, slobbering on our faces. I grinned as I pulled her off and tried to allay her jealousy. \"Would you?\" I asked Nate, as we stood up and gathered the random objects that Wasabi had deep seeded affection for together for the walk home.\n\n\"Would I what?\" He grinned at me.\n\n\"Would you... not marry me, but spend the rest of your life with me anyway, and adopt two human kids and like, god, maybe 20 canine ones?\"\n\n\"Yeah.\" He rolled his eyes. \"Of course. Although I really think we should start with just one dog and see if that works.\"\n\n\"You're the one who adopted one without telling me.\"\n\n\"And also, Jude, you're like total DILF material don't get me wrong....\" I laughed and nudged him in the ribs as he winked at me. \"But I'm a few years away from taking care of myself, let alone a kid. A human one.\" I wrapped my arm over his shoulder and squeezed it as Wasabi led us home.\n\n\"I didn't mean anytime soon.\" I said, staring at the sky. \"And for what it's worth- if, or when you think you might be ready... You'd be an amazing Dad. You'll make them laugh, and you can help with their homework, and you'll be the cool one, and I'll be the strict one which sucks but let's be realistic here, and I'll probably do all the cooking, but I quite like cooking...\" Nate squeezed my hand.\n\n\"I think about it too.\" He said quietly.\n\nWe walked in silence, our hands entwined, both of us in our own worlds, when Nate was suddenly yanked away by Wasabi, who'd spotted something she found really interesting on the other side of the road. He swore as he chased after her, expertly dodging traffic, before falling over in his attempt to catch her. She jumped on top of him, adoring the new game. I tried not to laugh too much and I slowly jogged over to join him and helped him up. \"On second thoughts, Jude, you might be the cool dad.\" He grumbled. I pulled him into my arms.\n\nIt didn't really matter. As long as it was Nate, I didn't really care if I was cool, or smart, or handsome, or anything really. I squeezed his hand as we walked back to the house.\n\n\"Love you.\" I said absentmindedly. He said nothing. I glanced down at him and he smiled as he looked up.\n\n\"Crazy isn't it?\" He said. \"I never thought I'd say that to anyone, least of all the hot married guy who drinks too much coffee that Russell kept telling me to stop bugging.\" I snorted.\n\n\"Well, you know. We're Bella and Edward or whatever.\" Nate nudged my ribs.\n\n\"Not Bella and Edward.\" He rolled his eyes. \"I've come to the conclusion we're both way smarter.\"\n\n\"No shit.\" I smiled. \"So who then?\" Nate grinned at me.\n\n\"Nate and Jude.\" He said. \"Trust me, that's a really fucking good love story.\" I grinned and kissed his forehead.\n\n\"I love a story with a happily ever after.\" I said. He paused on the doorstep to our house and wrapped his arms around me. I closed my eyes, and pressed my lips to his, and I giggled as Wasabi whined and scratched against the door, doing her best to ruin the mood. Nate blinked his big blue eyes at me and we smiled at each other.\n\n\"Me too.\" He said.\n\n----\n\nFIN\n\n-----"
    ],
    "authorname": "DrHenderson",
    "tags": [
        "gay romance",
        "office romance",
        "anal",
        "blow job",
        "older younger",
        "drama",
        "love",
        "relationships"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/rebound-pt-04"
}