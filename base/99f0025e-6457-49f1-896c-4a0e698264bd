{
    "title": "Between Lives",
    "pages": [
        "Author's Note: While the main character in this story is one with an ongoing series in the Loving Wives and other categories, this is my first submission into this category. While it is not necessary to read the previous chapters in this character to understand the contents of this particular chapter, new readers are more than welcome to do so. \n\nThis particular story deals with psychological horror and the need to understand what comes after in this life. While I maintain my own beliefs to myself, this story is inspired by legends and stories of folks that had comeback from near death experiences. While the majority of those stories describe a white tunnel leading to a bright light with their family members waiting for them on the other side, I decided to tackle that scenario in a different way. This is the journey of a man whose life had been filled with violence and death. \n\nFor those unfamiliar with my writing style, I tend to place a lot of detail into aspects that should be noted at face value, while giving foreshadowing events a quick oversight. This helps drive the story in certain directions while allowing me creative freedom in case I want to change certain themes between chapters. Like I said before, the character in this story is one that I have given an entire and ongoing series in the Loving Wives category, this tale begins with \"Long Road\" and roots out into other characters that have interacted with him in life. \n\nPlease rate, comment, and share this story, and add me in your favorites to continue following the story. If you are not a fan of the Loving Wives stories, rest assured that my story is not in the common archetype that is normally found there. Enjoy this story. \n\nMuch love, \n\naka_Mike \n\n***** \n\nWhere am I? The uncertainty is an unfamiliar feeling to me as I stumble down the well beaten path laid before me; the grasslands beside it are overgrown and beaten by the cold northern winds. Each blade of grass standing resolute against the onslaught of the wind, each tiny grass pod gently caressed by the magnitude of the winds; I can see their elegant dance as each pod is caressed by the violent wind with each updraft. But still, the uncertainty of this place that is wholly unfamiliar to me is the most dominant thought within my being. \n\nInstinctively, I reach to my chest, where that wound should be, where blood and gore should be dominant only to find nothing amiss. I feel no pain save for the one that the bitter wind drives into the core of my being; I can feel my bones rattle as they too face the coldness. My feet, weary with the elements, move as if filled with lead. Each step I take is a trial onto itself, a strange pain shoots from the center of my foot and upwards into the pit of my stomach. I understand the pain; I have understood pain all my life. \n\nFrom the very first days of my life, I had been molded, tailor suited to fit a role that fell upon me like a blanket, and covered my entire future with its black strands. My rebellion was to walk away from a life that I was well suited for but deep in my heart did not want. I had seen what that life could do to well-meaning individuals, I had tasted the blood of innocents, and even to this day so many years later their voices still haunt me. I understood pain, of that there is no doubt, but this pain was beyond reasoning. \n\nThe few people that know where my life was headed always asked me the reason why I walked away. It is far simpler to tell them how due to my actions a number of innocent people were killed for the sake of family honor, but even that is a thin veiled lie designed to stop the questions. I did not feel anything for those people then, and all I feel for them today is an empty feeling and a haunting that does not release me. Not even in my waking hours. But even that, while troublesome now, would not have been enough to deter me from that life. \n\nAs my self-induced death march continues, my mind wonders to events from the past, things that I have seen and done which led me to that fateful place that brought me here. My mind filled with thoughts of both despair and resignation, this place had been spoken of in many legends that I had heard growing up. My father often spoke of it in hushed whispers, always filled with dread and sorrow, knowing that he too would walk these paths when his time came. As had his father and his father before him. Ours was a violent people, and this was just another step in our evolution. \n\n\"You are here early, Daemon,\" the ethereal voice said, its tone masked by the wind but still very feminine. \"You should not be here,\" the voice continued, \"not yet anyways.\" \n\n\"I didn't think they would go as far as they did,\" I replied with chattering teeth, my already slow pace becoming more labored. \n\n\"You don't seem surprised to see me,\" the voice continued, this time closer to me as if it was whispering those words in my ear. \"Your father prepared you well, I see.\" \n\n\"He did his best,\" I replied, this was a fact. I knew better than to lie to this entity, this too had been a warning that I had received from my father. \n\n\"The men in your family have become wise,\" the voice said just as a warm gush of wind caressed my face, I could swear that I felt the very fingers of the unseen hand gently running through my bearded face. \"I am not sure if I am pleased with that, it takes away some of my joy.\" \n\n\"We have a short memory,\" I replied, \"I am sure that it won't be long before someone forgets the proper ways.\" As I spoke, the air around me warmed a bit, and my footing became easier to manage. The pains had almost disappeared, I knew she was the reason for this and I was truly grateful for this moment of reprieve. \n\n\"You remind me so much of your great grandfather,\" she mused, \"he too knew how to properly speak to a lady.\" The wind shifted and I could feel something like an arm wrapping itself around my own arm. \"But tell me, Daemon, why are you here so early?\" \n\n\"I played a game,\" I replied, \"it looks like I lost. Took a round to the chest,\" I looked down to see a stain of blood begin to puddle where the gunshot had entered my body, \"yes, something like that.\" \n\n\"Why would you play such dangerous games, boy?\" The warmth of her presence would fool other men into breaking her most solemn rule, but this was not the time to change who I had been and become a man I never was, \"why risk so much for so little?\"  \n\n\"Family,\" I replied. As we continued our walk our conversation slowed down, the wind seemed to die when a large wall appeared before the horizon. I had also been told of this part of the journey, but beyond that none knew the answer. \"We do what we must for Family.\" \n\n\"Just like your great grandfather,\" she giggled, \"so much like him. Tell me, Daemon, how wise has your family become then?\" \n\n\"Like I said, we have short memories,\" I replied, \"but you also know that none have made it further than this and returned.\" Melancholy gripped me, I knew she felt it as well as her arms took shape and embraced me into a warmth that brought me comfort. \n\n\"None have returned,\" she replied, her voice taking a motherly tone, \"out of their own choice. The same choice I will place before you, Daemon, just like your forefathers you have earned the right to make it on your own. But be warned, if you fall here you will never rise again.\" \n\n\"For the first time in a long time,\" I began as we approached a large chasm that divided the path I had been walking on and the large wall before me, \"I am scared.\" \n\n\"I know, child,\" her tone again comforting, \"but this is the path your family chose to take so very long ago. Like them, you too must walk those same footsteps, and face the same questions, the same doubts.\" \n\n\"What is beyond those walls, milady?\" \n\n\"Paradiso,\" she replied, \"that is where you want to go, is it not?\" \n\n\"Heaven,\" I whispered, \"we don't belong in heaven, milady. We have too much blood in our hands, not all of it comes from evil men. Some came from innocents, from people that should not have been there.\" \n\n\"Yes,\" she replied, her form taking a more visible shape, yet still she remained featureless. \"You are a violent people, your family more so than others in the world. Perhaps you are right, and there should not be a place in Paradiso for you and yours.\" Her eyes took form, the grey she decided to use pierced into my core like the sharpest of daggers. \"Yet, each and every one of you does great deeds almost as great as your evil deeds. Each of you has proven time and time again how important it is to not underestimate the human spirit.\" \n\n\"Does the little good that I have done balance out the terrible events that I have orchestrated?\" \n\n\"That is the question you have to answer for yourself, Daemon,\" she replied, her features continuing to become less transparent and more tangible. While she was not skinny by any means, none would dare call her fat. Her shape was full as she stood just an inch taller than me, the air caressing her short red and black hair that one would say was carefully manicured. Her grey eyes stood against the paleness of her skin, almost as porcelain yet completely flawless. \"Have you done enough good in your life to make up for the lives you have taken?\" As she spoke, her voice took on an accent, each syllable pronounced in a regal manner. \n\n\"I don't think so,\" I replied as she pulled away from me, her embrace which had warmed me now helped the chill in the air drive deeper into me like a shard of ice. \"But I am not ready for what comes next.\" \n\n\"No,\" she replied, once again taking me into her arms, \"I do not think that you are. This was not your time, and because of that I am not sure if you can overcome the challenges ahead.\" She drew her face closer to mine, her lips almost touching my own, \"I am afraid that you will fail, child.\" \n\n\"Just as well,\" I replied, \"I would only taint a place like heaven. Still...\" \n\n\"...still you'll try,\" she finished, \"because that is what your blood is telling you to do. I can hear it, screaming at you to get ready for everything, I can feel your muscles priming themselves, your breathing is increasing to feed them.\" She gently caressed my chest, right where the wound should have been, \"no matter how many from your Family come through, I am still amazed at how primal your minds are.\" \n\n\"Tell me what I must do,\" I replied. \n\n\"Death, child,\" she began, moving around my body while her hand remained on me, she moved it along just as she moved, the trail of her touch lingering for a second. \"Death is exponential, yet at the same time it is abrupt. When a man kills, he takes the essence of his victim with him and therefore the essence that he had taken before.\" She stood with her back to me, my instinct to wrap my arms around almost took over my entire being, her soft laugh told me she could sense this as well. She arched her back and looked over her right shoulder, \"every life you have taken, Daemon, takes with it the lives they too have taken.\" She looked back at the wall, the chasm dividing the ground from the wall itself began to fill with a dark liquid that resembled blood but for its black color. \n\n\"I understand,\" I replied, \"each of their kills is now on me so to speak.\" \n\n\"In a way,\" she turned to look at me, \"you have taken the essence of those deaths onto you, the blood has followed you and so the chasm before you fills.\" As I became lost in the magnitude of the blood, she continued, \"this is the path you have made for yourself, Daemon. The first step for you to overcome the journey and perhaps earn your way into Paradiso, and a testament of the good you may have done in the world.\" In the blink of an eye, her form disappeared and then reappeared behind me, her arms wrapped around me as I had almost done to her. \"Like I said, death is exponential. You must make it to those shores, with the weight of your sins weighing you down.\" \n\nThe warmth of her dissipated, suddenly I felt more alone than I had ever felt before. The air around me grew heavier, almost as if a fan had been turned off inside a sauna but with no heat. As my feet moved, the heaviness I had felt earlier had returned, much heavier than before, and with it the pain. I was used to dealing with pain. As I neared the crimson shores, the winds that had been haunting me violently made waves that took the shape of a large mouth. I could see that this red sea was hungry as it eagerly awaited my invasion. I drew a series of breaths, each longer and deeper than the previous and without another thought I jumped into its embrace. \n\nThe warmth of the blood was shocking, I could feel the plasma sticking to the fabric of my tattered clothes, and the weight upon my feet which I hoped would placate, instead drove me deeper. My hands became heavy as unseen shackles joined the weights in my feet in their struggle to drive me deeper into the crimson oblivion that promised rest. I reminded myself not to scream, it would amount to little more than a waste of the precious oxygen reserves that my body held. But the combination of both the pain and the ever increasing weight on my extremities made it almost impossible to restrain myself. \n\nI did my best to kick my legs in a scissor-like fashion much as I had been instructed in my military days, remembering the many drill instructors that screamed and shouted orders at us. \"You will allow your body to relax\" one would scream, \"you will remind your body to move only as necessary\" another would shout. They would order us onto the ground, using hoses to ensure that each of us was well soaked before we would have our turn in the pool. \"To survive, maggots, you must think. Panic and you will die.\" The more they screamed the more those instructions registered into our minds, their shouting did not stop while they placed the restraints on our hands and feet. Their shouting did not stop while they placed the blindfold and hood over our heads. It wasn't until the silence of their last command that their shouting stopped, \"live\" they would whisper as they would toss us into the waters. \n\nBut those drills were different, while their intent was to familiarize us with the panic of being submerged while in complete confusion, it was also designed to help us learn to swim with restraints. As we moved, those restraints would eventually become lose, allowing us more freedom the more we struggled against them. But these restraints were not the same, these were not designed to become lose as I struggled, these were not designed to allow for eventual freedom. These were solely designed to drown me, even as I contemplated my own situation. It was not until this point that I wondered if I was truly dead, more specifically I wondered if I could die. I knew I was not in the real world, and I did not understand the physics of the place. But as I moved the way I had been instructed to move through muscle memory and repetition, I made progress through the heavy liquid that wrapped itself around me like a velvet glove. \n\nBut I had been struggling for too long and my short supply of oxygen was almost at its end. Stubbornly, I continued my desperate pace as my brain continued to shout orders to my body much like the drills had done so many years ago. They were desperate reminders, urgent notices not to exhale yet, to hold on even as the pain in my lungs alerted the rest of my being to a situation that I was well familiar with. The sharp reminders of my own mammalian need to exchange gases was fast becoming a loud voice in my mind, it demanded attention. My arms were becoming weary, the combination of oxygen deprivation and exhaustion were beginning to take their respective effects. A cramp in my left leg caused me to grimace, the shakes in my arms were making the already difficult task an impossibility. My already darkened vision became like a tunnel, with darkness collapsing onto itself as my movements became slower. \n\nCowardly, my body betrayed me and allowed the air I had been greedily holding onto escape, soon I would embrace the cozy arms of shallow water drowning, I would lose consciousness much like I had so many times in training. But this was not training, there would be no arms to jostle me from this liquid and onto dry firmament. There would be no corporal punishment to reinstate in me the ability to push my body more and more. There would be no second chance to try again, no instructor reminding me of my failure. This time, it would only be the darkness. My lungs demanded that I breathe, the muscles in my abdomen readied themselves as the darkened tunnel in my eyes became almost a pinpoint of blackness. Just then, my fingertips touched something hard, an uneven surface. \n\nUrgently, the rest of my body joined and as I followed the structure upwards, fighting with what little remained of my strength, my head broke the surface and the cold wind that I had cursed almost an eternity ago greeted me. My first breath was long, it truly was a banquet for a starving man. Madness radiated through me and escaped in a long, drawn out laugh. Crimson tears flowed through my eyes, my lungs coughed more of the substance as they tried to fill itself with precious oxygen. I held on to the surface while trying to regain my strength, no longer needing to move my legs as desperately as I had before. After my body was satisfied with its fill of air, I managed to pull myself onto the shore, exhaustion holding me firmly against the ground. \n\n\"For a second I was wondering if you were going to make it,\" she asked, her voice reinvigorating me. \n\n\"For a second I was wondering the same thing,\" I replied, \"I almost didn't.\" \n\n\"But you did,\" she gestured for me to stand up, the weight on my extremities gone, along with the pain. \"You overcame the weight of your sins. Already, you have gone farther than many of your ancestors, Daemon. You stand in the same shores that only three of your ancestors conquered, through similar challenges that you just overcame. Albeit, their weight was not nearly as heavy as yours.\" \n\n\"That's what that was? The weight of my sins?\" \n\n\"Yes,\" she replied, \"the burden that only you can carry, threatening to drown you in the sea of blood that you created. Both with the blood of your enemies and victims alike, those that you destroyed in the name of whatever earthly justice you invoked. This is how the tradition of baptism was started by the people in your world, Daemon, through a similar rite.\" \n\n\"I had a thought while down there,\" I began. \n\n\"Such thoughts are dangerous in a place like this,\" she immediately replied, \"this is not a place that can be so easily identified as life or death. Not for you at least. As we speak, your mortal body rests in a comfortable bed, tubes and other machines have you tethered to that land where the rules of life and death are far clearer.\" Her grey eyes bore into me as if they tried to look into my very soul, \"if you fall, here, you will never rise again.\" She moved toward the wall, motioning me to follow her. \n\n\"Then what will happen if I succeed in whatever task has been laid out for me?\" \n\n\"Then, the gates of Paradiso will open to you, and eventually you will return to your world,\" she replied, her tone taking a bit of irritation. \"Unless,\" she said before she could stop herself. \n\n\"I am brought to life,\" I concluded. \n\n\"Yes,\" she continued, \"with your technology it is possible that you may yet return to your world, and as I have said, this is not your time. That might still yet pass, however you cannot remain here for very long. As you are still tethered to your body, this place will feed off your soul until nothing of it remains. You will become little more than a shadow that will forever haunt this place, until eventually your screams of madness become another breeze that will chill the next unfortunate soul that finds themselves in this place. Perhaps that might still happen,\" sadness replaced the irritation in her voice. ",
        "\"What is my next challenge?\" I noticed that my clothes were now perfectly repaired, not even the blood stains nor the wetness of my earlier challenge remained. It was as if I had not endured that awful swim. \n\n\"This wall,\" she turned, \"just as the chasm was filled with the blood that covers your hands, this wall is a testament of your sins. Each block represents a life you affected, each foothold within that wall is a life you affected positively; how stable that foothold is will depend on how much you helped that individual.\" \n\nAs I neared the wall, the size and magnitude of it took my breath, each brick was the size of an ossuary capable of easily holding the remains of a grown man. The coldness of the wall surprised me; it was almost icy to the touch, devoid of any life energy. As I ran my hands through the carefully constructed brick, I could not see any imperfections in the design, no flaws in its architecture. It was as if my hand was running down a large piece of glass that had been rubbed and shaped into a smooth surface. The wall itself appeared to be a single slab of rock, except for small areas that identified where one block began and another ended, the entire face was one continuous smooth surface. I don't think that even a piece of paper would manage to fit in the space between the blocks. \n\n\"It does not look too tall,\" I remarked. \n\n\"The wall will shift itself as you make your selection,\" she began, \"wherever you decide to begin your climb, the wall will shift itself and grow as you move. I myself do not know how tall it will be, Daemon.\" She placed her hand on my shoulder, \"no matter what I tell you, your mind is already made up. I could describe a wall that stood miles about the ground and yet you would try to climb it. So why do you hesitate?\" \n\n\"What if I make it?\" She looked at me in confusion for a second, before the contours of her face shifted into a smile. \n\n\"Your fear is something unexpected,\" she began, \"while you could be worried about being unable to make the climb and falling, you instead worry about what is truly weighing on your soul. You are so worried that you don't belong in Paradiso, why?\"  \n\n\"I would taint it,\" I replied, with complete honesty. \"Paradiso is a place filled with those deserving of peace through their actions and humility. Those in there are genuinely good people, free of the stench of death and blood in their hands. How could someone like me join those people? How could I, in my life and my choices, possibly compare to those that sacrificed so much to be accepted?\" \n\n\"You have interesting fears, Daemon,\" she began, \"I am completely certain that you are not lying as I can see into your thoughts and into the center of your being. I know you are not lying because I don't smell the stench of deceit from you. But this fear, it is completely irrational; you honestly believe you don't deserve to be in there.\" Her grey eyes had this pain behind them; it was almost as if her heart was breaking at the revelation. \"You really are lost, child.\" \n\n\"It's not that,\" I replied, \"well not that, I am afraid. Afraid of seeing the people that I put there, afraid that they would lose their place in search of just vengeance, but mostly I am afraid of what being in that place will take from me.\" \n\n\"What would that be?\" \n\n\"Me.\" I turned from her gaze, it was as if her eyes were venturing deeper and deeper into me, I could not bear that look any longer. \"I am afraid that I would lose myself, the few fragile things that make me who I am.\" \n\n\"Would that be such a bad thing?\" \n\n\"I am not sure,\" I replied as I began to warm my arms and legs for the coming trial, \"I know what I am in the world, I am a sometimes necessary evil. I bring death and violence wherever I go, I leave misery in my wake. But every religion that I have studied, every creed, every belief has some entity that does what I do. But I am no entity,\" I stopped to gather my thoughts as she looked at me with curiosity, she was amused at my quandary, \"I am just one of many.\" \n\n\"No,\" she replied, \"you are one of a kind. Truly, even if I were to compare you to your ancestors, even the few that made it this far, I can honestly say that you are one of a kind. Sure, there are similarities, you have the soft voice of your great grandfather, and the mannerisms of his great grandfather. Your self-doubts are unique to you,\" she paused as she gathered her own thoughts. \"You are like a broken toy that was hastily put together using various pieces from other toys. The parts get the job done, sure, but they didn't belong to you. But you've carried on with them for so long, that now it would be impossible to see you without them.\" \n\n\"Well,\" I replied in reaction to her own doubt, \"time to get over this wall.\" \n\n\"Cynicism,\" she mused to herself, \"it's an enduring family trait.\" With those departing words, she vanished like a smoke trail, leaving me alone to find the best path upward. \"I know there is a place for you in Paradiso, Daemon, a place where you can finally find that peace that has eluded you for all these years. Go through those gates, child, and never return to this place.\" \n\n\"Am I such bad company?\" \n\n\"You deserve better than this,\" the voice had turned into a whispered, carried to my ears by the small breeze in the air. \"Do not carry a burden that is not yours to bear, you carry enough weight on your soul, and one day it will crush you.\" \n\nAs I looked at the smooth surface, I wondered if the lack of hand and footholds was a clue that perhaps I would not be able to climb, however as I reached upward a protrusion tore its way from the wall. Firmly, I used it to pull me from the ground and as I moved to place my feet in the empty space, another protrusion filled the space. \"Use the strength of your legs to carry you upwards,\" another voice from my past resonated in my head. This one from my previous training in mountaineering as my outfit prepared for an incursion into the mountains of Afghanistan. \"Never keep your arms over your head,\" the voice drilled into my brain, \"this makes it harder for blood to be pumped into those pathetic excuses for muscles in your arms. If no blood is rushing in, you'll start to shake.\" \n\nI followed those silent instructions, taking small rests between footholds, always keeping three points of contact with the rock face. Carefully selecting a route was not entirely necessary as the hand and footholds would peek out whenever my hand and foot moved. She was right when she said that the wall would continue, I had been working at a good pace for what felt like hours with no end to the wall in sight. I thought I was alone in this climb when a voice snapped me out of my own thoughts. \n\n\"Hi,\" a small female greeted me as she hung from one of the larger handholds in the wall just to my right. She seemed to be around 9 years old, brown hair that was neatly arranged in a ponytail, and a cheerful attitude that was a sharp contrast to what I had felt so far. \n\n\"Hi,\" I replied, curious of the child, \"what are you doing in a place like this, little one?\" \n\n\"Oh,\" she replied, \"I've been here for a long time. I like to climb,\" she continued, \"but this is not my wall so I can't reach the top.\" \n\n\"Then why do you continue climbing it?\" I used the time to rest as well, \"if you can't reach the top?\" \n\n\"Because it's fun,\" she repeated, a small gesture of annoyance registered in her face, \"weren't you listening?\" \n\n\"I forgot,\" I replied, \"I'm sorry. Why are you here all alone? Don't you have parents?\" \n\n\"Yeah,\" she replied, \"but they made it over the wall.\" \n\n\"Did you not go with them?\" \n\n\"I was with my dad but then I fell off him,\" she began, tears filling her eyes, \"and when I tried to catch up, him and mommy, they were gone. So I have been climbing up trying to get over.\" \n\n\"Why did you fall off him?\" \n\n\"He was saying that I was very heavy,\" she said, the cheerfulness returning to her voice, \"so I climbed off for a little bit and when I did I couldn't hold on.\" \n\n\"Well, little lady,\" I replied, \"wanna see if we can get over this wall?\" \n\n\"I'm too heavy,\" she replied, a small crimson shade colored her face, \"I don't want you falling down, mister.\" \n\n\"You let me worry about that, ok?\" I extended my hand to help her climb on my back, \"besides I could use a pretty girl's cheers as I climb.\" She easily climbed onto my back, while she was heavier than first appearance would dictate, I quickly became comfortable. \"You don't weight that much,\" I teased her, \"no more than a rucksack, and I've carried plenty of those.\" \n\n\"You are a soldier?\" She replied, joy in her voice. \n\n\"I was,\" I replied, \"a long time ago.\" I continued the climb at the same pace that I had established, her weight did not make much difference to me. As she gave me encouraging words, I made jokes to make her laugh and smile. Before I knew it she began wriggling about my back. \n\n\"I see it!\" She was excited, \"I see the top!\" \n\n\"Good,\" I replied, \"see? I told you that you weren't that heavy.\" My hand reached the top of the wall and I quickly shifted my weight over in order to take a seat over the wall. The sight that stretched before me was magnificent, almost beyond words. Carefully, I allowed her to take a seat beside me as we looked on, there was a large gate that stretched just beyond the distance for two large doors to cover. Beyond that, large grasslands covered the ground; the sound of water filled my ears. This was a drastic departure from the earlier scenery, where as I had only experienced a barren wasteland, this was filled with life. \n\n\"Can we climb down?\" She asked, her eyes fixated on the meadows just beyond the gates. \n\n\"Sure,\" I replied, holding her hand once again while she climbed onto my back, \"this should be easier.\" Just then I looked to the ground to see that it stood at a distance that I could easily withstand by jumping. \"Can you see the ground?\" \n\n\"Yes,\" she replied, \"but I am afraid. It seems so far away.\" \n\n\"Well,\" I replied, \"hang on tight, pretty girl. Just in case.\" I felt her arms tighten around my neck, a sharp inhale of breath. It took less than a second for my feet to hit the ground, and a second more before she realized that we were not falling anymore. \"You can open your eyes now,\" I said as I maneuvered her from my back and onto my arms. \"We are here.\" \n\n\"Wow,\" she replied as her feet touched the ground, she immediately ran around the grassy area, enjoying the smell of grass and the sound of the critters jumping around her. Her giggling brought a smile to my face as I moved about towards the gate. \n\n\"Come on, little one,\" I said, \"we still gotta find your parents.\" She took my hand as we made our way to the gate, where a man stood behind a podium of sorts. As we neared, he straightened his back and looked inside a large book. \n\n\"I was expecting only one,\" he said as a matter of introduction, \"yet here are two.\" \n\n\"Little lady's folks went on ahead of her is all,' I replied as her hand wrapped itself on mine, \"nothing to it. But I may be the one you are expecting.\" \n\n\"The door will only open for one,\" he replied, \"but yes, you are expected, Daemon.\" \n\n\"Why did he call you that?\" She asked. \"Is that really your name?\" \n\n\"That's what I'm called,\" I replied, \"but my friends just call me D.\" I looked at the man behind the podium, \"like I said, this little lady is just overdue, I am sure that there is a way for you to make it right.\" \n\n\"I am sorry,\" he replied in a monotone voice, as if he was looking down his nose at us. \"But the door will only open for one, and as I said, you are expected.\" \n\n\"What does that mean?\" She asked, fear in her voice. \n\n\"It just means that he's gonna have to try harder,\" I replied, my gaze burning into him. \"Because there is no way that such a pretty girl is going to stay out here in the cold.\" \n\n\"I truly am sorry, young lady,\" he replied, \"but if you were left behind, there is nothing I can do for you. Your parents must've been told that if they went ahead, you would lose your spot.\" He looked around as two large creatures materialized, both were twins of a kind. They stood tall, their skin pale with an icy undertone, their steely blue eyes locked in on the young girl. Their movement was one of trained warriors, each simple move carefully thought out for both effect and efficiency. \n\n\"If you want to keep your babysitters around,\" I said, \"I'd tell them to stand down.\" The twins froze in place and looked back for further instructions; clearly they were not used to being spoken to in such a manner. \n\n\"I apologize, sir,\" he responded, \"but if she has been left behind, she cannot be allowed in.\" He nervously looked at the twins, \"you must understand, it is policy.\" \n\n\"I was told that beyond these gates is heaven,\" I asked, \"was I lied to?' \n\n\"No,\" he replied. \n\n\"I was also told that if I had failed to arrive here,\" I pointed at the gate, \"that I would fall and never rise again. Was that a lie?\" \n\n\"It was not the complete truth,\" he meekly replied, \"you would be placed in an area where your soul would find no rest. Constant violence would haunt you, and every second would be spent merely trying to stay alive. But if you would fail, and be killed, your soul would regenerate the following day only to go through it again and again. For as long as time flows.\" \n\n\"So if I understand this correctly,\" I replied, \"the door to heaven will only open for one. The one that remains out here will be plunged into an area of eternal pain and suffering, how am I doing so far, Chief?\" \n\n\"You are correct.\" \n\n\"Well, little lady,\" I took a knee and faced my companion, \"I guess this is where we go our separate ways.\" I pulled her into me and hugged her tightly; I could feel the moisture of her tears staining my face. \"You be good, and stay next to your daddy, now.\" She pulled back in surprise, her mouth open as she absorbed the information. \n\n\"But, but...\" her tears prevented her from saying more. \n\n\"Such a pretty girl like you is only going to make heaven that much of a better place,\" I replied, \"besides, I could use a good fight to keep me entertained.\" I looked at the twins, \"your escorts are ready, little lady. They'll take good care of you.\" \n\n\"But why did you carry me all the way here when you could have just left me?\" She held on to my arm, \"why are you letting me go ahead and take your place?\" \n\n\"I don't deserve to be in there,\" I replied. \n\n\"But you do,\" she cried out, \"you have been so nice to me.\" \n\n\"But not to everyone, little lady. I am not a man of peace, and I don't think I could live in peace even if I could reach it,\" I turned the girl and had her face the gates, \"but you don't have to know that life. One filled with chaos and violence, much like my life has always been. You have a family there, a mom and a dad that are probably waiting for you. Go to them, and promise me to be a good person if you ever come back.\" \n\n\"I promise,\" she tried to silence her tears, \"and I promise that if I do make it back, I will look for you.\" \n\n\"I promise then,\" I replied, \"that I will make it easy to find me. Go on now, girl, its never a good idea to keep them waiting.\" The twins took her hands and walked her through the gate, as I turned and faced the man that had been standing in the podium, he could not hold my gaze. \n\n\"Never in my years,\" he replied, \"have I ever seen such sacrifice. Its even more of a surprise that it comes from someone with such a moniker as yours.\" He closed the large leather bound book that had been resting in the podium, \"are you ready?\" \n\n\"I could use a smoke,\" I replied, \"care to give a condemned man one last wish?\" He snapped his fingers and a pack of cigarettes and a lighter appeared in my hands. \n\n\"If you would follow these gentlemen,\" he reopened his book as four large shadowy figures surrounded me, their essence was dark and a putrid smell emanated from them. \"For what its worth, you have led an extraordinary life, Daemon. It is a shame you will not be joining us beyond the gate.\" \n\n\"It's like I said, that place is not made for someone like me.\" We moved away from the gate and toward the east, the skies became darker as we walked, almost as if a gathering storm was getting ready to unleash its own form of violence on what had been described as a violent land. We walked in silence for a long time, the only sounds heard in the distance were coming from my own footsteps. \"Come on, boys, do try to keep it down, we don't wanna disturb the disturbed, do we?\" \n\n\"I can't wait for that mouth of yours to start begging for mercy,\" one of the shadows said. \n\n\"Eventually, they all do,\" said another shadow. \n\n\"It just takes peeling the right layer of skin off,\" a third creature said. \n\n\"The fun part is, finding the right layer.\" The last creature finished and they all shared a laugh. \n\n\"Is that right?\" I replied, \"I wonder what it will take to get your kind to beg.\" Their laughter stopped. \n\n\"We are not simply a name,\" one of the creatures replied, \"what you call yourself is what we are.\" \n\n\"Maybe a treat?\" I continued my earlier comment, \"or a nice scratch behind the ear, yeah?\" I patted my leg and began to whistle, \"is that what you want, boy? Yeah? A nice scratch behind the ear?\" I was facing one of the creatures, the stench that I could only describe as burning sewage filled my mouth so that I could taste it. My eyes watered at the acidity of the stench, saliva quickly accumulated to help wash off the taste. \n\n\"Taking your soul will be a great pleasure,\" one of the creatures said, \"tearing it apart will be a great joy in itself.\" \n\n\"Don't threaten me with a good time, big boy,\" I replied, \"and its like they say, no better time than the present.\" I stopped moving and waited for my escorts to turn to attack, however their hesitation helped me understand my situation better. \"Empty threats,\" I said, \"so who wants me whole so badly that they would send you?\" \n\n\"Erra,\" one of the being responded, \"wishes to meet his worldly equal.\" \n\n\"Erra,\" another responded, \"has a proposition for you.\" \n\n\"And if you decline,\" the third one continued. \n\n\"You become ours,\" the last one ended. \n\n\"Sounds like a party,\" I replied, the cynicism in my voice dripping with increasing anger at these shadows, \"and it sounds like you are going to be one disappointed puppy.\" We continued our walk in silence, again my footsteps were the only thing keeping the absolute stillness of the air from becoming overwhelming. As the silence was beginning to bother me, before us stood a large structure that seemed to be made of the same substance as my reluctant escorts. \n\nWhile I understand that trying to describe the structure itself in a human language would fall incredibly short to the reality of it, I feel compelled by some morbid desire to try. This structure stood almost like an inverted castle, four large cylindrical structures that resembled towers held up the main part of the edifice like arms protruding from the ground. Together, the towers formed the shape of a parallelogram, with the shorter sides making a more drastic angle. In the center of this bottom structure was a smaller construction that fell just short from touching the ground, with a door that looked like a mouth ready to devour any intruders. As we walked beneath the giants holding up the edifice, I could feel the air thickening about me, as if the building itself was breathing hard. The heat of each respiration crawled on my skin like a disease ready to consume the very flesh off my body. \n\nAs we neared the mouth of the beast, I could see a set of stairs climbing upwards in a spiral, each step further added to the mouth's vision as each step appeared to be a single tooth. The spiral gave the wide mouth a look as if it were grinning at those foolish enough to get this close to it. The shadows stopped their movement, instead each of them moved to surround the smaller building, much like they had surrounded me as we had made our way to this very place. Their lingering silence made it perfectly clear that this was the place of their leader, and I was to go on alone. ",
        "As I climbed, the echo of my footsteps almost immediately disappeared as the sound waves touched the walls. These in part looked as if they had a rough surface that seemed all too familiar to me, there was something to the walls that made my skin crawl with both disgust and fascination. With each step, I tried to remember something, anything that would have been said or written down by my family members. Some small detail to give me a direction to take regarding this place. My thoughts and hopes came up empty. The more I climbed, the more the air became thick, the warmth increased so that it reminded me of the many days in the hot desert in those foreign lands I had visited during my patriotic duty. It was like a sauna. \n\n\"Are you the man that turned down the invitation into Elysium?\" The voice itself was hard and cold like steel, each letter emphasized as if speaking was a burden. As the voice spoke in that deep soprano-like tone, it was completely devoid of any type of emotion. \n\n\"Yes,\" I replied, trying to keep my own tone of voice free of the fear that was slowly consuming me. \n\n\"Come,\" the voice commanded, \"see upon my face, deals are better struck between villains when we can see each other face to face, eye to eye.\" I noticed that the more the voice spoke, the voice trailed off as if the owner of the voice was running out of breath. \n\nI could see the end of the long winding staircase, the room reeked of incense trying to mask a more putrid smell, one that I recognized almost immediately. The smell of decaying bodies. The room was surprisingly lit, a large cresset hung from the ceiling of the large room and the flames provided ample illumination. As I looked around the room I could see a large silhouette sitting upon a large throne made of what looked to be bones from various creatures. The person was looking at the ground, its body bent forward as if in deep thought. As I looked around the room, I took a step toward the walls and reached out to touch the familiar texture that covered the walls. \n\n\"How many humans died to make this wall paper?\" I had intended to ask that question in my head, but somehow the words escaped me before I realized that they had been completely formulated. \n\n\"Thousands,\" the voice answered almost immediately, there was no scorn in the tone. \"All in this very room where you now stand,\" the voice continued, as I turned to face the body that had been resting on the throne, the creature had visibly shifted. It was now sitting erect, the long beard that showed his age was clearly visible as were his tired eyes. His face was covered in scars, all bearing a story of a violent life. Something I was all too familiar with. \"Each stood as you stand, with the same confusion in their eyes, the same stench of fear you now emanate. However,\" the man signaled to a large table with a single chair, \"none had that defiance that you have shown thus far.\" \n\n\"Thank you,\" I replied as I made my way to the large table, upon it rested a large bottle of whiskey and a single ashtray carved from the skull of some unknown creature. \"I assume you are Lord to my escorts?\" I reached for the pack of cigarettes, second nature forced me to offer one to my benefactor who merely looked at me. I shrugged my shoulders and took a single cigarette to my lips, as I reached for the bottle I paused for a second, remembering a story from long ago regarding accepted gifts from the Lord of the Underground. \n\n\"It is not a gift that requires anything in return,\" he remarked, \"it is simply a courtesy among warriors. We have much to discuss, and this will help soothe your fragile constitution.\" \n\n\"Forgive me if that was taken as an insult,\" I replied, \"I am in an unfamiliar place, with different customs to ones I am used to observing.\" I took a seat and poured the liquid onto a wooden cup that rested beside the ashtray. \n\n\"You are cordial,\" the man replied, \"that is not a common trait among the foolish. Arrogance perhaps, but you are not arrogant,\" as he faced me I noticed that his eyes remained closed, his head however moved as if it was detached from his body. \"Tell me, why did you allow the girl to go in your stead?\" \n\n\"I'm a man who has too much blood on his hands to ever be called good, regardless of what any of you may think,\" I took a much needed drink from the cup, \"the only reason why I was able to overcome those trials was simply because of the life I have led.\" \n\n\"You don't think that the path laid before you in your life was made to prepare you for those trials?\" The man's eyes continued to remain closed, however he had taken a more relaxed position in the throne as he continued his questioning. \"That perhaps what you endured in life was meant so that you did not have to endure it in death?\" \n\n\"I didn't think that far ahead,\" I replied. \n\n\"No,\" he answered, \"you certainly did not.\" The man took a labored breath, \"yet you did not sway from your decision even after being told what the consequences would be,\" he moved about his seat as if searching for some object out of my comprehension. \"Even knowing you would end up here, and you had every possible opportunity to change your mind, you still did not, instead you masked your fear with cynicism. Do you regret your decision now?\" \n\n\"No,\" I replied, \"it was for the best.\" \n\n\"For the best?\" \n\n\"It is like I told the girl, she does not need to know a life like mine,\" I continued, \"she has been through enough, there is no need for her to suffer more. For me, this type of life would not be so different than my previous life.\" \n\n\"When I heard of your sacrifice,\" the man stood from his throne, my immediate instinct was to rise to my feet as well. He motioned for me to remain seated as he walked toward me. \"I was intrigued. The doorman was not lying when he said that no one had done that prior, given his seat for another. I needed to meet the man capable of such sacrifice,\" as he neared the table a chair appeared before him, along with a wooden cup. I opened the bottle and filled it. \"You impressed both the Doorman and the Guide,\" he took the cup and drew it to his lips, \"are you going to impress me as well?\" \n\n\"I was not trying to impress anyone,\" I replied, \"I simply answered questions that were posed, and took actions that I deemed to be right. Nothing more.\" \n\n\"You are aware that I can see into your being,\" he continued, \"I can detect if you are lying, yet you have yet to lie. You are not even trying to conceal anything from me.\" \n\n\"There is no point,\" I remarked, \"your earlier statement made me aware that you may have that ability, however I had no plans to try to deceive you.\" \n\n\"No, it would seem like you didn't,\" he allowed a small laugh to escape, this too seemed forced as if he had been repeating something he had heard long ago from mere memory. \"Do you know why you are here? Before me?\" \n\n\"No.\" \n\n\"Your family has shed blood for eons,\" he began, \"not all under the guise of good intentions. Have you ever wondered why your family has always been successful in that endeavor but never in more honest ones?\" I nodded, \"you were given to us by an ancestor of yours so long ago that I doubt you would even recall his name. Regardless, it was his sacrifice that made it possible for him to avoid the punishment of this land. 'Every boy who takes up the mantle of head of the family shall be condemned to this place when their time comes,' that was the price. However, you made it difficult to pick up on this generation's bounty. You walked away from your Family duty, and so that role fell upon your brother. Yet here you are, again as the head of your Family.\" \n\n\"You don't know which one to collect?\" \n\n\"Without any possible knowledge, you have made it impossible to collect, you have broken a long established tradition, in fact you have broken through the lines of Fate itself.\" He reached for the bottle and refilled both our cups, \"I have a proposition for you, Daemon,\" he sipped the whiskey with what I could only hope would be contentment, \"a new deal. Based on your actions, I know you are more than a reasonable man. Care to hear the proposal?\" \n\n\"Of course.\" \n\n\"You don't get a heaven or a hell, your reward for being the Daemon is that you get to be the Daemon, until your bloodline is no longer needed. When you die, whether it be in a battlefield of your making or as a lonely man looking back on his life in some bed many years into the future, you will come to me. Then, I will send you back, over and over again, until you are no longer needed. With each life, you will have your instincts, your moral compass, and similar experiences to craft you into the same warrior,\" he paused to look at me, \"each life you take, will belong to me.\" \n\n\"Not all,\" I replied, \"any righteous man will get their chance at Paradiso.\" \n\n\"I knew you were a reasonable man,\" he laughed, \"is there anything else that you would like to add before we seal this contract?\" \n\n\"Yes,\" I replied, \"none other from my Family will be made this offer, they will face the challenges if they must, but they will not be allowed to change this agreement on my behalf. They will have their fair chance at Paradiso, if they fail so be it. Until you have no further use of me.\" \n\n\"Agreed.\" \n\n\"Also, for those that would betray us for their own greed, no hope of ever rising from whatever pit or orifice you chain them to, no hope for a brighter future. Even as they continue their lives, may their misery grow until death. When they die, they will not be offered the challenges.\" \n\n\"I can see why you are called the Daemon,\" he drained the last of his drink as I finished the last of my cigarettes. \"Before we strike this deal, I feel obligated to remind you that this will in fact take effect as soon as you return to your life. Do you understand that?\" I nodded. \"Finish your drink, child.\" \n\n\"How long until...\" I began to ask when suddenly my attention was drawn to his face. Slowly, his eyes began to open and a light with the brightness of a thousand suns bathed me. There was just enough heat for it to be pleasant, but my eyes forced themselves to shut tightly. \n\n... \n\n\"Come on D,\" an all too familiar female's voice begged, \"please wake up. We need you.\" \n\n\"He's coming around,\" another voice said, this one I knew for sure. A brother's voice, one that had shared the pain of the battlefield with me more times that I could count, remarked. \n\nThe beeping of machines filled my ears, the light was unbearably bright. I tried to stand but my feet were not beneath me, I was not sitting down on a table inside a throne room any longer. I was laying down, covered with a single sheet and a large number of tubes, each probing my arms and chest. A mask covered my face, the hissing sound of air being forced into my lungs helped the awful dizziness of the room abate. As my eyes became used to the bright light, I was finally able to open them. Beside me were three of the closest figures in my life: Anais, Francisco, and Elvis. \n\n\"Welcome back, boss\" Francisco said, \"we got work to do.\""
    ],
    "authorname": "aka_Mike",
    "tags": [
        "family",
        "military",
        "after life",
        "mafia",
        "sacrifice"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/between-lives"
}