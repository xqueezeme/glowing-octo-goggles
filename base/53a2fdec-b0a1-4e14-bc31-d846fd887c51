{
    "title": "House Sorena Ch. 02 Pt. 2",
    "pages": [
        "House Sorena \u2013 Chapter 2 Part 2\n\nSisters \u2013 Part 2\n\nA Tale from Skyra\n\nby T. J. Skywind\n\nNote: Only a little sex in this one. Dayanna and Beri are both twenty.\n\nLocation: Sargossa, eastern member of Northumbrian Confederacy, northern Anzac\n\nDate: May 2007\n\n* * * * *\n\n\"I said I'd go with you, Dayanna.\" Just off her patrol shift and tired, Beri stretched in her chair, then drained her stein. At twenty, Beri was a hundred and seventy-five centimeters, lean and well muscled, and showed signs of still growing. She rubbed her hand tiredly through her short, blonde hair. \"Did you think I'd forget? You're my shield sister. It was the first thing you ever asked of me. Don't you want me to go with you?\"\n\nA patron of the Drunken Giant bumped into Dayanna as he stood to leave. Dayanna glanced at him and then checked for her wallet before shaking her head. \"Of course I want you to go. That's not the point. Patrol Captain Argelos promised to make you corporal if you went through leadership training. You've worked hard, Beri. I want you to get that promotion.\" She turned to her grandfather. \"Babba, please, make her see reason.\"\n\nAelfin rose, his face full of pained determination. \"You are both old enough to work this out for yourselves. Dayanna, this whole survival thing your church insists on is difficult to endure as it is. You've already survived your first combat and killed two opponents when you were but a child of thirteen, so to my mind, this should be moot. I'm only permitting it because I made promises to your grandmother. So please excuse me while I take my drink elsewhere.\" Moving to another table across the room, the grey elf turned his back to them.\n\nBeri chuckled, her blue eyes dancing. \"Your Grandda, he's a smart one. Figured out a long time ago he can't out-argue you. Told me once you're as bull-headed as your Grandma. And you are, too! Not that I could have known her, of course. But you are a stubborn mule sometimes. Shield sisters, bound forever. I made a promise to you, Dayanna, and I mean to keep it.\"\n\n\"I can wait, Beri. Really. I don't have to undergo the Rite this year. I can go next year or even the year after. Take your training and get your promotion.\"\n\nBeri stared at her. Dayanna was twenty years old, but she looked scarcely older than when they'd pledged their vows to each other eight years earlier. Only now were Dayanna's breasts beginning to enlarge. Her raven locks when loose, reached below her bottom, but were in braided and folded and tied off warrior fashion. Beri continued. \"Already put your name on the lists, didn't you? If you take it off now, they'll say things about you. Mean things.\" Beri shook her head. \"If I lose the promotion, I lose it. Besides, what about the offer the church made you?\"\n\nDayanna blinked, surprised Beri knew about it. Brother Rayan had approached her after the temple service just the day before, and she hadn't mentioned it yet. Ah, her grandfather, she thought. He always kept close tabs on her progress.\n\nA monk of the church militant and expert in unarmed combat, Brother Rayan had been one of Dayanna's trainers for the past six springs, and she had come to think of him as a friend. Rayan had explained Dayanna showed all the marks of being a paladin, a holy warrior. The church was willing to pay the entire cost of her training. As a knight, she would automatically gain command as an officer.\n\nBeri crossed her arms and rolled back on her chair, smiling clear up to her blue eyes. \"Yes, I know about their offer. Do this knighthood training. You start later this summer, right after we get back. End of argument.\"\n\n\"And you said I was mule-headed. I don't have a say in this?\"\n\n\"Nope! As your sister, it's okay for me to win once in a while. You train and become a knight, see? I'll go with you, be your squire and take care of you while you train. You'll earn ten times what I would as corporal. And one day, you build your own place. Hundreds of people, maybe more, all wearing your family arms, and me right there beside you. One day, I want the honor of being Captain of your Guard.\"\n\n\"Beri, we're blood-sisters. I won't have you serving me.\"\n\nThe blonde warrior leaned forward, lowering her voice. \"I know you love me, and I love you, too. I'd positively die if anything came between us. We both know your long pedigree and a copper will get you half a loaf of bread. But you've also got the divine gifts of healing and light. Your goddess has picked you for something special. Even if you don't count all that, you've got King Donovan's sword \u2013 a thing right out of legend! Pallas Athena Sophia Brighteyes! One day \u2013\"\n\n\"Don't swear!\" Her grey eyes looked at Beri with worry.\n\n\"\u2013 you will be a great Lady, Dayanna. And it will be my privilege to serve you. That's the way it is.\"\n\nDayanna pursed her lips, her grey eyes disapproving. \"The gods should be spoken of with reverence \u2013 or at least respect \u2013 or you risk their wrath.\"\n\nBeri waved her hand dismissively. \"Fine. Now, are we going or not?\"\n\n\"All right,\" Dayanna suddenly grinned, raising her hands. \"I surrender! I'll add your name to mine on the survival lists. Might even be funny. When they see our names together, they'll assume we're lovers.\"\n\n\"And what's wrong with that? Heh, heh. I've been waiting to get into your panties for a long time. And I'll have you for a whole month, all to myself!\"\n\n\"What about Phillipos? I thought you and he were getting to be more than, well \u2013more than just friends.\"\n\n\"We're drinking buddies after watch, but he's not getting between my legs. Never has, never will.\"\n\nDayanna paused thoughtfully. \"I know you've gone to Aphrodite's pleasure house. Did you ever visit with the men?\"\n\n\"What difference does it make?\" she asked, taking another drink.\n\n\"The spells necessary to prevent conception are cheap enough. If you don't have the money, I'll give it to you. But if you're never with a man, you don't need protection, do you?\"\n\nBeri's fist pounded the table. \"That's my choice, isn't it? I don't want to talk about this.\"\n\nDayanna stood. \"Quite right. A crowded room is hardly the place for such personal matters. Your old room?\"\n\nBeri guffawed. \"Hah! Mother filled it with boxes right after I joined the Patrol. Even a dormouse couldn't squeeze into the room now!\"\n\n\"Upstairs on the roof, then?\"\n\nBeri stared at the table top. Then she glanced up.\n\nDayanna stared back at her, her face firm.\n\n\"Hecate's tits! You're a hard one sometimes.\" Beri got up, kicking over the bench in irritation.\n\n\"Beri!\"\n\nScowling and grumbling, the tall, blonde warrior stomped all the way up both flights of stairs. The smaller, leaner, black-haired woman followed behind her.\n\nOutside on the narrow landing of the roof, the hot and humid May evening was surrendering to breezes from the Northern Ocean. The third sun hung low on the horizon. The Hellenes called the suns Alpha, Beta, and Gamma. To Dayanna, they were Aljahn, Tahna, and Miri, in Ba'lorian tradition, named after the first humans created by the Lawgiver. In the eastern sky, Sandahl, larger of the two moons rose pale green, waning bright. Pax, the smaller, white moon still lay below the horizon.\n\nDayanna sat down on the flat roof near the rungs by the loft window.\n\nBeri sat on the other side of the ladder, staring out to sea. \"Nice evening. Not too many clouds out. Should be warm again tomorrow.\"\n\n\"I don't want to talk about the weather, Beri. Are you afraid of men?\"\n\n\"No!\" Beri snapped. \"I work around men all the time, no problem!\"\n\n\"You're a young, healthy, lusty woman. You're an amazon warrior. Haven't you lain with a man, Beri?\"\n\n\"I've been with a man! You were there when I was raped in that alley, remember?\" Hugging her knees tighter, she glared at her sister.\n\n\"Oh, Beri.\" Dayanna grieved at wounds eight years fresh. \"When Babba speaks about Bamma Thel\u00e1yna, I can hear the love he still bears for her, even though she's been gone over sixty years. Men aren't the enemy. You once told me you wanted daughters of your own, to raise and love and follow behind you. A good dream. I always imagined us raising our children together. That won't happen if you never take a husband. What happened to you in that alley was cruel and\u2013\"\n\n\"Damn straight it was! I was thirteen! They had no right to hurt me like that! No right at all!\" She looked away.\n\n\"Even if you can't forget, you need to move past it. You're a wire, stretched tight. I'm worried about you, Sister.\"\n\nBeri wiped her eyes and said nothing, staring out to sea.\n\nDayanna sighed. \"I blame myself. I should have kept more alert for trouble.\"\n\nBeri whirled angrily. \"What a bunch of tripe! We were kids, minding our own business and having a good time! If anyone's to blame, it was that rat bastard who raped me! But for you and your Grandda, they all would have had a turn, then killed and buried me without proper rites. And if not me, it would have been some other girl.\"\n\n\"Not all men are like that, Beri! Sure, few men turn down a woman offering sex, but they wouldn't force her.\"\n\nThe blonde warrior shook her head. \"Maybe that's so with elves, but it happens a lot here in Sargossa. I work Patrol, Dayanna. I've seen it. A lot. A fat lip or a blackened eye, a dress torn to rags. Women so bruised and bleeding they can't even get to their feet. More often than not, it was men they knew who did it. Every time I see another woman victimized, I thank the gods my mother was an amazon and that I can be a warrior because of that birthright. Rape is against the law, but women learn to keep quiet or they get worse the next time. Some even wind up murdered. Women with money or power are safest, but even that's no guarantee. No, Dayanna. Men will rape if they can get away with it.\"\n\nDayanna shook her head. \"I don't agree. There are many honorable men. Babba says the measure of a society is how it treats its women and what rights they have. I think he is right. An elvish maid can fight and no one looks twice. And the Lawgiver teaches that men and women are equal partners. A woman can be the head of a household or lead in battle as well as any man.\"\n\n\"At least you Ba'lorians kill rapists. If she can prove it, and most of the time the woman can't, Sargossa's courts may jail them for a year or two, and usually they just levy a fine. Once they're out, the woman catches it all over again.\"\n\nDayanna watched Beri sadly. \"I've heard some of the insults they say to you. Only the fact I'm not legally an adult and Babba would be liable for anything I do has kept me from challenging them. It must be hard to endure.\"\n\n\"There's nothing wrong with women making love to each other. They make it sound dirty. It's not! I'm a good soldier. Does that mean anything? No. All they care about is who I sleep with. 'Oh, yes, kind sir! I'll wear a dress and breed your brats!' Heck I will! I'd sooner hump a dog.\" Beri looked away.\n\n\"Sometimes I see a man, and smell him, and\u2013and, well, I get positively wet.\"\n\nBeri smirked, eager to change the subject. \"Really? Anyone I know?\"\n\n\"No. Just some of the men training at the temple. Nobody I know really well. Babba once told me some female animals in the wild, before mating, make the male chase her. It's part of the foreplay, but it also lets the male know she's letting him take her. Anyway, after a good long workout, sweat pouring off me, the men exercising \u2013 with their big shoulders and tight butts \u2013 they look awfully good! All I know is I'm frustrated and I'm too young to do anything about it. My hands aren't enough anymore.\"\n\n\"I'll fix you, anytime, Dayanna.\"\n\n\"I know you would, and I appreciate the offer. That's not the point. By your religion, you are an adult. Until I pass the Rite, by the laws of my people, I am still a child. The law is specific. No coupling, and no sex with an adult. At the temple, they will teach me how to be a good lover. Besides, I want to know what it's like to feel a man inside me.\"\n\n\"I took a knife to the guts once. I can vouch it's pretty much the same.\"\n\n\"Beri!\"\n\n\"Look, Dayanna. Some men I trust to fight beside me, but sweaty men don't do a bloody thing for me. I've been in the bathhouses and seen the statues in Aphrodite's pleasure houses. I think men look preposterous with that thing flapping about. Let's leave it at that, all right? Now what about this Ritual of yours? I'm not Ba'lorian. You're sure it's okay for me to go with you?\"\n\nShe nodded. \"Here's what I was told. Because of your age and your religion, you are considered legally an adult. But since you aren't a believer and have never taken the test, church law is that you can qualify as a child if that's what you want.\"\n\nBeri made a rude noise.\n\nDayanna ignored her. \"You have to follow the same rules I do, though. We will have to survive on our own skills for thirty days with what we can carry. No outside help. We may trade with those we meet, and we can accept aid in case of injury or illness, but we cannot accept shelter, money, or food as gifts. Some families think simply going to another city and living off your own labor is test enough, and I admit there is some truth to that argument. Everyone has the sexual initiation\u2013 that's required. Surviving in the wilderness is the old way, and that's how I want to test myself. Anyone who wants to be an officer, a knight or even the head of a household, must go through the full Ritual, in the traditional way. You know I am the last of House Sorena.\"\n\n\"Fair enough,\" Beri said. \"Say, do brother-sister pairings do this survival test?\"\n\n\"I haven't seen it, but I'm told it does happen.\"\n\n\"And do they, like, do it, when they're out there alone?\"\n\n\"Copulate? Not always, but I suppose some do.\"\n\nBeri screwed up her face. \"Ewww! That's gross, Dayanna! And sick, too!\"\n\n\"Unlike the gods? Zeus and Hera are brother and sister as well as husband and wife. And their parents, Chronos and Rhea, also siblings? The heavens of many faiths are filled with brother-sister matings, Beri. What if you had a brother, close to your age? He might have become a good friend, a protector, someone honorable, trustworthy, and dependable. Our faith discourages marriage or mate pairings among siblings, yet as long as the previous five generations have no such joining, it's permitted. Their children, however, must marry foreign spouses.\"\n\n\"If you had a brother, would you do him?\"\n\nDayanna shook her head. \"No. First of all, the elves wouldn't tolerate it. The elves of Cedardale granted the eldest heir to House Sorena the right to find a spouse from among them every fourth generation. My ancestors have exercised that right. I know the names of all seven elves whose blood runs in my family. Sleep with a brother? My religion says under the right circumstances, it's okay. But doing so would tarnish fourteen centuries of family honor and sever all connection to my elvish kin. The shame would kill Babba. I don't think I could live with that.\"\n\n\"Huh. You can really trace your family back fourteen centuries?\"\n\n\"Sixteen. It's only thirty-seven generations. We get a longer life, but like elves, it's harder for us to conceive, we carry longer to term, and we are slower to mature.\"\n\n\"Thirty-seven generations? I don't even know who my father is. If Ma knows, she's never told me. Even though you lost your parents when you were little, I envy you. You know your roots \u2013 who you are and where you came from. I'm Beri Silvanos, daughter of Chloe Silvanos, former amazon captain and now innkeeper. I have two sisters, Selene and you. That's as much as I know.\"\n\n\"Babba once said your family has a long-time warrior tradition, proud amazons noted for their honor and bravery. He once said you are the very image of your great-great grandmother, Corisande Silvanos.\"\n\n\"Ma doesn't talk much about it. Mostly says that fighting is a hard life, that she wants better for Selene and me.\" Beri rubbed her ear. \"Just like her, huh? Think he'd tell me more about this great-great grandma of mine?\"\n\n\"I'm sure of it,\" she smiled.\n\n\"Dayanna, it's a Hellenic tradition before any quest to see an oracle. Will you go with me and get your future read?\"\n\n\"If you wish. But I'm not Hellene and the oracle might refuse to see me.\"\n\n\"I'll convince them!\"\n\nDayanna looked at Beri with wide eyes. \"You wouldn't threaten them, would you?\"\n\n\"And risk a curse? No. But in my experience, priests are always hungry for gold.\"\n\n* * * * *\n\nSnap!\n\nA bound and the deer vanished into the thick underbrush.\n\n\"Sorry, Dayanna.\" Beri stared longingly where the animal once stood.\n\nIt was the fifth day of steady rain, and the third since their last solid meal. Very carefully, Dayanna eased the tension of her bow. \"We're both tired, Beri, and soaked to the skin.\" She returned the arrow to her quiver and capped it, then unstrung the bow. \"Maybe the snares caught something. There's still a chance we will have meat tonight.\"\n\n\"If I can get a decent fire going! I feel like I should have fins, I'm starting to forget what it's like to be dry.\" Beri removed her headband and wrung it, a futile gesture.\n\n\"Me, too.\" Dayanna gave her a quick squeeze on the shoulder before they set off for the snare line. \"Once we're dry, we'll feel much better.\"\n\n\"Why couldn't we have found Mr. Cow? A quick whack of the blade and steaks galore. Pot roast, tip roast, rump roast\u2013\"\n\n\"Stop!\" Dayanna covered her ears, laughing. \"You're making me hungry! Besides, Mr. Cow is an oxymoron. It'd have to be Ms. Cow or Mr. Bull.\"\n\n\"Really? What if he cross-dresses on Tuesdays? Then Mr. Cow could be the correct form of address. Besides, I've never seen one yet that's too terribly smart.\"\n\n\"Mr. Cow works only if you are going to talk, Beri. I was under the impression you were planning to eat him. And what does smart have to do with it?\"\n\n\"Spoilsport. You ruin my fantasies with your logic.\"\n\nDayanna glanced sidelong as she picked her way through the underbrush. \"Huh! The other night you said I was your fantasy.\"\n\n\"Oh, you are, my dear. But in this fantasy, I introduce Mr. Cow to my plate and cutlery.\"\n\n\"So your interest in Mr. Cow is cupboard love, then?\"\n\n\"Dayanna, that is twisted, not to mention being a horrible pun. Na, na, I just want to cook up a nice four-inch steak. Ma's cucumber sauce and tabouli would be good, too.\"\n\n\"There you go with the food again! When we're back in Sargossa, I'll take you to Nicolas' for the Ten-Gold Special. You can survive a week after one of those meals. Right now, you would do better keeping a lookout for some of the plants and mushrooms I showed you earlier. Unless you want dried hardtack again?\"\n\n\"We finished the last of the hardtack yesterday,\" Beri reminded her. \"I've tightened my belt three notches since we started this foray, so I guess another notch or two won't hurt. Hey, isn't that some of the funky fern?\"\n\nDayanna stopped and examined the plant more closely. \"Yes, it's licorice-root, all right. Remember, take only part of the plant, leaving some for next time. Beside, with that, a little goes a long way.\"\n\nThey managed to find some more greens and roots, and even a couple of wild yams. Despite their hopes, however, the snares were empty save for a single chipmunk. Beri watched sadly while Dayanna quickly prepared it.\n\n\"I could eat a dozen of those, all in one sitting, you know.\" Beri's stomach growled, and she rubbed it sympathetically. \"Yeah. What you said.\"\n\n\"One chipmunk is better than nothing. Don't shun the blessings, my friend, just because they're not as obvious or as large as we'd like. It's better to thank the little one for its life so that we survive. With what we've found, we may even fill our bellies tonight.\" Dayanna cleaned and put away her skinning knife, then handed the prepared animal to Beri, who put it into her game bag. \"You might give a word of thanks to your own gods, too. They do listen, you know.\" Dayanna collected the snare. Even with the rain, it would have to be set into a new location as the blood and remains would drive off other game. \"Faith gives you strength and a sense of purpose. It can help you endure what you once thought unendurable.\"",
        "\"I trust to my spear, sword, and shield. When I hunt or ride, I say a word to Artemis. When I fight, I look to Athena. I pay my respects to the others when needed. Each to their proper sphere. More than that, what need I do?\" Beri scanned around for any movement.\n\n\"Nothing, I suppose. You often remind me, sister, there are many paths to wisdom. I didn't mean to criticize. I just want you to look on the bright side. What comes our way is a series of opportunities. How we approach them is as important as the choices themselves.\"\n\n\"Too deep for me. Give me a decent weapon and I do okay.\"\n\nDayanna halted again, shaking her finger at her companion. \"Beri Silvanos! I work hard when we play chess, and you beat me five times out of six. You pretend you're just a grunt with no brains, but I know better!\"\n\nBeri grinned. \"Tactics I can do. Philosophy and religion? I bow to my mistress. Speaking of bowing\u2013heh heh\u2013that would put my mouth right about\u2013\"\n\nDayanna jumped back. \"No way! As much as I love what you do to me, I'm not getting out of these wet clothes until we get back to camp, and that's final! And when we do get back, my first objective will be food and dry clothes! Play can wait until after we have something warm in our bellies.\"\n\n\"Yes, Princess.\"\n\nDayanna narrowed her eyes, then strode briskly for camp, Beri following. In the three weeks since their journey began, Beri sometimes tested Dayanna's patience until she became angry, only to embrace her and proclaim her love, kissing her roughly as her hands roamed freely. The roused passions did make the sex more intense. During her initiation at the temple, Dayanna discovered she truly liked the intimacy and pleasure sex gave. She loved Beri, and embraced the truth that adding love to sex made it ten times better. Yet Dayanna preferred honest lust to manipulation. To her mind, mixing anger and sex was dangerous. Not that she feared Beri would ever intentionally hurt her. No, she trusted Beri, loved her for the sister she was and the lover she'd become. Dayanna just didn't like that type of foreplay.\n\nTwice during the rest of the trip to camp, Beri tried to make conversation. Dayanna remained as dour as the wet evening.\n\nAt their camp inside a hedge of hawthorn, under the partial lean-to, Beri made the fire and laid out the meat. Dayanna prepared the vegetables, deboned and diced the chipmunk, and then tossed into the pot some spices, roots, the yams, and the last of their flour. While the stew cooked, they shed wringing wet clothing for a slightly damp set. The lean-to kept their possessions from the constant drizzle, but the precipitation was even permeating everything in their packs. Once the food was cooking, they began changing clothing.\n\nHalf-way dressed, Beri suddenly threw down her wet shirt. \"What is it, Dayanna? Did I say something wrong? Why are you angry?\"\n\n\"I'm not angry, Beri.\" Dayanna pulled out her last pair of semi-dry pants.\n\n\"You'd tell me true?\"\n\nDayanna frowned. \"Of course, Sister.\"\n\n\"Then why the silence for the last five klicks? I don't understand!\"\n\nDayanna hiked up her trousers and put on mostly dry socks and her spare boots. She put their wet boots by the fire to dry out. \"Yes, I admit something is bothering me. I'm worried, Beri. About you, about us. But I'm not angry.\"\n\n\"Worried? About what?\"\n\n\"Your first sexual experience wasn't a good one. There is touching, intimacy, and the trust that goes with making love. I like how it feels.\" Dayanna paused, turning to look her in the eyes. \"Beri, I love how you make me feel. Once we get to the touching, you are a good lover. What bothers me is the aggressive foreplay. You tease me or say mean things and handle me none too gently. It almost feels like you want me to resist before submitting to you. And that feels less like love and more like dominance and control. I don't care for it.\"\n\n\"Dayanna, that's crazy!\"\n\nDayanna wrung the clothes and hung them on the line. \"You asked me so I'm telling you how I feel, Beri. Finish getting dressed. Your breasts are turning blue. Those socks wet? I've one more pair fairly dry in my pack. Take them. Don't argue with me, just put them on.\" Dayanna lifted the lid of the stew pot, stirring and sniffing, then continued. \"Maybe ten more minutes yet. I like being held, my love, just not held down. I'm not some prostitute from Mayfair Street. I learned and did a lot at the temple. Some things I'll never do again. I like sex. I love you, but I also like coupling with men. Beri, I didn't know my toes could curl that tight! Who knows? Maybe I'll get two husbands or maybe even three\u2013and yes, I mean at the same time! Don't look so shocked. Some men have more than one wife. A woman, or at least Ba'lorian women have the same rights as men. Beri, I love being with you. What I don't need are games.\"\n\n\"Dayanna, I\u2013I ...\" Beri suddenly curled into a ball, weeping.\n\nDayanna scooted closer, pulling her into her arms. Gently, she kissed away Beri's tears. \"Were you even listening? Give me an urgent kiss and a gentle touch. Okay?\"\n\n\"I'm sorry,\" she cried. \"I'm tired and cold and wet and hungry, and I know I'm whining, but I\u2013I don't know if you love me.\"\n\n\"Beri, we are sisters. I will love you always and forever.\" She caressed her cheek, then kissed her lips gently. \"Always. Believe me?\"\n\nBeri nodded, wiping her nose and eyes.\n\nDayanna held her tight, rocking and caressing her until the food was ready. When the stew was all too quickly eaten and the kitchen chores done, they wrapped themselves into their blankets, holding each other close for warmth. When Beri gave a tentative kiss, Dayanna responded, firmly and thoroughly.\n\nGently, they settled into the rhythm of each other's pleasure. Hands reached out, under shirts, caressing nipples, teasing and tweaking. Beri disappeared under the blanket first, her mouth working on Dayanna's small breasts, licking and nibbling. Aroused, she took her turn, kneading and lathing her Beri's larger mounds. Her free hand snaked down into Beri's pants, caressing and probing her slit. Around and around her clitoris Dayanna worked her fingers. As Beri moaned and arched, she undid Beri's belt and shimmied down her trousers. Kissing her way slowly down, Dayanna traced her way with her tongue. Down to the damp center of Beri's oozing lips, circling her center, closer and closer, kissing and licking. When Dayanna's tongue touched her pink nether lips, Beri gasped then gave a long sigh, pressing Dayanna's face into her pussy. Dayanna ran her tongue up and down her lips, lapping up the juices flowing from her sister's swelling sex. One hand worked back up, caressing her breast, tweaking her nipple. After working over Beri for several minutes, Dayanna slid two fingers into her depths while her tongue lathed her clitoris. Beri grunting, struggling as she tried to keep quiet. Slowly, Dayanna probed Beri's slick and puffy pussy while her tongue worked its magic. Up and around her clitoris, then directly on the underside, around, then along the fat lips. When Dayanna turned her fingers along the top for that soft, squishy spot on the inside of her pubic bone, Beri bucked, huffing and panting, shaking and gushing as she came. Dayanna licked it all up.\n\n\"By the gods, Dayanna,\" Beri breathed, \"I love you so much.\"\n\nDayanna chuckled. \"I bet you do.\" Then hummed as her mouth inhaled Beri's snatch. After the first orgasm, it didn't take much to set Beri off again. Fingers sliding in and out of her tunnel and Dayanna's mouth vibrating on her center, Beri bucked again, then arched, humping Dayanna's fingers as her belly tightened and exploded again. Finally, gasping for air, Beri pushed her away. \"Too much! Too much!\"\n\nHolding each other close, they kissed gently while Beri calmed down. Then Beri turned her attentions to Dayanna, plundering her lover's liquid center. The black-haired young woman moved under Beri's tongue and fingers without a sound. Patiently Beri lathed and licked until Dayanna stiffened, her juices running freely from her pulsating snatch. Dayanna reached down and pulled Beri up, kissed her ardently.\n\nOnce their trousers were back in place, they held each other close, enjoying the warmth and comfort of each other's arms. \"Thank you,\" Dayanna whispered. \"That was lovely.\" Beri sighed contentedly.\n\nLater, Dayanna banked the fire and kept watch while Beri slept beside her.\n\n* * * * *\n\nDayanna felt a hand over her mouth. Instantly, she was awake. In the moonlight, she could vaguely make out hand signs from Beri: Large party, behind and to the left. The campfire was out, but the blankets were still warm on the outside. Just arrived then. Dayanna rolled into a crouch. Both of them quietly slipped as much of their gear into their packs as they could manage. From their sounds, she estimated twenty, maybe thirty persons. Too many for just the two of them. Too easy to be surrounded and overwhelmed.\n\nA harsh voice barked out in the night, \"Grka ja krinak mitchko rikn! I smell smoke over here!\"\n\nOrcs!\n\nA century earlier, tempted by the rich caravans plying the Hellenic city-states, a major force of orcs had erupted from the Starfall Mountains, sweeping southeast, bypassing the Elven lands of Cedardale. They had rampaged across the countryside for months. Then the city-states and the elves struck, delivering the orcs a shattering defeat. For a hundred years, no orcs had dared venture this close to Sargossa. Yet they were here now. Dayanna wondered - was it a raid? Or part of some larger force? Orcs bred like rabbits. Perhaps their warrens, filled past capacity, once again forced them out to spread death and mayhem.\n\nThe sound of approaching footsteps refocused her attention. Dayanna slipped her backpack on, holding her bow and quiver in one hand. She dared not draw her blade; its magical light would become a beacon for hundreds of meters. A look, and both knew they would have to run for it. Hearts full of words to say and all the time was gone.\n\nA large, ugly porcine head with an enormous tusked mouth, cursing at the sharp thorns, poked through the brush. The orc scarcely realized his discovery before Beri impaled him with her spear. A kick to dislodge him, and the orc dropped. Then they burst out of the thicket, running.\n\nAlmost immediately, a cry arose and arrows flicked past them. Dodging trees and foes, the sisters dashed on. Two orcs tried to cut them off, but Dayanna ducked and struck out with her dagger while Beri blocked and stabbed with her spear. The orcs chased them for almost three kilometers, but even with their superior night vision, the young women soon outpaced them.\n\nWhen there were no more sounds of pursuit, Dayanna and Beri bent over, pausing to catch their wind. Relief washed over them and they both smiled at their luck.\n\n\"Hecate's tits, that was close!\"\n\n\"I've always wondered, Beri,\" Dayanna panted, \"why do you invoke Her? Athena for warfare and Artemis for hunting I understand. But you don't wield magic. We're not at a crossroads and it's not the dark of the moon. And why that particular phrase?\"\n\nBeri grinned, wiping her brow. \"Sort of embarrassed, but I'll tell. You know there's a large grove dedicated to Hecate in the northeastern part of Sargossa, right? In one corner of the grove is a statue, carved by Stenklos Imphegenia, the famous sculptor. She's lifelike and absolutely stunning, Dayanna, and the most erotic image I've ever seen. Her breasts fill my hands perfectly. Each one is carved not just with the nipple, but down to every nodule of her areola erect. And the rest of her! Like a real woman feeling the heat of her excitement. Her breasts are in a class by themselves. Before I left, I kissed them\u2013I couldn't help myself!\"\n\n\"Crazy amazon.\" Dayanna took a drink from her water flask, then handed it to Beri, who took a long swig. \"Bet you'd hump her, too, if you got the chance.\"\n\n\"In a heartbeat.\"\n\n\"You've sure got some ovaries, girl. Mortals in your Hellenic stories don't fare too well when a god becomes their lover. I don't dare wonder what Hecate thinks of you.\" Dayanna paused to listen before continuing. \"So you think Her breasts are better than mine? Maybe I should be jealous.\"\n\n\"Just think of it, Dayanna! Her statue will still be there, jutting proud and perfect when we're both dust. Not that I don't love your tits, my dear. Hers are just better.\"\n\n\"I won't argue\u2013\"\n\nThey both heard the distant howl, followed by answering cries yet further away.\n\nBeri spat. \"Damn their hides! Dire wolves! With the blankets and clothing we left behind\u2013they'll track us, too, even in this rain.\"\n\nDire wolves, bred by orcs and goblins for generations, were as large as ponies. Cunning trackers, the fell beasts had a deserved reputation for cruelty matching that of their masters.\n\nDayanna dug into her pack and produced a small, worn box. \"We'll do our best to outrun them. But if we fight, we should be properly marked.\"\n\nBeri nodded grimly. She leaned forward as Dayanna applied the black and red grease paint in great bands across her cheeks. Beri marked Dayanna in turn.\n\n\"Heart of my heart,\" Dayanna said, clasping her shoulder.\n\n\"Shield Sisters, no matter what.\" Beri looked up to the night sky. \"The clouds are thinning out. I can make out the Hunter's Horn. You know these lands better. Shall we go north or continue east?\"\n\nDayanna secured the small box. \"North. We should reach Little Xander River by morning. Hop a log and take a ride downstream. We'll be colder and hungrier, but we'll be safer. Maybe catch a patrol.\"\n\n\"If we get that far, Dayanna. We're a long way out of town, and not likely to see a patrol for at least three days. What'll this do to your Ritual?\"\n\n\"The dire wolves mean the orcs are here in force. Ritual ends in wartime, and we join the ranks of the warriors in the coming fight.\" Dayanna dug into her pack again. Opening the pouch, she scattered half its contents on the ground around them.\n\n\"What's that?\" Beri asked.\n\n\"Cayenne pepper. Nasty, painful surprise for the four-foots when they get here. Burn their noses and ruin their sense of smell for hours. I'll dump the rest in about a half hour. Catch more unawares.\"\n\n\"Wish I had some caltrops. Just didn't expect I'd need them.\" Beri looked up, speaking louder. \"Of course, if anyone's listening, a company of Sargossan heavy cavalry or a full phalanx of amazons would be better.\"\n\nAfter checking their remaining gear and packs, they set off at a slow run.\n\nThree hours later, in the early light of dawn, they reached the last ridge before the river. More howling wolves revealed the closing gap between hunters and hunted.\n\n\"How far do you think?\" Beri bent over, sucking air.\n\n\"They're close. Maybe three klicks.\"\n\n\"Gods! It's that far to the river. And I'm winded. We've been on light rations for too long. I don't want to be run to the ground like some deer. I'm an amazon, trained to fight! If I'm going to die, I want to take some of those bastards with me.\"\n\n\"As long as they don't realize we're women. If they do, they may try to capture us instead.\"\n\nBeri fixed her with a hard stare, gripping her arm. Orc treatment of women was well known. Those not raped to death and eaten would be enslaved for breeding. \"Death before capture, Dayanna. Hear me?\"\n\n\"I hear you. Look, if we go to the river, we'll have it at our backs. But they'll have missile weapons. Here in the trees, it's back to back, but we'll have some protection from missiles and they can't attack en masse.\" Dayanna paused. \"You've had military experience. What do you think?\"\n\nBeri rubbed her ear and pursed her lips. \"I say stay. Give us a chance to catch our breath before we fight. Any snare wire left?\"\n\n\"A bit. Why?\"\n\n\"Tie it off between a couple of trees. They see us and we run around between. They move to cut us off, let the wire mess 'em up good.\"\n\n\"Do it. I'm going to string my bow and check my arrows.\" Dayanna pointed downhill. \"They'll probably follow that ravine to the top of this ridge. I'd like to get in a few long distance shots, maybe take a few out.\" She retrieved the wire from her pack. \"Here.\"\n\n\"Dayanna, I want you to know\u2013\"\n\n\"I love you, too. Go! We don't have much time and there's work to do.\"\n\nBeri nodded. Picking a couple of trees, she quickly strung her traps.\n\nDayanna opened her quiver and checked her flights. All nine remaining arrows were dry and intact. She said a quick prayer of thanks and then looked up to the sky. After five days of rain, the clouds were finally scattering. Already, thick pockets of fog were forming. That would last an hour or two, she thought, until the heat of the suns burned it away.\n\n\"Beri! There's some fog. If we hurry, we might be able to make the river after all!\"\n\n\"Too late.\" Crouching near the slope's edge, Beri pointed at movement. Maybe two hundred meters away, the first dozen orc cavalry were already in sight.\n\nDayanna strung her bow. \"If I can get a few, they may take time to change their tactics. There's still a chance for the river.\"\n\nBeri hurried back to Dayanna. \"All right. Maybe the gods will smile on us.\" She loosened her broad sword in its scabbard, checked her shield and helmet straps, then picked up her ash spear. All the while, her lips moved silently.\n\nDrawing the arrow to her cheek, Dayanna sighted the lead wolf. As she released, she began her morning devotional. In the way her grandfather taught her, she almost didn't aim but shots flew rapid and true. Arrow after arrow found its mark. Two down! Four others wounded! Then a dozen more wolf-riders appeared, joining the first squadron. Howling and yelling, they surged up the ravine. Three more wolves fell. Beri jumped and waved, drawing crossbow fire, yelling every elvish swear word she knew, then switched to Hellenic and Norse for variety.\n\nThe first wolf made the rise and sprang, its rider shouting and whirling his sword. Beri braced the butt of her spear to the ground as Dayanna fell back. The next instant, Beri rolled aside as the point impaled the snarling monster, killing it instantly, throwing the rider senseless to the ground.\n\nDayanna tossed aside her bow and her sword Berek flew into her hands, the ancient sword humming with power. Turning on the second rider, Dayanna swung. The eldritch blade clove clean through his chain hauberk and into the dire wolf. Both cries abruptly ended as both disintegrated. Dayanna turned and ran to Beri.\n\nSeven more riders cleared the top. The chase was on! Dodging and twisting, the women led them afoot. Two charging wolves suddenly stumbled, tangled and bleeding, mauling their riders. The others raced on heedless, eager for the kill. Dayanna broke left and Beri broke right.\n\nOne wolf rounded a tree, snapping at Beri. Suddenly Beri whirled, swinging as she dropped, her broad sword slicing the wolf's snout. Howling in pain, the wolf leapt aside, taking its cursing rider with it. Beri turned too late as a second wolf-rider bore down upon her. The beast's fangs sank into her waist, then shook her, sending her shield flying. Cursing with rage, Beri drew her dagger and stabbed the monster's eye. Crack! Pain shot up her arm from the rider's mace. Beri stabbed again, striking home. The dying wolf collapsed, still gnawing into her flesh. Struggling to pry herself free, the orc dismounted for the kill.\n\nThe next moment, there was a blur and the orc collapsed, blood spraying from its headless body. Dayanna stood behind him.\n\n\"You okay?\" Dayanna asked.\n\nBeri sighed with relief, then angrily pried and kicked herself free. \"Don't worry about me. Go to it.\" Her weapon arm broken and her entire left side a searing throb, by sheer determination, she pulled herself to her feet. Hefting the blade in her left hand, she tested its unfamiliar weight.\n\nDayanna caught sight of two more riders charging, and she turned to meet them. Beri leaned against a tree, watching as Dayanna moved and attacked, her sword passing through flesh and armor with scarcely a pause. Two more wolves and riders were down, slain like cattle in a stockyard.",
        "With a sinking heart, Beri counted nearly a dozen wolf-riders still arrayed against them, not counting the wounded. The huge wolves paced and circled around Dayanna, probing for a weakness. Several riders fired crossbows, to no avail, as she dodged or flicked them aside.\n\nThree suddenly charged at once. Bright light enveloped Dayanna, distracting her foes, and her blade danced and whirled. The wolves and their riders were quickly slain, but she was knocked down by the impact. Beri gasped in horror as Dayanna's weapon sailed out of her grip. Beri knew better than to try and pick up the sword herself. Howling with glee, a nearby orc snatched it up while two wolf-riders pressed their attack. Beri halted as she saw the orc struggle with and then lose control of the blade. With no hand to guide it, the orc shrieked as the sword pulled itself from his grasp and, floating in the air, sliced him in two! Dayanna's grandfather had once said the blade was alive, and now she believed it.\n\nAs Dayanna rolled free, dodging and ducking, she held out her hand, reaching, and the glowing blade flew through the air to her. As soon as it was in her hands, Dayanna spun around as two wolf riders overtook her, the fierce blade humming with power as it whirled. One wolf jumped clear; both riders and the second dire wolf were dead as they hit the ground.\n\nShaken, the orcs and wolves took stock of their losses. Seven dire wolves remained, two of them riderless, and nearly a score dead. Minutes earlier, the humans had seemed an easy prize. When Dayanna, covered in blood, surrounded by bright light and a magical, eldritch sword advanced upon them, they wavered nervously. When she burst into a battle song used by the elves of Cedarvale, they routed, howling in fear.\n\nBeri leaned against a tree as Dayanna quickly slew the wounded. Veteran of numerous fights, Beri was puzzled at the uncontrollable trembling that now wracked her body. Oh, yes, she thought. Shock. Beri felt herself sinking slowly to the ground. When she looked up, Dayanna was there beside her, grimly examining her.\n\n\"Gods above, Dayanna. I almost feel sorry for them.\" Then try as she might to stop, she began to tremble.\n\n\"I'm not invincible, Beri. When they knocked me down, a few spears could have finished me. We're trained warriors, Beri. Your traps accounted for several of them. And you took care of a few yourself. No, we gave them the pasting they deserved. Here, look out. I'm going to cut away the leather.\"\n\nBeri grabbed her wrist, shaking her head. \"No, don't. Might burst and spill my guts. Oh! That hurts! Go. When they\u2013when they master their fear, they'll be back.\"\n\n\"Shut up and let me work. Can you move this hand? Good. Put it here.\"\n\nDayanna drew her dagger and cut away the leather, then emptied her water flask onto the wounds. She began to hum. Even though Beri knew what to expect, the rush of heat startled her. When Dayanna was done, the lacerations were a mixture of pink flesh and scabs. Painfully flexing her fingers, Beri was disappointed that her arm still hurt so much, but at least she could move it.\n\nDayanna retrieved a shirt from her pack. Tearing it into strips, she splinted Beri's arm and helped her up. \"When we stop later, I will look you over again. Right now we need to fly. Understand?\"\n\nBeri nodded, unable to stop shaking. \"We\u2013we'll make it?\"\n\n\"You're asking me? I'm as scared as you are.\" Dayanna pulled Beri's face down, wiped the blood from her face with her sleeve and kissed her firmly. \"The Lawgiver provides us with opportunities. Sometimes the opportunity is how to die well. However, I promised you a Ten-Gold Special at Nicolas' and I will do everything I can to honor it. Ready?\"\n\n\"Where's your bow?\"\n\n\"No arrows left. Babba will understand if I leave it.\" Dayanna dug into her pocket and pulled out a small wad of cloth. Unwrapping it, she handed two pieces of dried fruit to Beri, then ate the last piece herself. Reluctantly, Beri ate them. It was the last of their food.\n\nHurrying down the long ridge, they ran as fast as they could to the river and the safety it promised. Northward flowing, the Little Xander was a full-fledged waterway year round. It was wide, swift, cold, and almost always deep. At the bend, the river narrowed to rapids that frothed and roiled about huge boulders.\n\nFinally, the sisters reached the shore. They scrambled down the embankment and waded into the water, struggling to maintain their footing. Overhead, the three suns blazed white, burning off the last vestiges of mist and fog.\n\n\"Selene has two kids, doesn't she?\" Dayanna asked loudly, trying to be heard over the noise of the rapids. They were only a couple of meters into the roiling watercourse, with almost thirty meters to the other side.\n\nIncredulous, Beri looked up. \"What?\"\n\n\"Your sister, Selene. She has two kids, right?\"\n\n\"I know who she is. Yeah, she's got two. Anemone and Demetrius. Why?\"\n\n\"Just hadn't seen her in a while and I wondered how she was doing.\"\n\n\"We're hip deep in a cold river, an army of orcs and dire wolves after us, and you ask about Selene?\" Beri barked with laughter. \"Sister, you are strange!\"\n\n\"We're family. She's your birth sister. It's been awhile since I heard any news, and I just started wondering. That's all.\"\n\n\"I see. A little gossip to take our minds off things? Okay. Well, she likes being married. Eugenos, her husband, is a merchant and gone a lot. He's Hellene, of course, but since he is a merchant, it doesn't bother him that she can read, write and do accounts. Gives her a lot of independence. Ma's got grandkids, so the pressure's off me.\"\n\n\"Your Mother's been pressuring you to have kids?\"\n\n\"Not in so many words. She won't admit she's proud I'm a warrior, but she keeps going on about how it isn't good for me to be alone.\"\n\nDayanna nodded, scanning left and right. Half-way there. \"Babba is too. Not children, mind you. He wanted to know my plans after I become a knight. For a while, I intend to live in the house my parents built. He doesn't approve. He thinks I should live in Cedarvale, or at least Sargossa.\"\n\n\"What about us? I thought we are going to seek our fame and fortune?\"\n\n\"I still want that. But I'll need a place to live. I was born in that house. It's my home. Sometimes I feel my parents are still around, checking up on me. Here, take my hand.\"\n\nOne hand on a boulder, Beri leaned for Dayanna's hand, then jerked upright, reaching for the heavy bolt suddenly impaled in her back. Several more bolts splashed into the water about them. Bursting from a shoreline copse of trees, several wolf-riders galloped toward them, bare seconds away.\n\n\"Beri!\" Dayanna desperately reached for her hand.\n\nBeri stepped closer, struggling, slipped, then swore as the swift current toppled her over. The next second, she vanished under the frothing water.\n\n\"Beri! Beri!\" Dayanna searched frantically. There! Already twenty meters downstream, Beri broke the surface, gasping, then went under again. \n\nGone.\n\nA dozen more bolts peppered the water. Dayanna turned and dove. A strong swimmer, she fought as the river swept her along, spinning her about, battering her against boulders seen and unseen. Desperately, she flailed for air, then choked as water filled her mouth. Her pack, filling with water, began dragging her down. Reluctantly, Dayanna shed it. Then, at last, she was through the rapids. Swimming more easily, she surfaced, coughing until her lungs cleared. When more bolts splashed nearby, she ducked and swam with the current until she lost them.\n\n* * * * *\n\nAs soon as she dared, Dayanna swam above water, looking for any sign of Beri. After floating downstream for several kilometers, she came ashore. With grim determination, she backtracked to the bend where Beri had first disappeared. Dozens of wolf-riders scoured the other bank, but Dayanna kept out of sight, and no further missiles were sent her way. Because they didn't bridge the rapids, she judged the main body of troops must still be some distance away.\n\nNight fell, and when her second search of the area proved fruitless, Dayanna waded back into the chilly water. Hugging the riverbank, she scrutinized every nook and eddy, praying Beri still lived. Hours later, and chilled to the bone, by purest chance, she caught moonlight glinting off a sword. Beri!\n\nRushing ashore, she checked for a pulse. Faint, but there!\n\nUnbelievably, Beri still wore her pack. She barely moved when Dayanna snapped the bolt protruding from her back. Lifting her up and smashing through the underbrush, Dayanna carried her until she found a nook against a tree. Using her knife, she carefully cut away the rest of Beri's leather shirt. Drawing her sword, she used its eldritch light to examine the wound. Dayanna fretted over the seeping blood.\n\n\"Dayanna?\" Beri was so quiet, she almost didn't hear her.\n\n\"I'm here, Sister. I don't know if I should remove it. You're chilled to the bone and you've lost a lot of blood.\" Dayanna sheathed her sword, then pulled off her own shirt, tearing it into strips. \"You'll bleed to death if I don't pull it out. But if I pull it out, it might be worse. You need priest magic. I don't have any more healing until sometime tomorrow. I gave you all I had this morning.\"\n\n\"S'okay,\" Beri mumbled. \"Glad you're here.\"\n\n\"I found you and I'm not going to lose you again! So you better stay alive!\" She dug into Beri's pack, looking for anything. Under all the wet clothing she pulled out a tinderbox.\n\n\"No fire,\" Beri protested. \"Find us.\"\n\n\"If I don't make a fire, you will die for sure. Besides, if the bandages don't stop the bleeding, I'll have to try and cauterize the wound.\"\n\nThere was no response. Beri had passed out. \n\nScouting around, dry wood was collected and in a short time, Dayanna had a small, smokeless fire burning. Gathering up more fallen branches, she added to the blaze. When it burned hot and bright, she moved to work on the wound. There was a chance the fire could be seen across the river, but it couldn't be helped. Beri needed warmth and food to stay alive and they were out of food.\n\nSeeing Beri awake, Dayanna gave her water. \"Beri?\"\n\n\"Yeah?\"\n\n\"I'm going to remove the bolt. I don't want to hurt you, but I must.\"\n\n\"Do it.\"\n\nTugging firmly, the bolt came free. Blood welled out and Dayanna pressed strips of cloth firmly into the wound. When the third bandage was soaked through, knew she would have to cauterize it. Neither one of them had any oil. Taking a deep breath, she heated her dagger in the fire. When it was hot, Dayanna pressed it against the wound. Beri stiffened, gasping. Choking on smoke and the smell of burnt flesh, Dayanna examined the site. Blood still oozed.\n\n\"Sweet Athena,\" Beri whispered, \"that hurts.\"\n\nDayanna threw her arms around her and began to sob.\n\n\"Don't ... cry.\"\n\n\"I can't\u2013I can't stop the bleeding!\"\n\n\"Would've died .. this morning ... if not for you.\"\n\n\"Oh, Beri!\"\n\n\"Hey, 'bout the oracle? Know we're aren't ... supposed to . . talk about it. Don't care. Said I'd die for love. Funny, huh? Dreamt I'd be saving you ... on some great quest. Like in the great stories.\"\n\nDayanna squeezed her tighter.\n\n\"Tell me, Dayanna! Please?.\"\n\n\"O\u2013okay.\" Dayanna rubbed her eyes on her arms. \"She told me I would have to choose between glory and true love.\"\n\n\"That all?\"\n\n\"She said I'd meet a man, and I would know him without knowing him. She\u2013she even told me his name.\"\n\n\"Women always .. giving up dreams ... for men and kids. Dunno. Maybe a quack.\"\n\n\"I don't think the oracle lied to you. You're dying in this blasted wilderness because I asked you to go with me. You came because you love me.\"\n\nBeri smiled faintly. \"'Okay. That's romantic.\"\n\nDayanna suddenly giggled. \"Beri!\"\n\n\"Lot of things .. don't know about me. Promise me?\"\n\n\"Anything.\"\n\n\"Stupid wench! Not everyone loves you ... like I do.\" Beri coughed, and blood flecked her chin. \"Sew a coin in my mouth when I die. Need the \u2013\"\n\n\"\u2013 coin for Charon, the ferryman, so you can pass into Elysium. I know. But I'll get you back to town! I have some jewelry from my parents. Enough to pay the priests to raise you from the dead.\"\n\nBeri shook her head. \"On foot. No food. Orcs'll come, hunting your sorry butt. Hades don't like giving up the dead. 'Sides, He don't like your church.\" She coughed again. \"Heel of left boot has silver penny, needle and thread.\"\n\nDayanna stared, tears streaming down her face.\n\n\"Promise me!\"\n\n\"I promise, Beri. I don't have to like it.\"\n\n\"Kiss me?\"\n\nDayanna lifted Beri up and kissed her long and tenderly. When they broke, Dayanna cradled her.\n\nBeri sighed. \"S'good. You kept talking ... about the chance to die well. We kicked 'em good. You warn Sargossa. Give my death meaning. Have to survive, Sister. Have to.\"\n\nThe amazon grew weaker, closing her eyes. To keep her company as much as to console herself, Dayanna rocked her sister as she sang. Songs to Athena and Artemis she'd learned from Beri, and songs from her grandfather. When Beri gave a last ragged sigh, Dayanna tearfully sang from the Song of Death.\n\nLike the Norse overlords of Sargossa, Ba'lorians burned their dead. Hellenes preferred earthen burial in a shroud. Without the coin, there was no passage across the Styx, condemning the soul to wander among the living as a ghost, knowing neither the hellfire pain of Tartarus nor the heavenly paradise of the Elysian Fields.\n\nDayanna kicked out the fire. Sobbing, in the tradition of her people, she smeared hot ashes over her face, hair, and body. The loss of a sister permitted the willful spilling of her own blood. She knew it was foolish, with the wolf-riders so close, but not doing it for Beri felt wrong, even cowardly. Using Beri's knife, Dayanna cut her palm. As the blood welled, she smeared it over the ash on her own face. In the final mark of grief, she hacked off her long raven braid.\n\nUsing both of their daggers, she dug a shallow grave into the damp earth. Her hands raw and aching, and palm bloody, she pulled Beri's blanket from the pack. Prying off the boot heel, she retrieved the coin, needle and heavy thread. Placing the penny in Beri's mouth, Dayanna sat, steeling herself for the agonizing task remaining. At long last, lips that had argued and yelled and loved were stitched closed.\n\nThe shorn braid and Beri's broadsword were placed in the hands of her dead sister. Dayanna wrapped her in the blanket, then dragged her into the trench. When the dirt mound was raised, exhausted in heart and body, she looked skyward. Birds, greeting the light of dawn, were beginning to chatter overhead.\n\nDayanna wiped her face, and looked skyward. \"Athena, Artemis, and I guess Hecate, too. Great Ladies, I'm not one of yours. I beg you, please, look kindly on my sister, Beryl Silvanos\u2013\"\n\nFar off, the hounds of war bayed. Answering howls, closer, echoed through trees gone silent.\n\n\"I know she wasn't the most pious of women,\" she continued, \"but she was an amazon of brave and true heart, and \u2013 and I love her. Please, don't let them find my sister.\" The last part of her plea was too painful to speak aloud. So the dire wolves can't eat her. Before her soul makes it to Charon.\n\nGrabbing Beri's pack, she dragged a fallen tree into the cold water, and climbed aboard for the long trip downstream to Sargossa.\n\n# # #"
    ],
    "authorname": "TJSkywind",
    "tags": [
        "skyra",
        "magic",
        "fantasy",
        "adventure",
        "amazons",
        "lesbian",
        "sisters"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/house-sorena-ch-02-pt-2"
}