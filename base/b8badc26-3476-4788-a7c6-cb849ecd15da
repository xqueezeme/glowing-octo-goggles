{
    "title": "Runaway Pt. 01",
    "pages": [
        "Author's Note:\n\nThis is a story for the Highway Song event arranged by blackrandl1958. Runaway is a story about Lacey, a small-town girl from northern Manitoba. Part coming-of-age story, part love letter to Canada, part First Time romance, I am so excited to share this work with you, and would love to hear your feedback.\n\nI will warn the reader now that this is a long, novel-length story and while there are some very (in my humble opinion) rewarding erotic scenes, they take some time to get to. I invite you to get to know the characters and enjoy the journey, since the stories for this event are all about travel and adventure. Chapters have been marked throughout the story and it will be posted in four parts.\n\nSpecial thanks to the team of people who beta-read and edited this story: BarryJames1952, Bebop3, blackrandl1958, norafares, OneAuthor, and Steve M. This story would not be possible without them. Any remaining errors\u2014factual, grammatical, or otherwise\u2014are my own.\n\n**\n\n<center>Chapter One</center>\n\nThe first red flag should have been that Roger said he would meet me in Winnipeg.\n\n\"I have an interview the day before, so I'll go down early and you can just meet me there.\"\n\nThe second was the tickets.\n\n\"I'll get the tickets on the way there. You get them on the way back. I'll give you yours when we meet at the station.\"\n\nThe third was that he wouldn't pick up his phone when I tried calling him to say I was on the bus to Winnipeg.\n\nThe fourth and fifth were the text messages he didn't respond to while I was on the bus.\n\nThe sixth was the unanswered phone call when I got to the train station.\n\nThe seventh was a photo message from Kristen of Roger with his friends at the Timmy's, back home.\n\nI hate to be the bearer of bad news\u2014that was a lie, she was probably giddy with glee about it\u2014but they're bragging about tricking you into thinking Roger was going to take you to Montreal.\n\nI tried calling Roger again, but it went to voicemail. Seconds later, another text from Kristen.\n\nDid you just try calling him? They're laughing. I'm so sorry, Lacey.\n\nI didn't respond to her, opting instead to text Roger.\n\nHa, ha. You got me. I bit my lip as I struggled to find the right words. Why?\n\nHe didn't text back right away, and neither did Kristen. When he finally did, my heart settled somewhere in the area of my small intestine.\n\nSrsly? Cant believe u fell for it. Just wanted to fuk u, but ur such a fukn goodie 2 shoes. Sry not sry LOL\n\nIt was accompanied by a picture of him and his friends inside the Timmy's, flipping off the camera. \n\nYou know those movies where some character is sitting on a bench for hours while a blurry montage of people rushing by shows the passage of time? And it's supposed to be all artsy and meaningful and stuff?\n\nI always thought those scenes were so dumb. Who would just sit there for hours on end staring at a wall? I mean, I can certainly sit still and stare mindlessly at things. Any good church-going girl can. Still, I couldn't imagine a single scenario where I would do so simply because of some kind of emotional devastation.\n\nI learned a lot of things about myself that summer. The first was that I was entirely capable of sitting on a bench in a train station, frozen in indecision as I tried not to let the heartbreak show on my face.\n\nA lot of things kept me from moving. Embarrassment. The aforementioned indecisiveness. Betrayal. Take your pick, really. But there I was, the very picture of a trope. The naive small-town girl, backpack loosely clutched to her chest as she perched on the edge of the metal bench, staring at a brick wall as fear and anger and sadness paralyzed her.\n\nThe world passed around me. Screaming children scampered by with their families. Old men held their wives' hands as they escorted them to the platform. College students, people my age, plotted how they would sneak alcohol and weed onto the train.\n\nAnd still I sat.\n\nI could have done the reasonable thing and just bought a bus ticket home, hanging my head in shame as we drove back to that nameless small town. Something inside me wouldn't allow it. The whole thing was my own fault. I had trusted Roger. I had forgiven him. I had turned the other cheek and in doing so, had turned a blind eye to the obvious mistake I was making. \n\nRoger and I grew up in the same nameless small town, the kind that is nothing more than a blip on a map. The kind that are all the same, but all different. Ours was north of Winnipeg, Manitoba, far enough that a trip into the city was more than a day trip but close enough that a bus ran regularly.\n\nIn that little town, Roger Swift was the epitome of a heartthrob. He was a hockey boy, of course, like all desirable males are in any small Canadian town. Tall, with broad shoulders and shaggy blond hair, his nose only a little crooked from an errant puck, he played center for the junior hockey team three towns over. Roger's main claim to fame was that he had nearly been drafted into the NHL.\n\nHe hadn't made the cut, but he came closer than most. He was a real hometown hero, the kind that could do no wrong.\n\nSomewhere, in a perfect universe that really only exists in romantic comedies, Roger and I would have been high school sweethearts. We would have married at 20, and by 22\u2014the age we were that summer\u2014we would have had one or two tiny blessings bouncing on our hips as we hosted social events and hockey tournaments.\n\nThe preacher's daughter and the handsome jock are supposed to end up together. At least, they do in hockey towns where cheerleaders aren't really a thing.\n\nIt only works if the preacher's daughter meets certain expected standards, though. You know, the preacher's daughter you pictured when I said I was a preacher's daughter. Perfectly beautiful, with glowing skin and bouncy curls. Chastely innocent in the eyes of the community, her father, and her Father, but willing to exploit God's Loophole since it would mean she's technically still a virgin.\n\nI was not that kind of preacher's daughter, because my father was not that kind of preacher. When people asked what religion I was, I simply said Christian: there was no point in explaining the way the denomination had split off into branches that formed into sects that became the little church my family was a part of. Like my town, it didn't matter. It was better to be nameless. \n\nI was the kind of preacher's daughter who argued the Loophole was void since sodomy was considered a sin as well. Despite what my father taught in his church, I didn't think sodomy was particularly sinful, nor did I think people were going to Hell for having sex before marriage. It's just that people tend to believe you're \"saving yourself for marriage\" when you start arguing theology with them.\n\nIn addition to that, when you look as plain as I did, no one is really aiming to corrupt the sweet, naive virgin. Sweet, naive virgins are supposed to have rosy cheeks and thick lips that are just a little too sultry, breasts that make those modest blouses pull just a little too much. They're not supposed to be gangly, freckled girls with eyes like a frog and hair straighter than a church pew.\n\nAll of that meant that even with my willingness to push the book a little on the whole \"sex before marriage\" thing, no one was asking me to do so. \n\nDespite my fear of disobeying my father, I had been pushing the book on a lot of things. Growing up, I had been friends with a young girl named Delilah who lived down the street. Delilah's family was religious, but they didn't go to our church. Mom said they were Catholics, which apparently meant they were the wrong type of Christians. \n\nI was fascinated with Delilah and Catholics. She would tell me about their services, which seemed to feature a lot less yelling and condemning than my father's did, and about things like the saints.\n\nMy father thought saints were false idols. I only knew that because one day, after Delilah had taught me about all sorts of saints, I had made the mistake of telling him what I had learned. He forbade me from seeing Delilah again, cursing her family for corrupting my innocent mind with talk of prophets of evil. \n\nI never told him, but I asked Delilah to teach me about the saints at school. My father wouldn't know, I reasoned, and I couldn't understand why her version of church was evil but my version of church wasn't. Delilah happily agreed, bringing books and stories to me each day. I learned the prayer of Saint Francis, that Saint Valentine wasn't just the patron saint of love but also of beekeepers, and memorized trivial details about even the most obscure of saints, like Saint Blaise, whom I prayed to whenever we had to take our cat to the vet. \n\nI just didn't understand why saints were bad. What could be wrong with asking a particularly holy person for their support in asking God for help? My father said no, but I thought God would understand why I wanted to know more about them.\n\nIt was just another way that I wasn't a typical preacher's daughter.\n\nI was not the preacher's daughter that smiled innocently as she stood beside her family at church, but flashed her panties at the boys when her father wasn't looking. No, I was the preacher's daughter who was still living in her childhood bedroom at 22, at least during holidays away from her private all-girls college, the one who unironically wore a golden cross around her neck at all times, didn't wear anything more than lip gloss for makeup, and had never so much as held hands with a boy.\n\nNo, not because I was into girls.\n\nNot that there's anything wrong with that. Jesus loves everyone.\n\nDespite what my father would say, of course. He's... traditional, I suppose would be the kind word for it. One must honour their mother and father, it's in the Bible. \n\nThe Bible doesn't tell you what to do when your father tells his son he's a perverted fag who is doomed for eternity, though, and that if you so much as say Sean's name after he's left home forever, you cause a fight that would be right at home in Revelation. Your father will say it says to stone sinners, but it also says to love each other and that murder is a sin. \n\nIt also doesn't tell you what to do when you start questioning what you've been taught, and what you've been raised with. It doesn't tell you what to do when you find out the other girls at your religious college think your beliefs are fanatical, even for Christians. It doesn't tell you what to do when you're too scared to stand up to your parents. It doesn't tell you what to do when you miss your brother every day.\n\nIt just tells you to honour thy father and thy mother.\n\nI'm getting ahead of myself. I was talking about Roger, who was the catalyst in this whole God-forsaken situation.\n\nThe point is this: the hockey heartthrob does not end up with the preacher's daughter who has average-sized breasts, a turned-up nose, and freckles covering every inch of skin. I was stupid to think, at any point in my life, that Roger Swift had any interest in me. I was stupid to have a huge, dumb, ridiculous crush on a boy who was as mean to me as Roger was.\n\nHe'd been horrible to me as we grew up. More than once, he'd stolen my notebooks or dumped my backpack into a snowbank. More than once, I'd turned the other cheek and forgiven him. More than once, I truly believed him when he said he had changed.\n\nThe most recent time had been a month earlier.\n\nI was home for the summer. Well, home after graduation, so I guess I was home until I figured out what to do next. My friend Kristen was back, too. We had gone to the same elementary, junior high, high school, and college. I suppose we were friends, but it was a friendship of convenience. Aside from living in the same town and having heavily religious families, we weren't all that similar.\n\nStill, we were going to lunch that day. Convenience is a strong motivator.\n\nRoger walked into the Timmy's with Alex McConnell and Curtis Zakowski just after we had finished ordering and were waiting by the sandwich line for our food. Kristen nudged me.\n\n\"Look who it is.\"\n\nThey seemed to be having a similar conversation, Roger nudging Curtis as he tilted his head towards us. Our eyes met across the coffee shop as he glanced back over.\n\nWhatever I had been expecting, it wasn't for his face to light up.\n\n\"Lacey Stephens!\" he exclaimed, bounding over to us. \"Oh, and Kristen, how are you?\"\n\n\"Fine,\" she said coldly.\n\nBefore I knew what was happening, Roger had wrapped his muscled arms around me. As quickly as the hug had started, it ended, and he stepped back with a hand still resting on my arm.\n\n\"Shit, Lacey, look at you. It's been ages. You look great.\"\n\nKristen scoffed, but I was flattered. \"Thanks, Roger. It's good to see you.\"\n\n\"You... wow.\" He shook his head, a lopsided grin spreading across his face. \"You girls having lunch? Mind if me and the boys join ya?\"\n\nKristen minded, but the Bible says to love thy neighbour.\n\nShe had gone home after eating lunch, but I stayed at Timmy's with Roger and his friends for a couple of hours longer.\n\nThe next day, we'd met for lunch again, but without his friends.\n\nIt was the fifth or sixth time that we'd met for lunch when he planted the idea in my head.\n\n\"If you could travel anywhere, where would you go?\"\n\n\"Oh, I couldn't really go anywhere.\"\n\n\"If nothing was standing in your way. Not money or commitments or anything, what would you do?\"\n\nI thought about it for a moment. \"I don't know. I've never been any further than Winnipeg.\"\n\nRoger raised his eyebrows. \"Never?\"\n\nA blush was creeping up my cheeks. \"Nope.\"\n\n\"Never even to, I dunno, like... like Saskatchewan?\"\n\nI shook my head, embarrassed.\n\nRoger studied me, intense blue eyes focused on my face before reaching across the table and putting his hand on top of mine. My heart stuttered at the sudden warmth of his fingers.\n\n\"Let's go on a trip,\" he said. \"You and me.\"\n\n\"You...\"\n\n\"Uh huh.\"\n\n\"...and me?\"\n\nRoger grinned. \"Yeah. Let's go to... I dunno, Montreal.\"\n\nI tried to laugh, but his hand was still resting on mine and it was incredibly distracting. \"How would we even get there?\"\n\n\"We could take the train.\"\n\nWe planned to spend the Canada Day long weekend in Montreal. With all the stops and train switches, it would take about three days to get there, so we planned to leave on the 26th of June. That left me with just a few short weeks to figure out how exactly I was going to tell my parents I was not only travelling out of the province for the first time, but would be travelling with a boy.\n\nAnd that the boy was Roger Swift.\n\nI was not nervous without reason. The last time one of his children had done something he deemed a sin, my father had disowned them.\n\nMy brother Sean was four years older than me, and the person I had looked up to more than anyone else in the world. He was my own personal hero. As kids, I didn't understand why people thought Sean was trouble. I knew he came home from school covered in bruises and scrapes, and I knew the hockey boys didn't like him, but I thought it was because Sean always did the right thing.\n\nHe was forever defending people. When Roger used to steal my backpack and dump my books into snowbanks, Sean would grab him and push him away. When the other boys jumped on him and started kicking him, he'd yell at me to run. As much as I wanted to help him, to make sure he was safe, I was too scared. Every time, I ran.\n\nI didn't know what the words they called my brother meant. When they called him \"fag,\" I didn't understand. When they called him \"queer,\" I thought they meant he was weird.\n\nIt was only when I heard my father shout those words at him that I understood.\n\nHe left home the same day I heard those words leave my father's mouth, and I hadn't seen him since. He was seventeen when he left.\n\n\"Left\" isn't the right word, but no one ever told me if he ran away or if he was forced to go.\n\nI was only thirteen, still young but old enough then to know what \"gay\" was. Young enough that my parents still shaped my thinking. Old enough to question what I was being taught.\n\nNo matter what age I was, I was not brave enough to help my brother when he needed me.\n\nIt was a Sunday like any other, mid-winter and bitterly cold. Our dad was already at the parish, getting ready for the morning service. Mom was making sure Sean and I both looked presentable, then ushering us into the car as quickly as she could. I played the piano for the church choir, so when we arrived, Sean and Mom headed to the pews while I made my way to the front.\n\nIt wasn't a large church. The building was old, made from wood and prayers, and had just enough room at the front for a small choir and an upright piano alongside the altar. There was a single step up to a platform so my father could see over the crowd, and no sound system: it would hardly be needed in a room that small. \n\nFrom where I sat at the piano, I saw everything.\n\nI saw a boy I didn't really know give Sean a hymn book.\n\nI saw Sean grip the book tightly through most of the service.\n\nI watched him tuck it behind another book when he had to get up for communion.\n\nMom returned from communion first. Whether she took his book on purpose or whether she just grabbed one without thinking, I would never know.\n\nSean entered the pew at the same time that she opened the hymn book. She had already started singing, so when she saw whatever she saw in the book, a high-pitched note squeaked sharply from her throat. Sean's face fell, turning as pale as I'd ever seen someone turn, before flushing red from the base of his neck to the tips of his ears.\n\nWhy my father came to check on her, I'll never know either. In my memories, Mom tried to close the book and hide it, but he caught her wrist before she could. I never knew if that was what truly happened, or if she handed the book to my father willingly.\n\nWhat I do know is that his face turned the same shade as Sean's, but his eyes were filled with a rage that I had never thought possible.\n\nWe left the service with Mom immediately after it finished, forgoing our usual receiving line aside my father. She drove recklessly across town, tires skidding along the ice before parking haphazardly on the driveway. Sean's eyes were swollen and red, tears trickling down his face, and no one spoke a word.\n\nHe was home just long enough to throw some necessities in a bag.\n\n\"What's going on?\" I asked desperately, but neither he nor Mom would answer.\n\n\"Sean, what happened? Why are you crying? Mom, why is he packing?\"\n\n\"He's packing because he's a sinner. A perverted fag.\"\n\nI hadn't heard my father come home, and jumped as his voice floated up the stairs.\n\n\"Lacey, go to your room.\"\n\n\"But\u2014\"\n\n\"Go to your room and stay there until I say you can come out.\"\n\nI should have defended my brother. Instead, I cowered in my room as they shouted at each other, hurling disgusting words back and forth. I prayed, begging God for help, begging Him to make the shouting stop. The whole time, I flipped frantically through my Bible, trying to find the part that said Sean couldn't live with us if he was gay. The pages tore as I read, teardrops staining the delicate paper as my father and my brother screamed at each other.\n\nThe house grew suddenly quiet, broken only by the loud slam of a door. I rushed to my window and watched Sean stalk down the snowy street with a backpack on his shoulder. He slipped on a patch of ice and nearly fell before catching himself on a parked car, straightened back up, and disappeared. \n\nMy father didn't say I could come out of my room, so I sat there the rest of the day. I watched out the window, hoping that Sean would come sliding back up the street, but he never did.\n\nWhen Mom finally came to my room, her eyes were rimmed with red. She brought a sandwich on a plate, handing it to me.",
        "\"Why?\" I asked.\n\nShe shook her head. \n\nInstead of defending him, instead of demanding they let him come back, I ate the sandwich, stayed with my parents, and let nearly ten years pass without trying to find my brother. Too scared to rebel, too cowardly to stand up to them, too complacent to change.\n\nThe point is, I had a reason to be nervous. A week before we were set to leave, I finally mustered the courage to tell my parents about it.\n\nIt was Sunday, and that meant my father was tired and Mom was serving roast for dinner. Aside from the sounds of forks scraping against our plates, it was quiet, and it was only when I could barely stand the silence that I finally spoke.\n\n\"Mom? Daddy? I wanted to get your blessing on something.\"\n\nMy father glanced up. \n\n\"Yes, Lacey?\" he said.\n\nI squirmed a bit in my chair, staring down at the plate of beef and peas in front of me. \"Well, I... I wanted to go on a trip.\"\n\n\"To where?\"\n\n\"M-Montreal.\"\n\n\"When?\"\n\n\"For the long weekend.\"\n\n\"With who?\"\n\nI tried to answer quickly, but made the mistake of glancing up at my father. The words stuck in my throat as his eyes pierced through me. Taking a hurried sip of water, I looked back down at my plate.\n\n\"Um... with Roger. Roger Swift.\"\n\nThe scraping of utensils stopped, a deafening silence stretching across the room.\n\n\"Let me make sure I understand this,\" my father finally said. \"You want my blessing to take a trip to Montreal with Roger Swift, a boy who I've had to counsel multiple young women about? \n\n\"Not alone,\" I rushed. \"We'd be taking the train. Th-Then we'd be staying with his grandma. His mother's mom. There's t-two spare rooms. B-But I could stay at a hotel instead if you think that's a better idea.\"\n\nMy father put his fork down, then entwined his fingers as he laid his hands on the table.\n\n\"I'm quite surprised, Lacey.\" His voice was steady, his eyes cold. \"Roger Swift has a... reputation.\"\n\n\"He's changed, Daddy.\" My voice was squeaky, and my fingers unconsciously went to the cross I wore on a gold chain at all times. \"H-He's different now.\"\n\n\"I thought you were smarter than that.\"\n\n\"Dennis!\"\n\nMy mom's shocked exclamation covered my wince. Even my father looked surprised at her interruption. Shaken, she cleared her throat.\n\n\"Lacey has always been a good girl. I trust her to do the right thing, and I believe the Lord would admire her willingness to forgive and see the best in people.\"\n\nI was as shocked as I had ever been when my father gave me permission to go to Montreal with Roger, albeit with a final warning.\n\n\"God is always watching. He will know if you sin, and so will I.\"\n\nHis words echoed in my mind as I sat on the bench, backpack hugged to my chest, as I tried to decide what to do.\n\nGoing home would mean facing my father's judgement. It would mean my mother spoke in my defence for nothing.\n\nI would have to face Kristen's fake pity. And if Roger and his friends were laughing about me at Timmy's, it meant the whole town would know how stupid I had been soon enough. Everyone would laugh about that stupid Lacey Stephens, so gullible she went all the way to Winnipeg, so desperate that she believed Roger Swift actually liked her. \n\nThis time, when everyone made fun of me, Sean wouldn't be there. My protector. My brother.\n\nSean.\n\nThe idea hit me out of nowhere.\n\nI had money saved up from teaching piano lessons and working at the library while at college. A pretty good amount of money, actually. I was already in Winnipeg, already at the train station. What was stopping me from finding Sean?\n\nI had nearly jumped off the bench before considering the fact that I had no idea where Sean was.\n\nHe had never called, never written. If he used social media, he didn't use his real name, because I had never been able to find him. Nothing came up when I Googled him, either. I had nearly given up on the idea when something stirred deep in my memories.\n\nVancouver.\n\n\"The ocean is right there,\" Sean had said, pointing at a map. We must have been so young. Sean couldn't have been more than ten.\n\n\"And then you can go to the mountains, right there. You can go skiing and then to the beach, all in one day!\"\n\n\"You're lying!\" I had giggled.\n\n\"Nope. I'm gonna live there one day, you'll see.\"\n\n\"Can I visit you there?\"\n\n\"Of course. I'll have a big penthouse apartment. You'll have your own room when you come to visit. I'll paint it pink, just for you.\"\n\nThe train went two ways: East to Toronto, or west to Vancouver.\n\nI closed my eyes and said a brief prayer to Saint Christopher, asking his help for a safe journey. I stood up, slung my backpack onto my shoulder, and walked up to the ticket counter.\n\n**\n\nThe dining car was crowded when I entered.\n\nIt was dinner time, so it was naturally busy. After placing my order at the bar, I looked around. There were a few empty seats, but they were all at occupied tables. At the closest one, a stooped old lady was thumbing through a well-worn Bible as she ate. She reminded me of my Nana, a severe old woman with permanent crease lines around her lips from pursing them so often.\n\nA few tables away from her was a rough-looking man. His jean jacket looked like it had seen better days and his dark hair was long and messy. He was the kind of person that would have made my mom clutch her purse just a little more tightly, though something about his serious face was intriguing. There was no food in front of him, but he sipped a cup of coffee.\n\nDirectly across from him was a man even more handsome than Roger Swift was before that puck broke his nose. His chin was covered with a light scruff that only added to his attractiveness, and his blonde hair was neatly trimmed. He was tipping a bottle of beer to his lips when his eyes caught mine, startlingly blue irises drawing me in, even from across the car.\n\nI should have sat with the old lady. That would have been the safe, responsible thing to do.\n\nBut I was feeling rebellious.\n\nNot rebellious enough to sit with the man in the jean jacket, mind you, though it wouldn't have mattered. The moment those blue eyes met mine, my feet started moving towards them.\n\n\"Anyone sitting here?\" I asked.\n\n\"Nope. All yours.\"\n\n\"Thanks.\"\n\nHe grinned at me as I sat down. \"What's a pretty girl like you doing travelling all alone?\"\n\nDespite my best efforts, I giggled. \"Just visiting family.\"\n\n\"First time away from home?\"\n\n\"How could you tell?\"\n\nHe leaned across the table, eyes sparkling wickedly. \"I'm a little bit psychic.\"\n\n\"Oh really? What's my name then?\"\n\nSquinting, he stroked his chin as he looked intently at me. \"I'm getting a sense that it starts with an A...\"\n\nI raised my eyebrow.\n\n\"...or a B... C? D? EFGHIJKL\u2014\"\n\n\"L! You got it!\"\n\n\"I knew it! Your name is... Leanne. Lindsay? Loretta!\"\n\nI was shaking my head as I laughed.\n\n\"Lacey,\" I said. \"Lacey Stephens.\"\n\n\"That was my next guess.\" He extended his hand. \"I'm Brody.\"\n\n\"Nice to meet you.\"\n\nWe talked for a bit. Brody was a personal trainer for part of the year, which explained the chiselled body, and was on the train to Jasper, where he worked as a trail guide during the summer. He had grown up in Ottawa, gone to school in B.C., and seemed far too experienced to be bothering with a girl like me.\n\nI said as much to him, and he laughed.\n\n\"You're sweet,\" he said. \"Let me buy you a drink.\"\n\n\"Oh, I don't\u2014\"\n\n\"I'll be right back.\"\n\nHe was gone before I could even say that I wasn't much of a drinker. Don't get me wrong, I wasn't some teetotaler. Even my father wouldn't have gone so far as to say drinking was a sin. I just didn't drink often, and I didn't drink when I was alone with a man I'd only just met.\n\nAt least, I hadn't up until that point in my life.\n\nReally, though, what was the worst that could happen? Brody was sweet enough, and unreasonably good-looking. There was no reason for him to be interested in a girl like me, and yet, we were having a great conversation. Why shouldn't I have a little fun?\n\nBefore I knew it, Brody was back at the table with another beer for himself and a fancy cocktail glass filled with a light-pink liquid for me. He sat down and slid the cocktail glass across the table to me.\n\n\"I hope you don't mind, but I picked something for you. I think you'll like this. It's sweet and bubbly, just like you.\"\n\nI blushed as I glanced down, taking the glass from him. \"Thanks.\"\n\nIt smelled like lemon and grapefruit, and whatever was bubbly in it splashed lightly against my nose as I lifted it to my lips.\n\n\"Don't drink that.\"\n\nI hadn't noticed that the man in the jean jacket had stood up, and neither had Brody, apparently. He jumped slightly, a splash of beer jumping out of the bottle as he turned towards the other man.\n\nThe glass was nearly resting against my lips, but I froze, looking up at him.\n\n\"Why not?\" I asked.\n\n\"Yeah bro, what the fuck?\"\n\nI cringed at the curse, not used to hearing people swear.\n\nThe man in the jean jacket glared at Brody. \"I saw you put something in it.\"\n\nI nearly spilled the drink as I brought the glass back down to the table, my eyes wide as I processed the accusation. Brody laughed awkwardly.\n\n\"W-what? Are you serious, bro?\"\n\n\"I saw you put a pill in it.\"\n\n\"That's some pretty serious shit you're accusing me of, bro.\"\n\n\"That's some pretty serious shit that you did, bro.\"\n\n\"I didn't do anything! Maybe you need to back off.\"\n\n\"Maybe you need to stop trying to drug girls.\"\n\n\"You tried to drug me?\" I gasped.\n\nBrody whirled towards me. \"I didn't! God damn, this dickhead is just trying to stir shit up.\"\n\nI looked back and forth between the two men, my lips parted. I had no idea who to believe. The man in the jean jacket looked back at me, his dark eyes softening as he saw my confusion.\n\n\"Easy way to settle it,\" he said. He leaned over the table, grabbing the glass in front of me and plunking it in front of Brody. \"You drink it, man.\"\n\n\"No way,\" Brody protested.\n\n\"Why not?\" I asked.\n\nHe stuttered for a moment. \"I don't like grapefruit. And besides, I bought it for her!\"\n\n\"I'll buy you a new one, but you have to drink it first,\" said the man in the jean jacket.\n\nThe two of them stared at each other, Brody glaring defiantly up as the man in the jean jacket towered over him. For a moment, I thought he was going to jump out of the chair and tackle the other man, and I cowered back in my seat.\n\n\"Gentlemen, what seems to be the problem here?\"\n\nI chose the moment that the conductor stepped in to slide out of my seat. It was only then that I realized the rest of the car had gone quiet and were watching the drama unfolding with rapt attention. My hand flew to the gold cross around my neck, stroking the cold metal for comfort as I caught the eye of the old lady with the Bible. Her brows furrowed in silent judgement, and without thinking I scurried from the dining car back to my seat.\n\nWhen I sat down, my hands were trembling and my heart was racing faster than I thought possible. The seats beside and across from me were thankfully empty, and I brought my hands to my face as I tried to keep the tears from spilling out of my eyes.\n\nWhat had I gotten myself into?\n\nBrody had seemed so nice. I hadn't expected him to do something like that at all, and I couldn't understand why. I mean, I knew men tried to make girls... do things that good girls weren't supposed to do, but I didn't know why he would try to drug me. He hadn't even insinuated he would want to see me again, let alone do... that.\n\nWhy hadn't he just asked? I would have said no\u2014well, probably would have said no\u2014but he never even gave me the choice.\n\nI replayed our conversation in my head.\n\nBrody had asked where I was from. I had answered truthfully. Nothing there seemed untoward.\n\nHe had asked me what I did for a living. I said I had just graduated college, but I taught piano lessons to make some extra money.\n\n\"What did you take in college?\"\n\n\"Education. I want to be a teacher.\"\n\n\"Nice! What kind?\"\n\n\"Music, ideally. Oh, and probably religion. And whatever else I can. I just like teaching, really.\"\n\n\"Religion?\"\n\n\"Yeah, my father is a preacher and\u2014\"\n\nThat, right there. That was where I had made a mistake.\n\nHis next question was about boyfriends. I said I didn't have one.\n\nHe asked why not. I said boys didn't like me.\n\nAnd from that, he would have figured out that I wasn't the kind of girl who would do the things he wanted me to do. He would have thought he'd be better off to drug me, drag me to the sleeper car he had oh-so-casually mentioned, and... well.\n\nThere was only one reason why something like this could happen to me. It was a warning.\n\nGod was trying to tell me I had made the wrong decision. He wanted me to know that getting on this train was not what He had wanted me to do.\n\nGod was telling me to go back home.\n\nI touched the cross around my neck and suppressed a sob at the thought. If He wanted me to go home, why did that make me feel so wrong?\n\nThe world passed by outside the window, and I stared at it for a long time. All I could see were wheat fields, broken by the occasional silo or thicket of trees, flat land surrounding us as far as the eye could see. I was so absorbed in my thoughts I didn't realize anyone had approached until he was sitting in the seat across from me.\n\n\"Forgot your meal.\"\n\nThe man in the jean jacket was holding a box, studying me warily with those serious, dark eyes. I tried with everything in me to smile and thank him kindly, but only managed to stop my chin from trembling for a moment as I reached for the box.\n\n\"Thanks.\"\n\nThe box was slightly warm and the scent of food was comforting, but I figured the meal had to have been sitting for a while. Not that it mattered. It was just a plain, boring sandwich for a plain, boring girl.\n\n\"You all right?\"\n\nI shook my head.\n\nThe man looked uncomfortable and I realized he had just been trying to be polite.\n\n\"Sorry,\" I muttered. \"Thank you for bringing it to me. And, well, for stepping in. I didn't...\"\n\n\"It's okay,\" he said hurriedly. \"Just the right thing to do.\"\n\n\"Well, still. Thank you.\"\n\nI expected him to leave right away, but he didn't. Instead, he nodded his head towards the box I was holding.\n\n\"Eat. You might not feel like it, but you should.\"\n\nI didn't really feel like it, but he was right. The box held a turkey sandwich cut diagonally, wrapped neatly in a piece of wax paper. I looked back at the man, then held the box towards him.\n\n\"Split it with me?\"\n\nThe corners of his eyes crinkled, a tight smile on his lips. He held my gaze as he took half the sandwich. \"Promise I didn't fuck with it.\"\n\n\"Yeah, well... so did the last guy.\"\n\nThe chances of him putting something in my sandwich were slim, but I still waited until he took a bite before digging in. We ate quietly, the sound of the train moving along the tracks the only noise for a while.\n\n\"I'm Noah,\" he said when he finished eating.\n\n\"Lacey.\"\n\n\"Nice to meet you. Sorry it was like that.\"\n\n\"Yeah. I... I feel really stupid.\"\n\nNoah shook his head. \"That guy was a douche. They're kicking him off in Saskatoon. He's sitting up with Security right now.\"\n\n\"He really put something in the drink?\"\n\nHe nodded. \"There's a camera in the car. Doesn't catch him doing it explicitly, but he's kind of an idiot. Conductor's probably gonna come find you in a bit, make sure you're okay. They were wanting to detain him first.\"\n\n\"Does this kind of thing happen often?\"\n\n\"Not on the train.\"\n\nI frowned. \"Does it happen in other places?\"\n\nNoah looked at me warily. \"Well, yeah. Like in bars and stuff.\"\n\n\"Oh.\"\n\n\"You've never heard of it?\"\n\nI shook my head. \"I've never been to a bar before.\"\n\nHe laughed, though not unkindly. \"Jesus, girl. Where're you even from?\"\n\n\"A small town. Really small, I guess. I didn't know how scary it could be away from home.\"\n\n\"What're you doing away from home by yourself?\"\n\nI didn't answer, just glanced back out the window.\n\n\"That was smart.\"\n\n\"What was?\"\n\nNoah's smile was reserved, his lips tight. \"Not answering. You gotta be careful, Miss Lacey. You can't just blindly trust people like you did with that asshole in the dining car.\"\n\n\"So why should I trust you?\"\n\nHis laugh sounded like a dry bark. \"Good, you're learning.\"\n\nWe fell silent, and I studied Noah's face as he gazed out the window. My first impression of him had been that he was kind of scruffy-looking. I had been wrong. While his clothing was threadbare and had seen better days, they were clean, and the messiness of his hair was really only because it needed a trim. It was shiny, almost black, and the ends grazed the collar of his jacket. He was younger than I had initially thought, maybe a couple of years older than me.\n\nHe gave off the air of someone who had to work twice as hard to earn half as much as anyone else. I didn't think Noah's life had been particularly easy, and though my instincts so far had proven to be completely flawed, I felt like he was a good person. I had been wrong to blindly trust Brody, but I didn't think I was wrong to trust Noah, at least a little. I offered a silent prayer of thanks that Noah had been in that dining car, and that he had come to find me after.\n\nIt was while I was offering my silent prayer that I wondered if I had misread God's sign. Maybe He wasn't telling me to go back home. Maybe He was telling me I should have sat with Noah, and that my lesson was to stop judging books by their covers.\n\n\"Something on my face?\"\n\nI jumped, flushing as I realized I had been staring at him. \"Sorry. I was just... thinking.\"\n\n\"Must've been a pretty deep thought.\" Noah smirked again, tight and reserved, but the sparkle in his eyes was kind.\n\n\"How long until we get to Saskatoon?\"\n\n\"Couple hours. Is that where you're headed?\"\n\nI shook my head.\n\n\"Where are you headed, then?\"\n\n\"Should I really not trust you, like you said?\"\n\nNoah looked serious again. \"You got no reason to trust me, but I promise I'm not gonna hurt you or anything.\"\n\nI disagreed about having no reason to trust him. Noah had protected me in the dining car, and that had to be worth at least a bit of trust.\n\n\"I left home to find my brother,\" I said. \"He left home a long time ago. My parents... well, they thought he was... he just...\"\n\n\"They kicked him out?\"\n\n\"I don't know.\" I fidgeted with the wrapper that had been around the sandwich, tearing little strips into it. \"He's gay. They thought that made him bad. It was almost ten years ago that he left.\"\n\n\"Where does he live?\"\n\n\"Somewhere in Vancouver.\"\n\nNoah studied me, frowning. \"That's all you've got to go on?\"\n\nI bit my lip. \"Well, I don't know for sure that he's in Vancouver. I just think that's where he went.\"\n\n\"You think...\" He trailed off, his jaw hanging open. \"You jumped on a train to Vancouver on the off chance your brother that you haven't seen for ten years might be there?\"\n\n\"Well, when you put it that way...\"\n\nNoah laughed again, shaking his head. \"Did you ever think of trying to call him first?\"\n\n\"I don't know his number.\"\n\n\"Facebook?\"\n\n\"Couldn't find him.\"\n\n\"Do you have literally anything to go off of? What makes you think he's in Vancouver?\"\n\nHe looked incredulous as I explained my reasoning.\n\n\"Damn, Lacey.\" Noah shook his head. \"Look, I hate to... I dunno, burst your bubble. But there's like two million people who live in the Vancouver area.\"\n\n\"Well, I know there's a lot, but I thought maybe someone might know him.\"\n\n\"A lot? Lacey, I'm not exaggerating. There's at least two million people who live there.\"\n\nI bit my lip again. \"It's all I have to go off of.\"\n\n\"Maybe you should head back home,\" Noah suggested. \"Regroup, try to get some info from your parents.\"\n\n\"I can't.\"\n\n\"What about other family? Or friends? Someone must know\u2014\"",
        "\"No,\" I interrupted. \"I can't go home.\"\n\nNoah stared at me. \"Did they kick you out too?\"\n\nI fixed my eyes firmly to my shoes. \"I don't want to talk about it.\"\n\nThe conductor picked that moment to interrupt us.\n\n\"...and I truly can't apologize enough, Miss Stephens,\" he finished after rambling on.\n\n\"Thank you,\" I said quietly.\n\n\"Is there anything we can do to make your trip more comfortable or secure? Perhaps an upgrade? We can put you in one of the sleeper cabins. All cars have full security, of course, but if a room would help...\"\n\n\"Oh, no, I don't need that,\" I said.\n\nNoah coughed. \"You sure, Lacey? Nothing wrong with getting an upgrade. Maybe one for the trip back, too.\"\n\n\"Of course, Miss Stephens, we would be more than happy\u2014\"\n\n\"Really, it's all right.\"\n\nThe astonishment on Noah's face was almost comical, a reddish hue spreading across his cheeks as I turned down the sleeper car.\n\n\"Well, if you insist,\" said the conductor. \"Tell you what, I'll make a note on your customer profile. If you change your mind, you just need to tell any employee and we'll get you in a sleeper cabin.\"\n\nNoah stared at the conductor after he walked away, then turned back to me. \"Are you crazy? You gave up a sleeper cabin!\"\n\n\"I didn't pay for it.\"\n\n\"It's not like it'd be stealing! They're offering you a nice service to help make up for that douchebag's behaviour.\"\n\n\"It's not their fault. And I'm okay, thanks to you.\"\n\nNoah shook his head slowly as he stared at me. \"You really haven't ever left that small town of yours, have you?\"\n\n\"Not really. Why?\"\n\nHe sighed. \"Fuck. I was gonna get off in Edmonton, maybe head up north.\"\n\n\"Was?\"\n\n\"Guess I'm going to Vancouver now.\"\n\n\"What? Why?\"\n\nNoah shook his head. \"'Cause if I don't, you're gonna get yourself in trouble. Then I'm gonna have to hear some sad news story about a pretty small-town girl named Lacey Stephens who ended up dead in a ditch somewhere.\"\n\n**\n\n<center>Chapter Two</center>\n\nThe stop in Saskatoon was relatively uneventful. I watched from my window as Brody was escorted off the train. His face was sullen and haughty, and when he glanced back at the train I ducked below the window, hoping he hadn't seen me. \n\nThe weightlessness of relief settled on my shoulders, and I said a brief prayer, thanking God as I relaxed. I didn't leave the train, opting instead to huddle in my seat across from Noah. It was only after the train left and I started to get tired that I regretted passing up the sleeper cabin. \n\nThe train seats weren't uncomfortable to sit in, but sleeping was another matter. I had never tried to sleep sitting in a chair before and couldn't seem to tilt the seat back far enough to get comfortable. After giving up on that, I tried lying across the seat next to me, then realized that I didn't have a pillow. I wrapped my sweater around my backpack and rested against that, only to find myself staring across at Noah. He was dozing in his seat, arms folded in front of him and head leaning against the window, seemingly oblivious to the sound of the train clacking along the tracks. \n\nI didn't feel right about accepting an upgrade for something that wasn't the train company's fault, but I did resolve to buy myself a pillow and blanket during the stop in Edmonton. We would be in the city for a few hours in the morning, and according to my phone, there were shops nearby to wander while we were there. \n\nDuring my fight for comfort, I prayed quietly. I asked God for strength, thanked Him for sending Noah to help me, and told Him how afraid I was. I asked Him to help me find Sean, to watch over me, and with a surge of stomach-turning guilt, to forgive me. I thought it was more likely that God would forgive me than my father, but I asked Him to help my parents forgive me, too.\n\nAfter praying, I watched Noah sleep for a while. He looked even younger in his sleep, though his face still held tension that creased his forehead. He had moved his bag to the seat across from mine earlier in the night, despite my protests that he shouldn't change his travel plans just because I was an idiot. \n\n\"They weren't plans, exactly,\" he had said. \"It's no big deal.\" \n\nWe hadn't talked much for the rest of the night. Noah had taken out a ragged-looking paperback and began reading, while I pulled out my e-Reader to do the same. After the stop in Saskatoon, I had gone to the train's washroom to brush my teeth and wash my face. When I'd returned, Noah was already asleep. \n\nI had checked my phone a few times, but after the last awful message from Roger, there was nothing. Either word hadn't made it back to my parents yet, or they were waiting for me to crawl home with my tail between my legs. I imagined they knew. Kristen wouldn't have been able to contain herself and probably went straight to my parents' house after seeing Roger at the Timmy's. \n\nI wondered what would happen when I didn't come back home right away.\n\nI wondered if I'd still have a home to go to once I told them what I was doing.\n\nThat was the thought bouncing around my mind as I finally began to fall asleep. The train car had darkened, just lit from the emergency lighting that lined the aisles. Aside from the loud rumbling of the train on the tracks, it was quiet, and no one had walked down the aisle past my seat for some time. I was warm, but not overly so, and had finally managed to tuck myself against the seats in such a way that I was reasonably comfortable. My eyes were closed, my breathing steady, and I could feel my body sinking into that blissful place of unconsciousness. \n\nSo of course, that was the moment the train blasted its horn.\n\nMy eyes flew back open and I let out an involuntarily whine. As my eyes re-adjusted to the dim lighting, I caught a flash of light reflecting in the dark eyes across from me. Uncertain if it was the horn or the noise I'd made that had woken Noah, I apologized. \n\n\"Part of the joys of train travel,\" he said. \n\nWith a sigh, I sat back up. \n\n\"How do you sleep through it?\"\n\n\"Practice. Or sleeping pills. Or you take the sleeper cabin upgrade they offer you.\" \n\nMy cheeks flamed slightly. He was right, of course.\n\n\"I would feel guilty taking an upgrade.\"\n\n\"Why?\"\n\n\"It was my own fault. I got myself into that situation.\" \n\nNoah's face softened and he shook his head. \"Don't say that.\"\n\n\"I did, though. It was my\u2014\"\n\n\"No, it wasn't.\" He moved out of his seat and folded his tall body into the one next to me, speaking more quietly than he had before. \"Look, you might have a little too much blind faith to be running around on your own. That doesn't make what happened your fault.\"\n\n\"He could have... done things to me. And I didn't do anything to protect myself.\" \n\nNoah shifted slightly. His thigh pressed against my knee, a strangely comforting warmth as he looked at me.\n\n\"Not saying you shouldn't be careful. People are bastards and a lot of them are willing to hurt you. Doesn't make it your fault when something like that happens.\"\n\nHis face was serious, eyes wise beyond what they should have been for a man his age. Though he had just told me I needed to be careful, I struggled not to find comfort in Noah's closeness. With a concentrated effort, I tore my eyes away from his and looked down at my hands. \n\n\"Thanks,\" I whispered. \n\n\"You think the best of people. Not a bad thing, just sometimes people aren't the best, you know? Don't let that son of a bitch get in your head.\" I winced at his language, which he noticed. \"What's wrong?\" \n\nI couldn't stop the heat from rising in my cheeks. \"It's stupid. You'll laugh at me.\"\n\n\"Probably. Tell me anyway.\" \n\nI smiled shyly. \"I'm not used to hearing people swear. It's jarring.\" \n\nAs promised, he laughed, but it didn't make me feel stupid. In fact, I chuckled a bit, too. \n\n\"Damn. I didn't even think people like you existed anymore.\" He grinned, not the usual tight-lipped smile I had seen, and his dark eyes glinted. \"I'll try to tone down the language. I don't want to offend your delicate sensibilities, Miss Lacey.\"\n\n\"You don't have to,\" I said softly. \"It doesn't offend me. It's just different.\"\n\n\"We come from some pretty different places, I guess.\"\n\nIt was then that I realized I didn't really know anything about Noah, aside from the fact that he was far more streetwise than I was. \n\n\"Where do you come from?\" I asked. \n\n\"Here.\"\n\n\"The train?\"\n\nHe laughed. \"Nah. Just Canada. Here and there, you know.\" \n\nI tried not to show my disappointment in his evasive response. \n\n\"Will you tell me a bit about you? I don't even know your last name.\" \n\nNoah considered me for a moment, his expression serious again. I wondered if he was deciding whether to trust me. He must have thought he could, because he finally answered. \n\n\"It's Reiman. Noah Reiman. And I wasn't trying to be cute. I've drifted for a while now. Guess I could say I grew up in the Kootenays in B.C. Left when I was 16, haven't really settled anywhere permanently since.\" \n\n\"Why?\"\n\nThat tight-lipped smirk appeared again, along with a short pause. \"Haven't found home yet.\" \n\n\"Do you ever go back to visit your family?\" My words made Noah tense, and I grimaced. \"Sorry. I didn't mean to get too personal.\" \n\n\"Nah, it's all right.\" He took a breath. \"Don't have much family. Dad died when I was a kid. Mom's in jail.\"\n\nI didn't know what to say. \"I'm sorry.\" \n\n\"All good. Shit happens.\" \n\nI didn't press for more details and he didn't offer them. \n\n\"What about you, Miss Lacey? I got bits and pieces of your tragic past. You're trying to find your brother, you got some drama with your parents, you're too kind for your own good. What else is there to know about you?\" \n\nI smiled and shook my head. \"That about sums it up. My father's a preacher. I live at home. I went to college.\"\n\n\"What'dja do there?\" \n\n\"Education.\"\n\n\"I might look stupid, but I figured that much out.\"\n\n\"No!\" I laughed again. \"I meant Education, like to become a teacher.\" \n\nAnother of those rare, true smiles flashed across Noah's lips. \"You'd be a good teacher. I can tell.\"\n\n\"How so?\"\n\n\"You'd be nice. Genuinely nice. Not one of those bitch teachers who yells at all the kids and shit. They'd give you a hard time sometimes, you know. Kids can be dicks. But anyone fucks with you and those kids would defend you to the death.\" \n\nHe seemed to have forgotten that he intended to tone down his language, but I found I didn't mind. In truth, there was a warm delight spreading through my chest, and I was fairly certain it was the nicest compliment I had ever received. \n\n\"Did you have a teacher like that?\" \n\nNoah shrugged. \"Had a couple good teachers. Most weren't. But I remember Mrs. Charpentier pretty good. She was sweet, saw the best in everyone, kinda like you. Thought I'd make something of myself. Might've been right, but she got real sick and left the school. Then my mom got arrested. Didn't really have anyone seeing anything in me after that.\" \n\nHe spoke matter-of-factly, but there was sorrow beneath his words. My instinct that Noah's life hadn't been easy was right, but it wasn't something I wanted to be right about. \n\n\"That was when you were sixteen?\" I asked.\n\n\"Fifteen, really. Stayed in a group home for a few months before I took off.\"\n\nAt fifteen, I had been on the honour-roll at school and one of the youth leaders with the church. I had already started teaching piano lessons and had managed to save up enough to go with Kristen and a few other friends to a Youth of the Church conference in Winnipeg that summer. \n\n\"How long ago was that?\"\n\n\"You asking how old I am, Miss Lacey? That's not considered a rude question?\" \n\n\"Oh, I didn't mean...\"\n\nNoah bumped my arm lightly. \"Teasing you. Was about ten years ago.\" \n\nHe was about the same age as Sean, then, and was about the same age when he experienced tragedy, too. Maybe that age was terrible for all boys. \n\n\"What about you?\"\n\n\"What about me?\"\n\n\"I know you're not supposed to ask a lady her age, but...\"\n\n\"Bold of you to assume I'm a lady,\" I responded.\n\nNoah laughed, a genuine bark of surprise. \"You seem pretty lady-like to me, but I could be wrong.\" \n\nHis laughter made that warm feeling in my chest spread. I liked hearing him laugh as much as I liked talking to him. \n\n\"Being called a lady makes me sound like I have my life together. I don't.\"\n\n\"You're what, twenty-one?\"\n\n\"Twenty-two.\" \n\n\"Not supposed to have your life together yet. Enjoy it while you can.\" \n\nWe talked a while longer, whispering back and forth, making jokes. Noah had warned me not to trust easily, but he certainly made it difficult to practice. \n\nAt some point during the evening, we fell asleep. I didn't remember making the decision to do so or hearing Noah say he was tired, but when the train pulled into Edmonton the next morning my head was resting against his shoulder.\n\nI woke up slowly at first, blinking at the sudden bustle of people around us. As my mind began to work, I realized Noah's hand was resting against my thigh. It was most certainly unintentional, and even then, wasn't inappropriately high, but the feel of his palm resting against my jeans was intimate in a way I had never experienced. It wasn't unwelcome, though. I had obviously been comfortable enough to fall asleep resting my head against him... and my legs... and, well, as I woke even more, I realized I was pressed quite snugly against him in the seat. \n\nMy face burned and I tried to shift away casually. Whether my movement woke him up or if he had been jostled by someone moving down the aisle, I didn't know. His hand left my thigh casually, a fluid movement, and neither of us addressed how closely we had slept during the night. \n\n\"Morning,\" Noah said, his voice raspy. \n\n\"Good morning.\"\n\nI extended my legs, wincing as my muscles protested. Every part of me was stiff and a knot was pinching somewhere deep in my left shoulder. \n\n\"Must be in Edmonton?\"\n\nI nodded, rubbing a spot on my face where I could feel a line that had been pressed into my skin from the denim of his jacket.\n\n\"Got a few hours here, then. You said you wanted to stop by a couple stores?\"\n\nNoah didn't seem nearly as sore as I did, only yawning as he stood and ran a hand through his thick, dark hair. He worked his fingers through a tangle near his chin as he looked at me. \n\n\"Are you sure you want to keep going to Vancouver?\" I fiddled nervously with the gold cross around my neck, pretending I was untangling it. \"I know you said you were getting off here.\" \n\n\"Told you, gotta make sure you get there okay.\"\n\n\"It's really sweet of you.\"\n\nHe waved a hand at me. \"Don't feel too flattered. Wouldn't be able to live with myself if I heard something bad happened to you.\" \n\nI smiled as Noah collected his bag. He could pretend it was self-serving all he wanted, but it was still a kind act. \n\nThere was a Tim Horton's right in the train station, and I beelined for it as soon as we stepped off the train. Noah followed behind me, catching up as I joined the line.\n\n\"Desperate for coffee?\" he asked.\n\nMy stomach rumbled. \"And breakfast.\" \n\nHe smiled tightly and nodded. When we got to the till, I ordered an extra-large French Vanilla cappuccino, a breakfast sandwich, and two extra hash browns. Noah stepped out of the line and I looked at him, curious.\n\n\"What do you want?\" I asked.\n\n\"Oh, I'm good.\"\n\n\"Seriously, Noah. My treat.\" \n\n\"It's fine.\" \n\nI raised my eyebrows at him. \"Order something or I'll pick for you.\" \n\nHe looked uncomfortable, but turned to the cashier. \"Just a small coffee, then. Black, please.\" \n\nI had no idea why he was being so resistant and it was starting to frustrate me. Frowning, I folded my arms. \"Get something to eat, please.\"\n\n\"Lacey, just drop it.\" \n\n\"Add an everything bagel,\" I said to the cashier. \"With herb-and-garlic cream cheese, please.\" \n\nAfter paying, we stepped to the side to wait for our orders. \n\n\"What was that all about?\" I asked pointedly, keeping my voice low. \n\nNoah glared at me. \"I don't need your charity, you know.\" \n\nMy mouth dropped open, my frustration disappearing as it was replaced by the crushing realization that I had offended him. \n\n\"I didn't mean\u2014\"\n\n\"Yeah, whatever. Just drop it.\"\n\n\"No!\" I folded my arms, scowling. \"I'm trying to apologize.\"\n\nNoah's jaw was clenched and he glanced around, eyes darting suspiciously as he looked at the people surrounding us.\n\n\"Look, I get money's probably no big deal to you,\" he hissed. \"You don't need to buy me shit. I'm capable of supporting myself.\"\n\n\"I wasn't implying that you couldn't,\" I whispered back. \"I'm sorry, okay? I didn't think of it that way. I was trying to buy you breakfast as a thank you for saving my ass, giving up your plans, and being an all-around decent person to me since I'm way over my head here. It's the least I can do, Noah. It's not about charity.\" \n\nHe glared at me a moment longer before his expression changed to one of confusion. \n\n\"Did you just say 'ass?'\" \n\nMy hand flew to my mouth before I could stop it and Noah burst out laughing. \n\n\"I have an extra-large French vanilla, small coffee, breakfast sandwich, and bagel?\" called the worker behind the counter.\n\nNoah grabbed the bag before I managed to react, balancing his coffee on top of mine. He was still chuckling when we sat down at a small table nearby.\n\n\"Does this mean you forgive me?\" I asked.\n\n\"Ah, can't stay mad at you.\" He dug into the bag, sliding my breakfast sandwich across the table. \"Taking one of your hash browns, though.\" \n\nAfter eating, we made our way out of the station to a small mall nearby. I had heard that Edmonton had the biggest mall in the world, but we didn't seem to be near it. There was a London Drugs in the mall, and I was able to find a neck pillow and travel blanket, as well as a few other miscellaneous items I thought I might need since the length of my trip and destination had changed. \n\nNoah didn't get anything, and I didn't ask if he wanted anything. We hadn't talked about how different our economic situations were, and I had no intention of offending him further. I did pick up a few snacks and things I could keep in my bag, hoping he'd be okay if I offered to share something with him while we were on the train. \n\nI was paying for my purchase when my phone started ringing. Without even pulling it from my pocket, I knew who it was. \n\n\"Cash or card?\" asked the cashier.\n\nMy throat had gone dry and I held up my debit card, paying quickly as I tried to pull my phone out. The call went to voicemail before I could answer it, but before she had even handed me the receipt, it was ringing again.\n\n\"Sorry,\" I said to her. \"Thank you.\" \n\nI grabbed my bag and flew past Noah, who was waiting near the exit. As soon as I was out of the store, I answered the phone.\n\n\"Hi, Daddy.\" \n\n\"Barbara, she answered. Lacey, I'm putting you on speakerphone.\"\n\nHe fumbled with the phone for a moment, then the strange echo-y sound of his voice returned. \"Lacey, there had better be a damn good reason for you to\u2014\"\n\n\"Lacey, sweetie, where are you? Are you in Winnipeg?\"\n\nMy mom never interrupted my father. It was that more than anything else that tore at my heart, and I nearly burst into tears. \n\n\"Mom, I'm okay, I'm fine\u2014\"\n\n\"Where are you?\" my father said coldly.\n\n\"Sweetie, Kristen came over this morning and said she hadn't heard from you since yesterday, and we thought we saw Roger Swift in town earlier\u2014\"\n\n\"Did you lie to us about who you were going with?\"\n\n\"No, Daddy,\" I said. \"D-Did Kristen not say what happened?\" \n\n\"Did you do something with that boy, Lacey?\" \n\n\"Oh Lord, sweetie, did he touch you?\" \n\n\"No, Daddy. Mom, he didn't do anything. He didn't go to Winnipeg\u2014\"\n\n\"We'll come get you,\" Mom said firmly. \"Where did you stay? Are you at the train station? I'll get the car, we can be there in a few hours\u2014\"",
        "\"No, I'm not... I'm not at the train station. I d-decided to... I wanted...\"\n\nI was getting flustered, my face turning red. Noah came up beside me, looking alarmed, and touched my arm. My eyes must have looked wild, completely unhinged. \n\n\"Are you okay?\" he asked.\n\n\"Who was that?\" my father demanded. \"Lacey, who are you with?\"\n\n\"N-Nothing, Daddy. I'm not\u2014\"\n\n\"Sweetie, just tell me where you are, I'll come\u2014\"\n\n\"Barbara, shut up.\" My father's voice was growing colder, louder, and more terrifying than I had ever heard. \"I swear, Lacey Marie Stephens, if you are lying to me, there will be Hell to pay when you get home. Now, where are you and who was that man?\" \n\nI swallowed hard. My entire body seemed to tremble, my heart pounding. My father was two provinces away and yet I felt as though his eyes were on me, boring deep within my soul as he demanded answers. \n\n\"Roger never came to the train station,\" I began. \"H-He was... it was a joke. I was... embarrassed. I didn't w-want to see anyone for a while.\"\n\n\"Where are you?\" my father demanded.\n\n\"I took the train anyway.\" My throat felt like it was closing.\n\n\"Lacey, where in the Hell are you, and who was that with you?\"\n\n\"Don't tell him,\" whispered Noah, and I realized my father was speaking so loudly that Noah could hear him from where he stood. \n\n\"I'll b-be back soon,\" I choked.\n\n\"Goddamnit, Lacey, it is a downright sin to lie to me! God will condemn you for daring to try to deceive me. Are you ready to burn in Hell for eternity? Or will you tell me where you are?\"\n\n\"I can't.\"\n\n\"You will burn, Lacey Marie. You will be Satan's whore, you will be condemned to an afterlife of pain, unless you\u2014\"\n\n\"I'm sorry,\" I whispered.\n\nHe was still yelling when I hung up the phone. The moment his voice was cut off, I burst into tears.\n\nNoah's arms were around me in an instant. I buried my face against his chest, the denim of his jacket rough against my cheek as I cried. My entire body shook, but Noah held on tightly as I gasped for breath.\n\n\"I'm sorry,\" I mumbled when I finally regained the slightest bit of composure. \"You must think... I can't even imagine what you must think.\"\n\n\"I think your dad's a dick,\" he said bluntly.\n\n\"It's stupid,\" I sniffled. \"I said I couldn't go home, but I chose to leave. You must think\u2014\"\n\n\"You don't know what I think, so why don't I tell you?\" he interrupted. \n\nI sniffed again and nodded. Noah's voice softened, comfortingly warm as he spoke.\n\n\"Some guy was an ass to you, and that was the last straw in a long line of bullshit. You don't want to go home and deal with that shitstain who just screamed horrible things at you.\"\n\n\"Yeah, but it's not like... it's not like you, I'm not\u2014\"\n\n\"Don't compare yourself to me. Just because the hand you were dealt is different than the one I was dealt doesn't mean it's not a shitty situation. No one should talk to you like he just did. That isn't okay, Lacey. That's not right.\" \n\nIt was a real struggle not to start sobbing again. I took a deep breath, wiping my cheeks as I sniffled. \n\n\"You're not judging me for running away?\" I asked.\n\n\"Not running away. You're running to something better. Can't judge you for that, I'm doing the same.\" \n\nHe guided me to a bench outside the store and went back in. When he came back a few minutes later, he had a bottle of water and some tissues. My chin trembled as I wiped my face and sipped the water, but soon enough Noah was leading me back to the train station. \n\n\"Let's go find your brother,\" he said, and we stepped back onto the train.\n\n**\n\nMy phone rang four or five more times before my father gave up, and I tucked it away in my bag. We spent the rest of the day en-route to Jasper. The nice thing about passing Edmonton was that the landscape changed. Up to that point, the world was shades of dusky gold and vibrant yellow, wheat and canola, until it met pure blue skies as far as the eye could see. It was immense and beautiful, a lonely land stretching far past where the eye could see until it met that thin line in the distance that connected the ground to the heavens.\n\nThe fields extended past Edmonton for a while, but soon things changed to green. One moment we were surrounded by farms; around the next corner, trees shadowed the train tracks and leggy pines danced as the engine stirred up the air around them. We darted in and out of forests until mountains began rising around us. The world went from green to grey to green again, the colours deeper, the air richer. I was humbled by the sheer enormity of the rugged Rocky Mountains that pierced the sky.\n\nNoah laughed at my face as I turned away from the card game we had been playing, my eyes huge as I plastered myself against the train window.\n\n\"That means I win,\" he said, collecting the cards off the table.\n\n\"Sure,\" I mumbled distractedly. My cheek was pressed against the cool glass as I strained to see more than the window would show me.\n\nNoah tapped the deck of cards against the table. \"Think you can tear your eyes away for two minutes?\"\n\nHe led me away from our seats and towards the back of the car. We stepped through the partition onto the next one, and again to the next, until we were in a carriage I hadn't entered before.\n\nThere were seats there as well, but the main difference between that car and the one we were sitting in was the set of stairs in the middle.\n\n\"This place has an upstairs?\"\n\nTo his credit, Noah didn't laugh at me. He chuckled, sure, but it didn't make me feel bad the way it would have if it was anyone else. When Noah laughed, it wasn't at my expense.\n\n\"Sort of,\" he said, and started up the stairs.\n\nI crashed into his back when we got to the top and nearly fell back down the steps, but he turned and caught me just in time. Had I been less distracted, I probably would have gone red, stuttered in embarrassment, and spent the rest of the day thinking about how his hand had nearly grazed my breast as he grabbed my arm.\n\nI didn't notice any of that at the time. Instead, I was speechless as the train car gave way to the mountains. Windows surrounded us, heavy glass that gave a panoramic view of the surrounding mountains.\n\nMy heart swelled and I nearly cried. The beauty was like nothing I had ever seen. Stone jutted out around us, reaching and reaching far past the heights any man could build himself, tips of white snow meeting the clouds that dotted the cool blue sky above us. There were trees everywhere, thick and dense forests that beckoned me to explore them, to see what treasures were hidden around the trunks of trees older than any person I knew.\n\nNoah let go of me and I stepped down the aisle, eyes wide. When I reached the end of the car, I stood still and silent, letting my eyes take in the creation around me. I touched the cross around my neck without thinking. In no church had I ever felt so humbled. No Psalm had left me feeling the glory I did in that moment, and no sermon could possibly compete with the whispers of God that flowed through the world He created.\n\nThis is what God is, I thought. My mind was clear, the words strong and steady in my head. He was not what my father said He was. He was not going to condemn me, or my brother, or Noah or anyone. He was not a set of rules in a book written thousands of years earlier.\n\nGod was love. He didn't care who people loved, as long as they loved. He didn't want us to suffer. How could any being that created such beauty want people to burn in Hell simply for existing as He created them? He created beauty, and He had nudged me onto this train in His mysterious way so I could realize that. He had sent me to Noah so I could learn.\n\nI had never felt so certain of anything. I had never been so sure that what I knew was wrong, and never felt so comforted in finding out the truth.\n\nNoah came up behind me. \"You all right?\"\n\nI snapped out of my reverie. My fingers fluttered from the cross around my neck to my cheek. I was relieved that I didn't find tears there, though I had never felt so emotional.\n\n\"It's just... overwhelming.\" There was no way to explain what I had truly felt.\n\nThe corners of Noah's mouth turned up, a soft expression in his dark eyes. \"It's pretty cool. Never seen mountains before?\"\n\n\"I've never left Manitoba before. What they call mountains there aren't really... I mean, they're just very large hills, I guess.\"\n\nNoah knew a lot about mountains. It made sense. His childhood was spent in the Kootenays, not so far from where we would be stopping in Jasper. We settled in two of the seats, the dome of windows around us as he pointed out at the ranges and named them, telling me things I had never known about the world.\n\nWe stayed there until the train pulled into Jasper. The town itself was small, not even as big as the small town I'd grown up in, but we took the chance to walk around for a few hours while we could. After I took pictures of almost everything, prompting Noah to shake his head at my touristy ways, we stopped at a small bakery for a snack.\n\n\"Should figure out what we're going to do when we get to Vancouver,\" he said, picking at a bear claw I had insisted he split with me.\n\n\"There's still lots of time,\" I replied nonchalantly.\n\nNoah raised an eyebrow. \"Well, I mean... we'll be there tomorrow.\"\n\n\"What?\"\n\n\"About 24 hours from now. It's only about two days from Winnipeg to Vancouver.\"\n\nI stared at Noah as the realization hit me.\n\n\"It's only been a day since I met you?\"\n\nThree people turned to look at us as Noah doubled over. I blushed, but ended up giggling along with him.\n\n\"That was a stupid thing to say.\"\n\nNoah shook his head, wiping his face as he regained his breath. \"Nah. Time seems different when you're on the train. And you've had a lot of shit happen since yesterday.\"\n\nHe wasn't wrong about that. All the crazy things that happened in the previous twenty-two years of my life added up weren't equal to the insanity of the past day.\n\nAs it turned out, the insanity wasn't done, either.\n\nWe reboarded the train at the set time, only to be told there would be a slight delay. An hour later, we were told it would be just a little longer. We ate dinner in the dining car together, where Noah teased me for bowing my head to say grace quietly before eating my turkey sandwich, then resumed waiting. We fell asleep a few hours after that, assuming we'd start moving in the middle of the night. When we woke up early the next morning, we were still sitting at the station in Jasper.\n\nA conductor came by shortly after that.\n\n\"I have some bad news, folks.\"\n\nI didn't quite understand why they didn't bus us to the next stop in Valemount, where we could catch a train that hadn't broken down, but our only option was to backtrack to Hinton about an hour in the opposite direction. Resigned to our fate, Noah and I boarded one of the coach buses the train company was providing.\n\nOur luck didn't turn around in Hinton.\n\n\"Two days?\" I cried.\n\n\"I'm sorry, miss,\" said the lady behind the ticket counter. \"There just isn't enough room on the next train for everyone. We can offer you and your boyfriend a voucher for accommodations...\"\n\nI flushed as she called Noah my boyfriend, but he just waved it off.\n\n\"Take the voucher, Lacey,\" he said. \"I got another idea, but just in case it doesn't work out.\"\n\nThere was a Tim Horton's nearby, and Noah told me to hang out there for a couple of hours.\n\n\"Where are you going?\" I asked, alarmed.\n\n\"I got some friends in the area,\" he said. \"Gonna see if they can help us out.\"\n\n\"Why can't I come with you?\"\n\nHe smiled tightly. \"You're good people. They're... well, they're all right, but you might make 'em a little nervous.\"\n\nI wasn't entirely sure how I, the least confrontational and most cowardly person I knew, could make anyone a little nervous, but I went to the Tim Horton's as directed.\n\nI spent the time trying to track down more information about Sean. The internet wasn't much help, so I tried contacting any of his old friends from school that I could find, hoping someone might know where he was. The ones that got back to me didn't, and the others never responded.\n\nI tried spelling his name every which way I could think of. Sean Stephens. Sean Stevens. Shaun Steven. Shawn Stephans. Nothing.\n\nI tried looking through the Instagram accounts of local gay bars, thinking maybe they'd have a picture of frequent patrons and hoping he might be one of them. All I discovered there was that I really, really wanted to see a drag show.\n\nI was nearly ready to find out how much a private detective would cost when Noah rolled into the parking lot in a beat-up brown sedan with a cracked windshield.\n\n\"Where... how... who gave you a car?\"\n\n\"Told you, I got some friends in the area. It'll be a long drive, but we can get to Vancouver before midnight. You got money for gas?\" He pulled the keys out of his jacket pocket, tossing them lightly in the air before catching them again. \n\nI nodded eagerly and followed him out to the car.\n\n**\n\nThe mountains were beautiful, but they sucked for cell reception.\n\nMy phone cut in and out as we drove, so I couldn't keep trying to find Sean online. Over the next four hours, Noah and I talked, sharing stories about growing up, opening up to each other in ways that didn't seem real for people who had only known each other a day. Noah's advice had been not to trust anyone, but he was wrong. I trusted him. God had set me on a path to meet him, and he had been a better friend to me than anyone else in my life.\n\nHe told me stories of a life I had no experience with, yet shook his head when I said I had nothing to complain about. He tried to make me understand that what my father said and did wasn't right, wasn't normal\u2014even by religious standards\u2014yet handled the hardships he had faced with a stoic sense of acceptance. When he spoke of picking Christmas presents from Santa's Anonymous, I thought of all the donations I'd placed in cardboard boxes for the less fortunate. It was painful to realize that those toys went to people like Noah; that he was the person behind the faceless \"less fortunate\" who we tried to help.\n\nI refused to pity him; I knew he didn't want pity, nor did he need it. What I wanted was for him to stop the car so I could hug him again, feel the roughness of his jean jacket against my skin. I listened quietly to his stories, knowing he shared them not to make my own problems seem lesser, but because he trusted me as much as I trusted him.\n\nThat drive was life-changing in some ways. Not because Noah was there to save me. He wasn't responsible for my salvation. Nor was he responsible for teaching me a lesson. He wasn't some mystical being who came into my life simply to guide me to the realization that other people had it worse than I did.\n\nNo, it was life-changing in that I realized how quickly people can grow to care about each other when they're being honest. If someone had asked me who the person I cared about most in the world was at that moment, I would have said Noah.\n\nThat realization was as terrifying as it was life-changing.\n\nDespite my fear, I quietly thanked God for bringing him into my life.\n\nWe were both getting hungry and had agreed to stop in Barri\u00e8re, which was about a half-hour away, when my phone started ringing.\n\nUp to that point, I had been ignoring my phone every time it rang. My father had tried to call a few more times, but had given up earlier that day. Half the time, it was in the bottom of my backpack and I didn't hear it anyways. But after losing reception while trying to find Sean online, I had placed it in the cupholder.\n\nSo when the screen lit up with an area code I didn't recognize, I frowned.\n\n\"Your dad again?\" asked Noah.\n\n\"No.\"\n\nI debated letting it go to voicemail, but curiosity got the best of me.\n\n\"Hello?\"\n\n\"Lacey?\"\n\nI knew his voice instantly. My hand flew to the cross around my neck as I teared up.\n\n\"Sean?\"\n\n\"Hey, sis.\"\n\nI burst into tears. Big, ugly, slobbery tears of joy and relief and happiness streamed down my face. Noah looked alarmed, but I waved a hand at him and turned towards the window. \n\n\"Where are you, Lace? I've been trying to call for hours. It keeps saying you're not available.\"\n\n\"W-We're on the highway,\" I sniffed. \"I keep losing reception.\"\n\nOur luck had finally turned around. Noah came up on a rest stop at that exact moment and immediately turned off, pulling into a parking spot so we didn't risk losing reception yet again.\n\n\"Are you okay? You're safe?\"\n\n\"I'm safe,\" I repeated. \"Sean, I can't... I'm so happy to hear your voice. I'm coming to find you. I wanted... needed to find you.\"\n\n\"Why didn't you just ask Mom for my phone number?\"\n\n\"Mom has your phone number?\"\n\n\"Yeah, of course. She... wait, you didn't know that?\"\n\n\"They never talk about you. I thought... didn't they... did you leave on purpose?\"\n\n\"No, of course not.\" Sean sighed, and I imagined him as I'd last seen him, scrawny and gangly and brushing curly hair out of his eyes. \"They really never talked about that day?\"\n\n\"No.\"\n\n\"Well, you heard what happened. You were there.\"\n\n\"I only heard yelling. Then saw you leaving.\"\n\n\"Dad kicked me out, Lacey.\"\n\n\"I-I thought... I mean, I didn't know if he kicked you out or if you left or...\"\n\n\"Bit of both, I guess. It was leave or go to gay camp.\"\n\n\"Gay camp?\"\n\n\"Conversion therapy.\"\n\nI cringed. \"I'm so sorry.\"\n\n\"It's okay. It's not your fault.\"\n\n\"I miss you.\"\n\n\"I miss you, too, Lace. Shit, it's so good to hear your voice.\"\n\n\"Mom really had your phone number all this time and never told me?\"\n\nAnother sigh from Sean rattled through the phone. \"She has it. We don't talk very often. I tell her to leave Dad every time but she just won't.\"\n\nIt was all news to me, and I could barely process what was happening.\n\n\"Listen, Sean, we're not far now, can I come see you? We'll be there in about... what, Noah, like four hours?\"\n\nNoah nodded. \"Four or five.\"\n\n\"Who's Noah?\" asked Sean.\n\n\"A friend of mine,\" I said.\n\n\"From home?\"\n\n\"No, from...\" I had no idea how to explain it. \"From somewhere else. We can talk more in person. I think we're about a half-hour from Barri\u00e8re.\"\n\n\"You mean Barrie? No way you're making it here in four hours. It's gonna be at least six, probably more like seven. Are you going through Peterborough?\"\n\n\"Peterborough? Where's that?\"\n\nSean paused. \"Lacey, where are you right now?\"\n\n\"I told you, half an hour from Barri\u00e8re. I'm pretty sure that's how it's pronounced, not Barrie. It's got the funny French accent thing on one of the Es.\"\n\n\"Lac-Barri\u00e8re? What are you doing way up there?\"\n\n\"What do you mean, way up there? It's right on the highway.\"\n\n\"Where the fuck...\" he mumbled. \"Where do you think I live?\"\n\n\"Umm... Vancouver?\"\n\n**\n\n<center>Chapter Three</center>\n\n\"Montreal?! Are you serious?\"\n\nNoah's face was red.\n\n\"I'm sorry! I really thought\u2014\"\n\n\"That's on the other side of the country. We literally are on the wrong end of the country right now.\"\n\n\"I'm sorry, I'm so\u2014\"\n\n\"They're not even anything alike. One's French, the other's Vancouver!\"\n\n\"I'm\u2014\"\n\n\"You've got to be kidding, Lacey. It's a joke, right? We didn't actually spend all this time going the wrong fucking direction?\"\n\n\"N-Noah please, I-I'm s-s...\"\n\nI couldn't get past the stutter. \n\nYou fucked up. You pissed him off. \n\nThe thought was insistent, intrusive. Suddenly terrified, my heart began pounding, then racing, then fluttering so fast I couldn't distinguish one beat from the next. Every bone in my body was telling me to run, but there was nowhere to run to. We were on a highway, at a rest stop, surrounded by trees and mountains and probably bears. Tears were pouring down my face again and my stomach was knotted, so tense that I felt like I was going to puke. I hunched over in the passenger seat, nausea overtaking me.",
        "Noah was my friend, but Noah was a stranger. What if he left me there? What if told me to get out of the car and left me at that rest stop on the highway? I had never heard my father scream the way he had when Sean disappointed him. I had never imagined he would try to send my brother to conversion therapy or kick him out.\n\nWho was to say Noah wasn't capable of something like that? I barely knew him, all things considered. \n\nThere was a high-pitched sound. I didn't know if it was real, if it was a squeal coming from my throat or a ringing encased only in my mind. I pressed my hands to my temples, clenching my jaw as the ringing turned to a throb.\n\nI'm dying. I think I'm dying.\n\nI wasn't sure if I thought it or said it. My breathing was ragged, gasping and uneven.\n\n\"Lacey, calm down.\" His voice was distant, quiet beneath the throbbing pulse in my ears. \"Are you all right? I'm sorry, hey, I'm sorry, I didn't mean to make you cry. Shit, Lacey. Talk to me. I'm really sorry, all right?\"\n\nHis hand touched my shoulder and I tensed. He yanked it away as though I was made of fire.\n\n\"I'm sorry, I'm sorry, please don't cry. Fuck. Look, I can't say I'm not frustrated, because I am, but it's not directed at you.\"\n\nThe pounding in my ears turned into a rushing sound. With an alarming amount of clarity, I thought I was about to pass out.\n\n\"You're scaring me. Breathe. Just... just take a breath for me, please?\"\n\nI didn't want to scare him.\n\n\"Lacey. Listen. I'm sorry. I'm sorry I'm frustrated. I'm sorry I was a dick just now. You must be frustrated, too. It's okay. We'll turn around. We'll get back to Hinton and catch the train again. It's gonna be okay, you just gotta breathe. Please. I'm sorry.\"\n\nI tried to inhale normally. It took all my strength just to take that breath, but I forced myself to. Noah asked me to. I was supposed to do what people asked me to.\n\n\"Please don't be mad at me. Please be okay.\"\n\nThe rushing in my ears faded. It turned back into a pounding, then a pulse, then nothing. My body still shook, trembling as though I was encased in a snowbank, but my breathing returned. Still hunched over, I felt the cross around my neck.\n\n\"I'm sorry,\" I whispered.\n\n\"No,\" he said softly. \"I was out of line. Look, if you don't want to be around me, I'll drop you off wherever you want.\"\n\n\"Please don't leave me here.\"\n\nHis hand touched my shoulder again, tentative. When I didn't tense up, he held it there, a soft comfort as I slowly realized I wasn't going to actually die. \n\n\"I would never,\" he said. \"Is that what you thought?\"\n\n\"Y-You're mad at me.\"\n\n\"No,\" he said again. \"Shit. Lacey, I'm sorry. I didn't think. I'm mad at the situation.\"\n\nWhen I was finally able to unfurl myself from the hunched ball I'd tucked myself into, Noah moved his hand.\n\n\"Do you have panic attacks a lot?\" he asked.\n\n\"Is that what that was?\"\n\nHe tried not to laugh, but the corners of his eyes crinkled. \"So no, then?\"\n\n\"I usually run away when people are mad at me.\"\n\nHe apologized again and again. I forgave him on the condition he accepted my apology, and then forgave him unconditionally anyway. I didn't try to excuse his behaviour. There was nothing to excuse. My reaction to his frustration was the problem, and the long drive back to Hinton gave me time to think about why I had reacted that way.\n\nHe wasn't yelling. He was angry, but he wasn't screaming or yelling or threatening in any way. He had every right to be upset, considering the huge mistake I had made, but I didn't like upsetting people, and I didn't like confrontation. The moment his face had reddened, I had started panicking.\n\nNoah blamed himself fully, but I disagreed. We came to an uneasy truce, both of us certain it was our fault. I didn't think his reaction was unwarranted; he didn't think I should trust him again. After driving for a few hours, he pulled into another rest stop.\n\n\"I'm sorry.\"\n\n\"Noah, I said I forgive you.\"\n\n\"No, I'm sorry because I'm tired. Can't drive anymore tonight.\"\n\nWe slept at the rest stop. Noah insisted I sleep in the back while he sat in the passenger seat. In the morning, we made it to Valemount about an hour after waking, stopping for breakfast.\n\n\"Let me get it,\" Noah said, digging through the pockets of his jean jacket.\n\n\"No.\"\n\n\"Lacey\u2014\"\n\n\"No.\" I looked at him firmly. \"You've been put out of your way this entire time because of me. If you don't want to go back across the country with me again, I don't blame you, and that's okay. But at least let me show my gratitude, okay?\"\n\n\"I'm coming with you.\"\n\nI knew better than to question him on it.\n\n\"Listen, guys, I hate to interrupt but are you gonna order?\" asked the cashier.\n\n\"Extra-large French Vanilla, breakfast sandwich, a medium black coffee, everything bagel with herb-and-garlic, and two hash browns,\" Noah said promptly.\n\nI smiled as I handed my card over to pay.\n\n**\n\nNoah said his friends wouldn't mind picking up their car in Jasper, so we stopped briefly to see if the train was still out of service. It was, because of course it was, so we bought more bear claws at the bakery and continued on to Hinton.\n\nThe closer we got to Hinton, the quieter Noah became. At first, I thought it was just because he was tired. The day before was long and emotional, and sleeping in the car had made me long for the comparative comfort of the train. We were both ragged, in need of showers and a meal that didn't come in a paper bag.\n\nIt wasn't until we were driving past the city limits that the tension in the car became so thick that I wondered how I'd missed it.\n\n\"How are we going to get from your friend's place back to the station?\" I asked.\n\nHe didn't respond immediately.\n\n\"Noah?\"\n\n\"We'll drive it to the Timmy's and leave it there.\"\n\n\"Really? They won't mind?\"\n\n\"Nah.\" \n\nI bit my lip as I watched him out of the corner of my eye.\n\n\"Because I don't mind bringing it to them, you know,\" I said. \"If you think it's okay, I'd really like to say thank you.\"\n\n\"Ah, I don't think that's a good idea.\"\n\n\"Why not?\"\n\n\"They're not home.\"\n\n\"Oh.\"\n\nAnother pause as my brows furrowed.\n\n\"How do you know that?\"\n\n\"I talked to them.\"\n\n\"When? You haven't called anyone or\u2014\"\n\n\"Lacey, it's fine.\" His voice was calm but strained. \"Really. We'll leave it at Timmy's and walk. I'll let them know as soon as we get there.\"\n\nI took his word for it, chalked up his reaction to being tired, and was quiet until we got to the Tim Horton's.\n\nNoah parked the car at the edge of the lot and we both climbed out.\n\n\"Wait, what about the keys?\" I asked.\n\nHe glanced down at the keys in his hand, then back up at me.\n\n\"I'll leave 'em in the restaurant. Let them know to pick 'em up there.\"\n\nHe returned with coffees for both of us and we started down the sidewalk. His legs were longer than mine and he walked so fast I nearly had to jog to keep up.\n\n\"Noah, slow down.\"\n\nHe kept up the same pace. \"Just want to make sure we get there on time.\"\n\n\"The train doesn't even leave for another two hours. We don't have to rush.\"\n\nHis jaw was clenched, face serious. \"Still, let's just get there. Make sure we got tickets and everything.\"\n\n\"Why are you acting so strange?\"\n\nHe didn't answer, but I found out soon enough.\n\nThe highway ran in a straight line right through the town of Hinton with the train station on one side and the bus terminal on the other, and we were on the bus terminal side. We were crossing a side street so we could get to the crosswalk when the beat-up brown sedan we'd spent the past day in came to a screeching halt in front of us.\n\n\"Oh, your friends found the car already!\"\n\nNoah's face was pale, but he still managed to look at me with incredulous disbelief. It was the only time he looked at me in a way that made me feel stupid.\n\n\"Reiman, there you are!\"\n\nTwo men and a woman climbed out of the car. Noah looked rough around the edges because his clothes were worn and his hair was messy, but he was an overall good person. His friends looked rough around the edges because they were rough around the edges.\n\nThe driver was barely taller than me, skinny as a rail, and had a face like a particularly angry muskrat. His hair was greasy and dark, thin facial hair was spattered across his upper lip and chin. From the passenger side came a man taller than Noah and twice his width. His head was shaved and dark tattoos were scrawled up his neck and onto his face. \n\nThe woman was tall as well, and the only way to describe her looks was that she was hot. Her makeup set off the darkness of her eyes, lipstick that made her full mouth look pouty and enticing, and her hair was short and spiky. She wore a baggy hoodie with the sleeves rolled up and a very short pair of shorts that clung to her skin. \n\n\"Hey Noah.\" Her voice was high and tauntingly flirty. \"Oh look, you found a pretty friend.\"\n\n\"Just let me do the talking,\" Noah mumbled to me. Before I could respond, he stepped forward. \"Hey, Pauline. Long time, no see.\"\n\n\"Sammy said you'd been by. Thought you'd wait to see me, but now I can see why you didn't.\"\n\nI swallowed hard.\n\n\"Yeah, well, I thought Reiman would've brought my fucking car back in a couple hours like he said he would,\" the shorter man said. His voice was cold and he glared at Noah as he stalked up to us.\n\n\"Sam, I was gonna explain\u2014\"\n\n\"Shut your fuckin' trap. You steal my fuckin' car and for what, to impress this bitch?\" He jerked a thumb at me and I felt my cheeks go red.\n\n\"Ah, can see why, ya know?\" said the taller man. \"Reiman, introduce us, eh?\"\n\nNoah was standing just in front of me, his arms folded protectively. \"No.\"\n\n\"Seems the least you could do for stealing my fucking car,\" spat Sam.\n\n\"You stole the car?\" I repeated.\n\nPauline hooted, slapping her thigh. \"Jesus Christ, Noah. Where'd'ja find this one?\"\n\n\"Leave her alone,\" Noah said. \"She's got nothing to do with this.\"\n\n\"That so?\" \n\nThe tall man started forward suddenly. Noah stepped back and bumped into me. I dropped the coffee I had been holding and grabbed the sleeve of his jacket as I stumbled, meaning that when the tall man pulled me away from him, Noah couldn't grab him back.\n\n\"Hey, pretty thing. I'm Darian. What's your name, baby?\"\n\nI looked at Noah, terrified, and didn't respond.\n\n\"Don't be such a fuckin' pig,\" Noah growled. \"Let go of her.\"\n\n\"Don't think I will,\" Darian said. An arm heavier than a tree branch wrapped around my shoulders. \"'Least not till Sam says so.\"\n\n\"Please don't touch me.\" My voice was small and squeaky as I tried to pull myself away from Darian.\n\nHe burst out laughing, as did Pauline. His arm tightened threateningly around me as she sauntered towards us.\n\n\"Just look at her,\" Pauline snorted. She grabbed the cross around my neck and tugged, breaking the chain easily. \"Look, Sammy. Little Christian girl. You here to save Noah's soul or something?\"\n\n\"Didn't you get enough of that in the pen? Now you're goin' after little Christian girls?\"\n\nNoah's face was red, fully red. \"You're all wrong. She's a friend. Haven't touched her.\"\n\n\"Nah, he wouldn't touch her,\" Pauline said. \"Noah's just a fuckin' rat thief, never did nothing to any girls. He's too noble. S'why I like ya, Noah. Even if you did just steal my baby brother's car.\"\n\n\"Oh, so she's a little whore then, hey?\" Darian's face lit up as he leered down at me. \"Why else she with your scrawny ass?\"\n\n\"Stop it,\" Noah said again. \"Seriously, fuck off. Your problem isn't with her.\"\n\n\"Yeah, back to the matter at hand!\" Sam stomped his foot. \"You fuckin' ask me to borrow a car for two hours, two hours you say to me, and just disappear? You disrespect me like that, you fuckin' goof?\"\n\n\"And then you don't even tell your cute little girlfriend you stole it?\" Pauline giggled. \"Aw honey, did he tell you anything about him? Did he tell you where he made friends with my baby brother here?\"\n\nNoah's expression didn't change, but he didn't look at me. Darian nudged me hard.\n\n\"She's talkin' to you. Answer.\"\n\n\"He didn't,\" I whispered obediently.\n\nDarian and Pauline hooted with laughter again.\n\n\"Lemme guess, he told you he was a good guy, just down on his luck? Talked his way into your life, maybe got you all hot with his bad-boy looks that are so different than your pretty boys from back home?\" She was mocking me, my cross dangling from her fingers as she spoke. \"Well, he can say whatever the fuck he wants. He can tell everyone he's changed and he's gonna get his life on track. We all been hearin' it from him for years. Fact remains, he stole a car from the man he shared a prison cell with for three years. He'll fuck you over too, pretty girl.\"\n\nA prison cell?\n\nMy head was spinning.\n\nThe car was stolen.\n\nNoah had been to prison.\n\nDarian's fingers were digging into my arm as he held me in place.\n\nNoah had lied to me, and he wouldn't even look me in the eye.\n\nPauline's words hung in the air. She looked at me as though she was waiting for a response, but I had nothing to say. I had no tears in my eyes. No pain, nothing to beg for. I felt numb. Broken. Stupid.\n\nPauline seemed to be able to read my face, every emotion and thought and terrified twitch I made. What she saw at that moment, I didn't know. Whatever it was, it made her stop. She pressed her lips together and sighed.\n\n\"Let her go, Darian.\"\n\n\"But\u2014\"\n\n\"Do it, you fuckin' goof.\" She held the broken necklace out to me. \"Here. Sorry I broke it. Get some money from Daddy to buy a new one.\"\n\nDarian released my arm and I took a giant step away from him.\n\n\"Now for you,\" Pauline said as she turned to Noah. \"You got the car back, no harm there. But you disrespected Sammy, and you know that can't fly. Gimme your jacket.\"\n\n\"No.\"\n\nHer eyes seemed to flash in the sun as she glared at Noah. \"Give it.\"\n\n\"Don't,\" he pleaded.\n\n\"Gimme the fuckin' jacket, Noah.\"\n\nI had never seen Noah take his jean jacket off. It should have been something I noticed before. After all, it was summer. It wasn't especially warm, but it wasn't cold enough to warrant a jacket. The realization hit me only as I saw Noah's face scrunched in distress at being told to give up his jacket.\n\n\"You already broke my necklace,\" I interrupted. \"Take that if you need something from us.\"\n\nPauline glanced at me, her eyebrows raised. \"Us, eh?\"\n\n\"No, keep your necklace,\" Noah said. Dejected, he started unbuttoning the jacket.\n\nI held the necklace out to Pauline. \"It's worth more than an old jacket. Take it.\"\n\nShe made a disgusted face. \"You think this is about money?\"\n\nI did, but apparently that was incorrect.\n\n\"I got it for my First Communion,\" I said. \"I've worn it every day since I can remember. It was my grandmother's.\"\n\n\"Lacey, keep your fucking necklace,\" Noah implored, his voice as desperate as his eyes. \n\n\"Lacey?\" squealed Pauline. \"Oh, that's fucking adorable.\" She snatched the cross out of my hand.\n\n\"Take my damn jacket, Pauline! You wanted it in the first place,\" Noah protested.\n\n\"Nah. I got this shit now.\" She laughed as she started stalking back to the car. \"C'mon, you two.\"\n\nThey left as quickly as they'd arrived, leaving me standing in the middle of the street with Noah as we watched the car drive away.\n\nThe world went silent around us as the car turned the corner, and all I could do was stare at the spot it had been while Noah shifted uncomfortably.\n\n\"You're probably wondering\u2014\"\n\nI started walking away before Noah even finished the sentence. It seemed to startle him, and he jogged to catch up with me.\n\n\"Wait, just let me explain\u2014\"\n\nHe reached out to touch my arm and I batted his hand away.\n\n\"Lacey, wait\u2014\"\n\n\"No.\"\n\nI stopped suddenly and Noah crashed into me. My heart was pounding so hard that I felt dizzy as I whirled towards him.\n\n\"You know what, Noah? You were right.\"\n\n\"What?\"\n\n\"You said I shouldn't blindly trust people. And then I trusted you.\"\n\nHe tilted his head back, eyes closed. \"Listen, just let me explain\u2014\"\n\n\"You stole a car! And lied to me about it!\" \n\n\"It wasn't really\u2014\"\n\n\"You've been in prison.\"\n\nHe went silent.\n\n\"For what?\"\n\nNoah looked away, his jaw clenched.\n\n\"For what, Noah?\"\n\n\"Theft.\"\n\n\"Theft.\"\n\n\"And drugs,\" he mumbled.\n\nI couldn't look at him.\n\n\"I'm clean,\" he continued. \"Have been for almost six years now. I got involved with some people, did some stupid shit. I never hurt anyone, Lacey.\"\n\n\"You broke the law.\"\n\n\"I fucking\u2014\" He stopped suddenly, running a hand through his hair. \"I fucked up. I've been paying for it every single day since then. I didn't lie to you, I just didn't... I don't tell people. That's not who I am anymore.\"\n\n\"You lied about the car.\"\n\nAgain, he went silent.\n\n\"I accidentally got us to the wrong side of the country. That's a mistake. You put us in danger! I thought they were going to kill us. Or we could have been arrested. You made me an accomplice to a crime!\"\n\n\"They wouldn't have called the cops.\"\n\n\"Not the point!\" I bit my lip, hard, to keep from crying. \"You need to leave me alone. I might be stupid, but you put us in danger on purpose.\"\n\nThe serious expression on his face stayed stoic, but he closed his eyes.\n\n\"Why'd you give them your necklace?\" he asked quietly.\n\n\"It was just a stupid necklace. I don't care about it.\"\n\nIt was the first lie I'd told Noah. I should have felt guilty. It should have bothered me more that I didn't. \n\nI turned and ran away from him as fast as I could.\n\n**\n\nReading signs from God is not easy.\n\nThey say He works in mysterious ways, but that summer I began to think it was just an excuse so people didn't feel as bad about making the wrong decision. It was a way to justify their actions and choices while still believing that God had the capacity to care about each and every one of us, like there weren't seven billion other people He was watching over at the same time.\n\nIf God worked in normal ways, I probably would have gone back home when the people at the train station told me that I couldn't catch a train east for two days. I would have interpreted that as God telling me I had made the wrong choice, that it was time to go home to my little town with its little ways and little problems. \n\nThrow in some \"mysterious ways,\" though, and you can interpret that as anything. Throw in a girl who was frustrated and scared and alone, and you can interpret it as \"well, I'll just take a bus back to Edmonton so I can take the train tonight.\" It didn't seem to cross my mind that even if Noah and I hadn't fought, we still would have been stuck there for two days. \n\nThe Hinton stop was conditional, they said.\n\n\"It's not a major stop, so they need 48 hours' notice if you want a pickup here,\" said the woman behind the counter.\n\n\"48 hours,\" I repeated. \"There's nothing else? They can't, I don't know, make an emergency stop?\"\n\n\"Is it an emergency?\"\n\nI thought for a moment, then sighed. \"No.\" \n\nShe smiled politely, though I'm sure she was rolling her eyes internally. \"I'm not supposed to send customers to our competitors, but the bus to Edmonton leaves in about an hour. They'll bring you right to the station in Edmonton, and the train leaves from there about two hours after you'd arrive.\" \n\nI crossed the highway back to the bus terminal, wary of seeing Noah en route, but he had disappeared. I told myself I wasn't worried about him, that he was an adult who could take care of himself. Hell, he could take care of himself better than I could take care of myself. I told myself I didn't care what happened to him, that I was angry with him. \n\nI ignored the small, whispery voice in my head that said he deserved forgiveness. Look what happened when I forgave Roger, I reasoned. Forgiving people had gotten me into this mess.\n\nI ignored the fact that Noah hadn't intended to hurt me. It didn't matter. I was hurt all the same.",
        "If God wanted Noah to be forgiven, He could forgive Noah Himself. \n\nThe bus was already waiting at the terminal when I got my ticket sorted out. The back of the bus had the most people, so I sat near the front and plopped my backpack onto the seat next to me. I had bought a cheap pair of earbuds at the London Drugs in Edmonton, something that seemed like a distant memory by then, plugged them into my phone, and closed my eyes.\n\nI spent the entire bus ride trying not to think about Noah. Of course, that meant he was the only thing I could think of. \n\nWhy had he been so distressed about giving up his jacket? I understood that Noah didn't have much in the way of money, but still. It was a jean jacket, one that had certainly seen many better days. The denim was faded in spots, patches on the elbows almost completely worn through. The fabric hung off his body loosely, a few sizes too large for him. \n\nThe look in his eyes when Pauline had demanded it from him was pure anguish. I could see his face in my mind clearly, pinched in distress, his eyes wildly begging her to ask anything else of him. \n\nI'd given up my necklace for him. It had been instinct, something that flared up in me when I saw that expression. Despite him lying to me, I didn't want him to see him hurt. I was certainly sad about losing my cross, but it didn't torment me the way the threat of losing his jacket did to Noah.\n\nMaybe it was a good thing Pauline had taken it. It was a symbolic moment of growth, a literal and figurative breaking of chains. The mountains had laid the foundation for me to understand that. God was not in control of my life, no more than anyone else was in control of my life. The lessons I learned growing up about forgiveness and loving thy neighbour and doing the right thing were there as guidelines for being a good person. How I used those lessons was up to me.\n\nHe wanted me to do the right thing, but He would forgive me when I didn't.\n\nKind of like how I wanted Noah to do the right thing. If God would forgive Noah, I should follow His example.\n\nI squeezed my eyes shut even tighter. I didn't want to learn that lesson. I wanted to keep being mad at Noah.\n\nI tried to think of Sean instead. In only a few days, I would get to see my brother again. It had been nearly ten years, and I tried to imagine what he might look like. I couldn't seem to picture what the scrawny boy of seventeen would have grown into. \n\nThe thoughts about what Sean would look like caused my mind to wander back to Noah. He and Sean were about the same age, and I started wondering what Noah would have looked like growing up. Had he always had long, scruffy hair? Were his shoulders always so broad? Had he always been so tall? \n\nI kicked myself mentally, my cheeks flushing. I was angry at Noah, no matter how attractive he was. No matter how he had hugged me when I cried, how warm his body was curled up against mine that night on the train...\n\nI kicked myself mentally again.\n\nI went back to Sean. He had promised to pick me up from the train station when I got there. What happened after that, I didn't know. My father had stopped trying to call and I had no idea if my parents would even welcome me back home. Perhaps if I repented and begged their forgiveness, my father would consider it.\n\nThe problem was that it would be a lie. I couldn't be forgiven for something I felt I was right about. \n\nThat was the key, right there. Deep down, underneath my racing mind trying to interpret God's mysterious signs and wondering if I was doing the right thing, I knew I couldn't be forgiven for running away. \n\nNoah had said it best. I wasn't running away. I was running to something better. \n\nI spent the last part of the bus ride praying. I went through the list of saints Delilah had taught me all those years ago, praying to any of them that might be able to help me. I asked for Saint Ignatius to help make sure my decisions were good. I asked God\u2014begged God\u2014to work in normal ways, to make His signs a little clearer. Both Saint Christopher and Saint Michael heard prayers for protection. And for Noah, I prayed to Saint Maria Goretti, hoping wherever he was, she would watch over him.\n\nMy hand reached instinctively for the cross around my neck as the bus stopped in Edmonton. A tiny knot of pain curled around my heart when I remembered it wasn't there.\n\nThe lady at the station in Hinton had said the bus would take me right to the train station in Edmonton, but that was a bit of an exaggeration. The bus terminal was about three kilometers away, but there was a shuttle leaving every fifteen minutes that would bring me over. The shuttle driver directed me to leave my backpack beside the van and he'd put it in the back. I did exactly as he said and climbed in alongside a couple of other people.\n\nI say this because I want to make it clear that I did exactly as I was told. Backpack beside the van, driver would put it in the back. \n\nThere were a few things I can admit were my fault. I shouldn't have left my wallet in the bag. I shouldn't have left my phone in the bag. I should have watched him put the bag into the van, because when we arrived at the train station, it wasn't there.\n\n\"Is it in another shuttle?\" I asked desperately.\n\nThe driver shook his head. \"This is the only one. We go back and forth from the station to the terminal all day.\"\n\n\"Can you call over? See if someone has it?\" \n\nHe did, but shook his head at me after a few moments. \"Sorry, miss.\"\n\n\"It can't be gone. It can't.\" \n\n\"I can take you back to the terminal if you want.\" \n\nI might have shaken my head before walking away, but a haze had settled over me. All I knew was I sank down on a bench, much like I had in Winnipeg, and stared aimlessly in front of me. \n\nIf I had just forgiven Noah, he would have been there with me and stopped me from doing something so stupid. \n\nUncharacteristically, I hadn't cried after running away from Noah earlier that day. I hadn't cried on the bus. Instead, I waited until I was sitting alone at a train station before bursting into tears like a crazy person.\n\nI was very aware that people were sidestepping around my bench, refusing to acknowledge the sobbing woman with her head in her hands. I didn't blame them. Nobody wants to deal with the emotional breakdown of a person they don't know. No matter how hard I tried to tell myself to pull it together, I couldn't seem to stop crying. \n\nLosing my wallet meant I had no money, no way to get another ticket, no way to get food. Losing my phone meant I could only call one phone number for help, since I couldn't remember Sean's. Losing my backpack meant defeat. \n\nIt meant I was wrong.\n\nIt meant that I was interpreting God's mysterious ways incorrectly. \n\nOr it meant that He had heard my prayer for more obvious signs. It meant that when Noah came strolling up to me holding my backpack, I was to forgive him.\n\nIt was the soft nudge of my bag tilting against my calf that made me take my head from my hands. I looked down at it and gasped, lunging forward to grab it. When I looked up, tears still staining my cheeks, Noah was already walking away.\n\n\"Wait!\" \n\nHe kept moving and I scrambled to catch up with him.\n\n\"Noah, please. Wait one second.\" \n\nHe stopped but didn't turn to me.\n\n\"I didn't take it and I'm not following you.\" His voice was cold.\n\n\"Where did you find it?\"\n\n\"Saw some kids with it at the bus terminal and took it back, heard some driver ask people to keep an eye out for it, figured you were here.\"\n\n\"Were you on the bus too?\" \n\n\"Didn't think you'd take the bus,\" he mumbled. \"Saw you get on but didn't want to bother you.\" \n\nMy chin trembled as I looked down. \"Thank you.\"\n\n\"Leave you to it, then.\" \n\nHe started away again, heading towards the exit where the shuttle was waiting. \n\n\"Wait, where are you going?\" \n\n\"North.\" \n\nAnother knot of pain clamped around my heart. I would never see Noah again if he went north. I would never speak to him again if I didn't do it right that second. \n\n\"Noah, I'm sorry.\"\n\nHe stopped, pausing before turning back towards me, his body tense. When he finally met my eyes again, the serious grimace on his face softened.\n\n\"I'm sorry,\" I whispered again.\n\nNoah stepped forward, still hesitant. \n\n\"For what?\"\n\n\"For telling you to leave me alone.\" My voice was shaky, but I hoped he could tell it was genuine. \"For not listening to your explanation. For accusing you of putting us in danger.\" \n\nHe cast his eyes to the floor. \"Don't need to apologize for that.\" \n\n\"Yes, I do.\" \n\nHe shook his head. \"I did all those things. You aren't wrong.\"\n\n\"It doesn't matter. I should have been a better friend.\"\n\n\"I'm the one who needs to apologize,\" he said. \"I lied to you. I'm sorry.\"\n\n\"We both made mistakes.\"\n\n\"No. I'm the fuck up here, not you.\" \n\n\"You're not a... a f-fuck up.\" \n\nI was surprised steam didn't start rising off my cheeks from how hotly they burned, even though I'd stuttered my way through swearing and had lowered my voice when I said it. Noah looked up, astonished, and I had to press my lips together to keep from laughing at his expression.\n\n\"Miss Lacey, did you just\u2014\"\n\n\"Let's never speak of it again.\" \n\nHe chuckled, a staccato grunt, and tried to hide his smile. \n\n\"Shit. You make it hard to stay mad.\" \n\nI tried to smile back, but I didn't want to say goodbye. \n\n\"Are you really going up north?\" \n\nThe serious expression overtook his smile again. \n\n\"Guess so. Was what I was gonna do before I met you.\" \n\nI had never asked him to come with me. He had decided for me, appointed himself my protector when he realized how far in over my head I was. I had told him he didn't have to come with me, and he had insisted. But when I told him to leave me alone, he had done so without question, only breaking the command to help me yet again. He was there because he wanted to be, but would he stay if I asked him to? \n\nI wanted him to stay with me as much as I needed him to.\n\n\"I know I don't really have any right to ask, but will\u2014\"\n\n\"Yes.\" \n\n\"You don't even know what I was going to say.\"\n\n\"I'll come to Montreal with you.\" \n\nThe relief that flooded me almost brought me to tears again, and I sniffed as I smiled. \"Just, no more secrets, okay? And no more stealing.\"\n\nHe nodded solemnly. \n\n\"I promise.\" \n\n**\n\nI hadn't planned on taking that sleeper cabin upgrade.\n\nReally, I hadn't.\n\nBut I also hadn't planned on taking a cross-country trip, meeting a man who would change my life, getting stranded in Hinton, sleeping in a car on the side of the road, or having my backpack stolen. I hadn't planned on giving up my necklace, lying to anyone, or ignoring my father's phone calls. \n\nI was feeling like a bit of a different person when I walked up to the ticket counter.\n\n\"So, this will get you to Toronto,\" said the lady. \"You'll have to stop off there and get a different line to Montreal. It'll be less expensive to buy your tickets at that time.\" \n\n\"Great,\" I said. \"Also, can you take a look at my customer profile? There should be an upgrade on there.\" \n\nShe tensed up. \"Oh, um... I mean, I guess. Was that for... both of you?\" \n\nI was sure plenty of people tried to scam their way into an upgrade, but Noah and I weren't them. \n\n\"Yep.\"\n\nHer lips pursed. \"I apologize for any confusion. The note says a one-person sleeper cabin.\"\n\n\"There's no chance we could get a cabin for two? Or two one-persons?\" \n\n\"I really can't make changes to an existing upgrade.\"\n\n\"Not at all?\"\n\n\"Well, I could put you both in business class instead, if you like.\"\n\nThe person I had been four days earlier would have agreed, maybe even apologized. But the person I was that day was not having it.\n\n\"I hope I'm not making things too difficult,\" I said. \"It's just, I would think after I was nearly drugged and assaulted on my trip\u2014where my friend here stepped in to help me, by the way\u2014and then we were both stranded in Hinton and had to take a bus back to Edmonton just to get back on the train, that maybe there would be a way for us to get upgraded to something better than business class.\" \n\nThe lady's face changed as I spoke. She glanced at the computer and clicked a few items, her eyes widening as she looked further into the profile. I imagined the conductor who had helped us originally put in a few more details than she had originally seen because she even started to go a bit pale.\n\n\"Miss Stephens, I am so sorry for the experience you've had,\" she said. She typed quickly, then printed a ticket. \"I must have, uh... misread the booking. It says right here that you've been upgraded to a premium suite. My apologies. Please, take a food voucher for your troubles.\" \n\nI might have imagined it, but I thought Noah looked proud as we walked away from the ticket counter.\n\nWe received a few strange looks as we made our way through the cars that housed the sleeper cabins and suites. It wasn't unexpected. Most of the other passengers in those cars were older, cleanly dressed, and clearly well off. Neither Noah or I had showered in at least four days, carried only backpacks, and probably looked a little rough. \n\nI didn't care in the slightest.\n\nWhen we got to our assigned cabin, I was shocked. \n\n\"Oh my gosh,\" I breathed. \n\n\"Holy fuck,\" Noah blurted.\n\nI didn't even know trains had rooms like that. It was small, of course, but twice as long as any of the other cabins. Instead of the narrow bunk beds I had expected, there was a Murphy bed tucked into the wall. Everything was covered in dark, rich wood. There was even a small chandelier hanging in the middle of the room. It had a leather couch facing a reasonably large TV, a small dining area with fresh flowers on a vase in the middle, and most importantly\u2014\n\n\"Oh thank you dear, sweet Jesus.\" I nearly wept as I opened the door into a private bathroom with a shower stall. \n\nFinally, it seemed like we had caught a break.\n\nI told Noah to use the shower first because I couldn't guarantee I'd be out of it in a reasonable amount of time. While he showered, I explored the suite. There were complimentary snacks in some of the cupboards and I helped myself to some actual fresh fruit for the first time in days. \n\nWhen Noah exited the bathroom, I was flipping through the channels on the TV and munching on an apple. \n\n\"All done?\" I asked, glancing over at him. \n\nInstantly, my neck snapped back towards him. Noah's hair was still damp, towelled dry and messy around his face. His skin almost gleamed with cleanliness and he seemed more relaxed than I had ever seen him.\n\nMost noteworthy, however, was the fact that Noah was not wearing his jean jacket.\n\nNoah was not wearing any jacket. Or a shirt. \n\nIt's not like I had never seen any man without his shirt on. I didn't live under a rock, obviously, but there was a big difference in seeing a man without a shirt at a swimming pool, for example, and having Noah walk into the room unexpectedly and gloriously half-exposed. \n\nSomething I hadn't known about Noah was that he was covered in tattoos. They were beautiful, all intricate drawings and symbols that danced along his skin. Not a single one peeked over the collar of his shirt, so it was surprising to see the scrawling black ink that snaked across his arms, back, and chest. \n\nOh, and his chest.\n\nThat jean jacket hid a lot. \n\nNoah was thin, but not scrawny. His chest muscles were hard and defined, and his shoulders were strong. A few errant drops of water dotted his smooth skin, and a feeling I had never really felt before made me long to lick each drop off of him.\n\n\"What the fuck,\" I whispered, shocked at my own thoughts.\n\nI could feel my entire face going red. Probably my entire neck, chest, and the rest of my body, too. Especially that little spot in my stomach that was fluttering in an almost-enticing way. \n\n\"Shit, sorry.\" Noah grimaced, looking slightly embarrassed. \"I didn't mean to make you uncomfortable.\" \n\nUncomfortable was one word for it.\n\nI wasn't stupid. I knew what it was. I had been attracted to men before, but I had never, ever had my body react to someone the way it did to the sight of Noah shirtless. \n\n\"It's fine,\" I said quickly, standing up and almost falling over. I was suddenly very light-headed. \"J-Just unexpected. I've never seen you without your jacket on.\" \n\nHe rubbed his neck nervously. I tried not to stare more than I already had.\n\n\"Well, I wanted to talk to you about that, actually.\" \n\nI didn't want to ask him to wait until I'd had a moment to calm myself, or until I got out of the shower.\n\n\"Sure,\" I said. \n\nHe nodded, not looking at me. \"You asked for no more secrets. It's not a secret, really, but I... You gave up your damn necklace so I could keep it, even though you were pissed at me.\"\n\n\"It's not\u2014\"\n\n\"I know you lied,\" he continued. If possible, I turned even redder. \"Saw you touch that thing all the time, every time you were nervous or scared or whatever.\"\n\n\"I didn't realize it was so obvious.\" \n\n\"Yeah, well.\" He smiled tightly. \"I'm sorry you lost it because of me.\"\n\n\"It's okay. It was my grandmother's, but if it makes you feel better, she wasn't a very nice person.\" \n\nThat wasn't a lie. Nana was a lot like her son, my father, and I didn't have any overly fond memories of her. I wore that necklace dutifully and while it was a comfort to me, like Noah had said, it was still just a piece of metal. \n\n\"I'll replace it for you,\" he promised. \"It might take a while. But I'm gonna get you a new one.\" \n\n\"You don't have to.\"\n\n\"Want to.\" \n\nI opened my mouth to reply, but he shook his head.\n\n\"So the jacket. It's uh, it kinda seems silly to say it out loud. But I've had it almost my whole life. I told you about my dad?\"\n\n\"You said he died when you were young.\"\n\nNoah nodded. \"Mom looked everywhere for the jacket after he died. Wanted him to be buried in it, I guess. He wore it all the time, one of his favourite things. She realized I'd taken it, had it in my bedroom. Was sleeping with the thing like it was a goddamn security blanket.\" \n\nHe finally met my gaze, a desperate yearning for understanding gleaming deep within his dark eyes. \n\n\"Thought she was gonna whoop my ass when she found it. 'Stead she kinda nodded and patted my back. Said Dad would want me to have it but I had to take good care of it.\" \n\n\"I'm glad Pauline took the necklace instead,\" I said, and I meant it completely. \n\nHe shifted slightly. \"She, uh, knew the story, obviously.\" He cleared his throat. \"You heard her say how I knew Sam, right?\"\n\nI nodded. \"You were, um, in prison together?\"\n\n\"You say it so innocently. Like it was summer camp or some shit.\" Noah's eyes sparkled as he chuckled. \"So, kept in touch with Sam after our stint. Ended up living with him awhile in Hinton. Pauline's his sister, she was around a lot... so uh, there's some... uh, history there.\" \n\nI looked at him blankly, waiting to hear what the history was. Noah cleared his throat awkwardly.\n\n\"You really gonna make me spell it out?\"\n\nIt took a moment longer, but I figured it out myself.\n\n\"Oh. She's your ex-girlfriend?\"\n\n\"Dunno if I'd call her a girlfriend really, but that's the gist of it, yeah.\" \n\nMy face flamed again as I realized what he meant.\n\n\"Oh.\" \n\n\"So that's why she was so shitty towards you. Wasn't too happy with me when I left town.\" \n\nI nodded, swallowing hard.\n\n\"I'm sorry, Lacey.\" \n\n\"It's okay,\" I said. \"I don't even know what you're apologizing for.\" \n\n\"All of it. Not telling you about this before. Letting Pauline take your necklace. She wouldn't've bothered except she felt threatened by you.\" \n\n\"Threatened? By me?\" \n\n\"You know, like... I dunno, like she thought maybe she and I could get together again or something, then saw you and thought\u2014\"\n\n\"Me?\" I repeated. \"She needs her eyes checked. Pauline was terrifying, but even I noticed how... you know, pretty she is.\" ",
        "Noah frowned. \"What do you mean?\" \n\n\"Well, you know, I mean I know I'm pretty plain-looking and she had that, like... dark, sultry kind of look.\"\n\n\"You think you look plain?\" \n\nI shrugged, looking away from him. \"I look like me. Nothing special. It's no big deal.\" \n\nNoah was quiet. A strange sort of tension filled the room until I couldn't stand it any longer and looked back at him. He was studying me, a line creased between his eyebrows. \n\n\"What?\"\n\n\"You don't know how you look, do you?\" he said quietly. \"You're not just saying that to be modest or something. You really got no idea?\" \n\nI couldn't respond. I didn't know how to respond. The strange little flutter in my stomach had returned, stirring up something that I didn't know how to handle.\n\n\"I should take a shower,\" I whispered, and strode past Noah into the bathroom.\n\nThe door closed quietly behind me as I tried to make sense of what was happening. The bathroom was warm, thick with humidity from Noah's shower. He had washed some of his clothing in the sink and let it hang on the towel rack to dry. I refused to imagine what he must have looked like in that room just minutes earlier, standing under the running water and washing himself while I ate an apple just a few meters away in the next room.\n\nI absolutely refused to picture that.\n\nShivering slightly despite the warm, damp air, I undressed. The mirror was slightly fogged, and I ran a towel over it, looking at myself in the mirror.\n\nI didn't know what Noah was talking about. The girl that stared back at me couldn't be described as anything better than plain. Eyes that were too big stuck out from underneath long, straight, boring hair. She was covered in freckles, head to toe, splotches of brown that stuck out against her pale skin. Where Noah's body had been hard and toned, mine was soft. I didn't run, didn't work out. Not that I ever showed them off, but my breasts weren't anything special. They were average sized and usually hidden behind a reasonably baggy top. My hips were curvy. My backside was normal, not small but not large. I would never go so far as to say I was ugly, but I wasn't anything special.\n\nI was average. Just an average girl, with an average face hidden beneath layer upon layer of freckles. \n\nMaybe both Noah and Pauline needed their eyes checked. \n\nThe thought of Pauline and Noah together made me cringe. I hadn't expected that Noah was celibate or something. I was a virgin, and I knew that made me the weird one, but the thought of him with her, their mouths pressed together as their bodies entwined, made me angry and aroused and uncomfortable all at the same time.\n\nI didn't want to admit it was because I wanted my mouth pressed to Noah's as he did unspeakable, nearly sinful things to me. Why would Noah even want to do those things to me?\n\nThere had been that look in his eyes, though. That look as he asked me if I knew what I looked like. It wasn't a look of pity or of concern. It was something else, something like... longing.\n\nMaybe he did want to do those things to me.\n\nIt felt wrong to admit, but maybe I wanted him to.\n\nI didn't come out of the bathroom for a very, very long time. \n\n**"
    ],
    "authorname": "MsCherylTerra",
    "tags": [
        "canada",
        "coming of age",
        "female virgin",
        "first love",
        "highway song story",
        "naive",
        "religious woman",
        "road trip",
        "romance",
        "small town girl"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/runaway-pt-01-1"
}