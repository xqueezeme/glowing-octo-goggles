{
    "title": "Kismet Encounter Ch. 02",
    "pages": [
        "I hope it hasn't been too long of a wait for chapter two, but here it is! Again, this is a romance between two women with supernatural elements. I wouldn't recommend it as a stand-alone story, as you'd get lost in it all. \n\nObnoxious thank you to LesbianChickLit whose continued support and encouragement helped this story develop into what it is. Your help is irreplaceable and you rock.\n\nFeedback is appreciated.\n\n***********\n\nA faint creaking informed Camille Silva that her lunch was being shoved through the compartment at the bottom of the steel door to her cell. With a sigh, she sat up, stretching her legs over the edge of the lumpy cot, and she took in her despondent surroundings. The distant scent of over-cooked mush was filling the small space at an alarming rate. The room was eight by ten, no larger than an average prison cell, and just as confining. A toilet with built a in sink was placed in the corner and the solid steel door loomed beside it.\n\nPulling back her mop of black hair, she fastened the unruly mess together with a strip of fabric she ripped from the bland gray of the garb provided.\n\nHer stomach turned at the sight of the food that was unceremoniously tossed to her. She stood, unwavering as she walked the few feet to the door. Picking up the hideous 'food' offered, she slipped it back through the compartment. The tray clattered to the floor, and although she couldn't see, she was sure the food splattered on to the concrete surface and hoped as much. \n\nShe crossed to the toilet/sink combo, washing her hands of the mush. Hesitantly, she peered at her reflection in the clouded mirror. Wisps of black hair stuck out in various places, her vibrant hazel eyes dulled and cheeks slightly sunken from the short weeks of exploitation. \n\nCamille knew she was being punished for not cooperating with Dr. Thorn and her people. She didn't give a shit. From the moment she volunteered for the project, she'd been lied to, promised money, money she desperately needed to finish her degree and provide an education to her younger brother, Malcolm. Their parents had saved just enough to send Camille to college but not enough to complete her desired degree. After depleting the entire fund, the guilt was real when Malcolm set forth applying to colleges with little means of paying for the endeavor. They probably think I'm dead in a ditch somewhere. She cringed at her internal assumption. \n\nIt had been just over four weeks since Camille signed up for the exciting and enticing study the Ohio State University's psychology department was conducting. If a qualified applicant, the research group was offering a great deal of money as reimbursement for individuals who volunteered. The only pre-requisite required was having an extra sensory perceptive ability. At first glance, Camille assumed the study to be a spoof or made up of a bunch of geeks trying to prove the existence of some pseudoscientific claim. \n\nWhen she arrived at the intake for the study, she was welcomed by Dr. Miranda Thorn, a renowned doctor of genetics and immunology as well as a handful of reputable members of the scientific community on the board of research. It was impressive surprise to have such a member of the scientific community conducting the study. It only added to the nervousness Camille was already feeling about the intake. \n\n\"Good morning, Miss Silva and welcome. Please, have a seat,\" Dr. Thorn announced curtly, her hand motioning to an empty chair. She was the only member from the research team present during the intake, much to Camille's relief. From first glance, she seemed pleasant enough, her graying dark hair pulled back into a tight bun, flawless make-up and an air of authority floating around her. A tiny camera was set up on a tripod about ten feet from the desk and chairs, not yet engaged.\n\n\"My visit at the University is brief, so let us begin. This interview will be recorded for determination of our choice in volunteers,\" Dr. Thorn asserted, pressing a button on a small remote, initiating the camera to start recording. \n\n\"If you could explain your alleged extra sensory perception, for documentation purposes, please Miss Silva,\" Dr. Thorn stated flatly. Her stare was hawk-like, her eyes narrowing in on Camille. Her hand hovered over a blank notebook, a fountain pen grasped between her fingers. Camille cleared her throat, her hands suddenly sweaty, her solicitude stealing her voice.\n\nShe sputtered clumsily, \"I, uh...,\" taking a deep breath, Camille thought about a hot air balloon, swept up by a violent wind on a brisk spring day. One breezy spring afternoon, her father had taken her to a field as a race was being held. She remembered the experience with blithe nostalgia, watching the heavy basket dangling from its cables, skirting too closely to the grass covered hill before it landed.\n\nShe stared at Dr. Thorn, projecting the image, pushing it forth from her mind. She willed the doctor to draw the image with precise detail. Dr. Thorn's hand began to move swiftly across the paper on the desk, her eyes still locked onto Camille's. \n\nWhen she finally was broken from the trance, Dr. Thorn dropped the pen from her hand with a start peering down at her notepad. A billowy hot air balloon was scrawled on the pad, floating over a hill covered in a patch of grass. The balloon was impeccably shaded with the black ink of the pen. \n\nDr. Thorn's astonishment was clear by the pallor her face took on, her eyes widening and a tremor running through the hand that had held the pen. Camille smiled smugly at her reaction.\n\nTwo days later, Camille came back for the beginning of the project, to Dr. Thorn's enthusiasm. She went on to tell Camille that her abilities were remarkable and unique, something she hadn't seen since the dawn of their study. \n\nCamille didn't pay attention to the paperwork she signed, her na\u00efvet\u00e9 and ego overshadowing her common sense. It had been years since she was able to show off her skills, the only person around her knowing was her brother. He shared the strange anomalous ability and she had stressed to him the importance of disclosing the information to a limited amount of people, or risk judgement. If only she had followed her own goddamned advice. \n\nCamille knew now it was a mistake admitting herself into the study, probably the biggest in her life. It seemed harmless at first but, after that, Camille was detained. She was transported to a facility in a location she wasn't conscious to see. \n\nHer distorted reflection combined with the lack of food made a wave of nausea hit her, forcing her back to the uncomfortable bed. She lay on her back, staring up at the textured ceiling, wishing for a plan. She wondered if her parents knew, if Dr. Thorn's people told them anything. If they told her family she was a freak of natural. A creature born of a disrupted genome; a mutant, an aberration, a deformity. \n\nMaybe them thinking she was dead in a ditch wouldn't be so bad after all.\n\n**\n\nA chickadee gracefully landed on the glass table in front of Roland, and she frowned, her concentration ripped from the murder mystery in her hands. Just as the killer was to be unveiled. The bird's opaque eyes stared at her, it's head tilting slightly to the side, studiously.\n\n\"Shoo,\" she whispered, leaning forward and flailing the open paperback at the bird until it fluttered away. Roland looked up as Jude and her new brunette shadow walked up to the table, hand in hand.\n\n\"I'm surprised you came out for your obligatory social time, sis,\" Roland speculated, placing her book face up on the table. \n\n\"Of course,\" Jude sang, pulling a chair out for Natalie to sit, then moving to her own chair. Natalie looked at Roland quizzically and then to Jude, then back to Roland.\n\nRoland smirked at her. \"Little miss introvert over there agreed a long time ago to carve out at least one day a week from her hectic schedule to have coffee with me. Usually Saturdays. You know, for her social health.\" \n\n\"Yeah, well, I can be sociable when I want to,\" Jude commented neutrally. \n\nRoland lifted an eyebrow, taking in the couple. Natalie's cheeks were flushed, her green eyes bright and a small smile splayed on her lips. Roland grinned at Jude, knowing what had ensued between the two and she chuckled. Jude's face seemed softer, her eyes warm and thoughts jubilant, obviously unaware or unconcerned of her cheerful telepathic broadcast. Roland sat back in her chair, her expression knowing, before picking up her book and resuming her task.\n\nJude mumbled something to Natalie, a reply was made that Roland blocked out whilst reading, and Jude stood. When she was sure her sister was out of earshot, Roland placed the open book back on the table before regarding Natalie. \n\n\"You make my sister disgustingly happy,\" Roland noted flatly, a smile tugging at the corners of her mouth. Natalie stared at her, unsure of Roland's words. \n\nRoland flippantly pried her mind, disregarding any concern for her privacy. Unlike Jude and her pretentious moral code, Roland didn't feel any obligation to have a person's consent before she delved into their thoughts. Instantly, she could sense Natalie's apprehension, her uncertainty, and more importantly, her steadfast love for Jude before she became aware of Roland's presence. It was clear how the woman felt toward her twin, the fervor almost suffocating. \n\n\"No, really. You do. And I'm glad for the both of you. Maybe Jude will quit brooding around her apartment now,\" Roland reiterated, smiling with as much warmth as she could muster before returning back to her book. Jude came out of the coffee shop with two beverages, placing one in front of Natalie and the other in front of herself. For reasons she couldn't understand, a surge of jealousy plagued Roland as she watched the couple from her periphery, an exchange of gazes filled with longing and blatant ardor. \n\nThe question she mulled over was if her twin knew of the connection between them, the unmistakable mutual passion passing through those glances. Roland decided to inquire further, but Jude cleared her throat. Roland sighed, halting her phrenic progress, her eyes peering up from her book to catch her twin glower. \n\nJude was cognizant of Roland's attempt to divulge into the privy of her mind, a scowl present on her features. Roland didn't care, wearing a smug grin on her lips as her eyes lowered to her open book. \n\nAfter a long pause, Roland spoke without lifting her head, \"What are you two doing today?\" \n\nThe couple looked at each other for an answer before Natalie spoke up, her face toward Roland.\n\n\"I think we're just going to take a walk. Enjoy the sun before it starts to rain,\" she suggested before looking to Jude, \"and then I have some lesson plans to work on for this week.\"\n\nThere was the feeling again, almost strong enough to produce a flowery aroma. Ugh, I have to get the fuck out of here, Roland thought to herself. She scoffed with discomfort and a slight shake of her head, almost going unnoticed by Jude. \n\nAlmost. \n\nNatalie touched Jude's arm affectionately, an innocent and automatic movement that Roland noticed as she lifted her eyes slightly. \n\n\"From the look of the clouds, we should probably get going,\" Natalie mentioned. \n\nJude smiled at her paramour and nodded. \"We'll see you later, sis,\" Jude offered before standing. Roland unceremoniously lifted her hand in acknowledgement of their departure, her eyes glued to the novel in her hand.\n\nAs they left the small coffee shop veranda, their pungent love dissipated much to Roland's relief. Looking at the two irritatingly infatuated women forced Roland to evaluate her own love life. Sisters can't help but to compare themselves, and the comparison suffered greatly with Jude's rapid change from cloistress to inamorata. At least while Jude kept herself and her heart locked away, Roland's superficial relationships surpassed Jude's complete lack of any relationship. \n\nNow, however, Roland's calling an Uber for that last conquest of the prior evening- within a few short minutes of being eaten out no less - seemed both shallow and possibly a little cruel. Worse still, Roland took that action not to be considerate, but because she'd read thoughts of spending the night in the visiting blonde's head. The now unquestionably more commitment-phobic twin didn't want Sarah thinking that their purely physical relationship was progressing in any way. \n\nOr was it Susan? No. Sandra? It didn't matter. But shouldn't it?\n\nRoland irately swung her book at another innocent songbird with the misfortune to land on her table.\n\n**\n\nThe room was stuffy, and Camille shuffled in the chair, her cuffed wrists in her lap. It was a strange room, more like a television interrogation cubicle than a room in a research facility. A four-legged folding table was placed directly in the middle of the room, surrounded by three chairs, one of which she occupied. A security camera was tucked in the corner above the door.\n\nShe knew there was a guard at the door, but apart from that, she was alone. The large clock hung on the wall ticked incessantly, nearly driving her bat shit crazy.\n\nHer wrists ached from the subtle chaffing from the tight metal. She wasn't sure why they felt the need to cuff her, as she had no idea where she was, or if she was even in the States anymore. Besides, she was far too fatigued to fight anymore. She wouldn't know where to turn even if she did escape.\n\nThere couldn't possibly be anything they had forgotten to do to her. After the countless EEGs, EKGs, CAT scans, MRIs and blood work, she was over it. \n\nFinally, the door opened, Dr. Thorn herself stepping through with another guard behind her. Camille's eyes squinted at the woman with open hatred.\n\n\"What the hell do you want?\" Camille snarled as Dr. Thorn sat on the opposite side of the table, flattening her pencil skirt before placing her leg over her knee. She sipped idly from a bottle of water before locking her eyes on Camille.\n\n\"It's a pleasure to see you as well, Miss Silva,\" she chirped. \n\n\"Cut the shit. What do you want now, Thorn?\" Camille asked viciously. \n\nDr. Thorn smiled, placing the bottle of water on the table. \"I've decided to offer you a proposition,\" she crooned, her smile sickening. \n\n\"Fuck you,\" Camille snapped, spitting in Thorn's direction, causing the doctor to stand. \n\nDr. Thorn cackled, stepping behind the chair she rose from, her hands gripping the back.\n\n\"It's humorous to me that you still possess such venom, such anger. Your life is mine, whether you agree or not. You sleep when I allow, you eat when I say, you see the light of day if it pleases me. You are no closer to escape than you were five weeks ago. Frankly, you have nothing to lose,\" Dr. Thorn pressed. \n\nCamille's jaw tightened, and she forced the lump in her throat down before any tears could threaten her stoic stance. \n\nShe knew the bitch was right. She'd tried countless times to use her ability to escape, to convince, to persuade, to demand the guards to let her free to no avail. At first, it seemed as if she were chipping away at the doctor's resolve, slowly convincing her to let Camille go. But, as the days turned to weeks, she hardly ate, exercised even less, and sleep eluded her. She was depleted of her strength. She truly had nothing to lose, so she took the bait.\n\n\"What is it?\" She asked. \n\n\"I've decided you have potential beyond sole research purposes. If you cooperate with the premise and achieve the goal set, you will be granted partial freedom.\"\n\n\"Partial?\"\n\n\"You will be under strict observation in residence within the facility, answering to myself or members of my research team without fail,\" Dr. Thorn stressed. Camille snorted, shaking her head.\n\n\"I'm not helping you for pretend freedom,\" she retorted, causing Dr. Thorn to laugh once more.\n\n\"I'm going to explain this to you in terms you'll understand clearer, Miss Silva. If you don't cooperate, I'll be forced to take a closer look at your younger brother. Malcolm isn't it? He possesses an uncanny ability such as yours,\" Thorn sardonically confirmed. \n\nCamille was suddenly flooded with anxiety, her hands trembling and perspiration forming on her scalp. How could she know about Malcolm? Had she unknowingly let it slip at some point in her imprisonment? No, she was certain she never said anything of her family, let alone her brother who shared her condition. Shit. She was quiet for far too long, Dr. Thorn's wicked smile widening, knowing she'd won. \n\nCamille took in a slow, deep breath, steeling herself. For all she knew, Malcolm could be two cells down from her own. But, what she did know was it would help no one to continue the trifling battle with Thorn.\n\n\"What do I have to do?\"\n\n**\n\nThe walk to Pike Place Market from the coffee shop was pleasant enough, the sun sifting through the cloud brought in by a strong front, thick with the promise of rain. Roland enjoyed the chaos of the city pushing from every angle in the midmorning hours. Impatient metro bus drivers honking at the other vehicles, bits of conversation from pedestrians to other commuters on foot or on cell phones. Scattered strings of music lifted from various locations as she walked. She felt at peace with the daily nuisances of the urban jungle, thriving in its intensity.\n\nThe market was full of people, the fish throwers flinging cod and salmon across the narrow walkway between the vendors. The fetid odor mixed with the hot scent of fresh baked pastries left Roland mildly nauseated, however, not as nauseated as she felt within the vicinity of the school teacher and her twin's poignant affection. She headed for the second level below, taking the stairs quickly. It was much quieter on the lower level, less people and even lesser fishy undertones.\n\nTucked between an antique shop and a storefront offering handmade collectables from around the world sat her impulse buy. The window display showcased multiple new bestsellers alongside crumbled secondhand novels. Roland had purchased the idyllic used book store a few years before, refusing to allow her favorite establishment to go under when the rent skyrocketed. Although it was an expensive investment, her twin hadn't an inkling she'd bought it, nor their father. She cherished the store almost as much as the act of reading the books it contained.\n\nThe alluring fragrance of old books, coffee, pressed flowers and a hint of moth balls washed over her as she stepped into the store. She took a lungful of the nostalgic aroma and smiled. At the sound of the tiny bell jingling in the threshold, the white-haired woman sitting behind the desk looked up, beaming when she recognized her.\n\n\"Roland! Did you finish that book already?\" Gladys Murphy asked, her face breaking into profound wrinkles with her elation. She was not only the bookstore's oldest and longest standing employee, but also Roland's friend.\n\nRoland chuckled, placing the well-loved paperback on the desk in front of the sweet woman. \"I sure did. It wasn't as good as I'd hoped. But, it kept my interest until the end. That's saying a lot. Do you have any new suggestions for me?\" Roland asked.\n\nGladys beamed even wider, stepping away from the desk. She grabbed her colorful cane and headed toward one of the isles. \"I do! A large donation came in this morning and I know just the one,\" she exclaimed. Roland followed close behind the old woman as she headed down the narrow isle. The books on the shelves were pristinely organized by genre and author, their conditions varying. Some bindings were brand new while others were frayed or peeling, having been donated.\n\nThe bookstore relied solely on donations prior to Roland taking ownership, but she allotted a far sized monthly budget to keep an influx of new books, at the staff's suggestion. However, they still accepted used books. Gladys led Roland through a door at the end of the isle, leading to the storage space and the small office in the back. Open boxes lay scattered across the floor, books haphazardly placed and nearly overflowing from some. The old woman stopped in front of one of the brimming boxes and pulled one from the top that appeared brand new.",
        "The cover was utterly cheesy, the silhouette of two figures holding each other while the moon shone from behind. The author's name was familiar to Roland from her extensive list of authors to avoid. She smirked, stifling the sarcastic retort threatening to pass her lips. \n\nGod, not a romance, Roland snickered mentally.\n\nInstead, she sobered herself before speaking. \"Oh, Gladys, I don't know. She's a romance writer. I appreciate the thought, but I'm not really into-\"\n\n\"Hush. You take this. Give it a try, honey. Take a break from the murderous horror novels you love so much. I bet you'll be surprised,\" Gladys insisted, her hand still holding the book.\n\nReluctantly, Roland took it, tucking it under her arm and scanning the backroom before her gaze settled on her employee. \"Okay, I'll try it. Everything else going well around here?\"\n\n\"Yes, it's wonderful. I still don't know what we would do without you, dear,\" she admitted, patting Roland's arm affectionately. \n\n**\n\nCamille hadn't seen another car in at least an hour and they were going 70mph. If her best chance at escape came soon, she'd be damned if she'd be looking back in regret for having not taken it. She peered down at her hands, the thick band wrapped around her wrist blinding periodically. Thorn stressed the importance of this mission, allowing Camille to be unrestrained but with the heavy burden of a tracking device wrapped around her limb. The GPS bracelet was similar to a home arrest anklet and the surface of it agitated Camille's skin.\n\nThorn had warned her prior to leaving her with the two guards that if she attempted to remove it, the chip would send out a signal, immediately informing her of the location and time of removal. Even as it was, Thorn could monitor her whereabouts.\n\nShe sat forward, regarding the passenger. \"Where are we going?\"\n\nThe guard sitting in the passenger seat glared at her, his hand hovering over the Glock in its holster at his waist. Prison garb traded in for blue jeans, a tee and hoodie did nothing to abate her fear of the unknown. She rolled her eyes and peered out the window, willfully ignoring the corporate rent-a-cop's leering threat. A plan was brewing steadily within the confines of her mind as she took in the barren surroundings. Although the sun was only mildly obscured by drifting clouds, she still couldn't tell where they were. The clock on the dash read just past seven in the morning.\n\nThorn gave her abilities quite a bit of credit, more credit than deserved. She was under the assumption that Camille could coerce individuals to join the ranks of test subjects with her inception, to bend their free will. Camille didn't correct her wrongful conjecture, agreeing to the plan and boasting her capability. It offered Camille more than she had been previously granted: a chance at escape.\n\nTendrils of her consciousness threaded from her mind, grasping a tight hold upon her target. \"Point your gun at his head and shoot if I say so,\" she told the passenger, epinephrine surging through her body as she spoke. His face relaxed slightly as he pulled the Glock from his holster and pointed it toward the driver's temple. She was unsure of her own conviction; the thought of killing another human being was unsettling but, the implications of having another kill against their own will was horrifying.\n\nShe looked to the driver, her adrenaline strengthening her reach. \"Pull over all the way off the road,\" she demanded, and the driver did as told without hesitation. A bead of sweat trickled down her forehead as the van came to a stop on the dirt shoulder, shielded by tall brush.\n\nHer jaw clenched as she threw her next command at the driver with more difficulty than the one toward the passenger. \"Put your gun on the dash and slide it to the windshield.\"\n\nThe driver did as told, tossing the gun onto the dash and sliding it across the surface, hitting the glass with a soft tink.\n\n\"Now, put your wallet and phone in the cup holder, step out of the van. Leave the door open and kneel facing the road,\" she dictated, a slight lag time in the action on the driver's part, sliding out of the van and getting to his knees in the rocky dirt of the shoulder. The strain of holding command on two people simultaneously was causing her to battle her own limits, and she was running out of time.\n\n\"Cuff your hands behind your back,\" she called. She chewed on her lip as he did this, fear of her control dwindling before she completed her escape.\n\nShe turned her attention to the passenger, \"Give me your gun,\" she said, him complying and handing her the gun. She pointed it at him, the weapon heavy in her hand, \"Put your phone and wallet on the dash and step out of the van. Close the door. Now,\" she snapped, the passenger doing just that. She was sweating profusely from the mental exertion of maintaining a strong control, but she couldn't lose it now.\n\nShe stepped out of the van, meeting the passenger with her gun still trailed on him. \"Kneel and cuff your hands behind your back. Stay right there,\" she stressed.\n\nShe stepped around the van to the driver, poising her gun toward him. \"You, driver, stand up and walk around to where your buddy is and kneel beside him,\" she said. He stood awkwardly, his hands still cuffed behind his back as he stepped around the hood of the van.\n\nKneeling beside his partner, both of their minds were suddenly weak with terror. Camille realized she'd inadvertently set up a gangland style killing position. \n\nKnowing that she'd need to ditch the van as soon as possible and acquiring other means of transportation was going to cost, she pressed herself further. \"You, tell me your debit PIN,\" she pushed, the passenger's voice trembling with fear as he spewed the numbers off. \n\nMentally, she acknowledged there would be a debit limit at the ATM and she feared she wouldn't be able to obtain enough money from just his. She drove herself to her limit, turning her attention to the driver. \"You. Tell me your debit PIN,\" she held her breath until the driver told her.\n\nWith one last look at the two handcuffed men, she quickly climbed into the driver's side, punching the PIN numbers into the passenger's phone, which they had been using for GPS directions. The location they were directed in was Boise, Idaho and she decided that was a good a place as any. \n\nShe drove off, knowing she only had several hours to a day at most before the rent-a-cops would be able to communicate back to their bosses that they were no longer in the van with her.\n\n**\n\nThe farmer's market was crowded as Jude perused the local florist's variety of different flowers, from out of season tulips to vibrant sunflowers. Artificially multicolor carnations and traditional roses. Natalie hadn't told her what her favorite flower was nor had Jude asked her. She sighed, her fingertips grazing the petals of a red rose. \n\nWhat could convey her feelings for the woman who had captured her so instantly, so intimately in such a seemingly minuscule timeframe? A bouquet of flowers wouldn't do, nor would any material item Jude could find within the borders of the market or anywhere.\n\nGrudgingly, she chose a bundle of light pink gerbera daisies in a blue billowed vase. The young man working the register tied a delicate velvet ribbon around the neck before handing it back to her. After paying the vendor, she moved on, her eyes on the differing stands.\n\nLike some love-sick puppy, her feelings didn't dwindle since her and Natalie's last night together and had steadily amplified into something that Jude was unfamiliar with but recognized. Expressing her thoughts to Natalie was out of the question, the fear of the feelings being less than mutual. It had only been a handful of weeks since their first meeting, restraining Jude from divulging in any type of verbal confession.\n\nNo, she didn't want to scare the poor woman off before they could build a relationship together. Albeit new to relationships in general, Jude knew it wasn't normal to have such intense feelings of amorousness this soon. But, she was also convinced it wasn't simply a case of infatuation.\n\nEven entertaining the thought of losing Natalie caused her physical pain. I knew this woman would drive me crazy, she thought as she absently eyed an aromatic array of overripe peaches and blackberries at one of the produce stands.\n\nNatalie had invited Jude to her home that evening, to officially meet her cousin, Jamie, and to have dinner with her. Jude's normal confidence was thrown awry during the last week and she wasn't sure how she was going to act during their dinner. \n\nAll she knew was she needed to make a good first impression on the only family Natalie had.\n\n**\n\nCamille sat in the parking lot of a big box department store on the outskirts of Boise, Idaho shoving her newly purchased items in the small backpack she bought. With what she'd stolen from the rent-a-cops, she'd managed some basic clothing, toiletry essentials, a small first aid kid, a decent pair of running shoes, a few lightweight books, a watch and make-up. \n\nShe'd used one of their debit cards for the transaction, figuring she'd be tied to that location by dumping the van there anyway, it didn't matter much being on the security cameras. The same for when she took out the cash from the ATM, only being allotted $500 from each card. It would have to do.\n\nThe cash she had taken from their wallets combined with the withdrawal from the debit cards, she had a little over $1,500 to work with. She rummaged through the van in search of anything else valuable, only finding some trashy snacks and a lighter, which she pocketed. And then she came upon a large envelope. She opened it, slipping out a thick packet of paper.\n\nNames, addresses and basic demographics lined the top sheet of paper, followed by several other stapled packets. Camille gasped, realizing what the information was. Twenty-six people in total on the list. Twenty-six people Thorn had exhaustive information gathered upon. The people Thorn wanted Camille to coerce into working with the godforsaken project.\n\nShe peered at the packets beneath the face sheet, their entire demographics, their records, social security numbers, home addresses, places of employment, social media accounts, abilities, everything. Their entire lives minimized and neatly complied in a compact packet of information. \n\nThe locations of the aberrant individuals listed varied in only four states: Idaho, Washington, Oregon, and California. She was in Idaho and already grew wary of still being there. California would cost too much, as would Oregon.\n\nShe settled for Washington, scanning the cities where the people were located. One in Kent, another in Yakima, four in Aberdeen, five in Seattle. She figured Seattle would be the largest and most densely populated location. Okay, now she had to figure out which person would be helpful. Clairvoyant, psionic, two telepaths, and a fortune teller. She scoffed and shook her head. She figured a telepath or clairvoyant wouldn't be all that helpful but, someone with psionic powers would indeed have potential. The psionic technopath being able to delve deeper into the online database would be an incredible resource, especially as a means of locating her brother.\n\nShe considered searching directions to the stranger's location on one of the smart phones but decided it was too risky. Picking up the phone, she searched one of the addresses for a person in California, then one in Idaho, hoping maybe when they located the van and searched it, it would give them a false lead. If anything, it made her feel like she was, instead of simply smashing their screens and rendering them useless.\n\nAfter completing another survey of the van contents and shoving the envelope into her backpack, she left the debit cards, cell phones, wallets, and guns in the glovebox. She'd wiped as much down with a damp cloth as possible to displace any of her fingerprints, but there wasn't much she could do about the general surfaces of the van. It was time to ditch the vehicle.\n\nShe got out, pulling on the bland gray hoodie she bought and throwing the backpack over her shoulders before heading out of the parking lot. The Greyhound station was two miles on foot from where she dumped the van, having memorized the directions. She tried not to run, her pace a steady walk. \n\nWhen the station was in view, she dipped into an alleyway and placed the backpack on the ground, opening the first aid kit. She grabbed the tiny pair of scissors and positioned them under the thick plastic tracking device and cut it off. Tossing it into a cavernous dumpster, she donned the backpack once again and took off toward the bus station. \n\nThe first bus she climbed on took her to Kennewick, where she caught a connection to Yakima, then, proceeded toward a bus station just outside of Seattle. She managed a restless two hour nap on that bus, reluctant to wake upon arriving at the transfer center in Bellevue, but she had to catch another to get into Seattle. \n\nAt the transfer station in Seattle, fatigue had all but consumed her and the thought of requesting a ride share pick up tempting. She had laughed at herself inwardly, the two stolen phones gone and any way of requesting such transportation out of the question. A quick trip to the bathroom and some cold water to the face, Camille felt slightly better when she exited the rest room. She needed to figure out where the closest store was she could buy a burner phone or a tablet, something with WiFi capabilities that couldn't be tracked. \n\nShe scanned the densely populated area, deciding to ask a kid who appeared to be in his late teens. He told her of two cell phone stores up the road, pointing toward the intersection. She thanked him and hurried off toward Pine street.\n\nIt was easy enough to find and she spent a measly $40 on the little tablet at one of the cellphone stores. She found an Internet caf\u00e9 close by and allowed herself to a strong espresso and a muffin, stealing a spot at the back of the shop. After she activated the tablet and snagged the WiFi, she slipped the sheet with Allen Bronson's info out of her backpack and typed in the address. It was only a few miles away from the caf\u00e9, and she sighed with relief.\n\nShe closed her eyes and soaked in the normalcy of the sounds and scents around her for a moment.\n\nOpening them, she accepted the circumstances of what brought her to the city. She attempted to fend off a transient notion of a mental breakdown, the fatigue and debility warring in her head. She needed to move forward, the lingering adrenaline diminishing. The two-hour nap she managed was certainly the only thing keeping her from falling over. She downed the caffeinated beverage, took screen shots of the map directions for later use when WiFi was unavailable, and left the caf\u00e9. \n\n**\n\n\"You're cooking her dinner and  dessert? Look at you, being all domestic and shit,\" Jamie commented brusquely as she passed behind Natalie and grabbed a beer from the refrigerator. \n\nNatalie turned to throw her cousin a miffed look before she continued to stir the creamy sauce. She added the prosciutto to the milky mixture, letting herself smirk at Jamie's comment. If she was honest with herself, she did feel rather domestic, standing in front of the stove, her toes curling on the plush kitchen rug that sat on over the tile and her flowery skirt tickling her knees.\n\nJamie put herself beside Natalie, catching her attention with a wide grin. \"And you're barefoot? Oh. My. God.\"\n\nNatalie whacked Jamie's arm with a smile of her own. \"She made me dinner, so I'm making her dinner this time. It's only fair.\"\n\n\"I'm kind of sorry I won't be here tonight to help you keep your dignity. It's like you're trying to get laid or something,\" Jamie speculated. She was going on a date of her own, not expecting to be back for the evening, much to Natalie's delight. Natalie's cheeks flared, and she became very interested in the empty pot of water behind the sauce, watching the steam billow up.\n\n\"Wait a second. Did you already sleep with her?\" Jamie gasped. When Natalie didn't answer, Jamie continued, \"Natalie! You two just met, what, a few weeks ago?\"\n\nNatalie was suddenly not very fond of her cousin's strong familial intuition as she threw the bowtie pasta in the now boiling water. The week had been busy, her school routine taking over most of her free time after work, and she hadn't disclosed the extent of her blossoming romance to Jamie just yet. \n\nShe stirred the sauce and lidded the pan, then running the wooden spoon in the pot of pasta. Jamie held her tongue until Natalie turned, her back to the stove and her embarrassment evident on her red face. She never could get away with hiding her blush against her nearly alabaster skin.\n\n\"It just kind of happened. You know I don't usually do things like that but, I don't know. Jude's so different,\" Natalie gushed. Jamie reached out and touched Natalie's arm, her sarcasm replaced with kindness.\n\n\"Natalie, I was only giving you a hard time. I can tell you already care about her a lot. Just, be careful,\" Jamie warned, squeezing Natalie's arm. \"If she hurts you, I might have to take a hit out on her.\"\n\nNatalie's throat tightened at the thought of Jude hurting her but, somehow, she knew Jude wouldn't. \"I don't think she'd hurt me. I won't stop you, though, if I end up being wrong,\" Natalie laughed. \"Now, grab me some ramekins so I can throw these souffl\u00e9s in the oven.\"\n\nJamie shook her head whilst still giggling and went to the hall pantry to do as Natalie had instructed. When she reentered the kitchen, her face was serious as she placed the ceramic cups on the counter and waited for Natalie to look up. Her face held a cautiously astute expression as she watched Natalie.\n\n\"Why are you staring at me like that?\" Natalie asked.\n\n\"You're in love, aren't you?\" Jamie suspected. Natalie's eyes widened, and she sighed amiably at Jamie who in turn grinned.\n\n\"Jesus, you're adorable. I'm so happy for you,\" Jamie wrapped her arms around her cousin, hugging Natalie tightly before releasing her and straightening her facial features.\n\n\"But, my threat still holds. I don't give a shit if you love her or not. She hurts you, I'll have to fight her,\" Jamie added nonchalantly.\n\nAs Natalie bowled the raw chocolate deliciousness into the ramekins, the doorbell rang. She eased them into oven as carefully and quickly as possible. Before she could head to the door, Jamie called out to her from the living room. \"I'll get it!\"\n\nJamie stood with the door open, thankfully a smile on her face as Jude walked into the entryway. She was gorgeous, as always, and her short dark hair tamed, eliciting a profound need within Natalie to dishevel it with certain activities. A beautiful bouquet of daises was in her hand and Natalie smiled. She blushed heavily when Jude's eyes met hers, ignoring whatever Jamie was saying to her as she held the steady, ardent gaze.\n\n\"Natalie,\" Jamie repeated.\n\nNatalie ripped her eyes away from her lover long enough to take in the irritation on her cousin's face. \"What?\"\n\n\"I said I have to get going soon,\" she laughed before looking at Natalie's source of engrossment, \"It was great to officially meet you, Jude. I hope you guys have a nice evening in. Natalie made a kickass dinner for you,\" Jamie gestured to the aromatic kitchen and then headed down the hall to get ready for her own evening.\n\n**\n\nThe brick building looked quite out of place in the seemingly affluent neighborhood of the central district with its weathered brick walls and crumbling stoop. Overhead, a helicopter swept the sky toward downtown Seattle, the blades audibly slicing through the evening air.\n\nShe gingerly walked up the cracked cement stoop, taking in the splintered glass windows and tower of decaying newspapers beside the door. If anyone actually resided within the home, Camille questioned whether they would help her when it appeared they needed help themselves. She shook her head, understanding she hadn't many options as she raised her hand and knocked.",
        "The day was beginning to shuffle into night in that part of the city, the number of cars on the street increasing, voices of pedestrians lifting from behind her as she knocked again. Growing up in Cleveland gave Camille a healthy respect for the night life, as in staying the hell away from particular parts of the city when the sun went down. \n\nAlthough the neighborhood didn't appear to be threatening, she couldn't ignore the ominous malice she felt surrounding her. The small backpack felt heavier, her persistence being replaced by the need to sleep and the fear of an unknown city. She peered over her shoulder and realized she should probably knock louder.\n\nJust as her fist made contact with the door, it opened, almost causing her to topple over. A tall brute of a man stood before her, long red hair pulled back in a bun and grizzly carmine beard trailing to mid chest. His green eyes pierced her as she stood suddenly feeling very minuscule.\n\n\"Can I help you?\" he snapped.\n\nCamille opened her mouth but felt incredibly dumb. She hadn't thought of what to say, except the obvious. \"I need your help,\" she managed, her voice soft to her own ears.\n\nHe took in the sight of her worn face, the backpack on her slight shoulders and clothes rumpled from travel. A flash of recognition shone of his face. He shook his head, stepping back and gesturing her into his home with a chuckle. \"I had a feeling you were coming,\" he said with insouciance, his voice deep and resounding.\n\nShe stared at him dubiously. \"Wait, what? You knew I was coming here? How?\"\n\nHe shook his head again and pointed inside. \"I'll explain but not on my shitty front porch,\" he averred before turning and heading through the small entryway. \n\nShe followed behind, closing the door. Past the entryway led a long narrow hall, the walls appearing as desolate as the outside of the building. After several paces, she followed the tall redhead to the end of the hall, the two emptying into a massive living area, a computer station set up on the far wall. Calling it a desk wouldn't do it justice. The colossal post was comparable to what one might imagine being erected within the confines of a government intelligence agency or NASA.\n\n\"Welcome to the Aberrant Half-way house,\" he said with a sarcastic flourish, indicating to an ugly array of mix-matched chairs, an overstuffed black leather couch, and matching loveseat clustered around a battered wooden coffee table. He plopped down on the black couch and watched her expectantly. \"Don't just stand there. Sit and make yourself comfortable. You look exhausted,\" he picked up a mug from the coffee table, bold lettering on the surface of the mug reading  I Can't Adult Today.\n\nCamille obeyed, slipping the bag from her back off before easing down on the loveseat. She waited for an explanation from the stranger as he sipped from a mug on the coffee table between them.\n\n\"I'm Allen. And you're Camille Silva, I take it?\" after she nodded, he continued. \"When you cut off your tracking device, I got a notification on my software that's linked with the project,\" when he saw Camille's confused expression and her posture stiffen, he continued, \"I'm not working with them, but I do like to know what those bastards are up to. They've been watching me for years, or so they think. I only show them what they want to see, like breaching heavily firewalled sites and hacking shit just for fun,\" he smirked.\n\nCamille sat and politely listened, still not quite understanding.\n\n\"What I've truly been doing is keeping tabs on their illegal activity, cataloguing the aberrants within my own database, making connections and corrections as I see fit. I know what was planned for you, what they wanted you to do. It's disgusting they think of us as cattle to be herded for their research. Like we're some genetic research pool.\"\n\nCamille thought of the envelope she found in the van, the list of people with abilities for her to choose from in terms of recruitment. If he had access to the database where that information was taken from, maybe he would have a way to look up what they had on Malcolm.\n\n\"Wait a second,\" she zipped open the backpack, pulling the papers from its depths and handing them to Allen. He accepted the load and placed it on his lap. Camille watched him expectantly.\n\nHis eyes scanned over the list, his expression unwavering as he took in the various names. \"There are a lot more than this in the city. Shit, there's more in this house,\" he said with a chuckle.\n\nThis piqued her interest. \"You aren't the only one here?\"\n\nAllen shook his head, scratching his scraggly beard. \"Oh, no. It's me, Brian, and Dylan. They found me on one of my forums. They're two brothers from southern Cali and were approached by the project after an incident. Luckily, we'd already been corresponding and they came right up to my little halfway house before anything happened,\" he laughed at his own joke.\n\nCamille sat up, intrigued. \"Where are they now?\"\n\nHe took a sip from the mug on the coffee table before speaking. \"I only make so much money offering my hacking services. Dylan works at a restaurant under the table and Brian is a street performer,\" he shrugged, crossing his leg over the other. \"It helps pay the bills.\"\n\nShe nodded, settling back in the couch, curbing a yawn before remembering her question. \"Do you have information on all of the aberrants in the country?\"\n\nHe shook his head, \"Nah, not all of them. But I do know far more than they do, fortunately. My database is compiled with information they have obtained in combination with my own research and knowledge. I've got a couple of encrypted sites and forums where a handful of aberrants meet and discuss stuff, like the one Brian found me on. Usually mundane, sometimes serious.\"\n\nCamille dug a water bottle from the bag, taking a sip before speaking. \"Do you think you could find someone?\"\n\n**\n\nJude wrapped an arm around Natalie's shoulder as they sat on the couch. Over fifteen minutes of indecision and debate, they finally agreed on a psychological thriller on one of the more popular streaming apps. Natalie sunk into Jude's embrace, a sense of serenity in being so close to Jude. She relished in Jude's scent surrounding her, the strength of her arm holding her, the habitual rising and falling of her chest. She felt happier than she had in quite some time, simply basking in being beside her lover. \n\nAnd then it hit her. Natalie was struck with the desire, no, the overwhelming need to create. It was an all-consuming exigency to put brush to canvas. \n\n\"I'll be right back,\" Natalie said, shooting Jude an apologetic look. Wriggling from Jude's arm around her shoulders, Natalie slipped from the couch. Her bare feet padded across the hardwood floor as she hurried to her bedroom, her skirt fluttering from her alacrity. Yanking her supplies from her closet, Natalie found a fresh canvas and her paints, tossing them on her bed a she hastily set up her easel. \n\nNothing else mattered but the image in her head, an impetuous yearning she couldn't deny. She loved Jude, with every infinitesimal atom in her body and she let go of her fear of Jude's rejection to this zeal. Her hands moved fast, praying to any deity listening that she could illustrate with quality of what she saw, what she felt within her. With languid strokes, jade spread across the surface, then a mixed topaz. A shutter of pale yellow, a collision of teal, a percussion of crimson. Her hands were steady now, fixated on the chromatic symphony.\n\nWith near trembling legs, Natalie took a few steps back to take in the result of her cathartic outburst. Her chest was heaving, her body galvanized. It was perfect. Natalie stared hard at the painting, her breath slowing, finding solace in its inception. Finally, the seemingly chimerical image was gingerly rectified. She laughed madly, a tear slipping down her cheek as Jude's arms wrapped around her from behind.\n\n\"It's incredible,\" Jude whispered beside her ear. Natalie shivered into Jude's body, feeling her breasts pressed against her back, tears trailing down. She swiped impatiently at her face, embarrassed.\n\n\"I'm sorry. I swear I'm not usually this emotional,\" Natalie explained. Jude snuggled tighter, kissing Natalie's cheek from behind. \"And, I'm done for now,\" Natalie added, turning to wrap her own arms around Jude's neck, kissing her. \n\nJude pulled back, her cerulean eyes piercing Natalie. She opened her mouth and shut it, closing her eyes with a grin. When she opened them again and spoke, her voice was hardly above a whisper. \"Natalie, I know we've only known each other for a short time but,\" she paused, stealing another kiss from Natalie before continuing.\n\nNatalie's heart raced, her mind whirling, her eyes watching Jude.\n\nJude pressed her forehead to Natalie's. \"I love you,\" Jude breathed, her face aglow, eyes glazed with longing.\n\nNatalie felt hot tears falling again, and she giggled. \"Jude, I love you too,\" she managed before she allowed her desire to consume her.\n\nNatalie grabbed the collar of Jude's shirt, tugging her toward the bed. Unlike their first night together, Natalie was determined to see every naked expanse of skin, to devour every part of her. There was no rush, the only urgency she felt was to search the contours of Jude's body.\n\nJude fell to her back on the bed, Natalie straddling her with her thighs on her side of Jude's. She dipped her head down, kissing Jude fiercely, her hands inching Jude's tee shirt up and over her head. Jude grumbled slightly when the kiss broke to release her shirt from around her neck, Natalie giggling at her impatience. She pulled her own shirt over her head to stave off any further disconnection from their lips and kissed her greedily.\n\nJude's hands grasped her sides, her fingertips burning her flesh with lust in their path to remove her skirt. Natalie frantically unbutton Jude's jeans and helped her pull them down, tossing them aside on the floor beside where her finished masterpiece sat snuggly on its easel, out of harm's way.\n\nForgoing the removal of the skirt, Jude's fingers tugged at the cotton fabric, wading it up and reaching Natalie's panties with ease. Her hand swept under the waistband, Natalie moaning when she made contact with her wet center. Her urgency to revel in the exploration of Jude's body was halted, her own body reacting to her lover's deft touch. Jude found her clit and brushed it lightly with her finger, Natalie's legs trembling. She suddenly found it very difficult to stay above her lover.\n\n\"Lay with me,\" Jude suggested, and Natalie obliged, pushing the blankets off the queen bed and situating herself beside Jude, her hand swiftly slipping beneath Jude's boxers. Jude chuckled as she leaned in, her lips against Natalie's once more. Her tongue caressed Natalie's with the same aptitude as the hand on Natalie's wetness below.\n\nJude's laughter was snuffed as Natalie's thumb grazed her hooded clit and she slipped a finger into her core, Jude whimpering against Natalie's open mouth. Natalie felt Jude's fingers dip into her, mimicking her own movements and she moaned sharply. Her head fell toward Jude's in the overwhelming sensation of pleasing and being pleased. Natalie felt the fingers of Jude's free hand raking down her side as she plunged deeper into her depths.\n\n\"Oh, Jude. God, I'm so close already,\" she breathed, the headiness of the oncoming orgasm biting at her patience as she quickened her thumb's pace over Jude's clit. \n\nShe felt Jude's muscles deliciously tighten around her finger, a drawn out groan coming from her lover's mouth, sending her over the edge. \"Oh, Jude,\" she panted.\n\n\"Natalie,\" Jude whimpered, her body shuddering and on fire as she plunged her digits into her lover.\n\nThey held each other in the aftershocks of their fervency, their breath collectively slowing, their hands gripping each other. Jude opened her eyes to find Natalie's emerald gaze watching her, a soft smile on her lips. Natalie kissed her, a painter's delicate brush.\n\n\"I love you,\" Natalie said aloud. Jude held her closer yet, kissing her on her lips once more, her forehead, both cheeks, and her chin. She pulled back and set her steady sight on Natalie.\n\n\"I love you, too,\" she whispered, wrapping her arms around Natalie tightly, reveling in their newfound ardor. \n\n**\n\nThe information the project had on Camille's brother was limited but, the important knowledge was Thorn didn't have him in custody. Every basic instinct should've steered Camille into not trusting the complete stranger. But, she felt safe in the home of Allen Bronson, even if he called it his little 'half-way house'. Safe enough that when he showed her to a vacant room with a bed, she passed out with ease.\n\nThe exhaustion had finally taken over and she dreamlessly slept for a few hours. When she woke, she found a pair of yoga pants and a tee shirt from her backpack and headed down the long, winding stairs to the strange living area with his computer set up. Her watch said it was just after eight in the morning and he was still where she left him, sitting in front of the bank of monitors.\n\n\"Do you sleep?\" She inquired as she stepped closer to the screens.\n\nAllen shook his head and nearly chortled. \"Eh, not really. I usually sleep a few hours and I'm good to go. Especially when I'm involved in a situation. I found your brother. Sent him an encrypted text.\"\n\nCamille knelt beside his wheeled computer chair and looked at the screen he indicated. She absently wondered what the hell her brother was doing up so early, the first message Allen having sent around one in the morning and he immediately responded. The long back and forth conversation between the two was pulled up, Allen giving a decent summary of what Camille had told him about her last few weeks.\n\nVarious rows of her brother replying with a demand for proof. She glanced at Allen's face. \"How can we prove to him we're for real?\" she figured her brother would be na\u00efve enough to go with it but was thankful he was leery of the circumstances that sparked Allen contacting him.\n\n\"We could always show him,\" he offered, plugging in a couple of numbers causing one of five screens to shudder and darken. \"Come closer, he won't be able to see you from down there,\" Allen suggested. \n\nCamille stood, unsure of his motives until the black screen suddenly displayed her brother's face in real time.\n\nMalcolm's hazel eyes widened, and he peered over his shoulder, bewilderment on his features when he looked back at his phone. \"What the fuck?\" he hissed, taking in Allen and Camille a second time.\n\nShe then noticed the tiny camera based on top of the monitor where her brother's face was staring back at her. She turned to Allen. \"How did you do that?\" She muttered with disbelief.\n\nHe shrugged, glancing at Camille. \"It's incredibly easy to FaceTime a phone from a computer. And, don't worry, this videocall is far too encrypted for them to breach as long as we keep it brief. And before you ask, I have my ways, \" he alluded before turning to the screen, \"Let's make this quick. Malcolm, is this proof enough?\"\n\nHer brother stared in disbelief before his found his voice. \"Cammie, it's been weeks. I thought you were dead! Is he telling the truth? Were you really kidnapped?\"\n\nShe nodded, fear knotting her stomach that he would be next. \"Yes, and they know about your ability too. I don't think you're safe, Malcolm,\" she stressed.\n\nAllen leaned forward, his eyes directly at the camera. \"How fast do you think you could get to Seattle?\"\n\n**\n\nThree days later, Camille sat across the room from her brother, Malcolm and the two brothers from California.\n\nLuckily, Malcolm had turned eighteen that past spring, abating the fear of him being wanted as a runaway. Allen had managed to set up a strict itinerary for her younger sibling after sending money through a diverted account to Malcolm's savings their parents had set up for him as a child. \n\nAllen had him pull the money out and ditch his phone before catching the first of many buses on his long travel from Cleveland to Seattle. The trip only put him out a little over $200, only transferring to disrupt, if any, trace on his whereabouts. Allen waited until he arrived to completely explain the resistance to both siblings.\n\nHe explained in detail about the various aberrant abilities in the community he created online as well as in person. They ranged from what the siblings had to Allen's unnatural ability to bend and manipulate electrical wavelengths and, subsequently, the ease of breaking down firewalls and protective electronic mediums. His talents were irreplaceable to a career hacker.\n\nOne thing they had in common was the press from a certain research group, reaching out to different individuals. Just as she had found Camille, Dr. Thorn had been scouring the country for similar individuals, approaching Brian and Dylan after a bout of their pyrotechnic skills being exposed during a concert gig. A friend of Allen's turned up missing, and then another in a different state.\n\nHe began to dig into the information he had, discovering the clandestine Project Caydence. At first glance, it seemed to be synonymous with a certain illegal project executed by the CIA in the 1950's and '60s only to unveil it was corporately funded rather than government. This, he explained, made it possible to dismantle their power.\n\nHis plan was to expose the illicit project but, to do that, they needed help. With many of the other aberrants he knew either too fearful or too destitute to assist, they had to find other means of assistance. Allen held the now crumpled packet Camille brought with her in his hand and turned to look at her. \"Hey, we've got a candidate.\"\n\nShe pulled the wheeled chair she sat on over to the computer desk beside him and peered over his shoulder at the names he highlighted. \"Telepaths?\" Camille inquired, dubiously glancing at Allen. She wasn't sure how their talents would help them bring down a heavily funded, multi-faceted illegal scientific research study spanning the entire country. The screen held much more information than the highlighted page, the details enclosed overwhelming.\n\nHe nodded, \"Yeah, but they're loaded and right here in the city,\" he claimed, obviously aware of her doubt even with his eyes still on the monitor in front of him. \"Roland and Jude Costello. Daughters of some big wig pharmaceutical CEO. Now, I'm not too sure of Jude, but I know a thing or two about Roland,\" he admitted with a grin.\n\nCamille sat closer, her brother peering over their shoulders after coming back from the kitchen, crunching chips obnoxiously in her ear. She was glad he was safe and out of potential harm but, she still found his eating and general teenage boy behavior cringe-worthy.\n\nAllen typed furiously on the keyboard, his brows scrunched. \"Ah, here it is,\" he finally said, a window opening to a social media site. Camille chuckled when she saw a hashtag for the woman in question:\n\n#CostelloFlyTrap\n\n\"Wow, I'm not sure that's the kind of social media following I would want,\" she interjected. The countless tweets beneath the trending tag were varied; some women boasting their encounters with the promiscuous woman, others slewing obscene text.\n\nMalcolm's chewing momentarily ceased, \"Cam, what's a pillow queen?\"\n\nCamille ignored her brother's blissful ignorance, unwilling to disclose the meaning of the term to him. Dylan cleared his throat and began to say something, but Camille turned toward him with a threatening glare, stifling his explanation. Brian chortled loudly beside his brother with a shake of his head, causing his blond curls to bob back and forth.\n\nRegardless of Malcolm technically being an adult, he was still her baby brother and she wouldn't allow anyone to displace his innocence. She turned her attention back to Allen. \"You're sure about this?\"",
        "Allen shrugged. \"It's worth a try, right? Do you think either of you would be up to the challenge of a little mind control on her?\"\n\nCamille sighed impatiently, \"That's not really how it works. It's more of a persuading movement, like bending their will rather than just out right taking control. And it helps when we're under stress or in danger,\" she added, her thoughts on her narrow escape from the van.\n\n\"Besides, bending her mind wouldn't work long enough anyway. Once she figured out what we were doing, she'd immediately distrust us, and thus losing our chance of her helping. Her being a telepath would presumably add to the difficulty. I've never tried to bend a telepath's mind before,\" she looked to Malcolm who shook his head in agreement to that sentiment, although she could tell by his expression he was slightly perturbed at her.\n\n\"Okay, understood,\" Allan started, sitting back in his chair, his face artfully amused. He tented his fingers beneath his chin and fixed his gaze on Camille. \"Then, the question is: who among us would a known lesbian playgirl humor long enough to consider helping our little resistance?\"\n\nCamille's jaw tightened as she glanced about her sausage party of co-conspirators, \"Fuck.\"\n\n**\n\nThe heavy bass of the music thudded pleasantly in Roland's chest as she surveyed the club with a predatory gaze. Seeing Jude all googly-eyed over the school teacher had ignited a sense of irritation Roland couldn't, or wouldn't, analyze. The overpowering fervency was still fresh in her mind almost two weeks later. \n\nShe wasn't angry at Jude, she was quite happy her twin finally allowed someone to tear down the walls of her barren love life, nor was she mad at Natalie. But, it was the plight of her refusal to admit her true feelings to even herself, the jealousy provoked by the unbitted affection and ardor running through the school teacher's head toward her twin. So much so, she bailed on her and Jude's weekly coffee date two Saturdays in a row.\n\nAnd then there was the goddamn book. Roland had finished it in one sitting, devoured it from front to back in earnest, like she'd never read anything like it. The plot was different, she gave it that, but had a strong undertone of the same generic trope found in almost every lesbian romance on the market. She shook her head with disdain. Roland Costello didn't need a relationship; she needed a beautiful woman to share the night with. \n\nRight on cue, she noticed a new face across the bar, big hazel eyes scintillating even in the low light emanating from above the bar, flawless cinnamon cheeks and red lips turned up into a dauntless smile. Her own confident smirk spread across her lips as she jumped down from the tall barstool she had occupied and headed toward the woman. She had found her prey.\n\n\"Hey, I haven't seen you around here before,\" Roland began, looking the woman up and down blatantly with lustful eyes. She was stunning, a beacon of femininity. Black curls daintily falling over her bare shoulders, luscious red lips, and those eyes watching Roland in fascination. The strapless dress she wore matched her lips and was tight around her body, accentuating her curves and contrasting with her dark skin. Roland had to keep herself from staring at the delicious prominence of her breasts stretching the crimson fabric.\n\n\"Hey, yourself,\" she purred, her tone rich and silky, sizing Roland up in her black silk button-up shirt, her nipples clearly visible beneath the soft fabric.\n\nRoland impudently relished in the attention. \"Want to dance?\" she asked, holding her hand out for the woman. Without a word, she took it and was led to the dance floor. Roland took the lead, turning the woman around, her hands on curvaceous hips. \n\nThe woman was almost as tall as Roland, her dark ringlets brushing Roland's face. She moved her own hips to the music, pressing herself against the woman's round ass. The woman leaned her head back, kissing Roland's neck with soft, wet lips. Her breath was rushed and hot over Roland's skin. She smelled delectable, like fresh rain and expensive perfume. Roland couldn't get enough, burying her face into the woman's neck. She had to take this woman home with her, needed to feel those curls dragging over her thighs as she feasted on Roland's desire.\n\nShe halted her movements, turning the woman to face her. \"Let me buy you a drink,\" Roland breathed as the music shifted into a different song.\n\n\"Okay,\" she nodded, Roland taking her hand once more toward a small cluster of tables a short distance from the bar. She pulled out a chair for the woman before taking her own.\n\nThe hazel eyed temptress watched Roland sit across from her at the small table, her cherry lips curling into a smirk. \"Bringing chivalry back to life?\"\n\n\"Something like that,\" Roland remarked as she extended her hand toward her new companion, \"And who do I have the privilege of sharing a drink with?\"\n\nThe woman's smile was as vibrant as her eyes and she accepted Roland's hand. \"Camille. And I already know who you are,\" she divulged.\n\nRoland lifted her eyebrow quizzically at her. \"Oh, do you, Camille?\"\n\n\"Roland Costello. You've got quite the Twitter presence and reputation with the ladies in this city,\" Camille alleged, her smile turning into a devious smirk.\n\n\"Don't let that give you a preconceived notion of my intentions,\" Roland quipped. Of course. She wasn't at all surprised. Her twin had warned her a few months back of a disgruntled past lover blasting her on some social media platform. Roland rolled her eyes internally, her confident smile on the outside. Her reputation preceded most interactions with women, especially in the bar she frequented almost every weekend. Sometimes, even luring women in with a certain expectation.\n\nA cocktail waitress came by to take their beverage orders, and Camille watched Roland closely when the waitress left.\n\nRoland relaxed in the highbacked chair and regarded the beautiful woman across from her. \"What are you expecting from this interaction?\"\n\n\"Nothing in particular. Maybe an authentic connection or perhaps a simple evening. Or, maybe I'm looking for just what your reputation insinuates,\" Camille ventured.\n\nRoland chuckled lightly, the waitress placing their drinks on the table. Roland kept her kept her attention on Camille, sipping her martini without breaking eye contact.  This is going to be an interesting night,  she thought to herself. The woman screaming with femininity held a dominating gaze that Roland was unaccustomed to. \"Maybe we should finish this conversation at my place,\" Roland offered, eager to relish in the woman before her.\n\nCamille tipped her wine glass to her lips, an eyebrow raising at the suggestion. After a generous pull of the red wine, she placed the glass down and nodded. \"That sounds lovely.\"\n\nRoland threw some cash on the table and stood. She took Camille's hand and led her through the club, bodies pressing on either side of them as they made for the door.\n\nRoland handed the tall valet a slip of paper and another attendant was off to find her flashy vehicle. \n\nShe drank in the sight of her companion again and Camille smiled at her, undoubtedly enjoying the hungry gaze. Just as Roland consciously reached out with her mind to test the theory of what the woman was expecting from their liaison, her car pulled up, displacing her efforts.\n\n\"Here you are, Miss Costello,\" the valet interrupted. Roland took the key from the attendant, handing him a fifty and extending her hand with a cavalier flourish toward her vehicle, her eyes on Camille's.\n\n\"Wait, is this the fancy car that has those  Back to the Future doors?\" Camille questioned with excitement. Roland nodded, pressing the button-less key fob to her Tesla. All four of the doors opened, the back 'Falcon' doors reaching up toward the sky in the manner Camille had indicated.\n\n\"For some reason, I imagined you driving a Ferrari. Maybe even a Porsche. But this?\" she gestured her head at the grandiose car.\n\nRoland's lips curled into a shit-eating grin. \"What can I say? I'm environmentally conscious,\" she confessed sheepishly. She hoped the affluent appearing woman was impressed and the thought immediately made her disconcerted. When did she ever feel the need to impress a woman? Usually, it was unnecessary. With her robust confidence, natural magnetism and her seemingly endless supply of money, she needn't add any extravagance before.\n\nThe short drive to Roland's penthouse was quiet. She shot stolen glances at the dark-haired vixen beside her, the both of them grinning when she was caught staring.\n\nAs Roland shut the door, ushering Camille into the spacious living room, she felt unusually bashful. \"Welcome. Can I get you a glass of wine?\" She asked cordially. Camille's eyes were fixated upon the fish tank taking over the wall, gaping at the tropical fish.\n\nShe turned, her eyes gleaming in the light reflected from the tank as she surveyed the rest of the space within her field of vision. \"That'd be wonderful. You have a beautiful home, Roland,\" she said, her gaze halted by Roland.\n\nThe look and comment were made in such earnest, Roland felt herself begin to blush. \"Thank you,\" she smiled outwardly while mentally berating herself, hoping it was as elegant as she intended.\n\nShe headed toward the kitchen, hiding the faint flush in her cheeks from the gorgeous woman's attention. Roland felt uncharacteristically unsure of herself, Camille drawing forth a sense of timorousness she hadn't encountered before. After grabbing two wine glasses and placing them on the counter, Roland pulled out a Cabernet Sauvignon from her wine cooler beside her refrigerator and poured the dark fluid. She suspected her capricious nervousness was brought on by her lack of telepathic prying and she planned to remedy as such when she stepped back into the living room.\n\nCamille was seated on the edge of the couch when Roland re-entered the living room, placing the wine glass in front of her and sitting on the other side of the coffee table. Even a mundane task such as Camille bringing the glass to her lips dripped with sensuality, causing a flutter to emanate within Roland's chest, a steady heat growing within her. \n\n\"This is good,\" Camille nearly moaned as she took another sip from the red liquid.\n\nRoland smirked, taking a sip from her own glass. \"I'm glad you like it. I've got others if you'd like to sample something different. A white perhaps.\"\n\nCamille rose from the couch, rounding the table and perching herself beside Roland, placing a hand meticulously on Roland's thigh.\n\n\"I would actually like to sample something else,\" she breathed, leaning toward Roland. Her lips met Roland's with hurried agility, her tongue snaking out, tracing Roland's lips, gently begging for entry. When Roland opened her mouth, Camille's warm tongue caressed her own, tasting pleasantly of the wine.\n\nCamille's hand found the buttons of Roland's silk top, easing them from their anchor, revealing Roland's undershirt. Her apt hand ran over Roland's stiff nipples, circling back and pinching one gently. Through her coarse groan, Roland reached behind the woman, locating the zipper of the dress and pulling it down. She slipped the strapless dress down, the garment gathering at Camille's waist. Roland broke the kiss, gazing upon the woman beside her on the couch.\n\nHer dark cheeks held a flushed undertone, her lips parted as she watched Roland take in her near naked form. \"Fuck, you are sexy,\" Roland whispered. Camille shot her a playful smile before grabbing Roland's undershirt and pulling it off. She pushed Roland onto the couch, kissing her, her tongue wildly thrashing in Roland's mouth. Roland groaned into her mouth, her hands sliding over Camille's sides. She found the clasp of the other woman's lacy black bra, unhooking it and letting her breasts fall freely against her own.\n\nCamille worked to unbutton Roland's slacks, her knuckle bumping Roland's searing core, taking Roland's lip between her teeth. \"Are we going to do this here?\" She breathed, looking down at Roland. Roland chuckled, urging Camille to stand. The red dress slid the rest of the way down her body, shimmering to the floor of the living room in a pool of carmine at their feet. Roland drank in the sight of Camille in her matching lacy black panties before taking her wrist and guiding her to her bedroom.\n\nCamille possessed Roland's lips with renewed urgency, Roland leading her to the bed with only the basic mental geography of her bedroom to guide her. Again, Camille was on top of Roland, her initial estimation of Camille being reaffirmed with her staunch command. Camille's long fingers taunted the waistband of Roland's boy shorts, yanking them down her thighs and tossing them to the floor.\n\nCamille broke the kiss, her tongue grazing down her jawline, breath hot on Roland's neck. \"Do you have a strap-on?\" Camille whispered in Roland's ear, pulling back to look at her whole she awaited an answer. Roland took pause, considering her options. In her usual sexual encounters as of late, she callously expected oral and stated as much, carefully disassociating before reciprocating the pleasure.\n\nBut, the thought of pleasing the woman in front of her was overwhelmingly arousing. She nodded, breaking from Camille and standing, swaying her naked hips the whole way to the closet for Camille's visual pleasure. After careful consideration, Roland found her purple dildo, leather harness, taking time to find the vibrating bit for the base to increase the intensity. She chuckled at her own thoughtfulness.\n\nRoland quirked an eyebrow at Camille, offering the load in her hands for her appraisal.\n\nShe nodded, reaching for the toy. \"Nice. Would you be so kind to lay down?\" Camille suggested taking the leather harness and toy from Roland. Roland chuckled with a shrug, climbing into the bed and sitting as Camille slipped off the edge and stood. Roland bit her lip, finally pulling her eyes from Camille's luscious breasts to realize what she was doing. She watched the woman with interest as Camille stepped into the harness, adjusting the straps around her shapely legs, her eyes on Roland.\n\n\"I was under the impression I'd be the one welding that,\" Roland confessed with a slight smirk. She was apprehensive, but just mildly, as it had been quite some time since she was on the receiving end of such an action. Not that she didn't enjoy it, but it had been at least a year or two, if not longer. Yeah. Long time ago, she thought to herself as she met Camille's lustrous eyes.\n\nCamille flattened her palm on Roland's chest, pushing her back against the silky sheets, climbing on top of her.\n\nHer lips found Roland's, her tongue flickering over Roland's teeth, the dildo leaning against her thighs. \"You don't want me to?\" Camille breathed, her heavy-lidded eyes provoking and her palm still between Roland's perk breasts. Without waiting for an answer, she leaned in and nuzzled Roland's neck, her tongue making lazy circles.\n\nRoland threw her head back in a deep groan when Camille's lips found her earlobe. \"I didn't say that,\" Roland finally muttered, her body ablaze with a familiar achy need. It had been a long time since she felt so libidinous. Camille nibbled the soft skin between her teeth, yanking Roland's earlobe, eliciting a low moan. How the hell could someone licking her ear feel that good? She knew her ears and neck were erogenous spots for her, but shit, it felt good.\n\nHer hand reached down and caressed Roland's inner thigh, tenderly spreading her legs apart, the other hand languidly touching Roland's small breast. Roland gripped the sheets in her fists.\n\n\"What do you want, then, baby?\" Camille's voice was thick with temptation, her index finger and thumb tightening around Roland's nipple and her other hand brushing her mound. Roland's neck stretched back on its own accord, the pleasure almost unbearable from the nearly chaste touching compared to her usual frenzied encounters.\n\n\"I want you to fuck me,\" she whispered, wanting it more than she could convey. The woman above her knew what she was doing, Roland surmised, and she wanted all of what she intended to do, even if it didn't include her habitually expected cunnilingus. Camille's hand over her mound reached lower, meeting wet, swollen lips. Roland moaned as a finger delved into her, reaching with an agonizingly slow movement. The finger pushed deeper before slipping out, finding her hooded clit and circling the nub leisurely. \n\n\"What was that?\" Camille inquired teasingly. Her teeth nipped Roland's neck and shoulder.\n\nRoland found herself lacking in her usual sarcastic retorts, desire and need clouding her thoughts. \"I said I want you to fuck me, with the strap-on,\" Roland voiced, a nearly imperceptible abrasiveness in her tone. Camille pulled back from her neck and met Roland's eyes, her lips curling mischievously.\n\n\"I'd be happy to oblige,\" she murmured, kissing Roland's lips once more. Her finger ceased its game on her clit and Roland felt the tip of her silicone friend press against her lips, holding her breath with excited expectancy. Camille parted Roland's lips and eased the toy in, her tongue searching the expanses of Roland's mouth. Roland groaned as Camille pushed it completely in, feeling exquisitely full.\n\nCamille pulled her hips back before thrusting into her again and again. Roland's back arched, moaning loudly as her hips met Camille's rhythm. A hand slid between them, the vibration at the base suddenly rattling the toy buried in Roland. She felt electrified, her gut alight with a powerful surge, the already burning pleasure rising to a new height. \"Oh, fuck,\" she panted, against Camille's open mouth. Her hands met Camille's ass, urging her to push harder, deeper, wanting more.\n\nHer speed increased, hips moving fast, and Roland found herself gasping. The fire swirling in her depths was frantic, her chest heaving, her hips jutting up to meet Camille's thrusts. \"Don't stop. Don't stop,\" she begged brazenly, Camille's breath coming in nearly as fast as her own. Roland hoped Camille's pleasure was meeting or exceeding her own, the tender thought crossing her mind before she had a chance to stifle it.\n\nEcstasy hit her, her head lulling back against the pillows, the muscles in her neck taut with the overextension. \"Oh baby, don't stop!\" \n\nHer fingers raked Camille's lower back as she rode her through the orgasm, gapping with the overwhelming sensations taking over her body. \n\nWhen the shuddering that shook her settled, Camille slowed, kissing Roland's cheek as she removed the toy. Roland tried to collect herself mentally as the woman sidled up beside her, wrapping an arm over Roland's naked chest. \n\n\"Jesus Christ, woman,\" Roland muttered, meeting Camille's eyes. She kissed the woman's forehead, the strange tenderness toward the stranger not abating after her needs were met. If anything, Roland felt ravenous, a raging hunger thrumming through her to please the hazel-eyed vixen, to hear her voice heightened on a wave of pleasure.\n\n\"Is that part of your reputation?\"\n\nRoland looked at her questionably. \"Is what?\"\n\n\"That delicate look on your face when you cum?\" Camille inquired.\n\nRoland blinked, mulling over the oddly intimate comment before she retorted. \"I don't know. You tell me.\"\n\nThe corner of Camille's mouth lifted into a crooked smile and Roland felt compelled to kiss those luscious lips again, the red of her lipstick skewed from their sex. She had to taste her, to sample, as if she were one of the exorbitant wines in her kitchen. Hastily, her hands slid the harness from Camille's hips, shedding her cute black panties alongside the dildo. Roland gently pushed Camille down on her back, climbing on top of her. This wasn't unfamiliar territory, but hardly did the thought of reciprocating pleasure cross Roland's mind as of late. Let alone the compulsion.",
        "Camille's eyes watched her with amusement, her lips slightly parted.\n\nRoland dipped her head down, finding a dusky nipple and taking it into her mouth. It tasted wonderful, the texture just right, but she craved more. She nibbled gently, circling her tongue around the little nub before she moved on. Her lips wet and burning with desire, Roland kissed downward, advancing on her target with damp kisses. She met dark curls and hot lips swollen with need. She ran her tongue tentatively over the warmed flesh and Camille's hips twitched, pushing her up toward Roland's waiting mouth.\n\nRoland smirked to herself and licked again, this time Camille moaning loudly. Her hands gripped Camille's curvaceous hips, her thumbs gently rubbing the sensitive skin. Fingers tugged at Roland's hair, Camille's breathing quickening with each languid stroke of Roland's somewhat rusty linguistic talents. Roland couldn't get enough of her flavor, heady and sweet, her tongue reveling in the velvety flesh. Trailing upward, Roland ran circles over Camille's clit, a sharp breath and a tightening of her fingers in Roland's hair that sent a shiver over Roland's back.\n\n\"Right there...right there,\" Camille beseeched breathlessly. Roland momentarily ceased her tongue's pressure, peering up toward the sound of an irritated groan. Roland smirked, licking her own lips at the impatient sounds coming from Camille before replacing her tongue against the needy flesh. Camille cried out at the contact suddenly resuming and her hips jolted toward Roland's face.\n\nRoland parted Camille's slit and slipped two fingers inside, Camille now gasping, her hands falling to her sides as Roland found a cadency within her. \n\nThe moans and groans from above were replaced by erratic breathing and tiny sharp inhales of breath. Both of Camille's hands were back on Roland's head, pressing her face harder to her need as she gained speed toward her impending crest.\n\n\"Oh...oh Roland!\" she uttered before an ear-splitting moan filled the room. Her hips shook and her muscles tightened around Roland's fingers as she continued to pump into her, tongue unrelenting on her sensitive flesh. The sound of hearing her name moaned stirred another type of arousal within Roland and simultaneously satisfied her. \n\nRoland slowly abated her movements when Camille's body lulled into a post-climatic fatigue. She laved the flesh once more before ending her teasing manipulations, crawling up beside the still panting woman.\n\n\"Hey,\" she murmured before kissing the sated woman on the lips. For once in such a long time, Roland didn't wish for her spent lover to leave. She lay down beside her, wrapping an arm beneath Camille's shoulders and pulling the woman toward her. Camille threw her arm over Roland's naked chest, her head positioned against Roland's breasts.\n\n\"Do you want to stay?\" she asked slowly, confounded by her own words.\n\n\"Mhmm,\" Camille sighed with a nod. Roland looked down at the beautiful woman, fingering her black curls hanging loosely around the nape of her neck. Roland had a strange revelation: it was one of the only sexual encounters she had where she hadn't pried beforehand. Not the only one, but those occurrences were few and far between. Roland reached telepathically, discreetly searching for a strand of thought or anything to grasp.\n\n...just amazing. What's wrong with me?\n\nI didn't mean for that to happen. \n\nNot a good idea. I still have to ask her. \n\nHow the fuck do I do that after this? \n\nShe smells so good.  Camille sighed again, snuggling into Roland even further.\n\nRoland's eyebrows scrunched with confusion. The mangled strands of thought were perplexing. What did she want to ask? She chewed her lip, pondering the thought when her fatigue finally took over. She fell asleep, still clutching the woman in her arms.\n\n**\n\nThe dream came with more clarity than her memory served while awake. Roland held Jude's hand in her own as they followed their father's doctor friend and her associate down a brightly illuminated hallway. The twins had been to the clinic two times since their seventh birthday prior to their visit that day. They had come to expect a certain routine upon their arrival, but it was beginning to differ from their previous encounters. \n\n\"Where do you think they're taking us now, Sissie?\" Jude whispered discreetly to Roland, her long jet black hair pulled back into a tight French braid their nanny Margie had fastened with red ribbon. Roland's was pulled back in a similar fashion. Jude's face was forlorn and fearful, as was her thoughts. Roland squeezed her twin's hand in an attempt to extinguish her fear, but her own disquietude hung heavily upon her shoulders. \n\nUnfortunately, with their telepathic connection, Jude could essentially feel Roland's own uncertainty, which in turn fueled hers. The adults stopped at the end of the forked hall.\n\nThe doctor turned to face them after concluding a conversation with her companion. \"Okay girls. Roland, you're coming with me and Jude, you'll be going with Ms. Mavis,\" she said, snatching Roland's free hand while the other woman, Ms. Mavis, grabbed Jude's.\n\nJude held tight of her twin's hand, terror etched on her features and her stance timid. \"But, we're always together. I don't want to go anywhere without Roland,\" she voiced, her tone faltering.\n\n I don't like this,  Roland thought, a deep foreboding encircling her. The doctor looked down at her, a smile plastered on her face that didn't meet her hawklike eyes, furthering the subconscious caveat.\n\n\"Come with me, please, Roland,\" she ordered with a gently tug of Roland's small hand. Roland tried to project serenity and tranquility to her quivering twin, Jude's trembling akin to a teacup chihuahua. \"It'll be okay, Jude.\"\n\nWith one last glance at her sister as she was pulled away by the other woman, Roland turned her focus to where the doctor was leading her. She tried in the past to penetrate the doctor's mind, to poke around, but found her nearly impervious. With only limited knowledge of her intentions, Roland couldn't truly get a feel of what she wanted from the sisters. What she did gather as they walked down the labyrinth of halls wasn't pleasant, and she quickly retreated.\n\nShe let go of the doctor's hand and stood her ground. \"Where are we going?\" She folded her arms over her chest stubbornly, a scowl on her face. Being seven and a half didn't mean she couldn't stick up for herself.\n\nThe doctor took a deep, steadying breath, appearing to feign the breakdown of her resolve as she looked down at Roland. \"Dear, the room is just right over there. We'll be doing a new test today, but nothing scary,\" she paused, searching Roland's face, a darkness shrouding her already obsidian eyes before she continued, \"you wouldn't want to disappoint your father, would you?\" She reached for Roland's arm without awaiting an answer and wrapped her cool fingers around it.\n\n\"Hey! That hurts!\" Roland hollered. The doctor ignored her, yanking her into a nearby door and closing it behind them. The room was small, the fluorescent lights above blindingly bright as they reflected off the tiled walls. A chair sat beside a large piece of machinery with a television screen, wires spilling onto the floor from the equipment and a stubby woman fiddling with knobs. She attached the wires to a trap of black stickers, the plastic clicking loudly. \n\nThe doctor deposited her into the seat, not gently either. \"We're going to conduct a new kind of test today and we need your help. Bonnie will place these stickers on your head and then I'll ask you some questions. You have to answer them truthfully, okay, Roland?\"\n\nRoland stared at the doctor, chewing her lip with skepticism. She nodded, realizing she didn't have much of a choice in the matter. Her helplessness increased as the attendant place the stickers on her head with her nubby fingers, the wires now trailing down her back, seemingly erupting from her scalp and neck. The doctor pulled a wheeled backless chair in front of her. Roland kept her vision on the floor, staring intently at her pink Hello Kitty sneakers. Dr. Thorn eventually cleared her throat, seizing Roland's attention with piercing eyes.\n\n\"Now, tell me what your sister is doing right now,\" she inquired. Roland's eyebrows scrunched together out of concentration and she peered at the doctor precariously. Her and her sister were brought to the clinic to assess their strange connection and telepathic abilities, so it didn't bother her that the doctor knew. It was common knowledge among the clinic staff. What bothered Roland was the suffocating feeling that overcame her when she actively reached out to her twin. \n\nJude was in trouble, her fright so strong Roland hardly had to venture to feel her presence. \"What's happening to her?\" Roland shouted.\n\nThe doctor tried to shield her excitement, but Roland could see it plainly on her face as she leaned closer. \"What is it you sense, Roland?\"\n\nRoland reached further, Jude's horror and panic devastating. \"She's so scared. Please, don't let them hurt her,\" Roland pleaded. Tears streaked her cheeks, the images coming from Jude too unclear to discern what she was enduring. She was flooded with the need to comfort her twin. Panic set in and Roland jumped from the chair, a few wires popping off the stickers attached to her head. The doctor swiftly pushed Roland down, her hands on both shoulders.\n\n\"Let me go! I have to find Jude! She's hurt and she's so scared!\" Roland screamed, her tiny body thrashing violently. \n\nRoland sat up in her king size bed, her tee shirt sticking to her sweat dampened skin. Her heart hammered in her chest and she couldn't slow her breathing. She looked around, her nightmare still lingering on the edges of her consciousness as she raked a shaky hand through her ruffled hair. \n\n\"Fuck,\" she murmured and let herself fall back onto the bed. She stared up at the dark ceiling, willing the sickening feeling to abate. It had been at least a year since she had recalled the traumatic events that took place within the clinic and she was beyond unnerved at their resurfacing. The specific incident ended with her being heavily sedated, awakening in her childhood bed the next day. Jude had bruises at breakfast, tiny pinpricks spanning the olive skin of her arms, some covered in Band-Aids, overs visible. The injuries were acquired from an attempt to draw blood from Jude during Roland's telepathic visitation, to distinguish if there was a hormonal indicator of the ethereal connection. That visit to the clinic had marked the beginning of the torture they endured. \n\nA hand swept Roland's sweaty hair from her face and she froze with trepidation. \"Are you okay?\" whispered a sleepy voice. Roland looked over and met inquisitive hazel eyes.  Camille . The name brought with it its own deluge of feelings very foreign to Roland. She smiled, leaning in to kiss the soft lips, their red stain long gone with their late night endeavor. When she pulled back, the question was still in the air.\n\n**\n\nCamille lifted herself up on an elbow to stare at Roland. Her breath was still coming in faster than it should, a bead of fresh sweat trailing down her forehead and her eyes held a wildness in them that hadn't been there the night before. Camille had watched the other woman thrash in her sleep before shooting up in bed, throwing out a curse into the dark, quiet room before dropping back down on the bed.\n\n\"Yeah, I'm all right,\" Roland finally muttered. Camille knew the woman wasn't being truthful but didn't push. Somehow, she could tell that would only further a disconnect on the other woman's part. Camille caressed Roland's cheek, bringing her lips to hers in a chaste kiss. \n\nRoland was watching her when she pulled back from the kiss, her lips parted and brows furrowed. \"Do you...can we just cuddle?\" Her voice was soft with a hint of vulnerability that caused Camille's chest to tighten. She nodded, wrapping her arms around the taller woman, snuggling back into the warmth of Roland's neck. Peering up at her, Roland's eyes were closed again, a content smile curling her lips as she leaned forward and kissed Camille's forehead.\n\n That was not how last night night was supposed to go, Camille thought absently. \n\nShe was discontented with herself, the plan set up in her mind completely forgone when those sumptuous lips spoke her name. There was something uncanny in the seductive comportment that Roland exuded. It had Camille utterly enthralled. \n\nShe couldn't contain herself when given the opportunity to fuck that hubristic smirk off Roland's face.\n\nCamille felt her face flush in the darkness. Never in her life had she been such a venereal person. By no means was she opposed to intimacy with another woman nor was she celibate, but she had never felt so compelled to ravish someone. It was empowering, and its beauty was beyond comparison. Camille was so completely entranced by the lascivious woman, she forgot the premise of their meeting. \n\nShe still had to persuade Roland to join the ranks of their little resistance, or at least stage a fund. What if she chose not to help them? Who would be their next target in their search for proper funding? Would she ever see Roland again after their night concluded? All of it was questionable and she knew the only way to find out was asking Roland outright. In retrospect, she should've been forthright with her at the start. \n\nA thought occurred to Camille that made her nearly gasp. Roland was a telepath. Did she already know what Camille wanted to ask her? Could she hear her thoughts that easily?\n\n\"I can hear them clearly, sometimes,\" Roland whispered against her hair. Camille did gasp then. She pulled away from Roland, shame darkening her face as she peered down at the woman.\n\n\"Let me explain,\" Camille stuttered, trying to grasp the anomalous interaction. Roland's eyes narrowed as she glared hard at Camille.\n\n\"I don't want to hear anything until you tell me who the fuck you really are.\"\n\n**\n\nNatalie snuggled in closer to Jude, the warmth of her bed and her lover causing her to put off the inevitable need to go to the bathroom. Bruce the dog placed his head on the edge of the bed, his brown eyes watching his owner with expectancy. Natalie surmised that he, too needed to make his own trip outside. With a grumble, Natalie slipped out from under the blankets, Jude reaching for her. \"I've got to take Bruce out,\" she whispered, placating Jude with a soft kiss.\n\nNatalie used the bathroom and hastily chose some clothes, Bruce's whining increasing with his impatience. Jude's watchful eyes trailing over Natalie as she dressed caused a fresh blush to creep to her cheeks and she smiled at her.\n\n\"Do you want me to come?\" Jude asked, the blankets wrapped around her like a shawl as she sat up in the bed, hair adorably ruffled from sleep.\n\nNatalie shook her head, shimming on a pair of jeans and throwing a pull over hoodie on. \"It's okay. I'll be as quick as possible,\" she promised, leaning in to kiss Jude again before ushering her restless mutt out the door.\n\nThe morning was sunny, a warmth settling over the city despite the gusts of wind. Families picnicked in Magnuson Park, Bruce's favorite trotting grounds and after a sufficient stroll around the park, Natalie was heading back to her townhouse.\n\nUnfortunately, a light rain had begun, sprinkling over the picturesque scene in the park. Natalie donned the hood of her sweatshirt and hurried to the edge of the sidewalk.\n\nThe light at the intersection turned red right as she approached the curb, pulling on Bruce's lead to stop him. She grabbed her phone from her pocket and sent Jude a quick text letting her know she was on her way back. A noise from across the street caught her attention.\n\nA small child was tugging at a woman's hand, bucking his body toward the road as cars sped by. \"Momma! My truck! My truck! It's gonna get hit, momma,\" the child's shrill voice called out to who Natalie presumed was his mother. The woman's face was drawn with fatigue, a baby securely attached to her back in some type of carrier, wailing almost as loudly as their brother.\n\nThe mother attempted to placate the tot, getting to his level and speaking in hushed, soothing tones. This caused the little boy's volume to increase as he pulled her hand harder, pointing to a small miniature fire truck in the middle of the crosswalk. Natalie prayed for the stupid light to turn so she could snatch the toy up and deliver it across the street to its rightful owner. She feared the child might lose his mind.\n\nJust as that thought crossed Natalie's mind, the child escaped his mother's hold, dashing into the road into oncoming traffic, cars swerving to avoid his tiny frame. Tires squealing on the damp asphalt filled the usually quiet neighborhood.\n\nWithout making the decision consciously, Natalie shoved Bruce's leash into a stranger's hand before darting into the road to retrieve the child. The boy had dropped to his knees, fear holding him captive as he wept, the toy clutched to his chest.\n\nNatalie wrapped an arm around the child, but as she made to stand, a massive freight truck was moments from the intersection, the speed of the vehicle unyielding. In that moment, she realized there wasn't enough time to safely carry the child to the curb. All eighteen wheels skidded on the damp roadway, the horn blaring.\n\nShe had no choice. A spark lit within her chest, churning into red-hot energy, pulsating through her veins. The aura swelled, the raw power almost painful. Natalie directed it toward the truck, her arm flinging out, closing her eyes and holding the child tightly against her with the other as the power disappeared. The horrific roar of colliding metal filled her ears and the sound of the tires dragging forcefully across the wet ground intensified.\n\nThe sounds were snuffed out, suppressed by an eerie silence. Natalie cautiously opened her eyes, gazing through the fuliginous air around them. The truck was mere inches from her arm, still outstretched from her expulsion of energy, the hood of the truck crushed inward. Bits of metal and glass scattered across the black asphalt, the engine visible in the wreckage. The damage looked as if it had hit a solid force, the divot deep and rounded.\n\nAfter the astonishment settled, Natalie felt stricken with fatigue and panic. She plucked the child up, avoiding the debris strewn about the ground as she made her way toward the distraught mother.\n\n\"Thank you...thank you,\" the woman sputtered as Natalie passed the child to her. His mother pulled him close, kissing the crown of his head. Natalie nodded numbly to the woman and walked over to the stranger grasping Bruce's leash, who handed it over with a befuddled look on their face. Natalie glanced about the intersection, almost every face, driver and pedestrian alike, watching her. Natalie's feet began moving before she realized she was running toward home, her dog bounding along side her. \n\n**"
    ],
    "authorname": "JodiHutchins",
    "tags": [
        "cunnilingus",
        "lesbian novella",
        "lesbian sex",
        "supernatural lesbian",
        "esp",
        "lesbian romance",
        "romance",
        "strapon"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/kismet-encounter-ch-02"
}