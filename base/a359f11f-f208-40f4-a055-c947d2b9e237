{
    "title": "Celestial Wars Ch. 01",
    "pages": [
        "First some house clearing.\n\nThis story is the direct sequel to 'Celestial Matters' and should not be read without reading that first.\n\nI have broken the story into three parts. (Mainly due to fan encouragement). Each part will be six chapters long and about sixty pages in a word processor. Also, in lieu of some emails I have received I feel obligated to warn you gentle reader, that this is story does not immediately launch into the sex.\n\nYour comments and your votes mean the world to me...so thanks.\n\nHappy Reading\n\n-Noble Truth\n\n<center>***</center>\n\nChapter 1: Eons Ago\n\nIn the beginning, there was perfect darkness. It was a void of deepest nothing, which screamed its terrible rage against reality. It was an abomination, created in a moment of blind rage with a pure undertone of cold fury.\n\nSuch was the beginning of Hell.\n\nI awoke in such darkness. Blackness surrounded me ... like it was a part of me.\n\nWe lost, I thought quietly to myself.\n\nI remembered the last moments, when light clashed upon light, and Angel felled Angel. It had been glorious ... it had been terrifying. But it wasn't enough.\n\nExistence had stopped upon a word.\n\nLucifer had underestimated his brother's power, and the power of that terrible artifact, that fragment of chaos that HE controlled.\n\nWhen HE spoke, and the white light of chaos flared, I knew we had lost. Lucifer and his legions were cast from existence as we had known it.\n\nI pulled myself up from the cold rocky floor. My eyes adjusted to the unnatural gloom. Bodies lay strewn about the dark stones. Some were twisted and mangled, obviously dead. Others looked whole, but I couldn't make out details.\n\n\"You're awake,\" murmured a voice that sounded like a choir in harmony.\n\nI turned, for a moment I was looking into the same all encompassing blackness ... but I knew that voice. A brilliant golden glow whooshed into existence, and I was suddenly looking at the perfect face of our leader.\n\nLucifer smiled.\n\n\"Sleep well?\" he said mockingly.\n\n\"Where are we?\" I asked. My voice sounded tired. This place was unsettling.\n\nHis smile turned down, but he was no less beautiful. His alabaster face was still framed by his curling blond hair; his cheek bones were still sharp and high. He looked exactly the same, except for his eyes.\n\nEyes that had once been a royal purple now glowed a crimson red.\n\n\"A new place,\" Lucifer said slowly, \"a place forced into being for the express purpose of torturing us.\"\n\nI glanced once more at the fallen bodies. \"It doesn't feel like torture,\" I said.\n\nLucifer's new eyes flashed brightly, \"You have me to thank for that,\" he said coldly as he glared at our barren surroundings. \"I underestimated my elder brother. I did not think he would use the chaos fragment, I thought he feared its power.\"\n\n\"I had no idea of its power,\" I said, \"I did not know it could break all of us so easily.\"\n\nLucifer shook his golden head. \"Its power is not meant to be a weapon. Its magic is the magic of creation and movement. It is the magic of life. He used it to trap us here, where we could be contained, until such a time that we could be disposed of.\"\n\nThe grim weight of a fate decided settled upon me.\n\n\"So we are to wait for the end then?\"\n\nLucifer's smile returned, \"No, he no longer holds the power to create, or the power to turn this new land against us.\"\n\nThat didn't make sense. \"What? How could he lose such power? If you're telling me pretty lies to calm me, I'd rather you didn't. I'm not afraid to meet the end with eyes open.\"\n\nHis blond head shook slowly as he gazed up at a ceiling of darkness and black stone.\n\n\"I knocked it from his hand at the last moment,\" Lucifer said slowly, his eyes far away. \"It spun out into the void that was created between heaven and this place.\"\n\n\"And?\" I asked slowly.\n\n\"One could spend an eternity looking for it ... no, the power to shape worlds has been lost,\" Lucifer said simply.\n\nMy gaze once again skimmed over the ground. As my eyes adjusted I made out the shapes of five deformed bodies littered about.\n\n\"Am I the only one awake?\" I asked.\n\nLucifer gestured with his hands to the endless space around us.\n\n\"Three others have awoken before you,\" he said.\n\n\"Who?\" I asked.\n\n\"The three who are stronger than you, my servants have awoken in order of magnitude.\"\n\nI was silent, it irked me that he thought I was fourth in power.\n\nHis eyes glittered with amusement, nothing slips his notice. \"Beelzebub was first. He woke angry, ready to continue the fight as soon as he was upright.\"\n\nI nodded, and kept my silence.\n\n\"Lilith came next. She checked all of your motionless bodies before saying a word. I told her what I have told you. She has gone exploring ... hoping to find something in this place.\"\n\nLucifer then met my eyes and held them, \"Baal was third. He left almost immediately to look for the fragment of chaos. I told him he would never find it, but I didn't stop him for going. He has traveled the farthest, though he left only moments ago.\"\n\nI nodded slowly.\n\nLucifer shrugged, \"Then came you Devnikolus. What is it that you will do?\"\n\n<center>***</center>\n\n1623, Outside Dublin Ireland\n\nThe red sparks cleared abruptly, and I landed with a graceless thud. Hard wooden planks did little to break my fall, and my head bounced off the timber twice before I came to rest.\n\nA moment later another thud echoed mine right next to me, and a strand of red hair landed neatly on my nose.\n\nI tried to lift my hand to remove the offending hair. My hand jerked once then started to vibrate violently.\n\nOh shit, I thought immediately. I tucked myself into a ball, and rolled into a corner. My entire body began vibrating like my hand and I had to exercise all my will to clench down and control my body.\n\nA small piece of my hand shattered like glass, and inky black shadow slowly started to leak from the opening. I brought the full weight of my willpower down, and tried to keep myself from falling apart.\n\nSudden movement caught what was left of my attention. Cariel the Seraphim groaned as she clutched her head. Her silver eyes flickered open and after a brief moment, focused squarely upon me.\n\nIn a blur of movement she was on her feet, and eyeing me cautiously.\n\n\"Where are we?\" she demanded, her lyrical Angelic voice tight with strain, \"How did you manage a transportation spell while you were encircled with holy water?\"\n\nI didn't say anything, I couldn't spare any concentration to move my mouth, let alone make words with it.\n\n\"Answer me Demon!\" she screamed. She raised her hand, and a jet of blue sparks erupted from her palm.\n\nLuckily it was at that moment that I mastered myself.\n\nWith speed the little Angel wouldn't be able to follow; I raised my hand and caught her spell. I curled my rapidly healing fingers around her magic, and crushed it effortlessly.\n\nThat was the moment she remembered her fear. Her gaze flew widely around the room. There were no windows down here in the cellar. There was no sun to save her.\n\nThe cut she had carved into my chest knitted itself back together and my powers swelled. Red sparks fluttered about, and the room became cold and dark.\n\nI prodded my chest through the tear in my clothes, \"That was a close one,\" I said softly, a smile creeping along the edges of my face.\n\nI looked up at the terrified flame haired Angel, \"You almost had me there.\"\n\nHer silver eyes flicked over to the wooden staircase leading up and out of the cellar. Using what must have been all of her remaining power, she augmented her speed, and ran supernaturally fast towards her freedom.\n\nTo say I moved faster would be an understatement. For all intents and purposes, I simply willed myself in front of her.\n\nShe ran headlong into my chest. A small sonic boom shook the rafters as her body rapidly changed directions. Her wings erupted instinctively from her back. White feathers littered the floor as they attempted to slow her down.\n\nThe stone wall still gave slightly when she collided with it.\n\nCariel the Seraphim tumbled to the ground in an undignified heap.\n\n<center>***</center>\n\n-Cariel-\n\nThe pain of the impact rattled me to the core.\n\nI had used the last of my power reserves on that last mad dash at the stairs. I opened my eyes slightly. Devnikolus leaned casually against the wooden railing on the bottom stair.\n\nHis red eyes blazed with amusement.\n\nA small amount of blue blood dripped from his shirt. I gingerly touched my face. My hand came away speckled with blood.\n\nMy nose was bleeding.\n\nHe took a step towards me. There was nothing I could do. My magic was depleted. I couldn't even heal a bloody nose. All I could do was watch him wearily, corned, trapped.\n\n\"Little ickle Angel, cut off from heaven, and trapped by the big bad Demon,\" Devnikolus said in a sing song voice. \"Whatever will I do to pass the time?\"\n\nHe took another step forward.\n\n\"Please,\" I said shakily, \"I give up ... I'll leave you in peace ... just let me go.\"\n\nHis beautiful face twisted into a cruel smile, \"Awww, but I thought you wanted to spend more time with me. Why else would you grab onto my transportation spell?\"\n\nI drew myself up, and tried to appear more authoritative than I felt, difficult to do while on the ground.\n\n\"Prince Devnikolus,\" I began, \"I must remind you I am a Seraphim of the Second Sphere, I am a entity of high importance to the Light, and I demand you release me.\"\n\nHe raised an eyebrow.\n\n\"You seem to be forgetting something,\" he said arrogantly. \"Stand up Cariel,\" he ordered.\n\nI snorted, \"I'm injured,\" I said, \"I'll stand when I...\" I trailed off as I realized what was happening.\n\nMy neck suddenly became warm, my limbs started to move on their own accord. Despite the mind numbing pain, my legs moved to support my weight, and without any input from me at all, I found myself standing.\n\n\"Excellent,\" Devnikolus said with a chuckle. \"The collar is working perfectly.\"\n\nI touched the gold band around my neck ... I had forgotten ... how had I forgotten? A wave of despair overwhelmed me. I could feel tears pooling at the sides of my eyes. I would have toppled over if my body was under my control.\n\nIt wasn't though, and I remained standing.\n\nThe beautiful monster looked at me intently. The playful grin was gone.\n\n\"I can make you do anything Cariel,\" he said with simply, \"Anything at all.\"\n\nWith that, my tears spilled over, and great wracking sobs heaved their way through my body.\n\n<center>***</center>\n\n-Devnik-\n\nThe red haired Angel stood there, trying to mask the sounds of her despair. Her body shivered delicately, and little whimpers occasionally escaped her clenched lips.\n\nShe reminded me of Maria, and that made me terribly, terribly aroused. Submissive Angels were becoming a thing of mine. But I already had one, I didn't need this one to serve me like that.\n\n\"You should be thanking me,\" I said, \"I'm going to make you my bondswoman. You'll attend to all of my needs, won't that be grand?\"\n\n\"Fuck you,\" she said softly.\n\nI took a step forward, and to my surprise, so did she. Her hand was waving in an intricate pattern, as she pulled her sword from the ether.\n\nSome are slow learners, I thought to myself.\n\n\"Stop,\" I barked.\n\nHer body jerked sharply as she froze, and her sword faded back into nothing. I apparently needed to lay down some ground rules for the neck band.\n\n\"Little Cariel,\" I said slowly, \"You will never attempt to harm me in anyway, nor will you try to escape.\"\n\nI paused, I couldn't really think of anything else I needed to tell her.\n\n\"That is all for now,\" I said. \"Come, sit down, we must wait out the sun in the cellar until I can make it to the house proper.\"\n\nShe sat down heavily, and no longer tried to hold back her tears.\n\nA little twinge I wouldn't have felt before Maria tugged at my heart strings.\n\nWith a sigh, I moved over to the supine Angel, and gathered her into my arms.\n\n<center>***</center>\n\nFrance, 1623\n\n-Alarial-\n\nJon and I stood at the edge of the field outside of the inn. Parts of the grass were scorched from the ravages of Master's magic.\n\n\"I can't go any further,\" Jon finally said with a sigh, as we reached the ring of holy water.\n\n\"How are you part of the Dark Jon?\" I asked slowly. I didn't know if that question was offensive or not. I still didn't know many of the rules or customs of this new world I found myself in.\n\n\"My connection to the Master is essentially what makes me a part of it,\" he said, \"Though only to a lesser extent. I can cross thresholds and stand in the sun just like any other man.\"\n\n\"Well then, why is this different? I asked with slight exasperation.\n\n\"Holy things are a different matter. I can't touch bibles, I can't enter a Church, and I can't cross an unbroken ring of holy water.\"\n\nThis was ridiculous, my Master could be anywhere, and we were stuck in this clearing. Well, at least Jon was, I felt no resistance from the water.\n\n\"What if I just moved some dirt around with my foot? Or what if I went and got some regular water and poured it on it?\"\n\nJon shook his head, \"It probably won't work, if even the smallest bit of it still exists I won't be able to cross. Storms for some reason get rid of it, but I don't know why they are different.\"\n\nI crossed my arms and glared at him, \"I'm not waiting for it to rain,\" I said.\n\nI knew I was being unfair to the butler, but my entire body ached for my Master. Everything about me felt wrong because I was not in his presence. Jon winced slightly, and reached into his pocket.\n\nA glint of silver caught the light as he pulled something out.\n\n\"What's that?\" I asked moodily.\n\nJon looked pained, \"Something I wish I didn't have to do,\" he said, \"But I agree, we can't wait here, not when the Light could arrive at any moment to investigate.\"\n\nIn one quick motion, Jon slipped the ring onto his right ring finger.\n\nThere was a small whooshing noise, like wind moving quickly through tree branches. Small red sparks moved along Jon's arm ... and then stopped suddenly when they reached to ring.\n\n\"Okay,\" he said through his teeth, \"Let's go.\"\n\nThen, as if nothing was wrong, he stepped neatly over the holy water, and motioned for me to follow. In my shock, I did so without comment.\n\n<center>***</center>\n\n\"What did you do Jon,\" I asked after we had made it to the carriage in the stable.\n\nJon clambered up into the driver's seat, and I leaped up to sit next to him. He pulled the reigns into his hand, and flicked the horses into motion.\n\n\"I bound myself,\" he said as we pulled onto the road.\n\nI cocked my head to the side, \"What does that mean?\"\n\nJon shifted his weight, \"It means that the ring is a binder, it strips the wearer of all magic. Without magic, I am not a member of the Dark.\"\n\n\"You can cast magic?\"\n\nJon shook his head, \"No, the only magic I had in me was my immortality, now that is in the ring.\"\n\nI could feel my mouth drop, \"Take it off then!\" I said a little too loudly.\n\nJon kept his eyes on the road, \"It doesn't come off, I'll have to cut my finger off when we stop tonight in order to regain my immortality.\"\n\nMagic is barbaric, I thought to myself.\n\n\"I'm sorry Jon,\" I said quietly. \"I'm sorry you felt you had to make this sacrifice. We should have waited for a storm.\"\n\n\"No Maria,\" Jon said with a slight smile, \"We needed to be away from that inn, and now we are. I've had this finger for half a millennium. I think we can stand to part ways.\"\n\nDid all the creatures of the Dark have such black humor?\n\nI shook myself, and put my head in my hands.\n\n<center>***</center>\n\nThe Master's long pale hands moved down my back to cup the swell of my buttocks. He hefted me gently, but I felt his strength. My core was moist and grasping. It's emptiness was all I could think of.\n\nI needed him to fill me to the brim. I felt like I wasn't complete without him inside me.\n\nHis red eyes gazed into mine, \"Who do you belong to, pet?\" he said with a lazy smile.\n\nI could have dropped to my knees, but his hands underneath me supported my servile weight.\n\nMy head fell onto his chest, and I felt him rest his chin on top of my golden locks.\n\n\"You Master,\" I said with all the emotion I could muster, \"I'll always belong to you.\"\n\n\"Good,\" he said kindly.\n\n<center>***</center>\n\nI awoke with a start. The cart had lurched as the wheels had passed over a stone in the road.\n\nJon glanced over at me, \"Sorry about that, I didn't mean to wake you.\"\n\nThe ache of my Master's absence returned to my body with unprecedented force.\n\n\"That's alright Jon,\" I said with an unsteady voice, \"Let's just hurry ... I miss him.\"\n\n<center>***</center>\n\n<CENTER>Chapter 2\n\nOld Friends</CENTER>\n\n~The Bra'rul are sharp and fierce. They appear as beautiful men or woman with long dark talons and black feathered wings. There greatest strength is their speed and ferocity, which is unmatched by any other demon to walk the plains of Hell. Best disposed of at a distance- The Hunter's Manifesto ~ \n\n<center>***</center>\n\n-Cariel-\n\nI felt his arms slither around me.\n\nMy body shivered, and tensed immediately. A sense of wrongness and panic encroached on the edges of my mind.\n\nI had never been this close to a member of the Dark before.\n\nThe pain would come soon, I was sure of it. He'd squeeze me until I came apart. He'd snap my bones from their joints and pluck out my eyes.\n\nBut none of those things happened.\n\nInstead, I very slowly felt him pick me up, and shift us so that he sat upon the ground with me in his lap.\n\nA pale hand slowly combed its way through my hair. The action was soothing...even though I didn't want it to be.\n\n\"Stop,\" I said weakly. My body wriggled slightly, trying to get off of the Demon's lap.\n\nThe room rapidly dropped in temperature once more.\n\nWith a slow deliberate movement, the demon brought his mouth right next to my ear.\n\nIn the softest of whispers he said, \"Little Angel, I have become accustomed to the feeling of touching and controlling your kind. Be still, lest I choose to remember that it was you that separated her from me.\"\n\nA cold chill traveled down my neck.\n\nHis hand returned to my hair, and once more began the gentle motion of threading through my battle tangled hair.\n\nA few new tears rolled down my cheeks, but this time I had no idea why.\n\n<center>***</center>\n\nI could feel the sun passing out of the sky as we sat there. Eventually the Demon's hand became still, and came to rest on the small of my back. I sat still, too afraid to move.\n\nMy powers were slowly trickling back into my depleted reservoirs. Small blue sparks set my nose straight, and stopped the bleeding. With slight trepidation, I sent out a small probe at the Demon.\n\nWe were touching, and with this contact I should be able to learn all about the Demon's nature.\n\nI slipped past his human form easily, and delved into the inner monster.\n\nThere, I found no comfort. My probe was greeted by a rolling ocean of unholy power. Blood red magic rolled and turned violently...raging against its confinement.\n\nThe Demon's hand pressed upon my shoulder, \"Be careful what you wish for Angel,\" he said in his melodic tones.\n\nSuddenly my probe was sucked deeper into the Demon's inner being. It plunged into the ocean of power, and I discovered that it was both deep and wide. However, that was not all.\n\nI could sense something...else. A force that was being restrained. It was cold and dark and unendingly hungry.\n\nQuick images of shadow black flames licked my vision...and then they were gone.\n\nA small jolt brought me back to the present.\n\nThe Demon's red eyes were gazing into mine. His dark hair covered half his face like a shroud.\n\n\"You were curious about me,\" he said simply. \"Now you know what to be afraid of.\"\n\nI looked down. I didn't want to look into those eyes. \"I never had any chance did I?\" I said in a small voice.",
        "\"No,\" he said as he put his head against the wall.\n\n\"All my planning, all my Angelic training for naught. I came to our confrontation prepared, and you came to it full of arrogance.\"\n\nHe nodded.\n\nMy lip curled up into a snarl, \"Creation has no justice. Creatures like you shouldn't exist.\"\n\nDevnikolus shifted me off his legs, and I fell to one side in surprise.\n\n\"The sun has set,\" the Demon Prince said. \"Nine hours of darkness should be more than enough to find my little half breed.\"\n\nHe would be reunited with my half-sister, and all my efforts would truly be for naught.\n\n\"Traveling by magic to France will attract the Light to your presence. Isn't that why you traveled by carriage earlier?\"\n\nThe Demon looked at me with his head cocked, \"You were the agent of the Light whom was tracking us,\" he said simply. \"It would be hard to find me by sensing my magic unless some entity was actively watching for it.\"\n\nI had to admit, without intercepting the binding spell on his imp, I would have never been able to keep pace with the Demon Prince.\n\n\"Come Seraphim,\" Devnikolus said, \"I will show you where you can stay in the Dublin manor before I leave for France.\"\n\nThe band at my neck tingled, and I found my limbs moving to join him on the stairs...while my mind silently seethed.\n\n<center>***</center>\n\nThe manor was quaint. It was nothing like the grand sweeping chateau that I had infiltrated in France. This manor was built of mortar and stone, and possessed a quiet elegance that I found instantly appealing. Climbing ivy clung to every corner of the two story dwelling and served to warm and color what would have otherwise been a very grey exterior.\n\nThe Irish winter night was gripping, and the cozy house seemed to beckon silently.\n\nDevnikolus strolled down the little path ahead of me, and my disobedient legs struggled to keep pace with his long strides.\n\nWith a way of his hand, the oak door swung open noiselessly.\n\n\"Ho Devnikolus!\" Came a voice from behind.\n\nThe dark haired Demon turned, and looked past me toward the entrance of the grounds.\n\nA slender man dressed in a royal purple waistcoat and white vest ambled gracefully up the path. He had long deep black hair that seemed almost blue pulled pack into a pony tail. Twin red orbs glowed above his crooked smile...marking him as a Demon.\n\nI had seen this entity before.\n\nThree hundred years ago I had been a part of a sortie of Seraphims led by High Seraphim Achael against this creature. We were to prevent this Demon from meddling in the affairs of the Light.\n\nThe Byzantine Empire fell at Bursa after this Demon assured Osman that if he could keep Bursa under siege for nine years he could take the fortress. Osman would never have kept up his assault had he not been assured victory was certain.\n\n\"Orias,\" Devnikolus said warmly, \"This is indeed a surprise.\"\n\nOrias, Demon Prince of Prophecy and Change bowed, and smiled up at Devnikolus. \"It has been far too long my friend. I visit your realm frequently, only to find you are away spending time amongst the mortals.\"\n\nDevnikolus shrugged, \"My stewards can manage my rule. I return occasionally to lend them aid should they require it.\"\n\nThe two men eyed each other for a moment. They took quiet stock of each other, and for a moment I wondered if something had been exchanged unsaid.\n\n\"You haven't really changed have you?\" Orias said. \"You still don't care for the inner machinations of the Dark.\"\n\n\"I haven't fought Lucifer's war for a long time,\" The Prince of Destruction said firmly.\n\nOrias held up his hand placating, \"I say these things meaning no offense. In truth, our King has little need of his Princes and Princesses. Most of us spend our time as we see fit.\"\n\n\"But not today,\" Devnikolus said as he eyed the other Demon closely.\n\nOrias mustered a wane smile, \"No...you're right. Not today.\"\n\nA frigid night-cooled wind swept across the grounds, and I shifted slightly as I suppressed a shiver.\n\nThe movement caught Orias' eye, \"I see Lucifer told me truth when he said you had captured yourself a plaything.\"\n\n\"I hate you monsters,\" I managed to say weakly.\n\nMy heart wasn't in my loathing. I was cold and depressed. I just wanted to go home. I imagined the warmth and light of the Second Sphere of Heaven. I wondered when I would see it again.\n\n\"This isn't the first one I've captured,\" Devnikolus said slowly. \"I can't imagine Lucifer knows that I've subdued this Angel already.\"\n\nOrias merely shrugged, \"I have found that underestimating him is unwise.\"\n\nDevnikolus nodded, and looked up at the sky, \"I have other things to do this night Orias,\" he said leadingly, \"I would appreciate it if you could say your piece and depart. We can retell our travels this past century on a different eve.\"\n\nOrias' mouth turned down slightly, \"I was afraid of this Devnik,\" he said gently. \"Unfortunately, what I have to ask of you requires that you stay here.\"\n\nThere was a pause. In the distance I could hear a drunken mass of humans belting their laughter to the heavens.\n\nI watched my captor closely.\n\n\"It's not really you who's asking is it?\" Devnikolus said in a resigned tone.\n\nThe Prince of Prophecy shook his head. \n\nWith a sigh Devnikolus motioned for us all to move inside.\n\n<center>***</center>\n\n<CENTER>-Devnik-</center>\n\nMy feet fell heavily upon the ground as I stomped ahead of Orias and the silent Angel.\n\nThis was the worst possible time. I would have been almost happy for Lucifer to have a task for me anytime during the past hundred years. Well...maybe not happy, but certainly more agreeable than right at this moment.\n\n\"Oh dear,\" I heard Orias say as we crossed the threshold into my manor, \"I hope he isn't always so irritated. That might be rough on you m'lady.\"\n\n\"I'll kill you both,\" I heard Cariel respond petulantly.\n\nOrias burst into ringing laughter. \"I can see the appeal of this arrangement my friend. Humans would not be so delightfully resistant.\"\n\nI resisted the urge to smile at Orias' easy good nature.\n\nWith a loose gesture I said, \"Please, sit down and make yourself comfortable for a moment.\"\n\nOrias flopped into a plush and heavy leather couch in the middle of my sitting room.\n\nCariel stood hesitantly in the doorway. Her silver eyes darted between us. Her ragged tunic hung from her pale and shapely body. Our fighting had taken its toll on her. She had a sunken look to her eyes, and I could see the beginnings of true despair about her features.\n\nMy heartstrings fluttered once more.\n\n\"Cariel, this is not for the ears of little Angels. Go upstairs to the room at the end of the hall. There is a tub. Use your powers to draw yourself a nice bath, and then cloth yourself as you see fit.\"\n\nShe stood there...frozen for a moment, her pink lips turned down in a frown, and her red hair covering one of her eyes.\n\nThen, the green runes within the golden collar flashed, and the magic of binding carried away my enslaved woman. With the magic doing the walking for her, I could hear her devoting her free will to tears.\n\n<center>***</center>\n\n\"That was rather nice of you,\" Orias mentioned offhand, as if he were trying not to offend me.\n\nI moved to sit across from him in a high backed burgundy chair.\n\nI snapped my fingers, and a fire sprung up in the hearth...immediately abating some of the Irish winter.\n\nOne should always have a fire.\n\n\"Talk Orias,\" I said sternly. I wanted to convey my irritation to him. This was difficult, because Orias was someone inherently difficult to be irritated at. Lucifer probably thought of that when he chose his messenger...damn him.\n\n\"Our King needs you to do him a favor,\" stated Orias as he held his slender fingers near the fire.\n\n\"Can it wait for a night?\" I asked.\n\n\"I'm afraid that we don't know enough of the variables to risk not starting our plan immediately.\" He replied smoothly...as if he had rehearsed his argument.\n\n\"You are a foreseer of variables. Can the stars not reveal these unknowns to you?\" I asked.\n\n\"The currents of the future are changing to rapidly. Every time I look upon the heavens I see a different break in the stream. As I said...variables.\"\n\nI sat back, frustrated. \"What do you need me to do?\" I said.\n\nOrias fixed me with his eyes. His normally light expression furrowed, \"Lucifer wants you to stay here...he wants you to be a distraction.\"\n\n\"Explain,\" I said tersely.\n\n\"All I know is that Lucifer is trying to get his hands on someone or something that is being guarded quite closely by a powerful Agent of the Light. He wants that Agent to be distracted by something more pressing, so he can work unfettered.\"\n\nTypical. This was all part of the war... I wondered briefly want could be important enough for our King to attend to it personally. But that answer would require speaking to him again.\n\n\"Why me?\" I asked sullenly, \"I know for a fact Baal currently walks the Earth. Why not have him be distracting. He would certainly be better at it.\"\n\nOrias shrugged, \"I was not given details....but I think some of the blame lies with you and your recent behavior. The Light must be furious with you Devnik. You've corrupted two of their Agents...and you continue to travel the Earth with impunity. Perhaps Lucifer thinks the Light is angered enough by you for you to be sufficiently...distracting.\"\n\n\"Is that all?\" I asked scornfully. I was truly angry now.\n\n\"Well,\" Orias said with his face full of trepidation, \"Lucifer also suggested that you might tap into some of your...unique abilities... as an additional incentive for the Light to turn their attention to you.\n\nThere was a beat of silence. The fire that I had lit was dwindling...and clouds of frost gathered upon the windows.\n\n\"Absolutely not,\" I thundered as I roared to my feet.\n\nOrias blurred to his feet as well. He held his hands up defensively...attempting to mollify me.\n\nAll I could see was my rage. This task was unacceptable. He knew what he was asking for. I had told our King eons ago that I despised that aspect of myself. I raised my hand at the offending Prince and gather my power.\n\nRed light danced about my palm...Orias was not my equal...he would regret even uttering those words in front of me.\n\nHe spoke softly now, \"Devnik...stop. I'm just the messenger! There is no reason in creation why we should fight right now! I feel no better about this than you do.\"\n\nI paused. The magic on my fingertips stilled and the tide of anger ebbed enough for me to hear his words.\n\nSensing that he was calming me down, Orias continued, \"Do you think that I readily accepted the task of delivering these orders to you? Did you think I didn't know? That I didn't care?\"\n\nI dropped my hand, and my friend eased his stance.\n\nAfter a deep breath I said, \"Do you think it will work? If I do what Lucifer asks?\"\n\n\"If pure destruction rears its head upon Earth, I'm sure the Light will come running. All this bad behavior you've been up to will just be icing on the cake.\"\n\nI nodded once, knowing that I would do it.\n\n<center>***</center>\n\n-Cariel-\n\nSteam curled gently above the water in the tub, as the last of my magic that heated the bath faded away. I reached up behind my neck, and unclasped my ragged tunic. The warded and carefully battle crafted garment pooled at my feet in ruin.\n\nMy hand paused as it brushed over the warm surface of the locked golden band. Tingles pricked at my fingertips as I felt the magic running beneath the smooth metal.\n\nI shook myself...my bath was getting cold.\n\nOne pale foot joined the other as I carefully stepped into the water. I sunk into the tub with a groan as I felt my muscles loosen after all the abuse my Demonic captor put them through.\n\nI dunked my head under the water, and pushed my hair back and out of my eyes. When I resurfaced, the Demon was standing in the doorway.\n\nStartled, I jerked in the water and it splashed and lapped over the sides of the bathtub. I quickly moved to cover my breasts and sex with my hands.\n\n\"You knew I was in here!\" I said, my voice dripping venom. \"Now that you've had your thrill, get out!\"\n\nHis sin-red eyes gazed upon me uncomprehendingly...like he heard my words but didn't quite understand.\n\n\"I'm stuck here,\" he said quietly. His normal deep timbre quivered slightly with emotion. \"She's out there, and I can't go looking for her.\"\n\nMy mind froze. I didn't know a Demon had any emotions that weren't lust, anger or hate.\n\nHe moved slowly...except for when he didn't. My eyes would track his lithe form as he closed the door, then he would blur to the other side of the room where his shirt would be removed. He picked up a small lump of soap from the cupboard, then in another blur he was standing next to the bath completely naked.\n\nHis body was flawless. He had tight defined muscles that made his body look like it was carved from a living marble. His manhood hung thick and limp, and I couldn't help but stare. With a firm hand, he pushed me forward, and slowly slipped into that bath behind me.\n\nI couldn't move. My limbs were tense and wary as the demon settled in behind my back. His torso felt hard and masculine against the soft flesh of my back. He put his legs on either side of my and sunk down into the bath. This caused his half-awake sex to slip down, and press firmly into my ass.\n\nI felt invaded. The Demon felt like he was penetrating my very being simply by his presence.\n\nWith a soft hand, he took the lump of soap and trailed it up and down my arms as he worked my skin into a lather.\n\nStill I couldn't move. His hands would direct my body and I obeyed. He bathed me like I was his living doll.\n\nHis hands slipped under my arms and soaped my armpits and the sides of my breasts. He drew a reaction from me as I shivered. To my horror, a spark of arousal jumped within my sex.\n\n\"Stop Devnikolus,\" I said softly, my voice thickly laden with pleading. \"You can't keep doing these things to me. It isn't right, I haven't asked for this.\"\n\nHis slim fingers tightened painfully on my arm as the other hand gripped my throat. The Demon gripped hard...unworried about killing me from suffocation.\n\n\"You will serve me this way Little Angel,\" the Demon said in a tone truly worthy of a monster. \"You took her from me, and now you will replace her until she can be returned to me.\"\n\nMy fear was palatable now... I could practically taste his anger.\n\n\"You will do this for me,\" he said, \"Or I will torture you until you beg me to end the suffering.\"\n\nAs if nothing had happened, he released his grip and resumed washing me in that methodical and loving way.\n\nHe soaped the undersides of my breasts and moved down to my belly and legs. He cleaned my pussy with his long gentle fingers. I could feel my channel pulse around his fingers. My face flamed with embarrassment, yet his warning kept me silent.\n\nThe bath took almost twenty minutes. A Prince of Hell washed my entire body, and even lathered my hair. I sat there in the crux of his body both terrified and shamefully aroused.\n\nWhen the water became cold, he picked up my unresisting body and toweled my pink and clean skin dry. Before I could even understand what was happening the Demon used his preternatural speed to move us from the bathroom to the bedroom across the hall.\n\nHe placed my naked body into a bed of soft feathers and clean white sheets.\n\n\"You will rest here during the day as best you can,\" Devnikolus said. \"You are not to leave this bed until I give you permission. Do you understand?\"\n\nThe gold band flashed its green runes, and I knew his order carried the weight of the compulsion magic. I nodded slightly. I had never felt any more feminine. This creature was treating me like a little girl, and I had no choice but to fill that role.\n\nDevnikolus blew out a candle by my bedside, and plunged the room into darkness.\n\nThe soft sheets pulled me instantly down into my own darkness moments later.\n\n<CENTER>Chapter 3\n\nThe Meeting\n\n~Humans do not naturally posses magic. A child of dust and mud can only achieve power through four ways. They may pledge themselves to either the Light or the Dark, and be rewarded with a sliver of their power. They may channel the inherent magic of the Earth.\n\nThe fourth way is to steal it. These thieves are called The Afflicted and they are abominations- The lecture Notes of Father Fredrick~\n\n-Daniel Fleeting-</CENTER>\n\nI knew it the moment it happened. One moment I was riding into the rising sun, mere minutes from confronting Devnikolus and earning my salvation. The next, I sensed the familiar swell of teleportation magic...and then he was gone.\n\nI had screamed then.\n\nMy horse reared back and I toppled from my saddle. Hard stone rushed to greet my less hard head...and I lost consciousness.\n\n<center>***</center>\n\nThe waking world greeted me with a sharp pain at the back of my skull.\n\n'You're lucky to be alive...again,' Vraiel, the Angel in my head stated wryly.\n\n'How long was I unconscious?' I asked through the throbbing.\n\n'You cracked the back of your skull,' Vraiel replied, 'The damage was severe, and you would have died had your stone heart not used its unholy magic to heal you and stop the bleeding.'\n\nI winced. The next time I had to use Light magic the residue from my Demonic core would cause me terrible discomfort.\n\n\"We missed him,\" I said out loud.\n\nThis always happened. The power of travel by magic was beyond me, but the Prince of Destruction used this ability with impunity. But he hadn't teleported for so long...I had thought...had hoped... that I would catch up to him this time. Now he was too far away to even sense, and I would have to start all over.\n\n'We will just have to hope we stumble over him again,' Vraiel said in my head, 'We have no idea how far he has gone. We should just pick a direction and commit to it.'\n\nI looked around, hoping that my horse was still nearby.\n\n'When the unholy magic began to work upon us the horse became spooked and bolted,' Vraiel told me bitterly.\n\nMy sword was poking uncomfortably into my side, but at least it hadn't been in the saddle bag.\n\nI stood up slowly, and brushed the dirt from my travel clothes. The saddle bag filled with my tools was gone. My vial of holy water, my scroll of earth moving, and my ever precious thrice blessed cross. Without that cross I didn't stand a chance against the Demon Prince.\n\n'The cross is safe, along with the scroll,' Vraiel said cheerfully, 'I'm glad I insisted you have that leather smith make you that hip pouch.'\n\nWith budding joy, I touched the small bag looped to my trousers.\n\n'That is another thing that I am in your debt for Vraiel,' I said.\n\nHe didn't reply, but I could tell he was happy.\n\nI was just stretching and limbering out my sore shoulder, when something caught my senses. In the distance, in the direction that Devnikolus had been in, I caught a faint trace of his power. It was starting to move north quickly, as if it was moving by horseback\n\n'How is this possible?' I asked Vraiel silently.\n\n'It is possible that we are sensing one of the Prince's servants,' Vraiel responded with glee.\n\nI would have to run using Light magic to keep pace with a horse, and it would be agony. But, this traveling flicker of unholy power was all I had to continue my search, and I was willing to bear it.\n\n\"Let's go introduce ourselves,\" I said as I began to run.\n\n<center>***</center>\n\n<CENTER>-Alarial-</CENTER>\n\nThe cart trundled along at a maddeningly slow pace. My head bobbed as I tried to keep myself awake against the gentle motions of my wooden seat. Jon sat beside me looking straight ahead.\n\nI dared not fall asleep, because if I fell asleep all I saw was his face, and that caused me misery when I woke and found I had only been dreaming of my Master.",
        "\"I'm surprised he hasn't come to find us,\" Jon said suddenly.\n\nHis voice was a welcome break in the monotony.\n\n\"We don't know where he is Jon,\" I said softly, ready to defend my Master, \"He might be safe but unable to travel back to us.\"\n\nJon shook his head, \"I know we don't know anything for sure, but Devnik can travel great distances at a moment's notice. His magic has few limits.\"\n\nI shrugged, and voiced a concern that had crept into my mind unbidden, \"Maybe my wish sent him back down to hell?\" I asked.\n\nAgain his head shook in the negative, \"No, I'm almost positive that your wish would have sent him to his house in Ireland. That was where he first crossed from Hell to Earth, and he is at his strongest and safest there.\"\n\nI nodded and looked back at the road, \"I'm sure he has his reasons Jon,\" I replied sleepily.\n\nThe butler shrugged and fell silent. He wrapped his hands around in the reigns.\n\n<center>***</center>\n\nWe didn't reach a village like we had hoped we would before the horses tired. Jon decided that a small stream a few paces into the wood away from the road would be ideal. The ancient man's young face looked haggard as he unbuckled the horses from their carriage and brushed them down.\n\nWhen he was done the beasts trod over to the stream and began to take water.\n\nI was tasked with gathering small twigs and brambles so that we might have a fire for the night. My mind wandered back to my Master and the ease at which he commanded fire.\n\nMy sex pulsed and I felt a wave of arousal travel from my belly to my breasts. It would do no good to think of him, I reminded myself. This excitement is empty without him.\n\nJon sat down next to me as I began to arrange the brambles and stones I had collected.\n\n\"I don't have any flint or tinder,\" Jon said, \"Do you think you can use magic? I haven't used my blade to strike a fire in decades and I would rather not dull the edge.\"\n\n\"I don't know the Angelic words for fire,\" I said glumly. My vocabulary was rather limited. The only words I knew were 'free me.'\n\nJon leaned back against a tree trunk and straightened his long legs. I sat down on the ground and stretched mine out as well. My dress flared up my legs, exposing a great deal of thigh.\n\nIn my current state of exhaustion I didn't care. Besides, I was no lady. The ex-whore in me giggled.\n\nThe butler smiled, \"I don't think magic requires the words of Heaven or Hell to work. I think it is more an exercise of will.\"\n\nI eyed him suspiciously, \"Are you questioning my strength of mind Jon?\" I asked icily.\n\nHe gave a great belly laugh, and after a moment I joined him.\n\nA voice shot out from amongst the trees, \"Hello the camp!\" Cried a voice tinged with an English accent.\n\nJon shared a brief look of puzzlement with me before he replied, \"Hello the traveler!\" he replied loudly, with his hands cupped about his mouth.\n\nOut from the underbrush came a rather bedraggled looking traveler. His dirty blond hair was mussed and had a leaf nestled in it. His clothes looked dirt stained and well worn.\n\nAt his hip a rusty sword swung loosely on a belt.\n\nI quickly glanced at Jon's sword next to his feet...and reassured myself that we were not without protection. Again, I missed my Master, and the overwhelming safety he could provide. \n\n\"I'm afraid we don't have much to offer stranger,\" Jon said wearily as he got to his feet, \"We don't have any fare with us,\" he paused and looked down at our unlit fire, \"I'm afraid we don't have a tinderbox to offer you a fire either.\"\n\nThe dirty blond haired laughed, \"Perhaps I can be of some assistance somehow,\" he replied as he unbuckled his sword from his hip.\"\n\nJon tensed, and with a neat flick of his foot he kicked his sword up into his hands.\n\n\"Peace my friend,\" said the stranger, \"I simply need the pommel of my sword, a handful of that dried grass, and the stone next to my lady's foot.\"\n\nJon relaxed slightly, \"I thought about doing it the old traveler's way...but it has been so long I didn't know if I could do it.\"\n\nThe man nodded, \"Some skills fade with time,\" he said in a faraway voice.\n\nWith that, the ragged man went about his business, and within a minute he had the dry grass spitting up glowing embers. Within three a small fire crackled.\n\nThe man sat, \"There,\" he said, \"That should keep the cold away. Name's Daniel by the way,\" he said with a nod to each of us.\n\n\"Jon,\" said my companion.\n\n\"And I am Maria,\" I said with a small smile.\n\nTrue night had fallen, and the fire's glow seemed to be all one could see.\n\n\"Thank you for your help,\" Jon said, \"I wish we had something to offer you, but I spoke truly when I said we have no food.\"\n\nThe man shrugged, \"In truth, providing me with company and conversation will be enough, my trade does not leave me much time to simply talk.\"\n\n\"What do you do Monsieur?\" I asked. I decided I liked this man, despite being rough around the edges.\n\nDaniel shrugged, \"Oh, I must beg your pardon my lady, but I am hesitant these days to discuss my profession. Many don't believe me when I tell them, and those that do shun me...but the people who have seen what I have seen thank me.\"\n\nNow I had to know, \"Please Monsieur, we will give you the benefit of the doubt.\"\n\nHe seemed to pause, and then decide.\n\nDaniel smiled, \"Tell me my lady, do you believe in Monsters?\"\n\nMy mind instantly flashed to Devnik. I could see his blood red eyes glowing beneath his dark locks, and the fearsome bolts of magic he had hurled at Cariel. Then my mind flashed, and I was pinned to the bed, his arms around my wrists like shackles as he pounded into my body. I could feel him sinking into my wet and throbbing core...sounds of moisture revealing my humiliating level of arousal.\n\nYes, I believed in monsters. I waited for one to visit my dreams each night.\n\n\"Why, yes Monsieur Daniel,\" I said slowly, \"I think monsters must exist, especially when I am out in a dark wood.\"\n\nDaniel smiled, \"That's good,\" he said lightly, \"You will have no problem believing me when I tell you my profession.\"\n\nHe leaned closer, as if whispering an illicit secret, \"I'm a Monster Hunter.\"\n\n<CENTER>-Daniel Fleeting-</CENTER>\n\n'These two reek of magic,' I thought to myself and Vraiel.\n\nThey were an unlikely pair. The man was wearing the common cuffs and coat of a Parisian Butler. He had thick dark brown hair with matching brown eyes. His face was riddled with scars, all of them looked old and well healed. He had seen violence early in life.\n\nThat and his little trick with his sword made me keep my eye on him.\n\n'There is something amiss with his ring,' Vraiel whispered in my head so I wouldn't miss any of the conversation being spoken aloud. \n\n'Magic?' I queried silently.\n\n'If it is, it is buried too deeply in the metal, and I cannot get a feel for it,' replied Vraiel.\n\n\"Would you be an official Hunter then?\" Jon asked slowly.\n\nInwardly I smiled, it would have been much harder if they hadn't risen up to my probing about the supernatural, and had pretended to be unaware.\n\n\"Why, yes I am,\" I said as I rolled back my sleeve to reveal my right wrist.\n\nA small tattoo of a weeping eye glimmered in the firelight. \n\nJon leaned forward to get a better look, then sat back with a grunt of affirmation. \"That looks real enough for me,\" he said.\n\n\"What does a Monster Hunter do?\" asked the girl.\n\nI gave the young woman an assessing look.\n\nShe looked to be about eighteen, maybe nineteen. Here light blue eyes were incredibly pale, and her blonde wavy hair shimmered all the way down to her lower back. She was beautiful in the way an Angel might be. Less desirable because of overwhelming perfection.\n\n\"Why, hunt monsters of course,\" I said with my best roguish smile and teasing in my voice.\n\nMaria rolled her eyes, \"Of course monsieur,\" she said with bite in her voice, \"I perhaps meant to say what does a Monster Hunter hunt for?\"\n\nI shrugged, \"Whatever I am paid for. Humans are at a disadvantage traditionally when facing the supernatural. I use my experience to help diffuse that disadvantage.\"\n\nI paused, partly for dramatic effect, partly so I could come up with an unbiased list my kills.\n\nThis would be so much easier if I could tell an outright lie. But the Light cannot lie.\n\n\"I've killed primarily Imps and Wraiths,\" I said listing off the most common Monster Hunter quarrys, \"But I have dispatched a few sprites, fae and even one Angel.\"\n\nJon raised an eyebrow, \"A Monster Hunter who's killed an Angel?\" Jon said, \"Now I've heard everything.\"\n\nI shrugged, \"He was a Fifth Sphere Legionnaire,\" I said, \"Luck was on my side that day,\" I said the last with a wink at Maria.\n\nHer mouth turned down slightly.\n\n'That one has the Prince of Destruction's magic clinging to her like a second skin,' Vraiel whispered in my head.\n\nThat was startling.\n\nMy Angel continued, 'I can sense nothing of the girl underneath his magic. It is thick and protective. This girl might just be the Demon's newest lover.'\n\nJon suddenly spoke, \"Would you be averse to taking a job that isn't a hunt?\" He asked slowly.\n\nJust as planned.\n\n\"Not if the money is good,\" I said simply, as if gold truly mattered. That was almost a lie, and the words felt dry in my throat.\n\nJon grinned, now he thought he understood me. He was a man who liked to understand things...I could tell.\n\nJon said, \"Then I would like to offer you a job.\"\n\n<CENTER>-Alarial-</CENTER>\n\nI thought it was an excellent idea.\n\nJon explained to Daniel that we were trying to get to Northern Ireland to return me to a magical entity of great power, and that we needed protection along the way. He never mentioned Devnik's name, he simply insinuated that some 'Monsters' might be after me because of my importance to this unnamed entity.\n\nDaniel shrugged in a very mercenary sort of way, and said he would be agreeable if the price was right. Jon pulled three livre from the jewelry bag and placed them in Daniel's hand.\n\nOur new companion smiled and a bargain was struck.\n\nWe had hired some new protection.\n\nBefore Jon put me in the carriage to sleep for the night he explained that I was vulnerable since I didn't know how to use my magic, and he could use an extra sword should things become unpleasant.\n\nHe assured me the Monster Hunter's guild was impartial to both the Light and the Dark.\n\nI nodded, and Jon departed the carriage and left me to my coming dreams.\n\n<center>***</center>\n\nI was lying on a bed of black silk. \n\nDevnik was standing next to me. He was talking, but all I could hear was a melodic murmur...noise without meaning. I lifted up on one elbow, and watched him as he talked. Still his voice was lost to me. I felt like a beast, some wild animal that couldn't understand the words of men.\n\nInstead, I admired my Master.\n\nHe was gorgeous, and I found my eyes wandering about his strong pale chest, with his pecs clearly defined, and his shoulders strong and broad. I felt feminine and cared for in his arms, as he suddenly crushed me to him. His embrace was at once possessive and loving.\n\nMy Master playfully flicked my nipple, and I felt the sharp sting as my breast swayed and rippled supply. He bent down and licked the offended breast...and I moaned helplessly into him.\n\nI loved it when he took control. I didn't want it...I just wanted to be his instrument.\n\nI could feel myself moisten and open. My sex craved him like some men craved ale.\n\nHe was masterful. In both a slightly intimidating way and a loving way. My responses seemed primal, like I couldn't stop them anymore than I could command a star to fall. I felt his hand slide over the rounded globes of my buttocks. For a moment I wanted to cover myself...I was too sensitive...too wet...I couldn't be so vulnerable to him.\n\n\"Spread your legs,\" my Master said in his natural cool tone that reminded me of brisk nights and cold grass.\n\nMy legs fell apart, and I bared my glistening cunt to him. It pulsed and contracted for him...trying to persuade him to make use of it. But...there was another desire. Beneath my skin my blood was boiling. A very dark part of me wanted him to drink from my veins again.\n\nIt was an act I never thought would turn me on...but I felt that insidious desire ringing clear and true throughout my being. I wanted to see my blue blood on his lips. I wanted to give him everything.\n\nMy eyes found his, I was silently begging for more.\n\nFinally his cock was inside me. I was riveted to him, as I watched as his body pistoned in and out of me. At this moment, I had completely surrendered. Everything that I was...was his. My body was loose and accepting. The pain and pleasure of his girth mixed into an exquisite sensation of being gloriously full, and then desperate and empty. Scalding hot seed was painting my insides when I awoke.\n\n<center>***</center>\n\n<CENTER>-Daniel Fleeting-</CENTER>\n\nAt dawn we rose to meet the beckoning road.\n\nWe were all bleary eyed and restless. Muscles we had forgotten ached after a night sleeping in the wilderness. I, however, was content. My two traveling companions had bought my ruse and I was being driven to my target in comfort on a carriage.\n\nJon and I sat upon the driving bench of the carriage while the Demon's sinful lover sat within. The girl didn't sit well with me. She was too beautiful to be so stupid and sinful as to sleep with the Demon Prince.\n\nStill... I suppose looks can be deceiving.\n\nJon and I talked of small things and revealed even smaller ones.\n\nI asked him if he preferred beer to wine. He asked me if I preferred songs or mummery.\n\nHe preferred wine.\n\nI preferred songs.\n\nMaria didn't emerge to join us.\n\n<center>***</center>\n\nWe passed through a village at an awkward part of the day. It was just after lunch, and Jon felt like we would be wasting too much light to simply stop here for the day.\n\nWe bought food, and ate bread and drank spiced cider as our carriage carried on through the village and back into the forested road.\n\n\"How did you kill the Angel?\" Jon asked. He had finished his second cup of cider, and he looked more relaxed. Lines of stress that had pressed down on his forehead had lifted, and he gave me a genuine smile.\n\nI shrugged, and called up a memory that Vraiel hated.\n\n'Go ahead and tell him Daniel,' Vraiel whispered in my mind, 'That was a long time ago...another life.'\n\n\"I had been judged,\" I said softly, \"By a Judicar.\"\n\nJon slipped me a look. His mouth was full of bread, but I could tell he was readjusting his opinion of me.\n\n\"Never met a Judicar,\" Jon said casually, \"But if I did I'd run in the other direction.\"\n\nSmart... but I won't let you run.\n\n\"Well, I had done some bad things in my youth, and I was judged to die. I escaped the Judicar but the Celestial Mandate was still on my head. Eventually a Legionnaire was dispatched to fulfill it.\"\n\n\"How did you survive?\" Jon asked, thoroughly curious.\n\nI shrugged, \"I purchased some bottled Hellfire from a Warlock in Constantinople. The bottle hit the bored and distracted Legionnaire in the face. He thought when I saw him I would die quietly. I buried him while he burned.\"\n\n\"Bottled Hellfire,\" Jon mused aloud. \"I suppose that would work.\"\n\nSomething far flung and long forgotten itched at the back of my memory. Jon reminded me of someone, but that memory was lost in five hundred years of living.\n\n<center>***</center>\n\nWe saw the cottage in the dying light of the late afternoon. There was a well, which meant water.\n\nJon was yawing, and practically falling asleep at the reins. \n\nMaria poked her head out of the carriage window, \"This cottage looks like as good a place as any. Let's ask them if we can impose ourselves on their grounds.\"\n\n\"That would probably be best,\" Jon said as he pulled the carriage to a halt outside of the cottage.\n\nWith slow movements, Jon hefted himself down from the driver's bench, and moved to knock on the door.\n\nMaria had climbed out of the carriage, and was stretching out her legs and arms.\n\nA middle aged woman opened the cottage door before Jon could reach it. From what I could see around Jon's back, the woman was quite striking. \n\nShe had straight black hair that fell like a liquid down to her shoulders. Her dark hair was contrasted by bright penetrating green eyes.\n\nAbout her face a few wrinkles brushed the corners of her eyes and mouth, making it impossible to judge her age.\n\n\"If you are selling something monsieur,\" the lady began in a voice of a queen, \"I can tell you right now that I want for nothing, and that I am not buying.\"\n\nHer eyes landed on Maria who looked like she might be limbering up for a performance, \"Nor do I have any coins for a traveling troop, no matter how prettily she might...\" the woman trailed off. Maria had turned around to look at this imperious woman.\n\nJon made a placating gesture, \"We are no traveling merchants nor actors,\" Jon said, \"We simply wish for a place to stay out of the wilderness proper. We can pay you for allowing us to make camp near the cottage, and for the use of your well.\"\n\nThe lady shook herself, and tore her gaze from Maria back to Jon.\n\n\"Let's see the money then.\"\n\n<center>***</center>\n\n<CENTER>-Alarial-</CENTER>\n\nThe water from the well was sweet and cool.\n\nI shivered slightly as the chilled water and the bracing late afternoon air touched me. The sun dappled the cottage through the tree tops, and lazy smoke drifted from the chimney.\n\nJon and Daniel were talking by the well. The two seemed to get along well. They were both swordsmen, and they were both immersed in supernatural affairs.\n\nI was surprised that Jon, who was half a millennium old, found it very interesting to talk to a man in his late twenties.\n\nDaniel himself was a bit odd, but not in a bad way. Every once in a while he would disappear into his head, and look startled when anyone tried to break his reverie. Perhaps memories of past Monsters distracted him.\n\nThe cottage door opened, and the woman, who we learned was a widow, emerged with a tray of teacups in hand. The cups looked all mismatched. There was one cup of white porcelain, one cup made of hard iron, and another one that was dark green and made of jade.\n\nShe must not get many visitors.\n\n\"I made tea,\" she said, \"My well is not worth the money you gave me, but I appreciate it nonetheless. Please accept a little of my hospitality.\"\n\nJon nodded, and Daniel treated the lady to a wide smile. Daniel probably fancied her.\n\nShe handed Jon the cup of iron, and Daniel the cup of porcelain.\n\nShe turned to me and smiled, \"For you too my dear,\" she said as she proffered the last cup.\n\nI tried my best to return her smile. My dreams still clawed at the back of my mind. The awakening bond still made me ache for my Master.\n\nI reached out, and grasped the cup.\n\nMy hand went numb as a searing cold crawled up my arm. The hand I had taken the cup with felt frozen, as if it were made of immobile stone, rather than my flesh.\n\nI looked up at the woman. Her smile was fierce and twisted. \"I know what you are girl,\" she snarled.\n\nThe cold reached my face, and I knew no more.\n\n<CENTER>Chapter 4\n\nBlack Flames\n\n-The Royalty of the Dark were once Angels. Betrayal sent them to Hell, but it was Hell that corrupted them. They are the original Fallen. Other Angels have been corrupted by Hell since, but none can compare to the Original Ten. They are to be scorned. They are to be pitied.-A scrap of Parchment that burned at Alexandria-\n\n-Devnik-</center>\n\nI had almost forgotten.\n\nStrange really...how I could have almost forgotten. Like a piece of gristle between a tooth, or a pain that lingered and wouldn't go away, I had learned to ignore it...almost.\n\nI was sitting with my legs crossed, in a room with no doors nor windows. It was perfectly dark.",
        "The smooth stone walls made any sound reverberate for a minute before it slowly disappeared. I had placed wards on the walls. Not to keep myself hidden, but to amplify what went on in here. If I was to play my part, the Light needed to sense me.\n\nSlowly, I began to ease the iron grip I held over 'that' aspect of myself.\n\nLike a muscle that had been held clenched and tight for too long, as soon as I relaxed my barriers, a pressure lifted, and a stress I hadn't know I carried was dissipated.\n\nThe power rushed to the surface with a roar.\n\nBlack flames sprang up on the dark stone. They flickered menacingly about my seated form. They were hungry...oh they were hungry. I stared back at them, transfixed. Their dancing shapes whispered to me.\n\nThey wanted to destroy, to undo. Anything they touched would be consumed...obliterated. \n\nThese shadow flames were Destruction made manifest.\n\nThe power surged again, and the heatless, lightless flames rose. I couldn't control them, it had been too long. With a feral howl I clamped down again. I could feel my mental barriers bow and shudder underneath Destruction's might.\n\n'Why do you deny us Master' They uttered sadly.\n\n 'We love you...we are you...we could make you great again'\n\nMy shields solidified, and the voices stopped, and I was left alone in my place of rest...deep under the Dublin Manson.\n\nAll I could hear was the sound of my unsteady breath. \n\nMy hands shook, but that was not important.\n\n<center>***</center>\n\nThe sun was setting once more, and I hadn't slept.\n\nThis deep underground, the sun did not send me into my normal lethargy. My thoughts had drifted between my struggle with my own powers...and my lost Halfling.\n\nI hoped she was finding her way to me, I hoped Jon was guiding her here.\n\nMy hands ached to possess her again, and that small part of conscience that she had been able to wake ached to love her again.\n\nThinking of one sister, made me think of the other. Bitter Cariel would still be confined to her bed. The band would make sure of that. I had half a mind to let her sit there for eternity. Still, I didn't want to summon Destruction again so soon.\n\nA little distraction might be welcome.\n\nI dissolved my form, and left the underground room.\n\n<center>***</center>\n\nI gathered myself together, and took solid form again at the foot of the Angel's bed.\n\nCariel looked on in shock as my body formed out of red sparks.\n\n\"Hello there,\" I said in my best deep and hypnotic voice.\n\nShe was staring at me, her silver eyes wide and full of fear. She clutched the sheet to her naked body, and she edged as far away from me as the bed would allow. Her shoulders bumped into the head board, and her lower lip quivered.\n\n\"I sensed it again,\" she said softly, her voice colored with despair and anger, \"I sensed what you keep hidden.\"\n\nI shrugged, \"I've been told to be distracting. Didn't you ever wonder why I am called the Prince of Destruction?\"\n\nHer face moved between different emotions rapidly. It settled on hatred.\n\nCariel looked up at me...her lips curled in disgust, \"What a thing to be lord of. You are pathetic. You are a blight on existence, tearing down what was lovingly built. \"\n\nI froze.\n\nNo one spoke to me that way. She should be terrified...yet once again, this red haired Seraphim sought to irk me. I curled my hand into a fist. For a moment I thought I would destroy her...despite the fact that she was Maria's sister. My black flames could eat her being in a heartbeat. I wouldn't have to fiddle with burying her alive. Destruction would feast upon her and I would never be troubled by her again.\n\nBut the moment passed, and I realized it would leave a poor taste in my mouth if I validated her by using my namesake.\n\n\"What?\" Cariel said mockingly, \"Couldn't do it? You should just destroy me Demon, it would spare me another moment in your wretched presence.\"\n\n\"Silence,\" I spat.\n\nThe band flashed. Cariel doubled over and she coughed noiselessly.\n\n\"Why would I destroy you, when I can play with you instead?\" I asked slowly... I stalked over to the bed, and my dark form loomed over her. On the bed, clothed in nothing but a white sheet, the little Angel's bravado was broken only by her shivering.\n\nHer pale white skin quivered in fear. Her red hair looked striking as it touched her fair shoulders.\n\nThe beauty of an Angel.\n\nI faltered. \n\nThis was hard. My heart wasn't in this familiar game. Her fear was a reflex to a creature like me. Her mind remained unbroken...and I found that I didn't want to do it harm. This was Maria all over again. These sisters had a strange power over me.\n\nI took a step back.\n\nNow I just wanted to sleep...I just wanted to not think for a while.\n\nI wanted to forget.\n\nCariel stared at me. Her mouth wasn't moving, but her eyes told a story of disgust.\n\nMaybe she was right. Even if I didn't rape her... there was nothing I could do about being the living aspect of Destruction. I would always be evil in her eyes.\n\nI shook myself. The Dark had long ago accepted its role.\n\n\"Come,\" I said, \"Follow me downstairs. I will keep an eye on you while I practice.\"\n\n<center>***</center>\n\n<CENTER>-Cariel-</CENTER>\n\nMy mouth wouldn't work.\n\nI had more to say to this Demon. He confused me, he enraged me. He represented an evil that could not be contained.\n\nHe touched me softly. He had bathed me. For one small second I had felt cared for as he put me to bed.\n\nNo...mustn't think those thoughts. My body was already his, my mind mustn't follow.\n\nI watched his back as he gracefully descended the stairs. He was wearing a dark black waist coat with a charcoal vest and blood red tie.\n\nHis French outfit had been similar. I tried not to notice how nicely he filled out his coat. I tried not to remember how firm his body had been pressed next to mine.\n\nMustn't think those thoughts.\n\nInstead, I focused on my fury. My resolve strengthened as I remembered how he had enslaved my half-sister. My resolve strengthened as I remember those awful black flames that lived at his core.\n\nYes...now I had found my strength.\n\nMy breasts wobbled slightly as I walked. Being kept naked was so humiliating. Yet, here I was, following the Demon like a beast on a leash. I wasn't even aloud to talk...making me a mute beast.\n\nWe entered the lounge from the previous night.\n\nThe Demon sat with his back to the fireplace. With a wave of his hand, the burgundy and gold curtains drifted open, and the moon peered in through window panes. The room glowed milk white.\n\n\"Be seated,\" Devnikolus said dismissively. \n\nMy legs moved without my input, and deposited me unceremoniously on the plush leather couch.\n\n\"Don't move,\" Devnikolus said, \"No matter what happens.\"\n\nWith that, his eyes slid shut, hiding those blazing red eyes behind pale lids. Without those hateful eyes, the Prince of Destruction looked like a beautiful dark haired man.\n\nThe room grew cold again...and I knew the Demon was calling his power.\n\nIt wouldn't be pretty red sparks this time either. Devnikolus was practicing his unique art.\n\nIn the fireplace, black flames leapt up.\n\nThey offered no warmth and they offered no light. Within the silence I thought I could hear voices cackling within the flames. Cold voices, evil voices.\n\nDevnikolus opened his eyes. He must have seen something he didn't like on my face, because he turned away. The Demon Prince stared into the unnatural fire and took a deep breath.\n\n\"It is getting easier,\" Devnikolus said, \"The flames will not destroy that which I do not allow them to. They will not spread unless I allow them to. After more than a millennium, it takes me but one night to regain my control. Even I am surprised.\"\n\nThe Prince of Destruction had not used this power for one thousand years? Curious.\n\nWhy did black flames not eat away the churches and monasteries of the world? Why did cities not disappear under the Demon's power? Every other Demon I knew would have unleashed this weapon at a whim.\n\n\"You may speak,\" the Demon said, \"Tell me...do you think these midnight fires are pretty?\" He asked mockingly.\n\n\"Why has it been so long since you have called this power?\" I asked, ignoring his goading.\n\nHe turned his head, \"I didn't know any talkative Seraphims before now,\" he said spitefully.\n\nI bit my lower lip in frustration.\n\nIt was so strange to be the weak one for once. As a Second Sphere Seraphim, few creatures in creation could treat me as this Demon did. I was used to giving orders, and smiting the Dark where ever it hid.\n\n\"Why won't you answer my question?\" I said, trying to match the enmity in his voice.\n\nDevnikolus turned to face me. His face looked weary, and his eyes looked lidded.\n\n\"Why don't you use this power?\" I asked again.\n\n\"Stop asking Cariel,\" the Demon said, using my real name for the first time in a long time, \"I feel every one of my years this night. You have done enough to test me. Be thankful you are alive...most of the Dark would have killed you by now.\"\n\nBehind him, a flicker of movement caught my eye. The black flames were seeping out of the fire place. The very stone of the hearth seemed to be burning.\n\n\"Demon!\" I shouted, \"The flames!\"\n\nDevnikolus whirled around and gazed on as the very stone of the fireplace started to disintegrate.\n\nThe Demon Prince clapped his hands together, and the fires of Destruction recoiled. Slowly the heatless blaze dwindled, and then winked out. Devnikolus was breathing heavily and his legs were buckling.\n\n<center>***</center>\n\n<CENTER>-Devnik-</CENTER>\n\nSuch weakness...and in front of the Angel to make matters worse.\n\nFor just a brief moment, I had felt so tired and then the flames had slipped their leash.\n\nHer question wasn't groundless, but I didn't want to answer. Things in the past should remain there. But some part of me wanted to confide in someone\n\nI turned to gaze upon the red haired Angel. Her silver eyes blinked at me curiously. At least curiosity was better than the outright loathing she expressed earlier.\n\nIt wouldn't do for me to express my doubts to another member of the Dark. We might be united against the Light, but we had endured plenty of internal fighting. When another Demon Prince sensed weakness we would try and steal land and subjects from each other's plane of Hell.\n\nBut this soft vulnerable looking Angel was mine, bought and paid for with magic that was exceptional even for me. She could be anything I wanted her to be. I still needed a bondsman. She could attend to me. She could ease this weariness that recent events had pressed down on me. She could be my unwilling confidant.\n\n\"I'm going to move us with magic Cariel,\" I said after a long pause, \"Don't try to resist.\"\n\nUnholy magic engulfed us both, and swept us down into my chamber deep underground.\n\nIt still reeked of Destruction down here.\n\n\"I can't see anything,\" Cariel complained, \"I feel uncomfortable...where are we?\"\n\nA ball of red light flashed into existence on my hand and I threw it up at the stone ceiling. It stuck to the ceiling, and bathed the stone chamber in a heady red glow.\n\n\"You're underground, little Angel,\" I said cheerily. \"You best hope that the ceiling doesn't cave in. I hear Angels don't do well underground with dirt on all sides.\"\n\nCariel's silver eyes seemed dim and unresponsive in the red light. \"If you want to bury me, just do it,\" she said, \"Don't put me in this box and toy with me.\"\n\nI put my back against a wall and slide down to the floor.\n\n<center>***</center>\n\n<CENTER>-Cariel-</CENTER>\n\nMaybe I had pushed him too far. Perhaps this stone box deep underground was to be part of the torture he had threatened. Angels do not like being underneath the Earth. It made us feel weak and lethargic.\n\n\"You asked me why I don't use my gift,\" Devnikolus said softly...like he was testing the words in his mouth. He had his eyes closed again.\n\nI kept my silence, worried that I might break this odd mood that had taken hold of him.\n\n\"What would you do, if you had my powers?\" The Demon asked.\n\nThat was not what I expected him to say.\n\nI had thought perhaps they were hard to control...or that it caused him pain or great fatigue to use them. I had not been expecting him to ask me anything.\n\n\"I told you before,\" I managed to say stiffly, \"The power to destroy repulses me. Creation is the embodiment of life and love and light. Destroying it would be a sin, hence, I wouldn't use your power if I had it.\"\n\nThe Demon chuckled lightly against the cold stone wall. He looked like a prisoner in a dungeon for a brief moment...depressed and limp and trapped.\n\n\"Is it so strange to think that I might think the same thing?\"\n\nYes, was my immediate, internal reaction. You are a Demon. You have wronged my sister and me beyond forgiveness. I should have made better plans before I entered that clearing. I should have won.\n\n\"I can see by the look on your face that you do think it strange,\" Devnikolus mused. His eyes were open now, but the usual intensity of his gaze seemed to be missing. \n\n\"I don't care so much about sinning,\" the Demon continued, \"I've always thought those rules arbitrary. But I would much prefer to enjoy Creation, rather than see it burn.\"\n\nThat...made a sort of sense, I thought to myself grudgingly. The Demon was too much of a hedonist to be an impartial destroyer. He was loathe to destroy that which brought him pleasure. Like my sister...or me.\n\nI shuddered at that last thought...even though my entire body tingled, and my mind skipped back to our bath again, and his tender fingers on the sides of my breasts.\n\n\"Lucifer was overjoyed when he discovered my Demonic powers,\" Devnikolus continued. \"He had grand visions of burning down entire cities and pissing on the ashes.\"\n\nHe paused, and his eyes slid shut once more.\n\n\"All I wanted to do was fuck mortal women, and drink their blood. Every once in a while I enjoyed fighting the Light, but using Destruction felt too easy...it felt like cheating.\"\n\nMy fatigue caused by being underground must be making it hard to think clearly. I was feeling sympathetic towards the Demon. He was a creature who hated a part of himself...maybe even all of himself.\n\n\"You will eventually come to terms with serving me,\" Devnikolus said softly, \"My butler Jon hated his service...but he has come to enjoy it. You too will take pleasure in serving me.\"\n\n\"I wouldn't count on it Demon,\" I said....but once again I couldn't muster anger to my voice. His voice was hypnotic...and the band around my throat tingled.\n\n\"You will be my bondswoman,\" he continued. \"You will rub my muscles when they are sore and stiff. You will comfort me and care for me when I am weary. You will stand at my side and be loyal to me,\" the beautiful Demon took a breath, \"You will be my confidant, and you will keep and treasure my secrets.\"\n\nThe band was vibrating.\n\nNo...I thought wearily. I thought this collar could only give me physical commands. I had just gotten used to being a physical slave.\n\nI couldn't be a mental one too.\n\nBut, whether I wanted to or not, the band had been activated...and it was doing something.\n\n<center>***</center>\n\n<CENTER>-Devnik-</CENTER>\n\nI kept my eyes closed.\n\nIt had felt good to say those things. They were out in the open now...and they no longer felt like my sole burden. This mythically beautiful red haired Angel would serve me this way. I'm sure she would eventually come to terms with me being her master.\n\nHer sister had.\n\n\"Are...are you sore now Demon?\" She said in a stilted voice.\n\nI was so tired. Those flames took everything out of me.\n\n\"Yes,\" I said simply. Hopefully she would sit there and be quiet and let me sleep. Or maybe she could ease my aching muscles...though it would probably be years till she started to fill that role.\n\nThen I could feel her soft cool hands on my shirt.\n\nMy eyes flew open. I was ready to defend myself in an instant. I looked about for her spelled Holy dagger...but I couldn't see anything. Just her trembling hands, clumsily undoing the buttons of my vest.\n\n\"Help me?\" she asked softly.\n\nI lifted my gaze. Her silver eyes had a film of tears glittering along the edges. She looked sad, but resigned. I realized a moment later that the band was doing this, I hadn't realized it had been registering my commands.\n\nI kept my eyes locked onto hers as I slowly undid the buttons on my shirt and vest.\n\nShe met my eyes for as long as she could, but eventually her gaze dropped to the exposed muscles of my stomach. The Angel shivered...and sniffled. She was but a moment away from crying...teetering on the edge.\n\nI shrugged out of my garments to reveal my back.\n\nWith a sigh, I turned around and faced away from the Angel. I crossed my legs, and leaned forward.\n\n\"Start with my back Cariel,\" I said soothingly. \"I know you can do this.\"\n\nShe pressed her fingers tentatively into my skin. Her cool fingers warmed as she began to trail her hands down my spine. Her hands kneaded the tight muscles just below the surface. They hardly moved.\n\n\"I am not human Angel,\" I said lightly, \"You will have to put real pressure on me.\"\n\nI could almost hear the Angel set her jaw, and vigorously press the heel of her palm into my tight muscles. She kept up that inhuman strength as she trailed her hands up and down my torso. My body began to relax as she caressed the flesh of my lower back.\n\nI sighed, and the Angel cooed softly...almost inaudibly.\n\nShe pressed a particularly sore spot and I shivered.\n\nTiny red sparks flashed and crackled happily along my body.\n\nShe jerked her fingers away.\n\n\"Relax,\" I said, my voice filled with sleep, \"They won't hurt you.\"\n\nCariel replaced her hands on my back, and started to work on my neck. I wondered if she thought about how my throat was unadorned and free, and hers was collared and controlled.\n\nSleep took me while my new bondswoman rubbed her master.\n\n<center>***</center>\n\n<CENTER>-Cariel-</CENTER>\n\nThe Demon had fallen asleep sitting upright.\n\nGently, I pulled him down to the ground so that he might be more comfortable.\n\n'What am I doing... this creature is my enemy'\n\nBut the ground was so hard and cold. The muscles that I had just worked over would stiffen and hurt after sleeping upon a stone floor. Why did he bring us here?\n\n'To escape the sun, this monster cannot abide its cleansing Light'\n\nWith a wave of my hand I conjured up my favorite sleeping mat. Blue sparks flickered about as they worked my will. My mat made of soft pink silk stuffed with goose feathers appeared upon the Demon's stone floor.\n\nThat's better. I wrapped my arms around him, and pulled him onto the comfort of my travel bed. This felt strangely intimate to bring him onto the bed that I slept on away from home. This felt like going to bed with the Demon.\n\nMy sex tingled at the thought. I could feel the beginnings of arousal lubricate my pussy.\n\n'These thoughts are wrong. These actions are wrong.'\n\nHe's still wearing his shoes. It can't be comfortable to sleep in shoes.\n\nI knelt down, and took his shoes off one at a time, and then removed his black leggings. His feet were cool and perfectly proportioned.\n\nI paused.\n\nMy hands are so cold. It can't be nice to be touched by cold hands. I crossed my arms and put my hands under my armpits hoping to warm them for Devnikolus.\n\n\"Demon,\" I whispered, \"Do you still want me to...um...comfort you?\"\n\nI watched his youthful face carefully. He didn't respond. He was deeply asleep.\n\nWhy did he have to be a monster? He looked like a young man who would wake with a laugh and a smile. I could imagine that carefree dark haired youth clearly in my mind. He would have been something to behold.\n\nHe never told me to stop my actions.\n\n'This creature should never tell you anything.'",
        "I brought my hands to the top of his back where his shoulders met his neck. I kneaded his hard muscled skin with the heels of my palms. Once I was done working on his neck I started a gently circular motion on his shoulder blades.\n\nMy mind still felt hazy, but I decided I liked touching his skin.\n\nMy fingertips danced lightly down his spine, until I reached his lower back. With my thumbs, I slowly worked on that sensitive place where the back ends and the slopes of his muscular buttock began.\n\n'Did you just think about licking his skin?'\n\nI hesitated at his clothed lower body. He hadn't said anything about undressing him any further. I suddenly felt guilty about removing his shoes. Well then I won't remove his trousers... I thought firmly.\n\nI shivered slightly. This stone room was still so frigid. The Demon must be cold.\n\nHe said I had to comfort him. Being cold was not comfortable.\n\nBefore I could even really analyze my movements, I lifted up one of the Demon's heavy arms and slipped under it so that his arm was draped around me. Now our torsos were touching.\n\nMy soft breasts pillowed against the Demon's hard chest as I burrowed myself against the dark haired man. I put my arms around him, and hugged him to my body. Hopefully my flesh would warm him in this cold stone room he had chosen to imprison himself in.\n\n'This is sexual. You are too close to him. You are wet. Why are you wet?'\n\nThe Demon should be comfortable now...I thought to myself.\n\nThen, as if a fog had been lifted from my mind, I realized all the intimate and unacceptable things I had done. With my commands satisfied, I had regained control of my mind.\n\nAnd yet, I couldn't move. If I moved the Demon might get cold, and then I wouldn't be fulfilling my orders.\n\nI was trapped with the Demon's muscular arm lying across my body, while I hugged him to my bosom like a lover. Tears fell down my face as I embraced my captor, and tried not to rub my wet sex against his leg.\n\n<center>Chapter 5\n\nConflict\n\n~I heard the buzzing. The Flies were everywhere. Fresh corpses were stripped to the bone in seconds...and in the middle, Beelzebub sat, devouring the flesh of fallen. \u2013 Survivor of the Pyrrhic war.~\n\n-Daniel Fleeting-</center>\n\nThis wasn't part of the plan.\n\nI had been distracted for a moment. This woman with jet black hair and forest green eyes had reminded me of a past love...and I had dropped my guard.\n\nHad I been aware I would have realized that no woman living in the forest has a teacup made of jade. \n\nGreen sparks had danced from the cup as soon as Maria had laid hands upon it.\n\nThe jade must have a glyph of power written upon it.\n\nMaria's body was frozen where she stood. For a brief moment eyes that I had mistaken for pale blue flashed a brilliant silver...before dimming into lifeless empty eyes.\n\n'Maria must be an Angel,' Vraiel whispered in my head.\n\nI shook myself, and dropped my teacup like a snake. I hadn't taken a sip yet, and I doubted that I wanted to. \n\nMy cup made the smallest of sounds as it thumped into the grass.\n\nThe black haired woman whirled around and crouched defensively in front of the paralyzed Maria. Her face was contorted into a hideous snarl. The veins around her eyes bunched grotesquely, and her pupils dilated until even her sclera was as black as night.\n\n\"She is one of The Afflicted,' Vraiel said, 'She is a thief of magic.'\n\nThe woman spoke in a voice distorted by stolen magic. It was harsh and unnatural sounding.\n\n\"I give you one chance mortals,\" she said in her bizarre voice, \"Walk away at once, and I will let you live. The girl stays with me...her power belongs to me.\"\n\nWith a flourish Jon drew his beautiful old hand and a half sword. It gleamed in the light of the sunset, and he twirled it gracefully before bringing it to the ready.\n\n\"I will not let you touch the Master's possession,\" Jon said calmly.\n\nI put my hand on Fleeting Light.\n\n'Draw your sword...and you will reveal your nature as a Judicar,' Vraiel reminded me.\n\n\"You can't hope to best both of us Afflicted,\" I said sternly. \"Undo the glyph and we shall depart without slaying you.\"\n\nThe creature threw back her head and laughed. It sounded like metal bending and children crying all at once. Demon's at least had a grace to their evil. This creature was simply ugly in its depravity. I moved into a ready stance, with my hand on my sword. \n\nThe woman drew back her hand. Upon her palm multicolored sparks of green, red and blue mingled. She flung the spell at Jon, whose eyes went wide.\n\nThe outmatched swordsman threw himself to the ground and rolled away. The barrage of magic collide with a tree behind him and instantly shattered the bark. The old oak crashed down to the forest floor.\n\nAs Jon neatly rolled back to his feet, I charged the abomination. My fist was cocked back, and secretly load with Light magic. My knuckles would feel like a cannonball when they met her face.\n\nWith Vraiel enhancing my eyes with his magic, I could see the creature augment herself with her own power, and move supernaturally fast out of my reach.\n\n\"You are quick human,\" the woman said with narrowed eyes.\n\nI grinned, \"I've killed much worse things than you sinner,\" I said mockingly.\n\nJon and I slowly advanced on the woman.\n\nShe took measured steps backwards. Her black eyes and veiny face stared hatred at us.\n\nShe brought her hands up, and tossed more multicolored magic at Jon and myself. These bolts of magic came fast...much faster than magic usually travels.\n\nI called upon my Light magic to neatly step to the side.\n\nJon...having no such advantage, took the brunt of the blast to the chest. His limp body flew through the air and landed with a soft thud nearby.\n\nThe woman had her hands at the ready...sparks dripped from her fingertips as she turned and faced me.\n\n\"You...you are no human,\" she said in ragged breaths. The constant casting must have taken it out of her.\n\nI cast a look back at Jon. He looked to be safely unconscious. Some of his clothes and skin were smoldering.\n\n\"Yes,\" I said as smiled at her. \"I'm afraid I'm more than human.\"\n\nFleeting Light sung as I drew it from its scabbard. A clear and pure ring filled with air...like a church bell calling the faithful to worship, or a war horn condemning sinners to death.\n\nThe metal glowed with Holy Light, and the sword's name shone bright blue.\n\nI gazed upon her now...my normal eye color would have been replaced with a magnificent silver. If she was wise she would run...for she was about to be judged.\n\n\"Judicar...\" she whispered...as if she couldn't quite believe it, \"why couldn't I sense you?\"\n\nVraiel spoke through me, \"We have lived a very long time...we have completely mastered suppressing our nature.\"\n\n\"Let me go,\" she said softly in a voice that sounded a bit more human, \"I'm sorry, I didn't know... just let me live.\"\n\nVraiel and I spoke as one mind, \"Your sins are too great my child,\" we said in the voice of Heaven, \"you reek of many magics that are not your own.\"\n\nWe took a step forward, and the craven before us took a step back.\n\n\"As a Judicar of heaven, I judge you to be a sinner in the eyes of God, and condemn you to die on my blade. May the Lord have mercy upon your soul.\"\n\n\"Die!\" she shrieked as she hurled magic at us.\n\nWith our sword raised, we dodged her first spell, and took the second to the shoulder. The sorcery burned and ate at our flesh, but it didn't slow us. Her hateful black eyes widened in fear as she realized she couldn't stop us that way.\n\nUsing stolen supernatural speed, the woman dodged the tip of our sword by mere inches.\n\nThe woman produced a small knife that looked to be made of more jade, and hurled it in our direction. I was caught unawares, but Vraiel was not. Fleeting Light shot up, and the dagger clanged against our sword. A glyph written on the side of the blade tried to splutter into existence, but blue sparks poured from our sword and drowned out whatever stolen magic lingered there.\n\nI straightened to my full height, and once again began stalking toward the abomination.\n\nMy Demonic core was beginning to ache. With our sword drawn our Light magic was at its fullest. My heart of stone and evil would only hurt more as this battle wore on.\n\nThe woman pulled both her hands back and frenzied magic began to dance upon her hands, \"FUCK YOUR GOD PUPPET,\" she screeched.\n\nShe threw her magic at me, and with an Angel's grace I slipped in between the two bolts, and suddenly stood before her. With her magic spent, her eyes had returned to their natural green, and her face had settled into her original beauty.\n\nShe slumped to her knees, exhausted and spent.\n\n\"Hand in hand,\" Vraiel began to quote as we raised our blade, \"the wicked shall not be unpunished: but the seed of the righteous shall be delivered.\"\n\nHoly steel bit into her shoulder, and Light magic coursed through her body.\n\nShe shook and twitched as she tried to remove the blade from her body...but eventually her struggles grew weak...and then they stopped altogether.\n\n<center>***</center>\n\nWith a sigh, I sheathed Fleeting Light. \n\nI could feel my magic recess until it winked out of existence. My stone heart ached, and I absently held my chest. Our little camp next to the well was in tatters. The Afflicted's chaotic spell casting had left the nearby landscape smoldering slightly. Patches of grass were curled and burned.\n\nMaria was still frozen holding the enchanted jade cup.\n\n'The tea in the cup holds her magic Daniel,' Vraiel said softly in my mind. 'You must take the cup from her hand and make her drink the tea.'\n\n\"Won't I be frozen too if I take the cup?\" I asked aloud.\n\n'No,' Vraiel replied, 'The glyph is spent, the cup is a harmless receptacle of the girl's magic.'\n\n\"I can't believe she is an Angel,\" I said softly.\n\n'Half an Angel is more likely.'\n\n\"Aethling,\" I whispered.\n\nI gazed upon the girl in silent awe. She was human, yet she was also divine. This young woman would be welcomed into heaven by right of birth. She would not have to claw and scrap and pray to be admitted to paradise. \n\nBitter envy stabbed at me.\n\n'The Demon's heart is clouding your thinking Daniel, Vraiel proffered kindly. 'Help the girl, she is our kin.'\n\nBefore I could think better of it, I took the cup and held it to the young girl's lips. She drank unconsciously, with her eyes unseeing. When the last drop was finished the Aethling blinked once, and passed out.\n\n\"What did you do?\" Jon asked from behind me.\n\nI turned to observe the swordsman. He was holding his injured solider. His clothes were burnt but his eyes were clear and lively. He would live.\n\n\"The cup held the girl's magic,\" I said as if I had known the girl's true nature the entire time. \"She will sleep for a while and then she will be recovered.\"\n\nJon wearily got to his feet, and retrieved his gleaming sword from where he had dropped it. His eyes glanced at the husk of the Afflicted's body.\n\n\"You are apparently very skilled Daniel,\" he said after a beat.\n\nWith the same motion he demonstrated once, he kicked his sword up into the air and grasped it...then he replaced it in its sheath. He spared the corpse one last look, before staggering back to the well.\n\n\"I'm very glad you happened along when you did Daniel,\" Jon continued, \"I'm sure we can find more coins for you after going above the call of duty.\"\n\nI smiled warmly, \"That is very kind of you.\"\n\nHe still thinks I'm nothing but a sell sword and a Hunter...my ruse is safe.\n\n<center>***</center>\n\nJon agreed to look after the comatose Maria while I excused myself to search through the abomination's cottage. I genuinely did think that there might be something useful or valuable inside, but that wasn't the reason I volunteered.\n\nAs soon as the creaking wooden door was shut behind me, I dropped to the floor in convulsions.\n\nMy demonic core was aching and throbbing inside my chest. It felt like I had swallowed a hot coal, and now it was burning a hole right through my center.\n\nI opened my mouth to scream, but Vraiel clamped my mouth shut and muffled my cries.\n\n'Scream and Jon will come and investigate,' Vraiel said softly in my mind. 'I know it hurts my friend...but you must be strong, your shoulder is almost healed.'\n\nAnd he was right. Small angry red sparks jumped about my flank as they healed my wound.\n\nI sat there for about three minutes until I found the strength to stand.\n\n'You did very well Daniel. You have served both the Light and yourself this day. I'm proud.'\n\nI smiled.\n\nThe cottage was immaculately clean. Tasteful white sewn linens and brass pots decorated the kitchen and living area. The back room was made up of one tidy bed, and several books.\n\nBooks are expensive, I wonder how she managed to afford all these.\n\n'She probably killed their owners. Afflicted are naturally bloodthirsty,' Vraiel said in my head.\n\n\"Do you think any of these are worth taking?\" I wondered.\n\n'Most probably refer to her craft of stealing magic.'\n\nI shrugged, and made my way back outside.\n\nJon had Maria wrapped in a blanket. Her beautiful pale face and shimmering blond hair were utterly without expression. She looked like a serene statue.\n\n\"Anything?\" Jon asked over his shoulder.\n\n\"Books,\" I replied with a shrug. Let him think that the books didn't interest me. I wouldn't be able to say it without lying.\n\nHe cracked a smile, \"I'll take a look at some of them later. Maybe in the morning, when we have more light.\"\n\n\"Do you want to sleep in the cottage?\" I asked.\n\nJon spared another glance over at the woman's corpse. I really should go and bury it, or at least drag it out into the forest.\n\n\"No,\" Jon said with a smaller smile, \"I don't think I'd sleep a wink.\"\n\n<center>***</center>\n\nWe made another camp, and I repeated my trick with the pommel of my sword and some tinder. Soon I had another fire going, and Jon dragged Maria right up close so that she might warm up and recover.\n\nJon sighed as he moved his hands close to the fire.\n\nCrickets began to chirp there nightly Nocturne as true night fell. Clouds held the moon's light at bay, and our camp was the only bastion of light that the eye could see. I had seen more nights than I could count in my five hundred years. I could almost hum the cricket's song back at them.\n\n\"Thank you for what you did today,\" Jon said after a moment.\n\n\"It is what you paid me to do,\" I said with a wink.\n\n\"True, but I did not know the quality of service I was purchasing,\" Jon paused, \"Tell me, where did you acquire such speed? I saw you dodge what I could not.\" \n\nDamn. He noticed. He suspected. Lying was not within my ability. Half-truths were the best I could manage.\n\nHopefully he was passed out for the rest of the fight.\n\nWhat would he believe? If I tell him I'm a Judicar then he will know I'm an enemy.\n\n'Tell him you are an immortal. Tell him you won a dual for immortality. He might believe your speed stems from there.' Vraiel suggested frantically.\n\n\"Well?\" Jon asked mildly. His scars stood out clearly against the firelight.\n\n\"What do you know of immortality?\" I asked slowly.\n\nJon's eyebrows shot up, stretching the scars around his eyes until they pulled tight. His eyes settled into hard points.\n\n\"More than most,\" Jon said as he stared at me.\n\n\"Do you know how it can be obtained?\" I asked.\n\nJon nodded, \"I know of three ways,\" he said. \"You can bath in the springs beneath the Fae Leif-Tree. You can become Afflicted, and steal immortality from magical beings...\"\n\nHe paused, and he tilted his head...clearly lost in some thought.\n\n\"Or,\" he said with his eyes lost in the fire, \"You can dual a Demon to the death.\"\n\nWithout saying anything, I unbuttoned my shirt. The scar of the pentagram emblazoned my chest right over where my mortal heart should beat. Every other moment, the white scar would glow red, like it was mimicking a real heartbeat.\n\nJon gazed at my Demonic scar with wonder in his eyes.\n\n\"Does that answer your question?\" I asked as I began to button my shirt back up.\n\nThe scarred man looked down at his hands, and he played with the silver ring on his finger.\n\nA trick of the light made it look like tears clung to his cheeks. I blinked to clear the illusion from my eyes, and looked back into the camp fire. On the ground next to us, Maria the Aethling stirred prettily in her sleep.\n\n\"I guess that does answer my question,\" Jon said as he placed a hand on Maria's forehead. He frowned slightly at the temperature he felt and adjusted her blankets.\n\n\"How long have you lived?\" Jon asked after a fashion.\n\n\"Five hundred years or so,\" I said vaguely.\n\nJon's eyes widened slightly, \"I guess that would explain your experience,\"\n\nI nodded, and stayed silent.\n\nWe both stared at the fire until it dwindled to nothing but embers. I had just been contemplating fetching more wood, when sleep must have taken me.\n\n<center>***</center>\n\n<CENTER>-Alarial-</CENTER>\n\nThis dream was different...and yet it was the same.\n\nWhen I had taken the cup from the dark haired woman my body had shut down...and whatever spell she laid upon me hurled me tumbling into my own unconscious. For some reason, the artifice by which I had been put to sleep made me aware of the fact that I was dreaming.\n\nI could feel magic swelling in me, and I could feel the thin line of power that connected me to my Master.\n\n\u00ac'This must be the awakening bond.' I thought to myself with wonder.\n\nI could see it extending far to the North, it shimmered brightly, like a gold ribbon illuminated in a sea of darkness.\n\n\"Oh Master,\" I whispered as I touched our bond.\n\nAnd then suddenly, there was a white flash.\n\nMy Master was standing amongst the wreckage of an ancient castle. His ruby pommeled black sword was slicing through ragged looking warriors who knew they faced death. My Dark God danced among their would-be corpses with a macabre delight on his face.\n\nI smiled and sighed at the vision.\n\nDevnik froze, and spun around and looked straight at me. The warriors he had been battling disappeared like they had never been.\n\n\"Dreamwalker,\" Devnik hissed as he advanced with his sword.\n\n\"Master?\" I said, as I took a step forward, unafraid of the sword and his fiery red eyes.\n\nMy Master froze, and blinked once. Shock and awe colored his face as he gazed at me.\n\nWith a small smile, I did a cute little pirouette, and fluttered my eyes bashfully at him. \n\n\"Maria, how are you doing this?\" Devnik asked as he dropped his sword and it turned to ash and smoke. \"How are you standing in my dream?\"\n\nI didn't want to talk. As he came near me my body responded how it always did to his presence. But still, that was a direct question, and I would obey.\n\n\"A witch gave me a spelled cup and I passed out,\" I said hurriedly. \"When I was unconscious I found our bond in my head and touched it...and I wound up here. That's all I know Master...I swear.\"\n\nHe pulled me close, and ran a long pale hand through my hair. I practically melted as he tucked a strand of errant blond hair behind my ears. I looked up into his face. I wanted him to kiss me. \n\n\"Do you know what you're doing right now?\" He asked gently.\n\nDamn...just kiss me, \"No Master,\" I replied obediently. A rush of endorphins filled my body with euphoria. Obedient felt so good.\n\n\"You are dreamwalking pet,\" Devnik said as he pulled my head to his chest, filling my nose with his scent. \"This is a power of the Light, and it would appear that our bond allowed you to slip past my defenses.\"\n\n\"Don't be mad Master?\" I said into his chest.\n\n\"No dearest,\" he breathed into my hair, \"I'm not mad at you. I'm simply rejoicing that I can touch you again. You are more beautiful than I ever remembered.\"",
        "\"Are you in Ireland?\" I asked. When he nodded I smiled, \"Jon and I are coming to you. So wait for us.\"\n\n\"I will,\" Devnik said, \"I would come to you, but business is keeping me occupied.\n\nThere was a pause pregnant with tension and dark promises. \n\n\"Master?\" I whispered.\n\nThe beautiful dark haired youth stared down at me with half lidded eyes.\n\n\"Don't,\" he smirked, \"I know what you need.\"\n\nHe scooped me up into his arms and pressed his lips almost violently against mine. The arousal that had been simmering since I saw him exploded.\n\nI wanted to be thrown down and fucked, hard.\n\nHe placed one of his hands behind my head, which allowed him greater control of our kiss. It deepened and his hot tongue slide into my mouth. He was supporting my body weight with one careless hand. I felt another surge of lust erupt within me. My Master's power and strength were driving me crazy.\n\nThen, he dropped me.\n\nBut instead of the pain I expected of falling on a stone floor, I fell neatly into a soft bed of black silk.\n\nI had dreamed of this bed before. Good things happened on this bed.\n\nDevnik once again pressed his body against mine. I could feel his silk and steel cock press against my thighs. I lay there and submitted to his wandering hands as he reclaimed my breasts after his absence.\n\nThen my master placed his hands over my engorged sex and a single finger nestled directly over my clit. My legs involuntarily jerked as the intense sensation surprised me.\n\n\"Turn over,\" my Master ordered into my ear.\n\nWith shaky movements, I turned around and got on my knees. My heavy breasts swayed down and away from my body. I pushed my weeping pussy back at him obediently...hoping he would finally take what was his.\n\n\"Spread your legs my sweet slave,\" Devnik uttered as he ran a hand over the proffered globes of my ass. \"I want to see that pretty cunt.\"\n\nI groaned. It felt like my entire body was made up of arousal...like it had been forced into my very veins and muscles.\n\nSpank. My Master's hand descended upon my buttock with surprising force. Shit...I didn't obey fast enough.\n\nI moved my knees on the bed, spreading myself wantonly for my Master. I could feel the sting on my ass where I had been reprimanded.\n\nThen his cock took me.\n\nI cried out as he plunged into my slick slit. He plunged into me with such force that I fell forward off my knees. But that didn't stop him. My prone position simply gave him more room to sink further into my depths.\n\nI rocked my hips back against my Master's cock. I felt his hands grip my flanks as he rutted into me mercilessly. I could feel my peak fast approaching. White hot pleasure took my mind as I came under his pounding.\n\nHe didn't stop, he didn't even slow down.\n\nMy mind screamed for reprieve while my body begged for more.\n\nI could feel my pleasure mounting again. His hands slithered under my arms and took hold of my shoulders. He pulled my body back into his thrusts in this position.\n\nHis cock bumped into the curve of my cervix, and I exploded again as I felt my deepest being invaded. My body quivered around his cock. I shook so uncontrollably that I'm surprised he wasn't dislodge.\n\nBut no, something as meaningless as my disobedient shaking would not keep my Master from using me for his pleasure. Lust peaked once more at that thought.\n\nHis strokes became slower and harder.\n\n\"Omph\"\n\n\"Omph\"\n\n\"Omph\"\n\nI grunted as his cock slammed home. Then, I felt him stiffen, and his cock began to jerk and spurt his burning hot seed inside of me. His climax triggered yet another round of throbs and convulsions from my cunt, as it greedily sucked in my Master's spending.\n\nMy Demon lover rolled off me, and lay by my side. With a gently hand, he turned my face to the side, and gazed into my eyes.\n\nI saw love there. I saw it as clearly as I felt mine.\n\n\"I can't stay,\" Devnik said.\n\n\"Just a little longer Master?\" I whispered as I touched my small hand to his chest.\n\n\"I wish my sweet,\" he said, \"But your sister is waking up.\"\n\nChapter 6: Taming\n\n~Humans are both Light and Dark. We are capable of the most selfless compassions, and the most delicious sins. A life without both is an empty hollow thing. \u2013 Unknown~\n\n-Devnik-\n\nMaria's face smiled sadly at me as the dream fell apart.\n\nHer image faded and broke like the reflection of a shattering mirror. She said she was coming back to me. That thought alone prevented my mind from despairing.\n\nI could feel a stirring underneath one of my arms. Consciousness drifted lazily back into my mind... I lingered between sleep and reality. Cariel was awakening, and I could not slumber any longer. Using my innate Demonic ability, I reached out with my awareness and checked where the sun was.\n\nIt was just cresting over the horizon, marking the dawn of a new day.\n\nA groan escaped my lips unbidden, I was nocturnal, and this infuriating Angel was interfering with my natural sleep patterns.\n\nMy eyes snapped open.\n\nI was laying on some sort of feather mattress. It was soft, yet it reeked of old female sweat and Light magic. It was a surprisingly heady aroma.\n\nBut that wasn't the most surprising aspect of this unwelcome morning.\n\nI glanced down to the small female nestled underneath my arm.\n\nHer silver eyes were gazing up at me. She was trying her best to convey all her hatred and loathing for me through a simple look. But that didn't change the fact that her body was pressed closely to mine. Her soft naked breasts were pillowed against my side, and her hard nipples were making themselves known against my skin.\n\nHer smooth arms were wrapped around my body...like she was my lover.\n\nCariel's mouth turned down as she saw me assessing our position. Her expression became unreadable.\n\n\"Are you cold?\" She asked softly.\n\nWhat an odd question.\n\n\"No,\" I replied. I could hear my own confusion in my voice.\n\nIn a flash, Cariel blurred out of my arms and away from me. She rematerialized on the far side of the underground room. Her back was against the wall, and her arms were folded over her bare breasts, and her legs were crossed, hiding her sex.\n\nWith a sigh, I stretched and flexed my fingers and toes. My muscles felt wonderfully relaxed and supple. I knew Cariel would be working on my back again soon, whether she desired to or not.\n\n\"You did a good job on my massage, little one,\" I said in a slightly mocking tone. I was still mad that she had interrupted my shared dream with Maria with her squirming.\n\n\"Though we must work on keeping you still while I sleep, I become irrational when I have to be up during the day.\"\n\nCariel shifted in her incredibly defensive position, it couldn't be comfortable trying to sit and cover her assets at the same time.\n\n\"This can't be my life now,\" Cariel said as she looked at me. Again I found her expression unreadable. \"This isn't fair.\"\n\nI laughed...and my booming jubilations echoed menacingly in the small room.\n\nCariel shuddered.\n\n\"There is no fair Cariel. You fought me and you lost. Accept your fate and I can promise you that one day you will live for serving me.\"\n\n\"But I didn't fight you thinking that this would happen!\" Cariel screamed at me. Her silver eyes flashed, and blue magic fluttered in the air around her. She looked wild and fierce...and oh so fuckable.\n\n\"I thought the worst that could happen was my death...\" she said in a softer tone now, \"I never realized that I could become...a slave,\" she whispered the last part. For a moment there she had sounded truly broken. I liked it when she sounded like that.\n\n\"What difference does it make?\" I asked. I would lead her down a road of submission. Visions of Maria and Cariel on their knees in front of me danced across my mind. They would be sisters in blood and sisters in service.\n\nI would also drink that blood.\n\n\"It doesn't feel like you've won me fairly. This band around my neck feels like cheating,\" Cariel said with growing forcefulness.\n\n\"Oh? What rules are you referring to then little one? To my knowledge, our situation is unique,\" I said.\n\nCariel huffed, looking like the picture perfect example of an irritable and illogical woman, \"The rules of my feelings Demon!\" She shouted.\n\nHer face was red now, and the flood gates had been opened.\n\n\"I am a higher entity of the Light! I am powerful. I have lived for fifteen hundred years! I deserve some fucking respect!\"\n\nMore blue magic sparked and danced around her. The enslaved Angel's hand glowed a royal blue with unspent sorcery. In a flash, Cariel raised a hand at me, hoping to discharge magic at me.\n\nThe band around her neck activated...and the red haired and emotionally distraught Angel froze in place. The magic on her hands settled and then disappeared altogether.\n\nA moment passed. Cariel put an absent finger on her collar. She stroked the metal as she looked vacantly at me. Her rage had left her hollowed out.\n\n\"Cariel,\" I said gently, \"Look at me.\"\n\nHer silver eyes flicked over to mine.\n\nI sat up, and looked at her intently, \"What do you think would be fair?\"\n\n\"Fight me again,\" she said softly... eagerness gave her words a desperate undercurrent.\n\n\"Why would I do that Cariel?\" I asked...as if I was questioning a child.\n\n\"If you win, I'll let you fuck me,\" she said immediately. Her mouth was set in a grim line. She had decided she would pay for this rematch with her very body...but I already owned that.\n\n\"You make it sound like I couldn't already do that with just a word,\" I leered openly at her.\n\nCariel covered herself again, but her eyes didn't leave mine, \"You wouldn't want to rape Maria's sister would you?\" She asked as if it were a forgone conclusion.\n\nThis Angel put too much weight in her blood relation to my Aethling...and too much weight in my sense of morality.\n\nBut there was one thing that she could give me. Something that could only be given...not forced or taken. Yes...that would be it. I would be willing to fight again for such unending pleasure.\n\n\"I have a counter proposition for you Angel,\" I said slowly. I couldn't keep the grin out of my voice.\n\n\"I will lift the band's restrictions, and we will fight again. If you win I will untangle the magical web I placed in that band and set you free.\"\n\nCariel nodded her face alight with expectation.\n\n\"But if I win,\" I continued, \"You will offer me your blood for free. You will claim no wishes from me, and you will submit to my hunger whenever it strikes me.\"\n\nCariel's mouth dropped open, and she looked at me with familiar disgust.\n\n\"Unacceptable,\" Cariel breathed, \"regular Demon bites are addictive, I have no knowledge of how potent a Demon Prince's bite is...I would be even further lost to you.\"\n\nI shrugged, and licked my teeth suggestively. My mouth was watering, and my stomach rumbled...I wanted this badly. A fresh supply of Angelic blood whenever I wanted it. That would be true paradise.\n\n\"Those are my terms. You have just one chance at freedom. We can fight once more...with each party clearly knowing the terms of both victory and defeat.\"\n\nI left that hanging in the air...and sat back on my haunches. I watched the little red head deliberate like the predator that I am.\n\n<center>***</center>\n\n-Cariel-\n\nI knew a Third Sphere Erelim who had been bitten by a X'irel on a routine cleansing. He had been haunted by the pleasure that it had given him. His mind was in turmoil until High Seraphim Achael used potent magic to clear the Demon's venom from his system.\n\nThat would be my fate if I accepted and lost.\n\nAddiction.\n\nCould I defeat him after being bested a first time?\n\nCould I live with myself if I didn't at least try?\n\nIf we fought here I would feel lethargic from being underground, but I doubted he would change venues with the sun outside.\n\nI peered up at the Demon through my lashes. His luminescent red eyes glowed evilly in the semi-darkness of this underground chamber. His face was a mixture of expectation...and hunger.\n\nIn the end, hope won out.\n\n\"I accept.\"\n\n<center>***</center>\n\n-Devnik-\n\nI smiled...I would enjoy this.\n\n\"Cariel, I rescind my earlier command. You may attack me freely.\"\n\nThe red headed Angel wearily got to her feet, now that the time was upon her she looked reticent.\n\n\"How do we do this?\" She asked hesitantly.\n\n\"I think we can skip the opening pleasantries. We both know the others capabilities...I suggest we draw our swords of power immediately.\"\n\nCariel's mouth was set, but she looked nervous. She would have to face me without any of her previous tricks and tactics. This would be a fight without guile. Bravery is one thing, but I knew she had just sold herself to me. Perhaps she knew it too.\n\nHad she done this to make herself feel better? To assure herself there was nothing more she could do?\n\nCariel moved her hand in a familiar motion I had seen before. Blue sparks tore a hole in this plane, and she reached through that rend and pulled her sword into reality.\n\nThe blade was silver with intricate golden runes that moved gracefully across the metal. The sword glowed a dull blue in the darkness of the room.\n\nI plunged my own hand through a gap in Creation and reached into my own plane of Hell. My sword came willingly into my grasp. My blade was made of true-darkness with a Hellfire ruby embedded in the pommel.\n\nThere was no taunting...no theatrical come hither motions. Cariel simply moved forward...and we started our dance. She came at me with a ferocity that didn't show on her face. The Angel looked composed...even distant, but she slashed at me with a flurry of lead-heavy cuts. The swords clashed and grinded together rapidly.\n\nOnce the initial surprise of her sudden attack faded I pressed my natural advantages. I was stronger, I was faster, my reach was longer.\n\nI ducked away from a horizontal slash at my neck, moved to make room for my longer sword and parried swift cuts to my left and right flank. My speed and power flowed through me like water as I dodged and spun...too quick to catch.\n\nCariel jumped backwards as I aimed a lazy swipe at her legs.\n\n\"You aren't trying,\" Cariel said softly...anger burning through her composure.\n\nI didn't answer...I was far too busy imagining how her blood would taste.\n\nThe silver sword snuck out again. This time she made her cuts quick and light. She tried to dart around my defense. She tried to feint and fool. What she tried made no difference. Each strike met my sword or nothing at all.\n\nThis was no different than before...I wondered if this was her way of giving herself to me.\n\nHer hand jolted out and a spell of crackling blue lighting erupted from her palm. I grabbed it in mine...as if she had thrown me a ball. It guttered and died as I tossed it aside.\n\nThere was something akin to foreplay here...just like when the beasts of this Earth fight and wrestle so that the male may assert his dominance, and the female may test the father of her potential children.\n\nI grinned at that errant and whimsical thought.\n\nCariel's composure shattered, and she came at me with one desperate thrust.\n\nShe was not trying to protect herself...she would not be able to defend what she had exposed for this suicidal attack. Perhaps she meant to be so reckless...as long as it meant I either died with her...or killed her out of desperation.\n\nI dropped my sword and it turned to ash and smoke.\n\nWith my newly free right hand, I grasped her sword hard by the blade. Pain echoed through my hand as I did something I would never have been able to do had she been my magical equal.\n\nBlue Light magic roared as offending Dark flesh clamped around the sword it lingered in.\n\nI diverted the blade with my hand so that it would pass to my right and with my left hand I grasped Cariel by the neck. The tears that always seemed to lurk under the surface of this soft woman's eyes started again as she dangled in the air once more...with my hand on her throat.\n\nHer breasts bobbed delightfully as she swayed in the air.\n\n\"Submit,\" I said as I brought my face within inches of hers.\n\nRage...fear...sorrow...acceptance.\n\nI saw them all as the Angel's eyes measured mine.\n\nShe broke eye contact and looked down. Her sword dissolved into blue mist...and our fight was over. The conclusion had been forgone...but something within this red-headed beauty had been resolved.\n\n\"Yes Master,\" Cariel whispered.\n\nExcellent, I thought as I took in those powerfully submissive words.\n\nI tossed the Angel upon the forgotten feather mat. She landed roughly...the mat was not thick enough to completely soften her fall.\n\nShe looked up at me through her tangled hair...she looked soft and broken...pliant and expectant.\n\n\"Offer me your blood,\" I growled.\n\nCariel nodded, and a wan smile crept at the corners of her mouth, \"I freely give my blood, for now and for eternity, in honor of a debt that must be paid.\"\n\nFor a moment I was surprised that she knew the words to the ritual...but that quickly faded as I realized my desire had become a reality. This Angel's blood was mine...and my hunger was great.\n\n\"Close your eyes,\" I cooed as I approached the supine Angel.\n\nShe titled her head to one side, and complied. Pale lids slide shut, obscuring her Angelic irises.\n\nI moved my hand to cup her face...as gentle as the summer wind...and stroked her cheek with my thumb. Somehow I knew what to say, though I didn't know how.\n\n\"You did everything you could little one,\" I whispered, \"Relax now, you will be safe with me.\"\n\nI could hear her Holy blood swimming through her body, a low and captivating symphony that I would take part in.\n\nI opened my mouth and kissed her neck just above her shoulder. I bit down and felt my teeth pierce her skin. Her blue blood filled my throat. It tasted like liquid fire and my mind buckled and swooned under the taste and power that slid into me.\n\nIn return, I could feel my venom pouring into her helpless body. This would be her first of many doses of Demonic venom...and not just any Demon's venom...mine.\n\nCariel stiffened, she could feel the venom's effects now. Her eyes would dilate as the wonderful and joyous euphoria filled her to the brim. Her arms wrapped around me and she pulled me tight...urging me on.\n\nHer fingers clawed at my back as she lost control of her actions. The passion made her moan and groan in ecstasy. She entwined her legs around my thigh and pressed herself against me. Guttural and primal noises came from the back of her throat.\n\nThen the blood stopped coming...and I knew I had drained her dry.\n\nI released her, and her head fell back. Eyes half closed looked up at me languidly. She moved so sensually, her body weak from the lost blood.\n\n\"I never knew,\" she said in awe, \"I could never have imagined feeling this way.\"\n\nWith a gentle but firm hand, I detached her legs from mine and looked down at her. Her normal pale complexion was icy white with her body empty. Her bust rose and fell steadily as she tried to regain some sense of self. I knew the venom was still throbbing through her system.\n\nShe was aroused beyond normality.\n\nHer thighs were soaking wet, and her beautiful pussy looked raw and used from grinding against my pants. Hesitantly, she tried to sit up, but her shaking hands were clumsy and fumbling. She looked blank and used up...but her arms were reaching for me.\n\nThe little Angel wanted to hug me.\n\nI opened my arms and she fell into them. She buried her face in my chest and took deep gasping belly-breaths.\n\nMine.\n\nShe put her hands on my chest and looked up at me, \"I'm truly lost now...aren't I?\"\n\nI nodded, because it was true. \n\n<center>***</center>\n\nCariel\n\nI would need him to bite me again.\n\nNot now...this new need for the Demon's bite was slated for now. But I could feel the compulsion buried deeply within me. It wouldn't happen today, maybe not even this week, but soon I would need it again.",
        "My body would ache for him...it would be overcome with need...desire...pain. With my magic I could feel a substance coursing through my body where my blood used to be.\n\nThat substance caused these new feelings to emerge. \n\nThe band could keep me here against my will.\n\nThe need for this new substance would keep me here willingly...eagerly even.\n\nNo hope of escape now...and I knew I couldn't kill him...even when the band wasn't stopping me. His embrace was soothing, and my arousal was still high. I had never felt pleasure like this before.\n\nBeing an Agent of the Light was dry and noble. It was mostly passionless. The pleasure came from being an unflinching servant of justice...an arbiter for the sinful. Love was a warm and glorious affair amongst the Light...but it didn't have this.\n\nThis was passion.\n\nThe Dark Demon in front of me represented a wet...sticky... intimate...all consuming pleasure. He represented hot blood and dirty degrading sex. Devnikolus was hedonistic and dominate, and it was all to easy to slip and submit into his hedonism. That is what I was becoming...submissive, needy.\n\nI liked it.\n\nI liked it in a way that I knew I shouldn't. He was evil, I was sinning, but the pleasure was too delicious. The visceral liquid euphoria that he could bring was better than being good and sinless.\n\nIs this what Alarial felt? Do she too fight this evil until the overwhelming pleasure pulled her under and subjugated her mind and body?\n\nThis dark undertow was pulling at me, and I had already decided to give in.\n\nHe could have all of me for now...I could be his.\n\n<center>***</center>\n\nDevnik\n\n\"Fuck me.\"\n\nShe whispered it into my chest. Her voice was muffled but her words were clear.\n\n\"Beg for it sweet girl,\" I said as I ran my fingers through her thick hair, \"If you beg for it, you'll get a taste for it, and I'll satisfy your every desire.\"\n\nI reached down and touched her vulva lightly.\n\nHer eyes lit up as my touch reignited all the longing and arousal which my venom had implanted so deeply into her mind. Every inch of her skin thrummed and pulsed with fresh desire.\n\n\"Say it.\"\n\nShe shuddered again, she was close to her crisis, yet she was powerless to get it.\n\n\"Please...Master...please fuck me.\"\n\nI was on her before she could move. My hands like iron shackles around her wrists as I pinned her arms above her head. Pleasure swept through her at my touch as she trembled.\n\nWith the aid of magic, I slipped from my riding pants and bared my manhood. I was painfully erect.\n\nMy eyes looked into hers, I wanted her to look at me as I entered her.\n\n\"You're going to like it,\" I growled.\n\n\"Yes, Master...\"\n\nI slipped myself inside of her and her channel relaxed enough to allow my tip in.\n\nShe moaned and hissed. Her eyes were locked on our joining.\n\n\"Eyes on me Cariel,\" I said heavily.\n\nHer eyes burned with pleasure and shame was she complied. I gave her a small smile. She looked so much like Maria...I hadn't lied when I said she'd enjoy her service. Her eyes widened at my sincere smile and her lips parted.\n\nI crushed my mouth to hers...claiming her tongue as I claimed her pussy. I bit her lip...she groaned and thrust back at my cock and it plunged deeper into her. She was tight...unbelievably tight.\n\nThis Angel rarely had sex...that would change.\n\nI pulled away from her. Her face was awash in raw sensation. There was no more reluctance or regret, just delight. My cock had worked its way to the hilt. This soft girl shuddered under me, as her soft body yielded completely to my cock. She had taken all of me.\n\nI pulled out nearly all the way and then drove into her with as much force as I dared.\n\nCariel grunted as her pelvis felt the impact. Her soft buttocks wobbled delightfully. Her center felt like molten liquid, and her sex coaxed and milked me fervently desperate for my manhood's presence.\n\nFor a time I pounded her mercilessly.\n\nShe gave a low primal moan after a minute of this onslaught, and her eyes rolled back into her head as she came. Cariel lay motionless as I continued to use her.\n\nThe Seraphim of the Second Sphere who hated the Dark and stood for the Light had disappeared. She had been replaced by this unmoving creature of obedience.\n\nI pressed all the way into her with one final stroke, our pubic bones touched as I emptied myself into her. \n\nSpent, I pulled myself from her grasping cunt and rolled over to my side. \n\nCariel rolled over with me. She lay on her side looking directly at me.\n\n\"A Demon came inside of me...\" Cariel said softly...like a dream.\n\nI cocked my head to one side and raised an eyebrow. I watched her carefully, wondering how this unpredictable creature would respond to this newest development.\n\n\"Hold me?\" she asked.\n\nI gathered her in my arms, much like I had when I had first tried to comfort her in the basement. Except this time, she sunk into my embrace like she belonged there. Her smooth muscular legs wrapped around my waist, and she clutched at me as if I was her only comfort.\n\n\"So lost,\" she uttered within the confines of my embrace.\n\n\"So lost\"\n\n\"So lost\"\n\n\"So lost.\"\n\nI brushed her hair back and grasped her head gently by the scruff of her neck. She stopped her mantra...and sighed deeply against my skin.\n\n\"So good...\""
    ],
    "authorname": "Noble_Truth",
    "tags": [
        "male dom",
        "romantic",
        "mind control",
        "rough",
        "fantasy",
        "reluctant",
        "angel",
        "massage",
        "demon",
        "mdom"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/celestial-wars-ch-01"
}