{
    "title": "Voodoo Girl Pt. 02",
    "pages": [
        "Her skin is white cloth,<br> and she's all sewn apart<br> and she has many colored pins<br> sticking out of her heart.\n\n-Voodoo Girl, Tim Burton\n\nI woke up alone.\n\nI woke up alone and wide awake. I didn't want to be; I wanted to be in a deep sleep, and if I had to wake up, then I wanted to wake up and be back to the life I knew before. But that was never going to happen. That life and that world was gone.\n\nI knew Nate wasn't beside me, and that he hadn't been beside me for some time. I felt the lack of him acutely and worried, as I was prone to doing, about how much I was attuned to him.\n\nAnd of course I was hungover, as Libby promised. The world was dim and slanted. Every muscle hurt. My head throbbed unbelievably, and though I craved it, I knew if I asked Ariel for an aspirin she'd give me a glare.\n\nGetting out of bed took great care. I nearly threw up once I was in an upright position. Then I smelled Wendy's perfume and a lump of loss stuck in my throat.\n\nI stared at her wood floor that she still made time to clean, and it just seemed incredible to me she was gone. One minute she'd been comforting me about my mother; it seemed that the very next I was shooting her between the eyes to put her out of her misery. I hadn't been with her the longest, but she'd felt like a mother to me. A real mother. She was the glue that held us all together, and we all knew that. She knew how to tame us at our worst. Who would do it now? Who would want to?\n\nIt broke my heart to see the clothes she had set out in her bathroom, I guess to wear for the next day. Forever an optimist, she was. Perhaps the last optimist left. I shut my eyes tightly, telling myself I had to keep going, and when my eyes were open again I went quickly about my business. I brushed my teeth with some of Wendy's collected water, and ran some loosely against my body. I still had a bit of her blood on me, some Libby must've missed when she rinsed me off the night before. I refused to let myself think about that. I used her deodorant and then stared at myself in the mirror.\n\nMy nose was getting very brown. It made it look even more up-turned than usual. And I was thin. So thin. I was an entirely different person now, inside and out. I didn't recognize the girl staring back at me, as suspicious and curious about me as I was about her.\n\nA huge swell of homesickness came over me. Where was my father? My grandmother? Were they breathing? Part of me hoped they'd died. Taken pills. Got into a car accident. Something like that. I didn't want them living like this. Grandma wouldn't be able to handle it. She always believed people were good, that they were just victims of their circumstances. What a surprise she would have had, staring at the landscape of our new world, seeing what people could and would do to one another to survive.\n\nAnd what about my mother? Was she an undead crisp in Florida, or was she hiding out in some house, too, sweating and waiting to die? Missing her only daughter? Nah. Was she stewing over her regrets? Embroiled in some end-of-the-world love affair? The last scenario seemed most likely. She would seek the most dramatic exit she could.\n\nAfter putting my boots on, I reluctantly went downstairs. Libby sat on the bottom step and lifted her hand to me. I took it.\n\n\"Sit with me, girl.\"\n\nI sat close to her and huddled into her warmth. We watched Nate and Doug lug things around outside through the dirty screen door.\n\n\"What are they doing?\" I asked after a few minutes.\n\nLibby sighed and rested her head against mine. \"They're looking for ways we can cross the field without worrying about being shot at. And the chance of a zombie coming at us without us knowing will be much smaller.\"\n\nShe ran a hand down my knotted hair and pulled it away from my face and over my shoulder. I met her dark eyes and tried not to cry. \"You okay?\" She rolled her eyes. \"I mean, are you as okay as you possibly can be under the circumstances?\"\n\nI smiled, getting her meaning. \"No.\"\n\n\"You're smiling,\" she said, pushing one last wave of hair out of my face. \"That's a start.\"\n\n\"Are you okay?\"\n\nLibby bent over and peered into the kitchen. When she sat back up and saw my face, she mouthed, \"Ariel\".\n\n\"I'm okay,\" she said out loud. \"Want to go collect the eggs with me? We should probably go together, anyway.\"\n\nI followed her outside, jumping when the screen door slammed against the old house. I was still on high alert. Zach was sitting in the porch swing, sketching in his notepad while Doug and Nate did all the work. It provoked me.\n\n\"And what are you doing?\" I asked him.\n\nHe glanced up at me. \"Sketching out various ways we could arrange the hay.\"\n\nI looked over Doug and Nate, ignoring the flare of electricity when Nate's eyes met mine. \"We're making a maze of hay?\"\n\n\"For the time being, until we can warp some metal or something to stand up, ward off bullets.\"\n\n\"That's... That sounds really stupid. I mean, they can still climb up on top, right?\"\n\nNate eyes narrowed and he jammed his rake into the dirt. \"Yeah, a zombie climbs really well, Fiona.\"\n\n\"I didn't realize the maze was protecting us just from the zombies, Nate.\"\n\nLibby took my arm. \"We're going over to get the eggs.\"\n\n\"That's not wise right now,\" Nate said, coming to stand in front of us.\n\nGod, I wanted to hug him. I wanted to hold him as I had the night before. I longed to run my hands over the muscles in his back, feel them flex under my touch. He needed me and my lips on his shoulder as my hand calmed him. He'd suffered a tremendous loss, something I couldn't even begin to understand or appreciate. I knew, however, that daylight changes everything. The heat and tenderness in his eyes were gone; now he was all business. He had to be, and I understood. It still sucked.\n\nHe looked awful. His scruff had grown in, and his eyes didn't look right. They never stopped scanning, searching, looking for something. He looked tired but mean. Nate had been a dick to me since I first arrived on the compound, but this Nate appeared wild. Feral. He was ferocious and just waiting to bite off the head of the next person who gave him a hard time. I would have put a bet on myself, if I could've.\n\n\"C'mon, Nate, five seconds.\"\n\n\"Can't risk it.\"\n\nLibby groaned. \"Fine, we're going out back. To be alone, okay?\"\n\n\"Nobody's interested in your sex stories, Libby,\" Doug called out, trying to lighten the mood. \"Or I am, actually, if you two are going off to make out. Nate, man, I might need a break in five.\"\n\nZach and Doug tried to laugh.\n\nIt didn't help.\n\n\"We'll call you if we need you,\" Zach said, surprisingly easing the tension. I never heard him so fucking talkative before.\n\nLibby dragged me to the back, her expression changing from nonchalance to genuine concern. She made me bend down low to the ground behind some crates.\n\n\"We need to get out of here.\"\n\nMy heart pounded. \"What are you talking\u2014\"\n\n\"Someone is working with MacKenzie. We all know it. No one has the guts to say it, not even Nate. He's out there with Doug like a moron, trying to fix something that can't be fixed. I won't wait for some fucker to come in here and mutilate me, not after everything I've gone through.\"\n\nBile filled my mouth. \"But the guy said that he... he wasn't... whatever you call it. Working with him. Affiliated with him.\"\n\nLibby gave me a quick smile. \"Darling, you are so out of your league. It's a sinking ship here, sweetheart. Doesn't matter if he was with Mac or not, though my vote is yes. We have a lot of great stuff and it kills me to leave it, but it will kill me if I stay. Us. Kill us. And I like you. I want to protect you.\"\n\nI smiled, heart warm. It was nice to have a friend after plowing through alone for so long.\n\n\"Who else is coming?\"\n\nLibby fiddled with a ring on her finger. \"No one.\" When I began to speak, she put a finger over my lips. \"We can't risk it.\"\n\n\"Nate and Doug are obviously not in on it,\" I whispered furiously. \"And we need men. We have only so much body strength. We wouldn't last a second out there without them.\"\n\n\"You did.\" Libby looked me over. \"When you came to us, you'd lasted\u2014what? A year? All on your own.\"\n\n\"Yeah, but\u2014\"\n\n\"Just think about it,\" Libby said.\n\nI heaved in a breath and smiled disbelievingly. \"What about Doug? He's your friend.\"\n\nWe both heard a sound and jumped, peeking over the crates. We didn't see anyone, but I felt the prickling feeling on the back of my neck that someone had been listening.\n\nLibby looked back at me, spooked. \"It's go time, Fiona. Think about it.\"\n\n_____________________\n\nDinner was a strange affair. We ate canned beans and no one talked much. Wendy missing left a haunting gap that no trite chitchat could fill.\n\nNate avoided me as much as he could throughout the day. It hurt my feelings, as much as I attempted to rationalize it.\n\nIt wasn't all about me, I told myself. He had a lot of shit on his plate. I wanted to be next to him, to be all over him, but I had to man up and accept he couldn't be all kissy-feely with me at the moment. Not only was his mother gone, but he was now in charge. It wouldn't look right for him to make out with me in front of everyone. I got that.\n\nYet now, during dinner, it seemed he couldn't keep his eyes off me. His expression wasn't lusty or affectionate, however; it was calculating. Not a good sign for me.\n\nI finished early and grabbed a paperback, hoping he'd leave me alone. No luck.\n\nHe stomped into one of the many little cozy rooms the house had and stood on top of me so that I had to tilt my head back uncomfortably to meet his eyes.\n\n\"We need to talk,\" he said gruffly.\n\n\"What is it?\"\n\nOne of his rough hands traveled up my arm. \"We need to leave here.\"\n\n\"The room?\"\n\nHis eyebrows went up. Apparently he didn't appreciate my snarky attitude. Then it dawned on me.\n\nMy heart sped up. \"Oh, Libby talked to you, too?! Oh, thank God. She said... Well, I was going to tell her no but maybe\u2014\"\n\n\"Libby?\" Nate cut in.\n\nSound was sucked from the room as we studied one another.\n\nI wasn't a moron; clearly he knew nothing about what Libby intended.\n\nNate paced. \"Fuck. Fuck!\"\n\n\"What's the problem? Shhh. So, she had the same idea. It doesn't mean anything. It's not surprising considering what's happened.\"\n\nHe came back and bent over me. \"I think it's her,\" he confided. His voice was low and close to my ear.\n\nI inhaled, breathing in the smell of him\u2014smoke, leather, freshly cut grass and just the teensiest bit of liquor.\n\n\"Don't be ridiculous. She's my friend.\"\n\n\"There are no such thing as friends these days. Did you forget?\"\n\n\"Then what are we?\"\n\nHe sat next to me on the couch and pulled my forgotten book from my hands, tossing it somewhere. \"I don't know.\"\n\n\"A bad idea?\"\n\nHe rested his head against the back of the couch, still facing me. \"Yes.\"\n\nPoor Nate. He'd been through so much, and he didn't even have a moment to acclimate himself. To grieve. He was our leader\u2014we looked to him\u2014and he knew it. Now he had to come to terms with the fact he might have to flee from his boyhood home, from the land his father reaped and sowed, from where he had memories\u2014nice, wholesome memories.\n\nMy hands wanted to go to him but I wasn't sure he'd be receptive. \"How are you doing? I mean, are you okay? As okay as can be expected?\"\n\nMy phrasing reminded me of Libby and a sad note struck my heart.\n\nHe kissed me, touching both sides of my face gingerly as if my skull might collapse beneath the weight of his hands.\n\n\"I'm surviving.\"\n\n_______________________________\n\nNate continued to sleep in Wendy's room, but I went back to the room I'd been given when I came. We both had a lot to think about the week following Wendy's death, and it seemed like a romantic entanglement should be last on both our lists. He never said anything about it, never asked me to join him. He didn't kiss me again.\n\nBut I couldn't help but be aware of him. In the mornings we typically rose at the same time. We sipped coffee on opposite sides of the kitchen. I watched him from the corner of my eye; he usually looked out the window. We didn't speak again about leaving, and Libby didn't bring up the topic, either. It brewed in the air, though; I could feel both of them thinking, planning.\n\nI knew Libby was waiting for me to approach her.\n\nAriel was my pick for the person who betrayed us. I watched her like a hawk for the next few days, and she knew it. She sighed whenever she caught me studying her for some sign of guilt.\n\n\"I didn't let that undead fucker in,\" she finally said one night, fed up.\n\nIt was boiling hot and we'd left the screen door open for some cool air. The others were off doing whatever, but Ariel and I were pretending to read in the main living room.\n\nI slammed my book shut. \"You did keep questioning Wendy's leadership.\"\n\n\"Look, the woman pissed me off sometimes but I'm not gonna risk my life or anyone else's just because of a few squabbles. Okay? So stop staring at me. It's fucking creepy.\"\n\nIt didn't alleviate my concerns, but I did open my book back up with a tiny smile. It was the first time I nearly liked Ariel.\n\nLater that night I knocked on Nate's door. He opened it a sliver.\n\n\"What's up?\"\n\n\"Can I come in for a minute?\"\n\nHe inhaled slowly. \"I was just about to go to bed.\"\n\nWow.\n\n\"Like I said, it'll only take a minute.\"\n\nHe opened the door wider, just wide enough for me to slip in, and put his hands on his hips. Now I knew why he was reluctant to open the door\u2014he was only in boxer-briefs.\n\nI quieted my hormones and stared into his eyes. \"I'm worried. Ariel isn't responsible, either. I just know it. That leaves Zach.\"\n\nNate ruffled his hair. \"Or Doug, Libby.\"\n\nI gave him a look.\n\n\"Fiona, have you forgotten what I said to you before? Nobody is anyone's friend here. We just coexist. We all play a part in keeping each other alive, otherwise every last one of the others would betray us if it saved their asses.\"\n\nI felt a little thrill when he said us. I blame stress for what I said next. \"Nate, will you do something very weird and possibly dangerous for me? Just this once?\"\n\nHe examined me before answering. I think he might have even had an idea of what I was going to ask him. \"Yes.\"\n\n\"Will you kiss me? I could really use a kiss right now, to just feel close to someone. And you're one of the few people I trust...and I just want you. It's crazy, I know, but I just keep thinking about your lips on mine....\"\n\nNate's eyes caught fire, but he said, \"I think you might regret that later.\"\n\n\"There is no way I'd regret it.\"\n\n\"I can't give you what you want, Fiona. We're not two people who bumped into each other at a bar. We're fighting for our lives.\"\n\nMy eyes embarrassingly began to fill up with tears. \"Don't you think I know that?\"\n\n\"I can't be your boyfriend.\" He pitied me. I could see it in his eyes, the way he breathed. \"I can't start this. I don't have the time, the attention span. I can't mean something to someone and vice versa, okay? I don't want to mess with you any more than I already have.\"\n\nI wiped my eyes with the back of my hand. There was no point hiding my tears from Nate; he saw everything, anyway. The worst part of it was that he was right. It would be so easy for us to come together, to melt into each other's bodies, but when it was over those pesky feelings would be even harder to fight. At least, for me. Probably mostly for me.\n\n\"Okay,\" I whispered.\n\n\"I'm sorry. Really, I am. I wanted to\u2014I liked kissing you, too, okay? And I keep meaning to thank you for laying with me that night and just being a big help.\"\n\nA big help. Like I brought him a casserole. This was quickly becoming worse.\n\n\"All right.\"\n\n\"If things weren't so complicated\u2014\"\n\n\"I get it, Nate,\" I cut in, \"thanks.\"\n\nHe looked like he wanted to say something else. The moment passed and he nodded his head.\n\nI walked over to his door, hating that this one fragile, deep connection I felt with someone was being torn from me again. The loss of Wendy was tremendous. This was even more so, especially since I'd begun to crave Nate. Inappropriate, crazy, unnecessary craving...yes. But I craved him all the same.\n\n\"Good night,\" I said as cheerfully as I could, which wasn't very cheerful at all, before walking out and clicking the door shut behind me.\n\n______________________________\n\nI was prodded awake earlier than usual. I wiped my eyes and saw Zach hovering above me. My body froze and I sat straight up in bed.\n\n\"What is it?\"\n\n\"Will you help me milk the cows?\" He flashed a grin. \"I'm sort of hopeless at it.\"\n\nOut of everyone in the house, I trusted Zach the least. I didn't know why, exactly. He'd never done anything to make me dislike him. Perhaps that was just it\u2014he seemed like a quiet bystander, always watching. And waiting. Call it intuition.\n\n\"I think you can handle on your own. The rest of us do, and I'm sure you've done it before.\"\n\nI was just beginning to get comfortable when Zach spoke again. \"We need to talk. It's very important.\"\n\nMy eyes fluttered open and I watched Zach carefully. He didn't seem like he planned on hurting me. I was probably a moron to go with him, but I was curious.\n\n\"Give me a minute to get dressed.\"\n\nIt was a brisk morning, but I knew the chill wouldn't last for long. It was supposed to be one of the hottest days this week.\n\nI followed Zach to the barn and then dragged over my stool, snorting when I saw how Zach approached the cow's poor udders. I walked over, correcting his method the best I could. Then I sat back down and we worked in silence for a while until he finally got to the point.\n\n\"Are you planning on leaving the compound?\"\n\nI focused on squeezing milk into the pail. \"Why would I leave the compound?\"\n\n\"Don't be coy. Doesn't suit you, and you're the shittiest liar I ever saw.\"\n\nI opened my mouth to disagree but he was watching me in the dim lighting, and as much as I didn't trust him, I knew he had me figured pretty well. I sighed and wondered how bad telling the truth could be. \"I might be leaving. I don't know. Things haven't been great around here.\"\n\n\"Really think that's a good idea? I mean, we have everything we could possibly want here.\"\n\n\"Yeah,\" I said with a bitter laugh. \"That seems to be the problem.\" I turned back to the cow but kept an eye on him. \"What does Ariel think?\"\n\n\"She doesn't.\"\n\n\"Don't you think you're being a little harsh? Ariel isn't stupid.\"\n\nHe sighed and pulled his hands away from the cow. \"Could we not talk about Ariel, please?\"\n\n\"Have a fight?\"\n\nHe scoffed and kicked a little at the dirt. \"She's a bitch. An idiot. She fights me on everything little... She's not what I want. Who I want.\"\n\nThe danger compass that's in every woman immediately went south. I struggled to change the subject.\n\n\"Um, well.\" Swallowing, I twisted my hair up into a bun. \"I guess you've decided already you won't leave.\"\n\n\"I think we all should stay put. Whoever is doing this crap wants us to scatter.\" He sniffed and wiped his nose. \"Easier to pick us off that way.\"\n\nI studied him. \"Do you really think that?\"\n\n\"Absolutely.\"\n\n\"Have you told Nate?\"\n\nZach sort of rolled his eyes. \"I broached the topic but he says it doesn't matter, we gotta protect lives, not solve mysteries, blah blah blah.\"\n\n\"Don't you think he's kind of right, too?\" I gave him a small smile. \"Your theory is interesting but they seem to be picking us off one by one already if you think about what happened with Wendy.\"\n\n\"I think,\" he began, turning to face me, \"that maybe whoever did it didn't intend on Wendy dying.\"",
        "I looked down, feeling fear simmer in my stomach. \"You almost make it sound like you're the person who let it in.\"\n\n\"Oh,\" he laughed, \"no. I'm the observer-type, Fiona. I don't fuck shit up. I just watch, and go along, and flee when everything explodes.\" He made an exploding sound and gestured with his hands.\n\nI went back to milking the cow. \"Do you have any idea who might've\u2014\"\n\n\"No.\"\n\nMy shoulders sagged. I still had no idea why Zach made me come down here with him.\n\n\"So, what do you want Zach?\"\n\nHe blew out a breath. \"I want you to try to start trusting me. I'm not the bad guy here, Fiona. And I think you're smart, and you're strong\u2014almost as strong as Libby. You're valuable. I'd hate to lose you.\"\n\nMy bucket was full. I stood and watched Zach stand, too. We regarded one another for a long minute.\n\n\"I'm not making any decisions just yet.\" The sun rose high enough to begin illuminating everything. Faint sunlight filtered through the slats of the barn and ran in stripes across Zach's body.\n\nHe stood still and kept staring at me. I refused to fidget or show him he made me uncomfortable. I didn't like the gleam in his eyes.\n\n\"But do you trust me?\"\n\nI sighed, eager to get the fuck away from him. \"Does it really matter, Zach?\"\n\nHe looked down at the ground and smiled to himself. \"I would say so. You trust Nate, don't you?\"\n\n\"I trust people who give me a reason to trust them.\"\n\nHe pushed his hair back slowly from his forehead. His eyes ran down my body and I couldn't hide my shudder this time. \"What have I done to you to make you not trust me?\"\n\n\"Absolutely nothing. Zach, I think we should\u2014\"\n\n\"I guess Nate's just your type, eh?\"\n\nMy eyes narrowed. \"Excuse me?\"\n\n\"I know you're fucking him.\"\n\n\"I am not, but even if I were it would be absolutely none of your\u2014\"\n\nZach moved too fast and sprinted towards me before I could run, wrapping his arms tightly around my waist while also restricting the movements of my arms.\n\n\"Get off of me!\"\n\n\"You smell good.\" He sniffed my hair; his exhale was damp and hot when it fanned against my neck. \"I've wanted you for a long time. So long. And you're such a bitch about it, always teasing me. I'm gonna have you now.\"\n\nHe'd snapped.\n\nI felt him then, hard and poking my thigh. It made me want to throw up, and for a moment I thought I might. I screamed but he slapped a hand over my mouth; with only one arm of his around me, I managed to twirl away from him. I ran towards the exit but I tripped hard, of course, and then he was pulling me back towards him by my flailing calf. I was fully under him and tried ineffectively to swat at his face. I stabbed his forearms with my nails but he didn't care.\n\n\"Come on, Fiona! Stop fussing. You must want it.\" He thrust against me. \"Must need it. I can give to you. All of it. Right now.\"\n\n\"You're not going to get away with this!\" I sobbed.\n\nHe threw me on a pile of hay and was on top of me before I could sprint away. He apparently didn't care about the consequences; he was far too gone. With one strong arm he kept me pressed down; with the other, he reached down to unbuckle his jeans and open his fly. I could feel the blood trickling from the knee I fell on.\n\nTears flowed from my eyes. \"Don't do this, Zach. This isn't you.\"\n\n\"How the hell would you know what's me and what's not me? You've never bothered getting to know me before.\" He pushed against me and his eyes closed with bliss. \"Besides,\" he panted, \"no one is who they were anymore. No one.\" It was only then, with his naked cock against my flimsy underwear, that I began to panic.\n\n\"Help! Help! Someone, please help! Help me!\"\n\n\"Shut the fuck up!\"\n\nZach punched me in the gut, knocking the wind out of me, but I wouldn't be deterred. My will to survive had always been there encouraging me; it wouldn't fail me now.\n\nI opened my mouth to scream again but no sound would come out. I inhaled heavy heaps of air, but I still couldn't catch enough air. Zach was just beginning to slip off my panties when I got my second wind. I kneed him in the balls\u2014hard. The sound of his pained yelp gave me such exquisite pleasure as I pushed his disgusting body off of me.\n\nNate ran in, brandishing a rifle, but there was no need for it.\n\nI covered myself, took a few deep breaths and then stalked over and kicked in Zach's face. Blood poured from his mouth. \"You're disgusting.\"\n\nAriel was there suddenly, analyzing the scene. Her eyes went from him to me and back again. She knew. I could see it in her eyes she knew the truth. But it was scary being on your own in our black world, and she couldn't team up with me, or Libby, or Doug. Even Nate.\n\nShe ran over to Zach and tried to help him sit up. \"I think you broke his nose,\" she said flatly.\n\n\"Good,\" I hissed.\n\nI turned my back and ran for the house.\n\n____________________\n\nAn hour later there was a timid knock on my door. I figured it was Libby and said \"come in\".\n\nBut it was Nate, looking so tall that I thought for a second he might not fit through the doorframe.\n\nHe was cradling his wrist.\n\n\"What happened?\"\n\nHe followed my line of sight and put the wrist behind his back. \"Nothing.\"\n\nI smirked. \"You punched the shit out of him, didn't you?\"\n\nNate wasn't amused. His eyes, however, glowed with a sense of male satisfaction. Yeah, he'd beat the crap out of him. Zach probably wouldn't be able to walk right for days. I probably should have been alarmed I felt such glee over that, but fuck it.\n\n\"Ariel and Zach will be leaving the compound this evening.\"\n\nStrange, but I hadn't expected that. I hadn't imagined the repercussions yet; I'd run upstairs to my room and cuddled into the fetus position. \"With such little light? Maybe you should let them\u2014\"\n\n\"Oh, so he can try to rape you again?\"\n\nI looked down at my bedspread\u2014it was beautiful; someone in his family must've made it\u2014and shuddered. \"You're right.\"\n\nHe took a soft breath and I could tell he was sorry for mentioning it.\n\n\"Has Libby said anything more to you?\"\n\n\"No. I think she might be waiting for me to come to her.\"\n\nNate sat on a wicker chair near the window. The afternoon sunlight illuminated him wonderfully. He looked cozy. Like home, whatever that was. A home I never had, that's for sure. I coveted the life he'd lived there. Old-fashioned bedspreads woven together with knobby hands and homemade breakfasts and the American Dream draped around your shoulders. It must've been beautiful. I felt more sorry for him than I felt for myself. To have such bliss and perfection ripped from you, to be thrust into the greedy underbelly of human nature, to fight off your bloodthirsty neighbors who probably used to fucking tip their hat to you or something old-fashioned and country-like, must've been an outrageous shock for him.\n\nHe looked over at me and perhaps sensed my wistfulness\u2014and maybe even a little of my envy.\n\nHe got up slowly, so as to not startle me, and then sat next to me on the bed. A large hand came to run its way through a wave of my hair. I wanted to tell him not to touch me, that it was confusing, but it felt too good.\n\n\"I'm meeting with Mac in a half hour.\"\n\nMy heart skipped a beat. \"What?\"\n\n\"He sent a message. He wants one of us to come, and I'm it.\"\n\n\"And you go. You, of all people! We all depend on you, Nate. What if something happens to you?\"\n\nNate took hold of both my shoulders to calm me. \"He isn't going to hurt me.\"\n\n\"Right. Like he isn't going to set a loose zombie in here.\"\n\nHe let out a big breath. \"It's something I have to do, or he'll come here and we'll have an even bigger problem.\"\n\n\"I'm coming with you,\" I declared.\n\nFor the first time in a long time he smiled. I had genuinely amused him. Too bad I was deadly serious.\n\nHe touched a finger to my lip and then ran the back of his knuckles up my jawline. \"I wish you could. He'd get a kick out of you.\"\n\n\"I'm fucking coming!\"\n\nNate's smile faded. \"Fiona. You've been hurt, and you know absolutely zero about any of this shit. You're staying behind.\"\n\n\"If you don't take me,\" I began, my mind desperately searching for a good enough incentive, \"I'll....\" and then it came to me, and it was cruel but necessary, \"run away with Libby. Tonight.\"\n\nHe didn't react. His face didn't even twitch. His eyes didn't do an extra blink, and the vein in his neck didn't pulse. None of the stuff people tell you someone furious might do. I started thinking maybe he didn't hear me correctly, and then I really felt small and ludicrous when I knew he had and didn't care. God, I'd sounded sixteen!\n\nHe stood and nodded, looking at me straight in the face. \"If that's what you want. If you think that's best.\"\n\nHe didn't say that ironically, or sarcastically. It was like a boss who just received your resignation letter going, \"good job, thanks for all your work, buh-bye!\"\n\nIt threw me off, but Nate was always good at that.\n\n\"Good luck with everything, Fiona,\" Nate said.\n\nThen he dipped out of my room.\n\n______________________\n\nAriel was wrapping up Zach's arm and helping him put his weight on her when I came downstairs. Doug cast me a concerned look, but Libby leant against the wall and watched the couple struggle. I almost wanted to offer to help until I remembered what happened. My ribs remembered and ached every time I breathed.\n\nI looked at the two of them and knew they'd never make it out there. They probably wouldn't make it through the night.\n\nZach hissed and Ariel lost her balance, falling into the wall.\n\nThey definitely wouldn't make it through the night.\n\nMy mind began to work. It always worked peculiarly, my father said.\n\nWe needed Zach. He was a huge help to us on many levels. Forget about how he managed to organize the compound in his sneaky yet helpful ways, he was the main engineer behind how we got power. And even though he tried to molest me in the barn, he made a lot of great points when he tried to convince me to stay. I believed most of it. He was not the bad egg. Or at least not the bad egg we were searching for.\n\nPerhaps keeping him in some sort of prisoner capacity could make all parties happy. We'd benefit from it immensely, of course, and he wouldn't be fucking dead.\n\nHow Ariel would take this was the only part I was uncertain about. I meant what I said to Zach that morning: Ariel was not a stupid woman. Surely she knew the odds. Looking at her, you'd never know she was panicking on the inside, but I was sure of it. I would be.\n\n\"Stop,\" I called out, coming to the bottom of the stairs.\n\nAriel gazed at me coolly. Zach kept his eyes appropriately on the screen door. He looked terrible; Nate really went crazy on him.\n\n\"You two aren't going to make it out there.\"\n\n\"Fiona, you\u2014\" Libby began to say, but I shushed her.\n\n\"Zach is very smart. We've established this. We've benefitted from this. In exchange for his work, he can remain here. Under supervision. Heavy supervision. And depending on how you behave, Ariel, the same arrangement can be made for you.\"\n\n\"Are you even allowed to make such an offer?\" Ariel asked snottily. \"You're the head of the group now? That'll come as a surprise to Nate, for sure.\"\n\nI crossed my arms over my chest. \"Be my guest. Go out into the dark with all the mosquitos and uneven dirt and wild animals, and of course, the zombies. Go out there with no guns. Go out there supporting an incapacitated grown man. Be sure to get a good grip on your flashlight with your free arm, yet practice being able to whip out that knife I know you carry around. Then worry about who is making you generous deals.\"\n\nI turned my back on her but she called my name before my body could do the full rotation.\n\n\"What would... 'heavy supervision' entail?\"\n\n____________________________\n\nI sat on a rock at the edge of the property, waiting for Nate's return. It was approaching midnight and he hadn't come back yet. I was worried and more than a little pissed off. He should have been back by now.\n\nAnd then there was a shape moving with a familiar walk. The gate's electricity was shut off\u2014Doug was on watch\u2014and Nate walked onto our property looking much as he did when he left. I heard the hum of the fence being turned back on.\n\nHis eyes ran over me, taking me in, and it occurred to me for the first time I'd never dressed properly for the day. I'd never even cleaned up after Zach attacking me. I never dealt well with trauma. I was still in dirty sweat pants and a pink camisole.\n\n\"What are you doing out here?\" he asked eventually, pulling me through the hay maze until we were up on the porch. \"I thought you were leaving with Libby.\"\n\nI ignored his baiting statement. \"Waiting for you. I wanted to get to you before anyone else could.\"\n\nHe analyzed my expression and tried to read me. When that didn't work, he finally asked. \"What did you do?\"\n\n\"Why don't you go first and tell me how your meeting went?\"\n\nNate just continued to stare at me.\n\nI took a breath and tucked my hair behind my ears, trying to not have a heart attack. \"I kept Zach and Ariel.\"\n\nI could feel his body tense. I expected him to yell, or curse. Maybe even get up and find Zach and Ariel for himself, casting them out once again. He surprised me when he put his arm around my shoulders.\n\n\"You're not okay, are you?\"\n\nI snorted. \"Do you notice how that's how we all talk to each other? 'Are you okay'. Over and over, and I know it's because we have nothing else to say but it's driving me crazy.\" I shook my head. \"It's fucking ridiculous. There are things out there, eating people like you and me, people with flesh and blood and thoughts and hopes and fucking dreams... like maybe some dude wanted to be a fucking doctor or whatever, and his arm gets torn off. Bam, he's dead. Fucking finished. It's fucked up. So, no, I'm not okay. I'm never going to be okay. Neither will you. Neither will anyone. Christ.\"\n\nHe let me rant without comment. Then he sighed. \"I see. So explain why you thought it was a good idea to keep a rapist and a raging bitch with us?\"\n\nI explained my reasoning, watching his expression carefully. He kept it calm. I told him Zach was tied up in the barn. Ariel was free to walk around, which would have been stupid under different circumstances but I knew she wouldn't leave without Zach and he was immobile.\n\nThen Nate leaned against the railing of the porch and studied his hands. \"I guess it might work. We'll have to see.\"\n\n\"You're not furious I acted in your stead?\" I laughed.\n\nHe turned back to face me and he was smiling. I wished I could bottle up his smiles and whip them out when everything was terrible. Then his expression sobered.\n\n\"Have you thought any more about leaving?\"\n\nI stared down at my feet. \"You can't leave here, Nate. It's not in your nature.\"\n\n\"I'm not an idiot. I know when it's time to run.\"\n\n\"Is that what your meeting with Mac told you?\"\n\nHe rested against the railing again, this time facing me, and crossed his arms. \"He said again it wasn't him and he wants to set up a barter system, which I agreed to. Anyway, I know it wasn't him. I know it in my gut. He blamed it on other nomads.\" A small smile touched his lips. \"He called them rude and filthy.\"\n\n\"Dangerous, as well, then.\"\n\n\"He even advised me to get the fuck out of here. Told me we've been flirting with danger for a long time. I'm inclined to agree.\"\n\n\"You can't leave here. It's your home.\"\n\nNate laughed bitterly. \"Home? This isn't my home. Not without Mom and Dad. No. Now it's just a shell with ghosts and too many empty rooms, and assholes roaming the halls. It's a coffin.\" He looked me over. \"And what about you? What about your home? You ran away from it, too. You do what you have to when it comes to survival. You know that.\"\n\n\"And Libby?\"\n\n\"No. Just you and me.\"\n\n\"Doug? Ariel? We just sacrifice them, leave them behind? Shouldn't we warn them?\"\n\n\"Fiona, I'd drag you outta here barefoot right now if I thought I could. I would love to bring Doug along, but he will never separate from Libby. Feels beholden to her. And I don't trust her, not anymore.\"\n\nI shook my head back and forth. \"No. Libby...We're close.\"\n\nHe scoffed. \"You think you're close.\"\n\n\"We are. That's why she wants us to go away.\"\n\n\"Look, it's simple. You have a choice. You hold the power. Me? I'm leaving in a few days. I'm going to gather as many resources and then I'm gone. You can come with me if that's what you decide. If you don't, no hard feelings.\" He stepped closer to me, intimidating me with his height just as much as that burn in his eyes. \"But don't you dare tell anyone my plans. I'm trusting you with them, do you understand?\"\n\n\"Yes.\"\n\nThen he unexpectedly pushed me against the house and kissed me, running his arms up my body. His hips pinned mine against the house and he pushed roughly between my thighs. He was devastatingly hard, and I was desperately wet.\n\nHis tongue was calm and slow as it explored his mouth, but his hands were frantic and fumbling as they slipped beneath my shirt and found my breasts. A moan caught in my throat. His rough thumbs brushed against my nipples and I nearly wept.\n\nThat's when he moved against me in a steady pace, fucking me through our clothes in the sticky, humid night. He pushed me up and against the house with every movement. We panted into each other's mouths and stole kisses. My arms clutched his back and I delighted in the tense bunching of his muscles, indicating his quiet strength. I lowered my hands to his jean-covered ass, clutching it as best I could through the material. I tried to bring him closer. I wanted to absorb him; I wanted him to absorb me. I wanted us to sink into the other. But we were both wearing too many clothes.\n\nOne thrust moved against me sharply, pressing hard against my clothed clit, and I let out a loud, delighted gasp. Nate froze.\n\nSlowly he lifted himself off my body, dragging his hands down my stomach and pulling them out from under my shirt. He looked into my eyes as if he didn't know me. The spell was broken.\n\n\"I'm sorry.\" He swallowed visibly. \"I didn't mean to do that.\"\n\n\"It felt amazing,\" I confessed. I was breathless. \"More. I want more. Please.\"\n\n\"I can't.\"\n\n\"Why?\" I sobbed.\n\n\"I can't care about someone like that. I don't want to care\u2014I can't do it. Feeling too much for you. I already like you. Please don't ask me to do more than that.\"\n\nI knew a huge part of this was his loss of his mother. His father. The disillusionment he faced finding out what the world really was like beyond the sheltered farm he grew up on.\n\nIt didn't hurt any less.\n\n\"How do you expect me to go away with you when this will keep happening?\"\n\nHe closed his eyes for a second. When he opened them, he was the same old Nate. \"I told you. It's your choice.\"\n\n\"You're being so unfair.\" Fuck, I was crying.\n\nAt least he looked a little miserable again. \"I know.\"\n\nHe disappeared inside the house.\n\n______________________\n\nThe next morning I went for a walk. It was dangerous considering I was moving about without cover or someone spotting me, but I needed to gather my thoughts and I couldn't think in that stuffy house.\n\nNate was right. It was a coffin, filled with bad memories and bitter feelings. No one spent much time together anymore, not even Libby and me. Doug had withdrawn into himself and I didn't know why. Every time I tried to talk to him, he shot me down or made some excuse and ran away as fast as he could.\n\nAriel stalked around sulkily, spending most of her time in her room. Libby was either sitting in the kitchen, staring out of the window and looking deeply thoughtful, or I guess in her room.",
        "We were all running out of steam.\n\nI heard the crunch of twigs. The rustling of leaves. My hands went on both hips and clutched my knife and gun. People were whispering. There was no hum from the fence; it was off.\n\nI looked around a tree and spotted Libby, Doug and a man I didn't recognize. Libby held a gun to Doug's head. The man was saying something, but then his eyes slid to the side and he spotted me.\n\nLibby slowly looked over her shoulder. When she saw me, she took a heavy breath.\n\nMy throat wouldn't work. I wanted to ask what she was doing, but it was obvious.\n\nThere was a long silence. Then Libby shifted her feet and waved her free hand through the air.\n\n\"I didn't want it to work out like this,\" Libby sighed. \"You're my friend.\"\n\nNate's words came back to me, that there were no such things as \"friends\" anymore. I wanted to repeat that, but I couldn't speak. I was too terrified. My hands shook. I kept my gun and knife pointed at them, but I knew they could overpower me if they wanted. He was a big, burly man, and it was well known how strong Libby was.\n\nShe'd been so sad when Wendy died. And furious. Hadn't she been? Was she pretending all along?\n\nDoug's wide eyes met mine. \"Run, Fiona!\"\n\nThe man punched him in the gut and Doug sputtered, clutching his stomach.\n\nI tried to breathe evenly so I wouldn't hyperventilate and faint. \"You let it in.\"\n\nLibby's head cocked.\n\n\"The zombie,\" I continued. \"You killed Wendy.\"\n\nI felt numb at the realization that Libby wasn't my friend. Not at all.\n\n\"No,\" she whispered, looking sad. \"That was an accident. I wanted to make everyone feel unsafe, spook everyone into leaving. I approached everyone about leaving, not just you. Wendy was so fucking stubborn about leaving her house.... I never wanted her dead, Fiona.\"\n\n\"I did,\" the stranger said. He spit to the side. \"Fucking cunt.\"\n\n\"Shut up, Frank,\" Libby hissed.\n\nI drew a sharp breath. \"Frank.\"\n\nThe man I'd heard about, the man who'd been cast out. He offered me a smirk.\n\nZach had been right; there was someone out there who wanted us to scatter, to pick us off one by one. Then reap what we had sown.\n\n\"Are you with us, Fiona?\" Libby asked, looking hopeful. God help me, she did like me. It made it burn even worse.\n\n\"Fuck her,\" Frank said, moving closer to me. \"Can't trust her. Took too long to make up her mind.\"\n\nHe didn't appear to have any weapons on him but I wasn't stupid. And Libby still had her gun pointed at Doug, who looked entirely unsurprised by the news. He and I shared a glance.\n\n\"Was Doug with you?\"\n\nLibby gave Doug a sad look. \"I wanted him to be. Told him all about it a few days ago. He overheard us talking. But he was going to tell Nate.\" She exhaled heavily. \"Dougie, I'm sorry. I wanted this all to be so different.\"\n\n\"No, you didn't. You told me you were leaving him,\" I said.\n\nShe turned back at me, eyes sharp. \"I didn't mean it. I thought you would be more likely to run away with only me. But of course I wanted to take Doug. Of course. And of course we'd return once the others were be gone. Wendy and Nate were goody two-shoes, with their rules and their unrealistic views of morality.\" She flung her head side to side and tears began to swell in her eyes.\n\nHow could she possibly have come up with or believed this convoluted plan?\n\n\"I don't believe you,\" I whispered. I was crazy for saying so, but I couldn't help it. I'd never felt so betrayed. \"You were lying to one of us.\" I looked Doug over, and even though he was technically their hostage, he looked stronger than the both of them. She must've wanted him for his strength. But if he said no...she would have taken me. It was whoever said \"yes\" first. \"Or both of us,\" I amended.\n\nShe let out a slow, tired breath. \"I just wanna head west. Find my babies. I'm gonna ride up and down the coast. I'm gonna search every inch of it. Frank is headed that way, too. He's moving west, out to Cali. He's gonna bring us. Me. We just need to set up camp here for a while, get our shit together. Get strong.\" She must have seen the contempt on my face because she waved her hand through the air in a \"what can I do?\" sort of gesture. \"Nate would have never allowed Frank and the friends he made back in here. Never, and you know that. Some stupid rule would've been drafted up. I know you're blind when it comes to Nate, but think about it, Fiona! If we could get him and Ariel and Zach out of there, and move our guys in, we'd be so much better off. Now Frank and his team can get strong, you know, having supplies and a steady source of food. We've got so much of it! Then, when they're fat and happy and trained, Frank is taking me to California. \"\n\nI took another look at him and had to hide my scoff. No, he wasn't. He was using her to infiltrate the compound. He was going to kill her, or subdue her, the first chance he got. Or perhaps he'd kill Nate first. It was a toss up in my mind. Then, of course, this would all be his. His and the dirty, rude nomads Mac must have been referring to.\n\nFinding her kids was an impossible task. Deep down she must've known it. I looked into her eyes, wondering if she'd lost her mind, or if she'd just grown tired walking around the compound waiting to die.\n\nDoug took a step closer to her. I forced my eyes to stay on Libby while tracking his movement. She was distracted by me, and Frank had his back to us, staring down towards the house to make sure no one else surprised us.\n\nThen Doug lunged. Libby's gun went off, there were curses and screams, and Frank was on top of me, battling me for my gun. He was so heavy. He punched me in the face and it felt like he nearly knocked my eyes out of my head. I pushed ineffectively against him and tried to find my knife, which had fallen somewhere on the ground to the left of us. My fingers desperately searched, shoving into the soil and dirt.\n\nAnd then my fingers touched cold blade.\n\nFrank's thick fingers went around my neck and squeezed. Between him strangling me and his heavy body resting on my ribcage, I couldn't breathe. Tears came to my eyes and streamed down my cheeks. I kicked at him but it was pointless. I tried to get a handle on the knife, cutting myself in the process.\n\nThen it was in my left hand and I was stabbing his back in one motion. I held on tight\u2014I was right-handed\u2014knowing he could easily roll over and rip it away from me. Everything happened so fast. The blood poured from his back and covered my hand. I was terrified I was going to lose my grip.\n\nHe pulled back from me and his hands quickly left my throat. He tried to reach around toward his back but I kept pushing the blade into his skin and muscle, as hard and deeply as I could. His eyes were wide. Furious. Disbelieving.\n\nHe fell to the right and I tried to move away from him as fast as I could. I looked down at him and was convinced he was dying. For good measure, and to make sure he didn't come back like the others, I lifted my gun and pointed it at his head.\n\n\"Don't,\" he grunted.\n\nMy hand didn't shake when I fired.\n\nI had no idea what was happening with Doug and Libby. My eyes desperately swept the area. Then I saw them still fighting each other. I ignored the aches and pains in my body and sprinted towards them.\n\nIt seemed Doug was winning. Libby was on her knees, holding onto her gun as Doug kicked her in the chest. Still, she wouldn't let go.\n\nI pressed the hot barrel of my gun against her temple. \"Let go.\"\n\nShe was sobbing so hard that it was difficult to hear her, but I know she begged for freedom, for the chance to see her kids. She gave the gun to Doug.\n\n\"Let me go,\" she plead, \"and I promise I won't do anything to harm you. I'll just be on my way. I just want\u2014want to g-go to California.\"\n\nI looked up at Doug and nearly fainted when I saw the wound in his stomach. He was covered in blood. The shot from earlier must've caught him in the gut. His feverish eyes bore into mine. He wasn't going to survive this. I walked to him, wiping my tears with my bloody hands, and put my hand on his shoulder.\n\nWe both watched Libby tremble on her knees as she waited for her fate.\n\n\"Have compassion,\" he whispered to me. \"She's got cabin fever, sweetheart.\"\n\nThe tears blinded my vision. \"I can't.\" My breath caught on a sob. \"You know that's not it.\"\n\n\"It makes everyone crazy. Look at Zach, losing his mind. You can figure out something for her like you did for him.\" His voice was low and shaky. He was losing energy. I chanced a glimpse at him and had to squeeze my eyes shut. He already looked dead. \"She was good to you. To all of us.\"\n\nI heard steps behind me. Then the footsteps paused. I glanced over my shoulder; Ariel and Nate were surveying the scene. His wide eyes assessed me head to toe, cataloguing each wound. I turned my head back.\n\nThe arm holding the gun had grown tired and heavy. I wanted to let go, to forget. To forgive. I could set her out into the wild and never see her again. Except I knew that wasn't true. She'd round up Frank's \"friends\" and come back to us as soon as she could. And it would just be three us left to fight\u2014Nate, Ariel and Me. Zach was still wounded, and Doug wouldn't be alive beyond the next ten minutes.\n\nIt was obvious we'd have to leave camp. How we'd drag Zach with us, I didn't know. But Nate had been right when he said it was time. We needed to lay low for a while. It was awful giving up his family home and the life we'd carved out here, but it was better than being killed or worse by the people that hung with Frank\u2014savages, no doubt.\n\nAs I stood there unsure and hurt, Libby stood and sprinted before I could react. She zoomed through the gate and into the wet foliage. The others were saying something but I ignored them, chasing after her. She was stronger than I was, but I was the better runner.\n\nI spotted her, held my ground and prayed to God I'd make my target. The shot rang out and she fell to her knees. I ran to her to see how badly she was wounded.\n\nIt was in her chest. She was gurgling blood and trying to say something. I stared at her, in disbelief that the woman who I thought was my friend was laying on leaves and clumps of mud, staring at me with a wound in her chest. That I caused.\n\nShe kept whispering so I bent over to listen.\n\n\"I was never a good mother, anyway.\" She laughed and choked on blood at the same time.\n\nI wept as I caressed her cheek. \"I don't believe that.\"\n\nShe coughed up blood and it flowed down her chin. \"Do you think they're alive?\"\n\nProbably not.\n\nBut I said, \"Yes,\" anyway.\n\nShe smiled at me, likely knowing my thoughts. \"Thank you.\"\n\nA flock of birds emerged from one of the trees overhead. We both looked up.\n\nA minute later she spoke again. \"Will you do it for me now? Shoot me in the head? It hurts too much.\"\n\nI got up and aimed for her head, trying to ignore my crying. Just before I killed her, she whispered, \"I'm sorry.\""
    ],
    "authorname": "GirlintheMoon",
    "tags": [
        "zombies",
        "apocalypse",
        "horror novella",
        "romance",
        "attempted non consent",
        "horror romance",
        "battle",
        "end of the world",
        "action adventure",
        "action"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/voodoo-girl-pt-02"
}