{
    "title": "Trilogy: Twilight's Last Gleaming",
    "pages": [
        "The chronological order of my stories is as follows:\n\nTodd & Melina series, Interludes 1-5, Sperm Wars series, Russian Roulette series, Case of the Murdered Lovers series, Case of the Murdered Chessplayer series, The Swap series, Interludes 6-10, The Murdered Football Player Series, Case of the Black Widow series, Teresa's Christmas Story, Case of the Black Badge series, A Case of Revenge series.\n\nThe Trilogy.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, extreme language, and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial or racist language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n*****\n\nPart 15 - Battle Lines\n\nI was rocked inside, total shock in my soul. I had fucked up. I had not seen it all the way through. I had correctly guessed that Melina had been blackmailed by Ned into being one of my would-be assassins. I'd sent her husband after her to dissuade her, and he had been successful in doing so. I'd asked the Chief to loan Daniel the Chief's SUV, so that Daniel could get Melina and her rifle out of here, but somehow... somehow... Steven Ikea had gotten onto it and now had a warrant to search the car. Oh, shit! Fuck me!\n\nMaybe this guy is just a bit smarter than I thought he was, I thought to myself, my mind desperately searching for a solution. Naah, he's an idiot, someone else is behind this- oh, of course... Of course.\n\n\"You're out of your tree, Ikea.\" roared the Chief, who had come up to the front right behind me. He had no idea of what was going on.\n\n\"It's a legitimate warrant, Griswold.\" called out SBI Director Jack Lewis, enjoying the moment almost as much as Ikea was. \"And we are not leaving until that vehicle is searched.\"\n\nGriswold looked at me, as if to ask what to do. I was trying hard to keep all emotion off my face, which wasn't hard if I let my exhaustion from this day come out a little bit.\n\nI concentrated on my peripheral vision. I saw the SWAT team standing off with the SBI, their weapons pointed at the State agents. One word to fire, one little misstep, and a lot of people would be wiped out. I didn't really want that. Some of those guys were just following orders.\n\nI saw Melina and Daniel, standing behind the crowd of police that had their guns trained on the SBI. Daniel had a scared look on his face. Melina just looked blank, a face I remember seeing back when we'd first brought Ned to this Town to be arrested. Whatever her emotions were, she was not showing them on her lovely face.\n\nAnd then I saw, wearing a SWAT uniform and black baseball cap, her platinum blonde hair tied up under the cap, one Detective Cindy Ross. A bolt-action hunting rifle was held to her back by the sling on her shoulder, as if she'd walked out of the field after a day of deer hunting.\n\nI made a mental note to reprimand the living hell out of her for being here when she was supposed to be resting and recovering from her ordeal earlier in the month, but I knew I had a much worse and more dangerous situation in front of me.\n\nAnd then the miracle happened.\n\nMy mother Phyllis came out from the group, wearing her Police Auxiliary uniform. \"Why Agent Ikea, by all means. Please do go ahead and execute your warrant and search that vehicle now!\" She took the warrant from Ikea's hand and handed him the keys to the car. I'd later find out she'd picked Daniel's pocket of those keys without him even knowing.\n\nAs Phyllis looked at the warrant, she glanced over at me and winked. Despite my fear, I decided to trust my mother. All my life she seemed to know something that I didn't. I sure hoped that was the case today.\n\nIkea opened up the back of the SUV and searched. He found a shotgun, which he handed to Ferrell. Ikea then ran to all the other doors, opening them, frantically searching for the rifle that had killed Oldeeds, which would have Melina's fingerprints all over it, the rifle whose ballistics would match the bullet recovered from Oldeeds's head. After a thorough search, throwing radio equipment and everything else to the ground, Ikea stood behind the SUV, a look of shock on his face.\n\nThere was no rifle. It was gone.\n\n\"Oh good grief, Ikea!\" I shouted so that everyone could hear, grabbing the shotgun out of Ferrell's hand, taking him totally by surprise. \"Do you mean to tell me that this shotgun killed Jonas Oldeeds at a range of several hundred yards?\" My officers laughed. The SBI agents were silent, their faces stone-cold with hatred.\n\n\"Hey Chief!\" I yelled as I emptied the shotgun of its shells, \"maybe you ought to load this thing with rock salt, and we can shoot a couple of charges up Ikea's ass!... just like Barry Bounel did, eh, Steven?\"\n\n\"You fucking son of a bitch.\" Ikea breathed. Then he turned toward Phyllis, who was standing a few yards to my left. \"This is your doing, you bitch!\" He stepped forward and swung his left hand, punching my mother in the face!\n\nA gasp erupted from every other officer on the scene... except me. I was yelling \"Hey, you son of a bitch! That's my mother!\" Needless to say, I attacked Ikea.\n\nHe tried to whirl and hit me with his right hand and fist, but the blow went past my head and I grabbed his arm and twisted it backward, forcing Ikea to his knees. As he dropped, I slammed my foot onto the back of his thigh near his hip, hoping to dislocate it.\n\n\"AAUUUGHH!\" Ikea roared in pain. I continued twisting his arm back as I took him down, trying to tear it out of his shoulder socket. I drove my knee into his back, and then began hitting him in the face and back of the head with my fist, whaling away at him.\n\n\"You fucking piece of shit, I'll KILL you for hitting my mom!\" I yelled as I drove blow after blow at Ikea. The SBI had trained their guns on me, but my officers had trained their weapons on the SBI. Carnage and bloodshed was about to happen.\n\nThen Senior Patrolman Micah Rudistan jumped forward, putting his back between me and the SBI guns. He grabbed me in a full-Nelson and dragged me off of Ikea, moving me back towards my guys. The next thing I heard and saw was my mother in my face, yelling \"Don! It's okay! I'm all right! Don, relax, calm down!\" I finally caught my breath and let the fury inside me die down. Rudistan released me and I hugged my mom, asking if she was really okay.\n\nIkea was still on the ground, with serious hip and shoulder injuries that would require surgery to fix. The standoff was still going on.\n\n\"I am ordering every Town & County Police Officer to lower your weapons. I am placing your Chief and his bastard Lieutenant under arrest!\" called out Director Lewis. No one moved.\n\n\"No you're not, Lewis.\" Chief Griswold replied. \"No more of your shit. Your agent assaulted an Auxiliary Policewoman; he hit a woman, for crying out loud.\" An angry murmur rumbled through the TCPD. No one moved.\n\n\"Okay, SWAT Team!\" growled Chief Griswold. \"Take aim at the SBI agents. When I get to 'three', any agent still holding a firearm is to be shot dead. No further warning, no excuses. SBI agents, drop your weapons by the count of three, or you will be shot dead. One!\"\n\n\"You wouldn't.\" hissed Director Lewis.\n\n\"Two!\" Griswold shouted ignoring Lewis. The SWAT Team and other officers readied to shoot: they intended to carry it out.\n\n\"Okay, okay!\" Lewis said. \"All right guys, let's go. Back to your cars.\"\n\n\"NO!\" yelled Griswold. \"Those weren't my orders. Men, take aim! Thr-\"\n\nWeapons clattered to the concrete. Some SBI agent, possibly Ted Crenshaw, had given a signal for them to drop their weapons, and they did, to the great relief of everyone... except SBI Director Jack Lewis and me. Lewis would not have minded dying if it meant Chief Griswold would be imprisoned, and I was still angry at the physical assault upon my mother.\n\n\"Okay, frisk them and take all their weapons, every one.\" ordered Griswold. \"Get some crates!\" I don't know who in the Police Department carries crates around, but four were produced almost immediately. Chief Griswold ordered that all the SBI's ammunition be put into two of the crates, and they were rapidly filled. The guns were placed in other two crates. Most of the SBI agents had second weapons hidden on their persons, mostly in ankle holsters. That was illegal, by the way, but no matter for now: those weapons were now confiscated by the TCPD.\n\nDick Ferrell and other agents moved to help Ikea. \"We need EMTs.\" Ferrell ordered. \"And we need to get him to the hospital.\"\n\nI said in a voice loud enough to be well-heard: \"No EMT from this County is to help any SBI agent in any way! And Ferrell, Ikea will receive no help from University Hospital. Take him there and I'll follow you and finish the job on him... and you. Get that piece of dog shit out of my County. Do it today, Ferrell, do it today!\" Ferrell looked at me in disbelief, then hatred, but I was beyond caring.\n\n\"Director Lewis!\" called out Chief Griswold as he rubbed it in. \"On behalf of the Town & County, I thank you for the SBI's contribution to the TCPD's ammunition cache. We'll be sure to get a lot of range practice with this ammo!\"\n\nI laughed, feeling more exhausted as the Chief continued; \"Rudistan! You're in charge. Escort these SBI agents to the Nextdoor County Line. Not Coltrane County. Nextdoor County. You can return their weapons when they cross the County line. Stay at the County line, set up a road checkpoint if you need to. If any SBI Agent not named 'Crowbar' tries to cross back into this County, shoot him dead with no compunction. Are my orders clear, Rudistan?\"\n\n\"Yes sir!\" Rudistan shouted, happily taking the lead. \"Okay guys, let's go. SBI Agents, get in your cars. Anyone who deviates from following my car will be stopped and you'll be shot dead.\" I watched, eerily fascinated as the car line was formed and then moved out. The SBI's weapons were thrown across the border into the dirt, and the agents scrambled to determine whose was whose as they collected their weapons. They left the county line without further incident.\n\nPart 16 - The Party Never Stops...\n\nIt was 8:00pm and the sun was setting. It had been an incredible day.\n\nI was at Headquarters, lying on the table of the small infirmary room that someone had had the foresight to put into the building's plans when construction started. Usually it was unstaffed, but today an EMT and my wife were administering an IV to me. The armored jacket I'd worn had been hot and, without realizing it, I'd sweated myself into dehydration. I had nearly collapsed at 7:30pm., when I finally allowed myself to relax, and all the tension of the Ned confrontation and then the SBI confrontation had abated.\n\nCindy Ross and my mother had vanished as the Chief had given stand-down orders and we began winding down from the Ned operation. Laura told me that she'd checked out Phyllis, who was fine though she might have some bruising from where Ikea had struck her under the eye. The Media was furious that we would not give them any information about anything that had happened, especially the altercation with the SBI.\n\nI did get to my mother by cell phone at 6:00pm. Turns out she was back at the Psychology Building nursery, taking care of kids. She said she was fine, and she thanked me for taking up for her against the bully Ikea. I told her that I still had a couple of things to do that required her help. Then I made one more phone call to put a long-conceived plan into action.\n\nBack to the present: The Chief came in to see me, and it was the first time I'd seen him in hours, as we'd both been busy. \"Beautifully done, kid. The baby is okay. No one else was hurt... except Ikea, of course. Don't worry, scores of witnesses saw him hit your mother and you defend your mother. I'll make damn sure you have no issues over that.\"\n\nThe Chief continued: \"Eleanor Burke is in Interrogation-1. She remembers everything up to the moment she began shooting, but doesn't remember anything about shooting Ned. She doesn't remember being tackled by Goth Girl Kathy, and only remembers being taken out of the building by policewomen. Any reason you can think of for that?\"\n\n\"I think my own memory might be hazy about a couple of seconds there, Chief.\" I said. Then Griswold asked the EMT to step outside for a moment, leaving me and Laura alone with the Chief. He shut the door to the little infirmary room, then began telling us what had happened while I was at Ward Harvester.\n\n\"Commissioner Robinson and I took your advice.\" Griswold said. \"We transferred Sarah Collins to the Campus Police jail this morning. There are only two cells there, and they're just temporary holding cells until they can get their prisoners to us here or to County Lockup. Then Robinson had his people lock up and secure everything of value, especially computers, then abandon the Campus Police building. Sure enough, while you were confronting your nephew, an armed, eight-man assault team invaded the building and took Sarah Collins with them.\"\n\n\"Anyone hurt?\" I asked.\n\n\"No. And they didn't do too much damage to the Campus Police building, either.\" said Chief Griswold.\n\n\"What's this all about?\" Laura inquired.\n\n\"Bartholomew Scott.\" I said, looking meaningfully up at her from my reclining position on the table. \"I knew that they would not leave Sarah Collins behind. I got word that Scott's agents were preparing for a full assault on Police Headquarters to get her out, and that would've meant the deaths of a hundred police officers, at least-\"\n\n\"Yes, dear,\" I said in response to the look on my wife's face, \"Bartholomew Scott has no scruples, he would've gladly had hundreds of people killed just to get one criminal out of jail. So I asked the Chief to consider transferring her 'temporarily', citing the understaffed nature of the HQ building while we were all out surrounding Ward Harvester and a few of us inside there.\n\n\"When they came for Collins, they found an abandoned Campus Police building and I wonder if they've figured out the ruse yet. I figured if they destroyed the building, then Henry Wargrave would cough up the funds to rebuild it. As it is, nobody got killed.\"\n\n\"But that bitch Collins got away.\" Laura said.\n\n\"Not for long, my dear.\" I said. \"Not for long. We still have work to do this night.\"\n\n\"What do you mean?\" Laura asked.\n\n\"Ned expected a plane ride out of here.\" I said. \"Scott and Corrigan's CIA cell was going to take Ned, Sarah Collins, and their rogue agent hit teams out of here. Well, Collins was there, but six of their agents died at Ward Harvester by the hands of my unknown buddies.\"\n\nChief Griswold said \"Jack Muscone and I had FBI Agents and our police go to the airport to interdict any flights trying to get out, especially after Ned was killed and the baby recovered. But there were none. I suspect they were monitoring our activity and called off the flight. We also have roadblocks on all roads leading out of the County, besides the one Rudistan set up for the SBI.\" He laughed at the memory of what he'd done to Jack Lewis and the SBI.\n\n\"So what do you think will happen?\" Laura asked, looking at the Chief, but knowing I'd be the one to answer.\n\n\"I think they'll fly the plane in later tonight.\" I said. \"Quick pickup. No telling where they're hiding now, but they'll come out, and we'll be waiting for them. Laura, they tried to kill you today. Would you like a little piece of payback?\"\n\n\"I sure as hell would.\" Laura said. \"They were going to kill over two hundred people on that plane, just to get to me. You're right about Scott: he's a psychopath. And he's mine.\"\n\n---\n\nThey were in the CEO's room of Acme Consolidated, the office in which Ned had first visited Tim Olivet when Olivet owned that company. Henry R. Wargrave sat behind the desk. At the little conference table were Jody Corrigan, Bartholomew Scott, and Sarah Collins, finishing up the Chinese take-out that Wargrave had ordered for them. It was 10:30 on the same night of July 26th.\n\n\"I can't believe how easy it was for the guys to break me out of that jail.\" said Collins, bringing up the subject for the first time.\n\n\"It was easy enough, but I didn't understand why they took you from the Town & County Police Headquarters to the Campus Police jail.\" said Bartholomew Scott. Jody Corrigan said nothing, his head downcast.\n\nIt had been a rough day for the CIA officer. He had approved Scott's plan to extricate Ned from the grip of the Iron Crowbar by having some of their now-defunct cell's snipers murder the Iron Crowbar. He still did not understand who it was that had so neatly snuck up on his snipers like ninja, slit their throats, and save the Iron Crowbar's life.\n\nThen Ned had been shot by Eleanor Burke; Corrigan had not even considered that possibility. He'd expected the Iron Crowbar to do something 'active', but that fucking police Lieutenant must've been the luckiest man alive that Eleanor Burke had been able to act as she did.\n\n\"How did she get the gun, Jody?\" asked the voice, which cut through his thoughts like a hot knife. It was Wargrave, who'd been watching Jody, knowing his thoughts as he thought them.\n\n\"I have no idea, Henry.\" said Corrigan. \"Unless that bastard Lieutenant gave it to her before they went in.\"\n\n\"Yes. That must be it.\" said Wargrave. \"The Iron Crowbar planned it very well, to a level of detail that you didn't even consider. And Miss Collins... don't get too excited about your escape. They knew Scott's storm-troops were coming after you. They put you in that tiny Campus headquarters and abandoned the building. They let you get away in order to save lives that would've been lost with a full-on assault.\" Wargrave then mused, more to himself, \"Damned if that Iron Crowbar doesn't see everything a step ahead of us.\"\n\n\"The plane is going to touch down at 11:00pm.\" said Corrigan. \"It's time to go.\" Everyone stood up. Jody Corrigan went up to Henry Wargrave and said \"I might not be seeing you again for some time, Henry. We've had a lot of good times over the years, and I thank you for all you did for us, for me, in that time.\"\n\nHenry Wargrave shook Corrigan's hand. Despite his irritation at Corrigan, he did acknowledge that they indeed had shared 30 years of collaboration on many CIA projects, as well as 'off the record' projects that had made them tremendously wealthy.\n\nSarah Collins came up to Wargrave. \"Thank you for breaking me out.\" she said. Wargrave shook her hand politely.\n\n\u2028Then Bartholomew Scott came up, hand extended. \"Mr. Wargrave...\" he said. Wargrave stared at Scott, not shaking the proffered hand. The air was filled with uncomfortable tension.\n\n\"Let's go, Scott.\" said Corrigan, trying to save his subordinate from further humiliation. They left the office. Henry R. Wargrave turned out the lights but did not leave. He sat in the darkness, going over in his mind what had gone so horribly wrong. It wasn't just Scott's incompetence, though that exacerbated the destruction of decades of work. No, Wargrave realized he'd come up against someone who was his intellectual equal, a foeman worthy of his steel...\n\nPart 17 - Nightfall of Evil\n\nCounty Airport was to the north-by-northwest of town, just on the west side of the River that flowed northwest at the base of the mountain range before peeling off to run directly south along the west side of Town. The airport was relatively big compared to small airports, due to the number of private jets that would come in for University football games, but it was nowhere near a commercial airport, even a smaller one such as Daytona Beach, Florida.",
        "I was pretty much running on fumes, but after a '5-hour Energy' and some good food, I was ready to finish out the night's work. I was now in plainclothes, wearing the jacket that had been made for me some time before, the one with the very light armor sewn into it.\n\nJust before 11:00pm, we received word from a patrol car hiding near the highway that led west out of town that a large stretch limo with Government tags had crossed the river and was headed to the Airport. Laura, myself and Jack Muscone scrambled to go. Laura rode with me in my Police SUV, while Jack and a couple of FBI agents followed at a distance... we weren't sure where those eight rogue agents were, the ones that broke Sarah Collins out of jail.\n\nThe limo had been stopped just inside the Airport entrance by TCPD officers, as ordered. Bartholomew Scott was arguing almost violently with them when I pulled up.\n\n\"Okay, Johnson,\" I said, \"let them pull up just up to the left here.\" I said.\n\n\"What are you doing here?\" Scott demanded of me. At that time, Jody Corrigan, Sarah Collins and two men clad in black 'ninja suits' got out of the limo, prompting Laura to get out of the SUV. I had myself, her, and two cops; Corrigan had himself, Scott, Collins, and two others. The odds were in my favor, I thought to myself amusedly.\n\nThe limo was directed about ten yards to the left of the entrance. There was some kind of wooden shack structure at the fence, perhaps housing an electrical or gas device that served the airport. It was relatively dark there, the lights of the front gate lighting most of the area.\n\n\"Yes, Lieutenant, what are you doing here?\" Corrigan asked with a mere hint more politeness than the asshole psychopath Bartholomew Scott.\n\n\"I've got something in the back of this SUV you need to take with you.\" I said. \"A reminder of your total failure today.\" I led the way to the back of the SUV. The bomb that had been placed on the plane Laura was to have taken to Washington was now sitting in the back of my SUV.\n\n\"I see.\" said Corrigan. \"I'm surprised, Lieutenant... I'd have thought you'd want to use this as evidence, or that your Fire Department's E.O.D. team would've destroyed it by now.\" While the police had the SWAT team, the Fire Department had been privileged with an E.O.D. team, and the Public Health Department a highly skilled HazMat team. That's how the politicians worked to spread the wealth around.\n\n\"No, I want you to take this shit and get it out of my County.\" I said. Corrigan turned to his two black-clad agents.\n\n\"Make sure there are no trick detonation devices on this thing.\" he ordered. The agents checked it thoroughly.\n\n\"Sir, the arming device has been defused.\" one of them said. \"Looks like the FBI's work, from what I've seen in the past.\"\n\n\"Is it safe to transport?\" Corrigan asked. He was assured that it was. \"Okay, put it in the trunk of the limo.\" he said. \"After we take off, you can drive the car out to one of the farms and detonate the fucker.\" The men put the bomb in the trunk of the limo.\n\nJust then we heard the motors of a plane. It was a small but expensive aircraft. It circled once, then came in for a landing. As we watched, Patrolman Johnson called out to me: \"Lieutenant! The tower says that plane just landed without getting clearance!\"\n\n\"We don't need your filthy clearance to land a plane.\" said Scott boastfully. He was standing by the limo, next to the driver's door. Collins was on the other side of the limo, near the right rear door, while Corrigan was at the very rear of the vehicle. The plane had taxied in, and was sitting near the parking slots, obviously waiting to pick up Corrigan and his crew.\n\n\"Well, Lieutenant,\" said Corrigan, \"this is au revoir for now. The next time I see you will be on much more favorable terms for me. Goodbye, Dr. Fredricson.\"\n\n\"See you around, dickhead.\" said Scott, his voice loud and gloating, finally getting a chance to take a shot at me. \"Maybe next time I'll have the chance to shove that crowbar so far up your ass you'll be shitting nails for a week.\"\n\nAt that moment, I reached under my jacket, took out my personal weapon, a Beretta 96 Brigadier Border Marshal, a powerful .40 S&W caliber semi-automatic handgun. It had a laser sight built in, which I flicked on. The red dot was lighting up Bartholomew Scott's face.\n\n\"I told you...\" I said to Scott, \"... that if I ever saw you in this County again, I would kill you.\"\n\n\"You bastard, are you kidding me?!\" said Scott, looking surprised but not really shocked nor fearful.\n\n\"Lieutenant, what the hell are you doing?\" cried out Corrigan in disbelief. Sarah Collins' eyes were wide, also. The two black-clad agents were about to go for guns, but Corrigan signaled for them to stop, as my Patrolmen were about to draw their own weapons to protect me.\n\nIn reply, I clicked the safety off and took careful aim. Just as I was about to pull the trigger, I felt my wife's hand on my arm at the top of my elbow, pushing down.\n\n\"No, dear.\" she said. \"Don't. You can't.\" Tension in the agents subsided.\n\n\"But I can!\" Laura shouted.\n\nWith lightning speed, she drew her .357 magnum revolver out of her pocket. It too had a laser sight. Hardly before I could blink, I saw a red dot on Scott's face, followed by a deafening noise, followed by two more. Scott's face and neck exploded in a shower of red. He fell backwards, then lay still, not moving. Bartholomew Scott was dead, liquidated by CIA officer Laura Fredricson.\n\nThe two agents went for their guns but I was faster. My arm came up across Laura's body and I fired two fast shots, each perp getting one square in the chest. My firearm's expanding bullets ripped them apart and they fell dead.\n\n\"Jesus, Fredricson!\" shouted Corrigan. \"What in the FUCK are you doing?!?!\" Laura had whirled and had her gun aimed at Corrigan, while my laser dot lit up Sarah Collins, who was wise enough not try to withdraw a gun on me a second time. Her eyes and mine remained locked, and I could see the hatred and unspoken promise of vengeance in hers.\n\n\"I told you before, you prick.\" Laura said. \"My family comes first. Scott tried to murder my husband and his fellow police officers, and would've allowed hundreds more to die. I was authorized by the Director of the CIA himself, in writing, to eliminate that psychotic bastard. Would you like to be next, Jody?\" Apparently my wife knew the man's button, too, and she pushed it.\n\n\"Oh, Jesus.\" said Corrigan, exhaling loudly. There was a driver in the limo. Corrigan told him and Sarah to get the bodies and load them into the limo. Once that was done, Sarah Collins got in the front seat with the driver, having given me one last look, that unspoken promise to have vengeance on me still in her eyes as Corrigan said \"You will regret this, Fredricson.\"\n\n\"I don't think so.\" replied Laura as Corrigan got into the front seat of the limo. It began driving across the parking lots and grass strip to the waiting plane.\n\nJust as the car neared the plane, I caught a movement out of the corner of my eye, coming from behind that little wooden shed by the fence. I was about to swing my gun over, but recognized that it was my ex-wife Melina!\n\nShe was dressed in all black, a 'ninja suit' like the two dead agents had been wearing. She was wearing her black hair long, letting it flow behind her back. She looked hot (yes, I was thinking that even in these tense moments). She held up a small device, a black box with a red button on it. She pressed the button.\n\n*BOOM!*... *KA-BLOOOM!!*\n\nThe limo exploded in a flash of bright white, followed by an even larger explosion. The vehicle disintegrated into shards of flying metal that were blasted into the air. I instinctively jumped in front of Laura to cover her. The two police officers hit the deck. Melina had not moved.\n\nThe plane began moving. I noticed Melina had something in her hand. It was an M79 grenade launcher, the stand-alone equivalent of the M203 grenade launcher.\n\n\"Let me see that!\" I yelled, taking it from her. It was loaded. I pointed the device at the nose of the plane and pulled the trigger.\n\nPOOMP!... *BOOM!!*\n\nI'd hit the plane directly. Even as the first grenade was traveling to the target, I quickly opened the breech and inserted the next grenade, then fired it also.\n\nPOOMP!... *BOOM!*\n\nThe plane had been moving forward by inertia, but my second direct hit obliterated it as the grenade exploded the gas tanks.\n\n\"Good shooting!\" said Melina, very impressed. Such a compliment from the best marksman I'd ever known was very appreciated.\n\n\"Thanks.\" I said. \"I learned something at Officer's Basic Course.\" Indeed... at Military Police OBC at Ft. McClellan, Alabama, I'd fired an M203 practice grenade that went into the target armored personnel carrier, coating the insides with orange paint, whereas most of my classmates hit the side of the APC or missed. My ROTC instructor, a highly decorated Viet Nam veteran, had taught me a novel way of shooting: point, click, and let the Spirit guide me in my aim. It sure worked.\n\nJust then, Jack Muscone pulled on up. He'd been watching from a distance. \"Jesus Christ, Don!\" he said. \"You've pretty much ended my case against the bastards!\"\n\n\"Hope that's not a complaint.\" I said. \"Jack, you want to take over the formal processing of this, federalize it?\"\n\n\u2028\"That would be prudent, wouldn't it?\" Jack said.\n\n\"Consider it yours, compliments of me on behalf of my Chief.\" I said, then turned to go. \"Come on, Melina. You have one final task for tonight.\" I said. Melina came along with Laura and myself, not knowing what it was about... but about to know soon enough.\n\nPart 18 - Removing All Traces\n\nI drove Laura and Melina to Town High School. It was dark, of course, but there were cars near a back building. I went there.\n\nTown High School has an excellent Vocational Department. They would build two houses a year at the Fire Academy Range, had a full auto body repair shop, a photography lab of very high quality, and they also had some serious shop, metalworking, and forging equipment.\n\nThe lights were on in the building. The teacher, a man named Dwight, was there. He had longish brown hair combed straight, a beard and mustache. He was a 'good ole boy', though slender in build. With him was young Ryan, who I had met in investigating the death of Michelle Schelle in the 'Swap' case, the young man who had the pleasure of fucking his very beautiful mother from time to time, lucky guy!\n\n\"Good to see you again, Don!\" Dwight said. \"The furnace is just about ready. It'll melt iron, steel, just about anything except tungsten at this temperature. We've already melted some iron pieces in it, so you'll have enough to pour these ingots. Going to melt your crowbar down?\"\n\n\"Nooooo, not that.\" I said. \"Just something that needs to disappear forever.\" I saw two boxes, one an 18\" x 18\" square, filled with clay dirt, the other much longer and thinner, also filled with clay. Metal would be poured into the cavities at the ends of the boxes, which had been formed to the desired shape by putting wax molds inside the clay, then heating the boxes until the wax melted out. The liquid metal would then take those shapes as it was poured into the boxes.\n\n\"Well, I'm going to go on home, the wife is waiting up for me.\" said Dwight. \"Ryan here is very good at this; he'll help you the rest of the way.\" He turned and left.\n\n\"What's going on?\" Melina asked.\n\n\"Where's your rifle?\" I asked her quietly. Melina's face froze, as did Laura's.\n\n\"I... I don't know.\" said Melina. \"I put it in the back of the SUV, and I thought that bastard Ikea had it dead to rights.\"\n\n\"So did I.\" I said. \"Fortunately for all of us, there is someone who saw much farther than I did.\" I raised my voice. \"Mom?! I know you're here! Come on out!\"\n\nMy mother came out from behind a half-opened door. To my surprise, Cindy Ross came out with her, still dressed in the SWAT uniform. Cindy was holding Melina's sniper rifle, sans scope, in both hands. \n\nWhen I'd seen Cindy at Ward Harvester, I didn't realize then but realized now that she'd had the rifle all along, and was 'hiding in plain sight' with it. I now knew why my mother had so eagerly allowed Ikea to search the SUV, as well. I had to admit that my mother's plan was brilliant and beautiful, though it could have erupted into carnage if someone on either side had pulled a trigger. I decided to think about that later, and take care of business at hand now.\n\n\"Nice rifle, partner.\" Cindy said to her business partner Melina. She became a drill sergeant and hurled the weapon at Melina, who caught it just before it would have smashed into her face. With speed almost too fast to see, Melina had instinctively opened the bolt and eyeballed the chamber, clearing the weapon.\n\n\"Destroy it.\" Cindy ordered.\n\n\"Yes.\" I said. \"You have to destroy it.\"\n\n\"I know.\" Melina said as she looked at the rifle nostalgically. \"You were a good one, my friend.\" she said. Then she removed the bolt and moved to the furnace. Ryan lifted the lid with a pulley system and Melina threw the bolt into the white-orange insides. She then unscrewed the plastic stock and handgrip. As Ryan opened the furnace lid again, she thrust the receiver assembly into the molten metal inside.\n\n\"That long box is mine.\" said Cindy to me, seeing my eyeing it. \"I asked my buddy Ryan here to help me out with a special project.\"\n\n\"I see.\" I said. The other box was my request; I was going to give out little trapezoid-square paperweights of metal to commemorate this day. \"I did not ask Cindy what her project was, playing a mind game with her, knowing that she wanted to tell me that I'd find out about it later, but by not asking I didn't give her the chance. That little mystery would be solved later, I knew.\n\nAfter a few more minutes to let the heat rise again, Melina inserted the barrel of the rifle into the furnace. As it melted, any remaining evidence that could tie her to the execution of the evil Reverend Jonas Oldeeds melted with it. Melina would be forever safe unless she confessed to the crime.\n\n\"Okay guys, I'll handle it from here and give you your shapes in a couple of days.\" Ryan said.\n\nI took a hard look at Cindy. She was gamely trying to stand with us, but I could tell she was flagging and absolutely exhausted. I turned to my mother. \"Mom, take Cindy to the hospital. Right now. Make sure she hasn't hurt herself and there's no internal bleeding.\"\u2028\n\n\"I'm okay, Don.\" Cindy said.\n\n\"Good!\" I replied. \"That means the doctors will find you that way at the hospital. Now get moving. Mom, take her now.\" \n\n\"He's right, dear.\" said Phyllis to Cindy. \"I'll take you there now.\" Cindy did not argue with my mother, learning a lesson that I'd been thoroughly taught all my life...\n\n----\n\nAfter taking Laura and Melina back to the Psychology Building so that Laura could take our children home. \"Darling, we will need to talk, and soon.\" my wife said on the way. I pretty much understood why, but we'd have to burn that bridge later.\n\nI drove to the Airport. When I got to there, I observed many police cars and a couple of Media people, but they were being held at bay by Muscone and his team of FBI agents. They tried to stop me, but Muscone saw me and told his peeps to let me through. He was leaning against the side of the hood of his car, watching the proceedings. I eased myself next to him, our heads at the same height since the car hood slope was lower where I was. The Fire Department had arrived and were just foaming down the burning car and plane.\n\n\"I told them to let the fires burn for a while to consume the fuel.\" Jack Muscone said. \"And of course to make evidence collection... easier.\" I knew what he meant; the more evidence destroyed, the easier his investigation was going to be. This was one where nobody really wanted to know the truth about anything.\n\n\"Sounds good.\" I said.\n\n\"By the way,\" said Jack, \"I know your nephew was a bad man, but he was still your blood kin. My condolences.\"\n\n\"Thanks.\" I said. \"And thanks again for saving my wife.\"\n\n\"No problem.\" Jack said. \"I don't know how you figure things out like you do, but you just prevented the deaths of many innocents, as well as destroyed a really bad group of people that had subverted the CIA. And for that, a Nation that won't ever really know what was going on is grateful to you. And I for one hope that I'll get to work with you again, many more times.\"\n\n\"Yes.\" I said. \"I'm sure we will, my friend. And the sun will rise tomorrow on a world that is a little better off, I think.\" We said no more as we watched the 'investigation' proceed.\n\nPart 19 - Aftermath\n\nOn the morning of July 28th, only three weeks after being shot and badly wounded, Detective Cindy Ross returned to the MCD room. She was greeted with tremendous applause and much well-wishing. I'd relented and allowed her to return to light duty, extremely light duty, after she'd told me she was coming back and I'd have to physically throw her out if I didn't want her there. I decided that it would be better if she were at Headquarters, under my control... and not in league with my mother on any more \"brilliant\" schemes in the near future (!).\n\nWhen my mother had taken her to the hospital, they'd kept her overnight and given her an IV, but examinations showed no renewed bleeding or serious issues. So they released her the next afternoon.\n\nThe three of us were alone in my office as they explained about the rifle. \"When Melina put the rifle in the back of the SUV, your mom and I were watching. I'm not sure how your mom knew something was going to happen, though.\"\n\n\u2028\n\n\"Oh, I just happened to keep my eyes and ears open around Town.\" Phyllis said. \"I knew that nasty man Ikea was up to something; he and that equally disgusting partner of his had been following Daniel and Melina around. Then I saw how she looked when she got that phone call, I know you saw that too, son. So Cindy and I snuck into the Ward Harvester grounds.\"\n\n\"Sure enough,\" said Cindy, \"your mom spotted Ikea and Ferrell watching Ward Harvester from a distance. After Melina put the rifle in the car, we saw them leave their observation site, so I snuck up to the left rear door with an extra car key, went in and got the rifle. From then on, it was a matter of keeping the rifle with me, and I just blended in with the SWAT Team after everything went down inside. If Ikea had seen the gun, I'd have killed him before giving it up.\"\n\n\"Well, you two got one over on me, there.\" I said, grinning. \"I really thought I was going to have to kill him when he pulled the rifle out of that car. In some ways, it's too bad I didn't get to...\"\n\n\"Nonsense, son.\" said Phyllis. \"It was worth taking the hit to watch you destroy that man, but it's best you didn't kill him. Unfortunately, what your Chief did to the SBI is not going to go unnoticed, nor unpunished.\"\n\n\"Yeah... you're right.\" I said, worried for Chief Griswold.\n\n----\n\nDid I need to worry, though? I was in MCD, talking with everyone about the new hires and promotions coming on August 1st, having given out the metal ingots that Dwight and Ryan had made for me. The Council had unanimously approved the appointment of Teresa Croyle to head the Vice Squad, complete with a promotion to Lieutenant. She had resigned from the Midtown Police I.A., and was already moving into Cindy's apartment for the time being.\n\nAt that moment, Chief Griswold and Paulina Patterson came into MCD. The Chief had a huge smile on his face under his mustaches, which were twitching. He was grinning as merrily as I'd ever seen him... even more than when he got me the early promotion to Lieutenant. However, neither he nor Paulina, who had a beautiful smile on her lovely face, would tell us what was making him so happy. \"I'll let you know in a few days.\" he said. Paulina nodded in agreement, enjoying knowing something I didn't know.",
        "\"Maybe they're going to make you Captain.\" Cindy said.\n\n\"No.\" I replied. \"I'm not old enough. I have to be 36 to become a Captain, and the Council has made it abundantly clear that I won't be promoted again until I met the age requirements for any future position-\" I stopped. No, could it be? Naah... then again...\n\n----\n\n\"I know my guys had defused that bomb.\" said Jack Muscone as we ate lunch at the Cop Bar on the same July 28th. Jack loved the double cheeseburgers at the Cop Bar. \"So I don't understand how it was detonated.\"\n\n\"I'm not sure,\" I said, \"but Melina- or Laura or one her agents- somehow put another explosive device in that Government limo. Possibly the spare tire was anything but. The first explosion detonated the bomb that your guys deactivated.\"\n\n\"That's what a couple of my forensics guys concluded after they examined what was left of that limo.\" said Jack. \"That was one hell of an explosion. We found bits and pieces of Jody Corrigan, Sarah Collins, Bartholomew Scott and two guys we can't identify, even with our classified database. And just so you know, they all officially died in that explosion, so no one except your officers know that your wife shot up Scott and you took out those two ninja-wannabees.\"\n\n\"Doesn't bother me.\" I said. \"The officers were sworn to secrecy by the FBI, and my wife had authorization to wax Scott. It's all good, and since it's federalized and classified now; I don't even have to file a police report.\" 'No paperwork' was best news of the day, I thought to myself.\n\n----\n\n\"The one thing I want to know,\" said Tanya Perlman in the MCD room, toying with her metal ingot as the Detectives discussed the case while I was lunching with Muscone, \"is how Don had any idea that Eleanor was going to shoot Ned. And how did she get the gun?- oh... never mind, he gave her the gun... but how did Don know she'd shoot Ned and not him?\"\n\n\"Let me just 'suggest' this.\" Cindy Ross said, pun fully intended. \"Remember the case of the murdered football player, Jefferson Jackson?\"\n\n\"Yes, but what does that have to do with this?\" Tanya asked, her sweet face looking puzzled. Cindy just looked at her, letting Tanya think about it.\n\n\"Ohhhhh...\" Tanya said. \"Tommy and Candy!\"\n\n\"I see what you're getting at.\" Martin Nash said, also beginning to understand. \"Those kids were hypnotized. So maybe Eleanor was hypnotized also, for lack of a better word. Don must've said something to trigger Eleanor to shoot Ned, and she did. He couldn't get close to Ned, and he was being watched, but she got right up to him and let him have it.\"\n\n\"You guys are good.\" I said, walking into the room, having heard the last part of the conversation. \"But of course there is no way I could or would ever admit to being responsible... for such a brilliant piece of work.\"\n\nEveryone grinned and nodded in understanding. But in my mind a question loomed: How had Cindy suggested it as knowingly as she did?...\n\n----\n\nSomewhat to my surprise, on the 27th the morgue reported that Ned's body had been claimed. I soon found out by who, and why. Ned's father Nathan, whom I'd called earlier that morning, the day after Ned's death, had come down. He had not wasted any time.\n\nNathan had worked himself out of the debt Elizabeth had put him in, and he'd remarried. His wife was a bit plain, but very nice, and I could tell by observing them that they were well-matched, and this woman was certainly better for him than my sister Elizabeth had been.\n\n\"I'm going to take him back to where he grew up, bury him there.\" Nathan said. \"I still blame myself for a lot of his failure. I think he was in a lot of mental and emotional pain and I'm...well, I'm glad that he's at peace now... at least I hope he is.\"\n\n\"I understand.\" I said. \"Listen, I want to take you to see someone who has asked to meet you.\" We got into my Police SUV and I drove to the home of Jeanine and Todd Burke.\n\n-----\n\n\"I never knew him. I never knew I had another son until it was... too late to meet him.\" Nathan said, sitting by Jeanine on the sofa as she showed Nathan pictures of his biological son Timothy Olivet.\n\n\"He was a good man.\" said Jeanine. \"He built his company, and he did a lot of charity work even though he tried to keep his name out of the papers so his parents... the Burkes... wouldn't find him.\"\n\nTodd had been polite but not exactly friendly to his former stepfather when we'd arrived, and he was now talking with me and Nathan's wife.\n\n\"Todd, do you want to come to the funeral?\" I asked my nephew.\n\n\"No.\" Todd said. \"I... I think I'm going to go to State Women's Prison and tell Mom. It'd be better if she heard it from me.\" I understood, and it was a mature choice by the young man. I was proud of him.\n\n\"For what it's worth, tell your mother I said hello.\" I replied.\n\n\"Getting soft on her, Uncle Don?\" Todd said, ribbing me.\n\n\"Naaah...\" I said. \"But to tell you the truth, I'm trying to not hate her. We'll probably never be friends, but after hearing Teresa's story last Christmas, I realized that I don't have to keep up the hate...\"\n\nMeanwhile, Jeanine took a framed photo of Timothy Olivet. The photo had been taken at an event honoring Tim for several generous charity contributions. \"I hope you'll accept this.\" Jeanine said. \"I know you didn't know him, but you'd have been proud of him.\"\n\n\"I am proud of him.\" Nathan said. \"Thank you for sharing these pictures and stories with me. Can we visit his grave before I leave to go home?\"\u2028\n\n\"Sure...\"\n\nPart 20 - Rest\n\nJust after noon on July 29th, Todd was speaking to his mother through the glass wall that separated them State Women's Prison.\n\n\"Ned is dead, Mom.\" said Todd. \"He kidnapped Jack Burke's baby, thinking it was your grandson, and was trying to flush out Uncle Don. But Uncle Don beat him, and Eleanor Burke shot Ned dead.\"\n\n\"I see.\" said Elizabeth, her voice flat and metallic. \"And the baby is all right?\"\n\n\"Yes, Mom.\" Todd said. \"Not that you care, but Uncle Don is okay, too. He was shot in the back by a sniper, but his armored vest held. He told me to tell you 'hello', by the way.\"\n\n\"Thank you for coming here to tell, me Todd.\" Elizabeth said. After some more small talk until their time was ended, Todd left. Elizabeth was escorted back to her sell. A part of her was not unhappy that Ned was dead, but she still remembered the little baby boy that would crawl around the house or pull on her skirts as he tried to walk. Despite all the bad that had happened, she shed a few tears as a mom mourning the loss of a son. But not many: she cleared her mind and continued to consider her plans for her dear younger brother...\n\n----\n\nOn the late afternoon of that same July 29th, I was looking over the cemetery where Ned had been laid to rest. It was a downhill slope to a stream, then up a hill on the other side. Ned was buried on the hill on the other side.\n\nLaura did not accompany me, as she still had had to go to Washington for that meeting. This time she not only booked her own flight, she abruptly changed it just before she was to leave. She would bill the taxpayers for the cost of the change, but she wasn't taking any chances.\n\nTo my surprise, Melina had told me she wanted to go to Ned's funeral. She'd never hated Ned, and I remembered how she'd acted at the lake, trying to get him to have sex with her, then feeling bad for him once he was hospitalized after we brought him back. I don't know what she saw in him. I hadn't understood what Goth Girl Kathy had seen in him, either.\n\nMelina and Daniel drove me up in their car, giving me a chance to talk to them about the campaign and upcoming election. I was happy to hear how enthusiastic both of them were, and how much fun they said they were having on the campaign trail. I was glad my idea to run Daniel instead of myself was working out.\n\nI sat with Nathan and his wife at the funeral. There were some people about Ned's age, who had known him in school. People from Nathan's church acted as pallbearers. Many of the people there had no idea of Ned's criminal record, and they only remembered the skinny, introspective kid they'd known in the years of his youth.\n\nNow, I was standing on the little roadway, having said goodbye to Nathan and his wife. A big black car had driven up, and Jack Muscone and another man had gotten out of it, watching the funeral from a distance from beside the car. After the rituals were concluded, I went up to meet them, again sensing the power and mastery of the man with Jack. He was the Deputy Director of the FBI, the man I'd met back in Town before.\n\nI introduced Daniel and Melina to him, and he was polite but soon came to business, saying to them \"Would you two mind either leading us or following us back to your town? I'd like for Don here to ride with me. We have something of urgency to discuss. Agent Muscone can ride with you, if you like, and I'll pick him up in Town.\"\n\nI got into the backseat of the big black car, the Director on the other side. The cushions of the car were plush and very comfortable; I want seats like this in my Police SUV, I thought to myself.\n\nAs we drove back, the Director got to the point, explaining the situation. I totally agreed with him and gave my own suggestion for solving the problem. He gave a brief, pursed smile as he agreed, getting what he wanted out of the bargain: me.\n\nPart 22 - Epilogue\n\nThe sun was setting on the evening of July 30th as I sat on the back patio of The Mountain Nest, looking at the Town. I was finally starting to catch up on sleep and feeling physically good again after the last several days of chaos and no sleep.\n\nLaura was coming to sit next to me, having just arrived back from her meeting. She had a sheaf of papers with her. I handed her a glass of wine as she sat down, and she drank half of it in one gulp.\n\n\"Easy, girl.\" I said. \"Do much more of that and I'll take advantage of you in your drunken condition.\"\n\n\"Sounds good, but we have to talk about something first.\" Laura replied. \"Read this.\" I read the document she gave to me.\n\n\"Basically, Don, you know too much.\" Laura said. \"The Agency is not going to accept just a non-disclosure agreement. They basically told me in no uncertain terms that you have to be brought into the fold. If you don't join the CIA, they might just kill us both.\"\n\n\"No, they're not going to do that.\" I said. \"And as I've said many times over the last decade, I am never joining the CIA.\"\n\n\"Honey...\" Laura said. \"I know of your aversion to them, and sometimes I don't blame you. The way some of them have been acting lately would never have been tolerated before. But they're serious... you have to do something, and they want you on the inside. You won't have to do much, just some analysis while you're here doing your police job.\"\n\n\"Nope.\" I said. \"I've already made other arrangements.\" By now Laura was beginning to figure me out.\n\n\"Okay, what is it?\" she said. In reply, I opened my hand to reveal an FBI badge.\n\n\"Jack and his boss got to me first.\" I said. \"They've hired me as an FBI consultant. I'm still with the Police Force here, I'm under the same security terms as I would be under the CIA, I get to help solve crimes in a much more similar way to what I do in the County, and best of all... I insisted upon a non-compete clause, so the CIA can't hire me now, even if they want to.\"\n\n\"Ohhhhh!\" Laura groaned. \"You didn't.\" I couldn't tell if she was kidding or not. She threw up her hands in mock disgust. \"So now I'm sleeping with the enemy... the FBI.\"\n\n\"Well,\" I said, \"the way I see it, you and I can begin work on better FBI-CIA relations... in fact, why don't we go to bed and begin working on those better relations right now...\"\n\n\"Well, in the interest of better relations, how can I say no to that?\" Laura said. We got up and walked hand-in-hand back inside...\n\nFinis. ... for now."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "hot wife",
        "big cock",
        "police drama",
        "crime drama",
        "mystery"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/trilogy-twilights-last-gleaming"
}