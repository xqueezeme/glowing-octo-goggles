{
    "title": "Red Swallow Ch. 04",
    "pages": [
        "After completing \"The Diary of Jewel Delacroix\" I was approached via E-mail by Rachael Ricci Swede and asked if I would consider writing a story idea she had. After a few emails I was intrigued by her idea and agreed to write it.\n\nThis is an original story by Barbara Jean Goodhead.\n\nWritten in collaboration with Ideas and Plot Points by Rachael Ricci Swede.\n\nAll characters are fictitious and bear no resemblance to any person living, or dead, fictional or non-fictional, in this or in any other universe. All are over the age of 18 unless specifically stated otherwise.\n\nThe following story contains themes of cross-dressing, feminization, forced feminization, reluctance, non-consent, and many other adult topics.\n\nHere are the usual disclaimers:\n\nThis is porn; you must be over 18 to read this. If not, go away and come back when you are old enough. If you are old enough and this style of erotica isn't to your liking, then go find some erotica that is. \n\nYou're an adult, life is short, find porn you like and read that instead. But if this is a style you enjoy, then feel free to comment and provide constructive criticism and feedback. I need to grow as an author and honest constructive criticism is always welcome.\n\n******\n\nRed Swallow Chapter 4\n\nThe swallow bird is usually associated with love, loyalty and peace. Swallows as bird spirit animals are considered joyful, decisive and full of hope.\n\n**\n\nDustin walked into the gym. He took a swig from his water bottle. Anastasya gave all the staff free water and she encouraged everyone to take bottles home with them. After all, it was important to stay hydrated.\n\nIt was nearly noon and later in the day than normal for Dustin to go and work out; the gym was very busy. When Dustin first started working out he worried about being mocked by the other patrons. He imagined he would be stared at due to his small size and tiny physique, but his concerns disappeared when he noticed no one ever bothered him. Largely, he was ignored and left alone. Everyone seemed to be doing their own thing and that was just fine. Working out was a solitary affair for him but it allowed him to get his workouts in and over with in a timely manner.\n\nDustin's progress losing weight had mixed results. While he had lost weight around his middle he noted that he had gained a bit of weight on his chest and bottom. Even the black and white track suit he was now wearing was a bit tight around his hips and bottom. He really should have bought a larger size but it was the only one at the thrift store and it fit well enough at the time.\n\nThe weight on his chest he reasoned was due to his progress on the bench press. When he first started working out he had barely managed to press the 45 pound bar once. Today he was hoping to make his best effort since starting to work out. He was going for 95 pounds today!\n\nThe weight on his bottom no doubt was due to his leg workout. On leg day he enjoyed doing squats and that obviously had to explain the increase in size of his bottom.\n\nDustin had a busy week this week and had missed a couple of days. Today he planned to make up for it with a longer workout that covered both legs and chest.\n\nBut first he had to figure out what was going on in the lobby. He tried to make his way through but it was very crowded with patrons. It seemed that the gym was sponsoring a health promotion of some sort. As he slowly worked his way through he was accosted by a very fit and attractive girl wearing work out clothes\n\n\"Hi there, I'm Cindy, can I interest you in trying out our new line of athletic clothing today?\" The young woman had a pretty smile.\n\nDustin admired the young woman. She was wearing a white sports bra and what appeared to be a matching white yoga short that looked as if it had a belt around the hem. The shorts rode low around her hips and high above her legs and almost looked like booty shorts. Dustin felt that the overall effect of the outfit really showcased her abs and toned legs. The bra and shorts had a manufacturer's logo on the left breast of the sports bra and the left hip of the shorts. It was really a good look.\n\nDustin was intrigued. It wasn't often a pretty girl ever bothered to speak to him. In fact, it had pretty much never happened, ever. Since his anxiety was not bothering him right now Dustin smiled back.\n\n\"What is it you are promoting?\" Dustin asked.\n\n\"Today we are promoting the new athletic clothing line by Sh\u00fc, the most popular women's athletic shoe on the market today. We are offering all these products at cost at all the 'All Night Gym' locations throughout the city today.\"\n\nDustin smiled at the salesgirl's enthusiasm. He glanced over at the tables and racks and immediately noticed something was off. All the merchandise was women's workout clothing.\n\n\"Wait...what...you think I'm...\" a girl? Dustin almost asked, but instead continued with \"fit enough to wear these?\"\n\n\"Yes, of course, you look great, and with your figure you would look amazing in our new line.\"\n\nDustin was momentarily stunned to think that a complete stranger was mistaking him for a girl. True, his hair had really grown out and was now down past his shoulders. Anastasya had his hair color lightened a couple of tones from his normal light brown to what was now a lighter blond color. But the sales-girl had actually complimented his figure! Dustin felt proud as he reasoned that his working out and all his acting preparation must really be paying off!\n\nDustin looked over the clothing and was immediately drawn to the outfit the sales girl was wearing.\n\n\"Do you have something like this that might fit me?\" Dustin asked, indicating the sales girls outfit.\n\n\"Of course! You look like a medium for the shorts, and an A-cup up top, so a medium sports bra as well.\" The sales girl led Dustin over to a table loaded down with the company product.\n\n\"What color would you like?\" She asked?\n\nDustin looked over the selection carefully before choosing.\n\n\"The purple, I think.\" He finally answered. He was admiring a lavender color set that had an acid washed appearance, with a darker purple belt and chartreuse belt loops as an accent color. The Sh\u00fc logo was in the darker purple color.\n\n\"Oh good!\" The sales girl gushed as she selected the items from the available supply.\n\n\"We also have our award winning top rated cross-trainers today. They're new to the market this year. Do you know your shoe size?\" The sales girl tried for a little healthy up-selling.\n\nDustin was entranced by the workout clothing and simply answered \"Yes, size 8 please.\"\n\nThe sales girl found the shoes \"We even have them in matching lavender with chartreuse laces. Now would you like our compression socks as well?\"\n\nDustin simply nodded. The girl was wearing knee high athletic compression socks.\n\n\"Do they come in this lavender as well?\" Dustin asked.\n\n\"Let me see...we do have a limited selection...color choices...\" The girl mumbled and rummaged through the swag until she found what she was looking for.\n\n\"Yes, white compression workout socks with the lavender stripes around the top with the Sh\u00fc logo, these will match the shoes and the ensemble.\" The girl smiled at Dustin.\n\nDustin didn't now why he was doing this or even considering buying the outfit, it was very revealing; he was simply acting on impulse.\n\n\"I'll take them.\" He smiled.\n\n\"I'll ring you up over here, so what is your name?\" The girl asked.\n\nDustin pulled out his phone to make the purchase.\n\n\"Desiree.\" He answered happily.\n\n**\n\nDustin walked away with his purchases and made his way towards the locker room. He had a warm glow inside at the thought that the sales-girl didn't seem to know he was a guy. The warm glow evaporated slightly as he approached the doors to the men's locker room. I can't go in there and change into these, he thought.\n\nDustin glanced over at the doors to the women's locker room, and then back to the men's when he noticed the solution to his dilemma. There was a family changing room off to the side. Dustin darted in and shut and locked the door behind him.\n\nStripping out of his track-suit and his male workout shorts, shirt and shoes he put on the women's yoga-style workout shorts, sports bra, knee high socks and shoes. He looked at his reflection in the mirror. Shit! His penis bulge!\n\nDustin dropped his shorts slightly and pressed his testicles back up into his inguinal canal and tucked his penis back between his legs. Pulling up his new workout booty shorts he was pleased that the spandex blend material was able to keep his cock and balls trapped, and present the smooth flat front and V shape just like when he tucked while wearing panties. Dustin had never worked out while tucked before and wondered if it would affect his workout.\n\nDustin admired his image in the mirror. He actually had a fit and toned feminine figure! He had never worn anything so revealing in public before and was considering changing back into his normal shirt and gym shorts when a short rapid series of peremptory knocks on the door broke him from his reverie. He tossed all his other clothes back into his gym bag. Where Dustin had entered the changing room, now it was Desiree who exited.\n\nDesiree mumbled an apology to the slightly harried mother with two children in tow as she walked out into the concourse of the gymnasium. Desiree didn't see the annoyed look the mother gave her for the crime of being single while using the family changing room.\n\nDesiree made her way to the weight room to start her workout. She walked over to a bench press rack, set down her gym bag and stretched a bit to warm up. She took a black hair band from her gym bag and pulled her hair back into a loose pony tail to keep it out of the way. Desiree glanced around the busy gym as she put on her small leather and mesh workout gloves before starting her first set.\n\nLaying back on the bench she suddenly felt awkward with her legs on either side of the bench. She pulled her feet up onto the bench, her heels next to her bottom like she had seen other women do. She didn't want strangers staring at her crotch.\n\nDesiree warmed up with set of 10 reps with just the 45 pound bar, and then added 10 pound plates to each side for her next set of 10 reps at 65 pounds. She felt great. The new clothing was really comfortable and even though she didn't have a 6 pack, her tummy was flat and a quick look in the mirror showed that her ass looked amazing. Desiree glanced around the gym noticing the other women working out and idly wished her bust were bigger. Her A-cups were present and accounted for but...well...maybe next time she could bring the bra inserts...\n\nShe noticed that her attire was one of the more revealing among the gym patrons. She wasn't alone though. She noted many other female patrons had made purchases and were wearing similar Sh\u00fc brand apparel as well.\n\nFinishing her second set warmed her muscles up and now it was time to get serious. She wanted to meet her goal. Desiree added another set of 10 pound plates to each side of the bar for a total weight of 85 pounds. She was a bit nervous now, lifting heavy like this...\n\n\"Hey.\" The soft male voice behind her got her attention.\n\nDesiree turned and looked, unconsciously flipping her ponytail over her shoulder as she did so.\n\n\"Hey.\" She said as she wondered what the guy wanted. No one had ever approached her at the gym before.\n\n\"You uh...need a spot?\"\n\nDesiree looked at the gym bro in his workout shorts and loose tank top. His biceps were huge and his chest was ripped. It looked like gym-bro didn't skip leg day either.\n\n\"Umm...yeah...sure...\" Desiree began nervously. This was a first, she had never had anyone, male or female, approach her or offer to help before...well, approach Dustin or help Dustin at the gym she thought.\n\n\"Whatcha goin' for?\" Gym-bro asked.\n\n\"Just 2 reps if I can manage. I'm lifting for my personal best today.\"\n\nGym bro smiled at her when she spoke. Desiree noticed his even white teeth and rugged handsome features.\n\n\"Cool...lets do it!\" Gym bro smiled at his not so subtle corporate come-on.\n\nDesiree missed the come-on entirely and took her place on the bench to make her lift. She was momentarily overcome by a strange heady aroma. It took her a moment to realize that with gym-bro standing right over her head like this she could smell the heavy testosterone laden musk from gym-bro's...\n\nDesiree gulped, caught her breath, and then took hold of the bar. She managed to lift the bar off the rack and eke out her two reps without too much difficulty.\n\n\"Good lift.\" Gym-bro stated. \"Who taught you how to work out?\"\n\n\"Thanks\" Desiree acknowledged. Taught me how to work out? What kind of question is that? \"Uh...no-one...I just figured it out on my own.\"\n\n\"I can give you some pointers if you'd like. I'm Eric, by the way.\" Gym bro smiled at her as he offered his assistance.\n\n\"Hi...I'm Desiree.\" Desiree smiled back. Flirting at the gym was a new experience. Thank goodness she had her acting skills and her rehearsals and training at COBALT to fall back on.\n\nDesiree removed both the 10 pound plates from her side of the bar and added a 25 pound plate while gym-bro Eric did the same to the other side.\n\n\"How many reps?\" Eric asked.\n\n\"Just the one, I hope.\" Desiree answered.\n\n\"See...there's a problem right there.\" Gym-bro Eric criticized.\n\n\"Excuse me?\"\n\n\"Don't hope you can do it. Focus and visualize. Believe you can do it. Motivate yourself and will it to happen.\" Gym-Bro said motivationally.\n\n\"Uh...ok...\" Desiree suddenly didn't like Eric.\n\nShe took her place on the bench press, feet on the bench by her bottom, wrapped her gloved hands around the bar, and lifted.\n\nDesiree struggled with the weight as she pushed it back up and off of her chest. But just as she was about to succeed in her lift and make her personal best, Eric reached down and gave her help.\n\nWith the bar back on the rack Desiree was angry.\n\n\"Why did you do that?\" She asked.\n\n\"You needed help.\" Gym-bro Eric answered simply.\n\n\"No I didn't. I had this. I didn't ask for help.\"\n\n\"You looked like you needed help so I helped. I'm your spotter.\" Gym-bro Eric didn't seem to get it.\n\n\"You cheated me out of my best lift.\" Desiree raised her voice in anger. She was upset and other patrons were actually looking over now. Dustin would have never acted this way but Desiree didn't care.\n\nGym-bro Eric seemed put out.\n\n\"No I didn't. You wouldn't have made it, so I stepped in and helped you.\" Gym-bro Eric didn't back down.\n\nDesiree was getting angrier. \"Fine! Whatever! Thanks for your help. Goodbye now.\"\n\n\"You know what. Forget it.\" Gym bro Eric walked away muttering. \"Bitch.\" He said under his breath.\n\nDesiree watched him go, wiped down the bench with her hand towel, then took the plates off the bar and re-racked them.\n\nPicking up her gym bag she made her way over to the squat rack for her leg workout. \n\nStill seething at being cheated out of her lift she was on auto-pilot as she set the rack to her height, added weight, and took position under the bar.\n\n\"Stupid man.\" She thought as she lifted the bar on her shoulders and took a step back. Watching her form in the mirror, Desiree started her squats.\n\n\"Fucking asshole.\" She murmured to herself as she pushed out her reps.\n\n\"Jerk.\" She spat as she started to feel the burn from her exertions.\n\n\"Desiree? You ok?\"\n\nDesiree stood up from her last squat and was surprised to see Trixie, dressed to work out, standing behind her.\n\n\"Trixie, what are you doing here?\" She asked as she stepped forward to set the bar back onto the squat rack.\n\n\"I work out here; yoga and Pilates and cardio usually. I don't recall ever seeing you here before though. That was an impressive set.\"\n\n\"That's because...\" Desiree stopped herself from finishing her sentence. That's because I'm usually here working out as Dustin, she thought.\n\n\"I'm running late today, I usually get here and work out earlier than this.\" She answered instead.\n\nDustin had never seen Trixie working out either, but Dustin always kept his head down and avoided interaction with people. Dustin and his stupid Social Anxiety, Desiree remembered bitterly.\n\n\"Impressive? Impressive how?\" Desiree dropped her earlier line of thought and changed the subject.\n\n\"You just did 30 reps.\" Trixie said.\n\n\"Oh.\" Desiree started to feel the effect of so many reps. She had racked the 45 pound weights onto the bar for total of 135 pounds. 5 more than her total body weight. Normally she would have done sets of 10 reps with a rest between each set. In her anger she must've forgot to count her reps.\n\nShe turned and posed for the mirror to check out her ass. She could see her muscles rippling beneath the soft curve of fat of her bottom. \"Damn. You could bounce a quarter off that ass.\" \n\nTrixie laughed out loud. \"Yes...you could.\"\n\nDesiree laughed as well as she retrieved a bottle of water from her gym bag. She was thirsty, and after all, it was important to always stay hydrated.\n\n**\n\nAdam Smith only had a few true friends and he was happy to count Penny Farthing among them. So when his caller ID notified him she was calling his private line he picked up right away. \n\n\"Penny, to what do I own the pleasure?\"\n\n\"Adam, it's been too long. Unfortunately I'm not calling just for pleasure today.\" \n\n\"Oh?\" Adam was intrigued.\n\n\"I was calling to find out about Dustin. We haven't heard from him in quite awhile. Do you know how he is doing?\n\n\"I assume he is doing fine. I haven't heard anything since I hired him and assigned him to one of our Risk Assessment divisions.\"\n\n\"Could you check on him for me? He hasn't spoken to his grandmother in a few months now and she's worried.\"\n\n\"Anything for you Penny, I'll call you back as soon as I get an update.\"\n\n\"Thank you Adam.\"\n\nAdam hung up and was surprised by the call. He always felt that Penny was the one that got away. He had known her since college and they had dated and even been intimate on several occasions. It hurt when she broke up with him after she came out as lesbian. A lesser man would have considered this a blow to his virility but Adam knew it was a testament to his masculinity and virility that even lesbians found him desirable.\n\nTruthfully he had been meaning to check on the Risk Assessment division for awhile. They're work had really improved after hiring Dustin but had started to suffer lately. He'd been meaning to figure out why and decided to look into it after he asked about Dustin.\n\nAdam had his secretary make the call and was quickly patched through to Bob Malthus.\n\n\"Bob, you old trooper, how are things down in Risk Assessment?\"\n\n\"Doing well boss; can't complain. To what do I owe the pleasure of this call?\" Bob was nervous. Adam Smith wasn't really known for making social calls to his employees.\n\n\"I just wanted to check up on the kid I sent your way awhile back, name of Dustin Thurston, how is he doing?\"\n\nAdam heard what sounded like nervous shuffling in the back ground.\n\n\"Well, I'm sorry to say I was forced to terminate Dustin a while ago.\" Bob said.\n\n\"Terminated? As in Fired? I personally hired this kid and you fired him without informing me first?\" Adam found that he was irritated that the kid had been fired and no one had thought to keep him informed. Fortunately Adam knew how to maintain his composure and always present a calm and calculating expression. It helped him to work to keep his temper under control.\n\n\"I didn't know you had a personal interest Sir.\" Always good to be respectful to your superiors when under pressure, Bob knew.\n\n\"And why, exactly was he terminated?\" Adam asked as an suppressed the edge that tried to creep into his voice.\n\n\"Well, his work wasn't up to the standards we expect here in risk assessment.\" Bob dissembled.\n\nAdam had called up Dustin's personnel file while he talked to Bob. He noted that Dustin's dates of hiring and firing coincided with the increase and then decrease of productivity and accuracy of Risk Assessment's reports.",
        "\"That's a non-answer Bob. Don't bullshit a bull-shitter. According to my data your work was improving when he was there. What happened?\"\n\nWell...\" Bob hemmed and hawed.\n\n\"Damn it spit it out Bob.\"\n\n\"Dustin was working part time at a Club called COBALT. We didn't feel that his employment at this club was in keeping with the moral standards of Smith Financial.\"\n\nAdam's anger was developing into a slow burn at first as he discovered that Dustin was fired without his knowledge. Learning that he was working at a known gentlemen's club and brothel came as a complete surprise.\n\n\"Alright Bob, Carry on then.\"\n\n\"Yes sir.\" Bob was relieved to end the call.\n\nAdam let his surprise fade as he considered what to do. It would be so easy to simply call back Penny and let her know what he found out, but she would want details and truthfully so did Adam.\n\nAdam knew all about club COBALT. He secretly had a gold membership and was one of the clubs vetted \"trusted\" patrons. It would be very easy to find out what was going on by calling the manager.\n\nBut exercising due diligence first, Adam logged on to the members only website. In only a couple of key strokes and clicks he found the menu. It was not even a minute before he realized that \"Desiree\" was really Dustin. \n\nAdam looked at the full screen page with the high def pictures and was surprised that the pudgy young man he hired was now working as a hostess at COBALT. The pictures of a beautiful young woman, singing on stage, smiling as a waitress waiting tables; she definitely didn't have a pudgy middle. The figure of \"Desiree\" was near perfect, maybe a bit small up top but...\n\nAdam felt a gentle stirring in his groin and after a few moments consideration he placed a dinner order. He no longer went to the club anymore as he was too well known, but that didn't mean he couldn't have take-out.\n\n**\n\nDesiree had finished her song. It was her turn to open for the night. It was open mike night again and it looked to be a fun evening. The club was packed and the first customer wanting to take the stage was waiting in the wings.\n\n\"Boom, boom, boom, even brighter than the moon, moon, moon, it's always been inside of you, you, you, and now it's time to let it through, ooo, ooo\"\n\nDesiree once again excelled at her performance and the crowded club approved. She passed the mike off to the DJ and went to see if anyone had hired her as their hostess for the evening.\n\nShe was immediately intercepted by Anastasya. \"Dez, you have a dinner date tonight.\"\n\n\"Tonight, when did this happen?\" Usually an appointment for a dinner date was known in advance.\n\n\"An hour ago...one of our trusted customers has requested the pleasure\" it was always interesting how the word 'pleasure' was emphasized \"of your company for the evening.\"\n\n\"Oh...ok...wow...where?\"\n\n\"We will have a driver take you and see you arrive safely. Your patron is a gold level member so be...at your best.\" Anastasya paused as she gave Desiree a pentrating look.\n\n\"Go and change into your little black dress, the sequined tea dress with the open back. Black heels, gold jewelry, and touch up your makeup, make it a bit less dramatic. You leave in 30 minutes.\"\n\nDesiree just nodded her assent as she made her way to her wardrobe and changed from her formal gown to her black sequined tea length dress. She was forced to go bra less as the dress was open backed. Her small A-cups filled out the front of her dress adequately, but Desiree couldn't help feeling inadequate without her padded bra and breast forms compared to some of the more busty divas.\n\nShe changed her stockings for black sheer thigh highs after changing into black silk bikini cut panties, and put on her 4\" black Louboutin Heels. At her vanity she put on a gold chain necklace, gold ball stud earrings, and slender gold bracelets.\n\nShe checked her makeup and made a few minor alterations, with a practiced hand removing her eye shadow and applying a less dramatic color. She then changed her lipstick to a deep rich red that went well with the black of her dress.\n\nShe checked her appearance in the mirror and was pleased at the classical elegance of her ensemble. She grabbed a long light summer coat and made her way downstairs and out the back of the club to the waiting car with a minute to spare.\n\nDesiree sat in the back of the car quietly anticipating her dinner date but her reverie was broken when after a short drive the car brought her to the front entrance of the Smith Financial building.\n\nDesiree grew apprehensive when the car stopped in front of her former work place.\n\n\"This is the place?\" She asked Nikolai, her driver.\n\nNikolai merely nodded as he parked the car and opened the door for Desiree. Nikolai didn't care much for the whores. He was paid to make sure they arrived safely and that was the end of it as far as he was concerned.\n\nDesiree glanced up at the towering building and approached with some trepidation. Was Carl her dinner date for the evening? It would be recklessly bold for him to have her at his place of work. Besides, she knew that Anastasya had considered banning him for being too rough on her but as near as she knew nothing had come of that yet. There was no way Carl could be a gold member.\n\nNikolai took Desiree's hand and escorted her from the car to the elevator and Desiree's fears were alleviated and replaced with puzzlement as Nikolai pressed the button for the 40 floor.\n\nThe 40th floor was where the executive offices were. The CEO, CFO, President's office. Desiree began to feel curious as to whom she would be entertaining.\n\nArriving at the 40th floor Nikolai led her to the office of the CEO, Adam Smith. Desiree's emotional rollercoaster of reverie, apprehension, trepidation and puzzlement now plunged into dread. Adam Smith knew Dustin. Would he recognize her now as Desiree?\n\nDesiree walked through the doors to Adam's office as Nikolai released her hand, nodded professionally, and left, closing the doors behind him. Standing alone in Adam's office for the first time since her job interview those many months ago, Desiree took a good look at the man before her.\n\nStanding at over 6 feet tall and wearing a black business suit, Desiree noted that Adam was handsome with piercing eyes and a strong nose and chin. He had good color but perhaps could use some more time in the gym as wealth and privilege had added a few extra pounds that he could probably do without. His hair was a distinguished grey color with a tendency to curl slightly. Desiree thought his hair was also a bit long and perhaps he could us a haircut.\n\nDesiree momentarily caught herself when Adam looked right at her. The last time she was here she couldn't even look her former boss in the eyes as her Social Anxiety prevented it. Now, despite her current profession, or maybe because of it, she found that she could look straight at him without worry.\n\n\"Well, you look absolutely stunning tonight...Dustin.\"\n\nDesiree didn't flinch at Adam's statement. Well that answered that question she thought. Still, she was surprised that he recognized her and it piqued her inquisitive nature.\n\n\"Thank you Adam, and you are looking very handsome tonight, and its Desiree now.\" Where Dustin would have cowered with fear, Desiree could flirt with the best of them. \n\n\"Or course...Desiree...I must admit, when we first met, I would never have guessed that you were transgendered.\" Adam began amicably.\n\nDesiree smiled as she shrugged off her coat and set in on the back of one of the chairs; revealing herself wearing her little black dress, the short skirt showcasing her long legs and heels. The lace tops of her thigh high stockings merely hinted at by the dress skirt length. She noted that Adam swallowed slightly, perhaps with skittishness as he seemed to admire her.\n\n\"I suppose I didn't know about it either at the time.\" Desiree moved over to the bar in the corner of Adam's office. She walked slowly to allow Adam a moment to watch and she saw that he seemed appreciative of her beauty.\n\n\"May I?\" She asked, indicating the wet bar.\n\n\"Please do. I'll have a scotch, on the rocks.\" Adam smiled when he spoke. \n\nDesiree made Adam's drink and then one for herself. She had never had scotch before and was curious. Taking their drinks she approached Adam, who had not risen from his chair behind his desk since she arrived.\n\nDesiree held the drinks low, near her hips as she walked toward Adam and swirled the drinks, causing a pleasant sound as the ice would softly strike the glass. She handed Adam his glass and then held hers in front of her, with a slight smile admiring Adam where he sat.\n\n\"To what are we drinking?\" She asked softly. \n\nAdam noted the shift as she posed for him, one foot forward slightly, her drink held casually in front of her pert breasts, emphasized by the v-neck of the body of the dress; her long legs that seemed to go on forever.\n\n\"To business.\" Adam said as he took a swig of his Scotch.\n\n\"To business?\" Desiree asked as she took a tiny sip of her scotch, and regretted doing so. It was too strong with an oak flavor and seemed to burn in her mouth like fire.\n\n\"I must admit to being surprised that you were fired, and even more surprised as to where you now find employment.\" Adam finally rose from his desk chair and moved around his desk to approach Desiree.\n\n\"I suppose the world is a strange place.\" Desiree allowed.\n\n\"Your former colleagues had little to say about it. Strange, that.\" Adam probed for answers.\n\n\"Well, to be fair, I became closer to some of them than to others.\" Desiree winked as she spoke. Memories of Carl were still unpleasant.\n\nAdam realized he was getting nowhere with pussyfooting around and decided to be direct.\n\n\"I looked into the Risk Assessment unit where you worked. Accuracy of information and projections was up 22% when you were there, and then fell off to below average after you left.\"\n\n\"After I was fired, you mean.\" Desiree wondered if this was a dinner date or an interrogation. She realized that it didn't matter. Adam would have already paid to have her here. She decided she could be blunt as well.\n\n\"I did all my own work that Bob Malthus assigned me as well as all the work Carl Marks dumped on me. I stayed until all the work was done and did it for a pittance in wages.\"\n\nDesiree took another sip of her scotch. It hadn't improved any in the minute since her previous sip.\n\n\"I doubt Carl would agree with that.\" Adam challenged levelly. He approached Desiree slowly. He towered over her and tried to intimidate her.\n\n\"No more than when he fucked me, I'm sure.\" Desiree answered smoothly.\n\nAdam was impressed with how Desiree was handling herself during his questioning. No backing down or fear. Her answers were sharp with just a bit of edge to them. Adam found that he was becoming distracted by her beauty standing so close to her. She just looked straight up to his eyes and didn't back away. Her perfume was enchanting.\n\n\"Interesting...and I'm impressed.\"\n\n\"That I have a brain or that I am pretty?\" Desiree flirted again. She didn't know what Adam's end game was so stuck with her role.\n\n\"Both, actually.\" Adam took another swig of his scotch, finishing it. He set his empty glass down on his desk and then took Desiree's nearly full drink and set it down as well.\n\nAdam had all the answers he needed. He wasn't sure yet what he would tell Penny Farthing but for now he had other plans.\n\nAdam stood up and moved closer to Desiree and took her in his arms. He was pleased as she seemed to melt right into his embrace while still looking up into his eyes.\n\nAdam dropped his head down and kissed Desiree. Her lips met his and he pulled her closer as she placed her arms around his neck and held him in an embrace of her own. Adam decided that there would be more time for talking later.\n\n**\n\nDesiree left the Smith Financial building at precisely 4 AM. Well before any workers would start showing up and long after their lovemaking session had ended. Adam had taken her from his office up one more story and into his private penthouse that comprised the entire top floor of his building.\n\nDesiree smiled to herself as she sat in the back of the car taking her home. Home would be her apartment as COBALT would have closed over an hour ago. She sent Anastasya a quick text that she was fine and was going home and would be back at COBALT later that day.\n\nDesiree shifted slightly in her seat as the taxi turned and she felt the warmth of her bottom, and in her bottom, from Adam's generous attention in bed; the slightly squishy sloppy feeling of his cum trapped inside her causing her to smile, her expression one of relaxed satisfaction.\n\nAdam had disrobed her in the bedroom of his penthouse. The bed was actually up against a wall of windows that faced out onto the skyline of New York. He left the curtains open and the lights dimmed.\n\nDesiree had never been an exhibitionist but Adam's enticing kisses and firm hands were enough to make her forget, or just not care, that anyone who chose to look would be treated to a private voyeurism porn show.\n\nStripped to her heels, thigh highs and panties Desiree had stood before Adam and was prepared to kneel down before him to give him a blow job when he took her completely by surprise, knelt down before her, pulled down her panties and gave her a blow job.\n\nDesiree's small cock was hard as a rock in mere seconds. She was astonished at how good it felt. It was probably less than a minute before her knees buckled and she had to press down on Adams shoulders to prevent her from falling down as she came, shooting her tiny load of cum.\n\nAdam didn't swallow or spit. He had timed it perfectly and had a wash cloth with him to catch her load. He generously wiped her tiny cock clean, pulled up her panties, and as he stood up, guided her down onto her knees to service him.\n\nDesiree eagerly sought to return the favor. Her first blow job...that she ever received, that is...was amazing, but what she really wanted to do was take care of Adam and his cock. At just over 7 inches and a decent thickness, Desiree bob evenly as she took him into her mouth and fellated him with zeal and reckless abandon.\n\nDesiree used her phone and paid the taxi fare and walked into her apartment building. She made her way to her apartment and shut and locked the door behind her. Tossing off her high heels, dropping her coat, and then shimmying out of her dress, she left a trail of clothing from her front door to her bathroom shower.\n\nThe hot water streamed from the shower head as she gently washed her sore and satisfied body. Sweat, makeup, and cum were all washed away by the shampoo, facial scrub, and body wash. Satisfied and sated, Desiree toweled off and climbed naked into bed. She thought about what happened next.\n\nAdam was quite able to resist her oral attention and it took all her skills to finally get him to cum. She had bobbed and sucked, licked and teased with her tongue, gently nipped with her teeth, and still Adam resisted. Desiree felt equal to the challenge as she stroked his saliva slickened shaft with one hand while gently fondling his balls with another.\n\nStill Adam would not cum. Desiree looked up in deep thought, making eye contact with Adam as she pondered how to make him cum, absentmindedly tapping his cock against her lips while she pondered.\n\nThen licking her finger, she resumed bobbing up and down on his cock with her mouth and gently probed Adam's ass with her moistened finger.\n\nWhen Adam gasped in pleasure she knew she was on the right track. With gentle yet firm pressure she slowly worked her finger into Adams Ass. It worked! Once her finger had penetrated his ass past her first knuckle he groaned in pleasure and a torrent of cum erupted from his balls and out his cock into her mouth.\n\nDesiree made sure she had his cock deep down her throat. She did not care too much for the taste of cum and having him shoot his load straight into her tummy meant it would bypass her taste buds completely.\n\nIn business, and love, that was a win-win situation.\n\nAnd once Adam finished cumming and she had released his cock from her mouth, Adam had pulled her back up, placed her on her back on the bed and put pillows under her to elevate her ass, and fucked her hard.\n\nHe even made sure to use lubrication first before he ploughed into her back passage with his 7 inch long hard cock.\n\nDesiree lay in her bed as sleep slowly approached. She could still remember the pleasantly intense feeling of fullness as Adam pounded her ass; the pleasure of being spanked by his lap every time his cock bottomed out inside her. The relief and regret when he withdrew and the momentary anticipation just before his cock started to plunge back into her ass on the next stroke.\n\nIt was amazing. It was just...perfect.\n\nAdam didn't stop until she had an orgasm. His cock slipped and slid against her prostate and the stimulation was extraordinary. The memory of her first, and then her second, and then her third rapture still vivid in her mind, the pleasure finally ending when Adam ploughed hard into her for the last time, his second ample load of cum spewing deep and wet into her ass.\n\nOvercome with exhaustion, Desiree finally fell asleep."
    ],
    "authorname": "BJGoodhead",
    "tags": [
        "crossdressing",
        "reluctance",
        "transgender"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/red-swallow-ch-04"
}