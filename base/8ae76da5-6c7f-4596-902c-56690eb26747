{
    "title": "Lady in Red Pt. 03 Ch. 08",
    "pages": [
        "At six PM, Gwen and Steve briefly met with their friends and families at Valhalla to establish the order they would arrive at the movie premier. Becky and Pete had been unable to accompany Gwen and her entourage on the world tour because they had been filming their action/adventure television series on location. They were obviously happy to be back in Asgard for the premier of The Queen's Ransom.\n\n\"We just had to be here for this,\" insisted Becky. \"I was in the trilogy, and that really got my career going. I want to see how everyone reacts when Pete and I die in each other's arms in this movie. I hope there'll be some tears shed for us.\"\n\n\"Believe me when I say there'll be plenty,\" responded Sybil as she held Tyler's hand tightly. \"Tyler and I organized a sneak preview a couple of weeks ago just to be sure it was up to the quality Lady in Red Productions has come to expect. I cried and laughed dozens of times, and often at the same time. This is, without a doubt, the best movie I've ever seen!\" \n\n\"Sybil's right,\" agreed Tyler. \"It didn't take much thought to move the opening up to the weekend the Queen of the World and her Warrior returned to the states. The movie's been edited to perfection and the world wants to see it. I had no qualms about making it a three-day opening weekend. It's going to pack theaters for weeks to come.\"\n\n\"It's certainly gotten a lot of publicity,\" observed Billy Marsh. \"This is the first time a sitting president has starred in a movie that opened while she was in office. Ronald Reagan starred in movies before he was president, but he didn't make any while he was in office, and the ones he made weren't nearly as good as 'Queen's Ransom'!\"\n\n\"Plus, everyone is anticipating Gwen's nude scene,\" pointed out Charlotte. \"Having a president as beautiful and sexy as Gwen is taking a lot of getting used to for most people.\"\n\n\"Let's not forget that the writing, acting, directing and cinematography are all incredible,\" boasted Lisa. \"It's such an honor to appear in a film this good.\"\n\n\"Okay, it's all great,\" quipped Kate. \"But we need to determine the order of our arrival pretty soon. There are a lot of people waiting for us.\"\n\nIt had become the custom at premiers in Sparta for the actors to walk down the middle of the street for the final block, as adoring fans lined both sidewalks to catch glimpses of the town's most famous residents. The huge crush of people in Sparta for this movie caused Lady in Red Productions to alter its tradition slightly. \n\nEveryone was going to be driven to the auxiliary parking lot of the hospital. Security would keep the lot cleared, and allow everyone to safely exit their cars and prepare for the two and a half block walk to the Lady in Red Center for the Performing Arts, where the premier was taking place. The extra block and a half was to accommodate the crowds, which were anticipated to be much larger than usual.\n\n\"Okay, everyone,\" called out Steve. \"We're ready to get this show on the road. The Secret Service doesn't like it, but we're all going to walk the last two and a half blocks. Sparta has closed Main Street to vehicular traffic, and there are thousands of fans lined up to see us walking the red carpet.\"\n\n\"They're lined up to see their Queen, who just happens to be President of the United States,\" corrected Billy Marsh. \"I'd stand in line, too, if I weren't a major star in the movie!\"\n\n\"I get the feeling that if there's another 'Empire' movie, Billy will be one of the first people to die,\" suggested Charlotte with a grin.\n\n\"That's right, and it'll be a horribly slow and painful death!\" added Steve.\n\n\"Great!\" responded Billy. \"Everyone will be talking about my death scene for years to come. I'll probably win an Oscar for it. It'll be bigger than Hamlet's death scene. Et tu, Brute?\"\n\n\"You're mixing up your Shakespeare plays,\" laughed Ashley. \"We should have known that 'the rest is silence' isn't something Billy would say on his deathbed.\" \n\nEveryone broke into laughter at Ashley's quip. Gwen beamed at her friends and family as they prepared to leave for the premier. Regardless of all her successes, she realized that her loved ones meant far more to her than riches and power. \n\nAs Steve and Gwen waited in their limousine in the hospital parking lot, they heard numerous cheers and applause as members of the cast began parading down the street to the Performing Arts Center. Finally, their turn came to walk the red carpet. As Gwen stepped from the car and took her place next to Steve, the crowd noise began to abate. By the time the couple reached the crowded street, those lined up along the sidewalks had gone completely silent.\n\nThe fans closest to Gwen dropped to one knee as she approached, and so it continued during the entire trek to the theater. Every fan kneeled as Sparta's Queen passed in front of them. Once she reached the reporters standing near the entrance to the theater, Gwen turned and waved to the two and a half blocks of spectators that had watched so quietly as she walked by them. A roar echoed across the streets of the small town as fans enthusiastically voiced their approval of their hometown heroes, especially The Queen of Peace, Sparta's gift to the world.\n\nGwen and Steve spent a few minutes responding to questions from reporters before going inside to take their seats. As soon as Gwen was comfortably seated, the lights went down, and the movie began.\n\nTwo hours and four minutes later, as the credits began to scroll up the screen, thunderous applause erupted from those lucky enough to have attended the premier. Many viewers were shedding tears as they applauded and shouted their approval. Gwen found she had to make a concentrated effort to contain her own tears. That worked until she turned to see Paula blubbering into Ted's chest, holding several tissues to her eyes. \n\nThat was all it took to open the floodgates for Gwen and several of her co-stars. Lisa, Becky, and Charlotte joined Gwen in shedding tears of their own as the admiring crowd continued to clap and whistle its approval of the film.\n\n\"I may not be a professional movie critic,\" managed Billy as he hugged Charlotte to his chest, \"but that was the best movie I've ever seen!\"\n\nMany others echoed Billy's sentiments as everyone milled about, hoping for an opportunity to speak to the actors that had done such an incredible job. While all of those in the movie received praise, it was obvious that everyone was hoping for their chance to have a word with President Hammer and her Warrior. Gwen and Steve were gracious as they did their best to spend at least a little time with every person that had been exercising the tremendous patience required to see them. It was almost two hours later when the Spartan Queen and her entourage entered Marsh's Landing. They planned to enjoy a late dinner in celebration of the premiere of their latest film.\n\n\"As you know, Vince and Cindy couldn't make it tonight because he was meeting with members of Congress today to lobby for his appointment as Vice President,\" mentioned Lisa as she sat down next to Gwen. \"He was not only confirmed today, but he's going to be sworn in tomorrow afternoon! He asked if you and Steve could attend, since you already plan on flying to Washington tomorrow morning.\" \n\n\"Please tell Vince and Cindy we'll be extremely proud to attend his swearing in ceremony,\" replied a delighted Gwen. \"I just wish Kate and Naomi could be sworn in at the same time. I'm concerned about their chances in the Senate.\"\n\n\"Mom just called!\" shouted a delighted Jordan as the group quieted to hear what had her so excited. \"She and our next vice president are getting married tomorrow just before Vince is sworn in! Congress suddenly stopped talking and took a vote: he was only a few votes shy of being approved unanimously. Chief Justice Hamilton is going to perform the wedding ceremony first, and immediately afterward he'll swear Vince in as Vice President. She wants me to be her Matron of Honor!\n\n\"She asked me to see if Gwen would be a bridesmaid. I'm also supposed to ask Steve if he will give Mom away. She's old enough to be his mother, but she says he's the best male role model she's ever known.\" \n\n\"Washington is really going to be hopping tomorrow!\" enthused Billy Marsh. \"The President is returning after a two-month world tour building alliances and solving world problems, along with performing a couple of miracles. Jordan's stepdad will become Vice President of the United States, and her mom will become Mrs. Vice President, or The Second Lady, or something or other pretty impressive.\"\n\n\"Vince asked me to stand in as best man,\" added Charlie. \"He mentioned that Congress did a sudden about-face and voted to approve him.\"\n\n\"You don't act very happy about all this,\" observed Gwen to Steve, and he nodded somewhat grimly. \"Is there something you aren't telling me?\"\n\n\"Grandfather Patterson has been texting me quite steadily over the past week or so. He says something mysterious is going on with Congress. For an institution that can never keep a secret, there's remarkably little information being leaked about its recent behind-the-scenes activity.\n\n\"I don't trust many members of Congress, and I'm concerned about the situation. I may be paranoid, but I worry that at least some people on Capitol Hill are conspiring against you, Gwen. They're afraid of you, and fear can cause people to do all sorts of foolish things.\"\n\n\"We'll be in Washington tomorrow, and Gwen will have that town eating out of her hand!\" declared Ashley. \"According to the polls, she's the most popular president we've ever had. Congress will have to toe the line when you and Gwen return and resume residence in the White House.\"\n\nLisa noticed how serious Steve's face was as he listened to Ashley's observation. It was obvious he lacked any confidence the Senate would be receptive to Gwen's appointments. It was readily apparent to all of Gwen's friends and relatives that her Warrior was concerned about something. They had seldom seen him so close-mouthed.\n\n\"Tonight needs to be all about our film and how well it's being received. Let's forget politics until we get back to Washington,\" insisted Steve as he broke into a smile and gave Gwen a kiss on her cheek. \"You're going to win an Oscar for your performance. I'd bet on it!\"\n\n\"If bets are being taken, I'll put my money on Steve, Gwen and Becky winning acting awards, while Jordan and Charlie pull in another Academy Award or two for the songs they wrote and sang together,\" praised Tyler. \"I allowed the critics to view the movie earlier this week, and the feedback has been pretty impressive. 'Queen's Ransom' will be one of the most nominated films ever! It may also break box office records. It's being released all around the world tonight rather than spreading the opening internationally over several weeks. There's never been a commodity as hot as Gwen is right now.\"\n\n\"She's all of that!\" proclaimed Billy as he raised a glass in Gwen's direction. \"A toast to our Queen, our President, our Lady in Red!\"\n\nAir Force One landed in a very crowded and expectant Washington D.C. shortly after nine AM the following morning. Gwen and Steve were whisked by helicopter to the White House. Traffic was pretty much at a standstill as hundreds of thousands or people made their way to the nation's capital to witness the wedding and swearing-in of the next vice president, to be followed the next day by the final concert of President Hammer's World Tour. Gwen marveled at the huge crowds that appeared to be everywhere as she and Steve were flown to the South Lawn of the White House.\n\n\"Steve! Look at all the people in the city today! I wonder how crowded it'll be tomorrow. We'll have a great turnout for our last concert of the tour!\"\n\nSteve nodded in agreement, but in her excitement at the developments below her, Gwen failed to notice how grim Steve's visage was. He decided that Gwen needed to know what was afoot in Congress. When she eventually noticed his lack of enthusiasm and turned to look at him, he decided the time had come.\n\n\"Gwen, you need to know it's very possible you'll be impeached this weekend. If the House does impeach you, the Senate will move very quickly to convict.\"\n\n\"Really?\" asked a surprised Gwen. \"I knew Congress was becoming more and more opposed to this Queen thing, but will they remove me from office over it?\"\n\n\"Indirectly,\" replied Steve. \"They're going to use the excuse that you're becoming wealthier as a result of your office; it's the emolument thing that they're going to use against you. There have been some complaints about you accepting the title of Queen, but that wasn't bestowed by any foreign nation or government, so technically it's a moot point.\"\n\n\"I know you must have a plan. You always do. What do you suggest we do?\" asked Gwen, but she watched her husband slowly shake his head.\n\n\"Gwen, say the word and I'll go to Capitol Hill and start twisting arms. I think I could probably sway enough members of the House to prevent an impeachment vote. Is that what you want?\"\n\n\"You're always so ready to fight for me, darling,\" whispered Gwen as she placed her hand over her husband's chest. \"I've no doubt you could alter the course of history if you tried. You already have! But what do you think we should do?\"\n\n\"Honestly? I think you'd be better off letting it go. If you wish, we could try to present our case. You're not bound by those laws, as they don't apply to the presidency, but honestly, the only reason I can think of to do that would be to avoid setting a precedent for some future President,\" admitted Steve. \"It's an incredible honor to be President of the United States in the first place, and I truly believe you've been the best one the nation's ever had. But with that said, the office is taking far too much of your time and it's restricting your growth.\"\n\n\"Do you really believe that?\" questioned Gwen. \"Will we be better off if I'm removed from office? What about the people who count on us? Wouldn't they think I've given up and forsaken them?\"\n\n\"They need to come to terms with one simple truth. They've forsaken you!\" replied Steve with emotion. \"Regardless of their approval of you, the voters have been sending the same self-serving politicians back to Washington year after year. Now they're going to reap what they've sown.\n\n\"Your removal from office may not the best thing for the United States, but Vince is very capable. I'm convinced, however, that it will be the best thing for us, and for the citizens of the world. You're loved around the globe. We can take that good will and use it to help millions of people in need of it. I really think destiny's been pointing us in that direction ever since we met.\"\n\n\"You truly believe that, don't you?\" asked Gwen as she studied her husband's face. \"I have trouble accepting the idea of being that important to so many people. If it weren't for you, no one would have ever heard of me.\"\n\n\"As usual, you vastly underestimate your abilities and appeal,\" smiled Steve. \"We have to look at what you've accomplished in just over two months as President of the United States. You prevented a world war, you improved relationships with most of the world's major powers, and you gave millions of people hope for the future. That's some legacy for such a short period of time.\"\n\n\"It was we who did all those things,\" corrected Gwen. \"You, along with our friends and family, have accomplished incredible feats. I'm the face, but you're the heart and soul of my brief administration.\"\n\n\"You just used the word 'brief'. So you're going to be okay if you're no longer President of the United States when Monday comes around?\" asked Steve with concern.\n\n\"Now that we've had this discussion, I'll be more than okay,\" replied Gwen. \"I can't wait to take some time off with you and the kids. We can live like a normal family again, at least for a week or so. When you suit up with Jared in a couple weeks, we'll be back in Washington cheering for you!\"\n\n\"You think I'll play again? Why is that?\" wondered Steve. \"I never committed to coming out of retirement.\"\n\n\"That was one of the things that concerned me the most about becoming President,\" admitted Gwen. \"I've seen you talking with Jared, and it was pretty obvious he wants you to play again. He's going off the disabled list pretty soon, and he'd love to have his best bud back on the team. I knew you'd never play while I was President. My welfare has always been your chief concern.\" \n\n\"I'm glad you feel that way,\" replied Steve. \"Jared has been suggesting I could help the team, plus I find I'm missing the competition and the camaraderie. With Vince at the helm, I think the country can prosper during the next three years.\"\n\n\"He may decide to run for the office when his term is up. I think he'd win quite handily,\" offered Gwen.\n\n\"I'm afraid not,\" countered Steve. He's already served four years as President. If he becomes president this weekend, he'll serve for another three. The Twenty-Second Amendment doesn't allow a president to serve more than ten years in total, which means Vince won't be able to seek another term. That's the big reason Congress suddenly decided to approve him as Vice President. They planned it all out. While you're still President their only power over the Vice Presidency is to confirm or deny your appointment, so because they want to move quickly on ejecting you from office, Vince is their only choice. Vince will succeed you, but he can't run for the office again. That opens it up in three years for every shyster and smarmy politician in DC.\"\n\n\"I see!\" exclaimed Gwen. \"As usual, they're placing party politics and personal desires ahead of their country. It's probably a good thing I'll be leaving office. What if I became like them?\"\n\n\"There's not even a possibility you'd ever become such a monster,\" chuckled Steve. \"You'll never be like any politician Washington has ever seen, because your innate honesty and goodness would never let you sink to that level. Your qualities of courage and generosity have elevated you to the unprecedented position of Queen of Peace. Without the distractions of the presidency, you'll become an even greater force for peace and harmony around the globe.\" \n\n\"Sweetheart, you know how I depend on you to help me with these things. I fear that the honorary Queen title is going to require more effort and time from me than being president ever did. I'd hate to let all those people down.\"\n\n\"Those feelings of responsibility and concern for others are more of the qualities that made you their Queen,\" pointed out Steve. \"I'll always be beside you and help you in any way that I can.\"\n\nSteve and Gwen had been in the White House for over an hour before the rest of their friends began arriving. \"You guys get to ride in the Air Force helicopter, but we had to crawl through traffic,\" complained Billy as he and the others entered the room. \"I thought we'd never get here.\"\n\n\"Lisa? Would you please come with me?\" was Gwen's subdued response as she quickly led her sister into a private office, leaving the others with questioning looks on their faces.\n\n\"What's wrong, Sis?\" asked Lisa as soon as the door was closed.\n\n\"We need to get what little we have here packed up and shipped home as soon as possible,\" responded Gwen. \"There's no easy way to say this. Steve found out that I'm probably going to be impeached and convicted this weekend. Vince will be sworn in as Vice President today, and it's likely he'll soon become President, maybe within a day or so.\"\n\n\"Steve told you that?\" gasped a stunned Lisa. \"It could happen that fast? On what grounds? We'll fight it! Don't tell me Steve is going to lie down and allow this travesty?\"\n\n\"That's exactly what he's going to do, and so are the rest of us,\" answered Gwen calmly. \"I can't continue governing under these conditions. Congress won't even approve my appointments, as qualified as they are. They're frightened of the money and power Steve and I have amassed. They'll fight every decision I make. The government will be deadlocked, or I should say will become even more deadlocked.\"",
        "\"But impeaching the most popular president the nation has ever had? That's so wrong, so stupid! I guess I just answered the question I was about to ask. They're really are stupid enough even to consider this,\" lamented Lisa. \"Is this what you've decided? Did Steve make you agree to this?\"\n\n\"Sis, you're insulting both Steve and me!\" snapped Gwen. \"You know I'd do anything for him. You also know he'd never try to make me do anything unless it was for my safety or the kids' safety.\"\n\n\"Oh, Gwen! You're right! I know Steve would never try to do that. I'm sorry I said it. I'm just so surprised about all of this. Are you still going to do the concert?\"\n\n\"Of course! There are hundreds of thousands of people visiting Washington just to see us. We'd never back out on a commitment like that. I guess it's a Farewell Tour along with a World Tour. We just didn't realize it at the time,\" replied Gwen with a sad smile.\n\n\"What are you going to tell the others?\" wondered Lisa. \"They're going to be upset, to put it mildly.\"\n\n\"That's why I'm telling you first. I need you to support Steve and me in this. And for the record, this isn't just because Steve thinks it's best, we're totally on the same page. I'm going to tell them what's happening and try to explain why it's for the best. It'll help a lot if you back me up and do your best to help quell any anger or harsh words. I want very much to do this with some class, as difficult as that may be. We need to have everyone agree not to reveal anything to the press, but to be prepared to move all their clothes and other belongings out. \n\n\"Make arrangements with the people we usually use to move things for us. They're good, and very discreet. If you can, try to have them remove everything by the end of the day. Jordan and Charlie may want to keep their stuff here since her mom will be living here. That's the silver lining in this cloud,\" observed Gwen.\n\n\"I don't know what to say, Gwen. You gave so much of your time and effort to this job. You and Steve were almost killed in Germany. You prevented a world war. You worked so hard to improve relations with so many countries,\" recounted Lisa. \"This is just incredible, but as long as you've determined your course, I'll support you in every way possible, you know that.\"\n\nAll eyes had turned to Steve when Gwen and Lisa disappeared behind the closed door. Kate and Naomi quickly moved to his side to seek answers to their questions.\n\n\"Something's up, and it isn't good, is it?\" asked Kate flatly. \"What's going on, Steve?\"\n\n\"Is it about our not being approved by the Senate?\" suggested Naomi as she joined Kate in grilling Steve. \"That's never going to happen, is it?\"\n\n\"Gwen's the President,\" replied Steve. \"She'll explain everything as soon as she finishes speaking with Lisa. That's all I can say about it.\"\n\nSteve's lack of an informative response didn't go unnoticed by the others. They had all noticed his dark mood the previous evening, and it hadn't improved since. Chatter ceased as everyone waited in silence for Gwen and Lisa to return. \n\nWhen the two sisters reentered the room, everyone noticed the small tear trickling down Lisa's cheek as she failed in an attempted smile. Gwen cleared her throat and immediately had everyone's undivided attention.\n\n\"It's come to our attention that The House will very likely vote to impeach me sometime tomorrow. If that should happen, the Senate will immediately vote to convict, and I'll be removed from office. This could all happen this weekend, and possibly be concluded by tomorrow night,\" announced Gwen to the shocked gathering.\n\n\"My husband has volunteered to travel up to the Hill and utilize his unique negotiating skills to prevent this from happening. I have no doubt he would be successful, but at what cost? My term would remain extremely contentious, and Steve would be working constantly just to keep me in office, never mind passing any useful legislation.\n\n\"I don't want that for Steve, I don't want it for me, and I don't want it for America. Congress will do everything in its power to render me ineffective. They've been doing that almost from the day I took office. We, Steve and I, feel that our country, our company, and all of us in this room will be better served by my returning to private life. \n\n\"We want to spend more time with our kids, our friends and relatives. We want to make more movies and music. I want to return to my medical practice, and I think Steve would like to join Jared in playing for the Spartans. But primarily we need to explore this whole Queen of Peace thing and find ways to help needy people around the world.\"\n\n\"Gwen's right,\" stated Lisa immediately. \"Congress is afraid of Gwen, especially with Steve standing beside her. They'll never work with her to accomplish her goals. Naomi, Steve and Gwen pretty much saved us from a world war and they've achieved tremendous international good will for our country, but now it's time to move on. Our beloved Queen really needs us to understand and support her decision to accept this incredible injustice. Vince will do a great job, so we don't have to worry about the state of the nation. Gwen and Steve have made sure of that.\"\n\n\"No!\" blurted Jordan. \"Vince didn't want this! Neither did Mom. She's not ready to be First Lady. I bet Vince will refuse to accept the vice presidency when he learns what's going on!\"\n\n\"That's exactly why he won't be told,\" stated Steve firmly. \"With Gwen being removed from office, the country's going to need him badly. Don't ruin one of the best days of his life by telling him about this situation. \n\n\"He's getting married to a wonderful woman and being sworn in as Vice President of the United States. He has reason to be proud and extremely happy, as do we all. Thank God he was willing to return to public service, it makes all of this far more palatable. Can you imagine where we'd be if anyone other than Vince became President right now?\"\n\n\"It's still a damn bitter pill to swallow!\" insisted Kate. \"I realize I may be a bit prejudiced here, but Gwen's done an incredible job. If it weren't for her and Steve and Naomi, we'd probably be fighting a world war. If Gwen's removed from office, I'm going to spend a lot of time, money and effort ruining the political careers of those self-serving bastards, and I expect the rest of you to join me!\" \n\n\"Kate, you're preaching to the choir,\" responded Steve with a big grin as he stepped up and hugged her tightly. \"Gwen's got the most loyal, beautiful sisters in the world. We'll work together to change the climate in Washington. One of the best ways to do that is to elect new people. There are other effective avenues open to us as well, and we'll pursue them all.\"\n\n\"I knew you'd never take this lying down,\" managed an emotional Kate. \"We need a nice relaxing vacation, and then we'll start making plans. These politicians need to learn that it's always best to do the right thing, and not the self-enriching thing. This day will live in infamy, but history will show that the long-term effects benefited the entire country, and probably the world.\" \n\n\"I'm so proud to have family and friends that support me so strongly,\" stated Gwen in a faltering voice. \"No one here has ever wavered, and that's meant the world to me. Steve is my rock, but each one of you is an important part of what makes this group so special. It's hard to believe, but I'm actually looking forward to the weekend now. We'll celebrate Jordan's mom's marriage, Vince becoming Vice President, and probably President. Then we'll finally go home to Asgard and relax before deciding what comes next. I suspect we'll be watching a lot of football this fall!\" \n\n\"You won't hear me complaining about Steve playing again,\" admitted Jared as he held Naomi close. \"He'll make me look a lot better if we start winning some games. If things don't turn around pretty soon, I'll be in the unemployment line along with Gwen.\"\n\n\"Ha!\" laughed Lisa. \"You won't get out of it that easily! That job is yours until you don't want it any more. Unlike Congress, we know when we have a good thing. Replacing you won't be on our agenda for decades.\" \n\n\"This means that I'm going to be unemployed!\" gasped Ashley with sudden comprehension. If Gwen was no longer President, she wouldn't need a Press Secretary.\n\n\"Yeah!\" added Naomi. \"Kate and I will be looking for jobs, too. Jason and Dad were approved by the Senate. Should they resign now?\"\n\n\"This is all pretty sudden, but I wouldn't feel comfortable abandoning Vince if he wants me to stay on,\" worried Jason as he looked at Gwen and Steve. \"By the same token, I'd never do anything to place Steve and Gwen in an embarrassing position. Would you want me to resign or stay on if Vince wants me?\" \n\n\"Thanks for asking, Jason, but Steve and I still think you're the best man for the position. If Vince wants you to stay on, and you're willing, it would be great if you'd help him: he's going to need all the support he can get. The same goes for your dad, Naomi. If you speak to him before I do, please pass that along. Our veterans deserve to have men like Jeff working to make their lives better,\" reasoned Gwen.\n\n\"This is all happening so fast my head is spinning,\" groaned Paula. \"It's wrong in every possible way I can imagine. At least it looks like Gwen's decision to ask Vince Rosen to accept the vice presidency will prove to be another very good one. I just hate the word 'impeached', not that 'convicted' sounds any better.\"\n\n\"I'm asking everyone in this room not to mention my possible removal from office to anyone, especially Vince and Cindy,\" cautioned Gwen. \"If Steve's information is correct, I'll probably remain President until Sunday morning. We have a concert to do tomorrow, and the wedding and swearing in ceremony today. Please all of you, do your best to make it a festive occasion for Cindy and Vince.\"\n\nAt one o'clock that afternoon, Gwen and Jordan stood waiting on the large stage overlooking the National Mall with Vince Rosen, his brother Samuel as well as Charlie, as Steve cheerfully escorted a\n\nradiant Cindy Quick across the stage. Steve stopped when they arrived close to Vince, lifted Cindy's veil and kissed her cheek. He then turned to Vince, shook his hand and placed Cindy's hand in his. Ten minutes later, they were a married couple. After a brief shuffle of who was standing where, Chief Justice Hamilton immediately proceeded to swear Vince in as Vice President of the United States.\n\nThe massive crowd extended as far as the eye could see. Huge Jumbotrons were located around the mall and even farther down Washington streets, allowing thousands of people on the streets to see and hear the entire ceremony. \n\nVince and Cindy received an enthusiastic reception when they moved to the front of the stage to wave to the huge audience. Jordan and Charlie were next to move forward. They managed an even louder reception from the adoring crowd. Gwen and Steve waited to allow Jordan and Charlie a moment to bask in the adulation of the thousands cheering for them. \n\nFinally, Gwen took Steve's hand and the couple waved with their free hands as they briskly strode to the join Vince, Cindy, Jordan and Charlie. At first, the sudden silence was jarring as the massive crowd quietly dropped to a knee. Gwen smiled and waved until Steve kneeled next to her. Her surprise was evident as she gazed adoringly at her husband. Sensing movement from the corner of her eye, she turned in total surprise as Jordan and Charlie, two of her dearest friends, had also gone to a knee only to be followed immediately by Vince and Cindy.\n\nOvercome with emotion, Gwen moved to wrap her arms around Steve's neck and pulled his face to her abdomen. The cameras caught her tears falling as she lowered her trembling lips and kissed Steve on the top of his head, which she was now cradling in both hands. The silence held until Gwen spoke quietly to Steve. He rose to his feet and engulfed his wife in his arms. The couple kissed passionately as the massive crowd roared its approval. \n\nWhen Steve released Gwen, she wiped her eyes and smiled while motioning for everyone to stand. Placards and signs proclaiming Gwen as the Queen of Peace began appearing, seemingly from thin air. War had been averted and President Hammer had returned from a triumphant world tour. At that moment in time, the world was as it should be, and the people basked in the pride they felt for their country and especially for their President, their Queen! \n\nAmber Stahl was reporting on the events from a nearby news platform. She never attempted to conceal her enthusiastic support for her Queen. She was extremely eloquent in her description of Gwen's unprecedented power.\n\n\"Alexander the Great relied on his military power to gain control over most of the known world. Gwen Hammer has amassed her tremendous popularity in the United States and around the world with her kindness, intelligence, heroic acts and incredible talent. People follow her, not because of the threat of force, but out of love and admiration. \n\n\"The National Park Service estimates there will be in excess of a million people attending tomorrow's concert. It will be the final performance in President Hammer's unprecedented and extremely successful World Tour. The Washington D. C. concert will become the final jewel in her crown. President Gwen Hammer truly is the Queen of Peace!\" declared Amber as viewers saw Gwen smile broadly as she waved to the cheering crowd.\n\nA few hours later Gwen and Steve, along with family and friends, walked into a very crowded restaurant. Conversation suddenly stopped, and the room became silent with the only sounds being the food preparation back in the kitchen.\n\nA large man wearing an apron suddenly emerged from the kitchen and greeted them warmly. \"Gwen, I mean Madam President, or maybe Your Majesty? I should kneel! I apologize!\"\n\n\"Pleased don't!\" laughed Gwen as she hugged the man before he could make up his mind about a proper greeting. \"How's Anna? We've missed you both.\"\n\n\"She insisted she had to 'freshen up' before she let you see her, but I think it's Steve she's worried about,\" replied Carl Dobish, before loudly whispering, \"I think we need to watch them closely. Anna has it bad for your husband.\"\n\n\"Uh oh!\" responded Gwen in a hushed voice. \"Steve thinks the world of Anna, and he especially loves her cooking. Here she comes now. Let's see if they behave.\"\n\nBefore Gwen was done speaking, Steve had swept the buxom Anna Dobish into his arms. She was laughing heartily as she pretended to struggle against his embrace. \n\n\"It's not my fault, Gwen. Your husband just can't control himself around me,\" managed the flushed woman as Steve finally released her. \"I think it must be my cooking.\"\n\n\"Yeah, he never even noticed that big bosom of yours,\" kidded Naomi as she hugged Anna next. \n\n\"Gwen, I must congratulate you on being pregnant again, although I have no idea why you ever let that man get so close to you! I saw the miracles you performed. I watched all the news about how you had averted a war and met with world leaders. You have truly become the Queen of Peace!\"\n\nAs soon as they were seated in a private room, waitresses hurried to take the group's orders. Once that task was accomplished, Naomi looked around and began reminiscing. \n\n\"The place has changed since the first time you brought us here, Steve. The biggest change is the large crowd in the restaurant now.\"\n\n\"You're right,\" chuckled Steve as he thought back to his rookie year. After the second practice of the day at the team's Richmond training camp, Steve had been walking to his car in a parking lot when he noticed one of the men who was vying for a position on the defensive line had a young man pinned against a car with one hand. He appeared to be threatening to hit the kid with the other. \n\n\"What's the problem?\" demanded Steve as he moved to stand as close as possible to the young man being manhandled by the larger athlete.\n\n\"This kid was hanging around my BMW, and I don't like it. He's probably looking to see if there's anything worth stealing before he breaks into it,\" responded the larger man. \"I'm going to give him a little lesson in why he shouldn't take other peoples' stuff.\"\n\nSteve noticed the kid was clutching some colored papers in his hand, so he reached down to take one from him. \"It looks to me like he's placing these flyers on car windows. I don't think you need to react so roughly to a young entrepreneur's efforts.\"\n\n\"Fine! I'll let him go this time,\" replied the larger man as he released his hold on the younger man's shirt. \"Just stay away from my car from now on.\"\n\nOnce the irate player drove his car from the parking lot, the kid found his voice. \"Thanks, Mr. Hammer! That dude thought he was tough, until you came along, but he didn't want any part of what you bring to the party.\"\n\n\"Are you being paid to pass out these flyers?\" asked Steve as he changed the subject.\n\n\"No, they're for my Uncle Carl's restaurant. Mom made these up last night to try to drum up business for her brother. His place isn't doing too well so far.\"\n\n\"Your uncle runs an Italian restaurant?\" quizzed Steve. \n\n\"Yeah. It's funny isn't it? A black man owning an Italian restaurant. He met a real nice Italian girl named Anna when he was stationed in Italy with NATO. They got married, and he left the service a few years ago. They've just opened a restaurant in Washington, but there's a lot of competition, and they're struggling. If things don't pick up pretty soon, Mom says they'll have to go out of business,\" offered the younger man. \"My name's Jim, by the way.\"\n\n\"You're doing a good thing trying to help out your uncle,\" observed Steve as he read the flyer. \"If you can spare a few of these, I'll see that some of my friends get them. Maybe we'll stop in now and then, especially if the food's good.\"\n\n\"Mr. Hammer, that would be awesome! Customers like you and your beautiful lady friends would really help the business!\" predicted Jim with enthusiasm.\n\nIt happened that Gwen was scheduled to work at the hospital where she was doing her residency the following night, so Steve asked Jared if he'd care to try a new restaurant after practice.\n\n\"Sure, but I'll want to bring Naomi. I already promised I'd take her out to dinner, so this would work out nicely for me,\" was Jared's reply.\n\nWhen Steve entered 'Anna's Place', he immediately noticed how quiet the restaurant was. There were only a few tables in use, but the other patrons recognized Steve even before the attractive young hostess warmly greeted him.\n\n\"Just one this evening, Sir? Would you like a table, or would you prefer to sit at the bar?\"\n\n\"There will be three of us, so a table would be appreciated,\" replied Steve as he smiled at the hostess. \"The owner's nephew told me about the food here, and I thought I'd give it a try.\" \n\n\"Jim really wasn't making that story up! I'm his cousin, Karen. Welcome to Anna's Place,\" gushed the excited girl. \"I can't wait to tell Uncle Carl that Steve Hammer is eating in his restaurant!\"\n\nJared and Naomi arrived a couple of minutes later. Just as they were seated, a tall black man wearing an apron came out of the kitchen and approached their table. \"I'm Carl Dobish. Along with the bank, my wife and I own this restaurant. We hope you enjoy your meal tonight and come back often.\"\n\nSteve had watched the way the man walked across the room, and quickly determined he'd been in the military. He had the bearing and demeanor of an officer. Steve liked the man immediately. \n\n\"Thank you, Sir. Your nephew, Jim, promised I wouldn't be disappointed, so I took a chance and invited Jared and Naomi here to join me tonight. My wife is working, but I'm sure she'll want to dine here when she has a night off.\"\n\n\"Would it be possible to take a photograph the three of you?\" asked Carl. \"I'd like to start a wall with pictures of famous patrons, and there's no one I'd rather have in my first picture.\"",
        "Naomi, Jared and Steve graciously agreed to the request. Steve noticed that the few diners in attendance had their phones out and were taking pictures and videos as well. Within a few minutes, groups of people were walking in the door and being escorted to empty tables. It was obvious that the existing patrons had texted or phoned them so they could come and see Naomi, Jared and Steve. As soon as the new dinner guests were seated, they too had their phones and cameras trained on the famous trio.\n\nCarl returned to their table as they were being served their entrees. \"Mr. Hammer, if the other guests are bothering you with their cameras and phones, I can find a more secluded section for you. I apologize for any inconvenience you may be experiencing.\" \n\n\"I think we can handle it,\" replied Naomi before Steve could respond. \"The food is excellent, and everyone's being pretty respectful. We'll be fine where we are.\"\n\n\"Thank you so much,\" beamed the relieved owner. \"Business has picked up in just the few minutes you've been here. Your dinners are on the house tonight.\"\n\n\"Sir, I appreciate your kindness, but we always pay for our meals,\" countered Steve. \"We'll be much more likely to return that way.\"\n\nThere was a small stage against one wall with an old piano sitting on it. While not overly large, it appeared the restaurant could be utilized for small parties. Once Steve and his friends had finished their meals and paid the tab, Steve walked over to the piano and sat down.\n\nConversation stopped, and the room became eerily quiet. Steve smiled to those watching him. Then he began playing the piano. After a few bars, he started singing 'I Can't Help Falling in Love with You', and the diners once again had their phones and cameras out to record the performance. Steve continued to play and sing for over an hour. By the time he thanked everyone for coming and announced he was finished for the evening, the restaurant was packed. Carl had called in his nephew Jim to help bus the tables, as the staff had become extremely busy. \n\nAs Steve was preparing to leave with Jared and Naomi, who had spent much of the evening signing autographs, Carl led an attractive and very pregnant Italian woman over to meet him. \n\n\"Steve, this is my wife, Anna. She still does most of the food preparation. We use only her recipes,\" stated her husband proudly. \"She insisted on meeting the three of you. She's a huge fan of your movies.\"\n\n\"I watched you on TV when you fought that awful Butcher to rescue Gwen,\" revealed the woman, once she'd given Steve a big hug. \"That's how a man should care for his woman. I only hope that men around the world took notice of how a real man treats his lady.\n\n\"Your presence here tonight was a shot in the arm for our business. We cannot thank you enough. Not many famous athletes, or actors, would take the time to help a struggling business.\"\n\n\"You just keep making that great food, and people will be flocking to your door,\" predicted Steve with a smile. \"I hope to bring Gwen here for dinner when she has some free time. I think you'll like her.\"\n\n\"You think?\" laughed Anna. \"She's only the most beautiful, successful woman in the world. I just hope Carl doesn't make a fool of himself. He's one of her biggest fans.\"\n\nIt was three nights later when Gwen and Steve walked into the restaurant to be greeted by the same lovely young hostess. \n\n\"We have reservations for four. The name is Hammer,\" began Gwen before the hostess interrupted her.\n\n\"Don't worry, I know who you are! Everyone does! We have your table ready. I'll take you there and then I have to get Anna. She told me to let her know as soon as you came in.\"\n\n\"Things look a little busier tonight,\" observed Steve.\n\n\"We've been doing much better since you were kind enough to dine here. Just being known as a place Steve Hammer likes to eat has been a huge help,\" pointed out the hostess. \"People are finding out how good the food is here, plus they keep hoping to see you. Look how everyone is already taking pictures of you tonight.\"\n\nAnna Dobish arrived at their table less than a minute later. She carried a small plate of appetizers which she placed on the table before giving Steve a warm hug. Then she turned to Gwen and curtsied.\n\n\"Gwen, this is Anna Dobish,\" introduced Steve. \"Anna, this is my wife, Gwen.\"\n\n\"It is an honor to meet you, Mrs. Hammer! I have seen all your movies and have all your music. I watched your wedding on TV, and I cried through most of it. It was beautiful!\" babbled Anna.\n\n\"Please call me Gwen,\" managed Gwen just before she heard several gasps from the other diners. \n\n\"It sounds like Jordan and Charlie have arrived. Please stay and meet them,\" insisted Gwen when Anna began to leave. Soon Jordan and Gwen were chatting with Anna like they were long-lost friends. Finally, Anna excused herself to return to the kitchen.\n\nThe restaurant was filled to capacity by the time the friends finished their meal. Jordan and Gwen couldn't praise the quality of the food and the service enough. Carl visited their table once they finished dessert and was delighted with the praise offered by these two beautiful and famous women.\n\n\"I could be wrong, but it looks like everyone is waiting for something,\" observed Charlie. \"Could it be they're hoping Steve will sing again?\"\n\n\"Everyone's heard him wail already. It's about time Gwen and I gave these folks something easier on the ear,\" joked Jordan. \"Let's go do a few songs. I think these people are fans, and they're hoping we'll play something for them.\"\n\nSteve and Charlie sat back as Jordan played the piano and joined with Gwen in entertaining the room for over an hour. The tables and bar became filled to capacity, and Carl was forced to turn some eager fans away.\n\nCharlie had been studying the layout as he and Steve listened to their ladies singing. \"There's an empty building that shares a wall with this restaurant. These people should buy it and expand into it.\"\n\n\"As I understand it, they're still struggling to get on their feet,\" replied Steve. \"I'm pretty sure they won't be able to afford it anytime soon.\"\n\n\"Then maybe we should look into buying it as an investment. This restaurant's going to take off, and the property next door will increase its value. We could lease it to Carl, so he could expand his business. He'll need the room, especially if Gwen and Jordan stop in to sing now and then. With great food and some pretty good entertainment, this place is going to do very well,\" surmised Charlie. \n\nLady in Red Productions negotiated for the purchase of the building adjoining the restaurant a few days later, and proceeded to completely remodel it. Carl and Anna had been flabbergasted when Jordan and Gwen approached them about leasing the newly reconditioned building. Carl had flatly stated they would never be able to afford it, and it was a waste of time even to think about it. He refused to consider the possibility.\n\n\"Men!\" exclaimed Gwen. \"Anna, come next door with Jordan and me. We'll discuss terms while we show you how great the place looks.\"\n\nAn hour later Jordan and Gwen returned with a beaming Anna, who hugged Carl before telling him, \"Jordan and Gwen made me an offer I couldn't refuse, and a horse didn't even need to die. They're our friends and they won't let us fail, so stop worrying. \n\n\"Look how many football players and fans come here now. People stop in all the time hoping to catch Jordan, Gwen, Charlie or Steve singing. It's okay to accept some help from people that love you, and whom you love in return,\" reasoned Anna. \"We've been blessed.\" \n\nAnna's Place became the unofficial Redskins' restaurant before the season was halfway over. Pictures of athletes and other famous customers adorned several walls. Lady in Red had a dedicated wall of photos all to itself. Weddings and other social events were now commonplace and the restaurant thrived.\n\nNow Gwen had returned as President of the United States, as well as the Queen of Peace! As always, her Warrior husband was at her side, facilitating and protecting her in every way possible. \n\nOnce they were finished with their meal, Gwen gave a nod to Jordan. The two famous women stood and walked across the room to step onto a small stage. Jordan sat behind the new baby grand piano, while Gwen stood next to her. Everyone in the restaurant went silent as Jordan began playing one of Gwen's many hits. \n\nFor the next couple of hours, tourists and locals alike were treated to an incredible evening of music as Jordan and Gwen were joined by Charlie and Steve to play old favorites and try out some new material as well. When they finally wrapped up their impromptu performance, the restaurant was being monitored by the fire department to ensure the number of people in the building didn't exceed the legal limit. The sidewalk in front was packed with people hoping to catch sight of the foursome. The crowd had spilled over into the street, which was finally closed off by the police, since they couldn't safely keep it open to vehicular traffic.\n\nGwen and Steve spent the night in the White House, very aware that it could well be the last time they would do so during Gwen's administration. If they ever stayed with Vince and Cindy, they would be relegated to a guest bedroom.\n\nThe next morning was a brilliant, warm late summer day. As impossible as it seemed, more people had arrived in the city for the concert. The streets were so jammed with people that many side streets had to be closed and only police, fire, and official government vehicles were allowed to, very carefully, navigate the crowded main thoroughfares. Two hours before the concert was scheduled to begin, the police and the Secret Service escorted President and Steve Hammer, along with their other band members, to the small trailer set up near the stage. \n\nBy 3 PM, when the show was scheduled to begin, Washington DC was a sea of humanity. There were no vacant spots, no saved spaces, no possible vantage points not already being occupied. The mass of people extended as far as the eye could see in every direction. As the band climbed the steps to the stage, a thunderous roar swept across the entire city. Many people still inside office buildings would later insist they'd felt their building shake, so loud and long was the reception for the President and her fellow performers.\n\nGwen flashed a huge smile and waved with both arms as she strode purposely to the front of the stage. The immediate cessation of sound was unlike anything anyone had ever experienced before. The incredible tumult of moments before made the sudden silence feel far more intense than would normally be the case.\n\nHundreds of thousands of people dropped to a knee and bowed, as Gwen waved to fans in every direction. The huge screens showed Gwen's beautiful smile as she fought back tears.\n\n\"Your Queen asks you all to stand!\" was all Gwen managed to say as she motioned for everyone to take their feet. Her request was heard clearly across the silent masses, as fans began returning to a standing position.\n\nGwen had to wait through a few minutes of adulation before the cheering and applause settled down enough for her to continue. \n\n\"I ask that all of you join me for a minute of silence in memory of the two thousand nine hundred and ninety six innocent victims who died, and the more than six thousand who were injured, both civilians and first responders, because of the terrorist attacks of September 11, 2001. Please also remember all those brave souls who have since been injured or killed in defense of our liberty, and our way of life!\"\n\nThe huge crowd was very respectful as Gwen stood silently with Steve and the other performers for a full minute. Then Gwen and Jordan moved to the front and sang the National Anthem to the receptive crowd. \n\nGwen then announced to the once again roaring crowd, \"Ladies and Gentlemen, please enjoy the final performance of the We Come in Peace, World Tour!\"\n\nNews organizations constantly panned their cameras over the city to give viewers a feeling for the size of the crowd that had descended on Washington, DC. Experienced reporters described how they had never seen anything that could even remotely compare to the sheer volume of people in the nation's capital to see and listen to President Hammer and her fellow performers. \n\nThe mood was festive and there was very little trouble, especially for such an unprecedented crowd. Counter-sided trailers bearing the Lady in Red logo were parked conspicuously here and there on many streets and avenues. Millions of bottles of free water and snacks were passed out. Portable toilets were lined up along streets in every direction. The music was exceptional, and the party carried on into the evening. \n\nWhen Gwen was joined by Jordan and Kathy Perrine to perform 'Hate Myself for Loving You', over a million voices joined in singing to express their pleasure. The three beautiful women gyrated seductively as they sang and danced while Charlie and Steve played their guitars behind them. As it had been in every city on the tour, the song was a huge crowd favorite. Charlie signaled for the group to repeat it immediately, much to the approval of the cheering masses. \n\nBecause it was their last concert and there were so many people in attendance, Lady in Red played long into the evening. Gwen and Steve sang every hit they'd ever recorded. Jordan had released more hits than any other living performer, and she and Charlie sang them all for the huge crowd. Katy Perrine had enjoyed a great deal of success during the previous two years, and she belted out her ballads and love songs for the crowd. She and Steve joined to sing \"The Flight to Rome\", which happened to be the current number one song in the country. Jack Timberline was also well received when he performed his hits. The sun was setting in the nation's capital as the epic final performance of the 'We Come in Peace World Tour' came to an end. It took several more hours for the traffic to resume, as much of the city's sidewalks and streets were clogged as pedestrians worked their way back to their cars, buses, trains, hotels, and homes.\n\nThe internet and news organizations posted dozens of photos of the huge turnout for the performance. The National Park Service reported it was unable to even estimate how many people had been in attendance for the concert, but they felt safe in stating that well over a million and half people had been in Washington for the concert. The numbers totally eclipsed any crowd size ever previously reported for an event of any kind in Washington.\n\nIt was constantly mentioned that 'Queen's Ransom' was a huge blockbuster, easily breaking all previous movie attendance records. It was estimated that it would take in over a billion dollars worldwide on the opening three-day weekend. The reviews were stellar, and the word of mouth was extremely favorable. Many fans reported viewing it two or three times.\n\nGwen, Steve, and their friends and family, were having a late dinner in the White House as they listened to the reports of their record-breaking triumphs on the national networks, as well as on cable news. \n\nIt was humbling to listen to the interviews the stations aired. A couple holding two kids, with the woman dressed in an Air Force uniform, seemed to get the most air time. \n\n\"We have a President who places the welfare of the nation and of the world ahead of personal fame and fortune. The funny thing is, her being that way is exactly what makes her so famous and wealthy. Today's concert, as well as President Hammer's entire world tour, has caused my husband and me to reexamine ourselves, and try to be better parents and citizens.\"\n\n\"I've never been so proud of my president, or my country,\" proclaimed a crusty looking older man. We've always been a country of high standards and ideals, but we sort of lost our way for a while. President Hammer brought us back home.\"\n\nAn interview on a cable news station with a college-aged girl caused more than a few tears. \"I want any daughters I may have to grow up knowing they can become a queen, a successful business woman, a great mother, and President of the United States, all at the same time. President Hammer has made our world a safer, better place. America was so lucky to have had a woman so prepared to lead us through the dark times politicians had created. She's incredible!\"\n\nWhile Vince and Cindy had been with them, everyone had been careful not to mention Steve's belief that Gwen's presidency was about to end. Vince had commented on the House and Senate both meeting in closed sessions, and asked Steve if he was aware of what issues were under debate by Congress. \n\nThe press had determined, and reported, that Gwen had returned from her travels with agreements and treaties she had submitted for Congressional approval. These agreements appeared to be very unpopular on Capitol Hill. Most reporters expected both houses would refuse to approve any of the agreements President Hammer had reached with other nations, simply because she had agreed to them without any input from either chamber.\n\n\"Congress isn't friendly with this administration, as you well know,\" replied Steve to Vince's question. \"Secret meetings seldom result in a win for democracy, but Congress has its own agenda. I'm sure we'll know more by morning. If there's a tie vote you'll be called in, if that's any consolation.\"\n\nVince decided not to press Steve any further and departed for the Number One Observatory Circle with his new bride. He was more interested in enjoying his honeymoon for now, and he decided he'd find out what Congress was meeting about soon enough.\n\nGwen and Steve followed suit soon after Vince left, and retired for the evening. They were both exhausted from the worry and tension created by the threat of impeachment, as well as the effort of performing for such a long time. They made gentle love and quickly fell into an exhausted sleep. \n\nGwen was surprised when she woke up to see Steve was still asleep next to her, and it was almost eight AM! She couldn't remember the last time he'd slept that late. She realized he'd tirelessly worked the previous two months trying to protect, defend and facilitate her appearances, and it all must have finally taken its toll. He must need a vacation more than she did. He'd been beside her every public step of the tour, but he'd also constantly worked behind the scenes to ensure a smoother path for his wife. His eyes opened as she leaned over and kissed him.\n\n\"You've been so generous to me with your time and energy,\" praised Gwen. \"I want you to know that I understand how hard you worked to make our trip a success. You made certain I'd always be on top of any situation I faced. You're the reason I became President, and you're the best thing that's ever happened to me.\" \n\n\"I'm glad to hear it, but would you care to express your gratitude in a more physical manner?\" whispered Steve as he took a nipple into his mouth and teased the nub with his lips and tongue.\n\nIt was almost nine AM before the happy couple strolled in for breakfast at the inelegantly named White House Mess (because it's run by the Navy), holding hands and smiling. The dark looks on the faces of their friends and family quickly erased their happy demeanor.\n\n\"Nero may have fiddled while Rome burned, but he had nothing on you two,\" wisecracked Kate as she pointed toward the large TV screen. \"I went to get you almost an hour ago, but the sounds coming from your room indicated you were 'fiddling around', so I left you alone. But now that you're here, you need to know there's hell to pay this morning!\"\n\nGwen and Steve turned their attention to the television. Amber Stahl was on the air and she was obviously agitated. \"To repeat, the Congress of the United States has just removed President Gwen Anderson Hammer from office through impeachment by the House and conviction by the Senate!",
        "\"In a closed session lasting until four AM, the House voted to impeach President Hammer for accepting emoluments from foreign nations. Proponents claimed that President Hammer was profiting personally from her office because her very successful family business had many international dealings. \n\n\"As ludicrous as that must sound to everyone, it gets worse. At eight o'clock this morning, the United States Senate, by a vote of 82-18, voted to convict President Hammer, thus officially removing her from office, effective immediately!\n\n\"This is the first time in our nation's history that a President has been removed from office by means of impeachment. The procedure is clearly outlined in the Constitution and was apparently followed by both houses of Congress, albeit in secret. The United States may be on the brink of a Constitutional crisis!\" continued Amber.\n\n\"State and local leaders have expressed their outrage in no uncertain terms. The streets of Washington have become impassable as angry citizens are gathering on Capitol Hill and near the White House. As you know, Washington area hotels were filled to capacity this weekend for the 'We Come in Peace World Tour' grand finale. These are fans and admirers of President and Steve Hammer. They are not happy!\n\n\"We have reporters trying to reach members of the Joint Chiefs of Staff. Rumors are circulating that the Military may step in and forcefully return Gwen Hammer to office. Vice President Rosen, a very close friend of both President and Steve Hammer, has not yet issued a comment, although there are recent reports of him being escorted to the White House. He is now tasked with running the government, but he has yet to be sworn in as President. It's unclear how he'll react to this sudden turn of events.\"\n\n\"Wow!\" gasped Gwen as she digested the news she had just heard. \"I thought this would go a lot more smoothly. It never occurred to me that there'd be so much turmoil. What should we do, Steve?\" \n\n\"It appears Vince has just arrived, thank God. We need to speak with him first of all and get this situation settled,\" replied Steve grimly. \"The United States has always prided itself on an orderly transition of power. Just the suggestion of a military coup, not to mention riots in the streets, severely damages our standing in the world community.\"\n\n\"I got here as soon as I could!\" interrupted Vince as he strode into the room with Jordan's mom holding his hand. \"Because of the crowds, I had to summon a helicopter to travel two and a half miles! This is pure bullshit! I'll resign my office before I'm sworn in as President of the United States under these conditions!\"\n\n\"Vince, I understand your feelings, but that would be the worst possible thing you could do,\" countered Steve. \"I saw this coming, but I didn't let on to you and Cindy because I knew you'd react just like this. Your first duty in this situation is to your country. If you resign, chaos will rule the day. Speaker Clune would then assume the Presidency, and we both know that would be disastrous. \n\n\"We need to present a united front. Gwen and I will attend your swearing in ceremony, and congratulate you in front of the world. The transition of power needs to be seamless and transparent.\"\n\n\"Steve and I are fine with this, Vince,\" added Gwen. \"We have some grand plans for Lady in Red and our international efforts. We've been chafing under the constraints of trying to appease a polarized and contentious Congress. We need a vacation, and then some time to see where this Queen of Peace thing will lead. \n\n\"Sticking you with the Presidency is taking horrific advantage of our friendship, but you're the only person we have confidence in to do a great job for the country. Please don't resign. Steve and I will always be available to you if you should ever need us. We love this country as much as you do, and we want it to succeed!\"\n\n\"If that's how you truly feel, I'll do it Gwen, but I'm going to hold you to your promise to be available when I need sound advice or someone to represent the United States in crucial situations,\" replied Vince as he absorbed Steve and Gwen's words. \"You know I only expected to serve as your Vice President and to leave office when you completed your term. I had no ambition to return to the White House, and especially not under these conditions.\"\n\n\"There may not be much left to govern,\" worried Cindy Rosen. \"The short flight here was pretty frightening. There must have been tens of thousands of people jamming the streets, and they all seemed to be shouting. People are extremely angry.\" \n\n\"Uh-oh! Look at the TV! There's a huge mob in front of the Capitol building,\" worried Lisa. \"Amber just said that members of Congress don't dare leave the building. If any doors to the street are opened, even a crack, they don't think the security that's in place can ever keep thousands of people from storming the building. They're trying to get more police there, but the streets are teeming with very angry citizens. Vehicular traffic in the city has come to a complete standstill.\"\n\n\"Steve, I think we need to do everything we can to prevent this from getting even worse,\" stated Gwen calmly as she looked to her husband. \"We need to speak to these crowds and ask them to stand down.\"\n\n\"Should I request a TV crew to come in for an interview so you can be seen asking for calm?\" asked Ashley. \"I'm sure they'd be happy to help.\"\n\n\"No, that won't work with a crowd like this,\" replied Gwen calmly. \"I caused this mess, and I need to fix it. I'm going out there.\"\n\n\"That's crazy!\" gasped Paula. \"It isn't safe. Steve won't allow it!\"\n\n\"Gwen's right,\" disagreed Steve as he took Gwen's hand. \"The only person on the planet who can stop this is Gwen. I don't think it would be a good idea for even the Secret Service to go with us. They'd be in danger, plus their guns could be taken from them. We need to do this by ourselves.\"\n\n\"You need to do this with me,\" insisted Vince Rosen. \"I won't be hiding behind the curtains while you two risk your lives! I'm going with you. Cindy, you stay here with Jordan.\" \n\n\"Like Hell!\" snapped Cindy Rosen. \"I may not be considered the best First Lady material, but I refuse to be known as a chicken-shit First Lady. I go wherever my husband goes.\"\n\n\"I think we agree that Vince and Mom should go with us,\" stated Jordan as she looked around the room, daring anyone to defy her inviting herself and Charlie along.\n\n\"Kate and I wouldn't miss this for the world!\" Chip offered with a short chuckle. \"The family that faces angry mobs together, stays together.\"\n\n\"Mom, please take care of the kids for us,\" requested Lisa as she took Jason's hand. \"Gwen and Steve need our support, and we won't let them down.\"\n\n\"Aw, crap!\" muttered Jared as he took Naomi's hand in his and headed for the hallway leading to the exit. \"They wouldn't do anything rash to one of the guys who helped bring a Super Bowl trophy to town, would they?\"\n\n\"Okay, we have all the support we need. The rest of you stay here and wait,\" insisted Steve before anyone else could volunteer to join them. \"We need people we can trust to care for all the kids if we get into any serious trouble. I think we can avoid disaster, but an angry mob seldom has a conscience.\"\n\nThe Secret Service refused to allow Gwen and Vince to venture outside at all, never mind without them, but Steve took them aside and reasoned with them quietly. It was a grim collection of agents that watched the former President of the United States join the current President in walking out to brave riot conditions, and with no protection! Steve had explained the alternatives and the possible worst-case scenario if nothing was done. Reluctantly, and against all regulations, the agents stood down.\n\nPaula and the rest of those remaining behind were glued to the television as Gwen and Steve led their friends across the North Lawn of the White House. \n\n\"We see some movement from the White House,\" declared Amber Stahl, with amazement clearly evident in her voice. \"Gwen and Steve Hammer, along with President and Mrs. Rosen, and eight family members and close friends, are walking directly towards the angry protestors crowding Pennsylvania Avenue! They appear to be intent on facing the huge crowd with no sign of the Secret Service anywhere around. They have absolutely no security! This is beyond belief!\"\n\nViewers across the nation were riveted to their televisions. The woman who had been President of the United States until a few short hours ago was fearlessly striding out to confront the protestors! How would the angry mob react when they discovered Gwen Hammer was approaching them?\n\nA worried guard at first refused, but then nervously opened the gate to the sidewalk at Gwen's direction and stepped aside as she led her group onto the crowded street. Lisa clutched Jason's hand as tightly as she could as she heard the chanting and curses of the anger-fueled crowd. \n\n\"Quiet!\" shouted a deep authoritative male voice. \"Our Queen has arrived!\" \n\nThe voice was heard by dozens of the people closest to Gwen, and they immediately went silent and dropped to a knee. There was a domino effect as others turned to see what was happening, only to find President Hammer, their Queen of Peace, walking among them. They began taking a knee as soon as they recognized her. \n\nGwen held Steve's hand tightly as she smiled and waved with her free hand as people continued to take a knee in respect. It looked like a human wave at a football game, as people standing behind those who had just gone to a knee realized why they had done so and quickly joined them. Gwen led Steve forward into the kneeling crowd and began working her way along Pennsylvania Avenue toward Constitution Avenue. \n\nA path began to appear in front of Gwen as she and her entourage walked slowly while scanning the crowd, seeming to look each person in the eye as she passed. \"My Queen!\" was quietly uttered by many of those kneeling as Gwen moved past them. She began reaching out and gently touching the shoulders and heads of those nearest her. Vince Rosen and Cindy followed Gwen's lead as they too nodded, smiled, and softly touched random people in the crowd. Jordan and Charlie were right behind Jordan's mom and stepfather. Jordan flashed a huge smile as she quietly greeted people as if they were long-lost friends. She had long ago learned how to work a crowd; Gwen Hammer was the only person on earth better at making friends and getting strangers to love her. Kate, Lisa and Naomi quickly realized how effective Gwen and Jordan were being, so they also began following their example. They smiled, nodded, touched and quietly thanked the crowd as they followed behind the others.\n\n\"Washington has never before seen anything like this!\" managed Amber once she remembered to breathe. \"Gwen Hammer is peacefully walking through what only a few minutes ago was an angry and unruly mob. People, who a moment ago were shouting abuse, are falling silent and kneeling out of respect for their Queen! Can there possibly be any doubt she's the most loved and respected woman in the world? With the obvious exception of those still skulking within the halls of the Congress, Gwen Hammer has the admiration and love of this entire nation.\n\n\"Her commanding presence has turned an angry mob into what appears to be huge gathering of her ardent supporters. She somehow realized her appearance was required to placate and calm the irate crowd.\"\n\nCameras zoomed in to show tears trickling down the cheeks of many of those fortunate enough to be touched by Gwen as she passed. Grown men were wiping their eyes after Gwen had simply placed a gentle hand on their shoulder. \n\nA weeping woman handed an infant to Gwen. She released Steve's hand and held the innocent baby up for the crowd to see before kissing its cheek and returning it to its mother, who was still overcome with emotion. \n\nFifteen minutes into the walk, Gwen came upon a woman with a child about her daughter Vickie's age in a wheelchair. Gwen stopped and knelt in front of the little girl and took her hands into her own before chatting briefly with her. Gwen kissed the girl's hands and then her cheek, before standing to resume her trek. Tears flowed freely through the entire crowd as emotions bubbled to the surface.\n\nThe anger and frustration that had gripped the frenzied mob had rapidly morphed into pride and adulation. This was the person who had been so cruelly and unfairly removed from office by Congress. She remained serene as she smiled and interacted with the people she met along her route. She walked among her subjects modestly and with humility. Gwen Hammer's legend grew with every step.\n\nCindy Rosen had been petrified when she stepped into the angry mob with her husband, but she was determined to remain by his side as he faced whatever was to come, as a good wife should. She was weeping quietly as she realized the power and respect Gwen inspired. Cindy briefly considered the wasted years of her own life squandered in seeking personal pleasures. Gwen was a woman she needed to emulate! Even though Cindy had turned her life around years before, this was another true epiphany! \n\nShe glanced back to see Jordan serenely interacting with the people along the way, and her heart was filled with pride. Jordan had known for years why Gwen was so special, and she had the very same qualities! She was loved and admired because she gave so freely of her talent and her love. People sensed that she truly loved them, and she would do all she could to make their lives better Thus, they responded to her. Her daughter was incredible! \n\nTyler had received a text from Steve, and he immediately gathered the Lady in Red crew and instructed them to prepare the stage that had been used for the concert the previous day. Steve wanted the sound system as well as all the Jumbotrons working by the time he and Gwen reached the stage on the National Mall. \n\nAs Gwen and Steve, along with their small group, finally ascended the stage which had previously been erected on the Mall, people were kneeling as far as the eye could see! \n\nGwen smiled her appreciation to one of her crew as he handed her a microphone before she whispered into his ear. The man nodded and went to the side of the stage, then returned with another microphone, which he handed to a surprised Jordan.\n\nShe turned questioningly to Gwen, who quietly spoke a few words to her. Jordan's smile beamed across the huge screens as she nodded to Gwen and took her hand. The two women walked to the front of the stage, where Gwen spoke to the silent crowd. \n\n\"Your Queen requests that you all stand and face one of the many American flags that can be seen from wherever you're standing. Your Queen also asks everyone to remember what a wonderful country this is and why we all love it so dearly, as Jordan and I sing our National Anthem!\" \n\nAmber went quiet in the broadcast booth as Gwen and Jordan delivered a rousing rendition of the Star Spangled Banner. The crowd began cheering before they'd finished singing, and was roaring by the time the duo bowed to the huge gathering.\n\nJordan backed away a short distance as Gwen surveyed the cheering crowd and waved to them. She then gestured for silence and waited for the mass of humanity to quiet down before speaking.\n\n\"First of all, I need to thank you from the bottom of my heart for your love and support. However, I want you all to understand one thing. Steve and I will never betray our oaths to protect and defend the Constitution of the United States! We love our country! Congress has the Constitutional authority to impeach and convict a President it deems guilty of treason, bribery, or high crimes and misdemeanors. Again, Steve and I support the Constitution of the United States. This does not mean that Congress was correct, but it does mean it has that Constitutional power and we are honor-bound to accept their decision. I'm not standing here to lobby for myself. I fully accept that I am no longer your President,\" stated Gwen before a long round of jeers and booing echoed across the National Mall.\n\n\"Again, thank you so much for your support,\" beamed Gwen. \"But I'm here to ask all of you to accept the actions taken by Congress and to participate peacefully in an orderly transfer of power. Our very good friend Vince Rosen will be sworn in as our next President, and it would mean a great deal to Steve and me if you joined us in congratulating him and wishing him a healthy and successful term.\n\n\"We want you to know that Vince had nothing to do with Congress' devious impeachment proceedings. He and Cindy were as astonished this morning as you were! And we want Vince to succeed! Steve and I have pledged our total support and assistance to him any time he may require it. We all know how Steve and Naomi negotiated the United States away from the brink of a world war. Steve will still be available if his country calls, as will I,\" promised Gwen. \"Vince is our trusted personal friend and as I stated before, we love this country!\"\n\nSteve had been involved in a quick huddle with Charlie and Vince as Gwen was speaking. He called Tyler over and spoke to him briefly before asking Jordan for her microphone. As Gwen finished speaking, he moved to the front of the stage and acknowledged the crowd's warm greeting.\n\n\"If you would be so kind as to give me your attention, I have several points to make,\" began Steve as the crowd became quiet. \"Gwen is not going quietly into the night! She's our Queen and she'll continue serving in that capacity around the world! As President of the United States, she was restricted by the demands and obstructions of a hostile Congress. Now that she has been so blessedly relieved of that burden, Gwen will concentrate on helping people around the world. That's the mission of Lady in Red. Gwen is the Lady in Red, as well as the Queen of Peace!\"\n\nSteve waved and pointed to acknowledge the presence of various people as he waited for the cheering to subside. \"To that end, we're going to have a party here today to celebrate Vince Rosen's marriage, his swearing in as President of the United States, and Gwen's ascension as The Queen of Peace!\n\n\"At two o'clock, Vince Rosen will be sworn in right here as the next President of the United States. Immediately following that, we'll have a brief ceremony acknowledging my beautiful wife, Gwen Hammer, our Lady in Red, as she accepts the title of Queen of Peace. If anyone doesn't feel she deserves the honor, you're free to leave. Those of you who want to support her coronation with your presence will need to be here at two!\"\n\nSteve once again had to wait for the cheering and applause to subside. \"To get the party going right, Charlie and Jordan have agreed to gather as many of our band members as they can, so we'll be able to perform another concert this afternoon. Yesterday, we concluded the 'We Come in Peace World Tour'. This afternoon, we'll perform 'The Queen's Ransom' concert. Congress has freed Gwen from the shackles of the Presidency, but we citizens will pay the price for their foolish decision. All Americans, willing or not, will in fact be required to pay 'The Queen's Ransom' through our taxes, so be here and get your money's worth! Lady in Red will supply snacks, water, sodas and hopefully, some real food, all for free!\" \n\nSteve once again waved and grinned as the huge crowd whooped and yelled approval. \"There's one more thing I want to cover. I've always tried to avoid politics, thinking we should remain above the fray. I see now just how wrong I was. From this moment forward, Lady in Red is going to actively participate in political discourse on a wide variety of subjects.\n\n\"Many of you are angry at members of Congress for their cowardly actions, but it's all on me, and it's all on each of you. It's on your friends and neighbors. Collectively, we've continued returning short-sighted, self-serving and selfish people to represent us in the House and Senate, mostly because it would have taken too much trouble to change. If you're pissed at the way things were handled early this morning, focus that anger when you go to your polling places next election!\" yelled Steve to the raucous crowd.",
        "\"I'll be actively working to remove many current members of Congress from office, and I ask that you join me. Lady in Red will support and promote qualified, honest, honorable people for public office. We will encourage the formation of a third political party with ideals steeped in the values that have served America so well in the past. We'll form committees to evaluate each candidate for Federal office and offer recommendations to the voting public, and those committees will be demanding informative answers to tough questions. It will no longer be business as usual in Washington!\"\n\nThe roar of approval echoed across Washington as soon as Steve finished speaking. He had struck a chord with the American voter! Everyone always talked about changing the climate in Washington, but nothing was ever done. Those listening to Steve had only to hear the determination in his voice and the ferocity in his eyes to know a new day was coming.\n\n\"One final thing, if I may,\" managed Steve once he'd convinced the crowd once again to simmer down and listen. \"I am serving notice right here, right now, that I'll do everything in my power to prevent Senator Lancer from being elected to any position, ever again! He chose to make this personal when he attacked Gwen's character and even questioned her sanity. Now it's very personal. The gloves are off!\" \n\nStunned silence followed Steve's declaration before applause and cheers began slowly, then built to a crescendo. Never before had Steve Hammer singled out a politician so pointedly. His dislike for Senator Lancer had already been well known, but he had just declared his intentions very publicly. The gauntlet had been thrown down! \n\n\"Ladies and Gentlemen, we've just heard former First Husband Steve Hammer state how life in Washington will change going forward,\" reported Amber Stahl to her millions of viewers as the cameras switched to show her sitting in the studio. \"This has been a day of historical firsts. Gwen Hammer has become the first United States President to be removed from office by the impeachment process. \n\n\"In so doing, Congress has unleashed the considerable wrath of her husband, Steve Hammer. This couple has been in the public eye for almost eighteen years. Nothing they have ever done should have led Congress to believe that Steve Hammer would allow this affront to go unanswered. He has pretty much declared political war on almost all the incumbents in the House and Senate. This all occurred after he and his wife walked unarmed, with no security, into an angry crowd to preserve peace and probably to prevent bloodshed on the streets of the city and perhaps even in the halls of, Capitol Hill. \n\n\"The unruly mob behavior of o nly an hour or so ago has somehow been transformed by Gwen and Steve Hammer into a celebration. They announced they will be onstage to support President Rosen when he is sworn in as President of the United States. Some sort of ceremony is planned to install Gwen Hammer as the Queen of Peace that so many people around the world consider her to be. Lady in Red will perform yet another concert on the National Mall to commemorate the occasion. \n\n\"In the wee hours of this morning, Congress moved to remove Gwen Hammer from the Presidency. Many observers feel this action was motivated by fear of the power and influence that Gwen and Steve Hammer enjoy from the citizens of this country. It's believed that Congress disapproved of how that power only increased during her time in office. It is an opinion held by many that her popularity was the reason Gwen Hammer was removed from office, rather than because of any concern about so-called emoluments, as both houses claimed. \n\n\"What Congress has created is far different from anything its members might have expected. This very morning, Gwen and Steve Hammer walked into a huge, angry mob on the streets of our Nation's Capital and took absolute control of the situation! While members of both houses cowered in hallways and offices in fear for their safety, Gwen and Steve Hammer boldly left all protection behind, and seized the moment,\" reported Amber with strong emotion.\n\n\"We have Secretary of Defense Chatham here with us to share her thoughts on today's incredible events,\" introduced Amber. \"Madam Secretary, will you give us your thoughts on this highly unusual political development?\"\n\n\"I think it's quite clear what's happened. We've just seen the United States Congress try, and fail miserably in its attempt, to curb the power and influence of Gwen and Steve Hammer,\" declared the Secretary. \"As you more or less just pointed out, Amber, this city belongs to the Hammers. They have the love and support of the people of Washington, of the United States, and of the world. \n\n\"By removing Gwen from office, Congress has cut Steve Hammer loose, which will surely prove to be the undoing of many of its members. There is no force on earth that will prevent him from defending Gwen, and in the process destroying more than a few political careers. And it appears that Senator Lancer has drawn his ire more than any other political figure.\" \n\n\"Do you think Steve Hammer will be able to bring down Senator Lancer?\" asked Amber. \"Lancer's already formed an exploratory committee as a formality before declaring for the Presidency. He's also built a rather sizable war chest for the primaries and the general election.\"\n\n\"If you're asking whether I'd put my money on Steve Hammer or Senator Lancer, I'll take Steve every time. I'll even give odds,\" replied Secretary Chatham dryly. \"Lancer may as well apply for his pension. His career will not only end badly, but any legacy he had hoped to leave will soon be destroyed. Steve acts within the law, but he takes no prisoners. He truly believes his primary role in this world is to protect his wife and children. He feels Senator Lancer stepped over the line. Once Gwen was removed from her responsibilities and obligations as President of the United States, Steve's path became clear.\n\n\"We know the Constitution doesn't allow Vince Rosen to run for President once his current term is over. A four-year term after he serves the remaining three years of his current term would place him over the ten-year limit he's allowed to serve as President of the United States,\" stated Amber. \"That would indicate the field will be wide open in three years. Do you see any front runners at this time, if you don't believe Senator Lancer can withstand the wrath of Steve Hammer?\"\n\n\"The irony of the situation hasn't escaped me,\" replied Chatham as she considered the question. \"Members of Congress removed Gwen from the presidency out of fear of her increasing power and influence. I think that very move will prove to solidify Gwen's position as the most powerful and influential person in the world, not just in the United States.\n\n\"It appears very clear to me that the front runner for the presidency will be whomever Steve Hammer decides it should be. There can be no road to the presidency that doesn't pass through Steve Hammer. He's avoided politics as much as possible in the past, but he's a brilliant tactician, and he's as mentally and physically tough as any person on the planet. He also has unlimited financial resources. \n\n\"He's going to dismantle the Washington political machines and create an atmosphere which encourages healthy debate among men and women who have the nation's best interests at heart. The days of personal and party agendas deciding policy will come to an end,\" predicted Secretary Chatham.\n\n\"That would certainly be quite a change,\" agreed Amber. \"But back to my question. If you had to pick the next President of the United States today, who do you believe has the best chance to be elected in three years?\"\n\n\"Honestly? At this moment in history, I can see only one possible outcome in the next presidential election. This nation has the luxury of having already seen how she can govern and how well she and her advisors combine patriotism with international diplomacy and worldwide respect. Unless she forbids it, Gwen Hammer will be drafted by the populace and elected as President in an historic landslide,\" predicted Chatham confidently. \n\n\"You're telling us that voters will return President Hammer to the White House in three years, even though she is the first United States President ever to have been removed from office through impeachment?\" asked a very surprised Amber Stahl. \"Wouldn't it seem possible, or even likely, that she would again be impeached and convicted by a fearful Congress?\"\n\n\"That won't happen,\" replied Secretary Chatham with a small chuckle. \"I've already told you that Gwen's husband is going to reshape the face of Congress. Next fall, every seat in the House of Representatives will be up for election. A third of the Senate will be in that same boat. In three years, during the next presidential election, another third of the Senate and the entire House will again face the electorate. That gives Steve Hammer time to replace two-thirds of the Senate and all of the current members of the House, if he so chooses. You may rest assured that new members of Congress will look far more kindly upon President Gwen Hammer's efforts to govern the United States.\"\n\n\"What about the whole 'Queen' thing?\" wondered Amber. \"Gwen's going to accept the title and proceed to serve as Queen to millions of people. Would that disqualify her from holding the office?\"\n\n\"I'm not a Constitutional scholar, but I've never heard of any provisions barring candidates because they're too popular, or because they're loved and respected too much,\" replied Secretary Chatham wryly. \n\nThe events of the day had pushed Congress into complete disarray. At dawn, Senators and Congressmen had watched in fear as a very angry mob had surrounded the Capitol Building. While they had anticipated some negative reactions to their decision to remove President Hammer from office, they had believed the vast majority of the voting public would see the wisdom behind the decision. \n\nThe United States had always been a Constitutional Federal Republic, but early that morning most members of Congress had agreed that Gwen Hammer's influence was exceeding what the Constitution intended for a President of the United States. They felt it had become necessary to terminate the upward spiral of power she was enjoying, before she gained absolute control and destroyed the Constitution and all it represented. \n\nBut immediately following the public announcement of their actions, there was chaos! As the size and anger of the street mob increased, so did their concern for their own safety. Broadcasts from all the major networks discussed the removal of President Hammer and the ramifications of that course of action. It seemed like the more it played on television, the larger and angrier the mob became.\n\n\"There's talk on the networks that the military might restore Gwen Hammer to the Presidency!\" worried Senator Dawson. \"An action like that would render the Constitution worthless, along with both Houses of Congress. We need to contact the Joint Chiefs and see where they stand on this.\" \n\n\"The sooner Vince Rosen is sworn in as President of the United States the better,\" insisted Senator Burke. \"Technically, he's already the President, but the people need to see him sworn in and taking command!\" \n\n\"Check this out!\" yelled a congressional aid as he pointed at a large TV screen. \"The Hammers and the Rosens are leaving the White House on foot to confront the mob! Together! It doesn't look like they even have any security with them. Can you believe this?\"\n\nIn a very rare occurrence, all conversation came to a halt in the Capitol Building as everyone gathered around various monitors to watch the drama unfold. Many legislators found themselves holding their breath as the Hammers and Rosens were recognized by the mob.\n\n\"Christ!\" exclaimed New Mexico's junior senator as people began to kneel. \"They're actually kneeling down to her! If the Hammers can control that mob, things may get very ugly for us.\"\n\n\"You don't know what the hell you're talking about,\" rebuked Senator Roberts. \"She'll use her influence to calm the crowd and prevent any bloodshed or property damage. You're seeing exactly why I voted against convicting her.\"\n\n\"You're seeing exactly why we had to remove her,\" countered Senator Lancer. \"Even without the Office of the President, she's able to control and manipulate thousands of people at a time. We had to separate that threat from any position of power in the Federal government. The President needs to be grounded in reality. Quite frankly, I think this whole 'Queen' bullshit has gone to her head. She wasn't stable enough to carry on as President.\"\n\nReporters stationed in the halls of the Capitol Building recorded the exchange by the senators and reported it, along with appropriate bleeps. Lancer was soon shown arguing his concerns about Gwen's mental stability.\n\nAs Gwen and her party made its way to the National Mall and the stage, members of Congress began to relax. The mob that had surrounded Capitol Hill gradually lost its anger and drifted toward the stage.\n\nOnce the immediate threat was removed, Senators and Representatives started congratulating each other on their performance of the early hours. The dust would soon settle, and everything would once again go back to how it used to be. They had worked with Vince Rosen before, and were confident he would be much easier to influence than Gwen Hammer had been.\n\nThe euphoria members of Congress were experiencing was tempered somewhat by the remarks Gwen Hammer made to the crowd. They were delighted to hear her admit that Congress had acted within its power and that she accepted no longer being the President. She and her husband were even going to be on hand for Vince Rosen's swearing in! \n\nThen Steve Hammer addressed the crowd. As he spoke, murmurs of concern could be heard in the halls of Capitol Hill. When Steve told the crowd he would use his influence and considerable resources to replace many members of Congress, there was no doubt he was referring to those who'd just voted against Gwen Hammer!\n\nEven the representatives and senators that had been in office for decades and had no substantial opposition for re-election felt concerned as Steve Hammer promised to lead Lady in Red into the political arena with the objective of removing them from office.\n\nAll eyes turned to Senator Lancer when Steve mentioned him specifically as the person he most wanted to ruin politically. Lancer turned red and huffed a few times.\n\n\"That bastard thinks he can meddle in Presidential elections?\" snarled Lancer. \"If we have to, Congress can address his intentions with some sort of law to prevent extremely wealthy people from spending their money to influence the voters.\"\n\n\"Lots of luck with that,\" replied Senator Roberts with a grim chuckle. \"You've already built up a substantial war chest so you could buy the election. How are you going to spend your own money, yet stop Hammer from doing the same?\"\n\n\"Mine was raised legally from donations,\" insisted Lancer. \"That's a lot different than just being so rich you can buy enough votes to win an election.\"\n\n\"There's no law you'll be able to shove through Congress that won't be obvious as hell. You'll be announcing to the world how you intend to prevent Steve Hammer from exercising his constitutional rights. Besides, he won't have to spend any money to beat your ass! He can just use all the media outlets at his disposal to destroy you without spending a dime,\" pointed out Senator Roberts.\n\n\"Some of you so-called ladies and gentlemen are just beginning to realize what I warned you about. Steve Hammer is emerging from this debacle mad as hell! That anger is going to be directed at those of us that voted against his wife. I'm very glad the record clearly shows I voted against conviction. I just hope it's enough to have him pass me over when he drops a major shit storm on Capitol Hill!\" \n\nAbout that time, Amber's interview with Secretary Chatham was being broadcast, and the Secretary's comments caught everyone's attention. \"If you're asking whether I'd put my money on Steve Hammer or Senator Lancer, I'll take Steve every time. I'll even give odds. Lancer may as well apply for his pension. His career will not only end badly, but any legacy he had hoped to leave will soon be destroyed.\"\n\n\"There can be no road to the presidency that doesn't pass through Steve Hammer,\" was another observation that caused consternation as Lancer turned and stomped off toward his office, but not before hearing Chatham's next statement.\n\n\"At this moment in history, I can see only one possible outcome in the next presidential election. This nation has the luxury of having already seen how she can govern and how well she and her advisors combine patriotism with international diplomacy and worldwide respect. Unless she forbids it, Gwen Hammer will be drafted by the populace and elected in an historic landslide!\"\n\n\"Jesus! She just might be right!\" exclaimed Representative McGraw of Maryland. \"What have we done?\"\n\nKathy Perrine met with Jordan and Gwen an hour before Gwen's 'coronation' was to begin. \"Guys, let me know if I'm asking too much. I was in high school when I watched you host the Academy Awards and perform 'Sharp Dressed Man'. It was the coolest thing I've ever seen. Could we do that song? Could I sing and dance it with you, or is it too risqu\u00e9?\" \n\n\"We already have a backdrop set up, so we'd be somewhat shielded from prying eyes, but Gwen now has to consider her image,\" reminded Jordan. \"We were younger and more daring back then.\"\n\n\"Steve! Charlie!\" called Gwen to the two men as they stood off to the side preparing for the concert.\n\nBy three o'clock, the National Mall was once again packed with a cheering, chanting sea of humanity. Chief Justice Hamilton was onstage to administer the oath of office to Vince Rosen. He solemnly addressed the millions watching on television as well as the incredibly large and well-mannered crowd that was patiently waiting.\n\n\"Ladies and Gentlemen, the first order of business today will be for President Hammer and Mrs. Jordan Burns to perform our National Anthem,\" was all the Chief Justice said, as Gwen and Jordan moved forward on the stage.\n\nThe ovation was loud and long for the two women as they finished the anthem. Chief Justice Hamilton waited for the cheering to abate before addressing Vince Rosen, who placed his left hand on a Bible held by his wife Cindy.\n\nVince completed his oath and Gwen and Jordan hugged him tightly once Cindy concluded her long embrace with her husband. There was a loud cheer from those watching, although not as enthusiastic as it might have been. \n\nJordan then moved forward to address the crowd. \"We all know that Congress has deprived us of the honor of having Gwen Hammer continue as our President. It was a foolish and self-serving effort in an attempt to prevent Gwen from fulfilling her destiny. But there's nothing on God's green earth that Congress, or anyone, can do to prevent our love and respect for this woman to nurture and grow. \n\n\"I was on site in Hungary when she ordered the rescuers to excavate that old church to save Saint, Steve, and a couple dozen other people! In Cuba, I saw her save that baby on the beach of Havana!\"\n\nJordan smiled as a huge ovation echoed across the National Mall. She smiled and pointed to signs proclaiming Gwen as the Queen of Peace. Then her smile increased as she pointed to a large sign being held by several people to her left with bold print declaring \"Our Queen for President!\" The large Jumbotron flashed the image across the Mall, and television cameras picked it up as well. \n\n\"I personally witnessed the honor and respect people around the world have demonstrated for my dear friend Gwen. Every concert featured huge crowds that willingly kneeled before her, unless they were prevented from doing so by a military presence. Gwen is truly the face and the conscience of Lady in Red. She leads by example and the rest of us follow,\" shouted Jordan as the crowd began to make more noise. ",
        "\"Citizens of the World! I present to you The Queen of Peace!\" managed Jordan before the entire Mall erupted into deafening cheers, whistles and applause.\n\nJordan walked over to Lisa, who handed her the same tiara Gwen had worn in 'Queen's Ransom' and the 'Rise' trilogy. Jordan carefully placed it on Gwen's head and secured it with several clips. Once she finished her task, Jordan stepped off to the side, leaving Gwen alone in the center of the stage.\n\nAs if on signal, nearly a million people dropped to a knee and began chanting 'Long live the Queen' as tears poured from Gwen's eyes. Holding her head high, she walked to the front of the stage and gestured for everyone to stand.\n\n\"Your Queen asks that you stand!\" managed Gwen as she wiped at the tears on her cheeks. \"I accept this honor in the names of all people who seek an end to hunger, disease and terrorism! I have no idea how this honor has come to pass, but please know that I am committed to helping as many people of the world as I possibly can. You have bestowed a tremendous honor on me, but it comes with a huge responsibility. I can only promise to do my best!\"\n\nGwen waved and smiled for several minutes as the ovation continued. Then she turned and motioned for Steve to join her. The cheers suddenly became even louder as she wrapped her arms around her husband and kissed him passionately. \n\nGwen then turned to the crowd and waited for the cheering to subside. \"My Warrior husband is the strong one, the compassionate one, the person who has encouraged and protected me every step of this amazing journey! He'll fight for you too, for your freedom, for your honor, and for your families. You may have made me your Queen, but Steve is the very best of us all. Of that I am certain!\"\n\nAmber Stahl was covering the event from a small TV platform near the stage. Viewers were able to see tears trickling down her cheeks as she addressed her audience. \n\n\"Again we're seeing history being made. Gwen Anderson Hammer and her husband Steve have turned what most would have considered a crippling political blow into a rousing victory and celebration. When Capitol Hill created chaos and mob hysteria, Gwen and Steve Hammer seized the situation and molded it to meet their objectives.\n\n\"Secretary Chatham mentioned earlier today that Steve Hammer was a brilliant tactician. Anyone who has seen the manner in which he orchestrated events today would have to agree. He and Gwen turned an enraged mob into a huge pep rally. He had the foresight to legitimize Vince Rosen's presidency by calling for a public swearing in ceremony, a ceremony Gwen and he attended as they offered our new President sincere wishes for success. \n\n\"In a brilliant piece of promotion, Steve Hammer told the world that today's concert was going to be known as 'Queen's Ransom', which dovetails very effectively with the blockbuster movie Lady in Red released around the world Thursday night. From the statistics already in, it will have the largest opening weekend ever, and it appears destined to become the highest grossing film of all time,\" announced Amber. \"Critics are universally praising the film, and Academy Award rumors are already circulating.\n\n\"Every musician who toured with Lady in Red for the 'We Come in Peace World Tour' has returned here today to perform in this 'Queen's Ransom' concert. The National Mall and its surrounding areas look every bit as crowded was they were yesterday. The Park Service will no doubt give us a much better estimate later,\" conceded Amber. \n\nOnce she ended her short speech, Gwen spent time waving to the crowd as she moved across the stage while still wearing her tiara. She couldn't help feeling a bit vain and even foolish wearing a royal tiara in front of so many people, but they enthusiastically approved her every move. Steve had explained that he felt it was important for her to publicly accept her role as Queen. Her unfettered reign would begin the same day she had been removed as President of the United States. Gwen had come to trust Steve implicitly in these matters. He had plans for every contingency, and he always seemed to be right.\n\nCharlie cued the band as the din began to abate. Gwen moved back to center stage and the 'Queen's Ransom' concert was off to a roaring start. Charlie felt it would be a mistake to simply play the same songs for the second day, so he had the band play numerous songs they had rehearsed over the previous weeks but hadn't performed in public.\n\nOnce their signature 'We Will Rock You/We Are the Champions' was concluded, the band moved into Bohemian Rhapsody with Steve singing lead. With all the talented singers in the group, the operatic section of the song sounded extremely impressive, and the fans reacted enthusiastically. Gwen then moved to the front of the stage as the band began its next number. Her audience immediately identified the U2 song and went unusually quiet as they waited for Gwen to pick up the lyrics. Jordan and Kathy Perrine stood just behind Gwen and to each side as they sang back-up. \n\n\"I have climbed the highest mountains; I have run through the fields, only to be with you, only to be with you!\" sang Gwen as a thunderous roar went echoed across the capital, forcing Gwen and the band to circle back and begin again.\n\nThe crowd joined in when Gwen sang \"I have run, I have crawled, I have scaled these city walls only to be with you. But I still haven't found what I'm looking for!\"\n\nCharlie had predicted the song would be well received when he added it to their repertoire, but even he had failed to gauge the emotions Gwen's rendition would evoke. The entire sea of humanity swayed back and forth as they joined Gwen in singing the stirring lyrics. As Gwen took a modest bow, fans whistled, yelled and clapped their approval. \n\nNews clips showed Gwen Hammer's back as she sang while the camera panned over the huge audience, which stretched as far as the camera could focus. Although she was no longer the President, it was obvious she owned the city like no other person ever could. \n\nThe band played some older songs and worked in quite a few they had never performed before an audience. The reception by the hundreds of thousands in attendance and the millions watching on television was spectacular.\n\nIt was after the first intermission that the fans began buzzing. The Jumbotron showed Gwen, Jordan, and Kathy Perrine walk back onstage wearing robes and then sitting down on folding chairs. Charlie and Steve lazily strolled onto the stage to stand near the ladies. They were also wearing robes.\n\n\"Please?\" begged Kathy Perrine into her microphone. \"Can we do 'Sharp Dressed Man' now?\"\n\n\"I don't know if our fans would care to see that old routine,\" replied Jordan, also speaking into her mic. \"Gwen and I haven't done that one in years.\"\n\n\"Maybe that's the problem!\" exclaimed Kathy. \"You two seniors may be getting a bit long in the tooth to shake it up. What about you, Charlie? Steve? Will you do that number with me?\"\n\nAs she spoke, Kathy Perrine stood with her back to the audience and dropped her robe! Charlie and Steve stood rooted in place as they stared at the young beauty, clad only in a small thong. The Jumbotron clearly showed the beautiful young woman's naked back and skimpy garment. The crowd began what seemed like a low growl!\n\nJordan and Gwen jumped to their feet, critically examined their husbands staring at the front of the beautiful Kathy Perrine and then nodded to each other as their robes slid from their shoulders, revealing their own backsides and the small thongs they too were wearing.\n\n\"Too long in the tooth?\" repeated Gwen. \"What about it, Steve? Are we too old?\"\n\n\"Yeah, Charlie, are we too old?\" echoed Jordan.\n\nCharlie and Steve snapped out of their trance simultaneously and shrugged their shoulders, allowing their own robes to fall to the floor as they faced the three topless women and the huge crowd. They wore only boxers, with the Lady in Red logo featured front and center. The two men reached behind their chairs and picked up guitars. \n\nThey moved to the front of the stage and started the driving rhythm of Sharp Dressed Man as the three women swayed enticingly upstage to a low wall that had been set up at the back. Each of them picked up a pair of boy shorts and erotically pulled them up over their hips as the crowd roared. They then grabbed strapless halter tops and reached behind their backs to snap them on. Gwen had trouble fastening hers, so when it came time to face the crowd and sing, she simply held the small garment over her considerable charms with one hand while she joined her friends in singing the opening stanza.\n\nThe crowd reacted with even louder roars and whistles. Jordan, seeing Gwen's predicament, stepped behind her and fastened her top for her. Once the stanza was over, the ladies danced back to pick up only slightly larger garments to cover their bras before singing the next stanza.\n\nThe cameras constantly moved from Steve and Charlie's ripped torsos to the cleavage, beautiful faces and shapely legs of the three women. Fans watched the huge Jumbotrons intently as three of the world's most beautiful women gyrated and swayed to the music. Once the song was over, Steve and Charlie moved seamlessly into ZZ Tops' 'Gimme all Your Lovin', with Kathy Perrine singing lead.\n\nSteve and Charlie managed to slip on some jeans and tee shirts a little later while Kathy Perrine sang one of her older hits. Then Steve joined Kathy to sing their hit song, which had been written by Kathy on their flight to Rome. That was followed by Jordan and Charlie performing the theme song for the Queens's Ransom movie.\n\nWhen Charlie and Jordan finished singing and the applause died down, Gwen pointed to her old friend Heather Thomas, who was standing near the stage as she covered the event for her network.\n\n\"Heather, how would you like to revive your dance routine with Steve?\" asked Gwen of an obviously surprised Heather. \"Come on up and shake that booty!\"\n\nHeather needed no second invitation. She knew the world was watching, and she was being handed the opportunity of a lifetime by Gwen Hammer. Heather was a well-known TV personality, admired for her reporting as well as for her great beauty. As she reached the top step, the crowd began cheering loudly. Steve greeted her with a hug.\n\nCharlie briefly conferred with the band as Gwen embraced Heather once Steve had released her. \"I can't believe I agreed to this! It's been years since we performed this dance. We haven't even practiced it!\"\n\n\"Just trust Steve to take care of you. It's like riding a bike. You'll do great!\" encouraged Gwen as Charlie nodded to signal that the band was ready to play 'Dirty Laundry'. \n\nWith only a couple of minor mistakes that went totally unnoticed by everyone but Heather, Steve and Heather delighted those watching with the same dance routine they had used years ago to win the little dance contest in Charlotte. Steve had often expressed his opinion that maintaining a good relationship with the press was essential to success in business and politics. \n\nKnowing that Heather was at least a little in love with Steve, as well as an up and coming star on her network, Gwen had made the snap decision to feature her in a dance with Steve, who had always referred to gestures of this sort as 'building capital for the future'. She would always strive to remain on good terms with Heather Thomas and Amber Stahl.\n\nKathy Perrine stepped close to Gwen as Steve and Heather took their bows. \"If Steve were my husband, I'd never let him dance with her. She's beautiful, and she's in love with him. You know that, don't you?\"\n\n\"He wouldn't be your husband very long if you didn't trust him completely,\" responded Gwen with a grin. \"Maybe I shouldn't let him dance with you, if it's dangerous to let women who love him get too close.\"\n\n\"Oh, Gwen! I'm so sorry!\" apologized the horrified Kathy. \"Is it that obvious? I'd never try to take him away from you!\"\n\n\"Don't worry about it. He got an eyeful just now when you dropped your robe, and you got your wish when he saw your amazing boobs. You're incredibly beautiful and Steve loves beautiful women, but he's got this thing about loyalty. He loves me. He'd do anything for me. I stopped worrying about other women a long time ago. For whatever reason, he's my guy as long as I want him, and I'll want him forever.\" \n\n\"I guess that's why he's your husband. I've never seen a couple trust each other like you two do. Heather doesn't have a chance, does she?\" chuckled Kathy.\n\n\"No, but she's having a lot of fun dreaming about him. Some guy will come along who's perfect for her, and she'll forget all about being in love with Steve. The same thing will happen for you sooner or later,\" predicted Gwen.\n\n\"I may find a great guy of my own, but I doubt either Heather or I will ever stop daydreaming about Steve,\" replied Kathy with a weak smile. \"But enough about my daydreams: we need to get ready for the next number!\"\n\nThe concert ended at five o'clock Sunday afternoon, but it took several more hours for the streets of Washington again to allow vehicular traffic. Thousands of very happy people began leaving the city to return to their home towns. Lady in Red had contracted to have a company clean the city after the weekend's activities and by dusk, the lion's share of the cleanup had been completed.\n\n\"We need to get over to Maryland and FedExField,\" reminded Kate. \"Our team is having its home opener, and we want to be there for the pregame festivities. This'll be the D.C. Spartans' first home game. Let's hope we win!\"\n\n\"Don't bet the ranch on that,\" offered Chip. \"They didn't do very well last week, and our head of football operations traded away our starting quarterback. I wonder where we can find a player to replace him?\"\n\n\"Steve won't be suiting up tonight! You can bet on that,\" responded Gwen as she hugged her husband. \"They'll have to go another week or two without him. We need some rest and relaxation after the hectic schedule of the last two months. The division is weak this year, so we can stand to lose a few games and still make the play-offs. Steve'll play a lot better if he gets the chance to recharge.\"\n\n\"What about the rule about owners not playing for their team?\" asked Jason. \"If the NFL is anything like Congress, they'll enforce that rule to the letter.\"\n\n\"It seems that a person can't buy a team and then put themselves on the roster, but a player who's already on a roster can buy a team and still play for it,\" declared Kate. \"I had a team of lawyers pour over the NFL rules, and Steve won't be breaking any of them if he plays for the Spartans. Although he retired last spring, the team kept him officially on the roster. He'll be able to play; if he can make the team, that is.\" \n\n\"If he can make the team?\" repeated Billy Marsh. \"If he doesn't make the team, there should be a Congressional investigation, or have they already done that?\"\n\nThe group arrived at FedExField two hours before the 8:20 kick-off. The parking lot was already filled with fans enjoying tailgate parties.\n\n\"Everyone has so much fun at these games!\" exclaimed Lisa. \"We should have a tailgate party, too.\"\n\n\"We will, Sis, but it'll be in our skybox. Now that we're the owners, we get the best box here. I think we'll have the same caterers we always had, but the accommodations should be even nicer.\"\n\n\"Yeah, but that's not the same as visiting with other fans and trash talking the Giants, Eagles and Cowboys,\" replied Lisa. \"That's the fun part.\" \n\n\"How about we invite a few fans up to our box every week to watch the game with us?\" asked Jordan. \"The box is huge, so we'll have lots of room. The only rule will be no Senators or Congressmen... or pretty women.\"\n\nJordan and Gwen were scheduled to sing the National Anthem, so the entire group went down to the field to watch the teams warming up. Gwen noticed a section of seats already occupied by fans in military uniforms and she asked about it.\n\n\"Jared reserves fifty sideline seats every week for active service personnel,\" explained Tyler. \"The various branches of the military select men and women to represent them each week. Apparently, they like to get here early.\" \n\nGwen and Jordan headed straight toward the group as soon as Tyler explained the situation. When it became apparent where the women were going, every person in the group stood and saluted. Gwen noticed that a few of them struggled to stand and had to use the chair arms to support themselves.\n\n\"Please sit down!\" pleaded Gwen. \"I'm just a regular citizen now. There's no reason to salute me. Jordan and I just came over to thank you for your service and for coming to the game tonight. We appreciate it.\" \n\n\"Ma'am, if I may speak?\" asked a ramrod-straight Marine with a well-muscled neck and sergeant stripes.\n\n\"Of course you may, but please be at ease,\" replied Gwen. \"I was never comfortable having brave men and women like you folks saluting me. I've never served and never felt I deserved a salute, especially from decorated combat veterans.\"\n\n\"Ma'am, believe me when I say no one deserves our respect more than you. All of us feel that way, and we think it's a damn shame the way Congress treated you today. We're all proud as hell to have had you as our Commander-in-Chief. We're right grateful you gave us these great seats, too. We never would have been able to come to the game otherwise.\"\n\n\"Tell me something,\" interjected Jordan after seeing Gwen's agreeable nod. \"Do you people have some other friends in the military who could get here in time to watch the game? We'd like to invite all of you up to our skybox to watch the game and to enjoy some refreshments. We could make arrangements for the others to use these seats. Would you be willing to be our guests tonight?\"\n\n\"Are you kidding?\" gushed a young sailor. \"I'd love to watch the game and share a few beers with Steve and President Hammer. I have a buddy that can be here in ten minutes!\"\n\nAfter listening to other people in the contingent accept the offer and assure Jordan they had friends to utilize their seats, Tyler began making arrangements. Then a young female Marine spoke for the first time.\n\n\"If I could, I'd like to be nearby when President Hammer and Mrs. Burns sing the anthem. I love the way they sing it, and I'd love to be close enough to hear them without any amplifiers.\"\n\n\"This is Corporal Melanie Baker,\" introduced the Marine sergeant. \"She always sang the anthem at our events on base. She even sang it a few times while she was stationed in Kabul before her convoy was hit by an IED this summer and she lost a leg. She's the best singer I ever heard, next to you ladies, of course.\"\n\n\"I've played your CDs and sung along with both of you hundreds of times,\" admitted the corporal. \"If I could just stand close enough to hear you sing, I'd be so very grateful.\"\n\n\"Of course!\" agreed Gwen immediately. \"Would you like us to find you a wheelchair, so you can sit nearby while we sing?\"\n\n\"Ma'am, not to be rude, but I don't sit when the anthem is playing. I lost a leg, but not my pride of country. Thanks for the offer, but no matter what, I'll be standing when you sing the anthem,\" promised Corporal Baker.\n\n\"I am so sorry if I offended you!\" apologized Gwen. \"I should have realized what sort of person you are. I can go you one better. You've sung along with Jordan and me on recordings. Would you do us the honor of standing and singing the anthem with us tonight?\"\n\n\"That's a great idea!\" approved Jordan. \"We'd be honored to have you with us. Please say you'll do it, Melanie.\"\n\n\"I'd really love to, but I have trouble balancing and I'd need a cane or something to lean on. I may be awkward,\" worried the young woman.\n\n\"You'll stand between Jordan and me,\" decided Gwen. \"We'd be honored if you'd lean on us a little. You've given so much for your country, and we'd love to have you stand with us.\"",
        "\"I don't have a dress or anything. You're both so beautiful and I'm so plain. I'm wearing fatigues. I'm afraid I'll embarrass you.\"\n\n\"It will be one of the proudest moments of my life,\" assured Jordan. \"Tyler, please be sure that the public address announcer and the media people are aware of Corporal Melanie Baker's full name and all pertinent information about her service history. She deserves recognition and appreciation from the fans. She'll be singing the National Anthem tonight with Gwen and me.\"\n\nSteve was discussing the game plans with Jared when they were approached by a network sideline reporter. \"May I interview you for our broadcast? It'll be live and we'll be ready in two minutes, if you're willing. Do you want to know my questions beforehand?\"\n\n\"Sydney, you never offered to tell me your questions ahead of time,\" responded Steve. \"Why now?\"\n\n\"I'm supposed to ask you about your wife's impeachment and your feelings about Senator Lancer, and I don't want you to think I'm trying to ambush you. You've been very good to me when you played football, which I'm also going to ask about,\" explained the pretty blonde woman.\n\n\"Feel free to ask me anything. If I don't like the question, I'll just talk about something else, like any politician would do,\" replied Steve.\n\nA little later, sports reporter Sydney Trout was given the signal she was on the air. \"I'm here with one of the owners of the DC Spartans, Steve Hammer. Until this morning, his wife Gwen was President of the United States. Steve, can you tell the viewers how you feel about your wife being removed from office?\"\n\n\"It's a mixed bag for us, Sydney. President Rosen is very capable and he'll do a great job going forward. Gwen needs a vacation, the past few months have been extremely stressful for her. She served her country with grace and honor, which is much more than I can say for the Senators and Congressmen that removed her from office this morning. It saddens me to know that our nation has so many self-serving, hypocritical, cowardly people in positions of power.\"\n\n\"There was a huge crowd assembled this morning in anger over President Hammer's ouster, and you told them of your desire to remove many of these politicians from office. Have you changed your feelings about that?\" asked the reporter.\n\n\"No, Sydney. That wasn't a spur of the moment thing. I knew there was a chance Gwen might be impeached and convicted, so I'd planned ahead accordingly. Lady in Red is going to enter the political arena and work to change the attitude of entitlement that's so pervasive in Washington.\"\n\n\"Your wife and Jordan Burns are scheduled to sing the National Anthem. The press has just been informed that Marine Corporal Melanie Baker will sing with them. What can you tell us about that?\" asked the reporter.\n\n\"Truthfully, this is the first I've heard about it,\" replied Steve as he gazed in his wife's direction to see her standing with Jordan and a young woman in uniform who was obviously missing a leg. \"I can tell you though, that they'll do a great job with the anthem and I'm extremely proud they've invited a member of our military to sing with them.\"\n\n\"Will you come out of retirement, now that your wife no longer holds public office?\" questioned the blonde reporter.\n\n\"Gwen and I need a little break from all of this to recharge and refocus. We'll discuss that possibility, as well as a lot of other topics, and together we'll make that decision later in the week,\" promised Steve. \n\n\"What about players sitting or kneeling during the National Anthem? Will you punish or discipline players that fail to stand for the anthem?\"\n\n\"Ownership has made its position quite clear on that matter. I hope nobody is foolish enough to test our resolve,\" answered Steve.\n\nTen minutes later, Steve found his resolve was going to be tested. Gwen, Jordan, and Corporal Baker sang the anthem beautifully. Melanie had a strong voice which melded with Gwen's and Jordan's to produce a very strong presentation of the anthem. The crowd cheered and yelled its approval as the song ended.\n\nBrandon Twig, the team's star middle linebacker, remained seated during the anthem. His long blond hair flowed behind him as a light breeze circulated through the stadium.\n\nSteve was annoyed by the player's actions, but he was more concerned at the anger displayed by Jared. His friend was obviously enraged. Steve followed close behind Jared as he strode to the bench once the anthem was over and Twig stood to join his teammates.\n\n\"You just disrespected our nation, as well as the owners and management of the team,\" snarled Jared, his face inches from Twig's. \"Get your sorry ass back to the locker room and get changed. You'll never wear that uniform again!\"\n\n\"I have a right to sit during the anthem!\" yelled the player. \"I was just exercising my rights. I'm not a slave! You don't own me!\"\n\n\"No, thank God, we don't,\" retorted Jared hotly. \"We do however own that goddamn uniform you're wearing, and I want you out of it right now. You've disgraced yourself and the team. Get the fuck back to the locker room or I'll drag you back!\"\n\nThe man glared from Jared to Steve but then shrugged in response. \"My lawyer will take this fucking team to the cleaners. The players' union will have a field day with you, you right wing bastards. You're about to make me very rich!\"\n\nThe team's coaches and players stood silently by as the two men yelled at each other. As Twig turned and headed for the locker room, the coach quietly announced, \"Danson! You're starting at middle linebacker!\"\n\n\"I'm sorry that happened, Steve,\" apologized Jared. \"I really thought we'd weeded out the assholes before tonight's game. I can't believe that clown showed Gwen and Jordan such disrespect. The team owners sang the anthem while that dickhead sat and twiddled his thumbs!\"\n\n\"The previous owners were the ones who signed him to that huge contract this spring. We bought the team knowing he was overpaid,\" responded Steve, before breaking into a big grin. \"He's a good player, but he knew our policy. You enforced it quite emphatically. That was something to watch!\" \n\n\"I'm sorry to interrupt, but is Brandon out for the entire game?\" asked the team's defensive coach. \n\n\"Yes! He's out forever as far as the Spartans are concerned,\" responded Jared with some emotion. \"I'm sorry to put you in the position of losing your middle linebacker, but that shit won't fly on this team!\"\n\n\"I think the rest of the team got the message, if they had any doubt before tonight. We'll do the best we can without him,\" assured the coach before going back to speak to his players. \n\nJared's very public dismissal of the Spartan's middle linebacker had been broadcast live on network television. The play-by-play announcer expressed surprise that Jared would weaken a team that was already struggling to win, by dismissing their star linebacker. Their color commentator, a former player, insisted he had anticipated such an immediate response from ownership.\n\n\"I played against Steve Hammer the last two years of my career and I got to know him a little. He's a great guy, but his dedication to family and country stand out as soon as you meet him. He's always been a team player, and it's his belief that those who don't respect the sacrifices of our military, or who try to subvert that respect for personal gain, should never have a place on his team. \n\n\"The NFL is going to have to decide whether an owner has this type of control over their players. Can players take the money and wear the uniform and then act in a manner that ownership finds disgraceful and disrespectful?\" posed the former player. \"I'm certain that Steve Hammer will fight any attempt to force him to allow players to act in such a manner while wearing his team uniform. To be blunt, it'll never happen. He'll sell the team before he permits that type of behavior.\"\n\nThe Spartans had a tough game, losing 42-10. The players who'd been expected to start at quarterback and middle linebacker before the season had started were no longer part of the team, making the team's first home game a disappointment. Starting the season at 0 and 2 was not what Jared had expected when he took over football operations. Steve and Gwen remained to discuss the team's options with Jared once the game was finished, while the rest of their group drove over to Anna's Place.\n\nWhen Gwen, Naomi, Jared and Steve arrived at the restaurant, paramedics were loading two gurneys into the backs of ambulances. Gwen urged their group to hurry inside to make sure their family and friends were unharmed. They found their group seated at a large table. They all appeared to be in a jovial mood, so Gwen immediately relaxed.\n\n\"You missed all the excitement!\" blurted Kate. \"If you haven't already placed Twig on waivers, you can now put him on the disabled list. He and his big brother were in here bragging about how they were going to get wealthy taking us to court.\"\n\n\"It seems they believe we violated Twig's rights by sending him to the showers before the game even began,\" added Lisa. \"They were making all kinds of brags about how they were going to make the Spartans rue the day Twig was disrespected in such a public way.\"\n\n\"That explains the ambulances,\" responded Steve with a nod. \"Those two idiots decided to come over to this table and berate some of the owners?\"\n\n\"You think you're so smart!\" quipped Jordan. \"Tell us who did what to whom, if I said that right.\"\n\n\"I imagine Chip messed up Twig's knee and broke one of his arms,\" offered Steve as he mulled things over. \"Jason probably put the brother out for the count with a couple of shots to the throat and face.\"\n\n\"Did you see the security footage or something?\" demanded Charlotte. \"Those jackasses decided to visit our table and drop some nasty insults on Lisa, Kate and Jordan. I'm not sure, but I think they may have also called me a dumb cunt. Regardless, Jason and Chip stood up and suggested they leave us alone, like immediately!\n\n\"Well, two big tough guys don't back down from a couple of washed-up Rangers and SEALs, or so they claimed. I think Chip baited Twig with a few girly-man barbs, while Jason just grinned at Twig's brother. The next thing you know, Twig threw a punch at Chip, and his brother did the same to Jason.\"\n\n\"The key word is 'threw'. Neither of them came anywhere close to connecting,\" added Billy. \"The next thing you know, the two brothers are on the floor. Twig was trying to hold both his arm and leg with one good arm and crying like a baby. His big brother was sleeping under the table. I was tempted to take them both down for insulting Charlotte, but Chip and Jason jumped in first, and ended it damn quick.\"\n\n\"Yeah, and it's a good thing they did, because Billy looked pretty upset,\" added Jordan with a grin. \"I'm sure it would have been a lot worse if Billy had gotten his hands on those two guys!\"\n\n\"Thanks, Jordan. I'm glad you saw the situation as it really was,\" responded Billy with a nod to her. \"Those guys got off easy.\"\n\n\"I know the restaurant has security cameras, so we can get copies from Carl and get them to our legal team,\" suggested Steve. \"Those clowns will be suing us for all kinds of things after this.\"\n\n\"They'll have to make bail once they get out of the hospital,\" laughed Charlotte. \"They'll be spending a lot up front on lawyers. Steve, how did you know Chip broke Twig's arm and messed up his knee?\"\n\n\"I served overseas with Chip, and I had a few opportunities to see him in some tight situations. So I know his favorite tactics and how effective they are. Twig's fate was sealed when he insulted you ladies, especially Kate. Chip may be getting older, but he sure isn't washed up yet. You mentioned jail after the hospital. Did someone call the police?\" asked Steve.\n\n\"It wasn't necessary. There were two off-duty policemen sitting at a nearby table. They read the brothers their rights while they waited for the ambulances. The Twigs had better hope they don't appear before Judge Connor. He's dining three tables over right now, although as a witness, he can't preside over any legal proceedings,\" pointed out Kate.\n\n\"Yeah, Twig really screwed the pooch when he sat for the anthem, and it only got worse when he decided to visit our table,\" observed Billy. \"I thought Jared was going to whip Twig's ass when he balked at leaving the field. It was all on TV, and it was easy to tell that Jared was furious.\" \n\n\"I apologize for that dumb ass sitting for the anthem,\" responded Jared. \"I thought the entire team understood our feelings on the matter and would act accordingly. We've agreed to establish charities with Gibbons and Johnson. We'll set up food banks in the city with their names attached to the enterprises. Most players felt it was a lot more productive than kneeling for thirty seconds and pissing off a lot of people, including the ones who sign their paychecks.\"\n\n\"No one blames you, Jared. You aren't a mind reader. Twig was looking for a confrontation, and he got one,\" stated Gwen. \"He said he was sitting because he could. Some players on other teams don't stand for the anthem and he felt he didn't have to either. That's one big problem with players kneeling, even for a cause they believe in. It sets a precedent that allows players to believe they can determine when and why they can act inappropriately, even while they're drawing pay from our company and wearing our uniform. It would never work in the military, in police departments, or in most private businesses, and it won't work for anyone working for Lady in Red.\"\n\nIt was well after midnight by the time Gwen and Steve managed to enter their hotel room and crawl under the sheets after a long and arduous day. The stress of the previous months had taken its toll, and they quickly fell asleep, holding each other.\n\nAt six o'clock the next morning, two Harley Davidsons made their way through Washington streets to reach the secondary roads of Virginia. Gwen was sitting behind Steve as they cruised through rural Virginia. Tyler and Sybil occupied the bike alongside them. Paula had gladly taken Saint and Vickie for a few days while Gwen and Steve started getting some rest and relaxation. The rest of their friends had various family and business obligations, and were unable to any take more time away after spending two months with the World Tour. Tyler and Sybil had remained at home working, so they eagerly joined Steve and Gwen for a relaxing road trip. \n\nThey spent the night quietly at a bed and breakfast in the Blue Ridge Mountains of Virginia. The next morning found the friends up early and posing for photos with the owners. The pictures were posted on the owner's Facebook page before the foursome had even reached the end of the long driveway.\n\nShortly before noon, they stopped at a gas station with a burger joint on one side. While the two men fueled their bikes, the ladies went inside to use the bathroom and secure a table. As he entered the building, Steve noticed about a dozen motorcycles lined up on the side of the parking lot. \n\nOnce he was inside, Steve found Gwen and Sybil sitting at a table in the middle of the room. They were surrounded by rough looking characters sitting at the nearby tables.\n\n\"Sybil and I have made some new friends,\" greeted Gwen with a smile. \"These folks are in a local motorcycle club. They recognized me and asked if they could ride along with us. I told them to ask you.\"\n\n\"Normally I don't travel with lawyers and accountants, but I'll make an exception today,\" replied Steve with a grin.\n\n\"How did you know we're professionals?\" asked a man with an earring and pony tail. \"I think we look the part of a tough biker gang.\"\n\n\"I saw several sidecars attached to your shiny new Harleys,\" replied Steve. \"Your ladies don't look at all like typical 'biker bitches'. They're all dressed pretty conservatively and wearing just the right amount of makeup. Your clothes are new, some of you even have creases in your jeans, and there isn't a tattoo anywhere in sight. Don't get me wrong. You all look great, but it's pretty obvious you aren't real bad-asses.\"\n\nAround 3:15 PM, Steve was leading the bikers up a long hill in Central Virginia. As they began down the slope on the other side, they saw a school bus a few hundred yards in front of them entering a sharp curve. The group watched in horror as an oncoming log truck coming out of the curve lost control and slid into the bus, slamming it hard and causing it to flop onto its side! Logs rolled helter-skelter across the highway, with one coming to rest on top of a car that had been following behind the bus. The dust hadn't yet settled when Steve and the other bikers pulled to a stop at the scene.\n\n\"Mom, you have to turn on your TV!\" called Lisa as she rushed into her mother's house in Asgard and switched on Paula's television. \"There's been a bad bus accident in Virginia. You need to see this!\" \n\nAs images on the screen began taking shape, Paula saw a woman step up to a podium to address a small gathering of reporters. Tears trickled down her cheeks as she gazed at the camera.\n\n\"I'm Janice Bolding, the chairwoman of the Ulster County, Virginia Board of Supervisors.. This afternoon at 3:15, a school bus from Lincoln Middle School with 42 students on board was involved in a collision with a loaded log truck. The accident occurred on a sharp turn on route 52, known locally as The Oxbow. This scenario is the absolute worst nightmare for schools, parents, and first responders. Today, this horror became a reality for Lincoln Middle School.\n\n\"The bus was overturned by the force of the collision, and several of the students were ejected upon impact. A large log caromed down the highway, coming to rest on top of a car which had stopped behind the bus. The driver of that car was pinned beneath the log. An infant in a car seat in the back was also trapped inside the vehicle.\n\n\"At least three students were critically injured. I've been told they were just minutes away from death. The young woman in the car was suffocating because the log on her roof was pressing it against her chest, preventing her from drawing a breath,\" revealed the spokeswoman before she stopped to take a sip of water.\n\n\"I've given you enough detail for you to realize just how dire the situation was. In our community's darkest possible moment, a miracle came to the Oxbow. Traveling the same stretch of highway was a very unique group of motorcyclists, and they witnessed the entire accident. Included in this group were two nurses, as well as a pediatric orthopedic surgeon. \n\n\"These good Samaritans immediately began to render lifesaving first aid. First responders have stated with certainty that the measures immediately taken at the scene saved the lives of at least three children plus the adult trapped in the car. The men in this group worked together to lift the heavy log off the car, allowing a nurse the opportunity to access the woman and begin lifesaving rescue breathing, reviving the young mother. Our first responders began arriving on the scene within seven minutes, to discover that extremely competent and well-trained medical professionals had saved at least three lives that otherwise would have been lost. The orthopedic surgeon had calmly directed the others, while using her training and skills to stabilize the injured. When her identity was revealed, she was asked to ride with an injured student to the local hospital so she might assist the surgical unit of River City General Hospital. She graciously agreed to the request.\n\n\"The locals have already begun calling this incident the 'Miracle at The Oxbow'. There are many reasons to believe it to be a miracle that an accident of this magnitude somehow resulted in no fatalities. The chief reason so many of us feel that it was a miracle is the identity of the surgeon who worked to save lives at the scene and who subsequently traveled to the hospital to assist our doctors. That angel of mercy, until very recently, served as President of the United States! Incredibly, it was the Queen of Peace who worked so competently to save lives!\"",
        "There was a murmur from the reporters as the chairwoman paused to take another sip of water. Suddenly the horrible bus accident had become an international news event. Gwen Hammer had happened upon a horribly serious bus accident and had immediately started saving lives!\n\n\"The miracle is not so much the remarkable effort made by this group to save our children,\" continued the spokeswoman. \"The miracle is that the only chance some of these kids had to survive the accident was to receive immediate professional medical care, and these heroes arrived on the scene fully qualified to administer it. In the midst of a horrible tragedy, our community was blessed with an unbelievable miracle.\" \n\n\"My sister is a miracle worker! Again!\" gushed Lisa. \"I have to admit the incident in Hungary was hard to believe. Saving the baby in Cuba was Gwen's medical training, or so it seemed, but these incidents keep happening. There's something afoot in the universe, and Gwen and Steve are in the middle of it. This can't all be totally random, especially that old lady who correctly told Gwen the future. On two continents! That's simply not possible, yet it's happened twice to Gwen and once to Hanna Kiss.\"\n\nHanna was the mother of Lena Kiss, the young girl the iconic old blind woman Gwen had now met twice had told her was Gwen's son Saint's future queen.\n\n\"I wish I knew what it all meant,\" admitted Paula. \"This all began when Gwen met Steve that day at the mall. It just keeps building, but to what end?\" \n\n\"That's the question, isn't it, Mom? What do the Gods have planned for my amazing sister, her husband and her family? We'll probably have to wait to find out, just like everyone else.\"\n\nLisa's attention returned to the television as the chairperson again spoke to the cameras. \"Our local hospital is grateful for the help of medical facilities in neighboring counties. Many of the less seriously injured children have been transported to other hospitals. A few have already been released to their parents. We have three children in intensive care, but they also are expected to recover. Eight students have either undergone or will undergo surgery to repair broken bones and other injuries suffered in the accident. The young mother that had been trapped by the log on her car is expected to make a full recovery.\n\n\"The entire Board of Commissioners is adamant in the belief that the timely arrival of The Queen of Peace made the difference today. All seven board members, three Democrats, three Republicans, and one Independent have signed a petition declaring support for Gwen Hammer in the next presidential election. We do not condone the impeachment proceedings so recently taken by Congress. It's our wish to be the first elected officials in the United States to endorse our Queen to be elected President! I'm certain we won't be the last.\"\n\nSteve and Tyler had remained at the accident scene to offer assistance to first responders. They worked to provide care to the injured, to reassure family and friends who arrived on the scene and to maintain a safe environment as traffic was once again permitted to travel on the highway. \n\nIt was almost dusk when they climbed on their Harleys and led their group into a very active River City. Sybil had caught a ride to the hospital, so she could be close to Gwen if she needed any help or protection. Sybil was once again in charge of all security for Lady in Red and Asgard. Gwen had signed off on the use of Secret Service agents for her protection, preferring her own security people when she felt they were needed. \n\nAs they neared the hospital, Steve noticed a large park. It was well lit, and hundreds of people were milling about. Steve was very aware the shirt he wore had blood from some of the accident victims splattered on it. He decided to pull over at the near park entrance and change into a clean shirt, knowing that the blood could well upset family members of the injured. \n\nHe was followed into the parking lot by Tyler and his new friends. \"If you have any clean clothes with you, I suggest those of you with bloody shirts and pants change now. We don't want to be the cause of any distress from the families of the kids we helped.\"\n\nWith that, Steve pulled his blood-stained shirt over his head and tossed it into a nearby trash can. He was digging into his bag on the bike when he heard a girl's voice tentatively calling his name. Frustrated in not having the time to find a clean shirt in his bag, he turned with a slight scowl to face his questioner.\n\nTired as he was, Steve had to grin when he saw what he guessed were two high school girls about seventeen years old. Both of them were standing slack-jawed and unable to speak. Steve arched an eyebrow, and the darker girl finally found her voice.\n\n\"Mr. Hammer? I'm Pamela Stenson, and my friend is Anita Lord. We're seniors at River City High. I hope we're not bothering you, but we've set up a blood drive to help the accident victims, and it would be really, really great if you could come over to the bloodmobile with us and donate a unit of your own blood. I know it would inspire a lot of others to do the same.\"\n\n\"I think I can manage that. Would it be okay if my friends gave blood as well?\" asked Steve as he pointed to his group of biker friends watching the encounter.\n\n\"Of course! They're all heroes in River City!\" exclaimed the blonde girl, Anita, while she openly stared at Steve's torso. \"It would really help us reach our goal of 200 units.\" \n\n\"Would it be okay if I found a shirt to wear before I went with your ladies to donate?\" asked Steve, now grinning.\n\n\"Honestly? I think you look great just like that!\" exclaimed Pamela. \"Could we get a picture with you before you find your shirt?\"\n\n\"I don't know if that would be a good idea,\" worried Steve. \"You girls are minors, and I'm not. We don't want to start any rumors or get in trouble with your moms.\"\n\n\"They're both eighteen, but you're right,\" interrupted a smiling woman to Steve's left. \"But if Pamela's mother were in the picture, it would be okay, don't you think?\" \n\n\"I suppose that would work,\" agreed Steve as he nodded in thought. \"Even her big sister would be fine. Why don't you join us for the picture?\" \n\n\"Big sister? That's my mom!\" exclaimed the excited girl as she handed her phone to Anita. \"Take a picture of Mom and me with Steve Hammer. Get a lot of pictures of us!\"\n\nMother and daughter quickly moved to either side of Steve, each of them wrapped an arm around his waist and pressed their breasts against his bare chest. Anita squealed in delight as she snapped numerous photos of her friend with Steve Hammer!\n\n\"Okay, Ladies. I need to get my shirt on,\" insisted Steve as he stepped away from the two women and once again dug around in his bag and this time pulled out a shirt. \"It looks like we're attracting a crowd. I promised to donate blood, so let's get going.\"\n\nAnita and Pamela proudly escorted Steve to the bloodmobile, where they tried to take him to the front of the line. \"Girls, I'll wait my turn like everyone else. My blood's no better than the next person's. Besides, this way will give more people a chance to notice me and follow my example.\"\n\n\"I never thought of it like that,\" admitted Anita. \"That's why you're so successful. You think about how your actions will affect others.\"\n\n\"That, and how he looks with his shirt off,\" added Pamela. \"What a hunk! Look how many people are already coming over to get in line!\"\n\nSteve used the time to speak to people, sign autographs, and pose for pictures as he waited his turn to donate. The already large crowd grew even bigger as the word spread of Steve Hammer's presence in the park. \n\nAfter giving blood, Steve met with the families of some of the children who'd been in the accident. He did his best to comfort them and to praise the character of the kids and the dedication of the first responders at the scene. \n\nThe community was too wired to sleep that evening. There were over a thousand people still milling around the park just after midnight, when a hush fell over the crowd. Those nearest the hospital began dropping to a knee and those behind them quickly followed suit.\n\n\"Our Queen!\" began as a whisper that gradually chorused louder as an exhausted Gwen Hammer, accompanied by Sybil, trudged slowly through the crowd. Her eyes moved over the people surrounding her until she found Steve flashing a big smile as he strode toward her.\n\nMany of the females in the park had tears running down their cheeks as they watched The Warrior take his Queen into his arms and kiss her passionately. The entire community was filled with pride that the Queen of Peace, so recently President of The United States, the wealthy and beautiful Lady in Red, had somehow arrived in River City in their time of need. She had proceeded to save lives and repair small bodies that were badly injured. Not a single River City resident doubted that Gwen's arrival could have been anything less than a true miracle.\n\n\"Senator Lancer is scheduled to tour the school and hospital tomorrow afternoon. Will you be here to meet with him?\" asked a kid that wore a 'River City High School Crier' badge on his shirt.\n\n\"No,\" was Steve's immediate response. \n\n\"You do know Senator Lancer represents Virginia in the Senate and lives less than a hundred miles from here?\" persisted the young man.\n\n\"I'm aware he represents Virginia at the moment,\" responded Steve. \"But these good people are going to expect more from their elected officials than Lancer is able or willing to provide. He's rapidly becoming irrelevant.\" \n\n\"Do you think he'll be elected our next President?\" was the kid's next question.\n\n\"Absolutely not,\" replied Steve flatly. \"This nation can do much better.\"\n\nA network reporter suddenly appeared next to Steve. \"Brandon Twig told reporters this afternoon that he's filing suit against Lady in Red, as well as the DC Spartans for violating his constitutional rights. He's also going to file suit against your company for the possible career-ending injuries he suffered at the hands of your brother-in-law, Chip Martin. The players' union is looking into charges that you're intimidating players into standing for the anthem, as is the commissioner. How do you respond to all of this?\"\n\n\"Twig has the right to file law suits until the cows come home,\" allowed Steve thoughtfully. \"I'm confident the team had every right to send him to the locker room after his disgraceful and cowardly display while wearing our uniform. I'm equally confident that he insulted and physically assaulted Chip with the expectation of doing him considerable bodily harm. Chip's no rookie when it comes to hand to hand combat, as Twig found out. He made several bad decisions, and now he's crying. My response is that he needs to man up.\"\n\n\"You released him before halftime of the game Sunday night. Does that mean you won't honor his contract?\" asked the reporter.\n\n\"Why would you ask that?\" responded Steve with a scowl. \"Lady in Red has never knowingly failed to honor a contract. We'll abide strictly by the terms of his.\"\n\n\"Will you come out of retirement now that your team has shed its starting quarterback and middle linebacker?\"\n\n\"Gwen and I will make that decision soon. Now please excuse us. There are some people I want to introduce to their Queen,\" was Steve's answer as he turned away from the reporter and took Gwen by the hand.\n\n\"Folks, this is Gwen. Gwen, these good people are families of some of the injured children,\" explained Steve as Gwen nodded to the group and as they quickly dropped to a knee.\n\n\"Please stand. Think of me as just one of your children's doctors tonight,\" offered Gwen with a warm smile. \"Allow me to tell you just how brave and wonderful your kids are.\" \n\nAn hour later, Sybil caught Gwen's attention and advised her to get some rest. \"Gwen, you've been going since early this morning. You're pregnant and exhausted. Let's find a hotel and call it a night.\"\n\n\"My Queen, if I may be so bold?\" interrupted an older woman with white hair and dark skin. \"I'm Beverly Watson, and I live alone in a nice five-bedroom home on a safe street. May I offer you, your Warrior, and your friends the use of my home for the night? It's only a few blocks from here. You saved my grandson's life, and it's the very least I can do.\"\n\nGwen briefly considered before deciding to accept the gracious offer.\n\n\"We accept!\" replied Gwen, causing the older woman to break into a huge smile. \n\n\"Brenda, call your sisters and tell them to get the beds made and everything ready for royalty!\" instructed the woman to a younger version of herself. \"Our Queen and her Warrior will be our guests tonight, along with their friends.\"\n\nBy the time the two couples pulled their motorcycles into the driveway of a large Victorian home, the sidewalk held several dozen people watching in awe. As Gwen removed her helmet, those watching kneeled in unison.\n\n\"Your Queen thanks you all!\" acknowledged Gwen before turning to enter the beautiful home as her hostess held open the door.\n\nThe next morning, Gwen, Steve, Sybil and Tyler sat at Beverly's table as she and two of her daughters bustled about the kitchen cooking breakfast. \n\n\"Ma'am, we can't thank you enough for your hospitality. The bed was very comfortable, and the food smells delicious,\" praised Tyler.\n\n\"You're thanking me?\" objected Beverly with a laugh. \"You folks saved this town's children. It was a miracle that you were on that stretch of road at that exact time. You brought hope to a terrible tragedy. Some of the kids have a long road ahead of them. We know that, but we thank God they're alive and will get better. We thank you!\n\n\"Besides that, having our Queen and her Warrior stay overnight in my house will raise my social standing in the community immeasurably,\" added the middle-aged woman as she laughed heartily.\n\nIt was almost 9 AM when Steve and Tyler swung onto their bikes and waited for their wives to join them. Gwen and Sybil gave Beverly and her two daughters warm hugs before climbing onto the bikes behind their husbands.\n\nThe streets were lined with people of all ages as the two-bike caravan made its way to the park where their new biker friends had gathered to wait for them. Steve turned off his machine as Gwen dismounted and walked toward the bikers that had helped them so much the previous day.\n\nAs hundreds of townspeople watched and listened, Gwen spoke to the group. \"I've instructed our people to send each of you a leather jacket with our Lady in Red logo on the back and the words \"First Road Warrior\" boldly printed below the logo. There will only be nineteen original jackets, and you folks will have them.\n\n\"I want everyone to know how highly Steve and I regard you. These jackets will come with responsibility. You'll be the original Road Warriors, the first of many, I hope. I want travelers all over the country to be able to turn to Road Warriors for comfort and assistance, should they need it. Lady in Red will give you as much support as we can, but it's pretty much going to fall on individual Road Warriors to be prepared to assist those in need.\n\n\"I know I'm asking a lot from you, but I believe you have what it takes to carry this responsibility. I ask that you nominate others who you feel have the character needed to represent Lady in Red and your Queen. They will receive jackets like yours, but only yours will include the word 'First'. Over time, we hope to have Road Warriors riding most of the highways of our nation. Henceforth, when people see the Road Warrior jacket with the Lady in Red logo, they'll know they've found someone they can trust to lend assistance in difficult times. That's the legacy you so selflessly originated yesterday when you stopped to help those injured children,\" concluded Gwen. \"I'm extremely proud to proclaim this group the first of my Road Warriors.\"\n\n\"We ride for our Queen!\" responded a biker Steve had grown to like a great deal the previous day. \"May we always make her ideals our own!\" \n\nWith that, Gwen gave a huge smile to the bikers as well as to the hundreds of locals witnessing the event. She then swung a long leg over the bike and settled in behind Steve. He brought the bike to life and slowly turned into the street. All the bikers left their helmets off as they rode slowly and proudly through the town. They followed Gwen's lead by waving and smiling to the people who lined the streets to see their Queen and her Warrior one more time, and to bid them farewell.\n\nSenator Lancer arrived at the local high school two hours later, scheduled to address a student assembly in the gymnasium. He expected a heavy media presence, and he'd carefully crafted his speech to profess his sympathy and concern for the community. His next stop was scheduled to be the hospital where he intended to visit some of the injured children and pose for photos as he comforted their families. \n\nThe bleachers in the gymnasium were packed with students, while reporters and camera people stood along the sides. The Superintendent of Schools called the assembly to order and then asked the president of the student council, Pamela Stenson, to introduce the guest speaker. \n\n\"Ladies, Gentlemen and fellow students, it seems like a long time ago, but it was just yesterday that a school bus transporting our younger brothers and sisters was involved in a horrible accident. The bus was overturned, and many of the kids riding in it were seriously injured. \n\n\"Then our community was blessed with the Miracle at the Oxbow. Make no mistake, it truly was a miracle that the best couple in the entire world witnessed the accident, and along with some incredible friends, immediately began saving lives. That's what great people do.\n\n\"I had the honor of being in the presence of greatness yesterday, and it's changed my life. I want to be so much more than I am. I want to be so much better than I have been. I want to be a person who makes a difference. I want to be as much like our Queen as I possibly can.\n\n\"For that reason, I cannot in good conscience present to you a person I feel is beyond evil. He led the charge to impeach our President, our Queen, the very best leader our nation has ever had. Now he hopes to convince us young, impressionable students who will be voting in a presidential election in three years, that he is worthy of becoming President of the United States. I stand here today to tell you that abomination will never happen.\"\n\nBy now the reporters and camera operators were acutely aware that real news was being made in the auditorium. They began moving closer to the podium to better record the events as they unfolded.\n\nThe students in attendance had been briefed beforehand on the stance the president of their council would take. They had been given a few minutes to consider their response to her planned actions, and all had agreed on their course of action.\n\n\"In three years our Queen and her Warrior will return in to the White House in triumph. As thrilling as it was to be in the presence of true greatness yesterday, it disgusts me to be in this auditorium in the presence of a person so willing to damage our nation in order to pursue his power-grabbing personal agenda. I am now leaving this building!\" declared Pamela as she squared her shoulders and marched down the steps to the gymnasium floor.\n\nAnita Lord and several other students immediately joined her as they strode shoulder to shoulder toward the exit. Soon all the students were moving in a quiet and orderly fashion to file out behind the young women leading the boycott of the senator's planned speech.\n\nSenator Lancer was stunned as he sat in his chair on the small stage. Nobody remained in the gym except for himself, the Superintendent, and a collection of very amused journalists. He had been in politics for decades and had never experienced anything like this. His audience had left before he could even speak! He turned to the Superintendent.",
        "\"I want that girl expelled!\" he demanded loudly. \"In fact, every one of these students that left the building need to be expelled. You can't disrespect a national leader like this! I'm a senator from this state! What are you schools teaching these kids?\" \n\nThe cameras still running, Superintendent replied calmly. \"Senator Lancer, I wish our school system could take the credit for what we just witnessed, but I think probably the same thing would have happened in Anytown, USA.\n\n\"We had a tragedy here yesterday, and it's affected all of us. These young adults had a firsthand look at true leadership, love and compassion, and I've never been prouder of my students than I am at this moment. They're taking a stand and making a statement. They're doing so peacefully and with restraint. They're following the powerful example of their Queen and her Warrior. They'll work to make our community, our state, and our nation a better place.\" \n\nCameras were trained on Lancer as he listened to the Superintendent impossibly defending his students' behavior. His face was almost purple with rage as he turned to glare at the reporters and the cameras that had been covering the entire episode. Twice he attempted to articulate his emotions, but no words were forthcoming. \n\nReporters began calling out to him, asking questions about the day's turn of events. An aide hurried into the gym and to Lancer's side. He took the Senator's elbow in his hand to lead him out a side door where their limo was parked.\n\n\"Jesus!\" exclaimed Vince Rosen as he sat watching the events transpire on television. \"That kid just pounded another nail into Lancer's coffin. That took some nerve!\" \n\n\"She was emulating Gwen,\" replied Cyndi. \"Steve and Gwen were in that town for less than a day, and they managed to inspire and uplift the entire community. The whole world has come to think of her as their Queen.\"\n\n\"Tell me about it!\" responded Vince as he gazed lovingly at his wife. \"Every world leader she's ever met, and some she hasn't, have called to ask what's going on. Each one of them was upset about Gwen being removed from office. It took some effort to convince them she and Steve weren't going to seize control of the government, but it looks very possible Gwen will again be leading the U.S. in three years. Seeing the problems Lancer is already having only reinforces my belief.\"\n\n\"I'm extremely proud of you, Vince. You're a great man doing a very difficult job. That said, I'll be happy to welcome Gwen back to the White House, so we can relax a little and enjoy life while we still can,\" admitted Cyndi. \n\nGwen felt the phone in her jacket vibrate, so she dug it out and checked her messages. She signaled Steve she wanted him to pull over when it was safe. They had been riding for five hours and were in eastern Tennessee when Steve led the group into a rest area. Gwen stepped away from the group and placed a call.\n\nLess than a minute later, Gwen signaled for Steve, Tyler and Sybil to come over and join her. \"Hanna Kiss was trying to reach me. I just called her back. She's frantic. Her daughter Lena's been taken, and the kidnappers phoned her to demand ten million dollars in ransom! They expect her to get the money from us.\"\n\n\"Is she still in Hungry,\" asked Steve as he considered the information Gwen had relayed.\n\n\"That's just it. They're in Sparta. Lena was kidnapped in our home town!\""
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "impeachment",
        "conviction",
        "kneeling",
        "nfl",
        "hospital",
        "mob",
        "power struggle"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-pt-03-ch-08"
}