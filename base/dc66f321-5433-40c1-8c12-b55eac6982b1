{
    "title": "The Barrista",
    "pages": [
        "MONDAY \n\nTonight. I do it tonight. \n\nHeller checked his watch. Nine fourteen. Thirty-six minutes until they close. Enough time, but not too much. The lights on the shop's sign flickered on as if in response, lighting up the name COMMON GROUNDS with a gaudy pink glow. He checked his reflection quickly in the window glass as he approached the door. Black and white Chuck Taylors, clean but not too white, nice jeans but not too expensive, white shirt peeking out from beneath a casually rumpled sweater, hair mussed but not overtly so. He'd spent an hour making sure he didn't look like he spent an hour getting dressed. So fucking stupid. He wasn't sure if he was overthinking this, or underthinking it. Both. \n\nBrass bells hanging from the lintel jangled against the doorframe like Santa's sleigh as he pushed his way inside. The smell of fresh coffee filled his nose in greeting. Like outside the sign above the bar was lit with watermelon pink letters, except here the \"G\" had burned out so it read COMMON ROUNDS. For all your circle shaped needs. \n\nIt took him a second to realize Tesha was the barista tonight. Tesha with an @. It's right there on her name tag. Tesh@. Glossy blond hair that didn't match eyebrows the color of a chocolate bar was swept back like a lion's mane, and he could see a dust of glitter across the cleavage thrust out from her push-up halter. A guy about his age leaned against the bar talking in a loud, aggressive voice. The back of his fitted button-up was inked in a sunburst pattern and a dragon wound itself in embroidery up the leg of his skinny jeans. Douche. Heller caught his own carefully curated reflection in the mirror behind the coffee bar. So that just makes me just a different flavor of douche. Summer's Eve Island Splash to his Massengill Tropical Breeze. \n\n\"Whatcha want?\" Tesh@ asked, her voice as bright and sunny as her hair. The guy who had been chatting her up favored him with a nod, and Heller nodded back. \n\n\"Carmel latte, 2%, and one of the banana muffins.\" \n\nTesh@ started to work on his latte, pulling handles and flipping switches like a mad scientist conducting an experiment. Was he supposed to pronounce it Tesha or Tesh-at. Was the @ just a stylized 'A' or was it literally representative of \"at\"? Hi, my name is Teshat and I work at COMMON ROUNDS. \n\nHeller looked around. The shop was empty except for the three of them. No Katie anywhere. I guess I don't do it tonight. He swiped his card, took his latte and muffin, and found his usual seat in the windowless alcove at the far side of the shop out of sight of the counter. The chairs were comfortable, plush and overstuffed, and he stretched his long legs, crossing them lazily at the ankle as he pulled out his phone and began to scroll through Twitter. Don't be obvious. Drink your drink, eat your muffin, and try again tomorrow. \n\nTesh@ and the other customer were talking in low, hushed voices occasionally broken by giggles and laughter. Dragonpants. His name is Zane Dragonpants. Heller tried to ignore them. Kill a few minutes, head out. He fell in to a smooth rhythm, flipping past jokes and memes and news headlines. He almost didn't notice the kitchen service door swing open. \n\nHer hair was pulled up today, twisted into a knot at the back of her neck, the color dyed somewhere between purple and platinum. It showed off the undercut shaved up an inch above her ears and around to the back of her head. She had on a flannel shirt, faded, sleeves rolled tight to her elbows. Black leggings as pants, tight as a second skin. \n\n\"Oh, hey Heller,\" she greeted him, scooping two partially empty mugs from an end table into the basin pinned to her hip with one hand. Nails like a beetle shell flashed in the light as she wiped it clean with a rag. \n\nShe remembered my name. That ain't nothing. \"Hey yourself,\" he nodded, trying to sound casual. Okay, so it's back on. Butterflies swam in the latte in his stomach. Presumably doing the butterfly. \n\n\"Carmel or chocolate latte tonight?\" \n\n\"Carmel.\" She remembered what I drink. That also ain't nothing. \n\nShe paused, curious look on her face. \"Been meaning to ask about your name. Going to guess you weren't named after the court case.\" \n\nHe swallowed the mouthful of latte. \"Joseph Heller, the writer. He's my great uncle.\" He tucked his phone back into his pocket. Is that flattering I put it away to pay attention to her or needy? I need to obsess on this shit more because it's super healthy and chill in a way women appreciate. \n\n\"Really?\" \n\n\"No.\" \n\nShe laughed, like music. \n\n\"My parents were just book nerds.\" \n\n\"Mine were Katherine Hepburn fans.\" \n\n\"At least they went with her first name.\" \n\n\"Hepburn wouldn't be that bad. Hep for short? I could handle that for a nickname.\" \n\nHe peered at the name tag pinned to her flannel. \"Katie C. So you'd have been Hep C.\" \n\n\"Oh shit!\" she recoiled with a shocked smile that showed small perfect teeth. \"Yeah, no, maybe not Hep then.\" \n\nOkay, going well. \"I can't say anyone has ever asked if my name had anything to do with a court case though.\" \n\n\"Second year law school, criminal justice.\" She mimed a mic drop. \n\n\"Well now I know who to call when the FBI eventually figures out I was really the Green River Killer.\" \n\n\"Now all you gotta do is get my number.\" \n\nJesus Christ, that's an in, right? She's giving me an in. \"Well, I was wondering . . .\" His words cut off as the rubber tub slipped from off her hip and fell with a crash. Cold coffee splashed her tights and shoes as the mugs clattered to the floor. \n\n\"Shit.\" Her cheeks flushed red as she scrambled to her knees to blot at the coffee. \n\n\"You okay?\" Tesh@ called out. \n\n\"Yeah, just being clumsy.\" Her co-worker resumed her conspiratorial whispering with Zane Dragonpants. \n\nShe swiped up the last of the inky spill. \"Guess I'm not wearing these again tomorrow,\" she muttered, gesturing to the stain splattered across her leggings. \n\n\"Just wear the black skirt.\" Oh. Fuck. \n\nShe froze for a handful of seconds, then slowly replaced the scattered mugs into the tub purposely avoiding his eyes. \n\nOh god, what did I do? \n\n\"I'm . . . I'm going to take this into the back.\" She rose to her feet and quickly disappeared through the kitchen door leaving him alone. So I'm not asking her tonight. Or ever. You know, because I'm a fucking creeper who remembers what she fucking wears. He gulped down the last of his latte. I should have savored it since I'm never going to be able to set foot in here again. \n\nKesh@ and Dragonpants said goodbye as he left, and he gave them a weak wave. If it works out for those two they can tell their grandkids about the gross dude who #metoo'ed their coworker the night they met. \n\nAnd I called him a douche. Fuck my life. \n\nTUESDAY \n\nI can at least apologize. That's the thing to do, right? He glanced at his watch. Nine o'clock. Nine on the nuts as the kids say. Do they say that though? Nine on the scrote? Nine on the labe maybe, depending on your configuration? He was stalling, delaying his walk through the door like a seventh grader trying to avoid the last dozen steps to the principal's office. \n\nHe sighed and forced one foot in front of the other up the step to the door. The bell sounded a lot less like Christmas this time and much more like a warning. Ladies, when you hear the bell be on your guard. It might be a fucking weirdo who knows your wardrobe. \n\nKesh@ was behind the counter again, though Dragonpants was absent. Home practicing tucking his jeans into his sneakers? He expected her to throw him a scowl, but she just gave him her usual greeting, so chipper he expected a cartoon bluebird to land on her shoulder. \n\n\"Coffee, black.\" It suited his mood. \n\n\"No muffin?\" \n\n\"Not tonight, thanks.\" He paid with his card and tacked on a five dollar tip out of guilt. \n\nThe shop was mostly empty save for a pair of grey-haired ladies whispering back and forth over over-sized cappuccino mugs. He found his usual seat in the deep nook away from the counter and other customers and pulled out his phone. He couldn't concentrate enough to read so he just flicked his thumbs absently across the glass to look like he was doing something. She's probably tell me to fuck off and throw me out. I'll say sorry and go. The Starbucks on Lake Street had had shit coffee and but the muffin were decent. I can just go there. \n\nTime slowed to a crawl. The two older women were talking about politics and their voices drifted around the corner, raspy like wrinkling parchment. Their grasp of particulars seemed more informed by red-faced AM radio hosts yelling than it did facts. He had thought waiting for his inevitable humiliation couldn't get worse. I was wrong. Worse is being stuck waiting for my inevitable humiliation while listening to the living embodiment of my racist uncle's Facebook posts. \n\nThis time it was the bathroom door that opened. Katie emerged from the short hallway, smoothing her pleated skirt over black tights with pale hands and fingers that belonged on piano keys. Wait, she's wearing the skirt? She froze when she saw him, doe eyes caught in a headlight. Heller hastily shoved his phone into his the front pocket of his jeans but didn't rise. No sudden movements. Here there be dragons. \n\nAfter a few seconds she stepped hesitatingly towards where he sat. \"Hey,\" she almost whispered. \n\n\"Hey.\" He paused, mentally fumbling for the words. \"Listen, I . . .\" \n\n\"I wore the skirt like you told me,\" she stammered, cutting him off. \n\n\"I . . . yeah.\" What the actual fuck? He found himself absently wondering what kind of skirt is was. Pencil skirt is a thing, right? That's not what she's wearing, but that's a thing, like Mad Men style. You know who would know for sure? Tom Ford. He'd know exactly what kind of skirt that was, then tell me to undo the top four buttons of my shirt and wear more black. \n\nHer cheeks were flushed red like a child in from an afternoon sledding. \"Like you told me.\" \n\nWhat the fucking actual fuck? His entire rehearsed apology was forgotten, like words erased from a chalkboard. He had imagined tonight going several different ways ranging from terrible to more terrible, but at no point was this the scenario that had played on the screen in his mind. Say something. Say fucking something! \n\n\"Good girl.\" Not that! Why in the fuck would you say that? Who the fuck says that! \n\nShe blushed deeper and lowered her eyes to the floor as if waiting. Is she waiting for me to tell her to do something? She bit her lower lip, but made no move to leave. \n\nSo tell her something. He stood, mostly to buy himself time. He was easily eight inches taller than Katie and he could see down onto the not-quite-silver, not-quite-plum part in her hair. \"Skirt again tomorrow, something pleated, but no tights.\" His voice was surprisingly firm. \"Thigh high socks, up over the knee.\" Where the fuck did that come from? Who are you? He stepped closer, the scent of her perfume filled his nose over the smell of roast coffee. She was trembling slightly, eye still on the floor. \n\n\"Nine sharp.\" Nine on the scrote. \n\nShe nodded faintly and remained still with her eyes down as he brushed past her and walked as fast as he could to the door. \n\nWEDNESDAY \n\nAlmost nine. He peered down at his watch, the dial lit by the pink glow of the coffee shop sign. He hadn't got anything done at work all day. Any time he tried to focus his thoughts just wafted way like campfire smoke. All he could think about was Katie. And whatever the fuck that was last night. \n\nA part of him was still convinced she was messing with him. He'd show up tonight, and she'd roll her eyes and give him the finger. Except she isn't fucking with me. Gone was the feeling of a prisoner making his march to the electric chair from the night before, replaced instead by excitement and curiosity. \n\nThe bells jangled as he pushed the door open. Their tone was once again merry, and the shop's familiar smell of roasted beans and baked goods greeted him like an old friend. Tesh@ wasn't working, and in her spot behind the counter stood a surly somewhat butch-looking girl with too many face piercings to count. You were great in the Hellraiser remake. \n\n\"Vanilla cap, and one of the raspberry walnut muffins.\" She grunted in affirmation and began steaming the milk for his cappuccino. Now I am become death, destroyer of muffins. He swiped his card to pay and resisted the urge to look around for Katie. Stay chill. \n\nHe found his usual spot and looked around carefully at the art adorning the walls of the alcove. It was typical coffee house fair, abstract oils from students and local artists whose biggest showings came during the summer Farmer's Market. That one is good, though. He was never positive but he thought the whirls of paint were supposed to represent musical notes. Those are chords there. He tried to lose himself in the puzzle of the canvass as he waited, but thoughts of Katie kept interrupting. Finally he just gave up and nibbled on his muffin and tried not to stare at the kitchen door. \n\nHe didn't have to wait long before it swung open, shiny steel reflecting neon. She stepped out into the shop carrying a damp rag. Her anime-colored tresses pulled into twin tails today, each curling onto her shoulders. She had on a skirt, pleated like he asked, short, with a matching black t-shirt that said BLEACHED in blocky lettering. Wednesday Night Melody is a pretty great song. That wasn't what caught his eye, though. Jesus, she did it. She was wearing the socks, black with two white strips near the top. They ran up and over her knee, leaving about two inches of bare skin before the mid-thigh hem. He knew there was a Japanese word for that but couldn't remember it. Zatoichi? No, that's the blind swordsman. \n\nShe walked straight to the alcove safely out of site of the cenobite working the counter. \"Did I do good?\" \n\nHe nodded, and she cracked a relieved smile, the corners of her mouth touching the pale red spots in her cheeks. \n\n\"Turn around,\" he ordered gently, making a spinning motion with his index finger. Her eyes opened wide, but she did after a moment pirouetting slowly in a clockwise circle. \n\nSo do I push it? He had debated with himself all day. This wasn't some random hookup in a bar or swiping right or the girl with the nose ring in accounting after three glasses of wine at the holiday party. This was alien. Where was the line? Because if there was one doing this is going to cross it. \n\nHe took a breath, deciding. Cross it. \n\n\"Stop!\" \n\nShe froze, back to him. \n\nTime to find out. \"Lift it. Slowly.\" She turned her head to look at him in shock, but after a moment she reached down to her skirt with trembling hands and gradually eased the hem upward to reveal inch after inch of pale skin, milky and smooth. She swiveled her head to look at him. \"No, don't look. Straight ahead.\" She spun her head back around. \n\nThe swell of her butt came into view, plush cheeks squeezing out from the bottom of low slung cheeky-style panties, white piped in green. He sat in silence, just staring at the plump curves of her ass. Jesus. \n\n\"Now take them off.\" He heard an audible gasp. \"Slowly.\" \n\nShe didn't respond at first. She will though. The game had gone this far, and he knew neither were done yet. After a dozen seconds she hooked her thumbs over the top of her shorts and began to slide them down. \n\n\"Like that.\" Her ass was soft and fleshy and perfectly pale from the Minneapolis winter, two scoops of vanilla ice cream. He wanted to have a taste and see if they would melt on his tongue. Once over the curve of her but the elastic went slack and they slipped half way down her thighs. He could see the outline of her labia in the shadow between her legs. \n\nI can smell her. The realization hit him like a slap. Even from here, three feet away I can smell her. That shouldn't have been possible over the breakfast smells filling the shop, but he was sure he could scent her feral tang, like a jungle cat in heat. \n\n\"All the way,\" he ordered, struggling to ignore the pressure of his hard cock tenting against denim. \"Bend at the waist, and do it slow.\" \n\nKatie complied immediately, bending her body down, heart-shaped ass pushed towards him. He could see the dark skin deep in the valley between her cheeks as she bent, and the lips of her pussy pouted together in a kiss. She stepped one foot out, then the other, and picked her panties up, her skirt falling back down to cover her butt. He silently rose to stand behind her. Her scent was stronger as he got close, something primal and dangerous. \n\nHe had to lean in to whisper in her ear. \"Good girl.\" She jerked in surprise at his breath on her neck. \"Now hand them to me.\" She brought her hand up without hesitation and handed them back over her shoulder. They were hot in his hand, like they had been baking in an oven, and visibly damp and slick in the gusset. The smell made him dizzy. He brought them to his nose, inhaling deeply the spicy scent aroma before stuffing them into the inside pocket of his jacket. \n\nI'm going all in. He imagined himself at a felt-covered table, hat pulled low over his eyes, face tight as he pushed a pile of chips into the center. All in. He brought his other hand up to gently squeeze her ass through the skirt. Her breath caught, but she didn't pull away. \"Skirt again tomorrow, socks again, but this time no panties.\" She nodded slowly. \"I'll be here at 8 again.\" Eight on the labe. \"Before I get here I want you to go in there.\" He gestured towards the door to the bathroom in the far corner of the store down a short hall. \"And I want you to touch yourself.\" She shuddered at the words. \"No coming. You don't have permission for that yet, but touch yourself until you're close.\" \n\nHe leaned in close enough that she could feel his breath on her neck. She was shivering like she was chilled, he skin pricked with goose-flesh. \n\n\"Do you understand?\" \n\n\"Yes daddy,\" she whispered, barely perceptible. \n\nHe almost came when she said it. \n\nTHURSDAY \n\nHeller tapped the pocket of his jacket to make sure the package was still in place. It was there, a heavy lump sheathed in a faux velvet draw-string pouch. Because that would be awkward to have the cleaning lady find in my cubical. He had to fight to not throw the front door to the shop wide open. Be cool. \n\nHe forced himself to be casual as he walked inside, greeted by the familiar bell tinkle and the sight of the perky blond behind the counter. Tesh@ solved the puzzle box and banished Pinhead's daughter. Good for her. Dragonpants stood next to the register, bedazzled lizard climbing the denim of his left leg like a gaudy tattoo. Heller greeted both and placed his order before finding his usual seat at the back of the secluded alcove. Someone had left two half-empty mugs of cappuccino on the tables on either side of his chair and their contents filled the corner with warm pumpkin spice scent. \n\nHe ran his fingers through his hair as he waited. Need a haircut. Should I get that fade/pompadour thing every guy my age has? But then I have the same fade/pompadour every guy my age has. Plus that seems like a colossal pain in the ass to maintain. He rolled his eyes at his own thoughts. Ugh. That was one Huey Lewis reference way from an American Psycho monologue. ",
        "The bathroom doors swung open exactly on time. She had socks on again, black and topped with kitty ears and stylized whiskers that ended inches below the hem of a bright cobalt skirt. The tattoos of climbing vines that began at her elbows disappeared up the short sleeves of a faded replica Joy Division tee, the Unknown Pleasures logo cracked and peeling. Hard nipples the size of grapes poked at the thin fabric. \n\nHer eyes found him right away. Her cheeks were flushed red like a kid on a soup can, and as she swayed towards his seat he could see the dew drops of sweat on her forehead. \n\n\"I came close but stopped, like you said.\" She was breathless. \n\nNo going back now. \n\n\"Show me.\" \n\nShe cast a furtive glance around, but no one was in sight of the nook. Her hands fluttered to the hem of her skirt and her face somehow managed to flush an even deeper red. The pleats slowly rose, sliding up her thighs until the razor slit of her sex came into view followed by the dark stubble of her bush. She had shaved at some point in the past, but her hair had begun to grow back, the short black bristles a stark contrast against the pale flesh of her mount. There was something about jet stubble that excited him. It looks . . . careless? Spontaneous maybe. Dirty definitely. \n\n\"Closer.\" \n\nShe took a tentative step, still arm's length away. \n\n\"Closer!\" he repeated, firmer. \n\nKate stepped again. \n\nHe looked up into wide Disney eyes as blue as an Easter egg. \"I'm not going to ask again.\" \n\nShe a long step forward, so close he could see the hard nub of her clit peeking out between the scalpel slit of her pubis. Her tight lips glistened, wet and oily, and the flesh blushed pink like summer berries. Her smell was strong, intoxicating, wild. He leaned forward until he was so close her skin prickled at the touch of his breath. He had to clench his fists to keep from burying his tongue between the slick folds. Instead he stood. She was trembling as he took her small hand in his, letting the veil of her skirt drop back into place. He brought it up to his nose. Her fingers smelled strongly of her cunt and were still sticky with drying juice. He kissed the back of her hand before letting it go. \n\n\"How close did you get?\" \n\n\"Close, right to the edge.\" \n\nThe visual popped into his mind, Kate in the shop's bathroom, back against the wall, skirt bunched at her waist, fingers stroking her clit until her toes curled. \n\n\"What were you thinking of when you did it?\" \n\nThere was a pause as her eyes dropped to her shoes. \"You, daddy.\" \n\nJesus, I wouldn't have thought getting called that worked, but fuck does it. He reached into the inside pocket of his sport coat and pulled out the bulky little bundle. \n\n\"Tomorrow socks, skirt, no panties again, no coming. And don't shower. I want you dirty.\" \n\nShe nodded, and he pressed the shape into her hand. Katie looked up at him with questioning eyes. \n\n\"Open it. It's for tomorrow, too.\" \n\nShe carefully tugged loose the strings, letting out a gasp when she saw knobby stainless steel butt plug. \n\n\"I've never . . .\" she began. \n\n\"You will. You know how I know?\" \n\nKatie swallowed, nodding. \n\n\"Because I'm a good girl.\" \n\nFRIDAY \n\nHeller had left work early an hour early. I wasn't getting a goddamn thing done anyway. He had tried to keep himself distracted with errands and a trip to the gym, but that had been as unproductive as his work day. His mind was on Katie, and her smile and the way she smelled when excited. And the way she called me daddy. Because fuck. In his mind he had played over what to do tonight a thousand times, a million times, but in the end he knew this was the end game, the point where you tipped over the king and said \"checkmate\". Or did your opponent tip over the king when you said checkmate? How do I not know how chess works? \n\nIt was twenty to nine, earlier than he had arrived the previous nights by design. Pinhead's daughter was working again, her face all scowls and flashes of metal. She took his order and set about making his latte. Or trying to open a rift to the hell dimension where she would summon forth her fellow death priests to end life as we know it. Either or. \n\nHe absconded to his corner and set his cup on the table but didn't sit. Instead he strolled to the short hall that led to the bathroom. The butch barrista didn't even look his direction. Must be about to open the portal. He wrapped his knuckles twice on the knotty wood and heard a startled flutter from within. \n\n\"Just a moment!\" The voice was panicked, breathless. \n\nHe waited for the sound of the latch, and pushed his way into the cramped space before Katie could react. Like the night before she was flush, forehead damp. \n\n\"You can't be in here!\" she hissed. \n\nHe flicked latch on the door to lock it in response. The bathroom was small, maybe six by six, with a lone bowl on one wall and a sink and large mirror on the other. \n\n\"Did you wear it?\" She had the long socks on from Tuesday with the pleated skirt, and plain grey v-neck tee-shirt today, but that part of her wardrobe wasn't what he meant. \n\n\"Yes,\" she stammered. She gave a muffled yelp as he grabbed her waist and spun her away from him until she was facing the sink. He liked the way his hand fit against the swell of her hips, all soft curves. They were staring at one another in the mirror, her gray-blue eyes wide with excitement. That's excitement, right? Because if not this shit is coming across as super rapey. She bit her bottom lip between her teeth and shivered. His cock was crowbar stiff and she pushed back against it. Yeah, that's excitement. \n\nHe slid his hands over her full curves then down her legs past the hem of her skirt. Never breaking eye contact he reversed direction, sliding up beneath the thin cotton until he felt the ripe half-moons of her ass. Her cheeks filled both his big hands, soft and plush, and he squeezed them gently. \n\n\"Were you touching yourself?\" he asked, leaning forward so close his breath made the hairs on her neck dance. \n\n\"Yes.\" \n\n\"What hand did you use?\" \n\nShe held up her right, the slender fingers still glistening. \n\n\"Let me see your taste yourself.\" \n\nKatie brought them to her mouth and tentatively licked her index finger. \n\n\"More.\" \n\nAt his words she sucked her digit between her lips, fellating herself with a careful, steady in and out motion. \n\nHe slid one hand inward, fingertips brushing past the cool jeweled head of the plug he had given her the night before until he felt the heat between her thighs. Katie leaned forward, arching her back and pushing her rear up. She was swampy, so wet it felt like he was running his fingers through baby oil. He curled his fingers upward, spread to either side of her clit and began to stroke her, careful to not touch the little nub directly. Remember your technique. Tease it first. He had dated a semi-religious girl in high school who wanted her to save herself for marriage. Luckily her god seemed down with hand stuff, so he had perfected his technique. And lo the Lord spoke unto the masses and said 'Fornication shall damn thee; thus let my children finger bang unto shuddering completion, today and all the days behind the auditorium after track practice.' Book of Hand Job, chapter 69, verse 1. \n\nShe gasped as he teased her clit, eyes locked onto his through the mirror, and she spread her legs instinctively to give him access. He leaned down and brushed his lips gently across the back of her neck. He slipped his other hand from her ass and slid up the front of her tee-shirt. No bra. Her breast was small and firm, filling his palm. Her nipple was the diameter of a wine cork and he gently rolled it between his thumb and forefinger in time with the motion between her thighs. \n\n\"There are people right outside, only a few feet away,\" he lied. The shop had been quiet, but he knew the thought would excite her. \"And here you are, getting fingered by a guy you barely know.\" \n\nShe shuddered, eyes rolling towards the ceiling. Her clit was a stiff as her nipple, and he lightly grazed it with dancing fingers. \n\n\"Are . . . are you going to fuck me, daddy?\" she panted. \n\n\"Maybe.\" Absolutely fucking yes. \"Do you deserve it?\" \n\n\"I think so.\" Her voice trembled along with her lithe body. \"I did everything you told me.\" \n\nYou did,\" he agreed. \"You wore the skirt.\" Not that I intended to tell you to do that. \"You wore the socks. You went bare. And put you put in the plug.\" \n\n\"See? I'm a good girl.\" \n\n\"And you didn't cum at all, right?\" \n\nShe didn't answer. \n\nHe pinched her nipple, not hard, but with enough pressure to make her gasp. \n\n\"Did you?\" \n\nThere was a ripe pause before her answer. \"Last night. I couldn't help it, I was trying out the plug and I just . . .\" \n\n\"You just what?\" He sped up the motion on her clit. \n\n\"I used my fingers and made myself cum.\" \n\n\"What were you thinking of when you did it?\" \n\n\"You daddy. You holding me down, fucking me. Using me. Cumming in me.\" She was grinding against his fingers now, butter-slick and hot as a sunburn. \n\nHe released her breast and used the hand to free his erection. It jutted forth from faded denim, so hard it hurt. \n\n\"Do you deserve that after disobeying?\" Oh shit. What was that his friends with kids said, something about never threatening a punishment if you aren't willing to follow through. And I sure as shit don't want to follow through on this punishment. \n\nShe pushed the pillow softness of her ass back against his cock, but he leaned away. He knew somehow that it was important to make her wait, to keep the game going a little longer. \n\n\"Please!\" she begged, voice a low hiss. \"I promise I won't disobey next time.\" \n\n\"Rewarding you for bad behavior doesn't seem like a good idea. Only good girls get rewards.\" \n\nHe began to rub his cock head against the pudgy flesh of her ass, smearing a squiggly line of pre-cum along her skin like a snail trail. Her clit was engorged and stiff beneath his finger, hard as a pencil eraser. \n\n\"You could . . . fuck my ass,\" she finished with a whisper. \n\n\"I could,\" he responded, the hesitation in his voice as false as eyelashes. I mean, I actually could. She's been wearing the plug. \n\n\"Because I was bad you could fuck my ass.\" She spread her legs further, an invitation. \n\nHe found the flanged base of the plug with his fingers. It was slick with grease. He slipped his fingers around the edges and applied the slightest pressure making her eyes bulge. \n\n\"Push,\" he instructed. She did, eyes widening. A small grunt escaped her lips as the bell sipped free from her ring with a wet pop. He set the stainless steel plug onto the lip of the sink. \n\n\"Are you . . .\" she began, but didn't finish the thought as he placed his hand between her should blades, pressing her forward until her forehead nearly touched the mirror. He flipped his skirt up with the other hand, then guided his straining cock into the valley between her cheeks, rubbing the engorged head with the lube smeared though her cleft. \n\n\"Look at me,\" he ordered, voice never breaking a whisper. She locked her eyes onto his. \"Where am I going to fuck you?\" \n\n\"Where it's dirty,\" she whispered. \n\n\"Say it.\" \n\n\"You're going to fuck my ass, Daddy.\" \n\nJesus fuck, am I. \n\nKatie arched her back as the head of his cock kissed her ring. He pushed a glob of spit out between his lips, letting it fall into the dark cleft to splat against the junction of his cock and her ass lips. Perfect shot. Lebron James, eat your heart out. It felt cool compared to the heat radiating from her skin, like ice on a blister. \n\n\"Go slow,\" she whispered, bearing down as he nudged forward. Her cheeks flushed as she strained, pushing, bottom between her teeth. She reached back with both hands and grasped her ass cheeks, spreading herself open. \n\nHe slipped forward an inch, just the head popping inside. She gasped, in surprise or maybe in discomfort, and squeezed down on him three times in rapid succession. \n\n\"Just . . . give me a second, okay?\" \n\nHe nodded, and cupped his hand in the sweep of her waist. His hand fit perfectly in the contour. She was still chewing on her lower lip and taking short, controlled breaths. \n\n\"Tell me when.\" Just not yet. Please not yet, because I'm about to lose it, right fucking now. A familiar ball of fire boiled up at the base of his balls, a miniature sun. He willed it back down with teeth clenched, fighting against orgasm with controlled breaths of his own. \n\nShe began to rock, small swaying movements back and forth. \n\n\"Do you like this?\" she panted. \"Do you like being in my ass?\" Her eyes seemed to blaze, and they never left his gaze through the mirror. \n\nHe thrust forward to meet her rocking in response, knocking a gasp from between her pursed lips. The tight ring of her ass milked him in time with her heartbeat. There was a rustling beneath her skirt, and he felt her knuckles graze against his swaying scrotum as she stroked herself. \n\nThe only sound in the room for several minutes was their stifled breathing and the wet sound of skin on skin. Gradually the hot burning feeling in his groin was spreading, growing again. Think about things that are cold, think about bee stings. Think about anything other than how tight her fucking ass is, and how absurdly sexy she looks with her skirt bunched up around her waist, and her fucking eyes, and her fucking lips, and her fucking everything. \n\nKatie broke the silence. \"I'm getting . . . close.\" Her breath was ragged. \n\nOh thank fucking god. He picked up his pace, pulling out until just the head of his cock stayed locked inside the satin grip of her ring before thrusting back in. Her head lolled back with each thrust, but she kept her eyes on his and kept her fingers dancing to a rhythm only she could hear. \n\nHer eyes rolled back when she came seconds later, and her entire body convulsed. It was too much, and he let go, the explosion in his groin also detonating in his brain, a white flash like the end of the world. His cock pulsed a dozen times, each stronger than the one before as he splattered her colon with thick ropes of semen. It felt like his life force was leaving his body, and as his orgasm subsided he collapsed, crushing her to the sink beneath her, his rigid cock still embedded in her ass. She lay motionless, the sweat from his body soaking into her shirt. \n\nMinutes passed before Heller raised himself up off her back. \n\n\"Was I good, daddy?\" She was still looking at him in the glass of the mirror, and her words made his dick pulse one final time. \n\n\"You were bad, but it was the fucking best.\" He slowly eased out of her greedy asshole with a wet plopping sound. \n\nShe spun and collapsed seated onto the toilet, knees spread lewdly. Her asshole let loose with a wet splatter, burping his thick seed into the water. \"Sorry. There's not really a dignified way to do that and I couldn't hold it.\" \n\nAt this point no sense in playing coy I suppose. He had to admit he found her lack of self-consciousness charming. \n\nHe shrugged. \"In some countries the chef considers that a compliment.\" \n\nKatie let out a shocked laugh followed by another wet cum fart, and had to clasp her hands over her mouth to keep from breaking up. \n\n\"Can I tell you something?\" she asked after regaining her composure. Her face was serious now. \"Just so you know, I don't do this kind of thing.\" \n\n\"Fart out jizz in front of the guy who just fucked you in the ass at work?\" \n\nShe rolled her eyes dramatically and a smile touched the corner of her lips. \"Well, that, but . . . like literally everything. I'm generally pretty vanilla with sex stuff.\" \n\nHeller felt a weight lift off his shoulders he hadn't even realized was there. \"Really? Because I'm totally not the give-you-orders guy.\" Unless I'm being a fucking idiot doing it on accident. \"I mean, it was fun. Like really, really fun. But I'm not sure that can be my only thing.\" \n\nShe nodded. \"Like this totally worked for me. I had no idea I wanted to be told what to do until you told me to do it. And the daddy thing? Fuck me.\" \n\nFuck me indeed. \n\n\"But not sure I can take orders all the time. It's just too much.\" \n\n\"So how about tomorrow night I make you dinner?\" \n\nShe unspooled a fistful of toilet paper and reached back between her cheeks to wipe carefully. \"Dinner?\" \n\n\"Just dinner.\" \n\n\"Yeah?\" \n\n\"Yeah. Nothing else, and nothing expected. I make a decent crab ravioli, no lie.\" \n\nShe nodded slowly, then stood and let her skirt fall back into place to cover the glistening triangular stubble of her bush. \n\n\"Dinner would be good.\" \n\n\"Okay.\" \n\n\"Okay.\" She grabbed the plug from the porcelain, looking around in confusion at what to do with it. \n\n\"Here,\" he extended a hand palm up.\" \n\n\"No,\" she shook him off after a second before reaching back beneath her skirt. When her hand returned it was empty. \n\nBest game of hide-and-seek ever. \n\n\"But just because it's not what I usually do doesn't mean I don't still want to do it. Just not tomorrow night. \n\n\"Okay.\" \n\n\"Unless I do.\" \n\n\"Okay.\" \n\n\"I'm working nights again next week. You could come in.\" \n\n\"I could.\" \n\n\"I might spill.\" \n\n\"You might,\" he agreed."
    ],
    "authorname": "Apathalene",
    "tags": [
        "buttplug",
        "mild dominance",
        "anal",
        "anal sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-barrista"
}