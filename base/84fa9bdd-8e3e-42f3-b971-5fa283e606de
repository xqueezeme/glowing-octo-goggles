{
    "title": "Nerdcam Pt. 03",
    "pages": [
        "A stack of old paperbacks teetered where it arched out from a shelf overhead, then stilled again. Anna watched apprehensively for several seconds. When no further movement occurred, she hefted her tote of unsorted incoming and moved further down the aisle. Settling in front of a new set of shelves, she checked the genre, then resumed the always challenging task of trying to find space for the books in the tote.\n\nThis usually involved creative stacking -- an art in which she was gaining some skill. That said, she couldn't quite imagine ever attaining the uncanny ability of her employer, the shop's proprietor. Mr. Lintz, (He had suggested she call him Elias, but she would always think of him as Mr. Lintz), was in his mid sixties, of average height, bearded, and somehow both bookish and gregarious -- in a very calm, well-spoken sort of way. Aside from coming across as intelligent and self-possessed, he had a bizarrely encyclopedic memory -- at least when it came to the shop; Shelf Indulgence.\n\nNot only did he remember everything he had in stock, and where to find it in the shop, but he also seemed to remember everyone who visited while he was working. Returning customers were often dumbfouded when Mr. Lintz greeted them warmly and reminded them of what they had asked about or purchased on their previous visit. But it wasn't his memory that had inspired Anna to invent an amusing fictional backstory for Mr. Lintz. It was his ability to stack books in ways that reminded her of an Escher painting. Or that one scene in Labyrinth.\n\nIt had been a slow afternoon, a couple of weeks after she first got the job. She had watched Mr. Lintz play a nail-biting game of reverse-Jenga with a towering stack of romance novels. A helical stair of cheap smut had risen, to be surmounted by a buttressed arch which Mr. Lintz had required a step ladder to finish.\n\nWhile Anna had waited, incredulous, for the whole thing to collapse, possibly killing her employer, she had entertained the thought that he was like some kind of eccentric wizard. And she had whiled away her time sitting at the register by daydreaming about Mr. Lintz as a librarian at that wizarding school in the Harry Potter books. He would have been very good at the job. Maybe too good.\n\nThat would explain why he was here, running a used book store, now. They had kicked him out because he had been meddling with the laws of physics in order to more efficiently use the space in the library. Or perhaps because he had endangered the students by building whole mazes and catacombs, bricked with the heavy, leather bound tomes.\n\nBeing the only employee, it was a little inside joke she had only shared with herself, but she thought Jack might get a laugh out of it. Especially if he ever visited the shop.\n\nTaking her sweet time sorting and shelving books, Anna indulged in the fresh memories of her recent visit to Jack's place. She winced briefly at the thought of the brazen display she had put on after entering his apartment. Not exactly a classy move, but she had been really horny, and he hadn't seemed to mind.\n\nThen she smiled and shook her head, remembering how she had 'booped' his nose with the tip of her dick. The wrinkles at the corners of his eyes as he looked up at her, laughing. How they had laughed together, at the sillyness of the moment. It might have broken the sexual tension, but it had also dispelled a lot of the lingering nervousness.\n\nEvents from that night played out in her mind, and she saw him looking up at her. Holding her gaze with a longing, knowing look as his warm breath touched her. Followed by his lips, his hot mouth, his tongue...\n\nAnna swallowed and made an effort to come back to the present. Maybe better if she skipped the bulk of their time together that night. At least until she wasn't minding the shop alone. She'd end up giving herself blueballs otherwise. And she could always pick up where she had left off when she got home from work.\n\nRealizing she had been staring at the spine of the same book for who knew how long, she resumed her work. Given the nature of the work, it wasn't long before she was daydreaming again. Leaving the sexy fun time memories for later, she thought of what had come after.\n\nShe had gone into Jack's kitchen for a drink of water and noticed some work he had left on the table. Looking at the topmost sheet, she had recognized the layout of something like a comic book. Curious, she had taken a closer look at the penciled artwork. There were word bubbles and spaces clearly meant for narration or internal monologue, but the text hadn't been added yet. After scanning a couple pages, Anna had been surprised to realize she had a very good idea of what the text would be.\n\nWhen she asked Jack about it, he seemed a little embarassed while admitting that he had been inspired to draw up a little comic depicting their meeting. It started with a short montage of images explaining their meeting interspersed with blanks where the accompanying text would go. Anna's tattoos were shown and explained. Some of them. Then there were a few panels showing the passage of time before their fateful meeting.\n\nAnna had grinned despite herself, seeing the incident from his point of view. And again when she saw that it had been one of her tattoos that had first tipped him off about who she was.\n\nJack had joined her in the kitchen, pausing to dab here and there with some paper towels before moving to look over her shoulder.\n\n\"You've got skill, Nerd.\" she'd said, nudging him with her hip.\n\nHe had slid his arms around her just under her breasts and rested his chin on her shoulder.\n\n\"You think so?\"\n\n\"Well, you made me look good,\" she turned her head enough to look at him, \"Guess I made an impression, huh?\"\n\n\"Nah,\" Jack smirked, \"It was only cardboard, and you didn't hit me that hard.\"\n\nLeaning back against him, she had nipped at his ear.\n\n\"Maybe I should try harder next time.\"\n\n\"Mm, I joke, but I'm glad you like it. And yeah, you definitely made an impression.\"\n\nThey had been quiet for a minute while she had looked through the rest of the pages. Jack had moved her hair aside to kiss her neck before moving away.\n\n\"Kinda getting the urge to bend you over the table, so... Unless you wanna join me for a shower...\" he had spoken while retrieving his boxers from where they'd been dropped.\n\n\"Pretty sure we'd end up christening the shower,\" she'd replied, \"but I will use your bathroom before you get in there, if you don't mind.\"\n\nWhen she had finally dressed and was leaving he had seen her off, lingering in his doorway to watch her go. That night she had fallen asleep thinking about what they might get up to after they finally went out for sandwiches. And it wasn't all about sex, either -- although that certainly featured.\n\nIt was some five hours later that she stood before Jack's door, having finished work, and then stopped in at her apartment between. She knocked. While waiting for him to come to the door she momentarily wondered if he might be out. Then immediately dismissed the idea as highly unlikely. He wasn't an actual shut in, but he also didn't go out a lot, and worked at home to boot.\n\nAnd as it turned out, she only had to wait a few moments. The door opened far enough for the chain to catch. Jack peered out through the gap.\n\n\"Hey man, I don't really have time-\" he began before seeing who was there. \"Oh. Hey.\"\n\nAnna tipped her head to one side.\n\n\"Hey. Don't have time for what?\"\n\nJack undid the chain and opened the door.\n\n\"To smoke up.\" he explained. \"Thought it might be the guy across the hall. Again. He's always coming over asking if I wanna get high with him. He gets paranoid when he smokes alone.\"\n\n\"Oh. I kinda thought that was just a made up stereotype. Or trope. Whatever you'd call it.\"\n\n\"Getting paranoid? Yeah, I thought it only happened with harder stuff like meth, but apparently...\" Jack replied.\n\n\"Huh. Learn something every day, huh?\" Anna gave him a look that said they had already definitely spent more than enough time on that subject.\n\n\"Uh, yeah. Did you want to come in, or...\"\n\n\"Not tonight,\" Anna pulled a folded scrap of paper from a pocket and held it out, \"I just came over to give you this.\"\n\nJack took the sheet and unfolded it.\n\n\"My work schedule for this week,\" Anna explained while Jack scanned the sheet.\n\n\"Have a look and let me know if there's a good day to meet up. You know, for sandwiches.\"\n\nJack glanced up, smiling.\n\n\"Okay, cool. So... do you have a phone or should I come knock on your door?\"\n\n\"See that line of numbers at the bottom?\" Anna pointed at the paper in his hand, \"That's my phone number smart guy.\"\n\nJack skipped down to the bottom of the sheet and found that there was, indeed, a line of digits.\n\n\"Is that what that is?\"\n\n\"Uh huh.\" Anna confirmed.\n\n\"Oh good. Cause my next suggestion was gonna be the Rocky method.\"\n\n\"I'm scared to ask.\"\n\n\"That's where I come out into the hall and call you -- like; 'Hey, yo!'\" Jack gave a mediocre attempt at Sylvester Stallone's accent.\n\nAnna gave him a look.\n\n\"Yeah, okay, that was pretty lame.\"\n\n\"Yeah, it was.\" Anna agreed. \"I actually like Rocky, but that was still lame.\"\n\n\"Alright. Go away and I'll call you if I can decipher your handwriting.\" Jack made a show of turning the sheet 90 degrees and squinting at it.\n\n\"'Go away', and you're insulting my handwriting?\"\n\n\"Um, go away, bad handwriting,\" Jack counted off on the fingers of his free hand, \"Oh, there was one other thing.\"\n\nAnna's expression suggested it had better be a good thing.\n\nJack folded the sheet and stuffed it in a pocket before abruptly stepping close to Anna. Gently but firmly tipping her chin up with his right hand, he bent to kiss her. With his left hand he reached around her and down to bunch the top of her jeans in his fist. He pulled up and in, causing the jeans to ride up. This earned a surprised gasp as Anna rose on her toes. At the same time, she was moving her own hands under Jack's shirt and up his back. Moaning into the kiss, she dragged her nails across his back -- not quite hard enough to really hurt.\n\nEventually they parted, remaining close. Jack lowered Anna and loosened his grip on her jeans. She rolled her lower lip in, sucking moisture from it before looking up into Jack's eyes.\n\n\"Mm, okay. Just so you understand... That's not always gonna work.\"\n\n\"Fair enough.\"\n\n\"Uh huh. Also,\" she spoke quietly, \"The thing with my pants -- kinda hot, but you almost changed my voice, and I've already got it where I like it.\"\n\n\"Oh,\" Jack winced, \"Sorry. I could kiss it, er, them-\"\n\n\"After sandwiches.\" Anna interrupted, smiling and taking a small step back.\n\n\"Right, right,\" Jack's tone sobered somewhat, \"I'll call you. Have a good night, Anna,\"\n\n\"Goodnight Jack.\"\n\nAnna slid her fingers into her back pockets, backing up another step before turning to walk down to her door. She half turned to glance back, finding Jack still standing where she had left him, watching her go. With a certain warmth in her chest, she unlocked her door and went inside.\n\nWhile Anna turned on her TV and console of choice, plopping down on the couch with a wireless controller, Jack went back into his apartment in search of his phone. When he found it he added Anna's number to his contacts list. In entering her info, it occurred to him that he had no idea about her last name. He would have to ask.\n\nSetting the phone aside, he read over the schedule again. His own schedule was highly flexible. He had a backlog on the queue of pages for his webcomic. A couple of commissions, but they wouldn't take long. Taking a day off wouldn't be a problem.\n\nWith that duly considered, Jack stared off for about a minute before shrugging and grabbing his phone.\n\nAnna picked up on the third ring. Jack could hear simulated gunfire and explosions from Anna's game in the background.\n\n\"Hello?\"\n\n\"Uh, hey. It's Jack.\"\n\n\"Oh, that was quick.\"\n\n\"Yeah. Well, turns out my schedule is pretty open, so... Any time is good for me. I see you have the weekend off.\"\n\n\"Yeah. I haven't been workin' there too long, but so far I usually have weekends off.\"\n\n\"Cool.\"\n\nThere was a pause during which the clicking and clacking of Anna's controller joined the sound effects in the background.\n\n\"Aaaand the match is a loss. Oh well, that was a shit team. Sorry. You have my attention now. Um. Yeah. Saturday, then?\"\n\nJack chuckled.\n\n\"It's cool. Saturday is good. Were you thinking lunch or supper? Or something else?\" he asked.\n\n\"No, I wanna try this sandwich place you were talking about. So, that's more of a lunch thing.\"\n\n\"The place is called Ellison's. I can give you directions if you need 'em.\" Jack offered.\n\n\"I'll just get 'em on the ol' interwebs, thanks. And I'll see you there around, hmm... I'm not gonna worry about getting up early on a day off. Is one'o'clock okay?\"\n\n\"One is good.\" Jack confirmed.\n\n\"Your treat?\"\n\n\"Hack the planet?\" Jack countered with surprising alacrity.\n\n\"Pfft, wow,\" Anna laughed, \"Really milking that for all it's worth, huh Nerd?\"\n\n\"Are we still talkign about your tattoo, or...\" Jack trailed off suggestively.\n\n\"I refer you to my new catchphrase; 'after sandwiches.'\" Anna replied.\n\n\"Arg. It's like Kryptonite. Alright, Beautiful, I'll let you get back to sucking at your game.\"\n\nAnna gasped in mock outrage.\n\n\"Keep talkin' smack and it could be 'after three dates'.\"\n\nJack actually coughed on his own breath.\n\n\"I take it back,\" he half laughed -- half sputtered, \"You're a goddess of gaming.\"\n\n\"Yeaaah. I wouldn't do that, though. That'd hurt me as much as it would you. I'll have to think of some other punishment.\"\n\n\"Good to know, good to know. So, Saturday at one. Ellison's. But if you need help moving boxes or like, you need a cup of sugar or something, you know where to find me.\"\n\n\"I do. And I'll remember, if I'm... baking a cake.\" Anna joked.\n\n\"Hmm... something about glazing your cake? After sandwiches.\" Jack replied, his tone becoming a little more serious. \"Alright. I'll talk to you later. Goodnight Anna.\"\n\nAnna smiled, eyes drifting across the middle distance. He sounded so earnest, and a little reluctant at the end there. Which seemed all the more meaningful given his usual nonchalance and humor.\n\n\"Yeah. Goodnight Jack.\"\n\nThursday came and went, unremarkable. Anna passed much of the day sitting at the register at Shelf Indulgence, reading a horror novel that had looked promising. Jack, meanwhile, worked diligently to finish the commissions he had taken on. When he took a break late in the afternoon, he spent some time picking up around the place -- a bit more thoroughly than he normally would. They each, at some point not long before deciding to call it a day, thought about texting or calling the other. And each decided to wait.\n\nJack spent a little while with a pencil and a small sketchpad, trying to capture some of Anna's facial expressions. Down the hall, Anna finished preparing a little side project of her own.\n\nJack was still sketching, thinking, sketching, when Anna replaced inkpen and clear tape in a kitchen drawer. She padded back to her bathroom to wash up, brush her teeth and hair, and relieve herself. Stripping down as she went from bathroom to bedroom, she left her clothes on the broad hardwood trunk at the foot of her bed. Crawling in between the sheets she yawned, adjusted her hair so that she wasn't laying on it, and nuzzled her face into the pillow. In doing so, she unintentionally brought up the memory of moving down over Jack's body.\n\nShe pressed a purr-like murmur into the pillow while remembering how she had licked her way down his tummy.\n\nThe alarm on her phone woke Anna the next morning. Turning off the alarm, she rose and stretched. A slight chill in the air caused goosebumps to break out over her bare skin. With a shiver, she stopped at her dresser and closet for clothes before heading for the shower. While waiting for the water to heat up, she remembered her last thoughts from the night before.\n\nMust have been more tired than she realized, to pass out with that in her head. Oh well. She could wait. Probably. She decided to focus on hurrying up and getting ready for work, lest her memory and imagination conspire to test her.\n\nIt was the better part of an hour later when Anna left her apartment with her 'side project' in hand. It was a couple of hours later still when Jack finally rolled out of bed. And yet another hour -- during which he did the usual bathroom routine, dressed, and had buttered toast with a mug of coffee -- before he emerged from his apartment to go down and check his mail.\n\nIn doing so he very nearly tripped over a large cardboard box someone had left just to the side of his door.\n\n\"What the-\"\n\nGlaring at the box in irritated surprise, he noticed a sheet of paper taped along one side to the top of the box. Written large, in familiar looping script, was the word 'lift.' Jack stared at it for a few seconds, frowning, before working a fingertip under the sheet and flipping it over. The writing on the other side was small enough that Jack copped a squat to get closer to read it.\n\n'Hello Jack. I wanted to apologize for knocking you over the other day. I hope you can forgive me. Oh, Anna says 'Hey Nerd.'\n\nSincerely,\n\nAnna's big empty box'\n\nJack shook his head, then chuckled to himself. Opening his door, he scooted the box inside with his foot and re-locked the door.\n\nWhile he was taking the contents from his mailbox -- one bill and a handful of junk mail -- he considered leaving a note wedged in Anna's box... about her box. He decided against it. An idea about future practical jokes had taken seed in his mind.\n\nSo he took his mail back up to his apartment, dealt with the bill, chucked the junk, and went back to his room to start his work day.\n\nHe checked various email accounts and those social media platforms on which he bothered to maintain a presence. After an hour of replying here and posting there, he finally powered up his art tablet and pulled up the usual array of files and things on his desktop to work on the comic.\n\nMeanwhile, elsewhere in town, Anna half listened for customers while moving about in the cramped back room of Shelf Indulgence. The stacks of boxes and loose books concealed the walls almost completely. The cave-like room was lit by a single bare bulb, which cast a yellowish light. The air was thick with the scents of books old and new, and cardboard, and time.\n\nIt would be a bad time if she were claustrophobic, but Anna found the space oddly comfortable. Cozy even. It reminded her of her childhood -- poking around in the basement of the home her parents still lived in up state.\n\nSetting her nearly empty Starbucks cup down atop a semi-permanent stack of boxes, she set to work sorting through a recent delivery of books which Mr. Lintz had purchased at a local auction. Customers were few, as was common in the morning. Mr. Lintz arrived around noon, and Anna took her luch break.\n\nIt would be mid afternoon before Jack noticed the text she sent while she sat munching on a chicken salad from a grocery store near the shop.\n\nNaturally Jack had music playing while he worked. When, around three, he went out to the kitchen to put something in his stomach, he noticed Anna's box still sitting near the door. Thinking he might at least leave her a little acknowledgement of her admittedly amusing prank, he grabbed his phone. Finding a message notification waiting for him, he tapped on it.\n\n'Hey Nerd. On lunch break. Hows the shut in life treating you? Have you gone outside today?'\n\n\"Smartass.\" Jack murmured, his voice holding amusement and perhaps a hint of admiration.\n\nHe sent back:\n\n'Hey Beautiful. As a matter of fact, I ran into a friend of yours. I'll send hospital bill.'",
        "Setting the phone on the kitchen table, he went to the fridge, then the cupboards. He sighed. So much for the shut in life. After a moment's thought, he decided to stock up a bit on groceries. At least, more than he normally would. That way if Anna stopped by during the coming week, he could offer her something. Or maybe he'd ask her over for supper, assuming things were still going well. While thinking about what he should actually pick up, he prepared to venture out. As he opened the door to go, he nudged Anna's box aside with a foot, as if it were a small dog that might scamper out.\n\n\"Don't piss on the carpet, alright?\" he muttered before closing the door behind him.\n\nLater, after returning and putting away groceries, and cooking, Jack ate standing up in the kitchen. He was halfway done with his bell peppers and beef (nothing special), when his phone dinged. Setting his bowl on the counter, he dug the phone out of a pocket and opened the new message.\n\n'Lmao. So you've been outside. Do anything exciting? Also; you're jk about the hospital, right?'\n\nJack sent a reply before pocketing the phone and finishing his meal.\n\n'Yeah -- jk about the hospital. Went grocery shopping. Made stirfry -- sort of. Only a little burnt :)'\n\nHe had only just finished eating and set his bowl in the sink when his phone dinged again.\n\n'Stirfry sounds good. I nuked a ravioli 'healthy meal' when I got home. Don't judge. lol. Gonna play some Realm of Battlecraft. What you up to?'\n\nJack walked over to plop down on the couch.\n\n'Not a lot.' he tapped in, 'Might play some Halo or COD.'\n\nHe had to wait less than a minute for her reply this time.\n\n'Cool. btw, sometimes I play til I'm sleepy and basically sleep walk to bed. So if I don't message again, that's why. Looking forward to tomorrow tho.'\n\nJack smiled, imagining a half-asleep Anna tottering off to bed.\n\n'Gotcha. Good luck and goodnight then. I'll see ya tomorrow.'\n\nJack arrived at Ellison's at about a quarter to one. He was dressed casual, but he had gone to some effort to make himself presentable. He had shaved, run a comb through his hair, and dabbed on an unobtrusive amount of cologne.\n\nUpon entering, Jack approached the counter and spoke to the old woman standing behind it, whom he knew as 'Miss Grace.'\n\n\"Uh, hi. I'm supposed to meet someone for lunch. You mind if I wait and order when they get here?\"\n\n\"That's fine, sweetie. You want somethin' to drink?\"\n\n\"Large Mountain Dew?\" Jack wasn't sure why he made it sound like a question when he knew they served it.\n\n\"Alright. You go have a seat and I'll bring it out to ya.\" The woman dismissed him and turned to the drinks station behind the counter.\n\nJack sat in a booth near the door. Shortly, Miss Grace brought his drink.\n\n\"Turkey club meal is on special today. I'll be back to check on you in a little bit.\"\n\n\"Thanks.\"\n\nAs it turned out, he didn't have long to wait. The door opened just as Miss Grace made her way back behind the counter. Jack was sampling his soft drink when Anna stepped in to look around. Catching sight of her as she moved toward the middle of the room, Jack almost forgot to swallow.\n\n\"Damn.\" he mumbled to himself, setting his drink down on the table.\n\nGawking as he was, Anna noticed him before he could move or speak up to get her attention. Her smile, when she saw him, wasn't the over-the-top, star-crossed lover sort of expression seen in some romance movies or television shows. It was a more subtle, but unmistakably genuine thing that touched her bright eyes and spoke of both familiarity and the thrill of something new. Mischief and a lingering hint of shy modesty.\n\nThe smile was a cherry on top of the sundae that continued to render Jack speechless. The ice cream, bananas, and so forth, came in the form of a black and white suit. That is, a smart black jacket left open over a button-up white dress shirt, a long black skirt, dark nylons, and stiletto heels. And she had pulled her long raven hair back into a single tail.\n\nShe took one painfully sexy step before stopping, curious, as Jack raised a hand in a restraining gesture. Then rolled her eyes and tried not to blush as he raised his phone and she realized why he had stopped her.\n\nAfter snapping a couple of pics, Jack lowered his phone.\n\n\"Uh, sorry,\" he smiled lamely, \"You look amazing.\"\n\n\"Thank you.\" Anna shrugged out of the jacket and tossed it into the corner of the bench seat facing Jack.\n\nAt which point Jack raised his phone again and cleared his throat obtrusively. Anna glanced over and arched an eyebrow.\n\n\"Seriously? I just took my coat off.\"\n\n\"Yeah, but these pics may be the first steps to world peace. On the other hand... you and that outfit compliment each other so well, it could be creating, like, a dangerous, self feeding system of sexiness. They could be sending The Avengers or somebody right now. You know, to impound your clothes.\"\n\nAnna listened, incredulous, but nonetheless stood, hands on hips, for another picture.\n\n\"Prrr-retty sure that's the nerdiest compliment I've ever gotten.\"\n\n\"Yeah, I'm glad you recognize the assets I bring to the table.\" Jack replied sarcastically, which made Anna smile.\n\nWhen he had finished snapping a couple more pictures and put away his phone, Anna slide into the booth across from him.\n\n\"Anyway,\" she commented, \"There are other suits in the world.\"\n\nJack paused in raising his drink, mouth half open, eyes distant.\n\n\"There are.\" he murmured.\n\n\"Oh, stop,\" Anna said, trying not to smile again. She unbuttoned the cuffs of her shirt sleeves and rolled them up.\n\nJack smiled and sipped his Mountain Dew. Setting the drink aside again, he regarded Anna. Who, after a few moments, raised her eyebrows.\n\n\"Hello Anna.\"\n\n\"Hello Jack.\" Anna replied, bemused and touched to hear that uncommon seriousness in his tone.\n\nThe universe noticed that they seemed to be having A Moment. It decided to intervene, as it so commonly and inconveniently does. In this case, It's intervention came in the form of Miss Grace.\n\n\"Welcome to Ellison's. And what would you like to drink, young lady?\"\n\n\"Um. Do you have lemonade?\"\n\n\"We sure do. I'll get that for ya and then I can take your order if you're ready. Turkey club meal is on special.\" Miss Grace reiterated for Anna's benefit.\n\nWhen she had left them, Jack reached for the menus sitting in a metal rack at the corner of the table.\n\n\"Menu, or did you have something in mind?\" he asked.\n\n\"Turkey club actually sounds pretty good.\"\n\nJack left the menu in the rack, being fairly familiar with it's contents himself.\n\n\"That'll come with either fries or chips and a choice of green beans or cole slaw.\" he rattled off from memory.\n\n\"Did you work here once?\" Anna teased.\n\n\"Nah, it's convenient, distance-wise, from where we both live now,\" Jack pointed out, \"and the food's not bad, especially for the price. You know, if you like sandwiches.\"\n\nThe two discussed their preferences in sandwiches, sides, and condiments. Jack learned that Anna couldn't stand horseradish, but liked pickles. She requested jalapeno slices on her sandwich. And they both preferred fries over potato chips -- at least with their sandwiches.\n\nJack decided on the pulled pork on pretzel roll with extra hot sauce -- hold the vinegar. He had considered the Reuben, but assuming he and Anna spend some quality time together after the meal, he didn't want to have sauer kraut on his breath. With that in mind, he made a mental note to bring a little bottle of mouth wash or mints or something next time.\n\nAs soon as the food arrived, Anna unceremoniously transferred half of her french fries onto Jack's plate.\n\n\"Don't argue,\" she ordered preemptively, \"Just take them. You're skinny and you live on caffiene. I have enough trouble keeping weight off.\"\n\n\"Huh.\" Jack gave her a look.\n\n\"What?\"\n\n\"Whatever you're doing, it's working.\"\n\n\"What I'm doing is assigning you the job of eating half of any potato-based food served to me. From now on.\" she declared.\n\n\"Okay.\" Jack chuckled.\n\n\"But thank you.\" Anna added.\n\n\"You're very welcome. Y'know, if I had known, Id've dressed up. I think I still own a polo shirt or something.\"\n\nAnna took a bite of turkey club, chewed and swallowed before replying.\n\n\"That's okay. I didn't expect you to wear anything special. I just remembered that I had this and wanted to see how you'd react.\"\n\n\"Heh,\" Jack nodded while drizzling ketchup over his augmented pile of french fries, \"a little bit evil.\"\n\nPleased with the observation, Anna flashed him a brief grin.\n\n\"It was a pretty good reaction.\" she reflected.\n\nReaction, huh? Jack put his feet heel to toe and worked his right foot out of his shoe. Straightening his right leg he slowly extended his foot. Up above the table, Anna straightened abruptly. Feeling something rub along the insides of her thighs, she fixed Jack with a wide-eyed glare.\n\n\"What are you doing?\" she hissed.\n\n\"Enjoying your reaction.\" Jack smirked.\n\nHe was harshly reminded that the delicious contours of those thighs hid some muscle when they clamped together, pinning his foot.\n\n\"So, a few things,\" Anna spoke quietly lest anyone else in the shop overhear, \"One; how clean are your socks? Two; I'm tucked, so it's not gonna be so easy to find what you're looking for. And Three; if you do... cause a reaction... how well is that gonna work out when I'm wearing a skirt?\"\n\n\"Ah,\" Jack slowly withdrew his foot, but then began sliding down in his seat, \"You have a point. I should just make sure you get off.\"\n\n\"Stop,\" Anna laughed, \"Get back up here, you idiot. What was our catchphrase?\"\n\nJack sat back up in his seat and rubbed at his unusually smooth jawline. He was lost for a moment before understanding dawned.\n\n\"After sandwiches.\" the two recited in unison.\n\n\"Right, right.\" Jack acknowledged good-naturedly.\n\nThe two ate for a minute in silence.\n\n\"So, random question,\" Jack began after scrubbing his face with a napkin, \"Do you have a last name?\"\n\n\"Mm. I do.\" Anna affirmed.\n\n\"I thought knowing your full name would fit nicely with the getting to know each other thing. Unless it's something weird, like Hitler or Bieber.\"\n\n\"Nice. No, it's not a secret or anything. My full name is Anna Jean Durand.\"\n\n\"Durand,\" Jack repeated, \"What kind of accent was that?\"\n\n\"French. Grandfather on dad's side was French.\"\n\n\"Ah.\" Jack nodded.\n\n\"And with a first name like Jack,\" Anna continued, \"your last name must be something like... Dudebro or McFistbump or... uh... Skellington?\"\n\n\"Ran out of steam at the end there, but 'E' for effort,\" Jack smiled, \"Actually, McFistbump was my mother's maiden name.\"\n\n\"Uh huh. Wait, I've got it. Superwhite.\"\n\n\"Nope,\" Jack smiled, \"That's my porn name. Speaking of which, Joystick95-\"\n\n\"Ha! Okay, you win. We can talk about porn names later.\" Anna relented.\n\n\"Nah. My name is actually Jackson. Jackson Aaron Wells. But I've always gone by Jack.\"\n\n\"Mmp.\" Anna acknowledged, munching on another mouthful of sandwich. \"Ahem. You were right. The food isn't bad.\"\n\n\"Right?\"\n\n\"Mmhmm. So, Jackson 'Jack' Wells, what else should we know about each other?\"\n\nAnd while they ate, they talked. About their families and where they were from. Their interests, some of which overlapped. Anna told Jack about her job at the book store, and the fantastical stories she wove around her eccentric employer's literary architecture. Jack gave her a little more insight into his art, webcomic, commissions, and the themes thereof.\n\nAnna again complimented him on the comic he had made depicting their meeting, while also making it clear that if he ever decided to draw anything of an 'NSFW' nature involving them, he had better not upload that anywhere. Although, if he did draw anything like that, she'd be curious to see it.\n\nAn hour later, with meals finished and dishes taken away, the two sat in companionable silence.\n\n\"I probably should have given you all of the fries, but they were good.\" Anna commented, patting her tummy.\n\nLooking up, she noticed Jack watching her, wearing an odd expression.\n\n\"What?\"\n\nJack gave a little shrug.\n\n\"It's kinda surreal. Meeting you and then... meeting you. The sex. And now sandwiches.\"\n\nAnna listened, beginning to smile.\n\n\"You're definitely out of my league,\" Jack continued, \"And that's not even being self deprecating. But I'm trying not to over think it or whatever. Just... enjoying your company.\"\n\n\"Aw, well...\" Anna tipped her head to one side and sort of hugged herself, \"You say that.\"\n\nShe was quiet a few seconds before meeting Jack's eyes again.\n\n\"You know the kinda guys that usually hit on me? Even putting aside the whole trans thing. I mean, it's cliche... And I'm not fishing for sympathy, but... When people think you're attractive -- physically -- that's all alot of them are interested in. It's not all bad, but it gets old.\"\n\nJack listened attentively, nodded.\n\n\"You were the guy who was happy to delay sexy fun time to play a silly, nerdy game,\" she looked down at the counter with a self conscious smile, \"So I could get over being nervous. The whole thing was kind of like finding a friend when I thought I was just trying to get off.\"\n\nJack had begun to smile, but his expression faltered.\n\n\"I really enjoyed the game. Um, when you say-\"\n\nBut Anna caught on immediately, interrupting.\n\n\"No, no,\" she shook her head, laughing as she spoke, \"Sorry. I didn't mean like 'let's just be friends.' I just mean, you know how they say the perfect partner should be your best friend? Like...\"\n\nShe trailed off.\n\n\"Partner?\" Jack asked.\n\n\"Wh-\" Anna blinked.\n\n\"Sending some mixed signals now, aren't you?\"\n\n\"I didn't mean... It was an example. You know what I mean.\" She floundered briefly before narrowing her eyes, \"You're just fuckin' with me, right?\"\n\n\"Little bit.\" Jack admitted, \"But yeah, I get what you mean. And I'm glad you feel that way.\"\n\nHe leaned forward and slowly reached halfway across the table to open his hand palm up. Anna looked at his hand, then up at Jack, an amused twinkle in her eye. Reaching across, she tickled the palm of his hand with her nails before folding her fingers around his.\n\n\"So we've progressed to, what, third grade? Hand holding?\" she teased.\n\n\"Well, last time we were together, we skipped straight to amateur porn actors. Not that I'm complaining. But I thought you might like to sample the Supernerd 'boyfriend experience.'\"\n\nJack used a corny 1970s TV game show host voice for the last bit, and wore a silly smile that said he knew how corny he was being and it was entirely intentional. Anna seemed to consider it before agreeing.\n\n\"Alright Nerd-\"\n\n\"Supernerd.\" Jack corrected.\n\n\"But,\" Anna went on, ignoring him, \"you're gonna have to get us from third grade to graduation by the time we get back to the building, 'cause I've got some things in mind.\"\n\n\"Really? Things?\" Jack tried out Anna's patented arched eyebrow.\n\nAnna bobbed her own eyebrows.\n\n\"Things third graders definitely shouldn't know anything about.\" she confirmed.\n\n\"Ah. I was going to ask if you had plans for the rest of your day.\"\n\n\"And yours.\" Anna lifted his hand in hers and leaned forward to gently bite, then suck on the tip of his index finger.\n\n\"That was a good meal, but we should probably get going.\" Jack said, deadpan, after staring for a beat.\n\n\"Right,\" Anna agreed, finally releasing his hand, \"If you get the bill, I'll cover our ride.\"\n\n\"Oh, I walked.\" Jack reached for the slip Miss Grace had left when she was clearing away their dishes.\n\n\"Uh huh. But we're gonna ride back because did you see the shoes I'm wearing?\" Anna replied.\n\n\"Oh, right. Fair point.\"\n\n\"Unless you wanna carry me, Prince Charming.\" Anna joked.\n\n\"Love to, Beautiful, but these muscles are decorative. Neglect, not exercise, remember?\"\n\n\"You know I was just kidding, Nerd. I wouldn't want you to try to carry me.\" she tapped away on her phone.\n\nMinutes later, Jack opened the door for Anna before going around to join her in the back of the taxi. They gave the cabby directions and told him that yes, they knew how close that was. After which Anna scooted over against Jack and leaned her head against his shoulder.\n\n\"Don't get the wrong idea,\" she said quietly, \"We're not fucking in this cab.\"\n\n\"Good,\" Jack replied readily, \"Even if we had time -- which we don't. If we're gonna risk contracting multiple STDs, I want it to be because we met a team of olympic gymnasts, or a famous band or something.\"\n\n\"Sure. Those are the standards.\" Anna laughed.\n\nTen minutes and an elevator ride later and the two were walking down the hall on their floor. Just as they were drawing near Jack's apartment, the door on the other side of the hall opened. A short bald fellow with a ginger beard emerged wearing a white undershirt and vastly oversized jeans. A cloud of cannabis smoke wafted out with him.\n\nThe fellow regarded Anna and Jack with bleary, red-rimmed eyes. He nodded several times. After giving Anna a slow up and down, he squinted at Jack.\n\n\"Respect, bruh.\" he declared, gesturing at Jack before pulling his door closed and swaggering past them.\n\nJack stood there, trying not to laugh and feeling Anna looking at him with an expectant smile. Just waiting for him to look at her.\n\n\"I know, I know, just,\" he chuckled, \"just consider it a compliment.\"\n\nJack started moving toward his door, but Anna caught his hand and pulled him away.\n\n\"Nope. Keep walking.\" she instructed cheerily.\n\nTowing Jack along by the hand, she proceeded down the hall.\n\n\"Your street cred probably just went up, eh?\" she joked while they walked.\n\nJack snorted.\n\n\"It would have to go up. Pretty sure I didn't have any before now.\"\n\nWhen they came to her door, Anna fished her keys out of a coat pocket.\n\n\"You wanna get this door for me?\" Anna asked.\n\n\"Mm, no, you go ahead.\" Jack demurred.\n\n\"Huh. Used up your chivalry for th- Jesus!\"\n\nAs she had pushed the door open, Jack had pulled her back, then bent to quite literally sweep her off her feet. Off her feet and up into his arms.\n\n\"What are you doing?\" she clung to him, \"I probably weight more than you do, you idiot.\" she complained, though she was grinning again.\n\n\"Don't be silly,\" he puffed, stepping inside, \"Light as a feather.\"\n\n\"Pfft. Smart, except you sound like you're giving birth.\" she replied. \"No, wait. Turn.\"\n\nAnna reached out and hit a light switch. Cuddling back against Jack again, she kissed him on the cheek.\n\n\"You can put me down now, big boy.\"\n\n\"You sure? I was gonna-\"\n\n\"You already carried me across the threshold. Somehow. Save something for our wedding night.\" she teased.\n\n\"Yeah, okay.\" Jack quickly but carefully set her down on her feet, mindful of the fact that she was wearing heels.\n\nAfter straightening her skirt, Anna turned to face him and curled her fingers in the front of his shirt to pull him close. Jack brought his hands up to her sides.\n\n\"That was nice.\" Anna observed.\n\n\"Yeah. Told you they have good sandwiches.\"\n\nAnna arched an eyebrow.\n\n\"Maybe,\" she spoke slowly while lifting a foot to press her spiked heel lightly down on one of Jack's feet, \"Maybe we should find out if you have any massochistic tendancies.\"\n\nJack widened his eyes and a smile played across his lips.\n\n\"Of course, the company was infinitely more appealing than the food.\" he added.\n\n\"Uh huh. Nice save, Nerd.\"\n\n\"So,\" Jack ventured, \"You have some plumbing that needs looking at?\"\n\n\"Back to amateur porn, huh?\" Anna asked in return.\n\n\"I dunno. You're the one that had things in mind.\"\n\n\"Well, I didn't bring you over here to show you all the boxes I still haven't unpacked.\" She stepped back and slid one leg forward to show off her footwear. \"And I didn't wear these just to make a fashion statement.\"",
        "\"Mm, they made a statement...\" Jack trailed off suggestively.\n\n\"Good,\" Anna stepped past him and into her kitchen, \"I'm keeping them on.\"\n\n\"Good,\" Jack agreed, \"That's kinda hot. Um...\"\n\n\"Get comfortable. I just wanna grab a few things.\" Anna called back as she left the kitchen to disappear further into the apartment.\n\nJack sat, letting his eyes wander around the room while he waited. The place was still somewhat sparsely furnished and decorated. A dark wood entertainment center holding a moderate size flat screen, consoles and accoutrement thereof, a few framed pictures, a stack of record albums and what Jack assumed was an actual record player. Between the couch he sat on (faux leather) and the entertainment center, was a low glass coffee table. Behind the couch were several cardboard boxes of varying sizes.\n\nTurning to look into the little kitchen, he could see a coffee maker and a fully stocked spice rack. The stainless steel face of the refrigerator was bare aside from one lone magnet. Jack was fairly certain it was the emblem from one of the factions in a popular MMORPG. Probably Realm of Battlecraft.\n\nBefore he had a chance to get restless, Anna reappeared. She brought an armload of items, which she set out across the coffee table. Two towels, two bottles of water, a damp hand cloth, and a plastic bottle half full of a distinctive off-white substance. Jack was a bit slow taking all this in, being distracted by what Anna hadn't brought back. She now wore the same outfit from lunch -- minus the skirt. Although, to be fair, with the hem of her dress shirt falling a ways down her thighs, he wondered.\n\nAnna didn't leave him wondering long. She moved to stand directly before him, favoring him with an imperious smirk.\n\n\"Now that we've had sandwiches...\" she purred, lifting one foot and planting it firmly against his chest.\n\nRocking back slightly against the padding of the couch, Jack blinked. Then reached a hand up to the curl it over her gleaming black footwear while slowly tipping his head to one side. He found that while she still wore the dark thigh-high stockings, she had left her underwear with the skirt. Jack turned his head enough to kiss her nylon-sheathed ankle while enjoying the view.\n\n\"I noticed you shaved.\" Anna said, \"I kinda liked the stubble.\"\n\nJack was about to inform her that he'd be happy to not bother shaving next time, but she continued.\n\n\"On the other hand, I've been wondering if it would feel very different now. Having your face all up against me.\"\n\n\"Mm. You mean on your thighs,\" he slid his hand up past her knee, \"Or your tits... Or did you mean if you sat on my face again?\"\n\n\"Well, that too.\" She admitted, a shy smile coming and going.\n\n\"Developed a taste for it after all, huh? It's cute that you're shy about it, but if you ever want to try anything, as long as it's not really fucked up, definitely say something.\"\n\nAnna nodded. She drew her leg back, carefully setting her foot back on the floor.\n\n\"My legs were starting to get tired and I didn't want to lose my balance. Be really embarassed then,\" she smiled. \"And yeah -- I'll say something. I'm just not really used to talking much about this stuff. It's been quite a while since I saw the same guy for more than a one-time thing. Just not into being somebody's secret. Side piece. Whatever.\"\n\nShe shrugged it off, but was annoyed with herself for bringing it up -- especially at a time like this. Nothing for setting the mood like insecurity and past relationship stuff. Or lack thereof.\n\nOn the bright side, Jack was a guy. He'd probably be more than happy to let it slide and get back to-\n\nAnna was surprised when Jack hitched forward and put his arms around her, one just below her ass and one above. Leaning forward slightly to see past her own bossom, she found Jack looking back. Tipping his head back, he rested his chin against her tummy.\n\n\"I know we're just playing it by ear and all, but for the record, I wouldn't keep you a secret. Unless you wanted me to, of course. I wouldn't mind introducing you to family and that sort of thing, but I'm not all that crazy about my family myself, so...\"\n\nAt first developing a touched little smile, Anna raised her eyebrows at the latter bit.\n\n\"Aw. That sounds... kind of scary. But nice. Um...\"\n\n\"What's up?\"\n\n\"I know this is, like, a guy thing to say, but, could we talk more about this after... I'm kinda ready to go...\"\n\n\"Ouch,\" Jack feigned indignation, \"A guy thing, huh?\"\n\nHe then drew back a little and removed one arm from around her to lift the front of her shirt several inches. He made a show of tipping his head to peer between her legs. Seeing what he was up to, Anna shifted her hips enough to set her dangling, semi-erect cock to swaying.\n\n\"But yeah, let's talk about it later.\" Jack agreed.\n\nHe began to lean in again as he spoke, but his shoulders were met by Anna's hands. Gently bearing him back against the couch, sliding a knee onto it between his legs, she bent to press into a hard kiss.\n\nWhile they kissed, Anna moved one hand across his smooth cheek to the back of his neck. She felt the faint rasping of a tiny patch of stubble under the edge of his jaw which he had missed when shaving. She smiled into their kiss, slowly easing back out of it.\n\n\"Alright, now... help me up.\"\n\nJack held his hands out, palm up, in an uncertain gesture. Anna took hold of them and stepped up to stand on the couch with her feet planted to either side of him. Then she did a sort of precarious dance to turn around so that she was back-to. Jack swallowed hard as one spiked heel and then the other passed over his lap. As Anna finished the maneuver, heeled feet sinking into the cushions, Jack reached up and clamped his hands on her hips to steady her.\n\n\"You're gonna break your neck,\" he laughed, \"and those heels are gonna ruin-\"\n\n\"Hush,\" Anna instructed, reaching back to pull the back of her shirt up over her ass, \"and find something better to do with that mouth.\"\n\nJack found it hard to argue with that. Especially when Anna bent at the waist, leaning back, effectively forcing Jack back by means of her full, bare ass meeting his face. Concerns over safety fleeing to the back of his mind, Jack gave an anticipatory groan of arousal before giving one cheek a playful bite.\n\nWith a little shiver, Anna paused in bending over, then carried on as she felt Jack gently nuzzling his face in between her cheeks. While she worked at unbuttoning and unzipping his pants, she reflected that yes, it as indeed worth getting Jack to shave from time to time. She kinda liked the scruffy look on him, and didn't mind the errant rough tickle when they kissed, but she didn't miss the bristly rasp of stubble on the soft, sensitive skin of her nether regions.\n\nAfter fumbling a bit, she got Jack's pants open and, without having to look under his boxers she saw that he was also ready to go. Tracing her fingertips over the length of him, she thought she could feel his heat through the thin fabric. His boxer shorts were fairly loose fitting, and she moved her hands to the waistband, but stopped when she noticed they had a button fly. On a whim she undid the buttons and lined his cock up. It was a bit of a snug fit, but she carefully coaxed his balls out through the opening as well.\n\n\"Mmm.\" she moaned, partly in response to Jack's teasing tongue and partly at the prospect of putting her own mouth to work.\n\nCupping her right hand down beside Jack's rod, she pursed her lips and dribbled a streamer of hot spit into it. Licking her lip, she turned her hand over, pressing her palm over the swollen dome of his cockhead. As rivulets of saliva ran down his shaft, she left her hand curled over the head and rubbed her palm against it in tight little circles.\n\nJack shifted so that his cock pressed up against her palm, while pausing his oralizing to groan into the soft hugging cleft of her ass. Smiling at the reaction, Anna moved her hand down, curling her fingers around him and trailing saliva down his shaft. Slowly, slowly, she enjoyed the feeling of him throbbing in her hand as she slid it down. When she reached the base, she angled him just so and bent as low as she could, finding that she could just manage to take the head into her mouth.\n\nClosing her lips around him just under the rim, Anna gave him one good suck before giving in and admitting that the blood rushing to her head was getting to her. Regretfully, she drew away, lips gliding wetly back up off of his head to close again. After one last stroke -- all the way up and down -- Anna relinquished her hold on Jack's gleaming cock and stood.\n\nOr started to stand. She was almost upright when everything went funny. It seemed as if the room were tilting around her. Light headed, she waved one arm, but couldn't tell which way she needed to move to regain her balance.\n\nJack was curious, but not immediately alarmed when Anna's buttocks first began to slip away. It came as something of a shock to realize the cause -- namely that she was beginning to fall forward. Then he was moving, almost on reflex.\n\nLurching up, he wrapped one arm around her waist, then flexed several muscle groups to throw himself back, pulling her with him. Anna grunted as she thumped back into him, before slowly sliding down to sit in his lap. She swallowed and let out a shaky breath.\n\n\"Ow.\" she said without inflection.\n\n\"You okay?\" Jack asked, almost laughing from sheer nerves.\n\n\"Yeah... I... I was gonna fall?\" Her voice went from flat to vaguely worried. \"I would've landed on the table. I really could've broken my neck.\"\n\n\"Nah. You might've sprained a wrist or something -- worst case.\" Jack tried to reassure her.\n\n\"I just got lightheaded.\" she shifted a bit to look back, giving him a weak, apologetic smile, \"Sorry. Didn't mean to stop things and... kill the mood.\"\n\n\"Shh, don't,\" Jack smiled, \"We can get back into it in a minute. I'm just glad you didnt' actually bust your ass or stroke out from being upside down like that.\"\n\nHe curled his arms around her middle and tipped his head to kiss her cheek.\n\n\"To be fair, that was easily the most interesting, uh, sexual position I've personally ever been part of. Pretty ambitious -- on your part I mean.\" he added.\n\n\"Yeah, I never tried it before either. Guess I shoulda practiced.\"\n\n\"That's a thought. Probably we should invest in some gym matts or, like, thirty body pillows or something before you start practicing.\"\n\n\"Yeah.\"\n\nThey were quiet for a moment. Anna ran her hands up and down Jack's forearms.\n\n\"Hey Nerd?\"\n\n\"Yeah?\"\n\n\"I have a thing about my feet.\"\n\n\"I remember.\" Jack replied, wondering about the non-sequitur.\n\n\"So... this is extra embarassing, but... I think I need you to help me get my shoes off.\"\n\n\"Oh. Okay.\"\n\nAnna turned her head away.\n\n\"I think,\" she began speaking quickly and quietly, \"my heels just might, maybe, possibly have gone through and gotten stuck. In the cushions.\"\n\nJack frowned in an effort to stop himself laughing, but his eyes glittered evilly. He felt bad -- the couch looked expensive, but still.\n\n\"I know, I know. Don't say it. Laugh if you have to-\"\n\nShe turned back to face him, whereupon he cut her off by stealing a quick kiss. Pulling back, he smiled indulgently.\n\n\"I'm sure someday we'll both look back at this and laugh,\" Jack said amiably. \"Probably more me than you, though.\" he added as he shifted to see about extricating either Anna's feet or footwear -- whichever seemed easier.\n\n\"Probably.\"\n\n\"Uh huh. While I dig you out of this poor, innocent couch, you can be thinking about a slightly less dangerous position you'd like to try.\" Jack suggested while bodily shifting Anna and wiggling one shoe.\n\n\"Oh really?\"\n\nAnna had a thought, and, ignoring what he was doing, scooted side to side in his lap.\n\n\"Wow. You're still hard.\"\n\n\"Pfft,\" Jack scoffed, \"You're still gorgeous and half naked, and you've been sitting your buns on my hot dog this whole time, so...\"\n\n\"Ah.\"\n\nAnna indulged in a little teasing -- grinding her ass against him -- before helping with the task of freeing her from her heels and the heels from the couch cushions.\n\n\"Never did find out where you were ticklish.\" Jack hinted at reprisals.\n\n\"I'm helping, I'm helping.\" Anna hurriedly grumbled.\n\nWhen, a short time later, both Anna's feet had been freed, she stretched her legs out straight, groaning, but remained in Jack's lap. She obligingly pressed down on the cushion to their right while Jack pulled her shoe free. They repeated the process on the other side and set the pair aside.\n\n\"If we were at my place, I'd say it was worth it, but my couch isn't this nice.\" Jack commented in a sympathetic tone.\n\n\"Uhhh,\" Anna took a deep breath, then sighed. Shrugged.\n\n\"Good thing they're actual cushions,\" she reflected, \"we can flip them over. When we're done.\"\n\nShe stood and turned to kneel straddling Jack's legs.\n\n\"Now,\" she crossed her arms over her chest, \"Why am I the only one half naked?\"\n\n\"I thought you looked really cute in just the shirt, or I would've taken it off for you.\"\n\n\"I knew you'd say something like that.\" she chided, gesturing for him to raise his arms, then roughly tugging his shirt up his body.\n\nWhile he was pulling it free of his head, Anna slipped in close and surprised him with a kiss. Tossing his shirt aside, Jack returned the kiss, lowering his hands to her thighs and sliding them along to her hips. The kiss deepened, became more passionate.\n\nAnna busied her hands with working the buttons of her blouse from the bottom up. Jack's hands followed, spreading her shirt open and caressing their way up her body until they reached her breasts. Gathering her soft, pale globes, he squeezed and kneaded while Anna shrugged out of her shirt and pulled the sleeves from her arms.\n\nBreaking the kiss, Jack moved down to kiss and suck at her neck, her throat, and, when Anna arched her back, further down to give her breasts some oral attention. One of his hands went to her lower back to ensure no further dangerous losses of balance occurred. With his other hand he gave her ass a squeeze before slipping two fingers in to press and rub over her still slick hole.\n\nAnna tipped her head back, moaning and moving her body first against Jack's mouth on her breasts, and then back against his fingers down below. She draped her arms over his shoulders, one hand on the back of his neck. The fingers of her other hand threaded through his hair, tousling and momentarily gripping when she felt little jolts of pleasure.\n\n\"Mmph...fuck, Jack...\" Anna moaned.\n\nShe continued her movements and moaning a bit longer before taking Jack's face in her hands.\n\n\"Hey.\" she drew his head up.\n\nWhen they were eye to eye again, she crushed her mouth to his for a quick, rough kiss.\n\n\"Relax.\" she smiled, pushing him back into the couch.\n\nLetting his hands slip around to rest on the tops of her thighs, Jack did as he was told. Catching his breath, he waited to see what Anna had in mind this time.\n\nAnna paused long enough to tweak one of Jack's nipples before half turning and leaning back. Jack twitched, starting to lean forward to grab her, but Anna easily nabbed the bottle of lube from the coffee table and straightened back up.\n\n\"Sorry, sorry.\" she laid a calming hand against his chest for a moment, \"It's fine. Relax.\"\n\nJack settled back again, returning his hands to her thighs. While he watched, Anna opened the bottle and tipped it up in one hand. She wrapped her other hand around Jack's jutting cock, stroking a few times before drawing it toward her and slapping it against her own erection. Stretching her hand to squeeze their cocks together and hold them in place, she gave the bottle a slow squeeze.\n\nAs a thick ribbon of pearlescent goo flowed, Anna lifted the bottle high. The stream of lube broke, becoming a rain of gobs and droplets -- only some of which landed on their waiting cocks.\n\n\"Woa-hoho,\" Jack laughed, \"That's... you're gonna make a mess.\"\n\nAnna gazed at him through the dwindling dribbles.\n\n\"Problem?\"\n\nJack looked up from the splashes and puddles in his lap, across Anna's thighs, and oozing over Anna's fingers.\n\n\"No ma'am.\"\n\n\"Good. Sometimes I like making a mess.\" she replied in a throaty purr.\n\n\"By all means.\"\n\n\"Mm. By the way, it's water based.\" Anna added. \"So it's safe to get in your mouth.\"\n\nShe tipped her chin up and stuck her tongue out to drip a dollop of lube onto it in demonstration. Closing her mouth, she sealed the bottle and tossed it to a corner of the couch. Tipping her head down, she parted her lips to release the lube, along with some saliva, to splatter and run from the head of Jack's penis.\n\n\"Ah,\" Jack replied slowly, \"duly... noted.\"\n\nSwitching things up, Anna stroked herself with one hand and Jack with the other. She took her time, enjoying herself, pausing to collect some of the larger puddles of lube that had gone astray to re-coat her hands. When she finally decided that they were as thoroughly greased as they were going to get, she again pressed their cocks together in her hands.\n\nThis time, instead of stroking, she rolled her hips. Drawing her slick shaft down, then slowly thrusting up again. Sliding against the underside of Jack's shaft. She began rising slightly on her knees as she increased her pace.\n\nBeginning to really feel it, Jack started to move as well -- as much as the position allowed. He hardly had time to get in rhythm before Anna stopped.\n\nShe slid back off of his lap and onto the floor in front of him.\n\n\"Hmp, oh shit.\" she whispered as she got a better look at the extent of the damp, sticky mess she had made of Jack's boxers. And pants.\n\n\"Ready Nerd? I want you to fill my mouth now. Give me your hot cum.\" she demanded when she had settled, still languidly stroking Jack with one hand.\n\n\"Fuck. That is hot.\" Jack groaned.\n\nAnna smiled. She might have blushed at her own dirty talk, but she was already a bit flushed from arousal and exertion. Leaning forward between Jack's knees, she planted a wet kiss near the base of his cock. Moving her free hand to play with his balls, she kissed her way up his shaft. She paused with lips parted, about to take him into her mouth, when Jack spoke again.\n\n\"Wait. One thing.\"\n\nThe faux leather of the couch creaked as Jack shifted his pelvis and reached a hand down.\n\n\"Boop.\"\n\nAnna looked down, eyes crossing as she tried to focus on the tip of Jack's dick -- where it met the end of her nose. The smell of the lube, along with a hint of Jack's scent, filled her nostrils. Her eyes widened as she shifted her gaze up to his face.\n\nShe wasn't sure if she wanted to be embarassed, laugh, or bite him.\n\n\"Really?\" she demanded, glancing back down to watch a glinting line of lube form as Jack let his cock rise away from her nose.\n\n\"Ahem. Not funny?\" Jack guessed.\n\n\"Timing, Jack. Timing.\" Anna squeezed his sack in a way which, while not painful, peferctly conveyed the idea that she could always squeeze harder. Not that she actually would, but he would appreciate the gesture.\n\n\"Ah. Fair enough. Sorry, Sexy.\"\n\nRemembering their first sexual encounter earlier in the week and the way Jack had broken down laughing, Anna smiled despite herself.\n\n\"It's fine. You're lucky I like funny.\"\n\n\"I'm lucky about a lot of things.\" Jack smiled.\n\n\"Damn right,\" Anna agreed, grinning, just before ducking her head to take him into her mouth.\n\nJack inhaled sharply, then gave an appreciative moan as Anna sucked greedily.\n\n\"What... Mm, what about you?\"\n\nAnna drew her mouth away with a loud slurping noise. She fixed Jack with her exasperated expression.\n\n\"I'm glad you're thinking of me and all, but don't worry, you're definitely gonna help me cum after this. Now shut up,\" she took one of his hands and placed it on her own head, \"close your eyes,\" she lowered her voice to that lusty purr of hers, \"and cum really hard for me.\"",
        "With that, she dipped her head again, resuming her vigorous sucking. She stroked the shaft and teased his balls with her hands, occassionally taking him back to her throat. Setting up a rhythm, then speeding it up.\n\nJack, meanwhile, tipped his head back, closing his eyes as she had suggested. All the things Anna was doing felt great individually, but together they were quickly driving him to the limit. The sound of Anna's throaty moans, the fact that she was clearly enjoying herself, only made it that much better. His breathing, already deep, became rapid and shaky. His groans less controlled, louder, more urgent.\n\nSensing him getting close, Anna stroked faster, intentionally breaking her rhythm irregularly. A thrill ran through her when she felt him shudder, his cock throbbing hugely. She felt herself throb in response as he finally erupted in her mouth. Still sucking, she swallowed, but couldn't keep up, and had to open her mouth for a moment to let the excess hot seed overflow and run down her chin.\n\nWhile Jack began to subside, Anna swallowed one last time, then drew back to catch her breath. She smiled when Jack gave another shuddering moan, his eyes still closed. Noticing a last bead of pearly goo well up, she puckered her lips and moved his cock side to side, smearing her already glistening lips.\n\nReleasing him and leaning back, she licked her lips. She reached up and pulled her hair loose, tossing the scrunchy behind her. After admiring the way Jack's erection lingered, standing on it's own, she wiped her chin and lowered her hand to her own thoroughly erect member. She stroked herself slowly, considering things, before rising.\n\nJack opened his eyes as she moved to straddle him again. Shifting from a squat to one knee, she took him in hand and lined him up with her hole.\n\n\"Hi again. Uh, I dunno-\" he began to object.\n\n\"Shh, I know. You just came. This is for me. Don't worry about staying hard,\" she took his right hand and brought it to where her cock stood between them, \"I don't think this is gonna take long.\"\n\n\"Mm? Ah,\" he curled his fingers around her and gave a gentle squeeze, \"alright Beautiful.\"\n\nAnna lowered herself to her knees as she took him inside. She locked eyes with Jack and managed a faint smile before her eyes pressed shut. A whimper escaped with the breath she had been holding as she felt herself filled and stretched. She stopped two thirds of the way down his length and Jack felt her insides grip him, relax, and grip again.\n\nPausing there, Anna leaned close for a kiss, lingering cheek to cheek afterward.\n\n\"You gonna cum for me now?\" Jack whispered.\n\nAnna nuzzled her face against his.\n\n\"Yeah,\" she breathed into his ear, \"Use your hand and I'll do the, uh, bouncing. Just go fast... and don't stop til I tell you, okay?\"\n\n\"Clear instructions,\" Jack smiled, \"nice.\"\n\nAnna snorted.\n\n\"Glad you, mm, appreciate what I bring to the table.\" she smirked.\n\nWith that she moved away a bit, leaving her hands on his chest. As she began bouncing on his cock, Jack spat in his hand to remoisten the slowly drying coat of lube on Anna's. He rolled his shoulder, stroked his hand all the way up and down her length a few times, then sped up, shortening his stroke and timing it against her movements.\n\nThe squishing, slapping sounds competed with Anna's breathing, gasping, and moaning. Her prediction had been accurate -- it didn't take long. Within a couple of minutes of increasingly frantic fucking, her cries of wordless pleasure were interspersed with expletives and Jack's name. Jack stroked faster and faster to keep up. And, while Anna was too lost in pleasure to take notice, he was gasping and groaning right along with her.\n\nAnna leaned further back as she began to peak, grinding against his pelvis. Jack caught her wrist with his free hand, letting her arch back, her bouncing breasts thrust forth. As she came, Jack glanced down between them, then thought to close his eyes just in time. He felt the first shot of her hot cum spatter his cheek, with droplets trailing down his face and neck.\n\nWhile he became a bit distracted, Jack kept stroking, feeling the hot spurts of Anna's seed hitting his chest and midriff as they gradually lost force. Twitching and trembling, Anna gradually leaned back further and further.\n\nEventually, her orgasm spent, Anna gestured vaguely with her free hand.\n\n\"Mmp, okay... stop, stop...\" she she said weakly.\n\nJack opened his eyes to look along her body. He admired her figure, and flexibility, while she let herself sink back until there was a soft thud when her head settled on the coffee table.\n\n\"Mm, fuck.\" Anna sighed when her breathing had calmed.\n\nShe lazily cracked her eyes and glanced to either side. Grabbing the damp hand cloth, she reached a hand up, which Jack obligingly took. With his help she sat back up and, smiling, dabbed at his jizz plastered front. After a few swipes, she leaned into him for a kiss.\n\n\"Not bad, Nerd.\"\n\n\"Mm, likewise. And I'll bet the neighbors enjoyed it, too.\"\n\n\"Hush.\" Anna glanced away, smiling. \"I get loud when it's good. I can't help it.\"\n\n\"I'm not complaining.\" Jack reassured.\n\nHe shifted his legs and Anna rose slightly to put some of her weight on her knees. In doing so she was reminded in a very intimate way that he was still inside her.\n\n\"Mmph, did you... not.. you know...\" she reached a hand back, leaning a bit to feel where his shaft rose between her cheeks.\n\nJack raised his eyebrows questioningly.\n\n\"Just, you're still hard, aren't you?\" she gave a little pout, \"Did you not actually, like, go limp... at all?\"\n\nJack shrugged.\n\n\"You're really hot. And when you got going...\" he explained.\n\n\"Aw. I don't wanna leave you like that,\" she sympathized, \"but I don't think I can move much right now.\"\n\n\"It's okay. It'll pass.\"\n\n\"Aw. I know, but that's no fun.\" Anna pressed.\n\nShe frowned, confused, when Jack laughed.\n\n\"No, I didn't mean... You really didn't notice, huh? It'll pass because I already came again. Guess you were a little busy. It was almost the same exact time you did.\"\n\n\"Oh, wow,\" her smile was impish, \"you really like my ass, huh?\"\n\nJack nodded amiably.\n\n\"And the rest of you, but I think part of it was also how you remembered my name when it counted...\"\n\nAnna's eyes widened and she quickly pressed a finger to his lips.\n\n\"Ahem. Glad you enjoyed.\" she feigned nonchalance, looking down.\n\n\"I did,\" he agreed, shifting forward and tipping his head to kiss her cheek, \"Anna.\"\n\nAnna tipped her head to one side, a little conflicted about getting emotional, but not so conflicted as usual, still being pretty high on hormones and endorphins. She indulged a bit in her own shyness and also enjoyed the lovey feelings she was getting, while refusing to think the actual word love. Meanwhile she vaguely registered Jack tipping his head down. When he had kissed her again and drawn back, she was surprised to realize he hadn't been going for a nipple after all.\n\nShe glanced down.\n\n\"You just,\" she gave him a bemused smile -- another of her expressions that was becoming familiar -- \"You just kissed my heart... tattoo, didn't you?\"\n\n\"Mm,\" Jack agreed, \"Don't worry -- I'm not gonna propose or anything. It's just that your ass was too far away.\"\n\nAnna glowered, bent forward to bump her forehead against his.\n\n\"Smartass.\"\n\nJack took this in his amiable way. He reached up to brush Anna's hair back from her face. Resting his hands along her jaw, he brushed a thumb over her cheek in a rather tender manner. Anna's expression softened again.\n\n\"So, we've had sandwiches and we've fucked.\" Jack observed.\n\n\"Yeah...\"\n\n\"Should I have brought my toothbrush?\"\n\nAnna raised her eyebrows, then shrugged.\n\n\"Yeah, but we can go get it in a little while.\"\n\n\"Or I could use yours.\" Jack suggested.\n\nAnna frowned in disgust.\n\n\"Yeah, if you want me to stick my-\"\n\n\"Don't threaten me with a good time.\" Jack interrupted mildly.\n\nAnna paused, snorted.\n\n\"Alright, Jackson...\"\n\nTo her satisfaction, his smile soured momentarily.\n\n\"Really don't like that, huh?\" she gave him a quick, conciliatory kiss. \"Tell you what, Nerd. First, we hit the shower and clean up. Then I'm gonna teach you how to play a couple of my favorite games. Then we can go over to your place and you can grab... whatever.\"\n\n\"Got it all planned out, huh?\"\n\n\"Mmhmm. Unless you have suggestions. I'm your girlfriend, not your boss.\"\n\n\"You're...\" Jack looked mildly surprised, \"Are you?\"\n\n\"Mm. I decided I want to extend my trial of this boyfriend experience thing.\" she smiled. \"Though I might change my mind if you're a really shitty gamer.\"\n\n\"Fair enough,\" Jack laughed, \"And yeah, the plan sounds good, but first -- pass me one of those waters?\""
    ],
    "authorname": "Felix921",
    "tags": [
        "trans woman",
        "sole male",
        "oral",
        "anal",
        "fun",
        "sandwiches",
        "some feels"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/nerdcam-pt-03"
}