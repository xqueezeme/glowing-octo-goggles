{
    "title": "Forever Again Ch. 08",
    "pages": [
        "Author's Note: This story depicts graphic lesbian sex, female masturbation, incest between twin sisters, vampirism and mind control. If these topics do not interest you or are prohibited in your area please back out now.\n\nThis is the eighth installment of a long story. Those that have read my other stories will know that I tend to have some story behind the sex so if you're looking for a quickie this story may not be to your liking. \n\nMy apologies to those who have been awaiting the next chapter. Sometimes life has a way of getting in the way. I hope this latest installment of Vala's journey will be worth the wait. \n\nFor those of you that haven't backed out, I hope you will enjoy my words.\n\n~CD\n\nChapter Eight\n\nAnother Time...\n\nBerlin, German Empire, 1913\n\nRae sat on the small balcony and looked out over the darkened skyline. Night was well down over the city and all was peaceful, or at least as peaceful as a city the size of Berlin ever got. There was no one walking on the streets below and the last streetcar had passed over an hour ago. Somewhere off in the distance she thought she just caught a hint of music. Not constantly, just intermittently, a snatch of melody when the wind was just right. It made her smile. Life. The night was alive if you knew where to look and were patient. Rae knew where to look and over the last three centuries she had come to know patience well. \n\nHer eyes drifted slowly, almost hesitantly up to the stars overhead. The air was crystal clear tonight and they gleamed brightly, exactly the same as they had always been. The same as they had on that first night she had lain with Vala all those years ago. \n\nShe held out her hand and studied it in the darkness. Smooth and flawless as a newborn babe. She knew it should not be so. Years of hard work growing up in the lumber camps with her father had left her hands rough and scarred in many places. But the scars were all gone, just as her former life was. Thoughts of her former life made her think of her father and a familiar lump formed in the back of her throat. It was a lump long softened by time, but it was still there. \n\nShe blinked back a single tear and thought, Can it really have been three hundred years since you died, Papa? Has all this really happened to me? She wondered for not the first time what her father would think of her if he could see her now. Sitting on the balcony of the huge mansion in the heart of Berlin, only a few blocks from the Kaiser's Palace, wearing a beautiful gown and jewels that cost more than small town. A proper woman of court, a Lady... a Vampire.\n\nHer predator's hearing picked up a whisper of movement from inside her rooms and she turned to look. Even with her superior night vision she could only see a dim shape moving through her rooms in her direction. She didn't bother to get up, even without seeing the face she knew who it was. After three centuries together she knew the way the woman moved all too well. \"Come join me Vala, the night is beautiful.\" Rae called softly. \n\nVala walked out onto the balcony, smiled at Rae and went to stand at the railing. She breathed in deeply, held it for a long moment the let it out with a contented sigh. \"Yes, it is lovely.\" She stood there in silence for so long that Rae wondered if she had a reason for coming to see her at all. Did she have news or not? \n\nIn the silence Rae studied her longtime friend and lover. Vala was just as breathtaking now as she had been on the day they had first met all those centuries ago. Even dressed as she had been long ago, in clothes that were little more than dirty rags, disheveled and sweaty from helping out with chores at the lumber camp she had still been beautiful. Her hair had shown like spun gold and her eyes were as deep as midnight. Rae hadn't been initially been attracted to her in any physical way. Before that first night together she had never even considered lying with another woman. But even so, she had been able to appreciate Vala's great beauty on that first day so long ago. \n\nBut now... now... Rae couldn't help herself from staring at Vala. Since her transformation into a vampire all those centuries ago, Vala had somehow grown even more beautiful as the years and decades rolled slowly past. Standing there at the rail, dressed in an expensive gown, wearing fine jewelry, her long hair brushed until it gleamed in the moonlight she was more achingly lovely than any other woman Rae had seen in her long life. \n\nThe silence dragged out for several moments as Rae admired Vala silently while waiting for her to continue. Eventually the silence outlived even Rae's long practiced patience and she clucked her tongue in irritation, \"Well?\" she prompted. \n\n\"Yes?\" Vala asked distractedly without looking over. \n\nRae tried without much success to suppress her irritation, \"Did the Mistress come back with any news?\" \n\nVala sighed again but this time Rae could detect a hint of strain in her voice. \"Yes.\" \n\nRae waited for several long moments and was just on the verge of another prompting when Vala spoke again. \n\n\"War.\" \n\n\"War?\" Rae breathed disbelievingly. Could it really happen? Yes, she chided herself. Of course it could happen. It had happened countless times in the past and it would undoubtedly happen countless times again. But it had been years since the last major conflict and Rae had grown used to the calm. \"What does the Mistress say?\" \n\nWith a shrug Vala said \"That war is coming and soon. Within a year she thinks. She spoke with the Kaiser over dinner and he basically confirmed it. Of course he rambled on for hours about the glory and valor of battle and the gallantry of men and the honor of the Empire and all that nonsense. But she finally got him to admit that yes, plans are in motion and that war is coming, soon.\" \n\n\"When?\" \n\n\"That part is not certain. Not yet, that is all he would say. She got the impression that they weren't ready yet but that's just her speculation.\" \n\n\"Who is it to be, France or Russia?\" Rae asked, not really sure if she wanted an answer. \n\nVala hesitated a moment before looking sidelong at Rae then turning to look back out over the darkened cityscape. She sighed and said softly, \"Both.\" \n\n\"Both!?\" Rae exclaimed. \"How can it be both?\" \n\nVala smiled wanly. \"The Mistress asked the same thing. The Kaiser said, 'Fear not My Lady,'\" Vala imitated his deep voice and mimicked one of his customary extravagant one-handed gestures, \"'for we have a plan that cannot fail. The greater glory of German is all but assured and I shall be the ruler of the greatest empire the world has seen in an age!'\" Vala shook her head and grimaced. \"Fool.\" \n\n\"Yes.\" Rae had to agree. She looked out over the city again. \"What will happen?\" \n\nVala shrugged again, \"War.\" \n\nRae clucked her tongue again and said with a bit of a snap, \"I know that, but what kind of war?\" \n\nVala paused before speaking, considering, \"The Mistress says it will be long and brutal. The bloodiest war the world has yet known. She thinks these fool generals can only see the glory of it all and are ignoring the new world we live in. She says it will last for years and cost millions of lives. She said it may destroy us all.\" \n\nRae sat staring at Vala in shocked awe. Finally she whispered, \"How does she know this? How can she know more than the generals and rulers of empires?\" \n\n\"How does she know anything?\" Vala asked. \"She has lived far longer than you or I could even dream and she is far more powerful than you or I will ever be. She knows things, she sees things in the night, she hears things whispered in the dark, and she knows of the dreams of men. I cannot explain it, but we have both seen it too often to dismiss it. If she says there is to be war and it is to be horrible, then it will be.\" \n\nRae didn't want to believe but Vala was right and in her heart, she knew the Mistress was as well. Germany, in fact all of Europe was pregnant with war. It was only a matter of time. \"So what will we do?\" \n\n\"Leave.\" \n\nRae figured as much. \"Where will we go to? London?\" \n\n\"No, the Mistress thinks the war will find its way there as well. New York.\"\n\n\"America?\" Rae gasped. She had visited New York only once and thought it to be a grand city, to visit. The city was huge and the people uncountable. It had all seemed so full of activity and so... alive. But to live there? She wasn't so sure. Rae got up and went to stand beside Vala at the railing. They stood for a long time in silence, looking out over the city that they both had come to call home. It would be hard to leave. \"She is sure?\" Rae finally asked, her voice catching in her throat. Vala looked over at her smiling that small, tight smile Rae knew so well. \n\n\"Do you really need to even ask that?\" \n\nRae shook her head slowly, \"No, I suppose not. If the Mistress said it, she is sure.\" \n\nThey both lapsed into silence for a time. After a few minutes Vala turned to look up at Rae. \"You're quiet, that's not like you.\" \n\nRae shook her head and looked down but still didn't speak. \n\nCocking her head to the side, Vala studied Rae as she slid closer. \"Rae?\" she said softly. \n\nFinally Rae looked up at her longtime friend, confidant and lover. Rae's eyes were wet with tears. \n\nRae could see concern blossom in Vala's dark eyes as she was gripped by the shoulders and pulled close. \"What is it Rae? Whatever is the matter?\" \n\nShaking her head, Rae sighed. \"I don't know. I was sitting out here remembering the past, thinking about how I, how we, got here. Remembering the people that are gone.\" She shook her head. \"And now with war coming and we have to leave...\" she shook her head again. Brushing away the tears she turned and looked back out over the darkened cityscape. After a period of silence she said softly, almost whispering, \"I've just been thinking a lot lately about what I really gave up for this... life.\" Her final word was bitter with irony. \"My Dadda, a family, maybe a child or two.\" She looked at Vala and forced a smile. \"Maybe three or four.\" She looked up at Vala and whispered as a tear rolled down her cheek, \"I always thought I would have been a good mother.\" \n\nVala smiled comfortingly at her friend and stroked her arm. \"You would have been a wonderful mother.\"\n\nSwallowing hard, Rae continued, \"I suppose I was just feeling melancholy tonight, alone up here in the dark and then you come in talking about war again.\" Rae sighed and looked out into the darkness. After a minute of silence she said quietly, \"I don't know Vala, maybe there is a reason people don't live this long. Maybe after a while the centuries of memories just become too much for anyone to bear. Sometimes I just feel so...so alone.\" \n\n\"You're never alone Rae.\" Pulling her in closer, Vala stroked the top of her head and shushed her gently. \"Don't worry Rae, it will all be fine. The Mistress and I will be with you. All of us will.\" She placed her hands on the side of Rae's face and gently turned her so she was looking into Vala's bottomless black eyes. \"I'll always be here for you Rae, you know that. Always, Rae.\" She kissed her softly on the forehead, \"Always.\"\n\nSwallowing back a sob that wanted to escape, Rae pulled Vala into a fierce hug. She whispered in her ear, \"Thank you Vala, you have always been so good to me.\" She sniffled. \"You know, I don't remember if I ever told you this, but do you remember when I left you at the Mistress's estate all those years ago?\"\n\n\"Of course.\" Vala said. \"How could I ever forget?\" \n\n\"Well, after I left you there, I thought of you every day. At night I even dreamed of you. I imagined you coming back to me one day, saying how much you missed me, how much you wanted us to be together. It hurt my heart knowing that it would never really happen. Many a night I cried myself to sleep thinking of what I might have lost with you.\" She wiped away a tear. \"It seemed so ridiculous at the time, after all, we had only known each other a few days at the time but you had changed something in me that first night. Awoken something in me. Now I know what happened of course...\" As she spoke she ran her finger along Vala's lips. Gently she pushed Vala's mouth open slightly exposing her fangs, razor sharp even when retracted. \"...you took me.\"\n\nVala started to say something but Rae quieted her with a gentle finger to her lips. \"Ssssh.\" She whispered. When Vala acquiesced she resumed running a finger lovingly over Vala's gleaming white fangs. \"So beautiful.\" She whispered. With slight movement, Rae pricked the tip of her finger on the needle like point of Vala's fang, drawing a single drop of brilliant crimson that glistened in the starlight. Watching in almost hypnotic fascination she touched the drop of her blood to Vala's tongue. \n\nThe reaction was instantaneous. At the taste of blood, even Rae's undead blood, Vala's instinct to feed sprang to life and her fangs extended to their full length. Vala hissed as she sucked in a surprised breath. \"Why did you do that?\" She asked, her fangs giving her words a slight hiss. \n\nRae again quieted her lover with a finger on her lips then went back to caressing her lover's now elongated fangs. The long curved teeth were wickedly sharp. They looked cruel, deadly, and in their own way, beautiful. \n\n\"You took me on that first night in the mountains. You used your powers to take over my mind. To control me...\" Rae said slowly looking up into Vala's eyes, \"...to possess me.\" \n\n\"I didn't even know...\" Vala tried to protest. \n\nRae shushed her again. \"I know you didn't. You didn't know what was happening to you. You were scared and alone. I think in a way we both were. So the fates drew us together so we wouldn't be alone.\" She looked into Vala's eyes. \"Just like they brought you and the Mistress back together after all those centuries. You were meant to be together.\" She paused, \"And I think in a way, we were meant to be together too.\" \n\nShe continued in a soft, breathy voice that was just barely above a whisper. \"The night you finally came back for me and offered me eternity, to make me like you, to let me be with you forever, that was the happiest day of my life. I would have given anything to be with you again.\"\n\nAnother tear rolled down Rae's cheek and she looked down. \"I know I'll never mean as much to you as the Mistress does, but I hope that...\" her voice quivered and she stopped. Taking a deep breath she tried again, \"I hope you... I... I just want you to know how much you mean to me. Since that first night together you've never been out of my thoughts for a single day. I... I love you Vala.\"\n\nVala sat silent for a long moment, considering her words carefully before speaking, \"I love you to Rae. I think I always have. From the first time I saw you, you seemed so confident and self-assured. Even in that lumber camp full of all those rough woodsmen, no one would dare cross you. You were too strong for any of them. You were beautiful in your strength and in your confidence.\" After a pause she continued, \"I don't think my heart is so small that I can't love who I want to. I do love the Mistress, but that doesn't mean I don't love you as well. Maybe my love for her isn't the same as my love for you but why does that matter? It doesn't mean my love for you is any smaller or less meaningful, only different. I care for you, you care for me, that should be enough.\"\n\n\"But what if you had to choose?\" Rae asked.\n\n\"Why must I choose? The Mistress does not care who I choose to love as long as I love her. She is not jealous. The fates know she has many lovers besides me. Yes we are bonded but that does not exclude me from giving my love to others,\" she touched Rae's chin, making her look into her eyes, \"from giving my love to you.\" She kissed Rae tenderly, \"I'll never leave you Rae, I swear it.\"\n\nRae's lips quivered at the promise but she smiled a little. \"I know.\" She whispered. \"I know, but I just needed to hear you say it tonight.\" She kissed Vala back. \"Thank you.\" \n\nVala ran her hand down Rae's cheek to the side of her neck, her fingers touching in just the right places. \n\nRae sighed with pleasure. \"You do that so well.\" She purred. \n\nA smile curled the corners of Vala's mouth. \"I've had three hundred years to practice.\" The fingers probed behind Rae's ears driving another sigh, this one closer to a growl. \n\nVala leaned in close and whispered in Rae's ear, \"Perhaps I should show you just how devoted to you I really am.\" She started at the top of Rae's ear and kissed her way down planting small, wet kisses till she reached the earlobe. With her tongue she deftly pulled the lobe into the mouth and tenderly worried the sensitive skin. \n\nGroaning, Rae grabbed a handful of Vala's hair and held her friend and lover in close. \"You're so good.\" \n\nStroking one of Rae's heavy breasts Vala said \"Like I said, I've had a lot of practice.\" Her fingers found the hardening nipple even through the heavy material of Rae's fine dress and gently but firmly gripped the sensitive nub. \n\nRae squirmed. \n\nVala smiled. \"You always did have such wonderfully, deliciously, sensitive breasts.\" She gave the nipple a firmer squeeze. \n\nRae gasped softly. \n\nStill kissing and nibbling on Rae's ear and skillfully using only one hand, Vala started to unbutton the dozens of small pearl buttons running down the back of Rae's dress. In only a few moments the gown was loose and Vala slid a hand inside. The bustiere was sewn into the dress and Rae was naked under it. Vala cupped the heavy fullness of Rae's large breast. Her nipple was already hard and the areole was tight with her building excitement. Slowly, Vala's talented fingers traced the sensitive skin making Rae whimper with need. \n\n\"Please Vala, I need you so badly tonight.\" Rae said earnestly. \"Please...\" \n\nMoving down, pulling the gown down with her, Vala placed a kiss between Rae's breasts. \"Anything for you my love.\" She kissed one of the big nipples, \"Anything.\" \n\nLips, cool and firm, wrapped around Rae's hard nipple, pulling it in. A tongue, smooth and wet slid around it, rolled it and caressed it. Rae moaned. One hand held the back of Vala's neck, her fingers gripping the silky blond hair while her free hand went to her other breast and she gave herself a firm squeeze. Vala was certainly right about her having sensitive breasts. Pleasure rolled through her as she looked down at Vala, watching as her love suckled her. \n\nFor several minutes Vala worried Rae's large, hard nipples, moving deftly between the two, leaving trails of wet, sucking kisses around each mound, down through the valley between and back up to the smooth pink areole of the other mount. Rae's moaning was becoming louder and more frantic with each wet caress. Vala's hand had also begun to roam farther and farther afield, sliding down Rae's back to fondle her backside. Rae shivered as she felt Vala's fingers making their way slowly, teasingly around under her bottom, making their way ever closer to her center. \n\nWith a final, soft kiss between Rae's breasts, Vala stopped and looked up at Rae. Their eyes locked and once again Rae fell into the bottomless black void of Vala's incredibly dark eyes. Rae shivered and watched breathlessly as Vala stood up and backed away. With quick efficient movements Vala unbuttoned her gown. It slipped noiselessly down to pool around her feet. Her corset and smallclothes were likewise removed and then Vala stood before her, nude as the air except for shoes and jewelry. Even after all these years Rae was still taken aback by Vala's striking beauty. \"By all the Gods Vala, you're beautiful.\" She whispered. \n\nWordlessly Vala gave a small, almost shy smile of appreciation. She came up to Rae stopping just as their breasts touched. Leaning in, she kissed Rae softly, then pulling back she smiled another small smile that just showed just the barest hint of her still elongated fangs. ",
        "Rae watched as Vala pulled in her lower lip and bit down slightly on one side with her fang. The pink skin of her perfect lip puckered in slightly for an instant before the fang pierced her. A single drop of brilliant crimson formed on Vala's punctured lip when she opened her mouth a moment later, another small flash of red gleamed on the tip of the fang. Rae felt her insides tighten at the sight of the blood, her instincts to hunt and feed, began to assert themselves. Slowly, decadently, Vala licked the red life from her lip with the tip of her tongue. Without a word Vala leaned in and kissed Rae deeply, pushing her tongue into her mouth, sharing the single crimson drop. \n\nAt the hot, molten copper taste of the blood, Vala's blood, Rae's instinct to feed flared. Her fangs instantly unsheathed and hissed with need. \n\nVala leaned away slightly and smiled a fierce, predator's smile revealing her own gleaming fangs in all their beautiful, deadly glory. In the gloom, her eyes glowed faintly crimson as they bored directly into Rae's soul. \n\nRae shuddered under the intensity of Vala's enchanted gaze, she felt helpless but also complete. \"Take me my love.\" She whispered. \n\nVala wrapped her arms around Rae and pulled her in tight for a passionate, almost savage kiss. Her desperate need to be with this woman she loved so completely burst forth finally and she let it drive her. Their lips locked tightly, faces as close as could be, sharing their breath. Rae could taste blood and knew her tongue and lips had been cut by Vala's fangs and Vala had been cut by her in return but the taste only fueled their passions. Their blood, their lives, their souls intermingled, making them as one, bonded to each other, forever. \n\nAfter a seeming eternity, Rae pulled back gasping for air. \"My love...\" she whispered. \n\nVala leaned down and wrapped her lips around one of Rae's large nipples again but this time was different. Vala's movements were stronger, more demanding. She was no longer gently caressing Rae's breast, now she was sucking hard, pulling on the large pink nub as she knew Rae liked. Rae groaned as Vala's hand came up and with expert fingers started to roll and tease the other nipple as well. Rae placed one hand on the back of Vala's head while the other hand sought out the stone railing for support. She looked out over the darkened city as she moaned aloud and hoped in a detached way that no one was looking up at that moment. \n\nVala released Rae's nipple with a wet pop and looked up at her, smiling wickedly. At the look Rae felt a gush of wetness between her legs and her knees went weak. Strong fingers gripped both of Rae's nipples, making her whimper. \n\n\"Do you like this, my Love?\" Vala asked, her voice hissing through her fangs. \n\n\"Yes.\" Rae hissed. \n\nThe fingers pinched harder, rolling the firm, sensitive nubs. \"Are you sure you like it? I could stop...\" Vala teased. \n\n\"Noooo.\" Rae moaned. \"Please, I need it. I need you.\" \n\nOne nipple was released and the hand trailed down her stomach. The fingers teased the soft hairs over her mount. \"Perhaps you'd prefer this?\"\n\nShuddering, Rae whispered, \"Yesss.\"\n\n\"What was that?\"\n\n\"Yes.\" Rae said louder. \n\nVala stroked the soft hairs for a minute, building her lover higher. Her finger just grazing Rae's sensitive lips. \"What do you want my Love?\" Vala cooed, her voice thick with passion. \"What would you like me to do?\" \n\nHeat rose in her cheeks as Rae answered, \"Enter me. I need you in me now.\" A moment later Rae gasped as Vala's finger slid between her wet outer lips. \n\nVala dropped liquidly to her knees and kissed Rae's mount softly. \"Anything for you my Love.\" One finger slid easily inside Rae driving a gasp from her as she leaned forward to grip the rail with both hands. \n\nRae stared out over the darkened city skyline as Vala pushed up, deep inside her. The pleasure was exquisite. After centuries together, Vala knew exactly how to touch her. A second finger slid into her sex and she sensed Vala changing position under her. A throaty moan filled the air as she felt Vala's lips kiss her sex. Vala's tongue moved over her outer folds then down to her center. The moan became louder when Vala's tongue finally found her hard little clit. \n\nWithout thinking, Rae began to roll her hips with the movement of the fingers inside her. She felt Vala push up and forward, hooking her fingers inside her, finding just the right spot. She indeed knew Rae well. \n\nRae cried out as Vala drove her relentlessly higher. In minutes Rae was moaning uncontrollably, her hips rocking wantonly as she rubbed herself on Vala's face. She felt a tightness building rapidly in her core and knew release was approaching. \"Val...\" she gasped. \"I...I...\" \n\nAt that moment Vala wrapped her lips around Rae's little center, sucked it in and flicked the tip with her tongue. \n\nRae's world shattered as her body contracted with a shockingly hard climax. The hands clutching the railing locked on with a grip of iron as her back arched and she cried out in rapture. Hot waves rolled through her body as the climax filled every corner of her being and then some. On and on the pleasure went as Vala continued to flick her tongue over Rae's sensitive core. Her hips rocked back trying to get relief but Vala's strong fingers only pushed harder and deeper inside her, Vala had her, captured by her sex, controlled by her passion. \n\nThree more climaxes rolled through Rae, driving her to the brink of blackness. Her cries were becoming ragged, whimpering moans when Vala finally released her. \n\nRae dropped to the cold flagstone floor beside Vala. The beautiful blond guided Rae's head into her lap and gently stroked her hair as she slowly drifted back. \n\n\"You're beautiful when you're in rapture.\" Vala said quietly, still running her fingers through her hair. \n\nStill unable to speak, Rae nuzzled deeper into her lover, pressing her lips to Vala's smooth stomach, kissing the tender skin. \n\nSometime later Rae finally felt able to speak. \"No one can ever release me like you do Vala.\" She pushed herself up on one elbow and kissed Vala on the lips. Vala tasted of her sex and it rekindled Rae's fire. After sharing a long kiss, she pulled back and moved to Vala's breast, kissing her perfect, small pink nipple before wrapping her lips around it and starting to suckle. Vala moaned. Much like Vala knew Rae so well after centuries, Rae knew Vala just as well. She knew that her long time love would have been built to a fiery pitch by Rae's repeated climaxes. More so that almost any other woman Rae had slept with over the centuries, and there had been many, Vala was aroused greatly just by bringing another woman to her climax. Many times Rae had seen Vala climax without even being touched herself. Just by bringing another woman to her peak, Vala would peak herself. \n\nKnowing that Vala hadn't peaked while loving her meant that she must already be close. Probably very close. Rae grinned to herself. After years of sharing a bed, Rae well knew what Vala's favorite positions were. \n\nSitting up, Rae kissed Vala deeply for a long minute, savoring the soft feel of her lips, the energetic movements of her tongue and the salty, musky taste of sex on her lips. Pulling back she looked deep into Vala's eyes before pushing her gently to the flagstone floor of the balcony. \n\nVala lay back without protesting even at the touch of the cold stone floor on her naked flesh. \n\nLooking down Rae couldn't help but gaze at the image before her. Vala's pale, perfect body with her long legs, womanly hips, slender waist and full breasts was laid out before her in all its glory. Her silky blond hair was spread out around her head like a golden crown. Delicate pink lips smiled up at Rae expectantly while those unimaginably black eyes watched her lovingly. She was such a striking vision of unequaled beauty that for a minute Rae was paralyzed. For all the long centuries of her life yet to come, Rae would forever after hold that image of Vala in her mind as the most beautiful thing she had ever witnessed in this world. \n\nRae reflected that Kings and Emperors over the centuries had brought entire nations to war for just the chance to possess a woman with beauty that even approached Vala' unearthly radiance. \n\nShe was surprised when Vala whispered, \"You're so beautiful Rae.\" \n\nRae looked down at her own body and mentally compared it to Vala. Her much larger breasts, thicker middle and wider hips. Her rounder face surrounded by mousy, dark blond hair, blue eyes and a small round nose. She smirked, \"No, not like you.\" \n\nReaching up, Vala traced one fingertip over Rae's cheek, trailed it down over her full breast then down between her thighs making Rae squirm. \"You're beautiful to me Rae, you always have been.\" \n\nThe honesty and devotion that statement carried made Rae's throat tighten with emotion. A single tear formed in the corner of Rae's eye. \"You're so good to me Vala.\" she whispered. \n\nVala's smile turned impish and she pushed the finger between the still sensitive lips of Rae's sex, making her gasp. \"Yes, I am good to you, aren't I?\" Vala's smirk widened as she wiggled the finger inside Rae. \n\nWith a supreme force of will, Rae freed herself from Vala's talented fingers with a deft roll of her hips. Grabbing one of Vala's knees she pulled her lover's legs apart slightly and forced Vala's hips to roll back. Turning sideways, she straddled Vala and lowered herself onto the recumbent blond, sex to sex. The intimate touch was electric and they both gasped at the sensations. \n\nVala started to push upward, rolling her hips against her but Rae stopped her with a hand to her stomach. \"No, let me do this.\" She said softly. Lust and longing burned deep in her black eyes but none the less, Vala submitted to Rae's direction and lay back, closing her eyes, panting softly with her need. \n\nControlling her own need, Rae moved her hips slowly, rhythmically at first, building them both up gently. The feel of their wet sexes slipping past each other was delicious and Rae couldn't contain her moaning. The whole time she moved, her eyes never left Vala. She watched her lover's every moan, every sigh and every twitch as her passion built up inside her. \n\nAs both of them continued to climb, Rae's movements became faster and needier. She pushed and rolled harder, trying to make the contact even more intense. Vala's movements and noises were becoming more desperate as well and she knew her lover was close. \n\n\"Go my love.\" Rae gasped. \"I want to... to... watch.\" \n\nThat was all it took to push Vala over the edge. She cried out and thrust her hips up hard into Rae as she climaxed. \n\nRae gripped Vala by the knee, pulling her leg up and holding them together as she continued to roll her hips, continued to push Vala higher. She watched Vala's beautiful face contort in tortured delight as another climax took her. Rae watched Vala's jaw clench, her eyes close and her nostrils flare as she sucked in quick breath before groaning long and low, her body bucking under her. \"Ooooh...\" Vala moaned \"Yesss...there...right there...yesss...\" \n\nFollowing Vala's directions, Rae tried to keep her motions precisely where Vala wanted. She shifted her hips back and forth slightly trying to get it just right... \n\nWith a cry, Vala arched her back and clutched at Rae with a grip of iron as another surge took her. \"Yes...!\" She yelled. \"Rae...I... uuuh...\" \n\nRae could feel the wetness between her legs increase and knew Vala's climax had been very powerful. Finally it was all too much for her. Watching her love in the throes of ecstasy, hearing her cries, feeling Vala's wetness covering her sex, the scent of their lust filling her head... with a shriek, Rae came.\n\nHours later they had moved off the balcony and into Rae's enormous bedroom. The heavy curtains were drawn against the coming dawn but still the room was brightening noticeably. Wrapped in each other's embrace, the scent of sex heavy on the air, they lay quietly, simply enjoying each other's company. \n\nEventually, Rae broke the silence, \"How long do you think till we will have to travel to America?\"\n\nVala stroked her hand over Rae's cheek and kissed the top of her head. \"Not for a while yet I should think.\" \n\nTurning her head up Rae looked into Vala's eyes and smiled at the love she saw reflected there. \"Not this morning then?\" She raised one eyebrow mischievously. \n\nVala's own smile became mischievous in return and she bent down to kiss Rae softly on the lips. \"No, not this morning my Love.\" She pulled Rae into a kiss. They rolled over and settled deeper into the huge, luxurious bed. With one arm, Rae pulled a blanket over them closing out the world for just a bit longer. \n\n* * *\n\nHuntington, New York, 1929\n\nGravel pinged and rattled off the underside of the Stutz Bobtail Speedster as Rae dropped the transmission down one gear and floored the accelerator as she came out of the corner. The rear of the car slewed wildly out and she turned the steering wheel out of the turn to compensate, controlling the car's direction more with the throttle than the steering wheel. As the rear tires found traction on the gravel road the car came back on center and charged ahead. Rae shifted into fourth gear, cramming the heavy lever into its notch with a metallic crunch as the gears grudgingly engaged. \n\nA broad grin was plastered on Rae's face as she watched the needle on the speed gauge climbing towards seventy. The howl of the wind around the small twin windshields and the roar of the tires on the gravel road was nearly drowned out by the banshee like wail of the exhaust from the big inline eight cylinder engine. \n\nThe trees beside the road flashed past in a terrifying blur as the roadster devoured the road that stretched out into the darkness before it. \n\n\"Please...stop!\" Came a cry from the seat beside her.\n\nRae glanced over to see Greta practically in tears and gripping the door handle with so much force that Rae wondered if the petite woman might actually tear it off. \n\nAfter a few more moments of relishing the speed, Rae took pity on Greta and eased off on the accelerator, letting the car coast down to a more civilized speed. As the speed fell away the auditory cacophony died away as well and Rae could hear the girl whimpering in terror. \n\nAfter she collected her wits Greta said slowly, carefully annunciating each word, \"Don't... ever... do... that... again.\" \n\nLaughing, Rae downshifted the car into third gear then into second as she turned off the main road onto a side road. The road before them was lightened by the cars big electric lamps and the countryside around them was illuminated by a stunning early summer full moon. A road sign announcing Huntington Center 4 miles flashed past in the headlight's glow. Rae glanced over again and could see the relief written all over Greta's freckled face as the woman realized that they were almost to the summer estate. \"You don't like my new car?\" She asked innocently. \n\nGreta looked over, her eyes still wide, \"No, sorry. I prefer the Mistress's Dusenberg to this...\" she hesitated, then continued, \"little... thing. I especially prefer Branwen's driving to yours.\"\n\nRae laughed, \"Branwen? She drives that car like an old woman driving a horse cart!\" She laughed again. \n\n\"She is an old woman in case you've forgotten. So are you if you'll bother to remember.\" \n\n\"While I will admit that technically three hundred and eighty nine is pretty old, I try hard not to think of myself as old. I did that years ago, acting mature and reflective, in the end it did me absolutely no good at all. All it did was make me lonely, bored and miserable. Now I'm going to enjoy myself, act however I want and to hell with the consequences.\" \n\nA set of red tail lights appeared farther up the road and Rae slowed down as she gained on the slower moving car. After a minute she had pulled up behind the slower moving burgundy and white Packard. Rae thought there were probably more luxury cars in northern Long Island, the Gold Coast as it was known, than anywhere else in the world during the summer as the elite of New York society escaped the heat of the city in the summer. \n\nAs soon as the road straightened Rae crammed the gearshift down into second gear and floored the accelerator, whipping the smaller Speedster out around the huge lumbering Packard in a spray of gravel and a wail of exhaust noise. \n\nRae looked in the small rear view mirror strapped to the top of the fender mounted spare tire and smirked as she saw the Packard's headlights weaving madly back and forth across the road as the other driver swerved away from her wild pass. Out of the corner of her eye she saw Greta looking at her and she turned making eye contact. Greta was looking at her with a look of stern disapproval that would have stung even the Mistress. \n\nRae shrugged it off and with one eyebrow raised asked as innocently as she could, \"What?\" \n\nGreta only shook her head and looked back to the road ahead but Rae caught the ghost of a smile playing at the corners of the readhead's full lips as the car charged on into the night. \n\n* * *\n\nThe Stutz rolled slowly backward into one of the parking stalls in the huge old carriage house that had, at Rae's insistence, been converted into a garage a few years ago. \n\nThe ignition clicked off with a loud pop and the engine sputtered to a stop. After the constant noise of their long drive out to the country estate the sudden quiet was deafening. Rae had parked the car next to the Mistress's brand new black and silver, two tone Dusenberg Model J custom towncar. Rae took a moment to admire the extravagantly grand new automobile with its large enclosed rear passenger compartment and traditional open roofed driver's seat. She knew Branwen enjoyed driving the big car at night but during the daylight hours the task was handled by a hired chauffeur while the Mistress and her guests rode in the rear compartment with curtains drawn to protect them from the suns painful rays. \n\nThe huge town car limousine dwarfed Rae's far smaller Stutz Speedster and Rae almost laughed at the sudden mental image of how much her smaller two seater resembled a tug boat for the Mistress's huge ocean liner of a towncar. \n\nThe lights inside the old carriage house were off so Rae left the Stutz's headlights on. The glaring electric light reflected off the brilliant chrome and gleaming red paint of Else's Bentley Speed 6 Coupe that was parked directly across the main isle and threw wild shadows and reflections around the inside if the building. \n\nWith a languid stretch Rae worked the kinks out of her back as she climbed out through the small half door, pushing it closed with a lovingly gentle click. \n\nGreta was far less caring of the mechanical conveyance and source of her recent misery. She slammed the car door shut with a bang and headed out through the large, swing out double doors, towards the main house. \n\nRae smirked to herself at the behavior as she removed her bags from the small storage area behind the seats. She thought of chiding Greta about the servant leaving the employer to carry her own bags but the thought was only fleeting. \n\nGreta and her twin sister Branwen had long ago ceased being true servants of the Mistress. They had become something akin to personal assistants, primarily for Vala but also to a lesser degree Inga, Else and herself. Rae found it slightly odd that even after almost four centuries the sisters still felt the need to serve others when they could easily be their own masters with the immense powers they both possessed but for whatever reason, the sisters seemed to be happiest when under another's directions. That was especially true if that person happened to be Vala. Perhaps it was something in their nature, or perhaps it was something else. ",
        "Personally, Rae suspected it was probably some combination of a naturally submissive nature coupled with Vala's mind control all reinforced when they were transformed so that the condition became permanent. Whatever the reason, the twins were completely loyal and devoted to Vala. \n\nLess than five feet from where Rae stood collecting her bags, a shadow detached it's self from the wall and took a step towards her. Rae gasped in surprise and dropped her bags as she stumbled back a step before her mind registered what happened. \n\n\"By the Goddess, Branwen! Don't do that to me!\" Rae took a deep breath and placed a hand over her suddenly racing heart. \n\nWith a smile that was somehow both obsequiously apologetic and irritatingly haughty, Branwen bowed slightly. \"I'm sorry, I didn't mean to startle you.\"\n\nRae quirked one eyebrow and snorted in a very unladylike manner, \"Don't give me that, yes you did.\" She reached down and righted one of the suitcases that had fallen over when she jumped.\n\nWith a nod and a smile Branwen acquiesced, \"Ok, so I did. But it serves you right for scaring my sister on the drive here like you did.\"\n\n\"I didn't scare her that much.\" Rae muttered as she brushed the dust off the bag and set it down more easily this time. Crossing her arms under her heavy breasts, she sat back on the car's rear fender. \"She was just over reacting. I was only having a little fun.\" \n\n\"No, you went too far.\" Branwen said flatly. \"She was terrified. I know, I felt it.\" The authority in her voice brooked no argument. \n\nOne of the things that still marveled Rae even after almost four centuries was the bond that had formed between the twins upon their transformation. She had heard it said that all twins shared a special bond that only twins had. Some even said that certain twins could sense each other's thoughts and emotions. Rae didn't know if that was really true but after seeing Greta and Branwen interact over the years, Rae wouldn't be surprised to find out it was. \n\nThe bond between Greta and Branwen had been mild at first but in the years following their transformation, the connection became stronger and more dynamic. Within a few years of their transformation the twins could sense each other's emotions even at significant distances. By the time a decade ad passed, they were to the point of sharing physical sensations. When one sister stubbed a toe, the other knew it and would yelp in pain even if she were a hundred miles away. Whatever mild mystical bond the twins had possessed before, it had been vastly intensified after their transformation.\n\nAttempting to change the subject away from her driving habits and the frightened Greta, Rae asked, \"Is anyone else here yet?\" \n\n\"No, Vala and the Mistress are coming in by train the day after tomorrow. Else and Inga should be arriving tomorrow, also by train. I am picking them up at Central Station later in the evening.\" Branwen took a step forward and picked up two of the cases. \"Now stop changing the subject.\" She looked Rae in the eyes and for an instant Rae was pinned by their brilliant green depths. With Rae sitting back, she was now almost at eye level with the shorter woman \"Please stop scaring her. She really doesn't like it when you drive like that.\" \n\nSeeing the earnest look in her eyes, Rae relented. \"Ok, I'll go easy on her next time.\" \n\nNodding her acceptance of Rae's gesture, Branwen smiled, \"Thank you.\" Pointing her chin towards the car, \"Next time you want to go for a fast drive with someone, just ask me instead. I enjoy the thrill a lot more than she ever will.\" \n\nRae found this both amusing and completely implausible. She studied the woman for a moment, trying to see if she was toying with her but couldn't decide. \"You? I've never seen you go over thirty miles per hour.\" \n\n\"That's because you're always riding with Vala or the Mistress in the car when I'm driving. There are appearances to keep up you know.\" She quirked one eyebrow and twisted her lips into a half smile, perfectly mimicking Rae's customary expression of wry amusement, \"And the Mistress would skin me alive if I drove like you with her in the back. But if you don't believe me, maybe we should take out the cars some night and we'll see who is crazier behind the wheel.\" \n\nRae was more than a little surprised at the pretty red head's playfulness tonight. It was a side that showed it's self rarely and when it did Rae was almost never the target. \"What's gotten into you tonight?\" \n\nWith a little twist of her lips, Branwen set the suitcases back down and took a step closer to Rae, looking up into her eyes. The petite redhead was much slighter of build than Rae and almost a head shorter, the top of her curly red hair barely coming to Rae's chin when they were standing. \"I don't know. Must have been the exhilaration I felt through Greta while you two were driving. The excitement and thrill doesn't do a thing for her, scares her silly really, but it works well on me. It gets me all fired up.\" She took another step right up to Rae who was still sitting on the car fender, now looking on in bewildered amazement. \"Also, Greta kept sneaking glances at you while you were driving. She really does have a thing for girls with big breasts, you know.\" Branwen said with a provocative leer at the generous swath of Rae's cleavage that was exposed by her low cut blouse. \"I think she really liked the way that new blouse accentuates your...\" She lightly traced a finger over the exposed tops of Rae's breasts for a moment before continuing, \"...features.\" \n\nRae could only nod doubly at the revelations form Branwen. The whole situation was slowly slipping into a bizarre unreality for Rae. It wasn't the admission that Greta was into women with large breasts, that was no surprise at all. They all had known that for centuries. What was surprising was the way Branwen was apparently coming on to her. It was rare for Branwen, or Greta for that matter, to ever initiate intimacy or even flirt on their own. They were typically very passive and while more than willing to accept another's flirting or invitation for affection, they vary rarely sought out either on their own. Simple lust just wasn't in them... usually. \n\nBranwen hooked a finger into Rae's cleavage and pulled the bodice down a little, exposing more of the soft, creamy mounds as she said in a throatier voice, \"So while I was getting turned on by the thrill of your driving, she was getting turned on by the thrill of looking at you. But since we share all our feelings, we were really getting double dosed with arousal.\" \n\nAs Branwen had closed the distance between them Rae became aware of the excitement that was practically rolling off the smaller redhead in waves. She wondered that she hadn't noticed it before now but decided that the experience of seeing Branwen making a sexual advance was such a rarity that it just hadn't registered. Deciding to play a bit coy and let Branwen drive for a while, Rae asked, \"So if you were getting so turned on by both sets of feelings, shouldn't Greta be all hot to trot now as well? The way she stormed out of here a few minutes ago, she sure didn't seem in the slightest bit excited, except maybe about the prospect of getting away from me.\"\n\nBranwen looked up into Rae's eyes and pinned her again with that amazing green-eyed stare. \"Oh she was. She was just mad at you and was hiding it, or trying to. Believe me when I say she is very turned on at the moment. In fact I'd say she has slipped off someplace quiet to take care of her rather, um... personal needs.\" \n\nRae felt her jaw drop and she forced it closed with a click. \"You're kidding.\" \n\nA lascivious smile split Branwen's full lips showing her gleaming white teeth. Rae could see the razor sharp incisors gleaming in reflected headlights, retracted but still deadly sharp. \"No, I can tell everything that she is doing, remember.\" She hooked the finger harder into Rae's bodice, pulling it down further while also pulling her closer so that their faces were only a breath apart. She whispered, \"Would you like me to tell you what she's doing?\" \n\nWith a voyeuristic thrill and a rush of heat in her core, Rae nodded in mute fascination. \n\nHer green eyes slipped closed and Branwen let out a soft, breathy moan as she let herself fall deeper into the connection with her sister. \"She is down on her knees on something soft. Not carpet, it's too soft. Probably her bed since I can feel the fabric wrapping up around her legs from her knees to her feet. She's pulling her dress up over her head now. I can feel the fabric sliding over her skin.\" Branwen sighed a little. \"She's so turned on that just taking the dress off felt wonderful. She's working at getting her corset off now. I can feel her fingers pulling on the stings.\" A few seconds passed and she continued, \"She's frustrated. The knot is too tight, she can't get it loose and her need is building. She wants it off now.\"\n\nRae listened and was both fascinated and aroused listening to Branwen speak of what her sister was feeling. She noted with amazement that she could actually hear the tone of Branwen's voice changing to one of frustration as she shared her sister's emotions. She watched silently as her own need built quickly between her thighs and started spreading out from there. She felt herself getting wetter by the moment and her nipples were already straining painfully at her own undergarments. \n\n\"Finally.\" Branwen continued, her voice clearly reflecting her sister's relief. \"It's off. I can feel her breasts move freely now. I can feel the cool air on her sweaty skin as she peels the constricting garment off. It feels so wonderful.\" She looks to Rae almost pleadingly, \"Take mine off too.\"\n\n\"Your corset?\" \n\n\"Everything.\" Branwen breathed hoarsely, \"I want to feel more of what my sister is feeling. Strip me.\" \n\nNodding wordlessly, Rae starts unbuttoning Branwen's dress. The dress fastened up the back and Rae was a bit dismayed at the sheer number of small pearl buttons marching up in a straight line from the curve of her backside up to the high neckline. \n\n\"She's cupping her breasts now.\" Branwen moaned softly and her head rolled a little. \"They feel wonderful, so smooth and firm. Her nipples are hard and...\" she gasped in surprise, \"Oh! She's just pinched her nipples. Yesss... she's rolling them now... oh Goddess this feels so good.\" Her eyes snapped open and she twisted her head around to look at Rae. \"Get my dress off! Please!\" She pleaded. \n\n\"I'm working on it.\" Rae grumbled. She had most of the buttons undone with only a few left to go. \"Next time you're going to be a voyeur on your sister, wear something with fewer buttons.\" \n\n\"Rip it off.\" Branwen growled but even as she spoke Rae popped the last button. The fabric came loose and slid down to pool around Branwen's feet. She moaned in anticipation. \"The corset too.\" A few moments later she felt the constriction around her middle lessen she moaned again. \n\n\"She's realized what I'm doing I think.\" Branwen said quietly. \"At least she knows I'm copying her and spying on her. I don't think she knows you're here with me.\" She cupped her own breasts and sighed with pleasure. \"At least not yet.\" \n\n\"Will she be embarrassed? Or angry?\" \n\n\"She's too turned on for either I think. The idea of me copying her is exciting her even more. I can feel her excitement. She's soaking wet and...aaaah!\" Branwen almost fell and probably would have if Rae hadn't caught her. \"She just touched herself.\" Branwen breathed then groaned. \"So good...\"\n\n\"She feels you holding me.\" Branwen moaned. \"She knows you're with meeee...\" She panted. \"She's fingering herself. She wants us... no, me, she wants me to climax for you. Ungh...\" Branwen grunted as her knees buckled and she sagged heavily into Rae's arms. \"She wants you to watch me come.\"\n\nRae's body was singing with sexual arousal and need from the show that Branwen, no, both sisters had been giving her as she clutched at the moaning redhead wondering what to do with her. It wasn't that the girl was heavy. With her preternatural strength Rae could have easily carried her slim body all night. The problem was the garage floor was filthy and Rae didn't feel right about laying her down in the dirt. Working one hand free she managed to open the rear door to the Mistress's Duesenberg and set Branwen down on the sill, lying her back as gently as she could on the plush, carpeted floor. The back passenger compartment in the custom towncar was huge with two plushly upholstered seats in the back and two smaller rear facing jumpseats mounted to the wall that divided the passenger compartment from the driver. With the jump seats folded up, the open space on the floor was almost as large as a bed. \n\nBranwen continued to groan and pant as her head rolled about. Her hands went to her breasts and she gave her nipples a hard squeeze. \"Is that want you wanted Greta?\" She whispered to her sister. \"Was that good? Do you want more?\" She gave her nipples another hard pinch, rolling them and pulling them as she moaned. \"Yesss... do it.\" Her eyes opened and Rae saw the intensity of Branwen's hunger burning there. \"Take you clothes off. I... no, we, need to taste you. Please... we need it.\"\n\nThe entire situation was bizarre in the extreme to Rae but it was also very exciting to her because it was so unexpected. In all her years with the Mistress and Vala, the twins had never really shown all that much interest in her, at least not sexually. Certainly she had slept with them many times when the mood struck, often times because of her and the twins mutual attachment to Vala. But this kind of wanton need for her by them was something new. The sexual connection between the sisters was also something new to Rae. She had never before seen it displayed to this extreme and had to wonder if it was real of if Branwen was playing it up for her benefit. \n\nThe thought suddenly occurred to Rae that perhaps the full moon had something to do with the seemingly intensified connection between the sisters. Being creatures of the night, they all were influenced by they phases of the moon far more than normal beings. All of their powers waxed and waned to a certain degree based on its phases and she imagined the twin's connection would be no different from those other powers. Now that she thought of it Rae could feel her own powers were actually running very high at that moment and she tried to remember if tonight's full moon was something special. She couldn't recall but she had a vague memory of Vala mentioning something about it a few weeks back. The memory danced elusively on the edges of Rae's mind but she couldn't quite remember. She decided that it really didn't matter what the reason for the special moon was, the result was what mattered. She felt wonderful and flooded with power and apparently so did the twins. Without much effort she pushed the thoughts away and climbed into the car the rest of the way, settling down next to Branwen. \n\nA hungry desperation now in her voice, Branwen hissed, \"Take you clothes off. I need you.\" As she said it she pulled clumsily at Rae's blouse, managing only to rip the buttons free, exposing Rae's undergarments. An almost feral growl escaped the smaller woman as she yanked the silk bra. \n\nRae felt the sting as the flimsy silk straps snapped and then the coolness of the night air on her exposed breasts. She was glad at that moment that she had long ago given up the more traditional corsets that the twins still favored. If Branwen, with her inhuman strength, had yanked off a corset like she just had that flimsy brazier it might have broken Rae's spine. \n\nHer thoughts were interrupted when Branwen wrapped her arms around her and pulled Rae down before she could actually get any more of her clothes off. With an almost savage need, Branwen wrapped her lips around Rae's big nipple and sucked on it, hard. \n\nWith a surprised gasp, Rae fell forward over Branwen who was lying flat on her back now. Rae's blond hair tumbled down as she looked down at the pretty maiden desperately suckling breast. Branwen switched from one to the other, leaving wet trails of kisses and bites as she moved between them. Whichever nub she wasn't worrying with her teeth and lips, she twisted and rolled with her strong fingers. \n\nRae relished the attention that Branwen was lavishing on her sensitive breasts and moaned appreciatively. Beneath her Branwen's movements were becoming more frantic as her sister's climax approached. The suckling and pulling on her nipples was becoming harder and more frantic with every passing second and Rae wondered how much longer the twins could hold off their peak. \n\nRae's nipple was released with wet pop as the hands on her breasts slid down to her hips and then to her thighs. Branwen pulled herself down while also pushing Rae up, bunching Rae's skirt up around her waist. Rae hardly had time to register the change before her hips were pulled down and her panties pushed aside as Branwen's tongue invaded her hot sex. Rae let out a startled bark of pleasure as the small redhead expertly rolled her tongue around inside Rae for a few seconds before sliding out to lick around her clit and then back. She could feel more than hear the girl's moaning as her peak approached. \n\nRae sat back on her haunches so she could look down into Branwen's amazing green eyes. She shuddered at the intensity of the lust burning in them and the lewdness of seeing the pretty girls' face between her thighs, her red hair spread out in a fan around her, her lips wrapped around Rae's aching clit.\n\nAs they made eye contact, Branwen released Rae's clit and cried out. \"By the Goddess... oh... she's coming... she's... I, I'm... aaaagh!\" Her face contorted in ecstasy and her fingernails dug painfully into Rae's thighs as she shared her sister's climax. Rae watched, captivated as her lover had several long powerful climaxes without even being touched. The novelty of the experience brought Rae to the brink of climax herself. She could feel the impending release simmering deep in her core, only needing a little more prodding to finally come raging to the surface. \n\nAfter several minutes, Branwen regained her senses to a degree and she took a long, slow lick of Rae's sex. She let out a little contented sigh, \"Greta thinks you're delicious tonight. Your taste is driving her wild.\" She squeaked a little and shuddered. \"She's doesn't usually climax so easily or more than once alone. Typically, only Vala can get her going like that. I...ungh... she's ...\" Branwen's face contorted, \"No... oh no Greta, stop...please. Not another... no... I can't...I can't... \" she said weakly, clinging to Rae's strong thighs as if she were about to be swept away. Sweat was beading on her brow and dampening the red hair at her temples as she was carried towards another climax. Her words became inarticulate as her passions raced towards another release. \n\n\"Yes... yes... I will.\" She moaned then opened her eyes. \"She wants me to... to... make you...\" she moaned before gasping, \"...to come... on my face...\" her body shuddered. \"...to taste you.\" With desperate strength, Branwen gripped Rae by her thighs and plunged her tongue deep inside Rae's needy sex. The sudden invasion made Rae cry out and she fell forward onto her hands to straddle the petite red head. The move didn't unseat Branwen. She clung to Rae, rolling around inside her before moving to up to her clit, wrapping her lips around the hard little nub, sucking it in and lashing it with her tongue. \n\nIt took only a few seconds of the expert attention on her aching bud to push Rae into ecstasy. She cried out in rapture as her release flooded through her veins, searing away all conscious thought with a blinding flash. Surge after surge washed through her body, consuming her from the inside out, leaving her an empty, moaning shell lying insensible on the car' carpeted floor. ",
        "* * *\n\nThe world came slowly back to Rae as the euphoric fog slowly dissipated. Her dazed mind worked slowly, trying to put her thoughts back in order, trying to make sense of what she was feeling. The afterglow from her multiple orgasms continued to flow delightfully though her veins and she sighed with satisfaction at how wonderful her body still felt. Her nipples still throbbed delightfully and her entire body felt warm and...\n\nHer eyes snapped opened and she raised her head. Looking down she saw two masses of red hair splayed out on her chest. With a moan she put her disjointed feelings in order and aligned them with what her disbelieving eyes were showing her. One twin was snuggled up to her on either side, each suckling one breast while leisurely grinding themselves into her nude thighs. Apparently the rest of her clothes had been properly removed while she was still in her post orgasmic stupor. \n\nOne twin, Greta she thought, looked up and smiled. \"She's finally rejoined us.\" The other released her nipple and also looked up, the same little smile played across both faces. \"That must have been quite the little string climaxes you had. You've been lying there in a daze moaning and twitching for about twenty minutes now. We were beginning to wonder if you were ever going to wake up.\" \n\nRae couldn't hold back a groan at the deeply erotic sight of the identical twins before her. As she watched, the twin who had spoken first, Greta, leaned over to her sister and kissed her deeply in a very unsisterly way. They kissed like that for several long seconds, their tongues dancing until finally Greta broke away. Licking her lips she smiled wickedly, \"I can still taste you on her tongue, you know. You're delicious.\" \n\nAs one, they returned to lavishing attention on Rae's breasts for a few more deliciously long minutes while also continuing to grind themselves against her. Rae noted in a hazy, detached way that the twins moved in perfect harmony with each other. As one was sliding her hips down Rae's thigh, rocking forward, the other was moving in the opposite direction. Perfectly synchronized, like a choreographed dance, albeit a very erotic and sensual one. After a short while the twins started making identical little whimpering, moaning noises into Rae's breasts. Their movements became faster and more forceful as they continued to climb. \n\nRae was gripped by the sudden, intense desire to see the twin looks of rapture on their faces as they came. She wanted to look them in their matching green eyes and watch them climax together. Reaching up, Rae grabbed each girl by the hair and pulled their heads up, away from her breasts. They released her nipples and looked into her face questioningly, lust burning in both of them. She looked them both in the eye at the same time as best she could and whispered in her most seductive, enchanting voice, \"Look at me. I want to watch you.\" She put every ounce of her desire and lust into her command, willing the twins to obey her completely. As the words slipped past her lips, Rae could feel in her core that her words were more powerful tonight thanks to the full moon. In fact she sensed that she had just put more power behind that command than any other she had before in the entirety of her long life up until that moment. The thick, heavy words of her command seemed to fill the air inside the towncar with her power till Rae imagined she could actually feel the words crawling over her skin. Normally Rae couldn't command others the same as the Mistress or Vala could though she was quite powerful in her own right. The influence of her voice shouldn't have the same effect on a fellow vampire, even less powerful ones such as the twins, as it would have on a mere mortal, but tonight... \n\nRae watched fascinated as the twin's eyes glazed over as the powerful words driven by the power of the full moon slipped deep into their minds. Minds which were already open and willing because of their aroused state. \n\nAs one they whispered, \"Yesss.\" \n\n\"Can you really feel everything your sister is feeling?\" Rae asked neither of them in particular.\n\n\"Almost everything.\" The both moaned.\n\nRae wanted more. Digging deep into her core, she whispered thickly, \"You now share everything. Your minds are completely open to eachother. You will share your mind with your sister. You are completely open to your sister from now on.\" The irresistible words rolled into the small space of the car's cabin, making the wood and metal around them creak and groan in protest as the windows of the towncar rattled with barely contained energy. \n\nRae was shocked at the power that she had just called forth and more than a little frightened. She didn't really know where that thought had come from and she didn't' really know if it would make any difference since the twins were already so open to each other but as soon as the words popped into her head she knew she had to say them. Now that the words were out she wasn't so sure it had been a good idea. She realized could actually see ripples of power in the air around the twins as the enchanted words were absorbed into them. \n\nAs one the sisters cried out with pleasure, \"Yes!\" \n\nHer nervousness at what she may have done was quickly overpowered by her lust and after a minute she pushed her worries down. By now the twin's wetness was running down Rae's thighs as they continued their slow, rhythmic grind. She held them there for a few more long moments, enjoying their show, savoring their identical cries of bliss. As their passions continued to rage, she studied their faces more closely, noting that when one felt something, her face contorting in ecstasy, the other would follow suit only a fraction of a second later. Watching the way they shared their pleasure was erotic in in the extreme. Trying to imagine what they were experiencing, Rae felt a momentary flash of jealousy, wishing that she could join them. \n\nGripping them by their curly red hair, she twisted them face to face and whispered, \"Kiss.\" They complied eagerly, their tongues resuming the sensual dance of a few minutes before. Their movements were becoming almost frantic as they approached their peak but Rae wasn't done with them yet. \"You're not allowed to climax until I say you can. Do you understand?\" She whispered into their minds. \n\nStill kissing, in unison they whimpered into each other's mouths. \"But we're so close. Please...\" \n\nRae increased her grip on their hair and twisted them away from their kiss, making them face her. Their pink lips shimmered in the dim light of the car's interior as they looked at her in desperation. \"Not until I say so.\" She whispered in a low, savage tone that made the twins whimper anew. \n\n\"Yes Mistress.\" They whispered as they both shuddered. \n\nShe let them continue to ride her for a while longer as her own passions built from the erotic display before her and from the turn on she got by controlling others during sex. When their moans had devolved into pleading whimpers she decided that it was probably time to give them some relief. She looked at Greta, \"Is your sister ready?\" \n\n\"Yes!\" The woman gasped. \n\n\"Can you feel her?\"\n\n\"Yes!\" \n\nShe turned to Branwen, \"And is Greta ready to come? Can you feel it in her?\" \n\n\"Oh Goddess yes! She's... she's so... so ready.\" \n\nRae settled back and looked up at the two beautiful, identical faces looking down at her, urgently needing release. She caressed both their faces then let her hands wander down to their breasts for and few moments, tweaking their small, pink nipples and enjoying the way they both jumped. Finally she looked at them both and feeling her own excitement raging in her core, said, \"You may come.\" \n\nThe reaction was as instantaneous as it was glorious. As one the twins shrieked in rapture. Each face a perfect mirror image of her sister in every way. Both squeezed their legs tight around Rae's thighs as their sexes convulsed with their stunning mutual climax. Sexual energy seemed to flood off the twins in waves as they came over and over again, sharing each other's rapture as they moaned and cried out in perfect harmony. Rae could feel their slick wetness flowing out of them, running down her legs to mingle with her own wetness pooling under her ass. Both twins thrust their hips down into Rae in perfectly timed movements that matched the cries and shudders of their bodies as they brought themselves to climax two more times as Rae watched. Finally they collapsed together on top of Rae and lay there moaning softly and twitching in unison.\n\nRae let them lie there for a time, enjoying the feel of their small, firm bodies lying across her, liking the little moans that still escaped their lips as their shared their orgasmic afterglow. She let her own built up sexual tension simmer, knowing that the longer she held off her own release, the more delicious it would be when it finally came. \n\nHer eyes roamed around the inside of the ornate town car taking in the highly polished wood, the gleaming chrome, the opulent fabrics and the supple leather. She closed her eyes and took in a deep slow breath through her nose. Her heightened senses picked up so many subtle individual scents that she had to think for a moment to sort them all out. The soft and somehow warm smell of leather and wood of the car's interior overlaid the sharper, acrid smell of gasoline and metal outside. Under that she could pick up the scent of dirt, hay and horses that still lingered in the old carriage house. All these scents filled Rae's mind but over it all was the heavy, sticky sweet scent of womanly lust. The smell only served to fuel Rae's desire and she smiled while taking in another deep breath. \n\nEventually the simmering became too much for even her strong will and she decided the twins had had enough of a breather. They still had one job left to do.\n\n\"Was that good?\" She whispered to them. \n\n\"Yesss...\" they said together. Although it was more of a groan than intelligible speech, Rae understood them just fine. \n\n\"You still have one thing to do, you know.\" \n\nCatching her meaning, they sat up in unison and without any apparent communication turned resituating themselves. They got onto their knees and one on either side of her, turned around, displaying their perfect little bottoms to her as they leaned in moving between her legs. Gently, almost reverently, the spread her legs as wide as they would go and then some. Rae noted in a detached manner that she was probably going to be sore tomorrow from tonight's exertions. She wasn't exactly one hundred and fifty anymore. \n\nA series of small, tender kisses and licks started at her knees and descended downward as the twins worked their way slowly to her womanhood. She looked down her body, between her breasts and saw only shoulders and a huge mass of curly red hair as both twins lowered their faces between her legs. She thought that they must be cheek to cheek as they hovered over her sex. She could feel their breath, cool on her clit and she shivered. Goddess, she thought, they're even breathing at the same time. Again she wondered if her command for them to feel each other more deeply might have gone too far but her thoughts were interrupted. \n\nHer hips twitched as she felt a tongue trace down one side of the outer lips of her sex. A long slow stroke of the tongue that started above her clit and traveled down to delve into her for just a moment before resuming the trip back up to her clit again. Rae groaned in appreciation but the groan turned to a sharp little gasp as she felt another tongue start the same rhythm on the other side of her clit. As before, the sisters moved in perfect time with each other, acting and seemingly thinking as one. Rae's pleasure soaked brain marveled that they could manage to get both their faces in so close but the tension in her inner thighs told her she was spread wide open at the moment. \n\nHer excitement built quickly now as the twins worked eagerly on her. Their talented tongues dancing around her aching core, teasing her, circling, dipping inside then circling back. Never stopping, always moving, driving her passion relentlessly higher. The night had been so deeply erotic and exciting for Rae and her passion had been built to such lofty state by watching the twin's earlier displays that she knew that she would never be able to resist their attention for long. After just a few minutes the twins already had her speeding towards the precipice and she knew that within moments she would go over the brink. \n\nShe placed her hands on the women's perfect, slim bottoms and gave them each a firm squeeze, enjoying the firm softness of their bodies. Feeling herself building towards climax, she slipped one finger into each twin, delighting in the way each sex clamped around the invading digit at the same moment. Greta and Branwen gasped in unified surprise but their attention to her sex never faltered. \n\nWith an iron will, Rae held off her climax for a few seconds more. She spoke to the twins, putting every ounce of her power into her words she said, \"Cum with me... right now! Do it...\" she felt her fangs elongating as the needs of her body finally slipped beyond her control and she tipped over the edge. She hissed, \"...now!\" \n\nUnable to resist her power, she felt their identical sexes clamp down hard on her fingers as they both came instantly. She could feel their twin cries of rapture in her sex and she released the last tattered threads of her restraint. Her back arched as a scream of utter abandon was ripped from her throat. Lava boiled over her skin and ice flowed through her veins as her entire world was shattered by one of the most intense orgasms she had ever experienced. The relentless power of the orgasmic storm inside her was irresistible as it tore through her body, breaking down all her barriers and invading every corner of her soul. \n\nOn and on the delicious agony went, surging through her, surrounding her, carrying her away with its elemental strength. Dimly she was aware of the twins clinging to her, sharing her climax as she had commanded them to. Their cries were muffled as they continued to plunge into Rae's core driving her ruthlessly on. \n\nAgain and again she peaked, her entire body singing out in blissful torment. Once an apex passed she could feel herself sliding down gradually only to be swept up a few heartbeats later by another stunning wave, surging her up to yet another incredible paroxysm. She came over and over until she feared her mind would break and her heart burst. Slowly, the world around her faded to blackness and Rae knew only rapture as the cries of the twins echoed in her ears. \n\nEventually Rae became aware through the mind numbing sensations that the twins had finally stopped. Either they sensed that she could take no more or perhaps they were unable to take any more themselves. Whatever the reason, they had collapsed beside her, each moaning and panting softly as they gradually recovered. \n\nRae floated for a time in a hazy netherworld of euphoric bliss. She felt completely detached from everything as she drifted aimlessly, relishing in the wonderfully decadent afterglow that seeped through her body and even through her soul. She thought that time must be passing somewhere but it didn't matter to her. What was time to an immortal? She had, quite literally, all the time in the world. She wanted at that moment, nothing more than to lie there forever basking in an eternal bliss, never to have to act or think again. \n\nHowever, as always, reality crept back in wither it was wanted or not. Gradually she became aware of movement next to her and with regret, allowed her thoughts to slip back into the world around her. \n\nBranwen and Greta had moved and were now snuggled up beside her, one under each arm, their heads on her chest, foreheads almost touching, apparently asleep. Rae though that sleep sounded like a wonderful idea at that moment and closing her eyes, allowed herself to slip back into the dark. \n\n* * *\n\nSometime later Rae awoke. She tried so move a little but was still pinned in place by the twins on either side of her. Her hands were numb from lack of circulation and she flexed her fingers trying to wake them up. The twins must have been there for quite some time for her arms to be this numb. Craning her head she noted that the illumination fro the headlights on her Stutz was only a dim, orange glow now, the battery almost dead. She wondered just how long they had been sleeping in post orgasmic bliss. Apparently quite a while. \n\nStirring the twins gently, she awoke them with a kiss to each forehead. Sitting up, she could now see the redness of dawn creeping through the still open doorway. They had to get in the house soon or they would end up having to make a painful run across the yard under the burning rays of the sun lest they end up trapped in the garage for the day.\n\n\"Looks like the dawn is almost upon us. Let's head into the house my lovelies.\" Rae said as she slid out of the car. Her legs were so weak from the night's exertions that she stumbled and almost fell when her feet hit the cold, dirty carriage house floor. She was reaching for door handle to steady herself when Branwen came up on one side followed by Greta on the other side a second later. Each of the smaller women wrapped her in a fierce hug that almost squeezed the breath from her lungs. After several long seconds they both looked up and the lust in their eyes startled Rae. How could they still be that wound up after last night? They must still be feeding off each other's desires she realized. Rae raised one eyebrow questioningly. \n\nAs if reading her thoughts Greta answered \"Our link is still so strong from last night we can't help it. Sex always makes our link a little stronger but last night was different. So much stronger than ever before. We've never experienced anything like that. It was like we were one person with two bodies, thinking and acting as one but feeling and experiencing everything twice. It was...\" she broke off and they both moaned together then said as one \"...rapture.\" \n\nRae's mind tried to wrap around that before she asked, \"Is it still like that?\" She paused as second then added, \"And why?\" \n\n\"Yes.\" They spoke at the same time now. \"It hasn't faded like it usually does. We're even sharing thoughts now which has never happened before. It's like we've become one person in a way.\" As if to emphasize their point they both pushed their hips forward into her thighs and moaned softly in flawless unity. \"We think it was because of your commands last night. Your commands were very powerful last night, more so than ever before. Surely you felt it?\" \n\nRae nodded. \"I think it was because of the full moon.\" \n\nThe twins looked at each other as if conversing silently and then looked back to Rae. They nodded in unison. \"Yes, you're probably right.\" They said, again in perfect unison. \"That explains part of it. Also, we were so aroused, our minds so open to you that your commands went deep into our minds, very deep.\" They each craned their necks up and kissed Rae on her cheeks. \"You changed us. Probably permanently.\" \n\nRae was flabbergasted. \"I... I'm sorry. I didn't mean to do that. I was just...\"\n\nThey interrupted her apology still speaking as one. \"Don't be. It's amazing. It's like we've found the other the half of ourselves. A half that we had never realized was missing. It's like we're now...\" They glanced at each other, smiled then looked back to Rae, \"...complete.\" \n\nShe certainly hadn't intended for any of this to happen but the twins seemed happy. No, more than happy, ecstatic really, at the outcome so Rae decided not to worry about it at the moment. It may not be permanent anyway and if it did become a problem, the Mistress or Vala could probably fix the situation if it ended up being beyond Rae's abilities. And since the twins seemed to be happy, she may as well go along with it. ",
        "A wicked smile spread on Rae's full lips and she reached down to cup their twin bottoms. \"Well then my Lovelies, we better head inside and put your new skills to good use.\" She squeezed and pulled their hips harder into her, enjoying the way they shivered under her touch, \"We have the house to ourselves for the day, let's not waste any time.\"\n\n* * *"
    ],
    "authorname": "china-doll",
    "tags": [
        "lesbian",
        "mind control",
        "sisters",
        "incest",
        "twincest",
        "vampire"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/forever-again-ch-08"
}