{
    "title": "The Guest Room",
    "pages": [
        "I have reached that point in the party. The point I reach at every party. The point where I wonder why the hell I have even come here tonight. I should just leave.\n\nThis always happens about two drinks into the night; that's the moment at which I have to decide whether I am going to keep drinking in an attempt to overcome my shyness or slow it down so that I don't embarrass myself. What I really want to do is to find someone to go home with. But, as desperate as I am, I know that I am going to leave alone. Because I always do.\n\nI lean back against the wall and sigh, watching the revelry go on around me and musing at the conflict that always presents itself on nights like this: my rampant sex drive vs. my debilitating shyness. I watch the girls who would normally be at the club on a Friday, standing on their tiptoes to put their perfectly lipsticked mouths up to the ears of the men next to them. Their tight, fashionable outfits reveal bodies that are lithe and sinewy. The short, floral dress and sneakers I am wearing that I thought would be a cute look for a casual house party now seem juvenile and silly. The men smile down at the girls, some totally engrossed, others continuing to flick their eyes around the party, looking for someone else to occupy their time.\n\nI shift my weight and cross one ankle over the other as I lean on the wall so that I can squeeze my thighs together to try to deaden my arousal. It's a perennial, impossible situation. I am always so horny, but these men are all the same; loud, self-congratulatory alpha males, downing one beer after another as girls flit around them like moths. I have no idea how Jenny, my host and coworker, even knows all these people, but she is so socially gifted, remembering everyone's name and key details about their lives, that everyone always wants to be her friend. She has already checked in with me several times to make sure I'm okay, trying to draw me into new conversations and larger groups of people. I know I have disappointed her by staying in my safe little corner, but I am touched by her efforts. She's so sweet to try.\n\nA few years ago, after my longtime boyfriend and I had broken up, I had decided that I would try a one night stand for the first time in my life. After months of celibacy I was ravenous for sex, and I thought that I could get some physical satisfaction without the terrifying possibility of rejection. I went out and sat at a bar by myself, waiting to be approached. If no one came up to me, I reasoned, I'd just leave on my own; no harm, no foul. But I did get approached. He was handsome and seemed charming enough. By the time we were in the cab to his place, we were devouring each other's mouths. I was so excited that my hips were grinding into the seat below me. But he had been a selfish lover, rejecting what I wanted, just thoughtlessly pounding into me like he was performing for an audience until he collapsed onto the bed. I made an excuse that I had to work early in the morning and left. I could not have been more relieved to close the door behind me.\n\nAnd that was the morning that I decided that I would do everything possible for the rest of my life to avoid bad sex. Bad sex, I realized, was far worse than no sex at all. It made me feel unhappy and foolish and self-conscious. Instead, I would just satisfy my own desires until I found someone that was really worth my time, thank you very much.\n\nAnd I did. I had always masturbated, of course, but I really started to take my time with it. I explored every inch of my body and found sensitive spots I didn't know I had. I bought toys of all sizes, to suck me, penetrate me, vibrate me. Sometimes, when sex overwhelmed my thoughts, I would set aside hours to tease and play and come over and over. And while I would exhaust myself in the moment, the next day I would wake up more charged and excited than I had been the day before.\n\nI know that with all of this, I could be such a fun partner if I could find the right person. I'm horny all the time, and my body is so eager and responsive. If only I could get up the courage to just TALK.\n\nSo that's how I end up in places like this: lingering on the edges of a house party, yearning to meet someone but too shy to make the first move, desperate for sexual release, but terrified of being embarrassed or rejected.\n\nAnd then, as I'm thinking of excuses to give Jenny for my early exit, he walks through the front door. And he takes my breath away.\n\nI don't know what it is about him. Maybe it's the way he quietly walks in with complete confidence and ease, so much more authentic than the performative shouts of the bros. Maybe it's the way he hugs Jenny after she takes his jacket, and presents her with a bottle of wine. Maybe it's his wide, open smile, his expressive blue eyes, his strong shoulders and arms. I don't know. But I am drawn to him like a magnet. I don't think I want to leave the party anymore.\n\nMy eyes track him across the room, watching as he stops to say hi to people, hug friends, shake hands, exchange words with a smile. He's open and charming, and completely comfortable in the throng in a way that I could never be. From my vantage point I see how people respond to his warm, easygoing presence. And I can see that I am not the only one who is drawn in. At least three other girls have clocked him as he weaves towards the makeshift bar. As he makes himself a drink, a pretty blonde girl comes up to him and starts a conversation, laughing coyly and touching his arm. He's nodding at her words as he lifts the glass to his lips to take a sip, but he's not really making eye contact with her. As his eyes sweep the room, his gaze catches mine.\n\nI have been watching him so intently that I don't immediately react. It's only when the corners of his mouth turn up in a little smile over the edge of his glass that I suddenly remember myself. I quickly avert my eyes and my neck and cheeks flame hot with embarrassment. Idiot. I fumble my phone out of my pocket as if I am checking a text. When I finally get up the nerve to look behind the bar again, they are both gone. I feel a pang of disappointment, but know that I wouldn't have stood a chance against that friendly, outgoing girl anyway.\n\nI know I shouldn't look for him, if he caught me looking again it would be so obvious and pathetic, but I can't help myself. I scan the room, and I find the two of them have joined a large group of people, talking and laughing. After a minute he looks in my general direction, but I quickly glance back down to my phone. I don't think he saw me. And there is no way he was looking specifically for me, anyway. All the same, I start to feel a throbbing between my legs.\n\nI sigh. My body is ridiculous. I'll decide to go make another drink to distract myself. I edge my way out of the corner and weave through and past the other guests and behind the bar to pour myself a vodka tonic.\n\nIt doesn't occur to me until I take my first sip that I have now abandoned my safe corner of the room. Dammit. I can't walk straight back there now; I'll look like an idiot. I scan for a new place to hide, where I won't be accosted or drawn into an awkward conversation. And, as my eyes sweep the room, I see him again. He's looking right at me. He offers another small smile and raises a glass and nods, as if he knows exactly what I have been thinking about him.\n\nI can't bring myself to look away. The only thing that brings me back to reality is the feeling of my pussy flooding my panties. Fuck. I quickly wrench my gaze away from his and it feels like an actual physical connection has been broken between us. I can feel the wetness seeping down between my legs. Fuck, fuck, fuck. I manoeuvre my way out from behind the bar, set my drink down on the fireplace mantel, and make my way down a side hall. Miraculously, there is no line for the bathroom.\n\nWhen I get inside, I lock the door, then turn and lean my forehead against it. I reach up my skirt and into my panties to assess the damage. My fingers slide over my hot, wet pussy. I'm a mess, and my clit is already hard and swollen. I toy with the idea of getting myself off right here and now to give myself some relief, but there's a chance a line will form outside the bathroom and I'll have to walk out past all of those people. Plus, I have always had trouble coming quietly. I clean myself up as best I can and try to cool off by running cold water over my hands and pressing them to the nape of my neck. After checking my hair and straightening my dress I step back out in the hall.\n\nThere are now three people waiting for the bathroom and there he is at the end of the line. Because OF COURSE he is. The girl is still with him. She is talking to him and he is nodding politely. I keep my eyes straight ahead as I walk past them and out into the party, forcing myself not to glance back. I'll just finish my drink and then go. There's no reason to stay. He's clearly going to go home with her, and I will go home to my toys. What else should I have expected?\n\nGrabbing my drink off of the mantel, I take a long swig. As soon as I finish this drink, I tell myself, I'll go and thank Jenny for the party and then get out of here. I have failed at yet another party. Whatever. Same story, different day. As I am draining the last of my glass, I sense that someone has walked up behind me.\n\nI turn. It's him.\n\n\"Hi.\"\n\nI swallow my mouthful quickly, almost choking. \"Hi.\"\n\n\"I'm David.\" He smiles. \"I thought I should come over here and introduce myself.\"\n\n\"Why?\" I say, stupidly. My face flushes. Oh God, Lily. You idiot.\n\nHe laughs. It's a kind laugh but his eyes have a mischievous glint. \"I suppose because I wanted to meet you? Is that so hard to believe?\"\n\n\"Uhhhh... I don't know?\" Oh. Brilliant. Well done, Lily.\n\nHe laughs again. \"Okay. Let's make this easier. I'll do the introductions for both of us. Hi Lily, my name is David. Hi David, my name is Lily.\"\n\nMy surprise must show on my face. David holds up his hands. \"No, no, don't worry, we haven't met. And I'm not a stalker. I asked Jenny about you.\"\n\n\"You...did?\"\n\nHe laughs again. \"Yep. I did. I have already heard quite a lot about you, actually. She's told me many times how fun and interesting you are. But she also told me how shy you are. So I just thought I'd just speed this along. You know, save some time.\"\n\nI feel my shoulders relax a bit, and I laugh, despite my embarrassment. Of course. My reputation for shyness has preceded me. \"Well, I appreciate that, David. Not sure how much I appreciate Jenny right now, though.\"\n\nDavid's smile widens. \"Oh, come on now. She loves you. And there's nothing wrong with being shy. But, to be honest, I had another reason to want to come over and introduce myself. I thought it would be appropriate that we know each others' names before I ask you about the way you have been looking at me all night long.\"\n\nI freeze. He's staring straight into my eyes again. I feel hot and icy at the same time. My heart is hammering against my chest. I don't know whether to laugh it off or deny it or try to make up an excuse and bolt. I KNEW I was being too obvious. I was such a fool to think he wouldn't notice. Oh God, I'm so attracted to him. Please tell me he hasn't come over here to gloat or laugh.\n\nHe sees my reaction. Then he reaches his hand up to my face and very gently moves my hair from the front to the back of my shoulder so that he can lean down and whisper in my ear. \"It's okay, Lily. I noticed you because I have been staring at you all night too. I can't take my eyes off of you.\" He leans back, looks deep into my eyes, and smiles. I am lost.\n\n\"You want to find a quieter place to go and talk, Lily? Get away from all these people?\n\nI nod. I'd go anywhere with him. Do anything.\n\n\"Let's go find somewhere upstairs.\"\n\nDavid takes my hand and leads me through the crowd and up the stairs, away from the party. The crowd is too drunk and rowdy to pay any attention to us. Still holding my hand, he checks a couple of doors, and then pulls me into a guest bedroom. He closes the door behind us. No lock. I turn and press my back against it, facing him in the open room, not sure what will happen next.\n\n\"So.\" he says.\n\n\"So.\" I say back. My heart is hammering. I feel sure he can hear it.\n\nHe smiles. He's so confident, so self assured. \"We can just talk if you want. But I have to tell you, I have been attracted to you since the second I saw you.\" He takes a step closer. \"And I think you might be attracted to me. Are you?\"\n\n\"Yes.\" I whisper, my face flaming. It's a herculean effort to keep from breaking his gaze and looking down at my feet.\n\nHe takes a step closer, his eyes boring into mine. \"And I want you. Do you want me?\"\n\n\"Yes.\" I whisper again.\n\nHe closes the gap between us. \"Do you want me to kiss you?\"\n\nI feel heady, feverish, frantic. \"Yes.\"\n\nDavid smiles, slides one hand around my neck and up into my hair, and the other around my hip. Then he kisses me. I had expected it to be hard and passionate, but it is so soft, so slow, and so gentle that it feels like every nerve ending in my body is vibrating. He pushes into me, pinning me up against the door. I can feel him hardening against my stomach, but his lips and tongue are still moving so slowly and tenderly. My hands grip his shoulders, his back, his ass, and in response he moans, grinds into me and increases the pressure of the kiss.\n\nAfter a few minutes, he breaks away, looks at me and runs his hands down my shoulders. \"This is good, baby? You like this? You want more?\"\n\n\"Yes,\" I breathe, looking him straight in the eye. \"Yes. Please.\"\n\nI know in this moment that he is going to fuck me. Here. In Jenny's spare bedroom. A man I have just met. During a party. I don't care. I would fuck him in the middle of the living room at this point. I would let him do anything to me. I feel drunk with him, and yet somehow crystal clear at the same time. I pull him back to my mouth and move my hips into him, and he moans.\n\nI expose my neck to him, and he kisses it, moving from my jaw to my shoulder. He runs his fingers across the part of my chest that is exposed by the scooped neckline of my dress. I shiver. His hands and his mouth are driving me wild. I gush into my panties for the second time that night.\n\nDavid moves his head back up to look at me as he trails his fingers just inside the neckline of my dress. I know he is seeking permission. I smile and guide his hand into the dress, inside my bra, over my breast. For the first time I see him lose control for just a few seconds; his eyes close and his jaw slackens as his fingers brush my erect nipple. I feel a heady rush of confidence. He wants me as much as I want him. He wants to make me feel good. He will take care of me.\n\nWhen his eyes reopen, I'm the one looking straight at him and smiling. I keep my eyes locked on his while I pull the top of my dress and my bra down so that my right breast is exposed. He groans and lowers his head to it, gently running his tongue across my nipple, quickly looking up again to gauge my reaction. I let out a soft moan and my head falls back again. He does it again. And again. Then he closes his lips around it, still flicking his tongue back and forth across the sensitive tip. Slowly and deliberately, he reaches down into my dress and frees my other breast. He caresses one nipple between his fingers while his lips and tongue continue to tease the other. I feel like there is a current of electricity that runs straight down from my nipples to my clit.\n\n\"Yessss,\" I whisper.\n\nWith his mouth still working, he moves his hand off my breast and reaches under my skirt. He runs his hand up towards my core, stopping when he feels my upper thigh, which is now slick with my juices. He moans and lifts his mouth off of my nipple, looking at me with amazement. He hasn't even touched my pussy yet, but I am all over his hand.\n\n\"Oh my God,\" he breathes, his eyes glassy. \"You're so wet, baby. Fuck.\"\n\nHearing him say this makes me wetter, and my hips shift to try to rub myself against his hand. He groans, longer and louder this time, and gives my nipple one last suck.\n\nThen he gets down on his knees in front of me. Slowly, slowly, he pulls down my underwear. I step out, one foot, then the other. He runs his hands up the back of my legs until they are on my ass. I lift the hem of my dress and press it against my stomach, exposing myself to him. He leans in and gently kisses my pussy lips, then opens me with his tongue. I tilt my head back and rest it against the door. My knees are weak; I feel like I might collapse as I push my hips towards his face. I want more; my pussy is throbbing, aching for him. He licks my clit again and again, and then gently pulls it into his mouth and sucks it, still flicking the sensitive head with his tongue. My head is swimming. When I look down again to see him kneeling in front of me, his tongue lapping lazily at my folds and wagging against my clit, the sight is so erotic that I can't look away,.\n\nHe holds my gaze as he stands back up, wiping my smeared juices off of his chin. I can't help myself; I whine in protest, I need more. He muffles my cries with his lips and I can taste the tang of myself on him. When he pulls away, he whispers, \"Later, baby. I promise I'll do this again. I'll lick that pretty pussy for hours and make you come so hard on my tongue. But we don't have much time now.\" I know he's right.\n\nHe's unzipping his pants. I reach down, eager for him, but he takes my hands and gently turns me to face the door, placing my hands on its smooth surface. Not being able to see him heightens my excitement even more. For a moment, his hands leave me entirely, and I can hear a rustling behind me. I hear him undo his belt, unzip his jeans, and push them down his thighs. There is another movement and then, out of the corner of my eye, I see a condom wrapper drop onto the floor.\n\nIt's at this moment when I fully realize where I am and what I am doing. I'm in my friend's guest bedroom in the middle of a busy party. My tits are exposed over the neckline of my dress, my legs are spread, and my hands on the closed door, pressing my pussy backwards hungrily towards a virtual stranger's hard cock. I know how wanton and needy I must look. I don't care.\n\nDavid takes the hem of my dress and lifts it up over the small of my back. He runs his hands up my spine, over my shoulders, under my arms, over my tits, and back down over my stomach. My pussy is so desperate; it's aching as it frantically spasms again and again, clenching against nothing. I hollow out my back even more and present my body to him. I want to beg, but I don't trust myself to open my mouth.\n\nFinally, I feel the head of his cock. He's sliding it between my lips, testing my readiness, teasing it across my clit, whispering to me. He's giving me one more chance to change my mind. He doesn't realize how completely I am his.\n\n\"Do you want this, Lily?\" he murmurs. \"Do you want this hard cock inside you?\"\n\n\"Please.\" It's all I trust myself to whisper.\n\nHe slowly pushes just the head inside me. Immediately, my pussy clamps around him, and I moan. Loudly.\n\n\"Shhh, baby, shhh,\" he whispers quickly. \"We don't want them to hear us.\" I can tell that he is smiling as he says it. He loves watching me struggle to contain myself, using every once of my will just to stay quiet. He pushes in again, working a fraction more of his cock into me. Then out. Then back in, a tiny bit deeper. My pussy is so swollen and slippery and tight. Again and again. He's so deliberate, watching my body intently for every twitch, every reaction so that he can stop and tease and exploit each new sensitive spot that he finds. By the time he is halfway inside me, I am frantic. I want him to fuck me hard. I have to turn my head to try to smother my moans into my shoulder.",
        "Finally, he slides the whole length of his dick into my pussy. I feel his face right next to mine, his mouth close to my ear. I brace my hands against the door, ready for him to start fucking me with deep, hard strokes, but he doesn't. Instead, he stays completely still. I wonder if he wants me to do the thrusting, and I shift away from him. Immediately he pulls me back onto the full length of his cock and stills again, holding me captive on him.\n\n\"Wait, sweetie,\" he whispers. \"Just feel me so deep in you, just for a minute. This is what you needed, isn't it? To be filled? Does it feel good, baby? Fuck, I love feeling every inch of your pussy wrapped around me.\"\n\nI do what he says and just focus on the moment we are in. I feel every part of my pussy that is touching him. I'm stretched wide around his dick and it feels so good, so right, like a part of me was missing before but now I am whole. My legs start to tremble. Oh my God. Even if he doesn't move a muscle, even if we just stay here like this, I am going to come. I'll come on his hard cock, shaking around it while it is buried deep inside me. I feel my orgasm start to build.\n\nThen he does begin to move, but not in the way I expected. He doesn't loosen his grip; he keeps his pelvis pushed hard into my ass, fully seated inside me. Instead of thrusting, he starts to grind his hips in circles. He's stimulating my tender hole, massaging my pussy walls. It's so intense and erotic and he is in complete control.\n\nI have never been so aroused. \"Oh God,\" I whimper, too loudly again. I can't help myself. I lean my forehead against the door and try to focus all of my energy on not broadcasting to the party what we are doing. Oh God. Oh God. He's going to make me come.\n\nAs my pleasure climbs, I suddenly hear voices outside the door. He hears them too. He stops moving, but he still doesn't loosen his grip on my hips. Two voices; a man and a woman. They are arguing. They are coming closer and their voices get louder and more distinct as we remain motionless, half dressed and mid-fuck behind the guest room door. \"Shit,\" I whisper. What are they doing up here? How long are they going to stay?\n\nThe thought of being caught mortifies me but, to my surprise, it sparks something in me as well. Something I didn't know was there.\n\nAnd suddenly, I realize how turned on I am by this. There is so little separating me, helpless, impaled on David's cock, and the couple in the hall. It's just a few feet of air and a hollow door. And, as I have this thought, my pussy clenches down on David. Hard.\n\nThe couple's argument continues, escalates. We're motionless as we listen. He's still so hard inside me. It's so good. Having them out there excites me even more. My pussy throbs around David again and a flow of my juices gushes over him, leaking out around the shaft of his cock and coating his balls.\n\nI can hear him chuckle softly behind me, and then he leans forward and breathes right into my ear. \"Oh my God, baby,\" he whispers. \"Is this getting you off? You like it? Hearing them right outside the door?\"\n\nI press my lips together to try to smother my whimper and push back against him frantically. The fact that he recognizes a kink in me that I have only just discovered in myself makes me wildly excited. I manage to nod.\n\nHe laughs again and I moan softly, as my pussy flutters around him. \"It's okay baby. It's okay. I like it too. But...\" he starts slowly drawing his full length out of me, \"do you think you can be quiet when I REALLY start to fuck you? Or are they going to hear us?\"\n\nAnd then, before I can even attempt an answer, he drives his cock back inside me. I groan, and it's too loud, I know it, they must have heard that. I clamp my lips together, brace myself against the door, and try to stifle my repeated cries as he thrusts into me again and again.\n\nI can still hear the couple's voices, arguing. Maybe they haven't heard. They are too engrossed in their argument. Maybe we'll be okay. Maybe I can do this. But then David starts whispering in my ear again.\n\n\"Fuuuuck, baby. I think they're even closer now. Do you think they can hear us? Do you think they're going to figure out how hard you are getting fucked behind this door?\"\n\nOh my God. I can't help it. I moan.\n\n\"Maybe they're fighting because she saw him checking you out at the party before I got to you. I know I wasn't the only one. I bet that's it. I bet he wanted to fuck you. I know how jealous he would be right now if he knew that I had you up against this door with your tits hanging out and my cock buried in your pretty pussy.\"\n\nIt's too much. I'm going to come. How am I going to stay quiet? Every time I think I'm going to explode, I don't; my orgasm just keeps building and building with each pound of David's cock. They are going to hear me for sure. I close my eyes and focus on making the least amount of noise that I can manage.\n\n\"Are you going to come for me baby? I need you to come on my cock.\"\n\nHe takes his hand off of my hip and reaches around to tease my clit, and I know that I am going to give us away. There's no way I can come this hard and not scream his name.\n\nDavid whispers again: \"I'm so close. Ohhhhhhh fuck. Your pussy is so good. I'm going to come so hard in you. But I want you to come first, baby. I need you to come on my fat cock. Come on, baby, come for me. Do it, baby.\" And, as he fingers my clit and strokes into me again and again, I explode.\n\nMy mouth opens and I shudder and gasp in a huge breath of air, knowing that I won't be able to stop myself from screaming as I exhale. But David has whipped his fingers off of my clit and he quickly pushes them into my open mouth. I clamp my lips down around them and suck them frantically, moaning loudly against them as my pussy spasms around his rigid cock. I can taste myself on him. My whole body is shaking.\n\nSucking on his fingers has kept me quieter, but feeling him filling not one but two of my holes prolongs my orgasm, and I shake on and on. David starts to pound faster, more erratically, and I know he is about to come.\n\n\"Fuuuuuuuuuck, baby\" he moans, no longer trying to keep his voice down. I can't hear the other couple outside the door, but I don't even care where they are anymore. I feel David's cock pulse inside me again and again and again as he lets out a small shout. I release his fingers from my mouth and he slams his hand back down onto my hip, grinding frantically into me as he shoots into the condom. As I feel his cock swell and release against my opening, I come again. I'm not expecting it. I moan loudly too. Every time I think that my orgasm is starting to subside, he pulses inside me and I make small, desperate sounds of pleasure.\n\nFinally, finally, my spasms slow. David relaxes his grip on my hips and kisses my shoulders and neck, panting. He pulls out of my pussy, and I hate the emptiness that he leaves behind. I'm resting my forehead on the door, trying to slow my breathing, but all I want is for him to be inside of me again. He strokes my back and kisses me one more time and then moves away to pull up his pants.\n\nAll of a sudden, I feel overcome again with shyness and uncertainty. What was I thinking? Is he going to just walk past me out the door? He doesn't even know me. Is this going to be it? I'll die if he just leaves now.\n\nBut David squats down behind me. He tenderly caresses my legs, slowly pulls my underwear into place, stands, and carefully fixes my skirt. He takes me gently by the shoulders, turns me around, brushes my hair out of my face, and kisses me deeply. Then he steps back and tilts his head to one side, listening intently as a little smile plays on his lips.\n\n\"I don't hear them,\" he whispers. Do you?\"\n\nI listen. \"No. I think they're gone. But I have no idea how long they were there, or what they heard.\"\n\nHe grins. \"I have to admit, I'm kind of glad they showed up. That made it even hotter.\"\n\nI blush, but he draws me into another sweet, soft kiss before I can stammer out some excuse for my reaction. \"It's okay, baby. I loved it. It was incredible. You're incredible.\"\n\nI look into his eyes and I know in an instant that this is just the beginning. Everything is going to be okay.\n\nHe kisses me again. \"Will you come home with me tonight? I don't want this to be over just yet. Besides, I started something on my knees earlier that I just don't feel right about leaving unfinished.\" He winks at me.\n\nI am so happy and grateful that I can't speak for a moment. Then I look into his eyes and smile. \"I'll get my coat.\"\n\nHe smiles back. \"Or... we could...\"\n\nI wait, I have no idea what he is going to say next.\n\n\"Why don't we stay at the party for a little bit first? Just go down separately and have one more drink and mingle? That way I can watch you. I'll be thinking about your soaked panties, and how much wetter they are going to get later. You can think about me burying my head between your legs, and what might happen after that. I want to watch your face at this party as you imagine what will happen when I get you home. Would you like that? Do you want to play that game with me, baby?\"\n\nI laugh. I can't help it. He already knows instinctively what will turn me on. \"Ok, David. I can play that game. But I'm setting a firm limit of one hour, okay? Please? And then you promise we'll go straight to your place?\"\n\nHe laughs too. \"Well, I was going to suggest a little longer for the sake of anticipation, but okay, Lily. Sixty minutes. And not a second more. I promise.\"\n\n\"Deal,\" I say, straightening my dress and looking around the room for a mirror to check my hair. For the first time in my life, I'm excited to go to a party. He moves around me and heads for the door.\n\n\"Oh,\" I say, turning around to face him. \"Just one thing, David. When you are down on your knees later, licking and teasing my pussy until I come in your mouth? Can we please make sure all of your windows are closed? After being quiet for so long just now, I really think it's important that you hear me scream your name tonight.\" I blink and smile at him innocently.\n\nHe pauses, his hand on the doorknob, then looks back at me and grins.\n\n\"New plan. How about we make it thirty minutes?\""
    ],
    "authorname": "LilyWaters",
    "tags": [
        "dirty talk",
        "dress",
        "wet pussy",
        "public sex",
        "exhibitionism",
        "slow burn",
        "public",
        "stranger",
        "exhibitionist",
        "shy"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-guest-room-3"
}