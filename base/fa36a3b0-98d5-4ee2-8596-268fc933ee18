{
    "title": "TT Spalding, The Van Harding Case",
    "pages": [
        "The tapping of the keys was the only sound in the office. I had the door closed so Maggie had no clue. She thought I was working on the Myers report which she told me was due to her sometime today. Actually, that report was done but the cover was good for finishing the last chapter in my book. With a glance at the closed door, I grinned to myself and began on the ending. \n\nFrom the cover of a stack of wooden shipping containers, he took aim, pulled the trigger and watched the first one fall. The bullet sped across the open space of the warehouse before finding its target. The silenced bullet took the lookout in the chest, slammed him back against the wall, where he slid down to the floor, peaceful like. Then all hell broke loose. Yells, screams of anger, running men every which way, combined with gunshots. Chaos! He just smiled, moved even deeper into the shadows and watched it all go down. Both sides were now convinced that they had been betrayed and they were going to make the other pay. \n\nSurrounded by the sounds of gunfire, Hammer made his way through the cases of plaster statues of the baby Jesus that were in reality filled with cocaine and ducked out the back door. He had enough now to turn the whole dirty business over to his contact in the FBI. They had enough to get a conviction for Simms and his gang but there was no percentage in trying to include her now. She had run as soon as it started to fall apart. He knew her well enough to know she would disappear into the masses and never be found. That was her MO. Just disappear. It amazed him that someone who looked like her could disappear, but she had done it before. She would do it now. He was surprised by the sadness that produced in his heart. He remembered her embrace and the kiss. Just that one time, but it would stay with him a long, long time. She was gone but he would remember her.\n\nI pushed my chair back, propped my feet up on the desk and thought about it. It was done! Finally, all the hard work was over and my great novel was done. My novel, resurrecting Mike Hammer, was finished. Now what? Where did I go from here? \n\nHow did one go about publishing a novel? I had no idea. It occurred to me to ask Maggie. Maggie was the smart one. She had brains as well as looks. Why she had settled for me, I had never understood. It was certainly the first prayer I said every night of my life. \"Thank you God for Maggie.\" Every night. I also asked God to make sure she never woke up and thought about the mistake she had made. If she did, I was toast! Well, prayer seemed to be working so far. It had been almost five years for us, five wonderful years that made my life worth getting up every morning. \n\nIt had been more than two weeks since the phone call from Bruno. I couldn't stand it any more so I finally gave in and called him. It rang twice and I cursed, expecting to get his voice mail, but just as I was about to slam the phone down, Bruno answered.\n\n\"Yeah boss. I'm here. What's up?\"\n\n\"Damn it Bruno. What's going on? You call and then nothing? What the hell. I gave it a couple of weeks but no longer. Give me the story. Just lay it out.\"\n\nA brief silence from the other end and then, \"He's gone again. Just asked some questions, made a few contacts and then, gone. My tracker lost him almost a week ago. Out of range. Gone back to Ohio. Maybe I never told you, but that's where he went when he left. O-damn-hio. Can you believe it? Got himself a little scam going there. Nothing big, just penny anti stuff.\"\n\n\"And? You just let him go?\"\n\n\"I have contacts there. They'll let me know. In the meantime, he was asking about Maggie and about you. Got nothing. Nothing of any value. I know who he talked to and when. They knew what to say and what not to. You got nothing to worry about boss. I've got your back. Yours and Maggie's.\"\n\n\"OK. For now. But you let me know if and when he comes back. This time, I'm going to make sure it's the last time. Could be I'll want you to bow out at some point. You understand?\"\n\n\"Don't have the foggiest idea of what you're talking about. Any new cases going? I'm getting bored with stuff here. Need some excitement in my sorry life.\"\n\nI discussed some current cases and Bruno agreed to come in sometime soon to see what he could do. I did have a couple of hot ones and I wanted to get something going on them soon. I needed the money. Maggie and I needed a vacation. I had my eye on one of those island places. St. something or other, somewhere in the Caribbean. Way the hell past the Bahamas and Puerto Rico. Someplace where they spoke English and took US dollars. I was lousy at math and conversion rates just pissed me off. Seems the whole damn world ought to use dollars. Make things simpler. \n\nI decided to send the report to my Maggie, just to prove to her that I wasn't wasting my time. Sent it by email, just like she taught me. She had been working with me on the computer so I could do other things than waste my time writing that 'fool novel' as she called it. Wonder what she'd say when I told her it was finished? Hah! Make her sorry she made fun of me. I was thinking of her face, full of pride and chagrin, when she pushed open the office door to yell in at me.\n\n\"TT! You have a visitor. Do you have time?\" She asked me this sweetly, letting me know there was a potential client on the other side of the door. Otherwise, she would have just walked in to spy on me. \n\n\"Sure. I can take a break.\" \n\nI rose and waited. When she returned, she had a young man in tow. He was tall, well more than six feet, sandy hair cut short, eyes so blue they were almost black, and a face that screamed innocence. He didn't look to be more than twenty at the most. \n\n\"TT, this is Mr. Norbert. He wants to talk about hiring you for some business. Mr. Norbert, this is TT Spalding.\" \n\nShe indicated the straight plastic chairs in front of my desk. Put there specifically to make the client just a tad uncomfortable. I had two of them just for that purpose. He moved over, fidgeted a little before sitting down. Maggie glared at me and then left, shutting the door.\n\n\"How can I help you Mr. Norbert?\" Time to get the story, although I probably knew it by heart now. Sad, but true.\n\n\"My name's Ted. Ted Norbert. I've been married for a little more than two years now to Betty, my wife. She and I have no kids yet but we've been trying. So far, no luck. But I think it's gotten to her and now I think she's cheating on me. I want you to find out for sure.\" \n\nThis all blurted out without a single breath. The kid was in real pain. Just a simple honest guy trying to make his way in the world. Now it looks like his only friend, his wife, has stabbed him in the back.\n\nI quizzed him a little. He worked in a plant that made doors and windows. He was a craftsman, he said, making very good money. More than twenty dollars an hour. His wife worked in a bank as a teller and brought home enough to help with the bills and still leave her enough for some spending money. He thought they had a good marriage but lately, Betty was acting funny, always mad at him, staying late at work and pleading fatigue in bed. It had been going on for a month or longer. He gave me more, left me with a picture of her, the bank where she worked and her schedule. I didn't need much more for a preliminary job. We shook hands, he gave me a five-hundred dollar retainer and walked out, looking sick to his stomach.\n\nI had him sign the standard contract and was about to carry it out to Maggie when she stuck her head around the door again, this time with a strange look on her face. \"TT, do you have time to meet a visitor?\"\n\nMy gosh! Two in a row? Maggie was still giving me that strange look. Must be a good one. \"Of course. I have some time just now.\" \n\nShe came back in, holding the door for a goddess! Had to be someone sent from the gods to look like that. Tall, about five foot-eight, slim figure, fantastic hips and a rack that should have made her top heavy but which she carried with dignity. Long, lustrous black hair, worn straight, framing a face right out of Vogue. Her skin was porcelain, and her eyes were a deep, rich brown with a slight oriental slant. The expression on her face was one of mystery and suggestion. I knew what I would suggest but Maggie was standing right behind her, watching my every move. Her look had changed from strange, to one of malice. My attention was suddenly on the job!\n\n\"TT, this is Mrs. Van Harding. She would like to consult with you. Mrs. Van Harding, this is my husband, TT Spalding. Please, let me get you a better chair.\" \n\nMaggie walked around the desk and pulled the good chair from beside the desk and moved it to the front. Mrs. Van Harding sat down without a glance at Maggie. Maggie had been dismissed without even realizing it. She made it look easy and sexy as hell, just sitting down. When she crossed her mile-long legs, even Maggie swallowed hard.\n\nMaggie slowly backed out of the room, not even looking at me. She was watching her until the door closed. Well, even Maggie was smitten. Funny thing: I wasn't the least bit interested. Something about her shut me down. Oh, I ogled her tits, and her legs and considered what she would look like naked, but only out of manly duty. In reality, I didn't like her that much.\n\n\"What can I do for you Mrs. Van Harding? What do you need?\" I watched her closely. Something was not right here.\n\n\"What I need Mr. Spalding, I should be getting from my husband. What I want from you is to find out why my husband seems to prefer getting his somewhere else.\" Not a blink or sign of annoyance. Just a quiet comment, like \"isn't it nice today?\"\n\n\"What can you tell me about Mr. Van Harding? Do you have any suspicions as to what he may be doing?\" Just to get an idea. Never know what the wife would know.\n\nShe gave me story and verse. Seems she knew quite a lot about our Mr. Van Harding. Enough to make my job easier. I discussed the terms with her, understood that I was to contact her directly from here on, and supply her with videos and pictures. Seems the money in this family was hers, not his. Speaking of money, she gave me a five-thousand dollar retainer, far more than I would usually charge but she wanted a lot in return. And I could supply it.\n\nI walked Mrs. Van Harding out of the office and let Maggie get her signature on the contract. Along with the information I needed. I stood in the doorway and watched as she left, Maggie closing and locking the door behind her. I turned to go back in the office and sure enough, Maggie followed me in. She shut the door, moved over to sit on my lap and put her arms around my neck. She looked deep in my eyes and then gave me a kiss hard enough to make my toes curl.\n\n\"What was that for? I expected the third degree after she left.\"\n\n\"I saw the way you looked at her and it made me proud. You didn't fall for that sexpot even one little bit. You knew she was a cold bitch didn't you?\" She kissed me again and wiggled her butt on my lap, driving me a little crazy.\n\n\"Saw it and didn't like it much. Of course, I wouldn't mind seeing her naked but not much more. No, she was a cold one alright. No wonder her hubby's looking elsewhere.\"\n\nMaggie and I talked a little about the case and decided to call in both Bruno and Polly. We had two hot cases, a couple of others not so hot and it was time to make them go away. Maggie wanted the vacation as much as I did, although she didn't have the same worries I did. She didn't know about the phone call and she wouldn't find out either. She made the calls, sitting on my lap and scheduled them in together for tomorrow. After she hung up, her lap dance got a little more suggestive and before you knew it, we were in the supply room, taking inventory. Damn! I loved taking inventory with Maggie. She was really stacked, I mean stocked, no stacked is right. And I had to touch every bit of that inventory with my own hands. And Maggie knew how to take inventory too. Very well. God, I loved that woman. I really, really did!\n\nBruno and Polly came in the next morning and we went over the cases with them. They were feeling frisky and decided to work together on all four cases. That was a surprise since they usually didn't like working together, but Bruno suggested it and Polly jumped on the idea. Maggie and I agreed, although we had no idea what they were up to. But, I gave them all of the available info, told them what the clients wanted and sent them on their way. \n\nIt was about three weeks later when I got a call from Polly. She said that they had some stuff Maggie and I should see. I scheduled the afternoon for them and Maggie closed the office right after they arrived. They were giggling and carrying on like two teenagers and I was surprised. The two had never expressed any interest in each other and I couldn't blame them. They were as different as night and day. Polly was serious, a people person and very self reliant. Bruno was a loner, avoiding people of all types and insecure as all hell. Together they were probably equal to one normal person. Maybe. \n\n\"OK, what have you got for us? We should handle the two older cases first. Anything there that I would like? Any kinky stuff?\" I liked kink, it always led to a double deal with the other spouse. Usually got a twofer from that. I had a lot of deals that went that way. Polly took the first one and began with a summary.\n\n\"\"No kinks this time boss. The first case was straight forward. The guy who hired us wanted to find out if his brother was stealing from him. He let us in as temps and we got the goods. The brother is stealing him blind. Up to two grand a week. Easy money. I got tape and pictures and Bruno has bank account numbers and locations.\" \n\nPolly handed me a folder with a couple of CDs and a bunch of pictures. There was also a typewritten list of account numbers with bank locations. I handed it to Maggie after quickly scanning the info. They had the brother cold! \n\nBruno took up the narration for the second case. \"We had a little more trouble with the second case. That one was a mother wanting you to track her daughter to see if she was meeting a boy after school and in the evening. Mom said the boy was real trouble and she was scared for the daughter. Mom said the daughter was going to dance class and aerobics class, but that she could be meeting him afterwards. Seems Mom was blind as all hell. The daughter was cutting classes, meeting the kid at his apartment and screwing her ass off. Doing some real kinky shit too. Kid is bad shit. Into drugs and petty theft. Polly got pictures of daughter coming and going and some good ones of inside. Not something Mom should really see but they prove what she'd been doing. I got contacts that can shut him down if we want. Just let me know what Mom says.\"\n\nAgain with the folder and it, like the other, was complete. These two did stellar work. Always have and always will. I hoped we could keep the charade going a while. Like me paying them good money, and them pretending they needed it. Like I didn't know. Hah! Who did they think I was? \n\nMaggie took the folder, looked at a couple of the pictures and shook her head. \"That's a real shame. Looks like she is underage as well. How old is she?\" Maggie looked to Bruno. \n\n\"Girl's sixteen. Old enough to make the decision according to the man. Not child rape or anything. Kid is twenty-four or five. Not real sure. Old enough to know better. That's why I'd like to shut him down. Put him out of business. Other shit is different. People who buy know better, right boss? They use, and abuse, their problem. Girl is different. She doesn't know any better. Mom is clueless but has a good heart.\"\n\nBruno knew. I knew. Maggie knew. Polly knew. We'd all been through it and had come out the other end strong. The girl was too young to get the chance if she stayed on this path. I thought about it, looked at Maggie who nodded and I gave Bruno the word.\n\n\"Shut him down and put him out of business. No questions asked. Mom doesn't need to know anything more than he won't be a problem for her little girl any longer.\" Bruno nodded, smiled at Polly and that was that. The kid was toast, he just didn't know it yet.\n\n\"OK. Now that those are out of the way, we can close the book on past cases. Good work to both of you. Bonuses all round. Now, we have to talk about the other two. I know that these are the ones we all hate. No good news there for someone. But, that's the way it goes in the real world.\" I grimaced, thinking of the young kid who's world was about to be turned into garbage. \n\nI only hoped it wasn't all bad. \"Who's got the young kid with the wife?\"\n\nPolly held up a file folder with a sad smile. \"I got it boss. Me and Bruno took turns on this one and there isn't any good news at all. Just a sad, sad case of greed and stupidity.\" She opened the folder and laid some photos on the desk. Maggie and I leaned over, took one look at them and shivered. Maggie's hand slipped into mine and I squeezed it to let her know I understood. The pictures were too clear for comfort but then, Polly was a pro.\n\n\"Her name is Betty and she does work at the bank. Her hours are from nine to two. She leaves the bank alone, twice a week. She drives her little car over to an apartment complex on the east side and goes up to an apartment on the fifth floor. She has a key. Let's herself in and usually stays about two to three hours. Does this twice a week, Tuesday and Friday. The other days she just runs some errands or goes directly home. No change in the two weeks we watched her.\n\nPolly took out some CDs and laid them on the desk. She pulled a couple of sheets of paper out and started to read from them. \"After the first week, Bruno got a couple of cameras with audio planted so we have full coverage for the last week. Got them doing it all, sex, drugs, and some really sick stuff. I'll let you watch that alone.\n\n\"Here's the part that made me ill. She's telling the guy, a real loser, that she loves her husband but he is too tame for her. She wants to get pregnant but he doesn't seem to have what it takes to plant the seed. She's telling this guy to make her pregnant and give her a baby. Hubby doesn't have to know and it wouldn't make any difference if he did. He loves her too much to kick her out. Guy suggests she maybe would like a three way with him and her husband. They laugh about it and then she bends over, raises her ass in the air and yells for him to do her that way until he can find a third.\"\n\nPolly stuffed everything back in the folder and shoved it over. She looked a little pale but she's a trooper. I took the folder, while Maggie put her arms around Polly and held her while the tremors passed. Polly is a pro, but she's still a woman with a good heart. Tough to do this shit sometimes. This is one. Polly, being the pro she is, would have scoped out the hubby and knows what a soft-hearted guy he is. Really makes it hard.\n\n\"OK, I'll take it from here. She's a loser and he has to be told in a way that makes sure he knows it isn't his fault. Maggie and I'll do that. Good work on a real downer. We'll finish it in a way that will make you proud.\" I looked over at Bruno and he had an actual tear in his eye. Son of a bitch! Knew I saw something good in him. Good heart and good soul. I felt a little like a proud papa, with two good kids. \n\n\"OK then, Bruno. You take the other one?\" \n\nI wasn't nearly as worried about this one. I had a strong feeling that we had two self-destructive personalities here and no one was going to get hurt. Just pissed, more like it. Lots of blame to go round. But, money was an issue and that always made it fun. More fun for Maggie and me then for the clients. But, hey, you know what they say if you can't take a joke.\n\n\"First of all boss, this lady was a real fox. Sorry Maggie, but she was one sexy lady. Hot as hell and ready to party. Too bad she was also a first class bitch. And not only to her husband. He deserved it, but she also gave her help hell at every opportunity. A lot of bitter people there. It made our job way too easy.\"",
        "Bruno took out a small box and sat it on the desk. Polly reached in for a couple of folders and began to remove pictures. She sorted through them and laid a couple out on the desk. At first glance, they seemed sort of tame until you looked closer. In one that Maggie held, Mrs. Van Harding was standing in what looked like her bedroom. She had on a leather skirt and top, and held a whip. The whip was nasty looking, the fibers tipped with what appeared to be blood. The next picture showed her still with the whip, but now it was directed at a young boy, sitting on a chair, his arms and legs tied. There were signs of cuts on his skin, across the shoulders and chest. His mouth was open in what looked to be a scream. \n\nMaggie threw the picture down with an oath and I felt a little sick myself. I looked at Polly and Bruno and asked the question with my eyes. My mouth was too dry to speak. Bruno looked at Polly and then started. \"There's a lot more of that in here. From what we know, it was the wife's thing, not the husband. At least, she only did this when he was gone, traveling or visiting somewhere. She had one of her drivers bring the kids in and take them away. She was paying them off with a lot of cash. This went on at least three times over three weeks. She beat them, not bad enough to leave many marks and then she had sex with them. Forced sex, not fun stuff.\n\nHe nodded at Polly. She opened another folder and pulled out more pictures. Polly was damn good and she took clear pictures that were date stamped and easy to use as evidence in divorce cases. She just tossed them down in no particular order. \"These are of the husband. He's gay. Has at least two lovers we were able to find. Visits them often, one guy every day. They stay in and spend the evening together. Seem real calm to me. No kink, no multiples, no drugs. Just straight gay sex and some cuddling.\"\n\n\"OK, we have all we need. What I want you guys to do now, is to forget all about this shit and go have some fun. Take some time off and go somewhere. Just play. Maggie and I are going to do just that once we close these out. We're going to find some sun and some sand and just chill. You should do the same.\"\n\nBruno got a little red and looked down at his feet. Polly laughed and poked him in the shoulder. \"Actually, Bruno and I are going to take a little trip to Hawaii. I have an assignment there and I invited him along. He's agreed.\" She grinned evilly and went on. \"I thought we could save a little on expenses and share a room.\" Now she laughed and grabbed him around the waist. \"He's a little shy about it. Tell him it's OK, Mom and Dad.\" \n\nMaggie clapped her hands together and hugged Polly first and then Bruno. \"I think it's great. You two are our favorite people in the whole world. Go! Have some fun with no worries. Just be together for a while and have fun!\" \n\nI smiled and seconded the thought. \"I agree. Be with each other just for fun. Dad approves!\"\n\nMaggie and I watched as the two of them walked out, holding hands and laughing. Now it was over for them but just beginning for us. Well, that was the job. Sometimes you get the bear, sometimes the bear gets you. We took the first two cases and decided to close them first. Not much left on either and a good chunk of change coming in. \n\nI took the first case, summarized the findings, documented the proof, with dates and accounts, all frozen by Bruno by the way, and indicated the amount embezzled at a total of $300,000 over a period of two years. I made a note that our fee was fifteen percent of funds recovered as agreed and billed the final total of $42,500 remaining to be paid on receipt of the final report. I took that out to Maggie for finishing. She leafed through it quickly and smiled at the amount. She gave me a blinding Maggie smile and blew me a kiss. One down with a promise of a significant reward later that night. \n\nThe second one was a little harder to write. In that case, money was not the goal. It was the mother who was going to be hurt. Since her daughter was old enough to be considered legal, there was little to be done except what we did. Bruno would take him down and put him out of business permanently, but that was little comfort to the mother. She was going to have to deal with her daughter somehow. I wrote the report myself as gently as I could, but bad news was bad regardless of how it was phrased. I called the mother myself, told her I was having the final report sent by messenger over to her and told her to call me if she had any questions. She pressed me for answers on the phone but I declined, citing confidentiality. She hung up depressed, knowing bad news was coming. Best I could do. I wasn't even going to bug her about the additional fifteen-hundred she owed me. Knowing her, she'd probably pay it. Decent woman. \n\nFinally, the bitch. Now, this report was one I would enjoy. I worked on it the rest of that day and some that evening. I finished it up the following day and talked to Maggie about it once it was done. She read it, made a few suggestions and then typed it up formal like. We included pictures, DVDs, and a couple of CDs of sound only. It made an impressive report. We made three copies, one went into our personal file. Now, for how to handle it.\n\nMaggie called the husband and invited him to visit us as soon as possible. He was available and we met with him for an hour that afternoon. One edited copy went with him and he left a very happy man. He knew what to do and promised to wait for our call.\n\nNext, I notified a friend of mine and asked him to stop by the office to see me. I went over the report with him and gave him a complete copy. I showed him the signed consent forms from the wife and he made sure they were legit. They gave me permission to use monitoring equipment in their home. He was satisfied with what I gave him and agreed to meet with me at 1:00 p.m. the next day here at my office. He knew what to do then.\n\nFinally, Maggie called Mrs. Van Harding and told her we had the information she asked for. Maggie told her she would be satisfied by the husband's behavior. She scheduled her in to meet with us at 12:45 the next day. She was to bring a certified check for the balance of the $15,000 agreed to. That was another $10,000. We would collect the check before giving her the report. Of course! \n\nThat night, Maggie and I made love. No rowdy sex, no experimentation, just a reaffirmation of our love. What we had seen the past few days was too disturbing for anything else. We reminded ourselves of what love was really about. It was wonderful. Afterwards, I just held her tight and we fell asleep that way. We woke once during the night, made love again and woke refreshed and ready for the day. God, I truly loved that woman! I really did!\n\nMrs. Van Harding came in right on time. She was dressed as wonderfully as before, her ample figure exuding sex. This time, Maggie was less impressed and showed her in very coolly and very professionally. She smiled at me as she closed the door. It was my turn.\n\n\"Good afternoon Mrs. Van Harding. I believe I have what you wanted. These pictures are just a sample of what we have. There are DVDs in addition to audio files. All show Mr. Van Harding in the arms of his lover, a Gerald Coffman. The other man is Walter Waldman. They are also lovers, as you can see. This is what you wanted, I presume?\" \n\nShe looked at the pictures, smiled and wet her lips as she flipped through them. The smile was feral and not very pleasant. I watched her eyes narrow with pleasure. Now her true character was plain to see. This was a very nasty woman, regardless of the package. Her hands shook as she held the most revealing of the group.\n\n\"I see Paul is a pervert. Not what I expected. I thought he would have a young woman or maybe even several. Paul never gave me any indication that he was gay. He was a very accomplished lover when he was there. Not often, but very good. Yes! This is very good. I assume the DVDs and the audio show will confirm the same things? Perfect. Here is the check you were promised. I have the report so I believe our business is concluded.\"\n\nShe rose and started toward the door. As she did, I buzzed Maggie, the signal we arranged. When Mrs. Van Harding opened the door, Detective Woody Mars was waiting. \n\n\"Mrs. Victoria Van Harding? You are under arrest for soliciting sex with minors. You have the right to an attorney. If you refuse, anything . . . \" \n\nYou know the rest of it. The case made all the papers for several days. It was a real scandal. Rich woman in sex with minors! Case broken by NYPD Detective W. Mars. Acting on a tip, surveillance proved case beyond doubt! Mrs. Van Harding was arrested and the report I gave Woody the day before was used to file charges of sex with minors, abuse of minors, and several other charges. Since she had given us permission to use surveillance to trap her husband, all videos and tapes were admissible. She was convicted and sentenced to twenty years. \n\nThe real bonus arrived by messenger the next day. It was a check from Mr. Van Harding for $25,000. He was now the master of the estate, since Mrs. Van Harding was indisposed. She had signed over control to him in exchange for keeping the remainder of the report suppressed. Since she had pleaded guilty to avoid a trial, none of the information we had was released. Only the cops and Mr. Van Harding had access to it. Besides us, of course.\n\nMaggie and I worked on business for the next couple of weeks, waiting for our two 'children' to come home. Bruno had called once from Maui to let me know things were going great and that he had heard from one of his contacts that the person I was concerned about was back in Ohio and keeping his head down. Seems he heard that there was word out to let me know when he came back to NY. Also, one of his bank accounts had suddenly been closed. Cost him a cool $3,500. Just a warning but he got the word. \n\nI had made the arrangements for a trip for two to St. Croix, an island in the Med. I got us a suite in one of the hotels there with a waterfront view, a hot tub, room service and deluxe accommodations all round. Cost me a pretty penny but for my Maggie, never even questioned it. We leave this coming Friday and we will be gone two whole weeks. Maggie has done some shopping and the bathing suits she bought! Wow! It even made her blush and that took some doing. Me? I just wanted to be with her. I didn't care about much else. And I didn't worry over much. Maggie was mine, body and soul just as I was hers. Didn't care who saw her or looked at her, because she never paid them any mind. She was mine, and she made sure I knew it. \n\nOh, yes. One other thing. Maggie read my novel while we were on vacation. She actually liked it! She said she would help me send it off to some publisher she knew. Who knows, you may read it soon. She's thinking up a name for it now. \n\nDamn, I love that woman! I truly do! "
    ],
    "authorname": "thecelt",
    "tags": [
        "private investigator",
        "p.i.",
        "private eye",
        "satire",
        "detective satire",
        "detective",
        "gumshoe"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/tt-spalding-the-van-harding-case"
}