{
    "title": "Champions Vol. 01",
    "pages": [
        "Champions Volume One: Awakening\n\nDisclaimer: The following version of this novel is a work of erotic fiction. All characters that engage in sexual acts are of the legal age of consent. Any similarities between real people, places, or events are purely coincidental.\n\nAuthor's Notes:\n\nThis is the re-release of the Champions story. The original version is solely the product of my own efforts, published on Literotica without the help of editors. It is also the only extant copy of that original; I don't even have a copy in my own files. As such I have chosen to allow it to remain, both as a record of my first effort at fiction, and also a reminder to myself to never be too proud to accept help.\n\nThis version is significantly improved over the original, and incorporates a large number of the recommendations I received from my Literotica commenters. I thank you for those, and encourage you to keep the excellent recommendations flowing. I will solicit your input with the remaining works, and hopefully together we can create a truly marvelous saga.\n\nIf you have read the original story, then much of this work will be familiar. If you are just interested in the significant story changes skip to Chapter 38 - 40.\n\nThere are a multitude of military terms, equipment, and jargon in this story that may be unfamiliar to many. Any good search engine can be a great asset to readers that are confused by these. To the other veterans reading this work, you may have used different terminology during your time. This is simply what we used during mine.\n\nTime is presented in United States Army 24 hour format of Date, Time, Month, Year, and then Time Zone. Two Time Zones are used for this work. The first is \"Local\": Which is used to indicate that the time listed is the precise time of the local Time Zone. In the case of the scenes in Afghanistan at the beginning of the book, that is GMT/UTC +4:30 hours. The second is \"DW\": This is an abbreviation for David's Watch, indicating that there is no other way for the characters to identify what the time really is, so we are forced to use the only available benchmark for measurement...the wristwatch of our protagonist. For example:\n\n100200MAR13 LOCAL is translated into March 10, 2013 at 2:00 AM in the morning of the local time zone.\n\nWhile 132008MAR13 DW is translated into March 13, 2013 at 8:08 PM in the evening according to the protagonist's wristwatch.\n\nFinally, to my fellow veterans of the United States Armed Services, you above all others understand the messages of sacrifice and loss that this book hopes to convey. This story is for us. I will continue to include how each of the characters struggle with Post Traumatic Stress Disorder (PTSD) in the remaining works. As you know, combat changes you, and dealing with those changes is a lifelong struggle. Too many authors who have not experienced combat fail to realize its true cost. PTSD is not a plot device, it is not a character defect, and it is not an excuse for immoral or unethical behavior. It is the inevitable result of a person with a conscience being forced to experience unconscionable things.\n\n-ScreamingEagle101\n\nCopyright \u00a9 2016\n\n***************** Volume 1 ****************\n\n ***\n\nAs the dawning sun illuminates the sky,\n\nlighting the world before men's eyes,\n\nbringing light to the world once more,\n\nand ending the darkness of the night before.\n\n \n\nIf only it could banish the darkness from men's hearts.\n\n \n\nThe morning mist twisted lazily through the tall grass of the field, snaking past the higher ground to slide its way amongst the low areas. But the lowlands were greedy, and they desired more than the mist's gentle caress. They also claimed the morning's dew, last night's anemic rainfall, and the blood of the many fallen.\n\nLooking down upon the blood drenched battlefield, the lone figure sighed in frustration. It seems his Champion was unequal to the task of protecting this realm. As the figure pondered how the battle's outcome would affect the future of his world, a second figure appeared from the mists.\n\n\"Eros, why so somber?\" the second figure gloated teasingly.\n\nTurning to face the unwelcome intruder, the morning sun illuminated the chiseled jaw and perfect figure of Eros - God of Love, Procreation, and Sexual Desire. \"Do you ask because you care for my answer,\" Eros responded, \"or because you genuinely fail to understand what you have done, Enyo?\"\n\nEnyo, Goddess of War and Servant of Ares, laughed cruelly. \"I'm a Goddess of War, you simpering fool. Do you really think me incapable of understanding battle?\"\n\n\"No, Eny, but I hoped you had finally put this hatred aside,\" Eros replied wearily.\n\n\"Don't call me that!\" She seethed furiously. \"Don't you ever dare call me that again! You cast that name aside when you cast me aside, so that you could go off and dally with your precious mortals.\"\n\n\"I apologize, but old habits die hard,\" he responded with a sigh. \"And you know I did not cast you aside. I am responsible for the mortals of my realm, as you are responsible for yours. Just because you refuse to take that responsibility seriously does not mean the same is true of others.\"\n\n\"WAR, you horse's ass. War is my domain, not a bunch of prancing ne'er-do-well lay-abouts fucking dawn till dusk. And my realm is thriving, unlike someone else who seems to be incapable of protecting his mortals for he is too busy playing, cock deep in the locals.\" She spat.\n\n \n\nEros turned his gaze to the heavens, and took a deep breath to calm himself. He remembered, even these many centuries later, why he fell in love with the beauty before him. But he could no longer remember how he was able to ignore her temper, her immaturity, and her vindictive tantrums (the evidence of which he was apparently surrounded by). Lowering his eyes he looked upon the figure of Enyo, his last immortal love and now the bane of his realm. The form she chose for this confrontation was always his favorite. Standing five and a half feet, with long, dark hair, a slender waist, flared hips, and pert breasts; she was a vision of loveliness that would turn the head of any mortal or god that gazed upon her. If only her face were not marred with a scowl, which seemed almost permanent since their separation a millennia ago.\n\n \n\n\"I dally with these mortals to show them the power and wonder of Love. I bestow them with my love personally because I refuse to be a puppet master pulling strings in my realm. I do not wish for my mortals to merely worship me, I want them to love me as deeply as I love them. It is through them that I exist, and have my power. How can I not be grateful of their worship, and give back as much as possible?\"\n\n \n\nAt these words Enyo snorts in derision. \"Grateful? They are mortals! They should exalt over their good fortune to venerate your name, and grovel in fear at your might. You are a God you fool; your very presence among mortals lowers you.\"\n\n\"And we return to the same old argument, Enyo. You believe The Creator banished us to our own realms because he did not wish to share, and you feel they should be used as toys for our amusement. I believe He did it to teach us the value of those who worship in our names,\" Eros explained in the tone of one trying to tell a toddler that one plus one equals two for the 300<sup>th</sup> time. \"Now tell me why you have violated The Ares Conventions and attacked my realm, killing my Champion.\"\n\n \n\nEnyo's lips curled in distain at Eros' words. But at the mention of the Conventions her lips morphed into a cruel smirk. \"I merely explained to him that while revenge is certainly not sufficient cause for entering your realm, expanding my worship is. So as soon as enough of your mortals started to venerate War, I was able to tiptoe my way over to your realm and do what I do best. It's too bad your little Champion was caught in the middle of the battle. I'm afraid my faithful are growing quite quickly in this realm, and it would be a shame if you were not able to field another Champion before I am powerful enough to issue a challenge. Perhaps if you loved your mortals less, you would not give them the freedom to betray you.\"\n\nEros' eyes narrowed as he realized the magnitude of this attack. This was no mere petty revenge from his former lover. This was an attempt to seize control of his realm; which was now undefended, with his Champion laying slain on the field. Speaking with barely restrained menace, Eros responded, \"This is not your realm yet Enyo. So cast yourself from my sight until you have enough faithful to render a proper challenge.\"\n\nShe was unable to resist his command in his own realm, but was unwilling to let him have the last word. As she faded from sight, her parting words were dripping with sarcasm, \"I'll see you again soon, my former lover.\"\n\nUpon Enyo's departure Eros' gaze returned to his Champion. While not a young woman, she had an ageless quality to her that spoke of a life of beauty and importance. He had chosen her because she was a powerful sorceress, a gifted leader, and she loved all life as much as he did. She had given him nearly five centuries of devoted service as his Champion, and had done more to spread love throughout his realm than even he had. He was certain he could never replace her, and after almost half a millennia he was unsure how to even begin.\n\nTearing his gaze from his beloved Champion, he cast his sight to his realm, searching for his next one. The task seemed nearly impossible. His most devout followers were not tempered enough of spirit to handle the hardships of being a Champion. He began to realize that the realm he had so lovingly doted on for the last two millennia had been weakened by too much prosperity. His mortals knew they were loved, and cared for, so they did not understand hardship, sacrifice, failure, and loss. He now understood the blame for his Champion's death lay squarely on his shoulders. He had coddled his realm for so long his faithful were unable to stand against those that had forsaken his message of Love, and instead chose the path of War.\n\n \n\nTurning his gaze to the heavens he called out with his power.  Father, I have failed you. I thought it was my duty to love and protect the realm you gave me. But I have only weakened and failed them. Please, tell me what I should do to save them.\n\n \n\nEros received no words in reply, merely an image. It was of a young man, not quite three decades in age, standing on the side of a mountain. He was dressed in strangely colored clothing, and was adorned with weapons and items that did not match anything in Eros' realm, or any other realm under another god's dominion. The God of Love knew that The Creator had heard his plea, and it seems he was sending him a truly unorthodox Champion, from a very far away land.\n\nThe god also felt that patience would be needed. This man, this new Champion, would not arrive for some time. Thankfully, Enyo could not amass enough followers in his realm to challenge his dominion overnight. It would take her time, perhaps even a few generations, and Eros would continue to observe his own people as well. He had spent too much time among them, and it was time for them to learn how to stand on their own once again.\n\nEros remained standing in the field as hours turned to days, weeks, months, and finally years. Watching the bodies of the fallen carried off by loved ones, looters, and carrion animals. None save his Champion were left untouched. She alone would be protected by his power, and his vigil, until the next Champion came to lay her to rest; and to claim her place at his side.\n\n\n\n*** Chapter 1: Same Stuff Different Day ***\n\n100200MAR13 LOCAL\n\nCombat Outpost (COP) Able-Main, Kunar Province, Afghanistan\n\nThe sound of the alarm pierced through the fog of sleep surrounding David, bringing him out of a pleasant dream involving him, his last girlfriend, and their favorite can of whipped cream. Reaching over he slapped the off switch, then patted his M9 pistol, making sure it was where it should be. Plenty of the older NCOs joked about sleeping with their weapons, but unless he was outside the wire he just couldn't sleep comfortably with a gun in his rack. At that thought he chuckled ruefully; comfortably was a relative term after all. As he sat up and swung his legs off his cot he remembered the time he had signed his pistol over to Doc for a mission.\n\nHe smiled at the memory of his reaction when the C-RAM alarm went off while he was taking a rare and badly needed nap that same afternoon. Hearing the warning alert of 'incoming' he reached over to pat his M9 for reassurance, but it was NOT in its customary spot. He had freaked out so badly that it took ten minutes to get his heart rate back to normal.\n\nHe had to shake his head at the memory; he was so used to the insurgents lobbing rounds at them he didn't even get out of bed when the alarm went off any more, but he sure as shit jumped out of bed when he couldn't put a hand on his weapon. Since then he made it a habit of leaning his M4 next to the shelf if his M9 was out. I guess we never get too old for security blankets, David thought to himself as he looked at his pistol, they just aren't always blankets.\n\nGetting up he stretched his six foot tall, 185 pound frame, and pulled on his Multi-Cam uniform trousers. He glanced in the small mirror by his desk. His ruggedly handsome face was clean of stubble from shaving the night before, but his dark brown military-cut hair was getting long. Better get a haircut soon, or Top will start flipping his shit he thought to himself. He also noticed that the once piercing blue eyes of his childhood had become flatter, grayer than they once were. He shrugged at his reflection. He wasn't sure when it happened, but sometime in the last few years life had stolen their vibrant luster.\n\nReminding himself why he was awake at this ungodly hour, he started checking his trouser pockets for mission essential gear. He also double checked that they had been stripped of pocket litter. He was going outside the wire today on an overwatch mission. His team was responsible for teaching and training the local Afghan National Army (ANA) forces. Essentially their job was to convince the local army to not be a bunch of unprofessional, corrupt fuck-ups. Having only been in Afghanistan for six months David already knew they were wasting their time.\n\nToday they were setting up an overwatch position on the ridgeline next to a valley that the local Afghan commander was planning on clearing. Apparently, the villages in the valley were being forced to support insurgents coming over the border from Pakistan, on their way further in to Afghanistan to fight in Helmand Province in the south. He didn't think it mattered. The whole mission was a goat-roping contest, and if the fucking Afghans found a single insurgent he'd call home and buy a lottery ticket.\n\nThe Afghan Army didn't fight insurgents. The insurgents didn't fight the Afghan Army. It was a losing proposition for either side. The locals didn't want Afghans killing Afghans, regardless of the uniform, or lack thereof. But insurgents killing Americans worked for both sides. The insurgents could claim they were victoriously defending their homeland from the infidel invaders, while the Afghan Army could show how serious the \"insurgent threat\" was in their region, and demand more weapons, material, and equipment from the US Army.\n\nHe chuckled at that thought. I imagine the only reason the US encourages the Afghan Army use M16s now is to ensure it is that much more obvious when the local Afghan commander sells his weapons and ammo to the insurgents. That had already happened five times in the last six months. He still couldn't understand what the hell an enemy that primarily used Kalashnikovs, Enfield rifles, and PKMs would want with ten crates of 5.56mm NATO standard ammo, but they had happily bought it from the last Afghan commander. David shook his head again; selling ammunition, food, and military supplies to the enemy, and that commander got demoted and reassigned. The fucker should have gotten the firing squad.\n\nStrapping on his drop-leg holster, he checked and secured his M9 and spare magazine. Then he picked up his M4, inspected it, and readied it as well. Next he checked his body armor / load carrier. The new vest was a better load bearing system, and more comfortable than the old one, but it was a bitch to get in and out of. Luckily once something was woven into its webbing it pretty much stayed there. His vest was currently configured to carry his standard load-out, which was six magazines (180 rounds) for the M4, two magazines (30 rounds) for the M9, a single M67 fragmentation grenade, combat knife, and assorted other necessities for an Army forward observer (FO). While David was not actually a true FO, the duties were part of his training as an Artillery Officer and he would be required to fulfill the role on this mission, as he had a number of times before. He had already pulled the MBITR hand held radio off of his vest, in favor of the more powerful PRC-117F backpack radio in his rucksack.\n\nThe larger radio and enough batteries to power it for 48 hours were a shit load of extra weight to haul, but it was the only thing that could reliably range other friendly forces from their overwatch position. The captain in charge of this mission wanted this long range radio with the team, and David agreed with him. As a certified Joint Fires Observer (JFO) he made the most sense to carry it. After all, if they were forced to call for help, the first thing they would want is Air or Artillery Support, and that was the JFO's specialty.\n\nNext he moved on to check his rucksack. He would need to do a communications check with the PRC-117F before he stepped off today, but he wanted to make sure everything was secure before then. He had packed what he needed for the two-day mission last night. Unlike his last 48 hour mission, where he under-packed according to higher command's guidance (and spent four days starving and freezing his ass off) he over-packed this time. That was the coldest and hungriest he had ever been, and he refused to ever do that again. This time he had what he wanted, and screw anyone that didn't like it. The only thing he carried that he did not want to was the hygiene kit. He snorted ruefully at that last part. Walking out for a two-day combat mission and he had to take a fucking razor. First Sergeant cares more about us having a clean shave than a hot meal. He thought to himself.\n\nAfter spot checking his rucksack and radio, he put on his combat shirt, checking that Old Abe was centered with his ISAF patch on his left shoulder sleeve pocket. Then he checked to make sure he had his smart phone, ear buds, and communications card inside. It was an old smart phone, and he had erased any sensitive information off it, but he still carried it to watch movies, listen to music, and as a training aid. It was amazing how much of the language barrier he could overcome when training Afghans just by taking a picture of a target and pointing to it. As far as he knew he was the only trainer to use this technique, but it worked very well. Next he checked to make sure his cigarettes were inside his right shoulder sleeve pocket, and the nametape and IR flag were still attached to the outside. Lastly, he pulled his rank patch off.\n\nBrigade Headquarters had sent down a message last week that Taliban were paying bounties for confirmed US kills by rank. NCOs were worth US $2,000, and Officers paid US $10,000. The next day their team leader, Major Deanore, allowed anyone on the team that wanted to remove their rank insignia to help counter the bounties to do so while on mission. David wasn't sure it would make a difference, but if he was going to die on the side of a mountain, then at least he could try to screw the guy that killed him out of a payday. Plus, he didn't trust the Afghan Army. Most of them were greedy, corrupt, and you never really knew whose side they were on.",
        "Throwing on his armored vest, he slung his rucksack on his back, and scooped up his rifle and helmet. Unclipping his custom rifle sling, he stowed the sling in his cargo pocket and clipped the rifle to his vest. Shoving his helmet under his arm he backed out of his small room and into the hallway he shared with four other junior officers and one NCO.\n\n\"You ready Kenny?\"\n\nFirst Lieutenant David \"Kenny\" Kennisham turned to see First Lieutenant Mark \"Mother\" Hilliard looking at him questioningly.\n\n\"Almost Mother. I'm all packed, but I gotta run past the TOC and do a commo check before I'm ready to roll,\" David replied.\n\nMark nodded in confirmation, \"Alright, once you're finished head over to the office and check in. Patrol brief is in the Dog House in an hour, but the Major wants to do a quick team only brief first.\"\n\n\"Yes Mom,\" David replied sarcastically, grinning.\n\n\"Alright smart ass, you're wasting the Almighty Army's time sassing me when you should be moving out.\"\n\n\"Sir, yes sir. Moving sir,\" David faux shouted, quick stepping to the door. As he exited the hallway he heard a sleepy voice grumbling from one of the closed rooms \"shut the fuck up Carl.\"\n\nAs he walked to the Tactical Operations Center (TOC), David went over the mission plan in his head. His team (the local Security Force Advising and Assistance Team - SFAAT) was sending six advisors along with a security squad from the local infantry company. They were traveling by vehicle with a platoon of Afghan soldiers approximately ten kilometers to an Afghan Observation Post (OP) at the mouth of the Korengal Valley. From there they would separate, and the six members of his team and two interpreters would trek another four kilometers up the side of the valley wall to the overwatch position. Travelling with them would be four Afghan Artillery observers that David had trained, and the Afghan company commander, Captain Massood, that was in charge of the clearance operation. Naturally the Afghan commander had to travel with his four-man personal security detail (PSD), and his support staff, an additional two enlisted soldiers. So it looked like his team was taking eleven Afghans with his six-man team four clicks (kilometers) into Indian country for a nature hike. This mission was so FUBAR. No wonder the Major opted out of it.\n\nDavid shook his head at that thought. Knock that shit off asshole. David admonished himself. The Major was an exceptional leader, and a damn fine trigger-puller to boot. If he could have gone on this mission he would have.\n\nAfter checking in with the Fires Desk at the Tactical Operations Center (TOC) and completing a communications check David walked to his team's office. Entering the office he realized he was the last to arrive, the other five team members of the patrol and MAJ Deanore were all waiting on him.\n\n\"Commo check done?\" inquired MAJ Deanore when he noticed David enter.\n\n\"Yes sir, we're golden. And I packed enough spare batteries we don't need to be stingy with it either.\"\n\n\"Good man. Now drop your ruck and pull up a chair, I got some last minute intel before you head out,\" the major replied.\n\nDavid stowed his rucksack in the corner of the office and sat in the only empty chair left. Looking up he noticed that someone had set up one of the laptops and linked it to a TV to show the mission briefing PowerPoint slides. He began praying this wasn't another briefing before the briefing situation. That had happened more times than he could count, but he was sure that Captain Epps had finally convinced the major that the a two hour operations briefing the week before, and the single patrol brief later this morning was enough.\n\nClearing his throat Major Deanore checked something he had in a file, and then looked at the men scattered about the table. \"Gentlemen, this is a fairly simple op. But, getting the Afghans to leave their bases and OPs to do any form of patrolling has been such a pain that we are going to continue to hold their hands as long as we have to, so long as they are actually doing what we ask.\n\n\"This clearance mission is small potatoes for us, but the ANA don't do them very often; and there are a lot of brass up at Brigade hoping this will be the start of a trend. So if Captain Massood asks for Fire Support while he is up there with you, give it to him. Kenny, make sure you pay close attention to his observers. I know you trained them, but they don't have as much experience with live rounds as we do.\n\n\"Last item before we wander over for the patrol brief. This is the first mission since we found out about the bounties, and I'm glad none of you are wearing your ranks. Just be careful out there, and pay close attention to the ANA. Green-on-blue is rare, but it does happen. Captain Massood came to us highly recommended, but he is still new here. If something feels off, call it out. And Captain Epps, if it feels even the least bit unsafe up there, pull out and come back to base. Victory or Death.\"\n\nAt Major Deanore's last words all the team members at the table stood and sounded off in reply \"Victory or Death.\" It was the motto of 1-32 Cavalry Regiment; the parent unit for all of the SFAAT members on COP Able-Main, and most of the SFAAT officers, NCOs, and soldiers throughout Kunar Province. When the 101<sup>st</sup> Airborne Division was tasked with supporting ISAF operations in Kunar, two infantry battalions got the security and COP defense jobs. 1-32 Cavalry Regiment \"Bandit\" Squadron got fucking babysitting. But like every other mission Bandit Squadron got, they would do this one to the absolute best of their abilities. So they got separated, broken up piecemeal into small 10 to 16 man advising teams, and were sent to every corner of Kunar where the Afghan Security Forces were trying to establish control of the country.\n\nDavid grabbed his rucksack, and followed the other six occupants from the room. Major Deanore would walk with them until they exited the front gate, then he would keep an ear glued to his radio the entire two days they were away. He was a merciless taskmaster at times, but he really did care about his team. After the major wrenched his knee coming off the helicopter on that last mission, the COP doctor told him no more missions till he was healed. David noticed his limp was finally improving. Knowing the major, he was probably already trying to figure out a way to sneak out for a mission anyway.\n\nAfter they arrived at the Dog House (the nickname for the COP's mission briefing room), David scanned the room, and saw that the entire security squad from First Platoon, Alpha \"Gator\" Company was already there. Checking his watch he realized the mission briefing was supposed to start in five minutes, and his team was technically late, since by Army logic they weren't there ten minutes early. Good thing we walked over with the major, David thought to himself. I guess that's one of the perks of being the highest ranking US Army officer in the region, everybody waits on you. As the Gator platoon leader began the briefing, David focused on the team he was going to spend the next two days with.\n\nCaptain Vance \"Hollywood\" Epps was a West Point graduate. He was also built like a soccer player, and was movie star handsome. The man was so well known among the female officer corps that the whole team nicknamed him Captain Hollywood. Fortunately, he was also Ranger qualified, combat experienced, laid back, and a common sense leader. He could sit around and joke with senior officers, junior officers, NCOs and enlisted alike. He made everyone feel important and included.\n\nFirst Lieutenant Mark \"Mother\" Hilliard was an ROTC grad from the University of Ohio. He had worked for both Major Deanore and Captain Epps in the past, and was one of the most professional and knowledgeable junior officers that David had ever met. While he liked to joke with Mark about being the team's Den Mother, David knew that half of the mistakes he had made in his first few weeks with the team were fixed by Mark long before the captain or the major ever found out. But that was just Mark. If he knew you were trying hard he would make sure you succeeded, and then make sure you could succeed on your own the next time. He was also a hell of a shot with the M14, and was one of their team's two squad designated marksman going on this hike.\n\nSergeant First Class Ray \"Tongue Punch\" Bragg was a sarcastic hard-ass. Twelve year veteran of the United States Army, Bragg had seen two combat tours in Iraq, and one in Afghanistan before finding his way to the 101<sup>st</sup> for another trip to \"the Stan\". Bragg could show you how to operate any weapon in the US and Afghan arsenal, and probably a few more that neither army had ever seen. He was the other squad designated marksman for this trip, carrying the team's second accurized M14 rifle. Everyone on the team flatly refused to explain to David how he got the nickname Tongue Punch, but he was called it often.\n\nStaff Sergeant Jason \"Pappy\" England was the oldest member of the SFAAT. Over forty, he had gotten a late start in life, joining the Army after his 38<sup>th</sup> birthday. He was an exceptionally cynical man, but still in great shape for his age. At six feet four inches tall, and over 230 pounds he was the team heavy gunner. He carried the Mark (Mk) 48 light machine gun (LMG) and spare ammo easily with the rest of his gear.\n\nSpecialist Bill \"Doc\" Simmons was the team's medic, and their youngest member. Currently only 20 years old, he had enlisted as soon as he turned 18 and had spent the next year and a half becoming the US Army's own franchise on the Angel of Mercy, the combat medic. Doc went on every SFAAT mission. Long or short, near or far, two hours or two weeks, it didn't matter. If even one member of the team had a chance of getting shot at, Doc made damn sure he was there just in case. So far the team had been in a handful of dust-ups with the local insurgents, but thankfully the worst injury sustained so far was the major's knee.\n\nLastly there was himself, First Lieutenant David \"Kenny\" Kennisham. He had completed a degree in Psychology from the University of Tennessee, but postponed his Masters to go home and help run his parents' farm when his father died of a heart attack. He had always planned to do something else with his life, but only a few years after his father's death, his mother was diagnosed with cancer. Facing mounting hospital bills and not able to find reliable help to run the farm, he had convinced his mother to sell it. Then he heard about the Army offering signing bonuses for recruits, so he decided to enlist to help his mom out. Her cancer had responded to the chemotherapy-radiation double tap, and she had started to recover, so he figured he could make enough in the army to take care of them both as an officer instead. He still remembered how proud she was when he graduated Officer Candidate School (OCS), and pinned his gold Second Lieutenant bar on. She died less than a month later. Her cancer had returned with a vengeance, but she refused to tell him because she didn't want to distract him from his training. With no family, and nothing else to focus on, he had decided to master his chosen profession. In the process he learned he was very good at calling in fire support from artillery and aircraft, as well at teaching those skills to others. He also loved guns, and could operate nearly every weapon system assigned to his team.\n\nJolted from his reflections by Doc's tap on his shoulder, David walked with the rest of their team out to the MRAPs they were riding to the Afghan OP. As they loaded up and stowed their gear for the ride out, David wondered how boring this mission was going to be. There was a very slim chance the insurgents hadn't already been tipped off by the locals or spies in the Afghan Army. But if they had not, he might actually get a chance to do his job for once, and blow some shit up.\n\n\n\n*** Chapter 2: Betrayal ***\n\n100716MAR13 LOCAL\n\nApproximately 2KM SW of ANA Lower Observation Post (OP) Jubai, Kunar Province, Afghanistan\n\nThey had barely travelled two kilometers along the path to the overwatch position near the Jubai Upper OP, but David was already tired as hell. He had started regretting all the extra food and water he had packed about a kilometer ago, and he was now starting to regret the extra clothes and fleece. He figured he would be cursing the radio and batteries in another kilometer.\n\n\"How you doing sir?\"\n\nLooking over his shoulder he saw Doc grinning at him, and began cursing his medic's ever cheerful disposition. \"I feel like a bag of smashed assholes Doc, thanks for asking\" he replied sarcastically.\n\n\"That's because you stuck to the packing list that they put out back in December for that mission sir,\" Doc replied with a grin. \"After four days of freezing your ass off and running out of food on that cluster-fuck, you overdo it now.\"\n\n\"Well observed Captain Obvious. Are you bucking for a promotion Sonny?\" David replied in a gravely mock-NCO voice. \"What's your grand survival strategy for when the inevitable snow rolls in and we get stuck up here for a few extra days?\"\n\nAt his question Doc broke into an enormous, shit eating grin. \"I'm gonna borrow from you sir,\" he said.\n\n\"Mooching, shit-bagging, motherfucker...\" David grumbled, trying to hide his smile.\n\nAfter a few minutes, just as David was starting to think about how nice it would be to stop for a quick break, Doc piped up again.\n\n\"I never asked sir, why does everyone call you Kenny?\"\n\nSmiling David cast his thoughts back to Boot Camp. \"Laziness Doc. When I was in Basic all the other knuckle-draggers in my platoon didn't like bothering with my full name, Kennisham. So they just called me Kenny. By graduation the whole company was using it, and two of the guys I graduated with accompanied me to OCS. When I showed up they kept calling me Kenny, and everyone just assumed that was my first name. It stuck. When I showed up at the 101<sup>st</sup> I kept running into guys that knew me by that name from OCS and Field Artillery BOLC [Basic Officer Leadership Course] and it just kept going. Does it amuse you to know that one of the nicknames your officer's use was born of the laziness of Basic Training Privates?\"\n\nBreaking into another shit-eating grin, Doc replied with laughter in his voice, \"Absolutely sir. It's good to know that some of you high falootin' officers can't escape your humble beginnings.\"\n\nDavid appreciated the sentiment. He also appreciated Doc's less than subtle attempts at keeping him distracted from the pain in his back and legs; the result of hauling so much weight up a damn mountain. Returning his full attention back to the task at hand, he noticed the team ahead of him had stopped. Calling up to the next man in line David asked \"Hey sir, why are we stopping?\"\n\n\"Got a kid leading a donkey down the path ahead. He must be returning from a resupply run from the upper OP. We're gonna hold up and let him go past,\" replied Captain \"Hollywood\" Epps.\n\nDavid nodded his head and held his arm up to signal the halt. Taking a knee and visually scanning his sector of fire for the short halt, he started searching the path nearby for better, and hopefully more comfortable, cover. It was a valuable, learned survival trait to always know where the nearest rock you could hide behind was. Out of the corner of his eye he caught movement up the line, and turned to see a boy of six or seven years leading a laden donkey down the path ahead.\n\nDavid still had trouble with this country. A kid that age shouldn't be doing supply runs to military outposts in the mountains at seven in the morning. Hell, that kid was barely old enough to be in school in the states. But early during the deployment their interpreter Khan had explained how Afghanistan really worked. The insurgents would steal the supplies and kill any adult that tried to support an Afghan OP. The only way the villages could provide the government required support to the military, and avoid reprisal from the insurgents, was to use children for the supply runs. The insurgents wouldn't attack the kids, and even the most corrupt Afghan soldier would think twice about stealing from a child. Yeah, this country was FUBAR.\n\nTaking a second look at the donkey, David started to wonder why it was carrying so much if it was returning from delivering supplies to the OP.\n\n\"Sir, stop me if I'm wrong, but isn't that donkey riding a little heavy for 'after' a supply run?\" David inquired of Hollywood.\n\nTurning to look closer at the child and beast duo that was now about twenty feet from their point-man, Sergeant First Class Bragg, Captain Epps reached up to key his mike, \"Tongue-Punch this his Hollywood, does that donkey seem like it's riding a little low for a return trip, over?\"\n\n\"Looks like it Hollywood, I'm about to have the terp [interpreter] ask the ankle biter what's up, over,\" came Bragg's response over the net.\n\nDavid went back to scanning his sector, but could hear the interpreter Khan, calling out in the distance.\n\nLess than a minute later Bragg's voice came back over the net \"Hollywood this is Tongue-Punch, the kid says the ANA refused to pay him for the supplies, so he has to take the whole delivery back down to the village. He seems legit. The kid's crying his eyes out over it.\"\n\nAt this last message David's spider sense started shouting at him. This was totally wrong. The Afghan Army didn't plan for missed resupply runs. They were logistical idiots 75% of the time, and he would have bet his next paycheck that without the food on that donkey, the soldiers at that OP would go hungry by tomorrow. Sure they were greedy, corrupt, deceitful assholes who would certainly have refused to pay for a supply run; especially if someone had been embezzling the money from the Afghan government, which happened all the time. But they would have still taken the supplies.\n\nTurning to Epps again, David voiced his concern, \"Sir, you know that doesn't sound right. These ANA are more corrupt than Chicago politicians, but they would never let food and fresh water walk back out of an OP. What if it's an I.E...\"\n\nboom.\n\nThe loud, far off, thump of a large explosion in the direction of Jubai Lower OP was followed by the sound of small arms fire and a burst of radio chatter on David's radio. \"...this is Gator 27, our lead vick just got hit with a VBIED and we are under fire from the north. We need QRF and any Air Assets ASAP. I say again, Gator Main this is Gator 27, our lead vick...\"\n\nBOOM!\n\nWhatever else Gator 27 had to say on the subject was rendered undecipherable to David by the sound and shock wave of a much closer explosion about one hundred feet away. Knocked from his feet, blinded and deafened David noticed a few things at the same time once his vision returned.\n\nFirst, he couldn't hear anything over the ringing in his ears, his nose was bleeding, and the pounding in his head wasn't doing him any favors either. Second, along the trail where the donkey and boy used to be, there was now an impassable crater about ten feet across and five feet deep in the mountain. Third, the front two SFAAT team members, Tongue-Punch and Pappy, were down and immobile. Fourth, he seemed to have an annoying flashing at the edge of his vision, back along the path behind him. Deciding to tackle this last issue first he blinked a few times to clear his vision problem, but the flashing continued. So he turned his head to see Doc, and Mother apparently in a shoot out with the Afghan commander's Personal Security Detail (PSD) back along the path. It had been muzzle flashes he was seeing.\n\nMotherfuckers, thought David. Those goat-fucking, rag-headed, camel jockey motherfuckers finally decided to cash in on our hides.\n\n ",
        "Popping the quick releases on his rucksack, he shouldered his rifle and crawled to a nearby rock that would give him some cover, while still allowing him to fire safely past Doc and Mother. He settled the crosshairs of his 4x32 Trijicon ACOG\u00ae on the spot where the ANA PSD were popping out of cover behind a boulder the size of a delivery van to take pot shots at his teammates. David steadied his breathing.\n\nBang.\n\nThe report of his rifle was barely discernible to his ringing ears, but the spray of pink mist from behind the rock face was all the confirmation that he needed. His single shot had done its job.\n\n\"Doc, Mother and I got this. Get your ass down the trail and check on the rest. Tongue-punch and Pappy ain't moving, and I didn't get eyes on the captain before I decided to bail your asses out.\" He could barely hear himself, but the soreness in his throat told him that he was screaming his voice to hoarseness to get Doc's attention.\n\nDoc ducked down behind the rock he was using for cover, and yelled something back to David.\n\n\"I can't hear shit Doc. Just get moving and do what you can.\"\n\nDoc called out in the direction of Mother, who nodded his head emphatically and pointed back towards the rest of the team. Nodding in agreement, Doc shouted something to Mother then sprinted from cover to cover back up the trail towards the fallen members of the team while Mother lay down suppressing fire for his move. As soon as Doc cleared his position David added his own contribution to the suppression.\n\nOnce his first mag was empty, David reloaded from his vest while he scanned his field of fire for targets, but apparently no more of the PSD were willing to risk his and Mother's fire at the moment. Keeping his rifle shouldered, David moved from cover to cover, closing the distance to Mother's position. Stopping at the best cover he could find near his teammate, he dropped down and clenched his jaw a few times, trying to pop his ear-drums and clear the ringing.\n\n\"You with me Kenny?\" David could barely hear Mother shouting to him.\n\n\"Yeah man, I'm back in the fight. Hearing is still a little fucked up. Kinda wished I had the boss's fancy ass Peltor\u2122 ear pro right now. But, then again, it might make it easier to ignore what your sorry ass is nagging me about from now on.\"\n\n\"Fuck you and your bitching. Your narcoleptic ass was napping the day away while Doc and I were keeping these assholes from interrupting your beauty sleep,\" Mother said with relief in his voice. The harsh edge of worry crept into his tone with his next statement, \"I couldn't get you, Captain Epps, Bragg, or England on comms after it went down. How are they?\"\n\n\"I don't know Mother,\" David replied, shaking his head. \"Tongue and Pappy are down, and I didn't see Hollywood on the trail before I came here. You know Doc will sort them out if he can, what's the story with these assholes?\"\n\nMother grimaced in anger. \"Captain Motherfucker and his PSD opened fire on us and your observers as soon as the donkey pulled a Wile E. Coyote. Your guys went down fast, but they gave us a second to get in cover and return fire. After that the PSD and the captain ducked back around that large boulder where the trail curves around, and started popping out and shooting. I got one earlier, and either you or Doc got a second one.\"\n\nAs Mother finished explaining the situation he turned and looked back up the trail, so David turned his head to see what had caught Mother's attention. Epps came sliding into cover beside him, carrying Pappy's Mk 48. \"Pappy is down and in bad shape, but Doc is doing what he can. Sergeant First Class Bragg is dead,\" Epps announced with barely restrained rage in his voice. \"Mother, keep a close eye on that rock. Put a round in anything that even looks like it might have hostile intent, Kenny and I are going to clear these fuckers out and find an LZ for medevac.\" After this announcement he turned to David and said, \"You're on the clock Kenny, move out.\"\n\nThe bounding overwatch is one of the most basic tactics in the Army arsenal. It is so simple it could easily be compared to a child's game of leapfrog. But in its simplicity lay a symphony of precision, where all extraneous movement is discarded, leaving efficiency born of repeated practice. Had the PSD been brave enough to even try firing at either David or Epps moving forms, they would have had little more than a second or two to acquire them as targets before the American soldiers were back under cover. Meanwhile the target's two pissed off and lethally armed compatriots were set and prepared to return fire in an instant. Taking turns, Epps and David moved from cover to cover; kneeling, crouching, or lying prone behind any rock big enough to serve the purpose. They covered the nearly 100 meters from Mother's firing position to the bend in the trail defended by the PSD in less than two minutes.\n\nStopping at the last patch of cover big enough to deserve the name, David signaled to Epps that he was set. As Epps moved up to David's position, he knelt down and aimed at the near edge of the boulder, giving his subordinate final attack guidance. \"Kenny, I'm going to move into position on the near side of the boulder. Once I'm set, I want you to move up to my position, prime your frag, and toss it over the boulder to those assholes. Give it a half second after it pops, then step out high around the boulder. I'll go low, and we hose anything that's still moving, or even looks like it might move. Got it?\"\n\nDavid nodded his head in confirmation.\n\nCaptain Epps stalked forward smoothly, establishing a kneeling firing position next to the large boulder, and signaled David to move up. David crouch walked up to his patrol leader, lowering his rifle to hang from its clip, and pulled his M67 fragmentation grenade from the pouch on his vest. He thought about the regulations against soldiers \"cooking\" grenades [the practice of pulling the pin and releasing the spoon for a set length of time before throwing it] and then compared the time it would take for him to throw it over the boulder, and have an Afghan pick it up and throw it back. Fuck regs. He pulled the pin and released the spoon, cocking his arm back and started counting . . . one . . . two . . . and he threw it over the boulder.\n\nBoom!\n\nBefore David had reached five the grenade had detonated, but he had enough time to return his hands to his M4 and shoulder it, prepared to fire. Taking two steps out, he swept left to right, identifying the bodies of two PSD laying at the edge of the boulder. These were the ones they had shot previously. Further down the trail about fifty feet he could see two more PSD crouched down from the grenade's detonation. They had apparently decided to make a run for it. David aimed center mass on the first target and fired twice rapidly, double-tapping his corrupt betraying ass in the chest. Before his second round had left his rifle's muzzle, Epps had opened up with the Mk 48, sending a burst of 7.62mm 'freedom' into both opportunistic jihadists.\n\nDavid began visually scanning the back trail for the captain and his two adjutant soldiers. \"There sir,\" David called out, pointing at a bend further down the trail. \"About three hundred meters out and running fast down the trail.\"\n\nHollywood moved to the nearest appropriately sized rock, and popped out the front bipod legs on the LMG, resting them on his new shooting platform. Tucking in behind the Mk 48's 4x magnification scope, the captain steadied his breathing and prepared to engage a moving target at what was now over four hundred meters with something that was less than a precision sniping weapon. Breathing in and out, he questioned the morality of shooting a fleeing enemy in the back. Then he thought about Bragg's wife and two children back at Campbell, and how she was going to have to explain to them their daddy was never coming home from this trip.\n\nBang.\n\nThe Mk 48 bucked in Epps hands, and David watched as Captain Massood, the architect of this attack, fell down face first mid run.\n\n\"Check the bodies for any pocket litter that seems important Kenny, then get your ass back to us pronto. We need to get Pappy stabilized, on a stretcher, and lifted the fuck out of here ASAP, \"said Epps with a tight voice. \"Where is your radio, I need to call this in?\"\n\n\"It's on my ruck, I dumped it to move up and support Doc and Mother.\"\n\n\"Alright, hop to it. We're burning daylight here,\" Hollywood responded, walking back along the trail.\n\nLooking back toward where Massood's body lay, David couldn't see where the Afghan captain's two adjutant soldiers had gone. He wondered why Epps didn't bother engaging them as well, and then wondered if they even knew anything about what was going to happen today. Sighing, David stopped caring. If he saw them again they were dead men, but they weren't worth the effort right now. Moving to each of the slain PSD, he checked their pockets, vests, and packs for their cell phones and any paperwork that looked important. He found a bunch of useless trinkets and other crap, but only a few papers on one of them. Not surprising really, most Afghans can't read. Finishing up he walked back along the trail to where Mother had moved up to cover him.\n\n\"I grabbed everything that might be important, but the papers are probably just Afghan erotic literature. And you know they only use the cell phones to download porn,\" David griped to Lieutenant Hilliard as he walked past him.\n\n\"Naturally. Now get your rucksack on and get ready to move out. Captain Epps can't reach anyone on the radio and we can't get line of sight communications to lower Jubai or Able-Main from here. We need to move back along the trail until we can get someone on comms and figure out what the hell is going on,\" Mother passed along the situation report and his marching orders.\n\n\"What do you mean he can't reach anyone? We heard Gator 27 right before this whole shit show kicked off,\" David asked him, puzzled.\n\n\"No clue dude. But nobody's talking right now, and Pappy needs more help than Doc can give him. Standing here ain't getting it done.\"\n\n\"Roger that. Then let's get this done,\" David said. Pissing on about the unreliability of Army communications wasn't getting Pappy to the field hospital any faster, and that was the only thing that mattered now. He moved to his rucksack, and wrangled it back onto his shoulders. He had a passing thought about tossing any non-essential crap out of it to lighten the load, but he would have to dig through it to get to the MRE's and water he had packed in the middle, and there was not enough time for that. Turning to see if Doc needed help, he heard the zip of the first of many rounds pass by his left ear a millisecond before a powerful tug on his rucksack caused him to overbalance and fall backwards. Barely a second later he heard the cracka-cracka-cracka of an AK-47 firing a burst at his position. Turning his head toward the gunfire, he saw three insurgents taking up position on the high ground next to the trail leading toward the upper OP, where the mission was originally headed.\n\nAs David struggled to free himself from his rucksack so he could return fire, he watched two of the insurgents spray Doc with bursts of AK fire. David screamed in rage and denial as he was forced to watch while Doc was hit multiple times as he crouched over Pappy, trying to protect him. Epps shouldered the Mk 48 and unloaded a full ten second burst of 7.62mm hatred, screaming in anger at the enemy insurgents who had just stolen two more of his men from him. David could hear Mother returning fire from behind him on the trail. Finally freeing himself from his rucksack, he rolled over and crouched to run for the nearest cover. He wanted in this fight. He wanted payback for Doc, for Pappy, for Tongue-Punch, for every other soldier that these zealots had stolen from their families for no good damn reason.\n\nJust as David spotted the cover he was looking for, he felt a sharp pain in his head and his body was thrown forward to the ground. But he never felt himself impact.\n\n\n\n*** Chapter 3: Picking Up the Pieces ***\n\n10????MAR13 LOCAL\n\nApproximately 2.5KM SW of ANA Lower Observation Post (OP) Jubai, Kunar Province, Afghanistan\n\nThere was a rock poking him in the face.\n\nAlso, his scalp felt like a million angry fire ants were crawling through his hair and biting him. And his head was pounding worse than the most painful migraine he had ever had. But, yeah, at the moment the most significant thing he could think of was there was a rock poking him in the face.\n\nWhy was a rock poking him in the face?\n\nDavid wracked his throbbing skull for the answer to this conundrum. He was on a mission...something bad happened...he took a nap?\n\nThat wasn't right.\n\nHe had gotten knocked out. Wile E. Coyote had attacked them with ACME TNT.\n\nNope, still wrong. His team didn't have the Roadrunner in it. Can't blame the bird though, there was no reason for the Roadrunner to be in Afghanistan. Wait a minute, Afghanistan! He was on mission in Afghanistan. The donkey, The Kid, THE IED!\n\nDavid groaned as he rolled over to get away from the rock poking in his face, and cracked his eyes open. The light hurt his head even worse, but he needed to figure out what was going on. The first thing he saw was Mother, slumped over a rock ten feet away. As he continued to scan about he saw Hollywood, lying on his side, the Mk 48 on the ground in front of him. Further down the trail he saw Doc's body lying over Pappy's, where they had both died in the second surprise attack of the day.\n\nDavid quickly turned his focus to the surrounding area. The three insurgents up the hill were still there, and they were definitely dead. Next, he checked the trails in both directions, but couldn't see movement either way. Finally, he looked down in the valley. It looked peaceful. A handful of Afghans were walking back and forth along the roads and amongst the fields, but there was nothing hurried or fearful about their movements. Moving his head with caution, he cast his gaze a little closer and saw a puddle of blood on the ground where he had landed earlier. Realizing he probably had a head wound, he crawled slowly to the nearest rock formation that would best cover his movements from the valley and further up the mountain. Once there he took off his gloves and gingerly removed helmet. Pulling out his signal mirror, he checked to see how bad the damage was.\n\nHis helmet had saved his life, or damn near taken it, depending on your interpretation. A high velocity round had clipped the edge of the helmet in the back, and had then deflected it around the inside surface. The round had burrowed a trail across half his helmet before lodging in the interior side wall. The Kevlar weave was torn and deformed on the edge where the round had slipped in, and had bulged out the right temple where its path had finally halted. Checking himself in the mirror David discovered a path of clotting blood in his hair.\n\nLooking at his watch he realized it was almost noon, and nearly four hours had passed while he was knocked out. He hoped the clotting would take care of the wound, but he also knew head wounds bled the worst. So he decided to treat it just in case. Opening his Individual First Aid Kit (IFAK), he looked for materials to care for the wound. Tearing open the package of Quick Clot infused sterile gauze; he carefully wrapped it around his head and taped the ends once he was finished. Closing the IFAK pouch he then put his helmet back on. It wasn't comfortable, but it would keep the bandage in place. It also might end up saving his life again today.\n\nSelf-aid complete, he went to check on the bodies of his teammates. Mother was draped across the rock he had been using as cover. As David got closer he noticed that Mother had been shot in the throat. From the sizes of entrance and exit wounds he surmised that Mother had been shot through the back of the neck, exiting through the jugular by a high caliber rifle round. Looking at where and how his body lay, David realized that the round had come from the south eastern edge of the village, 500 to 600 meters away. Looking that direction he saw a few houses scattered about, and realized a second shooter, or group of shooters, had been watching their team from one of the houses the whole time.\n\nNext he moved to Epps' body. The captain had been shot four times, once in each leg, once in his left arm, and lastly in his left shoulder. David checked for a pulse hopefully, but found none. Epps had bled out, unable to treat all four wounds on his own. David stared at the guts of Epps' IFAK strewn around his body, shame and rage welling within him. His captain had died alone, needing his help, while he lay unconscious and useless twenty feet away. Unwilling to look at Captain Epps' body any longer, David walked further down the trail to Doc and Pappy. Doc had multiple bullet wounds on his body, and David refused to count them all. He had died trying to save his teammate, but had failed. The burst of AK fire that killed him had also killed Pappy.\n\nWalking another twenty feet further down the trail to the final member of the team, David saw the body of Sergeant First Class Bragg next to the body of the interpreter Khan. He realized the team's other interpreter for this mission, Haseeb, was missing. He hoped the man had run off during the fighting, but suspected he had been a part of it. David had never felt totally comfortable around any of the interpreters, but he hated working with Haseeb. The man always reminded him of a ferret.\n\nMoving back to his rucksack, he keyed his radio's mike to see if anyone could hear him now, but the radio wouldn't key a signal. Thinking the battery may have died he opened his rucksack to inspect it, and saw that the first burst of AK fire that had just missed him had hit something. His radio had a bullet hole in it, and small broken bits of electronics had been blown out the back of it. Tossing his rucksack down in disgust, he unclipped his rifle from his vest, and pulled the sling from his pocket. His little custom rig for his rifle worked great for a Fires Observer, who needed both hands free to call fire missions, but would also have to drop everything in a second to be able to return fire. Unfortunately it meant his rifle always got in the way if he wasn't holding it; and right now he had work to do.\n\nSlinging his rifle over his back, he reached down and grabbed Bragg by his rucksack shoulder straps. He had to drag the deceased NCO along nearly forty feet of rocky trail, but refused to stop until he was resting next to Epps. He wondered why he was now thinking of them by name, and not nickname. He realized that he never really liked the nicknames Tongue-Punch and Hollywood. They were the products of crassness and jealousy respectively. He reflected on this as he dragged Doc's, and then SSG England's bodies back as well. Doc was just Doc. No one called him Specialist Simmons. Finally David stood next to Lieutenant Hilliard's body. No, he was still Mother. He cared about everyone on the team, wanted to see everyone succeed, and protected his team with his life. He would always be Mother to David. Unhooking Mother's rucksack, he lifted his teammate into a fireman's carry. He refused to drag his friend through the Afghan dirt.\n\nAfter laying his final teammate with the rest, he collected Mother's and Epps' rucksacks, setting them next to their motionless forms. Kneeling next to his fallen team he said a quick prayer, beseeching God to guide his friends to the next life and grant peace and comfort to their families. Then he wracked the patchwork pieces of his damaged brain to figure out a way out of this mess. Thinking deep thoughts was hard as hell when your head felt like it was being crushed in an industrial vice.",
        "David thought about the mission plan. His team had been out of contact for over four hours, and their route was well known. By now aircraft should have been sent to find them, and had certainly seen their position. The QRF that responded to the attack on the lower OP should have already made it to his position. Where the hell are they? Did they get held up? Maybe the attack on the lower OP was bigger than I thought, David thought to himself. They don't even know I survived.\n\nRealizing he needed more information, he decided to return to the lower OP and try to pick up a signal on one of the smaller MBITR radios as he got closer. He wouldn't go all the way in - he had no idea what he would walk into if he did - but he had to get close enough for radio range at least. He gathered what he would need to move back to the lower OP. He knew after six months in country most insurgent contact was at five hundred meters or greater. Before today he doubted there had been a firefight inside three hundred in years. Looking at his M4 and M9 he realized he was carrying the wrong weapons for a lone soldier strolling through the hills of Afghanistan. He needed more range.\n\nHe looked over at Mother and Bragg. Bragg's M14 was deformed from the explosion, the scope shattered. Mother's rifle was a better choice. David had qualified with that exact rifle not two months ago. He picked it up, pulling back the operating rod and opening the breach. There was a round chambered, and the bolt moved smoothly. Closing the breach he hit the magazine release and checked the mag. It was mostly full. Pocketing it, he pulled a fresh mag from one of Mother's front vest pouches, and loaded it into the rifle. Mostly full wasn't full, and a full mag was how he was going to start this walk. Looking back at Mother and Bragg, he debated whether the M14 and two mags were enough. He doubted it. Then again he didn't exactly want to haul any more weight. His rucksack was too damn heavy as it was.\n\nCasting his eyes towards the bane of his existence, he realized it didn't need to be that heavy. Pulling it toward him, he opened it and tossed out the PRC-117F radio with the bullet hole through it, and the eight spare 5590 batteries inside. Then he tossed all the food and water out of his bag, keeping two water bottles and two MREs. That was about forty pounds he didn't need any more. Besides, he still had three quarts of water in his Camelbak\u00ae.\n\nNext he looked at the gear and equipment resting on the ground around him and his team. He needed to replace his M67 fragmentation grenade, and more ammo for the M14 was a priority too. Replacing his missing frag with SSG England's, he thought about the Mk 48. It was a dominant weapons system on the battlefield, but the 7.62mm linked ammo for it was extremely heavy and he wasn't sure how many rounds were left. Epps had been firing it pretty heavily when he went down.\n\nDeciding it couldn't hurt to check; he picked up the weapon from beside Epps' body, and immediately noticed there was no ammo in it. Flipping up the feed tray, he racked the charging handle on the side and slid the bolt back to inspect the firing chamber. Everything looked good, just out of ammo. Setting the weapon down, he crouched over SSG England's rucksack and opened it.\n\nOn the very top lay twelve 7.62mm link 100 round ammo belts in tight rolls.  Damn, he thought to himself, Pappy over packed too. Pulling out four, he decided to load one into the Mk 48 and carry it. He also grabbed ten M14 mags from Mother and Bragg, and the six M4 mags in Epps' chest pouches. He realized that the weight didn't balance out; when he loaded the extra linked ammo rolls and magazines in his rucksack. He was carrying more than he had before, but he was also going downhill now. He would rather have too much ammo, than run out now that it was just him. Thinking of this, he grabbed the last three frag grenades off of Mother, Bragg, and Epps, stowing them in his trouser pockets. Then he grabbed Epps' and Mother's M9s as well, tossing one in his ruck and tucking the other into the side of his IOTV. Lastly, he strapped his M4 and Mother's M14 to the top of his rucksack. Now he could suppress any enemy he came upon with the Mk 48 initially, then drop behind cover and switch weapons if he had to.\n\nThinking about his past briefings and responsibilities, he did his final duty for his team. Going from teammate to teammate, he pulled one of their two dog tags off the chain hanging around each one's neck; then he pulled the blood chit each one carried from their left sleeve pocket; and finally he removed their helmets, connecting the small Firefly strobe and 9V batteries that each one wore on the back. The strobes would light up like signal flares to any passing aircraft with night vision.\n\nWishing he could do more, and hoping a recovery team would come soon, he pulled out a blank sheet of paper from his field notebook, and scrawled a quick message in case his team was found by friendly forces before he was. Tucking it into the top of Mother's IOTV, he stood up and saluted his fallen team, unsure if he would live long enough to get another chance to do so. Then he grabbed up his friend's MBITR radio, his rucksack, and the Mk 48.\n\nHe was as ready as he could think of to reconnect with US Forces, and get the bodies of his team back in Army hands. After a moment of consideration, he reached behind his head to the back of his own helmet, and connected his Firefly and 9V. Just in case. \n\nAs he walked back along the trail leading down the mountain he started to feel tremors under his feet. They weren't that far from the Hindu Kush Mountains, and earthquakes were rare but not unheard of. He had been woken up by a 5.0 a few weeks ago. Looking around, he noticed that the loose gravel on the steep side of the trail was beginning to spill down the mountainside. He also spotted an area about 200 feet ahead where the trail widened, and looked like his best bet to ride out the quake.\n\nPicking up his pace, David jogged the distance to the area he had seen. The tremors were getting more violent, and loose rocks were now tumbling around him. Putting his head forward, he broke into a full sprint just a brilliant flash of light sparkled before his eyes, and the ground seemed to disappear from under his feet. He was blinded and falling, probably down the mountainside. I doubt I'll live through this one, was his last conscious thought before his body slammed to the ground, and his heavily traumatized head struck a large rock.\n\nAll of these events escaped the notice of anyone in the area, for the tremors were not deep cast off's of the Hindu Kush Mountains' tectonic activity. They were the reactions of a world absent magic for millennia, reacting to its presence once more. Had anyone been looking in David's direction, they would have seen an Army soldier sprinting full out into a glowing white oval that had blinked into being inches before him, and blinked back out immediately after with him.\n\n*** Chapter 4: Unforeseen Encounters ***\n\nSame Day, Same Time, Different Place\n\nSnow Gap Pass, Erosius\n\nLaurena was bored. She shouldn't be bored; she was traveling through the Abatinus Mountains, officially on her way to help open the new Temple of Eros in the port city of Calavius. But unofficially she was on a mission for her god. Eros had appeared in the dreams of a few of his faithful across the land three nights ago, to tell them of the coming of a new Champion. The Champion was to be sought out and escorted to the Field of Woe, site of the Great Battle that had changed everything in Eros' realm.\n\nEvery chosen guide was given a mental image of this Champion, dressed in strange clothing and carrying even stranger equipment. But none knew his name, or where he would arrive. So they were all searching the land for him. But after three days of expecting to find him around every bend in the trail, behind every tree, or beneath every rock, Laurena was well and truly bored. She assumed that one of the other chosen would find the Champion. After all, she was a mere acolyte of Eros, not even experienced enough to lead worship services in a temple.\n\nAt this thought she felt a flush of heat and tightness in her feminine core. She had been on the road for nearly a week, and the last town she had stopped in did not have a temple at all. Only clergy members of at least priest/priestess rank could hold a worship service, and so far she had failed to achieve that rank. Her body was aching from the lack of attention.\n\nSighing at the circumstances that led to her sexual frustration, she tried to distract herself with thoughts of her route ahead. It was at least another day and a half of travel to the nearest town on her route, Wolfsvale. Sitting at the southern tip of the Dracian Forest, where the road west to Calavius split from the road south to Lexia, it was a moderately sized town.\n\nLaurena had never visited it, but her mentor at The Great Temple in Sanctuary Port, Aurelia, had instructed her to stop in at the temple in the small town and call upon an old friend. Apparently the old priest that tended to the small town's temple had once been a teacher at The Great Temple, before leaving decades earlier. Laurena had never met Astinus, but she had heard his name spoken of with reverence by her mentor on more than one occasion. She just hoped he would allow her to join the main worship service. Her body needed the fulfillment of divine worship in the worst possible way.\n\nDistracted by her overactive libido once again, she failed to notice the loose rocks in her horse's path until it stumbled. Cursing her distraction, and apparent ill luck, she attempted to steer the horse toward more stable footing. Unfortunately, the trail was narrow, and the horse began to panic as the ground caved beneath its foreleg, and it started slipping down the steep mountainside. Panicking, Laurena threw herself from the saddle, away from the steep fall. No longer trying to balance the extra weight, the horse regained its footing, and cantered a few hundred yards down the trail to where it widened.\n\nRegaining her feet, Laurena began dusting herself off, and inspected her robes to determine the damage done by her fall to the dirt. Shaking her head in exasperation and dismay, she noticed her once pristine white robes were now soiled with dirt. Moving her hands to her hair, she felt a few tangles that had occurred during the tumble. This wouldn't do at all.\n\nFocusing her will, she chanted one of her favorite spells. A large sheet of mirrored glass formed in the air before her. Using its reflective surface to survey the damage to her hair and robes, she maintained the focus of her will and began chanting again. First her hair untangled, and all of the dirt and dust from the day's travels disappeared. Next she focused her attentions to her robes, and cleaned them of the dirt from the fall, as well as the accumulated dust of the day. Checking her reflection, she inspected her work to make sure that her appearance was once again immaculate. Now certain that even the smallest speck of dust had been banished from her form, she did a final inspection of that form; since reflecting on her own beauty always brightened her mood.\n\nAt five and a half feet, she was a few inches above the average height for a woman of Erosius. But that little extra helped her D-cup breasts fit her frame. Too many women she knew with large breasts looked disproportionate or top-heavy. But her chest was perfect for her frame. When combined with her narrow waist, full hips, smooth thighs, and tight rear-end; hour-glasses wished they looked like her. But if her body was perfect (and she knew it was) then her face was beyond that ineffectual descriptor. Long, honey-colored, silken locks framed a heart shaped face that was flawless. High cheekbones, pouty lips, and two cheeks with barely perceptible dimples all combined with her piercing blue eyes and sun-kissed skin to steal the breath from any fool fortunate enough to gaze upon her.\n\nShe was the very incarnation of beauty, and the favored acolyte during every worship service at The Great Temple since she had come of age two winters previously. Taking one last look at her reflection, she whispered a quick banishment chant and released the mirror's elements back to the earth. Turning toward where her horse stood on the trail, she walked carefully to it, making sure the hem of her robes didn't accumulate any more dirt during the short walk.\n\n\"Come on Meadowgrass,\" she spoke soothingly as she approached her horse. \"We have a long way to go before we are through the pass, and I have no desire to spend the night in these dreary mountains.\"\n\nResponding with a flick of his ears, Meadowgrass took a nervous step further away from the steep edge of the trail.\n\nShaking her radiant head in annoyance at her skittish horse, Laurena continued to coax it with a soothing voice as she drew closer. \"Come on you big stupid horsey, I know you don't want to be here anymore than I do. So how about you let me climb back on, and we get down this mountain?\"\n\nEither Meadowgrass chose not to take insult at her slights, or he simply did not understand her words, because she was able to re-mount her horse without incident. Taking the reins in hand she turned him back along the trail southwest, hoping to get down the mountain and into the foothills before twilight set.\n\n***\n\nThree hours later she was nearing the end of the mountain pass and could see the beginning of the foothills at the edge of the Dracian Forest. Up ahead she saw a lone traveler coming her way. The man was wearing a heavy traveling cloak, carrying a worn walking stick, and strolling up the path at a leisurely pace. She was a bit surprised at this, for the day was growing long, and there were few decent (and no comfortable) places to make camp along the trail behind her. As she drew closer to him, she noticed his traveling cloak was of rather nice quality, but had a handful of poorly stitched tears in it.\n\n\"A pleasant evening to you good lady,\" the man greeted Laurena. \"How do your travels find you this day?\"\n\n\"I am well sir. On my way to the port city of Calavius for the opening of the new temple there,\" she responded politely, and a bit proudly.\n\nHalting his walk a few feet in front of her horse, the man took a closer look at her white robed form. \"A priestess of Eros, eh? It has been a few seasons since I attended a service, and none were ever held by someone of your beauty.\"\n\nLaurena flushed with both greater pride and a small amount of shame at his comment. She knew full well she was the most beautiful woman in all of Sanctuary Port, the largest city in all Erosius. But at twenty winters, she was also one of the oldest acolytes in the clergy. Twice she had taken the tests to elevate her station to priestess, and twice she had failed.\n\n\"I am sorry good sir, both to hear of how long you have gone without Eros' Blessings, and for your misunderstanding of my status. I am only an acolyte of Eros, and have not yet taken my priestess vows,\" she admitted with some shame. She wished she could have avoided the conversation, but she could not falsely claim to be a priestess. Priests and priestesses were given divine mandates by Eros, to spread his love throughout the land. They did this in many ways, but the best known were the Blessings of Eros bestowed during worship services at temples (and occasionally by traveling clergy) and the Healing of Eros, curing the sick and injured as proof that Eros held all life precious. Laurena had not developed the strength of her magic enough to heal more than minor cuts and burns, so she could not pass the tests to become a priestess.\n\n\"I see now. So if you are not a priestess, my dear, then you cannot lead a service for me and some friends?\" he asked, obviously hoping he was wrong.\n\n\"I am sorry sir, but I am forbidden from rendering the Blessings of Eros without the supervision of a full member of the clergy,\" she explained to him with regret in her voice. \"I plan to stop in Wolfsvale in two days, and participate in the services there under the supervision of the temple priest if you are able to adjust your travels.\"\n\nBefore she had even finished her words, the man was shaking his head in dismay. \"Alas my dear, my companions and I will not be traveling near Wolfsvale any time soon. In fact, we are not allowed near the town at all, under penalty of servitude.\"\n\nAt this he swung his walking stick into the nearest rock, striking it with a sharp crack three times. Immediately Laurena heard movement amongst the rocks to her left, up the steep but navigable mountainside next to the trail. Four men with weapons and mismatched leather armor had sprung from concealed positions, and were hurrying down the slope toward her. Intending to flee, she kicked her horse in the flanks before she had even returned her gaze to the trail ahead. Whinnying in pain, her horse reared slightly, but did not move forward. Looking for the cause of Meadowgrass's reticence, she saw that the man had thrown off his traveling cloak and was holding her horse's reigns in one hand. He was dressed in similar, but slightly better quality leather armor, and was now holding his walking stick like a club in his other hand.\n\n\"Get down, my dear. We have no wish to harm you,\" said in a calm voice. \"My men and I will relieve you of your horse and your belongings, and send you safely on your way.\"\n\nOutnumbered and terrified, Laurena climbed fearfully from her mount, taking three rapid steps away from the bandit and toward the steep side of the trail.\n\n\"Please sir,\" she begged him. \"Without food or my horse I will not survive the journey to Wolfsvale. Can I have just a few of my supplies, and my warm cloak?\"\n\nAs she pleaded with him for this small mercy, the other four bandits arrived and surrounded them.\n\n\"Bloody Hell, Broast! Look at dem tits! We can feed 'er and keep 'er warm for da night,\" the dirtiest and smelliest of the men said, addressing the smooth talker holding her horse's reins while leering at Laurena. \"And she can 'elp keep us warm tonight.\"\n\nLaurena shuddered at his statements. Sex for the clergy was a holy act, the blessing of her god to be granted to his faithful. It was not something that should be torn from the unwilling, and she was very unwilling to sleep with any of these men, even if she had been a priestess. She lowered her gaze to her feet, shaking her hair forward to hopefully cover some of her ample charms.\n\n\"That sounds like a fair trade Dahlmer. What say you my dear? Care to make an exception for us and grant a night of Eros' Blessings to myself and the lads?\" Broast inquired of her with both his words and a hungry gaze.\n\nShaking her head, Laurena steeled her spine and raised her gaze. \"I would not lay with any of you vagabonds even if my faith permitted it. Eros' Blessing is to aid the worship of the faithful, not satisfy the carnal urges of heathen scum! You blaspheme my god by suggesting otherwise.\" She trembled in fear at the outrage in her voice, knowing her words would provoke them. She wished she could take them back, but it seared her soul to hear anyone speak such words about Eros' divine love.\n\nHis gaze hardening cruelly, Broast shook his head in slow anger. \"Then save your worthless Blessings, whore. We shall take our comfort from your body; and when we finally tire, we shall cast you from our sight to whatever fate your precious Eros deems worthy.\"\n\nHearing his words, and knowing with certain fear what her fate at these men's hands would be, she tried to break out of their restricting encirclement. She charged the man standing between her and the freedom of the trail to Wolfsvale, pushing him nearly off the cliff. He caught himself at the last moment, but was unable to slow her. She ran as fast as she knew how, cursing as her flowing robes began to tangle in her legs, slowing her path to freedom.",
        "WHAM!\n\nSomething struck the back of her head hard, and she tripped to the ground in an instant. The world was spinning and growing fuzzy, but as her vision darkened she prayed to Eros she would not awaken. There was no one to save her, and she felt a quick death was a blessing compared to what these bandits had planned for her.\n\n: Close Encounters of the 7.62mm Kind ***\n\n101300MAR13 DW [David's Watch]\n\nKorengal Valley, Kunar Province, Afghanistan (?)\n\nThere was a rock poking him in the face.\n\nWhat. The. Fuck? \n\nHow many times am I going to wake up with a fucking rock poking me in the fucking face today? \n\n \n\nSeriously?\n\nAs David rolled over and opened his eyes he looked around, spotting and glaring at the offending bit of earth responsible for his discomfort. Once was bad. Twice was an extremely odd coincidence. If it happened again he was certain it would be a sign that his life had become the butt of some divine joke.\n\nChecking for additional injuries, and / or missing gear took him a few minutes. He was missing one of his M67 grenades from a trouser pocket, and one of the straps on his rucksack had popped loose. Also his right knee and left hip both had a slight twinge when he moved a certain way. He buttoned his pocket closed again, and fixed the buckle on his rucksack, after checking to make sure nothing was missing. With those tasks complete he surveyed his surroundings, looking for the missing grenade and trying to determine how far he had fallen from the trail.\n\nLooking out from his spot on the mountain he could no longer see the other side of the valley. In fact, there was no valley. He was looking down onto sparsely wooded foothills, which stretched toward a large forest to his far right and open farmland to his far left. Something was seriously wrong. Where was the ridgeline on the other side of the Korengal Valley? Where were the villages at the bottom of the valley? Where the hell was the valley?\n\nRealizing something was extremely wrong, he reached down and powered on his Garmin GPS and grabbed his map and compass out of his pockets. Opening his compass, he took a north reading, and saw that it pointed to his right, paralleling the mountain range he was on. Looking down at his map, he started trying to find a large enough ridgeline in his Area of Operations that had a north-south orientation. He found a few, but couldn't spot one that had that much open terrain east of it. Even more confused, he checked his GPS for his MGRS (Military Grid Reference System) coordinates, hoping that those would plot somewhere on his map that he had missed.\n\nNO SIGNAL AVAILABLE\n\nThat was weird. This Garmin was one of the most reliable GPS watches on the market. Half the damn Army owned one. Guys would pay whatever they had to in order to get them, and they were more reliable than DAGRs (Army issued GPS devices) every day of the week, and twice on Sundays. He popped the back clasp and pulled the batteries, swapping them out for a fresh set he carried in his right shoulder sleeve pocket. He powered it on again, and checked the position of the sun to see if his compass might be faulty. Facing out perpendicular from the mountain, it was a few hours off the horizon to his right, at almost a 45 degree angle. Checking his watch he saw it was almost 1700. That was the problem, his compass was broken. It was pointing him west, not north.\n\nLooking at his map again, he tried to find a mountain range that met all the previous criteria, only oriented east to west. He still had no luck. There simply wasn't that much open land in this region of Afghanistan. He started to think about his situation further. There also weren't that many trees anywhere in Afghanistan. Trees were rare, and logging was heavily regulated by the Afghan government. You could spend twelve months in Afghanistan, walking patrols every day, and never see more than the same two or three trees. David looked again, but the forest had chosen not to move during his deliberation. Yup, he was definitely staring at an enormous forest in the middle of Afghanistan. Shaking his head he checked his Garmin again, hoping it had answers.\n\nNO SIGNAL AVAILABLE\n\nCrap.\n\n \n\nHe went to the satellites menu to see if the issue was too few satellites over his position to pull an accurate location. That was rare, but he didn't know what else it could be. On the screen he checked, and re-checked, but his GPS couldn't find any satellites. Not even one. That had never happened before.\n\nMust have broken in the explosion, he thought to himself.\n\nNot coming up with any other good options, he resolved to walk to the top of the ridgeline he was on, and try to see what was on the other side. He should at least be able to get a bearing from the snowy peaks of the Hindu Kush Mountains to the north-northeast, and, if he was really lucky, the Pech River. All he had to do was find the Pech, and follow it down stream. It would take him all the way to COP Able-Main if he needed.\n\nPowering off the GPS, and flipping it over to remove the batteries he noticed his hands were shaking. This had become a common occurrence lately. At first he had little trouble with the stress of Afghanistan. The occasional insurgent attacks on their base were ineffective. They had never managed to injure a soldier, and only twice had damaged important base infrastructure with a mortar or recoilless rifle round. But the stress had continued to mount day after day. Two months ago he had been out visiting an ANA base, doing the security and training assessment that was part of his advising job, when his team had come under fire. They had been pinned down on the trail for nearly an hour. The insurgents were horribly inaccurate that day, but the sheer volume of fire was enough that they were stuck hiding behind the biggest rocks they could find until the insurgents gave up. David had tried to call in artillery support from Able-Main, but the higher ups had denied his request because the shooters were too close to a local village. Apparently American lives were less valuable than Afghan lives now.\n\nOnce the insurgents ran out of ammo, his team had hurried down the trail and off the mountain. They had all made it without injury, but after he got back to the COP and dropped his gear off in his room David had sat on his bed staring at his hands for nearly two hours. He figured they had started shaking from the post mission adrenaline dump, but they wouldn't stop. He hadn't smoked a cigarette in nearly ten years, quitting when he left home to attend college. He smoked his first one of the decade that night, and had been using them to fight the shakes ever since.\n\nPulling his pack from his right sleeve pocket, he popped a cancer stick in his mouth and lit it with his Zippo. Checking the pack he confirmed it was still mostly full, and then returned the pack to its rightful place. Taking a few deep puffs he wondered the same thing he always did, would he be able to quit again once he got back stateside. He knew if the US Army hadn't banned all alcohol on installations in country he wouldn't be smoking again. That first night he would have drank his ass off instead. But cigarettes were the best he could come up with in the absence of a better alternative. Would he become an alcoholic like his uncle when he got back? Realizing the side of a mountain in Indian Country was the last place to have a philosophical debate with himself, he gathered his gear while he finished his smoke.\n\nDonning his rucksack, and weaving the Mk 48 sling over his shoulder, he began to carefully wind his way up the mountain, stowing the finished butt in his lower leg pocket. No sense in leaving an easier trail for the insurgents to follow he thought ruefully. He hoped he could find a decent footpath soon, or this was going to really suck.\n\n***\n\nThe first thing that Laurena noticed was her head hurt. Bad. The second thing she noticed was she seemed to be hanging by her hands, which were painfully bound above her head. She could also hear the crackling of a fire not far away, and the voices of the men who took her, joking and laughing near the fire. She couldn't quite make out what they were saying, but she had suspicions regarding the subject. She feared they were talking about what they were going to do when she woke up.\n\nAfraid to open her eyes, but even more afraid of not knowing what was going on, she carefully cracked her lids the smallest amount. Hoping to glimpse her surroundings, but still appear unconscious. As the anemic sunlight from the twilight sky barely illuminated her captors, her hopes of escape vanished. All five of the men were looking directly at her bound form. With the minimal light from the dying day, and the dancing fire, they hadn't noticed her awaken yet. But it was only a matter of time.\n\nShe tried to think of any spells that might free her. She knew of a few that would easily destroy the bindings on her hands, but all were beyond her skill. She might be able to conjure a small blade, if she put everything she had left into it. Her magic was not very strong, and it had taken her years of focused study to be able to conjure her mirror correctly. She didn't have years now. Not to mention, she had no idea how to do it without her captors noticing. Finally, even if she did get free, then what? Any chance she had of escape depended on their inattention, something her beautiful body and flawless face was unlikely to secure for her.\n\nFor the first and only time in her life she cursed her beauty. Why couldn't she have chosen drabber clothing to travel in? Something that hid her charms, with a hood to cover her face. At this she barely suppressed a shudder. Hide her body? Cover her face? That was a crime against Eros. It was he that had gifted the world with her perfection. It was her duty to display it in all its glory. Why else would he have created such perfection, if not for display? She was not like the other clergy, pious and devout in their ordinary way. She was walking proof of divinity. How else could her body exist to such perfection, than as a gift from Eros; her beauty bringing light to a mundane world?\n\nLost in her self-reflection, Laurena did not see the bandit leader, Broast, stand from his place by the fire and walk towards her. Hearing his shuffling steps get closer, she quickly shut her eyes, and tried to steady her breathing to feign sleep a little longer.\n\n\"Sleeping beauty has been out a bit too long here Dalmer. Are you sure you didn't throw your bolas too hard?\" Broast inquired of his man, standing a mere handful of feet before her bound form.\n\n\"Nah boss, I barely hit'er with 'em. The whore might be fakin' it, thinkin' she's too purty to warm our beds.\"\n\nStruggling to control her breathing, Laurena couldn't help letting out a small cry of mixed pain and fear when Broast slapped her hard across the face.\n\n\"It looks like we have ourselves an actress here gents. It seems she's been faking her little snooze for our benefit.\"\n\nOpening her eyes in fear, she saw Broast standing barely two feet before her. His mouth curled in a smirk of equal parts cruel amusement and lechery. Worse, behind him the other four bandits were standing quickly from before the fire, removing their belts and loosening their breeches.\n\nBeginning to cry, Laurena looked back at Broast with pleading eyes, \"Please sir. Please don't do this. You can have the horse, all the food, everything. But please don't rape me!\" This last request was spoken with a hysterical scream as Broast drew a knife and cut her robes from her bound arms and chest. As they fell, trapped around her waist by an ornate sash, she tried to kick at him, but her legs became tangled in the flowing robes.\n\nAs Broast reached for her naked breasts, she watched two more of the men step to either side of him; their breeches gone and their hardened members clasped in their slowly stroking hands. Realizing that the time she feared had arrived, and that her god had not granted her prayer and saved her from this horror, she closed her eyes tightly and screamed her denial into the late evening; raging against the fate that was about to be thrust upon her.\n\n***\n\nDavid stood at the top of a ridgeline; in the middle of a mountain range that he used to think was Afghanistan. Used to being the key words. Looking where north should be he didn't see the Hindu-Kush peaks in the distance. In fact, he didn't see much of anything in the distance. All he saw was a small trail leading through a mountain pass to the east, and what looked like a great grassy plain on the other side, peaking through the gaps in the mountain range. He had also looked behind him at the sun setting at the edge of the horizon, and realized he was completely wrong.\n\nEither the sun was setting in the south-south west, or he was in the southern hemisphere standing on a mountain range that ran north to south. Pulling out his compass again, he compared magnetic north, with the position of the sun. Yeah, he was in the southern hemisphere. That explained the trees, the farms, and the plains. Not only was he no longer in Afghanistan, he was nowhere near it. Now, if only he could figure out why his GPS wasn't working, how he got this far south, or where the fuck he really was. Because he sure as shit wasn't in Kansas anymore.\n\nAs he jokingly thought about looking around for a yellow brick road, or an angry bitch with a house on her head, he heard a faint scream down near the pass. Looking that way he could barely make out a campfire. Realizing a campfire meant people, he began to jog in that direction, limping slightly and carefully checking his footing as he went.\n\nAs he drew closer he heard more screams, which sounded female, and definitely distressed. Judging the distance in the minimal light, he dropped his Mk 48 and rucksack quickly. Pulling the M14 out and attaching his NODs (Night Observation Device) to the specialized mount in front of the scope. Raising it to his shoulder he had to immediately reach across and adjust the focus on the device. It was set to his unaided left eye, not the heavily magnified image of the scope. Getting the night vision device tuned in was a challenge, as it was not really intended to be used with a scope, but rather for use with an unmagnified electronic dot sight or the human eye. However, he was able to get it adjusted well enough to use, and he returned his off hand to the fore grid, looking through the green tinted scope towards the fire.\n\nThere were three men standing around a woman, and two more standing behind the three. Her hands were tied above her head to a post she was hanging from, and she had been stripped to the waist. He realized she was the voice he had heard screaming, because as he watched the man standing before her punched her hard in the mouth, and David heard the screams muffle and stop. If he still harbored any confusion about their intentions, it disappeared when he realized four of the five men were naked below the waist and the fifth was beginning to disrobe as well.\n\nSeeing this, he began to question if he wasn't still in Afghanistan. Gang rape and murder was an all too common occurrence in that country for an unfortunate woman caught in the wrong place at the wrong time. He realized that he could ask the lady were the hell he was after he saved her; but only if he saved her.\n\nHe reached forward and dropped the bipod legs on his rifle. Next he looked around for a stable shooting position, finding a decent sized rock that would serve the purpose. Checking the laminate sheet taped to the rifle's stock, he double checked Mother's dope (stock windage and elevation data for the scope). Thankfully it hadn't changed. Checking the distance through the scope, and double checking it with his naked eye, he estimated he was about 600-650 meters away. The air was so clear from the lack of humidity, air pollution, and the elevation, everything often seemed closer than it really was; so he picked 650. Checking the dope he needed; he adjusted his aim appropriately. Tucking back in behind the rifle, he sighted in on the campfire again, and followed the ground to the left until the five men and one woman came back into sight.\n\nSteadying his breath he thought about his team, lying dead on the top of a mountain, betrayed by corrupt untrustworthy fucks. They were the kind of people that would sell out an ally for the right price; the kind of people who would threaten to kill the entire family of a seven year old boy if he refused to blow himself up when and where they said.\n\nThey were the kind of people that would rape innocent women for fun.\n\n***\n\nLaurena's jaw hurt. The leader, Broast had punched her when she refused to stop screaming. What did she care if they disliked her screams? But the ache in her jaw was telling her that she may want to consider doing whatever she had to in order to keep them happy. She doubted they would let her go, or even let her live for very long, but they could easily make her last moments far worse than they had to be.\n\nStiffening her resolve, she decided to do whatever they wanted. If they wanted her body she would give it to them. If they wanted her passion, she would fake it better than she ever had before. If they wanted to debase her for their amusement, she would go through with whatever cruel machinations they could imagine, as long as they promised a quick, painless end once they were done. Hoping to get their games over with quickly, and bring her final release from this terrible fate, she stopped her crying and sniffling; forcing her best sultry look onto her bruised face.\n\n\"If you boys are absolutely certain this is what you want to do, how about you untie my hands so we can do it right?\"\n\nBroast and his men shared a look of confusion. This is the last thing he expected. They rarely stole sexual favors from women travelers. They were business men after all, not animals. But this mouthy bitch just didn't know how lucky she was that she had been way-laid by enlightened highwaymen like themselves. They were doing her a favor, teaching her how much trouble her smart mouth could get her in if she wasn't careful around less civilized company. Any woman this beautiful should realize her place, and they were just going to help remind her of that. But now she was acting like a seductress, not a sufficiently cowed maiden.\n\nUncertain what he should do, but knowing that he had to be decisive before his men, Broast decided on a compromise.\n\n\"I'm glad to see you in a more agreeable mood my dear, so I will meet you half-way. I will cut you down from yon post, but the bonds shall remain on your wrists until we are through.\"\n\nKnowing that the sooner they began the sooner it was over; Laurena nodded her head, still struggling to keep the seductive look on her face while trying not to vomit at the thought of the men touching her. As Broast approached her she heard a strange high pitched sound, like a whip swinging through the air, and Broast staggered sideways. No more than two heartbeats later, she heard the strangest thunderclap of her young life.\n\nLooking at her principal captor, she saw his lifeblood begin to leak from two small holes on each of his sides, below his left and right armpits. As she gazed upon him in confusion, he fell to the ground, and she realized he was dying. She couldn't imagine how such small holes could do that, and she couldn't really bring herself to care.\n\n***\n\nDavid wasn't sure what that sick fucker had planned to do with the knife, but he was never going to get the chance now. His shot had come in low, apparently it was more like 700 meters, and so with his next shot he adjusted accordingly. His second target was the head of the fat fucker on the left. He wasn't sure why he picked this guy, but he guessed it had something to do with the fact that this guy looked like he was too ugly to get a decent woman without force. I'm probably just projecting, David thought to himself.",
        "His second round passed through the fat man's throat, not exactly where he was aiming, but at this distance with this equipment it was good enough. His third target was chosen for him, as one of the men below grabbed up the knife from the dirt and started to move toward the woman. David planted his third round in that overachiever's chest. Courageously attack a tied-up, half-naked woman will you, not on my watch, he thought with satisfaction. He got too excited, worried about the woman's safety and punishing the wicked, and missed his fourth shot. Steadying his breathing, he aimed and fired his fifth and sixth shot a single second apart; downing the last two would-be rapists with a single shot a-piece. Looking through his scope another minute, he checked to see if any of his targets were faking. One move, one twitch, and the goat-fucking camel-jockeys were getting an extra round, just because.\n\nAfter a minute David scanned the area around the fire, and apparent camp, for anyone else that might be on guard or running away. He continued scanning the area for another five minutes; but he couldn't see anyone else, and the woman's movements were becoming frantic. Pulling his NODs off the mount on the M14, he clipped them to the Rhino mount on his helmet, and re-adjusted the focus back to where it was before. Then he pulled his M4 out of his rucksack, and left his pack, the M14, and Mk 48 there. If something went wrong with the girl or the camp, he would be able to move and maneuver better with the small M4 carbine, and without all the extra weight. Turning back to the camp he checked one final time with his NODs; and not seeing any movement apart from the woman, he decided to go down and introduce himself.\n\n: Same Day, Different Stuff ***\n\n101915MAR13 DW (according to David's Watch, but who knows what time it really is)\n\nNOT the Korengal Valley, Kunar Province, Afghanistan\n\nLaurena had no explanation for what had just happened. Her five would be rapists had dropped from small holes that appeared in their bodies, each one followed by that strange thunder. After the last one had fallen she had waited for her turn, certain that she would be next. But as the quiet seconds became a minute, and then two, she began to think the thunder was over. That was when she realized she was still half-naked, still tied up, and still in the mountains; with no one left alive nearby to free her. She began a spell to conjure a knife, but she couldn't focus. She was frightened and confused; two emotions that were ruining her concentration. Frustrated, she began tugging at her bonds, pulling them every which way in the hope that they might loosen enough for her to slip free.\n\nTen minutes later, after twisting and tugging at her bonds and wracking her brain for a simpler spell that might free her, she was exhausted. Her wrists were chafed and bleeding, and she was no closer to freedom than when she started. Heartbroken to be so close to freedom, and then to realize it was an illusion, her world crumbled. Allowing the full weight of her body to hang from her painfully bound wrists, her head slumped low and she cried what she assumed would be her final tears in this life. She was going to die here of dehydration, and her crying was only ensuring it happened faster. She had yet to realize that her hysteria was the only real obstacle before her, and if she were able to calm herself, and think rationally, she could probably have gotten free easily. Unfortunately, as is often the case, emotion had trumped logic.\n\n\"Excuse me, miss. Do you speak English?\"\n\nLaurena was surprised by the voice...and didn't recognize the accent...and didn't know what English was. But at that point she truly didn't care.\n\n\"Who is it? Can you get me down?\" she asked hesitantly while looking around for the unknown speaker.\n\n\"Yes ma'am I can. I'm David, and I'll have you down in two shakes.\"\n\nStepping out from the darkness at the edge of the firelight, the figure from her dreams appeared. He was dressed almost exactly as he had been in Eros' vision, except for the strange object he was wearing over one eye. Her god's Champion had found her, in the last place she ever expected to be, and at a time she had given up hope of ever being found.\n\nShe had no idea what he was talking about. Two shakes of what? But as he drew a large, wicked looking knife from his bulky vest she pushed his strange comment from her mind. That knife was now of far greater import to her than his unusual words. He stepped closer to her, standing to the side and reaching over her bound form to sever the ropes securing her to the post. She shivered in the rapidly chilling mountain air, suddenly very aware of her exposed chest. With one slice of his knife she was free of the post, and immediately lowered her arms to cover her breasts. Though she was exceedingly proud of her magnificent body, she was unaccustomed to displaying so much of it outside the temple; and it was getting cold.\n\n\"I need to cut the rest of that rope off your wrists miss, and take a look at the damage it caused,\" he said, motioning to her still bound hands now clenched before her ample bosom.\n\nNodding her head, she held out her restraints to the man, and spoke the first thing that came to mind. \"My name is Laurena, David. If you remove the bindings I can heal the cuts on my own.\"\n\nReaching out with his knife, he gave her a part confused and part dubious look as he carefully cut off the last of the ropes. \"It is nice to meet you Laurena, but you really should let me take a look at those. The cuts could get infected; god only knows where those ropes have been.\"\n\nAs soon as her wrists were free Laurena reached for her robes, attempting to use the tattered remains of her top to return it to some form of modesty. Sliding two longer strips over her shoulders, she tied them behind her neck, creating a modified halter to cover her breasts from direct view. Not the best fix, but enough until she could get a change of clothes.\n\n\"Your concern is appreciated Champion, but even I can heal injuries this minor\", she responded to his concern.\n\nFocusing her will, which was easier now that she was no longer bound and distraught, she chanted a short spell of healing. The spell worked, and sent her magic into her wrists to repair as much of the damage as she was able. The cut and chafed skin knit back together, but her wrists still retained what appeared to be three day old bruising, and were very sore. Sighing, she again wished she were a better healer. It seemed that in blessing her with such great beauty, Eros had also cursed her with terribly minimal healing magic. She suspected it was to preserve the balance.\n\nLooking up she noticed the deeply surprised look on David's face. \"What is wrong Champion?\" she asked confused and somewhat embarrassed by his response to her healing magic. She knew she wasn't nearly as good as a fully qualified priestess, but her magic was certainly not bad enough to warrant that level of shock from the Champion.\n\nClosing his gaping mouth, mostly because he didn't realize it was open and thus making it hard to vocalize a response to his rescuee; he tried to think of how to calmly respond to that question.\n\n\"You started singing, then your wrists started glowing, and they just healed themselves?!\" Ok, that came out a little less calm, and a little more hysterical than he would have liked. But, in his defense, this chick just chanted some mumbo-jumbo and healed herself. Perhaps a little hysteria was warranted.\n\n\"Yes, I cast healing magic on myself. I am only an acolyte, and my poor skill in the healing arts is what keeps me from priestesshood. But while I am not able to fully heal the damage today, I can heal the rest over the next few days,\" she replied, uncertain of his meaning with the question.\n\nDavid thought for a moment about that statement. Ok, she's obviously crazy. This isn't Vegas and I don't see a white tiger anywhere around so that sure as shit wasn't magic. Whatever, I've taken too much damage to the head today, and trying to figure this out is just making my migraine worse. Deciding to shelve the whole situation until he wasn't standing around the bodies of slain enemies, he started listing priorities to himself. Priority number one was \"the mission\". He had no idea where he was or how to get back to friendly lines, status: FUBAR. Priority number two was security. He was currently standing in someone else's armed camp with no idea if they had friends coming back soon. Status: not secure, aka also FUBAR. Priority number three was water and food. He had both back at his rucksack. Status: manageable. Priority number four was currently standing in front of him, in a weird looking, mostly torn dress. Status: loony tunes, emotionally traumatized, and smoking hot.\n\nThere was nothing he could do about number one, but number two and three needed to be dealt with pronto. Four could tag along if she kept her crazy to a minimum. Besides, she spoke English so odds are someone somewhere up the chain of command would be pissed if he didn't rescue her...even if she has to go right back to the asylum afterwards.\n\nLooking around the camp he tried to see if there were any booby traps, or anything useful. He hadn't seen any tripwires, flares, or explosives on the way in; but there could still be some hidden in other areas of the camp. Moving about cautiously, he noticed a few things that didn't make sense. One, there were no guns. He knew there were plenty of places in the world where firearms were scarce, but he figured criminals like these guys would have at least an AK, a hunting rifle, or a handgun of some type lying around. Two, there were knives, swords, and a battle axe lying next to the fire in sheaths and scabbards. Seriously, swords and a friggin battle axe? What the hell kind of Medieval Times, LARPing bullshit am I in the middle of? David thought to himself. Three, the guys he took down were wearing a mish-mash of Renaissance re-enactor clothing and Roman looking leather armor.\n\nThis whole situation just didn't make any sense. He was somewhere in the southern-hemisphere of the globe, but still close to the Eastern Afghanistan time zone. With the exception of some small islands east of Madagascar, which were way too small for mountains like these, there was nothing there but the Indian Ocean. He was pretty sure he wasn't swimming right now. Completely lost, growing more and more frustrated, and surrounded by dead guys dressed like the Frankenstein brainchild of Game of Thrones and Spartacus, he decided to cease that line of thinking until he had more information. He'd take the girl with him, go back and grab his gear, and hole up in a defensible location until he could get some answers.\n\nTurning back he nearly tripped over her; she had been following closely behind him, and seemed to have been caught staring at the pistol strapped to his thigh.\n\n\"Did they take anything of yours that you absolutely need? We should get away from here before anyone comes to check on them,\" David explained to Laurena. \"My rifle shots were probably heard for quite a distance, and we should assume they have friends in the area.\"\n\nLooking around, she pointed towards a horse tied up nearby. \"They took my horse, and my supplies.\"\n\nNodding, he led the way to the horse, moving slowly and checking for traps along the way. Finding none he allowed Laurena to collect her mount. She moved around it and inspected the saddle and bags, finding everything in proper order. Untying the reins she looked to David for guidance.\n\n\"What now?\"\n\n\"Now we walk back the way I came in and gather my gear, then we find somewhere safe to spend the night,\" he explained. \"And hopefully you can tell me where I am, and how to get back to my base.\"\n\nNot waiting for a response, he turned and began walking toward the barren path he took into the camp. It was narrow, and wound its way across the rocky terrain. The path was mildly challenging for David, difficult for Laurena, and dangerous for the horse she was leading. Unfortunately, there was only one other visible way out of the camp, and it was pretty obviously the only safe way in and out from the site. He would rather risk twisting an ankle on this goat trail than getting ambushed using the other obvious route. Looking back to check her progress, he noticed that Laurena had fallen far behind him, and was sliding her feet forward cautiously in the dark. While they had been busy the sky had fully darkened, and night had arrived.\n\nOf course she fell behind; she doesn't even have a flashlight, he thought to himself.\n\nReaching into the right cargo pocket of his trousers, he pulled out his headlamp. Equipped with a single powerful white LED light, and three lower intensity red LEDs, it was the best he could come up with under the circumstances. He didn't really want anyone in the area to see the light, but if she or the horse fell the situation would get a lot worse in a hurry. Walking back towards her, he took her hand and placed the light in it saying, \"Use this, but only the red light.\"\n\nConfused Laurena tried to figure out what he had handed to her. The moons had yet to rise, and the stars provided some, but not enough illumination. She was barely able to follow the sound of David's movements carried to her in the still night, and she could not make out more that the most general of shapes in the darkness. She had no idea how he could see, but she assumed it was either part of his powers as a Champion, or the soft green glow she could now see coming from the object in front of his eye.\n\n\"What is it?\" she asked.\n\n\"It's a flashlight that you wear on your head. Put it on, and click the button once to turn it on.\"\n\nAfter fumbling with it a few moments she grew frustrated, \"I have no idea what this is or what I'm doing. Is it really necessary?\"\n\nShaking his head, David rolled his eyes to the heavens in supplication for divine mercy from idiots and the technologically disinclined. Stepping close to her, he reached up and flipped his NODs up higher on his helmet and away from his face. Then he reached for the Surefire light mounted on the side of his helmet, over his left ear, and flicked the switch down. The dim glow of its red LEDs illuminated Laurena's hands. She jumped, and stared at the light on his helmet in disbelief, but he was too focused on the headlamp in her hands to notice her actions. Reaching forward, he took the tightly wrapped headlamp, and loosened the elastic band. Tilting it so that it was in the middle of the red beam of light cast by his Surefire, he pointed out the important parts of the light he had given her.\n\n\"On the top here is a button, see,\" he said, pointing to the top of the headlamp. \"All you do is press it, and it turns on. Click it once for the lowest red light setting, twice for the brighter setting, and the third time turns it off. If you hold the button down for two seconds, it will switch from red to white light, but don't do that unless I tell you. The red light is only visible for about half a click at night, but that white light can be seen for miles. I'd rather not advertise our location right now.\" Turning the headlamp he pointed out the other main feature, \"This is the retention strap. This buckle allows you to adjust how tight it is on your head. I suggest making it pretty tight. It keeps the light steady and reduces the risk of you losing it.\" Finishing the show-and-tell he looked up to see if she was following what he said, and saw a look of total confusion and awe on her face.\n\nGiving up, he eyeballed her head, guessing at the adjustment. He tightened the elastic band on the light nearly a hand's width and placed it on her, centering the light on her forehead. Once it was secure, he clicked the power button once to turn it on. \"You're set. Now don't mess with it and try to keep up.\"\n\nShe was so surprised at the power of these strange devices, she barely noticed his movements. But as he finished with the \"headlamp\" she realized how close he was standing. Her minded flashed back to being bound and helpless less than an hour ago, and a paralyzing panic and fear jolted through her. However, David saw none of this, nor did he see her take a sudden step away from him. He was already focused back on the trail ahead.\n\nFlicking off his Surefire helmet light, he folded his NODs back down, and turned them back on. Walking forward again he turned back to check on her more frequently now, but the girl was doing a much better job keeping up.\n\nThey walked carefully along the path for a few hundred meters. Eventually David stopped them, turning to give Laurena instructions.\n\n\"Wait here. My gear is just up the slope another 75 meters. I'm going to grab it and come back here, and then we are going to a shallow draw I spotted earlier. It's not much, but it should do for the night.\"\n\nReaching up to her forehead, he clicked the headlamp off. \"Leave that off unless you absolutely need it. My GPS uses the same batteries, but I don't have an infinite supply.\"\n\nSeeing her nod in confirmation, he moved off to where his gear was stowed. It was slow going; the slope was steep, and had been quite a bit easier to jog down than climb back up, but he eventually managed. Sweating from the exertion, his soaked combat shirt began to rapidly chill in the cool night air. I need to get moving to that draw and get settled in before I freeze my ass off here. Thinking of the girl he had left below, he realized she was probably far colder than he was by now. It wasn't like that shredded garment she still wore covered much. At this thought he opened the zippered bottom of his rucksack, and pulled out his fleece jacket. It should help her till they got settled. Closing his pack back up, he strapped his M4 and M14 back onto it, and tossed it on his shoulders. Then he picked up and slung the Mk 48, stuffing the fleece jacket between his body and the sling. Turning to face back down slope, he carefully returned along his previous route.\n\nWhile he was away Laurena thought about her fears, and her reaction to his touch. He had saved her. He was the new Champion of Eros, chosen of her god. She was certain he would not harm her. He wasn't like those others. So why couldn't she stand to be near him?\n\nBy the time he got back to her, she was shivering from the cold. Pulling the fleece from where he had stowed it, he unzipped the front and tried to drape it over her shoulders.\n\n\"You can wear this for now; it should help with the chill.\"\n\nBefore he could get it on her though, she stepped quickly away from him, shuddering fearfully at his attempt to get close to her. Not seeming offended, David raised his hands placatingly.\n\n\"It's okay. Here, I'm sure you can put in on yourself,\" he said, holding the fleece out to her.\n\nNodding her head in thanks, she took it from him and inspected the garment. She wondered what kind of animal fur it was made from. She noticed it had sleeves, and slid the strange coat on happily. The ends of the sleeves had an unusual type of material that stretched, like the light on her head, but it wasn't uncomfortable. As she puzzled over the unfamiliar coat, he slowly reached toward her waist.\n\n\"I'm just going to zip the jacket closed. It will keep you warmer.\"\n\nShe took a breath and clamped down on her fear, allowing him to reach down and grasp the separated front of the garment. Holding the two sides together he grasped something and pulled it up, joining the two sides together with what appeared to be small teeth. Surprised at this, she failed to notice how close his hand was to her breasts until after he had stepped away from her.\n\n\"Just a short walk now and then we should be in a safe place to rest for the night.\"\n\n",
        "*** Chapter 7: Savior? Right. Where do you get your meds, and what's their refund policy? ***\n\n102235MAR13 DW\n\nMountains, Somewhere in the Southern Hemisphere, Maybe?\n\nAfter nearly half an hour walking along the narrow goat trail, they arrived at a shallow draw in the mountainside. David motioned for her to wait while he walked up the draw a short way, looking for level ground and a safe way to get the horse to it. In a stroke of great fortune, he found a small cave hidden in the draw, with a narrow path leading up to it that would be difficult for the horse, but not impossible.\n\nReturning to her he pointed out the path, and helped her guide the horse along it. It seemed to take forever to convince the poor horse to walk the short distance. Finally arriving at the cave, he powered off his NODs, flipping them up and out of his way. Next he switched on his Surefire white LED helmet light. He knew it would be visible for some distance, but the mouth of the cave opened to the opposite wall of the draw. As long as he didn't use it outside the cave they would remain hidden.\n\nIt was a shallow cave, no more than twenty feet deep, ten feet wide, and sloping from eight feet tall in the front to barely four feet near the back. But it was enough for the night. Dropping his rucksack next to the wall, he pulled out an MRE and the two bottles of water. He also grabbed his wet-weather jacket, woobie, and sleep system. Removing his helmet and setting it on top of his ruck so that the light would still illuminate his workspace, he set the Mk 48 aside and removed his IOTV, placing it next to his ruck and groaning with relief to be free of its weight. Without its added layer of protection, the moisture in his combat shirt reacted to the chill air, causing him to begin shivering rapidly. He quickly donned his wet-weather top. It was barely more than a waterproof windbreaker, but its plasticized material trapped his body heat easily. If he started to get too cold he could always throw his IOTV back on.\n\nNow that his immediate needs had been addressed, he put his helmet back on and turned to help Laurena with her horse. She had already begun to remove the saddle bags, and was carefully unbuckling the saddle. He moved over to help her. The saddle was lighter than he expected, but given her size he figured it had to be for her to be able to put it on and take it off every day. Helping her tend the horse was relaxing; he had not been able to work with horses since his mother sold the farm a few years ago.\n\n\"What's his name?\" David asked Laurena as he helped her feed and brush the horse.\n\n\"His name is Meadowgrass. He's been a good horse, for the most part, these last weeks. I hope the temple will let me keep him when my travels are finished,\" Laurena explained.\n\nFiguring now was as good a time as any to figure out where he was, David began to question her.\n\n\"Where are we right now?\"\n\n\"We are near the Snow Gap Pass. It cuts through the southern Abatinus Mountains.\"\n\n\"I'm sorry, but I'm not familiar with that name,\" David stated. He figured he needed to start broader and then work down, \"What country is this?\"\n\n\"This is Erosius. The Abatinus Mountains bisect the land. To the east is the coastal city of Sanctuary Port; the capital of our lands. To the north east is the forest kingdom of Hiefesgaden, and to the far east is the Sterilis Desert. To the west lies the nearest town, Wolfsvale. It's a crossroads town at the edge of the Dracian Forest. The Dracian Forest is to the northwest, and to the south west is the road to the city of Lexia on the southern coast. To the far west is the port city of Calavius. It was where I was heading before I met you,\" she explained to him as they worked.\n\nHe had no idea what she was talking about. He had never heard of any of these places she was describing, and as he focused on her speech, he noticed she had a very peculiar accent. It wasn't quite Italian or Greek, but had similarities to both. Her accent was sexy as hell, and her sweet voice made it even more so. Adding to the power of her seductive voice she had a body and face that could stop traffic, and he hadn't seen a woman in six months. He was struggling hard to remain a gentleman.\n\nDeciding to try a different approach, he started with common ground. \"You speak English fluently, and without a British accent. Did you study in America?\"\n\nLooking at him questioningly she responded, \"I have never heard of English, British, or America. You and I are speaking Aeolian.\"\n\nBoth of them now thoroughly confused, David focused on Meadowgrass until he could decide on a new line of inquiry. Once her horse was tended to, and covered with a blanket for the night, he offered Laurena the MRE that he had removed from his rucksack.\n\n\"What is it?\" she asked hesitantly.\n\n\"It's called an MRE, which stands for Meal Ready to Eat. They don't taste great, but just one has enough calories and essential nutrients to get a soldier through a tough day.\"\n\nUnimpressed by its appearance, and less impressed by his description, she tried to think of a polite way to refuse.\n\n\"What will you eat?\"\n\n\"I'm used to skipping meals, I'll be fine,\" he lied. He was hungry as hell, but he doubted she had any food with her that she could eat uncooked. There was no way he was letting her start a fire.\n\n\"I have plenty of food in my bags. Please allow me to share it with you, in gratitude for saving me from...them.\" She hoped he would accept her offer; the 'M-R-E' looked dreadful. She had no idea what it was made from, but it gave off no smell. It couldn't possibly taste that good if he was willing to give it away and go hungry, rather than eat it.\n\nShaking his head sadly he replied, \"I'm very sorry, but without knowing who is out there I can't let you build a fire to cook with. This doesn't need a fire.\"\n\nRealizing his intent, she smiled at him. \"Most of my food doesn't require a fire. I have never been a very good cook, so my travel foods always require very little preparation. Please, share what I have. You can save your 'MRE' for the morning.\"\n\nRealizing he didn't have the energy to fight this battle, he agreed. He hoped what she had would taste good. 'Southwest Beef and Black Beans' may have been his favorite MRE, but it was still an MRE.\n\nLaurena crouched over her bags, and pulled out her waterskin, bowl, and a mixed bag of dried meat and vegetables. Pouring a measure of the mixture into the bowl she added water until it was half full, then focused her will on it. Chanting softly she pushed her magic into it, warming the water quickly and soaking the meat and vegetable mixture. It was not a very complex spell, but it taxed the limit of her control. She had spent little time during her magical studies practicing thermal change. Once the spell was complete, she reached into her bag for a spoon, handing it and the now steaming bowl of soup to David. As she pulled a second bowl from her bag to prepare her own meal, she checked to see if he liked his.\n\nDavid was amazed. She had been crouched with her body blocking his view of her bag, so he didn't she what she did; but in less than two minutes she had handed him a steaming bowl of amazing smelling soup. He had to find out what she used to heat the water. The chemical heaters in MREs took forever, and the small Sterno camp stoves he had while camping in the States would have taken at least five minutes to heat up this much water. Blowing carefully on the bowl, he gingerly ate his first spoonful of soup. It was wonderful! He was really glad she had talked him out of the MRE.\n\n\"Laurena this is great, thank you.\"\n\nSmiling at his words, and the expression of enjoyment on his face, Laurena was pleased that he had agreed to her meal. If he was that easily impressed with such simple fare, that 'MRE' must be truly ghastly. Finishing the preparations of her own meal, she exerted more of her will to heat her soup's temperature to where she liked it. Sitting down to eat on a rock that was a comfortable distance from David, she wondered how to discuss her assignment with him.\n\nDid he know that she was now his guide? Did he already know what was at the Field of Woe, and just didn't know where it was? He seemed rather determined to understand where they were right now, but he didn't seem to know anything of the places she had described. His confusion, strange accent, odd manner of dress, and unique devices suggested he was from somewhere far away. She knew little of other lands, but she had heard many stories from ship's captains that attended services in the Great Temple. They spoke of far off lands to the west, where people with darker skin lived. She had hoped it was possible to meet some of these unusual people during her visit to Calavius.\n\nUncertain if it was polite to ask, but deciding she had to start somewhere she turned to him and inquired, \"What is it like to be a Champion?\"\n\nNot expecting the question in the silence that had fallen over them during the meal, David was surprised, and took a breath to answer her at the wrong moment; breathing in part of his soup as well. After a few moments trying and failing to cough the broth from his lungs and stop his eyes from tearing up further, he finally mastered himself enough to answer her in a hoarse voice \"What?\"\n\nSeeing his obvious surprise at her question, and assuming the worst from his response, she began to worriedly beg his forgiveness.\n\n\"I am sorry for offending you with my impertinence Champion, but no one has met a chosen of Eros since the last one perished a generation ago. Please forgive me, I was unsure what to say to one such as you, and I was curious.\"\n\nWaving away her concern, he was finally able to gather enough breath to speak, \"It's fine. It's fine. Nothing wrong with the question, I just had some of your delicious soup go down the wrong way.\"\n\nAs she sighed in relief at his comment, she noticed he had complimented her soup a second time. The soup really wasn't that good. It was quite standard fare. A dawning realization struck her. It was only after he had seen her mostly naked form that he offered to help her; offering to take her with him, and giving her the light and the jacket. Thinking on her circumstances further, she came to understand that he had helped with Meadowgrass as an excuse to be close to her; and he was paying her false compliments about her cooking to keep her happy. Like so many others he was enthralled with her beauty. Smiling at this insight, she realized this was an excellent turn of events.\n\nWhy wouldn't he be drawn to her? After all Eros had blessed her with greater beauty than any other. It must have been why she was chosen by her god, so that she could better guide his Champion. After all, every man she had ever known had done whatever she asked just to receive Eros' Blessing from her. Why should Eros' Champion be any different? And in return for her diligence and guidance she would finally be recognized for her worth by the rest of the clergy. So what if her healing magic was a little weaker than others. Her performance during worship was twice as popular as anyone else. No man in all of Sanctuary Port would refuse Eros' Blessing if she gave it. This could be her path to priestesshood, and all she had to do was what she excelled at.\n\nShe began to plan her seduction of the man. In her current state she was certainly at a disadvantage. Her once immaculate robes were a soiled tattered mess, her hair was a dirty rat's nest of tangles, and she feared her pristine face was marred by the beginnings of a bruise. Self conscious, she turned from David to hide her imperfections until she could fix them.\n\n\"I wish to cleanse myself and change into more suitable clothing; can you give me some privacy Champion?\"\n\nConfused by the title she was using for him (Champion? Of what?), but wishing for her to be comfortable after her traumatic ordeal he readily agreed.\n\n\"Certainly. As long as you stay in the cave you can use the white light on your headlamp; it won't show outside. Let me turn it on for you and I will wait outside as long as you need,\" David told her soothingly.\n\nMoving towards her, he reached forward as she turned to him, and changed the light she wore from red to white. It was much brighter, illuminating the whole of the cave to her eyes. Next he took up his bowl, and walked to the cave entrance. Before exiting he reached upward and switched the light on his helmet back to red. Waiting for him to walk around the side of the cave mouth, away from direct view of her, she moved to her bags and pulled her second best set of robes out. If her magic were more accomplished, she could simply repair the robes she wore. However, her ability to conjure, craft, and repair items was very limited. The mirror she quickly summoned with a chant was by far the most elaborate conjuration she could manage, and she had worked for many winters to master it.\n\nLooking in the large mirror, she was less than impressed with her reflection. The light on her head was glaring, and made it difficult to see anything of her face and hair. The strange coat he had given her was bulky and unflattering on her figure. What she could see of her robes beneath them were torn, and disgustingly soiled. Removing the light from her head, she focused her will. Concentrating her magic she sent it into the edges of the mirror, infusing it with a soft glow. Much better, she thought while returning to the inspection of her form.\n\nFinally able to see the condition of her face and hair, she became further distressed. Her hair was worse than she feared, infused with dirt, tangles, and even a few twigs. It was disgusting. And her jaw sported a massive red mark; what was certain to be an ugly bruise forming already. Realizing the enormity of the work before her, she quickly stripped out of the coat and her tattered robes. She chanted her spell of cleansing while concentrating her magic on the task. The copious dirt and minimal sweat on her body disappeared while her hair untangled and shed the unwelcome dirt and twigs. Drawing on her spare robes she continued chanting, focusing her magic to remove any dust and wrinkles they had accumulated while stored for travel. Lastly she focused her attentions to her face.\n\nThe bruise was unacceptable, marring the perfection of her beauty. She was truly weary now, having used more of her magic today that she was comfortable with. But even her poor healing skills and rapidly depleting magic would fix this. She refused to allow this mark to remain. If she had to use every bit of her magic, and more, she would not allow her beauty to be marred in such a fashion. Staring intently at her reddened jaw, she focused the entirety of her will upon grasping every last remaining scrap of her magic; pushing all of it into her injured jaw while steadily chanting a spell of restoration over and over again. The bruise quickly darkened, and seemed to go through an accelerated recovery, changing color from red, to purple, to a splotchy yellow/green. The longer she focused the slower the changes occurred. Her magic was nearly depleted, and the bruised skin still had an ugly yellow tint. Steeling her determination and clamping down on her magic with her will; she forced what magic remained to work harder. She was not going to walk around with a yellowed bruise on her face. Finally, as the last vestiges of her magic waned, the discoloration disappeared from her face.\n\nMore exhausted than she had ever felt before, Laurena smiled proudly at her restored beauty. This was sufficient for now. Folding the torn and soiled mess of her old robes, she carefully stowed them at the bottom of her bags while pulling out her warm traveling cloak and drawing it on. She left the hood down and the front open, adjusting it to keep her warm but still display her flawless beauty and impressive cleavage.\n\nFeeling much better about her appearance, she banished the mirror and moved her saddle and bags to a spot closer to David's gear. She was desperately tired, but she needed to begin her seduction of the Champion at once. She could lay the groundwork tonight, and continue to tease and arouse him during the day and half it would take to get to Wolfsvale. By the time I'm done with him, she thought to herself with a smile, he'll pop the moment the first Blessing begins.\n\n: Discoveries ***\n\n102313MAR13 DW\n\nMountains, Somewhere\n\nStaring up at the moon, David was dumbstruck. More specifically, it was the second moon that had rendered his mind blank.\n\nWhen he had walked from the cave to give Laurena privacy, he had decided to seek out a few of the constellations that he could remember. He was terrible at celestial navigation, knowing of only a few easily identifiable constellations in the night sky. If it wasn't the Big Dipper, Little Dipper, or Orion he couldn't help you. But he had a Drill Sergeant in Basic show him how to find all three one night he was on guard duty. If he could find the Big Dipper (by far the easiest for him) then he could follow it to the Little Dipper and the North Star. That was usually enough for him to orient at night.\n\nHowever, when he started searching the night sky for them he noticed something far more significant. The moon that had begun to rise earlier now had a friend. Looking back and forth between the two moons, he compared them to the single moon he had known his whole life. Higher on the horizon, the white moon was bright and full, similar but slightly larger in the sky than the moon he was used to. But the second, blue-colored, moon hanging low in the eastern sky was very different. It seemed to have an atmosphere of some sort from the wispy clouds floating across its surface. He thought it resembled pictures of Earth taken during manned space missions. Except he couldn't see any land masses on its surface.\n\nHoly shit Toto. Fuck Kansas, I'm not on Earth anymore!\n\nHe didn't know what to think. He reviewed everything he had learned after waking up; the unexpected terrain, the movement of the sun, his compass, and his GPS. No wonder he couldn't get a signal from any satellites. There were no satellites. He also thought back to the men he had killed, the girl he had saved, and the conversation they had about the region. None of those places sounded familiar because none of those places were on his planet.\n\nNot sure what to do with this realization and his head still pounding from the explosion and rifle wound, he began to question what to do next. Getting back to US Forces was out. There were no US Forces. There was no United States. What the hell would he do? Try to get back to Earth? He didn't even know how he got here. Maybe the girl would have some answers, or possibly know of someone who would have the answers.\n\nDeciding to sit her down and get some kind of damn explanation from her, he walked determinedly back to the cave entrance. Striding around the corner he saw her horse standing patiently next to the cave wall, eating from its feed bag. Further in he saw her and stopped. She was standing in front of a large mirror that he hadn't seen there when he left. The edges of it were glowing, and it was floating in mid-air. She had changed clothes, and was now wearing a dress that looked similar to a toga, with sleeves and a low-cut front. She had cleaned and brushed out her hair, and was now inspecting the bruise that was on her jaw. David had seen it earlier, but had nothing with him to treat it. Her bruise began to discolor as he watched, changing shades as though undergoing a week of healing in moments.\n\nHealing magic. Earlier she said she cast healing magic on her wrists. This world has actual magic?\n\nAs this alarming thought continued to bounce through David's beleaguered brain, he watched her bruise finish healing. Then she packed the remains of her old dress into one of her bags, pulling out and putting on what he could only describe as a cloak. Checking her reflection in the mirror again, she chanted something softly and it disappeared. The mirror just frikkin' disappeared."
    ],
    "authorname": "ScreamingEagle101",
    "tags": [
        "army",
        "battle",
        "dragons",
        "groupsex",
        "humor",
        "magic",
        "romance",
        "soldier",
        "sorcery",
        "threesome"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/champions-vol-01"
}