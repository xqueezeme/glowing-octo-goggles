{
    "title": "A Wife Well Spanked Ch. 02",
    "pages": [
        "Liam:\n\nI groaned as I sank into hot, gently roiling water, as it rose up to cover my chest and shoulders. It was almost too hot to take. It was heaven.\n\nAbby made a similar noise of indulgent pleasure as she slid into the jacuzzi too and took the place next to me. Two women smiled at us from the seats opposite, but there was plenty of room, enough space that I could relax and let my legs float in the water without bothering either of them.\n\nAfter showering in our room, after that insane fucking, we'd dressed in our swim wear and the white, fluffy gowns we'd found hanging in the bathroom. Neither of us had said anything about the sex. We'd carried on as if everything was normal, as if this place was nothing more than a typical country spa hotel.\n\nWe swam in the pool, but more to luxuriate in the water than for the exercise. Then we'd explored the warren of corridors and rooms that led away from the pool, beneath the hotel. The lighting was low, there were no windows, judging from the position of the hill and the buildings on it, we were underground now. We found three saunas, two steam rooms, something called an infrared room, and five rooms that housed large jacuzzies.\n\nThe two women smiled their goodbyes then climbed out of the water to leave Abby and I alone in the jacuzzi.\n\n\"God, I could live in this water,\" Abby said as the door closed behind the women. \"I could sit in here for hours. I just need my book and a glass of wine, and it'd be perfect.\"\n\n\"I'm with you. I can't remember the last time I sat in a jacuzzi. I can't remember when I last felt this relaxed.\"\n\nWe floated in the water in comfortable silence for a time.\n\n\"I need to check out the spa too,\" Abby said. \"If everything's free, we may as well make sure we get our money's worth. I could die for a massage.\"\n\nWe talked easily, and it was true, I couldn't remember when I was this peaceful and tranquil last. But there was an elephant sitting in the room with us. The spanking we'd witnessed and our reactions to it. I was dying to talk about it, to find out what Abby thought, but I couldn't think how to bring it up or what to say. I still hadn't gotten my own thoughts straight in my head either.\n\nPart of me was shocked by it, appalled at the brutal way that guy, Giles, had treated Jemima. How he'd hurt her, humiliated her in front of everyone. But another part of me couldn't deny that it had turned me on. I felt guilt at that. I'd tried to deny it at first, but I couldn't stop thinking about it. I couldn't escape it. It was like when I watched porn. I knew I shouldn't, that it was wrong, but still, it was compelling. It had an effect on me.\n\nI faced it now as I floated in the hot water. I tried to understand why the spanking had gotten me so turned on. Was it just that she had been beautiful, or was it the domination of her, at Giles having her at his complete and total mercy? Was it seeing her in that state, so emotional, so overwrought, so turned on? I couldn't decide. I was surprised that Abby hadn't reacted with more outrage too. That she hadn't protested at Giles's awful behaviour. That she hadn't found the whole thing scandalous, offensive, deeply sexist. That Abby had wanted to stay at the hotel still.\n\nThat elephant sat in the room with us as we did our best to avoid it, as we talked about everything but that public spanking we'd witnessed. At what we'd done afterwards. At the best sex we'd had in years. But maybe we wouldn't have to deal with it I thought. Most likely it wouldn't happen again. As Abby said, we could just avoid opening those doors. We could stay away from the sex stuff, on the spanking, we could just focus on the fantastic food and the facilities. We didn't need to think about spanking again. It could slip from our memories without us needing to speak about it. It could just be a temporary blip of inconsequential weirdness in our lives.\n\nAbby:\n\nWe dragged ourselves between saunas, steam rooms, and jacuzzies all Friday afternoon. I picked up a leaflet from the spa that gave more detail than the one in our room about the various treatments on offer. I pondered over which ones I'd opt for first as we headed back to our room in our gowns.\n\nWe took our time as we got ready. We showered to get the chlorine off our skin and out of our hair, we dressed in the best clothes we'd brought with us. Liam in a white cotton shirt and a black suit that complimented his skin and hair. I put on heels and a black dress. I wore my best underwear beneath it. I did my hair and face, then we headed to the restaurant for dinner. The same waitress from that afternoon sat us at the same table we'd eaten lunch at.\n\nThere was a weird atmosphere between Liam and me as we ate. Everything was perfectly convivial, enjoyable, the food was incredible. Liam looked fantastic in his suit. I felt glamorous, we fitted in with the refined, attractive crowd around us. But our conversation was strained. We were both distracted, we weren't listening to each other properly. We both knew why, I was sure, but neither of us said it.\n\nI couldn't get what I'd seen out of my head. I was obsessing about it. And I didn't understand why. I found, much to my shame, that I was hoping it would happen again. Not with the previous couple, but another one. I wanted to see someone else get spanked. I wanted to see one of these handsome, authoritative men drag a gorgeous woman across his lap and slap her silly. I wanted him to humiliate her, to make her lose control. It shocked me that I wanted it so badly. I tried to focus on Liam, on what he was saying, but I kept one eye on the tables around us, hoping something would happen. I wondered if Liam was feeling the same.\n\nMuch to my disappointment, nothing happened. We enjoyed a perfectly normal evening meal in our five-star surroundings. I wasn't ready to go back to our room when we'd finished eating though. There was still hope.\n\n\"You fancy a drink?\" I asked Liam.\n\n\"Yeah. The night's still young.\"\n\n\"There's a bar above the spa,\" I said. \"I saw it earlier. Let's check it out.\"\n\n\"Sounds good.\"\n\nWe walked through a tunnel walkway that connected two buildings. The sky was black through the full-length windows on either side of us, but floodlights dotted around the hotel's grounds illuminated clumps of trees in the forest beneath and around us.\n\nLiam whistled low as we stepped out of the walkway and into the bar. \"Not bad.\"\n\nThat was putting it mildly. The place looked like a swanky cocktail lounge; a masterpiece of high-class sleaze, with low lights, worn leather, and plenty of neon and chrome and polished wood. A long bar took up the length of the far wall, the floor held tables and chairs, whilst small booths sat around the three other walls. There was already a crowd of people in the place, small groups of men and women stood or sat as they drank together. It looked like the couples knew each other. The atmosphere felt like members of a club relaxing. There was an air of anticipation in the room too, I was sure it wasn't just me.\n\nA pretty woman dressed in a man's white shirt and black waistcoat handed us a menu as we took our place at the bar. It held a long list of drinks, but unlike the menus you usually found in cocktail bars, there weren't any prices. Everything was free, or as free as the price of the room.\n\n\"What do you fancy?\" Liam asked.\n\n\"I'm going to keep it simple. A Dirty Whore's Bath Water for me.\"\n\n\"And to drink?\"\n\n\"Ha bloody ha. What are you having?\"\n\n\"I'm going to live dangerously,\" Liam said. \"I think I'll try a Sex on My Face.\"\n\n\"That can be arranged.\"\n\nWe leaned against the bar and each other as we watched the young woman as she prepared our drinks. I've always loved seeing a good cocktail mixer at work. I adore the ritual of it, the various implements employed, the quick, expert movements of the person making it. Usually it was a guy, it was a pleasing change to watch this glamorous woman at work.\n\n\"That booth's free over there,\" Liam nodded at the far corner as we stepped away from the bar with our drinks in our hands. He knew me well. It was in the far corner with a prime view of the room. A perfect position for people watching.\n\nI wondered again if Liam was feeling the same way as me as we walked across the bar together. Unsettled by what we'd seen but turned on by it too. Fixated on it. Disturbed by how much he wanted to see it again. I hoped so.\n\nWe sat side-by-side with our backs to the wall so we could both look out across the bar. We whispered as we drank, as we scrutinised the other guests. We subtly pointed out people of interest, we guessed who they were, we made up names and stories about them. We drank more cocktails, we drank until we were giddy and lightheaded, until our shared stories grew increasingly silly. Until I felt brave or foolish enough to broach the topic that had been torturing me all afternoon and evening.\n\n\"Liam. What happened before, at lunch today...\"\n\nLiam nodded to show he knew exactly what I was talking about and to urge me on.\n\n\"What do you think about it?\" I couldn't think of how else to put it. My voice came out tight, like I was trying to sound casual but had failed.\n\n\"Fucking insane,\" Liam said. He thought for a moment. \"Pretty shocking. But, like you said, I guess they were both into it, as hard as that is to understand. It was so weird to see it happen in front of us though. Just right there. In the afternoon. In plain daylight. It was...\"\n\n\"Intense,\" I finished for him.\n\nLiam nodded. \"Yep. I can't...\"\n\n\"Get it out of your head?\" I interrupted again.\n\n\"Yeah.\"\n\n\"Me neither.\"\n\n\"You weren't, I don't know, offended by it?\" Liam asked. \"By the way he treated her?\"\n\n\"No. She wanted it. It was consensual. It wasn't abuse. You could tell. It looked like they'd done that before as well, plenty of times. I don't know. I guess it was, you know... pretty hot,\" I said quietly.\n\nA look of surprise came over Liam's face, but he nodded too. \"Yeah. It was.\"\n\nI took a deep breath. \"Listen, Liam. After seeing that, I've been thinking. Non-stop really.\" I took another breath. \"I think I want to...\"\n\nA yell cut me off. The words died in my mouth. Liam snapped his head up, breaking eye contact with me. I looked over too.\n\nI saw a couple were standing at the bar. He was dressed in a suit, like Liam, although he was taller. His head was shaved close, he was broad across the chest, exceptionally handsome. He looked half like a boxer, half like a male model. She was short, her head barely reached the level of her man's shoulders. She had long blonde hair, her tight midnight blue evening dress showed off her curves, her full chest, her round behind. A look of fury twisted the features of her striking face. She was staring back and forth between her man and the pretty woman behind the bar who'd served us.\n\nI strained to listen to what the blonde woman was saying. It helped that she yelled her next words. \"She was flirting with you Dan. I saw it. She touched your hand!\"\n\nThe room around us fell silent. The hubbub of talk lowered to a murmur, then fell away entirely as the woman's voice rose higher.\n\n\"Don't fucking defend her Dan. I saw you too. You were encouraging her, you bastard.\" Her voice was rich with privilege and the confidence that comes with wealth, but there was plenty of outrage in it too.\n\n\"Imogen. Stop. Now,\" the man said in a firm voice. \"You're being hysterical. This woman was just serving us politely. Nothing more.\"\n\nI winced at that word. Nothing made my blood boil quite like a pompous man telling me I was being hysterical. Imogen, it seemed, felt much the same.\n\n\"She fucking was not,\" she yelled. She stamped her foot. \"She was flirting with you. Don't deny it Dan. You always fucking do this.\"\n\n\"Stop. Now,\" he said again, his deep voice carrying clearly across the bar. The place was totally silent though, every eye was on them. \"You know this sort of behaviour can't be tolerated Imogen. You know what's going to happen if you keep it up. Now stop being so silly.\"\n\nImogen was beyond angry now though. I could see the heat in her face, her fury in the set of her jaw, in her stance. I couldn't blame her. No matter if her man and the bar woman had been flirting or not, being called hysterical and silly in that haughty tone would have had me seething with rage.\n\nShe stamped her foot again. She snarled. \"You fucker.\"\n\n\"Don't,\" he warned.\n\n\"Don't what? I fucking saw you Dan. Flirting with this fucking bar whore.\"\n\n\"Imogen. Stop it. That's enough. I won't warn you again.\"\n\n\"Me? Are you fucking serious Dan? She's the one at fault here, the little fucking slut.\"\n\n\"Imogen! Apologise. Right away.\"\n\nShe snarled again. Her face was burning with indignation. \"Fuck you. I want that strumpet to apologise to me. I want her to kiss my fucking feet.\"\n\n\"You go too far Imogen. Too far. Now we can do this back at the room, or we can do it here. Your choice. Apologise.\"\n\n\"How fucking dare you,\" she screeched. \"Me? I want her spanked. That little slut.\" Imogen pointed at the woman behind the bar. The woman was staying silent, to her credit, trying to look unconcerned, but I saw how white her face was. She was standing stock still, as if trying not to tremble. \"She's the one at fault here,\" Imogen yelled. \"That fucking little whore.\"\n\n\"That is absolutely enough Imogen,\" Dan yelled as he stepped closer. \"Come here. Now.\" He grasped Imogen by her shoulder.\n\n\"No!\" Imogen shrieked. \"Get off me. How fucking dare you take her side over mine!\" Imogen tried to twist out of Dan's grip, but he held her firm. He yanked her towards him, he grabbed her other shoulder and held her with both hands as she yelled and struggled. She tried to shove his hands off her, she batted at his chest when that didn't work, but Dan was so much bigger than her, clearly far stronger.\n\n\"Can someone fetch the bench, please?\" Dan called out. He almost sounded bored, like this was all just a regular part of his day.\n\nImogen sounded less blas\u00e9, however. \"No!\" she screamed again, but horror had replaced her indignation now. She struggled afresh in Dan's arms, Imogen tried her best to escape him, but she was going nowhere.\n\nMy heart was racing. I tried not to grin. It was going to happen. Again. In front of us. It thrilled me. I was more excited than I'd been since I couldn't remember when.\n\nDan wrapped his arms around the struggling woman, he lifted her up and held her easily as another man dragged a large, heavy looking piece of furniture over to the middle of the floor. It had a frame made of dark wood with four legs. It was a meter and more high, with a flat top made of a soft black material that glistened in the lights of the bar. Leather, I guessed. There were some sort of straps at one end of the bench or table. A handle of some kind of hung from one side of it. I hadn't seen this piece of furniture when we came in, it must have been stored somewhere close at hand, somewhere quick and easy to access.\n\nPeople got up from their tables around the piece of furniture. They pulled the tables and chairs back to clear the floor as Dan carried Imogen over to it. She was yelling incoherently, wriggling desperately in his arms, kicking her legs, trying to hit his chest and slap his face, but he held her so tightly all she managed to do was to make an even more ridiculous scene of herself. I was sure Imogen was aware of that. I was sure it was making her madder. Hotter too.\n\nI sat on the edge of my seat, I leaned forwards to get the best view I could. Dan set Imogen down at the foot of the bench with her back towards us. She tried to pull away from him again, to make her escape as he dropped her, but he held her easily still. He grasped one of her wrists, he pulled her arm out, he pressed Imogen down with a hand on the middle of her back. But then Dan looked stuck. He froze as Imogen writhed, he looked indecisive, as if he needed a third arm to accomplish what he had planned.\n\nDan looked up at the woman behind the bar. Her face was pale still, but there was a smile on it now as she watched the scene playing out before us. \"I'm sorry. What's your name?\" Dan asked in a polite voice, in his rich, plummy accent.\n\n\"Natalie,\" she said.\n\n\"I'm sorry Natalie. Would you mind helping me out? Could you come over here and fasten this for me?\"\n\nDan said it innocently, as if asking a stranger for help with a trivial task. But I knew what he was doing. He'd picked the one woman in the place that Imogen would least want involved. The one woman in here she loathed. And by asking her so calmly, he was pretending it wouldn't even occur to him it would enrage Imogen. It was a perfect piece of passive gaslighting. And it worked like a charm.\n\nImogen bellowed in inarticulate rage as the bar woman walked from around the bar, as she strode over to the couple in the middle of the floor. Imogen thrashed to escape, she roared at the bar woman, but Natalie didn't flinch or faulter. She wore an expression of polite service as she reached out for one of the straps on top of the bench, the same look she'd had on her face as she'd pushed our cocktails over to us.\n\n\"No!\" Imogen shrieked in fury and horror as Dan held her arm out, as Natalie fastened the leather strap around Imogen's wrist. \"Not her. No!\" They both ignored her though. Dan adjusted Imogen's position over the bench, he pulled her down, lower, forwards, he held her other arm out and Natalie did her duty again without speaking.\n\nDan and Natalie stepped back from the bench and I saw Imogen's predicament. She was bent right over it, her feet only just on the floor, her chest across the leather top, her wrists bound to it. Imogen wasn't going anywhere. And she was in an ideal position for what I knew was coming next. Anticipation boiled inside me. My face felt hot, I was already rubbing my thighs together to try and ease the mounting ache between them.\n\nIt got worse for Imogen still. Dan took hold of the handle at the side of the bench. As he span it, I realised it was a crank. As he twirled it around, the top of the bench inched up at one side and lowered at the other. The end were Imogen's wrists were held, began to drop down. The opposite end, where her lower body was bent across the bench, slowly rose up. Imogen wriggled and pulled at the straps, she shrieked and kicked, but it was no good. She couldn't free herself. She couldn't do anything to stop this from happening. Her feet left the floor, her bottom was raised up, higher than her head, the highest part of her now. The perfect target.\n\nDan stopped turning the crank. He moved around to stand behind the bench now. He did everything slowly, drawing it out, letting Imogen's anger and panic intensify. Natalie didn't go back behind the bar either. She took up a position at the side of the bench. She made sure she had an excellent view of what was about to happen.\n\n\"Don't you fucking dare,\" Imogen called out, finding her words again, but everyone in the bar knew it was coming.\n\nAs Imogen struggled, she caught sight of Natalie standing close at her side. \"No! Not her,\" Imogen yelled. \"Make her go away. She can't watch. Not her! Send her away.\"\n\n\"She stays,\" Dan said sternly. He raised his right hand high as he stood behind Imogen.\n\n\"No. Not that fucking bitch. Make her go away. Tell her to...\"\n\n\"I've had quite enough of this behaviour young woman,\" Dan said as he stepped forwards. As he swung his hand down, as he slapped it hard across Imogen's upturned behind.\n\nA meaty thwack rang out across the bar, closely followed by Imogen's yell of pain and rage.\n\nDan let the full realisation sink in to Imogen of what was happening before he smacked her again. He slapped her a second time, harder, then his smacks came fast, with force, right from the off. Her body shook with each blow, Imogen screamed bloody murder with each spank, she kicked her legs furiously, but there was nothing he could do. I was captivated already. My chest was tight, I was hot down there.",
        "Imogen's back rose and fell as her breathing deepened, as Dan smacked her mercilessly. Every eye in the bar was on Imogen, on her broad, full, wriggling bottom as Dan slapped it. Everyone saw her shame.\n\nI was breathing harder with Imogen, but I wanted more. I prayed Dan was going to take this further, like in the restaurant earlier.\n\nDan spanked Imogen fiercely, but there was still plenty of fire in her, plenty of defiance. She yelled between her shrieks, demanding to be set free, demanding that Natalie be put in her place and punished instead.\n\n\"Your behaviour is absolutely intolerable Imogen,\" Dan spoke loudly as he chastised her, clearly for the benefit for the room as much as for Imogen. \"You were in the wrong, Imogen. You must recognise that. I insist you apologise to Natalie.\"\n\n\"Fuck you,\" Imogen roared. \"It was her. That fucking slut. She's the one that...\"\n\nImogen screeched as Dan slapped her so hard I winced.\n\n\"We're going to keep this up Imogen, until you apologise to Natalie.\"\n\n\"Apologise!\" Imogen yelled, the epitome of rage and self-righteous indignation. \"She should be the one apologising to me for flirting with...\"\n\n\"Enough of this.\" Dan grasped the back of Imogen's long dress and began to drag it up over her legs.\n\nImogen kicked again as she shouted in protest, she wriggled to try and stop Dan. \"No. Stop. How dare you! Get your fucking hands off me.\"\n\nIt was no good though, in that position, raised up, her feet off the floor, her hands bound, there was nothing Imogen could do to stop him. It was happening. And Dan took his time again too, savouring the moment, giving us all a good view as he hauled Imogen's dress up, as he revealed her shapely calves and her thick, toned thighs.\n\nI drank in the sight of Imogen as she writhed. Her skin was flawless, a lightly tanned pale bronze. She wore black knickers with a red, frilled trim. Her buttocks were fleshy, plump, wonderfully curved, they spilled out of the side of her underwear marvellously. Her cheeks shook as Imogen kicked and struggled. I'd never have believed I'd enjoy seeing another woman undressed so much. But then I'd never seen a woman disrobed like this.\n\nDan bunched up Imogen's dress across her back to expose her knickers, to make sure everyone could see. Imogen kept yelling at him, at Natalie, demanding the bar woman be spanked instead of her. Dan took no notice though. He didn't reply to Imogen. He merely lofted his hand, then he delivered a stinging blow that set one's of Imogen cheeks quivering.\n\nMy stomach muscles clenched at the sound his hand made on her flesh. Imogen screamed in pain and fury.\n\nDan set to spanking Imogen again, hard, one cheek then the other. He smacked her without any pity, the noise of his slaps, of her screams, filled the bar.\n\nI leaned further forwards in my seat, I felt myself pulsing down there, between my legs, as I watched Imogen's cheeks turning redder. As she screeched and kicked, as I heard her noises changing. The anger was still there, the outrage, the pain, but there was something else rising up in her too, shame at her treatment, a growing edge of gratification in her yelps.\n\nNatalie was watching as intently as I was, I noticed. She'd moved a touch closer, I could see her face side-on, her eyes were wide, she wasn't pale anymore, she was flushed now. I knew this was having the same effect on her as it was on me. I guessed it was part of the reason she chose to work in this place.\n\nStill, I wanted more, I wanted what we saw this afternoon, at the very least. Dan delivered.\n\n\"Are you ready to apologise for your dreadful behaviour now Imogen?\"\n\n\"Fuck you!\" She was less bellicose now though, her voice was higher, close to breaking. Imogen was breathing quickly, almost panting. I thought I could see her rubbing her thighs together as well, as I was. I wondered what it would do to me, to be in her position, to be bared and spanked in front of a room full of attractive strangers. The thought of it was dizzying.\n\nDan shook his head in disappointment. \"You know what happens if you keep this silly behaviour up, Imogen. Don't you?\"\n\n\"You wouldn't dare.\" She tried to sound defiant, indignant, but there was a note of pleading in her voice now.\n\n\"Of course, I dare,\" Dan said plainly. \"You know that Imogen. We've been here before. Now. One last chance. Will you apologise to Natalie here?\"\n\n\"No! She should fucking apologise to me. She should...\"\n\n\"Fine. A bare bottom spanking it is.\"\n\nMy heart rate quickened.\n\nImogen kicked her legs with renewed vigour, she yelled loud again, the fire back in her. \"No! Get off me. Set me free this instant! I demand you let me go. I want her over this table. I want...\"\n\nDan reached out and grasped Imogen's underwear with both hands. The showman that he clearly was, Dan held them for a moment. He let the anticipation rise in his audience and in Imogen. He tortured her as she yelled and thrashed, then Dan drew his hands down slowly.\n\nImogen's behind was so curvaceous, her knickers so tight, they clung to her for a heartbeat as Dan pulled them down at the sides. The seat of Imogen's underwear resisted, it stayed were it was, I held my breath as I watched, then her knickers gave way. The came off her, they peeled down away from Imogen's hot skin to reveal the crack of her arse, the two broad, luscious, rounded globes of her bare behind. Sweet Jesus, that woman had a fantastic arse.\n\nDan slid Imogen's knickers all the way down and off her kicking feet. He took a moment to savour the sight of Imogen like that, upturned, exposed, her bared behind up in the air for everyone to see, then he set to work again. He spanked Imogen ferociously, each slap echoed across the bar. Everyone was rapt, silent, enthralled by the show. I was on the edge of my seat, breathing fast, I was hot and wet. I looked across at Liam, his eyes were locked on Imogen's arse, his mouth hung part-way open.\n\nThere was more pain in Imogen's screams now, more humiliation, as her outrage melted away. She wriggled still, she beat her legs, but I could see the fury going out of her as the hurt and the pleasure and the fun and the glorious degradation took over. Imogen began to moan between each spank, each shriek, and they were moans rich in enjoyment. It sounded like she was trying to suppress her pleasure, to keep it quiet, to keep it secret, but she clearly didn't have enough self-control for that now.\n\nI marvelled at the change in Imogen as Dan spanked her, as he turned her jiggling arse crimson. You could hear the emotion in her yells and moans, her shame, you could hear Imogen's resistance falling away. She loved this. This was only the second spanking I'd ever witnessed, but I understood it intuitively.\n\nAs I watched, as I quivered in my chair, I knew what I was seeing. I understood Imogen waned this, that she needed it. I understood the freedom that came from letting go of yourself like that and of being dominated so completely. Of giving yourself over to another, of relinquishing all control and responsibility. I could almost feel her blazing pain, the adrenaline rush it must cause, her exhilaration, her pleasure. The powerful affect her rising shame would have on her, how being watched like this, how being spanked in such a position in front of a room of people would intensify all of it. It was invigorating just to watch her. What Imogen must be experiencing, it must have been incredible. I found I was jealous.\n\nDan slapped Imogen's bare bottom over and over, she screamed, she moaned, she writhed on top of the bench now, trying to grind her pussy into it. Imogen was wild, loud, uninhibited, free.\n\nYet still Dan deepened her punishment, her humiliation, her fun.\n\n\"Are you ready to apologise now?\"\n\nImogen was panting so hard, groaning and gasping, she struggled to speak. \"No. Fuck you. And her. She's a fucking slut.\"\n\n\"So be it.\" Dan picked up Imogen's knickers from the floor. He moved around the bench to the front of her. He unfurled her underwear and placed them over her head like a silly, ridiculous crown.\n\n\"Get these off me,\" Imogen protested, but for the first time that evening, she sounded truly submissive, begging rather than demanding.\n\nDan shook his head at her. He looked up at Natalie. \"I'm sorry young lady. Are you wearing any underwear?\"\n\nNatalie nodded.\n\n\"May I have them please?\" Dan asked it with a formality and politeness that felt startingly out of place, considering what he was asking for, what he was doing, what we were all watching happen.\n\n\"No,\" Imogen gasped, but Dan ignored her. As did Natalie. She bent forwards and reached under her tight, black skirt with both hands. She drew her white cotton kickers down and stepped out of them. Natalie stepped over to stand in front of the bench. She smiled down at Imogen with malicious delight as she handed Dan her knickers.\n\nNatalie stepped back, but she didn't go far. Imogen pleaded for mercy as Dan balled Natalie's knickers up in one hand. I couldn't see what was happening though, not properly. I got up without event thinking about it. I walked over and took up a position a couple of meters away on the other side of the bench now, so I could what Dan was doing, so I could see Imogen's face. Liam came to stand with me. We didn't say anything. We both watched intently.\n\nDan gripped Imogen's nose with the thumb and forefinger of his free hand, and I gasped as I realised what was about to happen. Imogen held her breath for as long as she could, her face turned redder as she strained, but she knew Dan was going to win. How could he not?\n\nImogen tried to pull away from Dan, but he held her nose easily. She thrashed, but her mouth burst open as she gulped in fresh air. Dan let her take one breath, then he stuffed Natalie's knickers between Imogen's lips. He pressed them in all the way with two fingers, so Imogen wouldn't be able to spit them out easily. I guessed she'd pretend to, but that she wouldn't try too hard. I knew she'd be deeply humiliated by that act, but I knew she wanted that girl's dirty underwear in her mouth. I knew the effect it'd have on her. That it'd have on me if I was in her position.\n\nImogen made muffled screaming and groaning sounds now as Dan took up his place behind her, as he spanked her mercilessly once more. Imogen arched her back, she yelled into those knickers, she squirmed atop that bench. I kept my eyes on her face now though, I saw the agony of each blow in her twisted features, I saw the pleasure in her eyes, the burning humiliation. I saw her tears forming, I watched them run down her red face as her groans came louder.\n\nFuck, this was hot. Astonishing. I'd never fantasised about anything like this, never considered it, never imagined it could do this to me. I'd never have believed I would understand it so instinctively. But my body filled with heat and tension as I watched, my head was light, my breathing rapid. I felt trembly. I was dying to have Liam's hands on me, to have him take control of me too, to undress and use me, but I couldn't tear my eyes away from this scene. It was like nothing I'd witnessed before, nothing I'd dreamed about. Until now.\n\nImogen's muffled yelps fell away, her moans rose up to take their place and I realised Dan had stopped spanking her. He had a hand on Imogen though, he was clearly doing something to her back there, something that was making her yelp and squirm in a whole different way. I wanted to see. I took a moment to stare into Imogen's face first through, to see the look of upmost pleasure on it, to see her bliss, her animal need, her desperation for more.\n\n\"I want to see,\" I said to Liam. I took his hand and we walked back around to the other side of the bench. Imogen's legs were open now, we watched Dan sliding two glistening fingers in and out of her sopping cunt. I saw how hard her legs were quivering.\n\nDan finger-fucked Imogen, he brought her moans higher, louder in their urgency, then he slid his thumb down between her soft folds to stroke her clit. Imogen bucked as his thumb met her there, she groaned through Natalie's knickers in her mouth.\n\nI'd never seen a woman squirm and groan in such pleasure. She was even worse than Jemima. Dan made Imogen buck and mewl as he toyed with her clit, he brought her quickly to the edge of what sounded like a mind-shattering climax. But then he stopped.\n\nImogen tensed, she groaned in frustration and anger as Dan took his thumb off her, as he slid his fingers out of her cunt. He shook his head at Imogen as he strode around to the front of her. \"You don't deserve to come Imogen, you know that,\" he taunted her. \"Not until you apologise.\"\n\nLiam and I walked back around to watch. As did half the people in the room.\n\n\"Would you like to say sorry to Natalie now?\"\n\nImogen shook her head. She looked desperate, stricken, but not entirely broken. Not yet.\n\nDan reached forwards and grasped the piece of white cotton protruding from between Imogen's lips. He slid Natalie's underwear out of Imogen's mouth. She took deep breaths as he unfolded them, as Dan placed Natalie's knickers over Imogen, to join her own underwear. This time though, Dan put this second pair of knickers over Imogen's face, rather than on her head. Imogen's eyes were uncovered, but the gusset of Natalie's underwear ran down the middle of her face, across her nose and mouth.\n\nImogen groaned softly, her eyes burned with shame.\n\nDan stepped back and watched Imogen for a time. He shook his head at her. He dropped a hand to the front of his trousers and unzipped them. He reached inside and drew out a long, thick, dark, rock-hard cock.\n\nImogen groaned again as Dan stepped forwards, she groaned in urgent need. He slid Natalie's knickers to the side to expose Imogen's lips, although he made sure the underwear stayed on her face. Imogen let her mouth fall open for him, she moaned loud as Dan slid his prick into her face.\n\nHe was rough with her, as I'd expected he would be, as Imogen undoubtedly desired. Dan held her with one hand on the side of her head as he fucked her mouth. Imogen struggled to breath, but she managed to suck and moan as he buried his cock in her. I saw the frantic desire in her face, I heard it in the noises she made around him.\n\nDan groaned too as his pleasure came on, he was loud, putting on a show as he screwed Imogen's wet, hot, sucking mouth. I watched, I saw every detail, I was transfixed. I assumed he was going to bring himself off. And I couldn't decide what would be hotter, to see him come in her mouth, to see it running out from between her lips, or to see him finish across her face. I was surprised at myself. Dan had other ideas though.\n\nHe released her head and slid his dick out from between Imogen's lips. She looked sorry to see it go. Liam and I followed as Dan moved around the side of the bench, we watched as Dan took hold of the crank handle again. Imogen moaned her approval as he lowered her rear end down.\n\nWhat? Disappointment flooded through me. It was over? Already? Dan was just going to release Imogen? But neither of them had come? Talk about anti-climax.\n\nBut Dan didn't release Imogen. He lowered her down, he let her place her feet on the floor, but Dan left Imogen's restraints where they were. He stood behind her once more, he took his cock in his hand, she gasped and groaned as he slid himself into her.\n\nDan fucked Imogen with long, fast strokes. He grasped her scarlet arse, he dug his fingers into her, he slapped her again. Imogen groaned and moaned and yelped, she lost any last semblances of control and civility as Dan rode her, as he pushed her pleasure higher. It was awe inspiring to see her like that, it was a hotter sight than I'd ever imagined. That beautiful, composed, dignified upper class lady being reduced to a trembling, mewling, snivelling, groaning animal wreck.\n\nDan slammed into Imogen, he was rough, brutal. She was in ecstasy though, making so much noise, sounds that made my gut tighten. But, I saw, he avoided her clit. Dan gave Imogen everything she needed, except that last touch to send her over the edge. It drove Imogen frantic. She tried her best to grind herself onto the bench, to press her clit into the leather top of it, but she couldn't, the angle was wrong. Imogen groaned and yelped in overwhelming pleasure, in desperation, in anger, and we all watched her like that. Watched her begging with her body. Then she begged with her words too.\n\n\"Fuck, let me come Dan. Please... Let me come.... God, I'll do whatever you want... Please. You can fuck me in the ass. Anything.... Please. Just let me come.\"\n\n\"Apologise.\"\n\n\"I'm sorry... I apologise.\"\n\n\"To her too. Say to it Natalie. Use her name.\"\n\nImogen groaned in fury, but there was so much need in her, she was frantic with it, and she was broken now, he'd won. \"I'm sorry. Natalie... I'm sorry.\"\n\n\"Not good enough.\"\n\nImogen cried out in frustration. She bunched her fists in fury and desperation.\n\n\"Natalie,\" Dan looked over to her as he spoke. He used that same ridiculously polite tone, even though he was balls deep in Imogen, fucking her vigorously. \"Would you like to use my wife's face? I think that would be the most suitable apology. Don't you?\"\n\nEven after everything, I couldn't believe what he'd just said. Surely, she'd say no though? Natalie was staff, not a guest.\n\nBut Natalie nodded. She grinned as she strode over to stand in front of Imogen. Natalie was short though, too short for it to work.\n\nA man from behind the bar was walking over already though, a low, wide, flat wooden step in his hands. He set it on the floor before Imogen without saying a word. Natalie skipped up on to it. Almost like she'd done this before.\n\nLiam and I moved back around to get a good view as Natalie unzipped her skirt, as she let it fall to her feet to reveal her well-formed, muscular legs. She had a small patch of dark blonde hair above two smooth, neat, flushed pussy lips. Natalie shuffled forwards to place herself right in front of Imogen's face. She stepped her legs apart, she raised and opened her hips, she put a hand on Imogen's head to guide her. It looked like she'd done that before too.\n\nIt looked like Imogen had as well. She didn't need any coaxing, any persuading now, she didn't hesitate or resit. She was way beyond that. Imogen raised her face eagerly, her lips came open, her tongue slid out and across Natalie's offered pussy.\n\nFuck, I didn't know which turned me on more. I moved back and forth to watch at each end, as Dan screwed Imogen vigorously, as Imogen lapped at Natalie's cunt. I saw the pleasure on all three of their faces, I heard it in the noises they made. Liam came to stand with me each time I moved. We didn't speak or look at each other, we just watched.\n\nDan groaned and grunted, but he showed no signs of finishing, he looked like he could keep that pace up indefinitely. Natalie was greedier though. She'd appeared courteous and professional as she'd worked, even as she'd watched, but her inhibitions fell away as Imogen licked her. She moaned louder, she pressed herself into Imogen's face. She used her tongue as much as Imogen licked her. She took her revenge on that woman, she dominated her too, no doubt adding to Imogen's humiliation, and to her pleasure.\n\nNatalie's face reddened, her noises rose higher, came closer together, they peaked. Natalie came noisily against Imogen's face. She bucked and juddered, she held Imogen's head with both hands, she was rough with her. It was glorious to watch.\n\nI'd never even considered being spanked before. I'd never dreamed about being treated like Imogen, but it struck a chord deep within me. I knew I wanted it, already. I had, however, fantasised about other women before. About how it would feel for one to go down on me, about me going down on her. I'd never told Liam, I'd never told anyone. I'd never tried it, never come close.",
        "God, I wanted to though. I'd obsessed about it, about the feel and taste of a woman, about pressing my face into her, about her making her moan and thrash and come. And as I watched it happening in front of me, with two real women, with Imogen and Natalie, I wanted it more than ever. It was breath taking. All of this. It was dizzying, the hottest thing I'd ever even seen or heard of or dreamed of.\n\nNatalie released Imogen's head and stepped back from her as her climax finally ebbed and fell away. Her eyes shone. Her pleasure taken, I expected Natalie to hop off the step and to put her skirt back on. But that wasn't what happened.\n\nThe young woman moved, but she stayed on the step. She turned around to face away from Imogen, then Natalie bent forwards and arched her back to present her small, high, muscular bottom to Imogen. Natalie shuffled back and pressed her pretty little rear into Imogen's face so she could lick her again, but from behind this time. The cheeky little fucker.\n\nNatalie moaned differently now as Imogen lapped at her enthusiastically, as Imogen buried her face between Natalie's cheeks. She moaned in a deeper, more guttural way. The angle was wrong though, the position, Natalie was too low, I thought. And then I got it. I realised what was happening. But no. They couldn't be? Not that.\n\nI turned to Liam. His jaw was tense as he watched, his eyes unblinking. \"Where's she licking her?\" I asked. I sounded like I was pleading, desperate for him to confirm my suspicion.\n\nLiam didn't look at me as he replied, but he said it firmly, so there was no doubt. I think he understood me. He knew why I was asking. What I wanted to hear. \"She's licking her arse Abby. Natalie's making her lick her arsehole.\"\n\nIt hit me hard. I hadn't thought it could get more humiliating for Imogen, but to lick that girl there, the girl she'd been so angry with, the girl who'd caused all this, as everyone watched, could there be anything more shameful? To have her face pressed into her cheeks, to have her tongue on there. It was stunning in its depravity.\n\nDan clearly thought so too, as he fucked Imogen harder now, faster, as he watched his wife licking between that young woman's buttocks. He finally broke his pace. His groans came louder as he pounded into his wife.\n\nNatalie didn't stay still as she was licked, she rolled her hips, she ground herself back onto Imogen's face. She had a hand between her thighs, she moaned and frigged herself quickly as Imogen licked her. She was no innocent, she put on a hell of a show.\n\n\"She'll pay for that later, the wanton little bitch,\" a woman said to my side, but there was approval in her voice too. I looked over at her, I looked across the room, I saw the looks on everyone's faces, the grins, the need in their eyes. I saw people were pleasuring themselves too, and each other.\n\nMen had their cocks out, they were beating them as they watched. Women had their hands down the front of their clothes, up their dresses, their fingers moving quickly. Couples were kissing each other, touching each other. I saw more than one woman with a prick in her mouth, another was bent over a table, her dress up, a man licking her from behind, her pussy or her arse, I couldn't tell. It didn't feel real, any of this, it was like a dream, the best dream I'd ever had. Everywhere I looked, I saw bared flesh and uninhibited pleasure.\n\nI turned back to the performance to see the three of them losing control together. Dan was frantic in his fucking, racing towards his climax. Natalie was shaking, moaning loud, close now too, close again. Imogen's groans were smothered, but her whole body was quivering atop that bench, she was doing her utmost to press herself back onto Dan's surging cock.\n\nNatalie got their first as she rubbed herself fervently. Her eyes closed tight as her second climax took her, she barked, high, yapping yelps as she came. It tipped Dan over too. He groaned, he drew his prick out of his wife, he gasped and shuddered as he came over her, as great gushes of semen jetted out of him and fell across Imogen's arse and the back of her dress.\n\nI could see what a desperate state Imogen was in now too. I'd never imagined anyone so frantic to come, but still, she was denied what she needed as Dan and Natalie came at each end of her.\n\nDan stepped back as his climax ended. He looked dazed, he tucked his dick away into his trousers, but he didn't touch his poor wife. It was Natalie that did the honours. She came against Imogen's face, she took her time about it, took her fill of Imogen's tongue, then she pulled herself off away from her mouth. Natalie stepped off the bench and strode around to the back of Imogen. She looked at Dan, he nodded his assent.\n\nImogen cried out in pain and fury and pleasure as Natalie spanked her fiercely, one slap on each cheek with her small, slender hand, then Imogen cried out again as Natalie sank two fingers into her cunt. Natalie moved them quickly inside Imogen, she ran her thumb down and onto her clit, just as Dan had done. Natalie made a show of it, her hand moved once, twice, a third time, Imogen's yells rose up, she was right there, right at the precipice.\n\nNatalie put a finger from her free hand into her mouth. She wet it with her saliva, then she placed that finger between Imogen's buttocks. She rubbed Imogen's clit, she pressed her fingers deep into her pussy, she slid that other finger up Imogen's bum and her climax broke.\n\nI'd never heard anyone scream like that, not the way Imogen did as she finally came. As if all the pent-up emotion and humiliation and excitement and tension and pleasure was released at once. She screamed as the dam broke, as her orgasm surged through her, as it totally overwhelmed her. She thrashed, she bucked, she screeched. Natalie kept her hands moving, she finger-fucked Imogen's cunt and arse, she stroked her clit, she had such a look of triumph on her face as she did it, as she pushed Imogen over the edge, as she drew Imogen's climax out, as she made her come with devastating intensity.\n\nWe stayed to watch the full histrionics of Imogen's orgasm, we stayed just long enough to see her released, to see her slump to the floor, to be caught and held up and kissed by Dan. That woman looked the picture of exhausted bliss.\n\nWe stayed as people cheered and clapped uproariously, as Natalie pulled her skirt back on and headed back behind the bar as if this was all perfectly normal, a typical part of a night's shift.\n\nThen Liam and I ran hand-in-hand out of the bar and over the walkway.\n\nWe're pretty new to BDSM stories, so we'd love to hear your thoughts. What you liked and didn't, what worked and what didn't? Any feedback you could give would be greatly appreciated. Thank you!"
    ],
    "authorname": "DarkCherryCollective",
    "tags": [
        "spanking",
        "watching spanking",
        "domination",
        "humiliation",
        "submission",
        "lesbian sex",
        "lesbian"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/a-wife-well-spanked-ch-02"
}