{
    "title": "Texas Trio Pt. 02 - Becky's Debt Ch. 19-20",
    "pages": [
        "REMINDER: I write long stories. Many chapters don't have naughty bits, but those that do will be way more fun if you read the others, too! Also, although TT2 is a stand-alone novel, it takes place in the same family as Texas Trio, so you might want to read that one first! \u2013Stefanie \n\nNOTE: This chapter DOES have the naughty bits. :) \n\n\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013 Chapter 19 \u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013 \n\n\"Tenderfoot!\" \n\nClancy's shout scratched its way into his head, and Brody grimaced, wiping the sweat off his face with a rolled-up sleeve. \n\nThe scrawny little sod wouldn't live for another five minutes, if it were up to Brody. \n\n\"Bradbury!\" \n\nHe threw the shovel at a hay bale and stalked from the stable into the barnyard, snapping, \"What?\" \n\nClancy's head snapped around and his eyes narrowed. \n\n\"\u2013can I do for you?\" Brody ad-libbed. \n\nClancy sneered, pointing with the new ebony cane Mrs. Connor had given him. She'd had it shipped in from Galveston, where is was made especially for him by the very same jeweler who had made General Sam Houston's walking cane. Brody had already heard it a million times, not counting today. \n\n\"After you're done muckin' out the stable, that trough in the paddock needs fillin'.\" Clancy jabbed the cane at the long box backed up against the barn. \n\nBrody nodded sharply, turning to the stable with renewed energy. It'd be nice to be in the shady grove by the creek for even a few minutes, instead of the scorching, stifling stable. He'd hook up the little pony cart and take his time coming back\u2013 \n\n\"Tenderfoot!\" \n\nBrody stopped in his tracks, his teeth clenching. That bastard had waited until Brody got all the way to the stable on purpose. Every time he called him out to give him another gleeful order, it had been that way. All day. Brody spun and walked back to Clancy. One punch, that's all he'd need, Brody thought, glaring down at the older man. He wasn't half-dead now, like he'd been the night he arrived. With one punch he'd knock Clancy clear into next week. \n\n\"Yes?\" he asked calmly. \n\n\"Miguel has the cart out collectin' lil-bitty rocks for Miz Connor's garden. You ain't got a problem carrying buckets on a shoulder pole, do ya?\" \n\n\"No.\" \n\n\"Good. I'll be back after lunch. Miz Connor's got some of that lemon pie everybody likes so much.\" He grinned as he turned away. \n\nBrody watched as Clancy hobbled off, surprised he wasn't actually rubbing his stomach at the end there. \n\n\"Son of a bitch,\" he muttered under his breath as he stomped toward the stable. \"Bradbury, Brady, tenderfoot, boy . . . .\" \n\nHe snatched the shovel out of the hay, the rant continuing in his head. Kendall had to be the biggest bastard in Texas to give Clancy control of Brody for the day. It was a hundred degrees in the shade without a breath of a breeze, and Clancy had him doing the nastiest jobs he could think of with the least appropriate tools he could find. \n\nBrody finished shoveling shit and grabbed a forkful of fresh hay to scatter around the big birthing stall. As soon as he got in there, a tinkle of metal caught his attention, followed promptly by another tiny sound, and then one quiet footfall. That footfall sounded suspiciously like someone trying to be quiet. \n\nHe leaned the pitchfork gently against the side of the stall and walked slowly into the main area of the stable. It was empty. He approached the tack room quietly, being careful where he set his feet. He needn't have been concerned about the amount of noise he was making, he discovered: Becky was shuffling her feet and couldn't hear him. She backed out of the last stall on his right carrying a heavy saddle and slammed ass-first into Brody's hip. Then she caught her heel on something, dropped the saddle as she struggled for balance, and toppled. \n\nBrody caught her. \n\n\"I'm so sorr\u2013\" she was saying as she turned. \n\nWhen she saw it was him, she stopped speaking and pressed her lips together. \n\nBrody hadn't seen her since the night they'd walked down to the creek, and that was eight days ago. Supposedly Becky hadn't been feeling well, and Nanny had been making excuses for her whenever Brody stopped by to visit. \n\nShe didn't look as though she felt under the weather, Brody thought. He let his eyes roam her face and drop down to trace the shapely lines of her legs, clearly visible to him because she was wearing trousers again. \n\n\"Miss Connor,\" Brody greeted her, not smiling. \n\nBecky put her hands on her hips, fully prepared for a fight. \"Mr. Easton.\" \n\n\"Going for a ride this fine, sunny day, Miss Connor?\" \n\n\"Why, yes I am, so\u2013\" She spun away from him. \n\n\"\u2013if you'll\u2013\" \n\nBrody gripped her upper arm, preventing her from bending to retrieve the saddle. \"Who's going with you?\" \n\nHer chin jutted out as she set her teeth, not answering. \n\nBrody spun her all the way back to face him and stepped forward, towering over her. \"Haven't you learned your lesson? You could've died in that quicksand.\" \n\n\"I'm sure it's none of your concern, Mr. Easton,\" she said coldly. \n\nThat was about the worst thing Becky could have said to him at that moment. \n\nBrody was tired. He'd taken everything that happened to him over the past couple of months with equanimity, he thought. He'd absorbed the infuriating arrogance of her mountainous brothers, Clancy's constant insults, and the hardships of living in a log cabin with twenty uncouth cowboys with nary a complaint. \n\nHe didn't even mind the annoying conversational jabs she'd been taking at him lately, because he could see what she couldn't, and he was willing to wait. Even the beating he'd taken from the railroad deputies didn't look so bad in retrospect, since going through that was what brought him here, to her. But for Becky to act like they were strangers, completely refusing to acknowledge his feelings for her, well that was just too much. He was hot, hungry, and too damn tired to cope with her childish pretense. \n\nBrody took two steps forward and Becky took four fast steps backing away from him until she ran out of floor space. \n\nBrody put his hand on the wall near her shoulder. With the tack room jutting out into the stable on her other side, she was cornered. \n\nHe was a foot away when he leaned down, glaring into her golden eyes. \"It's not my concern?\" \n\nIt wasn't loud enough to be called a holler, but the volume and tone of Brody's voice conveyed his emotions just as easily as a full-blown bellow. \n\nBecky's anger evaporated into the shadowy, still air. She'd never seen Brody angry. \n\nA muscle twitched in his jaw. \n\nHer lips parted slightly as her breath quickened. She'd never seen him anything but calm and courteous. \n\n\"It damn well is my concern!\" \n\nHer eyes widened. Even Clancy's taunts and Colt's ill-humor had rated only the occasional grim expression from Brody, never anything like this. \n\nBecky's lack of verbal response goaded him as much as her snitty comment, and the steel band Brody kept wrapped around his temper snapped. He closed the tiny space between them and kissed her, hard. \n\nBecky shoved at his chest, trying to turn her head away. The wall limited her movements, but Becky's thrashing penetrated his fury, and Brody gentled the kiss. Leaning back just enough to give her breathing room, he wrapped his arms around her shoulders, effectively quelling her struggle. \n\nShe tried for at least another two or three seconds to free herself, while his mouth whittled away at her rebellion. When Becky's slight form melted against him, Brody thought his heart might burst from his chest. \n\nHe pinched her full lower lip between his own, angling his head for a deeper taste of her sweetness, and Becky's lips parted softly at the first touch of his tongue. \n\nIt was her first real kiss. \n\nIn the barnyard he'd been circumspect, but now Brody kissed her with all the passion he'd been holding in check. When his tongue dipped between her lips, Becky responded without thought, and shuddered at the difference it made. She knew it happened, of course, but until then she hadn't understood the intimacy of that small penetration. The kiss was all-encompassing, everything else wiped out by the tender friction of lips and tongues, tasting, rubbing, touching. \n\nSwept away for a few long moments by the flood of intriguing sensations, Becky at last pulled away to catch her breath, suddenly remembering that she was furious with Brody's high-handed attitude, and she didn't want to kiss him. Her hands wormed their way between their heated bodies, and she went back to pushing at him, trying to wiggle from his grasp. \n\nBrody actually growled, startling her into stillness, and giving him plenty of time to lift her hands away from his chest, pinning them to the rough board wall at either side of her head. \n\nBecky set her teeth, thinking there was no way she'd let him kiss her again. She stared straight ahead at a button on the blue cambric shirt he wore, determined not to notice how the damp garment clung to the width of his chest. \n\n\"Becky.\" \n\nHer lashes didn't even flicker, and neither of them noticed his easy use of her Christian name, though she'd never given him leave to call her that. \n\n\"Becky, look at me.\" \n\nA miniscule twitch of her head signalled her refusal. \n\nUnconsciously, Brody lowered his voice, using a tone of command that came naturally to him when his dick got hard. \"Becky,\" he repeated. \n\nHer response was instinctive, immediate, and completely uncontrollable. A shiver rippled across her torso, her shoulders curled helplessly inward, and her eyes closed as she tried\u2013 and failed\u2013 to deal with the unfamiliar urges wrapping themselves so tightly around her will that they were impossible to resist. When her eyes blinked open, they went straight to Brody's, exactly as he'd requested. \n\nIn light of the fire flooding his veins, it was a miracle his expression didn't change at all. \"Don't move.\" \n\nHis eyes fixed firmly on hers, Brody gently released her wrists, straightening as his hands moved to cup the sides of her face. \n\nBecky held her hands aloft, against the wall where he'd been holding them, as though she'd forgotten their existence. \n\n\"I'm concerned,\" he stressed the word she'd thrown at him, \"because I don't want you to get hurt.\" \n\nWith his thumbs, he wiped the sheen of sweat from her cheeks, noting again that small scar near her eyebrow. \"I'm concerned because I care about you.\" \n\nBrody lowered his head to kiss the places his thumbs had touched, his breath a feather of sensation on Becky's heated flesh. When his lips claimed hers, Brody was no less gentle. A taste was enough for him now, when she'd given in so sweetly. \n\nBecky shivered again when his mouth lifted, and opened her eyes immediately. She hadn't looked away from him yet. \n\nHe pulled her against his chest, which also pulled the backs of Becky's hands from the wall where he'd placed them. Brody felt the small hesitation before she moved them further, to return his hug. When she wrapped her arms around his middle and put her cheek against his chest, Brody's anger vanished. \n\nNo amount of scut work could dim Brody's elation over the remainder of his day. He practically skipped to answer Clancy's bidding. His good mood had the added benefit of irritating the older man, especially when Brody began to add \"sir\" to the end of every answer. Yes, sir! No, sir! Right away, sir! like the solitary soldier in the KCW brigade. Once or twice, Brody even had the urge to salute, but figured the gesture would definitely get him hit with Clancy's ebony cane, so he suppressed that final glorious thumb to his nose. \n\nHe contented himself with humming, whistling, and thinking of Becky, though he was almost afraid to dwell on their encounter. He'd had no intention of trying to dominate Becky, probably not ever. He'd never even considered the possibility, but in the heat of the moment, the command had sprung from his mouth. \n\nHe'd been too inflamed to regret the words immediately, though in retrospect Brody was certain he would have apologized in just another moment, if Becky hadn't reacted the way she did. Her eyes had hit him like a hoof to the middle of his spine, though, and he'd barely restrained the shudder which threatened to engulf his body. \n\nHer capitulation was beyond belief. \n\nBrody could never have anticipated it, and still didn't trust the conclusion which had come so quickly to his mind, no matter what his ears and eyes and the fire in his belly were telling him. It didn't seem possible that the virginal Rebecca Connor could be aroused by submitting to his will. It didn't seem real. Brody was elated, but almost afraid to hope: if it were true, the stakes were much higher than he'd ever dared to dream. \n\n\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013 Chapter 20 \u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013 \n\nInside the shadowy interior of the northern bunkhouse, Becky stood with hands on her hips, surveying the beds which lined the walls. Every single one seemed to have a bag or box of some kind stashed beneath it. How was she supposed to know which bunk was Brody's? \n\nShe sighed and, bending, pulled the metal trunk out from beneath the first bed. She probably wouldn't find Brody's bunk today\u2013 she wanted to clear out at least a quarter of an hour before the men arrived, and she had one of the younger stable lads watching the trail to keep an eye out for their return. It wouldn't do to get caught rustling through the men's unmentionables, especially while she was wearing pants herself. \n\nThe brass latch of the first trunk opened easily, and she flipped the lid open. The long, low building didn't have many windows, but it wasn't too dim to see inside the trunk. She closed it just as quickly, her eyes wide. She squatted by the bed gathering her courage before opening it again. The small stack of papers she'd seen were just the kind of evidence she wanted to defend herself from Brody's advances. If she found something bad enough, her brothers might even banish Brody from the ranch, but at the very least, she hoped to silence his threats and worm her way out of their bargain. \n\n\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013 \n\nBrody had been out mending fences all day and already had mischief on his mind when he returned to the bunkhouse that day. He'd been riding the eastern borders of the ranch alone this week, checking for breaches before they became a problem. It was a hopeless task, because a boy could hide in the bushes waiting for Brody to pass by before taking out another section of fence. \n\nBrody thought the KCW would be better off sending one hand to watch each of the nearest ranches from a hilltop somewhere, waiting for the troublesome youth to strike off on his own. But it wasn't up to him to decide, and he wouldn't be offering advice to Becky's brothers, no matter how much time he spent sitting on their porch. \n\nThe only good thing about mending fences was taking off for the bunkhouse half an hour earlier than he expected the rest of the crew to arrive and getting the first shot at the sun-warmed water. It was hot enough that no one minded bathing in the creek or in water drawn from the creek, but it was a fact of life that shaving your face with warm water left more skin behind. \n\nSo Brody wasn't expecting to find anyone else at the bunkhouse when he arrived. The flash of movement, though it was dun-colored and disappeared with haste, drew his attention immediately. The dun color was trail dust, and it was decorating the boots and trouser bottoms of a slim young man slipping through the bunkhouse's solitary door\u2013 very possibly the self-same lad everyone had been scrambling to catch practically since his arrival. \n\nBrody reached for his rifle, but switched direction and came up with the Colt instead. If he'd been serious about killing the kid, he would've grabbed the rifle for this distance, but Brody just wanted to scare hell out of him, and the pistol would do that. It wasn't one of the pretty pair of nickel, pearl-handled gentleman's guns he'd been carrying when he arrived in Texas\u2013 those had been stolen from him, too\u2013 but he was just as happy to have the second-hand, single-action Cattleman by his side. The whole herd could trample a Colt and it still wouldn't jam up on you. \n\nHe stayed to one side of the track, walking the twitchy mare through the alfalfa. He dismounted fifty feet from the bunkhouse, leaving Rolly to graze and hoping like hell he didn't have to track her down later. He didn't see another horse but assumed the boy had one somewhere, though Brody wasn't planning on letting him get to it. Depending on the kid's attitude, he might even hogtie him and sling him over Rolly's broad hind-quarters for the ride up to the ranch-house. Even if he let the kid sit astride, a visit with Kendall and Wilson would scare the hell out've almost anybody. A dangerous smile graced Brody's face as he strode silently toward the door. \n\n\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013 \n\nBecky's nose and forehead wrinkled as she stared at the drawing on top of the pile. She blew a breath out through pursed lips and told herself to stop being such a ninny. She knew what happened in the bedroom\u2013 Nanny had made sure of that, and looking at a few dirty pictures wouldn't hurt her. She lifted the pile and scanned them one by one. Most were printed on the same kind of stiff paper as postcards, but a few seemed to have been cut from books. More than half were drawings or etchings, even one original pencil drawing on regular stationery, but partway through the pile, Becky found a few photographs. The one on top was of a naked woman reclining on a chaise, one knee bent so the photographer had an unobstructed view of the hair between her legs. That was mild compared to some of the sketches she'd already seen. Three photographs down, though, Rebecca found a photograph so disturbing that she tossed the pile as though her fingers had been scorched. After a minute, she pinched the top one carefully between two fingertips and flipped it over to read the back. \n\nTom Perkins. \n\nHer eyebrows rose. She neatened the stack, closed the trunk, shoved it back under the bed, and stood staring along the row of beds. \n\nTom Perkins was such a nice man. He stopped by with bones for Topper whenever he came up to the barn and gave candy to the children at Christmas. Now she could never look him in the eye again. And if Tom Perkins . . . Tom Perkins! had pictures like those, what was she going to find in the rest of them? Becky grimaced, lowering her eyes to the trunk at her feet. How could she face twenty more? \n\nShe squared her shoulders and squatted, grabbing the leather straps of the bag beneath the next bunk. She could darn well face just about anything to get rid of Brody Easton. \n\nThe satchel was nearly empty, but the stiff canvas exterior stuck on something when she tried to push it back under the bed, and she had to mess about for a minute to get it in there. When she stood this time, the steel in her ear said she wasn't getting a glimpse under the third bed. \n\n\"Hands up,\" a voice sliced through the darkness behind her. \n\nBefore both words left his lips, Brody had recognized the slim shoulders and the curve of her thighs. He tipped his hand to point the barrel away from Becky, easing his thumb off the hammer as he gritted his teeth. \n\nThe woman was trying get herself killed, one way or another. If it wasn't a flood or quicksand, it would be her sister's husbands or Catherine herself. \n\nHeart in her throat, Becky raised her hands, not even noticing when the gun was withdrawn. \"I'm\u2013\" \n\nIn an instant, she was pinned to the rough board wall, the heavy male body pressed to her back holding her in place. \n\n\"What the hell are you doing in here?\" Brody's breath brushed her cheek as he growled roughly in her ear. \n\nBecky's heart quickened, the knowledge of who was behind her more intimidating than the gun had been. \"I\u2013\" ",
        "Again he didn't wait for her to finish. \"You're going to get yourself killed, Miss Connor, sneaking around like this.\" Brody re-holstered the Colt without releasing her. \"I thought you were a burglar.\" \n\nShe swallowed, trying to sound calm and reasonable. \"Well, obviously I'm not, so you can let me go now.\" \n\nBrody didn't move, at least not the way she wanted. Instead, he shifted his weight, one hand landing on the wall next to hers. \"As a matter of fact, how do I know you aren't a burglar?\" \n\nBecky didn't know exactly where he was headed, but she didn't need specifics to feel the danger. Sparks of alarm skittered up her spine. \"Let me go, Brody, before I scream.\" \n\nBrody noticed the slip before she did\u2013 it was the first time she'd used his Christian name. His low, rough chuckle sent a chill chasing the sparks, while the warmth pooling between her legs proved her body was as conflicted as her brain. \n\n\"If anyone was close enough to hear you, Miss Connor, the first thing they'd discover is that you're riding around the ranch in trousers again and that you arrived here by your own steam. So, you go right ahead and holler.\" \n\nBrody's lips brushed against her hair, and Becky inhaled sharply. Neither moved for a moment. Her head was swimming, the warm, male smell of his skin assailing her senses. \"Brody\u2013\" \n\nThe tempo of her breathing told him what he needed to know. He didn't think he'd been wrong about her reaction in the stable: she was excited now, as she'd been excited then. What exactly was exciting her remained to be seen.  \n\n\"Maybe you stole something before I arrived.\" Brody smiled wickedly, moving his foot between her own. \"I think I better check, don't you?\" \n\nHis hands on the wall below her elbows would have prevented any interference as he nudged her feet apart, but Becky never thought to struggle. She closed her eyes, reveling in the feeling of his hard body pressed against her. She'd thought of little else since that day in the stable, and she was going to give in and enjoy it for a few brief moments this time. After all, it wasn't like she had a choice. \n\nWhen first he touched her, she jumped, but as he stroked from her lower arm inward, she hardly dared to breathe. When he moved from her arm to her side, his fingertips brushed the outer curve of her breast and Becky shivered. Nobody had ever touched her there. \n\nBrody inhaled her scent as his hand swept downward, dipping slowly into the curve of her waist and out over the swell of her hip. He used every bit of willpower he had withstanding his desire. He wanted to lean his weight fully against her, to slot his cock between the soft mounds of her bottom and let her feel how she excited him. \n\nAs much as he wanted to claim her physically, though, Brody wanted something else more. He wanted Becky to give in, to admit she felt the same way he did and acknowledge the heat between them. So instead of thrusting his hips at her, he leaned his head forward, his lips moving against the soft flesh of her neck. \n\n\"Turn around.\" \n\n\"Brody, I\u2013\" She didn't know what she would have said, but he stopped her there. \n\n\"Now, Becky.\" \n\nShe trembled when he used that voice. Closing her eyes, she began to turn. \n\n\"Keep your hands up.\" \n\nBecky did as she was told, until her back was to the wall, her heaving breasts only millimeters from Brody's broad chest. With her eyes closed, she could feel his heat. \n\nBrody never moved, so she ended up still against the wall, still between his hands. He used his foot to spread hers apart again. \"Open your eyes.\" \n\nSlowly, she shook her head. \n\nHis weight shifted, and Becky felt the top button of her shirt spring free. Her eyes opened then, her nostrils flaring delicately. She didn't look down at her blouse, though, but up, at Brody's mouth. \n\nHe felt it like a hammer to the gut. The desire in her eyes, the direction of her gaze, the subtle softening of her expression. Her arms were pressed against the wall as firmly as though he'd shackled her there, but Becky's fingers were relaxed, her posture complaisant: she knew what she wanted, and what she wanted was to do as Brody asked. \n\nHe'd meant to play, to see how far toward total submission he could push her, but he found that he was the one submitting. Not touching her otherwise, Brody bent his knees and kissed her. \n\nUnlike the first two times he'd kissed her, Becky responded instantly, tilting her head as her mouth molded itself to his. When Brody's tongue slid tentatively between her lips, Becky responded in kind, and again Brody was the one to capitulate. Unable to maintain the emotional and physical distance he needed to bend Becky's will to his own, Brody couldn't tolerate even the six inches of air between them. He straightened, pulling her into his arms. \n\nBecky forgot she was supposed to keep her hands against the wall and wrapped her arms around his neck, instinctively pressing her body to his. Brody was so much taller than her that her toes barely touched the ground, but his grip around her waist supported her. Her hands were free to roam the broad shoulders, and her fingers entangled themselves in the hair on the back of his head. Without realizing it, she tugged furiously, trying to pull his mouth closer to hers. \n\nBrody rolled his shoulders back, pulling her higher and tighter as he straightened. She slid upward over the leg he'd thrust between her thighs in order to \"search\" her properly. \n\nBecky moaned against his mouth as Brody dragged her most intimate flesh upward over his long, hard thigh, their skin separated only by a few thin layers of fabric. \n\nBrody could feel the womanly heat of her through their two pairs of trousers, and imagined he could feel her wetness, too. He groaned and shifted his hands, one moving to her side and the other pulling her more firmly against him. \n\nBecky arched her back and tore her mouth from his, keening. \n\n\"Jesus Christ,\" he muttered, attacking the buttons of her shirt one-handed while he tried to keep her pinned astride his leg. She was wiggling so much it was a wonder she hadn't climbed all the way to his shoulders. Brody groaned again, imagining the soft skin of her naked thighs wrapped around his head. He finally got her shirt undone and pushed it aside. He didn't bother with the buttons of the silk chemise she wore: he lifted her to his mouth and bit one side while pulling the other, tearing the garment down the middle. As his fingers dipped inside her shirt, his lips traced a hot path along the side of her neck. \n\nBecky's hips froze, and for a long moment she didn't move at all. Brody was the first person ever to touch her there, the first man to see more than the upper slope of her breasts. When his warm palm curved around her, she released the breath she'd been holding and relaxed into his embrace. \n\nBrody's touch was a combination of the softest breeze and the hottest lava, sending flames licking along her flesh and shivers climbing her spine. His fingers traced teasing circles around her nipple and Becky whimpered, wanting more. \n\nBrody obliged, cupping her breast and letting the broad surface of his thumb brush against the peak. Focused intently on her smallest reaction, he repeated the motion more slowly, dragging his thumb across the pebbled nub. \n\nBecky quivered, her muscles trembling as she unconsciously clutched at him. \n\nBrody lifted his head to see her face. \n\nHer eyes were closed, a tiny furrow creasing the skin between her brows. Her head was tipped back, her lips slightly pursed and parted. \n\nHe couldn't resist; he tasted. \n\nSuddenly, Becky's stillness dissolved, her entire being centered on getting closer to Brody. \n\nBecky wasn't aware of the way her body surged against him, but Brody knew what she needed. The hand on her lower back went lower still, cupping one lusciously round cheek. He pressed upward and inward. Pulling her higher on his thigh, he rocked his hips. \n\nBecky arched her back, trying to direct the sensation where she needed it so desperately. \n\nHe helped, shifting his thigh from side to side, using the weight of her body to part the swollen folds between her legs. When the center seam of her trousers came in contact with her most sensitive flesh, Becky shuddered, and Brody took over, moving her body for her. The large hand on her bottom lifted and lowered, lifted and lowered, his fingers sweeping in to squeeze her thigh, pressing the folds apart and exposing her clit more fully to the delicious friction created by his leg between her own. \n\nHer hand fisted in his hair, and Brody smiled grimly at the tiny tug; his erection was causing him far more pain than her fingers in his hair. He released her lips and opened his eyes to watch the pleasure play across Becky's face. She was panting now, no longer squirming but tilting her hips in tempo with his hands working her pussy against his thigh. Brody had everything he could do not to rend the two pairs of trousers into a mound of shredded threads to get his cock inside her, but watching Becky's arousal was its own sweet reward. \n\nThe wrinkle between her brows softened and her mouth opened wider as a sheen of sweat began to glisten at her temples and throat. Her lips were swollen from his kisses, and rosy with the rush of blood beneath her skin. The sight of her pursed and parted lips alone would have brought Brody to full arousal if he weren't already there; there was no way to see her like that and not think of those lips wrapping themselves around his cock, though it wasn't something he ever expected to see. \n\nBecky's entire being was centered on the delicious sensations radiating from the secret skin between her folds. She couldn't feel the subtle shaking of Brody's big body as his soul came apart, but Brody knew the exact moment his epiphany occurred. \n\nBecky's body writhing against him showed Brody not just the depth of his desire, but the true nature of the heat flooding his veins, because no mere infatuation had ever been able to wring such pleasure from his heart in response to someone else's satisfaction. He was hard as a rock, sweating and in a great deal of existential and physical pain at having to restrain himself, yet he was more complete in that moment than he'd ever been when burying himself in another woman's flesh. \n\nHe wasn't just infatuated with Becky Connor. This wasn't a temporary affair. He loved her. There was no woman on earth who could possibly compare to the woman in his arms. She was complicated and stubborn, reckless, immature, and didn't know what was good for her yet\u2013 namely, Brody Easton\u2013 but she was the only woman for him. \n\nBrody lowered his head to nibble at her lower lip, feeling her tension. He turned slightly to one side, which had the dual effect of allowing him easier access to her breasts and lessening the stimulation of his penis. If he wasn't careful, he'd come in his pants like an over-eager schoolboy. \n\nHe dragged his rough knuckles up and down across the tip of the breast he'd been neglecting. Despite their blocky, workmanlike form, Brody's hands were sensitive, so the tiny, velvet nub scraping across the back of his hand gave him as much pleasure as it gave Becky. She gasped when his two first fingers pinched it between them, tweaking up and away from her body. \n\nThe twinge of sensation shot in a fiery line from her nipple to her molten core, and the tension in her lower body rose to an unbearable level. Brody's thumb tweaked the aching tip of her left breast now, pressing it firmly against the side of his hand as he turned his palm up, cupping her swollen breast and pinching the nipple. Pinch and pull, pinch and pull, in time with the motions of her hips against his thigh. A few more tugs and Becky broke, a low wail slipping between her lips as her body convulsed. \n\nBrody held her close, watching with painful satisfaction as waves of sensual delight flowed across Becky's face. Her legs clutched at his, her arms clamped down around his shoulders, her slim body arched. \n\nOne last shudder ran through her body as her climax receded, leaving her limp and clinging to Brody's shoulders. Her amber eyes blinked open, meeting the fierce arrogance of Brody's stare as he studied her face. That look\u2013 and the knowledge he'd been watching her\u2013 was enough to set off another small ripple within her, and Becky quivered in his arms, blinking in confusion. When the pulsations of her inner muscles quieted, she smiled shyly, lowering her hands and hiding her face against his body. \n\nBrody's arms tightened around her. The furious timpani of Becky's heartbeat slowed, but Brody's was thundering in his chest. He bit back the nearly overwhelming urge to tell her how he felt and settled for kissing the top of her head as he stroked her back, soothing her. \n\nBecky shivered, her thoughts adrift. \n\nIf he hadn't been afraid someone would find them there like that, Brody would have let her linger in his arms, hoping she'd fall asleep. He could have tucked her into bed and wrapped his body around her, waiting for her to wake so he could make love to her properly, with her clothes off. With his clothes off. \n\nBrody grimaced, thinking of the rough cornhusk mattress. Maybe not. He kissed her hair again, lowering his thigh. The woman in his arms deserved piles of down and silken pillows, a suite at the Grand in Paris. Even his richly appointed room at the Scribe wouldn't have been good enough for Becky Connor. \n\nBecky's legs shook as he stood her gently on her feet, but Brody kept his arms around her waist, supporting her weight. \n\nShe was too tired for embarrassment, but she didn't know how to breach the awkward silence. \n\nBrody took care of that, leaning back to see her face as he spoke sternly down to her. \"Now, see what happens to burglars around these parts, young lady? Let that be a lesson to you!\" \n\nWith a hiccup of surprise, Becky dissolved in giggles, falling forward against his chest. \n\nBrody smiled in satisfaction, ignoring the throbbing needs of his body. He took care to hold himself turned slightly away. She'd be fragile enough in these circumstances without encountering the evidence of his desire. He stroked her spine and shoulders, and shifted his weight away from her. With his hands on either side of her head, he tilted her face up for one last sweet, tender taste of that delicious mouth. \n\nShe met his eyes less shyly this time, he noted as he brushed her hair away from the dampness at her temples. \n\nHe bit back another impulse to declare himself and turned away, giving her a chance to straighten her clothing while he stepped outside to make sure no one was nearby to see her leave. \n\nTaking her hand, he walked her out in companionable silence. \n\nBecky mounted by herself, though she was somewhat surprised her legs could hold her, and trotted away toward the ranch-house, looking over her shoulder once to find Brody watching her departure. \n\n\u2013:\u2013:\u2013:\u2013:\u2013:\u2013:\u2013 \n\nFrom the laurel bushes near the creek, Lemuel watched her leave, wondering what the hell Becky Connor was getting up to in the cowhands' bunkhouse. When he'd seen her ride out alone this afternoon, he'd mounted up fast as a darkie fleein' a lynch mob, his elation lending wings to his galloping descent from the ridge line, and his spurs lending wings to the nag he was riding. Fortunately for him, a couple bends in the creek meant she had a longer ride than he did, and he was already waitin' at the south side of the bunkhouse when Becky rode up. She'd confused him for a minute, because he'd meant to ambush her as she went past, but she didn't go past. She dismounted behind the building\u2013 thank Jesus he'd left his horse in the trees\u2013 and gone inside. \n\nHe waited for a few minutes to see if she'd come back out, then thought better of going in there unarmed. What if she was meetin' some cowboy? He didn't hear anything, but he didn't want to risk it. As he was creeping 'round the back to see if she had a rifle on her mount, a sound from the front made him freeze. Was she comin' out? \n\nHe crept around to the side again, listening. The faintest of jingles told him the newcomer wore spurs, and none of the women on the ranch wore spurs. \n\nGoddammit! If some shit-eatin' cowboy got to her before Lem did, he was gonna . . . he couldn't think of anything bad enough, short of killin' somebody, and killin' stirred up more trouble than it was generally worth. \n\nBecky's voice silenced the rambling voices in his head and, sure enough, a man answered her. \n\nShit, shit, shit, and Goddammit! \n\nLem leaned against the bunkhouse wall, his ears working overtime trying to decipher what they were saying, but he only caught a word here and there. He peeked around the back, but Becky's horse was tied right between the two windows at the back of the building, and he didn't dare go around front, 'specially since her rifle scabbard was empty. \n\nHe waited a few minutes, getting more and more antsy, worryin' about the men comin' back and seeing him here, then took off walking fast through the cornfield for the trees where his horse was hidden. He'd wired his spurs down weeks ago, so they didn't make any noise. Cut the horse sometimes, since they didn't spin, but the nag was worthless, anyway. \n\nWhen she came out half an hour later, holdin' hands with a tall, lean cowhand, it was plain to see she wasn't fightin' whatever that cowboy had been doin' to her in the bunkhouse. \n\nLem went back to cursing under his breath as Becky trotted off toward the main house, spoiling his plans again, since there was no place he could get to her between here and there. He swung the bi-noculars back to find the cowboy still standin' there, starin' like a moonsick hound. \n\nLem drew in a breath and held it, squeezing the bi-noculars absolutely motionless against the bridge of his nose. It wasn't from the KCW, but he knew that cowboy from somewhere. Lem watched the man until Becky was outa sight, when he lifted his hat to swipe his hair back. \n\n\"Sonofabitch!\" Lem hissed. \n\nIt was that too-pretty city-boy him and Ernesto had sent up here a couple months ago with a tale that shoulda got the bastard killed! What the hell was he doin' alive, chasin' after Becky Connor? The bastard went back in the bunkhouse, leaving Lem with nothing to do but creep back across the stream and sneak up into the hills, where he'd wait some more. 'Cuz someday soon Becky Connor would go out riding with no Clancy, no Co-chise, and no goddamn cowboy to protect her. \n\nThen he'd see if Ernesto would still have a cherry to pop, or if they'd both be bouncing on used goods. Either way, it didn't matter to Lem. \n\n\u2014:\u2014:\u2014:\u2014:\u2014:\u2014:\u2014"
    ],
    "authorname": "SteffiOlsen",
    "tags": [
        "control",
        "maledom",
        "submission",
        "romance",
        "cowboy",
        "burglar",
        "restrained",
        "historical romance",
        "blackmail"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/texas-trio-pt-02-beckys-debt-ch-19-20"
}