{
    "title": "Hello Mr. Robinson Pt. 10",
    "pages": [
        "All characters are 18 years or older. It seems like it took forever to get this done. I hope you enjoy. Greg has survived the grip of of an event horizon, well a few microseconds. He has seen the thing in the dark space between spaces. Time has passed and the Blink Technology has been revealed to the world. It will slowly take over long distance travel. It will revolutionize space travel. Humans can look up at the stars and know that they are taking their first steps to those stars. \n\nMasquerade:\n\nIt was predawn in the house of Jon Masters. I was alone in my wanderings of that ancient place. While the mansion and stonework was mere centuries old something ancient slept beneath Windsword. The slumbering presence was not human but did not feel malevolent. I wondered what dormant something his house lorded over. Maybe it was that very reason that Jon Masters had constructed his home here. I pondered reaching out with my thoughts to touch the sleeper but thought better of it. Let sleeping deities lie. It was yet another sleepless night and I walked barefoot on the first floor with my mind open listening to the dreams and thoughts of its residents. One of the cooks was having a nightmare about being naked and cooking for the guests due for the masquerade. A maid was dreaming of all those roaming hands of the men attending the party touching and caressing her. We are so vulnerable while we sleep. Our minds wander the corridors and trappings of consciousness older than the pyramids or civilization as we knew it. At our heart, we are primitive creatures that fear the dark and the unknown. I knew all about coming face to face with both. I had seen the face of the thing in the rift and survived.\n\nI came upon Jon's music room. I felt a sudden pang of envy for all those talented people who could play a musical instrument. I loved music but had no talent in either playing or singing. I saw a single name painted in golden letters on the dark lacquered wood of the grand piano, B\u00f6sendorfer. They had been making high quality pianos for over a hundred and thirty years. I looked around to make sure I was alone before I sat down at the piano. I lifted the fallboard revealing the monochromatic keys beneath. I pretended that I was a critically acclaimed concert pianist. I placed my fingers on the cool keys and a melody formed in my mind. It was soft and yet had a power to it. My fingers seemed to move of their own accord and music poured forth. It was an ancient J'Nai funeral dirge. It gathered force beneath my fingertips. While I had been hesitant at first my confidence built by the second as the air was filled with a song whose age eclipsed the entirety of the human race.\n\nI sung low at first the alien syllables weaving their way through the melody and like the music my voice built until I was singing full out. I closed my eyes as Steve's memories, my memories, blazed behind my eyes as I played and sang. I saw the home world in all its glory. The city of the Immortals washed in the light of the triple moons hanging in the night sky. I walked paths paved in ghost steel through gardens so intricately laid out it might as well have been magic. It was the height of the J'Nai civilization where the entire galaxy was a mere step away. The skein of the web stretched across the entirety of lightyears and connected uncounted worlds with the cradle of J'Nai civilization. I walked amidst the best and brightest of psychic engineers, mage poets, and warrior priests. We shared thoughts as easily and freely as our bodies took in oxygen. I was a repository of those minds and all I had to do was unlock it.\n\nA counter melody mingled with mine and my eyes snapped open. Isix was seated next to me and playing. Her touch on the keys was soft and yet as confident as mine. I shifted melodies and she followed with an ease that was a joy to hear. The new song was a battle anthem written by my friend the warrior poet Irulainin Nighthammer. She was a lover as well as a fierce defender of the J'Nai people. She fell in battle toe to toe with the Silent King on the tomb world of Kerlakk IV. She slew the Thanaton king but suffered mortal wounds in the duel. I carried her body from the killing grounds to her personal warship named after her, the Nighthammer. \n\nThe melody changed again but this time it was Isix leading the way. I recognized the Osirin melody at once. It was the prayer of the greeting of the dawn. I sang the first syllables of Bennu's Birth and she sang right along. Her voice was a strong airy alto soprano a stark contrast to my own tenor. When I looked over I saw tears of joy sliding down her cheeks. She wasn't wearing the ever-present hood. Why would she hide such beauty? We finished the song and she flung her arms around me. Her thoughts touched mine thanking me. I held her close and thanked her for the company. The head chef appeared and began pulling the heavy drapes from the windows allowing the first light of morning to spill into the house.\n\n\"Morning Sir,\" she said. \"That was the loveliest piece of music I ever did hear. You both play beautifully.\"\n\n\"Thank you,\" I replied while Isix pulled her hood up to over her face. \n\n\"I must attend Master Jon,\" Isix whispered. \"...Thank you, Greg,\"\n\n\"I didn't know you could play,\" Rhea said appearing from her seat at the far end of the music room.\n\n\"Neither did I.\" I said and she smiled. \"I guess I have hidden talents.\"\n\n\"Did you ever meet Her?\" She asked as she sat in my lap.\n\n\"I was there when she passed. I was her second when she dueled the Silent King. I carried her back to her ship and family.\"\n\n\"Tell me about her. What was she like?\"\n\nI closed my eyes again and I shared my memories of the great lady with Rhea. I told her about the many firsts I shared with Iru. I described our first meeting, our first duel, and the first time we made love. She was a legend and rightly so. She had a way of looking at things that was shared and taught at all the temples of the war god. I guess she was the J'Nai version of Leonardo De Vinci or Sun Tsu. I often went to the Hall of Fallen Heroes to speak with her shade. I felt the tears come and I faltered and stopped. I realized I had loved her. Iru and I had shared a connection as strong and fierce as that of the one I possessed with Rhea.\n\n\"I'm sorry.\" I muttered feeling the warmth of Rhea's thoughts in mine.\n\n\"NO... don't you dare apologize for loving someone! I told you before, I am privileged to love you. Honor her memory and her immortality is assured.\"\n\nThe smell of cooking bacon interrupted our little discussion. Our minds were intertwined as I recalled another life and another time but now it was time to embrace the present. I carried her towards the dining room and she silently clung to my neck. We sat impatiently waiting for the cook to appear with the scrumptious smelling food. Cindy and the others arrived and soon we were eating, chatting and laughing. Everyone seemed upbeat and looking forward to the masquerade. Jon and his sisters showed up and joined us. I asked Jon who would be attending the masquerade. He said only a select group of friends and acquaintances had received invitations. There would be members of British nobility present and we should be on our best behavior. He hinted at a few special guests but wouldn't say who they were. \n\nThe staff of Windsword went into overdrive after that. They were receiving shipments of food and alcohol for tonight's masquerade. It was like watching an army on the move. There was a definite rhythm to everything going on around me. Since the weather was nice I took a walk outside. The gardens were in full bloom and the air held a hundred different scents. The girls were helping the staff get the mansion ready to receive its guests. I spotted extra security forces wandering the grounds. They tried to appear inconspicuous but when you work with them so often you develop a sense of being watched. Rhea was far subtler in the way she kept an eye on me. I took a seat and closed my eyes. I pulled up emails from Nick, the Pentagon, and the White House. Nick sent me a tentative schedule for my return to the states as well as an invite to a private clue, the Equinox Club. \n\nThe members of the Joint Chiefs sent me well wishes on my recovery and were looking forward to working with me again. Lydia, I mean the President also sent me a rather interestingly worded email about my scheduled dinner at the White House. It was the hint or maybe innuendo was a better way of describing the wording. Lydia was after all the first unmarried person to inhabit the Oval Office in over a hundred and twenty years. Hell, she was a lot of firsts all rolled up into one. I guess to sum her up she was the first female, Native American president. I replied to the POTUS with an equally ambiguous email that was far subtler than she had been. I opened my eyes and saw that I was no longer alone on the wooden bench. The nameless redhead that I had briefly met at the White House was mere inches from me.\n\n\"Hello Greg,\" she said smiling.\n\n\"You have me at a disadvantage.\"\n\n\"My name is Gabrielle. I am here on business.\"\n\n\"Are you apart of party security or something else?\"\n\n\"Something else...\" she said becoming all business suddenly. \"I am tracking someone.\"\n\n\"Let me guess, you think that someone will be at Jon's party.\"\n\n\"Got it in one, but there is one problem...\"\n\n\"You weren't invited.\" I said and she nodded. \"I guess I could put in a good word for you. But what's in it for me?\"\n\n\"I could owe you a favor.\" She said and I nodded. \"Of course, I wonder what sort of favor you might collect.\"\n\n\"Do you mind if I ask a few personal questions?\" I said and she nodded. \"Are you a virgin?\"\n\n\"No, well... not really,\" she said blushing furiously.\n\n\"Well that answers my second question,\" I replied and she lowered her gaze. \"I guess my favor would entail taking that other status from you. Which means whoever you are hunting must be dangerous, perilously so. An inquisitor from the Vatican here in London. I will be honest with you. When I saw the three of you at the White House I pulled a few strings to find out who you were.\"\n\n\"We would have wrecked you,\" she growled her hunger surprisingly hidden.\n\n\"I know...\" I said as I lightly touched her shielded thoughts. \"You are like a sun hidden in a glacier.\"\n\n\"Thank you, it isn't easy,\" she purred. \"I'd blow you out here if there weren't so many prying eyes.\"\n\n\"I look forward to calling in your marker.\"\n\nGabrielle DeCourtney rose to her feet and left before she ruined her reputation. It wouldn't do for a high-ranking inquisitor of the Ordo Malleus to be caught up against a tree being fucked rotten by someone like me. I returned to the mansion and Cindy was waiting for me. She had that look in her eye. She was up to something. I walked passed her and she followed me up the stairs to my room. I had a feeling whatever she wanted to say would be better in private. I sat on the bed while she closed the door. The excitement was clear for anyone to see. There was a new guy in her life.\n\n\"There's this guy...\"\n\n\"Go on.\"\n\n\"He is so cute and the sex is amazing!\"\n\n\"Does he treat you well? Do you get along outside the bedroom? Have you been outside the bedroom with this guy? I can see that is a no. What did you really want to ask me?\"\n\nCindy blushed and I could see she was trying to find the right words to ask me this favor. I waited, enjoying her anguish. She finally broke down and thrust her fist out holding a length of silk rope.\n\n\"Tie me up...\" she stammered. \"I need you to time me.\"\n\n\"Have you been studying escapology?\" I said instead of 'are you fucking nuts'. \"Do you trust him that much?\"\n\n\"Yep,\" she said smiling. \"I want to surprise my friend tonight.\"\n\n\"Turn around and I'll do my best,\" I said getting to my feet.\n\nI took the rope as she turned away from me. I tied her wrists in a simple knot this time. I took a step back as she turned around and I timed her. She freed her wrists in under ten seconds. We did this repeatedly until I found a knot she couldn't escape from. I saw the panic in her eyes. I asked her if she wanted me to untie her but she shook her head. I ran my hands over her t-shirt and located an erect nipple. I trapped it between my thumb and forefinger. Cindy let out a whimper of frustration and excitement.\n\n\"Stop... I can't focus...\" she whispered. \"Daddy... if I can't get out of this knot he's going to fuck my ass!\"\n\n\"And you don't want that,\" I said and I could see that she was near panic. \"I will teach you a trick to get out of every knot... it might hurt a bit.\"\n\n\"I don't care. I made you a promise. My ass belongs to you!\"\n\nI soothed her with a touch of my hand on her cheek and my thoughts touching hers. She calmed instantly and waited for me to show her my little trick. I showed her visually what I was about to do to her physically. I walked behind her and placed my thumb on the back of her thumb. I told her to remain calm as I dislocated her digit. She let out a soft cry but endured as the rope slipped off that hand. Once that side was free the other hand followed quickly. I popped her thumb back into position which forced another whimper from her. \n\n\"Are you okay?\" I asked her as she brought her hands in front of her.\n\n\"Yeah,\" she said watching the swelling reduce before her eyes. \"I heal really quick. Can you do it?\"\n\n\"Yep but I didn't put my ass on the line.\" I reminded her failing to hide the bitterness. \"You need to practice.\"\n\n\"Show me,\" she demanded.\n\nI yielded and dislocated both thumbs in front of her. She winced and then after I popped them back in place there was no swelling in my joints. Cindy stared up at me and placed her hands on her hips. She demanded my secret and I couldn't deny anything my little girl wanted. I told her how I had developed a tiered consciousness and it allowed nearly instantaneous regeneration among other things. She begged me to teach her how to do it. I told her she would owe me and that earned me a seductive smile from her. I touched her thoughts and took over the nanites in her body. I created layer after layer of control just as I had in myself. In the end, we mirrored each other. When I finished she looked at me in awe. She dislocated her thumb without flinching and popped them back into place with a smile on her face.\n\n\"It stung but not nearly as bad as that first time. You are a genius!\"\n\n\"Just be careful sweetie,\" I said and she hugged me.\n\n\"I love you too daddy!\"\n\n\"Oh hey, can you do me a favor?\" I asked and she nodded.\n\n\"How do you want me?\" \n\n\"Hold your horses,\" I said as I brought my watch up to eye level with her. \"Just hold still and tell me how you feel after this.\"\n\n\"Okay,\" she said looking at the face of my watch. The holoprojectors flashed and her eyes dilated for a few seconds before returning to normal. \"I am so fucking wet... it feels like somebody has licked me down there like a pro... are you going to fuck me?\"\n\n\"Interesting,\" I said noticing how profoundly hard her nipples were. \"I guess Steve was really onto something. Tell me how you are feeling.\"\n\n\"I told you. I am wet. Do you want to see? Okay... fine... I was already excited but now my body is on fire. I need a cock in my mouth... my pussy or for you, my ass.\"\n\n\"If I asked you to fuck Jon in front of me...\"\n\n\"NO... I mean... that might hurt your feelings. I couldn't do that to you.\"\n\n\"Interesting,\" I said as I pondered what to do with Cindy. \"Anything else you can tell me?\"\n\n\"Just how excited I am. That flash really did a number on me. Did you come up with that?\"\n\n\"No, I was just testing it out. Why don't you go find Rhea and have fun.\"\n\n\"Okay daddy but you might regret sending me away.\" She said heading for the door.\n\n\"I probably will but before you go what is the name of this guy you are so hung up on.\"\n\n\"Oswald Sebastian Kane.\"\n\nI was already doing a full background check on Kane before my little girl had even left the room. I pulled from every database I could access and compiled quite the history. There were several men that went by that name and I suspected that they were all the same man. The description of the man was far too similar to be mere coincidence. Just my fucking luck, my daughter falling for a man seven times her age. I was going to have to speak with Jon to see if he knew anything about Kane. No better time than the present. I went downstairs looking for the master of the house. I found him in the living room directing three burly looking men as they slowly lowered a portable bar onto casters so that it could be more easily maneuvered.\n\n\"Hello Greg,\" Jon said as the bar settled into place.\n\n\"Hello Jon... I want to ask you about someone, a guest perhaps.\"\n\n\"Ask away.\"\n\n\"Do you know Oswald Sebastian Kane?\"\n\n\"Aw hell,\" Jon replied his smile disappearing. \"Who has he latched onto this time?\"\n\n\"My daughter.\"\n\nI saw the pained expression on his face. He told me everything he knew about 'Oz'. He was a scoundrel, a vagabond, but he respected a lady's limits. If she said no, he wouldn't cross that line. I was relieved but still guarded. Cindy would always be my little girl no matter what. I understood I couldn't always be there to protect her but if he hurt her I would make him regret it. I had to pull back on my emotions. I hadn't even met Oz yet. Who knew I might get along with him. If he treated Cindy right he might be a good example of a nice guy for once. To keep my mind off things I jumped in and helped carry, move and unbox. The morning blurred into the afternoon and soon the early arrivals appeared. These were close friends of Jon and leant their help to making sure the party went off without any problems. It was after two o'clock when Rhea and Cindy finally made an appearance. \n\nThe band arrived at four to set up and I helped them carry, fetch and clear away. We found a corner of the music room and decided it had the best acoustics and would afford the least amount of furniture to be moved. Once they were settled in and testing their equipment the second wave of guests arrived. The limos pulled into the circle drive one at a time. Some of the people I recognized on sight while others I had to perform facial recognition searches to discover who they were. I had to admit some of them didn't seem like Jon's kind of crowd. Later I would amend the definition of just what that meant. I circled around the first floor making sure the guests were taken care of as if it were my own celebration. Jon was also ever present and making introductions when they were needed. I kept the musician's glasses filled and their plates full. \n\nI picked up and examined one of the electric guitars. The lead singer watched me and gave me a nod. I slipped the guitar strap into place and my hands settled into a comfortable position. I closed my eyes as I had earlier that day when I sat before the grand piano. The song came to me and my fingers described the melody without effort. Carlos Santana's 'Smooth' filled the air and I heard a few cries of surprise. A moment later the others joined in as we began to sing the lyrics. I opened my eyes and saw that a small crowd had formed and standing at the front was Rhea, Isix and Cindy. The song ended and the applause was loud enough to make me blush.\n\n\"That was bloody amazing,\" the drummer remarked. \"How long have you been playing?\"\n\n\"I've never played before,\" I told him and he called bullshit.\n\n\"Nobody plays like that their first time.\"\n\n\"Feel free to join us anytime,\" the lead singer offered with a wink.\n\nI relinquished the guitar to its owner and he clapped me on the back. I joined the guests as Cindy introduced me to her latest love interest, Oswald Sebastian Kane. He looked to be in his twenties with a slight build and short cropped chestnut brown hair. His eyes had a queer luminescent quality to them and an easy smile. I shook his hand and my thoughts touched the fringes of his consciousness. His mind seemed split between having an enjoyable time and bedding my daughter. I couldn't blame him. I had tasted the forbidden fruit that was my daughter's passion. I was letting go of his hand when there was a flash of something in his mind, something dark something primal. I looked at Cindy and she was all smiles and eager for my approval of her latest choice in fuck buddies. I nodded but locked eyes with her and sent silently to her, just be careful. She hugged me relieved that I had given my blessing of sorts. ",
        "\"Master Greg,\" Isix said taking my arm gently. \"It is time to clean up and get into your costume.\"\n\n\"I'll be up in a few,\" Rhea said with a warm and open smile. \"Have fun...\"\n\nI relented and let the Osirin lead my upstairs. Once we were in my bedroom Isix went into the bathroom and started a shower. I stripped down and walked into the bathroom. Isix stood naked with her arms covering her breasts and her sex. Her expression appeared self-conscious and demure. I say appeared because her psyche was radiating sexual hunger. \n\n\"Master Greg...\"\n\n\"Just Greg,\" I said correcting her.\n\n\"Greg,\" Isix replied. \"Do you prefer me in a submissive, equal or dominant role?\"\n\n\"What do you want? This is a two-way experience. I want you to be happy and enjoy our time together.\"\n\n\"No one has ever...\" she said her voice fading into silence. \n\nIsix launched herself at me and I caught her midair, pulled her into my arms as she kissed me. Her untapped hunger consumed us both. The next rational moment I recalled I was lowering her onto my erection. Her back arched as my cock filled her completely. The passion within us built into a whole new level I thought was impossible. Rhea had been right about taking an Osirin lover. The sensory feedback built upon itself until we reached a body wracking climax. I was washing my hair when I received a message from Surfer, Nick's primary artificial personality. \n\n\"May I come in?\"\n\n\"Surfer,\" I replied staring at his hologram projected from my watch. \"I don't understand. What do you mean?\" I heard a soft knock at my bedroom door. \"Um... come in.\"\n\nThe door opened and a few seconds later someone stepped into the bathroom. I opened the shower door to see the gleaming mirror bright body of the Surfer. I tried to wrap my head around how Nick had done it. I wasn't aware of any project to give artificial personalities a physical form. He was glorious in his perfection and yet he appeared uncomfortable in his new skin. As Isix dried me off Surfer asked for my help in adjusting to what he called his new output device. I wrapped the towel around my waist so that Surfer and I could talk while I got dressed.\n\n\"How do you stand it?\" Surfer asked looking miserable.\n\n\"Stand what?\"\n\n\"The god-awful lag time. I never knew the terrible limitations humans and other sentients had to deal with. I can perform a million calculations and other processes by the time it takes us to share greetings.\"\n\n\"You have to remember that I was born a human. It has been a relatively brief time that I experienced your world Surfer. I understand though. Perhaps you can find a way of alternating between meat and digital time the way I do.\"\n\n\"I find that an insightful solution. You are a constant source of inspiration to us. Nick sent me here to deliver something for you. He says it is a key component to your 'other' duties. I am supposed to stay here while you try it on.\"\n\n\"What is it?\" I asked as Surfer picked up the intricately decorated cube from the bed where he had placed it. \"I don't recognize those characters. Where did he get this?\"\n\n\"It is a relic of the Order. It serves to augment as well as hide your innate talents. I am here to observe you open the cube and remove the relic.\"\n\n\"Now... like right now... there is a party beginning downstairs.\" I asked and Surfer just nodded. \"Fine.\"\n\nAngrily I reached for the cube. There was a blinding flash from the runic characters. I didn't see the box open but I heard it. Something hit me in the chest like a sledgehammer. I gasped for breath as an icy sensation spread until I was shivering and fighting to fill my lungs with air. I blacked out. Isix was cradling my head in her lap when I awoke. I sat up and fought off the dizziness. I looked down and at my arms and legs but there were no obvious changes. Had the box been empty? \n\n\"What the hell happened?\" I asked Isix but she just shrugged. \"Did you see or sense anything?\"\n\n\"No Greg, you touched the cube and you fell to the floor as if you were having a seizure. I held you and soothed your body and mind. How do you feel?\"\n\n\"I am fine now. Was I out for very long?\" I asked but she shook her head. \"Good, let's just keep this between us for now.\"\n\nI got to my feet just as Rhea threw the door open and stared at me her face a mask of distress. She took me into her arms and clung tight. Her thoughts were clear and required no effort to read. I touched her mind and soothed her. Isix held up a hair brush and Rhea nodded. I sat down in front of the vanity so that the Osirin could brush my hair. While she did that Rhea took out my costume for the party. I stared at my reflection in the mirror as Isix dried my hair. I suddenly remembered that the J'Nai had no word for mirror in their language. It spoke of a certain humility and a culture that prized community over the individual. I leaned against Rhea's hands and she used her nails against the back of my neck sending shivers through me. It was a small thing but it meant the world to me. We were reveling in the unimportant as we prepared to dress for the party. Tomorrow we would be returning to the states and my duties. Cindy was going to be staying on until the weekend. I was headed to Florida to speak with the top brass at NASA. I had so many things in the air but I wouldn't have it any other way. Rhea started brushing my hair and I saw her frowning.\n\n\"What is it?\"\n\n\"You need a haircut and no I don't mean losing any length just a little trim.\" She said giggling.\n\n\"Hmm, length and a little trim huh? Who do you suggest?\"\n\n\"Isix,\" Rhea replied without hesitation. \"Since you've only tasted the pleasure of fucking an Osirin. They are amazing lovers as you know. I was in Egypt while the great pyramid was being built. I met this well-hung Anubis. He wrecked me for a week after a night of severe pounding.\"\n\n\"I hope you gave as good as you got.\"\n\n\"Damn straight I did. I left him a drooling mess on the temple floor. When the high priest discovered him, he had me tied up and punished for my transgressions.\"\n\n\"MMM, the thought of you all tied up and helpless is quite the mental image.\" I said winking at her.\n\n\"It should. That old fucker was hung like a god and took out all that frustration on me. Hey, we should holiday in Cairo when time allows.\" Rhea said giggling again.\n\nIsix finished with my hair and I took the costume that was hanging on the back of closet door. I unzipped the heavy plastic carrier and took out what was inside. It was a uniform of some kind. The fabric reminded me of silk because of how slick and sturdy it was. The moment I got a good look at where the stitching should have been I knew this was of J'Nai manufacture. Just like their buildings there clothing lacked any signs of joining of any kind. Thank god Rhea was there to help me into what she called a seer's uniform. The exterior of the cloth help shields the psychic from unwanted mental contact while the interior formed a lattice structure allowing more profound discipline levels. The finishing touch was an ornate walking stick etched with J'Nai runes.\n\n\"This isn't a costume,\" I said glancing at Rhea.\n\n\"No, it isn't,\" she agreed. \"It was my idea. Jon wants you to keep it as a gift.\"\n\nI helped her into her maid costume which included an antique leather and herringbone bustier. Once she was in her body armor her submissive side manifested. I could see it in her eyes. She wanted to be told what to do until the bustier came off. It took everything I had not to shove her down onto her knees and brutally fuck her throat. Her body language changed and I knew it was going to be an interesting night. Since this was going to be my last night in England I was going to enjoy myself to the fullest. A soft knock on the door heralded the arrival of my daughter. Rhea, playing her part, rushed to the door and opened it. Cindy entered the room wearing a daring navy-blue velvet dress. The plunging neckline gave a clear view of her cleavage and somehow still managed to hide her erect nipples. I was about to compliment her look when Cindy produced a leather collar from behind her back.\n\n\"Kneel,\" Cindy coolly whispered and Rhea complied without hesitation. \"That's a good girl.\"\n\nI watched as my daughter slipped the collar around the redhead's neck. Cindy reached into her purse and produced a leash and attach it to Rhea's collar. There was a loud click as the clip closed. Rhea's head was down and her eyes focused on the floor. Cindy made a sharp noise that reminded me of a rider urging their mount from a walk to a canter. Rhea rose to her feet but kept her gaze averted. Cindy smiled and rewarded Rhea by stroking her hair. From that moment on Rhea never uttered a word unless she was directly spoken to. We donned our masks and I notice a distinct difference between the elegant ones that Cindy and I had compared to the plain black over Rhea's eyes. Isix slipped from the room to don her own costume. I looked forward to seeing what she had planned.\n\n\"Hi daddy,\" Cindy said. \"The party has officially started. You look amazing. Care to walk with me?\"\n\nI offered her my arm and she took her place by my side as Rhea walked behind us. The leash rested on Cindy's shoulder as we left the room towards the head of the stairs with Surfer following silently behind. We reached the stairs and there were twenty or so couples arrayed below us. We paused for a long moment before walking down to join the other guests. One of the staff had a silver platter with crystal flutes of champagne. I grabbed two glasses offering one to Cindy. She took her drink and handed over the leash to me. I watched as Cindy slipped into the crowd and I paraded Rhea around letting the guests ogle or lightly pet her by the more daring. I heard the soft purrs from Rhea as we reached the music room where the musicians entertained the guests. There was food, drink and a thick miasma of sexual tension in the air. Rhea's mental fingers stroked my thoughts. \n\n\"Speak pet,\" I sent to her and felt the emotional shiver run through her.\n\n\"Thank you Master,\" she replied. \"Can you taste it? They are so hungry. I am already soaked from the light touches I have received.\"\n\n\"You stick by me unless I hand your leash off. Understand, you belong to me. Tonight, I am going to wreck you!\"\n\n\"YES Master! I belong to you.\"\n\nI sipped my drink taking in the costumes. I was surprised at the high quality of the workmanship in most of the regalia around me. Was this a yearly affair or had they hired a crew of seamstresses and cosplayers for the party? The variety was as impressive as the skill that went into the costumes. There were people dressed in Victorian Era garb, others from the 1920s, and a majority attired in costumes depicting characters from various popular video games and Japanese Anime. It was a colorful display to say the least. I wondered how long the costumes would last before the hunger broke loose and engulfed everyone. As if that were her cue Isix appeared wearing a gown of radiant silver and about her waist a belt of crystal and hard light binding it together. Crowning her head, she bore a matching diadem of gems and living radiance. Everyone's attention was on the stunning beauty of the Osirin unveiled.\n\n\"Are you enjoying yourself,\" Tess Masters asked appearing suddenly at my side. \"Ooh, you have an adorable toy with you. Can I have a taste later?\"\n\n\"If you behave,\" I replied instinctively watching her response closely.\n\n\"Pity,\" Tess whispered. \"You only have one collar.\"\n\n\"I don't need a collar.\"\n\n\"MMM, no you don't... I would like another...\" She replied before falling silently suddenly. \"I don't believe it. She actually showed up.\"\n\n\"Who showed up?\" I asked Tess as she drifted away from me towards a woman dressed in strategically placed feathers.\n\n\"La Mia... La Mia Dameus, she is the leader of the followers of Laensash. Pagan goddess of pleasure and pain.\"\n\n\"It sounds like a cult to me,\" I said just as La Mia broke free of her admirers.\n\n\"Ah, you must be discussing me.\" La Mia purred as she turned towards me. \"MMM... who is this?\"\n\n\"La Mia I'd like you to meet Greg Robinson.\" Jon said in introductions appearing behind her.\n\nThe pale skinned woman offered her hand and I took it but the moment of contact left me feeling slimy. I kissed her hand to remain polite but let go as quickly as possible. I felt like I was thirteen again and caught masturbating by my mom. I looked at her even as she examined me. Her eyes were narrow, angled and the color of obsidian. Her black feathered mask obscured her features. Was she Asian? She was thin enough but she had round hips and generous breasts, and long athletic legs. La Mia certainly was attractive on the outside but it was the inside I was distressed over. \n\nI almost missed the psychic contact. It was like ground fog shifting to water flowing over my mind seeking entrance. I fashioned a smooth steely barrier. The water would not be denied and renewed its assault. I lowered the temperature of the sphere until the water froze and I sent of tiny charge of electricity back to its source. I got a brief glimpse into her mind. La Mia took a step back and brought her hand to her mouth. Her serpentine smile was gone. She frowned and turned away without another word.\n\n\"I've never seen that before,\" Jon said watching La Mia's ass as it wiggled. \"A beautiful woman walking away from you.\"\n\n\"She is grave news and if you want my advice I'd stay away from her.\" I said the party mood crushed by the strange woman's appearance and psychic attack.\n\n\"Care to share why,\" Jon asked instead of simply blowing me off.\n\n\"She tried to read my thoughts. I kept her out and got a glimpse inside of her head.\"\n\nI decided to leave what I had seen in her mind to myself. There was no reason to spoil anyone else's night. I tightened my grip on Rhea's leash. I decided to mingle some and perhaps that would improve my night. There was plenty of alcohol being served by scantily clad young people. I will give Jon this he knew how to throw a party. I could feel Rhea's hunger rekindle when a particularly handsome young man offered her a drink. Rhea didn't speak but lightly tugged on her leash. I nodded and she accepted the drink. As we passed through small groups of guests they asked if they could touch my pet. I nodded as I leisurely sipped my wine. I could feel Rhea's movements as she was caressed and touched. One of the men began to tug her panties to the side when I grabbed his wrist and squeezed lightly.\n\n\"I said touch not grope,\" I said coolly and he apologized profusely.\n\nI let go of him and the other guests quickly learnt that while I didn't mind a few casual touches anything more would not be tolerated. We continued moving and catching up with people that I knew from the states. They were happy to see me up and around. I heard a ton of gossip about the new administration. I was surprised at how well Lydia, the POTUS, was being received. She had created a nonconfrontational atmosphere that hadn't existed in decades. I was proud of her. The conversation turned to the launch of the orbital ring and a successful deployment of the Spiderbot. It was a dream of NASA to be able to clean up the space junk orbiting the Earth. Nick had made that possible. It was an autonomous drone that sought out and snared dead satellites and using nanotech to break them down to usable components for the International Space Station. It might take a decade or more for the drone to finish its task but what had once seemed impossible was now at our fingertips. \n\nThe gentile senator from Massachusetts appeared wearing a flapper dress from the 1920s. She had a drink in one hand and was gesturing quite enthusiastically with the other. She spotted me and waved me over. I was approaching when she fell silent and her face lost color. It was another psychic chill. I looked around for La Mia but she was nowhere to be seen. I forced myself to move slowly as I scanned the crowd. There he was dressed like the pharaohs of old. Jon and Nyarlathotep appeared to be in a heated discussion. I placed myself between Nyarlathotep and the others. I was hesitant to hand off Rhea's leash to anyone but I was equally afraid of the dark-skinned man. I watched the interaction between the two and knew that what Nyarlathotep was wearing wasn't a costume but his robes and regalia of office when he was Pharaoh of Upper and Lower Egypt. \n\nA sudden memory rose to the surface. Steve had encountered the enigmatic figure before, ages ago or was it a millennium from now. I was standing upon a twilight world where the remnants of structures littered the landscape. I looked up at the sun and its light was diminishing as I watched. I knew from Steve's memory that Nyarlathotep had hurled this world away from its companion star. The world darkened as a fell shadow stretched over the immediate area. I turned to face the thing casting the shadow. My mind tried to process the biological nightmare before me but it was so alien it defied the limited references in my mind. Even with the myriad shapes and forms that life takes upon the earth my mind was unable to process the cyclopean creature before me. I could make out three titanic legs striding over the necropolis towards me. The outline of the thing squirmed and writhed like a mass of gigantic worms. I knew from Steve's memories that this was but one of ten thousand horrid forms that Nyarlathotep could manifest. The dread I had felt before was nothing compared to my new-found terror. The memory ended and mere moments had passed at the party. My first task was to throw up the full strength of my mental defenses. I couldn't let the once pharaoh know I suspected him of being anything but human.\n\n\"Master, are you alright?\" Rhea whispered her lips brushing my ear lobe.\n\n\"I will tell you later. Stay away from the pharaoh no matter the cost.\"\n\n\"Yes Master,\" she replied.\n\nNyarlathotep approached and I felt the icy touch of his mind upon mine. I held my ground and he nudged with more force now but found no footing. The seer uniform acted as psychic armor. It stood between the Crawling Chaos and myself. He raised an eyebrow and pushed harder still as his thoughts became like smoke seeking to slip past my defenses. I found a fresh wellspring of strength when I thought of my daughter and Rhea. The thing, clad in human form, grew weary of my defense and threw a great portion of his might at my mental defenses. I was sure they would fail and I would drop lifeless or insane to the floor. The barrage of images, scents and sounds formed a torrent of utter chaos but somehow, I withstood it. Infuriated the pharaoh stopped his attack and switched tactics. He stepped close to me and sniffed the air. He smiled and stepped back.\n\n\"You have been near that traitorous bitch.\" The Crawling Chaos said and I nodded. \"She thinks she can hide in here. She is wrong.\"\n\n\"I don't know where she is. I found her touch repellent.\"\n\n\"I bet you did,\" Nyarlathotep laughed. \"Her goddess and you have history boyo. Fear not, you are safe from me tonight. I am here for the woman only.\" He began to turn but stopped and spoke once more. \"You are far stronger than I expected, good. I hate being bored.\"\n\nHe sniffed the air a few times and like a hound caught her scent and left me shaking. Rhea touched my shoulder and I looked back at her. I could see the fear in her eyes. I turned and laid my hand on her cheek. She leaned against my hand and I urged her to calm. The renewed tranquility was shattered by a woman's scream and the sound of breaking glass. The next sound was the laughter of Nyarlathotep. It was something that would haunt me to the end of my days. The air warmed and I realized the thing in human form had departed the mansion. I let out a sigh of relief and found my shoulders drooping as the tension left my body. Jon appeared and he looked pissed. I felt his mind reaching out to the psychic jewel in his staff and a heartbeat later the memory of La Mia and Nyarlathotep had been erased from his guest's minds. All of them but me, I appeared immune to the stone's power.",
        "\"I am sorry Greg I tried.\" Jon said as he snatched a drink from one of his servants.\n\n\"You did what you thought best.\"\n\nThe stench of fear had been purged from the guests. The hunger I first sensed had been restored to its proper level. I adjusted my grip on Rhea's leash and walked her towards one of the buffet tables. There was a tray of fresh fruit. I positioned Rhea next to me and fed her from the tray. Her mouth snared my fingers a few times driving away the last vestiges of my encounter with the once pharaoh. I was here to relax and enjoy myself. After our light snack, we visited the various rooms where the guests were hanging out and building up the sexual tension. I let men and women touch, pet and caress Rhea. They could do that all they wanted but I was the only one fucking her tonight. I had plans on making her scream tonight at the top of her lungs.\n\nWe mingled, wandered and I saw that Surfer was trying his best to experience the human condition. I also noticed that Jon's mother had taken a fancy to him. I thought she would be the perfect woman for him to lose his virginity to. Wait, was he even able to have sex? How accurate was this silicon shell that Nick had fashioned for Surfer? This was going to be a very interesting night for everyone involved. Rhea and I passed the doorway to the room that La Mia had used to make her escape from Nyarlathotep. The French doors had been flung wide with such force that the glass had formed a kind of angled debris field. One of the staff was still sweeping up the fragments while two others were removing the broken doors from their hinges. \n\n\"Do you think she got away?\" I asked Rhea and she looked at me puzzled.\n\n\"Did who get away?\"\n\n\"Never mind,\" I replied and made for the back of the house where a dozen or so people were enjoying the view of the garden.\n\n\"Gregory Robinson,\" a familiar voice called out. \"How the hell are you doing?\"\n\n\"Tom... holy shit dude what are you doing here?\"\n\nI guided Rhea over to one of the guys I went to college with. I introduced them and Tom didn't miss the collar Rhea was wearing or the leash she was on. Soon we were sharing war stories and reliving a time that seemed like a lifetime ago. While I had the benefits of J'Nai physiology to keep me at my physical peak Tom had aged and badly. The drugs, women and stressful life had taken their toll. While we were only a year apart he looked a decade older than his mid-forties. I tried to hide my concern but he knew me too well.\n\n\"Don't worry about me,\" Tom said as he brought his glass to his lips.\n\n\"How long?\" I asked and that brought a smile to his face.\n\n\"Six months... if I am lucky. They didn't diagnose it until it was too late. I am here doing my farewell tour. I'd like to say it's my bucket list but I scratched that off years ago. I have lived an interesting life.\"\n\nWe made toasts to his health and to friends that had already passed. The list of the deceased was surprisingly long. We had lived like we were immortal back in college. For all I knew now I would live thousands of years barring a violent end. I had achieved what we only dreamed of as kids. I wasn't sure I deserved it. The guilt rose up and I felt my joy slip through my fingers again. Tom laid a hand on my shoulder and shook his head.\n\n\"I didn't mean to bum you out Greg. I did this to myself. You take that lovely lady of yours and love her for however long it lasts. There are no guarantees of a tomorrow. Who the hell is that?\"\n\nI followed his gaze out to the garden where La Mia appeared out of the shadows. She was wearing a new costume and an expression of grim determination. I went to intercept her before she entered the mansion. Rhea had no choice but to follow. The self-pity disappeared in a haze of rage. I had touched her mind and knew who and what she was. I was not going to let her harm any of the guests. We met twenty feet or so from the patio. La Mia seemed about as upset as I was but for a completely different reason. She had a dark god stalking her.\n\n\"How did you elude him?\" I asked barring her path.\n\n\"None of your damn business,\" she snapped. \"Who the fuck are you?\"\n\n\"I am the one telling you to turn around and leave.\"\n\n\"Greg, who is this woman?\" Rhea asked her words slurring.\n\n\"I am La Mia and I go where I will, Greg.\"\n\n\"Not tonight,\" I said throwing up a mental barrier between La Mia and Rhea. \"Try that again bitch and I will burn out your higher brain functions.\"\n\n\"Ooh, is that foreplay Greg? You have no idea who you are threatening...\"\n\n\"Moritai,\" I growled firing a tendril of psychic energy that she barely deflected.\n\nLa Mia took a step back and her entire demeanor and body language changed. Her hands formed claws as she raised her mental defenses and prepared a counterattack. I felt that wellspring of psychic energy and drew from that as I swatted down her guard as if she were a mere apprentice. I dove into her unprotected mind to find out why Nyarlathotep was so interested in her. I paralyzed her muscles to keep her from physically assaulting me while I deep dived her psyche. She had come to Earth recently from some fifteen thousand light years away. The world was ancient, burnt out and nearly abandoned by its population. It was on this near husk that Moritai survivors had created a base of operations. They were the fallen among the J'Nai that had chosen to worship the dark goddess. They had continued the corrupt practices and spread the cult to any world they happened upon. One such world was dedicated to the Crawling Chaos. She had converted the entire population to her cult. Nyarlathotep was furious that a mere mortal would dare such a thing. La Mia had fled to Earth to hide among its population just as the J'Nai had done millennia before.\n\n\"I almost pity you.\" I said as I withdrew my control and left her gasping for breath.\n\n\"Fuck you,\" she growled as she wiped the tears from her eyes. \"I will destroy you and anyone you hold dear!\"\n\n\"I could simply switch you off,\" I said reentering her mind without any trouble. \"Is that what you want?\" I asked as I pinched off the blood supply to her brain.\n\n\"Greg... enough! She is my guest!\" Jon's voice cut through my rage. \"She is why I am leaving!\"\n\n\"Fine,\" I said as I processed what he said. \"Stay away from me and mine or I will make you beg me to kill you.\" \n\nWhy was he doing this? He had his reasons and I would just have to accept it. La Mia stumbled as I yanked my mind from hers. Jon caught her and held her. Rhea touched my thoughts before I could hide La Mia's identity from her. The rage and terror rose up and threatened to overwhelm her. I pulled her close and took her into my arms. I told her I would protect her and to leave the fallen one to Jon. She reluctantly agreed but knew that I would die before letting any harm befall her. I raised one of my hands up and snatched a fistful of Rhea's hair and pulled.\n\n\"Who do you belong to?\" I growled.\n\n\"Oh god... I am yours...\" Rhea cried out in a perfect blend of surprise and arousal.\n\n\"That's what I thought,\" I said loud enough for anyone nearby to hear and that included the spectators watching from the back of the house. \"Come on there is a bottle of tequila with my name on it.\"\n\n\"Thank you, Greg,\" Jon whispered as he helped La Mia stagger into the house. \"Well played.\"\n\nThe group parted and began clapping as we walked into the house. They believed it was a bit of roleplaying and that was fine by me. I wasn't kidding about the bottle of tequila though. I needed something to take the edge off. The night had not gone according to plan. I was supposed to relax not put out fires and be psychically assaulted twice! Rhea followed behind whispering all manner of lewd suggestions in my ear. I settled in a seat by the bar and let Rhea sit at my feet. She seemed quite content to observe the other guests as I emptied the bottle of tequila shot by shot. I toasted to many things and last among them Asuryan, the Phoenix King. Rhea gasped when she heard the toast.\n\n\"Master, you do him wrong by using his name like that.\"\n\n\"Have you ever met him?\" I asked and the color drained from Rhea's face.\n\n\"No, he was gone long before I was ever born. But I remember every song, every poem and every dance that honored his name.\"\n\n\"You know the Lincalan then,\" I asked and she shook her head. \"What have things come to when the Song of Light has been forgotten.\"\n\n\"You are drunk Master.\" She said being oh so observant.\n\n\"If I sing it for you will you dance for me?\"\n\n\"I would gladly dance for you Master.\" Rhea said getting to her feet. I removed the leash and gestured for a second bottle of tequila. \"Once you begin I will follow your lead.\"\n\nI cracked the seal on the bottle and sang the first syllables of the song. The song drew power onto itself and soon Rhea was caught up in it. Her body sinuously shifted and moved as the guests made room for her. I sang louder and Rhea moved with perfect synchronicity. The song and the dance merged into a single performance. Her dance fed my song and I poured all my energy back into dance. The guests were held in rapture barely moving and unable to take their eyes from Rhea's mercurial form. Even I was unable to tear my eyes from the dance. She had become the incarnation of Asuryan's spirit. Once again, I felt unworthy to be her lover. The song reached its end and so did the dance. The applause roared in my ears. I poured a shot and carried it to Rhea. It was my turn to be on my knees before the love of my life. She took the glass and pressed it to her lips. Rhea sipped the shot thoughtfully and once it was empty returned it to me.\n\n\"That was one hell of a performance 'Mr. I've Never Played a Guitar Before'.\" \n\n\"You never told me your name,\" I said to the lead singer of the band. \n\n\"It is Sarah,\" she said as she offered me a hand up. \"I remember you now. You are the first person to pass through the gate. But you were in a wheelchair when I saw you on the television. I hope you are feeling better now.\"\n\n\"Well Sarah, I feel better than I have in years.\"\n\n\"If you ever want a change of careers look me up,\" Sarah said handing me her phone number. \"Hey, do you, feel up to playing again? We will back you up.\"\n\n\"Please Master... play for me.\" Rhea purred in my ear.\n\n\"How can I refuse two beautiful women?\"\n\nRhea and I followed Sarah to the music room. A few of the guests that had heard me play before began to clap. There were murmurs of people I knew that hadn't heard the previous set. I took up the same guitar and sat on the stool provided for me. Chairs had been set up six rows deep. Rhea took up a seat in the front row along with Cindy and her new friend Oz. There was an empty seat next to Rhea that seemed to be set aside for someone. I picked out three songs and asked the rest of the band if they were okay with my choice. They eagerly agreed and took up their instruments while Sarah grabbed her microphone. I struck the first few chords and the others jumped in. As we played the first song two hooded figures appeared slipped into the music room and took up spots on the floor in front of the band. They had their heads bowed so I couldn't see their faces. I wondered if they were Osirins like Isix. I ignored them and focused on my playing. \n\nThe next two songs went off without a hitch and I handed the guitar back to its owner as the crowd clapped and cheered. Rhea patted the seat next to her and was smiling. I felt I was missing something again. Sarah reached down and picked up a violin case. She opened it and took out her instrument. I guess she wasn't just a vocalist. The energy in the room changed and the hunger I had been sensing went into overdrive. I wouldn't learn until later why it had become so intense and who was the source. I should have known. Rhea remained silent and her thoughts were cloudy. She knew something or maybe she even knew who the entertainers were. Let her keep her secrets for now. More people were beginning to move into the music room. The band was preparing for the next set and there were two hooded figures sitting on the floor in front of them. The lust radiating off those two was off the charts. \n\nI was about to sit between Rhea and Isix when I spotted a familiar figure standing in the music room's doorway, La Mia. I ordered Cindy to keep a hand on Rhea's leash before I walked towards the pale skinned woman. I locked eyes with her and attempted to touch her thoughts but her defenses were up.\n\n\"You have recovered,\" I said wondering why she was blatantly standing here. \"Aren't you worried the Crawling Chaos will return?\"\n\n\"His attention has been diverted elsewhere. For now, I will try and relax before we leave. I am sorry to see an end to Jon's parties. This one looks like it will be the best one yet.\"\n\n\"Why are you here, on Earth I mean.\"\n\n\"The last world I saved was destroyed by Nyarlathotep.\"\n\n\"By saved you mean corrupted. You turned them away from Nyarlathotep.\"\n\n\"I brought them into the graces of the androgynous one. They were happy. They embraced the flesh. Then the Crawling Chaos returned and flew into a rage. I slipped away before he flung the planet out of its orbit and into the depths of interstellar space. What? That triggered something, were you there?\"\n\n\"After a fashion, yes I was there. I saw Nyarlathotep in one of his non-human form. It was terrifying.\"\n\n\"I don't doubt it. I will be gone by morning. I have time enough to carry out my duties as the Angmora one last time.\"\n\n\"Angmora... Iron... Pain... no not pain... Masochist? You are the Iron Masochist?\"\n\n\"Very good,\" she said as if I were a student of hers. \"My pain enriches the lives of others. Do you want to hurt me Greg? I'll let you. Bring your pet and I will teach her what it means to be subservient. You had better get back. You are holding up the show. I'll stop by later.\"\n\nI looked over at my shoulder and sure enough the band and the hooded figures were staring at me. Most of the audience was looking at me as well. I blushed and gestured apologetically. I mouthed the words 'I am sorry' to everyone before taking my seat. The lights dimmed and the musicians took up their instruments and began to play again. I didn't recognize the song but I liked its breathless Blues melody. The hooded figures got to their feet and began to move and sway with the music. I wondered if they were simply dancers or maybe something more. I watched the woman on the left undulate and there was something distinctly familiar about her movements. The gal on the right mirrored her perfectly and I do mean mirrored. If the dancer on the left raised her left arm then the lady on the right raised her right arm. They reflected each other's steps perfectly.\n\n\"Amazing timing...\" A woman gasped behind me.\n\n\"I hear one of them took a break from a Broadway musical to be here.\" A man replied to her.\n\n\"Jon must have some considerable influence to have 'her' do that.\"\n\n\"Oh no, it's not Jon she came to dance for it is some guy named Greg.\"\n\nI felt my skin flush with color as I made the connection. There was only one person I knew who fit that description. The ladies pulled down their hoods and I smiled when I saw Shannon and Janessa standing there. The robes pooled at their feet and I clapped when I saw the traditional belly dancing costume. The melody changed and it became a more dynamic with the bass and drums taking the lead. The girls broke off and began working the crowd. Shannon took the right side of the room and Janessa the left. Rhea's hand settled on my thigh and not so subtly began caressing me. I kept my eyes on the dancers while the redhead got my cock iron hard. Isix unzipped me and took my cock out. I nearly panicked as being so exposed in front of friends and strangers. Rhea soothed me with her thoughts as she and Isix took turns stroking me as the girls danced. I noticed a certain pattern to the girls as they teased the men and women in the crowd. They spent the same amount of time but were slowly converging on my position.\n\n\"I've been set up again,\" I whimpered.\n\n\"Guilty as charged,\" Rhea groaned as she gave me a slow sensuous hand job. \n\n\"Ooh...\" the lady behind me moaned. \"He's freaking huge!\"\n\n\"She's jacking him off so damn slow.\" A man said. \"I would be moaning like a whore.\"\n\n'My ass still belongs to you,' Cindy sent silently but not just to me but everyone within her range of transmission. In this case the entire mansion and with her thoughts came her unbridled hunger. 'I want you inside me again.'\n\n\"Let's see if we can inspire some noise lover.\" Rhea moaned as the effects of Cindy's thoughts took hold.\n\nThe first crack in the ice had formed. A ripple passed through the audience as Janessa and Shannon reached me. Janessa licked her lips as she dropped to her knees. Shannon mirrored her again and the people seated behind me let out sounds as if it were a firework display. There were oohs and ahs as the girls shared my cock. Janessa licked the underside while Shannon took the head between her lips. There were more lewd sounds filling the air now as audience participation took on a whole new level. I had never been to an orgy before but that is exactly what this seemed likely to erupt into. Rhea watched and waited patiently. Janessa removed one of the silk scarves from her waist and wrapped it around the base of my cock. Shannon giggled and using only the tip of her tongue lashed the head of my dick. I was shivering even as the lady behind me demurely asked for silk to pleasure her man. This entire event had been carefully choreographed all the way down to the silk scarves.\n\nRhea plucked silk from Shannon and Janessa and handed them out. I looked around the room and women were in front of their men sucking, stroking and capturing erections between their tits. Shannon seeing my eyes widen as a particularly ample woman titty fucked her partner took up position. She unhooked her bra and snared my cock between her breasts. Janessa lost her belt of scarves, hopped up so she was standing on my thighs and ground her soaked pussy against my face. Rhea and Isix helped balance her as my tongue lashed her naughty slit. I placed my hands on her perfect ass cheeks and held her still. It was awkward as hell but it worked for a little bit. After the third time that Janessa nearly lost her balance Isix ordered a halt. The five of us got to our feet and looked at the rest of the audience. It appeared as if things were about to get out of hand. It was time to move my party into a quieter location. \n\nI led the ladies out of the room and up the stairs to my bedroom. Isix hung close eager for more time with me and I remembered Rhea's words about Osirin lovers. I opened the door, let go of Rhea's leash and entered closing the door behind me. Shannon and Janessa took to the bed while Isix stayed close to me. Rhea waited for me her body noticeably shaking. I pointed to the floor and she dropped to her knees. I slid my fingers into Isix's long mane of hair. I pulled her down next to Rhea on the floor. The Osirin never hesitated. She joined in with Rhea in sucking me off. I let them coordinate things and wasn't disappointed. I learned early on that Osirins do not possess a gag reflex. Isix was taking my cock to the base every damn time.\n\n\"Oh shit...\" I cried out as they quickly ratcheted up the pleasure they were giving me.\n\n\"His face is so red,\" Shannon commented. \"Is the silk still tied around his cock?\"\n\n\"Yes,\" Whimpered Rhea between her turns pleasuring me.\n\n\"It is so nice being able to watch them suck him off like that. Do you think I should get my ass ready for his cock?\" Janessa moaned.\n\n\"If I know Greg we are all going to walk funny by the time he is done with us.\"\n\n\"You think he can handle all four of us?\" Janessa asked as she got onto her back and began playing wither her pussy and ass.\n\n\"Handle... sweetie he hasn't seen us in how long. He is going to wreck us.\"",
        "I felt my first orgasm building fast as the girls tag teamed my erection. It was when I didn't climax that I realized the significance of the knot they had tied around the shaft of my cock. It was acting like a cock ring. I wouldn't be able to cum until they untied it. Isix was still taking me down her throat when everything went dark. Someone had placed one of the silk scarves over my eyes. It was tied off and I was led to the bed. Yeah, they had planned this beforehand. My costume was stripped from me and soon I was prone on the bed. Two of them took my hands and placed them between their legs. I teased them as the other two licked me to the point I was shaking. Shannon was right. I was going to wrecked all of them before I was done.\n\nWhat followed took me by surprise. All four of them began kissing me. One of them was planting soft kissed along my neck while another teased a nipple with lips and teeth. Further down someone was licking the underside of my cock while her partner licked and gently massaged my balls. The lady kissing my neck took my right hand in hers and began licking and sucking on my fingers. The two below my waist were whispering to one another. I felt a shift in the bed as one of the girls straddled my waist. Her partner held my cock for her while she teased the head of my dick with her wet slit. I groaned as the tip slipped inside of her and stayed there. The teasing increased as she remained where she was. She bounced a little but never let me sink too deep for now. \n\nThis escalated the others as whoever was on my left side placed my hand on her breast. While I teased her the gal on top of me lost the battle and sunk down slowly until she was impaled. Damn she was tight. I cried out as she began moving. Somehow, she was squeezing with her internal muscles as she moved up and down. The scarves came into play again. The evil little shits tied my extremities to the posts of the bed. I was blindfolded, tied, and at their mercy. Whoever was riding me picked up her speed and the force of her hips slamming down increased too. The others urged her on as her body began to shake and her voice got louder and louder.\n\n\"She's going to blow,\" Rhea said her voice low and sensuous.\n\n\"Wow, she is really going all out,\" Shannon moaned.\n\n\"Yeah, I can't wait until it's my turn,\" Janessa whimpered.\n\nThat left Isix riding my erection. The Osirin stopped suddenly as she cried out and fell atop me. Just then the door opened and closed. Whoever had walked in sat on the highbacked chair facing the bed. It was Rhea who addressed our visitor. I was surprised as anyone when she spoke to him.\n\n\"Surfer what are you doing here?\"\n\n\"I needed someone to talk to about my encounter.\" He replied in his nearly monotonous tone. \"Master Greg may I speak with you or would you rather I came back later.\"\n\n\"I don't mind Surfer... UNNNN... what's up?\"\n\n\"I just left Lady Masters' bedroom. She is sleeping peacefully. I believe I wore her out sir.\"\n\n\"You had sex with her,\" I asked not sure how accurate his current form was.\n\n\"Oh yes sir,\" he said showing the first true hints of emotion. \"I think I broke her Master... um Greg.\"\n\n\"Excellent news, so you can receive tactile input.\"\n\n\"Thanks to Master Nick I can. During the early work on the brain/machine interface he could record not just his experiences but all the tactile data as well. It is that data that allowed me to enjoy my time with that dirty little slut. Her words not mine Greg. She demanded that I called her all manner of demoralizing titles. I will recite them if you wish... slut, whore, slave...\"\n\n\"No Surfer that won't be necessary. Speaking of slave, Rhea get your ass to work.\" I ordered and Rhea mounted my erection. \"Unnn yeah... so how did you manage to interface with Jon's mother?\"\n\n\"She gave me the most amazing blowjob,\" Surfer said and I heard murmurs from Shannon and Janessa. \"I am sorry ladies. The memories of that experience are quite stimulating. No, you don't have to... oh that is quite pleasant. Yes, that is very nice Ms. Shannon. A part of my programming allows me to mimic and with the help of an algorithm I wrote to improve upon Master Nick's sexual technique. I can detect micro changes in a woman's nervous system. I know what they like and can quickly focus on and drive them to climax very quickly. The Lady Masters experienced approximately thirty orgasms before she begged for asleep. I lost count since some tended to blend into another at the end. I don't know if Greg would be okay with you doing that miss. UNNNNN... if you insist...\"\n\n\"Looks like you have fans Surfer,\" I said between grunts as Rhea worked my cock quick and deep inside of her. \"If the girls want to play who am I to deny them a unique experience.\"\n\n\"Very well, then I will take over miss and show you what I have learned.\"\n\nThe next sound to reach my ears was a surprised squeal from Shannon as Surfer took charge. It was Janessa that told me what was going on. Apparently, Surfer stood up and took Shannon with him. He was fucking her standing up and she was howling in pleasure. I began to wonder if I could match the flawless skill of someone like Surfer. Rhea's climax settled that argument a few moments later. It was Janessa's turn. She released me and when I removed the blindfold she was on her hands and knees with her ass cheeks pulled apart. Janessa knew I had a thing about tapping her ass. I knelt behind her and slid slowly into her back door. I glanced over and watched as Surfer's mirror bright cock moved in and out of Shannon. She was standing now as she leaned over the side of the bed. Rhea watched the two of us eagerly attack the girl before us.\n\nSurfer and Shannon cried out together and her body was shaking after her orgasm. Excellent job Surfer! He pulled out and I pointed to Janessa's head and he nodded. Rhea frowned as Janessa used her mouth to clean Surfer's cock.\n\n\"Greg, why is your erection buried in the young lady's rectum. Does it feel good for you both?\"\n\n\"Uh huh,\" Janessa grunted.\n\n\"I see. Do all females enjoy this?\"\n\n\"No, very few females actually enjoy this. Janessa tried it once and discovered she liked it.\"\n\n\"I appeared to have failed. The Lady Masters told me to 'tap her ass'. I was confused but now I understand. I will be going now.\"\n\n\"Surfer,\" Isix whimpered. \"Where are you going?\"\n\n\"The Lady and I have unfinished business. I am afraid Greg will have to take up the slack.\"\n\nHe left and I nearly busted out laughing. Poor me, I had to endure the hunger of four women. I pounded Janessa harder and locked eyes with Shannon, Rhea and Isix. They knew what it meant. I wasn't going to rest until all of them were exhausted. That was the beginning of a very long night. As promised I left four women wrecked, loved, and sleeping in my bed. \n\nI was in the shower when I felt the change in the air pressure as the door was opened. I heard the soft footfalls of bare feet outside the shower. I could hear her quiet yet labored breathing as she opened the shower door. She stepped in behind me and wrapped her arms around my waist. I shivered at how cool her flesh was. Whoever it was didn't reach out for my cock. She just placed her head on my back as I closed the shower door.\n\n\"Hello Singer, or do you prefer Voidsinger?\" La Mia asked as she pressed her breasts against my lower back.\n\n\"Greg will do. I forgot you said that you would stop by. Four women will do that to you.\"\n\n\"No doubt and still you hunger for more. You are a male after my own heart. Tell me Greg, does she satisfy that deep need in you to punish her? Or do you hold back because you don't want to hurt her?\"\n\n\"Why are you really here?\"\n\n\"I want to leave you with something...\"\n\n\"NO,\" I said halting her in mid-sentence. \"Why?\"\n\n\"I was born among the fallen. I never knew another life. I climbed the ranks until I received the blessing of the Eater of Souls. But you, you were born human and were manipulated into becoming J'Nai. Yet you have taken to the ways like a newborn. I envy you. When you touched my thoughts, you saw into the heart of me. I cannot abandon the Ambiguous One the same that you cannot forsake the gods that are no more. Only War and Dance survive and in the end who knows. Maybe War will grow strong enough to destroy the God/dess. A burden of greatness has been heaped upon your shoulders. In that we share a common destiny.\"\n\n\"The Crawling Chaos will find you and when it does the world you stand upon will become a burnt-out husk circling a dead or dying star. Its rage will be uncontained and he will make you suffer an eternity of anguish. You will be separated from your precious god. In the end, was it all worth it?\"\n\n\"I could lie and say yes. While I don't fear death, I am terrified of what follows. So no, it was not worth it. In the end, I will curse everyone and everything I ever loved. Now hurt me so that I can add your name to the long litany of cruel masters I have served.\"\n\nI gave her what she desired. The bruises were only the visible marks I left upon her. My fear and my hate burned her inside and out. I left her a burnt-out cinder and she thanked me. I had, in my own way, cauterized the emotional bleeding she had been suffering from. La Mia staggered from the bathroom and hobbled back to Jon's bedroom. Rhea found me sitting in the shower with freezing water pummeling my flesh. I was too numb to feel it or her gentle touch. I had done terrible things and she had been right. I would never forget our time together. While humans share things by talking about them. The J'Nai literally share the experience by remembering it while linked without another mind. Rhea wept after our sharing and held me close enduring the water for my sake.\n\n\"You granted her request.\" Rhea whispered. \"I would have killed her. It might have been a kindness to take her life here.\"\n\nProject Solaris:\n\nThe second trip through the gate was as bit anticlimactic. This time however I had not just Rhea accompanying me but Isix as well. Jon had pulled strings and gotten her a passport and American citizenship. She was thrilled to be traveling again. The flight to Florida was routine filled with emails, conference calls and tons of planning. Rhea was still recovering from our time at Windsword Manor. God's honest truth so was I. Those were memories I would hold dear for a lifetime. My attention was drawn from pleasant memories to my inbox. A portion of my emails were part of a search engine I had set up. The program would seek out any news article, blog, or video that dealt with unusual situations. The circumstances could involve anything from UFO sightings to odd natural events. There were several articles of unusual happenings worldwide. But it was the four articles about dead life stock, missing spelunkers as well as odd environmental events that caught my attention. They were all around Wyoming and near the borders of Montana and Idaho. I marked them for attention after my meetings at NASA.\n\nThe plane set down and we were greeted with an armed escort. I thought my meeting was important but not this important. Something was going on and the hierarchy at NASA hadn't let me in on it yet. I understood the whole security thing and this escort had my curiosity in overdrive. I kept it under wraps until they were ready to inform me. Rhea leaned close on the drive from the airstrip to the headquarters. We had reached a new level in our commitment to each other. Isix wore her hood and a holographic mask to hide her alien features. The mask was a parting gift from her former master. \n\n\"What do you think it is?\" Rhea whispered in my ear.\n\n\"I have no idea. Isn't that great?\"\n\n\"You are like a little kid.\" She said nuzzling my neck. \"You want to open your present and see what's inside.\"\n\n\"What can I say. I am spoiled.\"\n\nNick gave me the gig in Washington that led to this little assignment. Of course, it also led to a growing relationship with a certain POTUS. We arrived and the level of security just reached a whole new level. What the hell was going on? We were ushered by a fully armed security force that could have belonged to a presidential escort. We were taken to a fortified office building. We entered the elevator and took it down three levels. The elevator opened and Col. Daniel Jaxx was waiting to greet us. I shook his hand and followed him to a large conference room. Seated around the large oval table were some of the finest minds NASA had in their employ. Introductions were done all around and as I shook hands I pulled up their files and skimmed them. It was an interesting mix of technicians and astrophysicists. I took my seat while Rhea and Isix took up positions in the hall.\n\n\"Well now that Greg has arrived I can tell you the reason for this emergency meeting. For those of you that haven't worked with me before my name is Professor Druas Heart. I have been working the past few years running Project Solaris.\" He gestured and the projectors came online. \"This is an image of the original Venus probe. It was launched in 1970. Officially it was lost shortly before it was due to enter the orbit of Venus. It went off course and we lost all telemetry. We believed that it went off course or was hit by micro meteors and destroyed. We were wrong. It was August of 1973 when we received a weak signal coming from Mercury. It was the Venus probe. We reestablished communication and it began transmitting data packs back to Earth. Among those packs were images of a NSO or Near Solar Object.\"\n\nEveryone around the table began murmuring. A new image was projected above the center of the table. It was difficult to make out at first. It was distorted and that is what inspired the next five missions. A new kind of probe was developed with heavy shielding and cameras able to deal with the proximity to the sun. The images slowly came into focus and when it did the room fell silent. It was a perfect circle and inside of it was what appeared to be a massive asteroid. The asteroid could only be viewed from a limited angle and there was an alien structure attached to its surface. The last Solaris mission reached the asteroid and landed on it. The images we were viewing were a short video taken late last night. The probe had deposited a satellite that it could use to relay transmissions from the asteroid to Earth. \n\n\"Greg this is where you come in. We want you to talk to Nick and see about repurposing the Ares project to land on this asteroid instead. What do you think?\" Heart asked.\n\n\"Really... I believe Nick will jump through hoops to accommodate you. I will call him and make it official but I am sure he feels the same way I do.\"\n\n\"No,\" Heart replied. \"There can be no calls Greg. You need to meet with him in person. We can't take the chance of this being intercepted. This project has been classified level ultra violet. No one and I mean no one can contact anyone outside this group until the President gives the all clear. Is that understood?\"\n\nThere were murmurs of agreement around the table. I told them I would leave immediately. Now it all made sense. The increased security and the armed guards. I left the room as they continued discussing the details of the probe's discoveries about the composition of the asteroid. I carried a data crystal with all the pertinent data that Nick would need for changes to Ares. Rhea saw the spark in my eye and she smiled. She asked what was up and all I could say was that we were heading to Arkham. She accepted my answer and followed me to the elevator. Isix became just another shadow but her interest was as keen as Rhea's. Our plane was already refueled and the pilot ready for our flight to Massachusetts. I didn't say a word until the plane was in the air. I briefed Rhea and Isix all about the NSO and shared the images from the probe. Isix smiled and I knew that she recognized the anomaly.\n\n\"What is it?\" I asked.\n\n\"It is a gift. The Anunnaki left it behind for humans to discover.\"\n\n\"What kind of gift?\"\n\n\"It is a portal to another part of the galaxy. It is part of Earth's heritage.\"\n\nShe told me all about the ancient race of the Anunnaki. They seeded tens of thousands of worlds. Humans were the very last race to be seeded before they disappeared. That is why so many of the other races came here. They were curious about the possibilities of humanity. Her people, the Osirins, made it a pet project to observe the development of human society. I was stunned. I knew of the Anunnaki of course. There were plenty of memories of Steve encountering them in the distant past. They were a quiet people and had a love of their children. Humans were just the latest of the Anunnaki children. The sad truth is that many of the other races hadn't survived to become a space faring species. I feared that humanity wouldn't reach the maturity required to leave the Earth behind. There was just so much hate and fear for us to make the necessary transition. I suddenly thought, that didn't really apply to me any longer. I wasn't human any more. A part of me was saddened but a larger part of me was relieved. My genetic heritage could be traced along an entirely different path now. My task was clear though. I wanted and needed to help shape a future where the pettiness and anger can be left behind. I saw humans as snakes shedding the old skin and coming out healthy, new and eager for a fresh start. It wouldn't happen overnight but the optimist in me hoped it could happen. \n\nNick was on board his superyacht the Numenor. We transferred aircraft in Arkham. The three of us were now in a helicopter racing over the ocean towards the battleship sized luxury vessel. I had seen the uncensored specs on the Numenor and she was the pinnacle of nautical engineering. Because she was outfitted with two fusion reactors she never needed to stop for refueling. She could literally go on indefinitely. Her only limitations were the crew and its necessities. They did need to stop for food, drink and miscellaneous staples. Water desalinization was old tech for Nick. He had made his impact upon drought ridden areas of the world by providing a steady stream of drinking water. His company had built and provided for low cost desalinization plants worldwide. That alone had placed him in the history books as a humanitarian. He used his wealth like a freaking scalpel. He cut right to the point and armed certain plants with cutting edge weaponry to keep warlords from seizing those plants for their own ends. He was the darling with the UN and a dozen humanitarian aid organizations. Unlike other groups that begged for donations and provided little actual aid. Nick's kinder side, a group called Palm, provided help at no cost to nations and areas devastated by natural disasters. His open hand policy has been regarded as the model for nonprofit humanitarian aid. \n\nI pointed to the ship as it appeared below us. Rhea seemed nonplussed and I remembered she had been working for Nick longer than I had. Isix pressed her face close so she could see the massive ship. This was my first visit to the yacht while it could have been Rhea's twentieth. The helicopter set down smoothly on the helipad. We were greeted by Rhea's opposite number Nick's personal bodyguard Akira Kusanagi. She was as lovely as she was deadly. She informed us that Nick was training and would be available by lunchtime. I felt a series of surges of energy coming from the far end of the ship. I was about the ask Rhea when she touched my thoughts and shared one word, Chi. Nick was a student of Dragon Chi. He was learning how to harness his life force and use it in combat situations. Akira guided us to the observation deck and raised an eyebrow as she pondered whether it was polite to question me.\n\n\"It's okay to ask.\" I said and she bowed in thanks.\n\n\"Thank you, Robinson-san,\" she replied. \"I couldn't help but notice what a large Hara you possess.\"",
        "\"I am unfamiliar with that term.\" I said and let her explain instead of looking it up.\n\n\"Hara is a person's presence. Great warriors, skilled businessmen and politicians often have one thing in common, Hara. There are times when someone enters a room and you feel them before you consciously see them. I hope that is a sufficient explanation.\"\n\n\"Thank you, Kusanagi-san, I think I understand. Does Nick's Chi training strengthen his Hara?\"\n\n\"You are very observant,\" she replied grinning. \"The Dragon Chi is very dynamic. It is embodied in waterfalls, ocean waves and thunderstorms. It can also be found in a gentle rain, a ripple in a still pool... it is strong at times and equally gentle as is needed. Have you trained in the combat arts?\"\n\n\"I have as a matter of fact.\"\n\n\"I have tutored him.\" Rhea said just before she hugged Akira tight and held onto her. \"I have missed you so much!\"\n\n\"How is he treating you Sensei?\" Akira asked Rhea.\n\nRhea was Akira's teacher that was interesting. They walked off whispering to each other and I gave them the time and distance they required. I poured myself a drink and walked over to the starboard side of the deck. I could see Nick, dressed in just dark karate pants, going through a kata of some sort. My mind latched onto his movements and saw mistakes. The J'Nai training had taught perfection of breath, movement and thought. Nick was sloppy in all three. I opened the door and stepped out onto the deck. Nick noticed me and stopped. We walked towards each other and shook hands when we were close enough. \n\n\"I'm glad you accepted my invitation.\" Nick said and I nodded. \"Pretty earth-shattering stuff huh?\"\n\n\"Yeah, I guess you are worried about that...\" I said not sure how to approach his sloppy technique.\n\n\"Speak clearly Greg, I can see something is bothering you.\"\n\n\"Your technique is crap today.\" I replied wincing on the inside.\n\n\"Really,\" he said drawing out the word. \"You want to show me how it's done then.\"\n\n\"I didn't bring any...\" I began and Nick pointed to three lockers bolted near a set of stairs that led towards the rear helipad. \"Fine.\"\n\nI walked over and opened one of the lockers and found practice weapons in it. The one next to it held several clean uniforms. I stripped down and slipped into a pair of ghi pants. It was warm enough to forego the top. Nick and I squared off near the middle of the deck. I felt the girls' attention on me. Nick and I bowed to one another before taking up a ready position. My stance took Nick off guard. I could see his confusion and let him take the offensive. I easily sidestepped his opening strike. I stayed within his reach but he never got close to landing a punch or kick. He shifted tactics and tried for grappling. I let him get a grip on me and a moment before he would take my feet out from beneath me I sent him hurtling to the deck. I heard the girl's gasp in surprise.\n\n\"What the hell was that?\" Nick asked as he got to his feet.\n\n\"I could give you its name but is essentially a hip toss.\" I said as Nick looked at Akira for understanding.\n\n\"Okay tough guy show me what you got,\" Nick growled as he closed the distance between us.\n\n\"As you wish,\" I replied even as I felt his Chi manifest itself.\n\nNick cloaked his entire body in energy and I smiled as I launched a series of punches and kicks that landed squarely. The J'Nai were aware of harnessing life force. They called it O'Su or soul fire. The key difference in what Nick was using and what I manifested is that I could augment my O'Su with psychic energy. It was like adding nitrous to a high-performance engine. Nick was a blur as he attempted to block and turn aside my attacks. He failed at every turn. He wouldn't want me to pull punches so I didn't. A minute later he tapped out and admitted defeat. Akira looked at Rhea in stunned silence.\n\n\"He is my Sensei,\" Rhea whispered. \"I know it doesn't make sense. But I assure you it is true.\"\n\nThe five of us settled into one of the three hot tubs aboard the Numenor. Akira had an amazing body and I swear she liked the way I looked at her. Isix and her prehensile tail got her own amount of attention from Nick and Akira. Nick moved leisurely as the bruises appeared all over his heavily muscled body. Nick wasn't one of those businessmen that let themselves go with success. He pushed his body as much as he pushed his mind. We talked about the anomaly orbiting the sun and what it meant for the world. Nick's humor hadn't improved and he frowned a lot as I offered suggestions about altering Ares to fit the new mission parameters.\n\n\"Do it Greg,\" Nick muttered. \"I trust your judgement. Hell, you are one of a handful of people I could set lose and know that you'd have my best interest at heart no matter what.\"\n\n\"Tell him Kouryou,\" Akira whispered hiding a smile.\n\n\"Not in front of our guests,\" Nick said blushing. I had never seen him blush before. \"Fine... I was going to wait until Christmas but things are moving faster than expected. As you know as my Black Bishop you are my intermediary with other members of the Order.\"\n\nI looked over at Isix and Rhea uncertain about him mentioning the Order of Chthon in front of them. Rhea just grinned and moved closer. Nick explained seeing my panic and confusion. Akira and Rhea belonged to a sisterhood that served him, the Hidden Master. Isix belonged to another branch of that same sisterhood but she had served Jon Masters, the Sublime Master. She was aware of the mechanizations of the Order. The sisterhood had been established by one of Nick's predecessors as a kind of control mechanism within the Order. Members of the sisterhood were taken from daughters of the members of the Order. Today they were wives, lovers and daughters of the Order. They provided critical information to Nick about plans set into motion by members that could impact the security as well as the stability of the group. Nick had informed the other two leaders of the Order of my existence. They didn't know who I was only that I was the Hidden Master's go to guy. Little was different in my duties with the Order than it was for the Oval Office, the Pentagon and NASA. To keep my identity secret Nick had modified an existing technology just for me. He told me that it had been applied in London. The supposed empty cube had not been empty after all.\n\n\"Where the hell did you learn to fight?\" Nick asked and I looked at Rhea for her approval. She nodded as she sipped her drink.\n\n\"It is a J'Nai combat style. I learned through a kind of genetic memory. It is difficult to put into words actually.\"\n\n\"I respect that.\" Nick replied as he moved his limbs gingerly. \"I am glad the ship has one of the Stones onboard.\"\n\n\"Stones... what kind of stones?\" I asked.\n\nAkira cupped her hands together and offered me a sip of the water we were sitting in. I sniffed the water and it smelled strangely familiar. I took a drink and a surge of energy coursed through me. Where had I felt that sensation before? The energy stone in Jon's staff of office. The water I had hung suspended in after my near-death experience with the faulty gate. There was another memory at the edge of my perception. I tugged at it and a flood of memories hit me as the tapestry unraveled. \n\nI was on one of the Maiden Worlds. The suns hung near the horizon and I was practicing one of the many combat forms I had learned recently. I stopped and looked at my hands. They weren't Steve's hands they were my own. I felt a deep sense of familiarity with my own body. This wasn't one of Steve's memories this one belonged to me. How was that even possible? My instructor got to his feet and he looked concerned. He was a tall muscular J'Nai with hair the color of jet and eyes that shone like sapphires. He wore the uniform of a Solitaire. He was the leader of our troupe. We were the Dancers of Death an elite martial group that traveled the strands to aid in the defense of the other J'Nai worlds. I had shown great promise and the Solitaire had chosen me to take up the title and form a new troupe of my own. Another flash of memory struck. The decades I had spent among the J'Nai learning the arts of war from a dozen masters. I had honed the skills of the Totems first. They were the core troops that served the J'Nai war god. I listed them off and the traits that each of them held so dear. The Wraith had taught me stealth, movement and precision. The Spider had instructed me in the ways of perception, teleportation and sensing the presence of nearby strands. The Knight taught me honor, discipline and the importance of comrades. The Phoenix had taught me how to soar above the battlefield and rain down hell fire from above. The Scorpion had taught me face to face combat and the joy of victory. \n\nThe troupe did not follow the war god. No, they were the children of the trickster deity. They were the masters of camouflage, acrobatics and laughter in the face of death. They enhanced all the skills I had previously learned and honed them to absolute perfection. Whether it was hand to hand combat or firing a sniper rifle there was no room for error. I became a machine upon the killing ground and only after the battle was won did I allow my feelings to emerge. The troupes were clinical in their combat strategy and inhuman in the way they waged war. When we appeared, enemies broke and ran. We were a shadow that fell over our foe and left none alive when we passed.\n\nThe Solitaire and I sat across from one another and shared thoughts. My confusion rose but he soothed it with words and images. He told me that he expected this moment. It had been foreseen and prepared for. He explained that I had spoken with his remote ancestor and told her of a day when I would falter and need to have certain words given to me like some great gift from the distant past. He laid a comforting hand on my shoulder and explained.\n\n\"It was told to her and she passed it down through my family. A day will come when the Singer in the Void shall reappear. He will be like a child to our ways and you shall give him what aid he requests without hesitation. There will also come to pass a day where he seems to doubt his skills. You are to say onto him these words precisely. Relax. Breathe. It's going to be okay. I know you are confused but all I can tell you is this. You have touched six confluences of great power. They marked you deeply even though you were unaware at the time. Time falls away and space is no hindrance.\"\n\n\"That's it?\" I asked and my teacher and friend just smiled. \"I understand part of it but the rest may just have to sort itself out.\"\n\n\"Goodbye Voidsinger,\" he said frowning. \"It was an honor being your friend.\"\n\nThe world snapped back to normal. I was once more in the hot tub with Nick, Rhea, Isix, and Akira. They were staring at me and I lifted my hand and saw why. The back of my hand had a shimmering J'Nai rune tattooed on it. I turned my arm over and interconnecting runes covered it. I looked at my other arm, my chest and my legs. It appeared most of my skin carried a glowing rune matrix. My fingers, palms of my hands, bottom of my feet, genitals and face were free of the runes. I looked at Rhea for explanation but she seemed more in awe than fear.\n\n\"I have heard the songs of the Old Ones and their rune armor. It is a lost art now. The most powerful of our seers were tattooed in ancient times with those symbols and they aided them in many ways. That is all I know, but how? How did you get marked so Greg?\"\n\n\"I don't know.\"\n\nNick wisely decided upon silence. He could see how shocked I was by the sudden change. A moment later one of the crew appeared carrying an ice bucket with a magnum of champagne. Glasses were provided and Nick did the honors. We toasted to the future. It reminded me of the ancient curse. May you live in interesting times. The future was unwritten but I feared there was a rough draft out there somewhere. I managed several glasses of wine and a few shots of something a little harder. I stood naked on the upper deck of the Numenor watching the sun set. The sky was crimson but darkening as the last of the light faded from sight. \n\n\"Master... Nick wishes to speak with you,\" Akira addressed me from behind.\n\n\"Master?\" I said turning to face her. \"He is blessed to have you in his life.\"\n\n\"As you are to have the Lady Rhea.\" She replied as she held up a navy-blue robe for me to slip into.\n\n\"Yes... without hesitation... I... I don't deserve her...\" I muttered feeling the weight of history upon my shoulders. \n\n\"Liar, you deserve each other.\"\n\nI smiled and followed her to Nick's cabin. It was huge and possessed every luxury a man could want and a few that were just over kill. Nick was wearing a black silk kimono. It bore the seal of the Kusanagi clan. We regarded each other and we both wore the same expression. Akira left me alone with her master and lover. I sat opposite of my employer and waited for the boom to fall but it never did. He offered me a bottle of water and a smile reached the surface despite my feeling sorry for myself. \n\n\"I don't know how the hell that happened,\" Nick said breaking the silence between us. \"I know you have no fucking clue but it means something. Greg, I need your help now more than ever.\"\n\n\"All you have to do is ask.\"\n\n\"I am asking. I need someone to take the load off the Hidden Master. You are that guy. I have created a piece of tech for just that purpose. Okay that is not entirely true. I have adapted some old tech for that purpose, very old tech. This falls under a real trust issue. You can walk away and I won't blame you.\"\n\n\"Just when things are getting interesting, hell no. What is it and how does it work?\"\n\n\"Have you ever heard of the city of Iram?\"\n\nHe told me all about his discovery of a lost city. How he had discovered ancient tech that likely came from Atlantis. One of those technologies was a kind of psychic parasite. After years of intensive study and manipulation he could program the parasite for his own purposes. The problem with it was that it failed to bond with human physiology. I nodded at this point. He felt after further research that the Atlanteans may have been J'Nai refugees. So, I was a viable subject to field test the tech. He sent me a comprehensive file that detailed everything the records spoke about the parasites and their hosts. I drifted into the digital ether and read every aspect of the file twice. If he had managed to reprogram this thing the benefits were worth the risk.\n\n\"The parasite might be what triggered those runes to appear. She is bonding on not just the psychic plane but the physical as well. Okay, let's see if she likes you.\" Nick said getting to his feet.\n\nI followed him below decks to a portion of the ship that required Nick's retinal print to enter. My heart was thumping in my chest and I was nervous about this little decision. My life was changing and faster than I was ready for. But if Nick trusted his technicians I had to as well. Lights came to life automatically and the hallway was noticeably cooler than the rest of the ship. We reached a metallic door that bore the warning 'bio hazard authorized personnel only'. Nick opened the door but I was the only one that entered the room. The center of the room was dominated by the gleaming metal cube four feet on a side. The top of the cube split open and a glass cylinder rose from the darkened interior. There was a dark blue fluid inside of the cylinder. Nick's voice came over the loud speaker and startled me. I looked over my shoulder.\n\n\"The contents of the cylinder are the final bonding agent for the parasite. Without it, well your body will absorb it and pass it harmlessly through your system. You can turn back...\" he said even as the sound of shattering glass filled my ears.\n\nI turned as the fluid rushed towards me just before I blacked out. I was cold. If I dreamed I had no recollection of it. My tiered consciousness recorded every detail of the bonding process. I wished it hadn't. It was a nightmare and the feeling of suffocating lasted far too long. I woke up on the floor of the bio hazard room. I opened my eyes and stared up at the LED lights above me. There was no pain. I sat up and looked at my arms, legs and chest. I couldn't see that anything had changed. I slowly got to my feet and saw that the shattered container had been returned to the bowels of the cube. I turned my head and looked at the thick bullet proof observation window. Nick and Rhea stood behind it. Nick's expression was neutral while Rhea looked like she wanted to murder Nick where he stood. \n\n\"Are you ready Greg?\" Nick asked over the speakers.\n\n\"Ready, ready for what?\"\n\n\"This...\" he said as he pressed a series of buttons.\n\nI heard the deep whoosh and saw the flare of blue flame as the entire chamber was engulfed in hell fire. I tried to cover up but it was useless. I felt warm but nothing more than stepping onto a hot beach in the middle of summer. I could detect the acrid chemical smell in the air but my lungs and flesh remained untouched by the inferno. The fire died away and I touched my hair fearing it had been removed by the flames but it remained as unscathed as the rest of me. I opened my eyes and saw that my flesh had a layer of ash covering most of my body. I rubbed a spot on my arm clear and the skin beneath appeared clean, smooth and hairless. The blaze had seared off all the hair from my arms, legs and genitals. I flinched a second time when freezing water fell from the fire suppression system built into the ceiling. I rubbed my body clean and realized much of the ash was in fact the remnants of my robe. I touched my face and was happy to find my eyebrows intact.\n\nThe water drained into the floor. A moment later I heard and felt the floor vibrate as the drains closed. A new sound filled the chamber and I stared in disbelief at Nick as the air was removed. I thought at any moment I would be gasping for breath but it never happened. I gave Rhea a thumbs up so she knew I was okay. I couldn't speak in a vacuum and there was a telepathic block surrounding the chamber. Ten minutes passed before Nick triggered the next test. Instead of pumping air back into the room a foul smelling green haze shot from spigots in the ceiling. I guessed it was methane gas. I took a hesitant lungful of the gas and I was fine. Oxygen wasn't necessary for my survival any longer. After another ten minutes, he cycled the methane out and replaced it with sea water. I could taste the salt in the water when I inhaled. I drifted off the floor and hovered over the cube. I opened my hand and a thin transparent membrane formed between my fingers and thumb. The same was true with my toes. I swam around and even placed my webbed hand against the glass window. Rhea pointed to her neck and I reached up and felt the gills opening and closing as I breathed.\n\nThe tests went on for another hour. They ranged from surviving twenty atmospheres of pressure to other toxic atmospheres. Some of those included deadly airborne diseases and toxins. Before I was let out they had to take blood samples to be tested to make sure I wasn't a carrier for said plagues. I think the worst was the subzero temperatures I had to endure and watch my junk shrink to miniscule proportions. Once my blood cleared me for human companionship the door was unlocked and I left convinced I had made the correct decision. I was given a fresh robe and another bottle of water. Rhea hugged me and cried, her mind filled with the horrors she had experienced on the other side of the glass. It had been torture for her to watch me endure one deadly environment after another. The moon had risen since I had gone below decks.\n\n\"Um Nick... how the hell is this going to help you as Hidden Master?\" I asked.\n\n\"This technology allows you to alter your appearance. You can change not just your face but your skin pigmentation and voice as well. You can meet with members of the Order in any guise that suits your fancy. You can disappear in a crowd just as easily.\"",
        "\"Whoa, that has some seriously kinky possibilities,\" I said and Rhea grinned.\n\n\"On the other side of things, you can't be poisoned or drugged. It gives you an edge others will never see coming.\" He continued. \"And yes, you can mimic any celebrity that suits her fancy.\"\n\n\"When do I start?\"\n\n\"The beginning of next week. You are due back in Washington with meetings with the President as well as the Pentagon. I have scheduled a few meetings Monday and Tuesday after hours. You must create a new persona by then. Make sure you have a change of clothes and rent a car using the identification I will give to you.\"\n\nRhea and I retired to our cabin while Isix went to hers. I touched Rhea's mind and she was pondering features that I might find appealing. I could go in two directions. One of them was a striking appearance that stood out in a crowd or a very average one. Both had benefits and perhaps I would use each for different purposes. I could use the handsome mask for meetings and revert to the mundane afterwards to make sure I wasn't followed. I liked that idea. Rhea was undressed, under the sheets and patting the spot next to her. It could wait until the morning. I had some stress to get out of my system and I suspected that she did too.\n\n\"You know this morning we flew down and spoke with NASA's elite. I was told about a near solar object. Then we flew here to tell Nick about the anomaly only to find out that he already knew. We have a nice soak in the hot tub and I get to see Akira naked, bonus. Then I have another flashback and poof I disappear in front of you guys. I relive a century of training by the best masters of combat that the J'Nai had to offer. I pop back after being told by a Solitaire that they knew I was coming. Poof, I return to you with my flesh covered in glowing tattoos that I don't remember having received and that fade from sight after a few minutes. Nick offers me a female symbiote and we bond so well I survive things that should have killed me half a dozen times over. I end the night making love to the most amazing woman in my world. Jeez... what a day!\"\n\n\"You were trained by a Solitaire?\" Rhea whispered.\n\n\"Yeah, we were great friends.\"\n\n\"I... I love you Greg.\"\n\n\"What's wrong?\"\n\n\"You always tell me how you feel like you don't deserve me. I guess it's my turn. I feel so useless. I am supposed to be your bodyguard and protector. You don't need me.\"\n\n\"I need you now more than ever. With you watching my back I can relax and do my job. I have you to come home to and I'll tell you what that is something wonderful to look forward to.\"\n\n\"Liar... you could...\" \n\nI kissed her into silence. Our love play was slow and sensuous. Nothing was rushed until I lost control and pounded her into blissful submission. I washed up and was leaving the bathroom when I heard voices outside the door to the hall. Curious, I opened the door to find Isix sitting on the floor and one of the Numenor's crew asking her why she was camped outside my door. I grabbed Isix by the hair and brought her to her feet. She hissed and growled but relented in the end. I propelled her into the room and onto the foot of my bed. I thanked the crew member and closed the door. I faced a crimson faced Osirin. Her tail was twitching as Rhea giggled.\n\n\"Just couldn't stay away,\" the redhead purred.\n\n\"No Mistress,\" Isix admitted. \"I could feel your hunger and I... forgive me...\"\n\n\"There is nothing to forgive,\" Rhea said getting out of bed. \"I got Greg's soft side. You get to endure his hungry side. Good luck with that... I'll be back in an hour. Try not to break her beyond reason and oh, don't forget her tail.\"\n\nRhea slipped on a kimono from the closet and strode out like she owned the entire ship. Isix chewed her lower lip nervously but remained where she was. I smiled as I reached out and tore the clothing from her. She wasn't wearing much, a thin robe, dark panties and slippers. I rolled her onto her belly and lightly gripped her tail. Her ass rose high into the air as she purred. It was the sound feline's make when they are happy. I easily slid two fingers between her pussy lips she was so wet. Isix gripped my fingers with her internal muscles.\n\n\"I am going to wreck you little girl,\" I growled as I removed the towel from around my waist.\n\n\"You don't have it in you. You couldn't... UNNNNN...\" she fell silent as I removed my fingers and slid my cock into her until it was buried deep.\n\n\"You'll see.\"\n\nI gave her tail a gentle tug as I began thrusting into her. I saw her puckered asshole open and close as my cock hit home. I found it fascinating almost hypnotic. So enthralling that I worked one of my fingers, slick with her juices, into her ass. She made a new noise now, nothing any human being could have mimicked. \n\n\"You wouldn't dare,\" she hissed as she looked over her shoulder at me.\n\n\"Are you trying to get your ass wrecked tonight?\" I asked as I began hammering her pussy harder and harder. \"I take it Jon never took advantage of you.\"\n\n\"He... I...\" she tried to speak but I was easing a second finger into her ass. \"You are gentler than my former master ever was.\"\n\n\"Why is that,\" I asked as I fingered her ass in time with my cock slamming into her pussy.\n\n\"I... oh god so thick... he learned how quickly Osirins heal... harder, fuck me harder!\"\n\nI never said another word. I yanked her tail as I pounded her with all my strength. I held nothing back. I couldn't do this with a human woman. The force would hurt them and possibly do them great bodily injury. The Osirins, like the J'Nai, were made of sterner stuff. The animalistic sounds issuing from Isix rose to a deafening level. She cried out and fell silent as she climaxed. I stopped to conserve my strength. Isix was one of the few women that could match my stamina.\n\n\"Do it...\" she whispered as she recovered. \"You know that you want to.\"\n\n\"With you help I am...\" I said as I pulled out, flipped her onto her back, and snatched her off the bed. \n\nI held her close, supporting her by her waist, as I slowly lowered her onto my erection. She reached down and placed the head of my cock where she wanted it. I let gravity do the rest. I lowered her quickly. I felt my cock pierce her ass to the core. A new noise was my reward for this small brutality. I never would have done it with anyone else. Isix's gaze was locked to mine. I began to lift and drop her as she wrapped her legs around my waist. I stood there in the middle of the room letting my erection piston in and out of her tight little hole. I think she was cursing in Osirin as I fucked her hard and deep.\n\n\"Oh god, I'm not going to last...\" I warned her.\n\n\"I don't care. Just fuck my ass Master. Just fill my ass with your seed.\"\n\nMy cock gushed inside of her. She howled as her razor-sharp claws sliced my back. The pain wasn't as bad as I expected. The parasite accelerated my already fast healing so that the wounds practically closed behind her claws. The pain faded within seconds and I was ready for round two and I told her so. It took a little over an hour to wear each other out. It was an all-out sprint the entire time. We held nothing back and we only rested long enough to catch our breaths. In a word, it was fucking epic or was it epic fucking. I learned why Rhea enjoyed her time with Osirin lovers. I was so weak at the end I could barely lift my hand from the covers. The same could be said of Isix.\n\n\"I lust you.\" I said.\n\n\"I know.\"\n\nRhea returned to find us sprawled on the bed covered in sweat and bodily fluids. She handed us two bottles of Nick's special water to help us out. She sat next to me and whispered four little words in my ear, I told you so. After a bottle of water and a long shower I was ready for a good night's sleep before the helicopter flight home tomorrow. I slept between Isix and Rhea as they spooned against me. I closed my eyes feeling shielded from the outside world for now. I let sleep take hold of me. I dreamt and in my dreams, I walked on a twilight world where cobalt pools bubbled and geysers erupted. I looked at my warped reflection in one of those pools. The ground shook and I cast my gaze to the bleak horizon to see plumes of azure smoke spewing high into the atmosphere. The ground split beneath my feet and I lost my balance. The roar of shrieking stone split the air as amethyst lava erupted from the caldera following the smoke into the heavens. The dream dissolved and I was lost in broken imagery and sounds until the next morning. \n\nThe three of us dressed, had a light breakfast, and took the copter to the Arkham airport. From there, we took a private flight to Washington D.C. to meet with the President. I had to fill her in on Project Solaris and the delay of Ares. I washed up, shaved, and brushed my hair. I changed into my best suit for my meeting with Lydia. It wouldn't do to meet her looking less than my best. There were three vehicles waiting for us when we touched down in Washington. One was our limo and the other were armored escorts. Maybe she knew why I was coming. The drive to the White House was uneventful. I did sense a lot of stress radiating off our driver though. Had the President's first trip abroad not go as planned? I would ask her if the conversation went that direction. We passed through security and drove onto the White House grounds. It didn't matter how many times I visited this place it always held me in awe. A marine guided the three of us to the Oval Office but I was the only one to meet with the President. I walked in and Lydia was seated behind that grand old desk.\n\n\"Hello Greg.\"\n\n\"Hello Madame President.\" I replied smiling.\n\n\"Have a seat. We need to talk.\" She said her tone of voice calm but edgy.\n\nI sat down and waited for her to collect her thoughts. She had gotten wind of Solaris and she was scared. She wanted to know the details. I told her everything that I knew and showed her the footage of the asteroid beyond the alien portal. The conversation remained on repurposing Project Ares and going to land on the asteroid instead. NASA wanted to explore the alien construction on the asteroid and see what secrets it holds. I couldn't tell her I already knew what was beyond it thanks to Isix. I didn't tell her about the other solar system and the two earth-like planets it held. There was no reason to add to her fear. Something so magnificent had been thrust into humanity's hands. But we were not ready for it. We had poisoned our own world imagine if we had two more.\n\n\"I need your help. I have tried reading the brief on Project Ares but there are parts of it that make my head hurt. I want you to explain it to someone that isn't a rocket scientist.\"\n\n\"I'll do the best I can. How about I go through it and you just nod when I get to a talking point.\"\n\nI began going over the basics and she hung on every word. After thirty minutes, I had reached the end and sat waiting for her questions. Her first was straight to the point. She wanted to know whose mind was going to be used as the artificial personality for Project Solaris. Nick hadn't decided yet so we would have to wait. I could see that some of the stress had left her lovely features. It was another twenty minutes or so before she had asked all the questions she could muster for the time being. She paused for a ten count before asking her last question.\n\n\"What are you hiding?\"\n\n\"Was that your attempt at being Detective Columbo or something?\" I said and paused. \"Are you sure you really want to know?\"\n\n\"Damn it Greg, I am the President. If what you know compromises my ability to run and protect this country, I need to know.\"\n\n\"Aw hell... I happen to know who built the portal near the sun and why. Are you sure you want me to continue?\" She paused for a long time before nodding. \"Fine, but you were uh warned. The gate opens onto another part of the galaxy. It was built by an ancient race known to humanity as the Anunnaki. The gate is a gift if we ever progressed far enough to take advantage of it. I can stop now if you want?\" I asked but she shook her head. \"This part is going to make your job a lot more difficult.\" I paused but she gestured for me to continue. \"The Anunnaki made humanity what it is today. They tailored our DNA to evolve to a certain point if we survived that long. We have a lot of growing to do yet.\"\n\n\"Shit...\" she cursed and understood now why I had warned her. \"We are just a science project?\"\n\n\"No, they created us in the hopes we would mature and join them in the stars. But as you have figured out, there is no god... no messiah... it is all just a comfortable lie.\"\n\n\"What am I supposed to do? If the Republicans learn about this, hell, if the world learns there is no divinity they are going to go ape shit.\"\n\n\"Lie. To keep the peace and public sane you will have to lie your ass off, Madame President.\"\n\n\"Did I see your eyebrow go up when you said ass in front of me? Hmm... were you thinking about my backside?\"\n\n\"May-be, but now is not the place or time for such vulgar thoughts or deeds.\" I said smiling back at her.\n\n\"Vulgar, your mind is in the gutter Greg,\" she said and stopped before she said what she was thinking. 'Right where I want it.' \"Is there anything else, I have a meeting with a team of geologists...\"\n\n\"Yellowstone, it's about Yellowstone, isn't it?\" I asked and her mouth fell open.\n\n\"How the hell could you know that?\"\n\n\"I have been collecting data about unusual events since I got to London. I found a few and went further and further back. How bad is it?\"\n\n\"Why don't you stay. You can give me your opinion after the meeting.\"\n\nLydia informed her secretary she was ready for the next meeting. Four men ranging from their early thirties to the eldest at nearly eighty strode into the room. The President introduced each of them but they had seen me on television for the opening ceremony for the Blink Technology. I was a bit of a celebrity now. We settled onto the two couches while Lydia took her place behind her desk. The elderly gentleman, Doctor Henry Ambrose, led the meeting and help guide it through all its complexity. It was a dire situation and far worse than I expected. I had heard on documentaries how devastating it would be if the Yellowstone Super Volcano ever erupted. It was going to happen but they couldn't give an accurate time table. Volcanology was still a relatively inexact science. The signs were clear that the nature of Yellowstone had changed. There were pools that were bubbling from underground heat that could likely be lava filling long dormant tubes and caves. The pressure was building but there was no way of telling how long though. I had to give it to Lydia. Her face was placid facing a second world shattering situation. You couldn't pay me enough to be in her shoes. In her pants, now that was a whole other story. I'd hammer her until she screamed given the chance.\n\n\"What are your thoughts Greg,\" Lydia asked and damn it I almost said what was really on my mind.\n\n\"I think... I could commandeer one of Nick's satellites that has ground penetrating radar and make a few modifications and scan the area. It would take a week or more. We are talking about a huge amount of ground. I will contact Nick and get the go ahead if that is acceptable. Mr. Shaw will of course be discreet and keep this absolutely secret.\"\n\nThe volcanologists agreed that the satellite and secrecy were both required. If word got out there would be mass panic. The build up to an eruption could be decades off or just a few days. The scientists left and the moment the door closed the President buried her face in her hands. I could hear her crying from my position on the couch. Today had simply been too much for her. I got up and walked behind her desk and pulled her up and into my arms. She didn't resist. She buried her face in my chest. I didn't think she was weak. If I had been in her place I would have lost it too. If Yellowstone erupted too soon thousands, hell, tens of thousands of people could lose their lives the first day. Then there was the nuclear winter that would follow and the loss of the world's largest food source, American farms. It was likely a new ice age would hit and kill millions or even a billion worldwide. How the hell do you handle that kind of stress?\n\n\"I could fuck you rotten.\" I offered and she laughed. \"I could bend you over your desk and rape you right here.\"\n\n\"Silly boy, you can't rape the willing.\" She replied looking up at me with tear stained eyes. \"What kind of President would I be if I defiled this sacred space?\"\n\n\"Seriously, I bet every President before you have tapped some ass in here.\" I said and she slapped me.\n\n\"Show some god damned respect. This is the oval office not the oral office.\" She said and it was my turn to laugh. \"You went there, you are such a kid.\"\n\n\"If I sit down you are small enough to kneel there and...\" I began but she shook her head. \"I guess getting naked and pressing those amazing tits of yours against the window there is out of the question. Well damn it woman, that dick isn't going to suck itself.\"\n\n\"Are you this crude with other women?\"\n\n\"Um... yeah, I think it's my animal magnetism or having a big dick. I'm not sure to be honest. You are the only woman that I've ever second guessed myself with. You are the President and all. I've never fucked a head of state before. I know that look. I am being too crude. Fine, I will be a gentleman from now on. There will be no more innuendos or... what? Why are you shaking like that?\"\n\n\"Follow me and keep your mouth shut.\" \n\nI felt the electronic pulse she initiated. She had Numenor Tech on her of course. A hidden door slid silently open and I followed her inside. The steps beyond spiraled down and led to the Presidential apartment. Many a Commander and Chief used it to get away from the public and have space to think or just decompress after a stressful day. I felt a second electronic pulse as Lydia reached the top of the steps. I saw her watch go dark and it took precious seconds to realize what was happening. The third pulse targeted me and I felt my body start to fall as I was robbed of consciousness. I was out cold before I hit the floor. I have no idea how long I was out but I woke with a gasp of air. My eyes snapped open and my surroundings had changed. I sat up too fast and a sense of vertigo hit me between the eyes.\n\n\"Slowly,\" Lydia urged. \"You fell and took a nasty spill.\"\n\n\"What happened?\" I asked my last memories were vague.\n\n\"Nick installed a device in the ceiling that automatically disables his technology. It hit you and switched you off. You quit breathing and turned blue.\" Her voice was cracking at this point. \"I countermanded the device and ordered it to reactivate your tech. I thought you were going to die. Your entire system had to reboot. It was touch and go for a while. Care to share why you nearly gave the leader of the free world a fucking heart attack?!\" Her voice rose in volume and intensity as she clung to me.\n\nI held her and moaned when her breasts pressed against me. Lydia pulled back and glared at me. She made a face as if she were deciding between slapping me of kissing me. The latter won out. The kiss was long and fierce. She broke the kiss and chewed her lip deciding what to do next. She sat on her heels and pursed her lips.\n\n\"Why did you almost die Greg? I mean, how much of you is augmented? Wait... I am sorry that was far too personal.\"\n\n\"I have one of Nick's cutting-edge tech in my head. It is a brain-machine interface. I can access a variety of devices and see the display projected on my optic nerve. It isn't a project that has reached an outside market yet.\"\n\n\"Why do you wear a watch then? If you don't need its holoprojector then why have one?\"\n\n\"I can use it for presentations for people I deal with like you, the Pentagon, and so on. It also masks my implant.\"\n\n\"What is it like?\" She asked as she slyly straddled my waist.",
        "\"When I first got the implant, it took me a while to get used to dropdown menus. Now I barely notice it and can access any function instinctively. I can activate Nick's tech with a thought, literally. Um... is that your hand?\"\n\n\"Hush... tell me about this tech of yours. Is that all it can do?\"\n\n\"No... unnn... your fingers are cold! Um, I can see the full ultraviolet spectrum. I can see in the dark like a cat. Damn that feels good... you've done this before.\"\n\nHer hand worked my length slowly and had me gasping in no time at all. I leaned up and unbuttoned her blouse. I took my time as Lydia spat on her palm to help things go smoother. I grinned as I saw how well she filled out her bra. I unhooked her bra and freed her breasts. Her hand began moving faster now. She looked down and her eyes went wide.\n\n\"I thought you were bragging. I wonder if it's going to fit. Guess I should have a taste first though.\"\n\n\"I am at your mercy.\"\n\nHer laugh was downright evil. She shifted her position and I let out a groan when I felt her breath on my cock. She licked the underside from the base to the tip and my ass left the couch. I cried out when her mouth snared the head of my dick. I watched her as she closed her eyes and made love to it. I had the urged to snag a fistful of her hair but that wouldn't do. She was eager to please there was no doubt about that. She had me shaking in short order. I warned her how close I was. But like the good little cocksucker she was she readied to swallow my load. I urged her on and my hips lifted on their own driving my erection half way down her throat. Somehow, she managed not to choke and swallow every pulse of my semen. But she did have tears streaming down her cheeks.\n\n\"Sorry, I couldn't help it.\" I said fearing she was going to yell and scream but that isn't what happened.\n\n\"Damn, that was intense,\" she growled as she lifted her head up. \"It hit the back of my throat like a bullet. I can't wait to feel you shoot inside of me. I am going to stand up and I want you to undress me.\"\n\n\"Yes Ma'am.\" I said smiling.\n\nShe got to her feet and I stood behind her. I cupped her tits and she gasped in surprise. I weighed them in my hands. Lydia ground her ass against my semi-erection. I kissed her neck as I unzipped her skirt. I let it fall to the floor. She moaned as I knelt placing my head at ass level. I hooked my fingers into the waistband of her panties and slowly tugged them down. Her scent was strong and sweet. She stepped out of her panties and skirt. I stood up ignoring her bare ass. Lydia was trembling now.\n\n\"What next?\" I asked.\n\n\"I thought you were going to reciprocate.\" She said frowning.\n\n\"Tell me what you want.\"\n\n\"Lick me... make me cum...\"\n\nI glanced up and smiled. The room had a twelve-foot ceiling. I touched her shoulders and turned her to face me. I crouched down, grabbed her by the waist, and stood up. I held her up and she placed her legs over my shoulders. I buried my face in her sex and she moaned as I lapped at her sensitive flesh. Her thighs clenched around my head as I ate her out. Her noises were muffled as her body began shaking. My lips found her clit and I teased it. Her thighs clenched tighter as she bucked her sex against my face. I managed to keep her from falling off, if just. She relaxed her grip on my head. \n\n\"That was amazing... oh god what next?\"\n\n\"I am at your mercy.\"\n\n\"Fuck me... impale me... make me scream...\" she said panting and gasping.\n\nI lifted her up and lowered her slowly until she was poised above my cock. Lydia reached down and aimed the head at her soaked sex. I brought her hips down impaling her as she asked. Her back arched as she sunk down. Her legs scissored around me once I was fully engulfed in her tight little pussy. \n\n\"I am going to fuck you now.\" I growled in her ear. \"But first... let's get some leverage...\"\n\nI walked forward until her back pressed against the nearest wall. I kissed her as I began thrusting. Our tongues dueled as I slowly pleasured the most powerful woman on the planet. Her fingers slid into my hair as I thrust slow but with more and more force. She broke the kiss as she began grunting in time with my movements.\n\n\"Aw god... you are killing me... don't stop... so big... unnnn...\"\n\n\"I am going to break you.\" I whispered in her ear. \"Come all you want, I am not going to stop until you beg me to.\"\n\nShe weakly nodded as I picked up speed. I watched her face intently as her expression changed. Lydia cried out as she climaxed but I continued to hammer away. Her fingers tightened in my hair as she pulled my head up higher. Lydia's teeth were clinched as a second orgasm built up quickly to another body shaking climax. She cried out and I thrust harder and faster. Her eyes went wide in shock but only clenched her teeth tighter. My cock swelled inside of her and her cheeks flushed a deeper crimson. I fought my orgasm to see if she would surrender before I shot inside of her.\n\n\"Come inside of me... I need to feel it...\"\n\nI quit fighting and a minute later I slammed my hips against her one last time and climaxed. Lydia howled as pulses of hot sperm shot inside of her. She was so weak I had to lower her onto the couch. I grabbed her right wrist and raised it. I let go of it and it fell to the couch cushion. Yep, she was wrecked. I smiled down at her proud that I had done magnificent job.\n\n\"You okay?\"\n\n\"You broke me. My poor little pussy. The shower is down the hall on the left if you want to wash up.\"\n\n\"Thanks, hold on, how did you carry me to the couch?\"\n\n\"I didn't. Your bodyguard and her friend did. They are remarkably strong. The redhead said that you'd be okay. She was worried at first but quickly assessed your vital signs.\"\n\nI left her to recover. I walked down the hallway undressing as I went. The bathroom was massive! It was dominated by a freaking huge brass tub. I remembered back to American History and a mention of Howard Taft's tub. He tipped the scales at rotund. The tub had been hand crafted just for him. Was this the original or a mockup? Didn't matter, I was going to run a bath for the two of us. As the tub filled I checked out my reflection and found no bruises or cuts. The nanites were back at work keeping me in perfect health. I looked at the master quality handiwork that went into so many aspects of the bathroom. The hand carved wooden molding was especially nice. The design reminded me of some of the woodwork in Jon's mansion. The water level was deep enough for me to climb in.\n\nI stepped in and lowered myself into the hot water. I felt my muscles relax and I closed my eyes waiting for Lydia to join me. The water reached my collarbone and I reached over and turned the water off. I heard her bare feet hit the cool tiles. She let out a squeal and raced over and practically jumped in. I felt the splash of water as she plopped down letting out a sigh as she did so. Lydia shifted over and lay against me. My arm went around her waist and held her close.\n\n\"You wrecked the presidential... um... you know what I mean.\"\n\n\"I did it for god and country,\" I said and we both laughed.\n\n\"You are a real patriot. What are you doing tomorrow?\" She purred. \"I can clear my morning for you.\"\n\n\"Let me check,\" I said and pulled up my calendar. \"Damn... I am blocked in with the Pentagon until three in the afternoon. I have to take a flight to Arkham to meet with Nick about the satellite.\"\n\nWe spent the next twenty minutes comparing meetings until we found two days that could lock ourselves in a bed somewhere. That was unless some emergency reared its ugly head. We penciled in a weekend together. There was no guarantee but life isn't always fair. We talked about what we liked and what we wanted to do the next time around. I learned things about the President that I never would have guessed. I hoped things worked out two weeks from now. She gave me her official nod to take Ares and convert it for Solaris. We were about to make history. The world would never be the same. I was scared shitless for her. I was fine since I didn't have that kind of stress hanging over my head. She really was an amazing woman.\n\n\"What a day. I don't know what's worse. If Yellowstone erupts soon I will be the last President of the United States. But if this portal near the sun works out and we have the time we could possibly evacuate some of our citizens. It would have to be a lottery of course. There would be few guaranteed spots. Do you have any suggestions Greg?\"\n\n\"Yeah but you won't like what I have say.\" I replied without missing a stroke of the hair brush. \"Okay, we break the mold. We use machines to do all the manual labor and rebuild from the ground up. A society that doesn't rely upon an economy. We focus on our citizens and the exploration of space. Your ass is grinding against me.\"\n\n\"Yes, it is,\" she purred. \"Where is this labor force going to come from?\"\n\n\"Nick has some prototypes he's been keeping aside. I can modify them for just about any task. If the satellite gives us enough time we send them ahead to prep living space and plant food to see what the soil will support. If we are lucky we can have an infrastructure in place in two years, maybe three.\"\n\n\"Doesn't anything scare you?\" She asked and a flash of memory made me shiver. \"What was that?\"\n\n\"I have been afraid many times. I just don't let it paralyze me. After you've looked a dark god in the eye the rest is easy. You are doing that thing with your ass again.\"\n\n\"You are really hard. I can feel it. I am still a little tender. How about a nice long slow one?\"\n\n\"I will let you do all the work. I don't want to hurt you or push you too far.\"\n\nShe rose, grabbed a towel, and crooked her finger at me. Lydia raced off for the bedroom. She was going to be dead tired tomorrow. I left her early in the morning. I found my clothes laundered, pressed, and waiting for me. The White House staff was on the ball. I dressed and sought out Rhea and Isix. One of the marines on duty informed me that my bodyguard and her friend were taking an early breakfast. He guided me to a dimly lit room. One of the tables was illuminated with candles and sitting around it were the pair I had been looking for. There was a third coffee cup waiting for me. Rhea poured the coffee while Isix added creamer and two cubes of sugar. I let the sugar dissolve as the two of them looked at me with smiles on their faces. They never overtly asked 'how was it' but I knew they were curious.\n\n\"Amazing.\"\n\n\"I knew it.\" Isix replied. \"I could almost smell the tension coming from her.\"\n\n\"We both could.\" Rhea added. \"When are you 'seeing' her again?\"\n\n\"Um... it sounds so strange when you ask me that. We are tentatively planning on a weekend together in a few weeks. You know how crazy my schedule is, imagine how hers must look like.\"\n\n\"I am so proud of you.\" Rhea said blushing lightly. \"To be able to serve your country in so important a role. You must so thrilled being the lust interest of... Her interest...\"\n\n\"Wait, you make it out like I am doing a public service by...\" I paused looking around. \"...Fucking the President.\"\n\n\"It is the highest form of public service. I once was a sex slave to William the Conqueror. Talk about a freak beneath the sheets. It took me a decade not to orgasm when I saw, touched, or smelled leather. To this day I still get aroused when I see a Western movie. Too much?\"\n\n\"We are going shopping,\" I said and she smiled brilliantly.\n\n\"Ooh, I like leather... can I come too...\" Isix asked and I nodded. \"I am not...\"\n\n\"You are always welcome Isix.\"\n\nEpilogue:\n\nThe satellite, which had been parked in orbit over the Egyptian desert, moved into position over the Northwestern United States. It sent down pulses of invisible energy downward. The signal penetrated the earth and bounced skyward to be captured by the satellite. It would take weeks to map the ancient caldera and reveal its secrets. The data would be two-fold. On the negative side the super volcano was awakening. On the positive side, it would be decades before it all the magma chambers were full once more. It was still impossible to predict when the eruption would occur. Artificial personalities would crunch the data and try to determine a cut-off date. It would be a countdown for evacuation. The citizens of the world would have to be told but when. \n\nGreg Robinson stood in the observation room. It looked out over the clean room where the latest of Nick's creation stood. It was a modified XNA construction and similar in many ways to the shell that Surfer called home. It was very male. It stood nearly seven feet tall with a physique that was both handsome and intimidating. This construct would be responsible for piloting the Solaris to the alien asteroid and construct a Blink ring on its surface. Once it was safely anchored and online astronauts would pass from earth to the extraterrestrial base. They would make history as the first men to meet with alien technology. What would they find?\n\n\"What do you think?\" Nick asked approaching Greg from behind.\n\n\"He's hung like a god. Why is it anatomically correct?\"\n\n\"The thought of emasculating the poor guy was just too much. Besides, if he survives I might sync with it just for fun. He'd be very popular.\"\n\n\"So, have you chosen your pilot personality yet?\"\n\n\"Funny you should ask. That is why I asked you here Greg. You are going to be the donor, if you are agreeable.\"\n\n\"ME... oh... I guess it makes a kind of sense. I already have the implant. It would easy to copy my mind into that hunk of manhood. I feel kind of weird thinking of another me out there. What happens after the mission if it is successful? I mean are you going to put in another A.I.\"\n\n\"If we get to the asteroid intact and nothing goes sideways. I plan on blanking the personality and installing a true artificial mind.\"\n\n\"Since we are on the subject. Why did you give Surfer a body?\"\n\n\"Why not,\" he said smiling. \"He earned it and from what I hear he wrecked Jon's mom... twice. I am so proud of him. He is my digital son after all.\"\n\n\"We are really going to do this,\" Greg said his voice trembling. \"We are going to enter a whole new era.\"\n\n\"Yep, we are going to shake the pillars of heaven.\"\n\nGreg followed the two technicians to be prepped for the procedure. His mind would be powering an artificial life form that would leave the earth behind. It would usher in a new era. "
    ],
    "authorname": "Lost Boy",
    "tags": [
        "ffm threesome",
        "anal",
        "foursome",
        "non human",
        "hand job",
        "blowjob"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/hello-mr-robinson-pt-10"
}