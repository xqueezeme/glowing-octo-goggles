{
    "title": "The Way Back Ch. 05",
    "pages": [
        " Hot Cross Buns: Rich bread buns made with butter, sugar and egg, spiced with cinnamon, nutmeg and mixed spice, and baked with a mix of dried fruit and candied peel.\n\nEIGHTEEN\n\nI left work early next day, Friday, telling Jenny to do the same. She didn't need telling twice. I collected the keys to the house. David offered to take me but I begged to go on my own. He gave me a sheet of paper with instructions on it.\n\n\"Be sure to remember the code to turn off the alarm, or you'll have the police there.\" David was emphatic.\n\nThen I set out to drive to the house, full of trepidation and eagerness. I enjoyed every avenue and road, the gardens in spring bloom and the budding trees lining each road. Every metre was exciting and beautiful. It was a wonderful place to live. It helped that the sun was shining out of a cloudless blue sky.\n\nThen there I was at the gate. The drive stretched before me, fifty metres to the front door. I drove up the drive slowly. The memories were flooding me again.\n\nThere I was in front of the door. I hesitated. There was fear. No reason. Need there be?\n\nI put the key in the lock, and opened the door. Immediately there was a loud beeping sound. The Alarm! I scrabbled for my machine and found a four digit code number. The control box was by the front door, and I keyed in the number. The beep stopped. I did not understand the word 'Sweden' written underneath the box. \n\nThe phone rang. I picked it up. \"Yes?\"\n\n\"Code word please.\"\n\n\"Sorry, who are you?\"\n\n\"The alarm company. Please give the code word.\"\n\n\"Sweden?\"\n\n\"Thank you. Have you had any problems?\"\n\n\"I've just bought the house. I'm moving in.\"\n\n\"Mr Allan Jonsson?\"\n\n\"Er, yes. What you should know is that I have transient bouts of amnesia. I have to consult a memory aid if I forget things. It delays things.\"\n\n\"We can increase the time delay.\"\n\n\"Please do. I don't want a panic like that every time I come home!\"\n\nThat little discussion over, I began to explore the house. Yes, it was familiar. The kitchen was easy. What amazed me was that all the utensils were in place. It was a complete old fashioned kitchen. I had nothing to buy. David or Viv must have cleaned and turned on the fridge and freezer.\n\nThe living room looked familiar, though I couldn't say I recognised it. The two other rooms seemed to be an office or study and a dining room. The office had a computer. The dining room had a table and chairs and a sideboard, though there was nothing in it. Under the stairs was a door and I discovered the cellars. One had a snooker table, the second table tennis. There was a dartboard on one of the doors. The other two rooms had boxes stacked on top of each other. Something to explore when I had more time.\n\nUpstairs, the bathroom and toilet held no surprises. Their cupboards were empty save for toilet rolls. Then the bedrooms. There were five of these. As I entered the first room the memories hit me. This was 'our' bedroom. There was the en suite bathroom; there were the two wardrobes and a dressing table. I opened the drawers and stood back in surprise. There were men's socks and underwear. In the wardrobe were suits and sweaters, and shirts and ties. Other drawers were empty, but the second wardrobe had a few dresses and skirts hanging up. I saw a vision of Ann wearing one of them, running in the garden with the boys. Perhaps I had a visual memory after all.\n\nI found the drawers with the bedding and extracted a set. I unfolded it and left it to air. That's what my mother always did. Another memory. Even more of my life was being pieced together by my much-abused brain. I had a vivid memory of Stefan being sick on the landing. Strange memory. Another of all the children in our bed with us on Christmas morning; it brought a tear to my eye. The house was working its magic. I even remembered we got milk from a milkman, and resolved to engage his services, if indeed there still was one.\n\nYes, I belonged in this house, and it belonged to me with all the memories it would unlock. I looked at the central heating boiler and saw a note on the notice board by its side from David.\n\nDear Allan\n\nI stocked the fridge with basics. Here is a list of take-away shops that deliver. You can order more supplies from Asda, Sainsbury or Tesco on line. You have broadband here. Try firing up the computer in the study. Welcome back home!\n\nDavid\n\nWhat a good friend he was! \n\nI made some tea and sat in the kitchen and enjoyed the atmosphere of the place. It did feel like home. I had little time that night, but on the morrow I'd have all day to saunter round the place, inspect the garden, unpack my bags and try that computer. I turned on the radio and let the music and banter wash over me. Then it was time to wash up and leave for the flat. I'd be moving in tomorrow! \n\nI consulted the instructions and set the alarm, wondering if the loud insistent beeping had given it its name, as I shut the door and waited for it to stop. Then back to my other home, where I packed two suitcases and went to bed.\n\nOn Saturday I had an early breakfast and then loaded the car, travelled, dumped it and the suitcases and went walking round the district. Then I drove into Sale town centre. I needed supplies for the coming week and found Sainsbury's. I went back to the house weighed down with bags and was glad I had a car. I had left the alarm off, and was grateful for that.\n\nMy mobile rang and Jenny asked if it was a good time to come over. I gave her the address and she told me she was setting off.\n\nBeing back home and on familiar roads was helping my memory remarkably. I would test myself: could I remember the alarm code? What was the alarm password? Where was Sainsbury's? How would I get there by car? The feeling of being adrift in the world had gone long since but now in this new environment I feared that feeling would return. But I did feel at home, did I say that before?\n\nJenny arrived. We hugged and kissed.\n\nI took her round the house, pointing out things that had triggered memories.\n\n\"This house is going to be very good for you,\" Jenny asserted, \"It's a lovely old house; full of character,\" she said as we returned to the kitchen and I set myself to make a pot of tea. I sat happily opposite her at the oak kitchen table. I was home and one of my favourite women was with me for the weekend.\n\nThe day passed in a flash. We spent most of it on the road driving between my flat and the house, bringing my personal effects, unloading and finding places for everything. It turned out that all the men's clothing in the house was my size, and Jenny agreed that they were probably mine. Ann had never got rid of them. I left a change of clothes and spare toiletries at the flat. I decided to hold off terminating the lease; in any case it had six months to run.\n\nIn the afternoon we did all the things I threatened myself I'd do. We also cleaned. The house was dusty after being unused for so long. It was late evening when I ordered a Chinese meal for us. We were too exhausted to make love that night, but rectified the omission at length the next morning. \n\nThere is something about Sunday morning sex. Perhaps it's the invitation to be relaxed, to take my time, and to be able to play my hands over the pliant, firm, sleekness of a breathtakingly beautiful blonde, hearing her vocal reactions to my varying caresses over each different part of her totally accessible body; lightest grazing of her nipples watching them grow and lengthen, the tracing of fingers up and down the concave hollow of her spine, the gentle stroking of cheeks upper and lower, the light drag of a thumb over her lips until she has to open her mouth and suck on it, running her tongue over it, presaging another licking and sucking to come, further south. \n\nThe twisting and gentle pulling of her hair as her eyes close with the sensation, the raking of the fingernails up the back of her legs, tantalising the back of her knees, the delving and probing of her most secret parts denied to all other men, feeling the string of her tampon. Whoops! Watching her sink deeper and deeper into the sensuousness of her feelings, hearing her breathing deepen then catch and exhale as some part she had not expected was treated to my attention.\n\nWhat better feeling is there when almost unconsciously her hand encircles my cock? When she absently traces fingers across my perineum and up the crack of my bottom, running over my buttocks and down the crease of my groin. Or when she idly plays with my earlobes, following the contours with a finger. When her finger demands access to my mouth and I suck on it. Or she bends on hands and knees, straddling my body, her bottom to my face, showing me everything while massaging my toes and feet and kissing them, sucking each into her mouth and laving them with her tongue.\n\nHow easy it is on such occasions to slide into a classic sixty-nine from there and to taste each other's deeply private parts, gradually allowing the intensity of desire to rise until she crests into her climax, and then seeks my cock for her aching pussy. Then comes the fierce pounding of body to body, as the bed rattles and thumps, humping with loud cries and shouts of surprise at the intensity of the throes of orgasm, and falling spent into each other, still joined and feeling the satiation in each other's arms.\n\nWell, some of that anyway. The tampon was inhibiting! She realised she had to make some adjustments before I could enter her. A quick trip to the bathroom and an urgent rolling of the condom and then the age-old exercise. \n\nIt is essential that the Sunday papers are delivered when you live at Cherry Tree Lane: the folk round here do not approve of naked men running to the newsagent's, and I wasn't intending to get dressed just yet. So no papers to read. However, I was able to access four frozen croissants and bake them while I made coffee. Then we took breakfast in bed before she took me in her mouth and made me come. Considering ten years abstinence, she did it with some expertise.\n\nWe went out to lunch and walked round the area in the afternoon, followed by tea, crumpets and home made scones, with butter and jam. Then kissing, and a request.\n\n\"Allan, sweetheart.\"\n\n\"Yes, my love.\"\n\n\"There's something I'd like you to do for me. No one else has ever done it to me, only you.\"\n\n\"Oral?\" I asked.\n\n\"How did you know?\"\n\n\"You liked it the first time, and it's the only thing we haven't done this weekend, at least to orgasm.\" I pointed out. \"Come here.\"\n\n\"In a minute.\" And she ran to the bathroom. I heard the water running and realised she was cleaning herself. I cleared the table. Then she returned to the kitchen.\n\nAfter I had pulled off her pants and her knickers, I put her on the kitchen table, leaning back on her hands, feet on the edge. I sat on a chair and leant in to take dessert at my ease. I put the tampon string to the rear and I set to work. \n\nI was slow, tantalising, until she was begging me incoherently to release her, which I then did, which was unfortunate. She came hard, her feet shot off the table and her pussy smacked me on the nose and banged my chin on the table, and when her eyes opened she noticed me rubbing my chin. She cried out, looking at me with a worried frown.\n\n\"What is it?\" I grunted as I stood up.\n\n\"You're bleeding!\" she cried.\n\nI had a nosebleed.\n\n\"It's customary for the damsel to bleed, you know,\" she said, giggling. \"In fact she is! How--?\"\n\n\"You did it!\" I tried to make my complaint realistic. I failed. She laughed.\n\n\"I never did!\"\n\n\"You did! When you came. You're the only woman I know who can deliver a knock-out blow with her cunt!\"\n\n\"Oh, Allan, I'm sorry!\"\n\n\"Don't be. My fault for doing you on the table.\"\n\nShe pulled up her delicate wispy knickers and less delicate jeans, tenderly cleaned me up and then collected her things. \"Work tomorrow.\" she said by way of explanation of her departure. She kissed me long and hard. \"Thanks!\" she said, \"it's been a wonderful weekend.\"\n\n\"No, thank you,\" I retorted, and we kissed again, before she tore herself away and backed her car out of the drive.\n\nI'm glad we can't see into the future. Otherwise I wouldn't have slept at all that night. But I couldn't, still can't foretell the future. Let's face it, I have enough problems with the past! \n\nSo I did sleep.\n\n------\n\nNINETEEN\n\nWork was no problem, not with a PA like Jenny. She kept an impeccable distance between us; very proper, even when there was no one to see. That's one thing I liked about her. She was single minded and had her own moral code. If we couldn't hold hands and kiss in front of the other workers, we wouldn't do it at all. At work, that is.\n\nWe had one visit to make on Tuesday that was quite local. One of Northern Moor's failures. It was a question of whether we could patch up their botched work or simply provide an alternative. When we got back we tidied up and prepared for the Germany visit which would happen after the Easter break.\n\nDavid rang late afternoon to tell me that he'd met Ann and her solicitor for an attempt to resolve the financial dispute. They still wanted funds from the company that would effectively put it out of business and they didn't seem to be bothered about the fallout on the people working for us. So the dispute would now go to court.\n\nOn Wednesday I remembered Trish said she was coming on Thursday, but failed to remember I was supposed to phone her to confirm it. \n\n\"Jenny?\" I said, \"Would you like to meet Trish tomorrow before you go off to see your parents?\"\n\nShe looked uncertain.\n\n\"Jenny, you'll like her. Don't forget she's leaving for New Zealand after Easter. It may be your only chance. Without her I wouldn't be here. She encouraged me to get closer to you.\" \n\nShe looked somewhat relieved and said she'd be round next morning.\n\n\"I won't come over tonight,\" she said, \"I can't have you hopping straight from one bed to another!\" \n\nShe affected humour, but I could tell she didn't like the idea that I'd be in Trish's arms all weekend. There was nothing I could do, I had warned her that making love makes one possessive. Perhaps putting them together would be a good idea or the worst possible one.\n\nAs I was leaving the office the phone rang. It was Keith. \"I need to meet you and the others tonight. Were you coming?\"\n\nNow Jenny was not coming over, I was free. \n\n\"Yes,\" I replied, \"it's the Wednesday meeting of 'the four'; wouldn't want to miss it.\"\n\n\"Usual time, seven thirty?\" he said.\n\n\"OK. Cross Keys?\" My question was really redundant; it was our local.\n\n\"Where else?\" he laughed, and disconnected.\n\nI tidied the house, knowing that when I got back from the pub I wouldn't do it. Then got a taxi to the pub. The three were there and looked sombre. \n\n\"This doesn't look good.\" I said as I sat down; my pint was poured ready for me. I took a long drink and setting the glass down, looked round at them. \"Well?\"\n\n\"I happened to pass Northern,\" began Keith, \"I haven't been along that road for a long time. I saw they had a new office extension and it triggered a memory of it going up. I stopped the car and thought about it, and it was about the time you disappeared. So I got out and walked back, and went into their reception area. \n\n\"Why I did that I don't know, except that we did mention the company last time we met. I told the girl there that I had been passing and saw their new wing. I wanted something for my own business and wondered who had done it. \n\n\"Get this. She said she thought she remembered it being O'Malley and his son. She said she remembered because he kept disappearing on other jobs. It was frustrating because it took far longer than promised; apparently it took nearly two years to finish the offices! So that puts O'Malley and Northern in the same frame. \n\n\"But there was more, one of the office people was passing and must have heard our conversation. He told her that he thought O'Malley was subcontracted by another company, because there was him and his son but from time to time there were three other brickies helping out. You see where this is going? I thought so too. He was very helpful, the lad. He used the receptionist's computer and accessed their archives. He found out the builder's name for me. Derek Fanshaw.\"\n\nIt came as a shock. I was trying to make sense of it; how far it got us in our quest. \n\n\"So there's a chance that either Northern or Fanshaw himself did this to me? But how do we find out if it's true? If so, which of them was behind it, if indeed they were?\"\n\nColin took up the idea. \n\n\"Cui Bono -- who benefits?\" he said adding the rather free translation, and continued without waiting for a reply. \n\n\"Northern have a motive that you've been taking their business. So they're definitely in the frame. But Derek Fanshaw? Is it likely that he'd put you out of commission just so he could move in on Ann? A bit extreme that.\"\n\n\"Fanshaw's been in financial du-du for some years,\" interrupted David, \"and it's been getting worse. He needs an injection of cash to fund payouts to suing customers. He's quite desperate -- could be facing bankruptcy. \n\n\"Notice what he and Ann are asking for -- millions out of the firm. Why ask for so much? She's well off with a good job and gets your very generous monthly payout. \n\n\"There isn't a reason why, unless it's to fund Derek's shortfall. So there's a motive. Put you out of the way for good, Allan, sidle into your place in Ann's heart and marry her. Then he's in line for a good financial payout, even if they divorced he'd get a good deal out of it. Also, if she falls in love with him she'll do anything for him. He can't lose.\"\n\n\"Unless you survive, or your body is recognised,\" added Keith grimly.\n\n\"God!\" I blasphemed, \"That's frightening! I'm not sure I believe it, but if he was willing to kill me to get at Ann, how safe is Ann if they marry? He gets everything as her husband if she dies, unless she's cut him out of any will which I doubt if she loves him.\"\n\n\"Fucking Hell!\" cursed Colin, \"That's an aspect I hadn't considered. If he's behind this, and we don't know he is, remember, I think she would be in real danger. That changes things. The lads will need to move in on him. We need to get hold of his accounts and we need a thorough psychological profile of him. Certainly we need to interview his ex-wife.\n\n\"And then there's O'Malley. He knows. I think we're going to have to get him in. Try him with accessory to attempted murder, a few years in prison. His wife would love that. It may be enough to overcome his fear of reprisals.\"\n\nKeith spoke quietly so he would not be overheard. \n\n\"Colin, I think an unofficial meeting with O'Malley might bring more results, the three of us, not you David. I think he needs to see what his little part in the plot did to you, Allan.\"\n\n\"I'm a bit uneasy about that,\" said Colin, \"but there again I'm not on the case -- I just feed them information. O'Malley doesn't know me either. He might be willing to spill rather than do it officially to the police. That would involve publicity. You realise Allan that when the arrests hit the press, you'll be famous.\"\n\n\"Don't like that idea,\" I said, shivering.\n\n\"I think I know where O'Malley'll be on Monday night, Easter Bank Holiday,\" said Keith. \"He'll be in the Golden Lion. We could 'interview' him when he comes out. If the two of you can keep the evening free, I'll ring you if he's there. He does 'early doors' normally, leaves about nine.\n\n\"We need this information,\" I said, realising something. \"If it's true, we have to stop the marriage taking place. There are lives at stake here. If he tried to kill me, he won't scruple to kill Ann, and what about the kids?\"\n\nThere was a thoughtful silence. Then David broke it. \n\n\"Allan, you were going to try to talk to Ann. I think that until we know the true facts you should hold off. We don't want to spook him if he's guilty.\"",
        "That made sense, though I wasn't happy with the idea. \n\n\"All the more reason to get to this O'Malley guy and extract the facts. But if Fanshaw's behind my attack I'm seeing Ann right away.\"\n\nColin said, \"Allan, could you come to the station and give another DNA sample?\"\n\nI agreed and we left it there.\n\nAs I sat at home with a large measure of single malt whisky, I mulled over this latest development. The idea of Northern Moor being the author of my intended demise seemed too extreme, even for them, but the cumulative reasons Derek might have, put him squarely in the frame. I began to dislike the man more than ever. \n\nHowever, I had to be realistic; we needed hard evidence, and O'Malley would provide it one way or another. I finished the whisky and got myself some milk to take to bed, in the forlorn hope it would counteract the large amount of alcohol I had now consumed. \n\nThe next day would prove interesting, I had no experience in separating fighting women! I wondered again if I'd done the right thing, inviting Jenny to meet Trish.\n\nThe doorbell woke me. I stumbled downstairs and opened the door to find Jenny standing there with a big smile on her face.\n\n\"Am I too early?\" she asked, \"I've brought some Danish for breakfast!\"\n\n\"If you've brought Danish, your timing is perfect,\" I answered, pulling her to me for a kiss.\n\n\"Mind the Danish!\" she cried, holding them to one side as I hugged her.\n\nI made coffee, even though I much preferred tea to begin the day. But coffee goes better with Danish pastries. \n\n\"What time is it?\" I asked, as I worked.\n\n\"Ten.\" \n\nSo I overslept. I toyed with the idea of telling her about the meeting the previous ,insight, but thought it better to wait until Trish arrived. Trish! My mobile rang as I remembered I should have rung her. \n\nOh hell! I thought, as I connected. \n\n\"Trish I'm so sorry, I should have rung you. There's been progress. I had a meeting with 'the three' last night. Where are you?\"\n\nShe laughed. \"Don't worry, I do remember you have a small memory problem still, and I know it surfaces most when you're stressed. Do you want me?\"\n\n\"Oh, Trish, you've no idea how much I want you,\" I growled, and she howled with laughter. Jenny raised an eyebrow.\n\n\"Seriously,\" she calmed down, but was still ragging me, \"Today's Thursday, did you know that? I have a long, long weekend off after all the overtime I put in. Want me to come?\" again she giggled.\n\n\"Definitely, Jenny's just arrived. Where are you? At home?\"\n\n\"Well, actually I'm at that service station just outside Bradford. Be there in under an hour. Give me the address.\" She told me she would ring me when she was near. She had an A to Z Street Map of Manchester.\n\nJenny and I changed plans and had a round of toast and some tea, keeping the Danish and coffee till Trish arrived, which she did almost exactly to the three-quarter hour. I answered the door.\n\n\"Wow!\" she exclaimed, falling into my arms, kissing me and then coming up for air. \"Great house! Even better inside!\"\n\nI led her to the kitchen where Jenny awaited us. I made the introduction and watched as they greeted each other, all the while sizing each other up. It amused me. I left the room and got Trish's cases from her car and took them up to the bedroom. \n\nThere was a carrier bag, and inside it a large chocolate easter egg. I mentally thanked Trish: I had not thought of getting an easter egg for Jenny. I would have to find an opportunity to get one, though she would have to be given it on the Tuesday after Easter, but hell, for women chocolate is always welcome!\n\nBy the time I returned they were engrossed in conversation sharing information, much of it, it seemed, about me.\n\n\"Would you make the coffee, please darling?\" ordered Jenny.\n\n\"And I believe there's some Danish, can you put them on a plate and lay the table, sweetheart?\" commanded Trish.\n\nThey looked at each other and giggled. They had teamed up already and I was outnumbered. I did as I was told and then joined them at the table. Boy, could they talk! \n\nAfter the snack, Jenny led Trish away for a tour of the house, leaving me alone in the kitchen. I wondered how Jenny would react to seeing Trish's bags in our bedroom, but there was no jealousy there that I could detect.\n\nTrish returned to the kitchen alone, Jenny having called at the bathroom on the way.\n\n\"She's lovely!\" said girlfriend number one. \"Hold onto that one!\"\n\nThey suggested we find a local pub and get some lunch there. Jenny said she'd drive, since she'd be going home that evening.\n\n\"I don't want to drive you out,\" said Trish.\n\n\"No don't worry, I've got to pack. I'm visiting my parents this weekend.\" \n\nShe then recounted her life story. \n\n\"So you see,\" she said to Trish (by this time we were seated in a pub less than a mile from my house), \"it's going to be fraught. Allan's made me see I should try to reconcile with them and get it all out in the open.\"\n\n\"He's right,\" Trish answered as if I wasn't there. \"He has good ideas -- sometimes!\" \n\nShe glanced at me, smiling. \n\n\"Talking about reconciling, what's the latest on the Ann saga?\"\n\nI recounted the meeting's progress the previous night and my worries. Both women became solemn and concerned.\n\n\"She's going to be destroyed when she finds she's been living with her husband's murderer,\" said Jenny.\n\n\"I can't imagine how that would feel,\" said Trish.\n\n\"Hold on, you two,\" I countered. \"I didn't die, or didn't you notice I'm still, shall we say, active.\"\n\nThey both laughed. \n\n\"Is he 'active' enough for you?\" giggled Trish to Jenny.\n\n\"Oh, yes!\" Jenny replied, giggling in her turn. \"Totally! But I think his skill when he's 'active' is down to you!\"\n\nI was getting embarrassed. \n\n\"Hey!\" I objected. \"I'm still here, you know! And going back to Derek, we don't know he's the guilty party.\"\n\n\"Yet!\" said Trish.\n\n\"At all,\" I countered. \"We're going to corner O'Malley and get the story out of him, one way or another.\"\n\n\"We know he's guilty as sin,\" said Jenny. \"Don't do anything silly, Allan.\"\n\n\"I think it's obvious Derek is the guilty one,\" said Trish. \"I'd lay you odds on that. He needs stopping. You're not going to let the wedding go ahead, are you?\"\n\n\"Poor woman!\" muttered Jenny.\n\nAs if by common consent, the conversation turned to other things, women's things. I might as well not have been there. Some men have fantasies about having two women. That's all they are, fantasies. Sex apart, they natter on and on about clothes and make-up and all sorts of things in which I have not the slightest interest. \n\nNot that I was going to get any three-in-a-bed sex; neither did I want any. I had a loving relationship with each of these sweet women, now lost to me for the afternoon, and each was different, and separate, and I wanted to keep it that way. Seriously, I was intensely relieved that they got on so well. Trish went to the loo.\n\n\"She's gorgeous!\" enthused Jenny. \"I'm sorry she's going. We could be best friends. You'll miss her terribly when she goes, won't you?\"\n\nI nodded. \"I've been so lucky to have had her to pull me through, and now you. Both of you are clever, effective women with the biggest of big hearts.\"\n\n\"And the perception to know a perfect man when they see him,\" said Trish kissing the top of my bald head as she returned and passed me. Then she slid into her place; the 'girls' were sitting side by side opposite me. Good for me!\n\nThe afternoon passed quickly, and we went out for dinner after which Jenny left to go home and prepare for her trip. She dropped us off at the house, hugged and kissed me with much enthusiasm as Trish looked on grinning. The women hugged each other and then she was gone.\n\n\"Allan,\" Trish said, \"don't let her go. She's just right for you. She's got everything, a loving nature, good looks, highly intelligent, and she worships the ground you walk on!\"\n\n\"I don't know what I've done to deserve two women with those qualities,\" I said, smiling lovingly at her.\n\n\"And you say all the right things!\" she answered. \"But we have an appointment. Time's running out and I want my share of you.\"\n\nSo we went straight to bed and made love. A thought crossed my mind at some point as to how Jenny might be feeling, knowing what we were doing. \n\nIt must have shown in my face, for Trish gave an extra squeeze and whispered, \"It's all right, Allan darling, she's happy you're happy.\" \n\nAt times like those you wonder if you're dreaming but don't want to wake up. In real life, I didn't believe her.\n\n------ \n\nTWENTY\n\nA Good Friday tradition in our house before the unpleasantness, was that I would bake Hot Cross Buns in the morning while listening to the St Matthew Passion by JS Bach. Why I should remember that while forgetting so much more important stuff, I don't know, but I'm glad I did. Furthermore thanks to my foresight (which seemed infinitely superior to my memory, or backsight) and the already fully stocked larder cupboard, I had all the ingredients I needed. I rose early and had got things under way when Trish arrived downstairs, looking dishevelled, as well she might after the previous night's activities.\n\nShe said nothing but shambled about the kitchen getting in my way while she made tea and toast. At last she broached the silence.\n\n\"Nice smell.\"\n\n\"Trish, you have never tasted Hot Cross Buns until you've tasted home made ones.\"\n\n\"Humph!\" she replied. I neither knew or cared whether she was dismissive of my assertion or approving of it. She sat at the table and munched her toast while I ate 'on the hoof'. As I passed behind her I kissed the top of her head.\n\n\"You are so beautiful!\" I whispered. This time there was a snort of disbelief. \n\n\"It's true.\" I asserted. Another snort. \n\nI sighed. \"There's no talking to some people in the morning.\" No reply.\n\nShe got up and came across to me where I was knocking down the dough, mixing in the dried fruit and cutting and forming the pieces into buns, She put her arms round my stomach and laid her head on my shoulder, \"Love you,\" she said.\n\n\"And I you,\" I replied, \"and I'd demonstrate how much if I weren't at this delicate stage of things.\" \n\nShe sighed in disappointment. \n\n\"I'm off for a shower,\" she said, and she was.\n\nJust over an hour later the buns were sugar-washed and on a cooling rack, and I went upstairs. Trish was fast asleep on the bed, wearing a bathrobe. I crept out of the bedroom to the bathroom and took a shower of my own. \n\nI returned to the bedroom naked and dry and stroked her face until she opened her eyes. Then she opened them wider as she saw my nakedness and my half-erection. She smiled, rolled off the bed and dropping the robe off her shoulders went to hang it up. As she passed the window she stopped, holding the robe in front of her.\n\n\"Allan, there's a girl on our drive,\" she said in surprise. \"She's just standing looking at the house.\" \n\nA pause. \n\n\"I think she's crying. I'll go and see what's the matter.\"\n\nShe pulled on some tracksuit bottoms and a tee shirt over her naked body. \n\n\"Get dressed and come down,\" she said. It was more a request for help than an order.\n\nI went to the open window and looked out. Trish was walking towards her. The road was quiet on this bank holiday and I could hear every word. The girl looked familiar.\n\n\"Hello. Are you all right?\"\n\n\"Oh, I'm sorry! I didn't mean--\"\n\n\"What's the matter hinny? Are you in trouble?\"\n\n\"It's all right. It's nothing.\"\n\n\"It's obviously something. Would you like to come in? Have a drink: juice? milk? tea? Come on in and tell me all about it.\"\n\nAnd Trish put her arm round the girl and the two came into the house. Where had I seen the girl before? Somewhere in Sale perhaps; was she a checkout girl? I hurriedly (or as hurriedly as I could manage) dressed and descended the stairs quietly. They were in the kitchen. Trish had obviously got her a drink, so I'd missed nothing.\n\nI had reached the bottom of the stairs when they began talking, and what was said froze me to the bottom step.\n\n\"So, what's the matter?\" asked Trish.\n\n\"It's nothing really. I used to live here. My mum said the house had been sold. We moved out when Mum went to live with her boyfriend. I didn't want to go; I love this house. I hoped Dad might come back someday. I wish we knew where he was. I came back for a last look. I hate living where we are, and I hate her boyfriend; he's creepy. I hate it that he and mum are getting married. But... Everything's just as we left it! And you've been making hot cross buns! Dad always did that on Good Friday. That's weird!\"\n\n\"I'm Trish.\"\n\n\"Greta.\"\n\n\"Well, Greta, my boyfriend wanted this house as soon as he saw it, and he wanted it furnished. It seems your mother wasn't interested in any of the contents so she left it just as it was.\"\n\n\"Is he here?\"\n\n\"Yes. He's getting dressed, I think. Now, your dad. What happened? Tell me the story.\"\n\n\"He walked out on us. Two years ago. He went on one of his sales meetings and never came back. He's living with another woman somewhere, but no one knows where he is. Mum was totally devastated for ages, and every day she'd say 'perhaps he'll come back'. Then I think she just lost it and got angry and bitter. \n\n\"That was when she started sleeping with Derek. But it's not like it was with Dad. No one laughs any more. Derek doesn't play with the lads, Dad used to play footy with them. He was lots of fun. He used to talk with me and take me for walks. Derek's boring \u2013 he just keeps looking at Mum with those adoring eyes. I don't think he knows we're there. \n\n\"I don't think he's very good in bed; Mum used to make a lot of noise with Dad, but it's very quiet now. I used to feel so repulsed and embarrassed when I heard Mum and Dad, but now I miss the noise.\n\n\"I can't understand why he did it. Mum and he were so happy. How could he even look at another woman? While we lived here I always thought Dad would come through the door one day. When we moved in with Derek, I think that's when I lost hope. Even if he couldn't face Mum, how could he just leave me and my brothers? How could he? I wish I knew. I miss him so much.\" \n\nI heard her begin to cry again.\n\nI felt a real sense of loss. It wasn't just my life and health those thugs had taken; they'd destroyed a whole family, and that family was, like me, still suffering. Somehow that wasn't real before this moment, but now I felt their loss intensely. Greta must not suffer any more. I heard someone get up and I hid round the corner of the stairs in case it was Greta.\n\n\"I'll be with you in a minute. I'll just see where he is.\" Trish came into the hall and saw me. \n\n\"You heard?\" she whispered. \n\nI nodded. I was still in shock. That was my daughter in there, and she was very upset.\n\n\"Will you see her? She needs you Allan.\" \n\nAgain I nodded. I couldn't deny my own daughter. \n\n\"Wait here until get her ready,\" Trish said, practical as always. \"Meeting you will be a shock; it's the last thing she'll expect, but your appearance will be even worse. Trust me, I know what's needed.\" She turned and went back.\n\n\"He'll be here in a minute. Now, you wished for your dad just now?\"\n\n\"Well, yes. I always longed for him to come home, but there's no hope of that.\"\n\n\"Listen, Greta. I'm afraid you're in for some shocks today.\"\n\n\"What d'you mean?\"\n\n\"If I told you I could put you in touch with your Dad?\"\n\n\"What?\"\n\n\"I mean it. I can put you in touch with your Dad, but there are conditions.\"\n\n\"You sure? You're not joking? You wouldn't joke would you? Anything. I'll agree to anything.\" \n\nI could almost see her bouncing in her seat. I smiled and tears started in my eyes.\n\n\"First. You must agree most solemnly not to tell anyone else where he is. Not your mother. Not your brothers.\"\n\n\"You know I have brothers?\"\n\n\"You said your Dad used to play with your brothers. Now will you swear not to tell a soul where he is? He will eventually make himself known, but not yet.\"\n\n\"Yes, yes, I don't understand why, but I'll keep it a secret. Anything to see him again.\" She was impatient, \"Can we go and see him now?\"\n\n\"Second,\" Trish said, ignoring her request. \"There are things you need to know. I told you, you are in for a number of shocks, some of them are bad.\"\n\n\"OK, OK!\" I could hear her impatience growing.\n\n\"Here goes then. Your father did not go off with another woman.\"\n\n\"So why--\"\n\n\"The day he left York and should have come home, he was attacked by a group of yobs who took everything he had, including his clothes. I'm sorry to tell you this, Greta, but they beat him up very badly. No one who saw him admitted to hospital thought he would live. And he only had his underwear on so no one knew who he was. It's taken him this long to remember he even has a family. He didn't know his own name for over a year.\"\n\nI heard a gasp. \"But I'm sure Mum contacted the hospital and there was no one admitted.\"\n\n\"The hospital was in Newcastle. I'm a nurse there. I was there when he was admitted.\"\n\n\"Newcastle? How?\"\n\n\"No one knows. Your Dad can't remember. But Greta, you have to know he was very badly injured. He still is. Greta, it's his face darling. They kicked his face in; it had to be rebuilt while he was in a coma. You won't know him.\"\n\n\"I will! I'll know him!\" \n\nMy heart bled for her.\n\n\"OK. My boyfriend can put you in touch with him. I'll get him.\"\n\nShe came into the hall. \n\n\"Off you go,\" she said with tears in her eyes. \n\nMy eyes were wet. \n\n\"Here,\" she said, offering me her handkerchief. \"Dry your eyes.\" \n\nI did and made my way to the kitchen.\n\nI limped in without my stick and walked across to her, holding out my hand. I saw her face register all the usual emotions, shock, horror, pity, and as I spoke, I saw she realised who this hideous man was. \n\n\"Hello Greta,\" I said.\n\nShe took my hand. \n\n\"You're in touch with your Dad now, chicken,\" I said with a smile, the tears forming in my eyes.\n\n\"Daddy!\" she shouted, and sprang to her feet, the chair flying backwards as she was instantly round the table and in my arms. \n\n\"Daddy!\" she sobbed and sobbed. I could feel her tears on my tee shirt, and my own fell on to her head.\n\n\"Now I feel I've come home, darling,\" I whispered. \"How could you think I would ever want to leave you?\"\n\nShe sobbed uncontrollably; so did I, and we stood like that for an age, my hands stroking her back, while Trish, her own eyes moist, bustled around us making the inevitable British solution to every emotional turmoil, a 'nice cup of tea'.\n\nAfter a while Greta calmed and I sat down; she sat on my knee with her arm round my neck. It must have looked awkward, a sixteen year old girl on my knee, but we did not care. \n\nWe drank our tea, Trish opposite us and smiling, looking from one to the other. She broke the silence.\n\n\"Greta, Your dad had to learn everything from scratch, how to talk; to wash, to eat and drink, then to walk. He's worked and worked at getting as fit as he can be. He forgets things, though his memory has come on by leaps and bounds since he got back to Sale.\"\n\nGreta looked at me with pride.\n\n\"Ugly customer, aren't I?\" I quipped.\n\n\"You're still the handsomest man I know!\" she asserted with a wide smile.\n\n\"Liar!\" I exclaimed.\n\n\"You're my Dad. There's no one better. This is the best day of my life,\" and she began to tear up again.\n\n\"Enough of that! No more tears!\" I ordered, more to stop myself from joining her than anything else.\n\n\"Er, Dad?\" \n\n\"Yes, Chicken?\"\n\n\"Trish said you're her boyfriend.\"\n\n\"Yes.\"\n\n\"Does that mean...?\"\n\n\"Yes.\"\n\n\"Don't forget,\" Trish broke in, \"your dad started going with me before he knew he had a wife and family. He needed someone. But it seems he hasn't got a wife any more. Your mum is with someone else, she's moved on.\"\n\n\"Oh,\" Greta said sadly. \"The divorce.\" Then she brightened, \"But now you can come back and talk to Mum.\"",
        "\"No, Greta,\" I said decisively. \"Things have gone too far, and there are other reasons I can't tell you about why I can't contact Mum yet. Remember you promised to keep me a secret?\"\n\nShe nodded.\n\n\"I promise you,\" I added, \"I'll tell you everything as soon as it's safe to do so. There are all sorts of things happening that it's better for you not to know about. But for now...\"\n\n\"I won't let you down, Dad, but please, let's let the boys know soon. They're not dealing with Derek well; life isn't good at home.\"\n\n\"I promise.\"\n\n\"Now,\" I said. \"It's time you had some hot cross buns,\"\n\nOf course Greta broke down crying again, memories of past Good Fridays, I thought, which now could never be repeated. Soon she was eating the buns, and her smile returned.\n\n------\n\nTWENTY-ONE\n\nIt was truly a Good Friday. I had got my daughter back, and there started the first of a number of conspiracies. I had to be careful about how much I said to Greta, so I said nothing. Greta wanted to hear the whole story of my admission to hospital, the extent of my injuries, my coma, emergence and rehab. \n\nShe held onto my hand at the kitchen table as if she thought I would disappear again if she let go. Mercifully for my knees and thighs she had vacated my lap for the chair next to me. I let Trish tell her the whole sordid business, which she did in graphic detail.\n\nOnce she had got to the place where I came home, she let me take up the story. I told her of the flat, of my return to work. She laughed at Judy fainting, was interested in my new PA, and envious of my trip to Canada. I left out my trip to Sweden. She was an intelligent girl and would make too many connections for her own and Ann's good. \n\nShe looked thoughtful for a while after I had finished with her arrival.\n\n\"Dad,\" she began hesitantly, \"if Mum marries him, can I come and live here with you? I think the boys will want to as well.\"\n\n\"Well, I suspect you're old enough to choose. I'm not sure about the boys. Mum has custody and I have access rights at the moment. We would have to discuss that, when the time arrives.\"\n\nShe seemed satisfied and that was effectively the end of the discussion. She took Trish round the house telling her tales from when the family lived here, and I followed, picking up memories as I did so. \n\nThen a phone rang: Greta's phone. We heard her side of the conversation.\n\n\"Hello Mum.\"\n\n\"...I'm with friends.\" \n\n\"...Yes I know Mum.\"\n\n\"...Mum, it's still morning; stop nagging me.\" \n\n\"...Look Mum, I'm in Sale. Can you get your head round the idea of picking me up? I'm on your way to Uncle Peter's house.\" \n\n\"...All right. I'll be outside Sale station at two, OK?\" The tone of the 'OK' was insulting.\n\n\"...Bye Mother!\"\n\nThe exchange had all the qualities of teenage speak: exaggerated patience, exasperation at one's parent's stupidity, all wrapped in studied insolence.\n\n\"Greta,\" I said quietly.\n\n\"Yes?\"\n\n\"My memory is patchy. Remind me. Do you remember me ever talking to Mum like you just did?\"\n\n\"Well... no.\"\n\n\"Do you remember me ever talking to you or the boys sarcastically as you just did?\"\n\n\"No.\"\n\n\"Don't do it, Chicken. It demeans you.\"\n\n\"Sorry Dad.\"\n\n\"OK Chicken,\" A hug and it was over. I went out and bought fish and chips; another tradition in the family for Good Friday. The effort was not lost on Greta who looked pensive as we ate. Then it was time for her to go. I drove her to the station and dropped her off. As she climbed out of the car she turned to me.\n\n\"Dad, can I come back soon?\"\n\n\"Of course, Chuck. It's your house too you know. I'll get you a key.\"\n\n\"Sunday?\"\n\n\"Fine. If you're free.\"\n\n\"Good. And Dad?\"\n\n\"Yes?\"\n\n\"Thanks for telling me off.\"\n\n\"Pardon?\"\n\n\"It shows you're my Dad. Derek never tells me off. He's afraid to. Bye!\" A kiss and she was off.\n\nI was glad she was my daughter. She was a daughter to be proud of.\n\nHer visit was a Godsend for it allowed my to call at a supermarket and get an egg for Trish and Jenny and another for Greta.\n\nWhen I returned to the house, Trish was in the garden kneeling at one of the flowerbeds, weeding. It set the tone for the weekend. The weather was fine and the garden needed a lot of attention. \n\n\"Don't you want to do something else?\" I asked her.\n\n\"No,\" she replied with a happy smile, \"I just want to be in this house with you. I want you to remember me in this garden and in your bed!\" she grinned wickedly, \"Flowerbeds first, then feather bed after!\"\n\nSo we spent the rest of the day and the whole of Saturday gardening. In the late evening we curled up together and listened to jazz and I found the time to make a sponge cake for the next day. Then we shared a bath, washed each other with much laughter, and went to bed. We made love gently and attentively, as if we had to remember this time for when we had lost each other. We had been making love for months and there were no surprises, just comfort and reassurance that we loved each other deeply. It was thoroughly satisfying and relaxing, necessary after the muscle aching activities of the day.\n\nOn Sunday morning she brought out a huge chocolate egg. \"Happy Easter!\" she said.\n\nI brought out hers, \"Happy Easter Trish.\" She was shocked.\n\n\"How did you remember--\"\n\n\"I had to come clean. \"Saw yours when I brought in your bags.\"\n\nShe was not bothered, but asked if I'd got one for Greta.\n\nGreta arrived in time for lunch on Sunday and we went out to a restaurant and then for a walk. Greta tried to get me to explain why I couldn't talk to Ann. I promised she would be the first to know as soon as the police allowed it, but reiterated the need to keep my presence secret for the time being. She was not happy, but agreed nevertheless. I could see she picked up on my mention of the police, and I assumed this convinced her, but she said nothing. \n\nWe arrived back at the house and I put together a teatime meal of salad, ham, salami and cheese, with scones and the cake. It was comforting but also strange. The three of us fitted well together and we felt like a family. Trish commented on it and Greta agreed. \n\nTrish said she was glad to have had the experience now she was going. This was news to Greta, who was a little distressed on my behalf. I was touched by her concern, and Trish was about to tell her about Jenny, when I shook my head.\n\nI asked Greta if she would get a DNA test, to prove she was my daughter. She agreed happily and I gave her the address of a clinic David had written down for me. It was the school holidays so she said she would go on Tuesday. I gave her a letter for them to say I would pay for the test.\n\nWe drove Greta home, and I got my first look at the huge edifice that was Derek's house. The house in Sale was large but it was small in comparison with this mansion. Greta grunted that it was a barn and she hated it. She hugged Trish after assuring herself that she would see her again before she left for New Zealand, and then hugged me, gave me a sloppy kiss and was gone, sashaying up the drive, with an exaggerated sway of her hips.\n\n\"That girl will break hearts,\" said Trish as we watched her into the house. \"What a body!\" \n\nFather's sometimes have to be told such things. It came as a shock to me that my little daughter was nearly a full-grown woman, and I looked at her receding swagger with different eyes. I would have to have a talk with that young woman! I told Trish as much.\n\n\"You'll do no such thing!\" she exclaimed. \"That girl might be sexy but she's got more morals than I ever had, or have, come to that!\" \n\nOnce home we sat with our hot drinks and enjoyed some more music. We knew she would have to be off early the next morning. She was on nights for the coming week. \n\nSo in the early morning she went, and I did a little more gardening.\n\n------ \n\nTWENTY-TWO \n\nColin picked me up at eight. The others were already in the car. We had toyed with the idea of going into the pub for a drink, but Keith counselled against it.\n\n\"If he leaves early it will be obvious if we all troop out after him. I suspect that if he thinks no one has seen him with us he'll be more likely to talk.\" \n\nWe had to agree, and remained thirsty. At nine, out came Ted O'Malley. He had to come by our parked car on his walk home. The events that followed resembled a gangster film. Keith opened the front door, stopping him, while opening the back door allowed me to get behind him.\n\n\"You again!\" he addressed Keith.\n\n\"Yes. Get in.\"\n\n\"I don't think so.\"\n\nColin had emerged from the other side of the car. \"Get in or you'll be in the nick before morning. There are a few things about you I'm sure they'll love to know!\" Perhaps it was a bluff, but he fell for it.\n\nI stood back and he got in the back of the car. Colin got in the other side and I followed him. Keith got in the front.\n\n\"What's this about?\" O'Malley asked sullenly, looking a little fearful.\n\n\"You remember our talk?\" asked Keith, \"Well, now we need names. Who employed you and who were the other three blokes?\"\n\n\"No way!\" he exclaimed, \"More than my life's worth.\"\n\n\"Let me put it this way,\" said Colin, \"Sitting to your left is the man you were sent to tail. Take a good look at him.\"\n\nHe looked and shuddered. \n\n\"You led those three to me Mr O'Malley,\" I growled, \"and they were under orders to kill me, obliterate my face and take everything that might identify me. They thought they had succeeded. They hadn't. Now I'm just a tad annoyed that they, and you for leading them to me, have destroyed my life. Now, with the info the police have and what they're going to get, they're going to be knocking on your door. Accessory to attempted murder, how long Colin?\"\n\n\"Five years?\" suggested Colin embellishing the time a little.\n\n\"And if you get off, Ted,\" I continued, \"I'll be coming for you. I may look a wreck but I'm very strong, I had to be to survive. How would you like to look like me -- Ted?\"\n\nHe began to tremble. \n\n\"So,\" said Colin, \"You tell us names, and when the others are arrested we'll make sure the police know that you've been helpful to us.\"\n\n\"But we can guarantee that the others won't know about this conversation,\" Keith added. \"Of course, if you don't talk to us it may get around that you have been shooting your mouth off. So, how about it?\"\n\nO'Malley began to look wretched, beads of sweat appeared on his face and reluctantly he nodded.\n\n\"Who paid you and how much?\" asked Colin.\n\n\"I don't know. You've got to believe me. A man approached me. Very tall he was. He promised to pay me well for tailing... you, and he said there would be building contracts for me, if I kept me mouth shut.\" \n\nHe spoke quietly, he seemed defeated, \"I got three thousand quid.\"\n\n\"Did you know the man?\"\n\n\"No. I think he must be a friend of Derek Fanshaw. I think I saw him in Fanshaw's office a few years ago but I couldn't swear to it. That's what I thought, that it was the same man.\"\n\n\"Why should you think that?\" asked Keith.\n\n\"Fanshaw is my usual contractor. I work for him most of the time.\"\n\n\"And the others?\"\n\n\"What others?\"\n\n\"The three thugs who did this to me,\" I muttered.\n\n\"Craig Wilson, Lee Harper, Gary Grantham. They work for Fanshaw.\"\n\n\"How much did they get?\"\n\n\"They were gloating over me, said they got ten grand each.\"\n\nThere was a collective gasp and a \"Good God!\"\n\n\"Now their car,\" said Keith, \"The Red Toyota. Registration?\"\n\n\"MZ 02 QBW, but Craig got rid of it as soon as they got back from Newcastle.\"\n\n\"You knew they went to Newcastle?\" Colin pounced. \n\n\"They said they'd 'done the job' there.\"\n\n\"So you knew they'd taken me there,\" I hissed in his ear, \"and you let my wife suffer, knowing that!\"\n\n\"I don't know your wife. It was just a job for me.\" \n\nMy hands were clenched and Colin could see. He hurried to speak. \n\n\"Listen, toe-rag, you'll be arrested some time soon, and so will they. Keep your mouth shut and they'll not know you've talked. Tell them about this and you'll go down for years, after we let Allan here have his fun with you. Understand?\"\n\nHe nodded, the sweat was running down his face.\n\n\"OK, get out.\" spat Keith.\n\nI made room, he got out, and we drove away.\n\nWhat a strange feeling. After all this time we knew, I knew, who had tried to kill me; who wanted me dead. I didn't care what Fanshaw's motives were, whether he wanted to have my wife, or my money, or both. He was a murderer. It was a strange feeling because until the moment O'Malley said Fanshaw's name, I had felt the quest was almost about someone else. Now it was very personal. \n\nThe man who had stolen my life, my future married life, my wife, my children and who was scheming to get my money and destroy my company, was happily living with my wife, and worse she was living happily with him, blissfully unaware that she was sleeping with the man who had effectively murdered her husband and her previous life. Further he had fawned over her, played the solicitous friend and in all that had lied to her in the most basic way. Now he was planning to marry her.\n\n\"The marriage must not happen,\" I said out loud. \n\nThere had been silence in the car, each of us with our own thoughts, though I suspect they were wondering how to talk to me about it. We were fellow conspirators. Yet now I was alone. After all, it had not happened to them, though their faith in me was vindicated.\n\n\"No, it mustn't,\" said Colin, \"All that info goes to the team tomorrow. It won't take long to find the car. It'll have your DNA in it somewhere.\"\n\n\"But Wilson sold it,\" said David, \"It could be anywhere.\"\n\n\"No matter. If it's not been scrapped, we'll find it. Just watch.\"\n\nWe went to the Cross Keys and had a few. Poor Colin had to drink orange juice since he was driving. He dropped everyone off and then took me to the house.\n\n\"You're not going to do anything rash are you?\" he asked, as I began to get out of the car. \"It would be a bad idea to tell Greta.\"\n\n\"Greta hates the man, even more now she's found me again. She won't talk. But I want her to keep me informed about what goes on in the house. Don't worry, I'll be careful.\"\n\n\"Just don't mess up the investigation.\"\n\nI nodded. I repeated, \"I'll be careful. I'm more interested in getting Ann out of Derek's way, but if I can I want him to squirm as well.\"\n\n\"Please don't do anything about Ann until we have the case sewn up. Promise me, Allan!\"\n\n\"Sorry Colin,\" I said firmly, \"I'm going to try to contact Ann as soon as possible. She's in some danger and I'm damned if I'm going to let her marry that bastard.\"\n\n\"Then can you promise me to keep Derek's guilt out of it until we have the hard evidence?\"\n\nI promised I would try, he left and I made myself a simple supper of microwaved stew and some bread. Waste not, want not! After the meal I sat and thought about how I would get at Derek and how I would eventually deal with meeting my own ex-wife, who I hardly knew any more, and against whom I felt deep resentment.\n\n------ \n\nTWENTY-THREE  Trying to Talk\n\nJenny arrived at work on Tuesday with a happy but tired face.\n\n\"Success?\" I asked\n\n\"Oh, yes,\" she answered quietly. \"It was harrowing, but we ended up with the air cleared. I'm glad you persuaded me to go.\"\n\nJenny found the phone number of the company where Ann worked. I had told her that her fears had been right, and that the evidence pointed to Derek as the one responsible for my condition. She agreed the wedding needed to be stopped if at all possible. \n\nI phoned. The receptionist asked who I was.\n\n\"Allan Jonsson, her ex-husband,\" I replied. \"I need to see her urgently.\"\n\nThere was a long, long pause. Then she came back.\n\n\"Mrs Jonsson says she does not wish to speak to you or meet you. Please talk through her solicitor.\" Connection severed. That was it.\n\nJenny's face was like thunder.\n\n\"Here,\" she said, \"give me the phone.\"\n\n\"Hello,\" she said when connected, \"This is Jonsson's. Could you put me through to Mrs Jonsson.\" \n\n\"Mr Bucklow's secretary,\" She waited then handed to phone to me.\n\n\"Ann,\" I spoke hurriedly, \"Please don't hang up. I need to see you. It's important.\"\n\n\"How dare you trick me like this. You louse. You disappear for three years and then want to talk to me?\" she was shouting, \"You've got a nerve. We're divorced. Marry your slut and leave me alone.\"\n\n\"Ann,\" I begged, \"You need to know the true facts--\"\n\n\"I know them. I've even got pictures. Talk to my solicitor.\" She disconnected.\n\nJenny made me some tea. I needed it. I was irate. I was seething, but there was no point in trying again. I would have to see what David could do about arranging a meeting.\n\nAfter work I called at the Police Station and gave a sample for a DNA test. Then I went to the gym and worked off my anger until I was exhausted. I was only home a few minutes when Greta rang.\n\n\"Dad, did you ring Mum today?\"\n\n\"Yes,\" I answered in a monotone.\n\n\"Well it made teatime interesting,\" she laughed. \"Mum was ballistic. She told Derek he'd never guess what happened and then launched into this tirade against you. It went on and on. \n\n\"But the interesting thing was Derek's face. He definitely didn't believe it and when Mum paused for breath he said so. It was a hoax call he reckoned. But Mum floored him by saying that you wanted to meet her. \n\n\"He suggested she did just that, if it was you, you could negotiate, if not she'd have called this person's bluff. He reckoned David had organised it because of the court case over the money, what is it called, alimony?\"\n\n\"Something like that,\" I replied.\n\n\"Anyway, she said there was no way she was going to meet you, after all you did to her. Then he said it might get her the money quicker if she did talk. She hit the roof! She wasn't interested in the money; it was all he ever talked about. He said she was being stupid. I left at that point and so did the boys.\"\n\n\"Well thanks for letting me know, Chicken,\" I said, without enthusiasm, \"You'll remember your promise won't you? I've got to work this out for myself and soon I'll be able to tell you the whole story.\"\n\n\"Oh, by the way,\" she said by way of conclusion, \"I got the test done; they're sending the results directly to you.\"\n\nWe signed off with expressions of mutual love, and I sat a while and thought.\n\nWhy was she so angry? OK, so she thought I'd left her but that was two years ago and now she had another man in her life. There seemed to be hatred in her attitude. Surely after twenty years together and my offer to explain, she would want an explanation? I had no answers to those questions, they resided in Ann's own mind, not mine. The thing I couldn't work out was how to get through to her.\n\nNow, there are times in life when we look back on certain crucial actions of ours, and when we do, the interrogative we use most is 'why'. We know 'what' we did but often seek reasons -- the 'why'. \n\nWhy didn't I march round to her offices and confront her? I still don't know. I know I was deeply resentful and angry at her attitude and the fact she did not search for me longer than she did. Now I was incensed at her unreasonable refusal to speak to me. I can be obstinate; very obstinate. Witness my obsession with getting better. I often wonder if I was so pig-headed before the attack; brain damage can often change behaviour.\n\nHowever, there was little time in the next few days to dwell on the matter. On Friday Jenny and I were to fly to Hamburg for a meeting on Saturday with a client. It was a complicated brief and he wanted to talk to us and then work towards a contract on the Monday. We had much preparation to do; meetings with Geoff and with one of our best technicians, preparation of a presentation, the usual things. \n\nWe had so much work on at the time that there would be a delay in producing what he wanted beyond a prototype, and I was sure this might be a break point. Jenny was already putting out feelers to a number of companies that could do the fabrication, to sub-contract the work if necessary, but obviously this was to be a last resort. ",
        "Two events were relayed to me by Colin, and I did one thing that my daughter thought was really stupid.\n\nOn Wednesday, Colin rang in the evening to tell me the car had been found. It was being driven by a lad with no insurance, and as such had been confiscated. Normally it would be crushed, but some observant copper had noted the registration number and forensic took over. Keith was away somewhere so the 'four' did not meet.\n\nAlso on Wednesday I was told by Viv that it was my wedding anniversary on Friday, so I hit on the idea of sending Ann a card. It did not say \"Happy Anniversary\"! It said \"On Your Anniversary\" and the inside was blank. I summoned up all my strength, writing was a painful exercise for me -- and wrote:\n\nOn the anniversary of our marriage Thank you for so many happy years I wish you happiness with your new partner Please reconsider seeing me I have an explanation for my disappearance you do not know the true story.\n\nAllan.\n\nOn Thursday, Colin rang to say that Derek's accounts had been taken and were being examined. He hastened to say that Derek thought the police were acting for the Inland Revenue and they did not enlighten him.\n\nFriday the DNA results for Greta came through. I had sent mine to the same company by post, and the report asserted in their legalistic way that Greta was indeed my daughter. \n\nJenny and I were taking an evening flight to Hamburg, and Greta caught me on the phone as I was awaiting the taxi.\n\n\"Hey, Dad,\" she bubbled. \"Nice one!\"\n\n\"Pardon?\"\n\n\"The card!\" she almost shouted. \"Mum went ballistic! She ranted on to Derek about knowing all there was to know about your infidelity, and would see to it you suffered for 'this campaign' as she put it. \n\n\"Derek pointed out that the writing did not look like yours, and that stopped her for a minute. She put it down to 'another of your tricks' to arouse her curiosity. Well, she said, it was not going to work. Dad she's even more resolved not to see you or talk to you now.\"\n\n\"Oh.\" I must have sounded disappointed for her reaction was one of total surprise.\n\n\"Good God Dad,\" she said quite seriously, \"surely you didn't think sending a card would help did you? I thought you were pushing her buttons! You are thick sometimes Dad!\"\n\n\"I think I must be,\" I replied.\n\nThe trip was not a success apart from very pleasant Sunday seeing Hamburg and sampling the food stalls along the waterside -- that, and making love with Jenny each night, and a 'quickie' on Monday morning. She had surprised me telling me she had started on the Pill, and had been fitted with a Cap until she was safe, which allowed us more freedom and spontaneity. \n\nThe bottom line was that ours was a superior product, but they didn't want us to sub-contract and the time delay was too long. The penalty of success; my company had too much work on. We needed to expand and I resolved to discuss this with Geoff when we returned. Jenny was depressed and I was morose on Monday night. We hugged briefly and went to sleep.\n\nNo sooner was I back in the office on Tuesday after a bumpy flight back than I got a call from David.\n\n\"You know the court hearing is Thursday?\" he began without preamble. I had in fact forgotten.\n\n\"I thought you were handling that,\" I said rather tersely.\n\n\"Bad trip?\" he divined.\n\n\"Couldn't have been worse.\"\n\n\"Anyway,\" he moved on swiftly, \"it may come to it that you have to prove who you are and to do that you'll need to be present. Just in case, you understand.\"\n\n\"Right,\" I replied. \"That raises two points. First, I've phoned and written to Ann and she has utterly refused to see me. I'm not happy, and I have no intention of meeting her without her agreement. She's insisting everything is done through you and her solicitor. I want you to ask her for a meeting on my behalf, preferably before the court date. \n\n\"Second, OK, I will be in court, but as a spectator unless absolutely necessary. I don't want to meet her under those circumstances if I can avoid it.\"\n\n\"OK,\" he replied in a resigned tone. \"I'll talk to her.\"\n\n\"No mention of my attack though, David. She has to meet me still believing I've left her. I want the pleasure of seeing her face when she realises the truth. Oh, and under no circumstances is Derek to be there when we do meet.\"\n\n\"Understood.\"\n\nIt appeared that he tried. He was back to me in less than an hour.\n\n\"Sorry, old son,\" he sympathised, \"your ex. is feeling vindictive and vengeful. I don't know what you put in your letter but, let's put it delicately, she didn't like it. I tried everything, I said she'd get a better deal from you if she saw you. No she'd let the court decide. I put it to her that she would probably get less than she gets at the moment. She didn't care. I tried that you had information that would change her mind about you. Not interested.\"\n\n\"OK. Let's do the court thing and then try her again. If what you say is true and she gets off badly, she may be more amenable to a bit of generosity from me.\"\n\n\"I think that would stick in her throat, but Derek might convince her, after all, he's the one needing as much cash as possible.\"\n\n\"We'll see.\"\n\nGeoff and I spent all day Wednesday discussing the need to expand further. We decided it was necessary and would need our own cash; the banks weren't interested. I phoned David and told him of the plans and he noted down the relevant figures. He complained that it was short notice but needed to be put before the judge for the next day's hearing.\n\nI acquainted him with the reasons, primarily the failure of our trip to Germany, which he seemed to think might sway the judge. We said 'au revoir' until the next day. He also said he had put before the judge the police interest in Ann's partner, asking for a delay in the hearing. This was denied.\n\n------ \n\nTWENTY-FOUR \n\nSo the next day I was there in court. My ex-wife was obviously intent on paying her absent ex-husband back in some way for his desertion and for causing her so much suffering. I assumed she also wanted to help the man she felt had stood by her, though not enough to forgo her revenge. I could put an end to it all but I wasn't going to. I had Colin to consider.\n\nWe were there early and I was seated at the back of the visitors' seats. Derek, Ann, his solicitor and their barrister arrived. The couple noticed my presence and It was clear they were trying to work out why I was there. I smiled my lop-sided smile at Ann but she did not return it. I felt a frisson of annoyance. I had never insulted her; I had been courteous to her, and she was cutting me. It strengthened my resolve to reveal myself to her in my own way, and in my own time.\n\nThere were a number of legal statements and procedures. There followed arguments from the barristers on each side, most of which I couldn't follow. The assets of each party were already before the judge, and had to be outlined and argued for by them. \n\nAnn's barrister began since Ann was the plaintiff. I gathered that what Ann wanted was over half my savings, and the current amount I was paying to her and the children every month. I owned about six million pounds in various portfolios. She wanted four, three for her since she had supported me for twenty years and one million for the children to be placed in trust for them.\n\nWhat I did understand clearly, and it put me on edge, was the next submission. The barrister, a woman with a crisp and quiet delivery, argued that Ann should have a half share in my ownership of the company. This would amount to forty per cent of the profits. Since it was a limited company she would have a vote on the company's policies.\n\n'My' barrister simply checked the assets with the judge and only added that the company needed my money to expand. It would mean more people employed, and ultimately more profit for Ann if she had a share in the company though some of my millions would be needed for the expansion. He reminded him of my past history of reinvestment.\n\nThere followed a recess for two hours. David, the barrister and I went for a pint. The barrister said that the judge was likely, on past showing, to be favourable to our case. He thought we would come out of it well.\n\nHe was right.\n\nIt took some time for the judge to deliver the judgement, but I was able to follow most of it. \n\nHe noted that the house was already sold and all the proceeds given to Ann; that this was more than generous. Since I had bought the house, I had effectively given her the proceeds for my half of the house and had bought her out. This brought about some consternation in Ann's camp. She was angry, and Derek was confused. Until that moment Ann had not realised that I had 'bought' the house.\n\nHe then stated that Ann was now in a new relationship and had a large income of her own from her work. He therefore made no order for me to pay her any maintenance, but assessed my contribution to the children's maintenance at about a third of what I was paying her for them. He noted also that I had been paying well over the odds for the past two and a half years. He reminded her that should the children decide to live with me at any stage, the maintenance paid to her would cease, but would then be recoverable from her.\n\nShe was entitled to a share in the business. I should transfer 30% of my share to her. I knew that as a limited company she could only sell the shares to me or to Geoff. She would get dividends, but could not realise the assets. She would get a 24% of the shares; I would have 56% and Geoff 20%. \n\nSince her share of the dividends would only increase if the company grew, he said he would allow me to invest my assets to expand the firm before dividing the remainder 50-50 with her.\n\nThere was consternation in Ann's camp. Well, I thought, David did warn her. \n\nBut the judge had not finished. \n\n\"It appears,\" said the judge, \"that there are police investigations concerning Mr Jonsson. I therefore direct that while Mr Jonsson must pay maintenance for the children effective immediately, the rest of the judgement will be held in abeyance until those matters are resolved. I accordingly adjourn these proceedings sine die.\"\n\nSo Ann and Derek were to get nothing until the trial of those who attacked me was concluded. There was a good deal of angry discussion between Ann and Derek and their lawyers.\n\nI cannot deny I felt a deep sense of satisfaction at the outcome. No, I was elated. Now perhaps she would agree to see me.\n\nI think it took a lot of self-control on David's part not to rush over and congratulate me, but he resisted the temptation and kept it until we met in the pub afterwards.\n\n\"I can't believe the judge did that!\" enthused David. \n\nThe barrister looked smug, \"I told you he would give us a good deal,\" he said. \"Judges have more or less infinite discretion when they adjudicate ancillary relief. Our man is scrupulously fair. I think he saw an element of greed in your ex-wife's petition. I won't say he punished her deliberately, but it's certainly turned out that way.\"\n\nThat evening I was at home recovering from another bout of physio when Greta rang.\n\n\"Dad, things are very quiet at home. I've got out for a while. They are going round in circles talking about the court case this morning. Derek is trying not to tell Mum 'I told you so', but that's what he's thinking. Mum looks really sad. Is it right they've lost the case?\"\n\n\"Well, Chicken, it's not really winning and losing; they just didn't get what they wanted.\"\n\n\"Listen Dad. Mum and Derek were talking about the case, and they were talking about you being back. Derek thinks you're an impostor and the police are going to get you and Mr Lombard for fraud, but Mum isn't so sure. The problem is the boys heard them. They're wondering why you haven't seen them. They're upset Dad.\"\n\nShe paused.\n\n\"Can I bring them over?\"\n\n\"Yes, you'd better. Tomorrow?\"\n\n\"I'll bring them after tea.\"\n\n\"Greta, you need to prepare them for what I look like. Do it on the way, not at home, and get them to promise to keep quiet about the visit. Things are getting close to a conclusion here. I'll tell you everything I know the next time you come alone.\"\n\n\"Ok Dad.\" She sounded upbeat. \"See you tomorrow.\"\n\nI was intrigued by Derek's interpretation of the judge's remarks. He obviously believed me to be dead and gone. Boy was he in for a surprise! Still, it kept his attention from the fact that the police were looking at him. However it had been dawning on me that Greta deserved to know as much as I did. I hoped she would be able to cope with the knowledge.\n\nThe next day was Friday and Jenny was due to come for the weekend, but when she heard the boys were coming over, she volunteered to stay at home and wait until they had gone home before arriving.\n\n\"They'll have enough on their plate dealing with the new you,\" she said, laughing, \"without coping with your girlfriend, and come to think of it, Greta would need to get used to you having two girlfriends! Though come to think about it again, I reckon she'd be impressed!\"\n\nI told her I doubted that but thanked her for her thoughtfulness.\n\nI visited the gym on the way home. I know I go on about physio and the gym, but it was essential to my general improvement. My body was hardening and muscles and tendons were tightening. It was hard work and dominated my life at the time. Personally I think it was also responsible for my improving mental acuity, and my memory.\n\nI had finished showering, and had made some of Jan's favourite biscuits (cookies) when the doorbell rang. When I opened the door I knew them. They were so much older and taller than I expected. Jan looked at me and his lip trembled. Stefan grabbed Greta's hand and looked fearful. It seemed a long time we all stood there on the doorstep but it was probably only a few seconds.\n\n\"Come in boys,\" I said, standing back and allowing Greta to lead the boys to the living room. They had different ideas. They were off running and up the stairs to their rooms. We could hear their exclamations as they found things they had left behind, and their posters still on the walls. Greta looked exasperated.\n\n\"They're boys Greta,\" I chided her, \"Give them time.\"\n\nThey clattered down the stairs and into the kitchen.\n\n\"Biscuits Stef!\" cried Jan. \"Dad's made biscuits!\"\n\nWe followed them into the room. Jan fell upon them and Stefan was close behind. Greta and I smiled at each other. The ice was broken. They were at home.\n\n\"Sit down, lads,\" I said, and they sat down where they were at the table. They were not going to leave the plate of biscuits! I took the chair opposite them and Greta sat next to me after giving them each a glass of milk from the fridge.\n\n\"I remember these biscuits, Dad,\" said Stefan shyly.\n\nI smiled and Jan choked on his milk. I raised an eyebrow, or rather I raised what used to be an eyebrow. The effect must have been even more comical for both boys collapsed with laughter. Greta bristled, and I laid my hand on hers.\n\n\"Dad, you look so funny when you smile,\" Jan was still laughing. \"Sort of lop-sided!\"\n\n\"I'm glad you find me amusing.\" I smiled.\n\n\"Did it hurt when the men hit you?\" asked Stefan, gaining confidence.\n\n\"Sorry, Stefan,\" I replied. \"I can't remember anything about being attacked.\"\n\n\"Greta said you were in a coma for nearly a year,\" added Jan.\n\nSo the talking went on about my recovery, and the boys were thoroughly relaxed. They almost looked proud of their battered Dad, but eventually the hard questions started.\n\n\"Now you're back Dad,\" began Stefan, \"are you coming back to Mum soon?\"\n\n\"Stefan it's not as easy as that,\" I told him. \"Mum is with someone else now. We are divorced and she is marrying him next week. So I don't think it's likely, do you?\"\n\n\"But when she sees you she'll be so sorry and she'll call off the wedding and then you'll both be able to marry.\" His logic was impeccable for a ten year old.\n\n\"I wish it were so easy, Chicken,\" I replied, trying my hardest to find a way to let him down gently. \"It's been two years and she loves Derek now.\"\n\n\"But he's so boring!\" exploded Jan, who had been getting more and more frustrated with my answers. \"You've no idea Dad. He never does anything with us. He just stares at Mum all the time. Makes me sick!\" He made a retching noise and the other two laughed.\n\n\"It's true Dad,\" said Greta. \"I'm sure Mum isn't totally happy. I think she's marrying him because he's the best she can find. She doesn't sing as she goes round the house like she used to.\"\n\n\"And you and Mum used to laugh a lot,\" Stefan added.\n\n\"And you used to tickle each other, and you were always joking. Honestly it's so dull!\" said Jan.\n\nIt saddened me to hear that. The picture of a dull humourless family hurt. I did remember our play fights, and the games in the garden.\n\n\"And,\" added Greta, \"He never does a tap round the house. You used to cook and bake, and clean and iron stuff. You shared the jobs with Mum. He comes in and flakes in an armchair. Mum has to do everything, and go out to work. I help though.\"\n\n\"Dad?\" Jan said before I could comment.\n\n\"Yes Jan?\"\n\n\"If Mum marries Fanny--\"\n\n\"Fanny?\"\n\n\"It's what we call him,\" grinned Stefan. Greta gave an embarrassed smile as well.\n\n\"Go on Jan,\" I said, not wanting to comment.\n\n\"If she marries him I want to come and live with you.\"\n\nThere, it was out.\n\n\"So do I!\" echoed Stefan. \"Can we?\"\n\nOnce again I was caught. \n\nI was still thinking of a suitable reply when Greta added something worrying. \n\n\"I'd like to join you too Dad,\" and then under her breath, \"I don't like how he looks at me.\"\n\nI pretended not to hear the latter though it frightened me. At some stage I would have to follow that up.\n\n\"Kids,\" I said, \"as far as I am concerned, you can come and live here and welcome, but don't you think that's rather hard on Mum? She loves you, you know; and we would have to get the arrangements changed. Mum has custody of you three, and I only have access rights. That would have to be reversed, and Mum probably won't agree.\"\n\nThere was a sullen silence. \n\n\"Sorry,\" I added. \"I didn't make the rules.\"\n\n\"Please Dad,\" said Greta. \"Please talk to Mum. She's going to marry him next week. I'm sure she would change her mind if she could talk to you. That marriage is all wrong.\"\n\nSilently I agreed. When she knew the rest, she would know exactly how wrong it was, but now was not the time.\n\nIt was time, however, to talk tactics with my children. I explained to the boys that there were things afoot that their mother shouldn't know about and I couldn't risk them blurting out. They would know fairly soon. I explained that I had tried to see her but she had refused. \n\n\"She is very angry with me,\" I told them, \"because of what she thinks I've done, but I can't tell her the whole story because it would ruin some investigations the police are doing. I'll make one more attempt and after that I'll have to surprise her, once I know what the police are going to do.\"\n\n\"Derek thought the police were investigating Uncle David,\" said Jan.\n\n\"Well, they aren't,\" I replied, \"but I really can't tell you any more.\"\n\n\"Can we tell her we've seen you?\" asked Greta. \"She may want to see you if she thinks you're going to take us away from her.\"\n\nI had not thought of that. There was a risk they'd say too much. If Derek knew that I was badly injured he'd be alerted, and he in turn may well alert the thugs who attacked me.\n\nI decided to risk it. \n\n\"OK,\" I said, \"you can tell her we've met, but there have to be rules. Lads, these rules are incredibly important. One slip and you could ruin everything. Don't let me down.\"\n\n\"We won't Dad,\" they asserted. I hoped they could honour that promise.\n\n\"Rule One,\" I said. \"No mention of what I look like. I am well and fit; that's all she needs to know. She knows where I live. She must not know about my injuries. D'you understand?\"",
        "They nodded.\n\n\"Rule Two. No mention of the attack on me. You can tell her to talk to me if she wants to know what really happened to make me leave her. You can deny I went off with someone else. I didn't. You can tell her I can prove that I didn't. So she mustn't know I've been attacked. Yes?\"\n\nThey nodded. \n\n\"Rule Three. Do not give her any information she doesn't ask for. Answer questions. Don't volunteer. Understood?\"\n\nThey nodded.\n\n\"If she asks if I am with another woman at the moment boys, you don't know that. Greta does. Refer Mum to Greta. But you can see, there's no one living here with me at the moment.\n\n\"Please boys,\" I pleaded, \"don't let me down on this. You could destroy a lot of good work the police are doing finding out who did this to me. OK?\"\n\nFor the first time since they arrived, Jan came round the table and hugged me. I was touched. It was not easy for a teenager to do. Stefan took that as permission and came round and sat on my knee, his arm round my neck. I blinked back the tears. Greta's eyes were watering. We were a family again, fractured, but a family.\n\nIt was time for them to go. As they left they hugged me and Greta kissed my cheek.\n\n\"Greta,\" I whispered. \"Come back soon. Things to tell you.\"\n\nShe nodded and smiled and they were gone."
    ],
    "authorname": "Alwaysraining",
    "tags": [
        "mystery",
        "divorce",
        "romance",
        "family"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-way-back-ch-05"
}