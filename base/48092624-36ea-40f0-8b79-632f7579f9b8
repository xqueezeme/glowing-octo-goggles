{
    "title": "The Sun Also Rises",
    "pages": [
        "Fair warning, this is going to be a long one. I need the space to develop all of the characters that come and go through the story. As you can probably tell from the title I adapted the idea from Hemingway. His characters have major nerd tendencies and I find that interesting. \n\nI write about places where I've been and things that I've done. That's the case here. I have to admit that I was never chased down the street by bulls. But I HAVE done the racing thing as described. So I reimaged things that way... Enjoy! - DT\n\n*****\n\nSunset\n\nI met Janet on a porch in Adams-Morgan one steamy DC night. \n\nIt had been a typical summer day. The heat and humidity were both hovering around 100. And I'd sweated through my underwear. \n\nNobody in their right mind would be in Washington in July. It's no coincidence that the varmints in Congress scamper off for a five week recess then. But my graduate work chained me to the place. So there I stood, suffering. \n\nIt was fucking miserable.\n\nThe District of Columbia was built on territory that was contributed by the States of Maryland and Virginia. \n\nAnd there was no way that our rapacious founding fathers were going to donate productive agricultural land to the cause. \n\nSo instead they gifted the Nation with a prime piece of Potomac swamp. \n\nAnd, even though it has been paved over by a lot of expensive real estate, the essence of the original quagmire still lingers. \n\nI straightaway noticed two things about my future wife. \n\nFirst, she was draped in a ratty old porch couch looking totally shitfaced, which boded well for my drought relief problem. \n\nI had been going through a lengthy slump in the sex-with-anything-but-my-hand department. So I wasn't really looking for romance. \n\nSecondly, she had a big beautiful set of jugs. \n\nIt might seem shallow to be attracted by her chest. But as they say, \"you can't motorboat a personality.' \n\nShe had a cute oval face, not beautiful but pleasant and really thick brown hair, which flowed down her back in waves. She had an incredibly sexy mouth with very full and sculptured lips. Movie stars pay a fortune for lips like that.\n\nShe wasn't passed out or anything. She was just clearly at a place where her judgment might be seriously impaired. \n\nIn short, she was exactly what I was looking for in a woman.\n\nI am not a predator. I would never force an unwilling girl. I am just somebody who typically needs a lot of alcohol to score. The fact is, I do a lot better with females if their powers of observation are reduced to a point where they don't notice my inherent lack of savoir-faire.\n\nI plopped down next to her. She gave me a goofy smile and a slurred, \"I was hoping you would come over to talk to me.\" \n\nThis was something new? Most of the time when I sit next to a pretty girl I get, \"Fuck-off creep.\"\n\nI am average in every way, height, weight, and looks. And my approach to women definitely needs work. So females usually decide life is WAY too short to waste time talking to me. \n\nHaving one actually say that she was HOPING that I would talk to her was a new wrinkle. \n\nI tried on my best Prince Charming expression and said, \"Do I know you?\" \n\nDamn! That wasn't very charming!!\n\nShe said in one of those furry drunk voices that indicate that she was well over the line, \"I was in your cryptology class last year. Don't you remember me?\"\n\nWow, at least she saw me in my element. I thought to myself, \"Any woman who takes an advanced code breaking class is a righteous nerd bitch. And I am king of that. \n\n\"Maybe that will offset some of the factors that I lack, like looks, money and sex-appeal. Not to mention a few aspects of personal hygiene. \n\n\"In fact, this drunken little nerdette might be the girl I have been searching for my entire life.\" \n\nBut I still didn't remember her. I asked her what her name was and she told me, \"Janet Askew.\" \n\nI recalled a Janet Askew. But that chick was about the same size as Shamu the killer whale. And she sported a set of bangs that made her look like she had stepped out of a 1950s Archie and Veronica comic. \n\nThis little woman had a very trim and curvy figure with magnificent tits and was dressed like she had graduated from Choate. I looked puzzled.\n\nShe giggled drunkenly and said, \"You knew me before I lost all of the weight. I had some issues after my parent's divorce and ballooned up to where I was in your class. It took a lot of therapy and a crash diet, but I am back to my normal self now.\"\n\nI took a second look at her. She was not beautiful but she WAS incredibly sexy. \n\nShe had an open, pretty \"girl-next-door\" face and the aforementioned bosom. But she also had long slim legs and nice round hips in a skin tight pair of beaten out jeans. A little yellow spaghetti strap top showed perhaps four inches of prime dusky cleavage. \n\nShe was looking invitingly at me. So I decided to kiss her. Remember, we were sitting in the dark on the front porch outside a loud party. And we had been acquainted for perhaps 90 seconds at that point. \n\nShe surprised me by not slapping me, or screaming and running to the police. Instead she threw one arm around my neck plastered herself to me and opened her mouth for the hottest kiss I had ever been given. It was like she had been waiting her whole life to do that.\n\nI don't believe in random good luck. But it had been a long dry spell. So I was NOT in a mood to look a proverbial gift horse in the mouth. I began to fumble with her bra in order to get my hands on one of those incredible ripe melons. \n\nShe moaned loudly. Then she began to suck my tongue like it was something a little further down on my body. \n\nI finally got a boob in one hand and felt the nipple. I thought that she had nice tits but her nipples were extraordinary. They were substantial thick and round, almost like little Nuks. \n\nExcept they were growing longer as I moved my palm over them. And they were incredibly hot and sensitive. \n\nI found out how sensitive they were when I tweaked one. The shriek that she let out sounded like I was killing her. THAT brought people running. \n\nWe heard them coming. So, we were just nonchalantly sitting there as half the party galloped up. \n\nBoth of us were panting like hound dogs on a hot southern porch. But it was dark. And there was no actual evidence that I had been fondling her delightfully heaving bosom about 10 seconds earlier. \n\nNot seeing either of us in any form of distress; the severe blue-balls that I was suffering were not readily apparent, the mob of would-be rescuers went thundering past us and out onto the sidewalk looking for the source of the shriek. \n\nShe looked at me. I looked at her. And we both burst out laughing. \n\nWe had been with each other for approximately fifteen minutes. But I just KNEW that I was going to marry this delightfully quirky little woman. \n\nThe next night we consummated the inevitable. That was in an all-night session that was just as sweltering as the DC weather. \n\nWe married a scant four months later and settled into a nice little apartment further out the Red Line at Shady Grove. \n\nNow I know that you probably think that it was stupid to jump into marriage that quickly. But Janet's charms had really clouded my thought processes. \n\nI should have suspected something if I had taken time to think about the situation. But Janet was just SO attractive and I was just THAT needy. \n\nOur first few months together were idyllic. I couldn't imagine a more compatible woman or a more satisfying lifestyle. She and I just clicked. We fucked a lot. But we also did every interesting thing that you could think of in a City with boundless opportunities for diversion. \n\nEverybody thought that we were the perfect pair. Some couples hang all over each other in a drippy kind of lovey-dovey way. Janet is a very smart woman and our life was built around our mutual intelligence. \n\nWe kidded and teased each other. We handed each other plays on words like a good comedy team. And we generally shared an affectionate tongue-in-cheek view of the world. It was hard to NOT love a woman who saw the irony and humor in everything that she did.\n\nIt was almost too good to be true. And of course it was indeed just that.\n\nThe first sign of things to come was when I met her dad. \n\nWe had married in a quick civil ceremony. As is the nerd way. But she had been bugging me for several months to meet her daddy. Just to get his blessing. \n\nSo, we took the Acela up to New York City one weekend. \n\nI knew her dad lived in Manhattan. I DIDN'T know that it was overlooking Central Park in the upper 80s. \n\nIt seems that daddy had made his money the old fashioned way. He had inherited it. \n\nAnd as F. Scott Fitzgerald put it, \"The rich are different from you and me.\" \n\nDaddy treated me with the same scorn that the Lord of the Manor would show any raggedy peasant who his foolish daughter had just dragged home. It almost seemed like he expected me to tug on my forelock every time I addressed him. \n\nIn short, I hated him from the moment we met.\n\nJanet also changed 180 degrees. She went from open and friendly, to snide and arrogant. It was clear that she thought the \"little people\" were beneath her. Being one of the little people myself, I was flabbergasted.\n\nIt was also clear that the break-up between daddy and her mother was the result of daddy's philandering. And daddy didn't try to hide it. \n\nHe clung to his right to fuck any female he met with the same fanatical certainty that Charles I must have had about the divine right of kings. Unfortunately I found out what that meant in the worst possible way.\n\nHe took us across the Park to the Carlyle for dinner. That experience was so far out of my league that I knew that he had planned it, just to show me how exalted he was. \n\nJanet was in a tight little black dress and heels that put the goods on display. She was turning heads every place we stopped. And both she and her dad were a study in sophisticated New Yorker. \n\nMe - not so much.\n\nI didn't actually do anything too embarrassing. But I was also not exactly the star of the show. Daddy kept asking me about what I did and I tried to explain to him about the offer that I had just gotten at Georgetown. It was an Associate Professorship to start. That isn't normal in academe. In fact I had done very well for myself in that respect.\n\nHis response was to blow me off as a \"teacher\", which I guess I was. But his tone of voice made it sound like it was something that anybody could do, which it wasn't. \n\nI certainly was not making the kind of money his daughter was used to. But I was on a solid trajectory for success in my chosen field.\n\nI remembered all of the implications later on. But at the time I felt both inadequate and pissed off. Since I could see NOTHING about the man's OWN accomplishments to justify the lofty opinion that he had of himself. \n\nExcept, of course, the fact that he was born into the right family. \n\nIt kind of hurt that Janet didn't defend me. But I could see that she had \"daddy\" issues and I loved her so I was willing to give her a pass with her father. On the other hand, it didn't increase my confidence in her. \n\nThe other thing that bothered me was how her father treated her. \n\nIt was like she was his date. \n\nHe was touching his daughter in a way that I would have called social-services about, if she was 13, not 23. And even worse, she was allowing it which was really not making me happy. \n\nThey both got sloppy drunk. I poured the two of them into a cab. And we went back across the Park to 86th street. I rode up front and the two of them were slumped in the back. \n\nI had reached the point where I was planning a \"come-to-Jesus\" moment with my wife as soon as I got her alone. \n\nThat was when I heard the sound of rustling and a moan from the back seat. \n\nMy eyes flew open like cartoon window shades. I stuck my head around the privacy partition and sure enough. My wife was in an intimate embrace with her father. \n\nThere was nothing explicitly sexual going on but dads don't hug their daughters like that. \n\nBoth of them were drunk and at that point she might have EVEN thought that it was me. But she had her leg thrown over his and she was molded against him in a way that was totally inappropriate. \n\nMy first instinct was to stop the cab, drag daddy out and kick his ass. But the situation was just ambiguous enough that I settled for saying in a loud voice, \"We're almost home now.\" \n\nThey both startled and then looked guilty. I gave her a glare that I hope warned her what I was thinking. And she sat back in the corner of the seat. It looked like she was sulking.\n\nAs soon as we got into the bedroom I said, \"What the hell did you think you were doing? Were you planning on fucking him right there? He's your DAD you know? And this isn't Kentucky.\" \n\nShe looked guilty and said, \"I wasn't doing anything. Daddy hugs me like that all the time.\"\n\nI was beginning to get an inkling that my wife might have a screw loose. At least where her old man was concerned. \n\nIt definitely explained the total personality transplant she had undergone on Friday. \n\nShe seemed to take on the coloration of the dude exactly like a chameleon would.\n\nI said, \"You DO realize that what you were doing back there was totally inappropriate between father and daughter?\" \n\nShe looked at me obstinately and said, \"Just because YOU don't approve of it doesn't mean that it is wrong. Daddy has always taken good care of me and he loves me.\"\n\nThere is love and then there is \"love\". But arguing wouldn't get us any further. And we were going home in the morning. So I said, \"Let's get some sleep but I want to talk about this tomorrow.\"\n\nThe next morning the woman I knew as my wife magically reappeared. Her body language, voice and her attitude had turned back around 180 degrees. It was as if she had taken off last night's persona, like a robe, and hung it in the closet of her daddy's guest room. \n\nIt was actually kind of eerie. We took a taxi down to Penn Station and she was her usual energetic, funny self. It was like a malevolent spirit had been exorcised from our marriage. \n\nThe night before had been odd. But I had months to build up a sense of who Janet was. And my impression was that she was a warm and intelligent human being. \n\nI knew that it was natural for an adult child to change around a parent. In fact it would have seemed odder if she had NOT lapsed back into some form of remembered behavior. \n\nBut the conduct I saw with her father was not something I condoned, or wanted to encourage. Then again, we were looking ahead with our lives not back. \n\nSo I made a mental note to stay away from Templeton Askew. And that was the LAST time I was going to allow Janet and him to grab any incestuous alone-time. \n\nJanet's slipping from one person into a totally different personality was something that might have worried me if it had gone on any longer. But it had only been for a day and it just didn't bothered me that much. \n\nIt should have.\n\nThe next five years flew by on blissful wings. \n\nThe main feature during that period was the data compression algorithm that I came up with. \n\nData compression underlies machine vision which has applications in everything from search engines to cruise missiles. Thus, it is the Holy Grail for us nerds. \n\nI had been working on a superior lossless algorithm during my final days at GWU. And I perfected it two years later. \n\nI am way too na\u00efve to do the actual productizing. But I had a friend named Scott. He was a genius when it came to getting things to market. So he did the heavy lifting and I got a 40% share as a silent partner. \n\nOur first contract was with Raytheon. \n\nAlmost immediately, the targeting system for their TERCOM/DSMAC Block IVs got a lot more capable and my bank account got inconceivably larger. \n\nI'm a nerd. I don't care about money. And I don't know anything about finance. So I had Scott take care of all of that. \n\nAnd I never discussed our fiscal situation with Janet. \n\nIn my mind it would have sounded self-congratulatory. And nerds don't brag about how much they make. \n\nWorld of Warcraft Conquest Points definitely! But money - NEVER! \n\nIt would sound too much like the dick measuring that went on among Janet's yuppie friends.\n\nI just went along in life like nothing had changed. Later on I was very glad that I had done that. \n\nThe money was a blessing only in that it gave me the freedom to do whatever I wanted with the rest of my life. \n\nI had been teaching and I liked doing that. So I kept my faculty position. But I DID buy a place in Georgetown. I paid cash. \n\nJanet didn't seem to notice. I think she thought that I had mortgaged myself to the hilt. The only real change was that it was now an easy walk to campus. \n\nJanet herself had undergone a HUGE transformation. The 23 year old I had met on that hot night in Adams-Morgan was now a 28 year old with a sense of style that I could only dream of. \n\nMost of our life together was still bantering and interesting observations. But she increasingly took on a gravitas that was marked by assumed superiority and social refinement. She had also developed into a really beautiful woman. \n\nShe had been cute and coltishly sexy when I first met her. But as she got into her late twenties her face got more refined and her body filled out. \n\nShe always had gorgeous tits. And those remained meaty and proud. But now her hips and ass were to die for, round full and muscular. She was a truly spectacular looking person.\n\nShe never asked about money. It was just always there for her. Accordingly, she had adopted all of the rich-bitch dress, grooming and fashion tricks that differentiated between pretty and stunning. \n\nIn effect she was now miles out of my league on the social scale. \n\nUnfortunately for me I am not that refined, or sophisticated. And I never will be. I live mostly in my head. And I have never had any desire to be socially prominent. My world is head down and virtual. It might be isolated. But I am really only happy there.\n\nThe good news was that my abilities and interests underwrote Janet's life style. The bad news was that we began to go other directions. We might have been perfect together once. But we were different people now. And as time passed we begin to function in entirely different spheres. \n\nJanet was a black tie Kennedy Center kind of gal. My idea of a great night out was sitting at Blues Alley. She liked the ambience at the Verizon Center. I liked the peace and quiet of our sailboat on the Potomac. \n\nI think that you can see where this is going and it inexorably went there. \n\nMost of the time we had a free and easy life. But it was obvious that we were no longer quite as intimately connected. At least in the way that we were in the beginning. It showed in the occasional strained conversations and the huge qualitative drop-off in our sex life. \n\nBut I have to admit that I didn't see the torpedo coming until it actually hit. \n\nI was aware of the fact that I was severely lacking in the sociability department. And I knew that there were going to have to be some changes. But that was as far as I had thought it through \n\nOn the other hand, Janet had already taken it all the way home. Or perhaps the proper term is, \"All the way out the door.\"\n\nI came back from class one bright sunny morning in May. The DC weather was in that narrow window when the term \"delightful\" best describes it. \n\nI dropped my laptop bag on the table in the entrance hall. I walked into the living room whistling cheerily to myself. And I stopped dead, stunned by what I saw.\n\nJanet was sitting nervously on the couch. She was holding the hand of a tall, very good looking guy. Templeton Askew himself was lounging on the couch facing them. ",
        "Every flashing red light, klaxon and alarm bell instantly went off in my head. Whatever was about to happen was going to be bad. \n\nJanet looked at me sadly and uttered the five little words that no husband wants to hear, \"Jake, We need to talk.\" \n\nI gawked at her. She looked anxious. Templeton was smirking. And who the fuck was the other guy? Was he her lawyer? \n\nActually, he WAS Janet's lawyer. \n\nBut he was also her lover. \n\nShe said, \"Jake, this hurts me a lot. But you need to know that I am leaving you. I could have just disappeared. But I value the time we had together and I wanted to give you the courtesy of telling you directly.\"\n\nHoly Shit!! I sank down into the nearest chair. \n\nI have no idea what was on my face but my soon to be ex-father-in-law looked delighted. \n\nShe was leaving me? Where did THAT come from? I probably looked like the proverbial fish out of water. I babbled, \"You're leaving me? Why? What did I do? What will happen to me?\"\n\nShe dialed up the phony concern and said, \"You'll be fine. I know it. You're a strong person. It's just that Burton and I have found each other again and we can't be apart.\"\n\nTempleton said, with disdain dripping off his every word, \"Janet and Burton were childhood sweethearts. \n\n\"He is the right person for her. Janet understands that they never should have parted. Burton didn't really cheat on her. He was just sowing his wild oats. \n\n\"He is ready to settle down now and Janet has consented to be his wife.\"\n\nI said pitifully, \"But she's MY wife.\" \n\nDamn!! Would you just LISTEN to me?!! I sounded like a sniveling little wussy. \n\nIt was just fucking embarrassing. \n\nThe raw humiliation and the conceit in daddy's patronizingly self-important voice pushed me over the edge. \n\nI didn't know I had it in me. But Bruce Banner probably didn't think so either. I just \"Hulked\" out.\n\nSuddenly, all I could think was, \"SMASH PUNY HUMANS!!\" \n\nI turned to daddy and making no attempt to control the anger in my voice I said, \"I am going to rip off your fucking head and shit down your neck if you open your mouth one more time you arrogant cocksucker.\" \n\nHe started to open his mouth. I began to rise from my chair. He could see the genuine homicide in my eyes. He made a zipping gesture across his lip. Point-game-and match to Jake Barnes.\n\nI turned to the faithless-slut-formerly-known-as-my-wife and said, \"Are you telling me that this piece of shit is your former childhood sweetie and that you are leaving me for him? How long have you been fucking him?\"\n\nThe aforementioned piece of shit said in a highly affronted tone of voice, \"Now look here old boy.\"\n\nI turned toward him and said, \"Where I come from you and I should be punching each other up right this second. So unless you want to adjourn to the parking lot I suggest that you stay out of it. \n\nThis is between me and my soon to be ex-wife.\"\n\nHe just sat there looking disgusted.\n\nI turned to her and said, \"Okay you deceitful whore. The floor is yours. How long has this been going on and what do you propose to do next?\"\n\nJanet looked taken aback and really angry. She hadn't expected this. \n\nShe said, \"Daddy has not felt that you were the right person for me since our first trip to New York. He has been urging me to give Burton another chance. \n\n\"Burton came all the way down here to escort me to the Washington National Opera last November. It was the one that you were too bored to attend.\"\n\nI remembered that. She had thrown a black tie party in a suite that I bought for her at the Jefferson. I was expecting a blow-up when I told her that I didn't want to go. She came home the following day and was as sweet and loving as she had ever been.\n\nI said, \"So you have been fucking this guy for six months then?\"\n\nShe looked pained and said condescendingly, \"Such degrading language Jake. It doesn't speak well for you. \n\n\"But to answer your question, Burton and I have been a couple since that evening. I'm surprised you hadn't heard about it since we have not made a secret about our relationship. But then again, you don't travel in our circles. \n\n\"We want to make it permanent now and I need you to release me so I can marry the person I should have been with in the first place. I am sure you understand that it is over between us. I love you but I have not been in-love with you for some time\"\n\nI looked at the deceitful bitch and her duplicitous father. Then I turned my attention to Shithead. I said, \"So you want to marry her knowing what kind of adulterous slut she is?\"\n\nHe spluttered, \"Now look here. You can't talk about Janet that way.\"\n\nI said, \"How should I talk about her? I gave her all the love and devotion I had in me. I gave her the money to let her make-believe that she was a society doyen. I never as much as looked at another woman. All I expected was to raise kids with her and die in her arms. \n\n\"As a reward, she has been fucking YOU for the past half year and probably her dad on the side.\"\n\nBoth of them exploded. I looked at them with murder in my eye. They both shut up. \n\nThey didn't deny it either. \n\nI looked at the asshole and he was turning beet red. \n\nI said gently to the room, no anger in my voice, \"This is what you all really want?\"\n\nShithead was looking thoughtful. Daddy was looking outraged and Janet was looking grim. \n\nJanet said with anger in her voice, \"It's what we ALL want Jake. You need to let me go. I have already moved all of my things to Burton's place and when I leave here I am never coming back. \n\n\"I don't want anything from you. Just a quick divorce. Burton is much richer than you are. So I don't need anything except your blessing.\"\n\nI looked at her truly incredulous. The stupid bitch really expected me to smile and say, \"Right then!! Well have a great life.\" \n\nSeriously??!! I had no idea how somebody could BE that na\u00efve.\n\nI looked them sincerely in the eye and said, \"I hope that you ALL rot in hell.\" \n\nThere was a collective gasp. \n\nAt that, I got up and stalked out of the place. I had to go somewhere, or I would have killed each and every one of them.\n\nI am normally NOT an impulsive kind of person. I work things out in my head. So I walked along the C&O towpath to Key Park trying to cool down. \n\nI plopped myself on a bench and watched the planes drone low over Roslyn toward DCA. It was a beautiful day and my mind was churning furiously.\n\nI don't know how other people react to personal betrayal. But I was numb. I recognized treachery when I saw it. I just didn't know how to feel about it. There was not a lot of pain. Maybe I didn't love her as much as I thought. \n\nNevertheless, there was an empty place in my soul now. It was like all of the certainty had drained out of me.\n\nI was not going to shed a tear for the traitorous slut. Maybe it's because I don't consider hand-wringing over a lost love to be very manly. \n\nShe had obviously not been who I thought she was and she had made her choice. So be it.\n\nHer leaving didn't affect the rest of my life. In fact in some ways there would be no substantive change at all. \n\nExcept the cancer of a cheating wife would be cut out of it. \n\nI was still young and I was richer than I ever imagined. \n\nIt was fortunate that Janet and her father had so much contempt for me that they never thought to look into my financial affairs. \n\nBad assumption in the information age. Take Bill Gates for instance. \n\nI knew two things for sure. First and most important, I would never trust another human being. \n\nAgainst my better judgement I had unqualifiedly handed my heart to Janet and look what that had gotten me. \n\nSo cross women off the list of mistakes I will not make in the future.\n\nSecond, I had to get away from this place.\n\nThanks to my little algorithm I could do anything I wanted in life. And the last thing I needed was a reminder of how shitty my existence had just become. \n\nMy life was pointless anyhow. So I might as well have a little fun in the meantime.\n\n________________________________\n\nSunrise\n\nI was trudging back to the RER-B stop at the Gare de La Plaine. St Denis, has been described as Detroit with couscous. Looking around at the dilapidated buildings I could see why. \n\nTwenty minutes earlier I had been standing at the opening of one of the third tier access tunnels at the Stade de France. From that vantage point I could view 80,000 or so of my fellow human beings. \n\nWhat the French call football bores me. But then again I wasn't there to watch it. \n\nI had taken the RER all the way out to St Denis to try to gauge where I was in my recovery. It was an attitude check so to speak. \n\nSome people go to church. Some people sit cross legged on a mountain-top and drone \"Ommmmm\". I go to sports venues to try to understand my place in the great scheme of things. \n\nI like big-picture perspective when I am thinking about where I fit in. And there is nothing better than a stadium full of people to get useful insight about your situation vis-\u00e0-vis life. \n\nI had been tinkering with my prospects since the divorce, trying to find the right path. I know it sounds silly for a person as rich as I was to be confused about directions. But I was totally alienated from humanity in general. \n\nIn effect I had gone feral. \n\nBetrayal will do that to you. You just don't trust anybody. It was like I was standing out in the cold watching a party going on. Without the slightest idea of how to join the happy folks inside. \n\nI had no clue what steps I needed to take to begin acting like a normal person again. Drifting was not an option. So I knew I had to decide sooner than later. Or time would force a decision on me. \n\nThe entire spectrum of humanity was on display down below. I looked along the tiers of excited fans. Every one of those people had hopes and aspirations. And more touchingly every one of them doubtless thought that they mattered. \n\nI looked at the backs of the heads in the countless number of rows in front of me, all I could see was a mass of hair. There was variation in color and length. But, none of the owners stood out. They were little indistinguishable pelts in a roiling sea of fur. Sort of like a pack of lemmings.\n\nI shook my head and trudged back down the steps. Still no answers there. \n\nBehind me the whole place erupted in cheers as somebody did something epically heroic, which would be replaced by ANOTHER epically heroic feat the following week.\n\nI sighed. At least I had confirmed what I had come to learn. Inconsequentiality is the human condition.\n\nI took the M\u00e9tro de Paris back to the FDR stop, at the Arc de Triomphe. Then I walked back to the hotel. \n\nI was living at the Hotel California over in the 8th Arronddisement. \n\nLook that place up. It's real. I wondered if the French even GOT the irony of the lyrics to the old Eagles song, \"You can check out anytime, but you can never leave.\" \n\nMy place of residence couldn't BE more fitting.\n\nI had been living in Paris for the past four months. Ever since the divorce had become final. \n\nI had to be anywhere but DC. So I asked for a leave of absence to get my shit together. Not surprisingly, the folks at Georgetown were more than happy to grant it to me. My teaching had really sucked for the past semester. \n\nMeanwhile, the deceitful bitch had become prominent in the DC social scene. I guess her separation from me marked a \"coming out\" of sorts. The handsome couple looked nauseatingly happy and very much in love.\n\nBut the smiling pictures of Janet and Shithead, in the society pages of the Post, were really fucking up my morning bowl of Cheerios. \n\nShe looked as arrogant as he was. Janet was clearly a chameleon. She could absorb and mimic the personality of whoever she was standing next to. \n\nHer betrayal was difficult to accept. But she was also clearly a total psychopath. I believe the shrinks call it a \"dissociative disorder.\" \n\nI had first seen it when she had morphed into an entirely different person during our visit to her father in New York. I had just not \"gotten\" it then.\n\nWhoever was occupying her head at the time probably didn't know that the others existed. That was why she was able to utterly fool me for so long. \n\nBut, she was clearly two, or perhaps three totally separate and distinct personalities. \n\nThe Janet personality, which I suspect was her core self, was just as unpretentious and warm as the other ones were cold, calculating, cruel and arrogant. \n\nThe root cause of the various people living in her attic doubtless traced back to some shattering event in her formative years. \n\nDaddy definitely triggered the switch. So he was no doubt the pervert in her life. \n\nIn fact I was really hoping that she was still porking dear old dad. That would certainly mess up hubby's petit dejeuner some fine morning. \n\nOr maybe Shithead was the kind who liked to watch. He seemed like THAT kind of simpering little bitch. Maybe that was why Daddy approved of him so much. \n\nWhatever the case, the situation with Janet had unquestionably put me off women for the rest of my life. \n\nAs I was sitting there I mumbled to myself, \"I should turn in my man card\". I not only couldn't get it up now. I didn't even lust after them in the abstract. \n\nI hear you asking, \"What was a totally disillusioned and cynical nerd doing in a place like Paris?\" \n\nI mean I'm not exactly sophisticated, or worldly.\n\nThe answer was \"unfamiliarity.\" \n\nThe thing with Janet had destroyed all of my inevitabilities and I needed a reset. At least, if I ever wanted to get back in the game of life. \n\nUp to the point where my whore of an ex-wife dropped the nuclear device over my future plans I had been on a path that was probably set in the third grade. I would do well in school. I would find a good job. I would marry a nurturing and faithful woman. And we would raise 1.86 kids and die in each other's arms\n\nThat didn't work out so well - now did it? \n\nSo, I was back to the drawing board for a do-over. And I didn't want to reconstitute myself in any setting that was even remotely related to my old life.\n\nHence, I consciously chose to NOT live with the Brits. It would be too familiar there. And I wanted no carry-over assumptions. \n\nI wanted it to get as far away as possible from the life that I knew. And Paris is pretty alien place for a guy whose idea of \"foreign\" is a trip to Comic-Con. \n\nBut in the words of Hemingway, Paris is also a movable feast and frankly my relocation was getting the job done. In every passing day my old life was sliding further and further out of my memory. And my confidence was starting to come back.\n\nI would have normally met Bob Cohn down the Rue de Berri at Le Fouquet's on the Champs Elysees. \n\nWe could watch the world go by over our Pastis and Le go\u00fbter. But it was raining hard. The City might be a romantic's dream some times of the year. But it was chilly, grey and miserable that particular April day. \n\nRobert Cohn was one of a group of English speaking ex-pats who had settled into the Paris scene. It was his way of getting out of doing anything adult and responsible in the States. \n\nWe were ALL there because we were seeking something. And we moved in the same circles because of our common language. \n\nHe was another fellow who had inherited it, not made it. But he was one very tough son of a bitch nonetheless. \n\nHe was taller than me by a couple of inches, handsomer than Shithead and maybe 220 pounds. He had played linebacker at Harvard. And he was every inch the alpha-dog, smart, arrogant and slightly more entitled than Louis Quinze.\n\nFor some reason he was almost stalking me. In fact, a day wouldn't go by when he wasn't either calling, or offering to get together. I was pretty certain it was not my good-looks and charm. \n\nHe might have been attracted by the \"world weariness\", which I just radiated. Or he might have some inkling of who I really was. \n\nBy that stage I was filthy rich. I know I didn't act or dress the part of a multi-millionaire. I still settled for nerd chic, not a life-style out of La Dolce Vita. But all of us nerds are like that. \n\nMoney means absolutely nothing to us. So we don't keep track of it. \n\nMy stay at the California cost serious money. But it was a drop in the bucket compared to how fast it was accruing. \n\nThe most expensive thing I owned was the condo, which had almost doubled in paper value. But I had paid cash for it. So my only actual connection was through the present renter. And he was only making me richer. \n\nAs he walked in the street door of the little bar off the lobby at the California, Cohn was channeling Ralph Lauren's preppie collection. He moves like a big cat. Graceful is a word that comes to mind.\n\nHe is actually a really hard and dangerous fellow. But because he has always had money he can put on insouciant like he was born to illustrate the word. \n\nHe was sporting a very expensive black t-shirt leather jacket combo. And his thick curly brown hair was covered by a fedora, which looked like he had liberated it from Indiana Jones. \n\nThe devil in his sparkling blue eyes gets him laid pretty-much on demand. And it was glinting at every one of the women in the bar. \n\nHe came bustling up shaking the rain off him. He said, \"Where were you today. I was trying to change the venue but you weren't picking up?\" \n\nI didn't want to tell him that I had been in St. Denis feeling sorry for myself. I would have sounded like the pussy that I probably am. \n\nSo instead I told him that I had spent the afternoon writing and I didn't want to be disturbed. I had been doing some pieces for various Journals as an excuse for why I was in Paris. That seemed to satisfy him.\n\nHe said, \"I wanted to spend the night down at Bugsy's. Bill and Mike are meeting us there.\" \n\nThose two were both former military types. They had been soldiers with the 173rd RCT based in Italy. And they had stayed in Europe after their separation. They lived together in a dilapidated little apartment in the 18th near Montmartre.\n\nBill Gorton was a really steady guy. Mike Campbell had PTSD issues. The \"Sky Soldiers\", as they call themselves, ran into some very serious shit during their time in Iraq and in Logar province in Afghanistan. Mike was dealing with the fall-out from that.  \n\nThe rain had stopped as we emerged onto the Rue de Berri. Bugsy's was less than a mile down the Rue du Faubourg. And it seemed pointless to take a taxi, even if you could get one of the stuck-up Parisian cabbies to stop for us. \n\nSo we just walked the fifteen minutes that it took to get down there.\n\nBugsy's is a cross between an American sports bar and some French concept of 1920s Chicago. It is always packed, mainly because it has the best cheeseburgers in the universe. And it is a watering hole for Americans like Cohn and me. \n\nThe American tourists are all over at the legendary Harrys on the Rue Daunou. Given the price of a drink there and the Middle-American clientele I can't imagine the likes of Sinclair Lewis, or Hemingway, or even the Duke of Windsor would be caught drink there now. \n\nTables are normally in short supply but Bill and Mike had gotten there a lot earlier and were holding one for us. I knew that they had been there for a while because Mike was already hammered. \n\nNonetheless, as we shouldered our way through the crowd my attention was not focused on my two friends. Cohn and I were both checking out the person sitting next to Mike. \n\nWords like breathtaking don't truly describe a woman like her. Every gorgeous female requires a little male ogling. But this one was in a separate category and it wasn't her looks that set her apart. \n\nShe radiated the exceptional, smoldering sexuality that makes you think of blazing bonfires, frantically beating jungle drums, savage dancing and fertility goddesses. ",
        "Certain legendary actresses and models have that quality. I had never experienced it before. But I recognized it right away in her.\n\nI felt something stir south of my belt. It was a fucking miracle, no pun intended. \n\nMeanwhile I thought Cohn was going to go over and propose marriage. \n\nWe slid into the outside seats. Mike was kind of slumped against the wall with his arm around the woman sitting next to him. Cohn beat me to the seat next to her. \n\nThe woman regarded Cohn with the same interested gaze that a cat might give a tasty canary and said in a very plummy Belgravia drawl, \"Lady Brett Ashley, and WHO are you.\"\n\nEven sitting across the table I was smitten by Lady Brett. She had perfectly proportioned features, huge sexy eyes a kissable rosebud mouth, long pointed aristocratic nose and a wheaten waterfall of golden blond hair. \n\nThe hair framed the kind of flawless patrician face that Reynolds and Gainsborough immortalized. \n\nShe was dressed casually but expensively. The perfume she was wearing gave every hormone in my body an erection. It was unmistakably very costly. And she was wearing enough gold to make Montezuma jealous. Her $20,000 Rolex Yachtmaster with the hours picked out in diamonds finished off the ensemble. \n\nBut it was those smoky grey eyes that held both Cohn and me captive. They simultaneously communicated both generations of class superiority and obscene pagan mating rituals. Cohn's tongue almost unrolled across the floor like a classic cartoon wolf.\n\nHe sort of stuttered, \"Robert Cohn, at your service My Lady.\" I had never seen him flustered around a woman in my life. \n\nMike was the one who had brought her. But since he was hors-de-combat Cohn was the new beneficiary of her attention. And he was eating it up. \n\nShe turned to me and gave me the same blast of amused sexuality and said, \"And you might be?\"\n\nI said, \"Jake Barnes, Lady Ashley. Cohn and I are all in the same boat as Bill and Mike.\"\n\nShe laughed huskily and said, \"You Americans have such funny archaic slang. Does that mean you ALL want me?\" \n\nThat was accompanied by a smoldering glance that would have made Old Lucifer stand up if my bitch wife hadn't already cut him off balls and all. \n\nSo I said offhandedly, \"SOME of us want you in the way you are implying. Some of us are just here for the cheeseburgers. You can't get a good burger in France except at Bugsy's.\"\n\nAt that point I excused myself to fetch both me and my buddy a mug of beer, which was ALSO excellent. The French are surprisingly good at beer. \n\nThe bar was the usual rat race so I was gone for a while. I couldn't get anybody to wait on me. That wasn't because I was American. It was because it was Paris. All of the waiters in the City have the same condescendingly rude attitude toward customers. \n\nWhen I returned Lady Ashley was leaning back into her date while flirting outrageously with Cohn on her other side. \n\nLady Brett was the entire package, outstanding face and exceptional body. She was oriented toward Cohn because she was resting on Mike's chest with her head on his shoulder. \n\nHe had his arm over her left shoulder with one hand draped across her front resting idly on one of her massive boobs. \n\nSome women would have been embarrassed by her date absentmindedly cupping her left tit, but not Brett. She was treating Mike's groping like an homage to her perfection. \n\nCohn couldn't take his eyes off her. And she was giving him the full treatment. I wondered if Campbell could see what was going on. \n\nShe was doing a good job of multitasking, letting Campbell think that she was with him, while giving the impression to the rest of us that she wanted to fuck Cohn right there on the table.\n\nIndeed, it was hard to conclude that the Lady had much in the way of a moral compass. \n\nI reserved judgement on that since Brett was being blatant about her sluttiness, not hidden and sneaky like certain other bitch-whores of my acquaintance.\n\nI plopped the beer in front of Cohn. He glanced at me with a wicked smile and went back to seducing the Lady. \n\nHis devil-may-care blue eyes were sparkling with mischief. Hers looked like they were mainly stoned with lust.\n\nGorton and I exchanged an amused look as I slid in next to him. I knew that he didn't think that Mike was the sharpest knife in the drawer. But watching Cohn trying to nail Brett right in front of him qualified the boy for Guinness.\n\nI really like Gorton. He is ALWAYS an airborne trooper, high and tight, mid-thirties and tough. But mainly he has a sense of humor. And that quality is right there on the surface at all times. \n\nHe was practically laughing out loud at the virtual-three-way that was happening on the other side of the table. \n\nWith all of the sexual tension in the air it was getting hard to carry on an intelligent conversation. But I asked Gorton what the two of them were up to anyhow. \n\nHe told me that he and Campbell were planning on driving down to the Grand Prix in Monaco in three weeks. \n\nHe said, \"We've got a buddy who has a boat parked there and he invited us to join him. He says that the race cars go right past where he's docked. It's going to be a party man! Why don't you come along?\"\n\nI was wondering how Gorton knew anybody rich enough to be able to get a prime place for an event like that. \n\nBut those two got around a lot in their military days. Plus they had that macho thing going for them. So it wasn't hard to believe that some wealthy dilatant would want to have them around as display items. \n\nIt turned out that the guy who owned the boat was Kuwaiti. That made the connection even more interesting, given what Bill and Mike had been doing in that neck of the woods.\n\nThe more I thought about it the better I liked it. I had spent waaaay too much time staring into my own bellybutton thanks to Janet. And I could never in my wildest dreams imagine hanging out in Monaco, least of all for something as famous as the Monte Carlo Grand Prix. \n\nI would have never gone there by myself but Bill Gorton was somebody I could actually enjoy hanging with and Mike Campbell was a fun guy even with his drinking. So we made arrangements. \n\nMeanwhile Cohn and Lady Ashley had finished figuratively humping each other's legs. \n\nSome sort of understanding had passed between them. Gorton and I didn't care what it was and Mike was far too drunk to notice. \n\nWe all went our separate directions in the rainy Paris night. I trudged back to the Hotel. Bill and Mike and the Lady left for their rundown quarters in Montmartre. \n\nBill told me that the two of them would keep him awake most nights loudly fucking. But he couldn't afford to move out. \n\nCohn took off on his own for parts unknown. I got the impression there was a lady waiting for him somewhere. In fact I didn't see Cohn again for a while.\n\n________________________________\n\nMonaco is an all day journey down the A6 and A7 from Paris. And Bill and Mike shared a used Peugeot 107. \n\nThere was no way I was going to sit in that sardine can for 9 hours. So I bought a Range Rover Evoque for the trip. \n\nI told them that I had rented it. They wanted to know where I got the money since the rentals on that vehicle are $500 a day. I told them that I had a rich uncle who died and left me enough cash for one gross indulgence. \n\nI had arranged to stay at the Hermitage. But I didn't want the guys to know how wealthy I was, so I told them I was going to sleep in the car back in the hills. \n\nI didn't feel bad about lying to them. My money is nobody's business but my own. \n\nThey were staying on the boat with their friend. \n\nI dropped them at the water taxis, which were zipping out to the moored boats. I told them that I would see them at the Explorer's Pub for lunch the next day. That would be an easy walk for them since it is right next to Port Hercules. \n\nThen we could plan the three days we would be in town. I think they felt sorry for me because there was no room at the inn - so to speak. But it didn't stop them from leaving me at the quai. \n\nThe boat that they were headed out to was only slightly smaller than an aircraft carrier. Their Kuwaiti friend must have been rolling in oil money. \n\nI drove up to the Hermitage, which was only a short distance from where I dropped the boys. The maze of streets leading to the hotel was a little hard to navigate but fortunately the French drive on the same side of the road as we do. \n\nI checked in. It was still only 8PM so I wandered down to the Crystal Terrace for a nightcap. I was sitting there looking at the boats in Port Hercules thinking, \"Maybe I should buy something like that? I could afford it.\" \n\nI was sipping a Pernod when I sensed a disturbance around me. It was a craning of necks roughly similar to what the gazelles and emus do on the Serengeti when the lion appears. \n\nWhat had caught everybody's attention was an absolutely beautiful couple. They had just appeared hand-in-hand on the terrace. \n\nHe was tall, very well built and exquisitely handsome. But his partner's sheer beauty eclipsed him. \n\nEven though I had seen her before I still had to gape. She was a once in a lifetime sight. Her face and figure were just that exceptional and she simply radiated sexuality as she walked.\n\nHer partner went through one of those, \"can't believe my eyes\" moments. That was followed by a look of real pleasure. It was like he was actually happy to see me. \n\nThe two of them came over to where I was sitting. He was grinning and she was looking as inscrutably wanton as ever.\n\nI smiled affably. The whole point was to give them the impression that I knew that they would be there all along. I had semi-suspected it. But I wasn't sure. Now I was.\n\nI said, \"Sit down Robert. It's been a long time. Then I rose to offer the Lady a chair.\"\n\nAs she sat she gave me a glance that was so hot that it nearly melted the soles of my Topsiders. She said, \"Robert told me that you were very wealthy but I didn't believe it until now.\"\n\nI looked at Robert. He gave me a mischievous shrug and said, \"My father runs the hedge fund that your man in DC invests your money through.\"\n\nI sat and said, \"I haven't seen you in forever buddy. I assume that she is the reason why.\" And I nodded in Lady Brett's direction. She was settling in her chair. Even doing that her breasts jiggled.\n\nShe said, \"Yes, Robert took me to Ibiza for three weeks. We have been getting to know each other a LOT better.\"\n\nI said to her, \"So have you talked to Mike Campbell recently?\"\n\nShe said, \"I last spoke to Mike the day after I met you two. I told him I was going home to visit my family.\" And she favored Cohn with a lustful smile. \n\nI said, \"Well he and Bill Gorton are here for the Grand Prix. I assume you are too. Is that going to be a problem?\"\n\nThe Lady looked at me like I was an idiot. She said, \"I certainly hope not! He was just a temporary distraction. He knows that.\" \n\nHer face was absolutely serene as she was announcing that she viewed my buddy as nothing more than a self-propelled dildo. \n\nIt was a grey area in the slut code of ethics. She and Campbell were not married, or even exclusive. But the Lady seemed to have the honey bee thing going, flitting from flower to flower. \n\nI wondered what Cohn thought about that. Of course the opportunity to spend three weeks in paradise with a woman who looked like Lady Brett was probably worth whatever he had to put up with in terms of tolerating her behavior. And I didn't imagine that the Lady just lay there when he fucked her.\n\nPlus Robert was a bit of a manwhore himself. I got the impression that they deserved each other. \n\nWe were sitting there catching up when I sensed another person approaching the table. \n\nIt was a woman. She walked up, kissed Lady Brett on the cheek and threw her arms around Cohn from behind and squeezed. He chuckled lecherously. \n\nShe said cheerfully, in an accent that had personal significance to me, \"What a lovely evening and who is he?\" She nodded in my direction. \n\nThe thing about the Brits is that their accents are even more distinctive than ours. And the mystery woman sported an accent that I knew intimately. That's because I had studied with herds of them in my Cambridge days.\n\nWhether they graduated from the Oxbridge colleges or someplace else, every academic woman in the United Kingdom sounds exactly like our visitor. \n\nIt's called \"received pronunciation\" and it practically screams educated British elite. \n\nShe walked briskly over to me and extended a hand. She said, \"Britannia Ashley but everybody calls me Britt. I am Brett's younger sister. Our parents had a taste for alliteration.\"\n\nI took it blushed and mumbled a reply to somewhere around her kneecaps, \"Jake Barnes.\" \n\nIt was perhaps the most singularly spectacular display of bad form ever perpetrated on the Crystal Terrace. But I'm a nerd and this woman had totally overwhelmed my limited social skills.\n\nShe was as beautiful as Brett, in a smaller and less blatantly sexual package. Her thick honey blond hair was cut in a preppy bob with understated feminine bangs. They perfectly framed her oval face while still seeming natural and unassuming. Her features were as even and proportional as her sisters but her mouth was wider and full of mirth. \n\nShe had those same uncanny grey eyes. But unlike Brett hers just radiated intelligence and a sense of humor. \n\nThe rest of her was, as they say \"flawlessly put together.\" She was not as dramatically full-bodied as her sister. Instead she was long legged, lithe and pantherish. \n\nHer boobs were round and perfectly proportioned to her curvy body. I admit it I always look at the boobs first. I might be a geek but I am still a man. \n\nBritt's breasts wouldn't cause traffic accidents like her sister's might. But in many ways hers were fuller shapelier and better arranged on her chest. \n\nAnd they were in total harmony with her exquisite beauty. They didn't distract, only added to it.\n\nAt a passing glance Brett was the more spectacularly attractive of the two. \n\nThat was until you compared them side-by-side and realized that Britt was the entire package, looks, intelligence and poise. \n\nBrett was sex personified. Britt was a whole lot MORE than that.\n\nI was as tongue tied as usual. So I just sat there. \n\nBrett said dismissively, \"My sister is the smart one. She is at Oxford doing something utterly boring. She works far too much. We had to drag her away from her stale old computers for this weekend, just so she could have a little fun.\"\n\nI looked at Britt and she actually blushed. She said defensively, \"I LIKE to work. My sister is the one who likes to party.\" \n\nI glanced over at Brett. She was making serious, \"in heat\" eye contact with Cohn. I hoped she wasn't planning on fucking him right there on the patio. I was afraid even the French wouldn't tolerate that. \n\nBrett snapped out of her reverie and said to the two of us, \"Robert and I have to go up to the room. Can you entertain each other for the rest of the evening?\"\n\nThen even before she had gotten an answer she rose and began to pull Cohn toward the exit. I looked at Britt, she cocked her eyebrows quizzically at me and said, \"Shall we order a drink or are you leaving too?\"\n\nI flagged down a waiter and requested another Pernod. Britt ordered a white wine. Then we lapsed into silence. I could actually hear the crickets chirping and the sound of the port a couple of hundred yards in front of us.\n\nThe silence was getting embarrassing so I said, \"I'm sorry I'm not very entertaining but I am not social at all and I don't know what to say to a woman as beautiful as you.\"\n\nShe looked astounded and said, \"You think I'm beautiful? I have always seen myself as the ugly sister. You have no idea how difficult it is to grow up in the shadow of somebody like Brett.\"\n\nI said a little overly effusive, \"I think you are the most beautiful woman I have ever met.\" \n\nShit! That was suave indeed. I could understand why Janet couldn't wait to dump me.\n\nBritt looked at me thoughtfully and asked the age-old woman question, \"So, are you married?\" Maybe she wasn't TOTALLY repelled by me after all.\n\nI said, trying to remain non-committal, \"I used to be but she traded up.\"\n\nBritt looked sympathetic and actually covered my hand with hers. It was electric. I had not had a single thought about a woman in over a year. But her touch reminded me of how it used to feel \n\nShe said with sincerity, \"That must have hurt a lot.\"\n\nI said, \"I don't know whether to call it hurt as much as it was marginalizing. I'm in the wild now. I just don't trust anybody anymore.\" \n\nDamn, that was too much information. I was talking way too much.\n\nSo I said, \"Enough about my mental state. What do you do at Oxford?\"\n\nThat question perked her up considerably. She spent 15 minutes telling me in great enthusiastic detail what her research was. Needless to say Lady Britt Ashely was an accomplished scientist. \n\nThat state of affairs was WAY too perfect to be plausible. Normal people don't accidentally run into beautiful fellow travelers with a coincidental interest in software, and a handy sister to throw the two of you together. \n\nI almost asked her if she had been hired by Cohn to play the part of heartbreaker.\n\nI lapsed back into silence. She looked a little concerned and said, \"What's the matter?\"\n\nI was going to do the usual, \"Oh nothing\" and then it dawned on me that I had a better way to distract her while I mentally edged myself toward the door. \n\nI said, \"Your sister is a very interesting woman.\"\n\nShe looked disgusted and said, \"Interesting is one way to put it. Brett is a tomcat. She has no concept of morality. \n\n\"The only way she can tell right from wrong is if she feels good after doing it. She has always been wild but her extreme attractiveness gets her out of the situations that would ruin most women. Any man who invests anything in her is going to get hurt.\"\n\nShe looked at me with sudden apprehension and said, \"I hope you are not one of her many admirers.\"\n\nI laughed and said, \"I'm nobody's admirer. I gave up women the instant my ex-wife sold me out. In fact I am not a big fan of the human race in general.\"\n\nShe looked saddened and said, \"So is there anybody you feel close to? You have nobody?\"\n\nI looked at her open sincere face and I almost said, \"Maybe you.\" \n\nBut I was aware that might lead somewhere else. And I knew that I couldn't perform. In fact Old Lucifer had been DOA since that fateful day.\n\nI recognized that it was psychological, not physiological. But I simply had no control over my responses. \n\nI was rational enough to acknowledge that Janet was damaged. And that there were probably decent women in the world, women who I could trust and love. But the other part of me knew with certainty that every woman I met would eventually betray me. \n\nPlus, who was I to expect any better result anyhow? I am sure that every single one of the lemmings in the Stade de France was just SURE that things would work out for them too.\n\nSo in some ways it was a blessing. I had no lustful urges. I could enjoy life without having to please a single soul except myself. And companionship with a woman was just an unnecessary distraction.\n\nNevertheless, I still had memories and I remembered how good it had been when Janet and I were together. It was just that I knew how THAT story ended. And I simply couldn't write another conclusion.\n\nSo no - I was not going to start anything with this stunning woman. Even on the off chance that she was the genuine article, which I truly believed she wasn't. She was really too perfect.\n\nI rose and said, \"This has been the best evening I have had in over a year and you are a fascinating person. I hope I run into you tomorrow.\"\n\nThen I turned and walked back toward the elevators and my room. I glanced over my shoulder as I opened the patio door. Lady Britt was still sitting there. She looked both sad and disappointed. It was almost like she had hoped for something more. Poor woman.",
        "I had a moment of regret. It was too bad that I hadn't met HER on that hot porch seven years ago. Maybe my life would be different. But then again, she was beautiful and what would she have EVER seen in a nerd like me.\n\n-----\n\nThe next day was bright and sunny in a way that only the Mediterranean can give you. I met the boys at the Explorer's pub just like we had arranged. \n\nThey were both in a state of crushing hangover. I wasn't too chipper myself. \n\nMy conversation with Lady Britt had brought back a flood of unpleasant memories and I tossed and turned all night. I couldn't stop thinking about her and it wasn't a sexual thing. Her soul spoke to me. \n\nJanet had a lot of the same characteristics. At least the personality that I knew as \"Janet.\" But Lady Britt had so much more. She embodied every single quality I could ever hope for in a woman, or wife. \n\nShe seemed to have all of the qualities I had always valued in another human, warm and sympathetic, intelligent, full of life hard working and apparently honorable. \n\nNobody makes them like that anymore. So she must have been expertly coached. I decided that Cohn was the devil himself.\n\nIt was silly to be thinking that way, particularly because I was outside on the porch looking in. But I couldn't turn off the switch in my head. \n\nThe Kuwaiti who had invited the boys out on his boat was with them. He was a smooth chubby little man who was about twenty years older than me. It was clear that he had some past dealings with Bill and perhaps Mike. And he acted like he owed them a debt.  \n\nI didn't ask.\n\nNonetheless, this dude had serious money and he had secured pit access for the carburetion day events. \n\nSince no modern racer is conventionally aspirated \"carburetion day\" is just a term. \n\nIn the old days this was the time they manually fine-tuned the car to the racecourse. Now everything is so computerized that they jiggle with the on-board settings from a workstation in the pits.\n\nBut relative position on the starting grid is also determined on Saturday. The Mercedes, Williams, Ferrari, Renault and McLaren teams were all bustling around where we stood trying to get that last micro-advantage for their racers. And the drivers were pushing their vehicles to get to the front of the pack.\n\nThe Grand Prix has been run in Monaco since 1929. The immediacy of the buildings, street lights and other obstructions makes the event itself so dangerous that the course would never have been certified if it hadn't been an original circuit. \n\nConsequently, the first one to start tends to be the first one to finish in Monte Carlo's narrow streets. Especially since the drivers will hit close to 200 miles an hour on the waterfront straight. \n\nSo there might have been more drama going on in the pits today then there would be tomorrow. \n\nAs the four of us stood near the pit wall, the sound of drivers jazzing those high tech engines and the Doppler effect of cars going past on the narrow city streets was absolutely thrilling. \n\nThe engines on those things are limited to 1.6 liters. That's about 100 cubic inches in American terms, or the displacement of a big Harley Davidson motorcycle engine. Nonetheless, the average Harley engine generates 80-120 horsepower. While those engines generate between 600 and 750 horsepower. \n\nHow they did that was what interested me, not the racing itself.\n\nI was watching a tech for the Williams team tuning one of their Mercedes engines. I hesitate to use the word \"mechanic\" because he was using nothing but computing gear. \n\nAt that point Cohn and the Ashley sisters walked into the pits. \n\nI looked behind me and Mike and Bill were chatting with the Kuwaiti. I thought, \"Shit! This is going to be embarrassing.\"\n\nAs they made their way to the center of the pit area, Cohn and Lady Brett came into Campbell's line of sight. I could see him do a double take. \n\nThen he instantly did the math. At which point he puffed up like a ruffled grouse and took off in their direction. Both Bill and I chased after him.\n\nWhen he got to Cohn he spun him around and landed a haymaker to the side of his head. That knocked Cohn down. \n\nWe arrived as Cohn was starting to get up to come back at Campbell. It was going to get ugly. \n\nI grabbed Cohn by one arm and said, \"Don't do anything stupid. The police are here. He's not worth it.\"\n\nBill and half the bystanders restrained Mike. The Kuwaiti arrived about the same time as the Gendarmes. There was a lot of heated conversation. I couldn't hear any of it because a long crocodile of cars came shrieking past at that point. \n\nOnce the noise died down I could see Bill, the security police and the Kuwaiti walking Mike out of the pits toward the harbor. Bill seemed to have him in a hammer lock as he was doing it.\n\nI looked at Cohn and his two women. \n\nBrett was somewhere between amused and turned-on. Britt was horrified. And Cohn was rubbing the side of his head looking pissed. \n\nI said to Brett, \"I thought you said that there wouldn't be a problem?\"\n\nShe said in her bored plummy drawl, \"I didn't think that Mike would behave like a child. I am done with him. He needs to accept that.\"\n\nI thought, \"What a self-centered slut!\" \n\nI was wondering if she had ever actually gotten around to informing Mike himself. The little voice in my head was whispering, \"They're all alike.\"\n\nI turned to Cohn and said, \"Are you okay?\"\n\nHe smiled jauntily and said, \"I have been hit a lot harder in games. I just didn't see that one coming.\"\n\nBritt was looking at me oddly. She said, \"That was very gallant of you to step in. It must have been difficult for you to get involved. I can see that you hate physical violence.\"\n\nI smiled sheepishly and said, \"I'm a geek. I have never been in an actual fight in my life.\"\n\nI walked over to the barrier to get my adrenaline under control. Britt walked with me. Brett and Cohn were kissing. It looked like a little public makeup sex for getting him busted in the head. \n\nI was resting my hands on the barrier, head hanging down. Britt came to stand silently next to me. Once the two love-birds were done molesting each other they also walked up to the barrier. \n\nOne of the Scuderia Ferrari's came screaming past as they did. \n\nWhoever was driving the thing made a swift inside move on the McLaren that he was following and passed him wheel to wheel literally four feet from where we were standing, on the other side of the Armco. \n\nIt was either incredibly brave or totally foolhardy depending on your perspective. \n\nNevertheless, it was a masterpiece of the race driver's art. The man in that cockpit must have been a grand master of the sport.\n\nThe driver gave us a little \"sorry\" hand gesture as his blast wave nearly knocked us off our feet. He reappeared two minutes later, as we were still reassembling ourselves. \n\nHe came up the pit road jazzing his engine as he slowed and abruptly pulled into the Ferrari pits. The pit crew helped him unstrap and pull off his helmet.\n\nI heard Lady Brett gasp. \n\nIf she was the very essence of female beauty the kid in the cockpit was her exact analog on the male side. \n\nHell! He was gorgeous. \n\nHe walked over to where we were standing, never taking his eyes off of Lady Brett. Even though it defied all logic he must have noticed her as he went past us at 80 miles an hour. \n\nThey say racing drivers have exceptional vision and reflexes. That was certainly proof. Although Brett WAS that spectacular\n\nHer eyes were glazed over. And she was doing the whole hand on chest, heaving bosom thing that a very sexually aroused female would do.\n\nCohn was pissed. I didn't blame him. Brett looked like she wanted to drop to her knees and blow the guy right there on the spot. \n\nHe smiled dashingly at all of us and said in heavily accented English, \"Forgive me for the close pass. I was on my qualification lap and I was trying to get around the fool.\"\n\nHe was not big. But no racing driver is. He was like a Calvin Kline model except maybe trimmer and better looking. And he had that classic three day growth of beard, which must have itched like crazy under his helmet. He was also in his early 20s. \n\nHe had huge soulful brown eyes and that pale skinned thick curly haired look that the all of the really beautiful Iberian types sport. In fact he was like a smaller slimmer version of the young Antonio Banderas. No wonder women threw themselves at his feet. \n\nHe turned and extended his hand to Brett and said, 'My name is Pedro Romero. I might be Spanish but I drive for the Italians. And who are you beautiful lady?\"\n\nIt looked to me like Brett was having an orgasm as she extended her hand and breathlessly drawled, \"Lady Brett Ashley.\" If anything her accent had gotten plummier. \n\nCohn put his arm around her possessively and extended his other hand to Romero. He said, \"And I am Robert Cohn. I'm sorry we can't stay but we have an appointment.\"\n\nHe then proceeded to drag Brett off toward the exit leaving me and Britt and Romero standing there. All of us looked nonplussed. \n\nIt was definitely an unceremonious exit and I am sure that Romero understood why. With the way the man looked and his occupation I imagine that he got that kind of treatment a lot from jealous husbands, lovers and boyfriends. \n\nI extended my hand and said matter-of-fact, \"Jake Barnes and this is Lady Britt Ashley, Brett's sister.\" \n\nSince English was a problem for the dude I was not going to try to explain alliteration.\n\nHe looked at Britt and I could see him sizing her up. The problem was that he came to the same conclusion that I had. Britt was more attractive than Brett. \n\nIf he had been a Sparrow missile I would have heard his \"lock on\" signal loud and clear. \n\nHis entire demeanor changed. He did everything but bat his eyes at her like Pepe Le Pew. He said a little over-gallantly, \"It is my pleasure to meet such a beautiful woman. Would you like me to show you the area behind our pits? It is fascinating.\n\nShe said, \"Why thank you. Can Jake come with us?\"\n\nThat was a stupid question. \n\nHe looked at me, put on his most insincerely regretful face and said, \"No I am sorry but I am only allowed to have one guest at a time back there.\"\n\nMy jealousy meter spiked off the end of the scale. \n\nHoly Shit!! What was that!!???? Feelings!!??? \n\nIt was like a guy who had been hopelessly paralyzed suddenly discovering his feet itched like crazy. \n\nBritt looked regretful herself. She said, \"Then I will have to turn down your kind invitation. But perhaps you would care to join us for drinks after you get done for the day. We are having a little party on the Crystal Terrace this evening at 7:00.\"\n\nShe smiled prettily at Romero. Then she took my arm turned and immediately started pulling me toward the pit exit. \n\nMy heart swelled with joy. I had forgotten about the roller-coaster a woman can put you on.\n\nThis stunning and gracious lady had just chosen to be with me. Instead of taking the opportunity to get fucked by the most beautiful racing driver in the universe. \n\nI wondered which episode of the Twilight Zone I was in. \n\nIt was both exhilarating and incredibly scary to discover the depth of the feelings that I had for Lady Britt Ashley. \n\nMy first instinct was to mercilessly stamp them out. But Britt had been nothing but kind and courteous to me. I was not going to reward her demonstration of respect by acting like an asshole. \n\nNonetheless, I had made a pact with myself to never get burned again. And this woman was walking napalm.\n\nAs we strode along she was chattering to me in her fruity academic accent about the way the techs fine-tuned the fuel and timing factors wirelessly using the onboard engine ECUs. \n\nIt was unnerving. She seemed to be totally ignoring the fact that the sexiest man in the world had just propositioned her. \n\nOr maybe handsome, dashing and glamorous didn't mean anything to her?\n\nShe was holding my arm against her full left breast while we walked and I could feel its softness in contrast to the hard body that it was attached to. \n\nAnd miracle of miracles, Old Lucifer began to stir. \n\nIt had been so long that I almost didn't recognize it. The effect was roughly similar to somebody coming out of a fourteen month long coma. \n\nIn the meantime she continued to talk nerdy to me and I couldn't take my eyes off of her beautiful face. \n\nWhen we got back to the hotel I called Gorton. He said that Campbell had been drinking all afternoon. I told him about the party and suggested that he keep Mike anywhere but there. \n\nBritt was standing with me in the lobby. I looked at my watch and we had about an hour to change. I asked her if she wanted to grab a drink on the patio. \n\nShe pointed out that the female of the species needs a lot of time and preparation to look casual. So she said that she had to go up to her room and do woman things. \n\nI felt disappointment. I think it showed. \n\nShe gently touched my cheek. It was the first time I had been touched that way since I kissed Janet goodbye that historic morning. I think that the pain showed because Britt said, \"We will have to talk about this tonight Jake. I want to know what you are thinking.\"\n\nThat had about a million interpretations to it. I would normally have fled the scene but I was hopelessly tangled in the woman's web. \n\nSo instead I smiled and said, \"I'll see you at 7:00 kiddo.\n\n____________________________\n\nI was shaved, showered and strolling out onto the patio promptly at 7:00. \n\nIt was like I was back in fucking high school hoping that Beverly Johnson was at the dance. \n\nThe patio is huge. But the people Cohn was hanging with had reserved a roped off section to entertain a select set of elite guests. I was anything but elite. I was there because Britt had invited me. \n\nBut then again, so was Romero. \n\nAs soon as Romero walked up, the gorilla holding the velvet rope let him into the party. After all, he WAS a big-time star.\n\nHe was not so charitable when I walked up. So I hung around the public area waiting for either Cohn, or Britt to notice me and come vouch for me. \n\nI was not as insulted as you might think. I am used to being excluded from things. \n\nNevertheless, watching the glitterati as they partied in their special little area was a valuable reality check for me. \n\nAgainst every shred of better judgement I had begun to have thoughts about Britt. She seemed like such a good person, kind, intelligent and caring. \n\nAnd she was a gorgeous English Rose. She had a graceful style and a sense of self that was heartbreakingly appealing. Her natural honesty and decency just made her more beautiful. \n\nAnd since all of that attraction came from her soul, not her stunning face and nubile body, I knew that she would retain that selfsame beauty when she was 88. \n\nI couldn't see her making a life with Romero. She was way too classy for somebody like him. And he WAS a few years younger. \n\nBut I wouldn't blame her if she sampled him for a weekend. After all, he WAS a walking phallic symbol.\n\nAnd then there was me. \n\nI had already struck out swinging with a woman who was my relative social equal. I couldn't imagine how embarrassing a trip to the plate would be with a world-class beauty like Britt. \n\nI finally saw her standing with Cohn and Brett off to one side of the buffet table. She just emitted energy, intelligence and wit. \n\nShe had dressed \"casual\" for the event in a light silk flowered dress that revealed a modest amount of superb cleavage and a perfectly shaped leg. She had on one of those hats and veils that only upper class English women can pull off. But it was that body in the clinging silk dress that was speaking eloquently to me. She was breathtaking.\n\nRomero headed for her like he was a cruise missile and she was downtown Pyongyang. \n\nThey started to converse. He was standing about 6 inches in front of her. She looked a little uncomfortable. But she didn't take a step back. She was laughing and holding his arm. I assumed that she was conveying her sexual interest.\n\nI shouldn't have felt anything. Their attraction was natural. She's gorgeous. He is too. \n\nBut the problem was that I DID feel it. And it DID hurt. I was totally disgusted with myself. How in the world could I have let my defenses down that far? \n\nI said under my breath, \"That's a lesson I won't forget soon.\" \n\nI was just about walk as far away from the beautiful people as I could get. When Romero said something to Britt and then he nodded in my direction. I gave her a weak little wave. It was a parting gesture. \n\nShe looked at me with real anger.\n\nI thought, \"Oh Shit!! She thinks I'm intruding on her little tryst with Romero.\" \n\nSo I abruptly turned and fled out the terrace exit. I was really pissed at myself. A year of healing just tossed into the crapper because I was too weak and stupid to follow my own rules. \n\nI was far too upset with myself to just sit in my room. So I headed for the Explorer Pub. I was pretty sure that I would find Bill and Mike there. \n\nI had gotten the deflector shields back on line. And I was ready for whatever the Klingons could throw at me.\n\nAll three of them were out on the terrace overlooking the inner harbor. That place is the only deep water port on the Cote d'Azur. And it has been one since the Greeks. In fact it's so old that it gets its name from Hercules who used to hang out there in the good old days. \n\nBill was happy to see me. I think one of the reasons was Mike. It looked like that guy would need a little wrangling tonight. \n\nI had no reason to empathize with Mike. Since I had no rights to the other sister. \n\nBut frankly getting smashed sounded like a capital idea. \n\nMike kept telling us what he was going to do to Cohn when he got his hands on him. \n\nI finally said, \"Look Mike, it isn't Cohn's fault. Brett is just that kind of woman. \n\n\"You can't change her. So you need to let her go, or she will snuff out your very soul. \n\n\"And if it's any consolation Cohn will be in the same situation as you are in, just as soon as she gets tired of him.\" \n\nWhat I wanted to say was, \"Don't waste your time over a self-obsessed slut like Brett.\" But I knew for sure that would start a fight. \n\nI was also thinking about my own unfortunate situation with Britt. \n\nI recognized that Britt was not the same kind of girl as her sister. But the prospect of her and Romero entwined in a sweaty heap sometime in the next couple of hours was not doing anything for MY soul either. \n\nI had several beers with them while we talked. It was actually a stimulating time sitting around in ideal surroundings getting an education in Grand Prix racing. \n\nI was born and raised in NASCAR country and the idea of a bunch of Italians, Germans, French, and Brits tooling around quaint little European streets in miniature cars was kind of comical. That was until I saw the things in action and suddenly Dale Junior's Chevy seemed lowbrow and underpowered. \n\nBoth Bill and the Kuwaiti were doing some pre-race odds-making and it turned out that Romero was on the top of the list of potential winners. \n\nI knew that he was going to be a BIG winner tonight. \n\nI had enough and the conversation wasn't helping because Campbell kept coming back to how Brett had done him wrong. \n\nI finally said, \"Grow up Mike, you have to learn to walk away from the things that are bad for you.\" I was actually talking to myself there.\n\nCampbell came out of his chair like he was going to take a swing at me. I was ducking and Bill grabbed him in the same hammer lock that he had used this afternoon. \n\nHe hastily said, \"Thanks for the evening Ali. I'll see you back on the boat.\" And he frog marched his buddy toward the exit muttering, \"Come on you dumb shit.\"\n\nAli looked at me and I smiled. I said ruefully, \"You need to help him to understand that he can't make something happen that is just not going to come to pass.\" I was talking to myself again.",
        "He said, \"I will my friend. In the meantime please join us on my boat tomorrow. You are more than welcome. And by all means bring that beautiful woman who is so taken with you.\" \n\nI did a double take and said confused, \"What beautiful woman?\" I didn't recall any beautiful women in my lifetime. At least one who had ever been \"taken\" with me.\n\nHe said, \"Lady Brett's sister of course. Are there any others?\" His tone of voice indicated that he thought I was kidding. \n\nI just sat there looking poleaxed. I said, \"Why in the world would you say something like that. She is no doubt somewhere right this minute getting extremely up-close-and-personal with Pedro Romero.\"\n\nAli chuckled and said, \"If she is it's because you let her get away.\" \n\nThen he stood and dropped a couple of hundred Euros on the table and sauntered out. \n\nI was still ruminating about what he had said when my phone rang. I figured it was Bill updating me on Mike's status. \n\nInstead it was the only other person in Monte Carlo who had my phone number. \n\nCohn sounded frantic. He said, \"You have to meet me in the lobby right away. Romero took off with her.\" Then he hung up.\n\nHoly Shit!! Romero had taken off with Britt!! I assumed he would be fucking her sometime tonight, but kidnapping???!! \n\nI sprinted across the street, dodging ferocious Monegasque traffic. This was an all-hands-on-deck situation. And I was in panic mode. \n\nI even remember thinking, \"Here I thought that Britt was such a classy woman. I am such a dumbass!! They're all sluts!!\"\n\nAs I came in the door Cohn was pacing the lobby like the proverbial caged beast. I ran up to him and said panting, \"Robert, where is she? I'll kill him if he hurts her.\"\n\nHe looked distraught and said, \"It's Brett, she disappeared. I think she is with that guy Romero.\" \n\nI swear my first thought was, \"Three-way!!?\" \n\nThen my next thought was stark raving insane joy.\n\nThat was when a concerned voice behind me said, \"Jake, are you all right. Where did you go?\"\n\nI turned and there she was looking at me with worry. She was a study in beauty and elegance. \n\nIt was instantaneous. The deflector shields blew up. The walls came tumbling down. And I was unequivocally \"all-in\" with this woman. \n\nI realize that it sounds stupid. But seeing her like that my heart just soared. And if love is a sense of absolute connection, then I was truly and utterly in love with her.\n\nBritt is very smart. She instantly \"got\" the picture. I didn't need to say a single word to explain myself. I saw a look of compassion and understanding pass over her face. And I thought I detected something else as well.\n\nI said, \"But I thought YOU were with Romero.\"\n\nShe looked appalled and said, \"Why would I be with HIM? I have been sitting here waiting for you to return from wherever you bolted off to.\" \n\nShe seemed cool but concerned. She undoubtedly understood what I had been thinking and she was letting me twist for my lack of faith in her.\n\nI was getting lost in those intelligent grey eyes again. I said distractedly, \"Never mind that. We can talk later.\" \n\nThen I turned back to Robert and said, \"How can we help?\" \n\nHe said, \"You took off and Britt went to find you. When she didn't come back I went out to see where SHE was. She said she was waiting out here for you. So I came back and Romero and Brett had both vanished. That's when I called you.\"\n\nI was still wrestling with my emotions. Britt had waited for ME?!! \n\nBut I said, \"Let's think this through. There are only two places they might have gone. The million dollar RV that follows all of those guys around from race to race, or the pits themselves.\"\n\nI figured that he would use the same ploy on Brett that he tried with Britt earlier in the day. Except I was pretty sure that Brett would be an easy mark.\n\nThe last thing I wanted to have happen was for Cohn to discover Romero and Brett happily fucking. So I said, \"Why don't we check out the pits and you check out his motorhome. They are more likely to be there. Since it has a comfortable bed\"\n\nI knew that we would find them in the pits. But by sending Cohn to the other place, I was hoping to prevent him from getting locked up for killing both of them. \n\nHe said, \"Yes! That sounds right! I'll see you back here once I find her!\" And he rushed off.\n\nI turned to Britt and I said, \"I thought you and Romero were the ones who were going to be together tonight. That's why I took off. I couldn't bear the thought of you with him.\"\n\nShe looked amused and astonished. She said, \"Why in the world would you think I would be interested in that BOY?!! \n\n\"Does that woman over there interest you?\" \n\nShe pointed to one of the big-titted, scantily clad sea-skanks who had just come off a party boat out in the harbor.\n\nI said, \"God no!! There is probably no part of her body that isn't artificially enhanced. I like my women real and I might add with an IQ higher than room temperature. \n\nI might be a typical male but I have to connect SOMEWHAT with a person before I want to get intimate with them.\"\n\nShe giggled merrily and said, \"My thoughts exactly. Romero is not a person I could EVER connect with in that way.\"\n\nWe strolled hand in hand toward the pits. I was absolutely sure we would find them there. \n\nIt was a gorgeous night. Perfect temperature, with light breezes bringing in the faint flowery smell of the hills. After the all-day intensity and pandemonium it was peaceful in the pits. There were still mechanics quietly working on the cars in the lighted shelters behind the pit wall. \n\nThere were also guards all over the place. Most of them recognized us from this afternoon. But I think that it was Britt's beauty that actually got us the free pass. A gorgeous woman can get away with a lot with French and Italian guards. \n\nWe sauntered past the Ferrari pits and towards the temporary sheds where they store the extra tires and parts. I was glad that Britt was with me since I knew I would need her help with her sister. \n\nI wasn't afraid of Romero. He might be a champion behind the wheel. But I was almost a half-foot taller and close to 100 pounds heavier. However, I was thinking that if we interrupted Brett in the middle of the act I might need Britt's assistance to pry her claws out of my hide.\n\nWe surreptitiously opened the shed door and we could hear a loud, wet rhythmic slapping sound. \n\nSlutzilla was in there moaning noisily, \"Yesssss harder! Fuck me!! Fuck me!! More!! More!!\"\n\nShe was bent over a stack of tires arranged so she could stick that gorgeous ass up in the air for Romero to pound. Her huge boobs were out and dangling and Romero was playing with one of her nipples. The smell of rubber and oil was flavored by the aroma of aroused woman.\n\nShe started to shriek and then she loudly announced, \"AHHHH! YESSS!! CUMMMMING!!\"\n\nMeanwhile, Britt was standing there looking cool as Wellington at Waterloo. She had either witnessed something like this before. Or she was just THAT rock steady. \n\nI didn't know what to do. I didn't have a garden hose to turn on them, like I do the dogs at home. And they weren't hurting anybody except perhaps Cohn. \n\nThe problem was that he suddenly appeared directly behind us. He had evidently figured-out that I was trying to send him off on a wild-goose-chase and followed us.\n\nHe took one look at Romero, who was grunting loudly as he began to finish, let out a roar that would have done credit to an angry bull rhinoceros and rushed past us. \n\nHe hit Romero with a shoulder to the ribcage. It was the same thing he must have done to countless Princeton and Yale running backs in his years playing for the Crimson. Romero let out a strained yell, flew up in the air and landed on his back several feet away. \n\nIf he wasn't quite out cold. But he was clearly stunned. He looked absurd lying there legs splayed unmoving, with his rock hard dick standing straight up in the air. \n\nBrett let out a shriek that had nothing to do with orgasms and sprawled face first on the stack of tires. Cohn grabbed her violently by her naked hips and put her back in the exact same position that she had been in a few seconds earlier. \n\nShe didn't even struggle. She just turned her head and looked back over her shoulder wiggling her butt invitingly. She was very sure of herself. Cohn immediately unzipped and inserted in the place that Romero had just vacated. \n\nBrett let out a long low satisfied groan of satisfaction and went right back to plunging her ass at Cohn. She started just yelling, \"That's it baby!! FUCK your woman!! Give it to me good!! Harder!! Harder!!\" \n\nAll that time Britt and I were just standing there stupefied. It was like watching chimpanzees mating. I was embarrassed for both of them.\n\nCohn, had ahold of Brett's hair like a bridle. She had her arms braced firmly on the tires and her ass raised up in the air. He was banging on it so hard that the ripples went almost all the way up her radically arched back. \n\nIn the interim, Romero had come back to the living.\n\nAs Brett was urging Cohn to fuck her harder, Romero was smart enough to dash past us and out the door, unceremoniously clutching his pants to his front. \n\nIn the meantime, Brett and Cohn had built to the same kind of slapping moaning crescendo that we had heard when we first opened the door. \n\nI had no ideas beyond an overwhelming desire to get the fuck out of there. \n\nI had seen a few instances of slutty behavior, my former wife for instance. But I had never witnessed anything as fundamentally wanton as what was going on in front of me.\n\nWe turned and walked out closing the door on Brett's shrieks and Cohn's baritone groans. \n\nWe walked silently back to the hotel. I don't think either of us could come up with the words. \n\nWitnessing that scene made me ashamed to be part of the same species.\n\nWhen we got to the lobby Britt spun me around to face her. She had a serious and determined look on her face as she said those ominous five words, \"Jake we need to talk.\"\n\nI said earnestly, \"I know. Where do you want to do that?\"\n\nShe said, \"Can we go someplace private? I want peace and quiet after what we just witnessed.\" \n\nOne obvious place for privacy was my room. But that was about as far from the context that either of us wanted to create as the Planet Tatooine. \n\nI said, \"I have heard that the Exotic Garden is a nice place to sit at night if you want to be alone.\" \n\nShe said, \"Thank you.' \n\nThat was not as odd a statement as it might have sounded. She was thanking me for not inviting her up to see my etchings.\n\nI parked the Evoque in the little lot down the street from the Entrance to the Garden. \n\nIt was relatively quiet and peaceful as we walked hand in hand through the entrance and then navigated our way down the terraces to a place where we could sit and look out over the Mediterranean and the Ville Monaco to our left. \n\nThe sky was literally dark purple with a million stars set in it. The Mediterranean is a special place at night. The silence and beauty of the setting was breathtaking. \n\nWe found a bench. She sat next to me oriented toward me but not touching. She wasn't being unfriendly. She just wanted some space. \n\nThis was not romance. It was going to be a serious talk between two rational people. I recognized the similarity in approach. We both handled things exactly the same way.\n\nI said, \"When I saw you with Romero it nearly killed me. I really don't know you and I was afraid that you might turn out to be like your sister. In retrospect, I'm very sincerely sorry that I ever had that thought.\"\n\nShe said, \"Your mistake is understandable. He DID outright proposition me while you were watching us. That probably came through in his body language. \n\n\"I kept pushing him away to get him out of my space. But he kept forcing himself on me. I didn't know that you had arrived until he pointed you out. \n\n\"I could imagine what you thought was happening between him and me. And it made me furious. He had obviously connived to give you that impression.\n\n\"Then you rushed out without giving me a chance to explain. I looked for you but you had already disappeared. So I just sat in the lobby and waited for you. I knew you would come back sooner or later. \n\n\"That was when Robert came rushing up and you know the rest. \n\n\"Why were you so upset? I would have come to you the moment I knew you were there. Does this have anything to do with that thundercloud that is always hanging over you?\"\n\nI said, \"I came home from work one day. And my wife of five years just up-and announced that she was leaving me for a man who she had been conducting a six month long affair with. \n\n\"I trusted her. And I didn't see it coming. \n\n\"Since that day I have had no confidence in the morals or integrity of a single soul, particularly a woman. And I never get close enough to anyone to let them prove otherwise. \n\n\"I don't WANT to be THIS alienated. It's just the way I am and have been for the past fourteen months. \n\n\"I came to France to try to repair the damage to my self-respect. I needed to get a renewed sense of who I was and a healthier direction in life. \n\n\"I thought I might be recovering. But then I saw you and Romero interacting as you were. And it was d\u00e9j\u00e0 vu all over again. \n\n\"I couldn't stand the pain. So I went to find Bill and Mike. Mike is the poor unfortunate guy who committed his heart to Brett. I thought that I knew how he felt.\n\n\"I realize that I misjudged you terribly and I am sorry. I hope we can get to know each other better, without the monkeys which are relentlessly fucking in my head getting in the way of our doing that.\" \n\nShe looked at me with wide luminous eyes and said, \"What do you think about the scene that you just witnessed with my sister. Do you think I am like her because I am related to her?\"\n\nI said, \"God No!! That was something out of Animal Planet. \n\n\"I sincerely believe that you are an intelligent and level headed woman, who is forthright and honorable. You are as much like Brett as I am like Cohn. Their behavior is not even close to what either of us would consider normal.\"\n\nThen she turned deadly serious. She said, \"Do you view me in the same light as you do your former wife?\" \n\nThat made me think. I said, \"Janet was smart and funny and beautiful like you. It was just that there was fundamental damage that I didn't see. \n\n\"In my mind you are a perfect woman, beauty, intelligence and kind-heartedness in one package. And in the very short time that I have known you your obvious intellect and superb sense of self have drawn me to you in a way that I have never experienced in my life. \n\n\"I sincerely think that you are as genuine as you seem to be. But I really can't judge that until I know you better. I would like to try to do that if you are willing.\" \n\nShe looked like that was the answer she wanted because she said, \"My entire life I have been Lady Brett Ashley's little sister. Nobody has ever judged me for who I am or what I do. They just see me as a younger version of Brett. And the last thing I want to be is like her.\n\n\"I have had a few lovers and I probably like sex better than she does. But there has to be something between me and the man before I ever consider letting him in my body. \n\n\"Without connection sex is just animal behavior. It might be incredible from a hormonal standpoint. But sex like that is no different than the mating conduct of any other species. And I like to think that I have evolved a little bit further than that.\n\n\"I have to sense the individual's personhood during the act. That is critical because I need to give myself totally to a man in order to get any real satisfaction. Brett's impersonal approach would corrode my soul.\"\n\nThe thought of Britt utterly abandoning herself to another man pegged my jealousy meter again. I realized that sex was a natural part of any woman's history. But Britt had already made such a solid connection with me that I didn't want to even VISUALIZE her with another guy. \n\nI admitted to myself that my getting jealous and over-protective in such a short space was insane. But the feeling was there nonetheless. \n\nAnd it was so illogical that it scared the shit out of me. What was happening to my carefully constructed facade of detached cynicism???!! \n\nMeanwhile she was still talking to me. It was like she didn't realize that I was suffering from horrible green-eyed pangs. \n\nShe said, \"I am aware of the fact that I am attractive to men. And frankly that is more upsetting than it is anything else. \n\n\"I believe that I am a lot more than my looks. I need a man to want me for my intelligence and my inner self. The problem is that, everybody tries to put me in that cage, even my colleagues.\n\n\"They make jokes about my breasts subtracting IQ points from the men around me due to the distraction they create. Imagine people only judging you based on the size of the bulge in your pants and you will get some idea of what it feels like to be me. \n\n\"So I have tried very hard to minimize my sexuality.\" \n\nI thought to myself if she is trying to minimize her sexuality I can't imagine what she would be like if she tried to MAXIMIZE it. I knew that she would be hotter than her sister. And her sister was the hottest woman I had ever met.\n\nBritt looked troubled as she said, \"I have accomplished some meaningful things in my short academic career, undertakings and accomplishments that would define a man. \n\n\"And the only recognition that I have gotten so far is that I am sexually attractive??!! That is both unfair to a person like me and humiliating.\n\n\"I want to be appreciated for who I am, NOT what I look like. And my relationships have to be based on a union of equals. I want to make a life with a man that is founded on mutual respect between two like-minded people, not one based on my looks, or sexuality. \n\n\"When I eventually give myself to a man I plan on doing it for life and that is a long time. Passion will die down and beauty will fade. But the bond between one man and one woman will always have to be there for me to ever be happy. \n\n\"From the beginning I recognized your basic decency, your willingness to treat me as your partner and peer, not your \"woman\" and that attracted me to you right away. \n\n\"You also have a top flight mind, which I absolutely require in a life's companion. \n\n\"And honestly, I have wanted to take the next step with you from the moment we met. I know that you have legitimate trust issues. So I will do whatever is comfortable to navigate you around your past experiences. \n\n\"But I would like to move forward with our relationship. I promise you that you will never regret it\"\n\nThat was all said in a neutral tone of voice. It was an exchange of ideas between two absolutely likeminded people. There was no flowery romantic tone, or heated sentiments. \n\nMore importantly the subtext had none of the, \"Now that we've gotten THAT behind us let's fuck!\" that so many of these type of getting-to-know-you conversations have.\n\nIt was exactly the way I would have handled things, if I was trying to establish a true link with another person. And it further reinforced my belief that Lady Britannia Ashley was the woman for me. A special person who I could always trust and somebody who I could make a life with. \n\nIsolation and loneliness are not the normal condition for human beings. And I realized that I needed somebody. Even with all of the phony philosophizing that I had been doing in order to convince myself otherwise. \n\nBut after what I had been through, committing myself to a woman required my having complete unshakable confidence in the steadfastness of her very soul.\n\nThis cool, smart, honorable and coincidentally totally gorgeous woman was offering to carefully and judiciously build a relationship with me. And I felt assured enough that she had the natural intelligence and graciousness to take that step.",
        "I leaned toward her and she was leaning toward me in the same fashion. It was literally a magical, compelling moment. \n\nThat first touching of lips was the sweetest and most natural kiss I had ever been given, no hot open mouths or wildly dueling tongues. There were also no skyrockets or pounding symphonic music. \n\nIt was plain and simple a total and unqualified merger of two people. \n\nAs we kissed every missing piece fell instantly into place. And I was whole again. You would be an utter fool to ignore the significance of that miraculous event. \n\nWe broke apart. She moaned just faintly. You could see the wild passion flare in those exquisite grey eyes. But then the blast doors slammed shut. \n\nShe had Bret's white-hot inner fire. But it was under strict control. \n\nI knew I would see that passion again. But it would only be at a time and place of her choosing. \n\nI appreciated the fact that she carefully controlled her sexuality. No man in his right mind wants to be with a woman who can't regulate her own base urges. That was the problem with Janet and Brett. \n\nBritt's rigid self-discipline and her moral strength were two of the things that I loved the most about her. \n\nI said, \"As far as I am concerned, that kiss seals our bargain. I can't believe my sheer good luck. Things like this have never happened to me. \n\n\"But the instant I touched your lips I knew that you were the woman for me. I believe you are for real and we can make it.\" \n\n_____________________\n\nWe didn't fuck that first night, or even while we were in Monte Carlo. In fact we had been committed to each other for almost a month before we eventually got around to THAT part of our relationship. \n\nWe watched the race from the Kuwaiti's boat. Romero had a bad day, eventually pulling off complaining of fatigue. More likely, the DNF was due to bruised ribs. \n\nBritt stood out, even among the rest of the beautiful people. But her exceptional beauty meant nothing to either of us. \n\nWe were alone together in that crowd. We were always connected by glances as we circulated. And she constantly communicated to me that she was by my side. Even if she was standing 50 feet away talking to other people. \n\nHer resolute and unconditional comradeship was a lot better than hot sex. After 34 years and one failed marriage I finally experienced what having a true life's companion was like. I was not outside on the porch any more. She had brought me inside. And I was at peace. \n\nThe crowd of cheerful partygoers was getting to be too much. So I was leaning on the rail of the boat trying to find a little alone time. She came over to lean next to me. She bumped me with her shoulder. \n\nIn my opinion that playful little bump was a lot more intimate gesture than her sister waving her ass at Cohn, the night before. And it was a hell of a lot more meaningful and significant. \n\nShe looked out over the harbor toward the Exotic Garden and said, \"I wish we were up there instead of here.\" \n\nOf course I had been thinking the same thing. It was interesting for the first time in my life to be linked to somebody who shared my interests and outlook on life. Watching the race was frankly boring. And interacting with rich people was an exercise in tedium. \n\nBritt was raised as nobility. I am sure that a well brought up young English aristocrat could never shirk her social responsibilities. But since triviality and small talk stifles my very soul I also had the sense that her growing up must have been excruciating.\n\nI had two thoughts. The first I kept to myself. But I still couldn't help thinking it, \"Seriously!! An English blue-blood who is as beautiful as this woman has chosen me? I am clearly living in some kind of Lewis Carroll tale.\"\n\nThe other thought was more important. I said, \"You are as bored as I am aren't you?\"\n\nShe nodded her eager agreement and said, \"I would rather be some place quiet with you, just reading and talking. Do you like to sail? I love the peace and quiet of being alone on a boat with somebody.\"\n\nI didn't ask. I was pretty sure that I couldn't handle a story about her and Sir Percy alone on Windermere.\" \n\nI said, \"That is my idea of a perfect afternoon. My ex couldn't sit still long enough to ever do it, let alone enjoy it. I have a little 32 footer that I sail on the Potomac. But my only companion has been my old dog Buster.\"\n\nShe laughed and said, \"We have a lifetime of that in front of us. And I am the best deck hand in the entire fleet skipper.\" \n\nShe stood to full attention and gave me the Brit's open handed salute. \n\nThe impish smile on her beautiful face was only equaled in its impact by the movement of those big breasts as she threw her shoulders back. \n\nOld Lucifer stirred. Then he ALSO stood to full attention. \n\nIt was the first time that had happened in almost 15 months. If miracles are a condition for sainthood, the woman should be beatified. \n\nOf course she had her travel plans and I had mine. So we parted company that evening. \n\nI wasn't even remotely upset. I knew that we would be together for a lifetime and so our going our separate ways only whetted our appetite for each other.\n\nShe flew out of Nice. I drove the boys back to Paris. \n\nThen it took me a few weeks to tie things up at home. The primary hang-up was simply clearing the decks to be together permanently. \n\nHer father was a hereditary Earl. Her mother had died the year before and Brett had been disinherited years earlier. So Britt was his only direct relative.\n\nSince the inheritance rules of the British aristocracy haven't advanced much past the days of William the Conqueror. Britt couldn't inherit the Earldom.\n\nBut a large portion of the estate in Gloucestershire went to her. Her father was still hale and hearty. And short of something unexpected happening it would be a while before we lived in the Earl's House.\n\nNeither of us were Lord or Lady of the Manor types anyhow. Britt was doing complex and to some extent ground breaking work at Oxford. And she didn't want to give it up. I would have never expected her to. \n\nWhere I eventually ended-up was not an issue. With my money I could have settled in a yurt in Patagonia. And if Britt was there a yurt would have been just fine with me. So, Oxford was the logical spot.\n\nBritt had her own money of course. But I had so much of it lying around in the bank gathering interest that I offered to buy a place near the University should she decide to move in with me. \n\nOr at a minimum I could rent something near enough to her that we could ease into the relationship more slowly. \n\nBeing a level headed woman she chose the latter. \n\nShe said, \"I want this to work and I want to lay a durable foundation before we just dive into the relationship. \n\n\"I love you. I will always love you. But I want to live happily ever after with you too. And living is something we need to approach intelligently.\" \n\nAnd THAT folks, more-or-less summed up the difference between Britt and every other woman I have ever known. \n\nWe talked and messaged constantly while we were apart. She called me a couple of weeks after our parting to tell me that they had a position at the OCL. If I took it we would be able to work together. That decision required about a nanosecond of thought.\n\nI checked out of the Hotel the next morning and headed up the A1 for Calais. It is theoretically only a three hour trip. Of course when you factor in the traffic getting out of Paris it is closer to four hours.\n\nConsequently I didn't get into Dover until early afternoon. And I didn't reach Oxford until the early evening. \n\nI took a room at the Randolph and called her. She had expected to hear from me the following day. And she sounded absolutely delighted by my early arrival.\n\nThe contrast with Janet was blatant there. It was like our time apart had taken a toll on my wife-to-be. That was polar opposite to the attitude of the wife-that-USED-to-be.\n\nJanet normally treated separation as an opportunity to do other things. Whereas, by the tone of her voice it sounded like the only thing that Britt was eager to do, was ME. \n\nWe met in the Morse Bar. Yes! With eight hundred years of unbroken academic history the main bar at Oxford's only five-star hotel is named after the TV character. \n\nI was sitting in the back bar with all of its fancy wood paneling when she came in off of the Beaumont street entrance. \n\nFor a change it was a warm clear evening. She must have walked the five minutes from the OCL down St Giles to the Randolph. \n\nShe was dressed in a little light silk dress for the lovely weather. The way the dress lay showcased her magnificent round ass like a frame around a Renoir. \n\nShe was searching for me smiling her enigmatic smile. Her face absolutely lit up when she saw me. \n\nWas that a choir of angels? Or were they just tuning up somewhere for Evensong?\n\nIt was like we had never parted. It had been three and a half weeks since we had last seen each other. And she was as captivating as ever. \n\nI was sitting with two fingers of Balvenie in front of me. We hugged and she kissed me on the cheek in a sisterly fashion and ordered the same. \n\nEven after almost a month it was no big production. We are not big production people. Anything different wouldn't have been us. And that reinforced our subliminal link.\n\nShe just glowed with energy and happiness. \n\nI said, \"Working late my dear?\"\n\nShe said, \"I wanted to get all of the project work out of the way for the rest of this week. I intend to spend a lot of time getting to know you much more intimately, so to speak.\" \n\nThere was no mistaking what THAT meant. We spent a polite and well-mannered period catching up. We wanted to make our hasty scramble out of the bar and upstairs to my room decorous, if not exactly subtle. \n\nShortly thereafter I was lying expectantly on the bed. She came out of the bathroom and into the muted light from the drawn curtains. She was exquisite. Her perfect body, with its big, high round breasts and the flat stomach and flared hips was highlighted in shadows. \n\nThose long muscular legs propelled her in that hippy way that women run. She arrived in a rush and landed next to me with a bounce, laughing joyfully. \n\nShe arranged herself so that she was lying naked on her back on the bed. She was just staring up at me. I was lying next to her supported by one elbow. I looked into her bottomless grey eyes, so overpoweringly deep and beautiful. \n\nI could see the intellect and strength playing across her soul like summer lightning on a broad prairie. I could also see her immeasurable passion crouching there like a ferocious predator. \n\nI felt her gaze pulling me into her with the feminine power that is the essence of woman, enfolding, and nurturing, ardent, restorative and strengthening. The power of her mind and her absolute humanity were all open and on display in those unfathomable eyes.\n\nShe was giving herself to me totally, unselfconsciously and without reservation. That sense alone spoke volumes about how profound her soul was and the depth of the reservoirs of passion that she was willing to share with the right man. \n\nWrapped in a sense of wonderment, I put just a single finger on her perfect cheek. Its healthy natural beauty glowed like an orchard on a sunny fall day. I slid the little visitor past her long narrow aristocratic nose to her wide sensuous mouth. \n\nHer lips were lightly colored with cosmetics, moist and full and at this stage of the exploration. They were also slightly parted. She was delicately panting. I touched those generous lips and she let out a very faint gasp, enfolded the tip of my finger and lightly touched her tongue to it. \n\nThen she released it and my little traveler passed on over the exquisite point of her chin. I traced down over the solid ledge of her jaw to that perfectly muscled neck. It felt both soft and hard at the same time, smooth dusky and exposed. \n\nIt was exceptionally hot to the touch as the blood pulsed through it. She let out a much louder gasp and then a long sigh, steadily holding my gaze from the depths of her soul. She was communicating her total commitment to me.\n\nMy finger moved across her collar bones to caress her womanly shoulders. I felt the urge to kiss those vulnerable things, so small in proportion to the rest of her powerful female body. But the time was not right, yet. \n\nI moved up the precipitous swell of her full left breast to the aureole. It had wrinkled to a much smaller area as her nipple hardened. But it was still as expansive and brown as a newly turned field. The nipple itself stood there, proud and quivering, round and high as a solitary castle at the top of a great mountain. \n\nI circled my finger around it, wondering at its symmetry. It grew redder and wider as her hot blood engorged it. She let out a little yelp. This feature would require considerable special attention at a later time but the exploration wasn't done yet. \n\nThe breast itself was heaving with increasing passion as I passed down the impossibly long slope from the nipple to her ribs, where the breast folded in to create a vast horizontal space like a crack in a canyon wall. \n\nMy finger traced slightly uphill along her torso, which rose rather than fell away from her breasts. My little traveler came to the highest point on her ribcage, where he encountered the deep drop off to the wide flat plain of her belly and hips. \n\nIt was a breathtaking vista, like coming to a cliff after a long journey and seeing an incredibly broad and fertile valley spread out below you. The hip bones stuck up far in the distance and framed the valley's end. Her mons pubis stood out in the middle of that concave space like a prominent distant hill. \n\nMy traveler lightly skipped down from the height of her ribs across the smooth muscles of her stomach. The ground that those muscles formed rippled wildly as my finger passed and little gasps and moans followed its progress. \n\nIt stopped to explore the crater of her belly button, eliciting a short and very profound groan as it did. There was a small golden artifact attached to the skin there, perhaps put there to mark a place of worship by some ancient civilization, I would return there to worship myself. \n\nThe traveler moved over the undulating swell of her lower belly and into the exceptionally broad and fertile expanse directly between her hip bones. It began to climb her mons. \n\nAs it climbed the solitary finger passed across a well maintained lawn, like you would see if you approached a grand estate. \n\nOn the other side of the crest of that little hill it encountered an enchanting fissure. It was wide and deep, the folds were slightly pink reddish and they were unfolding like a flower in front of the traveler's eyes begging to be explored. \n\nThe female scent emanating from that place was intoxicating in the extreme. The agitated moans and cries urged the traveler to plunge into that fruitful space. But there was still considerable rich bounty to be examined before that could happen. \n\nSo the traveler pressed on across her pubic bone to the considerable gap at the juncture between her thighs and her hips. The traveler had a decision to make, right, or left? \n\nThe traveler chose left. He traced down an extraordinarily full and well-muscled thigh. The dusky skin covering each of those highly defined muscles twitched violently as he passed, while she groaned in an agony of sensory overload. \n\nBecause the traveler was in no hurry the journey took some time. She moaned loudly, cried and bucked during all of it, but she allowed the traveler to proceed. \n\nAt the knee cap my little traveler moved around to the right bypassing the top of the knee and jumped over to the silky smooth skin of the shin of the other leg. \n\nHis change of pathways caused a loud gasp, a prolonged moan and a frantic bucking of her hips. Her muscular legs were vibrating intensely almost humming like an electric generator. \n\nAt that point the exploration included a short detour to trace the extraordinary bulge of the calf muscle. That exploration was complicated somewhat by the uncontrolled flexing of her powerful leg. \n\nThe moans, gasps and pleadings became more frantic. The traveler paused to examine the feet. These were muscular too, real working appendages not delicate little attachments, high arching and solid with neatly painted red nails at the end of the toes. \n\nThe toes themselves were tightly curled at the end of her feet, which were frantically pushing into the bed as she began to wildly gyrate her hips in the grips of a powerful orgasm. \n\nShe had convulsed herself into a perfect arc with just her radically pointed toes and the very tops of her shoulders touching the bed. She bucked wildly in that pose for almost five seconds and then just held it quivering like a taught bowstring for another couple of seconds. \n\nDuring all of that time she was moaning loudly and rhythmically. Only a body as strong as Britt's could have endured the stresses that position must have imposed. \n\nThen she let out a primal noise. I had finally reached the deep river of passion that powered her amazing soul. \n\nWithout a word she sat up reached over and violently pushed me on my back. Then she unceremoniously threw her leg over my prone body and mounted me. \n\nShe grabbed my throbbing erection and shoved me into the hottest, wettest two centimeters of paradise that I had ever had the pleasure of visiting. She let out a groan that was probably audible across the street at the Ashmolean. \n\nTen seconds later she was grinding on me like a madwoman. I knew by the way her contractions were coming that this was going to be a short but very intense experience. \n\nRather than put out any fires the existential orgasm that she had just had obviously touched off an inferno what would have made the great Chicago Fire seem like something you would have in your fireplace on a cold winter's eve. \n\nShe was sitting astride me talons gripping my shoulders. Old Lucifer was lodged in her cervix. She was rotating his head inside her in little 360 degree arcs. She was making sharp little cries and panting like she had just finished a marathon in world record time. \n\nThen the growling started. \n\nI don't know where THAT came from but she was making animal \"HRRRGH, HUUNGGH, HRRGH!\" noises while building us to a peak that I had never even imagined existed. \n\nShe seemed to be as out of it as I was but frankly I wasn't paying attention to anything but managing an approaching orgasm that could only be described as \"nuclear\". \n\nThen the world exploded. My next conscious perception was of shooting boiling hot sperm into her so hard that if felt like the atmospheric pressure inside her womb changed. \n\nMy first rational sensation AFTER that was the feeling of her autonomic contractions still milking me like a berserk Iowa farmhand. \n\nShe was lying on my chest like she was dead. She just rested there for another minute or so. Then she came back to me very slowly slid wearily off my sweat soaked body and popped one eye open quizzically. \n\nI have known a lot of women in my life but I have never been involved in an exhibition of sexuality like I had just witnessed. \n\nI didn't even want to say the usual post-coital things to her. All I wanted to do was worship her. \n\nThere is something at the base of all men's lizard brains that knows that the survival of the species depends on female sexuality. It is probably the reason why the religions of all primitive societies are built around female goddesses. \n\nBritt had just proven exactly how profoundly and powerfully fundamental her sexuality was. I am sure that if she had done something like that in front of our aboriginal ancestors they would have run out and chiseled up an idol in her honor. \n\nSince I was the only male present, all I could do was gaze on her with total dumbstruck awe and say with wonderment, \"This incredible woman is mine!\" ",
        "Epilog\n\nEvery story deserves an ending. But I have not had one with Britt. \n\nIt has been a true joining of equals. She is a beautiful woman and the hottest fuck imaginable. \n\nBut her physical charms pale in comparison to her dedication to doing battle with whatever life throws our way, never leaving my side. \n\nWe have experienced many events in our life. But there is only one person who has undergone ALL of them with me and that is her. \n\nThe real reward of our marriage has been in the intimate sharing of those moments. We have undergone both trials and rewards - always side-by-side. \n\nWe are like arctic oxen in the face of any adversary standing back to back with horns steadfastly pointed out. Each safeguarding the other's back from the wolves. \n\nThe sheer luck of meeting and marrying this woman, who I still consider to be miles above me, is a once in a lifetime happenstance. But I suppose that's the lesson. \n\nThe truth is that your life is no more significant, or meaningful, than the sum of the people who are part of it. That was the fact that I kept missing in all of my philosophizing at the Stade de France. \n\nIn reality, the mass of us just muddle along. There is no script. And we never know from minute to minute when some random person, or an event, will come along and redefine everything. \n\nSimilarly, success entails nothing more than recognizing the significance of a thing when it appears. And then boldly acting on that knowledge. \n\nThat was the case with Britt and me. \n\nWe weren't certain where the momentous events in Monte Carlo would lead. But we DID recognize that each was important to the other. And we took the steps necessary to cement our connection. \n\nThen we worked very hard over all of the years to make that connection a lasting one.\n\nI have led a happy life to my 50th year. In that time Brett and Cohn have been married to each other TWICE. I now hear that they have decided on an \"open\" marriage. Like I said, they deserve each other. \n\nGorton and Campbell disappeared back to the States. I wished both of those old airborne troopers well. \n\nI heard nothing further about daddy after the divorce. But I am sure that Karma would eventually even the score with him. It always does with people like that. \n\nRomero has been the World's Champion of F1 twice and he has also won Indi. I wished him well too. \n\nThe fact is that I won the REAL prize. \n\nWe have been married for almost sixteen years. And in my eyes my wife is as fresh and lovely as the day we met in Monte Carlo. \n\nBut now, she shares the love of my life with my beautiful Brooke. You're right, we continued the alliteration theme. \n\nBrookey has been my pride and joy and partner in crime since her birth. Her beauty and intelligence match her mother's even if she is only 14.\n\nWe were living on the part of the estate that Britt's father gave us as a living trust. Their inheritance taxes are ferocious. \n\nI had our house built to blend with the Earl's castle, or whatever you call something with close to 30 bedrooms. The main difference is that our heating and plumbing is four hundred years more modern. \n\nI am not outdoorsy but it is interesting to look out over 200 acres of your own land. And both my girls love to ride. So they have plenty of space to do \"horsey\" things. \n\nBrookey is in the UK's Excel Talent Programme, which is the development program for potential young Olympians. She rides a chestnut that looks so well-bred and regal that its former job must have been leading the Charge of the Light Brigade. \n\nAnd fourteen year old Brooke rides the thing with the same steady poise as Lord Cardigan himself. \n\nLike a lot of the British nobility, Britt is an expert horsewoman. It is one of the many things that she does better than mere mortals like me. \n\nShe rides a coal black stallion. It is so big and ferocious looking that the Headless Horseman ought to be galloping after Ichabod Crane on it. \n\nNonetheless, my wife handles that scary beast like she does everything else in her life, firmly, gently and gracefully. And it responds to her like an eager little puppy dog. Even though I swear I have seen it occasionally snort fire. \n\nWatching Britt's big round buns in tight riding pants almost makes me want to risk my life mounting one of those creatures, the horse that is. \n\nMore pertinently I had one last curtain call with the woman who made my life possible. I'd like to tell you about that.\n\nBritt's father has a world-class collection of French Impressionists, which he was talked into lending to the folks at the Corcoran. Britt and I went over with the collection. \n\nBritt was there to represent her father the Earl. And I went along because I love her and didn't want to spend any time away from her. \n\nI had sold the condo long ago, back when I retired to my life as an English Squire. So we were staying at the Madison over on 15th while we were in DC.\n\nI was standing around at the dreadful pre-opening showing that places like the Corcoran always throw the night before in order to keep the wealthy donors feeling pampered. \n\nAs the Earl's daughter Britt was off doing her noblesse-oblige thing. \n\nI was in the back corner huddled with the most beautiful girl in the room. She was wearing a far too adult deep blue cocktail dress and four inch heels, with her hair done up like a grown woman. \n\nShe could have easily passed for a college student.\n\nI was holding a glass of scotch rocks and she was holding something involving strawberries and lemonade.\n\nBrookey has her mother's absolutely perfect face on a fourteen year old body, which is also beginning to look far too much like her mother's for her daddy's peace of mind. \n\nMy protective attitude toward my little girl is something that my wife considers hilariously endearing. But now that Brookey is blossoming into an even more stunning replica of Britt I have been kicking around thoughts of a cloister on a remote island. \n\nOn the other hand, Brooke also has her mother's exceptional intelligence and sense of self. So I guess I will have to be content with knowing that she will navigate the waters of young womanhood just as adeptly as her mother did. \n\nAnd she will always have her eminently sensible mother to fall back on if she ever needs advice. \n\nBrooke must be the only teen on the planet who thinks that her parents are cool. I chalk that up to Britt's stern but loving parenting and the fact that Brookey and I BOTH regularly get into trouble with Britt for whatever criminal misadventure we've just pulled off. \n\nMy role is to teach her to be self-sufficient and brave.\n\nWe were standing in front of a Degas. Brooke was chatting very seriously and knowledgably about the brush work. \n\nI looked over toward Britt. That's when I noticed that Shithead and Janet had \"entered the building\". \n\nAs major donors, the Corcoran people walked them over to pay homage to the Earl's daughter. \n\nI thought to myself, \"Of course!! The she-beast and her mate could ALWAYS be counted on to appear at a stuck-up event like this one!\" \n\nI thought that Janet was actually going to curtsy to Britt when she was presented. The look on Shithead's face was more along the lines of carnal lust. \n\nIt was obvious that he had a widely roving eye. \n\nAs they were being introduced Britt shot me a glance. She had caught the name. I nodded. \n\nShe went into full aristocracy mode. It was an uncanny transformation. My smart, funny, down-to-earth wife could have given the FIRST Queen Elizabeth lessons in class superiority and imperial bearing. The words \"royal\" and \"aloof\" come to mind. \n\nThe three of them talked for a couple of minutes. Janet was looking both awed and star-struck. While Shithead was trying to look down the front of Britt's little black dress. I had to admit that those two big mounds were spectacular, even with just a modest scoop and pearls.\n\nThen Britt turned with the two of them and led them across the room toward Brookey and me. They looked mystified. \n\nThe years had NOT been kind to Janet. She appeared older than her actual age. And she had the haunted, nervous mannerisms of somebody whose husband constantly fucks around on her. \n\nMeantime Shithead was in all-out seduction mode with Britt.\n\nThey both looked absolutely stupefied when they got close enough to notice who Britt was walking them toward. It was as if I had sprung up from the floor like the Devil himself. \n\nJanet said with profound condescension dripping off her voice, \"Why Jake, what are you doing at an event like this? This is not your type of crowd.\"\n\nShithead looked at me like I was something that he had just stepped in and said, \"Yes, this is a little too cultured for you isn't it? Don't you feel a bit out of place?\"\n\nI said cheerily, \"And greetings to you two. It HAS been a long time hasn't it?\" \n\nWhat a difference sixteen years and a good woman can make.\n\nI said, \"You're right though. These kind of events really bore me. I am just here to support my wife.\" \n\nJanet said with faintly jaded interest, \"Oh, is your wife on the Committee that is putting this event on?\"\n\nI said, \"Not exactly.\" \n\nTheir faces both went back to looking like they couldn't understand why Britt had walked them over to talk to a nonentity like me.\n\nI added, \"I mainly came here to introduce my daughter Brooke to Washington society.\"\n\nThey both turned to Brookey who was standing next to me regarding both of them with a frosty glare that might have been slightly haughtier than one that Henry the Eighth gave to an ex-wife.\n\nThey said simultaneously, and with complete astonishment, \"She's your daughter?\" \n\nI had to admit that Brookey was a spectacularly beautiful young woman. In her adult dress and heels and with her developing body she probably looked 25. \n\nI said, \"Yes, meet The Lady Brooke Ashley-Barnes.\"\n\nYou could see them doing the math. Then Janet turned toward Britt and said with total incredulity, \"Jake's your husband?\"\n\nI said smiling, \"For the past 16 wonderful years.\"\n\nBritt moved next to Brookey and me, she took my hand lovingly and said, \"Jake and I met in Monte Carlo and I have adored him since the minute I saw him. \n\n\"We live on the estate in Gloucestershire but we still work part time at GCHQ in Cheltenham. Our daughter boards at Dean Close there.\"\n\nBrookey, who clearly hadn't appreciated the way Janet and Shithead had treated me, said in her plummiest upper class drawl, curled lip and all, \"Yesssss only the BEST people prep there. Common people like you wouldn't qualify.\" \n\nI got what she was doing. Brooke normally sounds like her mother, not Princess Di. \n\nBoth Janet and Shithead looked utterly stupefied. \n\nI had to rub it in. \n\nI turned to the treacherous bitch. And with all of the fake sincerity I could muster I said. \"You were right Janet. I would never have had this wonderful life if it weren't for you. So thank you from the bottom of my heart.\"\n\nJanet got it. She was always very smart. She hated it. But she got it. \n\nThen I turned toward the two most beautiful women in the world and said, \"We've done our duty here. Don't you think it's time to leave??\"\n\nBritt flashed that thousand watt smile at me and said in a deep Belgravia accent, \"Certainly my dear. Being around all of these stuffy pretentious little people is dreadfully boring.\" \n\nThe subtext was clear. Shithead and his mate had been dismissed.\n\nThe two loves of my life each took an arm and we turned to go. But not before I copped one last look at Janet. \n\nShe was glaring despairingly at Shithead, who was covetously staring at Britt's ass. Janet's look of complete loathing and contempt was priceless. \n\nI thought to myself, George Herbert got it right. Living well really IS the best revenge."
    ],
    "authorname": "dtiverson",
    "tags": [
        "betrayal",
        "redemption",
        "revenge",
        "slut"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-sun-also-rises"
}