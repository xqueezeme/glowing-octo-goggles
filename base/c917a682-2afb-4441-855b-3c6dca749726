{
    "title": "Our Little Secret Ch. 06",
    "pages": [
        "Chapter 6 \u2013 Distant Storms\n\n \"You're looking great,\" Joel complimented. He was enjoying breakfast on Tuesday morning with Melissa Ferry, the flight attendant he resuscitated on the catnap flight. They were seated in a crowded restaurant at the Boston Hilton Airport hotel. \n\n \"Thanks,\" she smiled. \"Thankfully, the scar isn't that noticeable,\" she felt the upper left portion of her forehead, where the stitches had gone in. It was the first time they had met since the press conference. \"I hear you're flying all the time,\" she offered. \n\n \"What?\" Joel asked. \"You're keeping track of me?\"\n\n \"No,\" she smiled, \"nothing like that. You're a bit of a celebrity among American flight attendants. Every time you're on a flight, someone posts it to our private Facebook group.\" \n\n They chatted about that famous catnap flight and their experiences since. Except for a nearly invisible scar, Melissa reported she had no lingering aftereffects of her injuries. She took the three weeks off to look at school programs. Melissa had never gone to college, and she was wondering about going back to school. At twenty nine, she wasn't a kid anymore, but she still had time to pursue a new career. She was thinking about a hospitality or business diploma. \n\n On the Sunday earlier, Joel flew with Jenny to DC, which was an event in itself. Jenny was expecting to drive, and she made a scene in the restaurant on Saturday night when Joel announced they would be flying to DC. Jenny protested it was too much \u2013 he was already doing enough for her. She wanted him to turn the tickets in, which of course he couldn't do. \n\n They were dining at a downtown Boston restaurant with an out-of-town friend of Jenny's, Victoria, who chimed in and told Jenny to relax. \"Let Joel spring for the flight,\" Victoria opined, \"it's not as though you have to fuck him for it.\" Jenny didn't appreciate Victoria's crass remark. First it was vulgar, which Jenny didn't care for, and second it cut a chord too close to home.\n\n \"Look, Jenny,\" Joel offered, \"it's safer than driving, it's more comfortable, and you will arrive feeling more energized.\"\n\n \"I don't know about being more comfortable,\" Jenny protested. \"They pack you in pretty tight.\" Joel didn't mention she would fly business class \u2013 he wanted to keep that a surprise. Eventually Jenny yielded under the weight of Victoria's and Joel's persuasions. \n\n Joel picked Jenny up at her home on Sunday after he retrieved his mail from his old apartment. Valerie looked sad, but then again Joel had never known her to be happy. Val asked how he was doing \u2013 he said fine without sharing details. He realized how much of a drain she had been in his life energy \u2013 what a mistake it was marrying her in the first place. Then again, Joel was a much different person when he met Val. Back then, he thought of Val as a catch \u2013 or if not a catch, at least she was better than nothing \u2013 hardly a couple made in heaven.\n\n At the airport on Sunday afternoon, Jenny was already fidgety, but then she was outright shocked to learn Joel had purchased business class tickets. Jenny flat out refused at Joel spending so much money on her. It was bad enough her first night with Joel spun horribly out of control and ended with her fucking and then sexting him. Now Jenny was sliding down a slippery slope of indebtedness to Joel, and she felt herself losing grip on the relationship again.\n\n Joel insisted it cost him nothing extra \u2013 he always flies this way, thanks to the president of American Airlines. Jenny would not consider it until the American Airlines check-in agent showed Jenny the upgrade allowance, and attested Joel did not actually pay the business class fare. In fact, she commented, Joel managed to get the cheapest fare possible on this flight. \n\n \"Jenny,\" Joel said, \"you know I have the money for cheap tickets. I'm doing this because, frankly, I didn't want to drive all that way. And I want you to know I expect nothing in return from you, except for you to attend this conference, get a better job, and have a happy life.\" Jenny saw the check-in agent give Joel one of those sad puppy dog faces. With no options other than walking away and booking her own economy class ticket, Jenny relented. \n\n Once she agreed to fly business class, Jenny realized she had never flown business class before, and was intrigued to see how the jet set travelled. She had never been in a business class departure lounge, and Jenny worried she would be arrested for shoplifting pretzels each time she took another handful from the complimentary bar. She was especially tickled by the luxurious seats at the front of the plane, not to mention the lavish attention the flight attendants fawned all over Joel, and thus upon Jenny by association. Maybe this isn't so bad after all. Once they reached level flight, Jenny relaxed as the uneventful flight took its course.\n\n Joel accepted that Jenny did not want to feel beholden to him. Given their raucous first date, he understood why Jenny needed to feel in control of their relationship. Or maybe she was just a prude. Perhaps this is how all her relationships went \u2013 slow and steady until they fizzled out from hypoxia. Joel smiled at the irony. He just might be the one for Jenny. He was perfectly happy to let her set the slow pace. He didn't need to rush the relationship when he could get sizzling sex anytime, anywhere, from anyone else. Meanwhile, Joel grew fonder of Jenny's genuine warmth and passion for life.\n\n As they flew to DC, Joel's thoughts dwelled on Jenny. He was really beginning to like her, but he knew they lived incompatible lives. Eventually, the truth about the catnap men would come out, and Jenny would reflect upon their first date, and confront Joel. Even before that, there was a risk their relationship could collapse if Jenny found out about all the other girls. The irony was not lost on Joel. The one thing that let him be caring and attentive to Jenny was the one thing that could ruin them. \n\n How long could he keep Jenny in the dark about his other life? Joel was certain it was a matter of when, not if. How badly will it hurt Jenny when the truth breaks? Would she ever speak to him again? It probably would not happen today, so he could start worrying about it tomorrow. That's what Joel told started telling himself about Jenny. Not today.\n\n Joel took an Uber taxi to the conference hotel with Jenny, over her protests. He said he promised to take her to the conference, so he was taking her all the way to the conference. She felt his efforts were excessive \u2013 he had already done too much with the business class tickets. At the same time, Jenny was tickled by his old fashioned chivalry. She liked that in Joel. \n\n They said their goodbyes in the hotel lobby. Joel wished her good luck, and he promised he would check in with her on Wednesday, and they went their separate ways.\n\n While Jenny settled into her hotel room, Joel acted on his ulterior motive for accompanying her to the hotel. He had researched the HR conference online, and found it was chaired by a woman called Susan Wenderson. \n\n Joel commanded a young woman at reception to tell him which room Susan Wenderson was staying in. Against strict policies, the clerk told Joel Ms. Wenderson was in room 2102, which was on the second floor of the sprawling, low-rise hotel. He found room 2102, which took fifteen minutes of searching and a mile of walking. He knocked on the door, and was not surprised to find Susan was not in. \n\n Joel found the main conference room where hotel kitchen staff were setting up round dining tables, and he asked several women if they knew Susan Wenderson. One finally said yes, and Joel commanded her to introduce Susan to him. He followed the woman to a much smaller conference room where Susan was meeting with her organizing committee, applying the finishing touches to the upcoming conference. \n\n Susan stepped out of the meeting when interrupted, and met Joel in the hallway. \n\n \"Hi,\" Joel smiled, \"I'm Joel,\" and he extended his hand. \n\n Susan shook his hand politely, but not warmly. \"How can I help you, Joel?\"\n\n \"You have an attendee named Jenny Riverton from Quinton Systems in Boston,\" Joel commanded her, keeping his voice low so her compatriots in the meeting room could not overhear his command. \"Seek Jenny Riverton out, get to know her, become her friend, take her under your wing, and introduce her to important people, and speak well of her. Be professional about it \u2013 don't go overboard, but make sure the she meets the right people, and speak well of Jenny,\" Joel repeated. \"Open doors to companies who might want to hire her.\"\n\n Susan returned to her meeting without a word. Joel wished there was some acknowledgement signal, but they all just silently went on their way. Jenny, of course, would never know any of this.\n\n Returning to Tuesday morning over breakfast at the Boston Hilton, Melissa was describing how Joel was featured prominently on the private Facebook group for American Airline flight attendants. His picture was there, and people reported sightings of him every time they saw him, not just on airplanes. That explained why the flight attendants always smiled at him, and were so kind. Why, just on Sunday, Melissa explained, Joel was sighted on a flight from Boston to DC travelling with a very cute companion, and Monday back to Boston alone. \n\n Joel found it disquieting there was an underground network of flight attendants tracking his every move. Clearly this presidential upgrade card came with some unintended consequences. He realized that could be both a blessing and a curse \u2013 he could use it to his advantage. \n\n Joel and Melissa returned to talking about life after the catnap flight. Joel explained he was not in a hurry to find a new job after an excellent payout package from his former employer. \"It didn't hurt that Paul called me a hero at that press conference,\" Joel mused. \"It made my boss look even worse than he did.\" \n\n Joel changed subjects. \"Hey, did you hear about that flight attendant who stood up and announced ...\"\n\n \"Jane Parsons,\" Melissa nodded, interrupting. \"Stress.\"\n\n \"Is that what you think it is?\" Joel asked. \"Stress?\"\n\n \"This job can really get to you,\" Melissa said. \"Half the guys think you're some cock tease, the other half just ignore you. Meanwhile your real job is safety.\" \n\n \"Have you noticed anything different since the catnap flight?\" Joel asked. \"Are you coping okay?\" he added, deflecting her suspicion away from his true purpose of asking.\n\n \"Yeah,\" she shrugged \"I'm fine. Back to normal.\" She paused. \"Why do you ask?\"\n\n \"I'm just checking in \u2013 seeing how you're doing after your head injury.\"\n\n \"That's sweet,\" she smiled. \"No, I'm fine.\" She checked her watch. \"I should get going.\"\n\n Joel paid for his meal. Hers was covered by the airline. \"Thanks for getting in touch,\" Melissa said. \"It's good to see you.\"\n\n \"You too,\" he said and followed her out the restaurant. \n\n Joel got an idea just as they were walking out. Melissa was in front of him, going through the door. \"Bunny hop\" he commanded her. \n\n Melissa turned around. \"What?\" she asked with a troubled look. \n\n \"Uh ... Bunny Hop,\" he said. \"Have you seen that movie?\"\n\n \"Never heard of it,\" she frowned. \n\n \"Yeah,\" he looked away, \"it's not a major release \u2013 might be direct to video.\" He paused. \"Anyway, it was great to see you again,\" he smiled at her.\n\n \"You too,\" she smiled, and they hugged. \n\n \"How's Anna?\" he asked nonchalantly, trying to hide his piqued interest. \n\n \"She's fine,\" Melissa nodded. \"See you later.\" Either Anna never told Melissa about the blowjob, as Joel commanded, or Melissa didn't care. Melissa didn't come across as the kind of person who would ignore something like that. Joel was wondering how long a command lasts.\n\n Joel watched Melissa walk toward the elevators. He realized she heard the bunny hop command, but was not affected by it. He was thinking about Richmond, waiting for the car to go to the press conference. He told Melissa to kiss him in front of all those cameras. She said something like not likely. Joel had a theory. Catnap women are not susceptible to catnap men. \n\n He returned his thoughts to his to-do list. Joel's fast track application at Boston University Employment Center was considerably faster than even record time, thanks to the extraordinarily helpful woman at the counter. Already Joel had received forty applicants overnight. He eliminated anyone with men's or androgynous names, and filtered through the rest based on skillsets. On Monday he weeded out the ones that didn't sound perfect, leaving him with four interviews on Tuesday afternoon, which he scheduled in a spare office next to Autumn Crawley's corner office. He looked at his cell phone \u2013 it was 10:15. The first interview was at eleven o'clock. He had to hurry. \n\n Joel's first interview appointment was waiting for him when he arrived just at eleven. He was pretty sure he wasn't going to hire her just by looking at her. She looked skinny and brittle \u2013 like she might snap in stiff breeze. Her name was Abigail, but she went by Abby. Looks can be deceiving, Joel realized, because once she started talking, she seemed bright, resourceful, and persuasive. \n\n He explained to Abby he was starting up a market research firm, and he needed someone to run the office. It would not be a glorified job, he warned. It meant keeping the office stocked with supplies, setting up the filing system, tracking attendance, assigning offices, scheduling tech support and cleaners, setting office policies, writing weekly reports, and so on. It was more of a mother hen to the other employees, but she would also hold the hammer if people got out of line. Abby admitted she was looking for a higher calibre job than what Joel described, and was not certain it was a good fit. Joel liked her honesty.\n\n After Abby was Brooke \u2013 dark hair, dark eyes, slightly larger boned. She looked like she could have played linebacker for a girl's football team, but she spoke quietly with a demure tone. She lacked confidence, and seemed to second guess her own words. Joel cut the interview off after ten minutes, knowing she was not suitable. \n\n The next interviewee was a no-show, which left Sylvie Morrison at 12:30, a tall, slim redhead with green eyes. Joel would not exactly describe her as pretty; maybe handsome was more applicable. She was quiet but confident. He was near the end of the interview, and undecided about Sylvie, when Joel asked what was the most amazing thing she ever did. Sylvie she said when she was fifteen, she rescued a dog from drowning. It was tethered to a spike in a field in Texas, near where she grew up. A flash flood had swamped the land. The dog was confined to a depression \u2013 sort of a bowl \u2013 in an open field, and it was filling up with water. The tethered dog could not escape. While everyone else stood around and watched, she waded into the cold water. She explained to Joel the long leash was looped through the dog's collar, with both ends clasped at the stake in the ground, so she couldn't simply undo the leash at the dog's collar. She dove underwater, undid both clasps from the stake, and brought the dog to safety, and took it home. \n\n When the owner came to her parents' house, where Sylvie lived, to claim the dog, Sylvie refused to release it, and said she would take it to the pound before giving it back to him. He punched her, knocking her down and took the dog. Two weeks later, Sylvie said, she stole the dog one night, and gave it to a caring family in another town who knew the story. Sylvie still receives emails from the family telling her the dog is now very old, but doing well. \n\n Joel commanded her \"tell me, is that a true story?\"\n\n \"Every word,\" she answered. \n\n Joel hired her on the spot. He commanded her to be loyal, hardworking, trustworthy, and honest. Her first job was to hire three researchers. He wanted people who knew how to conduct a methodical and invasive online research \u2013 how to find out everything there was to find out about someone. She should narrow the field down to six strong candidates, and then go over the short list with Joel, and they would interview the finalists together. Sylvie beamed with pride at being assigned such an important task right off the bat. Joel commanded her to only select women.\n\n Sylvie also had to buy computers for the employees, and find a company to come in and install the network and Internet connections. She should stock the fridge with healthy snacks, get a coffee maker and a tea kettle, and everything in between. Go to Autumn for all the money. \n\n Joel had arranged to funnel Mary-Ellen Zwicker's two million dollars from Miami through Autumn Crawley's accounting firm. Legally, she was the one renting the extra office space, and she owned and operated the business. Everything was legal and above board. Autumn handled all the tax filings, and she would oversee the payroll. She said she might need an assistant, given the extra work load, and Joel told her to talk to Sylvie, who would help her with that.  \n\n This arrangement allowed Joel to operate under the radar. Legally, he was still unemployed, and he was not in charge of anything. If it all went to hell, Autumn Crawley was the one responsible for everything. Even the checks from Vivian Zwicker, which were once blank, were now made out to Autumn Crawley's company, and Autumn was under Joel's command. Joel's fingerprints were nowhere on this enterprise, but he ran everything. \n\n Joel decided he needed an alternate persona. One day he would make a mistake, or someone he hadn't commanded would remember something about him. So on Wednesday morning, he rented a post office box at a nearby shipping and supplies store. Then he drove to the DMV, and charmed a middle aged lady behind the counter to break all the rules and approve his application for a driver's license in the name of Douglas Eves from Pittsfield Massachusetts. Then she configured that all mail should go to his new post office box. Back in his day, Joel received a temporary driver's license at the DMV office, and a permanent one was mailed to him. Thanks to modern technology, Douglas Eves received his official driver's license card with his embedded picture right there in the office. Eventually Douglas Eves would obtain a credit card and a social security number, thanks to the female dominated bureaucracies. Joel became the proverbial Dr. Jekyll to people like Jenny, and when he was commanding women, he was Mr. Hyde, A.K.A. Douglas Eves. \n\n Jenny's HR conference was scheduled to end on Thursday noon. Joel decided to fly back to DC Wednesday afternoon, and stay overnight, and then meet Jenny, and fly back with her on Thursday evening. He booked the travel arrangements through his presidential card.\n\n When he landed in DC just past six on Wednesday evening, Joel comped a room at the Dulles Marriott for two nights, just in case. He texted Jenny. How is the conference? What time should I meet you tomorrow?\n\n Her reply took five minutes, probably just to type it all in. \n\n OMG Joel!!!! It is fantastic. You won't believe where I am right now! I am at Senator Barrymore's residence from Kansas. Hundreds of people are here. I bought a $400 dress, and I am so underdressed I feel like I am in my PJs. The VP of Google came over and introduced himself, and he said he wants to talk to me later!!!!!! I have 3 job interviews!!!!!!! I am so sore from pinching myself, but I haven't woken up yet. Joel, when you are right, you are most certainly right. \u2013 J \n\n\n\nJoel smiled. Well done, Susan Wenderson. You hit that one out of the park. \n\n Joel decided to celebrate. Actually, Douglas Eves was going to do all the celebrating. He pulled up his maps app and looked for music clubs. He was researching options when another text came in from Jenny. There is nothing important going on tomorrow, so I am not going to the conference. Come by the Senator Res and pick me up tonight at 11. She included the address. ",
        "Joel decided Mr. Hyde would have to wait to another night, because Dr. Jekyll just might get lucky tonight. Joel decided to rent a car \u2013 showing up at a senator's residence in Uber just didn't sound right. He phoned the airport car rental companies, and found a Lexus for $150 per day. That would do. They offered to deliver it to his hotel, which sounded fine. He met the car rental clerk in the hotel lobby, and signed all the papers and handed him his Joel Winkman credit card, because Douglas Eves didn't have one yet. \n\n Joel went to the bar. There was a Mets / Giants game on the big screen. Giants were ahead 3-0 in the fifth inning. Joel had a beer while he played some video games on his phone to kill time. The Mets never mounted a comeback, and Joel left when the game ended at ten o'clock. He took the elevator up to his room, and pocketed his little travel kit, hoping for the best tonight. He found the Lexus in the hotel parking lot using the FOB to make the door lock beeping noise. Joel programmed the Senator's address into the GPS. It said it would take twenty-five minutes to get there. He counted on thirty-five, which meant he would still be early if he left right then. Might as well wait there, he figured, and pulled the Lexus out of the parking spot. \n\n He arrived at a quarter to eleven. Security was tight, and he couldn't get close to the mansion. An armed guard asked his business. Joel explained he was picking someone up at eleven \u2013 Jenny Riverton. The guard radioed to his operations center, who confirmed Jenny was on the invite list, and that allowed Joel to drive forward to the next checkpoint, where he was challenged again, and this time told to park along a side road, and walk to the residence. \n\n All in all, it was a good thing he arrived fifteen minutes early, because it was nearly eleven by the time he walked up to the front door, after parking the car and then being wanded and searched. Jenny was waiting outside the front door at the top of the stairs with someone. They were talking. She saw Joel approach and smiled. \"Here he is now,\" she said to her companion. \n\n Jenny was wearing a gorgeous knee-length royal blue chiffon dress with a blue neck strap. It had a matching fabric belt with an off-center bow in the front. The layered fabrics fluttered in the gentle breeze, causing the dress to flare at the bottom slightly. \n\n \"Joel,\" Jenny called as he climbed the twenty foot wide exterior steps to the house, \"this is Don McLean, Don, Joel Winkman,\" she gestured back and forth. \n\n \"Miss American Pie,\" Joel extended his hand with a smile.\n\n Don shook it firmly. \"I'm more predisposed to Vincent, myself,\" he smiled back. \n\n Joel looked high over his head as he took his hand back. \"Starry starry night it is,\" he said, catching one or two stars in the urban sky. Jenny looked back and forth between the two men with confused annoyance. It was obviously a private joke, and yet they only just met.\n\n \"Uh, anyway,\" Jenny shook her head, \"Don is from Google.\"\n\n \"I wish I had your maps to get here,\" Joel complained. \"Whatever is in my car doesn't know left from right.\"\n\n \"Ah,\" Don nodded knowingly. \"Apple.\" Both men laughed while Jenny looked more annoyed and confused. \"What do you do, Joel?\"\n\n \"I'm a private investor,\" Joel answered without hesitation. Jenny's face switched from confused to surprised. \n\n \"Stocks, bonds, mutuals?\"\n\n \"No,\" Joel shook his head. \"I track individual firms, evaluate them, and if I like them, I invest other people's money in them. My own too, of course. It keeps me honest.\"\n\n \"We should talk,\" Don said. \"Do you have a card?\" \n\n \"Sorry,\" Joel held out his palms, \"I'm just the chauffer tonight.\"\n\n \"Here's mine,\" Don offered his card. \"Send me an email with your coordinates, and we'll set something up.\" Jenny beamed with sympathetic excitement. \n\n \"Will do,\" Joel nodded. When I get an email address, that is. \"You're in Mountain View?\" he asked without looking at the card.\n\n \"Yeah,\" Don nodded. \"Jenny's coming down for a talk,\" and then he turned to her, \"or at least I hope you are.\"\n\n \"Oh, yes!\" Jenny assured with too much exuberance. \n\n \"Come with her,\" Don offered to Joel. \n\n \"We'll work something out,\" Joel offered noncommittally. \n\n \"Jenny,\" Don extended her hand to her, \"it was a delight to meet you, and I hope to see you soon.\"\n\n \"Likewise,\" Jenny smiled. \"See you soon.\"\n\n \"Good to meet you, Joel,\" Don held out his hand. \"I saw you on the news about that plane. You kicked a few journalists' ass. Nice touch. I wish we could do that.\"\n\n \"That's exactly what American Airlines said,\" Joel smiled, which wasn't quite true. Lisa Buchannon said she nearly peed her pants when she heard Joel say the things he did. Joel was surprised at Don's remark, because no news clips he ever saw revealed Joel's pointed exchange with any of the journalists. Then again, Don's from Google. If it exists, he can find it. \"It was great meeting you, Don\" Joel offered. \"I'll be in touch.\" Joel and Jenny walked down the front steps. When they reached the bottom, Jenny took his hand and squeezed it hard. \n\n She walked with poise and composure as they walked off the grounds and approached his car under the watchful eye of over a dozen armed guards. \"This yours?\" she asked, pointing at the Lexus as he stepped toward to it.\n\n \"Yeah,\" Joel shrugged. \"The Lamborghini's in the shop.\"\n\n She pulled back on Joel's hand, forcing him to stop walking, and then Jenny turned into him. She put her hand behind his neck, pulled him close, closed her eyes, and kissed Joel hard on the lips for a long time. \"Thank you for making me do this,\" she said whispered as she pulled away. \"Now take me to my hotel where I can thank you properly.\" Boing!\n\n In the car Jenny buzzed excitedly about the conference. For some reason, Jenny bubbled, the conference chair, Susan Wenderson, introduced herself and told Jenny there was a vacancy at her table for the reception dinner on Sunday night, and would Jenny like to join them. At first Jenny wasn't sure, but she thought she had nothing to lose, and before Jenny knew it, Susan was introducing Jenny to heavy hitters \u2013 vice presidents, directors, presidents of companies like Microsoft, Amazon, JPMorgan Chase, Exxon, and General Motors \u2013 all the while singing Jenny's praises. \n\n She attended several informative seminars and sessions during the days. Late Monday afternoon, Susan invited Jenny to skip the prepaid dinner, and join her instead at the President's Council dinner \u2013 an invitation only affair for CEOs and presidents. Jenny felt like she was crashing a Hollywood wedding, but Susan kept introducing her to every president and CEO in the room, every one of which Susan knew on a first name basis. On Tuesday night Susan invited Jenny to attend the Adobe reception, also attended mostly by executives, and also by invitation only. And of course Jenny attended the Senator's private reception on Wednesday, where she met Don McLean, who invited her to a Google interview. It was her fourth interview request. \n\n Jenny chattered excitedly for the twenty minute ride to her hotel. She continued her monolog in the elevator, the hallway, and into the room after she unlocked the door. \"I really have to pee,\" she interrupted her own soliloquy, and squirreled into the bathroom behind the locked door. \n\n Joel waited in her hotel room for at least five minutes. He picked up the hotel information booklet and started leafing through, half out of boredom, the other half in anxious anticipation. Finally the bathroom door opened, and Jenny stepped out still wearing her dress, but her shoes were off. Something else was different, but Joel couldn't place it. \n\n She walked up to Joel silently. \"I've been babbling about me, and I didn't ask how your week was,\" she asked. \n\n \"Actually,\" Joel said, \"I had to go back to Boston. Some things came up. I just came back today.\"\n\n \"Why?\" she asked with a tone of judgemental surprise.\n\n \"Well, I had a meeting in Boston I couldn't miss, and ...\"\n\n \"No,\" Jenny interrupted. \"Why did you come back? I could have flown back alone.\"\n\n \"Well, it just seemed wrong leaving you here without saying anything, so I came back.\" \n\n \"I'm not sure if I should be flattered or worried,\" she offered neutrally. \n\n \"Why would you be worried?\"\n\n \"I don't know ... it seems odd behavior to come back just to take me back home when I'm a perfectly capable person.\"\n\n \"I've never pretended to be normal,\" Joel pointed out.\n\n \"No,\" she smiled warmly, \"you certainly aren't that.\" She leaned forward, closed her eyes, and kissed him. He wrapped his arms around the puffy shells of her blue chiffon dress, and crushed them into Jenny's body as Joel embraced her tightly. Jenny moaned as she felt his arms take hold of her, and she ran her fingers through his hair. \n\n Joel started rubbing his hand along her back, and accidentally tripped over the pull tab of her zipper at the top of her dress, and decided now or never. Joel pulled it down slowly, and Jenny moaned again as she continued kissing him. When her zipper was all the way down, Joel slipped his hand inside the back of her dress, and lovingly caressed her bare back. Jenny now started planting delicate kisses down his neck, and unbuttoned his shirt, kissing his bare chest each time another button surrendered to her charms. \n\n Joel slipped his hand down her back, inside her dress, and was surprised to feel her bare ass beneath the dress, and then he realized what was different. Jenny was wearing stockings, or probably panty hose before, and after she came out of the bathroom, they and her underpants were gone. He cupped her bare ass in his hand, and Jenny opened his unbuttoned shirt wide, kissing both his nipples. \n\n Jenny stepped back, and Joel let his hands slip out from the back of her dress. She lifted the entire dress upwards along her body, high enough to slip the neck strap over her head to the front, and then Jenny let the dress fall to the floor, and just like that, she was stark naked with her lovely breasts and full dark bush. \n\n Her thick nipples were rigid. Joel leaned down and kissed them softly, and Jenny leaned her head back with another moan of delight. He delicately kissed her breasts all over, and Jenny reached both her hands down to his pants and unbuckled his belt. Then she unzipped his fly. The naked Jenny squatted down, pulled his pants to his knees, followed by his shorts, letting his rock solid cock spring toward her face. Jenny planted soft kisses down one side of his cock, and then the other. \n\n \"Take your shoes off,\" she whispered, and Joel stepped toe-to-heel to remove one shoe, and then the other. Jenny pulled his pants and underpants down to his ankles, and he stepped out of them one at a time while she pulled them off his legs, and pulled his socks off too. When Joel was naked, Jenny returned her attention to his long, hard cock, and she rubbed her left cheek down one side of his cock, and her right cheek down the other side. \n\n He thought she was going to rub the first cheek again, but suddenly she opened her mouth, and took Joel in, and this time it was Joel's turn to close his eyes, let his head fall back, and moan with delightful anticipation. She sucked on his firm cock while he ran his fingers through her soft hair. \n\n She pulled out and looked up at Joel. \"Do you have any condoms?\" she whispered. \n\n Silently, he lifted his pants off the floor, and pulled out a string of four condoms from his pocket. \"I'm pretty sure this is crossing the line into hanky panky,\" smiled Joel, holding his string of condoms. He was referring to the promise he made on the night he had spaghetti dinner at her place. \n\n She looked at him holding the condoms. \"Only four?\" she raised her eyebrows with mock disappointment. Joel smiled, and tore one pack open, and pulled out the rubber. \"Let me,\" she whispered, and took the prophylactic from him. \n\n With the condom still in her hand, Jenny took him in her mouth again, and sucked him hard for half a minute. She pulled out, pinched the condom at the reservoir tip, placed it at the end of his eight inch love machine, and rolled the condom to the base. \n\n She told Joel to lie on the bed, and she climbed on top. Jenny positioned herself over his vertical spear, and slowly lowered her body, guiding his cock with one hand. When the tip of his cock pressed against her waiting pussy, Jenny lowered herself gently, and she closed her eyes with delirious pleasure as she let Joel inside. \n\n Jenny started rocking, making circular motions with her hips. Joel reached up and played with her swaying tits as Jenny settled into an unhurried love making rhythm. \n\n After a minute of slow fucking, Jenny sped up, and the increased tempo triggered his balls to start climbing the orgasmic ladder. Joel reached his hands around her ass, and grabbed her cheeks, and lifted her as she raised her hips, adding additional upward thrust. As Jenny increased her pace again, Joel slipped one hand toward her crack, and found her rosebud. He pressed on it without going in, and Jenny moaned loudly as she started fucking him with purpose. \n\n Joel's balls were building pressure. He watched her spectacular tits writhe and bounce over his face and he continued lifting up her ass with one finger over her anus. \"Stick it in,\" she whispered, and Joel wiggled his middle finger up her asshole. Without lube it wasn't going far \u2013 just to his first knuckle \u2013 but just that little anal penetration prompted Jenny to grunt louder instead of moaning softly. \n\n Jenny started riding him with abandon, and now Joel started moaning as he knew he was approaching the finish line. His moaning beckoned Jenny to ride him even harder. Joel's balls were about to burst, and his moaning turned into loud groans, and hearing his groans, Jenny started grunting loudly on each thrust. \n\n At last Joel's balls unloaded, and he let out a long wail as wave after wave of hot jism pumped into her sheathed pussy. Jenny cried out loud on hearing his orgasm, and continued fucking him while his orgasmic convulsions continued. When his eruptions finally subsided, Joel relaxed and dropped his hands from her ass. Jenny bent forward without dismounting his still hard cock, and she rested on top of him, gently pressing her soft breasts upon his chest. Jenny planted delicate kisses on his closed eyelids before gently resting her head beside his. They held each other tightly in post coital lover's embrace, with him still inside her. \n\n After maybe five minutes, Jenny pulled off of Joel's shrinking cock and rolled over, lying on her back beside him. He pulled off the condom, went to the bathroom, and flushed it down the toilet and washed his middle finger. She smiled at him when he returned. \"Roll over,\" he said, and she rolled onto her tummy. \n\n Joel straddled his knees over her, and sat on her ass. He leaned forward, and massaged her neck and shoulders. \"Oh that feels so good!\" she sighed as he pressed deep into her muscles. He moved down her back slowly, until he had to move off her ass, and then massage her buttocks as well. She commended him on his technique several times. \n\n He told her to roll over again, and now she was on her back with her large breasts facing up. Joel gently parted her straight legs, and began massaging over the clit, slowly and softly at first. When she realized his goal, Jenny tightened her back and leg muscles, thrusting her hips up, and Joel started massaging her pussy with greater authority. \n\n \"Oh please!\" she whispered as she felt her clit pressure rising. Joel increased the pressure over her clit and doubled the speed, and Jenny rewarded him with more encouragement. She balled her hands into tight fists as she felt herself near climax. The pale skin between her breasts grew red blotches as her breathing quickened. Jenny bent her head back, and moaned almost silently at first, and slowly the moan grew louder and louder until at last Jenny's hips rose off the bed and she bellowed out a long gusty growl as every fiber in her body clenched tight with orgasmic energy. She felt wave after wave fly out of her clitoris to her fingertips and toes. Her nose tingled and her eyes rolled back into her head, showing only white. \n\n Joel gradually slowed down his erotic massage. She finally relaxed, and he stopped his erotic massage. Joel lay next to her. She rolled into him, and kissed him lovingly on the lips while she still panted from her climax. They lay together until they grew chilled, and they both slipped under the blankets and held each other tightly under the warmth of the bed clothes. \n\n When Joel woke up in the morning, Jenny wasn't in bed. He heard noises from the bathroom. He guessed that's what woke him. He checked the clock. It was nearly nine. He realized he had a hard-on.\n\n \"Hey sunshine!\" Jenny called, coming out of the bathroom. She wore a long sleeve white pullover shirt with horizontal blue stripes. The stripes created contour lines of her large breasts beneath. \n\n She lay down in bed beside him, pulled the bed covers over her, and put her hand on his tummy. She let it drift downward, and wrapped her fingers around his morning glory. \"My!\" she cooed. \"Someone is ready for more.\"\n\n Without another word, she sat up on her knees, and hoisted her shirt up over her head, showing off her gorgeous tits. The naked Jenny dropped the shirt to the floor, and pulled the bed covers down, exposing his solid rocket booster. There was no teasing this time. She leaned over and took him into her mouth, and sucked hard while she brought her hand in to assist jerking his shaft. \n\n While Jenny was on all fours, Joel reached beneath her and fondled her hanging tits. She continued her oral duties, and quickly Joel felt the fire burning. Now he moved his hand from her tits, and slipped it down her tummy, between her legs, and landed on her pussy. She widened her legs for him, and Joel found her fuck hole, and lightly pressed his middle finger in. It slipped in easily as Jenny's own juices were already working. As he finger fucked her, Joel's balls responded. \n\n Jenny continued steadily \u2013 not too fast, not too slow \u2013 and Joel's balls slowly built up pressure. He quickened his finger fucking tempo, hoping that would prompt Jenny to hasten her rhythm, but she maintained her steady pace. The slow build-up was agonizing. It took ten minutes of Jenny's steady sucking and slow jerking before Joel felt his balls start to burst. \n\n He rolled his head back and moaned as the first salvo launched into her mouth, and Jenny continued sucking and jerking steadily, drawing the next wave out, and the ones after that. Finally Joel unloaded his last shot into her loving mouth, and Jenny pulled back and swallowed it down. She lay down beside Joel and lightly traced figure eights on his bare chest with her fingertip. \n\n After a few minutes of lightly caressing his chest, Jenny kissed Joel on his lips, then she stepped out of bed, and padded naked to the bathroom, and Joel heard the shower running. He got up, picked up his pants, and pulled out his phone. The following email from an hour earlier was waiting for him. \n\n Mr. Winkman: In reference to the charges brought against Ms. Carroll, Ms. Wilson, and Ms. Danton, as we had hoped, the DA's office does not wish a lengthy trial for such relatively minor charges. We were successful in convincing the DA it was an all-or-nothing proposition, and they clearly understood that, thanks to your financial backing, there was no end to the lengths we were prepared go in order to defend the accused rights. It is my belief the DA was also under some political pressure to resolve this case quickly. \n\n I can now share with you that we have reached a plea deal. Late yesterday the three defendants agreed to plead guilty to public disturbance, a minor misdemeanor conviction with a $50 fine. There is no criminal record, and there is no conviction of a sexual nature for any defendant. As part of the plea deal, all other charges will be permanently withdrawn. Our clients have expressed their satisfaction at this outcome. We are entering the plea arrangement into the court this afternoon, and we foresee no obstacles in its acceptance. You should be aware that this plea bargain will become public knowledge as soon as it is entered into the court. ",
        "Except for some final details, this will conclude our legal engagement in this case. I will be forwarding a request for payment against the escrow account next week. There is still the matter of our clients' safety and security, and their public relations management. I will now hand this case off to David Tang of our security department, who will continue to liaise with you directly. \n\n Thank you for your business, and do not hesitate to call me personally if you require any further services. \n\n Terrance Strong. \n\n\n\nNot bad, Joel thought. It had been two weeks to the day since Joel first met Terrance Strong, and only a week and a half since the firm took on the case. Joel wished he were a fly on the wall in the DA's office. It would have been a junior assistant that handled minor cases in lower courts, coming head-to-head up against the most powerful law firm in the city spoiling for a complicated, protracted, and expensive battle. Someone was shitting their pants. \n\n It was a small victory, considering the social turmoil Christina, Kelsey, and Mary would still face. In a more selfish vein, Joel was gratified he did not have to spend over two million dollars in legal fees, freeing the bulk of Agatha McDougal's five million dollar gift for Joel to use at his discretion. Joel sent a reply email thanking Terrance for the good news and for his excellent work. \n\n Jenny stepped out of the bathroom with a towel wrapped around her body. Joel was still naked. He decided to shower as well. He had no fresh clothes, so after he dried off, Joel wore the same things he had on the night before. \n\n They went for breakfast together in the hotel restaurant. Jenny was still in a good mood, but she was no longer consumed by her conference experience. They talked about other things, including what Joel was doing in Boston. \n\n Joel explained he was starting a business \u2013 the one he told Don McLean about. He had some money, and decided to strike out on his own. Joel didn't explain to Jenny it was a good cover. Such a business would require travel, which allowed Joel to wander the country without raising suspicion. \n\n Joel did mention he met with Melissa, the flight attendant on the catnap flight. He explained he has also been in touch with the pilot from time to time. Jenny seemed interested in the comradery that develops among people involved in aircraft incidents. She had heard that survivors of some plane crashes still meet every year on the anniversary of the event. \n\n After breakfast, Joel drove Jenny to his airport hotel, where he picked up his things, and checked out of a room he never slept in. They went to the airport, dropped the rented Lexus off, and Jenny and Joel were able to catch an earlier flight than the one he booked. \n\n Once again, they flew business class, and Jenny was thrilled by the pampering she received by being Joel's travel companion. Joel wondered what the American Airlines flight attendants' Facebook feed would report tonight. \n\n Jenny and Joel landed in Boston just past three o'clock on Thursday afternoon. Joel picked up his Boston rented car from the airport parking lot, and dropped Jenny off at her house. They agreed to meet again on Saturday afternoon. Jenny kissed him goodbye, and Joel watched her walk up the steps. \n\n On Friday Joel went to Autumn Crawley's office where Sylvie was working. She had already bought four laptops, and was using one. She loaded Microsoft Office on all of them. She was using Autumn's wireless internet connection until the local ISP could come in and set up a business line. She had already bought a coffee maker, mugs, kettle, tea, and all the fixings. She would have narrowed the search down to six researches by the end of the day, and Sylvie was already setting up interviews on Monday. Joel was pleased with Sylvie's initiative and drive. \n\n Joel told her to start looking for a forensic information technology private investigator \u2013 not as an employee, but as a consultant. He wanted someone who can track down a person's whereabouts and activities by cyberstalking them. Again, Joel commanded Sylvie to consider women only. \n\n On the investment management side of business, Joel told Sylvie he wanted her to search for an experienced business analyst \u2013 likely a former executive who understood finances, operations, sales, and marketing, and someone familiar with investing, mergers, and acquisitions. Preferably male. He did not want a lawyer, but instead someone with a business background, who could walk into a business and evaluate whether Joel should invest in it or not. He also wanted a forensic accountant \u2013 someone who knew their way around a ledger book when a company was trying to hide something. \n\n Joel asked Sylvie to find another, smaller office space nearby to set up his investment company. She said she would get right on it.\n\n Finally, Joel commanded Autumn to set up a new incorporated company for him that does private investing. He thought of the name FlashCap, or something like that. She should do the name search, registration, and everything possible before he needs to get involved. This company would be his, and he would own and run it. \n\n On the Shopping Mall Channel's list of the top 1,500 sales performers, forty of them were in New York City. Three were in the top 10, all on the upper east side of Manhattan. Joel decided, or in this case, Douglas Eves decided he would make a trip to New York, and do some hunting by night and some different kind of hunting by day. With luck, he'd by home for supper on Wednesday. Rather than toting the whole Shopping Mall Channel book around, Joel used his phone to take pictures of the pages that held the ten top New York City sales performers, and left the book at home. \n\n He finished up with Sylvie before she left, asking her to set up the six researcher interviews on Monday and Tuesday morning. \n\n On Saturday Joel and Jenny went out to a movie. She wore jeans and a casual button up shirt. They chose Ex Machina, and then they went out to a late dinner. Over dinner Jenny explained she had scheduled the first two of the four interviews she picked up at the conference. They were both out of town on Fridays, so she could take a day off work and come back on the weekend. Sadly, none of her prospective employers was flying her business class. \n\n \"How did you know this conference was going to be so good for me?\" Jenny asked.\n\n \"Because I see how good you are,\" he said honestly, \"and I see how undervalued you are at Quinton. It doesn't take a rocket scientist to figure that out.\" Jenny looked hurt. \"Jenny,\" he repaired his declaration, \"I didn't mean to suggest you aren't smart. Just the opposite. But remember when we were first discussing this conference? That place grinds you down. It sucks the life out of you. Jenny, I know. My confidence and IQ went up 50 points after I left Quinton.\" That part was true, but Joel had not realized it had nothing to do with leaving Quinton. \"You can't blame yourself for not seeing how good you are, because they won't let you see. If they let you figure it out, they will lose all their good people.\"\n\n \"Well, they're definitely losing me,\" she declared bitterly. \"After I went to that conference and saw how other companies treat people with respect, I am so gone.\" She was thinking about all the wasted time she spent at Quinton. It was a look Joel knew all too well. \n\n He took her hand across the table. She looked down at her napkin, unable to meet his eyes. \"It's too bad I didn't get any job interviews in Boston,\" she said quietly. \n\n \"Moving is an adventure,\" Joel offered. \"It's exciting and scary, just like a rollercoaster ride. You'll love it,\" he smiled. \n\n \"What about you?\" Jenny asked, changing the subject. \"It sounds like you're starting to settle down into this new business.\" Joel explained how he was just in the early stages. Anything was possible. California, New York, or Chicago seemed like logical places to relocate to, but he wasn't certain. \n\n \"So tell me about growing up with your aunt,\" Joel asked, this time he changed subjects. He remembered Jenny had told him she was raised by her aunt. \n\n \"Aunt Florence,\" Jenny nodded. \"I just called her Flo. She was my mother's sister. My dad died before I was born,\" Jenny explained. \"He had a heart attack, and was dead before he hit the floor, so I'm told.\" She paused, never quite understanding how that was possible. \"My mom died when I was three. I don't really remember her, but I have pictures of us. She had some rare form of deadly breast cancer. So Flo took me in. I guess it was in my mother's will. Flo so wanted children, but she couldn't, and never married. She raised me like I was her very own. Every day she told me how much she loved and missed my mother, and how much she loved me.\" Jenny paused. She looked into Joel's eyes with sadness. \"I was with Flo when she died. She thanked me for being the blessing in her life. Those were her last words on earth.\" Jenny wiped her eyes. Jenny had never told anyone else that.\n\n \"Wow,\" Joel was speechless. \"So I guess you have no brothers or sisters,\" he concluded after processing Jenny' story. \n\n \"No,\" Jenny shook her head. \"Flo and me. We had each other.\" \n\n \"I'm so sorry for you, Jen,\" Joel said, squeezing her hand. \"These past two years must have been so lonely for you.\"\n\n \"Only Flo ever called me Jen,\" she said quietly with wet eyes.\n\n Joel hadn't even realized he had used the shortened form of her name. \"I'm sorry Jenny,\" he offered again, \"I didn't mean to upset you.\"\n\n \"No,\" she shook her head and wiped her eyes again. Jenny and looked at him with swollen, red eyes. \"Call me Jen.\"\n\n Joel studied her a while, and he hoisted his wine glass toward Jenny. \"To Flo,\" he declared solemnly. \n\n She smiled with teary eyes, and picked up her wine glass, and returned the cheer. \"To Flo,\" she announced, padding her eyes with her napkin. They drank their toast in silence. \"It's my Mom's birthday next week,\" Jenny broke the awkward pause. Joel looked at her quizzically. \"Flo insisted we celebrate Mom's birthday every year, to remind me what a beautiful woman she was,\" Jen explained. \n\n \"When is it?\" Joel asked. \n\n \"It's the twenty third, so that makes it what? Thursday, I think.\"\n\n \"You and me,\" Joel announced, pointing his finger back and forth between them, \"we're partying hard on Thursday.\"\n\n \"I can't,\" she grimaced. \"I fly to Chicago for my first interview.\"\n\n \"Okay,\" Joel regrouped. \"We'll have a double celebration when you come home \u2013 your first interview and your Mother's birthday.\"\n\n \"I don' think so,\" Jen complained. \"You don't know her. It's kinda strange.\"\n\n \"You don't know her,\" protested Joel. \"Don't just do this just for her. Do it as a tribute to Flo. You know it's what she'd want you to do. She wouldn't want you to stop celebrating your mother's birthday, and you can't have a birthday party alone,\" he observed. Jen shrugged unconvinced, not wanting to admit she celebrated her mother's birthday alone last year. It was awful. Jen just cried the whole day. \"Jen,\" Joel broke her thoughts, \"I'm not taking no for an answer. You are celebrating your mother's birthday. That's final. Now if I make you uncomfortable, and you'd rather celebrate it with someone else, then that's fine, and I'll ...\"\n\n \"No, no!\" she blurted out \u2013 too loudly in the restaurant. \"Okay,\" she hushed her voice. \"You win. We'll celebrate my mom's birthday next week.\"\n\n \"Damned straight we will,\" Joel nodded with assertive confidence. Jen smiled with twinkling green eyes. Joel went to pay, but Jen insisted on paying half. As they left the restaurant together, Joel asked her \"So when do you go to Chicago?\"\n\n Jen explained she was catching a seven o'clock flight on Thursday, arriving at nine o'clock after a three hour flight with the time difference. Jen had booked the next four Fridays off work, and was trying to line up all her interviews on those days. She wanted to save Google for the last trip. Joel calculated that was August 14th, and made a mental note. Don McLean had invited him to come along. \n\n Jen invited him over to her house after dinner. The barking corgis twirled and leapt behind the glass door as they entered the front door. Once they settled down, she offered him some wine, which he accepted. They sat in the living room and chatted. Joel commented on how nice the house was. He was impressed Aunt Flo was able to afford such a house on a single income. \n\n \"She couldn't, really,\" Jen explained. \"Mom and Dad both had life insurance, and when Mom died, all the money went to Flo to raise me. She bought the house with the insurance money. She worked as a clerk in the municipal government. I think she barely could afford the upkeep, and in the later years, she couldn't even manage that.\" Jen paused in thought. \"Anyway, Flo always told me it was my house, not hers. She always nagged me that, once I was old enough to settle down and raise a family, I was to kick her out. I never did, of course.\" That explained why a young woman as attractive as Jenny hadn't married or even dated that much. \n\n The conversation came around to her upcoming job interviews, and Google. \"What was all that about American pie?\" she asked, referring to Joel and Don McLean's conversation on the front steps of the Senator's residence. \n\n \"Don McLean is a famous song writer and singer from the seventies,\" Joel explained. \"His two biggest hits were Bye, Bye Miss American Pie and Vincent, better known as Starry Starry Night. \n\n \"I know Miss American Pie,\" Jen nodded, now understanding the banter the men shared on the steps.\n\n \"I expect he gets that all the time. That song is iconic,\" Joel reflected.\n\n They finished their wine, and Jen led him upstairs by the hand. They silently, gently took each other's clothes off, and made unhurried, passionate love on Jenny's bed while the corgis slept in the corner. \n\n Jen asked Joel to leave around two in the morning \u2013 she said she wasn't ready for him to sleep over just yet. Joel smiled, kissed her, and said of course. She watched him dress. She pulled on her housecoat from the back of the bathroom door, and followed Joel downstairs with the corgis close behind. They kissed goodnight at the door with the glass door closed behind them as the corgis barked their goodbyes. Joel warned her he had a busy week, and might not be able to see her until Wednesday next week. He invited her to his place for dinner Wednesday night to celebrate Jen's mother's birthday. Jen said she would have to see how her week went, but she liked the idea. They kissed one last time, and Jen watched Joel drive away.\n\n Jen padded in her bare feet into the living room with the corgis close by. She picked up a picture of Aunt Flo and studied the photo for a long time. It was a black and white image in a silver frame, taken in Flo's vibrant youth, before Jen was even born. It was Jen's favorite picture of her aunt, and it sat prominently in the living room. Jen delicately ran her fingers across the glass, longing to touch Flo's kind and caring face just once more. \"Flo,\" she whispered, looking into her aunt's eyes, \"for the first time in a long time, I think I'm happy.\" She was not a religious woman, but Jen hoped somehow Flo could hear her, or at least understand. \n\n Jen tenderly set the picture frame back down, let the dogs out one last time, and then climbed the stairs to her bedroom. She changed into her pajamas, climbed under the covers, and fell into a long, peaceful sleep. \n\n - - -\n\n Joel spent Monday and Tuesday morning with Sylvie in job interviews. Sylvie was definitely a winner. Joel's biggest problem was choosing only three \u2013 they were all good. During the interviews, Sylvie had prioritized the six in order of her preference. That was good enough for Joel. He told Sylvie to call their references, and make sure they checked out. If they did, Joel said go ahead and hire them through Autumn, but Joel had to speak with them before they actually started working. \n\n Sylvie said she would research the appropriate questions to ask before making the reference check phone calls. Joel wanted to kiss her \u2013 not out of lust \u2013 but out of appreciation. Joel had solemnly declared that work and play shall never mix, so he just thanked her for a job well done. \n\n Joel remembered about Jenny's mother's birthday party, which was on Wednesday, and he realized he didn't know Jenny's mother's name. He asked Sylvie to put the research team on Jenny Riverton, and pull up what information they could, and specifically, what were her parents' names. Her mother would have died 26 years ago, and her father 29 or 30 years ago.\n\n On Tuesday afternoon Joel drove to New York City and comped a hotel room. He chose a hotel within walking distance of a few dance clubs \u2013 something you can find quite easily in New York. He still checked in as Joel, because he didn't have Douglas Eves' credit cards yet. He had applied, but was still waiting. \n\n He hit a dance club called High Beams just after nine o'clock. It was not rocking on a Tuesday night. The faded decor was drab and tired, wanting for an overhaul. The clientele looked like they couldn't afford anything better. He left after fifteen minutes, abandoning his ten dollar cover charge, and went seeking for something better in the local neighborhood. The next one was Tailpipe \u2013 what was with all the car parts? \u2013 but one look told him it was a gay club. He didn't even bother with a cover charge. Nothing against that lifestyle, but it wasn't exactly fertile hunting grounds. The third one was called Metaphors \u2013 at least it wasn't a car part. \n\n This was better. More upscale than High Beams, with a twenty-five dollar cover charge. Lots of young women were dressed to party and dancing to insanely loud over-bassed dance club music. It was so loud Joel wondered if he could even command any women at all. \n\n Without realizing it, Joel had developed something of a swagger in the night club scene \u2013 an air of superior confidence. Like the joke about the young bull and old bull, most young hormone laden men entered the club alert and eager, with eyes dashing and darting across the faces and bodies of young women, and their twitching masculine body language betraying their anxious anticipation over the unlikely but nonzero chance that one of these fine ladies could actually go home with them tonight, Not Joel. He entered the club with a measured and steadfast confidence that comes from certain knowledge that Joel could fuck every woman he saw. He found the other men's semi-spasmodic, transparently ineffective mating rituals annoying and juvenile \u2013 unbefitting of a superior race. They were an inferior race, Joel gauged. His quiet contempt for these inferior, horny men, coupled with his blunted affect toward the women who serviced him seeped through Joel's air of indifferent confidence. \n\n Joel's aura was disquieting to some people. They felt intimidated, condescended, or both. But a few individuals \u2013 people who were wired differently \u2013 were drawn toward Joel, like moths to a perilous flame. Joel first noticed this phenomenon at the Metaphors dance club. A young man seemed to stand close by. As Joel moved about the cavernous single room club, so did this person. He was sandy haired with fair skin, not quite scrawny, but thin. His face seemed to be permanently locked into posing a question. He didn't stand a chance next to the more charismatic men in the bar, and Joel suspected he knew that.\n\n At first Joel ignored the boy, but over time, his shadow became more brazen, standing closer to Joel, to the point where women would look at the two of them, their faces revealing the social incongruities. Finally Joel went to the bathroom, not so much because he wanted to, but as a means to either escape or confront his shadow. The boy did not follow Joel in, but waited outside the door, and was standing in the hallway when Joel came out.",
        "Joel's first instinct was to ask what the man wanted, but then he decided to treat him like as a member of the inferior race he was. \"Fuck off!\" Joel shouted at him with venom and fury, and Joel pushed the man's back into the wall behind him, and walked away. The man kept his distance after that, but every once in a while, Joel still caught him stalking Joel from afar.\n\n Joel found a trio of girls \u2013 a blonde, a brunette, and a redhead. They were all quite tall \u2013 at least five foot ten, although they were wearing heels. They were not together \u2013 Joel separated each one of them from the herd of hundreds. Joel established they were all sexually active, and they all were into anal. \n\n Joel led the girls back to his hotel. Had he paid attention, he would have noticed his fair haired shadow was following on the street, from a distance. The girls were all wearing dance club clothing, which was short skirts and sleeveless tops \u2013 they turned heads as Joel entered the hotel lobby. Realizing the attention they were attracting, he discretely commanded them to take an elevator to the ninth floor, and wait for him there. He hung back as the girls crossed the lobby to the elevators while several onlookers watched with interest. As soon as their elevator door closed, Joel put down the newspaper he wasn't reading, and crossed the lobby and took the next elevator. The elevator opened on the ninth floor, and the three girls were waiting for him in the hallway. He ushered them back into the still open elevator, and when the doors closed with the girls inside the car, Joel pressed the button for the seventh floor, and descended two floors. Anyone watching the girls' elevator's progress from the lobby would have assumed they were somewhere on the ninth floor.\n\n Joel shepherded the girls into his room \u2013 a free executive suite, of course. When he closed the door, he commanded them to strip. Jasmine was the brunette \u2013 more auburn. She had blue eyes and a long face. Her hair was full-bodied with lush curls that nestled down to her bounteous breasts, which were round, and hung apart on her chest. Her nipples were placed lower than usual, on the downward slope of the gentle curves of her bosom. She was trim and fit, and had a tightly cropped stripe above her bare pussy. \n\n Natalie was the redhead. She had deep set green eyes, small high cheek bones, and a delicate face. Her lovely rust red hair also feathered to her large breasts with light waves, but no curls. Natalie's tits were slightly larger than Jasmine's, but exact opposite in nipple placement. Natalie's nipples were very high on her breast \u2013 well above the front edge of the perfectly round orbs. Being larger, they hung closer together, but did not touch. \n\n Cassandra was a femme fatal dirty blonde with natural highlights. She looked fit and strong \u2013 she could be a fitness instructor \u2013 her arms and legs were supple and smooth. She had a way of looking right through you, as if she could see into your soul. Her long face and high, soft cheekbones, with gentle lips made Joel want to kiss her. Her breasts were smaller than the other two girls, but still good size, with nipples dead center. Cassandra and Natalie were both clean shaven. \n\n Joel commanded the auburn Jasmine to stand up straight with her legs wide apart, clasp her hands behind her head, and to stay there without speaking. He retrieved his KY from his travel pack, and handed it to the blonde Cassandra. He told her to use the toilet, wash well, and then lube her own asshole. While Cassandra was in the washroom, he commanded the redhead Natalie to stand just to the side of Jasmine, and start spanking her bare pussy. \n\n Jasmine started with tender finger flicks as Joel started undressing. His cock was already rising to the sight of Natalie's corporal punishment on Jasmine's womanhood. He told Natalie harder, and she started flicking her whole wrist, and Jasmine's whole body flinched on each strike, but she didn't move or cry. Harder, Joel commanded as he took his pants off, revealing his unapologetic bulge. Natalie still used just her wrist, but smacked her fingers smartly on Jasmine's pussy. Joel pushed off his underpants, showing off his eight inch pride. He walked to Jasmine, and fondled her breasts and suckled on her nipples while Natalie still smacked Jasmine's pussy. \n\n Cassandra came out of the bathroom. Joel released Jasmine, and commanded her to go to the bathroom and do the same thing, and come out with her asshole lubed. \n\n Joel commanded Natalie to assume the position \u2013 legs spread wide, hand behind her head. This time, he commanded Cassandra to slap Natalie's tits, alternating left and right. Like Natalie did, Cassandra started softly, gently tapping the sides of Natalie's orbs. Joel crouched down beside Natalie's wide spread legs, and touched his index and middle fingers together against her pussy. He commanded Cassandra to spank Natalie's tits harder, and as Natalie's tits started swaying side to side under Cassandra's light flogging, Joel pressed his two fingers deep into Natalie's fuck hole. \n\n Joel double finger fucked Natalie while Cassandra continued her left-right alternating mammalian punishment, causing Natalie's red hair to flow and sway with the motion of her tits. Joel told Cassandra harder, and he heard the slaps on Natalie's tits grow louder. Joel's cock was aching for relief, but he knew patience brought its own reward. \n\n Eventually, Jasmine stepped out of the bathroom, and Joel released Natalie, and sent her into the bathroom for her own anal preparation. Joel pulled a condom from his pants, held it in his hand, and lay on his back on the bed. He commanded the blonde Cassandra to suck him. She climbed onto the bed on all fours, and crawled into position, and lowered her face to his cock, and took him into her mouth. While Cassandra sucked him, he ordered Jasmine to finger fuck her friend while Joe's balls started warming to Casandra's oral stimulation. Taking in both ends, Casandra continued sucking Joel while Jasmine slipped her slender finger in and out of Cassandra's pussy. \n\n With Joel's orgasmic pressure rising, he told Cassandra to stop, and she pulled out. He commanded both girls into the downward dog position, beside each other. He kneeled behind Jasmine, on the left, tore the condom wrapper open, and rolled the condom onto his granite cock. Joel guided his missile to her back door, and without warning, Joel plunged deep into Jasmine's lubricated ass. She gasped at the intrusion, but didn't complain. With his right hand, Joel reached to Cassandra's pussy and finger fucked her while he pumped in and out of Jasmine. Joel slapped his pelvis into Jasmine's ass as he rammed the full length of his eight inches in and out of her willing orifice. \n\n After a minute of ass-fucking Jasmine, Joel pulled out, and noticed her sphincter stayed relaxed, giving Joel a peek up her long, dark tunnel. Joel repositioned himself behind Cassandra, and just like last time, powered all the way into her chute. Cassandra grunted at the assault, but like Jasmine, didn't complain. His balls slapped against her pussy each time he drove in, adding to his excitement. \n\n The redhead Natalie came out of the bathroom, and Joel ordered her to take her position to the right of Cassandra. When she was ready, Joel pulled out, and moved behind Natalie. After ass fucking Jasmine and Cassandra for several minutes, Joel was ready to blow. He buried his shaft into Natalie's rectum, and ass fucked her hard. His balls were approaching detonation, and he told Cassandra, to his left, to roll over onto her back, flip end to end so her head was beside him, and open her mouth. As Joel felt his balls about to release, he pulled out of Natalie's ass, leaving a gaping hole. He yanked off the condom, and jerked the last few seconds over Cassandra's mouth. Joel aimed cum shot after cum shot between her parted lips until the last drop had pooled in her open mouth. \n\n Joel told Cassandra to hold his cum in her mouth \u2013 not to swallow or spit. Then he commanded Natalie and Jasmine to flip over, and then Joel commanded the three girls to snowball his cum, one to another, around and around, until his jism had passed through each girl's mouth at least twice. Finally he ordered them to swallow what was left.\n\n Joel commanded them to tell him if they all had to go home tonight, or could they stay. Jasmine and Natalie both had to go home, but Cassandra could stay out all night. He sent Jasmine and Natalie on their way. They dressed, leaving their bras behind, and left together. Cassandra stayed naked, and joined Joel under the covers while they watched some TV until they both fell asleep. In the morning, Joel took a 69 blowjob with Cassandra on top, and then sent her on her way, minus her bra.\n\n Joel showered and dressed, and went downstairs for some breakfast. He bought a prepaid cell phone for cash at a nearby shop, and returned to his hotel room. He looked up the top ten New York City performers on the pictures in his regular cell phone, and decided on number four for no particular reason. He studied the details, memorizing key elements. \n\n He dialed the number. \"Hello, is this Grace McGuinty? ... Well, hello Grace, it's Douglas Eves calling on behalf of the Shopping Mall Channel. How are you today? ... Oh, Grace, I am so sorry to hear that. I hope that nasty cough didn't prevent you from enjoying your new fur liner. ... Grace, I am truly sorry you are not feeling your best today. Why don't I call back when you're feeling better? ... Yes, I promise ... Thank you, Grace, and you too. Bye now.\"\n\n He chose number three, and studied it for a few minutes. He called Edna Jones. A male answered the phone. He was Edna's grandson. Douglas Eves said not to bother her, he would call back. Strike two.\n\n The third was the charm. Bonnie Chisleworth lived alone on the upper east side. She was healthy, and in desperate need of company. Douglas Eves could arrange to be there within an hour, but could only stay for an hour. Yes, it was a cruel rule, but he had to follow it.\n\n It was a good thing Douglas Eves had his driver's license, because the doorman actually asked for identification. Once inside, Douglas spent an hour talking about Bonnie's late husband. He was a captain in the Navy, you know. He was too young to serve in World War Two, but he did several tours during the Korean and Vietnam wars. Bonnie showed Douglas pictures and medals. It was so rare for anyone to see them now, because no one came visit her any more. \n\n Douglas asked where her money came from \u2013 Navy captains don't make that much. It was all from her side of the family. They were all gone now. Her children never visited anymore. She had great grandchildren she had never seen. Those bastards don't deserve her inheritance. \n\n His hour was up, and Bonnie was devastated by Douglas' imminent departure. \"Well,\" he said, \"maybe I could stay just a little longer, but you have to promise not to tell anyone about my visit, then.\" She was excited to be scandalized by the conspiracy, and begged him to have another tea. \n\n It was his best haul yet. Joel Winkman left New York left with a check for nine million dollars. He was not greedy \u2013 that was one of his mantras. Bonnie still had another twelve million in cash and investments \u2013 more than enough to support her lavish lifestyle for the rest of her days, and still leave something to her undeserving descendants. \n\n The recipient field of the check was blank. He would command Autumn how to manage the money so everything was above board. Bonnie had cautioned Douglas not to cash it until next week, as it would take several days for the money to transfer from her investment account to her checking account. She entreated him to return soon. Joel had already decided to never take money from the same person twice, but Douglas promised he would come back to see her soon.\n\n Joel had accrued sixteen million tax free dollars in three Home Shopping Channel visits. That would keep both his businesses thriving for the foreseeable future. \n\n Joel left New York at noon, and returned to Boston by three. He left Bonnie Chisleworth's nine million dollar check with Autumn, and commanded her to fill out the 'To' field appropriately, and process the money so it was not traceable to him, and funnel it through her shadow company, remembering to tell her not to process the check until next week. \n\n Sylvie reported Jenny's mother's name was Linda Riverton, born Linda Talson. The father was Richard Riverton.\n\n Joel went shopping for Jen's mother's birthday party. At a specialty cake shop he told the baker what he was looking for \u2013 a birthday cake for his girlfriend's late mother \u2013 and explained the tradition. The baker nearly wept a tear at the concept. She wished Joel had given her more time. All she could do in an hour was to take a standard round cake and write Jen's name on it. The baker asked more details \u2013 she said it helps to make the cake decoration. Joel quickly explained Jen's father, Richard, died before Jen was born, and the birthday mother, Linda, died when Jen was three, and Jen was raised by her mother's sister, Flo, who died two years ago. He explained how Flo celebrated Linda's birthday with Jen every year to remind Jen how much her mother loved her. The baker said she could see what she could do. Joel agreed to return at five to pick up the cake.\n\n He drove to a party supply store, and picked up some helium balloons, streamers, and a big happy birthday banner. At a boutique grocery store that sold high-end freshly prepared food, Joel bought freshly prepared lobster bisque, green peppers stuffed with a venison cognac risotto, and fresh asparagus with shaved almonds and a lemon drizzle. At the same wine shop he had visited earlier, Joel explained to the sommelier his need for a very special wine. The proprietor said the only white wine he had in 1989 \u2013 the year Jenny's mother passed away \u2013 was a Grand Cru Montrachet Chardonnay. He warned Joel it was considered an extremely rare wine, and was priced accordingly. Joel bought one bottle for $1,200.\n\n Joel returned to the cake shop, and was stunned what the baker did in just one hour. Using colored icing, she drew fluffy white clouds against a blue sky with golden rays of sunshine radiating from behind the clouds in a typical depiction of heaven. The partly hidden name Linda was floating upon the clouds in heaven. A golden ray of sunlight burst through the clouds and shone upon the name Jen at the bottom of the fresco. Joel didn't see it at first, but the baker pointed out that, when you look carefully at the cone of golden sunlight, you could see the word 'Flo' woven into the rays of sunshine. Even Joel was nearly moved close to tears. The baker said she had never done something like this before, so charged fifty dollars. Joel gave her a hundred dollar bill, and told her to keep the change, insisting the cake was worth every penny. \n\n He returned home by 5:30. He set up the streamers and the happy birthday banner, and tied the helium balloons to the dining room table so they hovered overhead. \n\n The grocery boutique warned him to heat the food in the oven, not the microwave, he preheated the oven, put the bisque in a pot on the stove, and stowed the white wine in the fridge. His last minute preparations added the illusion he had prepared the whole meal himself. Joel hid the cake and labeled food containers away, and cleaned up the apartment a little, which took little time, since Joel was a fairly tidy bachelor. \n\n He made sure the large, flat wooden box that was tucked deep beneath his bed was out of view of even a nosy girlfriend. The only way to see the box was to go down on your hands and knees and peer under the bed. It was in that box that Joel kept all his trophy bras and panties. He resolved to get a lock for it soon.\n\n Jenny arrived at seven sharp. She kissed him hello, and then complained she nearly cancelled, it was so busy today at work, and she had an early meeting tomorrow, and a flight tomorrow night. Joel promised to have her out by nine, and put the food in the oven and warmed up the lobster bisque. The significance of the evening started right away, when Joel offered her a white wine. Joel showed her the bottle, and pointed out the vintage. \n\n \"Oh my God Joel, that's the year she died!\" Joel nodded. \"How much did this cost?\" she asked with concern. \n\n \"Don't worry about that,\" Joel said quietly, \"you know your mother deserves it.\" He opened the bottle and poured out two glasses. It had a light bouquet, a clear, crisp taste and a pleasant finish. Honestly, Joel could not tell it from a twenty dollar bottle wine, but that was not the point.\n\n Jen talked about her day and week while Joel tended to the warming food in the kitchen. She explained with Joel's and Derrek's recent departures, MARTA was putting pressure on Quinton to bring new qualified resources online quickly, and so they were interviewing replacements. At the same time, Quinton was putting new policies in place to prevent a wrongful dismissal suit from recurring like Joel suffered and sued for. Jen was at the center of it all. \"You're causing me no end of headaches,\" Jen smiled, and kissed Joel lightly on the cheek. \n\n When dinner was ready, Joel refilled their glasses, and started with the bisque. It was spectacular, and paired nicely with the wine. Then he brought out the main course, and Jen raved at how good it tasted. She had never had venison before, and she loved the lemon glaze on the asparagus. But the crowning moment came when Joel brought out the cake. \n\n Jen was smiling with anticipation as Joel carried the cake to the table. He didn't put any candles on it \u2013 he felt that would ruin the artwork. She was still smiling when Joel placed the cake down in front of her, but when she viewed the icing frieze, Jen's eyes welled up and she covered her mouth with her hand. Her chest started shaking with tiny breaths of silent crying. She hadn't noticed the subtle weaving of the name 'Flo' among the rays of heavenly sunlight until Joel pointed it out, and then Jen burst into tears. She stood up and hugged Joel as hard as she could. She stood there several minutes, holding Joel in her arms, staring down at the cake with tears streaming down her cheeks. Jen slowly rocked back and forth in Joel's arms, the way her mother once rocked Jen after she hurt herself. It was her only memory of her mother.\n\n \"I can't eat this,\" she finally said as she pulled away from Joel, wiping away her tears. Jen went to the bathroom to fix her makeup. When she returned, Jen retrieved her cell phone, and took several pictures of the cake. Joel used his own phone to take Jen's picture next to the cake. She said she was a crying mess, but Joel wanted to show the picture to the baker, and prove what a difference her art made to Jen's day. Jen nodded, but extracted a promise Joel would show it to no one else. \n\n At long last, Jen cut the cake, and they each enjoyed a piece. \"I wish Flo was here to see this,\" Jen said with bittersweet tears as she ate the cake. After dinner, they sat and talked for hours. Finally at 11:30, Jen complained she just had to go. Joel packed up the cake and gave it to her to take home. \"Thank you so much,\" Jen hugged him again. \"I'm so glad I didn't cancel tonight.\" Joel walked her down to her car, and they kissed goodnight. \n\n As Joel watched Jen drive away, he felt a rift tear into his heart. One day soon their world would rip apart, and each day he spent with Jen made that moment harder to fathom. He turned and walked back to his apartment with a foreboding, dark emptiness. \n\n - - - End of Chapter 6 - - -"
    ],
    "authorname": "deltablonde",
    "tags": [
        "birthday party",
        "hr conference",
        "fuck",
        "blowjob",
        "dance club",
        "anal",
        "snowball"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/our-little-secret-ch-06"
}