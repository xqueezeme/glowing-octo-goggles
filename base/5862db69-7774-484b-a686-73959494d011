{
    "title": "Succubus Summoning 204",
    "pages": [
        "After the debacle in the lecture theatre, where the whole class had watched while Phil's succubus sucked the life out of another student, Phil was not entirely surprised to receive a summons to The Scrote's office. Accompanied by Verd\u00e9, he walked along twisted corridors in the north tower until he arrived at a small antechamber before the leather-padded door that led to The Scrote's office. The skinny girl with droopy blonde hair was sitting on a bench outside the door and looked thoroughly miserable.\n\n\"You in the doghouse too?\" Phil asked.\n\nThe girl nodded.\n\n\"Mr Buggeritall pooped in his hands and threw it at Ms Saunders, the cook,\" she said.\n\nAn ugly squat form jumped up and perched on the shoulder of the blonde girl.\n\n\"Bitch had it coming, toots,\" the imp said.\n\nMr Buggeritall looked like a cartoon demonic imp. He was about a foot high, dark brown in colour and had no neck. He stood on short and stumpy legs. In contrast his arms were long and simian in proportion, and also heavily muscled in comparison to the rest of him. He had a stubby pair of black horns and two equally stubby tusks jutted out of the corners of a wide mouth. The imp gave off an unpleasant vibe\u2014like being trapped at a bar by a fat man with a questionable sense of humour.\n\n\"If people give you shit, you give 'em shit right back,\" Mr Buggeritall said, jerking a thumb back to his puffed out chest.\n\nThe imp noticed Verd\u00e9 standing at Phil's side. His smile widened to a leer. A hand reached down to stroke a cock that was definitely not in proportion to the imp's small stature.\n\n\"Well if it isn't the boy who came, and came, and came,\" the imp said. \"Not that I blame you.\" The imp gave Phil a lascivious wink. \"I'd be filling her up with my man juice every night too if I had the opportunity.\"\n\n\"Don't be gross,\" the girl said.\n\nShe flipped the imp off her shoulder and it bounced first on its ass and then on its head as it skidded across the stone floor. Completely unconcerned, the imp got up, grunted, brushed itself off and then walked back to the girl. It climbed right back up the girl's body until it had found a perch on top of her head. Then it let rip with a noisy fart that was powerful enough to blow the limp strands of the girl's hair.\n\nThe girl screwed her eyes shut and ground her teeth in embarrassment.\n\n\"Wasn't me,\" the imp protested.\n\n\"I'm sorry,\" the girl said to Phil. \"I'm Adriana and this is Mr Buggeritall.\"\n\n\"Phil,\" Phil said. \"This is Verd\u00e9.\"\n\nAdriana shrank away from Verd\u00e9 in fear before saying, \"Oh, you're the other one, aren't you?\"\n\n\"Yes,\" Verd\u00e9 said, giving her a warm smile.\n\nIt eased Adriana's fears a little, although she was still reluctant to get too close to the succubus. This proved a source of much frustration to the imp perched on top of her head. Mr Buggeritall had his hands outstretched like pincers to grope at Verd\u00e9's breasts. Inevitably he overbalanced and fell to the floor with an \"oof!\"\n\nAdriana shook her head.\n\n\"He's always like this,\" she said. She reached down and scooped him up off the floor before placing him back on her shoulder.\n\n\"Feculoid Imps can be most trying,\" Verd\u00e9 said, sympathetic.\n\n\"How did you end up with him?\" Phil asked. He found it hard to believe she'd summoned him voluntarily.\n\n\"I fell asleep in a meadow on a summer's day,\" Adriana said. \"I had a strange dream and when I woke up he came back with me. He's been with me ever since.\"\n\n\"It's my magnetic sex appeal,\" the imp said. From somewhere, Phil had no idea where, Mr Buggeritall produced a fat stogie and started puffing away on it.\n\n\"Mr Garner said I'm Naturally Attuned,\" Adriana said. \"He told me about warlocks and daemons and that I might learn how to control them here.\"\n\n\"Control me!\" Mr Buggeritall spluttered. \"You can't even control your hair. Look at it.\" He grabbed a fistful of limp hair the colour of straw. \"No life at all. It's droopy. Just like you, toots. The boys are never going to look at you.\"\n\nAdriana ground her teeth. She picked him up again and threw him across the room like an ugly doll. She sat slumped on the bench with her long hair drifting in front of her face.\n\n\"People choose to summon these things,\" she said. \"I still don't believe it.\"\n\nVerd\u00e9 got up and sat on the other side of Adriana. She ran a hand through the other girl's limp blonde hair.\n\n\"There there,\" she comforted. \"Feculoid imps are disgusting uncouth little things. I imagine dealing with one on a daily basis would be most stressful.\"\n\nAdriana's eyes glazed over as Verd\u00e9 lightly caressed her cheek. The succubus moved closer. Her hands slid down to Adriana's shoulders and began to massage them.\n\n\"Not all daemons are like that,\" Verd\u00e9 said, continuing to rub Adriana's shoulders. The other girl seemed to melt under her hands. \"Some of us have more useful talents. We can make you feel relaxed.\"\n\nAdriana seemed entranced. She gave a little shiver of pleasure as Verd\u00e9's hand moved across her front and brushed against her breast.\n\n\"Make you feel pleasant,\" Verd\u00e9 whispered into Adriana's ear with sensual lips.\n\nVerd\u00e9's hand slid lower. She turned Adriana's face towards her and pursed full lips in preparation for a kiss.\n\nAn ugly brown shape came between them.\n\n\"Get your skanky succubus claws off my Adriana.\"\n\nMr Buggeritall leant out from Adriana's shoulder and glared at Verd\u00e9. His heavy lower jaw was set like a bulldog's.\n\nVerd\u00e9 smiled and took her hands back. The imp continued to glare at her. Verd\u00e9 met his stare and nodded, which seemed to mollify the other daemon.\n\nThe door to The Scrote's office opened.\n\n\"Ah, there you are, boy,\" The Scrote said. \"Come here.\"\n\nPhil and Verd\u00e9 stood up. The succubus slipped an arm around Phil's waist and they both walked through the door.\n\nThe Scrote's office was dark and cluttered with all manner of exotica and lewd artefacts\u2014pornography that had aged enough to pick up an aura of near respectability. A little like The Scrote, Phil thought. The Head of Daemonological studies sat behind a luxury wooden table. Behind him were various pictures on the wall of sexy daemonesses doing very...creative...things to human victims.\n\n\"I assume you know why you've been summoned here,\" The Scrote said.\n\n\"John Brennan?\" Phil said.\n\nThe Scrote nodded. He looked at Verd\u00e9.\n\n\"It was the other one, not you?\" he asked.\n\nVerd\u00e9 nodded.\n\n\"Where is she?\"\n\n\"She's otherwise engaged,\" Verd\u00e9 said. \"She's very sorry about what happened.\"\n\nThe Scrote stared at Verd\u00e9 from beneath his curtains of greasy black hair.\n\n\"It's customary to add 'and it won't happen again' at this point,\" he said.\n\n\"Is it?\" Verd\u00e9 said, an expression of complete innocence on her face.\n\nShe didn't add it.\n\nThe Scrote continued to stare at Verd\u00e9.\n\n\"There's something familiar about you,\" he said. \"I feel I should know who you are but I can't put my finger on it.\"\n\n\"A past love maybe?\" Verd\u00e9 said. \"We succubi pick up on subconscious desires and modify our appearance to match them.\"\n\nPhil looked sideways at Verd\u00e9. Her face hadn't changed as far as he could tell.\n\n\"Where are you from?\" The Scrote asked.\n\n\"The forty-fourth sub-plane near the base of the Spiral of Sinful Seductae,\" Verd\u00e9 replied.\n\nThe Scrote frowned. \"Haven't heard of it.\"\n\n\"It's a really out-of-the-way corner of hell,\" Verd\u00e9 said, flashing him a schoolgirl smile. \"Nothing much ever happens there.\"\n\nThe Scrote nodded, seemingly satisfied for now.\n\n\"Now about Brennan,\" The Scrote said. \"Normally we disapprove of students allowing their daemons to kill their fellow classmates, but in this case the disciplinary committee recognises that it was Mr Brennan's rather reckless experiment that precipitated these unfortunate events. The school absolves you of any culpability and Mr Brennan's death has been ruled an accident.\"\n\nThe Scrote smiled at Phil, displaying his rotten teeth.\n\n\"Personally I'm inclined to regard it as suicide,\" he said. \"A man messing with another man's succubus is clearly not looking to live very long. However, the rest of the committee decided that was a harsh ruling, especially as the Brennans have worked tirelessly for Wargsnouts over many generations. Accident it was, brought about by Mr Brennan's ill-advised experiment. The Brennan family have accepted the committee's judgment that you're not to blame. They will not seek reparations.\"\n\n\"So that's it?\" Phil said.\n\nOn one hand he was very relieved he wasn't about to be punished for this. On the other he thought it more than a little scary that a daemon could kill a student right in front of everyone and there be no repercussions.\n\n\"Yes, that's all,\" The Scrote said. \"Daemonology is a dangerous business. Accidents, even terminal ones, are to be expected.\"\n\nThe Scrote gave Verd\u00e9 an ugly lustful leer. A normal woman would have looked away with a disgusted expression. Instead Verd\u00e9 returned his greasy stare with a flirty smile. Succubi really didn't care, Phil thought.\n\n\"Succubi are capricious, promiscuous beings,\" The Scrote said to Phil. \"They can be hard daemons to master, especially for a novice and especially when there's two of them.\"\n\nTry five, Phil thought. And maybe more if you included Puff and Pfaffle.\n\n\"If you ever need my help, any tips and pointers, I'm always here.\" The Scrote leered at Verd\u00e9. \"I'm never shy of taking a hands-on approach with my students.\"\n\nPhil caught the lecturer looking at Verd\u00e9's breasts. He knew exactly what The Scrote wanted to put his hands on. The Head of Daemonological Studies was a walking personification of nails down a blackboard.\n\nPhil was happy to leave his office and even happier\u2014and surprised\u2014to find out he wasn't in more trouble over this.\n\nWith the authorities at least...\n\nHe wasn't sure how Brennan's friends would take it. He was surprised when Darvill approached him in one of Wargsnouts little courtyards during a break.\n\n\"I'm sorry about your friend,\" Phil said.\n\nHe expected a torrent of abuse, suspected he probably deserved it.\n\nDarvill simply shrugged. \"It happens,\" he said. \"It was a stupid stunt. John should have known better. You don't have anything to apologise for anyway. It wasn't your fault.\"\n\n\"That's what the school said,\" Phil said. \"Seems a little, you know...blas\u00e9.\"\n\n\"That's how it is with daemons,\" Darvill said. \"It's considered a good year if half of us are still alive come graduation.\"\n\nHis daemon sat on his shoulder and stared at Phil with five of its many eyes.\n\n\"Kind of chilling when you think about it,\" Phil said.\n\n\"The rewards are worth it,\" Darvill said. \"And we have control. Better than out there,\" he said nodding to the world outside the walls of Wargsnouts. \"I'll take those odds.\"\n\n\"What about John's family? Stine said they won't seek revenge, but they can't be okay with this.\"\n\nMost of them worked here, according to Brennan. That was going to make Phil's studies a little awkward.\n\nAlthough at least he was still able to study, which was more than could be said for poor John Brennan.\n\n\"Officially they accepted the ruling of the disciplinary committee,\" Darvill said.\n\n\"Unofficially?\" That was the bit Phil was worried about.\n\n\"Unofficially, there were some members of the family that were less than happy with that judgment.\"\n\nDarvill nodded his head towards the other side of the courtyard. Phil turned and saw a slender girl with ginger plaits and freckles.\n\n\"Ooh my, such an expression of hatred,\" Verd\u00e9 commented.\n\n\"Your friend did turn her brother into a mummified corpse,\" Darvill said.\n\nPhil wanted to tell her he was sorry, but the look of hate she gave him told him that wouldn't be a good idea. He couldn't meet the white-hot intensity of her stare and looked down at the stone square. The girl turned away and contemptuously walked off. \n\n\"That's Emma Brennan, John's older sister,\" Darvill said. \"She graduated near the top of her class last year and works in the Underlabs. Not a good person to have as an enemy.\"\n\nHe clasped Phil on the shoulder.\n\n\"Watch your back,\" he warned before walking away.\n\n* * * *\n\nSo much for coming to Wargsnouts to make things easier, Phil thought later that evening as he stood under one of the communal showers for his block. The succubi felt just as out of control as before and now he'd managed to piss off one of the Favoured Families. He wondered who'd win the race to kill him first\u2014Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n or Emma Brennan.\n\nHe fumbled for a towel to wipe the soap from his eyes. His hand came into contact with a long filament that was sticky to the touch.\n\nHuh? What was\u2014\n\nHe didn't get a chance to contemplate what it was before he was yanked upwards with a surprised yelp. His hand stuck to the long filament, he was winched up to a dark corner of the ceiling as if caught by an angler.\n\n\"Hello.\"\n\nPhil found himself staring into a pale, pretty face framed with medium-length straight black hair. She wasn't human. The irises of her bright eyes were blood-red in colour. A daemon.\n\n\"Uh, hello?\" Phil said back.\n\nHe noticed there were strange red bumps on her forehead. They looked like shiny red orbs, six in all. The big ones were located just below her temples. There was a another pair close together in the centre of her brow. The last pair looked out from the sides of her head.\n\nLooked out seemed an apt description. Phil had thought they might be some form of jewellery, but they looked too organic...too moist. And they appeared to be looking at him.\n\nEyes, he thought with a greasy feeling in the pit of his stomach. The daemon girl had three extra pairs of eyes and they were staring at him.\n\n\"I'm L'mactia,\" the daemon girl said. \"We're going to have some fun together.\"\n\nPhil heard a wet burbling sound, a little like thick cream spurting out of a nozzle, but filthier. A sticky substance spattered against his lower abdomen. Again he had little chance to think about what was happening as his sides were suddenly gripped by multiple limbs and he was spun on the spot while a sticky membrane was wrapped around him. Before he could even struggle his arms were pinned to his sides and his legs tied together.\n\nHe was released and dropped down onto what felt like a springy hammock made out of sticky white threads. The threads were everywhere. They formed a thick cobweb beneath one corner of the ceiling. Phil was trussed up in the same silk.\n\nMore than wrapped up, cocooned. Cocooned like a fly in the web of a...\n\nFuck.\n\nThe daemon was a spider, a gigantic spider. At least from the waist down. She was human up until then, but past her waist her body swelled out into the bulbous black abdomen of a giant orb web spider. She balanced on slender lines of silk, supported by eight spindly legs. Her upper half\u2014the humanoid half\u2014provided a vivid contrast. Extra eyes aside, she had the face and torso of a gothic beauty. Her skin was alabaster pale and the generous swells of her bobbing breasts were topped with pink, perky nipples. Her full lips were painted a glossy red so dark they were almost black. She looked like a stylish vamp from the old classic movies and her smile held the same promise of illicit pleasures.\n\nPhil knew enough about daemons to know those pleasures would invariably be hazardous to his health. What she thought of as fun would be his fatal. He gathered his breath and prepared to spit out the emergency dismissal incantation.\n\nToo slow. The spider daemon, L'mactia, was already leaning forward to press her lusciously full lips against his in a moist kiss. The spell that would have saved Phil's life was smothered in the pillowy softness of her lips. Her insectile limbs folded around his cocooned body and hugged him tight. He drowned in her kiss. It was like waves of thick, sinfully-sweet syrup flowing over and through him. It was as if those plush lips had expanded to envelop the whole of his body. With her kiss she stole both his breath and resistance.\n\nHer kiss was poison. The moist liquid coating her lips seeped beneath his skin and brought with it creeping paralysis. She continued the kiss until Phil fell limp in her arms.\n\nOnly then did she break off the kiss and release him. She ran a black tongue around her sensual lips. Phil couldn't do the same. His were sealed with a sticky substance. So much for the emergency dismissal spell, or any other kind of spell for that matter.\n\n\"I couldn't let you send me away before we'd had our fun,\" L'mactia said. \"This is better. Nice and quiet. No one will disturb us.\"\n\nIt wasn't all about incantations. Some spells could be cast with hand gestures. Unfortunately Phil hadn't learnt those yet. Even if he had, his hands were stuck to his sides. He couldn't move. He was fucked.\n\nL'mactia glanced down to his crotch and licked her moist lips.\n\nHe could have picked a better word to use there, Phil thought, not liking the hungry look she gave his groin. He'd noticed she hadn't cocooned his cock. That part of his anatomy was free to swing, or in this case stick out perpendicularly from his body like an iron bar. Her venom didn't only have a paralysing effect.\n\nAnother succubus-type daemon. He was in real trouble.\n\n\"That was a nice kiss,\" L'mactia said. \"Just enough to whet my appetite.\"\n\nPhil was helpless as she tugged on the threads suspending his cocooned form and lifted him up into a shadowy corner. She turned around until her head was level with his cock.\n\nShe noticed the trembles running through his body and saw the fear in his eyes. \"There's nothing to be afraid of,\" she said with sultry mischief in her red eyes. \"I'm a spider. We don't bite. We suck.\"\n\nWhich was exactly what Phil was afraid of, but he couldn't do anything as L'mactia lowered her head, wrapped her lusciously soft lips around the head of his cock and drew his length up into her warm mouth. His trembles of fear became trembles of pleasure as her moist lips stroked up and down his straining erection. She murmured wet pleasures as she fellated him. Again it felt like waves of syrupy pleasure were flowing into him, and her sensual lips expanding to envelop every millimetre of his erection in warm softness. He heard sloppy wet sounds and felt creeping relaxation percolate down his shaft as her venom seeped through his skin.\n\nL'mactia bobbed her head faster. She slurped harder and harder on his erection. She moved up his cock and concentrated her effort on his swollen glans. Using her tongue she slathered her aphrodisiac venom all over the head of his cock until his whole erection felt warm and tingly, and so hard he knew he wouldn't be coming down for hours. She used her fingers to fondle his balls and tickle along his perineum. Phil writhed and swayed within his silk cocoon, helpless and unable to prevent the pleasures she was inflicting on him.\n\nA steady stream of pre-cum was oozing from the tip of his cock. L'mactia sucked it up as if it was sweet nectar. Phil thought she was going to take him all the way to orgasm, but she stopped, leaving Phil just short of climax. She tilted her head to look at him, a teasing smile on her glossy lips.\n\n\"You taste nice,\" she said.\n\nShe opened her mouth to reveal the glistening clear strands of his pre-cum. She rolled her tongue around, savouring the taste.\n\n\"I think I'll prepare some special silk for you,\" she said.\n\nShe reached behind her and patted her shiny black abdomen. It had begun to throb and pulsate in a way that was both loathsome and queerly arousing.\n\n\"I see you like the idea of that,\" L'mactia said. \"Naughty boy.\"\n\nShe stepped over his body and moved up until her bloated black abdomen was resting lightly on her chest. It continued to throb and quiver. He heard that lewd liquid sound again, like something being squirted from a nozzle. It sounded thicker and more...obscene this time. A gooey, sticky substance rolled down the outside of his shaft and enveloped his whole erection. It felt like his cock had just plunged into a fluffy soft cushion. The sensation sent shudders of uncontrollable pleasure running through Phil's body. He jack-knifed against his bonds.",
        "\"Oh yes, I knew you'd like it,\" L'mactia said.\n\nL'mactia folded her eight legs around him, hugging him tight to her abdomen. She reached down, put her hands on either side of his head and rubbed his face into the folds of her pussy. His nose was filled with the musk of her sex.\n\nHer abdomen contracted and he heard that licentious burbling sound again. More thick waves of gooey silk rolled down Phil's throbbing erection. He felt like his cock was sliding down a vagina lined with cushions of the finest silk. The orifice at the end of her abdomen continued to make the same lewd, squishy, squirting sounds as Phil's cock was buried in waves of creamy-soft silk.\n\nPhil writhed within the cocoon, every muscle taut as her silken secretions stroked him remorselessly to the verge of climax. If his mouth wasn't sealed he'd have vented his pent-up breath in a gasp.\n\nL'mactia rubbed her fingers through his hair as she pressed his face up against her sex. \"You're holding out well,\" she said. \"Not many men are able to withstand two squirts of my special silk.\"\n\nHer legs wrapped tighter around him.\n\n\"None are able to withstand this.\"\n\nThe tip of her abdomen came down, opened up. L'mactia gave a little erotic grunt of pleasure as Phil's hard-on was drawn up into a warm, tight and quivering orifice. Moist walls of flesh contracted and throbbed around his cock. Her abdomen began to swell and Phil felt a powerful suction tug at his erection.\n\n\"Here it comes,\" L'mactia said. She let out her breath in a sensuous sigh.\n\nHer abdomen did the same and Phil and thrashed as wave after wave of luxuriously soft silk was squirted over his embedded cock. It frothed up into soft pillows and her undulating walls squished them into his straining erection. Loops and strands of sticky filaments were spun around his penis and he jerked and bucked as they tugged him back and forth, setting off explosions of bliss as they rubbed and tugged against him. The orifice at the tip of her abdomen was a factory wrapping one irresistible pleasure after another around his trapped penis.\n\nPhil felt his whole body tense up. He was coming and there was no way to stop it. L'mactia sensed it and clasped him tight to her body. She pressed his face into the wet folds of her sex. She released a loud sigh of pleasure. Sticky silk bubbled up out of the end of her abdomen and glued their bodies together. At the same time Phil felt an orgasm roll up from his toes, travelling up through his body before erupting out of his throbbing penis and into her smothering pillows of soft silk. He shuddered in her embrace as he released thick ropes of semen to mingle with her own sticky secretions. Her abdomen slowly throbbed, drawing out the ejaculation with undulating waves of stimulation. She sucked his seed up into her body.\n\n\"You are tasty,\" L'mactia said. \"It's a pity I can't take you back to my larder and enjoy you at my leisure\u2014our leisure\u2014but those were not my instructions.\"\n\nPhil heard ominous noises emanating from within her abdomen, as if obscene organic machinery was starting up.\n\n\"That was a nice appetiser. Now it's time for the full meal.\"\n\nHer abdomen moved up and down. She squirted another soft pillow of gooey silk onto his crotch and this time it felt like his cock had been engulfed in concentrated depravity. He came again. This time it felt more like a controlled explosion. No, it was more than that. His ejaculation wasn't a single burst, but a constant steady stream. Her abdomen slowly swelled up and down, sucking his semen from him as if his cock was a straw, and the flow of fluids showed no sign of abating.\n\n\"I told you,\" L'mactia said with a seductive smile. \"Spiders suck, and suck, and suck.\" She trailed off in a breathless whisper of pleasure.\n\nPhil jerked within the cocoon as her black widow abdomen continued to pulse rhythmically, drawing semen from his body in an endless ejaculation. It triggered an overwhelming sense of euphoric pleasure in Phil even though he knew she was draining his life away.\n\nHe'd been with the succubi enough times to know what was happening. He recognised the feeling\u2014like a tap had been wedged open. Her abdomen swelled up as she drank his fluids. Unlike the other succubi, the spider daemon was not his, there was nothing to stop her from sucking out all of him until nothing was left but a lifeless, soulless husk.\n\nAnd there was nothing he could do to stop it. Water welled up at the corner of Phil's eye even as the pleasures of a bottomless orgasm coursed through his body.\n\nL'mactia closed her eyes and shuddered orgasmically against him. Phil continued to twitch in time with the pulsing motions of her abdomen as she sucked and sucked. He felt parched. His lips were cracking. His skin was cracking. Within him, underneath the constant flow of bliss, he felt his internal organs start to shrivel.\n\nL'mactia stopped. The orifice at the end of her abdomen released Phil's erection from its sticky clasp. The gooey cushion of silk stretched and then peeled off as she detached from him. Phil wondered if it even mattered. He felt dried up and shrivelled inside. And cold. So desperately cold.\n\nThe spider daemon moved backwards until her face was level with Phil's. Despite the flush of pleasure on her cheeks there was sadness in her eyes.\n\n\"I'm so sorry,\" she said. \"I would rather your end was that final burst of ecstatic pleasure as I sucked up the last of your life. It is not my choice to make. My instructions were to drain enough to make death inevitable and then leave you to face the cold and lingering pain of your final moments alone.\"\n\nShe kissed him lightly on the forehead.\n\n\"Tis a cruel fate to inflict on a man, even for a spider.\"\n\nShe scuttled up into the dark corner and onto dimensions darker still. Deprived of the pleasures of her body, he could no longer ignore the nagging aches starting up all across his withered body. Or the cold, the biting empty cold. His vital functions were slowly shutting down all across his body. He was going to die here, wrapped up in this cocoon.\n\nFunny. He'd always thought it would be one of the succubi.\n\nThe room began to darken around him.\n\nto be continued... "
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "arachne",
        "spider",
        "silk",
        "cocooned",
        "web",
        "warlock",
        "wrapped up",
        "demon",
        "magic"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-summoning-204"
}