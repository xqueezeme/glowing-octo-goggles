{
    "title": "Explanation to the Sorority Ch. 02",
    "pages": [
        "An observant Literotica reader noted that the first story I posted here---Valerie Finds Her Man---was a tale I had posted in a venue that, sadly, no longer exists. It was most gratifying that the reader suggested I should expose my work to a wider audience and share the stories I had done for the blog no longer on the web. Reader feedback and appreciation being so vitally important for writers who do not write for pay, I was thrilled to get the request. In response to the reader's request, I posted Explanation to the Sorority, a tale originally shared in the now-closed venue. This sequel also appeared there. ---Escriterra\n\n--\n\nAfter she had taken me with her strapon that Friday night, Karelle told the girls to consider what they had seen and learned from my demonstration. When we had both recovered sufficiently from our orgasms, and she had removed her strap-on, top, and bra and donned one of the hotel's bathrobes, she escorted me into the suite's bathroom, her hand planted firmly on my naked backside as a means to guide me where she wanted me to go. Reaching my ears as she walked me to a place of some privacy between us were snippets of the girls' conversations as they talked about what had happened that evening:\n\n\"Can you believe what we just saw?\"\n\n\"She really used him. And he seemed to enjoy every bit of it---even when we fingered him.\"\n\n\"Yeah. I never would have imagined that sliding my finger up some guy's butt would be such a turn-on. He was tight and hot, and he wriggled and moaned when my finger was inside him. That was unbelievable.\"\n\n\"Having him squirm while I massaged inside of him---what a trip!\"\n\n\"But the best part was pushing past the entrance of his asshole. That just made it so real about how we controlled him.\"\n\n\"He actually WANTED us to do it to him. Did you see how he opened up when Karelle told him to surrender to our fingers?\"\n\n\"And Nya did it TWICE!\"\n\n\"Was it more fun the second time, Nya?\" Giggles and laughter. \"When you put your finger inside him to get him ready for her strap-on, you were really getting into it. We all saw.\" More laughter.\n\n\"Oh, come on! We all know that every one of us enjoyed finger-fucking Scott in the ass!\" \n\nExcited chatter, laughter, whispered confessions, musings about what tonight would mean for their future encounters with boyfriends---all this swirled through the after-proceedings of the night's demonstration as Karelle ushered me to a private conversation. \n\nAnd you know what? I was proud to have been the male who surrendered himself for their education. \n\n\"You were a very good boy, Scott,\" Karelle cooed as she closed the bathroom door behind us. An expansive granite countertop and sink basin stretched across one wall, and Karelle leaned against it as she considered me standing before her, still naked with my shrunken cock providing mute testimony to the exhausting sexual experience she had just orchestrated. \"Was tonight everything I promised it would be?\" She arched an eyebrow and looked at me.\n\n\"I could not have imagined this night, Karelle. You teased me and toyed with me and strutted me about in front of those girls in ways that, I swear, will give me fantasies that will cause me to jack off until the day I die. And when you slid your strap-on inside me and fucked me, you were a goddess who knew everything about strapping a man. You were just--\"\n\nShe leaned forward abruptly and pressed a finger to my lips. \"Hush, Scott. Your nasty imagination and shameless masturbating when you think of me and what happened tonight will doubtless provide you with some amusement. But remember: This is about MY pleasure and sexual gratification. Can you handle more of that this weekend?\"\n\nUnbelievably (given my totally spent condition) my shriveled dick twitched at those words. My puzzled, yet hopeful, expression conveyed clearly that I thought Karelle 's use of me was over. Her emails spoke only of a Friday night I would never forget.\n\n\"I never promise anything other than one evening. Many men aren't willing to surrender completely. They think that after I spank them once or slip a finger inside them that their obligation is over, and they want to fuck me at that point.\"\n\nShe straightened her elbows in order to push herself forward from the countertop and lean toward me. \"It doesn't happen for them. I kick them out.\" Like a cat prowling around the mouse she is toying with, Karelle moved to my side so she could whisper in my ear. \"But you are a fine and willing plaything, Scott. I have the pledge mistress' permission to reward the girl who did the best job of being a pledge to the sorority. It happens to be Nya.\"\n\nMoving behind me so that she looked over my shoulder at me in the mirror, she continued. \"Nya helped me with my harness for a reason, Scott. I wanted her to see close up how to put it on so that she'd do it well tomorrow for herself.\" Karelle nuzzled my neck, her gaze still locked on mine in the mirror. \"I'm going to give your asshole to Nya tomorrow and coach her in how to penetrate you, to slide in deep and grind against your ass in just the right way to nudge the other end of the strap-on repeatedly against her G-spot, to use your ass for her pleasure. She's going to fuck you while the other girls watch.\"\n\nDid Karelle see the blood drain from my face? She grinned and reached a hand around to tweak and tug on my nipple. \"I really think you'd like that. I take a very active role when I coach, and I'll bet Nya will need a lot of coaching---you know how it is with rookies.\" Pausing for a moment of thoughtful consideration, she mused, \"But she was thorough and enthusiastic when she readied your asshole to receive my strap-on. Perhaps she has a natural talent in these things. Either way, with my coaching and your surrender, I feel certain she will use you well to trigger her own orgasm as she fucks you.\"\n\nIf my poor, exhausted cock couldn't respond at this point to Karelle's teasing, my mind certainly could. Visualizing what Karelle was describing nearly brought a whimper to my lips.\n\nReleasing my nipple and trailing a finger down my ribcage (I shivered), she stepped around me to resume her position in front of me, leaning against the countertop. \"I will require that you have recovered sufficiently to present us all with a firm, stiff erection tomorrow, so . . .\" and she leaned forward and down to grab my flaccid cock between her thumb and the crook of her forefinger, \". . . this little thing had better get its beauty rest tonight.\" And she tugged to emphasize her point. Releasing, she straightened while at the same time untying the fabric belt of the bathrobe so that it fell open, her lithe and sexy body flashing into view for a tantalizing moment. \n\nNot knowing what she would do next, I remained as I was. Naked. Waiting.\n\nKarelle pressed her nude body against me, sealing us together as the bathrobe slid from her shoulders. Mimicking her passionate and controlling behavior in the elevator, she placed one hand on the back of my head and the other on my ass. She again consumed me with her erotic, deep-inside-my-mouth kiss, a hungry and wanton lust transmitted in no uncertain terms straight into the most ancient and animalistic part of my brain.\n\nMy arms encircled her, pulling her tighter against me, receiving and welcoming her lustful attack.\n\nShe broke the kiss and looked in my eyes. \"Do you like my ass, Scott? Look in the mirror and tell me.\"\n\nAgain, this was an easy assignment.\n\n\"It is magnificent, Karelle.\"\n\n\"Perhaps I'll let you slide your tongue inside it this weekend.\"\n\nShe once more devoured my mouth, her taut nipples pressing into my chest. I smelled her arousal.\n\nHow we males sometimes envy the multi-orgasmic woman, for whom only a few minutes' recovery can be enough to allow another intense, pleasurable release.\n\nBreaking the kiss a final time, Karelle twirled in front of me and reached down for her robe. In the process she backed her divine ass into my crotch, trapping my spent cock (which, remarkably, was stirring with signs of life). She ground herself against me for a moment, then stood and slipped on the robe.\n\n\"And if you continue to be an excellent plaything, demonstration sextoy, and confidant for us girls as to why you so enjoy being used and taken---why that turns you on so much and gets you so hard and hot and willing to take a strap-on up your ass when we fuck you---then maybe . . .\" she walked to the door, pausing with her hand on the door handle, \". . . maybe I will allow you to slide your gorgeous, hard cock into my pussy.\" Turning to look at me, she said, \"Maybe I will let you fuck me, Scott.\"\n\nShe left.\n\nHow long did I stand there after that? Fifteen seconds? Fifteen years? I didn't know anything except that Karelle Matthews was going to see to it that tomorrow I would again surrender my naked ass to a strap-on protruding from the crotch of a woman eager to use it on me, and that---if I continued pleasing her with willing submission to her desires and directions for more shameless displays of my nakedness and eagerness to be taken---she would take my cock inside her pussy. In my current state it was not difficult to imagine that Karelle knew as much about fucking a man with her pussy as she knew about fucking a man with her strap-on.\n\nAnd then the ultimate sex organ---the brain---proved its dominance over less resilient sex organs. The thoughts running through my brain about what Karelle had just said triggered the release of hormones that sent blood surging back into my cock.\n\nSeeing myself start to harden in the mirror brought a smile to my face.\n\n\"Scott.\" Knock-knock. \"Scott? Can I come in?\" Knock-knock. \"Karelle said to bring you this.\"\n\nIt was Nya.\n\nShe opened the door hesitantly, peeking around it. I was glad not to be completely flaccid at that moment, given my total nakedness in front of this young, attractive coed. She held another of the hotel's bathrobes in her hand.\n\nI was awkward. My hand moved briefly in front of my crotch (a subconscious reaction, I suppose). Quickly realizing how absolutely silly that must have looked, I moved the hand to my side and tried to be non-plussed. (Right. Like this happened every day.)\n\nNya smiled coyly.\n\nStepping completely into the bathroom, she said, \"Karelle says you should wear this,\" she gestured with the bathrobe, \"to go up to your room.\"\n\nSeeing the puzzlement in my eyes, Nya continued. \"She just told us that one of the sexiest things about controlling a man is knowing that he's waiting for you. It gets her hot to know that he's naked when he's waiting. You won't get your clothes back tonight.\"\n\nThis seemed like an eminently fine arrangement to me. Waiting until tomorrow to get my clothes, and donning the bathrobe in the meantime to go to whatever room Karelle had reserved for me, was a good trade-off for making Karelle hot enough for my body (though at this point, she could have had my soul, as well) to want me to slip my tongue up inside her lovely asshole and drive my hard cock into her glistening pussy.\n\n\"You're to relax the rest of the evening, call room service if you want something to eat, and plan on being ready to go to brunch at 11 AM. Karelle will send up your clothes then.\" Nya's pretty eyes darted upward for moment, recalling whether there were any other directions Karelle had given her. \"Oh, yeah. I'm supposed to help you into this robe.\"\n\nI doubt Nya really had trouble recalling that. She was nervous.\n\nHolding the robe in a fashion men have done for decades as they help their ladies into coats, Nya waited for me to slide an arm into one sleeve. As I reached back to put the other arm in, she blurted out in rapid-fire manner a final set of directions from Karelle. \"Karelle took the belt off of this robe. Let the front hang open. I'm to accompany you up to your room and let you in.\"\n\nWhatever blood had made its way back to my cock instantly retreated.\n\nAnd here is something that never fails to confound me. I would replay this outrageous scene in my mind numberless times in the future, and I knew in this present moment that future consideration of what Nya had just said and done would excite me powerfully. Right now, in the actual situation, it scared the hell out of me. This is often the case with strap-on encounters, too, and is undoubtedly one of their strong appeals. The fantasy is always mind-bending and sexy and completely arousing. (Unending hours, my fist encircling my cock, stroking while imagining all manner of strap-on encounters attest to this fact.) But the stomach-clenching reality of total nakedness in front of the woman, opening up for her, asking her to slide her fake cock deep inside me---that can be really, really scary. I imagine it must be like standing at the door of the plane, contemplating your first parachute jump: All the planning and excitement in the world as you prepare just can't get you ready for the fear, the adrenaline rush, the tortuous teetering on the precipice of willful surrender that courses through your body right before you step out into the nothingness.\n\nSo it was for me hearing those words from Nya. The thought of her walking me down the hall to the elevator, getting into the elevator hoping no one is there when the doors slide open, exiting the elevator with the same dread of seeing someone, and then surviving the trip from elevator to my room---all the time with my naked cock and balls on display---created complete terror.\n\nJust like the first time I opened to a woman's strap-on.\n\n\"We like it that you're okay with showing us your naked body, Scott,\" said Nya. She was nervous. While that admission for her may not have held anywhere near the risk for societal consequences as a heterosexual man admitting that he likes taking a strap-on in his ass during sex (Kristi's first question of the evening, Are you gay? , hinted at both our society's prejudice against homosexuality and its complete misunderstanding of female-to-male strap-on engagement), it was in some ways still a risk for a woman to admit openly that she likes the purely physical, sensual aspects of sex, including objectifying a man for her own sexual arousal. To her credit, Karelle had created a safe place for these coeds to make that admission.\n\nI suspected Nya would quickly become very comfortable telling a man she enjoys seeing him naked and would no longer have a second thought about uninformed, small-minded judgments. I was eager to help her embrace her newfound liberation by being the male sex object she would play with while a true master in the art and science of taking a man's ass helped her appreciate and savor the sexiness and nuances of strap-on play.\n\nNya was indeed a beauty. Maybe 5'8\" and slender with what I guessed were perky B-cup tits hidden beneath a simple shirt of a creamy tan color that was a beautiful complement to her mocha skin tone. She wore fashionable jeans, embroidered down one leg, that were impossibly snug against the curves of her butt. Large, expressive brown eyes were part of a pretty face that also included full, sensuous lips.\n\nHad I hit the jackpot, or what? I was happy to be at Karelle's direction with any woman. To be the toy at the hands of this stunner as Karelle instructed her in using me was phenomenal. \n\nNya left the bathroom, leaving the door open. I followed, the robe billowing out like a Matrix-style duster as I stepped into the room where Karelle and the girls were lounging and talking among themselves.\n\nKarelle reached for her bag and drew out the key card for the room where I would spend the night. She handed it to Nya, looking at me to say, \"Nya will take you up to your room, Scott. She'll let me know when she returns that you've been a dear and followed my directions explicitly.\"\n\nThe girls in the room all chimed in at that point (directions from Karelle?):\n\nJenna: \"We'll see you tomorrow, Scott. It was an incredible turn-on sliding our fingers inside you tonight.\"\n\nKristi: \"Get a good night's rest. You'll need your energy for what's going to happen tomorrow!\"\n\nCelia: \"We all liked seeing you open up for our fingers and Karelle's strap-on. We can't wait to see it again.\"\n\nCindy: \"It was great fun spreading lotion on your naked ass after your spanking, Scott. I can't wait to play with your naked butt again.\"\n\nTalia (now completely over her self-consciousness with explicit language): \"Your cock and balls hanging down between your legs as you spread your asshole open for us looked so hot, Scott. I loved seeing that. When you do it for us tomorrow, I know I'm going to get wet.\"\n\nJoanne: \"Karelle says we'll get to fondle your balls while you get your ass fucked tomorrow, Scott. Sweet dreams!\"\n\nKarelle smiled sweetly at me. \"Take him up to his room, Nya.\"\n\nI hesitated. Nya waited expectantly at the door, holding both the room key and my small satchel. \n\nRising from her seat, Karelle walked to me and whispered in my ear, \"This makes you hot, Scott. I know it. The danger is alluring, especially in the company of a beautiful girl like Nya. You hesitate now, but the rush when you step out that door will be intoxicating, and the afterglow when you get to your room will be delicious. Do this for me, Scott.\"\n\nAnd she returned to her seat.\n\nI had no idea what time it was. Was it late enough that the chances of encountering traffic in the hallway would be small? Was there a conference or convention or something at the hotel that would generate a lot of elevator usage?\n\nThen I realized that, with my hands in the pockets of the robe, it would be simple to quickly draw the front of the robe closed. \n\nKarelle had found yet another way to tease me. I followed Nya out the door.\n\nWe walked toward the elevator, my hands in the pockets of the robe, the front open. No one was in the hallway. In the elevator (again, no one inside), Nya slid the room card into the slot at the top of the bank of buttons and an \"Express to Penthouse\" message flashed across the small LCD screen that was displaying video of a waterfall as an accompaniment to the soothing music playing through the speakers in the ceiling.\n\nClassy all the way, I thought about Karelle.\n\nNya talked to me during the short elevator ride up to the top of the hotel. \"You really blew us away tonight, Scott. None of us expected anything like that.\"\n\n\"Well, I could never have imagined anything like that, either. Does your sorority do this every year?\"\n\nNya smiled. \"I don't really know. The pledge mistress has been telling us all semester that successful initiates would get a special reward, but the sisters only talked about stuff like a fancy party or a night on the town that could include a trip to the local male strip club. No one ever told any of us about this.\" She looked at me as the bell sounded our arrival at the penthouse level. \"I'm glad somebody thought this up, though. My entire thinking about sex has been expanded. Seeing in person how Karelle used you for her own sexual pleasure makes me realize it's okay to do that every now and then with a guy.\" \n\nAs we walked toward the room, I admitted, \"From the guy's perspective, and especially for college-aged guys, it usually takes some special convincing. But once they've experienced it, and they see the benefits of the girl being totally turned on, they get smart about things.\"\n\nWe had reached the room. Nya inserted the key card and opened the door for me. \"I know you're right, and I'm going to get Karelle to give me some good deep-throating tips. I figure I'm already getting the hang of sliding my finger inside a guy's butt, thanks to you.\"\n\nI started to suspect that Nya was in on all of this with Karelle. The way she was teasing me, was comfortable saying what she'd just said. Surely she wasn't an uninitiated college coed. Was she?\n\nI was inside the room, Nya still standing at the opened door, the room card in her hand. \"Give me your robe, Scott.\" In the soft glow of the room's interior, lit as it was by the diffused glimmer of the sconce lighting on the wall by the door, I shrugged off the robe, again naked to Nya's gaze. I handed her the robe, and she gave me my satchel.",
        "\"Tomorrow will be very exciting for me, Scott. I'm really looking forward to it.\" She smiled, turned and left, the door clicking shut behind her.\n\n* * *\n\nKnock-knock. \"Room service.\" Knock-knock.\n\nI was out of the shower, toweling off in the bathroom after what started purposefully as a cold-water, stinging cascade but quickly became a relaxing, hot shower. I needed that to calm me down after waking this morning from a dream in which my hard cock was buried in Karelle's pussy while Nya fucked me in the ass with her strap-on. Leaking wet-dream fluid and not wanting to lose any potential ability for complete and rapid recovery after the first of what I hoped would be at least two Karelle-induced ejaculations today, I went straight to the bathroom from the bed, erection bobbing. I sat on the john long enough for my hard-on to diminish to a point allowing me to urinate before stepping into the shower.\n\nI hadn't ordered room service.\n\nKnock-knock.\n\nTowel wrapped around my torso, I cracked open the door.\n\n\"Maybe you have the wrong room. I didn't order room service,\" I said to a pretty hotel employee. She was holding a tray on which sat a bowl of fresh, cut-up fruit.\n\n\"Room 3015. Scott Gooding, correct?\"\n\n\"Yes, but---\"\n\n\"A Ms. Matthews sent this up for you.\" She nodded toward the fruit.\n\n\"Oh. Yes, then please come in.\"\n\nThe young woman came in and placed the tray on the desk next to the window. She began rearranging the few things I'd pulled from my satchel the night before that weren't now on the bathroom countertop, in order to put the bowl, utensils, and a napkin on the desk.\n\nTurning toward me (and I was standing awkwardly, towel around me and obviously having just emerged from the shower), she reached into her pocket and pulled out a note card embossed with the hotel's logo on the front. She handed it to me, but then stayed where she was instead of leaving.\n\nThis was odd. I opened the card. It was from Karelle.\n\n\"Scott, you may want a bite or two before our brunch. Enjoy the fruit. They find the absolute best fresh strawberries in the area. The young lady is waiting for you to give her whatever towel or sheet or blanket you have concealing your gorgeous cock from her view. When you do, you will be completely naked in front of her. That is as I have planned. Knowing you are doing it for me will make me hot and wet for you. ---Karelle\"\n\nThe young woman waited.\n\nFrozen in place, I re-read the card. I glanced nervously at the room service attendant in front of me. \n\nThe young woman stood there. Waiting.\n\nI unwrapped the towel from around my waist and let it drop to the floor. Swallowing hard and feeling the warmth of the embarrassed blush I knew was rushing up my neck to my face, I bent down to pick up the towel and hand it to the attractive young lady in front of me. \n\nShe took the towel from me but still didn't leave. Looking up and down at me as I stood nude in front of her, she pulled a cell phone from a different pocket, flipped it open and punched auto-dial.\n\n\"Yes, he is naked in front of me, Ms. Matthews,\" she said into the phone. \"Yes, I will tell him.\" She held the phone away from her mouth slightly and said, \"Turn around for me, Mr. Gooding.\"\n\nKarelle was teasing me again. Using another woman to tease me in absentia. She knew this would turn me on.\n\n\"Ms. Matthews directs that you lean forward, place your hands on your knees, and arch your back. She says you will know well the position she describes.\"\n\nKarelle, you minx!\n\n\"Yes, ma'am. He has a very nice ass. Yes, I will tell him to wiggle it for me.\"\n\nThe young woman so directed. I complied.\n\n\"Stand up, Mr. Gooding, and approach me.\" Still on the phone with Karelle, the girl waited for me to walk toward her.\n\n\"Thank you, Ms. Matthews. I truly appreciate the opportunity to fondle his balls.\"\n\nMy cock started its ascent from semi-rigidity to full hardness. The girl reached her hand toward my crotch and cupped my balls.\n\n\"Yes, that seems to be the case. I would guess that he hasn't masturbated since he came for you last night.\"\n\nKarelle had sent the girl to ensure I had followed her directions.\n\n\"Yes, ma'am.\"\n\nThe young woman snapped the phone shut, my testicles still in her hand. Looking at me, she said, \"Ms. Matthews told me what you did last night.\"\n\nReleasing my balls, she walked to the door and left.\n\n* * *\n\nThe fruit was good and just the right amount to tide me over until brunch. At 10:34 I was lounging on the bed, watching TV.\n\nKnock-knock. \"Room service.\" Knock-knock.\n\nExpecting the girl who had brought the fruit, I brazenly opened the door, completely naked.\n\nIt was an elderly hotel maid. Her shocked expression told me I had erred not only in my assumption about who was behind the door, but also about what effect my nudity would have.\n\nDropping my clothes and shoes, she fled down the hall.\n\nShe would either report the incident to hotel management, or she would share it in hushed tones and giggles with the cadre of maids at the hotel. I could only hope for the latter.\n\nHastily gathering my clothes and shoes as I stretched through the doorway, I retreated into the safety of the room, finally able to get dressed.\n\nThe only thing is, my briefs weren't included.\n\n* * *\n\nKnock-knock. \"Scott?\" Knock-knock.\n\nIt was 11 AM. I recognized Karelle's voice.\n\nRelieved, I opened the door. She and Nya were standing in the hall.\n\n\"We're ready to treat you to brunch, Scott,\" Karelle said. \"You're going to need your nourishment to be ready for the rest of the day,\" she said, smiling at me as though she were talking about a trip to the beach or to the ballpark. Nya wore her own smile along with the snug jeans of the night before but with a different top.\n\nWe walked toward the elevator as Karelle said to Nya, \"I sent one of the prettier, younger hotel employees up to Scott's room this morning with a bowl of fruit. He continued to prove his eagerness to submit to our desires by displaying himself to the young lady while she fondled his balls.\"\n\nNya's shocked expression quickly softened. In a husky voice, she said, \"I don't believe I've held his balls myself. I envy that hotel employee.\"\n\nThis would be a very long morning and brunch, it was clear. Karelle and Nya were clearly going to tease me unmercifully in advance of my surrender to Nya in front of the rest of the girls.\n\nWhen we were in the elevator and Karelle had punched the button for the floor where one of the hotel's restaurants was located, I said, \"It's a bit uncomfortable without any underwear.\"\n\nNya looked at Karelle and smiled, just a bit, before looking down at the floor.\n\n\"You had leaked into your briefs last night to the degree that they really weren't wearable, Scott,\" Karelle said as the elevator began its descent.\n\n\"But if you keep teasing me, I'll leak right through my slacks for everyone to see.\"\n\n\"Then you better find a way to avoid that,\" said Karelle, \"because Nya and I have every intention of enjoying ourselves. After all, you're here to explain why all of this excites you. Tell Nya why the teasing makes you hard.\"\n\nThe elevator doors slid open. An older couple smiled as they waited for us to exit into the lobby.\n\n\"Scott?\" said Karelle as we walked across the lobby toward the restaurant.\n\nGood grief! She expected me to say this to Nya right out in the open. I walked close to Nya to try to minimize the volume I'd have to produce during my explanation.\n\n\"It's just incredibly exciting to hear a woman tease me sexually with her words and questions because I believe she's arousing herself in the process. For the woman to be hot and taking charge of teasing me to make herself even hornier is a huge turn-on.\"\n\nI was nervously looking around, trying to ensure no one in the lobby was close enough to hear what I saying to Nya as we walked to the restaurant.\n\n\"Good morning, folks. Three in your party?\" The hostess held an armful of menus inside leather covers.\n\n\"Yes,\" said Karelle, \"and could we have one of your circular booths, please?\"\n\nIt figured that Karelle would be familiar with this expensive hotel and its restaurants. Class begets class.\n\n\"Right this way.\"\n\nAfter settling into the booth -- Nya slid in first and Karelle motioned me in after her -- I was seated with the two women on either side of me. The circular booth was underneath a sort of gauzy tent, matching the vaguely mid-Eastern decor of the restaurant. Backing up to a wall, and with the tent-like covering over us, we were seated in what had obviously been designed to be a private eating area.\n\nWithout hesitation, the two of them scooted next to me, much closer than the table settings in the booth indicated were the normal seating positions for the diners. Karelle, seated to my left, slid her right hand onto my thigh underneath the table.\n\n\"We'll let you have a few moments to look over the menus before your waitress comes to take your order. Before Stephanie arrives, shall I have one of our attendants bring you all ice water?\" The hostess had a slightly puzzled look on her face, no doubt caused by the huddle she saw in front of her. Karelle was non-plussed.\n\n\"Yes, ice water would be nice. And could the attendant also bring some of your wonderful croissants? I know we'd like to nibble on them as we consider what else we'll want for brunch.\" Karelle smiled at the hostess.\n\n\"Certainly. We'll get those out quickly.\"\n\nAs the hostess walked away, Nya put a hand on my other thigh. Karelle turned to me and said, \"In truth, Scott, I did rinse out the cute little briefs I bought for you, and they're quite dry in my suite right now.\" Nya's hand slid to my crotch. \"But it's a convenient ruse, don't you think, that I said your briefs were in no condition to be worn.\" Nya carefully, slowly began unhooking my belt. \"Now, you have nothing on underneath your slacks. That makes it so much easier to pull your cock out underneath this table so we can play with it during brunch.\"\n\nNya giggled. She was getting much more insistent with the belt buckle. Looking quickly around the restaurant, she reached her other hand underneath the table and finished unbuckling my belt, opening it. Karelle's fingers were at the button of my slacks, deftly making quick work of the task so that only my zipper was now keeping my slacks closed. \n\nThe women returned their hands to the table, opening their menus.\n\n\"Now, Scott,\" said Karelle, \"unzip.\"\n\nI've described the alcove we were in. No one would be able to walk behind me. But the table was large enough that the server would have to lean over it to place our plates in front of us. Would that afford a view of my naked cock?\n\nI blushed a deep red, I know. \n\nPerusing the menu, Karelle said, \"Scott?\"\n\nThat stomach-clenched feeling I've described before as one of the most powerfully alluring aspects of sex play with a knowledgeable woman? The fear that you can't do what she's just said, but you want to more than anything? The surrender you have to make, the hard swallow accompanying the decision that your pleasure----and the woman's---- depends on your compliance?\n\nTake all of that and multiply it by being in a hotel restaurant as you consider exposing your naked cock underneath the tabletop so two---not one, but two---beautiful women can toy with you, and you will understand why I did what Karelle directed.\n\nNya's eyes widened when her hand moved to my crotch and touched my naked cock. \"This is so-o-o-o-o hot,\" she whispered.\n\n\"I do enjoy this particular tease a great deal,\" said Karelle, still looking at the menu. \"I've only found a couple of guys with the guts to go through with it, though,\" she said thoughtfully, laying the menu down. Turning to look at me, she said, \"One, in spite of his exposure, turned out to be less-than-inspiring with his tongue.\" Nya had encircled my cock with her fingers, testing my hardness. \"The other, though,\" Karelle smiled dreamily, \"not only licked me deliciously, he also followed directions extremely well when I told him to back up against me as the way to slide my strap-on inside his ass and then fuck himself on my strap-on with a back-and-forth motion as a I held completely still, enjoying the sight of the dildo going in and out of his asshole.\"\n\nNya's hand on my naked cock. Karelle's tortuously arousing description. The intoxicating presence of these two women, one a novice at the hands of her mentor, and me as the sextoy being shared by both of them.\n\nI was rock-hard beneath the table, throbbing under Nya's feathery caress.\n\nDrawing her hand away as the server approached, Nya whispered, \"I'm getting wet.\"\n\n\"Hello. My name is Stephanie. Please let me know anything I can do to serve you today,\" smiled the girl.\n\nMentally I screamed, Put me out of my misery and give me an orgasm! in response to Stephanie's statement, my naked cock bobbing and pulsing underneath the table.\n\n\"Thank you, Stephanie,\" said Karelle. \"I think we're ready to order. It's our treat for our guest this morning.\" Turning to me and smiling, she asked, \"What would you like, Scott?\"\n\nPut me out of my misery and give me an orgasm! The involuntary mental command issued itself again in my brain.\n\nI cleared my throat. Stammering, I said, \"Omelette, a, um, spinach omelette would be good.\" I croaked it out, still trying to come down from the intensity of Nya's tease at Karelle 's command.\n\nStephanie looked at me quizzically. \"Is everything all right? Would you like more water?\"\n\nI saw both Nya and Karelle smile into their opened menus.\n\n\"No, thanks. I'm fine. Just a little hoarse.\" And I took a sip of the water.\n\n\"I'll have your strawberries and cream along with an omelette myself,\" said Karelle. \"Make mine spinach, too.\" She handed the server her menu along with mine.\n\n\"I want something pretty light,\" said Nya. \"I'll be working out not too long from now,\" she sidled against me, adjusting herself in her seat to emphasize what \"workout\" meant, \"so why don't I go with some scrambled eggs for energy and complex carbs for endurance---say, some wheat toast and jam?\"\n\nHanding her menu to the waitress gave her the opportunity to drop one hand underneath the table. I knew what was coming.\n\n\"Excellent. I'll get this right out for you,\" said Stephanie, turning on her heels and heading to the kitchen.\n\n\"Karelle, Nya,\" I moaned, \"please don't tease me like this. I'll come if you continue this, and I don't want to come. I want to reserve my orgasm for your pleasure, Nya,\" I said, turning to the black girl, \"when you fuck me.\"\n\nKarelle reached under the table to fondle my hard cock. \"You are saying all the right things, Scott. You left off, though, that another reason you don't want us to do this is because it will cause you to leak, and without any briefs on, everyone in the restaurant will see a wet spot on the crotch of your trousers when we leave.\" With that, she slid her hand up my shaft to the head of my dick, which was (as you can guess) beaded with a droplet of pre-cum. She drew a fingertip across it in a motion designed to transfer the bead of liquid to her finger. Then she withdrew her hand, holding it in front of her as she turned to look at me.\n\n\"That really would be embarrassing, wouldn't it?\"\n\nAnd she slipped her fingertip into her mouth, savoring the taste of me as she looked me in the eye.\n\nI was mesmerized and couldn't look away from her lustful gaze. Nya squirmed against me. \"Oh, god, this is going to soak a wet spot through my panties AND my jeans,\" she said.\n\nSo it went throughout the entire brunch. Once, when Stephanie was leaning over to collect my plate, I almost fainted with embarrassment when Karelle removed the napkin in my lap just as Stephanie was closest to the edge of the table where I sat, hard cock now exposed. If she saw anything, it wasn't apparent in her reaction. She gathered my plate and headed back to the kitchen.\n\n\"She almost saw you then, Scott, didn't she?\" teased Karelle. Nya saw what Karelle had done.\n\n\"It's important, Nya, that if you toy with a man in public, you know exactly how to extract the greatest amount of excitement from the situation,\" was her simple explanation for her actions. She replaced the napkin, and Nya quickly grabbed my cock. \n\nBy now, the continuous leakage of pre-cum produced enough liquid that it oozed down my shaft over Nya's fist. She drew the hand up, trying to direct all the glistening liquid onto her knuckles, then pulled her hand into view.\n\n\"Go ahead. He'll get excited seeing you do it,\" said Karelle, looking at Nya.\n\nLike a cat lapping at a saucer of milk, Nya tasted me for the first time as I watched, my eyes locked on hers as her tongue traveled sensuously over her hand. \n\nTheir tease was mind bending!\n\nAt that point, I thought things could get no more intense.\n\nI was wrong.\n\nKarelle reached under the table, saying, \"I am taking pity on you, Scott. You're being such a good boytoy for us.\" She again roamed a fingertip across the head of my dick, searching for any lingering moisture there. Coating her fingertip with the small amount of pre-cum that remained, she withdrew her hand and placed it on the table in front of me, one fingertip slick with a small amount of what she'd expertly wiped off the head of my naked cock.\n\n\"This is deliciously naughty and nasty, Nya. Watch as Scott will get you REALLY wet.\"\n\nWith that, Karelle advanced her fingertip toward my mouth. I froze.\n\n\"Open, Scott. You were so sexy and arousing when you did it last night with your asshole. Open now with your mouth.\"\n\n\"Shit,\" whispered Nya.\n\n\"Scott, this is a personal hot button for me. If you want to turn me on incredibly, suck my finger clean right now.\"\n\nI closed my eyes, but I opened my mouth. Karelle's finger slid inside, and I sucked it clean. But she didn't withdraw it. \"Ummm, that feels good and so sexy,\" she said, stroking her finger inside my mouth. I opened my eyes to see her watching me suck her finger. \"Your mouth is soft and wet and warm, and this feels so sexy, knowing that you just cleaned my fingers of traces of your own arousal.\"\n\nNya whispered urgently to Karelle, who was dreamily watching me suck and toy with her finger. \"Please, please---can we go now. Karelle, I can't stand it anymore. My clit is throbbing. This is too intense for me to stand. I swear, I'm going to have an orgasm right here.\"\n\nI continued sucking Karelle's finger.\n\n\"Then do, Nya. Just pretend that what you're seeing is exactly the way Scott will suck on your hard nipples very soon.\"\n\nNya shuddered next to me. She stiff-armed the table, a muffled gasp coming from her throat. That made my cock twitch. I almost bit down on Karelle's finger with the excitement of knowing that Nya was having an orgasm right next to me.\n\nKarelle grinned and extracted her finger slowly. \"You get Nya really excited, Scott. Does that make you hot enough to want to surrender to her the way you did to me last night?\"\n\nStephanie was advancing toward our table with the check.\n\n\"Yes. Completely hot and willing for you to fuck me deep and slow and in the best way to give you an orgasm fifty times more intense than the one you just had,\" I said to Nya quickly in order to get the words out before Stephanie reached earshot. Slumped in contentment against the back of the booth as she looked at me, Nya smiled and licked her lips.\n\nKarelle leaned over and kissed me chastely on the cheek. \"Good boy,\" she whispered as Stephanie arrived at our table.\n\n* * *\n\nKarelle's artful manipulations cleaned me off well enough that the small amount of leakage that escaped as I willed my cock down enough to fit back into my slacks when I zipped up was easy to wipe clean with the napkin. Karelle and Nya thoughtfully ceased their teasing after Stephanie took away Karelle's credit card, and I settled down sufficiently not to have to worry that I'd embarrass myself with an obvious hard-on pressing against a wet spot in the crotch of my trousers as I exited the restaurant.",
        "Leaving the restaurant, we again boarded the elevator. Getting off at the floor where Nya's six sorority sisters waited for us, we walked toward the room, Nya's arm encircling mine as she hugged against me while we strolled, tortuously slowly, as Karelle dallied down the hallway looking at the paintings. \n\nI knew she held probably only a passing interest in hotel hallway art. She had a much more intense interest in teasing me, however. Nya was frustrated, too, at Karelle's languid pace.\n\n\"I really want to fuck him, Karelle,\" she said, standing impatiently in front of the door to the room. \"Can we please get on with it? What you did in the restaurant gave me one orgasm, and I can't wait for the next one when I hump his face.\"\n\nNya was a fast learner.\n\nSmiling, Karelle finally joined us at the door, knocking lightly. She reached down and squeezed my butt. \"Goodness, but my pupil and her toy are impatient!\"\n\nJoanne opened the door. \"They're here!\"\n\nWe stepped inside to find that the room arrangement was the same: a semi-circle of seating around the area where I would surrender myself to Nya's pleasures as Karelle coached and the other girls watched.\n\nI was forced to relate in exquisite detail everything that had happened in the restaurant. The girls listened, often squirming in their seats, whispered intonations of excitement or disbelief ---or a combination of both---surfacing throughout my description. When I'd finished, Cindy rose immediately from her seat, strode to stand in front of me, and pushed her finger between my lips. She looked at Karelle and said, \"I only had one more demerit than Nya. I figure that entitles me.\" She returned her eyes to mine and said, \"Suck.\" I complied. She stroked her finger in and out of my mouth, turning it in a fashion vaguely reminiscent of how she fingered my asshole the night before.\n\n\"This is a truly sexy, arousing act,\" Karelle said to the girls as I continued sucking on Cindy's finger. \"It's loaded with implications, though, a guy sucking like this. If he does it to you, it may very well mean you've found someone who will delight you with his oral skills on other parts of your anatomy.\"\n\nKarelle was right. Given the chance, I would have performed magnificently on Cindy's pussy and her clit, I was sure.\n\nCindy's impulsive action at the conclusion of my story about what happened in the restaurant made it clear that everything Karelle had set up and so masterfully directed for these coeds was having an effect on their views of female sexuality. I seriously doubted any of them would any longer put up with bullshit from insensitive, arrogant boyfriends. It was also clear that, in their own ways and on their own terms, they would begin exploring avenues to test whether a guy might be a candidate for providing the experiences they'd seen and heard about in the last 24 hours.\n\nNya spoke up. \"Enough, Cindy. This is my reward for being the best pledge. It's time for me to take Scott's ass.\"\n\nAs in the restaurant, the excitement those words produced in me made it difficult not to bite the finger inside my mouth. I released Cindy's digit and drew in a big breath, signaling my arousal to all the girls.\n\n\"Before that, Scott, this is the place for a summary. Your role for us has been to provide insight into the male psyche to help us all understand the appeal of surrendering yourself and opening up completely so that a woman wearing a strap-on can fuck you in your asshole. Please summarize as you and Nya disrobe.\"\n\nNya stood up and eagerly began shucking off her clothes. She wriggled out of her tight jeans in what must have been record time.\n\n\"It's like I said before. I find it incredibly sexy and arousing, and it makes me hard as a rock to know the woman I'm making love to is intensely sexually turned on, including the times we have sex without her using a strap-on.\" I was out of my shirt. \"But every now and then, because it's something that really drives the woman wild with lust, I thoroughly enjoy being the sex object, acting like a little tramp for her pleasure as she focuses completely on the purely sexual side of the interaction, looking for the most intense way of ramping up the strength of her orgasm as a result of what she sees, what she feels, what she tastes.\" I was out of my shoes and socks at this point, and my slacks were at my feet, freeing my cock, which was hardening rapidly as I continued my \"summary\" for Karelle and the girls. \n\nKicking away the slacks to stand naked in front of them, I took the three steps between me and the couch and reached behind Talia to retrieve one pillow and behind Jenna to get the other pillow. I concluded the summary as I laid the two pillows on the floor in the center of the semi-circle and motioned Nya, who was now completely naked, to stand in front of me.\n\nNya needed no urging. Her lovely pussy was quickly only two inches in front of my mouth.\n\n\"When my partner uses me to have the kind of mind-blowing orgasm that I want to produce right now for Nya in front of all of you, there is nothing else in the world that is a bigger turn-on for me.\"\n\nNya had spread her pussy lips wide apart. Her distended clit was pink, clearly visible, and sexy beyond description. \"Suck my clit, Scott,\" she directed urgently, planting her pussy squarely against my mouth.\n\nKarelle said, \"A fine summary, Scott. Thank you. As your mouth is full right now, we won't require any more explanations.\"\n\nThe girls giggled but quickly fell silent. I'd never been in the company of a group of women watching a porn movie, and that's the only thing I could think of that might have compared to what was going on right now in front of them. I had no way of knowing whether what the girls said at this point is anything close to what women might say, for instance, at a strip club watching the guys get naked. What they DID say, though, certainly increased my arousal (again, if that were even possible).\n\nNya was humping my face enthusiastically. \"Damn, Nya, you're going to erase his lips if you keep that up!\" exclaimed Kristi.\n\n\"I like it, too, when a guy sucks my clit,\" said Cindy.\n\nJenna said, \"Make him put his hands on your butt, Nya. It feels great when a guy is so hot for eating you out that he grabs your ass and pulls you even tighter against his face.\"\n\nJenna must have been experienced receiving cunnilingus. Her suggestion was excellent, though, and I reached behind Nya to plant my hands on her tight, firm, rounded ass and pressed her pussy even tighter against my face.\n\n\"Hump him good, Nya. You're representing all of the pledge class of '08!\" cheered Celia.\n\nAs it was the night before, my cock was stiff and pulsing as I orally serviced the woman whose legs were planted on either side of my face. As she held my face against her crotch, directing me precisely as she wanted me while I sucked her clit and tongued her pussy, I could occasionally steal a glance upward. Whereas the night before, Karelle had kept on her top, Nya was nude. I got a glimpse of the undersides of her firm tits, which were capped with long, firm, erect nipples.\n\nIf a guy sucking on her finger was a hot button for Karelle, one of mine was taut, erect nipples. Nipples that broadcast the woman's sexual arousal. A lovely pair of breasts capped by hardened nipples that jut out so far the woman's sexual arousal can not be disguised no matter how thick the bra cups . . . well, even the thought of that can make my dick hard. \n\nNya was very turned on if her nipples were any indication.\n\n\"Ummph, ummph,\" Nya groaned as she struggled toward the inevitable orgasm that she was clearly trying to delay in order to prolong the pleasure. I was having none of that, and I redoubled my efforts on her clit. I wanted her to have an intense orgasm as soon as possible because I was mad out of my mind to be fucked to my own intense climax.\n\n\"Aaagh,\" screamed Nya, shuddering through a long orgasm. The contractions of her pussy around my tongue let me know her climax was deep, strong, and overwhelming. She backed away from me, nearly falling down, before dropping to her knees on the carpet and hugging her breasts in front of her as the aftershocks continued to course through her nude body.\n\nI was entranced by the sight and incredibly happy and proud that I'd given that gorgeous young woman such a great orgasm. It startled me when Karelle touched me on the shoulder.\n\n\"Nya and I have decided on the position she's going to take you,\" Karelle said to me as Nya finally stopped shuddering in pleasure. Leaning into my ear as I remained on my knees on the pillows, naked and erect in front of the girls, Karelle said conspiratorially, \"Well, it wasn't so much a mutual decision as a suggestion I made that Nya found to be intensely erotic.\"\n\nKarelle got the girls' complete attention with that statement, and the excited chatter about how Nya had really used my mouth and face as a way to get off quickly trailed away.\n\nKarelle positioned herself on the floor in front of the couch between where Talia and Jenna were sitting and scooted back up against it. Bending at the knees, she spread her legs open and patted the floor in between them. \"Here, Scott. Come sit here and lean back against me.\"\n\nI swallowed hard. It took only that much description for me to know what was coming. My cock bobbed in anticipation.\n\nNya had recovered enough by now to get up and walk to Karelle's bag. She drew out the odd-shaped dildo and walked back to drop to her knees in front of me. I was now seated on the floor and scooted completely back against Karelle. My back was pressed into her breasts, and she had drawn her legs up enough that I was able to rest my upper arms on them. I spread my legs, and Nya walked on her knees forward enough to lean toward me, one arm supporting herself as she placed her hand in front of my crotch. She held the dildo in front of me as Karelle had done the night before.\n\n\"You all should have seen his eyes when Karelle told him to suck the pre-cum off her finger in the restaurant. That was the hottest look I've ever seen a guy give to a woman,\" Nya told the girls. \"Look at me like that and get this good and wet for me to put into my pussy,\" she said.\n\nComplying on both counts was easy. With my gaze locked on Nya's eyes, I opened my mouth and let her slide the dildo inside. Then, as I slurped at it and sucked on it and generally made a display of getting it good and wet, I looked at Nya with abject lust and abandon.\n\nI truly did want to be fucked by this ebony beauty.\n\n\"She's a very good student, Scott. She may even be a natural,\" said Karelle softly into my ear. I quickly realized that one reason Karelle had suggested this position for Nya's taking of my ass was because it would allow her to whisper sexily to me throughout my entire fucking. \n\nMy cock twitched at the thought as I sucked on the dildo.\n\n\"That's good,\" Karelle announced, and Nya withdrew the purple plastic implement from my mouth. Nya backed away and stood to slide the end that had just been in my mouth inside her slick pussy.\n\n\"Does it feel good, Nya?\" Joanne asked.\n\n\"Ummmmm,\" was Nya's only response. She seated the dildo and reached for the harness.\n\n\"You like watching the woman strap in, don't you, Scott?\" Karelle said into my ear. \"You like seeing her ready herself to slide her strap-on inside you, isn't that right?\"\n\nI was hoarse with excitement when I replied. \"Very much.\"\n\nThen, without warning, Karelle put her hands behind my knees and lifted. The result was that I slid a ways down the front of her top. The back of my head was now pillowed against her breasts.\n\nMore important, she had opened me up for Nya. Holding my legs up as she was meant that Karelle had put my upturned and naked butt on display. Nya reached for the bottle of lotion that Talia handed her, and squirted a generous amount into her hand. The stiff phallus jutting from her crotch moved sexily with her motions.\n\n\"This is for your ass,\" she grinned, and she laid her hand against my upturned butt right at the cleft between my cheeks. Quickly pressing the copious amount of lotion in between my cheeks, she thoroughly coated my anus and surrounding area. Then, scooping excess lotion onto her finger as it ran down between my cheeks, she rolled and slid her finger in the furrow that was my shameless display before her. When her finger was generously coated, she placed the tip squarely against my hole and said, \"Open it for me, Scott.\"\n\nShe was really a good student! Karelle reiterated this: \"We talked about how to take you, how to get you as hot and hard as possible.\" Karelle rubbed my shoulders gently as she continued her commentary. \"She's going to push into you with her finger, Scott.\"\n\nNya advanced her finger, slipping just the tip inside me. Holding it there, she said, \"That's right. Karelle told me what to do to make you crazy. That will make me crazy, too. I 'm so hot and wet right now, I can't wait to fuck you.\" She slid her finger deeper, and I opened wider for her.\n\nThey kept this tag-team commentary up for an agonizing five minutes until I was panting and shamelessley flexing open my asshole and clamping back down on Nya's finger in a wanton attempt to get her so hot that she had to immediately take me with her strap-on. I'm sure Karelle orchestrated this tease beforehand.\n\nNya finally withdrew her finger. Karelle pushed up from lying back against the couch, and as a result I was rocked forward to sit opened-legged on the floor in front of Nya.\n\n\"Off the couch, ladies. We need it,\" said Karelle. \"Now.\"\n\nTalia and Jenna scrambled off the couch, and Karelle seated herself in the center of it, scooting back completely. She drew her legs up and again indicated that I was to place myself in front of her, comfortably ensconced against her breasts and between her legs.\n\nI didn't need a second invitation. \n\nNya stood in front of the couch, the strap-on protruding from her crotch. Her firm tits and hard nipples jutted out proudly, matching the protrusion of the dildo. She was a black panther, salivating before pouncing on her prey.\n\nI slid down without prompting, presenting my opened and twitching asshole to her view. Nya began smearing lotion all over her fake cock.\n\n\"Isn't she beautiful like that, Scott,\" Karelle said huskily. \"Aren't you desperate for her to take you?\" \n\nI whimpered shamelessly in front of the girls.\n\n\"She's going to drive her dildo deep inside you, Scott. Can you take it? Can you take it?\"\n\nNya finished with the lotion on her strap-on and leaned forward to wipe the excess on her hand across my opened asshole.\n\nKarelle again grabbed behind my legs, raising them, and this time I was perfectly positioned, my ass at the edge of the couch, my legs in the air, held there by Karelle. The back of my head was again lying against her breasts.\n\nI was again being displayed by Karelle for Nya's pleasure.\n\n\"That is so sexy,\" Nya said, looking at me. Specifically, looking at my opened hole. Raising her gaze to Karelle's eyes, she said, \"I would have been completely turned off seeing this before you educated us, Karelle, but now, knowing that I'm going to use this strap-on to give him as much pleasure as I give myself, I can't think of anything hotter than what I see right now.\"\n\nShe dropped to her knees, positioning the strap-on at the entrance of my asshole.\n\n\"Beg her to do it to you, Scott,\" Karelle ordered. \"Beg her to fuck you in the ass.\"\n\nThey had planned this in every detail.\n\n\"Ask me for it, Scott,\" Nya said, holding the base of the dildo in her fist and tapping the end of it against my asshole. \"Beg me to slide it inside you.\"\n\nWas I answering Karelle? Was I answering Nya?\n\nDid I care?\n\n\"Please, you know how much I want it. You know how much I want you to be incredibly turned on and desperate to fuck me. Give yourself all the pleasure you want using my body as your sex object. That turns me on so much. Please, Nya, fuck me now.\"\n\nNya slid the dildo into me with a single shove. She was sealed against my ass when she bottomed out inside me, the front of her thighs pressed into the couch beneath my upturned ass.\n\n\"Joanne,\" said Karelle, \"put lotion on your hand and start to stroke Scott's cock.\"\n\nMy asshole spasmed around Nya's strap-on.\n\n\"Kristi, lightly stroke his balls. You'll need to draw them up toward his belly a bit so you don't interfere with Nya driving the strap-on inside him.\" \n\nKarelle was pushing me quickly toward sensory overload. With Joanne's and Kristi's hands on my cock and balls, Nya's dildo pressing against my prostate, and Karelle saying incredibly nasty, sexy things in my ear, I was mightily worried about passing out from pure sexual intoxication.\n\nAnd then Nya began fucking me, stroking in and out, her hands gripping the top of my thighs for leverage as she pounded into me. I was opened completely to her, enjoying the intense sensations of the dildo sliding across my prostate. Whereas the night before Karelle had orgasmed within only a few strokes, Nya was taking her time building to climax.\n\n\"She looks beautiful like this, Scott,\" Karelle said into my ear. \"See how her tits jiggle when she strokes? That is incredibly hot.\"\n\nShe was right. Nya's firm tits jiggled sexily, and the rock-hard nubs of her long, distended nipples provided points of focus as I marveled at the nude, mocha-skinned princess in front of me. If Karelle kept pointing out these things, she was going to drive me into an orgasm whether Nya was close or not.\n\nFortunately, Karelle's words seem to arouse Nya, too.\n\n\"Grind against him, Nya,\" Karelle directed. \"Squirm against him so the end inside you presses into your G-spot.\"\n\nWhatever Nya did in response as she glued herself against my flanks was the thing that sent her over the edge. And me along with her. She came, jerking like a rag doll on the end of a string. Her eyes rolled back in her head and a primal, guttural moan escaped from her throat as she climaxed.\n\nI shot streams of cum up onto my chest and belly as a result. \"Stop, stop!\" I begged of Joanne, who was squeezing her fist around the head of my dick. \"I can't take it. I can't take it.\" Thankfully Joanne stopped what she was doing, as did Kristi. An exhausted Nya fell forward onto my chest, and Karelle released my legs, enabling me to drop my feet to the floor on either side of Nya, whose strap-on dildo slid easily out of my ass in the process.\n\nEveryone remained silent for a moment. I truly believed that Nya might have fallen asleep against my chest had she been allowed to remain there any longer. Karelle leaned forward, indicating she was ready to extricate herself from underneath the sexy coupling that had just occurred.\n\nAs Nya rose in front of me so I could stand up to let Karelle slide out from behind me, I saw Nya's gorgeous breasts glistening with traces of my ejaculation. Her tits had pressed into my chest when she fell into me after her intense orgasm.\n\nKarelle noticed this too.\n\n\"Remember my words in the restaurant, Nya, about what you should imagine as you watched Scott sucking on my finger? Remember what I told you to imagine that caused your orgasm in the restaurant as you watched us?\"\n\nNya, strap-on still protruding from her pussy, reached down and grabbed the shaft in order to pull up on it, pressing the other end yet again against her G-spot. Unbelievably, she starting using the strap-on dildo as a masturbation aid, gripping the shaft in a way that left no doubt she was pressing the bulb inside her against the precise spot in her body that would drive her crazy and trigger yet another orgasm. She straightened fully, pushing her chest and torso forward in wanton abandon, her firm and glistening tits jiggling with the motions resulting from the way she was using the strap-on to masturbate. Her hard nipples emphasized both her naked beauty and her extreme arousal.",
        "\"Suck my tits, Scott,\" Nya said.\n\n* * *\n\nKarelle kept her promise to me Sunday morning when she entered my room, shrugged off the bathrobe she was wearing, and climbed under the covers to snuggle against me, her pussy already wet in anticipation."
    ],
    "authorname": "escriterra",
    "tags": [
        "strap-on",
        "asshole",
        "cfnm",
        "embarrassed",
        "man-fucking",
        "spread open",
        "teasing",
        "hard nipples"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/explanation-to-the-sorority-ch-02"
}