{
    "title": "Turning of the Stars Ch. 06",
    "pages": [
        "Anna opened her eyes and then immediately squeezed them shut again to avoid being blinded by bright lights. The harsh smell of cleaning products invaded her sinuses and she rolled to her side, burying her face in a starchy pillowcase. \n\n\"Anna.\" a familiar voice said. \"Honey, are you feeling sick again?\"\n\nAnna tried to decide whether she was feeling sick again. She didn't think so. She tried to figure out where she was. She didn't know. She tried to identify the voice. \n\n\"Claudia.\" Her voice sounded strange to her own ears; raspy and weak.\n\n\"Yeah honey, it's me. Grant called me.\"\n\nGrant. \"Grant! Where is he?\" Anna tried to sit up and felt like someone had knocked her in the head with a frying pan. Everything went blessedly dark once more.\n\nWhen she opened her eyes again, a nurse was bustling around the room and Claudia was sitting on the bed with her, wiping her face with a cool cloth. They'd lifted the top part of the bed so she was in a semi-upright position and could see the room better. \n\n\"I'm in the hospital,\" she croaked.\n\n\"Yes. Do you remember what happened?\"\n\nAnna tried to think. She'd gone to see Grant; to apologize and...she blushed as she remembered what they'd done on his couch, but that didn't explain why she was in a hospital. \"There was...a door? I don't know,\" she said, getting frustrated. \"I can't remember. Please just tell me if Grant's okay.\"\n\n\"Of course he is, hon. He's fine. He's talking to the police right now.\"\n\nAnna's eye shot wide, but she caught herself before sitting up this time. \"Is he in trouble?\"\n\n\"No, he's just giving them a statement.\"\n\n\"Am I okay? Why am I here?\" She directed the question at the nurse.\n\n\"Yes ma'am, you're gonna be just fine. Someone put a strong sedative in your drink. Probably Rohypnol, but we won't know for sure until we get the lab report back. Fortunately we didn't have to pump your stomach because you pretty much emptied it out on your own. And you have a few bruises, but nothing too bad.\"\n\n\"I don't remember anything,\" she said shaking her head slowly. \"Can you tell me what happened, Claud?\"\n\n\"I don't really know all the details, Anna. You should talk to someone who was there. Grant will be back soon.\"\n\nAnna nodded. She wanted to see Grant; needed to see him. She put her hand to her face to push her hair back and winced in pain. Prodding her cheek gingerly with her fingers, she felt the extent of the bruise. It wasn't too bad unless she tried to open her mouth wide.\n\nThe door opened and Anna looked up to see Grant and Corie walk in the room along with two uniformed police officers. She sat up a little straighter and tried to brush her hair back into a ponytail with her fingers.\n\n\"Miss Webster?\" one of the officers asked. He was very tall and broad-chested, a good looking guy with cheerful blue eyes that looked at her with concern. \n\n\"Yes.\" Anna was trying to make eye contact with Grant, but his eyes were locked on the floor. He seemed unnaturally calm, leaning against the far wall with his arms crossed over his chest, the only sign of stress the tight fists he had stuck under his arms.\n\n\"I'm Officer Cooper, this is Officer Standen. We won't bother you too much tonight ma'am, but we need to ask you a few questions.\" \n\n\"Okay. I'll try to answer.\" She was having a hard time concentrating on what the man was saying. Her mind still felt foggy and she was wondering why Grant wouldn't look at her. \n\n\"The questions are of a sensitive nature, we can have everyone else leave first if-\"\n\n\"No, it's okay. I want them here.\"\n\n\"Are you sure ma'am?\"\n\n\"Yes,\" she said, confused about why on earth she would want her friends to leave. They knew better than her what had happened tonight.\n\n\"Alright,\" he said, clearing his throat. \n\n\"Do you know the man that you left the club with tonight?\" the other officer asked. He was an older man with graying hair and a no-nonsense attitude, but his interruption earned him a glare from his younger, taller counterpart.\n\nAnna snapped to full attention. \"I left with someone? I don't- I can't-\" Suddenly the potential implications of having been drugged began to dawn on her and she instinctively drew the sheet up to her chest, clenching it tightly in her fists. \n\n\"It's okay if you don't remember, ma'am. Just say that.\"\n\nAnna couldn't speak for a moment, paralyzed by the realization that she might have been raped. Her eyes darted from face to face, looking for the answer to a question that she was afraid to ask out loud. The only person whose eye she could catch was Corie, who looked directly at her and almost imperceptibly shook her head no. She took a deep breath, reassured, and focused back on the cop.\n\n\"I don't remember, but I wouldn't have left with anyone even if I knew them. I was waiting for Grant,\" she said, glancing at his face for some sign of acknowledgement. He didn't look up at her, but she saw him wince. Surely he didn't think she would have voluntarily left with someone else. Is that why he wasn't looking at her? \n\n\"Right.\" The cop said and she looked up at the odd tone to his voice. \"Have you had unprotected sexual intercourse in the last twenty-four hours?\"\n\nHer eyes flew automatically back to Grant, who looked intensely uncomfortable, his jaw muscles working furiously as he stared hard at the floor. \"I, um- why do you need to know that?\" she asked, blushing feverishly. For a moment she wondered if she should lie, unsure whether she would be getting Grant in trouble, but quickly realized how silly the thought was. It wasn't illegal for them to have sex. \n\nThe younger officer cleared his throat again and stepped forward as he spoke to her in a lowered voice. \"The doctor ran a rape kit when you first arrived. You were conscious at the time, though you may not remember. There were quite a few minor vaginal lacerations and the lab came back positive for semen, but only from one donor and no spermicide or lubricant from a condom. If you had voluntary intercourse recently we can be reasonably sure you weren't raped.\"\n\n\"Oh.\" She swallowed hard. \"Yeah. I did, yes.\" \n\n\"Okay. That's not conclusive, you understand, so you'll need to talk to the doctors about taking the same measures you would have if you were raped, do you understand what I'm saying?\"\n\n\"Yes,\" she whispered. She knew she wasn't ovulating, she had always been regular and had been tracking her fertility carefully since she started sleeping with Grant so pregnancy wasn't a concern, but she would have to get tested for diseases just in case. Claudia's hand squeezed hers hard and she was grateful for it, but she couldn't help wishing it was Grant sitting next to her offering her some kind of comfort. Her eyes stayed locked on his lowered head, afraid she'd miss the slightest glance from him if she looked away.\n\n\"Alright. Now, did you voluntarily take any prescription or street drugs tonight?\"\n\n\"No,\" Anna said, on the verge of tears. Why wouldn't he just look at her? \"I just had a couple of beers...\" Her voice trailed off as she had a sudden flash of someone with blonde hair smiling and handing her a beer. \"Blonde hair,\" she said breathlessly. The two cops looked at each other significantly. \"He had blonde hair and he wore really strong cologne.\"\n\n\"Is there anything else you can remember?\"\n\nAnna closed her eyes and tried to see through the fog in her brain, but eventually shook her head in frustration. \"I'm sorry I can't.\" \n\n\"That's alright. Between the witness statements and security video I don't think we'll have any problem with this one. Of course if you do remember anything or you have any questions at all, please give us a call,\" the young cop said, smiling gently at her before handing her a card.\n\n\"Thank you.\" \n\nThe officers left and silence descended on the room, everyone waiting for someone else to speak first. Finally Claudia cleared her throat.\n\n\"Well it goes without saying that you have the next couple of days off, Anna. Jesse and I will cover your shifts until you're ready to come back.\"\n\n\"Thanks Claud. I'm sure I'll be fine in a day or two.\"\n\nCorie's phone rang and she glanced at it before speaking to Grant. \"It's Brody.\"\n\n\"Tell him I'll be there in a few.\" \n\nCorie glanced at Anna and back at Grant in surprise. \"Are you-\"\n\nHe lifted his head to glare at her and she cut herself off and shook her head before walking out the door, answering her phone as she went. \n\n\"I need to go close up the club. Claudia, do you think you could take Anna home?\" \n\n\"No!\" The sense of urgency, almost panic, in her voice surprised Anna. But not only did she not want to go home by herself, she had an irrational fear that if she let Grant out of her sight without speaking to him tonight she wouldn't ever see him again. \"No,\" she repeated, a little calmer. \"Claud, would you excuse us for just a minute?\"\n\nGrant looked up at her for the first time since he'd entered the room, the expression on his face completely unreadable. The relief she felt at finally having some kind of contact with him was tempered by confusion at the calm fa\u00e7ade he was showing her. She could tell he was covering up some kind of strong emotion; she just wasn't sure what it was. They stared at each other, his eyes burning into her, while Claudia gathered her things and stepped outside.\n\nAnna slowly sat up in the bed, feeling steadier now; physically if not emotionally. She felt the tears prick her eyes and gritted her teeth to try to stop them. \"I'm sorry,\" she said. \"I don't know what I did, but I'm sorry. Can you please just be mad at me tomorrow? I need you right now.\" The words were barely out of her mouth before she burst into tears.\n\nGrant was there the next second, wrapping his arms around her so tightly she could barely breathe, but she wasn't complaining. She buried her head in his neck and sobbed, releasing all the pent up worry and confusion as he gently stroked her back and hair.\n\n\"I'm not mad at you, babe, not at all. I'm just so sorry. You needed me and I wasn't there and I'm so sorry. I should have been there. This never should have happened,\" he said, the words spilling out of him in a rush. He pulled back and touched the bruise on her cheek gently, his eyes searching hers to reassure himself that she was alright.\n\n\"You're not angry?\"\n\n\"Jesus, no. Well, not at you. I thought you were mad at me for leaving you alone. I'm so sorry I left you, babe.\"\n\nShe shook her head firmly, trying to show confidence she didn't quite feel. \"Stop. It's not your fault and I'm perfectly fine and everything's okay,\" she said to herself as much as to him. \n\nGrant still held her like he thought she might disappear if he didn't hang on tight enough. \"I thought-\" he began, then clenched his jaw, silencing himself. He took a deep breath and started again. \"God, I'm so glad you're alright.\"\n\n\"I don't want to go home without you. Let me come with you.\"\n\n\"I'm not gonna drag you back to the club tonight. Brody can lock everything down for me and I'll go deal with it in the morning.\"\n\n\"Are you sure? If you need to-\"\n\n\"No. Fuck it. The whole place can burn down for all I care. You need me more.\" He brought his hand up to her face and kissed her gently on her un-bruised cheek. \"I'll take you home to bed.\" \n\nAnna turned her face and caught his lips with hers, surprised at the emotion that flooded her when he parted his lips and kissed her back more deeply. Her body melted against his and she wrapped her arms around his neck, breaking the kiss only to lay her head against his chest as he held her close. With his hand on her cheek she caught sight of the new tattoo on his forearm.\n\n\"You did this for me?\" she asked, touching his arm gingerly, carefully avoiding the puffy red skin.\n\nGrant shook his head. \"No, I did that for me. You changed me, Anna. Loving you changed me and I thought-\" He stopped to clear his throat. \"Even if you didn't come back, if all I got was the little bit of time we already had together, I wanted to make sure I always remembered how lucky I was to get it.\"\n\nWhatever was left of her self-insulating bubble disintegrated into nothing. Her nature was to love with her whole heart, to trust completely. For the last few years she'd been denying herself, trying to force herself to keep people at arms length to avoid getting hurt, but she couldn't do it any more. Not with Grant. He'd chipped away at her defenses until she couldn't keep him out; didn't want to keep him out any longer. She was done second-guessing and mistrusting and trying to protect herself from falling too hard. It was way too late for that, anyway.\n\nHer throat was tight with emotion and she couldn't speak, so with fresh tears in her eyes she pressed another kiss to his lips. Just as she pulled away there was a tentative knock on the door and Corie stuck her head in. \n\n\"Grant?\"\n\n\"Yeah?\" He looked up without loosening his grip on Anna.\n\n\"You need to talk to Brody.\" Corie walked in and handed the phone to Grant who held it up to his ear.\n\n\"What's up?\" Anna watched his face cloud as he listened. \"What the fuck is going on tonight? No, man, I can't come up there.\"\n\n\"If you need to go-\"\n\nHe cut Anna off with a shake of his head. \"Can't they come talk to me tomorrow?\"\n\n\"I'll wait in the car.\"\n\n\"Hang on,\" he said into the phone. \"Anna, I told you I'd bring you home. That's what I'm gonna do.\"\n\n\"What's going on?\"\n\n\"Somebody called in a bomb threat. They've evacuated the club. Thank god it was almost time to close anyway, there was hardly anyone left. Someone from the bomb squad wants to talk to me, though.\"\n\n\"Then you need to go talk to them.\"\n\n\"I don't want to leave you-\"\n\n\"I can drive Anna back to your place and wait with her until you get there,\" Corie suggested.\n\nAnna was momentarily shocked at her offer, but quickly shook it off. \"That's perfect, thanks Corie. See Grant? I'll be fine. You go do whatever you need to do.\"\n\nGrant looked at Corie for a moment, an odd expression on his face, then nodded. With a deep sigh he lifted the phone back to his ear. \"I'll be there in a few.\" He hung up and wrapped his arms around Anna, pulling her head to his chest. \"I'll be quick.\"\n\n\"Okay.\"\n\nHe kissed the top of her head and then turned back to Corie. \"Thanks Corie. You guys be careful.\"\n\nClaudia left with assurances that Anna was in good hands and Anna and Corie left as soon as Anna could stand up and walk, albeit shakily, on her own. They rode in silence to Grant's house, both worn out. The whole way there Anna kept getting whiffs of cologne and vomit from her hair, not a good combination under any circumstances, so once inside she went immediately to take a shower. \n\nShe stripped off the scrubs the hospital had given her and stood under the hot spray for ages, letting it soothe her aching muscles and bruises. When the water turned cold she got out and put on some flannel pants and one of Grant's t-shirts. Corie was out on the deck smoking and as soon as she walked out to join her she could smell that it wasn't a cigarette. Corie jumped and tried to put the joint out, but dropped it on the deck. \n\n\"Can I hit this?\" Anna asked, picking it up. She didn't smoke often these days, but she had as a teenager and still indulged occasionally when she wanted to relax. Tonight she could definitely use a little relaxation. Corie nodded and watched curiously as Anna inhaled the fragrant smoke. She passed it back and closed her eyes, feeling that strange weight in her head as she exhaled.\n\n\"You don't strike me as a smoker.\"\n\nAnna shrugged. \"You don't know me very well.\" \n\nCorie nodded and they passed the joint back and forth, smoking in silence as they stared out at the river slowly slinking by below them. Anna finally spoke her thoughts. \"Thank you for earlier. At the hospital. I was on the verge of a meltdown for a second there.\"\n\n\"That cop was an idiot. You didn't leave with the guy; he dragged you out the back door. I told him that, but of course he didn't listen. And I know he didn't rape you either, he didn't have time.\"\n\n\"How do you know?\" \n\n\"I saw you go by on the way to the bathroom and it was less than ten minutes later that I saw you guys outside. I have a security monitor behind the bar that switches to the alley camera as soon as the door opens. When I saw what was happening I called Grant and we were both out there within minutes.\" \n\n\"God, if you hadn't seen-\"\n\n\"I did see. There's no point in what iffing.\"\n\nThat was true and Anna fell silent for a while, thinking. \"I feel like an idiot, the first time in my life I let a guy buy me a drink and I get drugged. It never even occurred to me that he might put something in it. I know people think I'm na\u00efve, but I never really believed it until tonight.\"\n\n\"Being taken advantage of doesn't make you an idiot.\"\n\nAnna snorted, the pot making her chatty and familiar. \"You don't think he picked me because I looked vulnerable and dumb enough to take a drink from a total stranger?\"\n\nCorie shrugged. \"Maybe. But he also could have picked you just because you were alone, or because you look like his ex-girlfriend, or because-\" \n\n\"Or because I was wearing a come-fuck-me dress with no underwear on.\" \n\n\"Look, you can't do that to yourself. You could come up with a million things you could have or even should have done differently, but you're not ever going to make it your fault no matter how hard you try. Because nothing you did makes it okay for him to do what he did.\"\n\nTears pricked her eyes again and she clenched her jaw, swallowing them back. She understood the words Corie was saying and knew they were true, but it was hard to assimilate them with the way she was feeling. \n\nCorie pulled out a cigarette, lit it, and sat down on a deck chair. \"Grant didn't tell you about me, did he?\" It was more a statement than a question and she sounded surprised. \n\n\"Tell me what?\"\n\n\"That it was my fault he went to prison,\" she said, staring at the glowing tip of her cigarette. \"He really didn't tell you?\"\n\nAnna sat down in a chair opposite her with a feeling that she knew where this conversation was going. \"He told me that he had a good reason for what he did, but it wasn't his secret to tell so I would just have to trust him or not. And I decided to trust him.\"\n\nCorie looked up at her and smiled. \"Maybe you are na\u00efve.\"\n\nAnna started giggling and when Corie started laughing with her it made her laugh harder. Soon they were both wiping tears from their faces and trying to catch their breath. After several minutes they calmed down and Corie took another drag off her cigarette. \n\n\"He's so fucking stubborn, I can't believe he would have just let you walk away rather than tell you. I told him he didn't have to keep it a secret.\" \n\nCorie took a few more puffs before continuing. \"I was working one night and there was this guy sitting at the bar the whole night flirting with me. He was real clean cut, not my usual type, but he was cute and I was feeling sort of down on myself and he made me feel better.\" \n\nShe shrugged and shook her head. \"I made Grant let me go early that night and the guy took me to another bar. I wasn't really into it, but I wanted to hang out with him and I didn't want to do it around...at work.\"\n\nAnna got the feeling Corie was leaving part of the story out, but she didn't want to interrupt to ask questions. \n\n\"So we get to the bar and it was a really seedy place. They didn't even check my ID, and I always get carded 'cause I look like I'm twelve. Anyway, one drink in and I could tell something was wrong. I asked him to take me back to the club and he said okay and that's all I can remember. Grant found me passed out in the alley after the club closed. It was pretty clear what happened. My clothes were scattered all over the place like someone had just thrown them at me.\"\n\n\"Holy crap.\"\n\n\"Yeah.\"\n\nAnna wanted to hug her or tell her she was sorry or something, but she knew Corie wouldn't appreciate a gesture like that so she just shook her head in disgust that anyone would do something like that to another human being.",
        "\"You know the really shitty thing is that I probably would have screwed him, he didn't have to drug me to get in my pants.\" She laughed humorlessly and took another long drag on her cigarette. \"Anyway, I came to when we got to the hospital and freaked out, refused to go in. So Grant took me home and cleaned me up and when I sobered up he told me what happened. He was furious and wanted to call the police, but he said it was up to me. I just wanted it to go away, forget it ever happened. If I'd known what he was thinking I'd have told him to call the police, but I didn't realize...\" she trailed off staring into space. \n\n\"And then I didn't know what he'd done until the cops showed up at the club to arrest him a week later. I tried to tell them what happened, but they wouldn't listen to me and I didn't have any proof anyway. Grant wouldn't tell them what happened because it was all over the news and he was trying to protect me from the media shit storm. I told him not to, I tried to talk to his lawyers and everything, but again I fucking look twelve years old so no one ever takes me seriously. I did finally get someone to listen, but that was after he'd been convicted; after the news died down a little. It was the lawyer who handled his appeal, got the attempted homicide charge dropped and talked the judge into putting a word in for him to get out early.\" \n\n\"Well. I guess that's a pretty good reason to beat the shit out of somebody.\"\n\n\"Yeah. I mean, if it were someone else I'd think so. But it wasn't a fair trade. I'd have rather he not had to go through any of that. I'd go visit him in that place and just being there for an hour would have my skin crawling. I hated that he was stuck there because of me. It wasn't worth it.\" \n\n\"He says it was a blessing in disguise, that it changed him for the better.\"\n\nCorie stared into the darkness with a wry smile. \"I believe that. And I'm sure he's right in a lot of ways. I definitely don't miss all the drugs and the women. He was getting kind of crazy with all that there toward the end. The day he got out I picked him up and asked him what he wanted to do first. I thought maybe he'd want to go out eat or sit outside at a park or something like that. But no, he made me take him straight to the tattoo shop and he got that dragonfly on his back. I thought it was a symbol of being free from prison, but he said it was to remind him that he didn't have to go back to being the person he was before. But still, when he got out it was like he was unsettled. Like he'd lost something and he was searching for it. I don't know, maybe he was searching before. Maybe that's what all the partying was about.\"\n\nThey were quiet for several minutes as they stared out into the darkness. Anna was tossing a question around in her mind that she wasn't sure she should ask. Finally she admitted to herself that she couldn't help asking. She needed to know.\n\n\"Do you love him?\" \n\nCorie looked at her in disbelief. \"You really are blunt, aren't you?\"\n\n\"You don't have to answer if you don't want to.\"\n\nCorie was silent for so long Anna thought she wasn't going to answer. Just as she was about to change the subject Corie spoke. \"How could I not?\"\n\nAnna knew exactly what she meant, but didn't say so. \n\n\"It's been a while since I was IN love with him, though. I got tired of that. I mean, at some point I had to stop hoping; the constant disappointment was exhausting. I just wasn't on his radar, even when he was sleeping around. Not that I ever wanted him to see me the way he saw those girls. I'm like a sister to him; that's enough for me.\"\n\n\"You're his best friend.\" \n\nCorie nodded. \"He's mine, too.\" She held up the roach inquisitively. Anna nodded and Corie lit it, then passed it. Anna took a drag and almost choked on a lungful of smoke when Corie asked, \"Do YOU love him?\"\n\nAfter a brief pause while she caught her breath, she answered. \"Yeah, I do.\" In the silence that followed, Anna wondered what had possessed her to tell Corie when she hadn't told Grant yet, but she figured honesty deserved honesty. \n\n\"Good. He loves you too, you know.\"\n\n\"You think so?\"\n\n\"No doubt. You know that thing I was saying about him searching for something?\"\n\nAnna nodded.\n\n\"He found it. I've never seen him look at anyone the way he looks at you.\"\n\n\"Celia said-\"\n\n\"You can stop right there. That woman is full of shit.\"\n\nAnna blushed hotly, glad it was dark and Corie couldn't see. \"He told me they slept together. I thought maybe...\"\n\nCorie snorted. \"I don't think they did much sleeping. She used to show up at the club every few months dressed like a high-priced whore, hanging all over him. They'd disappear into his office for a while and that was pretty much it. After a while though, she started coming more often, walking around like she owned the place; like she owned him. It got weird. We were all relieved when he finally saved up enough to buy her out, even Grant.\"\n\nThey heard the front door open and both turned to look at the same time. Corie startled her by grabbing her arm tightly. \"Don't tell him what I said about...you know.\"\n\n\"I wouldn't.\"\n\n\"Thanks.\"\n\nGrant came around the corner and they could see him inside looking around before he noticed the glass door was open. He came out on the deck and seemed surprised to see them out there together.\n\n\"Hey. I figured you guys would be sleeping,\" he said as he walked over and gave Anna a quick kiss.\n\n\"So I'm guessing there was no bomb or we'd have heard about it by now?\" Corie looked worried, despite her words.\n\n\"No. They said it was a hoax. I don't know, though. It seems like a pretty big coincidence it happened the same night I caught Janette. I think there's something more going on, but the police don't seem to be all that interested. They were more interested in giving me a hard time for having to come out three times in one night. I might have Officer Cooper talked into believing me, but I don't think he can actually do anything about it without some kind of proof.\"\n\n\"Well, as long as the place is still standing I have to be at work tomorrow so I'm out of here. I'd like to get home before daylight.\" \n\n\"Thanks Corie. I appreciate everything,\" Anna said.\n\n\"No problem. See you guys later.\" \n\nGrant turned and pulled Anna tightly into his arms, kissing her forehead. \"You ready to go to bed?\" he asked. He sounded casual, but she could feel him vibrating with pent up energy as he held her.\n\n\"Yes please,\" she said, kissing him softly on the neck and running her fingertips through his beard. \n\nHe took her hand in his, brought it up to his nose and sniffed it, then shook his head with a half-amused chuckle. \"Did she get you stoned?\"\n\n\"Mmhm,\" she said going in for another kiss. He kissed her briefly, but pulled back before she was ready for him to. \n\n\"Come on, let's go to bed. Corie's right, the sun will be up soon.\" \n\nAnna looked up, surprised to see a faint light on the horizon, then nodded her acquiescence as a sudden exhaustion rolled over her. Grant helped her navigate the winding stairs and she fell gratefully into his huge bed, snuggling into the pillows and watching him as he took his clothes off. She never got tired of watching him undress, his tattoos just as mesmerizing now as they were that first night. He stripped down to his boxers and climbed into bed with her, lying on his side facing her, but not touching her. Anna ran a finger across the words on his chest. \n\n\"Human folly does not impede the turning of the stars,\" she recited, looking into his eyes.\n\n\"Maybe not. But sometimes it sure does feel like it makes the world stop.\" \n\nTo Anna's shock his eyes suddenly filled with tears and he quickly buried his face in the pillow to hide them from her. Her shock didn't last long, she reached for him, curling her arm around his shoulders and pulling his head into her neck, cradling him against her. He wrapped his arms tightly around her waist and lay there perfectly still for several long minutes.\n\nHe sniffed wetly and his voice came, muffled, from her neck. \"Fuck, babe, I saw you lying there and I thought I was too late. I thought-\" He cut himself off, unable to say the words. \"And if I'd been a few minutes later-\"\n\n\"Don't,\" she said, interrupting his speculation. \"You weren't. There's no point in what iffing.\"\n\nHe snorted mirthlessly. \"I can tell you've been talking to Corie.\"\n\n\"She's a smart woman.\"\n\n\"Did she tell you?\"\n\n\"Yeah.\" Anna didn't need to ask what he was talking about. \n\n\"God, that was the worst moment of my life and it was like it was happening all over again tonight. Seeing her there...seeing you there. I should have been there for you, for both of you.\" He shuddered again, every muscle in his body tense. He took a deep breath and rolled away, wiping angrily at his eyes. \"Fuck. I'm sorry. You're the one that ended up in the hospital and I'm losing my shit all over you.\"\n\n\"Don't be sorry,\" she said, then reached out and grabbed his chin, pulling his face so he was looking at her. \"Don't be sorry,\" she repeated forcefully, not talking about the tears. \"It wasn't your fault.\"\n\nHe nodded, but Anna could see her words hadn't convinced him. Maybe no words could. The anger and guilt and fear was plain in his eyes and he looked like he was wound tight enough to spring; his jaw clenched and his hands curled into fists so tight his knuckles were white. There was only one thing she could think to do that might help him.\n\nShe pulled her shirt off over her head and leaned over him, pressing her lips to his. Her hands rested against his chest and she felt his heart speed up as she kissed him hard, their lips grinding together, teeth bumping against each other. She forced her tongue into his mouth and he groaned, his hands sliding up her back to pull her closer. \n\nAnna moved her hips against him, pressing her thigh between his legs to feel his hard length. And then out of nowhere his hands came up against her shoulders and pushed her gently away. He pulled back to look at her, breathing heavy and staring intently into her eyes as if searching for something. \n\n\"I need you,\" she whispered, slipping her hands around his neck. He grabbed her hands and pulled them away, holding them clasped between his. Anna felt like there was something lodged in her throat and tried desperately to swallow around it. \"I'm not...he didn't...\" Oh god, how was she supposed to say this? \"Corie said she saw me...he didn't have time...but if you think...I mean you can use a condom if...\"\n\n\"No, I know. Corie told me.\"\n\n\"So what's the problem, it's not like I'm tainted or anything.\" \n\nHe looked up at her with an expression somewhere between disbelief and anger. \"Where the fuck did that come from?\"\n\nShe felt her bottom lip tremble but held it back through sheer force of will. She was so done with crying tonight. When she spoke it came out as a whisper. \"I get it, it's the same reason I took a forty-five minute shower.\" She rolled off his chest and tried to move away.\n\nHis expression softened and he sighed, wrapping an arm around her to pull her back to his side. He was quiet for several minutes before he spoke, but she could feel the tension still humming in his muscles. \"I'm sorry. I'm just so fucking angry right now I feel like I'm about to explode. I'm seriously hanging onto my control by a thread here.\" He heaved another sigh and gently touched the purple bruise on her cheek. \"I don't want to hurt you.\"\n\nShe pulled away from his hand and kissed his chest, moving up to his neck as she pressed her body against his. \"You're not going to hurt me. I want you to fuck me, Grant. I need you to fuck me. Hard.\" He trembled all over and she felt the breath leave him in a rush. She tried to pull his head back down to her, but still he resisted, pulling back to look into her eyes. \"Please?\"\n\nIt was as if he'd been waiting for that one word, as soon as he heard it he rolled onto her, giving her back the rough kisses she'd given him a moment ago and more. Anna could only hold on for the ride as he ravished her mouth, sending shock waves of sensation all over her body. She felt his erection pulsing against her hip and moaned with desire. \n\nShe did need him. As much as he needed this release she needed to feel him moving inside her, his hands on her, the taste and smell of him filling her senses, banishing all thoughts of a stranger's hands touching her.\n\nShe whimpered as he moved away, but he yanked her pants off and was back on her in a flash, his boxers gone and his dick hot and hard against her bare skin. Anna tilted her head up to capture his bottom lip in her teeth, licking and sucking on it. His hands tangled in her hair, pulling slightly to angle her head back further and there was a split second pause before he simultaneously buried himself in her wet heat and pressed his tongue deep into her mouth. He swallowed her exclamation of surprise, unrelenting as he penetrated her at either end, filling her with himself. \n\nHe immediately began to thrust into her and she moved against him feverishly, trying to keep up with his frantic pounding. It quickly became apparent that she couldn't so she wrapped both legs around his hips and let him take complete control. He released her mouth to bite and suck at her neck, pulling her head back further to get more access. The hand that wasn't in her hair came up to grab her breast, squeezing the soft flesh and pinching tightly at her nipple. \n\nAnna's hands weren't bound, but she felt just as much at his mercy as if they were. The sensations assaulting her body pushed her quickly toward climax and her first orgasm hit hard. Her whole body shook and she pulled against his hold on her hair, the sharp pain shooting her up even higher into the stratosphere.\n\nGrant didn't slow down when he felt her contract around him, if anything he sped up and pounded into her harder, only vaguely aware of her fingernails digging into his shoulders and the animalistic noises she was making. It wasn't until she came the third time and her legs clamped so tight around him they restricted his movement that he finally slowed, letting her come down long enough to allow her legs to fall away.\n\n\"Say it again,\" he said, his voice hoarse in her ear, his hips still rocking steadily against her. He hooked his hand behind her knee and pulled it up to his waist. Anna's mind was spinning. She was a limp, incoherent puddle of pleasure and she had no idea what he was talking about.\n\n\"Say it again,\" he demanded louder, thrusting hard and grinding into her mercilessly. \n\n\"Fuck me,\" she murmured, beginning to return to her senses.\n\nGrant pulled her head to the side and licked all the way up her neck from her collarbone to her ear, sending shivers down her spine. \"All of it,\" he growled and then snaked his tongue deep into her ear.\n\n\"Oh god,\" she gasped as the sensation took her breath away. \"Fuck me hard. Please, Grant. Fuck me hard.\"\n\nIn one smooth motion he let go of her hair and pushed his body up as he thrust deep inside her. He pulled her leg from his waist and hooked it over his shoulder, sliding even deeper, completely robbing her of breath as he pounded into her. Grant watched through hooded eyes as she writhed and shook under him; words he'd never heard her use pouring out of her mouth as she begged for more. \n\nShe screamed when she came, arching up off the bed and pressing against him, trying to take more of him inside her. Watching her in the throes of such intense pleasure pushed him over the edge and he thrust one final time before exploding inside her. As the tension drained from his body he let her leg slip from his shoulder and collapsed on top of her, cradled between her legs with her arms wrapped tightly around his body.\n\nSeveral minutes later Grant smiled when he felt fingers gently playing with the curls at the back of his neck. \"I know you probably can't breathe, but I don't ever want to move from this spot.\" He turned his head to bury it in her hair and took a deep breath, absorbing her fresh scent. \n\nShe tightened her arms around him, holding him in place. \"Breathing is overrated.\"\n\nHe rolled off her, ignoring her objections, and pulled her close to his side. \"Maybe so, but I kind of like you alive so it's probably best if you keep doing it.\"\n\nAnna laughed breathlessly and kissed his shoulder.\n\n\"Mission accomplished.\" \n\n\"What do you mean?\" she asked with a yawn, her eyes feeling heavy.\n\n\"I told you I'd make you scream my name. It took longer than I expected, but I knew it would happen eventually.\"\n\n\"Oh.\" She blushed, feeling oddly embarrassed. \"I know I got loud, but I have no idea what I was saying.\"\n\n\"Well don't quote me on this, but it was something along the lines of 'fuck yes fuck me make me come oh god harder god yes Grant.' And by the time you got to that last part you were definitely screaming, so yeah. Mission accomplished.\"\n\n\"Shut up, I don't talk like that.\" She pressed her forehead against his arm, and covered her face so he wouldn't see her blush.\n\n\"That's what made it so damn hot.\" He pulled her hand away from her face and kissed her. \"Don't hide from me.\"\n\n\"I blame the weed.\"\n\n\"Then I'll have to see to it you get high more often.\"\n\nAnna laughed and cuddled close to him, kissing him on the shoulder. \"You wore me out,\" she said with another jaw-cracking yawn.\n\n\"Likewise,\" he mumbled against the top of her head. \"Been a long night.\"\n\n\"Mmhm.\" She closed her eyes and snuggled into him, expecting to fall right to sleep, but the events of the night kept running through her head. It felt like a million years ago that she'd showed up at the club to tell him-\n\nHer eyes flew open. How could she have forgotten? She looked up to see if he was still awake, but his face was relaxed, his long lashes resting on his cheeks. Anna laid one hand gently on his cheek. \"I love you too,\" she whispered softly. \n\nAnna wrapped her arms around the man she loved and buried her face in his neck. The last thing she remembered was his fingers trailing down her spine and his lips brushing her temple before she dropped into a deep sleep in his arms.\n\n...\n\nAnna was running for her life trying to escape the aftermath of a hurricane in the Florida Keys. She was so absorbed in her book that she didn't notice the bell indicating that someone had come in, and she almost jumped out of her stool when a man cleared his throat right next to her.\n\n\"I'm so sorry to startle you,\" he said with a charming smile that crinkled his blue eyes adorably. His softly graying light brown hair was slicked back, but a few strands had escaped and lay so artfully across his forehead Anna found herself wondering whether he'd done it like that on purpose.\n\nShe laughed nervously as she righted herself on her seat. \"That's okay; I should have been paying more attention.\"\n\n\"I hated to interrupt; you appeared to be enjoying your book very much.\"\n\nShe turned the book over to let him see the cover. \"Their Eyes Were Watching God. I highly recommend it.\"\n\n\"I'll certainly keep it in mind.\" He folded his arms and leaned forward on the counter, looking intently at her.\n\n\"Can I help you with something?\" she asked, the hairs rising on the back of her neck. There was something familiar about him, but she couldn't figure out exactly what it was. His smile was a little disconcerting, as if he knew a secret about her that she didn't know. \n\n\"I sure hope so,\" he said as his eyes drifted over her body. She had the sudden urge to cross her arms over her chest, but then his eyes met hers and the familiar look of desire she saw there sparked a response in her own body. She knew instantly who the man was.\n\n\"You're Grant's dad,\" she gasped.\n\n\"Well, that's not how people usually define me, but it's true nonetheless. I am Don Roderick, and it's always a pleasure to meet such a lovely young lady,\" he said with a smile, extending his hand across the counter toward her. ",
        "\"Anna Webster.\" She took his hand hesitantly, feeling vaguely guilty as if she were doing something treasonous. To her surprise he lifted her fingers to his lips and kissed them, winking at her as he did so. She quickly pulled her hand back, confused by the mix of emotions she was feeling. She could see where Grant got his charm, it was emanating from the man in front of her in a near-tangible wave and she couldn't help but respond to it on some level. \n\n\"Why are you here Mr. Roderick?\" she asked, her voice coming out a little more snappish than she meant it to in her attempt to cover up the odd sexual tension she was feeling. Now that she knew who he was, it was bizarre how much he reminded her of Grant when he didn't actually look him at all. \n\n\"Please,\" he said with that same knowing grin, giving her the impression that he knew exactly what he was doing to her. \"Call me Don.\"\n\n\"Why are you here, Don?\"\n\n\"Would you believe me if I said I wanted to meet the girl that I hear has stolen my son's heart?\"\n\n\"No. I'd be more inclined to wonder how the hell you know who I am.\"\n\nHe chuckled and shook his head. \"I can see why he likes you. Other than the obvious, of course,\" he added, his gaze raking over her again. This time she did cross her arms over her chest and lifted her eyebrow at him, though it just made him smile wider. He had a similar predatory look to Grant, though it was more wolvish and rather than being aroused by it the way she was with Grant, it made her nervous.\n\nShe grabbed her phone and slid off the stool, moving backward a few steps. On some level she knew the fear wasn't entirely rational, but the events of a few nights before were still so fresh she couldn't help it. \"If you're just here to ogle me, consider it done and go away.\"\n\n\"I apologize. I don't mean to make you uncomfortable,\" he said, sobering instantly. He straightened and stepped back from the counter with a look of concern. \"I'm here because I heard about you through the grapevine, as it were, and I admit I was interested in meeting the young woman Grant was so taken with. But I also came because I thought you might be able to help me.\"\n\n\"Look, I know it might be hard for you to believe, but I care about Grant very much and I'm not going to do anything that would hurt him.\"\n\nHe looked stricken for a split second before a mask of indifference fell down over his features. \"I can see that you haven't heard many good things about me. I suppose that shouldn't surprise me, but I assure you that it's not hard at all for me to believe that you care about my son. I happen to care about him, too. That's why I'm here. I've been trying to get in touch with him, but he doesn't answer or return my calls which leads me to believe he probably wouldn't hear what I have to say even if I did speak with him. I thought maybe you could get him to listen.\"\n\n\"Listen to what?\"\n\n\"I've heard some concerning things regarding his business that he needs to know about.\"\n\n\"Could you be a bit more vague?\"\n\nHe gave her a wry smile and nodded. \"I'm sorry, I just don't know how much I should say to you.\" He looked conflicted for a moment and then shook his head and sighed. \"Alright, here's what happened. I was at a party last weekend and ran into a family friend named Celia-\"\n\n\"Oh yeah, I've met Celia,\" she said with a sneer.\n\nHe gave her an apologetic look. \"Then you already understand part of what I'm going to say. She's always been a bit odd, but I'm beginning to suspect she's completely lost her marbles. She was quite drunk at the party and she said some strange things to me. One was that Grant was falling for a gold-digging book store clerk, but now that I've met you I don't believe that's the case.\"\n\n\"Why do you say that?\"\n\n\"Because I have a hell of a lot more money than he does and you weren't taking my bait,\" he said with a grin and another wink. \"And I've been exposed to plenty of gold diggers in my day and I've never seen one that looked as low maintenance as you.\"\n\n\"Low maintenance, huh? I guess that's one way to put it,\" she said looking down at her favorite pair of jeans, torn on one knee, and faded red tank top.\n\n\"Believe me sweetheart, I mean that as a compliment. Most of the women I know put great effort into making themselves beautiful. You're gorgeous without even trying.\"\n\n\"So what else did Celia say?\" she asked in an attempt to cover her blush. Grant had said the exact same words to her not too long ago.\n\n\"Like I said, I think she's lost it. She was ranting about you and about the restaurant and how Grant would regret forcing her out of the club. Then she said something about an investigation involving taxes and liquor sales. I wasn't really following, but I thought it might be important so I've been trying to let him know. I wish I knew more details, but she wasn't really making sense. She was drunk and seemed to think I would find it all very amusing.\"\n\n\"Okay, I'll tell him. Thank you, Don. I'm sure he'll appreciate your help.\"\n\n\"Well, I don't know about that. You might want to tell him what I said before you tell him who said it, if you know what I mean,\" he said in a weary voice.\n\n\"Is there anything else you want me to pass along?\" she asked, trying to suppress the pity she was starting to feel for the man. \n\n\"I, ah...I suppose you could tell him that I would like to talk to him if he wants to call me. And I'll be in town for a few days if he wants to get together.\"\n\n\"I'll let him know.\"\n\n\"I appreciate your help. It was lovely to meet you, Anna. I hope we can get to know each other better in the future. From what I've seen so far my son is a very lucky man.\"\n\nThis time his compliment seemed sincere and she returned his warm smile before he turned and walked out of the store. Anna reached for her phone and tried to think how she should tell Grant about what just happened.\n\n...\n\n\"So she's doing alright then?\"\n\n\"Yeah, she's fine. She took a few days off, but I couldn't talk her out of going back to work today.\"\n\n\"Good. Are you alright?\"\n\nGrant didn't answer right away, unsure of what to say and uncomfortable with the way Corie was looking at him. Despite the stress of the attack on Anna, the impending audit and the aftermath of the bomb threat, he was doing relatively well. He had to credit Anna with at least part of that. He'd heard her tell him she loved him that night and though she hadn't said it again yet, knowing it was true was enough for now. \n\n\"Yeah, I guess I'm alright.\"\n\n\"Are you flagellating yourself?\"\n\nHe cocked an eyebrow at her. \"Flagellating?\"\n\n\"Yeah, beating yourself up, punishing yourself.\"\n\n\"I know what it means. Is that what you think I do?\"\n\nCorie shrugged. \"You take the blame for shit you have no control over.\"\n\n\"Do I?\"\n\n\"Yep, then you apologize over and over and refuse to let yourself be happy until you feel like you've done your time.\"\n\n\"You're full of shit.\"\n\n\"Didn't you tell me once you felt like you kind of deserved to go to jail for what happened to me?\"\n\n\"I didn't mean-\"\n\n\"And how many times have you told Anna you're sorry for being at the restaurant the other night?\"\n\n\"Hell, I don't-\"\n\n\"Shit happens, Grant. You can't be everywhere. You can't control everything.\"\n\n\"Okay, point taken.\"\n\n\"Good. Now you're not going to go hunt down that guy and kill him are you?\"\n\nHe snorted at her and turned to grab the fish food.\n\n\"Those poor fish are going to pop if you give them any more food. You feed them any time you're trying to avoid an uncomfortable conversation. Now, I wasn't kidding. If you're planning something stupid I want to know.\"\n\nHe froze for a moment, surprised to realize she was right about the fish, then put the lid back on the jar and turned to face her. He opened his mouth to make a smart-ass comment, but the strained look on her face told him it wouldn't be a good idea. \"No Corie, I'm not going after anyone. I did my fair share the other night.\"\n\n\"Yeah you did. Thank goodness Brody got there in time because I couldn't get you off him. You're lucky the police were right there and saw the state Anna was in. I'm pretty sure Officer Cooper talked the other cop out of arresting you along with that creep.\"\n\nGrant heaved a heavy sigh and shook his head, suppressing the urge to turn around and feed his fish again. \n\n\"So tell me what happened with Janette.\"\n\n\"Well, she's fired, but the police didn't have enough to charge her with more than minor theft since all the evidence I had was circumstantial. They let her go that night.\"\n\n\"She never said who was paying her off?\"\n\n\"She never even admitted to getting paid off, though I'm sure she was after the way she reacted when I asked her about it. I've got to figure something out, though. This damn audit is hanging over my head like the fucking sword of Damocles. I've reported all the thefts now, but it'd sure be nice to have some kind of proof that it wasn't me, since that's what they seemed to be insinuating on the phone the other day.\"\n\n\"Did you end up telling Craig what was going on?\"\n\n\"Yeah, I explained everything to Craig and to the police, but they suggested I keep a lid on it for now with the rest of the staff. I told Eric. He was there when I was questioning Janette so I assumed he probably figured it out on his own. I think he's alright though, he's the one who brought the whole thing to my attention so it's not likely he's involved.\"\n\n\"You knew him before you hired him, right?\"\n\n\"Yeah. Not real well, he's kind of a hard guy to get to know. But I think he's trustworthy.\"\n\n\"So is he, like, a friend of yours? Where'd he come from?\"\n\n\"I met him at Asa's shop.\" \n\n\"Really?\" Her eyebrows went up in surprise. \"He has ink?\"\n\nBefore he could answer, Grant's phone rang. He glanced at the display and quickly answered it. \"Officer Cooper, what's up?\" There was a long pause while he listened, his face growing pale. \"No, they wouldn't have any reason to know each other as far as I know.\" He dropped onto the couch looking sick and Corie sat up, concerned. \"Is she in danger then?\" His head fell into his hand and he exhaled heavily. \"I understand. Thanks for calling.\" \n\nAs soon as he hung up he hit a button on speed dial, tapping his foot impatiently while it rang. When Anna's voice mail picked up he hung up and started rushing around his office, gathering his keys and wallet.\n\n\"What's going on?\" \n\n\"I have to go. I need to find Anna.\"\n\n\"Hold on, tell me what's going on.\"\n\n\"The guy who drugged her was in booking when they brought Janette through to release her that night. She freaked out when she saw him; it was obvious they knew each other.\"\n\n\"So that means-\"\n\n\"What happened to Anna wasn't just a random attack. Whoever is trying to fuck me over is out to get her. Cooper said someone bailed the guy out this morning so he thought I'd want to keep an eye on her. And now she's not answering her phone.\"\n\n\"Try the bookstore's number, maybe she's just busy.\"\n\nGrant nodded and dialed the bookstore. Claudia answered and told him that Anna asked her to come in so she could take the afternoon off. She hadn't told Claudia what was going on, just that she was heading to the club to see to Grant. \n\nHe hung up the phone and looked at Corie with fear in his eyes. \"She should have been here by now. I'm gonna go look for her. Call me if she shows up here.\" Grant tore out the backdoor and down the alley, nearly running headlong into a man in the parking lot. The man caught him by the shoulders and looked at him in surprise.\n\n\"I was just looking for you.\"\n\n\"What the fuck are you doing here?\" Grant asked, dumbfounded. \"Actually, don't answer that. I don't have time to deal with you right now.\" He pushed his father to the side and moved around him to unlock his car. \n\n\"Please listen, your girlfriend may be in danger.\"\n\nGrant froze. When he turned around the expression on his face must have been fierce, because his dad took several steps backward and held his hands up as if to ward off a blow. \"What have you done? If you've hurt her-\"\n\n\"Jesus Christ, Grant! What have I ever done to make you think I would hurt anyone, let alone someone you care about?\"\n\n\"Stop fucking around and tell me where she is!\" The words exploded out of him as he stepped forward and came face to face with his father.\n\n\"I don't know where she is, but I know who might. I went and spoke with Anna earlier today trying to get a message to you, since you weren't answering my calls. I told her that I thought Celia was trying to sabotage your business; that she wanted to get back at you for buying her out. What I didn't tell her is that Celia seemed to be...obsessed. She went on and on about you; insulting Anna and ranting about your relationship with her.\"\n\nGrant stared blankly at his father, trying to absorb all this new information. \n\n\"I didn't want to frighten Anna with all of that and at the time I didn't think there was any immediate concern. But after I talked to her I realized how little I actually knew about what Celia was planning. I tried to call her to see if I could get any more information from her, but she wasn't home. Brad told me she was here in town checking on some investments. I went back to the bookstore to warn Anna, but she was already gone. I thought she might have come to see you, so-\"\n\n\"Fuck!\" Grant slammed his fist down on his car, denting the hood. \"She was on her way here, but she never showed up. Celia wouldn't hurt her, would she?\" He looked at his father hoping for reassurance, but didn't get it. \n\n\"I don't know, son. I wouldn't have thought so, but the way she was talking the other night...I don't think she's stable.\"\n\n\"Jesus Christ.\" The realization that Celia must have had something to do with Anna being attacked hit him like a ton of bricks. She'd already hurt her once, he had to assume she would do it again. Grant rubbed both hands over his face and took a deep breath, trying to calm himself so he could think past the knot tightening in his stomach. It wasn't working. He dropped his hands and looked at man in front of him. \"I don't know what to do, Dad.\"\n\n\"Stay calm. We don't know that anything has happened to her. What does she drive? We could go by the bookstore and see if her car is in the parking lot or by her house and see if she's there.\"\n\n\"She rides the bus. We could go by the bus stop.\"\n\n\"I'll drive you.\"\n\nGrant nodded, mildly relieved to have some semblance of a plan. His dad was renting a brand new Porche and it was a testament to Grant's agitated state of mind that he didn't even notice, let alone roll his eyes at the opulence as he sunk into the luxurious leather seats. They rode in silence and pulled up at the empty bus stop a few minutes later. Grant was about to tell his Dad to drive by her apartment when Don stopped the car and got out. He picked something up off the ground and got back in the car, tossing a book on Grant's lap.\n\n\"Their Eyes Were Watching God,\" Don said. \"She was reading that this morning.\"\n\n\"Oh, fuck.\"\n\n\"I think you need to call the police.\"\n\n...\n\nAnna was sitting at the bus stop reading when the shiny red BMW pulled up and honked. She glanced up, but the window was tinted and she couldn't see inside. She looked back down at her book, pretending to ignore the car while staying alert. It honked again. Finally she looked up and squinted at the window in an attempt to see inside. Then she smelled it. That cologne. \n\nThe blood drained from her face and she stood to run, but he was standing right behind her holding his jacket open so she could see the gun tucked in his waistband. It had to be the same guy, his face was covered in yellowing bruises and there was an ugly scab across his bottom lip that made his sneer look all the more menacing. She heard the whine of the car window lowering behind her, but her eyes were fixed on the man in front of her. \n\n\"Anna, so nice to see you again.\" Celia's voice sounded syrupy sweet, but Anna hardly heard her over the pounding of her heart. \"Go on and hop in the back seat, honey. We're gonna go for a little ride.\"\n\nShe shook her head and tried to move away, but the blonde man grabbed her arm and spun her toward the car. Celia reached back and opened the door and the man pushed her in roughly before sliding in next to her.\n\n\"Wouldn't want you to try anything stupid back here alone, would we?\" he asked, a malicious grin on his face. \"Besides, you and I have some unfinished business.\"\n\n\"Peter, keep your hands off her. You had your shot at her the other night and you fucked it up. Just concentrate on keeping her under control. Let's see if you can do your job this time.\"\n\nThe man sneered at the back of Celia's head and then turned his sullen glare on Anna. She backed as far away from him as she could, pressing herself against the door on the opposite side. Her mind was racing as she tried to put the pieces together and figure out what was going on.\n\n\"So you two know each other, huh? That's...interesting.\" She was sure her voice would be shaky, but anger made it come out strong and hearing it made her feel slightly better. \"What do you want from me, Celia?\"\n\n\"We've got a little surprise party planned for your boyfriend.\" The last word was said with such scornful malice it sent a shiver down Anna's spine and when she recognized that they were heading toward the club her panic kicked up a notch. She couldn't let them hurt Grant.\n\n\"He's not there. He's not at the club today,\" she lied. \n\n\"Oh, that's okay. He'll come running soon enough.\" Celia met her eyes in the rearview mirror and winked, then turned her attention back to the road, humming a happy little tune. It was then Anna knew there would be no reasoning with her. She could see in Celia's eyes that she wasn't all there. \n\nHer heart dropped to her feet when she saw Grant's car in the parking lot and fell another notch when she realized Corie was here too. The idea of involving anyone else in whatever was going on terrified her...though maybe between the three of them they'd be able to overpower these two. Half-formed plans had begun to materialize in her brain when Celia pulled into the alley entrance and the blond man, Peter, pulled her close and whispered in her ear.\n\n\"Don't try to pull anything stupid. Believe me, I will not hesitate to shoot you. I figure you'll stay warm long enough for me to get what I want out of you.\" His hot breath blew across her face as he laughed and she retched, as much from the overpowering scent of him as his words. He backed quickly away.\n\n\"If you puke on me again I swear to God-\"\n\nCelia opened the door, cutting off his angry tirade. \"Oh goody, Grant's already here. Let's get this party started.\" Celia smiled excitedly at Anna as Peter pulled her to her feet. Celia tucked Anna's arm in the crook of her elbow and towed her into the alley with a cheerful expression on her face. To look at her you'd think they were about to have a friendly lunch together. \n\n\"You're going to knock on the door, smile at the camera, and wave. That's all. If you try to run or give any sign there's anything wrong Peter will shoot you.\" \n\nAnna stumbled down the alley toward the back door of the club. It was a bright, sunny day, but she felt cold to her bones and she couldn't stop shaking. No doubt that was a normal reaction to being snatched from the sidewalk at gunpoint, but somehow that didn't make her feel any better. Celia and Peter arranged themselves on either side of the door and Anna knocked. She looked up at the camera and waved, hoping no one was watching the monitor behind the bar.\n\nAfter a minute or two Anna started to breathe easier. Maybe they weren't in there. Maybe they were at the restaurant. Maybe this would ruin Celia's plans and she'd just leave. The door opened, cutting off her thoughts.\n\n\"Damn, I am glad to see you,\" Corie said as she opened the door. \"Grant's gone to-\" She trailed off as Celia and Peter stepped into view. ",
        "\"I'm so sorry,\" Anna whispered, tears pricking her eyes. Peter pushed her inside and stepped in behind her, gun in hand. \n\n\"Celia, what a lovely surprise,\" Corie said casually.\n\n\"Shut up.\" Celia knocked the cell phone out of Corie's hand and stepped on it, grinding her pointy heel into the screen.\n\n\"What the fuck? I hope you have a hundred bucks to cover my insurance deductable on that.\"\n\n\"I told you to shut your mouth. Peter, make yourself useful and point the gun at this little bitch.\" \n\nCorie's eyes widened as Peter aimed the weapon at her and Celia ushered her backward down the hall. \n\n\"Did you say Grant was gone?\" Celia asked.\n\n\"Did I? I don't recall. He could be here somewhere, it's a big place.\"\n\n\"Look you little freak, while I would just love for you to give me an excuse to have Peter shoot you in the face, it would make quite a mess and this would all work much better if you would just do exactly what I tell you to do.\"\n\n\"I'll try, but I'm warning you I've never been great at doing what I'm told.\" \n\n\"I'll start you off with an easy one, since I know your mental capacity is limited,\" Celia said with a smirk. She gestured to the storage room door with a perfectly manicured hand. \"Go in.\"\n\nCorie opened the door and they all filed into the room, closely packed with shelves full of boxes. \"If you're here to rob the store room you should have waited a few days. I've only got three jars of olives left and I need at least one for tonight. Got a whole case of margarita mix though, if you want that.\" Corie casually pointed around the room. \"And our delivery is coming tomorrow if you want to just-\"\n\n\"Open the beer cooler.\"\n\nAnna could see the muscle in Corie's jaw twitch and she hesitated just a moment before stepping over to the large walk-in cooler in the corner and pulling open the door. A wave of cold air hit Anna's feet and she shivered.\n\n\"Get inside.\" Celia tried to push Corie into the cooler, but she stayed at the entrance, blocking the opening. \"Peter, hurry up and take care of them so you can go get the stuff out of the trunk.\"\n\n\"Oh, I'll take care of them. It'll be my pleasure.\" Peter leered at Anna and wrapped his free arm around her waist, pulling her toward the cooler.\n\n\"We don't have time for that. Just handcuff them in there so I can go make sure there's no one else here.\" Celia's impatience was clear in her voice. Peter nodded, but the way he looked at Anna as he pushed her toward the cooler made it clear he had his own plans for what was going to happen once the handcuffs were on.\n\n\"What's wrong, Celia? Are you too afraid to take care of me yourself?\" Corie spat out. \"I can't blame you. A rich bitch like you couldn't possibly-\"\n\nThe slap echoed through the storage room, knocking Corie onto her ass on the cooler floor with a dazed look on her face. Celia grabbed the gun from Peter's hand before stepping carefully inside. She stood over Corie, that same detached look in her eye that Anna had seen in the car, as she smiled and pressed the pointed toe of her shiny red shoe into Corie's chest, pushing her back down on the floor. \n\n\"You've caused me enough trouble over the years, you little slut. I know you were the one who talked Grant into forcing me out of the business. I tried to teach you your place. I tried to show him what a nasty little whore you are and somehow you pulled his strings and got him to beat poor Kenneth to a pulp. And then you let Grant go to prison for it. For you. As if you were worth a second of his time, let alone a whole year of his life. I don't know what kind of hold you have over him, but it's going to end today.\" \n\nCorie just stared up at her, completely dumbfounded, while Celia pointed the gun down in her face.\n\n\"No!\" Anna screamed, pulling against Peter's hold. \"Leave her alone!\" \n\n\"Isn't that sweet?\" Celia crooned to Corie over the barrel of the gun. \"She's sticking up for you. Do you think she'd still give a shit if she knew you've been fucking her boyfriend for the last six years? Really, she should thank me.\" \n\n\"You bitch!\" Anna cried. \"I knew you were screwing him behind my back.\" Corie looked from Celia to Anna, the expression on her face clearly indicating that she thought the entire world had gone insane. \"If she doesn't kill you I'll beat the shit of you myself.\" \n\nUnderstanding washed over Corie's features, but she quickly covered it with an indifferent shrug. \"Hey, it's not my fault if you can't give him what he needs. I knew from the beginning your prissy vanilla ass would never be enough for him.\"\n\nCelia smirked, clearly agreeing with Corie. \"He is a man of eclectic tastes,\" she said fondly, the gun hanging forgotten at her side.\n\n\"Yeah, it didn't take long before he got bored with little miss bookworm and came looking for some real fun.\" \n\nAnna roared with an anger that was, in part, real; the result of a brief speculation about what Celia might know about Grant's eclectic tastes. She tried to focus on Corie as she twisted and pulled against Peter's grip. \"Let me go, you bastard. I'm gonna yank that metal out of her face and stick it up her ass.\"\n\nCelia looked back and forth between the two girls with a gleeful expression on her face. Finally she made a noise that Anna could only describe as a sadistic giggle and turned to Peter. \"Lock them in together, let them duke it out.\"\n\nPeter gave a disappointed grunt and shoved Anna through the door. She tripped over Corie's legs and fell on the floor next to her, looking up just in time to see the door slam shut. \"Tell me there's a safety latch on the inside of that door,\" she said, scrambling to her feet. She held out a hand to Corie, who pulled herself up and nodded thanks.\n\n\"There is. Let's just hope they're too stupid to realize it. Give them a few minutes to leave the room and I'll try to open it.\"\n\n\"I thought she was going to kill you.\" Anna couldn't stop herself from wrapping her arms around Corie's thin frame, hugging her close. After a second or two she felt a couple of tentative pats on her back and released her, stepping back to see the uncomfortable expression on Corie's face.\n\n\"Yeah, I did too. I probably would have shit my pants if I hadn't been trying to wrap my brain around the fact that the crazy bitch got someone to rape me.\" She cleared her throat and met Anna's eye. \"Thanks, by the way. For stopping her.\" \n\n\"No, thank you. I know you were only baiting her to keep her from leaving that creep alone with us.\"\n\n\"Alright, well we're even. Just don't hug me again and we'll be cool.\" She said the words with a faint smile so Anna knew she was kidding...mostly.\n\n\"You think they're gone yet?\"\n\n\"Only one way to find out.\" Corie pressed the button to release the door from the inside. For a spit second Anna's heart soared as the door swung open, but it stopped short. Through the two inches of space between the door and the wall they could see the chain of the handcuffs holding it closed.\n\n\"Fuck. I guess that guy's not as stupid as he looks.\" Corie pushed on the door, rattling it against the cuffs, but it didn't budge. \"I'm afraid to make too much noise...oh, fuck it.\" She reared back and slammed into the door with her shoulder then doubled over and clutched at her arm, groaning in pain. \"Goddamn, that was not a good idea.\"\n\n\"Are you alright?\" \n\n\"Yeah, it's fine.\" She bent and flexed it her arm to make sure. \"If only I had some ice to put on it.\"\n\nAnna lifted her eyebrows at that, but when she saw the tiny smile twitch at the corners of Corie's mouth she couldn't help smiling back. She had to admit, Corie's ability to joke was probably all that was keeping her from total panic.\n\n\"Fucking-A it's cold in here. Grant better hurry.\"\n\n\"What? Where is he?\"\n\n\"He was out looking for you. As soon as I saw you on the monitor I sent him a text that you were here. I'm not sure how far away he was, but he's probably on his way now.\" \n\nThe two girls took turns kicking the door while Corie explained what Grant had learned from Officer Cooper and Anna told Corie about her conversation with Grant's dad. The kicking, while completely ineffective at getting the door open, helped keep them warm and gave them something to focus on. But it was also loud and it wasn't long before they heard someone open the storage room door.\n\n\"Hey!\" Corie shouted through the opening. \"It's a little chilly in here. If you two are done with your diabolical secret plan you think you could go ahead and let us out?\"\n\nA shadow crossed the opening and a face appeared, but it wasn't one they expected. Piercing blue eyes looked in at them with utter surprise.\n\n\"What the fuck are you doing in there?\" Eric asked, pulling on the door to test the handcuff's strength.\n\n\"Oh, ya know. It's a hot day. Thought we'd cool off, maybe have a beer,\" Corie replied, her voice dripping with sarcasm. \"I don't suppose you have a handcuff key on you, do you?\"\n\n\"Please be careful, there are two people with a gun out there somewhere,\" Anna whispered. \n\n\"Oh shit. Hold on a sec.\" Eric glanced over his shoulder at the closed store room door, dug in his black bartender's apron and pulled out a pen, unscrewed the end, and slid out the ink cartridge. \n\n\"Great, he thinks he's fucking MacGyver,\" Corie muttered under her breath. \n\nApparently she wasn't quiet enough because those blue eyes lifted to hers for the briefest of seconds and one side of his mouth came up in a crooked grin. He opened his mouth and Anna thought he was going to say something, but instead he stuck the cylinder in and bit down, pulling it through his teeth to flatten it at one end. Then he slid the flat end into the closed cuff to release the catch and the cuff slid open. \n\n\"Oh hell yes.\" Corie whispered.\n\nEric pushed the freezer door closed to remove the cuffs, then swung it wide. The girls rushed out, but he stopped them with a finger over his lips. He peeked out the storage room door and then stepped into the hallway, waving for them to go ahead of him toward the back door. They were almost there when Corie froze and Anna ran into her back.\n\n\"I smell gasoline.\" She turned with a wild look in her eyes. \"Shit, they're going to burn it down.\" She dodged around Anna, but Eric caught her around the waist with one long arm. \n\n\"You're going the wrong way, sugar.\"\n\n\"Let me go, I have to stop them.\" She pushed against his chest trying to free herself, but he held tight and leaned down to look her in the eye.\n\n\"No. You don't. You have to get out of here before someone gets hurt.\" He nodded at Anna and she headed down the hall as he turned Corie and guided her toward the door. They spilled out into the alley just as a crowd of people came rushing toward them from the parking lot.\n\n\"Anna!\" Grant shouted, rushing forward and catching her in his arms. She was still shivering from the cooler and his arms were so warm and tight around her she felt lightheaded as she clung to his chest. \"Thank God. Are you okay? You're freezing.\"\n\n\"I'm fine, they locked us in the beer cooler.\"\n\n\"Who is it? How many people? Are they armed?\" Officer Cooper fired off questions as he moved the crowd toward the parking lot and away from the door.\n\n\"Two. Celia and the man that drugged me. They have a gun, but I'm not sure who's got it now.\" Anna said around her chattering teeth. Somehow the warmth of Grant's arms around her was making her feel colder from the inside out.\n\n\"They're gonna set it on fire. You have to stop them.\" Corie's teeth were chattering too, and she was rubbing at her bare arms with both hands. Eric walked up behind her and draped his white button up over her shoulders. Corie pulled it around her and glanced back, but the thank you froze on her lips as she did a double take. Anna couldn't blame her, it was a striking sight. Nearly all the skin exposed by Eric's white undershirt was covered in colorful tattoos.\n\n\"Thanks McGyver,\" Corie finally said, her eyes still on Eric's arms. The arm Anna could see had a green and gold dragon curled around it, its face with a grinning mouth full of teeth about to leap off his shoulder.\n\n\"No problem, sugar.\"\n\nOfficer Cooper lowered his radio after reporting what he knew and herded the group back down the alley toward a line of police cars in the parking lot. \"We're gonna get the EMTs to check you two out, just in case,\" he said to Anna and Corie.\n\nBoth girls protested, but no one listened and within a few minutes Anna found herself sitting in the back of an ambulance with Corie, both of them draped in silver thermal blankets while a couple of paramedics checked them over. Grant was just outside the open doors watching them with an eagle eye and Eric stood not far away talking to a police officer. They overheard him saying that he'd just stepped into the alley for his break when he noticed the back door to the club was open. Knowing it was unusual for the door to be left unlocked, he'd peeked in to investigate and that's when he heard banging that turned out to be the girls kicking the cooler door.\n\nFrom the ambulance Anna watched the fire truck pull silently into the parking lot and not long after she saw two police cars pull out, one with Peter in the backseat, the other carrying Celia. She hadn't realized how afraid she still was until she saw them both disappear around the corner.\n\n\"Fucking crazy bitch,\" Corie murmured, surprising the paramedic taking her blood pressure.\n\n\"Can't argue with you there,\" Anna agreed.\n\nBy the time the paramedics were done with Corie and Anna most of the excitement was over, but the parking lot was still full of milling police and firefighters. The building was still a crime scene, so they stood in the parking lot giving what seemed like endless statements to the police. \n\nAnna and Corie were sitting on the trunk of Corie's car telling Grant about how Eric had jimmied the handcuffs open when Don walked up and clapped Grant on the shoulder. The similarities between the two men were more apparent when they were standing next to each other. She was shaken from her thoughts by Corie craning around.\n\n\"Hey what happened to that guy, anyway?\"\n\n\"Who Eric? I don't know. I haven't seen him for a while. I guess he left when he realized he wasn't going to be working anymore tonight.\"\n\n\"I forgot to give his shirt back.\" Corie tugged at the collar of the shirt she was still wearing, pulling it up to her nose and sniffing it. Anna had to suppress a smile before she could answer.\n\n\"I'm sure he won't mind it you hold onto it for a while.\"\n\nDon turned toward them and gave the two girls a bright smile.\n\n\"I'm glad to see you're alright, Anna.\"\n\n\"Grant said you helped him look for me. Thank you.\"\n\n\"It was the least I could do, sweetheart.\"\n\n\"Watch it, Dad,\" Grant said, his eyes narrowed.\n\n\"What?\" Don looked at Grant with such an innocent expression Anna couldn't tell if it was sincere or contrived.\n\nGrant's suspicious look faded into something more like amused annoyance and he shook his head. \"Just try to dial back the charm when you're talking to my girlfriend.\"\n\nDon laughed and winked at Anna. \"I don't think you've got anything to worry about with this one, but I'll try.\" He turned his gaze on Corie and smiled affectionately. \"Corinne, it's good to see you again. I only wish it were under better circumstances. Are you okay?\"\n\n\"Thanks Don, I'm fine. It's nice to see you again, too.\"\n\nDon turned to talk to Grant and Anna lifted her eyebrows at Corie. \"Corinne?\"\n\nCorie rolled her eyes. \"Don't even think about it, he's the only one who gets away with calling me that. And that's only because he pestered me for years about what my real name was and I made the mistake of thinking telling him would shut him up.\"\n\nThey looked over at the two men talking and Anna noted with amusement that they both stood the same way, arms folded across their chests, heads tilted at the exact same angle. \n\n\"It's good that they're talking again, right?\" Anna quietly asked Corie.\n\n\"I think so. I've always liked Don. I can't help it, he's a nice guy. They butt heads a lot and sometimes it seems like he is trying to piss Grant off on purpose, but he's not a bad guy. Grant's too hard on him. This is the longest they've been angry at each other since I've known him.\"\n\n\"What happened?\" \n\n\"Nothing really, they're just two stubborn assholes. Don wanted to hire an expensive defense lawyer and Grant refused to let him. Don made a rude comment about how bad a conviction would look, Grant accused him of only caring about his career, they both blew up, next thing you know two years has passed and they haven't spoken to each other.\" \n\n\"That's so sad.\"\n\nCorie shrugged. \"Yeah, it is. They may not get along, but they're family and they're lucky to have each other. \" \n\nAnna looked at her speculatively, noting the envious tone to her voice. She felt a pang of regret. It had been nearly a month since she'd talked to her own family and she realized she missed them. The last time she called things hadn't been serious enough with Grant to mention him, but she had a sudden urge to tell her mother all about him and decided she'd have to do that very soon.\n\nWhen the local news stations started showing up trying to get footage of the chaos Don left in hopes that it might put a damper on the paparazzi and the rest of them retreated into the restaurant, which had already been closed to customers for the evening. Grant had the remaining kitchen staff whip up some food and fed the remaining police and fire fighters, earning him the eternal goodwill of the city's finest.\n\nOfficer Cooper, who was quickly becoming one of Grant's favorite people, called and told Grant that the interrogations of the suspects were going quite well. Celia tried to blame Peter for everything, claiming he was the one with the gun and he made her drive to the bookstore to look for Anna so he could finish what he'd started a few nights before. When the police told him what she said Peter, who'd been uncooperative up to that point, started talking and didn't stop until the whole convoluted plan had come to light. He knew he could never afford the kind of lawyer Celia would be able to hire so he figured his best chance was to get the cops on his side.\n\nHe'd met her while he was working at her country club and they'd been sleeping together pretty much ever since. The whole time he'd known her, Celia had talked about this guy Grant and his club. When he'd opened his restaurant a year ago, she'd become fixated on hurting his business in the hopes that if she could get him desperate enough for cash, she'd be able to swoop in just in the nick of time to bail him out.\n\nCelia had paid people, or had Peter come in town to pay people, to do everything from making false complaints to the health department to screwing up deliveries and when that didn't have the desired effect she'd come up with the scheme to frame Grant for tax fraud and report him to the IRS. When she'd asked Peter if he knew someone, preferably an attractive, easily controlled female, he would be able to convince to move to town and get a job at Grant's restaurant, he had immediately thought of his ex-girlfriend, Janette. She had a pill problem and was willing to do pretty much anything for cash. \n\nAnd then Celia had arrived in town the week before and found out about Anna. Peter claimed she'd gone batshit crazy about it. She said he had to get to Anna, told him to do whatever he wanted to do as long as he made sure to mess up her face in the process, and even provided him a handful of roofies to do the job. It didn't make much sense to him, but he knew better than to argue with Celia when she'd made up her mind about something. He claimed he never had any intentions of actually hurting her, though according to Cooper the police were taking that with a grain of salt.\n\nWhen Janette and Peter both got caught and arrested on the same night Celia realized that not only was the entire plan unraveling before her eyes, it was happening in such a way that she was at risk of being exposed. In an act of desperation she'd called in a bomb threat, hoping it would distract the police and bring negative publicity to the club. The next day Janette called her in hysterics after seeing Peter at the police station and threatened to go to the police and admit to everything. That was when Celia decided to take care of the evidence along with the witnesses and came up with the plan to burn the place down and frame Janette for it. ",
        "Peter said he'd tried to talk her out of including Anna in the plan. He was convinced they'd have been able to pull it off without the added complication of snatching her from the bookstore and locking her inside, but Celia had been intent on making Grant watch the place burn down with Anna inside, a fact that Grant did not share with Anna when he related the story later. \n\nDon offered to bring Anna home when he left, but she wanted to stay with Grant, who was still waiting to be let inside his club. Eventually they were cleared to go in and look around. The damage was mainly confined to the club side of the building. The dance floor and lighting were a total loss, as were the electronics in the DJ booth. Peter tried to set the pool table on fire, but it just smoldered so there was only minor smoke and water damage in the bar area. Corie was pleased to find that the bar itself was perfectly intact, along with all the alcohol, but couldn't help pointing out that if she'd been trying to burn the place down she'd have just busted all the bottles and tossed a match at them; a statement that earned her an odd look from the fire chief.\n\nFinally, when there was no one left to tell the story to and no more immediate decisions to be made, Grant asked Anna if she was ready to go. Completely exhausted and still in a daze, she agreed. She felt like she didn't quite come back to her senses until they walked through the door of Grant's place blessedly alone. \n\n\"Are you hungry?\" Grant asked, looking down at her with a concerned expression on his face.\n\n\"No.\"\n\n\"You haven't eaten all day, babe.\"\n\nAnna sighed and pressed her forehead to his shoulder, wrapping her arms around his waist. \"I'm not hungry. I just want to curl up in your big comfy bed; preferably with you in it.\"\n\nGrant's arms automatically enfolded her and he pressed his cheek against her hair. \"You smell like smoke. Why don't you go take a shower while I make you something. Then we'll curl up in bed, I promise.\"\n\nShe nodded against his neck. Now that he mentioned it she noticed the oily smell of gasoline smoke clinging to her skin. She lifted her face for a quick kiss and trudged to the bathroom. Once she was under the hot spray it felt so good she just stood there, letting the warmth soak in. She was startled to awareness when the bathroom door opened and she peeked out the curtain to see Grant undressing. \n\n\"I smell like smoke, too,\" he said with a weak smile.\n\n\"I'm sorry. I've been in here forever and I haven't even washed yet.\"\n\n\"That's alright, I don't mind sharing.\" Grant stepped into the shower with her and she scooted to one side so he could get under the spray. Anna bit her lip at the sight of him leaning back to wet his hair, the water running in rivulets into his face and down his chest, his arms raised to push the hair back from his face. When he looked up and wiped the water from his face their eyes met. Anna smiled and traced one of the streams of water down over his pierced nipple, making him jump. \n\nHe gently pulled her hand away from his chest, turning her so she faced away from him and pulling her back under the spray. \"Come on, let's get cleaned up.\" \n\nAnna suppressed a little swell of disappointment and reached for the shampoo, but he snatched the bottle from her hand and squeezed a dollop into his own palm. She turned and shot him an annoyed glare, but he just rolled his eyes and started rubbing the shampoo into her scalp.\n\n\"Oh,\" she said, turning back around. \"Okay, that feels good.\"\n\n\"I know.\"\n\nHis fingers worked in little circles all over her head and she just closed her eyes and enjoyed it. Large dollops of foam fell at her feet as he started working the lather down her long hair, then piled it up on top of her head and scrubbed it all together. She shivered a bit and Grant moved, letting the water warm her. He reached up and adjusted the shower head so it hit her hair and she moaned as the soap rinsed away and her hair slipped out of its pile into long wet strands down her back. Grant turned her head gently this way and that to get all the soap out and when he finally let go she felt so relaxed she was slow to open her eyes.\n\nHe handed her the bottle of conditioner. \"I don't know how to use this stuff, so you'll have to do that part yourself.\"\n\nShe laughed and moved out of his way so he could wash his own hair while she conditioned hers. \"Did you buy my shampoo and conditioner on purpose?\"\n\n\"Yeah.\" He looked up with one eye squinted to keep dripping lather out. \"When you use mine it makes you smell like me. This way, not only do you smell like you're supposed to, my whole shower smells like you.\" \n\nThey traded places and Anna rinsed her hair again while he washed his body. \"Weren't you afraid that would make for extra long showers?\" She grinned and pulled the soapy washcloth from his hands with little resistance, running it over his chest, down his arms, across the back of his neck, enjoying the slick feeling of the soap on his hard muscles. It didn't escape her notice that his body was responding to her touch and she moved closer, her breasts smushing against him as she reached around to scrub his back.\n\nHe put a finger under her chin and lowered his lips to hers, kissing her gently as she made circles over each firm butt cheek. He moaned softly into her mouth and Anna reached down to encircle his hardening shaft with her hand, but he stopped her. Staring into her eyes he shook his head and took the cloth from her, added soap and started washing her body quickly and efficiently. \n\n\"What's wrong?\" she asked as he pushed her hair over one shoulder and scrubbed her back.\n\n\"Nothing.\"\n\nShe looked over her shoulder at him and cocked an eyebrow in disbelief. He stopped washing and wrapped one arm around her waist, pulling her back against him. \"I'm sorry. I'm self-flagellating.\"\n\nAnna couldn't help the little giggle that escaped her. \"That's a good word for it.\"\n\n\"Yeah, Corie came up with that one. I'm trying not to, but I can't help feeling responsible. Celia was trying to get back at me-\"\n\n\"Celia is crazy, Grant.\"\n\n\"I know. And I know I can't always be there to keep you safe, but...\" He shrugged, still holding her tight. \"I want to take care of you now, since I wasn't there earlier.\" \n\nAnna turned in his arms so she could look him in the eye. \"Look, what happened the last few days... I'm not saying I'm going to just forget it all, I don't think I could if I wanted to. But it's over. I want to put it behind me; behind us. We can't do that if you're falling all over yourself trying to make up for something that wasn't your fault to begin with. Does that make sense?\" \n\n\"Yeah, it does.\" He nodded. \"Right. No more self-flagellation. If I feel like I need a whipping I'll let you administer it.\" Anna snorted and looked up to see the little smile on his face. \"But you have to promise to forgive me if I get a little bit protective. I'm feeling kind of gun shy. Literally.\"\n\n\"It's a deal.\" Her smile faded and she wrapped her arms around him again. \"I'm so ready to just be with you without all the drama. I'd already made up my mind before all this happened that I was ready for that and now...\" She shrugged, unable to sum up in words the feeling of mortality, of the fragility of life, of the need to make the most of every moment that was suddenly so apparent to her. The only words she could come up with were the ones that, until now, she'd had so much trouble saying to him. \"I love you. I need you to know that.\"\n\n\"I do know that. And I love you too.\" He whispered the words and held her so tight all she could do was wrap her arms just as tightly around him. Finally he let her go and she looked up at him. He cleared his throat and gave her a little smile. \"Come on, let's get out before we turn pruny.\"\n\nThey finished their shower in what was left of the warm water and got out together. Grant disappeared into the kitchen and Anna headed upstairs to put on some pajamas, her eyes drifting closed the second she laid back on the pillows. She opened them a few minutes later when Grant set a tray loaded with food on the end of the bed. A loud rumble came from her stomach as the smells hit her and she suddenly realized how hungry she really was.\n\n\"Wow, this looks amazing. What is that, grilled cheese?\" she asked, reaching for a wedge that was particularly oozy with melted cheese.\n\n\"It's smoked gouda with granny smith apple slices on buttered rye.\" Grant let the towel drop from around his hips and pulled a pair of boxers on and Anna tore her eyes away from him to take a bite of the sandwich in her hand.\n\n\"Oh my god,\" Anna moaned around a mouthful of food. \"That's the best grilled cheese I've ever had in my life. I don't know how you come up with this stuff.\"\n\n\"Well, that one wasn't my idea. I saw someone do it on a cooking show once. But I'm glad you like it.\"\n\n\"I love it.\" She scooped a few blueberries out of a bowl with her fingers and looked up at him with a smile. \"And you put almonds in the berries. My favorite.\"\n\n\"I know,\" he said, smiling as he plopped down on the bed next to her, his damp hair sticking out in all directions. Anna held the sandwich out and he took a huge bite, leaning back on the pillows to chew. \n\n\"You should just move in with me and be my personal chef. I can pay you in blowjobs.\" \n\nGrant made an odd noise and sat straight up, his eyes watering as he tried not to cough half-chewed food all over the bed. Anna handed him a glass of water from the tray and tried not to laugh as he took a long sip.\n\n\"Sorry, I didn't mean to choke you up.\"\n\n\"I'm alright,\" he gasped, wiping his eyes with a napkin. \"You just caught me off guard.\" Grant grabbed a sandwich of his own, but just stared at it, picking at a piece of charred cheese with his fingers. \"Actually, you kind of read my mind. I was thinking about asking you to move in with me here.\"\n\nAnna froze mid-chew and stared at him, unsure what to say and unable to speak in any case with a mouth full of food. \n\n\"I thought once you go back to school it might make things easier, you know? We'd be able to see each other more often, neither of us would have to live out of an overnight bag, maybe it would help you save some money for school.\" \n\nAnna gazed at him speculatively as she finished the bite in her mouth. \"So you want me to move in because it would be convenient?\"\n\n\"No, of course not.\" He shook his head, a slightly sheepish expression on his face. \"After what you said in the shower I thought appealing to your reasonable side would be more effective than just telling you that I want you here. Not just so I can look out for you, although that's part of it. I want to make you grilled cheese sandwiches when you're hungry and know you're home safe at night. But I also want to smell your shampoo in my shower and wake up next to you every morning.\" He lifted his eyes to hers and she melted a bit at what she saw in them; the uncertainty, the need, the love. \"You don't have to answer right now. Just think about it, okay?\"\n\n\"No.\"\n\n\"No?\"\n\n\"I don't need to think about it. I want those things too.\"\n\n\"Really?\" The pleasure that warmed his face sent a thrill to her heart and she felt like something clicked into place. This felt good. It felt right. \n\n\"Really. Especially the grilled cheese sandwiches,\" she said with a teasing grin. \"But you have to let me pay rent and help with the bills. I refuse to be your kept woman.\" \n\n\"Does that mean you won't let me buy you a car?\" \n\nAnna snorted and rolled her eyes, polishing off the remnants of her sandwich. \n\n\"I wasn't kidding. Please, babe, you'd be so much safer-\"\n\n\"No Grant, I'm not going to let you buy me a car.\" She shook her head at the sheer ridiculousness of the idea. \n\n\"What if I bought myself a car and let you drive the jag?\"\n\n\"That's the same thing! I don't want-\"\n\n\"Alright, alright, we'll work something out. I don't want to argue right now. Right now I want you to know how incredibly happy you just made me.\" The look on his face echoed the truth of his words as he pulled her in for a kiss. \n\nAnna sighed as his lips slid gently over hers, her fingers lacing into his hair as his tongue swirled slowly into her mouth. When he finally pulled away she had to force her eyes open to clear the fog from her brain. \"I love you,\" she whispered, the words still a little unfamiliar on her lips.\n\n\"I love you, too.\" He pressed his lips to hers briefly. \"Now hurry up and eat because I don't know how much longer I can control myself.\"\n\n\"We could eat after,\" she said, licking her lips, her eyes drifting over his bare chest.\n\n\"Nope. Food, then sex, then sleep. It's the natural order of things.\" He took an enormous bite of his sandwich to punctuate his statement.\n\nAnna laughed, but turned back to her food without argument. \"You thought I was going to say no, didn't you?\"\n\nGrant smiled and shrugged. \"I expected to have to do more talking you into it. I was afraid you'd think it was too soon.\"\n\n\"A week ago I might have.\" She stared down at the berries in her hand as she spoke; trying to take her own advice and not let the events of the last few days throw shadows on this happy moment. \"But what would we be waiting for? I want to be with you now and I want to make the most of whatever time we have together.\" \n\n\"Exactly what I was thinking.\"\n\nThey met each other's eyes and smiled, then turned their attention to finishing dinner. Anna downed an entire sandwich and a half and picked all the almonds out of the berries before she finally leaned back and put a hand on her full belly, groaning in satisfaction. Grant moved the tray to the bedside table and sidled up next to her, placing wet kisses down her neck.\n\n\"I don't know, Grant. You might have missed your chance. I'm so full now I can hardly move.\"\n\nGrant nuzzled the side of her breast and chuckled. \"We'll see about that.\" His lips brushed lightly over her nipple, his hot breath seeping through her shirt sending a deliciously warm tingle through her body. When he grazed the hardening nub with his teeth, pulling gently at it, her back arched in pleasure and her hand came up to grasp the back of his head and hold him in place. \"Yeah, that's what I thought.\"\n\n\"Arrogant bastard,\" she murmured, the smile on her face belying her pretended irritation.\n\n\"Damn right.\" He bent his head to her breast again and Anna closed her eyes and tried to lie still just to see if she could. \n\nGrant moved slowly, sliding his hand under her shirt and teasing her with his fingers, eventually slipping her shirt up and over her head so he could taste her skin, savoring every sigh and shiver he pulled from her. As he traveled over her body, his tongue exploring the dips and hollows of her collarbone and neck, she marveled at his ability to make her crave his touch so badly. She tried to be patient, to enjoy the slow build-up, but the need for more was nearly overwhelming. She writhed under him, trying to urge him on or, at the very least, get some kind of stimulation by rubbing herself against his thigh. \n\n\"Mm, you're moving again,\" he whispered against the delicate skin just under her ear. \"You keep that up and I might think you want me after all.\"\n\n\"You know I do.\"\n\n\"Tell me.\"\n\nAnna grasped his face between her hands and looked into his eyes. \"I want you.\" She gasped as his hand slipped into her shorts and stroked her through her panties, his fingers pressing lightly along her slit until the thin cotton was wet through. \n\n\"Yeah, you do.\" He kissed her slowly, his tongue penetrating, delving deep while his fingers continued to tease her with their light touch. \n\nAnna moved against him, her legs parting in a silent invitation. She ran one hand down his body and into his boxers, her hand circling the insistent hardness she found there, her lips curling up at his deep moan. \"You want me, too.\"\n\n\"Yeah, I do.\" His voice was deep and raspy and sent another shiver down her spine. \"Since the second I laid eyes on you and it's never let up.\" Anna moaned as his fingers found their way inside her panties. Her hand tightened around him and she stroked in time with him as he slid his fingers slowly up and down the length of her wet slit, tracing her inner lips and circling her clit. \n\nHe dragged himself off her body and slid her shorts down, pulling her panties along with them so she was lying naked before him. His hands ran up the inside of her thighs, spreading her wider and she arched in anticipation, needing to feel him inside her. When he started kissing his way up her leg, she couldn't stop a disappointed little groan from slipping out.\n\n\"Patience, love,\" he murmured against the curls on her mound. Anna wasn't sure if the thrill that ran through her was from the sensation of his lips so close to her aching core or from the endearment that fell from his lips so naturally he didn't even appear to have noticed it. \n\nHis tongue was everywhere except where she wanted it to be and he was moving so slow she thought she might actually scream. When the tip of his tongue finally parted her folds and slid slowly upward, flicking hard at her clit, she cried out in ecstasy. And when his lips closed over the swollen nub and started suckling she came almost instantly, her legs tightening around his head, holding him in place until she finally came down on the other side.\n\nAnna found one of his hands and tugged on it trying to pull him up to face her, but apparently he wasn't done yet. His teeth grazed her sensitized clit over and over, slowly increasing pressure until he was biting and tugging it, making her legs tremble. She was so close, right on the edge when he stopped, his hand in hers and his warm breath tickling her tingling flesh the only clues she had that he hadn't just disappeared into thin air.\n\n\"Please,\" she whispered, squeezing his fingers in hers. She felt the bed shift and opened her eyes to see him lean over her, brushing her lips with a light kiss. \"Oh no, no, no please don't stop.\"\n\nHis eyes twinkled with amusement and a mischievous grin flitted across his face. \"But you sound so sweet when you beg, I can't help teasing you.\" \n\nAnna opened her mouth to complain, but all that came out was a shallow gasp as she felt the tip of him nudge her and start to slip inside. He moved torturously slow, sliding in a centimeter at a time. She pressed her feet against the backs of his thighs, lifting herself to meet him, aching for that moment his pelvic bone would grind against her clit and she could grab hold of the climax that was so tantalizingly close.\n\nGrant made it clear he had other plans when he started pulling back out just before he made contact. Anna cried out and her hands clamped down on his ass cheeks, her fingers digging in hard as she pulled him back down onto her, into her, filling her completely. She felt the rumbling deep in his chest as he gave in and let her take what she wanted, pressing his hips hard into her as she rocked frantically against him. \n\n\"Yes, yes, yes, oh Grant, yes...\"\n\n\"Mm, then again that sounds pretty sweet, too.\" \n\nFrom far away she could her that his voice sounded strained, but she was too far gone to pay attention to what he was saying. The blood was pounding in her ears, her muscles clenched tight all over her body, her hands still clamped on his ass as white hot pleasure flooded through her. Grant started slowly moving in and out, sending pulsing waves of heat through her belly.\n\n\"That's it,\" he whispered. \"Come hard for me, babe.\" \n\nShe let out a strangled sob as she finally peaked, her body shaking and breath coming in heaving gasps. Her hands finally released their death grip on his ass and found his face again, pulling him close for a kiss. She slid her tongue into his mouth, moaning against his lips as he met her aggression and returned it. \n\nThe kiss gentled as she came down. Her feet rubbed up and down the backs of his legs and her breath slowed while their tongues caressed each other. Anna trailed her fingers along the corded muscles of his back, occasionally using her fingernails just for the pleasure of feeling his muscles jump under her fingertips. He pulled his lips from hers to brush them along her jaw, nudging her head back so he could kiss and suck his way down her neck, his beard alternately tickling and rasping against her skin as he went.",
        "\"God, Grant,\" she whispered, her voice still shaky from the aftereffects of the orgasm. \"What you do to me...it should be illegal.\" \n\nHe chuckled low in his chest and traced her collarbone with the tip of his tongue, generating a new bloom of goose bumps on her skin. \"In some states it might be.\"\n\nHis eyes found hers as he started moving in her again, bringing a moan to her lips and a smile to his. She tried to keep eye contact, but as his thrusting grew faster and more powerful, her eyes drifted closed. For a while all that existed was the slowly building pressure, the aching need, the yearning toward completion. \n\nHer fingers danced erratically over his chest as he held himself above her, closing instinctively on the tight little nubs of his nipples. His low groan reached her through the fog of pleasure and she pinched tighter, rolling the pebbled flesh between her thumb and index finger, flicking the hard metal of the barbell on one side. She heard his breath coming in harsh gasps and she opened her eyes to see his eyes narrow and his mouth fall open in a silent moan.\n\nThe orgasm came slowly this time, creeping over her from the inside out so she had the time and presence of mind to watch him as he reached his peak, biting his lip for just a second before letting a stream of soft curses spill out. Through her pleasured haze she recognized the warmth of his seed deep inside as he jerked against her, pushing her climax higher. \n\nHe relaxed on top of her, sliding his fingers into her hair as he kissed her again. She didn't even notice him rolling to his side and pulling her with him as he kissed her slow and deep, their breath mingling between them. Finally he pulled away and looked into her eyes, a small, satisfied smile on his face.\n\n\"Can I tell you I love you again?\" he asked, stroking her cheek with his thumb.\n\n\"As many times as you want.\" \n\n\"I love you.\"\n\n\"I love you, too.\"\n\n...\n\nGrant woke the next day to find Anna already gone from his bed. The smell of coffee filtered through his panic, suppressing it, and he got up and threw on some jeans. On his way down the stairs he looked outside and saw his beautiful woman sitting cross legged on a deck chair, her phone to her ear and a mug of coffee in her hand. Her hair hung in a curtain down her back, shining golden brown in the morning sun, and the happy smile on her face was enough to make his heart burst.\n\nShe looked in at him and her smile widened, her fingers lifting in a little wave as he walked past the glass door on the way to the kitchen. Whoever she was talking to he figured he'd give her another minute of privacy while he got a much-needed cup of coffee. \n\n\"No, he owns his place so I'm moving in with him.\" Grant heard her say as he walked out the door a few minutes later. He dropped a kiss on her head and they exchanged smiles as he settled into the chair next to her. \"Well, I'll just let the lease go on my apartment and whatever I don't bring with me I'll donate. I got most of it from the Salvation Army anyway. It's the circle of life.\" \n\nGrant sipped his coffee and looked out over the river, a sense of contentment settling on him. It was a good feeling. For possibly the first time in his life he felt truly at peace. All the parties, the women, the work, none of it had ever filled that place in him that he'd been trying so hard to fill, but now...it felt like he'd come home. \n\n\"No Dad, I'm not pregnant.\" She looked at Grant, rolling her eyes and shaking her head in exasperation. \"Because I love him.\" She spoke into the phone, but her eyes were on Grant and the smile on her face was for his benefit.\n\nYeah, it was a good feeling. One he wasn't going to let go of any time soon, if ever. He made up his mind in that moment that there were some changes he needed to make in his life to make sure there was plenty of room for her. He'd been spreading himself too thin lately and it was time to take a step back and re-evaluate his priorities.\n\n\"Of course I'm going to finish school. This doesn't change anything other than where I live.\"\n\nHe looked up at the sound of her voice; the amused exasperation seemed to have turned to irritation. The smile was gone from her face and she was nervously rubbing the spot between her eyes with one finger.\n\n\"Anna,\" he said quietly. When she looked up at him inquisitively he held his hand out for the phone. She hesitated for a second, then nodded.\n\n\"Dad...Dad hold on. Grant wants to say hello.\" She looked distinctly nervous as she handed him the phone and he gave her a wink. \n\n\"Hi, this is Grant.\"\n\n\"Oh, um...hello Grant.\" The man sounded slightly put out to be talking to him.\n\n\"Mr. Webster, I just wanted to introduce myself. I hate to do it over the phone, but it will have to do until we can meet in person.\"\n\n\"I suppose that's a good idea. Anna says she's moving in with you?\"\n\n\"She is. And I understand why you'd be concerned. You don't know me and I imagine you worry a lot about Anna with her living so far away, but I want to assure you that I love her very much.\" He met Anna's eyes and gave her a little smile. \"I know she has goals she's working toward and I'm not going to stand in the way of any of that. I'll help her any way I can, at least as much as she'll let me.\"\n\n\"Good luck with that. She's got a stubborn streak in her.\"\n\n\"Yes sir, I picked up on that real quick.\"\n\n\"I bet you did.\" He chuckled and Grant grinned, knowing he'd taken a step toward winning the man over. \n\n\"You raised an amazing daughter, Mr. Webster. I thank my lucky stars every day that she came into my life.\"\n\nAnna gave him a sweet smile and moved over to sit on the chair next to him. She laid her head on his chest, wrapping her arms around him, and he sighed in contentment, forgetting for a second that he was on the phone.\n\n\"Well, thank you Grant. We think she's pretty amazing, too. And please, call me Richard. What?\" Grant could hear a female voice in the background. \"No, hang on.\" There was the distinct sound of the phone being dropped, then someone picked it up.\n\n\"Is this the young man my little girl is in love with?\" \n\n\"Yes ma'am, that's me.\" He couldn't help but smile; her voice sounded exactly like Anna's.\n\n\"She's told me all about you Grant. I hope at least half of it is true.\"\n\n\"Only the good half.\" \n\nShe had the same laugh as Anna, too.\n\n\"Well, I won't worry too much. I know my daughter and I trust her judgment. But I did want to ask you a couple of questions.\"\n\n\"I'll try to answer them.\" \n\n\"Do you love her as much as she seems to love you?\"\n\n\"Probably more.\"\n\n\"Good answer. If that's true, why do you want to live with her instead of just getting married?\"\n\nThat one gave him pause. He looked down at the top of Anna's head and thought for a long moment about how to answer. \"I thought at this point I was more likely to get a yes to the former than the latter.\" \n\n\"Oh. Well, you might be right about that. Last question. Do you think you can convince her to come home to visit?\"\n\n\"I will certainly try.\"\n\n\"Thank you, Grant. I'm going to have to let you go now; we've been monopolizing the community phone too long and the line is growing.\"\n\n\"It was nice to talk to you Mrs. Webster.\"\n\n\"It's Grace.\"\n\n\"I hope we can talk again soon, Grace.\"\n\n\"Take care of my little girl.\"\n\n\"I'll do my best.\"\n\nThey said goodbye and Grant hung up the phone. Anna lay still against him and he just held her for a while, half wondering if she'd heard what her mother had asked. Finally she looked up at him with a smile.\n\n\"Let me guess, you charmed the pants off my parents. They both want you to call them by their first names and my mom wants you to bring me home to visit.\"\n\n\"That's pretty much it,\" he said turning on his brilliant smile and winking at her. Anna snorted and laid her head back down on his chest, snuggling against him as they looked out over the river.\n\n\"Grant?\"\n\n\"Hm?\"\n\n\"You'll get a yes to the latter one day.\"\n\nGrant smiled and tightened his arm around her. \"I know.\""
    ],
    "authorname": "Panthem",
    "tags": [
        "love",
        "drama",
        "rough sex"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/turning-of-the-stars-ch-06"
}