{
    "title": "Orphan Ch. 07",
    "pages": [
        "Alexander stirred; sleep falling away from him gently as he became more and more lucid.\n\n'No dreams.'\n\nThe import of his first thought of the day struck him fully. It had been years since dreams, more like nightmares, had not roused him at least once during the night. In his contentment, he pulled the warm body in his arms closer, the gentle murmur of its owner bringing a small smile to his lips.\n\nAs reflexive action processed in his mind, Alexander stiffened. He had never awoken with someone in his arms, never felt the comfort of another body that shared his warmth and space in the first moments of the day.\n\nYesterday crashed back into his consciousness. The party, the fight, Willow, wolves and his mate.\n\nHis eyes opened. In the gray light that suffused the room, heralding the coming of the dawn Alexander found his chest covered by black tousled hair.\n\n'Jenabel.' Just thinking her name brought a smile to his lips. He closed his eyes, reveling in the feeling of her closeness, the feel of her skin on his. How her arm curled possessively around him, the way her leg was thrown over both of his, locking him to her.\n\nThey had both, upon returning to Jenabel's home last night nearly collapsed in the bed. Jenabel in her red bra and panties, Alexander in his tight black boxer briefs.\n\nHis briefs this morning were tighter than normal as Jenabel's thigh had found its resting place atop his manhood which was now straining for release.\n\nAlexander let out a small groan as he carefully slid from beneath Jenabel. She stirred briefly, a soft moan coming from her lips as she curled up in the warm spot that he vacated.\n\nHe stood looking down at her. Amazed that such a unique and magical woman could possibly be his. No matter how hard he tried to rationalize what he had learned about her and apparently himself the day before, Alexander could do nothing but accept that he was hers, body and soul for as long as she wished.\n\nAlexander stepped lightly from the room, gathering up his clothes and dressing quickly down stairs. After his aborted attempt to find some time alone last night, and the new revelations that found him because of the interruption, it was important that he take what time he could to maintain his own balance with everything that had happened.\n\nWalking slowly through the compound, he saw several other people up and around in the pre-dawn. They all nodded or gave a small wave and a smile as he passed them. Alexander found it strange to be among such a close-nit community. While it was strange it was also comforting, filling a void within him that he had long ago chose to ignore, believing it would never be filled.\n\n\"Good morning Alexander.\" Sophie Benton's strong but kind voice brought Alexander to a stop as he turned to find her watching him with raised eyebrows holding a steaming cup of coffee.\n\n\"Not trying to escape my daughter's clutches are you?\" Her tone was playful but Alexander picked up just a hint of worry as well.\n\n\"Good morning Sophie, and no, the last thing in the world I would ever want is to escape from Jenabel. It was a very long day yesterday. I do need to change clothes and take some time to process things. Would you tell Jenabel where I am and that I'll be back around one?\"\n\nSophie took a sip of her coffee as she listened to Alexander. She could see the powerful feelings he had for her daughter whenever he said her name. 'The universe couldn't have chosen a better mate for Jenabel.' Sophie mused to herself before putting her hand on his shoulder and answering.\n\n\"She won't be happy that you're gone when she wakes up. However, she can be a real pain in the morning, so having you not there will only mildly add to her normal angst.\" Sophie's genuine open smile had Alexander pulling her into a tight hug.\n\n\"She's amazing Sophie, in so many ways. I've never, I never thought, it's all just so...\"\n\nSophie laughed and pushed him away.\n\n\"Go home, take a shower, change, and do whatever it is you need to do to finish a coherent sentence. I'll let Jenabel know you'll be back this afternoon.\"\n\nAlexander smiled sheepishly at her before walking toward the company jeep.\n\nSophie watched as Alexander walked away. So much had changed in only a few weeks and the changes showed no signs of stopping. As Alexander's borrowed jeep pulled out of the compound Sophie walked back to her house to find Carl at his desk.\n\n\"Are you going to call Dmitri?\"\n\nCarl looked up at his wife, as always a smile coming to his lips as his eyes roved over her supple curves. His perusal of her earned him an eye roll as she watched him.\n\n\"Yes, Alexander will need to learn so much in the next thirteen days, I'm going to ask Dmitri for suggestions on what should we focus on to give him the best chance during his first moon change.\"\n\nSophie nodded her head as she walked to him. She gave him a gentle kiss before leaving him to start her own day.\n\nPicking up the phone Carl anxiously dialed the number. It was answered on the second ring.\n\n\"Good morning Carl, I'm surprised to hear from you again so soon.\"\n\n\"Good morning Dmitri. Sorry to bother you but there have been some new developments regarding the young man we spoke of last week. I was hoping that you might be able to give me some help with the best way to proceed.\"\n\nDmitri Vorotaev liked Carl Benton. They had been friends for longer than either of them would care to mention. It was odd that Carl would be seeking his advice twice in just over a week.\n\nAs one of three Elder Alphas, Dmitri provided guidance when needed to over forty packs throughout the world. Of his charges, Carl was the one who had needed the least help over the years. He was a strong and wise Alpha, rarely needing anything more than a friendly ear to bend from time to time.\n\nDmitri walked over to his desk, sifting through the files he finally found the one Carl had forwarded to him last week.\n\n\"So something new has come up with this Alexander Dane?\"\n\nDmitri glanced over the file again, military records, a few pictures, the DNA results. Shaking his head, he wondered what other help could be needed.\n\n\"Yes, it's about Alexander. He is Jenabel's mate. Yesterday his wolf surfaced for the first time, he almost shifted. The full moon is only 13 days away. He had no idea 'til yesterday Dmitri...he only has a handful of days before his first moon change.\"\n\nDmitri stared at the man's picture for long moments before responding.\n\n\"The DNA tests? They are conclusive Carl, it can't be.\"\n\nCarl had already anticipated this question, hell he asked himself the same thing. A quick call to the Doc had provided the likely reason why the DNA had turned up negative.\n\n\"It must have been latent Dmitri. As I told you he was an orphan, he must have been abandoned by his parents, though I have never heard of such a thing. Without being around others of his kind his wolf lay mostly dormant with none of his own kind to teach him, to bring it forth as we do with all of our young.\"\n\nDmitri was incredulous.\n\n\"An orphan Were Carl? Who in their right mind would do something so cruel? Not to mention how dangerous such a thing would be for all of our kind. If he had been discovered, changed when he was young in the middle of the orphanage, the ramifications...\"\n\nDmitri fell silent, as the many what ifs over loaded his mind. Carl brought him back to the present problem.\n\n\"Yes Dmitri, I understand all that, but my main concern is for Alexander. What should we focus on in the next days? What will give him the best chance of surviving and finding the balance he must have during the first change?\"\n\nDmitri calmed himself, taking a few deep breaths before answering.\n\n\"You're right Carl, I'm sorry it's just so inconceivable. But yes, Alexander's survival must be our first concern. As for the rest, that will wait until you and your pack get him safely through the change.\"\n\nDmitri caught the underlying worry in Carl's voice and quickly replayed the conversation in his head.\n\n\"Jenabel's mate, your daughter?\"\n\n\"Yes Dmitri, my Jenabel. If he can't make the change, if he goes feral and we have to...\"\n\nDmitri cut him off.\n\n\"Nonsense, anyone who could finally find their way into Jenabel's heart has it within them to do what must be done. We will help him Carl, lay your fears aside and we will do everything we can to ensure it.\"\n\nDmitri looked out the large picture window that provided a startling vista of northern Urals that rose before him. It calmed him, looking out over the vastness of the mountains helped him find his center and resolve.\n\n\"Teach him our history Carl. Don't go into great detail but hit the major points, who we are, where we came from, our origins and our laws. I'll call the other elders, we will provide all the help we can, try to give you a direction to take his training to maximize his chances. Don't worry, we'll see young Alexander through this, I'll be damned if my godchild will lose her mate before she truly has him.\"\n\nCarl smiled as Dmitri's accent became thick as it often did when his ire was up.\n\n\"Thank you my old friend, I can never begin to thank you enough for...\"\n\nDmitri once again cut Carl off.\n\n\"Enough, we both have things to do, I'll be in touch soon. And I better get an invitation.\"\n\nThis last Dmitri said with his normal good humor causing Carl to laugh, appreciating his friend's constant ability to make him feel better.\n\n\"Of course Dmitri, as if Sophie or Jenabel would allow such a slight.\" Then as an afterthought Carl mentioned the Bouchard's. \"It was Jason Bouchard that brought this on Dmitri, he was being a little to...physical with Jenabel and Alexander was having none of it. He responded to his mate being in harms way just as any of us would.\"\n\nDmitri was not surprised by this. He knew of the \"tradition\" that existed between the two packs, thought it foolish but as long as they were okay with it who was he to judge.\n\n\"I will mention it to Elder Connors just so he is aware of the impending problem. He may be able to head off trouble before it starts. I'll talk with you soon Carl.\"\n\nDmitri hung up the phone and stood regarding the mountains, watching as a storm moved slowly up the valley toward his home.\n\n\"An orphan; who could have, who would dare...\" His words trailed off as he turned back to his desk, there were things to do, the answer to his questions about who could do such a thing would have to wait...but not for long.\n\n-vVv-\n\nSunlight warmed Jenabel's arm as she fought to retain the bliss of sleep. 'Just a few more minutes.' She was too comfortable, wrapped in the heady comfort of the warm bed, the sultry scent of amber lulling her senses in a sensuous fog. Her hand slid out, searching for the source of the alluring musk that at once gave her deep comfort and set her passions to burning.\n\nJenabel's hand found only the cool sheet beyond her own warm spot, the scent a lingering reminder of her mate. Eyes snapping open she quickly perused the room, finding it empty.\n\n\"Gone.\" The word was said with a forlorn tone as her head fell back to the pillow.\n\nJenabel replayed the previous day in her mind. Alexander's acceptance of the truth regarding who and what he was came surprisingly easy. Just the thought of him brought a smile to her face. He had fallen asleep quickly last night. The same was not true for Jenabel.\n\nAfter spending her life knowing that somewhere out there her mate moved through his days, each one bringing him one step closer to her she had been in no hurry to let sleep take her.\n\nJenabel had watched him last night. The slow rise and fall of his chest as sleep washed away the trials of the day. Her fingertips gently traced the scars that bore testament to a life filled with mortal danger. She laid her head on his chest, listened to his heart beat slowly, its cadence acting as a lullaby as she slowly drifted to sleep curled around him.\n\nJenabel's eyes closed as she lay there, the morning sun heating her body but that heat paled in comparison to the fiery warmth brought forth in her when her thoughts strayed to how he had kissed her last night. It was passion and love and want and feral desire all rolled up into one perfect and un-nameable emotion. Jenabel's hands slid over the sheets as she licked her lips.\n\nShe had waited so long. So many times she ached for the physical contact of her mate, the one who would complete her. She longed to revel in the shared discovery of such intimacy and passion with the other half of her heart and soul.\n\nWhile it was common for the unmated of her kind to find sexual release fairly freely, for Jenabel it had never been that easy. Oh she had tried; the desire to explore the depths of that release burned strong and deep for her. There had been a few attempts. A few boys and men who kindled a spark, who made her body react, but in the end they were irresolute wraiths, fumbling gropes, a few stolen kisses that left her empty.\n\nNow she had found him, found her one true match. He would teach her, show her the heights of passion that she so yearned to explore.\n\nJenabel's thighs rubbed together, the silk of her panties playing softly over her delicate center. She felt the wetness pooling there. Visions of Alexander's blond hair between her legs, his soft but insistent tongue tasting her, his fingers opening her, and stretching her ran through her mind. A soft moan escaped her lips as her need for him rose, threatening to consume her as her hand slid teasingly over her abdomen. She wondered if this same touch from Alexander would burn, leaving a scorched trail on her body as he caressed her. Jenabel's fingertips had just delved beneath the waistband of her panties, intent on easing the need that clawed at her, when an incessant knocking began down stairs.\n\n'No no no...' Jenabel's need would have to wait even longer it seemed.\n\nGrabbing her robe she took the stairs two at a time, intent on killing whoever was at the door.\n\n\"What!\" Jenabel's voice carried as she swung the door open only to find her mother standing there with a grin on her lips.\n\nJenabel sighed and walked back into the house leaving the door open.\n\n\"And good morning to you too.\" Sophie was well accustomed to the morning Jenabel. She knew this morning her daughter would be in rare form.\n\n\"I brought you some coffee.\" Setting the large mug in front of her daughter as they both sat at the small kitchen table.\n\n\"Alexander will be back in a few hours. He needed a little time to himself this morning. He was up and gone before dawn.\"\n\nJenabel just glared at her mother while she took a long sip of the coffee. Sophie shook her head and smiled.\n\n\"Okay, okay, I know you're in a horrible mood.\" Sophie's eyes took on a wistful cast as she continued. \"I'm the same way when your father is away. Waking up alone just isn't any way to start the day.\"\n\nJenabel rolled her eyes, the corners of her lips curling just a bit as the coffee began to cut through her natural morning angst.\n\n\"You should warn Alexander you know, wouldn't want him running scared the first time he wakes up with you doing your morning banshee impersonation.\" Sophie laughed as she said it. Jenabel's morning affliction was common knowledge at the compound. Most everyone avoided her if possible until at least an hour after she showed her head.\n\nJenabel shook her head at her mother and took another long drink of the coffee. She noted it was after 10am.\n\n\"Has Daddy talked to Dmitri?\" Now that her earlier desires had been squelched and her brain was starting to fire on all cylinders, the pressing needs of the next handful of days came crashing down on her.\n\n\"Yes, he spoke with him this morning. Dmitri is going to contact the other elders, get their opinions, and then help your father come up with a plan. He said in the meantime the best place to start is teaching him our history, who and what we are, what the rules of our kind entail, etc.\"\n\nStanding, Jenabel took her now empty cup to the sink.\n\n\"It's too bad Cross isn't here. He knows our history better than anyone.\"\n\nJenabel saw the dark cloud that crossed her mother's features.\n\nShe lifted her eyebrows questioningly.\n\nSophie shook her head and pulled out her cell phone. Pulling up the messages she cued the last one from Cross which he left late last night and slid the phone across the table to Jenabel.\n\nJenabel listened to her brother's message and could only shake her head and smile.\n\n\"Hey Mom, its Cross, looks like I'll be out of touch for about six weeks. They had an adviser drop out at the last minute from a research study up in Canada and I'm the only one that can fill in. Tell Jenabel I'm sorry I missed her party and I'll see you guys when I get back. Love you.\"\n\nJenabel closed the phone and handed it back to her mother.\n\n\"He's following his own path Mom. You can't hold it against him. Brad and I, we love being here, its home. You know how Cross is, he believes that his answers lay out in the wide world, that his mate is searching for him and it's up to him to find her.\" \n\n\"Yes, I know, it's just that boy...\" Sophie stood and hugged Jenabel tightly. They all missed Cross but understood that he had to do as he was moved to.\n\nSophie released Jenabel and walked to the door.\n\n\"Come over once you're put together. I'll make you some breakfast and after you can pace a rut in my patio floor waiting for Alexander.\"\n\nSophie's laugh lingered as she closed the door behind her.\n\n\"Alexander.\" The word escaped Jenabel's lips as a wistful sigh. After waiting so long to find him not having him close now that he knew and accepted her weighed on Jenabel's mood as she walked up the stairs, wishing he was here, wanting him in ways she couldn't define.\n\n-vVv-\n\nAlexander walked slowly around the stones at the glance. It was peaceful, the sky a pure crystal blue, a soft breeze blowing in from the north. The place itself seemed filled to bursting with an unknown energy. It gave Alexander the sense of being on the deck of a large ship, the power of the engines far below providing the smallest vibration which traveled up from those dark depths to be transmitted to everyone aboard.\n\nSeating himself on the ground beyond the circle, he found himself once again missing Jenabel.\n\n\"This won't work anymore.\" Alexander said to the wind.\n\nHe had always sought solitude when life became tumultuous. He found in those still, quiet places he could focus his thoughts, find the path he needed to follow. It seemed that his tried and true method of steadying his course had now lost its ability to provide that inner clarity.\n\n\"I'm not who I was yesterday. Hell I'm not who I was before the moment I found her.\"\n\nAlexander's words held no sorrow, for at the core of that truth, of the fundamental changes in who and what he was, lay Jenabel. He would never lament the loss of anything that had passed before now that she was his. He couldn't get over how deeply and quickly she had become so very important to him. There had been people in his life whom he cared for, would have died for if need be. But the all consuming depth of his need for Jenabel made every other such connection he had felt in his life pale in comparison.\n\nAlexander stood, accepting that who he was now didn't require solitude. The man he was and would be now required his mate.\n\nWith a last lingering look at the glance he truly grasped that it would be here, in two weeks, where he would possibly face his biggest trial. The knowing of it only galvanized him. He was determined not to fail, not to lose his one chance at truly belonging.\n\nA twig breaking in the distance stilled Alexander as he made his way back to his home. Reaching out with his senses he looked for what had made the disturbance. Aside from a few squirrels and the odd bird there was nothing that seemed out of the ordinary. Stepping forward he sensed them too late.",
        "Searing pain coursed through his back as sharp fangs dug deeply into his shoulder. More pain came from his leg where another beast latched onto his thigh.\n\nAlexander fell to the ground under the onslaught. Now that the surprise had worn off his mind cleared as he focused on the attack. Both wolves had released him; they circled around him, watching him, seemingly taunting him. He tried to stand, found that he could but feigned that he could not. His left shoulder burned, the powerful jaws of the muddy brown wolf had dislocated it and his arm hung useless at his side.\n\nAs he watched the gray wolf stop in front of him the icy tendrils of its thoughts found their way into his mind.\n\n'You should have thought twice before attacking our Beta you stupid dog, and all over some stupid bitch.'\n\nAnother voice seemingly as young as the first agreed.\n\n'It's not a good idea to mess with the Bouchard's, now I guess you'll have to learn that lesson the hard way.'\n\nAlexander feigned fear when his true emotion was one of pure fury.\n\nThe attack on himself, this was of no consequence, he had long experience dealing with physical pain, had already pushed it to the back of his mind and moved on from it.\n\n'Bitch.'\n\nThe word hung in his consciousness, its many connotations whirling through his head causing his thoughts to fly just as fast and chaotic.\n\n'How dare they? HOW DARE THEY?'\n\n'She's MY BITCH.'\n\nImages flashed through his mind.\n\nJenabel holding a child with azure blue eyes and raven black hair.\n\nOf Jenabel on her knees moaning Alexander's name during his son's conception crashed through his mind.\n\nAnd then the world, seen through the red haze of his rage stilled and everything came into focus. Jason had not wanted to harm Jenabel, he wanted Jenabel, wanted to claim her, wanted to mate with her.\n\nHis fury curled in on itself; becoming a tight ball of flaming ire that as the instant ended blossomed into righteous action.\n\nThe wolves tensed as they felt a subtle shift in their prey.\n\nWatched as the blue eyes that a moment ago had held obvious fear clouded over to form dark ember flaked pools as the man before them blurred into action.\n\nWhen the two wolves had attacked him, all of them had tumbled off the path into the dense trees. Alexander's first action was to leap up and over the gray wolf slamming his shoulder full force into the tree behind it. The speed of his movement coupled with the sickening crunch of setting his shoulder back into place stunned the two wolves. When they focused again Alexander stood before them, blood dripping from his shoulder and leg but seemingly not hampering his ability to impersonate walking vengeance.\n\nThe gray wolf moved first, darting in fast looking to take Alexander's legs out. With a deft motion Alexander side stepped, gauging correctly that the stupid fuck had come full speed never expecting him to not be there as he ran right by him and kept on going.\n\nAlexander turned on the brown wolf, which bared his teeth and leapt high in the air, jaws aiming for Alexander's throat. Ducking quickly, the wolf sailed above him. As it did Alexander rose fast, hands up and extended. When they met the fur of the canine's soft underbelly his fingers coiled into the flesh, causing the wolf to howl as Alexander pivoted, using the wolf's own momentum to hurl it into the trees.\n\nSpinning around Alexander's hands flashed toward the gray wolf who had turned and was now almost upon him. The animal's dank hot breath flowed over Alexander's face as he held the wolf's jaws just inches from his neck. Muscles flexed and burned, he could feel the wolf digging in its hind paws, its own muscles slowly overpowering the force of Alexander's. The wolf's eyes gleamed, sensing the battle was soon to be over, that his Beta would be avenged.\n\n-vVv-\n\nThe plate fell from Jenabel's hand as her motion toward the sink abruptly ceased. It splintered into brilliant white shards upon smashing into the hard stone floor.\n\n\"Alexander...\"\n\nHer voice was hushed, filled with fear, something was wrong, something was terribly wrong.\n\nCarl Benton practically ran into the kitchen where Sophie was just rising to go to her daughter.\n\n\"Where is he Jenabel, where is he?\"\n\nCarl had felt the shocking burst of fear at the same moment Jenabel had, he knew it could only be coming from one person since he couldn't track the source. Had any full pack member been in any kind of danger he would have immediately been able to pinpoint where they were. As it was he just knew someone was in great danger and that someone was Alexander.\n\nJenabel burst into a run before her mother could reach her. \"He's between the Glance and his house on the other side of the lake, he's hurt!\" Jenabel yelled over her shoulder as she ran from the house. She shifted in mid-air landing on the ground beyond her parent's patio and immediately breaking into a full run. Carl was hot on her heals.\n\n'The feeling has changed Jenabel, he's not afraid anymore.' Her father's words in her head cut through the fear that coursed through her. She reached out; searching for the tenuous link she had with Alexander. Her father was right. The fear was gone, replaced now by rage, fury so powerful so feral that she was sure he had shifted.\n\n'He's shifted; it's the only thing that makes sense given the strength of the emotions rolling out from him like the incessant power of a runaway freight train.'\n\n'Calm down Jenabel, we'll be there soon. Alexander will be okay.'\n\n-vVv-\n\nAlexander's fingers flexed in the hot fur of the wolf's neck, its snapping jaws inched closer and closer to his face as he struggled to find the strength to end this. At the thought of needing strength Alexander felt a stirring in his mind the incessant pacing of something wanting to be released to be given control.\n\nAlexander shuddered at the thought as he fought with the wolf. Jenabel's words came back to him about going rogue, the possibility of losing himself to the other half of his nature.\n\n'Find the balance.'\n\nThat was the other thought, the other part of what Jenabel had said. That he had to find a way to trust and balance his nature.\n\n'I can't shift, I don't know how.'\n\nThe gray wolf's front paws dug into Alexander's chest causing deep gouges that soon had his chest colored bright crimson as the pain bloomed large causing him to lose a little more ground.\n\nIn his minds eye he found an image of a blond wolf. Large and stately, its fur almost a golden color, it paced slowly back and forth, watching him. There was no hint of danger from the animal, the animal that seemed so familiar.\n\nAlexander's consciousness moved closer to the wolf, noted that it was the largest wolf he had ever seen, probably double the size of the one currently trying to disembowel or behead him. The closer he got the more clarity the beast gained. A full powerful chest. His back straight and symmetrical. Thick legs flexing involuntarily as he paced slowly back and forth.\n\nAlexander's grip tightened further on the wolfs neck, his fingers and hands finding new strength, his arms bulging with renewed force as the animals incremental motion toward his face ceased.\n\nThe blonde wolf in his vision curled its lips in a snarl, its ivory white fangs glistening in its massive jaws as it raised its head to the heavens.\n\nThe wolf in his grip yelped as the pressure from Alexander's fingers began to cut off its air supply. Opening himself briefly to Alexander, he found waves of unrepentant rage roiling off him. An instant ago this dog who dared touch his Beta had been all but beaten. Now, fear found the wolf as the constricting fingers pulled tighter at his neck.\n\nIn his head, Alexander's wolf released a riotous howl, its tone and volume deafening and at the same time empowering. It was a roar of strength, of rage, of unstoppable force and it infused Alexander with all of its attributes.\n\nAlexander's roar echoed through the forest and across the mirror-like surface of the lake. Birds leapt to the sky away from it, the small animals of the forest hid from its tone. Were's within its range stopped in their tracks, turning as one toward the primal howl of blood lust.\n\nThe gray wolf's neck bulged against the cloying hands at its throat. It jerked around helplessly trying to free itself from the man's grasp but it was a losing battle. In the next instant the vertebrae in its neck gave up the fight against the unrelenting pressure as they were crushed by the onslaught. The gray wolf went limp in Alexander's hands, but he didn't release the now lifeless body from his grasp. Instead he rose, turning slowly and striding purposefully toward the other wolf who was slowly slouching away from the scene.\n\nIt stood still, locked by the ebony and amber eyes of the man before him, holding his pack-mate as if he weighed nothing. He was covered in blood, eyes blazing, seething with a blood need that could, it seemed, only be satiated by more blood, namely his. \n\nAlexander's icy voice made the breath catch in the wolf's throat.\n\n\"Tell Jason or his father or whomever else has an issue with me, that I'm here, that if they come, death will find them. Jenabel is mine. Do you hear me, MINE!!!?\" His declaration cut through the still air; once again all those that heard it were shocked by its power, the fury and truth contained within it.\n\nJenabel and her father had just come upon the scene as he issued his howling declaration. It sent a tsunami of need through Jenabel's body as her soul knew that his declaration, the depth of it, was for her, all for her.\n\nCarl shifted, standing tall and moving slowly toward Alexander.\n\nAlexander heard the steps and turned, body tensing ready to exact whatever punishment was required to another who would think to harm Jenabel. He relaxed at seeing Carl, a sense of calm washing over him. There was no new threat at his back.\n\nThe brown wolf flashed off into the trees. Alexander's fury spiked for a moment the desire to chase the other wolf down and exact his retribution flared for an instant. He did not follow, instead dropping the limp corpse of the wolf at his feet. Alexander's body began to tremble and he fell to one knee. In his mind he saw the large blond wolf turn slowly and walk away into the midst of his subconscious. \n\nAlexander's breathing became ragged as his eyes regained their normal arctic blue hue. Unconsciousness threatened to overwhelm him although he fought it with every ounce of strength he had left. Alexander had seen Jenabel shift and race toward him, the look on her face, one of need, of pride, and of desire. He so wanted to hold her, to tell her what he needed to. But he lost his battle against the crushing fatigue and pitched forward into her waiting arms as the sweet abyss took him.\n\n-vVv-\n\nAlexander was once again in Jenabel's bed upstairs. She sat around her small kitchen table with her family, her mind reviewing the events of the morning.\n\nHer brother had come to Alexander's after a quick call to the compound. Between Brad and Carl they had gotten him back to the compound. Her father had suggested letting him recover in his own home, but Jenabel refused. She wanted him home, with her and the safety of the pack close at hand.\n\nAlexander stirred in his sleep as her father gently opened the door and motioned her out.\n\nHer mother and Brad were sitting around her small kitchen table; all of them had looks of concern.\n\n\"He'll be fine, why are you all looking so down?\" Jenabel asked, curious as to why they would be looking so pensive.\n\nWhile Jenabel was scared when she first felt the fear coming from Alexander, that immediately morphed into anger. She raged at the thought someone would dare attack her mate. Then her feelings shifted once again as he came into view. He stood there victorious, body tensed, with his dead foe still in his grasp howling out for all the world to here that she was his.\n\nJenabel felt waves of awe and raw desire pull at her heart and soul. He was strong, strong enough to master the change, strong enough to be her mate, to sire and protect their children. She cradled him as his body went slack in his arms, tears, both of joy and sorrow mixing with streaked red blood that seemed to cover his body.\n\nAs her father and brother carried Alexander back toward his house and the waiting jeep, Jenabel was struck by another important issue.\n\nThe ramifications of an attack on one of their own, on their lands were vast, she couldn't help being proud of how Alexander had handled the attack. Under their laws he was challenged and he won. Even though the challenge was not given formally, to have two attackers ambush him on pack lands, there could be no question.\n\nCarl watched his daughter as they now sat in the kitchen, saw the emotions play over her features as she replayed the day's events.\n\n\"This could cause a war Jenabel. I'm not saying Alexander was wrong, he did what he had to but the Bouchard's have thrown down the proverbial gauntlet and we have to respond.\"\n\nJenabel looked at her father and felt his tension. The Pack was at risk. Being the Alpha he was; there could be no other response than to take this attack as an act of war.\n\nBrad stood, pacing around the room, his wolf wanting to prowl, lusting for the hunt.\n\n\"We can take the Bouchard's. It won't even be a contest. Let me take the Beta's we'll show them what a mistake they made coming to our home and harming one of our own.\"\n\nJenabel gave her brother a grateful smile for standing up so for her and Alexander. Carl stood as well, facing his children.\n\n\"He isn't technically one of our own yet Brad and you know that.\" Carl saw the anger that colored Jenabel's face as he said it but he continued. \"It's the truth. He hasn't changed, hasn't been welcomed by the pack. Did they trespass on our land? Absolutely. Did they attack someone who at a minimum was under our protection? Yes. But can we view it as an actual challenge under our laws?\"\n\nJenabel was having none of it.\n\n\"If they had attacked Willow or Amy, both of whom haven't been formally brought into the pack and haven't had their first moon change, would you be saying any of this?\" Her voice was becoming a bit manic as she vented her growing anger at her father.\n\nA voice from behind her silenced them all.\n\n\"No he wouldn't Jenabel and you know that. They are children of your pack; they're very different than I am.\"\n\nAlexander walked slowly into the room, his eyes never leaving Jenabel's as he took her in his arms.\n\nJenabel's breath caught in her throat as he embraced her, the feel of his strong arms wrapped around her, the heat and scent of him being so close both exhilarating and comforting. He lingered a moment, drawing out the connection, she could almost feel him drawing strength from her before releasing her to face the others.\n\n\"I don't want you to go to war on my behalf Mr. Benton. I don't know your ways or customs but there has to be something I can do to put an end to this before it escalates and anyone else has to die.\"\n\nCarl watched as Jenabel squared her shoulders, standing next to her mate, amazed as he watched the bond between them grow before his very eyes.\n\n\"Yesterday you challenged Jason Bouchard, Alexander. You didn't know that was what you were doing; you acted instinctually to protect Jenabel, as any of us would.\"\n\n\"If you were Pack, if you and Jenabel had been fully mated, Jason would have been challenging you through his actions. Since this is not the case and you attacked Jason, by our laws you issued the challenge and then didn't kill him.\"\n\nAlexander was incredulous.\n\n\"So the issue is I didn't kill that fool yesterday?\"\n\nCarl shook his head, understanding the young man's belief that they may all be completely crazy.\n\n\"Let's do this. You all relax awhile, I have a few phone calls to make, some things to check on. Everyone come to our house for dinner. After, we'll give you a crash course in the history of our kind, our laws and some other things you need to know. Once you have the full picture it will be easier for us to decide on what the best course of action is.\"\n\nAlexander relaxed some. He trusted Carl Benton and knew there was so much he didn't understand, he couldn't make snap judgments. If his years in the military had taught him anything, it was that Intel was what won battles, not brute strength or foolish heroics.\n\n\"Alright Mr. Benton, I'm sorry about jumping to conclusions. But I want you to understand, no matter what your laws may say, I won't allow anyone to be put in harms way because of my actions.\"\n\nCarl shook his head and gave Alexander a weary smile.\n\n\"Son, you're Pack, whether you've been formally accepted or not. We take care of our own. Relax, we'll explain everything this evening then make the decision as to what is the best action to take.\"\n\nBrad and his parents departed leaving Alexander and Jenabel standing close, silently looking out the window at the mountains.\n\nThey both felt the heat that traveled the bare inches between their arms. There was a tension between them, like two magnets pulling to reverse their polarities so they would be pulled together.\n\nIt was Alexander that broke the impasse.\n\n\"Would it be alright if I took a shower?\" His voice was soft and unsure.\n\nJenabel looked up into his deep blue eyes, her hand coming to rest on his shoulder.\n\nHer father had taken off the tattered remains of his shirt and cut away the leg of his jeans where he had been bitten when they brought him to her home. She had gently washed his wounds, noting that they were already healing up at the time. Now they were no more than livid red lines that would disappear altogether by the dawn.\n\n\"Yes, of course. I...I packed you a bag when we were at your house, it's on the floor in the bedroom, and there are fresh towels in the bathroom...\" The shy tone of her voice and the way she dropped her eyes from his surprised him.\n\nAlexander's fingers touched her chin gently, bringing her eyes back up to his.\n\n\"I'll just be a few minutes then how about I cook you some lunch. I don't know about you but I'm starving.\"\n\nJenabel heard immediate verification of his statement as Alexander's stomach rumbled and she laughed.\n\n\"Go take a shower, and I will take you up on the offer to cook, I'm not very handy around a stove.\"\n\nAlexander heard the tentative tone of her voice and smiled, moving close to her.\n\n\"I guess it's a good thing that I am then.\" He finished the comment with a gentle brush of his lips across hers before turning and striding up the stairs two at a time.\n\nJenabel leaned against the counter, the strength to stand almost too much to muster as having Alexander so close caused her emotions to once again swirl out of control.\n\n'We have to complete the mating soon. I won't be able to resist him much longer.' The thought made her smile as she ran her fingers through her long black hair. The man was a menace when it came to her keeping her desires under control.\n\nAlexander pulled a clean pair of jeans and white button down shirt out of the bag he found in Jenabel's room. He rummaged around and found socks and a pair of boxer briefs as well. 'I'm glad she thought of this.' Alexander mused as he walked into the bathroom. His current attire of one legged jeans would not do.\n\nIt was obviously a woman's space he found himself in. The floors were a light sand tile with darker browns in the shower. On the counter were the things you would expect to find, makeup, a blow dryer, the various sundries that women everywhere keep in such spots. It was a new landscape for Alexander.\n\nHaving never lived or spent any real time with a woman, every small detail was something new for Alexander to explore. In his world there was soap and shampoo, toothpaste and brush, with some deodorant thrown in for good measure. As he waited for the water to warm he stripped out of his clothes, looking at himself in the mirror he was surprised to find the damage from his battle with the wolves almost completely healed. \"I guess being part wolf has its good points.\" He said to his reflection in the quickly fogging mirror. Then he stepped into the shower.",
        "The hot water felt so good on his skin that he stood there stoically for almost five minutes before finally searching for soap. There was no bar of soap to be found, looking through the various bottles and tubes he found an unscented body wash. He was thankful for it too as he sure as hell didn't want to smell of summer lilacs. Alexander scrubbed his body vigorously with his hands, he had seen the soft loofah that Jenabel must use but didn't feel it right to get blood and dirt all over it. His eyes lingered on it a moment, his mind seeing Jenabel in this same shower, and the loofah gliding softly over her soft skin. Shaking off his errant thoughts he finished washing his body and shampooed his hair, once again losing himself in the heady embrace of the warm water as he rinsed.\n\nJenabel banging on the door broke him from his solitude.\n\n\"What are you doing in there? Hurry up, I'm hungry.\"\n\nWhile it was true she was hungry, thoughts of Alexander behind the door under the warm spray of her shower were making it hard for Jenabel to think of anything other than throwing caution to the wind and joining him.\n\n\"Sorry, I'll be out in a minute.\" Alexander turned off the taps and stepped out, smiling at Jenabel's impatience. He dried quickly and dressed, leaving the socks off and his shirt open.\n\nOpening the door he found the room empty, he was surprised to find that he was disappointed, that he had expected her to be there and on finding her gone felt her absence keenly.\n\nJenabel sat at the table in the kitchen trying to get her emotions under control.\n\n'I'll have to talk with mom this evening see what I can do to keep myself under control.'\n\nHer thoughts were tumultuous. Her wolf prowled very near the surface and was being very insistent about staying close to their mate, of completing the mating. Being around Alexander made her wolf restless and hard to control. But when he wasn't there it was worse, it left a hole in her heart that nothing but the sight of him could fill.\n\nShe smiled as Alexander came down the stairs, and then gently bit her bottom lip as he stood near her. 'How can anyone look that amazing after almost dying a few hours ago?'\n\nThe jeans she had packed for him were tight in all the right places. She could see the subtle outline of his calf and thigh muscles.\n\n'The bastard couldn't button his shirt?' She silently cursed.\n\nThe white shirt brought out the stark contrast of his sun tanned skin, the jeans hung low on his hips highlighting the sensuous curve of the chiseled V below his abs. The shirt, even open was tight across his shoulders and arms. His damp hair hung in a haphazard tangle that brought his bangs down just enough to shade his glistening blue eyes as he watched her.\n\nThey stayed like that for a moment, both looking at the other. Then, with a lopsided grin Alexander walked to the refrigerator.\n\n\"Okay, let's see what we have to work with.\"\n\nAs Jenabel watched him pull things out of the fridge, place them on the island near the sink she was amazed at the focus he displayed for such a simple act.\n\nWhen he was finished raiding her refrigerator, a carton of eggs, fresh basil, an onion, some mushrooms and a yellow pepper lay upon the counter. While Jenabel was not a great cook, she did like salad's and usually kept the ingredients in the house.\n\n\"You're not a vegetarian are you?\" Alexander hadn't found any protein aside from the eggs.\n\nHis question had Jenabel laughing so hard that it brought tears to her eyes. She saw the grumpy look on his face but had to wait a moment, letting her laughter subside a bit before answering him.\n\n\"I'm part wolf Alexander; I don't think you'll find a vegetarian or a vegan anywhere within two hundred miles of here.\n\nAlexander grinned sheepishly, understanding why she had found his question amusing. He still had so much to learn, so much to adapt to. He couldn't do it all now so he simply focused on making omelets.\n\nJenabel watched as the knife in his hand almost blurred chopping the vegetables into fine small bits only to be immediately put into a hot pan which already had butter bubbling within. The hiss died quickly and just as quickly the aroma of the searing veggies had Jenabel's stomach growling.\n\nHe cracked eggs with one hand, whisking the mixture with a little milk before pouring it into another pan. His concentration was singular; it gave Jenabel the opportunity to openly admire his skill and the care he put into to the job. Cheese sprinkled sparingly over the cooking eggs, the gentle twitch of his wrist that he used to flip the omelet effortlessly before ladling half of the veggies into the center and deftly halving it with a spatula. After a moment the perfectly cooked omelet slid to rest onto the plate which he passed to her.\n\nAlexander smiled and looked at her with expectant eyes. She smiled and took a bite.\n\nThe texture was almost a sensual thing, the flavors mingled perfectly so that while a single flavor couldn't be picked out, the combination created something wholly new, something unique.\n\n\"It's so good.\" She mumbled with a full mouth.\n\nAlexander laughed at her bad manners and appreciated that she enjoyed it. \"It's the size of the cut, the smaller the pieces the better the flavors merge.\" She could hear the happiness in his voice as he turned and repeated the process. Jenabel was done eating before Alexander's ever hit the plate.\n\nThey sat in companionable silence as he ate, then he surprised her again by grabbing their plates and spending five minutes washing and putting away everything he had used.\n\nWhen he finished he turned to her, his eyes watching her from under his unruly bangs.\n\n\"We have a few hours before going to your parent's house, would you walk with me Jenabel? Tell me of your life, your wants and dreams and hopes. I have no experience with the kind of want and need I have for you. In any one moment you make me feel alive and nervous and loved and needed. This is all so new to me. I want; I need to know you, to answer the questions I'm sure you have for me. This morning it was unimaginably hard for me to leave you. I have always been a solitary person, finding balance and direction in my solitude. I find I'm not that person anymore, this morning all I could think of was you, of how I wished you were with me, of how I wanted...\"\n\nHis monolog broke off and Jenabel went to him, her hands cupping his cheeks as she looked into his eyes. She could see it all there, all of his want and need and fear. A lifetime of loneliness and the hope that his walk along the paths of life would no longer be one traveled alone.\n\nJenabel kissed him gently, lingering but a moment before pulling away and taking his hand. \"Come, I'll tell you everything you want to know. I'm yours Alexander and I always will be. I want the same thing as you, to know you better than anyone, to simply be with you, to touch your body, mind and soul as you touch mine. This is the essence of what finding your mate is. It's becoming whole for the first time in your life in a way that makes anything before or after pale in comparison.\n\nThey walked away from Jenabel's house and into the deep shaded woods hand in hand. Their conversation flowed easily, easier than either of them had ever experienced before.\n\n\"What was it like growing up in the orphanage?\" The thought of not having family, the pack around her was so alien to her that it was the first question she asked.\n\n\"It was lonely, but it wasn't bad. The sisters treated us well, most of the nuns were kind, the others just indifferent. They did their jobs and followed their calling. I didn't make trouble although I did have a bad habit of breaking out as often as I could. I didn't like the confinement, didn't like being cooped up. I wasn't really running away, I never had the intention of not going back. But many times I just needed out.\"\n\nJenabel understood.\n\n\"That would be your wolf's doing. They can't stand to be caged in any way. They have to be able to roam, to feel the sun and see the moon. The wind and the rain and the stars call to them. I'm surprised that the confining feel of the orphanage didn't bring out your wolf full force. You must have a very strong will.\"\n\nAlexander thought on this, wondered about his youth and why his wolf never made itself known.\n\n\"Perhaps the true trigger is being around your own kind. Here you nurture and teach the children both their human and wolf aspects. For me, I was always just the quiet kid you didn't want to mess with.\" He related the story about the new kid calling him Alexandra and the result. This had her once again laughing to the point of tears.\n\n\"I would have loved to have seen the look on his face.\" She said as she got herself under control.\n\nAlexander smiled and squeezed her hand.\n\n\"It had the desired effect, after that no one bothered me, which was what I wanted.\"\n\nHe told of his time in the military of the fear and death and peaceful perfect moments. She told him of her childhood, of growing up with Brad and Cross and the pack. She tried to convey the depth of feeling they and this place held for her.\n\nThey walked and talked for hours; the subjects ranging from the mundane of their favorite foods to the fears we all have which lurk in the dark recess of our minds rearing their heads in the deep end of night.\n\nAlexander and Jenabel learned of each other over those hours, learned as much through the gentle touches and caresses that they both gave and received as they did through the words and thoughts they shared.\n\nAs they neared the compound proper Jenabel pulled up short and sat on a large rock that looked down at the lake a hundred yards below.\n\n\"What is it?\" Alexander was surprised by Jenabel's seeming reticence to say something. He had never experienced an afternoon like the one he just shared with her. Never felt the overwhelming freedom to simply be himself, with no walls up, no barrier between the truth of who he was and the amazing woman at his side.\n\nJenabel bit her bottom lip as she looked into his eyes briefly then looked away toward the lake.\n\n\"What about lovers Alexander? Surely there must have been lots of women over the years that caught your fancy.\"\n\nIt hurt her to ask the question but she had to know, for some reason she simply needed to have the answer to this question even as it scared her to ask it. She knew he was her mate, knew that he would never leave her for another, it was unheard of. But her own lack of experience colored her emotions, making her ask the question.\n\nAlexander looked at the ground, his own fears on this particular subject coming to the fore. However, seeing the forlorn look in her eyes as she glanced at him, feeling the question and worry that lay in her whispered tone, washed all of his own misgivings away in a wave of need to give her everything she wanted, and answer anything that she asked.\n\nHe didn't think she would be cruel in this, she hadn't been in anything before, but it was a supposed personal weakness that he had to face and share with her regardless.\n\nLifting her chin and brushing away the stray hairs which fell to shroud her eyes he answered her.\n\n\"Only one woman has ever caught my fancy as you put it Jenabel, there has been and will always be only...you.\"\n\nJenabel heard the words, her eyebrows dropped into a disappointed scowl.\n\nAlexander read her emotions; she was not good at hiding them in the first place. He smiled at her, moved closer, his lips brushed over hers. It was a gentle tentative touch, giving just the briefest of physical sensations but it transmitted his emotions forcefully. She felt his body tremble almost imperceptibly as his lips came near the shell of her ear, his warm breath playing over her neck.\n\n\"You are the only one Jenabel, the only woman I have ever loved, the only one I ever shall. My heart, my soul, everything that can exist between us, I have never and will never share with anyone but you...\"\n\nThe honesty of it rang clear in her mind. She felt it in his words, his touch, and his heartbeat. He was hers; she would be his first, his only.\n\nHer hands pushed him away from her neck, her eyes blazed with unbound passion as she lost herself in the clear depthless pools of his eyes for the barest moment. And then she was kissing him, her need manifesting as she joined with him, shared and showed her consuming want of him.\n\nBreaking the kiss she pulled him close, the pulse at his neck beating out a ragged rhythm against her own.\n\nHer words came out broken, the emotion she felt almost too much to actually form them but she needed him to know this instant what her own truths were.\n\n\"I love you Alexander, and the same is true for me, you will be my one, my only, we will share and learn everything...together.\"\n\n*\n\nEdited by:\n\nMikothebaby "
    ],
    "authorname": "Vjax",
    "tags": [],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/orphan-ch-07"
}