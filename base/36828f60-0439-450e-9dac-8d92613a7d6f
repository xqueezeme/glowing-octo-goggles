{
    "title": "Unity and Destiny Pt. 03",
    "pages": [
        "Javier rearranged himself on Kat's couch and tried to focus on the course reading. But his mind kept returning to the cryptic message they'd gotten from Lukas.\n\n Have you heard of a group called the Chosen? Possibly recruiting those with Changes? \n\nWhat did it mean that he was asking them? Surely he'd know more than they did about\u2014well, just about everything. Did he worry they were already working with whoever these people were? Surely he wouldn't have been so direct if he suspected that.\n\nJavier shook his head and tried to find his place again, but he was too distracted. Kat clattering away at the keyboard in her underwear wasn't helping. Nor was the person at the other end of the couch.\n\nIt seemed that Grace and Kat were back together for real, after that trial period or whatever it was at the end of the summer. Javier was delighted for them, of course, but the little looks the two of them kept sharing\u2014he sighed. He could retrieve his car and head back to Esther's house, but she wouldn't be there until after dinner tonight, and he found it depressing to spend time alone in the big empty house. Meanwhile, Kat's apartment was right near campus, and they were good company, even if he felt more awkward than ever around Grace.\n\nKat pushed back her chair. \"Fuck, I have to pick up that reading on reserve.\" She shook her head and stood up, slinging her bag on her shoulder.\n\n\"Going out like that, then?\" Grace asked mildly, and Kat laughed. \n\n\"You're right. I'm overdressed.\" Kat reached to undo her bra clasp, and Javier hurriedly looked down at his textbook.\n\n\"Kidding. Sorry, Javier, you're such a good sport.\" She disappeared into the bedroom and emerged shortly, properly dressed. \"I'll be right back. Don't go too crazy.\"\n\nLeft alone with Grace, Javier felt ten times as awkward. He kept trying to reassure himself she wasn't Selena, and she couldn't know the kinds of thoughts that went through his head.\n\n\"She's like that because she trusts you,\" said Grace. \n\nJavier didn't know what to say to that. Finally he looked up to meet her eyes. Always so kind and concerned.\n\n\"She told me what happened between you two. It's fine, Javier. You don't need to tiptoe around me.\"\n\nJavier swallowed. That wasn't precisely the problem, though he supposed it was a piece of it. \"Thanks, Grace. You sure it's not weird to have me around? I'm surprised you can just brush that aside.\"\n\nGrace smiled slightly, shaking her head. \"I didn't say I could just brush it aside. But that's my problem, not yours. You're the one who got us back together, after all. I like you, and even if I didn't, Kat does, and that's enough.\"\n\nJavier flushed. There was something about her earnestness, so different from Kat's demeanor. It reminded him of Esther, of course. He didn't want to think about that, so he nodded and put on what he hoped was a relieved smile. Grace beamed, and he quickly looked back to his text.\n\nA while later there was a knock on the door. \n\n\"Forgot your keys again?\" Grace called, getting up to unlock it.\n\nBut it was Esther at the door. Javier blinked in surprise, but then he jumped up to give her a kiss.\n\n\"We thought you were Kat,\" Grace said.\n\n\"Oh, she'll be along in another few minutes,\" Esther said.\n\nGrace laughed. \"I don't think I'll ever get tired of that.\"\n\nEsther sat down with Javier while Grace got an afternoon pot of coffee going. Javier scooted closer and put his arms around her, kissing her more eagerly than he'd really intended to. As though it made up for fantasizing about Grace all afternoon. \n\nBut Esther returned his kisses happily enough. \"I know you wanted more time together,\" she whispered. \"I wish I was better at balancing things.\"\n\nJavier wished that, too. Esther had given up on math classes, as she learned faster on her own or from Raj and his colleague, Anatoly Kuznetsov. She was still taking advanced physics classes, but she'd decided to be a history major, and history wasn't particularly trivial for her. She was acing her classes as always, but being able to read fast and memorize only got her so far. Esther seemed even busier than last year. That was who she was, though. He smiled, and he hoped it was a convincing smile.\n\nThe door opened and Kat returned. \"Whoa, keep it PG-rated, guys. I mean, at least until we catch up.\"\n\nEsther looked embarrassed, as she usually did when Kat teased them. Grace rejoined them, looking skeptical when Kat motioned her to sit on her lap. But she gave in, as she usually did to Kat. And she leaned back and sighed when Kat rubbed her gently on the stomach, stopping just short of her breasts each time. Javier could feel himself getting an erection, so he cleared his throat.\n\n\"What do you all think about Lukas's mysterious group?\"\n\nKat frowned. \"The Chosen. Sounds like a bunch of religious nutjobs. Just what we need, right?\"\n\n\"Do you think we should just tell him we don't know?\" Esther said.\n\nEveryone looked at Javier. He sighed. \"Probably. The thing that makes me nervous is Lukas implying he doesn't know about this group. How could they be running below his radar?\"\n\nNo one answered that right away. But eventually Esther spoke up.\n\n\"I wonder if they have something to do with Marianne and the other dreaming people. There was something almost spiritual to the feel of their gathering in the canyon. And I've been starting to suspect there are more people in dreams like that group.\"\n\n\"What?\" Javier blurted.\n\nEsther looked embarrassed. \"I haven't been looking for them. It's just a vague feeling I get sometimes when I'm in otherspace, as though there are already some connections among other people with Changes. I haven't investigated closely because I still don't understand the way the dreaming and visions worked for the group we know about.\"\n\nJavier was about to reply when Esther suddenly stiffened and closed her eyes. He knew what that meant, and his pulse raced. What had she sensed? \n\n\"Esther\u2014are you all right?\" \n\nGrace hadn't seen Esther using her skills this way before. Javier shook his head and put his finger to his lips. Grace nodded, lips pressed nervously together.\n\nA minute later Esther opened her eyes and exhaled.\n\n\"It's that same man,\" she said. \"The one snooping around on the road below the Sierra camp. I don't know what to do about him. I pushed him away again.\"\n\nJavier quickly explained to Kat and Grace. The mystery man had Changes, which made it easier for Esther to distract him. It was the third time in a week she'd had to do that. She didn't know who he was, but he seemed to be an unremarkable man in his forties.\n\n\"Could he be part of the Chosen?\" Kat asked nervously. \"Looking for recruits?\"\n\nOf course no one knew. And Esther refused to try anything more aggressive than a nudge to his concentration. Javier knew they'd soon have to deal with him some other way.\n\n\"Could you make his car break down or something?\" Grace asked.\n\nEsther sighed. \"Maybe if I was right nearby, and I had a lot of time to figure it out. I've started practicing, but even for things nearby it's exhausting and I rarely can do anything. I don't understand the rules properly, or I'm just not smart or strong enough.\"\n\n\"I'm sure it's just practice,\" said Javier. \"And you're obviously smart enough, Esther.\"\n\n\"Abuela was a genius,\" she said softly. \"Every day I'm realizing that more.\"\n\n* * *\n\nJavier persuaded Esther to quit work early on Friday, and by the afternoon they were on their way to the Sierras. Javier had a vague plan for confronting the mystery man, but they needed to talk it over with the others.\n\nHe was nervous for more than one reason: it was the first time they'd be seeing Nicola and Mark since the school term began. And they'd left things decidedly unsettled when it came to Nicola. He realized that he and Esther hadn't really talked about it since. It was an old, unhelpful pattern, but he couldn't convince himself to bring it up now. \n\nBoth Nicola and Mark were waiting for them when they arrived, and they seemed happy enough, though Nicola had a nervous look as well. She was wearing the work overalls that Javier secretly thought made her five times as sexy. \n\n\"Hey,\" Nicola said after they'd hugged. \"Glad to see you. So what are we going to do about this creep?\"\n\nThey'd e-mailed her about the situation, and Javier could tell from the false cheeriness how unsettled Nicola was.\n\nJavier explained his idea. It was Grace's idea, really: disable the guy's car to see how persistent he was. If he came back anyway, they would figure out a way to confront him.\n\nDinner was subdued. Of the four of them, only Mark seemed comfortable. Javier wondered if Nicola had talked with him about what she'd been doing, or wanted to do, with Javier and Esther. If she had, Mark had gotten past it or simply put it out of his mind. Javier wished he could be like that.\n\n\"I miss Selena,\" said Esther after some minutes of silence.\n\nNicola nodded agreement. \"Have you heard from her?\"\n\n\"Just an email,\" said Javier. \"She's busy at work again. Still working on her meditations. It sounded like she was getting frustrated, so maybe she'll decide to come out again soon on retreat.\" \n\nNicola sighed. \"I didn't expect to miss her. And she's not the only one getting frustrated. I've been practicing that trick with the crystal, and I've managed a few similar things, but nothing very impressive. What I'd really like to do is be able to affect electronics or something, but it's easier said that done. I did manage to get pissed off and fry the backup hard drive, though maybe it was a coincidence. Power's always flaky here.\"\n\nJavier laughed, impressed. \"I guess I should get a replacement. And maybe we can make a shopping trip to get some more expendable electronics.\"\n\nNicola smiled at him, and Javier's heart raced. He immediately felt foolish.\n\nAfter they cleared dinner, there was an awkward pause. Esther had identified the motel where the intruder was staying, and they planned to make their car-sabotaging run in the middle of the night. Nicola broke the silence eventually.\n\n\"Do you guys want to come hang out in our cabin? We miss your company.\"\n\nJavier gripped Esther's hand and they followed the other pair into the small bunk cabin. Their own cabin would more easily fit the four of them, but Mark had never really been comfortable there. The site of Abuela's murder.\n\nWhen they got in, Mark seemed ready to jump onto his bunk, but Nicola pulled him to sit next to her on the lower bed. Javier and Esther settled in Esther's old bunk, across from them.\n\nNicola put her arm around Mark's broad shoulders. \"Mark, remember what we talked about? Do you want to try it now, if Esther's willing?\"\n\nMark blinked, and then nodded, looking uncomfortable.\n\n\"I tried to explain what it was like when you shared senses with me,\" said Nicola, looking at Esther. \"But it's difficult. And it occurs to that we both learned from each other in the process. Maybe it would be similar for you and Mark. Only if you and Javier are all right with it, of course.\"\n\nJavier swallowed. Was that all Nicola had talked about with Mark? But when she put it that way, it would be obnoxious to veto it. \n\nEsther was looking at him, so he nodded and kissed her on the cheek. She stood up and moved to sit on the other side of Mark, but Nicola quickly got up and took Esther's spot next to Javier. She leaned against him, warm and smelling lightly of sawdust. Javier shuddered when she put her arm around him. \n\nMark was doing that slow breathing that Javier had seen him do before when he was nervous. Esther leaned against him, wrapping her arms around his broad torso. She looked tiny against him. But then, she probably looked tiny with Javier as well. So much strength in such a small body. Javier wanted to gather her up in his arms and make love to her. He was having more trouble with this situation than he expected, but it was a bit late to object.\n\nNicola seemed to sense some of his discomfort. She leaned her head on his shoulder and held him tighter. It was nice, but she wasn't Esther. Still, he found himself stroking her brown hair. \n\nEsther closed her eyes. \"Mark, go ahead and stretch out your senses in whatever way you want. Just tell me if you want me to stop.\"\n\nJavier watched Esther take on that special stillness she had when she opened her eyes to the otherspace. After a few seconds Mark inhaled sharply, his hands clenching nervously. He looked at Esther with an open wonder, then cautiously brushed at her hair with his hand. But then he grunted in surprise and leaned away from her. \n\nEsther opened her eyes again. \"All right, Mark?\"\n\nHe nodded, trying to find the words. Finally he shook his head.\n\n\"It's OK if you found that arousing,\" said Nicola. \"We talked about this, didn't we? It's complicated, but that doesn't mean it's something you should be ashamed of.\"\n\n\"It was beautiful,\" said Esther. \"You have such a subtle intuition about everything, Mark. Thank you for sharing it with me. If you'd like to try again, I think I can keep a bit more distance, so it doesn't have such a strong effect on you.\"\n\nMark smiled slightly, and then he nodded. They both closed their eyes, and Esther wrapped her arms around him again.\n\nThis time it went on for several minutes. Javier became more and more conscious of the signs of Esther's arousal. And Nicola was gripping him even tighter, almost uncomfortably so. He had the sudden realization that she was likely as strong as he was. Maybe stronger. He wondered what it would be like to have a lover like that. Absently his hand moved down her hair to stroke her neck, and Nicola made a soft noise. Almost a purr. Javier found himself getting a serious erection.\n\nBut then Esther and Mark opened their eyes together, and Esther slid away from him. Nervously Javier dropped his hand back to his side, and Nicola sat up a little straighter.\n\n\"Thank you, Esther,\" Mark said. He looked vaguely dazed. But when he turned to Nicola, it couldn't be more obvious what he wanted. She smiled and stood up, and the two women exchanged places again. Before she sat, Nicola was already pulling her sweater over her head, and Mark reached for the snap on her pants.\n\nJavier realized Esther was pulling him gently, to stand up. Did she want to squeeze on the bed with the other two? His mind tried to encompass that idea. But no, she was pulling him towards the door. \n\nWith some disappointment he followed her back to their own cabin. When they got there, Esther answered his unasked question.\n\n\"Mark was really confused,\" she said. \"They need their time alone. I don't think Nicola talked through things with him as much as she implied.\"\n\nShe flopped on the bed, and Javier lay next to her. Truth be told he was pretty damned confused himself. What did Esther want, anyway? For that matter, what did he want? He'd been seriously fantasizing about Nicola, but then again he'd been doing that about Grace for a couple weeks, and she was totally out of bounds. It didn't mean he really wanted to fuck either of them. Did it?\n\n\"I guess we haven't talked through things as much as we think either,\" said Javier weakly. \n\nEsther gave a nervous laugh. \"No. I wasn't really expecting Nicola to suggest that. I don't know what I was expecting. Thank you for being flexible. It wasn't the same as with Nicola. I like Mark, but\u2014oh, I don't know what I'm trying to say. But I learned a lot about how he sees the world. I think it could be really useful, given enough time to sort through it all.\"\n\n\"Useful to you? Don't you have much keener senses than Mark anyway?\"\n\n\"It's not that simple,\" said Esther. \"He knows things about living creatures that I don't grasp yet. Maybe I'll never understand bodies the way he does, but surely I can learn something. And I know it would help me teach.\"\n\nJavier nodded, and shivered slightly. Esther hadn't seemed to notice how cold it was in the cabin. The nights would be below freezing already up here. He got up to start the wood stove.\n\nWhen he came back to bed, Esther was finishing pulling off her panties. She spread her legs, and Javier smiled. He always liked starting this way. She was already damp, her nectar sweet on his tongue. Thinking of his earlier excitement, Javier pushed aside the pang of jealousy. Esther was here with him, and she was shivering with arousal. That was a rare enough treat since school began. He wasn't going to waste the chance.\n\n* * *\n\nEsther touched Javier gently and he blinked awake, rolling over to her. She kissed him, tasting herself on his lips. He was a totally unselfish lover. Too much so, really. She wished he would be readier to take his own pleasure, and not always so worried about her.\n\n\"Time?\" he whispered, and she nodded. They got up and dressed quickly, joining the other two in the dining cabin.\n\nAll of them smelled of sex, but Nicola was the one she had trouble ignoring. Esther still had the faint otherspace vision she kept all the time, her new version of the Watch. And suddenly she realized she might be able to do something about this.\n\nShe watched the familiar bundles of chaos that represented herself and Nicola within otherspace. And carefully she pulled apart a few strands connecting them. It was surprisingly difficult to do, and she wondered if she was making a mistake. But when she withdrew her vision, Nicola didn't seem aware she'd done anything. And Esther found it a bit easier to keep herself focused. She would have to think about what she'd just done. It should be more widely applicable than as a cheat to keep her desires under control.\n\nDuring the hour or so it took to get to the motel, she practiced dampening the sounds of Javier's car. The mysterious snooping man had some sensitivity, and though they'd be parking at a distance, she didn't want to tip him off.\n\nJavier and Nicola were the ones who knew enough about cars to be useful, and they'd spent a while that afternoon arguing about which approach would be sneakiest. It would all be a lot easier if Esther could manage the sabotage from a distance, but her test attempts on Javier's car hadn't been fruitful. In the end, Nicola and Javier had selected something involving the fuel pump, which they agreed could be done in a way that wouldn't seem suspicious.\n\nWhen they parked on the street, Javier and Nicola moved quietly towards the motel with their tools, while Esther and Mark waited behind the corner of a building. Esther could sense the mystery man, asleep in his room. Nonetheless she was doing her best to hide all four of them from his senses.\n\nNicola slid silently under the car and began to work, with Javier crouching nervously and handing her the tools as she signaled. Esther found she was terribly nervous, and something was bothering her about the situation.\n\nAll of a sudden she saw it, but it was too late. She yanked hard on both Nicola and Javier's attention, but before they could stand up, the invisible woman was pointing a gun at Nicola.\n\nThe woman was perhaps in her sixties, though Esther knew now how deceiving that could be. She moved with an easy grace, and everything in Esther was screaming alarm.\n\nMark gasped, and Esther desperately pulled him back with her senses, grabbing his arm as well. Mark glared at her, muscles taut, and for a moment she thought he would try again. She already felt sick to her stomach for treating him this way, but the woman terrified her. And Mark couldn't outrun a gun.\n\nAfter a tense few seconds, Mark seemed to understood, and he nodded unhappily. The mystery man had woken, and he quietly came out to join the woman. He had a gun as well, and he trained it on Javier. Had she signaled him somehow?\n\n\"Nicola, is it?\" she heard the woman say softly. \"But I don't know the other one. He is not one of the Chosen.\"\n\nThe Chosen. Esther's heart thudded. She'd been foolish to assume that she and Abuela were the only ones capable of hiding themselves from the senses of others. This woman was better than Abuela at it. She might be even better than Esther, and that shook her to the core. Even now she could barely sense the woman. ",
        "\"That's right, put down the tools,\" the woman said. \"Stand up slowly. Don't do anything foolish. I believe you can guess how fast I am. We're not here to hurt you, and indeed we will eventually release you if you insist. But first we will take you away so you may learn the way of the Chosen.\"\n\nJavier shook his head angrily, but he wasn't foolish enough to argue. Nicola was holding precisely still, obviously still looking for a way out. But there wasn't one.\n\n\"Where is Mark?\" the man asked. \"They said he should be with Nicola. Mark is the most powerful one.\"\n\nJavier and Nicola stayed silent.\n\n\"I will look,\" said the woman. \n\nIn a panic, Esther pulled Mark tightly to herself, drawing in his own senses to hers, wrapping them both in the tightest quiet space she could manage. Mark stiffened with the sudden intimacy, but he understood what she was doing.\n\nAfter a few seconds the woman shook her head, and Esther let out her breath slowly, but she kept herself still against Mark, her heartbeat matching perfectly with Mark's more powerful one. \n\n\"Nowhere near,\" the woman said. \"Perhaps he's still at that camp, wherever it is. You still think you can find it?\"\n\nThe man shook his head. \"It wasn't where he thought it was. And there are many, many dirt roads back there. It would take forever to check them all.\"\n\nThe woman sighed. \"When Nicola comes to understand, she will tell us where to find him, and she will convince him to join us. We must have patience, Samuel.\"\n\n\"Yes, mother. But we should warn the others to watch for him.\"\n\nThe woman nodded, and then gestured to Samuel. He carefully lowered the gun, putting it on the ground well behind him, then pulled something from his jacket pocket. A hypodermic needle in a plastic case. Esther closed her eyes and tried to think what she could do, but there was nothing. She couldn't count on distracting that woman long enough to make a difference. Even now she could barely sense her. Mark was fast, but the woman could shoot him just the same.\n\n\"Don't be alarmed,\" Samuel said. \"It's an anesthetic, for all of our safety. Less chance of someone getting shot along the way. Heed what my mother said. We allow people to make choices, even if that means rejecting the Way. But it must be an informed choice.\"\n\nWith that he grabbed Nicola's arm. She instantly kneed him in the groin and shouldered into him, sending him sprawling as she turned to lunge for the gun. Esther had anticipated the move, hoping to help, but the older woman was far too fast. In a blink she had Nicola in a chokehold, her gun trained on Javier.\n\n\"No,\" she said softly, as Nicola gasped for air and pried desperately at her grip. \"No more of that. I will try not to kill you if you persist, but that is my son you hurt.\"\n\nSomething in her tone caused Nicola to fall still, and the woman eased her hold slightly. Samuel retrieved the needle case and stood up with grunt, moving towards Nicola.\n\nFinally Nicola lifted her arm weakly. She grimaced when the needle went in, and then the older woman forced her towards Javier. Quickly Samuel pulled out a second needle for Javier, and then they hurried both of them across the parking lot, loading the pair into the back of a van. Already the drug was taking effect, and Esther could feel the two fighting to stay awake.\n\nThe van started, and Esther pulled Mark to hide behind a car. Then the others were gone, driving into the distance. Esther could easily feel Nicola and Javier, their breath stilling into a drugged sleep, and she could sense Samuel driving the van. \n\nThe mystery woman had disappeared altogether from her senses.\n\n* * *\n\n\"We have to save them,\" Mark said angrily as they hurried to the car. \"You should have let me try, Esther. We can't let them hurt Nicola.\"\n\n\"Maybe I should have,\" said Esther, starting the car. \"I'm so sorry, Mark. But I didn't sense that woman, and that terrified me. And she had a gun. It won't be difficult to follow them, and we can talk about how to rescue them.\"\n\nEsther was concentrating carefully to conceal the car as she drove, but she spared some attention for Mark. He was breathing deeply, doing the exercises he needed to control his temper. And in a minute, he was still again. Centered. He was already much better at this than he'd been when she first met him. And still, Esther had treated him like a child, or an animal. She swallowed the bile in her throat.\n\n\"Mark, I should never have restrained you with my abilities. It was a panicked reflex, but that is no excuse. I won't ever do it again.\"\n\n\"I understand why you did it,\" said Mark. \"I think you were right. Sometimes I move too quickly, without considering consequences. It is something Abuela always warned me against. I trust you, Esther. What you did with your abilities is no different from what I might do, if I had to. If Nicola was about to do something foolish. You should do what you think best, even if it angers me briefly.\"\n\nEsther shook her head. Mark had a point, she supposed, but taking control of another's senses was something very different from grasping their arm. It was far too reminiscent of what Franklin had done. \n\nShe needed to change the subject. \"What were you able to sense of that woman?\"\n\n\"She was strange,\" Mark said. \"Like you, but quiet in a different way. I still might have found her if I'd been looking, just like I often can with you. But maybe not.\"\n\nEsther had quickly probed otherspace during the van's closest approach. Now she mulled over her impressions.\n\n\"I think I could find her,\" said Esther. \"Now that I see what she's doing. The hole she left should have been noticeable. But I've never looked for anything like that. Mark, how dangerous do you think she is physically?\"\n\n\"I don't know. She was so hard to sense. But when she fought, she moved extremely fast.\" He leaned back in frustration.\n\n\"We'll find them,\" Esther said. \"The drug will make it hard to rescue them. But when it wears off, we will get them. That woman can't guard them forever, and I can't imagine there are many like her. They expected to grab both you and Nicola, and they seem to know what you're capable of. They would have sent their best.\"\n\nEsther drove onward, following many miles behind, hoping it was a safe distance. Shortly Mark fell asleep. It was logical, of course, and he was always able to sleep when he needed. But without even his silent company, Esther's mind began to race. What would the Chosen do with Javier? They'd barely seemed interested in him, and that seemed dangerous. Why were they so convinced that Nicola would want to join?\n\nAnd could they truly be willing to let them go? That didn't make sense. Except it did, horribly. If they could do what Abuela had done, making people forget\u2014\n\nIt didn't matter. They would rescue them first.\n\nThey were going north and west. When they reached I-5, Esther pulled off for gas, and she made the best of the sorry selection of snacks. Mark barely opened an eye when she returned. She wished he could drive, but even if he wanted a license, from the state's perspective he didn't really exist as a person. He'd never even told any of them his last name, and no one was about to go digging for a past he wanted left alone. Maybe they should get him some new ID, though. Javier would know how to do that.\n\nShe blinked. Her mind was wandering dangerously, and she was exhausted. The sky was brightening with dawn, and she turned on the radio, trying to stay alert. She settled on the first station that was playing Spanish songs, and she tried to imagine Javier singing along.\n\nThe van had finally turned off the highway ahead, towards the east. They were in Oregon now, and the massive volcanic cones of the southern Cascades loomed against the brighter sky, fresh early-season snowfall glinting at the peaks. It was beautiful in a way unlike even the Sierras she'd grown to love. She felt drawn forward, in the direction the van had turned. Safely behind them, she followed on the minor road.\n\nTwenty minutes later, she screeched to a halt, trying to slow her breathing.\n\nIt wasn't the general beauty of the place that was drawing her ahead. This was a sickening, familiar feeling.\n\n\"What's wrong?\" Mark asked.\n\n\"You can't feel it yet? There's a place far ahead, like the canyon. Mark, I can't go in there. Neither of us can.\"\n\nMark considered that. \"You are affected more strongly than me. Do you think you could get closer?\"\n\nShe nodded slowly. \"But I might not know when I've gone too far.\"\n\n\"But I will,\" Mark said. \"Or soon after. I will keep watching you, and I will stop us. I can turn around and drive back a while if I need to.\"\n\nEsther nodded. It was reasonable enough, and of course Mark could easily overpower her. But what more would they learn by doing that? She would find it increasingly hard to concentrate as they went.\n\n\"I have another idea,\" she said. \"We stay here, and I wait until they arrive. And then I very carefully reach out to find what I can about this place. Having Nicola and Javier there will help keep me focused. Then we think about what we can do, or we turn around and get help.\"\n\nMark nodded, and they settled in to wait.\n\nThe pull wasn't really so terrible from here. It was just the shock of recognition, like a punch to her gut. She breathed into a calming meditation, and then carefully opened her eyes to otherspace. \n\nNicola and Javier were moving slowly now, the van creeping along a bad dirt road. The van stopped while two armed men opened a gate, and then continued on. They were heading around the flank of one of the old volcanoes, and she vaguely sensed a small body of water ahead of them. The pull was centered near that small lake. Disorienting shapes and colors surrounded it in otherspace, something like the cage she'd sensed in the canyon, but here it was less concentrated. The pull was steadily weaker the farther she roamed into otherspace. Whether it was the distance from her own body's senses or simply seeing the confusing structure laid bare, it was more tolerable this way. But she wouldn't fool herself into thinking she could simply walk in and then walk back out. Still, Samuel and his mother had presumably done exactly that, just as the dreamers in the canyon had. There were puzzles here.\n\nThe van stopped and two other men arrived to meet it. They helped carry her two unconscious friends down a short path to the water, and then along the shore. Their destination was a building with a beautiful swooping front facing the pond and the great volcano beyond. Inside were perhaps twenty individuals, scattered among a number of rooms. She tried to sense finer details, but it was exhausting to probe inside the strange geometry. She distantly sensed as Javier and Nicola were dropped onto beds in an empty room near the back, and then her vision wavered.\n\nEsther blinked and took a deep breath, pulling herself carefully out of otherspace. She still needed to be careful about that. Sometimes it felt as if she could lose herself in there, the way Abuela seemed to lose herself in her map near her last days. \n\nShe was starved. Mark had opened the snacks, and she shoved salty potato chips in her mouth, licking her fingers.\n\nEsther wiped her hands and grasped Mark's arm.\n\n\"We'll get them,\" she said. \"But we can't do this alone. At least not yet. They promised they wouldn't hurt them, and that they'd eventually be allowed to go if they wanted. I think they were telling the truth.\"\n\nMark shook his head. \"What if there's someone like Franklin there? What if they can convince them to stay? And Nicola won't be able to leave even if she wants. I don't like this, Esther. I know we can't go right in, but I don't want to leave them.\"\n\nEsther sighed and leaned to give him a hug. There was nothing else to say. If there was someone like Franklin, she would have to beat them. The woman hadn't shown any such powers, but the fact she'd hidden herself so effectively wasn't a good sign.\n\n\"Come on, Mark,\" she said. \"I'll drive us away from here, and then I'll find a phone and we'll get everyone together at my house. Jacob, Raj, Kat, Selena, even Lukas if we have to. We'll get them back.\"\n\n* * *\n\nJavier groaned and tried to open his eyes. The world was turning sickeningly underneath him, and he flailed, trying to find something to hold on to. His arm struck warm flesh.\n\n\"Stay still, Jos\u00e9. It's the drugs. They'll wear off eventually.\"\n\nHe wanted to hold on to Nicola, but she was sliding away with everything else. Then he felt her leaning onto him, holding him still with her weight.\n\nHe turned his head to the side, nearly retching. But his vision was clearing, and he groaned as he remembered what had happened.\n\n\"Where are we?\"\n\n\"Locked up in a room,\" Nicola said. \"It's not too bad, actually. Smells like pine trees. Maybe they didn't take us too far.\"\n\nJavier turned his head and saw Nicola's face not far from his. She smiled slightly. Her body had fought off the drugs better than his, obviously. But the room wasn't spinning so much anymore. She patted him on the shoulder and got up, returning with a plastic cup of water.\n\n\"We've even got our own bathroom,\" she said. \"Indoor plumbing. What will they think of next?\"\n\nHe levered himself up partway, gratefully accepting the water. He was on a narrow bed, one of three in the room. It was pretty sparse aside from a few other pieces of furniture. The walls were plaster, but the rafters were thick logs, and the door looked very solid. There was a single set of windows high in the back, too small to get out even if they opened. Sunlight lit the room.\n\nNicola sat next to him, and Javier carefully handed her the water, lying back with a groan. \"How long have you been up?\"\n\n\"About an hour. I felt about as bad as you look now, so I don't think you've got too long. And before you ask, no, I can't break down that door. Or the walls. We're stuck here for the moment. But it was like they promised. They haven't hurt us. I guess we'll just have to listen to their recruitment speech, right? Maybe it'll be convincing. God knows I could use a cause again.\"\n\nJavier squinted at her, but even in this state he could work out what she was getting at. Play along. They might be listening. That would be trivial if they had anyone sensitive around, and whoever that woman was\u2014\n\nHe groaned. He couldn't understand what had happened to Esther and Mark. He'd felt the warning from Esther, and then before they could do anything, the woman was there. She must be unbelievably fast, but from what their captors said they hadn't known about Esther or Mark. So their friends had hidden successfully, and now they'd already be working to spring him and Nicola. The thought made him feel better.\n\nBut that meant the woman had somehow snuck past Esther, up to the last minute, which was an unnerving thought. And he couldn't discuss any of this with Nicola, not safely. She must have already thought it all through. With a grunt, he got himself partway up again. Easier this time. \n\nNicola was eating a banana of all things. She smiled at his expression and gestured to a modest pile of fruit and bagels on a table across the room.\n\n\"See? Every need taken care of. You up for food?\"\n\nAfter a bagel he felt steady enough for a trip to the restroom. Generic, modern. No real clues about where they were aside from Nicola's comment about the pine. He could faintly smell it, but maybe that was just the exposed logs.\n\nWhen he returned, he sat next to Nicola again. To his shock, she put her arms around him and gave him a serious kiss on the lips, one that he returned awkwardly. Was she playacting? She must be. His lips kept tingling when she pulled away.\n\nNicola sighed and cupped his head with her hands, then leaned to kiss him firmly above his ear.\n\n&lt;&lt; Can you hear me? Don't speak. Twitch your left hand if you understand.  &gt;&gt;\n\nHer voice was painfully high-pitched, an alien buzzing in his skull. Quickly he twitched his hand.\n\n&lt;&lt; I'm pretty sure they can't hear this. I didn't know if it would work. Do you understand what I'm doing? My plan, I mean? Left hand, yes, right hand, no.  &gt;&gt;\n\nShe was using her voice somehow to vibrate his skull directly, like putting a tuning fork on your temple. It was brilliant, really. But he had no idea what she was planning to do. He signaled as much.\n\n&lt;&lt; They want me, and they want Mark. They don't want you. That makes me nervous, so I'm going to make it obvious you're someone very important to me. Which you are. As a bonus, maybe it reduces their expectation of using me to get Mark. Now, it might mean they try to separate us and use us against each other, but somehow that doesn't seem like their play. They seem like religious fanatics or something. Believe they're in the right. That means what they want most of all is for us to believe as well. Better to let them think they have a chance, with both of us.  &gt;&gt;\n\nHe'd figured out the last part himself. He twitched a yes to show he understood.\n\nNicola got up and refilled the water. When she returned, she sat up against the wall.\n\n\"Here, sweetie. Just lie against me until you don't want to throw up. I promise it'll be soon enough.\"\n\nAwkwardly, he lay back against her, his head resting comfortably against her breasts. But of course she'd want to keep talking. Embarrassed, he shifted higher, until Nicola sighed and rested her lips against the back of his head.\n\n&lt;&lt; I want you to try something. Pretend you're saying a couple words, but don't actually make noise. Don't move your mouth, or try not to. Just your tongue and throat. I want to see if I can still make out what you're saying.  &gt;&gt;\n\nJavier thought, and then he tried as she suggested. It was harder than he'd expected.\n\n&lt;&lt; If I'm the ventriloquist, what does that make you?  &gt;&gt;\n\nAfter a pause, Nicola made a very small sound, covering it up in his hair.\n\n&lt;&lt; Cute, Javier. I see why Esther keeps you around. Clearly you've got a dexterous enough tongue. Christ, sorry, I'm nervous as hell. So I know more than I said. I woke up a bit when they carried us in here. We're in a building that looked like a big resort lodge. There's a little pond, some hills blocking the view except for a single giant snow-capped mountain rising in the distance. But the trees are pretty familiar. I think we're in Oregon. And given where the sun is, the driving time matches up.  &gt;&gt;\n\nJavier was almost enjoying this strange way to talk. &lt;&lt; Great. That means Esther and Mark would have followed us easily. I bet Esther will get in touch soon, the way we practiced.  &gt;&gt;\n\nAfter Esther's misadventure, they'd worked out a way to signal: good old Morse code. Esther could sometimes send more than that. But images or words weren't entirely reliable, while the sharp pulses she could send were. Javier had memorized Morse code in elementary school, and though Nicola had rolled her eyes, she'd picked it up perfectly in two minutes.\n\n&lt;&lt; Javier, here's the bad news. Wherever we are, it has a power like that awful canyon. I can feel the way it's pressing in on me, and there's little chance I could leave this place on my own. That means Esther and Mark will know they can't come in, either. Worse, we don't really know if Esther will be able to signal us, or if it's safe for her to try.  &gt;&gt;\n\n&lt;&lt; I have a feeling she'll try, safe or not. So we'd better be listening. But for me it's like last time: I can't feel anything special. So, we steal a car, I tie you up, and then drive out at top speed?  &gt;&gt;\n\n&lt;&lt; That's about how far I got &gt;&gt;, Nicola said. Until then we play along and look for our chance. You brought your fake ID along, didn't you? We'll go with that if they ask.  &gt;&gt;",
        "Javier had almost forgotten about that. He'd only swapped out the ID because the car-sabotage operation reminded him of the time he and Kat tried to get a jump on some of Lukas's operatives. That time hadn't gone well, either, though it had worked out well enough in the end.\n\n&lt;&lt; So, we just keep watching, and try to coordinate with whatever Esther and Mark are doing to spring us. No problem.  &gt;&gt;\n\n&lt;&lt; Assuming they don't convert us.  &gt;&gt;\n\nShe'd said it like a joke, but Javier was nervous about that. \n\n&lt;&lt; Nicola, I'm worried. They said we could go free if we weren't interested, but they seemed awfully confident. And how could they just let us go? We know about them now, and unless they keep us locked down here and knock us out on the way back, we'll have an idea where they are. And we could tell anyone. I can't help but worry\u2014  &gt;&gt;\n\n&lt;&lt; Franklin &gt;&gt;, Nicola said, softer than anything before. &lt;&lt; Yeah, I'm terrified of someone like that. Even someone much weaker than him. Or maybe the place itself. I made so little progress trying to resist Esther. We have to keep talking like this, Javier. Keep checking that we're not being influenced somehow. If it's like Franklin or the canyon, I'll be the one to show signs first.  &gt;&gt;\n\nThere was nothing he could say to that. With a sigh, Nicola shifted higher, letting his head rest against her chest the way he'd done at first. And Javier was embarrassed by how comfortable it felt. He pretended to sleep again, to give an excuse for why they weren't being very chatty. But her breasts were full and soft, and as he dozed off he vaguely felt her stroking his arms, murmuring something like a lullaby.\n\n* * *\n\n\"Is this everyone then?\" Kat asked. She was sitting in Esther's living room along with Grace, Raj, and Mark.\n\n\"No,\" Esther said. \"Just a few more minutes. Selena's running late.\"\n\nEsther had been delighted to hear Selena's message on her answering machine when she and Mark made it in late last night. She wished Jacob could be here as well, but he couldn't cancel his Sunday services.\n\nWhen Selena arrived she looked tired, having flown in early that morning. But as always she was dressed well and impeccably made up. Raj and Grace waved while Esther made introductions, and then Selena found a quiet corner to stand and listen. \n\nEsther had been intentionally vague in her phone messages, so now she gave a precise description of what had happened to Javier and Nicola.\n\n\"Shit,\" said Kat. \"I'll help, whatever's needed. I'm not an action hero, but at least I shouldn't be affected by that place.\"\n\n\"There must be a connection to the canyon and the dreaming people,\" said Selena. \"Did you recognize anyone there? The old man, maybe?\"\n\nEsther shook her head. \"No one. I have some trouble sensing inside, but I would have recognized any of them. I agree there's a connection, though.\"\n\n\"They weren't looking for you,\" said Raj. \"And they didn't know who Javier was. Just Nicola and Mark. That's a clue. It gives an idea where they got their information.\"\n\nEsther nodded. \"Lukas. Not him personally, or they'd know about me. But someone in his organization who was recruited. They would have known Nicola from her time with Lukas, and Mark from his memorable performance while attacking Franklin's people. Maybe it's one of the men Lukas sent out to check on the Sierra camp. That would explain why they knew where it was. I may have misdirected them somewhat, but now I'm worried about how safe it is there.\"\n\n\"Have you heard back from Lukas?\" Raj asked.\n\n\"No, and that worries me. He was already concerned about the Chosen. Maybe that was secretly why he responded immediately when I disappeared. In any event he should have gotten right back to us. Much as I don't want to rely on him, he's the one who has the real resources we could use this time.\"\n\n\"People who could safely get in there and back out,\" agreed Kat. \"I don't think Raj and I could do this on our own.\"\n\n\"Not even with my help,\" said Grace, taking Kat's hand. Kat looked surprised, delighted, and a bit embarrassed.\n\n\"The police wouldn't be any help,\" Raj said slowly. \"They'd need a warrant to get in there, and all we have is your crazy story about them being drugged and abducted for no obvious reason. And there's the question of how this group have kept themselves hidden in the first place.\"\n\nEsther nodded. \"The special characteristics of the location explain why I hadn't sensed this large group of Changed. But if they're aggressively recruiting, either they have a phenomenal success rate, or else they can make those who leave forget all about them. I choose not to think they're silently killing unbelievers, so there's only a handful of explanations.\"\n\n\"Coercion,\" said Selena. \"Coercion to believe, and coercion to keep quiet. If some do leave, either very effective threats or something more insidious with their memories. The way Franklin could do.\"\n\n\"Or Abuela,\" Esther admitted. \"I don't want to wait to see what it might be.\"\n\nThey sat in silence for a while, mulling their options.\n\n\"It's all about the location, isn't it,\" said Selena. \"If not for the difficulty in leaving, Esther could probably smuggle a small group of us in. Mark and me and whoever else wanted to come. Could we rely on Javier and whoever else wasn't affected to get us out? Restrain everyone with the Changes in the back of a car, and maybe knock out Mark for good measure?\"\n\n\"It's not just the difficulty leaving,\" said Esther. \"I don't know if I'll be able to exercise my abilities as well inside that place. I had great trouble concentrating in the canyon. And we don't know the strengths of those inside. Samuel's mother may not be the only dangerous person there.\"\n\n\"We need more information,\" said Raj. \"I'll send Lukas a message myself. Other than that, there's only one person left who might tell us something: the old man who organized the dreamers in the canyon.\"\n\nEsther nodded unhappily. \"I hadn't planned to go looking for him yet,\" she said. \"But I don't think he poses a threat to me. It was the canyon that was dangerous, and he must understand that place better than anyone we know. He should know how to leave the canyon. Perhaps he is one of the Chosen, but I think he's on his own now. I can find him.\"\n\n* * *\n\nWhen Javier woke up, Nicola had shifted a bit, her arm resting on his thigh. He sat up and she stirred.\n\n\"Gonna take a shower,\" he said. \"Any extra clothes around here?\"\n\n\"Just towels and colored robes in the closet,\" Nicola said. \"Very festive.\"\n\nHe took a peek, but of course she was right. After his shower, Javier dressed again in his old clothes. About a half hour later, there was the sound of the door's heavy bolt sliding open. Javier and Nicola stood up.\n\nA Latino man not much older than Javier stood scowling in the hallway. He was dressed in a deep blue robe like the ones in the closet.\n\nJavier flashed his most charming smile. \"Qu\u00e9 onda, g\u00fcey?\"\n\nThe other guy rolled his eyes and turned to Nicola. Javier didn't miss the quick look of male appreciation at her appearance, and it irked him.\n\n\"You're to come with me in a few minutes,\" the guy said. \"Just you. Dress in one of the green robes in the closet. Nothing underneath.\"\n\nHe closed the door before waiting to see their expressions of disbelief.\n\n\"Well, that's novel,\" said Nicola. \"Maybe this is a kind of hippie retreat or something.\"\n\nBut Javier could see how uneasy she was, despite her general lack of modesty. \n\n\"I don't like this,\" said Javier. He could play this part. \"I should be coming along with you.\"\n\nNicola shook her head and pulled off her shirt. Javier tried to look nonchalant. She was his girlfriend. Seeing her naked was no big deal.\n\n\"Let's reserve judgment,\" she said. \"You know I can take care of myself. I bet it's some weird baptismal thing or something. I'll ask if you can be included.\"\n\nShe finished undressing and walked over to the closet, pulling out a green robe. Javier couldn't avoid staring at her leanly muscled ass. Just the right amount of curve to her hips. And of course her perky medium breasts. The bushy brown triangle below, and the trail of colored freckles curling up her thigh towards it. All the ways she was different from Esther. The thought was a splash of cold water.\n\nThe robe was oversized, and her figure wasn't particularly obvious underneath it. But when she pressed against him in a hug, he was uncomfortably conscious of her body. He bent down until she kissed him on the forehead.\n\n&lt;&lt; I'll be watching things, Javier. And I'll twist the balls off any man who tries to take advantage of me. Don't trouble yourself about that.  &gt;&gt;\n\nHe hid his relieved smile in a kiss. The door opened, interrupting them, and the humorless young man scowled even harder. In response, Nicola pasted a sickly sweet smile on her face and kissed Javier once more on the cheek before leaving.\n\nAs the time stretched, Javier's nervousness was accompanied by a growing boredom. They weren't being obviously mistreated, aside from the whole kidnapping thing. But the bizarre robe requirement? Baptism, maybe. Or someone wanted to inspect her body, the way Janelle and Geoff had done when they'd caught him and Kat sneaking behind that warehouse. The events leading up to meeting Lukas for the first time. It seemed like ages ago now.\n\nSamuel's mother had known immediately that Javier didn't have Changes. Nicola and Mark could also discern that pretty well for nearby people. But Janelle was quite sensitive and she'd still needed a visual confirmation. That was a clue. Samuel's mother was more sensitive than Janelle, able to evade Esther, and capable enough to think she could have subdued Mark with a gun and the element of surprise. She was someone to worry about for sure.\n\nHis mind wandered. Robes meant rituals. And there had been rituals in the canyon. Neither of them had mentioned it yet, but those rituals had been pretty damned compelling for the ones involved. Maybe that was what was in store for Nicola. A big old orgy with the other Changed, a ritual that she'd have difficulty saying no to. He thought of the asshole who'd taken her away, and for the first time he started getting truly angry. But there was nothing to do except wait.\n\nThe sun was much lower by the time Nicola returned, this time accompanied by two unfamiliar women in blue robes. They closed the door before he got much of a look at them.\n\n\"Well?\" he asked her nervously, taking her hand. She looked all right. Tired. But not as if she'd been fucking for hours straight.\n\n\"Well,\" she said. \"It was odd. But unexpectedly peaceful. Most of it was sitting close together in some kind of meditation. It was strange, but I liked it more and more as it went. I think there's something special about this place. I've felt it since I got here. The room we were in had these big windows looking over a lake, and there was a spectacular mountain framed behind it. We were there long enough to watch the sunlight slowly change color and creep up the mountainside. Like nothing I've ever seen. A special place.\"\n\nJavier was increasingly terrified by her tone. But her eyes were still Nicola. Alert, and very nervous. She'd tell him the truth after the public version.\n\n\"Is that all, then?\"\n\n\"Not quite,\" she said, sounding embarrassed. \"They introduced me as the new member. Pretty obvious, since I was the only one wearing green. The others wore blue or grey. Grey for the older ones, the ones who seem to be running things. And, don't be angry, but at the beginning they briefly had me take off my robe and walk among them.\"\n\n\"What?\" he yelped.\n\n\"They wanted to see my Changes,\" she said quickly. \"One of the women in grey proclaimed that I was unusually blessed for one so young, and that they all rejoiced in my coming back to the Way. Something like that. A number of them even touched me, you know, on the freckles. But really, it wasn't sexual or anything. Nothing like that. I feel weirdly safe with these people, Jos\u00e9. But I still have no idea what it is they do, what this Way is, aside from a lot of sitting and meditating. And they didn't answer when I asked about whether you could join.\"\n\nHer use of his fake name was a nice reassurance that this was still Nicola talking. But the rest of it was unsettling. Still, he supposed it wasn't as bad as a zombie orgy.\n\n\"I'm going to take a shower and get out of this robe,\" she said. \"It's funny, but the meditating was actually kind of exhausting. I guess I'm not used to that much mental exercise.\"\n\nShe laughed, and Javier smiled slightly. More clues that this was still Nicola. She was practically a professional meditator, just like Esther. He moved closer, and she kissed him high on the cheek.\n\n&lt;&lt; Still me &gt;&gt;, she said. &lt;&lt; But I'm pretty shaken up. I'll explain after I get that shower.  &gt;&gt;\n\nShe came out a while later, drying herself in a towel and showing no modesty whatsoever. Part playacting, and part just Nicola. It was embarrassing how much her body aroused Javier.\n\nThere was a knock on the door, which surprised Javier. Actual politeness. But then the door opened on its own anyway. Nicola was only in her underwear, but the two blue-robed women didn't seem to care. They had brought a couple plates of food, and Javier accepted it.\n\n\"Is there a dining hall or something here?\" Javier asked. \"How long are we going to be stuck in this room?\"\n\nThe women glanced at each other. The younger was barely an adult, with blonde hair and a cute freckly face. Javier suddenly had disquieting vision. Were they all naked under those robes?\n\n\"I don't know,\" said the older one. \"It is as the elders will. Have patience and may the harmony of the Way be with you.\"\n\n\"Uh, you too,\" Javier mumbled as they shut the door. The bolt closed with a solid thud.\n\n\"Well, the food smells good,\" said Nicola. She hadn't bothered to put on more than underwear. \"They have that going for them. It would be nice if they told us how long they're keeping us, though. Mark said last month he might call around now.\"\n\nJavier blinked and then nodded. \"Yeah. Who knows with him, though. Where was he going this time?\"\n\nNicola shrugged, picking up a plate. \"Like you said. Who knows with him. But I guess he's made his choice.\"\n\nJavier was desperate to have a real conversation with Nicola, but she seemed unusually focused on wolfing down her food. Maybe that was its own sort of clue. She'd used a lot of mental energy doing something. Maybe resisting the influence of this place.\n\nSo he picked at his own food and tried not to stare too obviously at Nicola. Finally she sighed and put down the plate, flopping against the wall on the bed. Javier got in his familiar position, leaning against her.\n\n&lt;&lt; Tell me what's really up &gt;&gt;, he said silently.\n\n&lt;&lt; Everything happened as I said. Most of the guys weren't even creepy about staring at me. I don't think nudity is too unusual here, so maybe what's left is because I'm new. But the rest\u2014how to explain. This place is wearing me down, Javier. As though it's whispering in my ears, just below my hearing. And the meditating amplified the effect hugely. Now I'm sure they're doing something like what Esther's dreamers were in the canyon. Joining each other's senses and producing something more. It would have been easy for me to dive in with all of them, because I know how good that would feel.  &gt;&gt;\n\n&lt;&lt; Because of what you did with Esther.  &gt;&gt;\n\n&lt;&lt; Yes, thank God. I had some preparation, and I was afraid of something like this. Or worse. I'm sure you were, too. This is bad enough, though. I have to pretend to be getting closer to joining with them, or else they might suspect I'm resisting the process. It's exhausting to walk that line. You might not like this, but I think the only reason I'm resisting so well is I know how much better it felt with Esther. With someone I actually liked.  &gt;&gt;\n\nJavier took her hand.\n\n&lt;&lt; It's OK. I have an idea what that's like for both of you. Hold on to that if it's what helps you get through this.  &gt;&gt;\n\n&lt;&lt; I'm not even sure the people here experience it as that kind of arousal. They weren't showing it, anyway, and I would certainly have noticed with the guys.  &gt;&gt;\n\nJavier swallowed. He had a partial erection even now, just from lying with Nicola this way. He moved his hand off of her leg.\n\n&lt;&lt; Oh, Christ, Javier, don't be embarrassed. I'm horny myself. This whole situation might be slightly funny if I weren't so fucking exhausted and scared.  &gt;&gt;\n\n&lt;&lt; Yeah. It's lucky I don't find you the least bit attractive.  &gt;&gt;\n\nNicola coughed to cover up a laugh, and then she reached to pull at the bottom of his shirt.\n\nJavier stiffened. &lt;&lt; Is that a good idea?  &gt;&gt;\n\n&lt;&lt; Yes.  &gt;&gt;\n\nBut she stopped pulling at his shirt. Javier struggled to talk about something else.\n\n&lt;&lt; Was Samuel there? Or his mother?  &gt;&gt;\n\n&lt;&lt; Samuel was. He had a grey robe. His mother, no. But I didn't see this whole place. I could hear a few others in the rest of the compound. When she ambushed us his mother was so quiet that I didn't hear her at all. But I'm starting to think that kind of ability is unusual. As I said, they thought I had an unusual number of Changes. There may not be many here with powerful skills like hers. From what I could tell only one of the elders had as many Changes as me, and he seemed only half there mentally.  &gt;&gt;\n\n&lt;&lt; Not the old man from Esther's visions?  &gt;&gt;\n\n&lt;&lt; No. Not from how she described him. But I'm worried. If Samuel's mother joins us in meditations, she might work out that I'm partly faking. Or maybe someone else will. I don't know how long I'll have the strength to keep doing it.  &gt;&gt;\n\n&lt;&lt; You're strong, Nicola. They probably know you're physically strong after you kicked the shit out of Samuel, but you have your own abilities, ones I assume they don't understand. Could that help?  &gt;&gt;\n\n&lt;&lt; I wish. If it were a different type of lock on the door, maybe I'd have a prayer of opening it, or understanding how to break it. But this kind of bolt\u2014who knows, maybe Esther could do it, or maybe not. I'm sure Mark could break down the door, but then we'd still have to get him out of here too.  &gt;&gt;\n\n&lt;&lt; But if you had to, if it were that or being trapped here, you could\u2014  &gt;&gt;\n\n&lt;&lt; Don't you fucking even think that, Javier. I'd die before using my abilities that way again.  &gt;&gt;\n\nHer arm clenched him, more tightly than she probably realized. Javier gasped, and she let go. He turned his head and realized that along with her fury, she was trying not to cry.\n\n\"I'm so sorry, Nicola,\" he said aloud. He hadn't truly been thinking of her killing someone, so much as disabling somehow. But he'd been an idiot anyway, and he never should have started the thought. Nicola hated herself for what she'd done to Andrew, even if it'd been necessary.\n\n\"Nothing to be sorry about,\" she said flatly. \"You couldn't have prevented them from capturing us. And maybe it'll work out to the best in the end.\"\n\n&lt;&lt; Apology accepted, Javier. And I'm sorry for almost breaking your ribs.  &gt;&gt;\n\nThey sat silently for a while.\n\n&lt;&lt; Less horny now?  &gt;&gt; Javier ventured. Nicola stroked his hair.\n\n&lt;&lt; Not especially. But still pissed at you, so there's that.  &gt;&gt;\n\nThey lay together in silence while evening darkened. \n\nFinally Javier stirred. \"Want your own bed?\"\n\n\"Eh. We've shared smaller.\"",
        "Javier laughed nervously. \"Not sure about that.\"\n\nBut when Nicola slipped under the sheets, she was clearly making room for him. Javier sighed and took off his shirt. Nicola rarely even spent the night sleeping with Mark, though he suspected that was more due to Mark's preferences. If this was what she wanted now, God knows he wasn't going to reject her.\n\nShe spooned against his back and kissed his head.\n\n&lt;&lt; If I have nightmares, wake me up. And for God's sake let's hope Esther comes soon.  &gt;&gt;\n\nShe kissed Javier once more on the neck, and then they both tried to sleep.\n\n* * *\n\nThe canyon glimmered distantly in otherspace. Esther didn't know how long it had taken her to creep this far in her mind, but the caution had been necessary. Even at this distance she could feel its pull, now that she'd let herself approach it again. \n\nNow came the true challenge. All the dreamers were still connected to this canyon somehow. She had to find the right connection and follow it back to the old man.\n\nIt was easier than she expected. The canyon did not form connections easily with its surroundings. Perhaps that was a natural property that had made it special from the start. In any event, it left the canyon's surroundings rather barren in otherspace, and it was straightforward to trace the strongest connection to a distant person. Carefully she pulled apart the strands of her own attachment to the canyon, until the rest broke on their own. The process was intriguing, but she would have to think more on that later. For now, she followed the path to the distant man. When she finally found him, she breathed a sigh of relief. And then with some difficulty she extracted herself from otherspace, back through the layers of reality, until it was just Esther and the faint Watch she kept.\n\nShe was exhausted, and terribly hungry. She opened her eyes with difficulty.\n\n\"Grace?\"\n\nThe other woman started and jumped up to check on her.\n\n\"Esther! We were starting to worry. Kat's in the kitchen. Mark had to take another walk into the hills. I don't know where Selena went, but she didn't look very well. I think she had to lie down.\"\n\nEsther knew all that already, but of course Grace wasn't used to this.\n\n\"Food,\" she managed to mumble.\n\nGrace called to Kat, and soon Esther was sitting up on the sofa, digging into crackers and cheese.\n\n\"You were there almost three hours,\" said Kat. \"I told Grace it was all right, but truthfully I didn't know. You were all right, weren't you?\"\n\n\"Yes,\" said Esther. \"Though I might have been at more risk than I realized. I think I need to be careful about spending too much time far into otherspace.\"\n\n\"Did you get what you needed?\" Grace asked.\n\n\"Yes,\" said Esther. \"He's in a small desert house north of Phoenix. All alone. And he's in a wheelchair. He has some ability to hide, but he wouldn't be any great threat in person. I can visit him safely.\n\n\"Phoenix,\" said Kat. \"Never been there. Are you going to fly? Maybe Selena would take you if you asked. But, damn, I can't really skip class tomorrow. Wait, no, that's stupid. None of that's important compared to getting Javier back. And Nicola. When are you leaving? I need to go get some things if there's time.\"\n\nGrace hugged Kat, who finally realized she was babbling.\n\n\"I'll take her, certainly,\" said Selena, rubbing her head as she entered the room. \"But I haven't been at my best lately. It might be harder with more people, even if Esther does that magic silencing trick she's doing now. Thank you, by the way.\"\n\nEsther smiled. \"I think the two of us can handle him,\" she said. \"But thank you, Kat.\"\n\nGrace shook her head. \"You should still take Mark.\"\n\nEsther looked at Selena, who nodded tiredly.\n\n\"He isn't all that happy here in any case,\" Esther said. \"You're right, Grace. I shouldn't be overconfident, not after what happened outside the motel.\"\n\n\"Six hundred fifty miles, give or take,\" said Selena. \"Call it three hours end to end. And I'll need to arrange a car. It'll be pretty late by the time we get there, and I was up early today.\"\n\nEsther nodded. \"We'd have to see him tomorrow anyway. Name a time in the morning and we'll do that. You're welcome to stay here, of course. You can pick a guest room.\"\n\nKat gave Esther a hug. \"I don't know what Grace and I can do,\" she said. \"But we're willing to help, when it comes time. Getaway drivers, maybe. You can count on us. I'm happy to poke around and see if I can find a computer system to hack, but given what you said I'm guessing they're pretty low tech. Still, I'm going to dig around the web and Usenet and see if I can find anything relevant about the Chosen.\"\n\n\"Yeah,\" agreed Esther. \"Go home, and thank you for taking care of me this afternoon.\"\n\nWhen they'd gone, Selena sighed.\n\n\"I don't mean to burden you with my problems, but the meditations stopped working so well once I couldn't do them all day. Honestly I'm happy for an excuse to be away from work. Obviously I wish it was for a different reason.\"\n\nEsther nodded. She would have to give more thought to Selena's problems. There would be a solution, she was sure. She wished Selena good night and turned to her other task.\n\nMark would be back in a few minutes. She'd wait until then to start. But she could practice a calming meditation.\n\nWhen he came in quietly, she opened her eyes. He looked more relaxed than he had, which was good. They relied on him for so much. And now they'd just volunteered him for another mission without asking. More time cramped in the plane and a car.\n\n\"Mark, I found the old man from my visions. Selena and I are flying down tomorrow morning, and we'd welcome you along if you would like.\"\n\n\"Of course,\" he said.\n\n\"I have another favor to ask. Right now I'm going to try to contact Javier and Nicola, with the Morse code signal. But it will be very difficult for me. I don't know how long it's safe for me to stay in otherspace right now, but a half hour might be pushing it at this point. Would you distract me out of my meditation if I stay longer than that?\"\n\nHe nodded and sat down across from her. Esther took a deep breath and opened herself to the space beyond.\n\nShe could sense Javier and Nicola faintly, as she had all day with the Watch. But they were encased in the strange geometry surrounding the mountain lake. She pushed and probed, but the link was tenuous. And no matter how many ways she looked at the geometry, she couldn't understand it.\n\nThe fact she could sense the two of them meant there was a connection. She searched for ways to strengthen it, but they kept slipping away. She didn't know how much time she had left.\n\nFinally she grabbed as firmly as she could to the slight tendril connecting her to Javier. \n\nLong. Short Long Short. \n\nEach letter was harder than the previous, and soon it felt as though she were yanking on air. She could barely sense Javier and started to panic. But then she felt something way back in her body.\n\nIt took some time, but she opened her eyes. Mark was holding her, looking very concerned.\n\n\"I'm OK,\" she said.\n\n\"It took me a full minute to rouse you,\" he said unhappily.\n\nEsther nodded and hugged him. \"Thank you. No more of that until I'm properly rested. I might have to wait until we're closer to them again. At least I got a very short message through. They know we're working on it.\"\n\n* * *\n\nJavier woke slowly, unwilling to let go of the pleasant dream. Nicola's warm weight still pressed unmoving against his back. She was even less of a morning person than he was.\n\nHe'd slept better than he expected. But as he slipped out into the bathroom, his worries overtook him. Why hadn't he heard from Esther yet? How could he help plan an escape if the cultists didn't even let him leave this room?\n\nNicola was awake when he came out, sitting up in bed with her usual grumpy morning expression. Her lacy white bra didn't entirely hide her nipples, and Javier couldn't help but glance. The spots between her breasts seemed brighter than usual, which on Esther meant she was aroused, but Nicola just scowled at him. Maybe this was her equivalent of morning wood.\n\nHe brought her some leftover bagels and fruit, and her expression softened.\n\n\"Well, I can't wait to see what's in store today,\" she said. \"More meditating, I'm sure. Maybe someone will explain things a bit better.\"\n\n\"Maybe they'll let me out of this room,\" Javier said. \"I'm getting jealous after that gorgeous view you described. I could use a walk, at least.\"\n\nNicola nodded. \"Surely they'll let you out eventually. I'll ask if they let me talk to anyone in charge.\"\n\nWhen she'd dried off from her shower, this time she simply put on the green robe. \"Looks like this is my uniform,\" she said lightly.\n\nJavier walked over to give her a hug so he could talk to her in their private fashion.\n\n&lt;&lt; We should get a few things straight with our story. I'm Jos\u00e9 Santillo of Reno, and I've been living with you since last fall, some time after everything with Franklin. I was\u2014what? An underemployed car mechanic looking for someone exotic to sweep me off my feet?  &gt;&gt;\n\n&lt;&lt; Good. I met you out on errands. And let's say Mark hasn't been around regularly since around the same time last year. We don't know where he is now or exactly who he's working with. Ugh, Javier, I should warn you that I'm feeling worse today than last night. The effects of this place in my sleep, I guess. It's hard to concentrate.  &gt;&gt;\n\nSuddenly she stiffened.\n\n&lt;&lt; Javier, some new people are approaching the building. And they have children with them, six or seven kids. They must have another place where the kids live. I saw a smaller building out one window.  &gt;&gt;\n\nDamn. Javier had been thinking of what they could do as a distraction, or to help them escape. Something like setting a fire wasn't an option if there were kids in the building.\n\nBefore they could say any more, someone began undoing the door latch. It was the same obnoxious guy as yesterday.\n\n\"Morning devotions,\" he said. This time he smiled at Nicola and completely ignored Javier. But as they left he gave Javier a nasty look over his shoulder.\n\nJavier fumed. No doubt the asshole had enjoyed seeing her naked yesterday. Well, good luck with that.\n\nTo burn off some frustration, Javier jogged around the room a while, then did some pushups. But then he was just left with his thoughts again.\n\nWhen Nicola finally returned, he was more irritated than ever. She brought with her a plate of food, apparently for Javier.\n\n\"I ate lunch with the others,\" she said apologetically. \"There were about thirty of them, even some kids at the other end of the table. I guess they're home-schooled here or something. Cute kids, really. I wonder what it would be like to grow up in a place like this.\"\n\nJavier tried to swallow his annoyance. But what would they expect? Of course he'd be pissed off to be stuck in here.\n\n\"Did you ask about me getting out? I'm getting pretty sick of this room.\"\n\nShe nodded, seeming distracted. \"Still no real answer. I'm not sure who really runs this place, or if there even is one person. I think the elders might discuss things together before making decisions.\"\n\nJavier sat down to eat.\n\n\"How were your devotions? More meditating?\"\n\n\"Yes,\" Nicola said, focusing back on him. \"And a bit of singing, not that I really knew what the words were about. Something about seeking truths through murky waters and the Chosen's long path to harmonious balance. Nothing offensive. And you know I always loved singing. It's strange. I was never a religious person, but there's a peace here, even with all these other people.\"\n\nJavier watched her. Of course she was acting, but the best lies were wrapped around truth. And she was being uncomfortably convincing.\n\nJavier finished eating in silence, and Nicola collected his plate along with a few other dishes. \n\n\"I have more devotions this afternoon,\" she said. \"I hope you can join sometime.\"\n\nHe had a terror that she was going to walk right back out, but then she kissed him on the forehead.\n\n&lt;&lt; Not doing good, Javier. Feel like a zombie. So much easier to just go along with everything and not fight it. But I'm trying. Almost sensed something in meditations. Words and images. Like the canyon. Maybe they're trying to predict the future. Seeking truths. I love you, Javier.  &gt;&gt;\n\nHe gaped at her last comment, but Nicola didn't seem to notice. And then the knock came, and she left with the familiar pair of blue-robed women, taking with her the pile of dishes.\n\nShe'd left behind a metal fork and knife, and a small ceramic plate. Not accidental. She was fighting. But if they were stuck here much longer it might be up to Javier.\n\nHe spent a fruitless few hours imagining scenarios where a dull knife helped him. Maybe he could pry open a window somewhere, if they ever let him out. Maybe with Nicola's help they could break into a vehicle. When the bolt finally clicked on the door, he relaxed.\n\nBut it was the asshole, apparently there for him. Javier stood up with a sigh.\n\nHe didn't look particularly tough, and Javier briefly imagined trying to overpower him. But that was probably a terrible idea. Everyone here had Changes, and even if Nicola didn't think there were many with powerful abilities, this guy had come by himself for Nicola the first time. They would have sent someone strong enough to handle her. \n\nHe followed the man into an airy corridor. They passed several open rooms with larger windows, and he got his first glimpses of the outside. Nicola hadn't lied about the beauty of the place. He smelled the fresh outside air more strongly now. Very similar to the Sierra camp.\n\nThe other man took his arm and pushed him into a larger room before closing the door behind him. Javier was left alone with two older women in gray robes, sitting behind a large table. One of them was Samuel's mother, who stared at him with an unblinking intensity. Javier felt a surge of fear.\n\nThe other woman was older and looked friendlier. She motioned to a chair on his side of the table, and Javier sat.\n\n\"My apologies,\" said the older woman. \"My name is Margaret, and this is Diana. We have been discourteous hosts. Our only excuse is that you are something of an unusual visitor.\"\n\n\"Jos\u00e9 Santillo,\" said Javier. \"Thank you for your apology. But I can't say I expected much better, given the way you abducted us.\"\n\nDiana didn't change expression, but Margaret looked honestly chagrined.\n\n\"It is an unpleasant approach, I agree. No doubt we could find something better if we were less imperfect vessels. But experience has taught us to err on the side of caution, as inharmonious as those tactics may be. It is all in service of the Way.\"\n\nJavier nodded slowly. \"I don't know what you mean by the Way. Nicola seems to be learning something, but she's still confused as well. Is it a religion that you follow?\"\n\n\"You would see it like that,\" said Margaret. \"And Nicola may as well, at first. But the Way is more than a religion, and less. It is not about belief, because the Way exists whether we follow it or not. Nicola will understand that soon enough, and she will understand why this is her place.\"\n\n\"But not mine?\" Javier asked, letting himself sound a bit panicked. \"I don't understand. Nicola always said that her differences didn't matter. You said I wasn't Chosen, and I can guess what that means. But I don't think she'd abandon me.\"\n\nMargaret gave Diana a sharp look. \"You told him he wasn't Chosen?\"\n\nDiana frowned and nodded. \"You know I can sense such things. He is as I reported.\"\n\nMargaret sighed and rubbed her forehead.\n\n\"Jos\u00e9, it's not quite so simple as that. Diana has a particular point of view on this question, but others have different understandings. There are those among us with only the most tenuous ability to join the Union, and still they are equal in their devotions.\"\n\n\"But he has no ability,\" Diana said flatly.\n\nMargaret looked reprovingly at her. \"You know as well as I there are cases. And do you not see why it might be appropriate in this instance? Think of Nicola's future.\"\n\nA quick, unexpected set of emotions crossed Diana's face. Anger and regret.\n\nPursing her lips, Diana stared back at Javier.\n\n\"Do you truly love her? Enough to stay with her, even with those who will find it hard to accept you as an equal?\"\n\nJavier set his jaw. \"Yes. Of course I do. But I don't see why it would come to that. You seem awfully sure that she's going to decide to stay here.\"\n\nMargaret shook her head. \"She will decide to stay here. That much is clear already, whether or not she knows it. But you see, for those like her, it is dangerous to have children with others who are more than slightly Blessed among the Chosen. If your love is true, you may be a good partner for her. But there is only one way you may stay among us. You must bind yourself to Nicola, and thereby bind yourself to the Way.\"\n\nJavier's jaw dropped. Diana rushed in to fill the silence.\n\n\"Do you truly understand what Margaret proposes? This is more than marriage means in the outside world. This is a lifelong, unbreakable commitment. You're younger than Nicola, and that's good, but did you know that those Blessed like Nicola can age very slowly? She may outlive you by decades, watching you grow old before her.\"\n\nJavier found his voice. \"We suspected as much, and I actually have thought about that. More than you'd believe. But\u2014this is so sudden. I'd only started thinking about how I might ask her\u2014\"\n\n\"Do not make this decision lightly,\" said Margaret. \"We will give you time to think and discuss. Even if you and Nicola agree to the binding, it must be approved by the elders.\"\n\nAfter a shared glance, the women apparently decided the discussion was concluded. Diana looked out behind Javier, towards the door. As if by magic, the man who'd brought him there entered.\n\nMargaret spoke up. \"Mateo, please take Jos\u00e9 to the dining area so he may pick out food on his own, before returning him to his room. Jos\u00e9, we understand your discomfort at being confined to your room. The elders will discuss it further.\"\n\nThere was a large kitchen attached to the dining hall, with a few blue-robed workers wearing aprons. Plenty of silverware everywhere. He was getting a sense of the layout of the place, if they ever had a chance to try for escape. The windows in the dining hall opened, and through them he could see a path away from the small lake, one that he hoped led to vehicle parking. \n\nMateo glowered at him while he took his time selecting food. It really was good, varied fare. No reason not to eat well as long as he was stuck here.\n\nWhen they returned to his room, he heard faint noises further down the hall, like humming. That would be the main devotional space, where Nicola presumably was.\n\nUnexpectedly, Mateo came into the room with him, closing the door.\n\n\"Jos\u00e9,\" he said, making the name sound like an insult. He leaned to whisper in Javier's ear, and Javier tried not to flinch.\n\n\"She is beautiful, isn't she? Glorious, and strong. She's already forgetting about you. It would be easier for everyone if you accepted that soon.\"\n\nJavier shoved him away roughly, but Mateo just smiled and walked out. He obviously considered Javier no threat, and Javier hated that he was likely right.\n\nMateo's words burrowed their way into his head. Javier told himself it wasn't jealousy. He was just terrified on Nicola's behalf. Still, the fact Mateo had whispered the words, that gave away a few things. They must all be under instructions to be polite, but that didn't mean they were all of the same mind. More importantly, Mateo was worried about eavesdropping, but not as much as Nicola and Javier were. Their own communication was probably safe, even with Diana in the building. Despite Diana's ability to silently call people to her, the way Esther could. ",
        "He was mulling over that unpleasant notion when he felt the first long pulse, and his heart soared. Esther.\n\nHe listened eagerly, but it was far weaker than all the times they'd practiced. And it faded out completely after one word.\n\n\"Trying.\"\n\nHe almost cried. Of course she was trying. But he loved her for doing what she could to reassure him.\n\nMarriage. He'd never brought up anything like that with Esther. They were so young, and they had so much time. And he'd just kind of assumed they were in it for the long haul. Surely Esther knew he felt that way? It didn't matter. He'd make it a lot more clear to her when this whole mess was over. And in the meantime, he had to do what he could for Nicola.\n\n* * *\n\nEsther, Mark, and Selena were in the air not long after sunrise. As always Mark looked down in fascination, smiling as they soared over the morning fog filling the Central Valley like an ocean. Ahead of them the mighty Sierras glistened with half-melted snowfall, as though holding their breath for the cold season's true arrival.\n\n\"I can't believe you can even lower the noise from this thing,\" Selena said. \"You could make big bucks that way, just flying around with rich businesspeople.\"\n\nShe seemed in a better mood today. But she'd also told Esther she always felt more at peace flying an aircraft than anywhere else. The sound up here was just ordinary machine noise, and the simple rush of air outside. Familiar smells of machine oil, fuel, plastic, and dry air. Fewer distractions, except when she had passengers.\n\nWhen they landed in the small airport outside Phoenix, Selena already had a rental car waiting. Esther was glad to have someone able to take care of all those things. This was all so much faster than she could have managed on her own.\n\nThey were soon driving on a two-lane highway through gorgeous, desolate scrub, with mesquite and sage mixing with surprising stands of cactus. Just as a desert was supposed to look, Esther thought with delight.\n\nWhen they neared their destination, Esther turned to Mark. \"Would you be willing to wait out of sight? The other group of Chosen was looking for you, and I'd rather this man not see you. I don't think he's strong enough to sense you if I'm trying to keep you hidden. And I promise I'll call if we need you.\"\n\nMark nodded slowly.\n\n\"Don't worry,\" said Selena. \"I started weightlifting, the way you suggested. It had never occurred to me to try, but you were right. I'm getting stronger faster than I expected. It's a little unsettling. Anyway, we can take care of ourselves.\"\n\nMark crouched in the back seat while they rolled down the obvious gravel road toward a lone adobe house. Esther could feel the man's presence strongly. Familiar from so many dreams and memories, but frail. This man wasn't what he'd been twelve years ago.\n\nThey pulled into the paved driveway behind a van, the sort that looked modified for driver in a wheelchair. Esther and Selena got out and walked up to the door. No bell, or any sign he ever expected visitors.\n\nEsther knocked loudly. The man was obviously both annoyed and curious, and he wheeled slowly to open the door.\n\n\"Well? Who the hell are you, then\u2014\"\n\nHe stopped, squinting at Esther. His eyes widened, and then he closed them. She felt him trying to sense her, but she wasn't going to open herself to that.\n\nFinally he opened them again.\n\n\"Annie,\" he whispered. \"Is it really you?\"\n\nIt was the last thing Esther expected. Who exactly did he think she was?\n\nShe shook her head. \"My name is Esther. I'm here to ask you about a group you might know something about. The Chosen.\"\n\nEsther stopped, realizing he was crying, not listening anymore.\n\n\"Esther, that's what they called you,\" he choked. \"It's my Annie, finally come to see me.\"\n\nEsther stared at him, a horrible suspicion rising in her mind.\n\n\"Who are you, really?\" Selena asked sharply. \"Why do you think you know her?\"\n\nThe man shook his head, wiping his eyes on his sleeve. \"Of course I know her. She's my daughter.\"\n\nThere was a roaring in Esther's ears. This man couldn't be her father. Her father had been murdered, almost two years ago. She'd loved him so terribly. This man was\u2014he wasn't a good man. That much she knew already.\n\nSelena stepped forward and slammed her hands on the sides of his wheelchair. Esther had never seen her so angry.\n\n\"Don't you fucking lie to her,\" she said. \"You're not her father. I know that for a fact.\"\n\nEsther saw him struggling with anger, his body tensing. She suddenly realized he wasn't as helpless as he looked. He could get out of that chair if necessary, and she could feel him reaching with his senses, doing something she didn't entirely understand. She prepared to call for Mark, but just as suddenly the old man deflated.\n\n\"You're right,\" he said bleakly. \"I could never have been her father. I'm not the kind of man who could be a father. I did the best I could.\"\n\nSelena moved her face closer to his.\n\n\"Why don't you invite us in,\" she said. \"And then you can explain exactly what you mean, from the start. The orgies in the desert, the visions, all of it. Whatever it is you know about Esther's past. And don't even think of lying again. Esther is sweet and trusting. I'm not.\"\n\nThe man flinched away from her, then scowled. But he wheeled back a few steps, gesturing them to follow. Esther could see the need in his eyes. He would tell them what he knew. She was no longer sure she wanted to know, but it was their best hope for Javier and Nicola. And afterwards, she would get away from this place as quickly as she could and try to forget him.\n\nHe led them to a messy living room, the couch covered in old mail and other papers. The man shook his head and pointed at some chairs jumbled in the corner. Selena and Esther retrieved them and sat across from him.\n\n\"My name is Benjamin Price,\" he said. \"One of my names, anyway. That was what I called myself back when it happened. Maybe thirteen years ago.\"\n\n\"So you weren't there when she was born,\" Selena said.\n\nBenjamin scowled at her. \"You want me to tell this story? Stop interrupting. But no, I wasn't there when she was born. I don't know who her birth parents were. She did live with me for a year, though. I really was her father, or the closest I could be to it, for a while. Satisfied?\"\n\nSelena didn't say anything, so that must have been the truth as he viewed it. Esther nodded, trying to stop clenching her hands. It was just information about a past she didn't remember. None of this could hurt her. This man didn't have to be anything to her if she didn't want him to be.\n\n\"Go ahead, Mr. Price,\" she said, seeing him wince at the formality. \"How did it start, then? Thirteen years ago. I would have been seven.\"\n\nHe squinted in confusion. \"No, you weren't seven. But of course, you wouldn't understand. I guess I'll have to start earlier than that. I think I heard you say something about the Chosen?\"\n\nEsther nodded.\n\n\"That was my upbringing,\" he said. \"So long ago. I'm one of them, or maybe I used to be. How much do you know about them?\"\n\n\"Very little,\" said Esther. \"Some kind of cult for people with abilities like ours.\"\n\n\"Ah, so you do have abilities,\" he said, smiling in satisfaction. But when he saw Selena's expression, he hurried on. \"I guess cult is as good a word as any, though even now it hurts to hear you describe it like that. The Chosen might say you're already one of them, but you just don't realize it yet. Your friend too. Whatever her name is.\"\n\nHe waited for Selena to introduce herself, but she was silent.\n\n\"You have to understand, I knew nothing of life except the Chosen. We were in a great big house somewhere in Utah or Colorado or that area. Just a few families, and the occasional newcomer. They would come to marry. That's how it worked for my oldest sister. She had two little babies by the time I left. No, let me tell the truth. They cast me out. I was only fifteen.\"\n\nDespite herself Esther couldn't help but feel sympathy. Throwing him out of the only home he knew, at such a young age?\n\n\"And what exactly did you do to get yourself cast out?\" Selena asked, mouth tight.\n\nBenjamin looked uncomfortable, and suddenly he couldn't meet Esther's eyes.\n\n\"It's not important,\" he said. \"That doesn't have anything to do with Annie\u2014\"\n\n\"I told you not to lie, Benjamin. And her name's Esther.\"\n\nBenjamin nodded, looking defeated.\n\n\"Esther. A beautiful name. All right, then. I'm an old man and I don't pretend I've led a virtuous life. Now, I'll have to explain more about the path the Chosen follow. We called it the Way. But it's all centered on a particular set of ceremonies. People like us, the Chosen, whatever you want to call us\u2014\"\n\n\"The Changed,\" said Esther.\n\n\"As good as any name. Anyway, people like us are all connected. All the time, even when we don't know it. That's what the Chosen believe, and it's what I still believe. Some of us are unusually bright, or strong, or very sensitive to the world around us. But all of that pales compared to what we are together. Our minds are constantly working together to understand everything, and the Way *is* everything. It's everything that happens or will happen. Only our imperfect understanding of the Way stands between us and a harmonious existence.\"\n\n\"You still believe all that?\" Selena asked.\n\n\"More days than not,\" he said. \"But I guess it doesn't matter if you believe or not, because that's what the Chosen believe. The point is, the Way is real. In these ceremonies of Union we can glimpse truths beyond ordinary human perception. Even events in the future. But only poorly. Anyone who has experienced Union desires nothing more than to understand better. More meditation, more Union, and whatever actions we can discern to bring the world closer to harmony with the Way. It is difficult to explain exactly, but that is how I remember it.\"\n\n\"So what happened with you?\" Esther asked.\n\nBenjamin looked down. \"My abilities were stronger than anyone else among our families. Almost too strong. They call it being Blessed, but beyond a certain point it is no longer a blessing. There is a balance to be maintained, you see. An individual, too strong, can warp the entire group's perception of the Way. Or that is how they explained it. Later I wondered if it was a way for the older folks to maintain their sense of control. And no doubt it's also because those with too many Blessings have difficulty conceiving children. But I cannot stress this strongly enough. There was a limit to the Blessings an infant was allowed, even if the elders had bitter arguments over individual cases.\"\n\nEsther was aware Benjamin was avoiding the question of his dismissal, but this was vital information nonetheless. \"How could they enforce that, though? Isn't it unpredictable?\"\n\nSelena shook her head slowly. \"They killed the children, didn't they. Killed them for being too different.\"\n\nBenjamin nodded unhappily. \"So I heard, though it never happened while I was there. I believe it's very unusual. I only heard tell of how hard my parents fought for me. I have also heard there are ways a child's Blessings can be nullified. Ceremonies during their growing years to prevent them from ever developing their abilities. But that may have been a children's tale to soften the truth.\"\n\nEsther finally grasped the point Benjamin was making. \"I have too many Changes. I never would have been allowed to live or grow up normally among the Chosen.\"\n\n\"Without a doubt,\" Benjamin said, eager to move on. \"I knew it the first time I saw you. And I'm sure my sister did as well. That's why she would have taken you.\"\n\nEsther leaned forward, dreading and needing the rest of this story. \n\n\"Hold on,\" Selena said. \"Last time. Why did they kick you out, exactly?\"\n\nBenjamin looked wretched, but he took a deep breath.\n\n\"I was an adolescent boy,\" he said. \"Hormones raging like any other fifteen-year-old. And of course there was a girl I liked, and we'd both just come of age for devotions. I tried to sit next to her whenever I could during Unity, because the closeness you could get\u2014oh, it was all mixed up in my head. And I lost sight of the Way, because all I wanted just then was the pleasure I was denied until I was a full adult.\"\n\nSelena stared at him. \"You lusted after her,\" she said slowly. \"But it wasn't just that, was it? You were stronger than everyone else in Unity services.\"\n\n\"Yes,\" he said miserably. \"I was too young and confused to know how to act on the feelings I had. But others knew full well how it all worked. And when the elders finally managed to restore order, it was too late. A shocking number of couplings or near-couplings had begun among the adults, ones that should never have taken place. It was a disaster.\"\n\n\"You were a boy, though,\" said Esther. \"You didn't know what was going to happen.\"\n\n\"That didn't matter,\" he said. \"It was evidence of the mistake they'd made. I was too strong. They argued about it for days. Perhaps they even considered executing me, but in the end it was expulsion. Of course, it was not so simple as mere expulsion. The Chosen are fanatical about secrecy. Very occasionally adults decide they can no longer follow the Way, and if they are firm in their beliefs, they are allowed to leave. But they are not permitted to remember anything about their time among the Chosen. There are long rituals capable of this kind of memory erasure. It is a cruel sort of banishment.\"\n\n\"You remembered,\" said Selena. \"Quite a lot. How did that happen?\"\n\n\"As I told you, I was too strong,\" he said. \"I did actually forget all of this for years, and I imagine they thought it had worked. Indeed, there are still great gaps in my memory, precisely about the things they must have worked hardest for me to forget. I can't remember anything about their precise location. I can't remember how the Unity meditations worked, or most of the others. Only fragments. It is a devastating loss. And I suspect it did not leave my mind quite correct. I've done things in my life I'm not proud of, and frequently I didn't even understand why I was doing them.\"\n\n\"Tell me about your sister,\" Esther said. \"And how it all fits with what you did in the canyon. The dreamers.\"\n\n\"How do you know about all that? Did I finally reach you, then?\" \n\n\"Just answer her,\" said Selena.\n\nBenjamin nodded. \"My sister, then. I'd lived on my own here for years, and then somehow she tracked me down. She was dying. My bright, sparkling little sister was a tired old woman, but I knew her right away. She had a child with her, and as I said I knew immediately you were Blessed beyond ordinary limits. Sarah told me nothing of your origins. I considered the possibility that you were her child, but that would have made Sarah an elderly mother even for our kind. More likely she stole you away from another mother, perhaps with their blessing. She wouldn't even tell me how old you were, but she implied you were at least fifteen. Of an age to attend Union devotions. I know it seems hard to believe, but it did not seem impossible to me. I was a slow-growing child myself, and you have far more Blessings than I did.\"\n\nEsther tried to absorb that. Eight years older at least, more years of her life she had no memory of. She was probably in her late twenties. It made no sense, even though Abuela had tried to prepare her for the possibility.\n\nSelena was asking her something. She blinked.\n\n\"Yes, I'm all right. A lot to take in. Go ahead, Mr. Price.\"\n\nHe looked pained again, but she wasn't going to give him the familiarity he wanted. \n\n\"Sarah did tell me a few things about the Chosen. There had been a schism, or perhaps more than one. I think they had sensed in the Way different portions of a complicated truth, and it had driven them apart. She was enough of a believer that she still wouldn't share those secrets with me. But she was desperate for your safety, and convinced that you were vital for the future. Everyone's future, she said, not just the Chosen. I don't know if she'd seen something, or she was simply your mother. I may not have been your father, but Sarah was certainly a mother for you. And she was a good woman.\n\n\"She came to me out of desperation, a fugitive seeking an outcast. She remembered me for the confused boy I was, not the pathetic man I became. And then she died only a week later, leaving me with the greatest responsibility of my life. You were in shock, and I was beyond panic. I knew nothing about raising a child.\"\n\n\"What was I like?\" Esther blurted.\n\nHe smiled wistfully. \"You were quiet, almost to the point of silence. You thought carefully and rarely shared those thoughts with me. But you had an astonishing memory. Given some time you could memorize a book. You could even repeat things your mother had told you years ago, verbatim, and in my loneliness I begged you to do that sometimes. But you never entirely trusted me, and those moments were few and far between. I knew you were miserable cooped up here with me, and from the start I knew you needed proper parents. But I had no one to trust. And I suspected there were further changes coming, ones which might leave me even less capable of taking care of you. So I turned to the only solution I could think of. The dreamers, as you call them.\n\n\"I could not remember or perform the proper Union meditations. But over the decades I had reconstructed something similar enough to let me touch the Way again. It was all wrong, colored by those fractured, hormone-riddled memories. But I was a weak and lonely man, and I tried to make sure my partners understood what they were getting into. I was always good at picking out someone with even the slightest Blessing, and with a handful of partners, I could reach that brief glorious glimpse of the Way.\"\n\n\"Mystical orgies,\" Selena snorted. \"I'm sure that had great currency with the right crowd.\"\n\nBenjamin glared at her. \"I gave it up eventually, when I found I could do something similar in my dreams. These partners wouldn't remember anything except a particularly strange erotic dream. It solved many problems.\"\n\nEsther felt a rising anger. \"What problems? Problems for you? You didn't even ask their permission?\"\n\nBenjamin winced. \"That was how I thought about it at the time, anyway. Over the years I frequently tried to stop, but I was never entirely successful. The Way still calls me, you see.\"\n\n\"Get to the point,\" said Selena. \"Explain how you turned these dream partners into real-life partners. Explain the canyon, and the visions that led you to leave Esther where you did.\"\n\nHe goggled. \"You already know about that? Then what else is there to tell, really?\"\n\n\"Explain it anyway,\" said Esther.\n\n\"You must understand, I needed to *know* something. Not just to get glimpses of the Way, glimpses that were incomprehensible to me without a proper Union. And so in an attempt to redeem my miserable life, I did something unforgivable. I profaned one of the ancient spaces. That canyon was a secret even among secrets to the Chosen. We visited it twice a year, on the most important holidays, and I was only old enough to travel a single time. The others would have been incensed to find that I recalled enough of that trip to discover the canyon again, after years of searching. But I was never fool enough to enter it. Not until after your mother died.\n\n\"What is there to tell? I bought a big van. I selected a few dream partners I judged best compatible. I nudged one to find another, and then the rest were drawn easily enough into one place, whoever lived nearest me. Then I left you with plenty of food and instructions to stay put, and I drove to meet them. Years before I had worked out the closest possible place to the canyon accessible by rough driving. So I took them there, with a van loaded with food and water. They occupied themselves on the way, and in that state they were suggestible enough that I could cajole them into putting on packs and walking the mile and a half to the proper spot. And of course they were eager to enter once they were close. I always feared that others would show up, but the canyon showed no signs of use for years, or even decades. I don't know what happened to my family.\"",
        "\"That's monstrous,\" Esther said, shaking. \"Do you have any idea what you did to those people? You used them like tools, then discarded them, all so you could get your visions within the canyon?\"\n\n\"You can't comprehend the vastness of what we saw there. Even I could barely sort through it. I realized I didn't know enough\u2014\"\n\n\"And so you did it again, and again,\" said Esther, standing up. She'd never felt fury like this, not even at Franklin. \"You selfish piece of dirt.\"\n\n\"I did it for you, Annie,\" Benjamin said, struggling not to cry. \n\n\"I'm ESTHER!\" she yelled, running at the disgusting man.\n\nA cool grip on her arm yanked her to a halt. It was Selena who was holding her, Selena who would never touch another person, unless it was an emergency.\n\nEsther gasped a breath, then another. She looked at Selena's face, tired and strained with discomfort. There was nothing here but a pathetic old man, and a very good friend.\n\nSelena sensed the moment was over, and she let go. Esther shook her head and moved away, trying to breathe into a calming meditation.\n\n\"Tell us how you left the canyon,\" said Selena. \"You and the others. Surely it pulled you there with its power?\"\n\nBenjamin looked at her in surprise, and with a strange hunger. \"Yes. How did you know about that? Have you been to the canyon? Where is it?\"\n\n\"What?\" Esther asked. \"You know where it is\u2014\"\n\n\"First question first,\" said Selena. \"How did you leave?\"\n\n\"There is a meditation I learned as a child. They taught it to all of us who were Blessed enough to make the ancient place dangerous.\"\n\n\"Teach it to us,\" said Selena.\n\nHe looked at her as though she were crazy. \"Me? Teach? I barely even remember it. I learned it so long ago that it was automatic when I needed it, but I suspect even that instinctive knowledge is gone now. As for the others, they were easy enough to lead out. By then their senses were utterly exhausted by the power of what we accomplished.\"\n\n\"Don't speak that way again about what you did,\" said Selena. \"Just tell us absolutely everything you can remember about this meditation. The words your teachers used. The feelings it produced. Anything.\"\n\nHe sighed. \"It was all about focusing your senses within your own body. In the end we are all governed by our senses, and that is how the ancient place overwhelms those with too many Blessings. The solution was a kind of reversal of the senses. I can't explain it, but that's how it felt to me. As though I was trying to listen to my own body from the outside in.\"\n\nEsther nodded. This was useful information, and Selena was right to focus on it. Her own past was not what was important here.\n\n\"Is there anything else? Anything at all about the meditation?\" Selena stepped closer, and Mr. Price flinched away, shaking his head. Selena sighed. \"Then tell the rest of it quickly. You learned enough to know where to deposit Esther, after a year. How exactly did you do that?\"\n\n\"I almost didn't manage,\" he said. \"That's what I was going to tell you. They found me, somehow. A Chosen of immense power must have learned of the blasphemy I was doing. Or perhaps a group of them, in some form of Union I don't understand. That entity ripped the memories out of my mind, from what seemed an unthinkable distance. I didn't know that was possible. I lost some of my hard-earned memories of the Way, and all the details about the ancient canyon. When I attempted to contact my dream partners, that presence was there again to block me.\"\n\nEsther and Selena exchanged a glance. Surely that had been Abuela. \n\n\"But I pieced together what I could, and in the end I had two linked events. First: Annie, rather Esther, would be undergoing another set of changes, the sort that we sometimes recognize in infants. In my case it happened shortly after I first began to talk. For a week I was silent again, and then I was subtly different. Or so my parents said.\n\n\"With you, it was closer to a month. You became more and more silent, and began to forget things. It was terrifying, though I guessed what was happening. Towards the end I had to feed you like a baby. And that's when I loaded you in my car and drove you to Virginia, the place where I'd worked out the second event was supposed to occur. I didn't understand what I was seeing. Just woods and a creek, a sense of place and time. I drove and followed my instinct, and somehow I knew where I needed to be. When I parked and walked into the woods, I saw them from a distance: two grieving parents, and a child who was obviously dead.\"\n\n\"She was dead before you arrived?\" Selena asked sharply.\n\n\"Yes,\" he said. \"I don't know how it happened. It was unnerving to me, even knowing how subtle the Way is. But I understood why I was there. That child was young, but Esther could pass for that age. And when she came to her senses I suspected she'd have no memories of me to weigh her down. So I brought her out and pushed her in that direction. She hadn't shown any signs of understanding for a week, but she walked to them as though she knew her destiny.\"\n\n\"Why did you leave her naked?\" Selena asked. But Esther had already guessed the answer.\n\n\"They had to understand right away that I was unusual.\"\n\nBenjamin nodded, gratified. \"If they had rejected you, or brought you to someone else, I would have found another choice. Somehow. But they looked at you as though you were their salvation. I stayed nearby for a few more days, long enough to hear them call you by your new name. Long enough to believe they had taken you as their child, and to hear you speak again. Then I left.\"\n\nEsther paced across the room. It made sense. She should be happy to know where she came from, or at least much more of it. But all she wanted to do was scream.\n\nSelena spoke up. \"Esther, is there anything else we need to ask him about the canyon? Or related matters?\"\n\nShe tried to focus. What kinds of things had they been hoping to learn?\n\n\"Mr. Price,\" she said. \"How many groups of Chosen do you think there are? Do they exist all over the world?\"\n\nHe sighed. \"I know people with Blessings may come from anywhere. A few members of my family's group had even come from the outside world, but they were not allowed to talk about their pasts. While growing up I was only aware of two other groups of Chosen, and only by rumor. Even my sister's husband wouldn't talk about the people he'd grown up with. I assumed there were more, but I never once ran across another gathering of Chosen in all my travels, and I am good at finding those with even subtle Blessings. I can't imagine they're common. But then I don't know what to make of my sister's comments about a schism. She seemed to be speaking of a broader community than I knew existed. Perhaps there are more than I know, using methods of concealment beyond my understanding. \"\n\n\"Have you ever heard of a group of Chosen living inside another ancient place, like the canyon?\"\n\nHis mouth opened in astonishment. \"No! Of course not. There were tales of other ancient places, but again they were thought to be extremely rare. I can't believe the Chosen would profane an ancient place in that fashion. And what good could possibly come of it? Such places have too much power to be immersed in more than occasionally.\"\n\nWas there anything else he could help with? Esther couldn't think of it. And she wanted to be rid of this man.\n\n\"Mr. Price,\" she said. \"I know you started contacting your dream partners again, perhaps a year ago. I assume you realized you were no longer being blocked.\"\n\n\"It was only to find you,\" he insisted. \"Small chance of that, but I hoped perhaps I would catch a glimpse. When I went back to Virginia years ago, you had moved and no one knew where you'd gone.\"\n\n\"You found me,\" she said. \"And now you'll stop contacting people in dreams, forever. I know the person who stopped you all those years ago. And if you start again, I will stop you myself.\"\n\nBenjamin flinched back, staring aghast at Esther. She shouldn't have revealed the scale of her power to him. She'd reached for something to make him scared, to show he didn't have power over her.\n\nBut now he was nodding vigorously. \"I won't. I promise I won't. It was all I needed, to see that you were safe. The one good thing I did in my goddamned life.\"\n\nEsther closed her eyes, thinking of Marianne, and all the others, lives damaged by Benjamin's casual cruelty on her behalf. He would keep this promise, and if he didn't, she believed she had the power to make him. That was good enough reason to have threatened him.\n\nShe turned and strode to the door, Selena hurrying after. Just as she walked out, he called one more thing.\n\n\"Please, Esther. Tell me your parents loved you. Tell me you had a good childhood.\"\n\nShe thought about not answering. \n\n\"They loved me,\" she said finally. \"More than anything in the world. I had a good childhood.\"\n\nShe knew without looking the way his face relaxed at her answer, with a peace that he didn't deserve. But who was she to decide what he deserved, anyway? She'd given him the honest truth, that was all.\n\nWhen they opened the car doors, a wave of ludicrously hot air poured out, and Mark was comfortably half-asleep on the floor in back.\n\n* * *\n\nIt was dark by the time Nicola returned.\n\n\"Hey,\" Javier said, sitting on the bed next to her. \"Long day?\"\n\nShe didn't answer immediately, and Javier put his hand on her shoulder. She leaned against him, breathing carefully in a way that told him she was trying to meditate. Probably clearing her mind.\n\n&lt;&lt; I have a lot to tell you &gt;&gt;, he said without saying. But Nicola didn't seem to notice. She'd have to be paying attention for it to even work.\n\n\"I'm tired,\" she said faintly. \"This is a good place. But my brain isn't used to this much thinking. Maybe that's what's wrong. They said it shouldn't take so much thinking. I'm probably working too hard.\"\n\nJavier thought he heard Nicola in there, still. But he needed to play his part as well.\n\n\"Nicola, they said I could stay if you wanted to stay. They were sure you would want to, but I know you haven't decided yet. But, see, there's something very important. If you decide to stay, there's only one way for me to stay. And I was already thinking about this, but I've been too scared to bring it up.\"\n\nShe finally seemed to be focusing on him, which was good.\n\n\"Nicola, would you marry me?\"\n\nHer eyes widened in surprise, but he saw her take a measured pause. And then she kissed him, a long desperate kiss that he suspected was as much for her to gather her thoughts. But he kissed her back just the same.\n\n\"Yes, Jos\u00e9, of course I would marry you. Is that what would be needed for you to stay with me here? Is that why you asked?\"\n\nHe hugged her. \"Yes and no. They said it was necessary, though they called it 'binding'. But I would have asked eventually no matter what. We're meant for each other.\"\n\nHe was sure anyone listening would find this performance pathetic. But Margaret and Diana had seemed to believe it so far. Who knew what living in this place did to your judgment.\n\nNicola nodded slowly. \"Jos\u00e9, I still don't know if I'm staying. But I want you with me wherever we are. I guess we should have talked about this before, but better late than never, right?\"\n\nNow it sounded more like Nicola. There was pain in her tone, and Javier suddenly wondered whether she'd talked like this with Mark either.\n\n\"Let's not talk any more,\" said Javier. \"I just want to curl up with you. I miss you. I hope they let me participate in devotions, or just let me out to see you more tomorrow.\"\n\n\"Me too,\" said Nicola. She got up to turn off the light, and as Javier's eyes adjusted he realized she'd dropped her robe on the chair before slipping under the covers. She would be naked underneath.\n\nJavier undressed to his boxers, wondering what exactly he was doing. They were just acting here. Nicola was tired and hadn't wanted to put on anything more to sleep in.\n\nWhen he squeezed in next to her, she pressed her entire body against his side, throwing one leg over his. He was frozen, overwhelmed by the intimacy.\n\n&lt;&lt; I'm drowning &gt;&gt;, she said quietly into his head. &lt;&lt; Talk to me. Tell me about your day. About Esther. About soccer. Anything.  &gt;&gt;\n\nSo he began talking in that odd way. After a few sentences she told him to slow down, and he did. He told her everything that had happened that day, about the meeting with the elders, what he'd guessed, and of course Esther's message.\n\n&lt;&lt; I keep dreaming she and Mark will come down on this place like God's own angels &gt;&gt;, she said. &lt;&lt; It's the only thing that kept me from succumbing this evening. That and thinking of you. I don't know what would happen if I plunged fully into this Unity. I can feel how much they want me to, and it's pulling at me like the most powerful drug you can imagine. And if I did succumb, I couldn't hide my strength any longer. I'm like a rare prize to them, and it's scary how excited they are to add my strength to theirs. But they don't even understand how much I'm hiding.  &gt;&gt;\n\n&lt;&lt; Tell me about what you saw when they carried us in. Were we on that path that you can see from the dining room? Is that where the vehicles are?  &gt;&gt;\n\n&lt;&lt; Yes. Not too far down that path, I think. But it's not so easy. I met a familiar guy today, someone I recognized as one of Lukas's group, and he definitely remembered me. Aside from Janelle he was physically the strongest person Lukas had. I bet he's the one who told them about me and Mark. He was on guard duty today, and he let slip that there's a guarded gate and only one way in or out. There were other new people I met today, guards or people caring for children. People with more Changes than I'd seen before, aside from Diana. That was confirmed this afternoon when we went skinny-dipping in that freezing lake. I thought my tits were going to fall off. Anyway, I think Diana spends most of her time doing things in the outside world, but she's sticking around for the moment. Probably they're still nervous about me or someone coming after me.  &gt;&gt;\n\nJavier thought about that.\n\n&lt;&lt; I wanted to come up with a distraction, and then run to steal the car. Maybe we could distract guards. Maybe we could smash through the gate, or you could manage to off-road it for long enough. Or we could escape into the woods on food. But probably none of that would get us past Diana.  &gt;&gt;\n\n&lt;&lt; The Huntress &gt;&gt;, Nicola agreed. &lt;&lt; She's fucking terrifying. We're not going to do this without outside help. Fuck, I'm tired. Losing concentration again. Give me a few minutes.  &gt;&gt;\n\nShe settled closer against him, her arm draping over his chest. Javier was painfully aware of the warmth of her crotch, pressing against his hip. Only his underwear separating them. He was getting an erection, and to his embarrassment Nicola shifted her leg to accommodate him.\n\n&lt;&lt; Sharing senses with Esther felt like really good sex &gt;&gt;, Nicola said eventually. &lt;&lt; Unity with them feels more like a drug. They're all addicted, but they don't notice. It's just part of their identity now. I'm terrified, because I think I'm having withdrawal pains. I need distraction so I don't give in or go insane.  &gt;&gt;\n\nShe pressed her crotch more insistently against him, as if Javier hadn't guessed what kind of distraction she wanted. He was sure this was a terrible idea. Every part of him except his stupid dick.\n\nHe found himself stroking her bare shoulder, and she reached eagerly to feel his dick.\n\n\"Not yet,\" he blurted out loud. Well, if someone was listening to them, it was plausible bed talk.\n\nShe stopped, unsure, and Javier kissed her, trying to sort out what he felt. It was hopeless. All mixed up. He moved his hand closer to her breast and she quickened her breath.\n\n&lt;&lt; Well &gt;&gt;, he said silently. &lt;&lt; I guess we are engaged now.  &gt;&gt;\n\nNicola let out a brief laugh, and it was what Javier needed. She wasn't a total zombie, or out of her mind. He circled her breast with his hand, finding the sensitive spots on her chest. Almost like Esther. Nicola caught her breath and stroked his hair.\n\nWhen he took her nipple in his mouth, she growled and rolled on top of him, pinning his arms back and tantalizing him with her breasts. After a bit she pulled away, and he struggled against her. She held him harder. He thrashed, and her grip tightened. \n\nShe was stronger than he was, and she was enjoying this. She pulled his boxers down, letting his dick pop into the open air. And now she began to kiss his chest, further and further down. He stopped struggling and she grasped his turgid shaft in her hand.\n\n\"So big,\" she murmured, and he was embarrassed. Only a little bigger than Mark. But she bent over and took him in her mouth, swirling her tongue the way she probably did with Mark. He didn't want to think about that, so instead he thought of Esther, joined in blissful ecstasy with Nicola. And maybe him, holding Esther, or Nicola, or both. His dick twitched with another long stroke of Nicola's tongue and she started to brush his balls lightly. Different from Esther. He wanted to make her forget everything.\n\nJust as suddenly as she'd started, Nicola pulled away from his dick, and he reached for her. But she held him down again, sitting on his chest. And then she moved forward, and his world was filled with the powerful smell of her pussy, her wet arousal leaving a trail across his chest.\n\nWhen she sat on his face, he kissed her as gently as he could. Thick pubic hair tickled his nose, and he tried to remember what this was like. He'd done it for Kat that one time over the summer, but he'd been so distracted that he barely remembered. And Esther was so unlike other women.\n\nNicola growled and ground herself against him, making it hard to breathe. But he kept kissing her slowly, learning her delicate folds and skirting around her clit.\n\n\"Just do me, you fucker,\" Nicola hissed, and Javier almost giggled. But he wanted to keep her frustrated and distracted as long as he could.\n\nHe started using his tongue, long strokes up and down each side, as slowly as he could. When she rocked herself against him in frustration, he reached to hold her butt. He suddenly remembered the spots on her thigh continued around to the base of one cheek, and he ran his fingers lightly on that side. The gasp she made told him he'd remembered correctly.\n\nHe increased the speed of his tongue, still well short of what Nicola wanted. His face was dripping with her juices, and her whole body was shuddering, but he held his pace as steady as he could. Nicola was making a soft sound, so strange and quiet that he couldn't even make sense of it. And she was crying, but he didn't know what that meant. In truth, he didn't know anything about how she responded. He was guessing, and painfully aware that both Esther and Mark knew her body perfectly, could remember everything she liked the first time around\u2014\n\nNicola stiffened and her pussy pulsed against him, her thighs squeezing him uncomfortably tightly. She had a hand at her mouth, but she was making that noise again, louder now. More than one pitch, like a fractured chorus. It was beautiful and alien and heartrending. \n\nShe was starting a titanic orgasm, that much was clear. He held on and kept licking her even as she bucked and cried and sang. He'd heard her orgasm before, occasionally from across the camp. But this was something private, something he'd never heard.\n\nWhen it was done, she slid back bonelessly, curling her torso to hold Javier's head. He kissed her breasts and she put her lips on his head. But she didn't say anything at all. For a long while they lay together that way. "
    ],
    "authorname": "rockchaser",
    "tags": [
        "fantasy",
        "science fiction",
        "sci-fi",
        "action",
        "plot",
        "drama",
        "romance",
        "unusual body",
        "changes",
        "powers"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/unity-and-destiny-pt-03"
}