{
    "title": "The Call Girl and the Businessman Ch. 07",
    "pages": [
        "Author's Note: When I first started writing this story, I did not expect the fanfare and how popular this story would be. It really touches my heart to know that I have been able to engage readers in this unconventional and emotionally-driven romance. I hope that I can carry on the standard set and do justice to the whole story by virtue of this chapter. I have given my best shot. I Feel free to tell me what you think about this chapter, good or bad. I thank you for your support and patience throughout my writing here. I have never felt so alive writing a story. The Call Girl and the Businessman is my most intense story to date. \n\nI apologize for any grammatical, spelling or inconsistencies in this chapter.\n\nI might be undergoing medical procedures soon due to health reasons and I might not be able to post the remaining chapters every two weeks, but know that I will definitely complete this story. I know how it feels like to read a story without an ending. I will probably finish this story by Chapter 10. \n\n*****\n\nChapter 7 - The First Time in the Morning\n\nI would always remember the first time it felt to find myself awakening in his bed; in my Mr. Boardmann's bed. Like a dream which unconsciously pulled me in, I could recall it ever so vividly. It was his voice I heard and his masculine warmth on my convulsing body which triggered me back into the sensations of last night. His words were not what I had expected to hear; yet mostly it was the way he spoke to me which frightened me. He had spoken to me in tenderness that enveloped my entire being; his voice could not betray that lilt of huskiness and restraint for my sake, causing me to sob even more at his attempts. How dear had he been to me last night!\n\nWhen my eyes first fluttered open to all which morning had to offer, a stream of sunlight was the first thing which captured my attention. It streaked through the glass windows, onto the bed and right into my very eyes. I noticed dust; its white specks visible through the play of light. How they had drifted gracefully in between spaces of air; as though they were cradled by a force unseen to the physical world. I was not fully awake; my eyes were still too dazed to make out concrete shapes. I noticed only the graceful glide of dust through the prism of light. It made me think that I was still in the world of dreams. I saw these subtle entities flourishing at the edge of the physical world. \n\nScrunching my eyes shut again, I reopened them to a new world. The angle of light had shifted, and I saw floating dust no more. Sunlight enticed me with a display of catch. Its tremulous light bounced on and off the velvet duvet, giving it a crimson hue. How much depth had this shade possessed! Its intensity of colour formed a spiralling vortex which teased my senses into consciousness. For a spilt second, I was disorientated, when upon gazing down, I found a velvet duvet strewn over my body instead of the much lighter hue of lilac which was undoubtedly mine. A soft gasp escaped my lips. I came to the realization then that I was in his bed. He was none other than my Mr. Boardmann; the one and only man who had affected me so, and I had yielded to his wishes by spending the night by his side. Yet I had given him neither sleep nor rest in return. \n\nI eased the duvet away from my body. It seemed to have clung on to the curves of my body. I could not be sure, but I prayed that it was not a sign that I had slept in cold sweat, as I sometimes did. It would have been undignified to sully his sheets with signs of my nervousness. I did not wish to taint anything which belonged to him; or leave even the slightest hint that I had been there. Call girls were the women which wives and regular partners could not be. We were like items of display, easy to the touch, and perfectly amenable. We had no excess baggage; no scars which we brought to the client. I had erred; I had shown him my scars and how badly these physical and emotional scars had affected me. \n\nPenelope's words still echoed incessantly in my ears. He was nothing but a client. I had betrayed what I knew better; that was which I did not treat him like the others who flitted in and out of my life. My engagement with him had been fraught with erratic emotional undercurrents and last night...the very thought of what happened caused me to gasp again. I brought my hands to my lips, covering them. I could not bear to hear what those lips of mine bore witness to, and what it had uttered to him. I had collapsed in his presence; and I had made my way into his arms. I had confided in him; in the way I knew how; and opened myself up to vulnerability before his very eyes. \n\nOh God, he was everything but a client to me. He had pried apart my closed wounds; he had seen me in my darkest moments when I was most vulnerable. He had begged me to stay with him, prompting an overflow of emotions which I had so badly tried to repress, yet to no avail. In fact, I had regressed into who I did not want to be. I had given in to him, but I felt the strain of my unfathomable emotions. These emotions were the yardstick of my endurance. They formed the voice of reason which tried to lure me away from being close to him. Under their influence, I had protested hysterically; I must not stay the night with him. Yet these unfathomable emotions were finally surpassed by my spirit which leapt out to sob in his embracing arms.\n\nMy spirit had defied me; it had cried out to be with him. It had always wanted to be with him. He had seen my soul- he knew how it looked like and what it was. He had encountered my wandering spirit on the loose, despite half-hearted attempts by the mind to maintain it in the crypts of my heart. He had been such a presence to me last night; and regrettably, I had never more been such a disappointment to the agency's code of conduct, my standard rules and mostly to myself. \n\nI was only truly comfortable when my life was mildly lived without excessive emotions. My level of resistance was hardly high. Troubled and disturbed men meant only absolute trouble; and Mr. Boardmann was the path to my abyss of no return. I was barely confident if my reopened wounds could ever be closed again. He was my serpent, for better or worse. Pandora's box had been opened and there was no turning back. \n\nI shook in frenzy when I recalled his whispers into my cheek; and the warmth of his arms all around my vulnerable body. I remembered him caressing and kissing the scars on my back in tender devotion, and instantly I was lost in an ocean of turbulent waves. Never had I been more confused; never had I been more touched by his mannerisms and gestures towards me. This man whom I had come to know- who was he really; he who uttered out my name ever so tenderly? \n\nHe was an enigma. He made me feel uncomfortable yet safe enough to sob in his arms. He was complex but he was direct. His demeanour was as changeable as the wind. What had struck me most was that he could be extremely gentle and tender despite being the very same man who cast fear and perceived violence. He had begged for me to stay with him, because he said that it had meant a lot to him if I did. He had pacified me throughout those dark hours where I experienced the pain and the extreme hopelessness of my suffering. He did not say much but I could recall those few words uttered from his lips like a mantra. I felt like I belonged to him; and he was mine, but it did not make any sense to me. \n\nI remembered his voice- so tender. He said that I was his angel; his miracle. Apparently these two words came linked. My heart skipped a beat again; it took a plunge, it hit the hard, cold grounds of reality. I shivered a little, not out of cold, but of a strange sensation which gnawed at me. I was tempted for him to be more than which he could be. I was supressing concealed affections for him. It had to be put to the rest, before it was all too late to salvage the civility we have come to experience. \n\nIf he had known about my whole past, he would see that being damaged goods was one thing, but being a rationalizing neurotic was another spectrum of it altogether. My mind worked like clockwork twenty-four hours a day. \n\nI was so far from the perceived sweet-faced, angelic miracle lying in his bosom last night. I was a wolf cloaked in sheep's skin. I looked the part of the sheep, and I was aware of who I was. I could never lose sight of that. It was only a matter of time before the wolf broke free to gnarl back at its provoker. He should be cautious of me the same way I had been cautious about him. It was only fair to both sides. I was playing the dual role of protecting him and myself as well. It was a heavy burden to bear but it was for our common good. The great classical philosophers- Plato, Aristotle, Locke and Rousseau would agree with me. I could not be wrong when I had so many wise, old men to back me up. \n\nWhat's in a name, that which we call a rose? A rose; by any other name would smell as sweet. Coincidentally I became acquainted with Shakespeare's quotation when I was a teenager. I did not understand it then. Yet my idiosyncrasies dictated that I memorized it. Despite my broken English, I wanted to remember because I was proud of the fact that I knew what the English word for rose was. The second reason was because it was a beautiful, multi-layered flower. In Bangkok, a British client had bought me a rose, and he was one of the few who made me feel any inkling of worthiness. He had recited these lines repeatedly, before taking my body in his. Today, looking back at yesteryears with some wisdom, I gathered that poetry aroused him greatly as a form of foreplay. He had been gentle with me; he realised that I was under-aged. Still I was the willing temptress, dangling by his side in a skimpy dress at the seedy bar. \n\nI had lost count of the number of men I slept with and the men who took me by force. Mr. Boardmann would pity me, but probably would be disgusted at the same time. His sense of civility would stop him from telling me that straight in the face. I too, had lamented my sorry state and I was disgusted with myself. I could not let go of this cycle however hard I tried. My whole future revolved around my shattered past. I could barely move forward without falling down. Thus any leap forward was insignificant. Three years ago, I had succumbed back into drug and drink, despite my best intentions.\n\nAs I lifted my head from the soft velvet pillow to sit upright in bed, it was then I saw him; his back was turned against me. Even from this angle, he looked impressively devilish. In daylight, I saw how fair his skin was compared to mine. Although pale, its colour was not as ghastly compared to the first time when my eyes gazed upon him. In the dimmed lighting of the restaurant, I remembered how his pallid countenance had made me shudder. His skin colour was common among the people here and nothing out of the ordinary, yet I could not pull my eyes away. Daylight made me see him more vividly than ever. I saw him from a different perspective. The vividness of light unfurled right before my eyes. How different can day and night ever be to counteract with appearances! \n\nHe was just buttoning himself up in a freshly ironed white shirt. He must have heard the shuffling of the duvet and the slight creak of the bed's headboard. He turned and looked at me, and I, at him.\n\nHis expression betrayed nothing reminiscent of last night. \n\n\"Good morning, Lila.\" He said.\n\nA bright smile curled up his lips. His voice was pleasant. He looked at me as if he were greeting a friend whom he had chanced upon the streets. \n\n\"Good morning, Mr. Boardmann.\" I said. \n\nMy eyes were transfixed on him. Suddenly I was unsure of what to say or do. Sensing my scrutiny, he hastily continued to dress himself by buttoning up his shirt right to the collar. I had nothing to do really other than to watch him. I was in a sort of daze; the faculty of my actions were delayed. My thoughts were in the realm of the past- the turbulence of yesterday; and my spirit had made its way into the background. It slumbered in the crypts of my heart again for it had completely exhausted itself. I thought that it got what it deserved. My spirit had acted in wanton disregard to what I had held dear- detachment and propriety. There were always consequences to every action. I had gone wild yesterday and there was always a price to be paid. There were no free passes in life. \n\nAfter he was done with his shirt, his attention was on me again. I could not read his expression other than it betrayed nothing. \n\n\"I figured that you would like some fresh clothes. I've placed yours on the cabinet. They have been washed and dried. As you already know, there are towels and toiletries in the bathroom.\" He said. \n\n\"Thank you.\" I said, still looking at him. \n\nHe smiled at me. His eyes lightly brushed mine. \n\n\"How long have I been asleep?\" I asked. \n\n\"Not long, I gather.\" He said.\n\nHe looked at me in a very civil manner while he stood there at the edge of the bed. \n\n\"Why did you not wake me up?\" I asked. \n\n\"I thought you would prefer to wake up naturally.\" He said.\n\nI looked at him somewhat dazed.\n\n\"I should go now.\" I said. \n\nHis gaze never left me as he proceeded to walk closer to my side of the bed. \n\n\"Of course you will go. But first we will have breakfast together and shop for a moonstone.\" He said.\n\nHis voice still pleasant; he gazed at me as a friend would. \n\n\"Yes.\" I said. \n\nFor a moment, I had forgotten that I had agreed to accompany him to the jewellery store. \n\nWe were both quiet after that. The silence was deafening because neither of us spoke although there should have been plenty to talk about. \n\n\"Did you spray my cedar cologne on your blouse yesterday?\" He asked me finally, in that same pleasant voice. \n\nI gathered that he was trying to make light conversation and I appreciated that a lot. I had felt rather awkward waking up in his bed, only to see him in what I considered an intimate moment of getting dressed. \n\n\"I did. It was blistering weather yesterday at the boulevard, and I did not want to have a sweaty scent about me.\" I said.\n\n\"I had rather thought that you liked the scent of my cologne.\" He said. \n\nHis voice teased me a little. He smiled a half smile, and I caught a cautious wink in his eyes. He was being careful with me today. I caught the subtlety of the terse manner in which he teased me and I never felt more wretched about myself. There should have been no need for him to anticipate my moods or put up a display of sorts for me. All said and done, I was the one hired to please him. \n\n\"I do like the scent of your cologne.\" I said softly. \n\nI was eager to placate and humour him all over again. Never mind what he said three nights ago about this debatable subject matter. \n\nHis eyes were full of kindness for me and he smiled a little more. He came to sit by my bedside, and he looked at me thoughtfully. A fluttering sensation rose within me. \n\nHe was quiet again, and I was becoming more nervous by the second. \n\n\"I hardly ever use that cologne anymore. It was a gift from Clara.\" He said. \n\nHis voice was more controlled now and there was a distant eeriness in his eyes, although he was supposedly looking at me.\n\n\"Mr. Boardmann, I am sorry. I did not think...\" I said, biting my lower lip. \n\nIf I had known that the cologne was a gift from his ex-girlfriend, I would have positively stayed away from it. I would have treated it like it was the plague. I sensed he thought about her still. He was trying to forget but she must have been quite the force in his life for she was able to control his better judgment. He had attempted suicide because of her. She was the one woman who had ruined his life with just the snap of her fingers. She was the Helen of Troy; the face who launched a thousand ships. \n\n\"It's alright, Lila. It's just blameless cologne.\" He said, as a matter of fact. \n\nHowever his eyes told me that he was still far away from me. He must be thinking about her; I was sure about it. There was no one else to think about except her. \n\n\"Perhaps she would realise that she made a mistake and come back to you again.\" I said, in a quiet voice. \n\n\"I do not know if she would. Now that you said it, I must be able to top up the offer of her current lover in order for her to come back to me.\" He said. \n\nHe was in deep thought now. He placed his hand on his temple and tapped on them in all due seriousness. I could hear the animated tapping on his temple. I needed no reminding that he was a man of raw strength.\n\nI wanted to imbue some sense of hope in him that everything was possible. Perhaps we should both look at the bright side of every dark situation. There was always the possibility of Clara gaining a conscience and realizing what she had missed out. He would almost certainly accept her back. \n\n\"Thanks to the miracle of the business proposal, my company would pick up now, but it would take time. I have to restructure the branches in South East Asia before profits come rolling in.\" He said. \n\nI nodded in understanding. \n\n\"After that your net worth would be more attractive than her current lover.\" I said. \n\n\"Yes, that would probably be true.\" He said, in an unassuming voice. \n\nHis eyes had a distinct blaze to it and he looked tensed. \n\nI was aware that many relationships were based on financial security, and I was not one to judge. If both parties were aware of what it took to keep the relationship running, it was all that mattered. I felt that romantic relationships embodied expectations, only that they were unspoken unlike in a business relationship. That was why they were almost certain to fail because neither partner had a clue of the other's wants and needs. Instead they subconsciously imposed clairvoyance on their partners. When the significant other failed to anticipate their needs, all hell broke loose. \n\nMy heart reached out to him. I did not wish to see him tensed up like that. I had to carry on with something uplifting. \n\n\"Or just perhaps, instead of waiting for her, you could try to win her back yourself.\" I said softly.\n\nI gazed into his eyes, trying to gauge the extent to which he was thinking about her. He felt the surveillance of my gaze and it provoked him to pierce into my eyes. He looked at me with an emotion I could not quite understand except that I could discern his strong longing. My heart hurt to see him like that. \n\n\"You think I should win her back?\" He asked. \n\nHis voice was controlled and his eyes were blazing with fire now. \n\n\"If you still love her, yes.\" I said. \n\nAt this stage, I was playing the armchair psychiatrist. This troubled and disturbed man needed more nudges in the direction he wanted to undertake. \n\n\"Despite what she has done to me, or rather caused me to do?\" He asked.\n\nThe fire in his eyes almost singed mine with an unseen force. His voice was heavy with emotion, but he had spoken clearly enough. \n\n\"Life is not fair; therefore I think that everyone deserves a second chance.\" I said.\n\nMy voice was low, and my heart; it now wanted to coax him back into pleasantry. God knows how much I had wanted to see him happy. I wanted to be the fairy godmother who granted him his three wishes. \n\nI thought that his love would be strong enough to build that relationship again. If he did not love her, he would have discarded her cologne a long time ago. He left it there as a relic of hope. \n\n\"I've told you this before, but I'll say it again. You're the kindest person I know, Lila. I'm not sure if everyone deserves a second chance.\" He said. \n\nHis eyes pierced right into the depths of mine; the grey wolf was practically aiming for my spirit to speak. I was so spellbound that I must have, for a moment, ceased to breathe. My breath came thereafter in deep surges. ",
        "\"Mr. Boardmann, I just want to see you happy again.\" I said.\n\nI spoke from my heart, and it was my sprit which addressed his. \n\nHis eyes stayed there piercing into mine. As I looked into his, I felt myself surrendering my innermost thoughts to him. He had that effect on me. He weaved his magic on me with his greyish, deep-set eyes. The wolf's lair was always prying on me for want of other people in his life. \n\nMorning had finally come for me; embracing me in its warmth. My eyes flickered downwards to the velvet sheets; my fingers lingering on the softness of the intricate thread count. My logical mind was trying to control my mannerism and gesture. The only way it could do so was by some form of movement where I could utilize the indecipherable emotions in me and put them to some work. \n\n\"I am not known to be a kind man. I am bitter. I find it hard to forgive anyone, however much I might love them.\" He said. \n\nHe put a halt to my wandering hands which were gliding over the velvet sheets. His hands clamped onto my fingers. I felt the heat of his eyes upon me. I did not look up for I did not dare. The unclear and unresolved feelings in me were prone to an outburst. I did not want to let him see me like that anymore. He had enough of me; I had decided that for our common good. Who else would agree with me besides the classical philosophers I mentioned? There were more surely. I racked up my brain. Adam Smith, Hegel, Rawls and Walzer would have given me the thumbs up too. \n\n\"I think it's because you find it hard to forgive yourself. You do not want to get hurt again. You do not want to risk it.\" I said.\n\nI tried to speak calmly and smoothly. My advice was intended for him, but it struck me hard that I felt the effect of my words upon myself. I struggled for control of my voice. I wondered why it was so. I did not think that forgiveness ever featured in the story of my life. Surely I did no wrong and there was nothing about myself to forgive, or was there? \n\nI wanted him to be free from his misery. He was a complex man, but he had been straightforward with his feelings since the first night. There was no one word to describe him. He was constantly evolving and I saw him changing before my very eyes every day. \n\n\"You're right, Lila. I have to forgive the devil in me and let go of this damn ego which is inflated and too proud to admit that I fear getting hurt again.\" He said. \n\nHe spoke in low tones; he tried to speak as a matter of passing but he had found it increasingly difficult to do so. His voice broke slightly and his hands trembled upon mine. He was caught by the ghosts of his past.\n\n\"It was not Clara's fault which brought me to take my own life. She had merely broken my heart and stole confidential information; that was all she did. Nothing more. I cannot blame her for what I did to myself.\" He said slowly. \n\nHis voice was broken. His regular smooth-sailing voice gave way to incoherent guttural sounds rising to his throat as he sought to regain control of his voice. His hands were gliding over my fingers repeatedly. It seemed like he was brushing my fingers and trying to polish them if he could. I wondered if he realised what he was doing, being so caught up in a maelstrom of emotions.\n\nI gulped hard, because I did not want to distract him from his admission. However he had noticed the change in my body language. He stopped midway with his sturdy actions, looking at me with a belated realization over what he had been doing. He let go of my hands. \n\n\"Who says I still love her?\" He said suddenly. \n\nI had least expected this question. I looked at him, astonished.\n\nHis hands gesticulated around me and finally he clung on to my waist. I was taken aback at his abrupt action. He really was expressive with his hands. He could not keep them still. So much raw energy, if not strength! They had to manifest somewhere and they needed to be set free. \n\nI looked down at his hands on both sides of my waist. I was not sure if I should push them away. I was ambivalent as to whether I welcomed his touch or otherwise. I knew that he made me feel strange, yet at the same time he made me feel wanted. It was a wonder if I could ever decide whether I wanted him to touch me at all.\n\n\"You think I love her, don't you, Lila?\" He asked.\n\nHis voice was roused into a passionate stupor. He did not seem like himself. He seemed like a drunkard who was rejected by his lover.\n\n\"Yes.\" I said. \n\n\"What makes you think that?\" He asked. \n\nHis voice was hard now. His lean hands lifted my chin up so that he could look into my face. Yet my eyes shied away from his torrid gaze. I would not gaze at him. \n\n\"You loved her enough to want to take your own life. You still keep the cologne she gave you.\" I said. \n\nMy eyes fluttered under his scrutiny. To avoid his piercing eyes, I gazed straight down at the striped linen pyjamas that I had worn. I noticed that the buttons were silver in colour. I had failed to notice this in the dimmed lighting of last night. \n\nHe was quiet for a second, debating whether or not he wanted to compel me to look at him. He sensed my unease but all the more he kept on trying to read my expression. I refused to let him do so. I kept a rigid face. \n\nTrying to lure me out in his own way, he drew an outline of my silhouette in the air, gesturing with both his hands.\n\n\"Why do I need Clara when I have my angel here? This is her likeness; here she appears before me; my miracle.\" He said, in a ragged voice. \n\nHis passionate tremors intensified as he looked at me. His face was alight with eagerness and a sense of trepidation. His voice carried waves of emotion I found difficult to comprehend. He sounded so masculine, so sure of himself. Yet his voice was breaking. \n\n\"I am no angel, Mr. Boardmann. Please stop this pretence.\" I said.\n\nI was visibly shaken at his proclamation. My voice trembled; my body shivered at his words. \n\nHe cupped my face in his palms. The pressure of his hands made me winch. I caught his wandering hands and held them interlaced in mine. \n\n\"I'll stop now but I would say it again and again until you can finally accept that. I want to say so much more to you.\" He said, in a very deep voice.\n\nHe nodded in resignation but there was a rebellious streak in his voice. This masculine stubbornness of his provoked me to the point where I felt like shaking him until he gave in to my very simple wishes. Yet I perceived any sort of rough treatment a prequel to violence, and thus I deterred myself from even initiating it. \n\n\"I can never change who I was, or the person I am right here before you.\" I said. \n\nMy eyes were brimming with unwanted tears. I muttered a silent curse at myself. I broke into tears far too easily when I was with him. He was the serpent from the Garden of Eden, and he always wanted to tempt me into being something which I was not. I knew he meant well. Yet I thought that he got far too carried away. He did not know when to stop this pretence. We were only together because he had paid for me. He was lonely and he wanted company. That was all there was to our arrangement. Anything else was completely unnecessary. \n\nHe had lived his life in abandonment. He always got what he wanted, until Clara. He had not comprehended that whilst you can have anything you want in life, it was not the same when it came to that someone special. It had to be mutual. \n\n\"I don't ever want you to change. I accept you just the way you are.\" He said.\n\nHis voice was choked with emotion. His gruff voice was the epitome of how emotionally fraught he was. \n\nI looked at him, bewildered and feeling lost because I had refused to entertain the possibility of truth in his words. I knew that I was holding up to what I knew to be true before his presence in my life. I did not wish to risk any complicated liaison where I fell deeply in a trap which took behemoth sustenance and determination to escape from. I wanted to be spared of the suffering. Mostly too, I felt that I no longer possessed that sustenance and determination to see myself through. I feared that I would have gone completely out of control. I anticipated my own descent into the darkness again. It had happened once, and it could happen again. Once trapped, and forever I was scarred. \n\nHis hands were shaking in my clasp. His warm-blooded hands were such a contrast to my cold ones. For the shortest moment in time, I was transported back to yesteryears during my school days. Classmates used to taunt me; they called me lizard girl and it stuck for years. Upon finding out that lizards were cold-blooded reptiles; they took it in their stride to show their intelligence and mastery over me. After all, they had known about my background and what I did after school hours. How could I be an angel when angels came from Heaven and were all pure and innocent? \n\n\"Lila, believe me that every word I say to you is true.\" He said.\n\nHis voice was soft and mellow. I finally looked up, overwhelmed by the unrelenting tone of his voice. They never stopped making me feel...feel just about everything about him. \n\n\"What were you thinking about?\" He asked. \n\n\"About how awfully stubborn you are. You impose your viewpoint onto me, and yet you insist I speak my mind.\" I said.\n\nMy voice was low and my expression downcast, because the admonishment did not calm me down even though I knew I had the right to exert my own thoughts. I wondered what had become of my confidence. I was supposed to be a confident, savvy call girl. I was in high demand, and I demanded that I be respected for my viewpoint. \n\n\"Because you are my angel. That is how I see you before my eyes and it shall never change.\" He said, in a voice which enchanted me because he verily believed in its truth. \n\nI looked down at our intertwined hands. Complexly interwoven with the other yet they could never be more different. Together by circumstances, separated by their own volition. \n\n\"Mr. Boardmann, I find fault with myself, not with you.\" I said. \n\n\"What vexes you about yourself?\" He asked, in a perplexed tone of a voice.\n\nHe raised his head a little, and I saw concern etched all over his face.\n\nAn air of silence filled the bedroom. I saw sunbeams infiltrate the glass windows. I saw the specks of dust again, in the air; in between spaces and in between moments of time. I was lost, had been utterly so but I was equally adamant that I hold on to what I had known. The whole world was closing down on me, and I desperately needed to cling on to that sense of familiarity. \n\nI needed to address the elephant in the room. That was what I wanted to get to all along but I had not been able to translate my intention into words. I felt somewhat disconnected from yesterday. I was all spent and looked at last night from a detached point of view. What I saw was merely an uncontrollable call girl sobbing in the arms of a client and that sent alarm bells ringing. \n\n\"I want to apologize for last night.\" I said.\n\n\"What the deuce are you apologizing for?\" He asked.\n\nHis voice was sharp and he spoke in an abrupt manner. He looked at me incredulously. \n\nI found it difficult to explain. I was not sure precisely what I should apologize for, except that it was not quite right conduct on my behalf. I was sobbing and I had opened up my innermost fears to him. I was at my lowest point in my career. Yet I was supposed to retire on a high note; him being my highest paying client. What a contrast! I did not know where one agony started and where the other ended. \n\n\"For keeping you awake last night with...all that.\" I said.\n\nMy voice echoed with traces of regret and shame. I gazed upwards at him now. It would have been terribly rude to apologize without looking at him. \n\n\"Oh Lila, you're making this very difficult for me.\" He said, sighing. \n\nHe spoke in deliberately low tones. I was confused because his words did not quite correspond with his emotions. \n\n\"I promise you that it will never happen again.\" I said, in a soft voice. \n\nI felt positively immature to have sobbed all over him. There was something about staying the night which brought up unresolved emotions in me. \n\nHe shook his head. \n\n\"Wait, you've got it all wrong, Lila. What I'm saying is don't apologize.\" He said. \n\nHis eyes radiated with brightness from the sun and its luminous pierce swept me into the grey wolf's stronghold. He had spoken clearly and slowly so that I absorbed his words. \n\nHe had caught my perplexed and distressed countenance. My illusionary mask was off today. I was as bare faced as I could be. I did not understand this complicated man's reasoning. \n\n\"This means that I have to apologize to you for my emotional baggage as well. I am sure you can recall how I had sobbed on your shoulders the second night we were together.\" He said.\n\nThe grey wolf stood before me; revealing to me his vulnerability. It sought my acknowledgment, and I gladly gave it to him. If he could read the expression in my eyes, he would see that I too would have given him everything within my power. \n\n\"It's no small feat to stay with a client who is intensely irritating one moment and who sobs in the next.\" He said. \n\nI let out a soft hush on my part. It was true that he had sobbed on my shoulders, and I had taken it upon myself to pacify him. I had stroked his head on my lap. He had shared with me with pain, his fear and his sorrow. \n\n\"How could I ever forget?\" I said, almost in a whisper. \n\nHe had looked so forlorn and vulnerable then. My heart had instinctively leapt out to him despite his sharp interrogation of my characteristics. \n\n\"I was in a dreadful mess and you pulled me out of that abyss of no return. I'm climbing out now because of you.\" He said.\n\nHe gently released his hands from my clasp, and his warm fingers tenderly tucked back strands of hair which covered my face. \n\nI drew in a deep breath. His expressive gesture made me keep very still. \n\nDeep down, I was not keen on hearing about what I had done for him. Anything I did do for him, it was because I had wanted to. I knew he would have done the same for me right now. Yet I doubted if he would feel the same when his life finally got on track again. Most importantly though, I did not wish to keep in touch with him. When the flight ends, the pleasant stranger in the plane alights, and all which remains is a pleasant memory. No strings attached and no expectations of any sort. No hope, no dreams- just a peaceful calmness again. \n\n\"Lila, I wanted in. Have you ever considered my free will?\" He asked, in a low, deep voice. \n\n\"I understand your free will but I think that it is subject to change.\" I said, in all honesty. \n\nHe looked at me as if he could not believe his ears. He became agitated and his face was feverish with indignation. \n\n\"You think that because I am troubled and disturbed, I cannot think properly for myself?\" He asked. \n\nHis voice was torn and he sounded like he was disappointed with me. But his eyes; they burned with a passionate fury. \n\nI could not back down now. I was drawn into his fury. The grey wolf was going to prance at me anytime soon. Yet was I really afraid? I did not know. I trusted him that much with my life. He would never hurt me physically. I knew that. I did not have to think. What then was I afraid of? It must be...I could not say; my mind was in a shroud of darkness. There was nothing there to be grasped or comprehended. \n\n\"You might not think the same when you are no longer dependent on your medication. When you get back to your usual routine, you will be a different man.\" I said softly.\n\nAs I faced him in the entirety of all that was uniquely him, I realised that my voice was trembling from some emotion, previously denied. My grasp on standard rules was slipping away. I was in a grey zone. The distinction of right and wrong was blurred. There was no demarcation and I was prancing back and forth between rules and prejudices. I knew I was prejudiced against him. It was not fair towards him, but my mind told me not to overthink it. \n\nHowever the spirit in me was struggling for release from the shackles which bound her after being trampled on by the mind. It was my mind which handled the conversation but it was the spirit which sought control of my voice. It struggled to let him hear the real me, or so it presumed to represent. The spirit was real; the mind was a shell of what once was. \n\n\"Lila, I may be troubled and disturbed, but I know what I want. It's not going to change ever.\" He said, looking at me straight in the eyes. \n\nHe spoke with the resolution of an iron will. I thought that he was bossy and arrogant. It was the ideal mix of what his company needed right now. If he was going to woo Clara back, that was precisely what he needed as well. \n\nI did not wish to argue with him over what he wanted. It was a losing argument. How could I ever claim to know what was best for him? Even so, I felt like I knew him better than he knew himself. He could be so hard on himself. My problems were mine solely and I was hired solely for pleasure; companionship at second best. Baring my heart was not included in the job description. \n\n\"You were there for me yesterday, Mr. Boardmann. I appreciated it a lot. I will never forget that.\" I said, in a faltering voice, however much I tried to control my voice into submission. \n\nMy voice was breaking but my spirit was roaring away. It was screaming to be heard, and it came to a compromise with the mind. The latter sought to detach itself from affection. I sought this cordial, friendly voice but I sounded too far off. I spoke as if the world was ending and this was my last chance to tell him that I appreciated him a lot. I just had to tell him. That was what my dying spirit would have wanted. \n\n\"I shall always be there for you, Lila.\" He said, in a voice which reassured me that he would. \n\nI was so touched that I wanted to cry. His words were the balm to my soul. He said things which deep down, I had wanted to hear, but feared its consequences. For the next two weeks, he was here for me. I felt protected from all the pain, fear and sorrow but never had I been more afraid of the outpouring of emotions, the mutual dependence on the other and the bourgeoning affection I had for him. \n\nAffection! This word had such a strong connotation. For him, I had felt greatly and deeply. The realization of my affection towards him came crystal clear and through the hardest way possible, which was through conversations with him. \n\nOh yes, I knew now. No, it could not be. How could it be? I pondered into the consciousness of my mental faculties. It was as though he was my psychiatrist too. He knew what to say to tug at my heartstrings. He was so shrewd. He was just so unpredictable. I existed within the realms of a bigoted self. It clenched at my heart like pincers; I felt an instant pain in my chest. I was bleeding inwardly. My airflow felt restricted. That was it- the cost of being wholly honest with oneself. The sad fact was that I was never truly at home with myself; past or present. \n\nThe great revelation was that I, despite all my best intentions to protect and nurture myself; I, despite all the universal rules and standard notebooks; I, despite all these safeguards, was never really safe from the enemy. And pray, the enemy lurked not around me. It was not the unknown; not the unseen. It was the wolf cloaked in sheep's skin. It was me! I was my own enemy. I failed to safeguard myself from my ugly side. It was vulnerable; it was in pain and it cried out for help, but I never attended to it. Until Mr. Boardmann appeared into my life. Until this man brought me out from a half-lived life. Until this man opened doors I never knew existed; until he made me try to come to terms with myself. \n\nI had felt a distinct hatred for myself. I condemned myself, but the reasons behind it were unknown. I did not know why I felt that way about myself. I knew that whatever happened in the past was not my fault. I could not understand this distorted image I had of myself. It beats me as to why I was only blatantly aware of my self-hatred now. It came to me rapidly in gushing waves. It was only at this very moment I realised that I could not wholly love myself for who I was. ",
        "Love, what a word! I did not have self-love. If I did, it paled so much in comparison of what could constitute that love. I merely tolerated myself into submitting to life. Yet I had managed to lead an existence which was pleasing and calm; an existence which asked nothing of me, and I had nothing to give to it in return. Was it also something of an accomplishment? I had a life at least. I was no longer living in the slums. I was now in a prosperous continent with detached people who asked nothing of me except a hello, small talk and a goodbye. It was so unlike South East Asia where society was boisterous and nosy. People meddled into the affairs of their neighbours in the name of friendliness. On this side of the world, respecting your neighbour's privacy was praised upon and the pursuance of individual, narcissistic dreams encouraged. \n\nI was lost in the pandemonium of my thoughts. It was too much to bear; so much to take in. I felt faint even though I had just awakened to the day and had yet to rise from his bed. He was preventing me from doing so. \n\nSuddenly his hands were gripping mine with a ferocity of strength. From just being cold and silly, my hands were now wallowing in cold sweat again. \n\n\"Lila, you can count me in your life.\" He said. \n\nHis voice was quivering with complex emotions. He looked at me tenderly and affectionately. \n\n\"I am sorry, Mr. Boardmann. There is a lot on my mind right now.\" I said, all in one go.\n\nMy words were incoherent. Cold sweat appeared at the sides of my forehead. Despite it all, I could not explain more to him. My spirit was quite lost to its true nature. It was still groping in the dark, trying to find its way out. \n\n\"I'll wait for you, however long it takes.\" He said. \n\nWorry lines formed on his forehead. Latching on that last grip of rationality, I sobered up. I felt touched at his concern, and I felt that I was being utterly selfish in taking up his attention like that. It was not the way I had known. \n\n\"Breathe in and out. Know that I would not let anything bad happen to you.\" He said tenderly, while wiping the sweat away from the sides of my forehead. \n\nI listened to him, doing exactly what he told me. I breathed in and out slowly, until my breathing pace was regular again. \n\n\"It meant a lot to me that you stayed the night, and that you opened up to me. I want to understand you, Lila.\" He said, in a serious voice, but how it had quivered with emotion. \n\nAlmost as if he had called out to me, my gaze was on his again. He nodded at me, and brought his head closer to mine until our foreheads were touching each other. \n\n\"I have confided in you more than anyone else.\" I said, my voice in a whisper, for our lips were only inches apart. \n\n\"Lila, my...\" He said, whispering my name in nuances of intensity. He paused when he remembered that I abhorred being called his angel or his miracle. \n\n\"...little minx.\" He said instead. \n\nI smiled a little. This was preferable to being his angel or his miracle. \n\n\"I think, Mr. Boardmann, I must also insist that whatever transpired between us yesterday remains within these four walls.\" I said, in a soft voice. \n\nHe smiled at me kindly. \n\n\"Understood, Lila.\" He said, knowing only too well that it was what he had requested of me the first night we met.\n\n\"You have passed my confidentiality test too.\" I said.\n\nI gazed into the lushness of those grey eyes of his. They were intoxicatingly devilish, and I was lulled into the chasm which bridged both our complicated worlds. \n\n\"So fast, Lila? How can you be sure I have not done a background check on you and that I am not out to get you?\" He asked in a husky voice.\n\nThese were precisely the same gist of the questions which he had asked me the first night he had hired me; only that then it was directed at my perceived lack of trustworthiness. This time though the tables were turned. \n\nI was not sure if he knew how seductive his voice sounded, or if he intended his voice to sound like that. He was the one man whom I could not predict. One moment he could amplify calmness; the next minute he was all agitated and primed by instinct to react harshly. \n\nHis eyes clenched mine with intensity. I was not sure if he was speaking seriously or if he was making a parallel joke of sorts to see how I would react.\n\n\"Why would you be out to get me?\" I asked, quite baffled. \n\nSurely it was the other way round, if ever that happened. My clients were high society rollers and every little scandal could cost them their families and careers. No one bothered to know about my background. What could they blackmail me about if it came to it?\n\n\"Perhaps I found out that you are more than who you claim to be.\" He said. \n\nHis eyes struck my soul like a bolt of lightning. I shuddered; I released my hand from his grip. My restless hand dug into the velvet duvet beside me. I must have realised that I was acting erratically, so I stopped midway and tried to look calm and pleasant. \n\n\"Everyone, except fools, are more than they claim to be.\" I said, in a hushed voice. \n\nWe were speaking on abstract planes. I wondered how far he wanted to go into this philosophical talk. \n\n\"When there's a will, there's always a way to find out.\" He said. \n\nHis pupils glowed like the morning sun. He looked resolute in his determination to find out about God knows what. \n\n\"So tell me Lila, how do you know I'm not out to get you?\" He asked again. \n\nHis voice held the presence of the seductive lull again. It must have been the tone of his voice. It sent shivers to my spine. Our eyes locked. I was stunned by what crept beneath the lushness of his eyes. I could not pry my gaze away from his. \n\n\"I'm letting you off easy.\" I said. \n\nI was breathing in a heightened pace. I was not sure what was going on exactly and whether the conversation was done in jest or whether the seriousness was all exaggerated in my head. My voice was low and my eyes felt like they were betraying me. I was showing him this side of me which longed for him. \n\n\"Why are you letting me off easy, Lila?\" He asked, in that same huskiness of a voice. \n\nHis eyes swept through mine as he awaited my response. They gently roused me to some fervour I could not quite get a grasp of. This was unchartered territory to me. I was like a child taking my first steps into the world. \n\n\"You are just too stubborn for me to put up an argument against.\" I said, blatantly honest.\n\nMy voice sounded airy and kind of throaty too. It was my husky voice; the lilts of sexiness which I did not know if I liked or wanted to portray. As I looked into his deep-set eyes, I felt butterflies in my stomach. His eyes were the undoing of me. He smiled boyishly when he heard my response. \n\n\"So you concede to me?\" He asked, drawling out his words now.\n\nMy lips parted; presumably I had wanted to say something but I was so torn between rational answers and irrational ones. I was also torn between humouring him and being my own honest person. \n\n\"Don't move. Wait till I come back.\" He said. \n\nBefore I could say anything comprehensible, he rose from the side of the bed and walked out of the room. I heard the sound of something being dragged on the marble floor. I saw him head back to the room with a chair from the dining room. He placed it right in front of me and sat down. \n\n\"Now, that's better. I like to be able to look at you in the face all the time when I talk to you, instead of turning sideways every now and then.\" He said. \n\nI realised that he was smartly dressed while I was dishevelled in his bed and clad in his oversized pyjamas. What a sight I must have been. \n\nHe dangled his hands lazily on the armrest of the chair. He crossed his legs, and he looked very relaxed. When he looked like that, I felt the direct opposite. I gazed down, my eyes fluttering to the silver buttons of his oversized pyjamas. No, I did not want to concede to him like this. \n\n\"I do not concede to you. I merely want to conserve my energy for other pursuits.\" I said, stubbornly. \n\n\"I had thought so. You are far too intellectual to be arguing about how much you trust me, is that right, Lila?\" He asked languidly. \n\nI felt heat rise to my cheeks. They must be blushing crimson red now. Why, he really provoked me so! I was not violent but I just needed to lash out at him.\n\nMy hands felt restless. They could not keep still. I felt an innate desire to grasp, pull or hit something. Finally my hands clinched at the silver buttons of his pyjamas, barely noticing the smoothness of its surface and the fact that it was icy to the touch, just like my moonstone. \n\nI could not look at him. I did not know why myself. All I knew was that I was breathing rapidly and my heart was bursting at its seams. \n\n\"By the rate you're going, you're going to yank out the buttons on my pyjamas.\" He said, with a chuckle. \n\nUpon hearing that, my hands dropped down to my sides. My whole body felt flushed and my cheeks must have been quite a sight to behold. I knew because he looked at my face instead of my eyes. Normally he liked to scrutinize my eyes intensely. Looking at my flushed face, it must have amused him a lot. I became quite irritated when he took my idiosyncrasies to suit his personal entertainment. \n\n\"No. I'm testing the quality of your pyjamas.\" I said nonchalantly, not willing to give in. \n\nWhatever he said, I would say the complete opposite because he aroused me to emotions no one else could. I could not quite understand why I also blushed. I was annoyed but I was also feeling self-conscious. \n\n\"Is that so, Lila?\" He asked, in a playful voice. \n\nHe looked too laidback for my liking. His eyes twinkled. He was pushing my limits of endurance, and I felt I had to say something intellectual. \n\n\"It is a truth universally acknowledged; that a man as annoying as you, must be in want of better pyjamas.\" I said, not willing to give in. \n\nI was trying hard to maintain my dignity, but I was not sure if I was doing it right, or if I sounded and looked every inch the fool every second I did or said something. The opening lines from Pride and Prejudice had to do; but I had distorted them because I could not think of anything else.\n\nHe looked very amused. I was fuming because I thought that I was defending myself, but apparently I was not, at least in his eyes. Perhaps I should not even try to outsmart unpredictable men like him. It was a waste of resources. \n\n\"Oh Lila, you say the strangest things but you're terribly sweet.\" He said. \n\nI felt even more flushed and irritated with him for calling me sweet. \n\n\"Do see if they can be yanked out then, Lila.\" He said, trying hard not to laugh at my expense. \n\nI sighed. He was wittier than I was, and much quicker in banter than I was today. It had been an unconventional night for me, and therefore I could excuse myself. \n\n\"I would, but on second thought, I wouldn't want to waste my time sewing it back.\" I said, feeling quite hot-headed.\n\nI was not yet done. He did not have any compassion for my nerves. I was so hot-headed that I could not think straight. \n\nHis eyes were merry; his pupils actually twinkled. His chest rose and fell. He was stifling his laughter. I must have been so funny to him. It made me feel more irritated. \n\n\"I can very well mend my own clothes. Don't you bother about them. If you can recall, I have a whole cabinet full of striped linen pyjamas. I wouldn't miss a pair.\" He said, in all huskiness of a voice. \n\nHe chuckled in between his words. His eyes gazed into mine cheekily, prompting a renaissance of my combative stance.\n\n\"Had I not known better, I would say that you have a linen fetish, Mr. Boardmann.\" I said. \n\nI had nothing better to say. My mind was not as sharp as I would like it to be today. Perhaps my mind should rest and let my wandering spirit take over now. \n\n\"Lila, what if I do?\" He asked.\n\nIn a split second, his cheeky amusement over my antiques was replaced by an extremely husky voice. He spoke in a seductively dangerous tone and there was an air of mystery in his voice. The paramour was back, and he was like a matador, provoking the bull. Oh God, I had called myself a bull. My inner thoughts needed a reboot. He had called me a bull yesterday and it stuck onto me like a sore thumb. I could not pull that description out of myself. Maybe I should not anyway, because I was and embodied the Taurus- in my thoughts I was headstrong and stubborn; but outwardly I was compliant, except to Mr. Boardmann. Yet he was equally headstrong and stubborn. It was always going to be a battle of wits with him. \n\n\"How would I know anyway?\" I said, feeling both irked but roused to some fervour at his words. \n\n\"And do you want to know, Lila?\" He asked.\n\nHis voice brimmed with a passionate fervour, causing me to feel lost in a sea of emotions. My irritation with him subsided just as quickly. It was replaced by something else. I think that it was my longing for him because I felt every fibre in my body vibrate to the subtle nuances of his voice. \n\n\"No. Why should I?\" I said, looking at him with confusion but also with a surrender of my senses. \n\n\"Are you a call girl who gives in to your client's wildest fantasies- these so-called fetishes?\" He asked.\n\nHis arms were still dangling on the armrest of the chair and he looked very dangerous just sitting there and observing me. \n\n\"It depends on what kind of fetish.\" I said.\n\nIt was so strange to be having a conversation like this. Was he implying that he wished me to know that he had a fetish for all things linen and that it featured a lot in his wildest fantasies? \n\n\"The one you mentioned earlier- the linen fetish.\" He answered. \n\nThere was a great intensity in his voice. His eyes harboured a desire which sent my heart beating wildly. \n\n\"I cannot answer that because I do not know what you can do with linen.\" I said, giving up on trying to impress him. \n\nI had no idea what you could do with linen. This was simply true. I was not very adventurous when it came to sex. I declined all special requests except for the milder ones which I felt brought me no unnecessary pain or intense role-playing. \n\n\"Fair enough, Lila.\" He said. \n\nNow he smiled warmly at me. Because he smiled warmly at me, I too mirrored his emotion and returned his smile. \n\nSilence fell upon us. We were both lost in our own thoughts. I was reprimanding myself for bringing up the linen fetish. I had not meant it sexually, or had I? I had spoken without so much as giving it a thought. If you looked at the dictionary, the word fetish had numerous meanings to it. It could just mean any object to which one was excessively or irrationally devoted to. Mr. Boardmann's cabinet was simply full of striped linen pyjamas and white linen handkerchiefs. \n\n\"I was just teasing you, Lila. I know what you meant.\" He said, after the moments of silence had come to pass. \n\nHis voice was back to its usual seriousness again, and the huskiness which he had employed retreated into the background. Yet I could catch a hint of that huskiness which he had tried to exercise control on. \n\n\"Okay.\" I said, but I blushed just the same. \n\n\"I know that you do trust me to a certain extent, Lila, and I appreciate that a lot.\" He said. \n\nHe looked at me with an appreciative gaze; his eyes were bright with the promise of hope. \n\n\"I do trust you, Mr. Boardmann, enough to tell you things that I have never told anyone else. I know it does not seem much but I have been alone with my messed up thoughts all this while. I understand that it's no excuse though.\" I said.\n\nI hesitated. I looked into his eyes for some recognition of an understanding. I felt the warmth of his gaze acknowledging me without the need for words.\n\nI tried to continue for his sake. I wanted him to know that I did appreciate him in my own way too. I started my sentence anew. \n\n\"It also means a lot to me that you have trusted me enough to confide about your attempted suicide and depression.\" I said. \n\nHis arms were no longer dangling lazily on the armrest of the chair. He bent forward and proceeded to grasp my hands in his. \n\nWe both smiled warmly at each other. I felt a fuzziness in my heart, and I felt much lighter. \n\n\"Do you know that I used to be called lizard girl at school because my hands were always so cold?\" I said. \n\nThis was indeed funny, really. My hands were always this cold. If they were not, they were kind of damp. \n\nHe shook his head and looked at me with a slight apprehension. He gently massaged my fingers; kneading them over and over again in constant pressure. \n\n\"I shall make them warm again.\" He said, almost in a whisper. \n\n\"Don't bother. Once you stop, my hands will freeze over again.\" I said. \n\nWe both smiled at each other. \n\n\"Then I shall not stop.\" He said, in a serious voice.\n\nHe took my fingers to his lips, and he kissed them with a rapture that made me want to weep. \n\n\"So delicate, slender fingers. My little minx; you're a fragile one.\" He said. \n\nHe had taken to calling me his little minx since I would not tolerate what he wanted to call me. \n\nI tried to change the subject matter. Since I had been the one who used his precious cologne given to him by Clara, I felt that I had to end this subject matter on a good note. \n\n\"Mr. Boardmann, I don't think that you have a need for cologne anyway.\" I said. \n\n\"I don't?\" He asked.\n\nHe arched his eyebrows a little, eyeing me with humour. \n\nI firmly shook my head.\n\n\"You possess a distinct scent.\" I said, remembering how he had smelt like.\n\nI could even catch a whiff of his scent now. I stopped short of letting him know that his one distinct scent was of the musky saturation which I so much loved. \n\n\"Lila, don't tell me that I smell bad.\" He said, half-laughing. \n\n\"Certainty not. Your own distinct scent smells much, much better than the woody cedar.\" I said, in all honesty because I really meant it, and I wanted him to take his mind off Clara. \n\nThere was no one else like him. No one else came close to harbouring this musky saturation. Of the fullness of the wind, oh, how I had longed for the wind to take me under its wing. And the dampness of the soil; symbolizing Mother Earth's fertility and her gift of abundance to her children. \n\nHe let out a hearty laugh which I found terribly pleasing and good to hear. \n\n\"You have flattered me without even trying to.\" He said, trying to keep his voice stable from all the laughter. \n\nHe looked at me with admiration. I could only look at him in astonishment because I was just speaking the plain truth. An afterthought though; if the truth had flattered him, it was an extra bonus. This realization made me grin endlessly. I was a great flatterer after all; that was useful in this profession. \n\nI could have melted there and then. He said the sweetest things when I least expected him to. Since he was now in a good mood, I thought that I would bring up the matter of the duvet because it did bother me. In fact, he must have known about it for he was beside me the whole night.\n\n\"The duvet...\" I said.\n\nI felt conscious because I was about to talk about a delicate subject matter. Therefore for some psychological degree of comfort, I flung the duvet over my shoulders so that it covered me wholly, except for my face. \n\n\"What about it, Lila?\" He asked.\n\n\"Maybe it can also go into the laundry.\" I said. \n\n\"Why?\" He asked. \n\nHe eyed me with curiosity, causing me to feel surprised because I knew that he had a very sharp sense of scent as well. It was proven and tested the third night we were together, when he gave me more than an adequate description of my scent when he was supposed to be concentrating on the scents in the atmosphere. \n\n\"When I have bad dreams, I wake up in cold sweat, but you already know that.\" I said softly. \n\nIt was painful to admit that I was a profuse sweater. It was far from the idealized graceful, feminine qualities. Because I was easily nervous, I was not averse to cold sweat, especially on my hands. During nights tormented by bad dreams, I would jolt up in bed, only to find my whole body drenched in cold sweat. Bad dreams had not occurred frequently now, but it did last night. I gathered that it was because I was not used to sleeping overnight by anyone's side, ever. ",
        "\"Lila, my only concern last night was that you managed some sleep.\" He said.\n\nI gazed up at him. I was at a loss of words. He was very kind towards me. \n\n\"Furthermore, Lila, you have a distinct scent about you too which I like; sweaty or otherwise.\" He said.\n\n\"But I am not easily offended, Mr. Boardmann. Sweatiness can never smell good.\" I said, in protest.\n\nHe smiled at me, affirming what I had said. Yet when he spoke, he reiterated what he had whispered to me a few nights ago at the balcony, but with an added dimension to it. \n\n\"A saltiness in your hair. A tinge of sweetness on your lips. The scent of dew combined with a sweet freshness. And now enriched with tender muskiness; essentially still the scent of you.\" He said, whispering into my ear. \n\nHe was very impulsive now. His cheeks brushed my dishevelled hair, and his lips lightly grazed my cheeks with erratic pressure. I breathed in sharply, trying to catch my breath. \n\nIn a quick motion, he flipped over the clingy duvet which covered my body; revealing me in his over-sized pyjamas. I inhaled sharply at his action. I felt extremely bared to him although I was fully and shapelessly dressed. He did not touch me, but his near presence was enough to make my heart beat faster. \n\nInstead he took the duvet in his hands and pressed it to his nose. He closed his eyes and I saw him breathe in the scent which the duvet retained. I watched incredulously. How could someone ever do that to overdue laundry, or at least it seemed so from my perspective. \n\nHis voice was low and slightly raspy. His hands were now on the duvet; and he smoothened it out. \n\nI was dumb-founded. This man; did he not just found paradise in a sweaty duvet?\n\n\"Mr. Boardmann...\" I said.\n\nHis eyes fluttered open and he looked at me passionately with his deep-set eyes. I felt a sudden rapture streak through me. \n\n\"Have I convinced you that you smell good?\" He asked. \n\nThis slightly raspy voice of his was a stimulant to my heart. I felt my heart beating even faster and out of me. I could only nod. \n\n\"I'm glad that my actions speak louder than words.\" He said, in a low, guttural voice. \n\nHe spoke again when I did not. \n\n\"Lila, you need no cologne as well. You can be as sweaty as you want to around me.\" He said, with a playful spark in his eyes. \n\nHis boyish mischievousness was back, and he looked really young. How could I have thought him old before? \n\n\"I think that it's hardly a flattering thing to say, Mr. Boardmann.\" I said, but a smile had instantly curved up my lips. \n\nHe winked at me. One of his eyebrows twitched up. I marvelled at how he could do that so effortlessly. I could not wink like that; I was sure of that. I was always quite symmetrical in my facial expressions. Ah, and that brought me back to kisses being symmetrical! \n\n\"Lila, I knew what I was getting into. When I held your hands for the first time, they were not only cold, but they were sweaty.\" He said.\n\nMy face flushed in embarrassment. I wanted to hide myself. For want of a better hideout, I pulled the duvet over my body again, so that it covered my apparently guilty hands. \n\n\"I was very nervous the first time we met. I should have worn gloves.\" I said, softly, more as an acknowledgment and reminder to myself for the next time. \n\nAlthough I had reminded myself to wear gloves, it kept on slipping my mind. \n\n\"Lila, don't. I love all your quirks. They make you very endearing to me.\" He said.\n\nUpon hearing his words, I uncovered my hands from the duvet. He immediately took my hands in his. This time I felt that classic raw strength of his throbbing through my veins. My heart beat only for him. \n\n\"Do you know, Mr. Boardmann, that you always grasp my hands with extreme force when we shake hands?\" I asked, somewhat breathlessly. \n\n\"Like now?\" He asked.\n\nI nodded. He gazed at me with a sly look about him, after which he let go of my hands. \n\nAs I did not expect this gesture, and was rather used to the feel of our clasped hands, I felt a little strange. I told myself that it was not because I liked the pressure of his hands in mine or vice-versa; it was rather because I had been primed to expect a hard handshake with brute force. In the previous nights he had always used that iron grip to grasp my hands. \n\nHe waited for my reaction. I was unsure what he was anticipating really, so I did nothing but just look at him stupidly. \n\nLike a bolt of lightning, suddenly he grasped my hands again out of nowhere; albeit with a slightly lighter pressure. What remained constant was the heat in his hands and how it had affected my cold hands. \n\n\"How about this? Is this more up to your standard?\" He asked.\n\nHis voice was getting a little huskier again. I knew that hint of huskiness was not completely obliterated into the background. I smiled knowingly. I did not however give him an answer.\n\nHe let go of my hands again for a few seconds. I watched as he made another calculated grasp at them again. \n\n\"Or this?\" He asked, while trying an absolutely feathery touch on my hands that it was almost ticklish. \n\nI shook my head, trying to stifle myself from giggling.\n\n\"Mr. Boardmann, you should know better that it hardly qualifies as a handshake.\" I said. \n\n\"Tell me then, Lila, how a handshake should be like, in your esteemed opinion. Or perhaps you have it all figured out already? It must be the precise calculation of force based on pressure, no?\" He asked, in an amused voice. \n\nHonestly I had not gone that far, but I could, now that he had mentioned it. Something to think about when I was all alone again. \n\n\"Those eyes of yours; somewhat vibrant and inquisitively alluring; tells me you are thinking about quantifying force for your ideal handshake.\" He said, looking very amazed now but still equally amused at my antiques. \n\nI grinned and I could not help but smile from ear to ear. Let me see if I could rack my head out about concepts relating to Physics. I had never warmed up to the Sciences; I had merely memorized formulas to sound smart in moments like these. It came in handy now. \n\n\"Technically, force is indeed pressure multiplied by surface area, and is measured in Pascal.\" I began, smiling, but then I could not keep it up anymore, and I started laughing. \n\nSooner or later, he would gather that I knew nothing about what I was talking about. I was not conscious of my laughter, until he mentioned it. \n\n\"It is so nice to see you laugh, Lila. Your laughter brightens up my day.\" He said, half-seriously and half in jest.\n\nHis eyes cast a shadow over mine; absorbing my joy as his own too. He laughed with me. I have never ever felt so tickled over a conversation which was quite senseless, except for its scientific accuracy.\n\n\"So, of the three different ways I had grasped your hand, which force is the most agreeable to you?\" He asked, in between laughter. \n\n\"Hmm, I think I'll just stick to the original one.\" I said, cheekily. \n\n\"You won't complain anymore if I grasp your hand like this?\" He asked, grasping my hand with the force and pressure of the iron grip synonymous to him. \n\n\"I can't say for certain. It depends on whether I wake up on the right side of bed.\" I said, feeling a little naughty. \n\n\"Little minx, you're quite the tease, you know.\" He said.\n\nI blushed. I wondered how I had managed to say everything which I had said, without thinking in advance of its propriety. In times like these, when I was not trying to outwit him, our conversation just flowed naturally, and it needed no thinking. I was a free-flowing river; that was how I felt. \n\nHe saw me blush and he smiled slyly, keeping that to himself. \n\nBelatedly I realised that I was still in his bed in the most inelegant fashion. I cast my eyes downwards; I felt shy. \n\nIt was no secret that he read my body language. Then, he bent his head a little so that he could see my face fully. \n\nSensing my reticence, he said, \"Well then, I'll leave you to it. I'll see you for breakfast at the dining table.\"\n\nHis eyes still held that warm gaze. \n\n\"Speaking of which, Lila, you look good in my pyjamas.\" He said.\n\nHe looked like he really meant it. I smiled shyly as I looked down at the striped linen pyjamas which I was wearing. They were comfortable. I had to give them that much credit. Perhaps I could even consider getting a matching pair for myself. \n\nHe was nothing but kind and pleasant to me. His eyes however, pierced mine wholly without wanting to withdraw. He was trying to gauge my emotions. If he could read me, I guess all he could see was that my eyes were shrouded in a languid inertness. Throughout our whole conversation where I was sitting still in his bed, I had experienced a multitude of emotions; from regret to joy. Now I was feeling just a kind of blissful emptiness. \n\nAfter he had satisfied himself piercing into my eyes, he proceeded towards the door. I was not sure how long he studied me but it must have been for quite long as my legs had started to grow restless under the duvet. Before he closed the heavy wooden door behind him, he smiled at me gently, not before saying, \"I'll give you your privacy. Take your time.\" \n\nAnd with that I was all alone in the room. \n\nThe low thud of the closing door jolted me into acute consciousness. I had awakened to myself. I sprang out of bed then. I saw that my clothes were where he said they were- on the cabinet and nicely washed as well as ironed. I washed my face and soaked myself under extreme cold water in the shower. I had refused to turn on the heater. I wanted to really be on the alert today. I figured that I was slowly drowning in a sea of affection towards him. Shivering, I quickly dressed myself into the nylon blouse and the pair of faded blue jeans.\n\nI saw him in the kitchenette. He was tinkering about with the in-built cabinets on the wall. He was looking for something. \n\n\"Mr. Boardmann.\" I said, calling out to him. \n\n\"Lila, do sit. I want to make you breakfast.\" He said. \n\nI was not really sure what he was looking for but I knew he was looking for that something to make me breakfast with. He looked like he did not know where everything was. It was hardly surprising because the kitchenette was sparkly clean and the stove was as bright as it was shiny. I gathered that he had never used it before. \n\n\"What do you normally have for yourself?\" I asked. \n\nI wondered if he ever had breakfast at his penthouse, or whether it was a meal he skipped.\n\n\"Buttered toast with black coffee.\" He said, in a no-nonsense tone of a voice. \n\n\"I'll have what you have.\" I said, not wanting him to go out of the way for me. \n\n\"I want to make an omelette for the both of us. I just need to look for the pan. Please sit.\" He said again. \n\nIt would have been easier for me had I just waited. Yet I had to defy him. I proceeded to the other end of the cabinets and rummaged about, trying to look for any respectable pan that would fry an egg. At least when it came to the kitchen, I felt confident that I had authority over this traditional feminine stronghold, or so as such had been emphasized from my school days. Where I grew up in South East Asia, the woman was considered the head of the kitchen. The way to a man's heart was through his stomach. \n\nHis kitchenette was impressively equipped. It came as a pleasant surprise to me. He could actually cook up a feast here. There were numerous pots and pans in the cabinets and hidden under one huge pot, I found a frying pan. I took it out from the cabinet. I handed it over to him, quite sure that his masculine stubbornness would see that he got to make that omelette.\n\nHe smiled appreciatively, and headed to the stove. \n\n\"Can I help with anything?\" I asked. \n\nHe looked at me in appreciation but he shook his head.\n\n\"I got it. Let me impress you with my cooking skills.\" He said. \n\nHis eyes were sparkling and he looked boyish. He was trying to prove something to me. \n\nI smiled. I was not sure what feeling it was. It was the feeling you felt when another was willing to sweat it out a bit to impress you. The closest I came to my standard categorization was being flattered but it was not only that; for I was also touched by his gesture. \n\nI sat down at the dining table and I watched him as he cracked and beat up a few eggs. He later proceeded to cut some cherry tomatoes. Finally I watched as everything went into the pan. He sprinkled herbs and spices into the batter. Moments later, a savoury aroma filled the penthouse suite. The scent was enticing. \n\n\"You can cook.\" I said, in awe.\n\nBriefly, he turned towards me. \n\n\"Of course I can. Do I look like I can't?\" He asked, with a look that challenged me.\n\nI merely smiled. Well, I was bias, and I did assume that he could not cook well. It was not because I was gender discriminating, but merely because he was the ever busy CEO. \n\nHe turned back to the pan to concentrate on perfecting his frying technique. I could not help but smile more. Impress me all you want, I thought. It was like watching a cooking show live from the studio, because the props were squeaky clean and had never been used. What more, the chef was an extremely impressive sight to behold. Hush though, I would not let him know. He would only tease me more. In fact he had teased me about fancying his hair and hands already. I could not risk being more of the ridicule than I already was. \n\nHow different it was compared to the first few nights! I could say for absolute certainty now that not a trace of that ghastly and sickly skin was visible. He was a totally changed man, and how quickly could one change. His skin was still pale though, but I believed that very shortly, this too would change. \n\nI watched as he flipped the omelette with a toss worthy of Olympian height. The fried egg went up high, almost hitting the ceiling, before landing back in the pan again all in one piece. I was very sure he did it on purpose to show off. There was no need to flip an omelette that high up. In fact I never flipped my omelettes at all, being ever so cautious when it came to exercising that discretion. Where was the utility of purpose in it? To be truly effective, one should only apply minimum effort for maximum yields- that was another of my top ten standard rules. I was back to ruminating philosophy and standard rules of conduct. \n\nAfter that, he faced me and with a boyish grin, said, \"The magnificent omelette is ready.\" \n\nInstead I was entirely captivated by the zealousness in his boyish countenance, and I barely paid any attention to the magnificent omelette, as he had termed it. However he could not tell where my bedazzled expression lay, and for that matter, it turned out just right for me. I would not want to fawn over him. I was no giddy school girl. \n\nHe smiled at me with confidence and pride. I had not even looked at his omelette, but no matter. It was the artisan in him who inspired me with his zealousness, not the artwork itself. \n\nI rose from my seat and proceeded to set the table for breakfast. I did not know where his utensils were. For my room service dinner yesterday, I did not have to lift a finger in the kitchenette. I ransacked the drawers now. I got the utensils out while he proceeded to brew fresh coffee for the both of us. \n\nI could now marvel at his magnificent omelette. It was golden; the colour of the sun, and I had likened Mr. Boardmann to the sun. Topped with red tomatoes, the contrast was striking. He awaited my reaction with bated breath. \n\n\"Mmm...\" I started with my first bite. \n\nI could see his gaze on me never wavered. The longer he waited, the more restless he became. I did not have the heart to tease him more. \n\n\"It's scrumptious. What I like best is the creaminess of the egg. I did not know that an omelette can be this creamy.\" I said. \n\nHe smiled a very broad smile. He reeked of aromatic oil but it was a nice scent too. He was now my oily Mr. Boardmann. \n\nThus began breakfast. It was the first time someone ever took the effort to make me a meal. However simple it was, it was deeply appreciated. We continued our meal with all the time in the world. We spoke about the weather and the types of moonstone jewellery which he might be interested in. He thought about getting a moonstone ring so it can be with him all the time. Just like my necklace, he said. \n\nIn between the savoury bites, I acknowledged in recognition of the fact that I had missed out a lot on the joys which came from dependence and sharing. It was easy to get used to it, but it was also a difficult habit to break. \n\n\"Thank you for the lovely meal, Mr. Boardmann.\" I said, looking into his eyes. \n\n\"And yet you are sighing, Lila.\" He said, wavy of the slightest change in my expression. \n\n\"No one has ever cooked for me before.\" I said, as a matter of fact. \n\nI was not feeling happy or sad. I was feeling quite calm and aware that this was a new experience for me; which was to let someone impress and pamper me this way. \n\nHe gazed at me thoughtfully, but he was at a loss for words. I gathered that there was not much to say in response which would not trigger my bleak past. \n\nHe cut what remained of his omelette into half and placed a piece on my plate. I looked at him; wondering if he had lost his mind. Or perhaps I did eat like a glutton and he felt compelled to feed a starving waif. \n\n\"I want to share my omelette with you and much more if you'll allow me to.\" He said, smiling at me. \n\nHe held my gaze in all due tenderness, and I was starkly reminded of last night. His caresses and devotion to me had compromised my feelings of detachment. Today I felt very attached to him to the extent I dreaded to think of the day progressing. It only meant that it was due to end sooner or later. I never had this feeling before. In all my previous engagements, I had wanted the relationship to end as soon as it had started, so that I could go home and have my long soak in the bath. \n\n\"Thank you, Mr. Boardmann. You say that you're not a kind man, but I think you do not realise that you can be kind.\" I said, looking at him, and then at the piece of omelette which was now on my plate. \n\n\"Eat up, Lila.\" He said, with a smile which showed me that he understood what I was trying to convey, even if he did not believe it himself. \n\nI did finish up that last piece of omelette like a starved waif then. I was hungry no more, but I was stirred by his gesture and words. \n\nAfter breakfast, we strolled down the boulevard. He said that he was averse to crowds but the jewellery store was smack right in the middle of this area. We were greeted cordially by a pleasant sales personnel called Thomas. I showed him my moonstone and he brought out a few similar stones which matched mine. \n\nI asked Mr. Boardmann to place his palms on top of each stone and see if he could feel any vibrations or sensations emanating from the stone. He should pick the stone with the vibe which appealed to him the most. At least that was what the monks in the temple told me. Every stone had its distinctive vibrational quality. \n\nEventually he chose a ring with a deep coloured moonstone. He said he felt a certain coolness when he placed his palms above the stone. He slipped it onto his ring finger.\n\n\"How does it look?\" He asked me.\n\nI looked at him; then at the moonstone ring on his finger. The stone was intricately cut. Light was reflected from different angles; more so than mine. I marvelled at the depth of this periwinkle blue stone. It was shades darker than mine. It seemed to bring the viewer deeper and deeper into its vortex, just like the wearer himself. I thought that it suited him perfectly. \n\n\"I think it's a perfect cut, Mr. Boardmann.\" I said, looking up at him again. \n\nHe beamed and looked delighted at my reaction. Thomas had left us for a moment. \n\n\"Only that I think you should either wear it on your index finger or on your fifth finger.\" I said. ",
        "\"Hmm?\" He asked, not comprehending my main point at all. \n\n\"The ring finger is for love. It means that your ring is either an engagement ring or a wedding ring.\" I said. \n\n\"Ah, is that so?\" He asked, looking amused. \n\n\"Of course. You can google it up for confirmation.\" I said, wondering if he did not believe me. \n\nHe smiled sweetly at me. \n\n\"Just maybe I want to give the impression that I am no longer available.\" He said, looking straight into my eyes with a look of trickery about him. \n\n\"Oh, I see. You want to concentrate on work for the moment.\" I said, figuring it out for myself.\n\n\"Among other reasons, yes.\" He said. \n\nHe eyed me thoroughly, and smiled at me with an enigmatic gaze. Suddenly he was being all secretive on me. I felt a little left-out, if I were being honest with myself. \n\n\"Now you can make your own wishes under the moonlight.\" I said, figuring out that it was really none of my business why he wanted to do whatever he wanted to do, for that matter. \n\n\"Lila, play along, will you?\" He asked suddenly, just as Thomas was making his way back to us. \n\nBefore I could reply, Thomas was right in front of us at the display counter. He informed us that the chosen ring came in a set; one for him; and the other for her. He asked me whether I would like to try it on. He opened the jewellery case to reveal a multi-faceted stone which emitted a gleaming shade of periwinkle blue. I was astounded by its uniqueness; the reflection of light made it sparkle subtly, and that was what I liked best about it. Not too sparkly, just the perfect iridescent sparkle. \n\n\"My fianc\u00e9e is speechless.\" Mr. Boardmann said, playing the actor.\n\nI took it as my cue to respond. I proffered my left hand forward, and Thomas lifted the ring from the inserted slit in the jewellery case. \n\n\"Let me do the honours.\" Mr. Boardmann said.\n\nIn an instant, he had the ring in his hands. He turned to my side and dazzled me with a brilliance in his eyes. Ever so gently, he took my palms in his. Then he slipped the said ring onto my finger. I shall always remember this moment for it seemed so surreal. It was as though time stopped. In this tender moment, he deserved to be my Mr. Boardmann, instead of just the formal Mr. Boardmann.\n\nHis skin grazed mine with such tenderness that in my attempts to stay still, I shivered to his touch. The ring snug round perfectly on my finger. For a moment, I was stunned by just the sight of the ring on my finger. The moonstone gleamed despite the glaring lighting of the store. The stone was intricately cut the same way as Mr. Boardmann's, and I thought that it was a perfect pair.\n\nMy eyelashes fluttered upwards towards him, and I saw him gazing at me with an unfathomable emotion. We both did not speak. Words were inadequate to describe this moment. I felt saturated with emotion. My heart was filled with blurred emotions. Distinctions no longer mattered. The world was no longer in black or white. Everything was vivid and bursting with intensity. I felt too the scent of the musky saturation in its entirety. Words paled in comparison to how I felt.\n\nThe silence was finally broken when Thomas spoke. \n\n\"It looks like you both are getting this moonstone ring set.\" He said, grinning at the both of us broadly. \n\n\"Yes.\" Mr. Boardmann said, without looking at him. \n\nHe kept his gaze on me, and I felt treasured. After he had paid for the rings, we walked out to the boulevard into the sea of people again. \n\nA soft inaudible protest escaped my lips. I had no intention of getting a ring today.\n\n\"We were supposed to get a ring for you, not me.\" I said, stating the obvious. \n\n\"I like my ring, and we can't buy it separately, so the set will have to do.\" Mr. Boardmann said. \n\n\"Are we done with our play acting? I asked. \n\n\"I suppose so.\" He answered, rather sheepishly. \n\nGently so as not to damage the delicate ring, I slipped the ring off my fingers and placed it in his hands. \n\n\"It's really beautiful but I have no use for it.\" I said. \n\n\"People wear plenty of jewellery that they have no use for.\" He replied, his voice pleasant but forceful.\n\nHe was trying to stress that I keep the ring. I could read through him. Not the whole book, but parts of it with pages missing. \n\n\"You said yourself that I have no love for jewellery.\" I said, smiling slightly. \n\nLayers of the saturated emotions in my heart were being peeled away. I had room for rational, solid emotions now.\n\nHe gazed at me rather forlornly at first, and then it was as if he was hit by a sudden cognizance which gripped him. \n\n\"Of course. You're right. I'll happily take it back and see what I can do with it.\" He said. \n\nHe pried open the jewellery case and inserted the ring back into its narrow slit. He studied it for a moment before shutting the box. \n\n\"This ring deserves to go to the woman you love.\" I said.\n\nI stopped short of saying Clara, because it was a sensitive subject for him. I gauged his feelings of love, but I was not too sure. \n\nHe nodded at me. \n\n\"Yes, when she comes around, I will give it to her.\" He said, with a soft smile on his face. \n\nI smiled too, seeing that he did not insist that I wear the ring. It was too expensive, and he gave no thought about spending a fortune for the rings. I guess it was also a sign of his confidence that his upcoming trip to South East Asia would bring in profits. \n\nWhen we were walking along the boulevard side by side, he said that he was still in awe with the miracle which had happened to him. At the same time, he wondered whether the moon, in her power, had planted an idea into someone to help him secretly. He had come to the theory that someone must have helped him, but he could not comprehend how the proposal was sent from his e-mail. No one had access to his e-mail. No one knew his password, not even his good, old personal assistant.\n\n\"I think that whoever helped you wanted to stay anonymous. You should not go probing.\" I said. \n\n\"It's just that I wanted to thank this person so much that it pains me not knowing who he or she is.\" He said. \n\n\"Maybe that person does not want to be thanked. He or she has reasons you do not know of.\" I said.\n\n\"I suspected Mrs. Potts, my personal assistant. She roughly knew my idea. I had interrogated her but she vehemently denied it. She was flattered that I thought it was her. Then I thought it was Mr. Collins, a shareholder who always had a sympathetic ear for me. He denied it as well but said that he would have assisted had I sought for his help in the first place.\" He said. \n\n\"Whatever it is, the wish you made came true. You have your moonstone now, and rest assured, you are well taken care of. Why go on a witch hunt?\" I asked.\n\n\"I'm not going on a witch hunt. It's my company's standard protocol to investigate when someone has breached the CEO's secure e-mail, well-intentioned or otherwise.\" He said.\n\n\"A witch hunt is when you go after well-intentioned people.\" I retorted. \n\n\"Because I feel so indebted to this person. Because of what he or she did, I was not subjected to that vote of no confidence. I was given a second chance. I want to make a wish tonight, under the moon, that the person who has helped me be blessed always. And I pay homage to the moon for bringing this person to me.\" He said, touching the moonstone on his ring.\n\nI did not reply. I looked away from him and towards the sea. I started walking down the boulevard, so did he. We walked quite a bit, in each other's company, but not saying much. As we strolled further east, the crowd gradually lessened. There was a balmy breeze. I scented its freshness and realised how nice this fragrance was combined with the musky saturation of this man beside me. \n\nThe sea glittered. They were like emeralds on silk. I watched as the waves rose and fell, ebbing with the flow of the tide. I watched the slight fluctuation of height between cascades. They seemed to project serenity. \n\n\"Everything is perfect.\" He said, also looking at the sea. \n\nThen turning towards me, he asked, \"May I hold your hand while we walk?\"\n\n\"My hand can be sweaty.\" I said.\n\n\"Come on. You know me better.\" He said, in an impatient voice. \n\nIt prompted me to give him my hand. Our fingers clasped and I felt the strength of his grasp on my hands. I can accept this force for now. \n\nWe found a common topic of interest to speak about- South East Asian cuisine; this being a neutral topic which we were both comfortable to talk about until the cows came home. I gave him a whole long history of the archipelago and he seemed genuinely interested in what I had to say. He told me that he had always loved the spices used in our cooking. The only setback was that his tolerance for spicy food was practically nil. \n\nIt was soon lunch time and he suggested trendy caf\u00e9 along our walk down the boulevard which was quite near the library. We had a nice spot by the window sill, facing the sea. We took our seats and we had just ordered our food when I was approached by Gerald, a face whom I had not seen for a very long time. This was the time in my life when everything was still on track, presumably. I could not say for certain because look at what I had spiralled into now. I guess that there had always been unresolved feelings in me that were not given the proper attention, not through neglect or apathy, but simply because I lacked the expertise to deal with them. \n\n\"Oh my, is it you? I have not seen you in ages!\" He exclaimed. \n\nI was taken aback. It must have shown on my face.\n\n\"Do you not remember me? Up till three years ago, we worked together.\" He said. \n\n\"How can I forget you, Gerald? You were my mentor in the profession. How have you been?\" I asked. \n\n\"I'm getting married next month! It's to Sara, remember her?\" He asked.\n\nI did, and I congratulated him. He was onto wife number four now. He spoke enthusiastically about their wedding plans, and invited the both of us to his wedding. \n\n\"Do come; the both of you.\" He said.\n\nHis eyes twinkled and he nudged me. \n\n\"You have not introduced me to the dashing man beside you.\" Gerald said.\n\n\"Oh.\" I said, completely forgetting about Mr. Boardmann.\n\nBoth men seemed to belong to different time zones. They could not be put together. I was the odd one existing between past and present. \n\n\"Gerald, this is Mr...this is Matthias.\" I said.\n\nIt seemed strange to refer to Mr. Boardmann by his given name. Both men exchanged pleasantries. \n\n\"Actually we are both not...\" I started. \n\n\"We would love to come to your wedding.\" Mr. Boardmann said, cutting me short. \n\nI blinked multiple times. \n\n\"How did the both of you meet?\" Gerald asked.\n\nHe looked at me, and then at Mr. Boardmann. \n\n\"We met while we were at a restaurant along the boulevard. We were both dining alone late one night. I could not take my eyes off her. We struck up a conversation. It took off from there.\" Mr. Boardmann said. \n\nIt was not far from the truth, and I had to give him credit for that. It was also accurate to say that he did not take his eyes off me. The best lies were the ones which were closest to the truth. \n\n\"Oh my, dining alone? You're still working late hours? Mind you, she is a workaholic. You would not even catch her having long, casual lunches. She was always with clients. That's all changed now, thanks to you.\" Gerald said, winking at Mr. Boardmann. \n\nMr. Boardmann smiled. \n\n\"I'm glad that I had pulled her away from work.\" He said.\n\nGerald scribbled down details of his wedding reception which was due to take place in four weeks. Mr. Boardmann kept the scribbled paper in his pocket. \n\nAfter Gerald left, I wondered how much Mr. Boardmann had deduced from the conversation. He was quite the perceptive one. \n\n\"Gerald and I used to work together.\" I said.\n\nI did not say more, because I did not want details of my colourful past to make its way into the present. Mr. Boardmann could and he certainly would fill in the blanks himself to come to a conclusion about who Gerald was, I was sure. I hoped that he came to a wrong conclusion. \n\n\"I see. Well, we have a wedding to attend in four weeks.\" He said. \n\n\"We could cancel. Gerald wouldn't notice. After all, he invites the whole suburb due to his love for the spotlight. He takes every opportunity to network.\" I said.\n\n\"That's just what I need, Lila. Business connections.\" Mr Boardmann said.\n\n\"Oh.\" I said, wondering if he could go alone while I stayed in. \n\nLunch was tasty. After being the gentleman and settling the bill, we walked further down the boulevard to the library. \n\nI introduced the two people dear in my life; although they did not know that they were dear to me. \n\n\"Mr. Boardmann, this is Cherie. Cherie, this is my client, Mr. Boardmann.\" I said. \n\nWith Cherie, I could be fully honest. I referred to Mr. Boardmann the way I had called him. \n\n\"Mr. Boardmann, pleased to meet you. Have we met?\" Cherie asked.\n\n\"I don't think so.\" He replied.\n\nHe looked rather evasive and he sounded like he was annoyed. I gathered that he wished for anonymity. It had slipped my mind to ask him whether I could refer to him as my client. I just took it for granted; however with Gerald, I was keen not to let him know that I was Mr. Boardmann's call girl. \n\n\"I never forget a face, and you do look quite familiar.\" Cherie said, in a cheerful voice.\n\nCherie gave me a grateful smile, and I smiled back. I was showing Cherie part of my world, and she saw it for the first time. \n\n\"I have that familiar face.\" Mr. Boardmann said, looking slightly perturbed.\n\nI did not think he had that familiar face. \n\nAs Cherie eased away to prepare tea for the both of us, I trailed behind her, leaving Mr. Boardmann for a second. \n\n\"He is rather intense and grumpy.\" Cherie whispered to me, while putting a kettle to boil. \n\n\"Yes.\" I said, thinking of how fond I had grown towards this man.\n\n\"Cherie, don't talk about me playing at the piano gala concert. I don't want him to know.\" I said, whispering while I got the bergamot tea from the shelf. \n\nCherie nodded. After that, the three of us sat down together and had tea. Cherie spoke of how much I liked her brewed tea and from there branched off into her running the whole show, while I spoke about the library being the midway point between my house and his penthouse suite and the books which I loved to read. Mr. Boardmann listened attentively as we spoke animatedly, and he looked very comfortable despite saying very little himself except that he was pleased to have taken the day off work. After some time, we took our leave from Cherie. \n\nMr. Boardmann offered to walk me home the next five kilometres down the boulevard, and I accepted. We continued to hold hands and I felt languid and let down my guard. I felt as if he was protecting me by the very simple gesture of holding my hands. I reckoned that deep down, I shall always be that maiden who waited for her knight in shining armour to protect her. I did however cringe that these were anti-feminist thoughts and I should not represent myself as the helpless victim.\n\nUpon reaching my picket fence, he thanked me for the lovely day.\n\n\"I've enjoyed myself.\" He said. \n\nHe smiled at me warmly and was about to take his leave. \n\n\"I think that it's only proper that I invite you in.\" I said. \n\nThere was the initial look of surprise in his eyes but it was quickly replaced with an eager acceptance of my offer. \n\n\"I could do with another cup of tea.\" He said. \n\nHis smile never wavered. I felt very much at ease with him. I was in a languid state of mind and I felt carefree. \n\nHe sat down on the sofa in the empty living room and looked around him. His attention was glued to my half-painted lilac swirls in the corner of the wall. \n\n\"It's still a work in progress. I'm waiting for the painters to get back to me.\" I said. \n\n\"Your paint work is very professionally done. I cannot find fault with it.\" He said.\n\n\"Now you're a wall connoisseur.\" I said in jest, smiling at him. \n\n\"I am a man of hidden talents, and so are you, Lila.\" He said in reply. \n\nHe smiled at me enigmatically. It was as though he knew more than he wanted to tell me. \n\nAfter I brewed him some tea from the kitchen, Mr. Boardmann asked about the new housing area. \n\n\"It seems like a very quiet neighbourhood.\" He said. \n\n\"I have no neighbours on my right or left. The houses have not been taken up, but I do have neighbours two doors away.\" I said. \n\nMr. Boardmann nodded. I smiled then. \n\n\"Just the way you like it. Quiet and away from civilization, almost.\" I said, thinking about his move from the city to the suburbs. \n\nHe had smiled in agreement while complimenting me on the little furnishings I had. In turn, I was really proud to have shown him my place of abode. \n\nThe hours passed with the both of us just enjoying each other's company. Simple, fleeting conversation but it was deeply felt. He made me laugh with his unpredictable statements. Sometimes he had not meant to be funny, but he said it with such seriousness that I was amused. I had the same effect on him. We were both affecting each other the same way. \n\nBefore long, it was evening and almost dinner time. I offered to cook some Thai food for dinner, as he had made me breakfast. I made my way to the kitchen and started chopping some onions and mincing garlic. He watched as I sprang into action. He insisted on assisting me, and I did not protest.\n\n\"What are we going to cook?\" He asked me.\n\n\"It's a rice noodle soup dish with chicken. I will make sure that it is not spicy at all.\" I said.\n\n\"Thank you for remembering.\" He said in appreciation. \n\nThirty minutes later, we were both at the dining table about to have dinner. \n\n\"It looks so colourful!\" He exclaimed. \n\n\"Try it. See if you like it.\" I said.\n\nI kept my fingers crossed. \n\n\"It's absolutely delicious, Lila. I like the saltiness of the soup, but I can also taste the sweetness of the bell peppers. It's a burst of different tastes which I cannot define but it's really tantalizing.\" He said. \n\nI was on cloud nine. I was practically beaming during the duration of the whole meal. The sun had set by the time we had finished dinner. It amazed me that I had not realized the passing of time. We had spent the next two hours together. We spoke about everyday things, politics and even philosophy. Yet neither of us did speak much. We gave each other the opportunity to speak and we were neither hurried nor bothered about the pace of our conversation. Everything just seemed to flow naturally. This was the most pleasant standard conversation that I was aiming for with every client, and finally I did manage to achieve this with Mr. Boardmann. It was no small feat, and I was grateful that everything was going on smoothly now. \n\nWhen he realised the time, he said that he would call for a cab to drive him back to the other end of the boulevard. \n\n\"Maybe it's easier to stay the night?\" I asked.\n\nHe looked at me in astonishment as he had not expected me to extend my hospitality to include a sleepover. \n\n\"Yes, it is a very practical solution.\" He said, with an impressed look in his eyes.\n\nHe was impressed at my ingenuity, and he smiled at me sincerely. \n\nBefore we called it a day, we went outside into the garden. He touched his moonstone ring and made his wish under the moonlight. \n\n\"May the person who has helped me with the proposal be blessed always and I am ever so grateful to the moon for bringing this person into my life.\" He said.\n\nI felt a little emotional when I saw how serious he was when he made his wish.\n\nAfter freshening up, he wished me a good night and put to good use the sofa in the living room. I wished him a good night too, and went straight into my bedroom.\n\nIn bed, I tossed and turned somehow like a pancake escaping the heat of sizzling oil. After a few minutes, I could bear my restlessness no longer. I carelessly clocked myself in my dressing gown and unlocked my room door. I tiptoed to the living room, telling myself that I wanted to check on him; to make sure that he was alright. Could he sleep well in a cramped sofa? But mostly did he need me by his side? ",
        "The lights were all turned off. The only light came through the windows from the moon and the stars in the sky. Since we were away from the hustle and bustle of the boulevard, the night sky could be seen extra clearly. \n\nDespite my nimble footsteps, he turned when I was just at the corner of the living room. \n\n\"Lila.\" He said, in a soft voice. \n\nIn the dark, the pupils of his eyes shone like stars in the cosmos. I was mesmerized by the strange light in his eyes. I wondered how he knew that I was there because I never so much as made a sound. \n\nI omitted to switch on the main ceiling light. I gathered that it would have been rude to intrude with a sudden brightness of light. Instead I flicked the switch of a side table lamp in the living room. We now could see each other somewhat clearer in the dimmed lightning.\n\n\"Is anything the matter?\" He asked, looking straight into my eyes. \n\nHis countenance possessed an inscrutable quality to it, and his lips curled up into a likeness of a smile. \n\nCaught off-guard, I did not know what to say. I moistened my lips and was about to bite my nails in pathetic nervousness when he swooped my hands in his in a sudden move towards me.\n\nBewildered, I could only look gaze upwards at him. He towered all over me and looked menacing in the dimmed lightning, by virtue of his shadow cast against the wall.\n\n\"I came to check on you.\" I said, in a soft voice. \n\nThere was no need to speak louder for he was so close to me that I could hear his heightened breathing and I scented the musky saturation all around and about him. It compromised my judgment and made me light-headed. \n\n\"Have you satisfied yourself that I am alright?\" He asked. \n\nHis spoke softly but there was an invasive tone to his voice. It was almost as if he was prying into my mind. I felt like shrinking away from him, but it was too late now. I should not have come to check on him. \n\nHis eyes peered into mine with a mild intensity. He was quite comfortable with himself and he did not probe into mine deeper. It was as though he already had answers. Far from asleep, the grey wolf had been prancing around in silence until I provoked him in the dead of the night. \n\n\"Yes.\" I said.\n\nMy voice came out breathless, and I felt that I should say a bit more to justify myself being there. I was a good, standard hostess. A standard hostess would make sure that her guests were sufficiently provided for. \n\n\"It can get quite cold later in the night. Do you need extra blankets?\" I asked. \n\nI had regained some semblance of control on my voice, and I was speaking the way I thought housekeeping service would at a hotel.\n\n\"Lila, I am much too warm-blooded to be shivering in cold.\" He said. \n\nHow I had blushed! I was so relieved that the lightning was dim, and that in the partial darkness, we could only make out facial expressions at the most. My flushed cheeks were spared because he could not make out the colour in them. \n\nHe spoke in a low voice which had the unmistakable aura of self-assured dignity in it, and immediately I felt embarrassed by my question. His eyes, in the meantime, seemed to steer into mine at a languid pace. His very calmness had unwittingly given me the jitters. \n\n\"Perhaps you would like a more comfortable pillow?\" I asked. \n\nI was practically on automaton mode. I was nervous and a bad habit of mine to arise from it was to speak ninety to the dozen without really thinking about its practicality. All I felt was that I had to say something in order to keep it to a pleasant conversation similar to the one we had this evening. I gave no thought to the fact that it was in the middle of the night, and we were supposed to be in our respective beds; his being my sofa. \n\n\"No, Lila. I am completely fine.\" He said. \n\nHe spoke in undertones, yet there was a piqued confidence lurking behind the unobtrusive countenance of his. I could not quite understand it, as I had not encountered him in this manner before. He must have been dazed to be awoken at this ungodly hour of the night, but he did not want to show how tired he was. Instead I thought that he tried to be very polite to me but it all came out the wrong way.\n\n\"I am glad that you are fine and well. I will go back to bed.\" I said. \n\nI gazed at him; trying to find an acknowledgment in his countenance, but he merely looked at me like a sphinx, neither confirming nor denying my need for an affirmation. \n\n\"Good night, Lila.\" He said.\n\nI looked at him with my eyes wide open. He was unlike his self, and with that I meant he was neither grumpy, brooding, intense, passionate nor cynical- his usual characteristics when he spoke to me. I trembled a little when I recalled that he could also be immensely tender and funny with me. Now he was just emitting a different kind of aura altogether. \n\n\"Good night, Mr. Boardmann.\" I said. \n\nI made my way back into my bedroom. I tossed and turned in bed for the umpteenth time, heaving sighs over and over again. I was feeling restless and my mind was in a web of deceit. I could not exactly pinpoint the reason why I was in such frenzy. \n\nMinutes passed before I heard a knock on my door. I bolted upright in bed. The knock had this explicit raw strength in it and I knew he had come to me. I was not afraid. I was in fact, welcoming. I dashed to the door, unlocked it and there he stood, right before my very eyes. \n\n\"Lila.\" He said, in a gruff voice.\n\nHe was at my door and now that I had removed my dressing gown, I was cloaked in a pair of lilac silk pyjamas. It was hardly presentable to be housekeeping service, to say the least. \n\nHis eyes pierced right into my soul now. It hit me right at my core. The spirit within me rose from its slumber. \n\n\"What are you doing here, Mr. Boardmann?\" I asked. \n\nMy voice trembled; not of fear but of a feeling I could not describe precisely in words. I felt waves of anticipation in one second; I felt myself surfing with each rising tide, yet I also felt waves of dread in the next second. The waves had pulled me down under and I was drowning in a sea of uncertainty. I looked at him with wide eyes. He could see all of me now and the depths of what I felt were revealed to him. \n\n\"Did you come only to check on me or was there another reason?\" He asked.\n\nHis voice held a fervent passion and the whole of his masculine stubbornness was luring me into the forbidden lair of the grey wolf. \n\n\"What?\" I whispered, barely registering his question. \n\nI stared into him; the whole of him in bewilderment. As I unconsciously took a step back, he stepped forward, closing in on me. \n\n\"I was under the impression that you wanted to tell me something.\" He said, his voice low. \n\nHe spoke huskily, and his eyes held mine with a force that I could not escape from. I could not turn away from him. It was as if his eyes had hypnotized mine. \n\n\"I have nothing to say to you. It's late and we should both get some sleep.\" I said, trying to rationalize with him, but mostly to myself too. \n\nI figured that it was best to keep to a stance and uphold it right till the very end. My voice however betrayed me and I sounded unsure of myself. I tried to free myself from the power of his eyes. Finally I managed to break free; my gaze instantaneously skittered downwards to the floor. \n\n\"My mistake, Lila. I'll go back to the sofa.\" He said, in a hushed tone, although he did not seem very apologetic. \n\nHuskiness emanated from his voice, and I caught the demeanour and style of a man who was all fire and ice at the same time. It was all new to me, and I had never felt like prey before. Was I really prey when he was giving me choices? \n\nHe took a step backwards now, and he looked at me with a restive concession in his eyes. He had given in to my wishes. What right had he to come to my bedroom anyway? I reached for the doorknob and was going to shut the door when my spirit burst out to speak on my behalf. \n\n\"Wait.\" I said, in a whisper of a voice. \n\nI felt both bold and shy at the same time. My eyes fluttered; they could not quite catch his gaze because I was a bundle of nerves. \n\n\"You have to tell me clearly what you want, Lila. Say it direct.\" He said.\n\n\"You're being weird, Mr. Boardmann.\" I said, in meek protest.\n\nMy heart was beating erratically, that I felt that I probably had an irregular heartbeat dysfunction, caused by none other than him.\n\n\"I need to hear you say it. I don't want to force you into anything. It must be your own free will, Lila.\" He said. \n\nHis voice was full of passionate tremor. His eyes had a disturbed quality about it now. His whole countenance was troubled. I should not have been surprised. He had after all described himself as troubled and disturbed. \n\nI could not find my voice to say anything, nor did I know if I actually had anything worthy to say. All that was in me were feelings of hope, lost and despair. And these feelings were intricately tied to him in some unseen way. It was as if the spirit in my heart had known his spirit all along. Together they had more than merely the perceived five senses; they could feel intimately; they yearned passionately for the spirit of the other for salvation and redemption.\n\nFor what seemed to be a long time, neither of us spoke nor moved. Time came to a standstill. But I could almost hear our heartbeats; together as one in the silence of the night. The moon shone through my bedroom window, and she lit up my bed in her celestial beams. The stars shone in a tickled frenzy around the moon; their light seemed to blink evanescently. To me, they appeared to be glowing in glee; they seemed happy. If ever stars could look happy, then this was their look. And the moon; she was beautiful in her subtle light. She need not show her true sparkle all at once. There was enough magic of hers to fill the universe; one speck at the time. \n\nI fiddled with the moonstone around my neck. Icily cold as always, I obtained the reassurance I needed. Looking at Mr. Boardmann's countenance, I saw through him; I felt the essence of his torrid feelings; without the need of understanding them fully. He was my enigma; and that was enough. \n\nI took his hands in mine; grasping them tight; the way I knew how. I led him to my bed. I pulled over the lilac duvet on the side which I did not occupy, revealing the soft satin bedsheet. He got into the bed, not before piercing my eyes with a serendipity of sorts. As I did the same, I felt him staring at me from the corners of his eyes. I turned to look at him. My lips parted to say something intelligible; but all which escaped my lips were the words, \"I want you by my side.\"\n\nHe let out a sound; somewhere of a groan and husky undertones combined. \n\n\"So do I, Lila. Oh, so do I.\" He said. \n\nHis voice was trembling with an aroused agitation but his countenance was appeased finally. \n\nThat night, we faced each other in bed, holding hands as we slept. The warmth of his hands sedated me like anaesthesia; and I was able to sleep almost immediately. As my eyes closed, the last thing I saw etched in my memory was his face; kind and tender; looking at me with all that is good in this world. The scent in the air no longer appealed to me; instead all which appealed to me was his scent; the real musky saturation which was all of him. He was mine for now; in this realm of dreams. I prayed that I was his; if only existence thrived too in the realm of dreams. I was content this way; to live my life in a beautiful dream."
    ],
    "authorname": "subtlekiss",
    "tags": [
        "call girl",
        "businessman",
        "moonstone",
        "scent before rain",
        "musky saturation",
        "troubled",
        "neurotic",
        "feelings",
        "romantic",
        "emotional"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-call-girl-and-the-businessman-ch-07"
}