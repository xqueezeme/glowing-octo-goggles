{
    "title": "How To Cheat on Your Spouse Ch. 2",
    "pages": [
        "Living on the edge has never been my philosophy. If anything, I am a rule follower. Oh, I might stretch some rules a bit, but like a stretched rubber band I snap back to a personal reality in due course.\n\nA while back on these pages I confessed to having cheated on my loving, adorable, little miss perfect wife. The seven-year itch hit, my then secretary lured me into her provocative web, and after a few weeks of good --- make that great --- sex, we were caught in the act. The fact that I was getting a wonderful blow job in my wife's car didn't help matters, and after my wife Jane stopped screaming, and after she stopped slapping my secretary and calling her every name from slut to whore, things only got worse. \n\nAfter a thousand apologies, some counseling, a Nordstrom credit card, and the purchase of a new car to \"exorcise\" the demons in the old one Jane and I made up. Today, we are happily married once again. I have been and will continue to be a good boy. Still, as I wrote a while back, there are some people who are natural born cheaters who do so without their spouse ever having an inkling of their transgressions. \n\nIn a prior story I wrote about Artie, my friend in Accounting, who had a penchant for bedding a variety of young miss and missus without his wife having a second of concern that her man was straying. This man has boulders for balls, and could lie his way out of anything. Over several days we spoke about his shadow life and exploits with women of all shapes, sizes and personalities. His frank interview touched on everything from sex to guilt and everything in between.\n\nAfter that story was published I received numerous notes of positive feedback. But there were a few which were anything but positive. I was accused of being a louse, a promoter of cheating, and a male chauvinist. Centering on some complaints was the fact I had not spoken with a woman to give the interview equal time. \n\nIn the interest of fairness, I did find a woman to agree to be anonymously interviewed on the topic, and like Artie, she was very candid in her responses. Jessica is a sweet 35-year-old woman who has been married nine years. An attractive, 5-6 brunette, wearing jeans and a slinky chiffon top, she seemed a bit nervous when I turned on the tape recorder.\n\nQ: We've talked on the Internet about your dalliances, and I wonder if you would be willing to go off the record on this topic if no specific personal details are exposed so that you will remain anonymous?\n\nA: As long as nobody can identify me, why not? I mean, you promise to return the tape to me once you are done the story? \n\nQ: Surely. I'll give you my license to hold onto or something. It will be our little secret. So\u2026let's begin. Do you love your husband?\n\nA: Absolutely. We have a good relationship and he is my best friend. We've had our ups and downs, but he's a great man.\n\nQ: But you have strayed from your wedding vows, correct? If you love him, why have you cheated on him?\n\nA: I've thought about that since reading your other story. Like your friend, it is a complicated question to answer. My husband is a wonderful man. We are soul mates. We live a good life, have great friends and so forth. But for me there is something missing. He's an older man, he's about 20 years older than me, and over the last few years sex has gotten less frequent and wasn't very satisfying.\n\nAt first I tried to change things in my marriage, I'd be more seductive, think of ways to seduce him, entice him, and turn him on more often. I have a dresser full of sexy lingerie. I've tried to talk dirty. I've attempted to do things he said he liked having done to him. But after a while I realized he just didn't have the same desires I had. It was something I lived with.\n\nI love him. I would never leave him. I don't want to get caught in any compromising position, I don't want him to know. I don't want him hurt. I just wanted, needed, a little more.\n\nQ: Yet something changed. You admitted to me that you have cheated on him. Why?\n\nA: With my last answer as a start, you can see I was frustrated at not getting the sex I wanted. Deep down, I wanted to try it all. Apart from having no desire for a lot of pain or humiliation, there wasn't much I didn't want to do or try. My husband wasn't satisfying that need, and I started looking elsewhere.\n\nQ: How was sex before you were married?\n\nA: Very good. Maybe not as frequent as I would have liked, but the frequency didn't bother me back then. It was good, although in retrospect it wasn't as risqu\u00e9 or naughty as I would have liked. I wanted to experiment, like with mild bondage, watching pornography while doing \"it\", or anal play, and that wasn't his bag. He likes missionary, he likes me to be submissive rather than active, and overall, isn't very imaginative in bed. With a lover, it is different. I rarely do missionary with a lover. I just might try anything. It's exciting, the sex is a little more on the edge.\n\nQ: You wanted a little more sex with a wild flavor, eh?\n\nA: (laughs) Yes, I guess so. I mean, nothing really crazy, but I just hated it when I'd run my finger along his ass and he'd jump back, or that he obviously didn't enjoy it when I got on top of him. Heck, most guys would love to be blown in the car, but he would push me away if I even attempted it. Oops, that one hit close to home, huh?\n\nQ: You are really funny. I guess you did read my other story, the one where my wife caught me with my cock in my secretary's mouth. But seriously, do you fear that he will find out that you have cheated on him?\n\nA: Oh lord yes. It would break his heart. I am definitely not open or overt about cheating. We don't have an \"agreement\". A girlfriend of mine was caught cheating by her husband, and my husband caller her a whore. I can't imagine what he would call me. So I take precautions. I am very careful.\n\nQ: How many times have you cheated?\n\nA: Times? Like as in how many times I have had sex outside marriage? Or how many men I have slept with?\n\nQ: Partners?\n\nA: I've actually had more partners after I got married than before. I feel a bit slutty confessing this, but I've had about 17 partners since I began (cheating). I pride myself on the fact that I have always been safe\u2026for obvious reasons this is important. \n\nQ: When was the first time you had an affair?\n\nA: As I mentioned before, it was about three years after I had gotten married. It wasn't planned, but I had been feeling the need for more sex and began fantasizing about seducing someone or being seduced. Still, when it happened, I was a bit surprised.\n\nQ: How so?\n\nA: I didn't think I could act on the impulse, I suppose. \n\nQ: What happened?\n\nA: He was a young salesman visiting our offices. Right out of college, still wet behind the years, but with \"the look\". He was scrumptious. Muscles in the right places, a quick talker. We had talked on the phone a few times before I actually met him, discussing business of course. But when he walked into the conference room that day for his presentation to us I got weak in the knees. It's a good think nobody called on me in the meeting, because I was in la la land for much of it. We joked and talked a bit after the meeting, and I was mesmerized my him. \n\nWe spoke a few times on the telephone after that meeting, and when he came back to the office late one day the next week to sign the deal and deliver some papers we agreed to meet for drinks at a local bar. I don't know what got over me, but after two drinks I asked him to walk me to my car. We did it that night in the back seat and it was cramped, furious and fantastic.\n\nQ: Was that the beginning of an affair?\n\nA: Yes\u2026no\u2026not really. We met a couple other times, made love on each occasion, but it sort of fizzled after a while. We didn't have much in common or a lot to talk about. \n\nQ: But you've had other lovers.\n\nA: A couple other young, single guys, but for the most part they have been married men with something to lose if they were found out. They get something they don't get at home, I get something I don't get at home. Quid pro quo. No fuss, no muss.\n\nThere is something about variety. I've had encounters with big men, small men, you name it, and I've been with all kinds of guys. \n\nQ: Big as in size of their equipment?\n\nA: No, silly. Big like over 6 feet tall! But yes, I have had various sizes and shapes of their personal equipment. I like long cocks, but really love thick ones. Every time I open up a fly it's a treat, because you don't really know what is in those underpants. Guys you expect to be huge might not be, others surprise you. \n\nQ: What's the longest lasting relationship you have had?\n\nA: Well, it's not an every month rendezvous, but I have a very special friend who I've seen for four years. He lives in another state. He's married. He travels a bit on the job and every so often our paths cross. We've probably done it 50 or 60 times, but we can go months without seeing each other. \n\nQ: How do you keep it away from your spouse?\n\nA: Just like all the others. Deceit. I hate it, and am constantly worrying about leaving some piece of incriminating evidence. Still, the attraction for the sex is so great that it is worth it. I am just very careful. It entails a great deal of planning, and a whole lot of trail covering. \n\nYou have to be very smart about it, and you can't, at all costs, screw up. You have to think ahead, you have to anticipate something will go wrong. You are constantly looking over your shoulder, staying away from places where you might run into someone who shouldn't be seeing you. I always go where I am saying I am going, even if just to drive by, so I can keep my story straight. \n\nThe guy usually pays for things, so there aren't receipts that might find their way into my possession. I clearly am not going to keep any souvenirs. I never give out a home phone number, and demand that I call them using a phone card that can't be traced back to me. I insist the guy always use protection, because the last thing I would need is to come down with something. This one guy wanted to keep my panties as a memento, and I told him he was crazy. How could he possibly explain them to his wife if she accidentally found them?\n\nQ: It sounds as if you are good at keeping things secret. Do things always work as planned?\n\nA: Well, I haven't been caught. Sometimes I wonder why I do it\u2026a one or two hour rendezvous can take days to plan. It isn't easy. And then there are the last minute cancellations or changes in plans because of a lover's last minute family responsibilities. In times like that you still have to go out, carrying through with your plan without the sex because you can't have too many cancellations without him catching on. I have driven around town a few times passing the time because of a last minute emergency or problem with my lover meeting me. \n\nQ: What do you look for in a lover?\n\nA: You might think it would be a perfect body, a real stud. Someone who knocks a woman off her feet. But while looks are important so is someone with a good sense of humor, someone who can talk about more than just himself, someone who takes an interest in me, someone who actually listens and cares about what I have to say.\n\nOf course I want someone who is adventurous in bed. Early on it might be tentative sex, but after that first time it has to be intense. Anything but missionary, sometimes outside of the bedroom. Danger is a major turn on.\n\nQ: Have you \"done it\" in unusual places?\n\nA: (Laughing) My armpit? I assume you mean\u2026well, different locations. Yes, a few places which aren't a bedroom. In a moving car, for instance. I gave a lover head while we were driving. I don't suggest that, because in looking back that is very, very dangerous! \n\nI've done it in the back seat outside a restaurant, in a mall parking lot, at a park, you name it and I've tried it. I've given head in the front seat while the guy pretended he was reading the newspaper and I worked on him underneath while people were getting into cars nearby. \n\nOther different places include a rest room at a gas station, on a park bench, and my personal favorite, giving a lover a blowjob, kneeling in front of him alongside the AMTRAK railroad tracks while a Metroliner was passing. It was so hot because there was no way anyone would have known who we were since the train was moving at more than a hundred miles an hour. He came in my mouth just as the last car was whizzing past. \n\nThis one man, a married guy in his 40s, wanted me to go down on him in one of those glass elevators. He stopped the thing between floors high in a hotel with an atrium. Here we were, high above everyone downstairs, but perfectly in view for those in other elevators. It was awesome. We quickly got out on a floor and made our way down the stairway to his room.\n\nThen there is the man I mentioned that I've been seeing on and off for four years. I blew him at the Philadelphia airport when he had an hour layover between connecting flights. I met him at the gate, and surprised him because he thought we were only meeting for coffee. But I was early and noticed that no planes were leaving from these two gates at the end of one terminal\u2026and it was just down the hall from where his plane was arriving. I walked with him down the corridor, turned and sat him down and told him I had a surprise for him. I made sure nobody was following and then quickly pulled out his dick and began sucking it. He came in a couple of minutes and we still had time for coffee before he had to get on the plane.\n\nQ: You have an exhibitionist streak. What about in the bedroom?\n\nA: I mentioned I don't like missionary with a lover. Generally I like to be on top, but part of the fascination of having a lover who is willing to try anything is to do just that. My husband and I never 69ed, but that is something I like with a lover I am familiar with. I love oral sex, although early on with a lover I make him keep his rubber on. I use those flavored ones. I love dressing up for a lover, but only with lingerie I've first tried on for my husband. Toys can be exciting. And a special kick is masturbating in front of a lover, or having him masturbate for me. That's hot, very intense. And at a later date, when we are having phone sex, I can visualize how he looks when he is doing himself because I have already seem him doing that in person. \n\nQ: You mentioned your concern about being detected, and how you are very careful. You've also mentioned how most of your rendezvous have been good experiences. Do you have any regrets? Do you feel good about yourself?\n\nA: Regrets? On one hand, I wish I could satisfy my needs at home, because then I wouldn't have to go to such lengths to avoid detection. But on the other hand, part of the mystique of all this is the danger. I mean, if I was caught giving head to my husband in the car, so what? We're married. But to be doing it to a married guy, in a semi-open and visible location is so very bad. And so very exciting. \n\nIf I had never cheated I would never had experienced some great encounters. And yes, it does a lot for my self-image that I can attract and satisfy a variety of men. It's hard at times, though, because I can get to feel very guilty about myself, especially on a night when I am returning from a night \"with my girlfriends\" when actually I was sucking cock. If my husband is home I get this guilty, terrible feeling. I normally attempt to make love to him on nights like that. But usually he just turns over and says he's too tired or something. I will lay there in bed wishing it could be different.\n\nQ: But you still love him?\n\nA: Oh yes. I love him.\n\nQ: Any final thoughts?\n\nA: If a woman asked me if she should\u2026well, stray, I would say for her to think long and hard about it, about the consequences, before she did. While it has been good for me, I don't know if some people can handle the emotional baggage. Cheating is very difficult on one's mind. \n\nWhen push comes to shove, I would tell them to work on their marriage and make it better.\n\nIf one does stray down the other path, she must not go overboard on giving hubby attention, because that's a telltale sign of something being amiss. You have to be aware of what you are saying all the time, you have to be in control at all times as not to let something slip out. That in itself can be exhausting. No receipts, no love notes, no late night phone calls when you are lonely. You can't do anything that will draw suspicion, and you have to know when to \"cool it\" so as not to draw attention to your exploits.\n\nBe careful, be safe, and be smart is the moral of this story if you are going to stray in your marriage. It can be painful, not only if you are found out but also mentally even if you are not."
    ],
    "authorname": "JRob",
    "tags": [
        "married guy",
        "guy wanted",
        "oral sex",
        "lover",
        "love",
        "time",
        "good",
        "sex",
        "back seat"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-cheat-on-your-spouse-ch-2"
}