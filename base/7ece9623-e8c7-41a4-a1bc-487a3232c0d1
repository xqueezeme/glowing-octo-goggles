{
    "title": "Cockatoo Pt. 32",
    "pages": [
        "How long I was out for I couldn't tell, but it couldn't have been very long. I came round to find myself lying on top of Nin with my ears ringing and the acrid taste of smoke mixed with petrol fumes in my throat. I knew we had to get out of the car, but as I tried to move, pain flared in my shoulder and I couldn't move that arm. I somehow managed to grab the door handle with my good arm, but it wouldn't budge. The door had buckled, and it wasn't going to open. I could see soldiers running past the car and I shouted for help, but they just kept going without even looking in the car. Nin started to come round as I desperately tried to open the door. I lay on my back and kicked the window as hard as I could, but It wouldn't break and the smell of petrol was getting even stronger. I looked around for something to smash the window, but I could see nothing that would be of any use.\n\nTurning around I saw the rear window had a big crack in it. Hoping that it would be weakened, I took off one of my shoes and hit the crack with it. The first two times nothing happened, but on the third hit, the crack started to lengthen. I hit it as hard as I could until the crack ran all the way up the glass, and with the next blow the glass shattered. I had taken off my jacket when I got into the car and wrapped it around my hand to push out as much of the glass as I could. Nin was conscious again, so I pulled her up and shouted to her to climb out of the rear window. She looked at me and shook her head, then held her hands over her ears. I guessed like me she couldn't hear anything. I pointed to the hole in the back window and she nodded and clambered out through the hole. The petrol fumes inside the car were stinging my eyes now. I knew I should follow Nin outside, but I took a quick look over the front seat. The driver was slumped to one side with his eyes wide open, staring blankly up at me.\n\nThere was nothing I could do for him, so I climbed out through the window, slid down the boot and fell onto the road, pain stabbing through my shoulder again. Nin helped me up and holding her hand I tried to pull us away from the car. She was limping with blood dripping down her leg and we had got only a few metres from the car when there was a flash of light, followed immediately by a wave of heat as the fuel tank in the car caught fire. I managed to drag Nin a little further away from the car before we both fell to the ground. There were people running around everywhere, but I could hear nothing. The explosion had deafened me and I thought I might have lost my hearing completely. I shouted at Nin, but it was clear she couldn't hear anything either.\n\nWe reached what looked like the edge of the blast zone as the vehicles on the road here were untouched. Looking back to where our car was now burning fiercely, I shuddered as I thought of our driver, but at least he had died before the fire started. I could see bodies lying on the road between cars, and soldiers were already beginning to cover them with coats. I realised just how lucky we had been and gave up a small prayer to the Mercedes engineers for the build quality of their cars. From what I could see we would not have been as fortunate in another make. Nin sat down by the side of the road, holding her leg which had a deep gash just above her knee. My shoulder was hurting like hell and I managed to make a temporary sling with my shirt.\n\nMy hearing began to clear as I could now make out sirens wailing and a helicopter clattering overhead. Two soldiers stopped and began shouting at us and pointing down the road. They were gesturing towards a large military helicopter which had landed by the side of the road. I helped Nin up, and we hobbled down to the helicopter where there were some army medics, and after a quick look at us they waved us onto the helicopter. Two soldiers helped Nin on board and then pushed me on as well. The helicopter was already full of injured people, so we had to sit on the floor as a soldier closed the door, and we took off in a stomach clenching ascent. Nin turned pale and her hand felt clammy as I held it.\n\nI hoped we were heading for a hospital as some of the injured in the helicopter looked in a bad way. People screamed as the helicopter banked suddenly, and I had to grab Nin to stop her sliding along the floor. We made another couple of quick turns before we began to descend quickly and we landed with a thump. The side doors slid open and nurses and orderlies started to help people off. Those of us who could walk were ushered to one side as the more seriously injured were lifted onto trolleys and wheeled quickly away.\n\nThe rest of us were taken into a room where nurses and doctors assessed our injuries and took our details. My hearing was returning, but my shoulder felt like a nail had been driven into it. Nin was taken to have the gash in her leg attended to, but I had to wait for a while before someone was free to look at my shoulder. It gave me time to think about what had happened to us. I knew there had been bombings in Thailand before; in the south, in Hua Hin and Phuket, as well as the blast at the Erawan shrine in Bangkok which had killed twenty people. Maybe this one had been meant for somewhere else and had gone off prematurely, but it all explained why there so many troops around and how jumpy they were.\n\nMy mind was beginning to clear, and I needed to let everyone know we were OK. I was sure that Alex and Areeya would have heard about the bombing by now, and they would probably have tried to call Nin and me, then probably Kritsada. He would have tried to call his driver and realised that something had happened to us. They would be desperate with worry, and I had to get word to them that we were alive. I had left my phone behind in the car, and I didn't think Nin had taken anything either in our haste to get away. There didn't seem to be any public phones around, and anyway, I had no money. I tried to stop an orderly, but he shook his head, 'No spik Engrish.'\n\nAt that moment, I saw a familiar figure pushing his way through the doors.\n\n'Kritsada, over here.' he turned and relief spread across his face. 'James, khun pra chuay, you are OK, thank God.'\n\nHe hugged me and I groaned as my shoulder spasmed again. 'I'm sorry, you are hurt?'\n\n'My shoulder, I think it's dislocated. They haven't got around to me yet.'\n\n'And Nin, and the driver?'\n\n'Nin is being treated, but I'm afraid the driver didn't make it.' Iquickly told him what had happened and his face dropped. 'That's terrible, he was a good man.' He turned away and wiped his hand across his face. He turned back, 'I must call Areeya to tell her you are OK. She and Alex were frantic with worry when they couldn't reach you.' He pulled out his mobile and dialled. At that moment, Nin was pushed back into the room in a wheelchair with her leg heavily strapped.\n\n'How are you?' I asked her.\n\n'I'm OK, but my head hurts. They have stitched me, and it should be OK.' I gave her a kiss just as Kritsada handed me the phone.\n\n'Hi, it's James.'\n\nI heard Alex's voice break as she said, 'Thank God you're alive. We got so worried when we couldn't get hold of you. We thought you were dead.' She began to cry.\n\n'Don't cry, I'm OK, I've hurt my shoulder, but that's all. Nin is good too, she's gashed her leg, but we're both OK. Don't worry.'\n\nAreeya took over the phone, 'James, I am so glad to hear your voice. We prayed for you to be alright.'\n\n'I'm fine Areeya,' I felt in my pocket and there was the amulet she had given me before I left. 'I still have the Palad Khik you gave me.' I heard her burst into tears and Alex was quickly back on the line. 'Call us when you can. We both love you.'\n\n'I love you too,' I said as the line went dead. I gave the phone back to Kritsada just as a doctor called out my name. It didn't take them long to decide it was a dislocation and not something more serious. They tried to reduce the shoulder, but the pain was so excruciating they had to give me painkillers and wait before they could finally do it properly. I was given a sling to support the arm for a while and sent on my way with some more painkillers.\n\nNin was waiting for me whilst Kritsada was outside on his phone. He waved for us to join him and a minivan slid up to the kerb and two guys jumped out. They helped Nin and I into the back of the van and with Kritsada in the front we pulled out of the hospital. Kritsada said that he had been told of the explosion and had tried to call the driver. The mobile network had crashed under the weight of calls, so he couldn't reach anyone. Our car had been fitted with a GPS tracking device and its last signal was right in the area of the explosion. He had found out where the injured were being taken and rushed over in case we were there.\n\nAfter what seemed an age edging through the traffic, we pulled up outside a hotel on the Chao Praya riverside. We were hustled past reception into what appeared to be a private elevator, and a few seconds later we were inside the Penthouse Suite. There was a storm brewing outside and black clouds were massing on the skyline just as the sun was setting, making it look as if the sky was on fire. The view through the windows was stunning although none of us was paying it much attention. I was simply glad to sit down and stop moving as my shoulder was still sore and I could see Nin was exhausted.\n\nThe two bodyguards, as I guessed they were, placed bottles of water and beer on the table alongside a tray of sandwiches before leaving us alone. Kritsada sat down and said, 'I will leave you both shortly to get some rest, but first will you please tell me what happened?' I took a beer and struggled with the top until Kritsada removed it for me. It was only when I picked up the bottle with my good hand that I noticed I was shaking. I took a long swig from the bottle before I felt able to speak. Kritsada listened without interrupting as I went through the story from our arrival at the airport to the moment we arrived at the hospital. I finished and asked Nin if I had missed anything, but she shook her head.\n\n'James and Nin, I am so happy that you have survived your ordeal, but I am deeply sorry you were involved because of me.' I tried to say something, but he held up his hand. 'No, James, if I had not asked you to come to Bangkok you would not have been caught up in this.'\n\n'Sir, if we had not delayed our arrival, we would not have been involved either.'\n\nHe looked at me, deciding whether or not to say something. 'I was going to come to the airport to meet you in the car, but I had to change my plans at the last moment. If I had not, I would have been in the car as well.'\n\nHis words hung in the air, and a terrible idea grew like a cancer in my mind. 'Are you saying that you might have been the target?'\n\n'James, I don't know. I would have dismissed the idea out of hand even a few months ago, but now, all I can say it is a possibility. Things are changing fast here. There are triads from Hong Kong moving into Bangkok. They are ruthless and will do whatever it takes to remove their competition.'\n\nI nodded to the door. 'Is that why you have the bodyguards?'\n\n'Yes, I have had to undertake extra precautions.'\n\nI sat back, stunned by what I had heard. 'But there was extra security everywhere; soldiers, police. They seemed to be expecting something to happen. Would that be the case if you were the target?'\n\n'James, I don't know the answer to that. Thailand is a dangerous place right now. Anything can happen here these days. I may be paranoid, but these are bad times.' He gestured to the door. 'I will arrange for someone to keep an eye on you tonight. I assume your bags were in the car?'\n\n'Yes,' I said, 'All we have is what we are wearing now.'\n\n'I have to leave you now, but I will arrange for the hotel to provide some fresh clothes now, and tomorrow someone will be here to take you to replace whatever you lost. Please order whatever you want from room service. Again, I am truly sorry for what you have both been through and give thanks that you have survived.' Kritsada shook my hand and then Nin's before leaving. True to his word, a few minutes later the phone rang, and it was the hotel to tell us they would be sending up a selection of clothes from nearby shops for us to choose from.\n\nIt was now getting late, so there was nothing to do except order some food from room service and wait. I tried to call Alex and then Areeya, but neither of them answered. I left voicemails asking them to call me back when they could. The food arrived, but Nin and I could only pick at it. I think we were both still too shocked from what had happened. My shoulder ached, and I don't think I had ever felt more miserable than at that moment. I missed Alex and Areeya, and not even being able to talk to them made it worse. I tried to call them again, but with the same result. The hotel delivered the clothes, and it helped a little to get out of the tattered and smelly things we had been wearing since the blast. Nin fell asleep laying on the sofa, and I covered her with a blanket.\n\nI had managed to have a shower despite the discomfort from my shoulder when there was a knock at the door. I looked through the peephole and I almost shrieked to see Alex outside. I pulled open the door, and she fell into my arms. I could taste her tears running down her face as we kissed. We held each other for a long time, neither of us wanting to break the embrace. I stroked her hair with my good hand and said, 'I'm so glad to see you.'\n\nShe looked up and I could see her lip trembling. 'I was so frightened when we heard the news about the bomb. When we couldn't reach you on the phone, I thought you were dead.'\n\n'I'm sorry, I couldn't get a message to you, we lost everything in the car until Kritsada found us. But, why, I mean, how did you get here?'\n\n'As soon as we got your call, Areeya drove me to the airport, and I caught the last flight. I came straight here. I needed to see you myself.'\n\nNin woke up at that moment and squealed as she saw Alex. They embraced and there were more tears, this time from both of them. I sorted out some drinks and Alex demanded to know everything. She held my good arm very tight as Nin and I told her what had happened. She shivered as I described the explosion and its aftermath.\n\nAt the end Nin said softly, 'If James had not smashed the car window I would not be alive now. Thank you, James. I owe you my life.' Alex drew us both to her and we hugged and cried as it finally hit me just how close we had been to death. We finally broke apart and Nin said, 'Shane, does he know we OK?'\n\n'Shit,' said Alex, 'I forgot about him.' She grabbed her phone and dialled. Thrusting the phone into my hand and said, 'You tell him.' It rang for a couple of seconds and then Shane said, 'Alex?'\n\n'No, it's James. I just wanted to tell you we are OK.'\n\n'Thank Christ for that. I heard about the bomb and tried to call you but then the network went down. We all got called into the embassy so I've been on duty ever since. What happened?'\n\n'Nin and I got caught up in the bomb. It's a long story, but we're OK apart from some scrapes. Can we meet? I'll tell you the whole story then.'\n\n'Fuck me,' he said, 'You really are a trouble magnet. I'm really glad you're OK. Where are you? I won't be stood down until tomorrow.' I told him where we were and he promised to call us as soon as he could. I could hear someone shouting in the background and he hung up quickly.\n\n'Thanks Nin, he was grateful to know we were alright.'\n\nNin nodded and then yawned. 'I so tired. I think I go to sleep now.' She kissed us both and headed off to one of the bedrooms. Alex opened beers for us both and I told Alex what Kritsada had said about the Triads and his suspicions that he might have been the target of the bomb. Her mouth dropped open.\n\n'I don't think he's told Areeya. She hasn't said anything to me, anyway.'\n\n'Kritsada really doesn't know it was for him. He's probably overthinking this, but he's worried for sure. This bombing seems too random to have meant for him. They could have put something under his car, which would have been much more effective. This feels like something more like the Erewan bomb again.'\n\n'You said Kritsada tracked his car so he knew it was close to the explosion. Couldn't someone else have tracked it too?' Alex shivered, 'Should we tell Areeya?'\n\n'I don't think so. What could she do anyway? If Kritsada hasn't told her, then I don't think we should at this stage. Let's see how things pan out.'\n\nAlex was quiet for a moment before she spoke. 'I hate the idea of keeping something from Areeya, but in this case I think you're right. It wouldn't change anything.'\n\nShe stood up and gently pulled me to my feet. 'Let's go to bed and let you get some rest. You look exhausted.' Holding my hand, she led me through to the bedroom and helped me to take off my clothes before I slid onto the bed.\n\nI watched as she undressed, and I felt my cock begin to stir as she took off her bra and pushed down her panties. She stood there for a few seconds completely naked in front of the window, and I marvelled at how beautiful she looked backlit by the lights of the city and the flash of lighting in the distance. The storm had finally arrived, and the wind was lashing the rain against the windows. She bent her leg and pushed her hands through her hair making her breasts stand proud and as she turned towards me, I could see her cock dangling from her groin.\n\n'Like what you see, big boy?' she whispered.\n\nMy throat was tight as I tried to answer her, but she bent down and kissed me, her tongue forcing its way between my lips. She lay down beside me on my good side, one leg forcing its way between mine and I felt her soft body resting alongside mine. We were kissing hard now and her hand reached for my cock, which was now growing as her fingers wrapped around it and stroked it gently up and down.\n\nShe broke the kiss, 'Are you too tired for this tonight?'\n\nMaybe because I had come so close to losing everything today, I needed to feel her close to me tonight. I grabbed her and pulled her down to kiss her. 'I'm never too tired for you, you bad girl.'\n\nShe giggled, 'Oh, you haven't begun to see how bad I can be.' I felt her cock against my leg as it began to grow and she moved up the bed and pushed one of her nipples into my mouth. She moaned as I nipped her nipple between my teeth before bathing it with my tongue.\n\n'Do the other one too,' she said as she moved so I could reach the other breast. I nipped this nipple too, feeling it harden between my teeth, and she arched her back and moaned once more.\n\n'I will be as careful as I can,' she said, 'but tell me if you shoulder hurts and you want me to stop.' I nodded, my lips still wrapped around her nipple. My cock was now fully erect as her fingers feathered up and down the shaft, and It was my turn to moan as Alex bent forward to lick my neck in long graceful strokes. Instinctively my head went back, but I moved too sharply and a stabbing pain shot through my shoulder.\n\n'Owww.'\n\n'Sorry, do you want me to stop?'\n\n'Don't you fucking dare stop.'\n\nShe giggled once more and her tongue found my nipple and she nipped it hard.\n\n'Oh my God' was all I could manage as she continued to kiss her way down my chest and stomach until she reached just above my cock. With one hand firmly holding my cock, she used the fingers of her other hand to tease the skin at the base of my shaft, making my insides flutter. With my good hand, I found her cock and slipped my fingers up and down, making her twitch and gasp. I loved the feel of her cock in my hand, soft and warm and rock hard at the same time. Reaching beneath it, I rolled her balls between my fingers as she took my cock into her mouth.\n\nI sucked in my breath as her warm mouth took possession of my cock and I closed my eyes as her tongue began to swirl around the head. I moved my fingers back to her cock, masturbating her as she sucked me. She let me slip out of her mouth and I heard her say, 'I'll stop if you want me to.' In answer, I squeezed her balls hard, and she squealed. 'I'll take it you don't want me to stop,' she said, and slid her lips once more over my cock.",
        "I managed to slide my hand around behind her and I pressed a finger against her hole. She squealed again as I slid a finger inside her. Still with my cock in her mouth, she found my opening and slid a finger inside me. It was my turn to squeal, and we lay there fingering each other whilst she sucked. It wasn't long before her mouth on my cock and her finger inside me brought me to the edge. She knew I was close and letting me slip from her mouth she used her fingers once more to keep me teetering on the precipice. She knew exactly when and how to keep me from coming, and I was becoming desperate.\n\n'You bitch, finish me now, please.' I begged her. She giggled, pushed her finger deep inside me and as I groaned, plunged my cock back into her mouth and I exploded into her mouth. Wrapping her lips tight around my head she took everything into her mouth as I pumped stream after stream of cum into her mouth. I fell back and opened my eyes to find she was kneeling over me with her erect cock only a few inches above my face.\n\nShe looked me straight in the eye. 'So, I'm a bitch, am I? Do you want me to be a real bitch?'\n\nI nodded nervously, unsure what she was going to do. She took her cock in her hand and she began to stroke it, gently and then with increasing speed. Keeping her eyes locked onto mine, her hand slid faster and faster up and down her shaft. She twitched and then I knew what she was going to do.\n\n'Open your mouth,' she ordered just before she came with a grunt, sprayed nag her cum all over my face. I managed to close my eyes in time, but I kept my mouth open and I felt her cum splash onto my tongue and lips. I couldn't help but swallow and lick my lips, tasting her sweet juices in my mouth. I opened my eyes and felt cum on my eyelashes and eyelids. Alex smiled down at me and used her finger to wipe away the cum from my eyes, slipping her finger through my lips so I could clean them.\n\n'Don't waste it, my love,' she said. Bending forward she licked what cum was left on my face and pushed it into my mouth with her tongue. I loved the taste of her cum, and I sucked everything from her tongue with my lips. I began to giggle as she collapsed next to me on the bed. 'What's so funny?'\n\n'My first facial,' I said, 'the perfect end to a shitty day.'\n\nTo be continued"
    ],
    "authorname": "nikkiesilk",
    "tags": [
        "shemales",
        "ladyboys",
        "action"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/cockatoo-pt-32"
}