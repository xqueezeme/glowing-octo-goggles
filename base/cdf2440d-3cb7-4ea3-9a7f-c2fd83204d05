{
    "title": "Try and Love Again",
    "pages": [
        "*Author's note: I haven't written an older man/younger woman story in quite some time, and that's mostly because I find it difficult not to make the woman look like a gold digger or desperate. But every now and then I get an idea that appeals to me, and this is one of those times.\n\nI was watching and listening to music videos on YouTube several months ago and saw a cover band called 'Foxes and Fossils'. The older men are the 'fossils' and the younger women are the 'foxes'. They can all sing and play instruments incredibly well. After listening to about a dozen of their songs (all of which I really enjoyed) the idea for a story hit me.\n\nI almost called it Foxes and Old Farts, but Try and Love Again seemed more appropriate.\n\nI hope you enjoy it.\n\n*****\n\nIt was dark, cold, and rainy outside in his hometown of Lancaster, Ohio, which was located about 32 miles southeast of Columbus, and inside, it felt just as cold.\n\nHe had no idea how many times he'd opened her closet as a way to feel close to her or maybe to just get a faint whiff of her scent, but this time he wasn't there to reminisce. For the first time in many years he had the urge to play the guitar again. She'd put it in the back of her closet at least a decade ago when they moved to their dream home, and it had been nearly twice that long since he'd played it.\n\nHe'd been listening to music as he often did, and when he heard Sheryl Crow singing \"The First Cut is the Deepest\", it made him think of her the way it did every single time.\n\nMusic had been his life until reality forced him to abandon it in favor of making a living. And since the death of his wife, Kellie, almost three years ago, sad music had been his choice of poisons. He rarely ever drank and never did drugs, but the music he now loved was poisonous to him in the sense that it tore his heart out. It hurt like hell, but it was the only thing that still made him feel alive, and for him, feeling pain was preferable to feeling nothing at all.\n\nAs he carefully slid the blouses on the left end of the closet to the side, he saw it right where she'd put it. It was only the guitar's case, but he smiled because he knew what was inside it. He slowly lifted it then turned around and gently laid it on the bed as though it might break were he to be less careful with it. \n\nHe stood there looking at it for a few seconds before bending over and opening the case. His pulse quickened when he saw the Fender Stratocaster for the first time since he was in college all those many year ago. As he stood back up, just the sight of it made him smile. He looked at it for several seconds then slowly reached down to pick it up, and as he did, a thousand memories flooded his mind.\n\nThe first was the day he bought it. He'd scrimped and saved and worked an extra job in high school to pay for it, and the day he took it home with him was, in a way, a life-changing event. He'd been playing the guitar since he was twelve and by then he was good at it. Really good.\n\nFrom there he saw a series of images flash through his mind that reminded him of the rehearsals held in his parents' garage, all the times he played alone in some dive bar for $20 plus tips, then the band, and as always, she was there sitting in the front row smiling and cheering him on.\n\nHe was unaware he was still smiling as he carefully lifted it out of the case and held it in his hands. But he was smiling, and the reason wasn't just the guitar. It was Kellie. Beautiful, sexy Kellie Burns who came to listen to the band the very first time they played. He was 21 years old, had long hair, and wore a black t-shirt and ripped, acid-washed jeans thinking it made him look cool. \n\nThe irony was that he was studying to became a Certified Public Accountant, and after graduating from college a year later, he cut his hair and started wearing a suit. But she'd stayed with him through the changes and gave up her peasant blouses and cut-off jeans for dresses and heels and entertaining clients after he landed his first real job.\n\nWith a dependable source of income now assured, he asked her to marry him one weekend, and he was so nervous he dropped the ring while getting down on one knee. She smiled but never laughed as he picked it up and cleared his throat before telling her how much he loved her. The only other thing he remember was her nearly hollering, \"YES!\" when he said those four words filled with so much meaning.\n\nNow, 20 years later, he and his older brother were partners in a very successful accounting firm of their own doing things he once loved. But since Kellie's passing, every day at work seemed like a prison sentence. He could do the job with his eyes closed, and the money was still pouring in. But he hadn't had one single day that made him happy since they day they found out about the tumor in her right breast and how serious it was.\n\n\"What do you mean...inoperable?\" he'd asked the oncologist as though he hadn't heard a word the man said.\n\nBut that was the truth. He had no idea what the doctor said after, \"I'm sorry. There's nothing we can do surgically,\" as he explained in some detail why surgery wasn't an option. He also told them that chemo and radiation could buy her some time, but it was only a matter of months at best.\n\nSo for the next four months, Kellie endured chemo and radiation, but the tumor had spread too far, and once she realized there was no more hope, she stopped it all. He never bothered trying to convince her not to give up, because he too, knew it was over. \n\nKirk Nelson still loved his wife of almost 17 years, and he still loved music. He no longer played and no longer cared for the hard stuff he'd loved so much back then and now preferred something his brother Judd called 'age-appropriate music'. Sad, gut-wrenching music that he'd needed to make it through each long day and lonely night.\n\nHe stopped holding the instrument as though it might break and actually held it with his left hand on the neck and his right hand ready to strum. It wasn't quite like riding a bike, but the skills were definitely still there. He knew all the chords and didn't need to look more than a time or two as he strummed a familiar melody and smiled again.\n\nKirk carried the beautiful Fender back to the living room and set his iPod to the song that inspired him then waited for the music.\n\nAs the music played, Kirk played, too, and sang along in that soothing-but-slightly-raspy baritone voice Kellie had loved so much.\n\n\"The first cut is the deepest, baby, I know, the first cut is the deepest.\"\n\nSomehow he managed not to tear up when he got to the part that always tore his heart out. In fact, it did something so unexpected it scared him.\n\n\"And I'm sure gonna give you a try. If you want, I'll try to love again, try baby, I'll try to love again, but I know...\"\n\nIt hit him so hard he stopped playing and just sat and listened. When the song ended he was still sitting there when he realized he was finally ready to try; to try and love again. It wasn't just playing music, although that was the main thing on his mind. Something else hit him just as hard as the need to play, and that was the need to love again. This realization took some time to set in, but by Monday morning, he knew.\n\n\"Judd? We need to talk,\" he told his brother as soon as he walked in.\n\n\"Don't tell me it's about those jerks and the apartment complex. I'm about ready to tell them where they can stick it.\"\n\nWhen he saw Kirk laugh for the first time in years, Judd sat down and said, \"What's wrong?\"\n\n\"Wrong?\"\n\n\"You just laughed.\"\n\n\"Oh. Yeah, I guess I did, huh?\"\n\n\"You did, and I can't remember the last time that happened.\"\n\n\"Well, that's a part of what I want to discuss with you.\"\n\n\"Uh-oh. This sounds serious.\"\n\n\"It is. But...I think it's gonna be really good for me.\"\n\n\"Okay. Then shoot. I'm all ears.\"\n\nKirk didn't need long to sum things up. It took him maybe a minute to explain how he felt and another to tell his brother what he wanted to do.\n\n\"As a partner, you'll still receive your percentage of the what the firm makes. You just won't be earning anything else,\" Judd said, even though he knew his brother was aware of that.\n\n\"Money doesn't matter anymore, Judd. I've got a sea of it and a huge home and two new cars,\" Kirk replied, saying things he wouldn't say to anyone else on earth like how one of them had been Kellie's or how she'd barely driven it before falling ill.\n\n\"But?\"\n\n\"But I'd trade it all to have her back.\"\n\n\"Kirk. Come on. We both know that's not possible,\" Judd said as politely as he could.\n\n\"No. No, it isn't, but we also know that it is possible to find that kind of love again. And, I don't know. Up until the last few days I haven't had any interest in even trying. I've spent every day since Kellie died trying to fill the hole in my life or somehow...make it go away.\"\n\n\"I know. I know. Well, okay, I don't really know. What I mean is that I think I understand as much as anyone who hasn't lost his wife can understand.\"\n\n\"I appreciate that, Judd. But it really did just...hit me. I mean, I'm sitting there feeling all melancholy, and bam! Suddenly it's not enough to just cover up the..hole in my soul...anymore. I need...\"\n\nKirk thought for a second then said, \"I need to move on.\"\n\n\"I get that. But why quit? Why not...reduce your hours? Maybe work two or three days a week instead of six or seven.\"\n\nKirk shook his head then said, \"Sorry, bro. My mind's made up.\"\n\n\"So you're gonna...what? Play music? Join a band? Help me out here, little brother.\"\n\n\"I'm not sure about the details. But yes, I want to play again. I don't really care if it's solo or in another band. I don't even care if it's for free. I just want to play.\"\n\n\"Wow. Okay, well, I gotta say you do have the voice for it. If I'd been able to sing like that, who knows?\" Judd said as he thought back to his own college days and the carefree life of a 20-something year old musician. Judd had been their band's drummer for two years, and he'd been better than average at it. He just couldn't sing a lick and knew it.\n\n\"I'll finish up everything in my inbox, and that should take the better part of the week. I know you'll need to pass off my workload, but we've got several really good people here to choose from.\"\n\nThey discussed the three best candidates for a little while and both agreed on which one to promote.\n\n\"It's not gonna be the same around here without you.\"\n\n\"True. But life's about change, Judd.\"\n\n\"Ha! You're not fooling me. That line's from a country song. A sad country song.\"\n\nKirk laughed then said that was true.\n\n\"Okay. Then it's settled. You're leaving, and from here on out you're gonna...\"\n\nJudd did his best to sing on key, but it still made his younger brother cringe when he sang, \"Try and love again.\"\n\n\"Yeah. I have no idea how, when, or where I'll meet this woman, I just have this feeling I will. And until I do, I want to play again. And who knows? Maybe I'll keep playing even after I meet her.\"\n\nKnowing he'd lost the battle, Judd stood up. Kirk did, too, and for a moment it was awkwardly silent.\n\n\"Come here!\" Judd said as he and his brother hugged. It wasn't a quick 'bro hug', it was a genuine 'I'm gonna miss you' hug between two brothers who were very close.\n\n\"Good luck, Kirk,\" his brother said as he fought off the feeling of tearing up. \"And who knows? You're only 42, so maybe you'll have groupies following you around in no time. Hell, you might even have a kid or two one of these days.\"\n\n\"Groupies. Yeah, right. I'm 42, and no 18-year old girl is gonna be after this old bod of mine. But kids? Wow. That hadn't even crossed my mind after trying so hard with Kellie. It seems like a long shot, but, yeah, who knows?\"\n\n\"I'm not talking about getting married again right away, Kirk. I'm talking about, you know, havin' some fun, and you're still young enough to have groupies. And uh, all that goes with it.\"\n\nHis brother paused for a moment then smiled.\n\n\"Okay. They might be...28 or even 38 instead of 18, but, hey... and as far as kids, most women our age already have them, and I don't really see you taking on someone else's children, but life has a strange way of unfolding sometimes.\"\n\n\"I'll take your word for it where the 'groupies' are concerned, but I agree on raising someone else's kids. Especially if they're teenagers,\" Kirk replied, smiling in a way his brother hadn't seen since his wife was alive.\n\n\"If that smile I just saw is any indication, this might just be a really good thing for you.\"\n\n\"I hope so,\" Kirk said.\n\n\"If not, you know this office will always be yours.\"\n\n\"Yeah. I do know that, and that's a good thing. But I just don't ever see myself in here again. Well, unless I need some financial advice after my first album goes platinum.\"\n\nJudd laughed loudly then said he needed to get back to work.\n\n\"Because some of us can't afford to f...screw around the rest of our lives.\"\n\nKirk laughed, too, and realized how much he'd miss his brother. Then again, it wasn't likely he'd be going out on tour anytime soon, so they'd still see each other several times a week.\n\nWhen he sat down behind his desk a few minutes later and looked at the folders in his inbox, a feeling of relief washed over him that he wouldn't have to pretend he was doing something he still enjoyed but hated once this final bit of paperwork was done.\n\nIt took him until Friday to finish everything and brief his replacement. Judd had secretly put together a farewell for his younger brother that evening, so it ended up being a full week at the office. But late that night when Kirk was alone at home, he felt even more certain that this decision was the right one for him, and having made it, he felt...hopeful...for the first time in years.\n\n*****\n\nTo his surprise, Kirk's love of his former music returned, and he spent the next week playing the kind of songs he'd played back in college, and was amazed at how quickly he was able to get back into the swing of things. The only negative thing he could find was that his fingertips hurt a little from doing something they hadn't done in the last two decades.\n\nBut other than that, he loved everything about it, with the freedom from the tyranny of the daily grind being its own best reward. No one had ever called him lazy, but being a CPA had become a very unpleasant chore while playing music was the opposite in every way.\n\nThe second week he bought some time in a recording studio just to see how he sounded playing and singing solo. His voice had deepened a little over the years, and if anything, it had a richer quality to it now than he remembered in college. He'd recorded a couple of songs with the group back in the day, and although he no longer had them, he could clearly hear the difference in his voice.\n\nThe rest of that week and most of the next were dedicated to learning a play list, so he could perform three sets once he got his first gig. He had no doubt he could get one, because unlike most starving artists, he was in a position where he'd gladly play for free. \n\nHe initially wanted to play the kinds of songs he'd played with the band like \"Magic Carpet Ride\" and \"Smoke on the Water\", but he couldn't completely get away from the sad songs that had dominated his life for the last few years. In the end, he settled on one 'oldie' in each set with the others being 'tear your heart out' selections like \"Reflections of my Life\" by Marmalade and \"He Stopped Loving Her Today\" by George Jones.\n\nCountry music had been taboo when he was a young man. In fact, he used to joke that country music was an oxymoron like 'jumbo shrimp'. But after losing his wife, he found himself gravitating to it, and fell in love with songs like \"Living for the Night\" by George Straight and \"The Dance\" by Garth Brooks, a song that had reduced him to tears the first time he heard it.\n\nBut now he could not only listen to them without getting overly sad, he could even sing them with the kind of deep feelings that no one who hadn't lost the love of their life ever could. It wasn't much of a tradeoff, but it was just about the best he could hope for, and at this particular time in his life, it was enough.\n\nThat Tuesday, he drove up to Columbus where he'd gone to college at Ohio State, or as many alumni said, THE Ohio State. He'd always thought that sounded ridiculous, but he occasionally said it himself in certain circumstances. \n\nAs he looked around he was well aware that things had changed, but then again, not all that much. He'd been to the 'big city' many dozens of times since then, so the changes had been gradual, and even now, it didn't look all that different to him from his days as an undergrad. Many of the bars he'd played in were still there while a few had closed and others had sprung up in their place.\n\nFor sentimental reasons, he chose one of the first he'd ever played at to start the inquiry process, and as he walked inside, another flood of memories hit him.\n\nBramble House hadn't changed all that much, either, since he played there, at least not in terms of the layout. But it had changed ownership, and as he later learned, it had changed four times in the last 20 years. Or so said the general manager with whom he spoke.\n\n\"We're always looking for new talent,\" the younger man whose name was Mark told him.\n\n\"I brought a demo with me in case you're interested,\" Kirk said after they talked for a minute or so.\n\n\"Yeah. Definitely. Unless you want to do it live, that's the best way to go.\"\n\n\"I'm okay with either. I just thought this would be easier.\"\n\n\"What's your style?\" Mark asked.\n\nKirk laughed a little then said, \"Well, when I was going to school here, it was all classic rock. Rolling Stones, Steppenwolf, ACDC, that kind of thing. But uh, but since my wife passed away, I've gravitated toward softer stuff.\"\n\nMark smiled but didn't laugh as he told Kirk he was sorry for his loss.\n\n\"Thanks. It was really tough, but I'm at a point where I feel like playing again, and I guess I'd call my new brand of music...sad. Maybe even...sappy.\"\n\nMark raised an eyebrow then said, \"Yeah. That's not gonna work. We get young folks in here and they want to hear something upbeat. And loud.\"\n\n\"I get it. That makes perfect sense.\"\n\n\"Sorry, man. I wish I could help you out, but if you're not rocking out these days, it'd be a tough slog for you. And me.\"\n\nKirk shook the man's hand, thanked him for his time, then got up to leave.\n\n\"Hey. There's a country bar on the west side of town called Patsy's. You know where that is?\"\n\n\"Patsy's? No. Haven't heard of it.\"\n\n\"It's only been open a few months. They have live music, and while most of it is country, you might be able to get a gig with your new brand.\"\n\n\"I'll definitely check it out,\" Kirk told him as they walked out together.\n\n\"I wish I could help you out, but sad songs just won't work here,\" Mark told him again at the front door.\n\nKirk also told him again he understood and thanked him for his time before going outside and using his phone to find out where this new honky tonk was located. It was only about three miles away, and Kirk had been to that part of town many times. \n\nOnce he drove up, he knew exactly where it was because he'd once played there when it was called The Shamrock. When he went inside it looked nothing at all like he'd remembered with the exception that there was a bar, a seating area, and a stage.\n\nHe was lucky enough to find the GM there, too, and this time, he got a much warmer reception.\n\n\"Let me take a listen,\" the man about his age said.\n\nKirk handed over the CD and the manager took a look at it then asked which song was his best.\n\nKirk laughed then said, \"I can't really say, but I think my best chance of impressing you would be track # 5.\"\n\n\"Okay. Number 5 it is,\" the man said as he dropped it in a player then advanced it to the 5th track and hit 'play'.",
        "Kirk watched the other man's face as he listened to the first few words of the song by country legend George Strait.\n\n\"Everyday's a lifetime without you. Hard to get through, since you've been gone. So I do the only thing I know how to, to get by. I'm...livin' for the night.\"\n\n\"Oh, wow!\" the man said as he turned it up.\n\nHe didn't say another word until it was over, and after turning it off, Kirk noticed the man's eyes were no longer dry.\n\n\"That stirred up a lot of sh...stuff for me,\" the manager said as he wiped his eyes with the sleeve of his shirt. \"My wife left me a few months ago, and I gotta tell you, I've been goin' through hell, so this really hits home.\"\n\n\"Mine passed away three years ago, so I understand,\" Kirk quietly replied.\n\n\"Geez. I'm really sorry. Here I am whining and crying about my woes, and yours are far worse than mine.\"\n\n\"It doesn't make yours any less real,\" Kirk told him sincerely.\n\nThe man looked right at him then said, \"Can you be here this Friday?\"\n\n\"Seriously?\" Kirk asked, not sure he heard correctly.\n\n\"Yeah. I had a band in here last weekend that was so bad, I paid them not to come back on Saturday after they got booed off the stage on Friday. I had no idea who I could find, and then you walk in with this...solid gold sound.\"\n\n\"I don't know about that,\" Kirk replied modestly.\n\n\"If your other stuff is this good, I can assure you you'll be a big hit. And if you are, you'll be welcome to come back anytime. Just get some new material so you don't play the same thing week after week.\"\n\n\"Yeah. Sure. No problem. And thanks.\"\n\n\"Don't you want to talk money?\"\n\n\"No. I don't care about the money. I just want to play.\"\n\nThe manager gave him a funny look then said, \"I have to pay you.\"\n\n\"How about fifty bucks?\" Kirk suggested.\n\nHe got another 'are you kidding me' look before the manager said, \"Fifty bucks? Oh, hell yeah!\" as he stuck his hand out, grateful to be paying 1/5 the normal nightly fee.\n\n\"You'll make more in tips than that. I can promise you that,\" the man told him.\n\nSomehow he hadn't told Kirk his name yet, so when asked, the man said, \"Jerry. Jerry Arot.\"\n\n\"Jerry. Thank you, and I'll be here Friday at...\"\n\n\"The first set starts at 9pm. I'm here almost all the time, so if you need to set things up, get here as early as necessary. Oh. And before you leave, I'll show you what we have and where things are located in terms of outlets and what not. Otherwise, just show up, plug in, and do your thing.\"\n\nAs they got up, Jerry said, \"And uh, if you're gonna play country, a cowboy hat wouldn't hurt\u2014if you've got one.\"\n\nKirk laughed, said he didn't, but that he could probably find one in the next day or two even though many of his songs were pop or ballads.\n\nWhen he left, Kirk was on top of the world. It had been ages since he'd played, but very little had changed, and he now knew exactly what he needed and how to set it up. The only thing he really needed, other than a ten-gallon hat, was a new amp, and he stopped at a music store on the way home and picked one up.\n\nBy the time Friday rolled around, he'd rehearsed his sets several times and although his fingertips were a little sore, he was getting some nice callouses in the same places he used to have them.\n\nHe rolled in around 8:15 and had everything ready to go within about 20 minutes as 'everything' wasn't a whole lot. Jerry followed him around just in case and kept telling Kirk how happy he was to have him there.\n\n\"Just one question.\"\n\n\"Shoot,\" Kirk replied as he did a quick sound check.\n\n\"I uh, I kinda thought you'd be wearing some old blue jeans. This is fine, but don't you think they'd work better with the cowboy hat?\"\n\n\"Maybe, but I have a fairly wide range of songs. Don't worry, though, I'll make sure to wear the hat and say 'howdy' before I play anything country.\"\n\nKirk laughed but Jerry didn't see the humor. He was worried about money, and after the disaster from the previous weekend, he was rightly concerned about how his patrons would react to the new performer.\n\nRather than jeans Kirk wore a nice button-down gray shirt with long sleeves and a pair of black pants. Jerry didn't know how old the his new act was, but in the nicer clothes he looked five years younger than when he'd 'auditioned'.\n\n\"Okay. Well...knock 'em dead!\" the owner said before getting off the stage.\n\n\"One question for you,\" Kirk called out before Jerry left.\n\n\"Uh-huh?\"\n\n\"Am I introducing myself?\"\n\n\"Oh, right! No. And that reminds me. Gimme a sec, would you?\"\n\nAs promised, a few seconds later Jerry reappeared with someone who caught Kirk's eye the moment he saw her. \n\nWhoever she was had on a very nice looking light-blue dress with three-inch black heels, and a gold necklace that matched the earrings he could see under her long, dark, nearly straight hair. She had beautiful blue eyes and an amazing smile along with a body to match. She seemed to old to be a coed but he was sure she couldn't be 30. Whatever age she was, she was somewhere between pretty and beautiful.\n\n\"Kirk? This is my niece, Aimee. Aimee Arot. Rhymes with 'carrot'.\"\n\nThe very attractive, much younger woman rolled her eyes then said hello.\n\n\"Hi, Aimee. I'm Kirk. Nelson.\"\n\n\"Hi, Kirk. It's a pleasure. My uncle says you're good. Really good.\"\n\n\"You'll have to be the judge of that, but it won't be long before you'll know. One way or the other.\"\n\nThe pretty 20-something smile at him then said, \"I'll be introducing you, and it's pretty simple.\"\n\nShe explained how it worked, and Kirk told her he understood and thanked her for the insight.\n\nJerry excused himself then said, \"Ten minutes people!\"\n\nAimee rolled her eyes again then laughed when she saw Kirk smiling.\n\n\"I waited tables here all through high school then tended bar after I turned 21 in college. But here I am at 26 working as the floor manager because I was too dumb to ask whether or not a degree in philosophy was marketable.\"\n\n\"Ouch,\" Kirk said without judgment.\n\n\"Ouch indeed. Smart enough to graduate from college but not smart enough to ask the most basic question,\" Aimee said with a self-deprecating laugh Kirk loved.\n\nAimee smiled then said, \"Live and learn, right?\"\n\n\"I suppose what really matters is whether or not you enjoy what you're doing.\"\n\n\"It's okay. The money's better than I could make doing anything in my major which is pretty much nothing.\"\n\nKirk laughed again and Aimee asked how long he'd been singing.\n\n\"That's complicated.\"\n\nShe smiled then said, \"If you weren't married, I'd ask you to tell me about it after the show.\"\n\nKirk didn't say anything but Aimee added, \"For the record, I don't date married men. Ever.\"\n\nIt was said in a friendly way, and as she walked off the stage with just five minutes to go, Kirk found himself realizing she'd done something to him no other woman had done since before his wife died. With no one else around, he made a quick adjustment 'down there' and laughed when he thought about wishing he'd worn jeans for the heavier denim material.\n\nKirk hit the restroom and got back with less than a minute to spare. Aimee had returned and the moment she saw him said, \"I was worried you got a case of cold feet.\"\n\n\"No. Just a case of...over-40 bladder.\"\n\nShe laughed then asked if he was ready.\n\n\"Ready or not, right?\" Kirk said as he strapped on his guitar.\n\n\"Just stand beside me, and I'll do the rest, okay? Except the singing. You do all of that because I'm not so good at it!\"\n\nThe curtain started coming up, and Kirk had a momentary pang of nervousness, but by the time it stopped moving, the anxiety was replaced with a sense of deja vu, and he told himself, \"I can do this.\"\n\nAimee grabbed the mike and began introducing their guest. After saying his name, she said, \"Ladies? Is this guy hot or what?\"\n\nThere was a crescendo of calls that ranged from, \"Hell, yeah!\" to, \"Woot, woot!\" and a couple of others that made Kirk think about having groupies.\n\n\"So without further ado, I give you...Kirk Nelson!\"\n\nKirk smiled, waved, then thanked everyone for being there.\n\n\"It's been a little while since the last time I played on stage, but I'm really looking forward to it. I hope you'll enjoy it as much I know I will.\"\n\nWith that, he turned around, plugged the guitar in, then let it rip. \n\nThe unmistakeable chords from a Mark Knopfler song called Money for Nothing shook the room and the crown went crazy. Men grabbed women while women grabbed men. A couple of women even grabbed other woman, and by the time he finished playing the opening riffs, the entire joint was rocking and rolling.\n\nKirk couldn't see Jerry or Aimee who had other, bigger fish to fry, but both of them had huge smiles on their faces as Jerry saw dollar signs and Aimee thought, \"If he was single...\"\n\nWhen the last notes played, the applause and whistles were as loud as the music had been.\n\nFeeling confident, Kirk played another oldie from the classic rock era called All Along the Watchtower by the late Jimi Hendrix. It was hard to make out faces to tell how old the people listening were, but whatever their ages, they were up again and 'getting down'.\n\n\"Thank you!\" Kirk said after another huge round of applause. \"We're gonna slow it down a little now, folks. So if you've been looking for a reason to get up close and personal with that special someone, here's your chance.\"\n\nHe picked up the cowboy hat then sat down on the stool on stage and started playing the song he'd sung for Jerry.\n\nThere wasn't any hooping or hollering, but the dance floor was full as he sang the sad song of lost love. He still couldn't see faces, but he could see dozens of couples dancing cheek to cheek and a few actually dancing around the floor. \n\nHe finished the remainder of the set then apologized for taking a short break but got another huge burst of applause for which he sincerely thanked them. He set the guitar down and headed off stage only to find Aimee there waiting for him.\n\n\"Wow,\" she said, a huge smile on her face.\n\n\"It was okay?\" Kirk asked.\n\n\"Okay? Ha! Handsome and modest. If you weren't married...\" she said with a little laugh.\n\nKirk had been smiling but stopped, and Aimee felt terrible and tried to apologize.\n\n\"Kirk. I didn't mean to offend you. I know my sense of humor isn't always the best, but I honestly didn't mean anything by that.\"\n\n\"No. It's...it's fine,\" he told her as he tried to force a smile while he walked on by in order to get something cold to drink without alcohol in it.\n\nThe second set was even better received as the clientele had a few more drinks in them, and Kirk continued mixing it up with hard, soft, country, and a Joan Baez ballad called The Night They Drove Old Dixie Down.\n\nAimee was crazy busy, but even so, she still felt terrible for whatever she'd said to either make Kirk angry or disgusted, and she promised herself she'd try and make it right when he finished.\n\nShe was dealing with a customer issue when Kirk said, \"Ladies and gentlemen. This will be the last song for the night, so again, we're gonna slow things back down.\"\n\nHe paused then quietly said, \"I lost my wife, Kellie, three years ago, and I honestly believed I'd never love again. But this song really hit me one day not that long ago, and it also served as the inspiration to quit my day job and get me back out here.\" \n\nHe smiled then said, \"And who knows? Maybe with a little more time and some luck, even I might be able to try and love again one of these days.\"\n\nAimee gave up trying to solve the problem and told the man who was complaining his drinks were on the house. She didn't hear his response. All she heard was Kirk sharing the worst thing that had ever happened to him and feeling even worse now that she knew the truth.\n\nAnd when he began singing, she found herself tearing up. But when he sang, \"I'm gonna try and love again,\" she started crying. She cried because she'd been in love herself, and he was the only man she'd ever loved. In fact, she'd been so in love that when he asked her to marry him she'd said 'yes' without hesitation. \n\nBut with a little less than two months before her wedding, that man was killed while riding his motorcycle by a car driven by a man who said he never even saw the bike when he pulled out in front of it. His car's rear quarter panel was a mess, but he walked away without a scratch, but the motorcycle rider hadn't been so lucky.\n\nThat had been almost 18 months ago, and she, too, was finally ready to try and love again but was in no hurry to do so. But as she stood there listening to this very handsome, older man sing as though he were singing to her and her alone, tears streamed down her face.\n\n\"You okay?\" she heard her uncle ask when he saw what was going on.\n\n\"Yes. I'm okay. It just really hit me.\"\n\nHer uncle put a hand on her shoulder and told he understood.\n\n\"I...I should go clean myself up before Kirk finishes,\" she said, but found herself unable to move until the last note was played.\n\nAs Kirk bowed and thanked everyone again, Aimee made her way to the private restroom in the back and did her best to 'fix her face'. The puffy, bloodshot eyes were going to need some time, but at least the mascara streaks were gone.\n\nShe took a last look at herself, sighed, then turned around to try and find Kirk only to be accosted by someone who'd had a few too many.\n\n\"I saw you lookin' at me tonight, honey,\" the drunk, older man said as he tried to touch her hair.\n\n\"Sir! Do not touch me!\" Aimee said as firmly as she could.\n\n\"Oh, come on now, baby! I'm not blind!\"\n\nWhen he reached out a second time, a hand appeared out of nowhere grabbing his wrist and turning it in a way that made the man scream as he fell to his knees.\n\n\"Can we call you a cab?\" the man behind the hand asked.\n\nAimee realized it was Kirk, and when he looked at her she smiled as he effortlessly held the other man in check.\n\n\"Let go, asshole! You're hurting me!\" the inebriated man yelled.\n\n\"Tell you what. You apologize and I'll let you go.\"\n\n\"Jesus! I'm sorry, okay?\" the man whined as the pain in his wrist lessened then ended.\n\nHe was tempted to say that Jesus didn't need the apology but didn't. Kirk let go, helped the man up, then asked if he needed a cab.\n\n\"Yeah. That'd be nice,\" he slurred without looking at either Kirk or Aimee who called to someone to get him a ride.\n\nAs the drunk staggered away, Aimee looked up at Kirk and said, \"Thank you.\"\n\n\"You're welcome. Are you okay?\"\n\n\"Yes. I'm fine. Mostly.\"\n\n\"Did he hit you?\"\n\n\"No. It's...it's what I said earlier. To you.\"\n\nShe stared at him with a sympathetic look on her face and said, \"Now I understand how I offended you, and I'm really sorry, Kirk.\"\n\n\"You didn't offend, Aimee. You caught me off guard a little, but you didn't offend me. At all.\"\n\n\"Promise?\" she asked, relieved, and a small smile back on her face.\n\n\"I promise.\"\n\nHe went to excuse himself when Aimee said, \"Kirk?\"\n\nHe stopped and looked at her while waiting to see what she wanted to say.\n\n\"I was wondering if maybe you'd like to have that drink now. And...if you feel like talking...\"\n\nHe knew she'd heard him but nevertheless said, \"I take it you heard me mention my wife.\"\n\n\"I did, and I'm so sorry. And for what it's worth I cried through the entire song.\"\n\nKirk smiled then jokingly asked if it was really that bad.\n\n\"No! It...it was...wonderful.\"\n\n\"Thank you, and I'm sorry I made you cry.\"\n\n\"You didn't make me cry. Your voice is incredible! The song made me cry. Or rather the memories it evoked.\"\n\n\"I sense a tragedy in your life, too. Am I right?\"\n\n\"If you'll let me buy you that drink, I'll tell you,\" she replied, an actual smile back on her very pretty face.\n\n\"Tell you what. If you'll let me use the restroom\u2014again\u2014I'd like that.\"\n\n\"I can probably wait that long,\" she told him in a very sweet-sounding voice.\n\n\"Then I'll be right back.\"\n\n\"Promise?\" she said again just as sweetly.\n\nHe tipped the cowboy hat he was still wearing and said, \"Yes, ma'am.\"\n\nAll of the patrons were gone by the time they sat down, and the silence was deafening. In fact, the only sounds were those of two people sweeping up and stacking chairs. Jerry stopped by to tell Kirk one more time what a huge hit he'd been and let him know he couldn't wait to see him play again. \n\nSince it was now after midnight, he laughed and said, \"Later today!\"\n\nAimee said she agreed as she got their drinks which turned out to be cranberry juice for her and a diet Coke for Kirk. \n\n\"We can sit in my office if that's okay.\"\n\n\"Oh. Sure. That sounds fine.\"\n\nThe office was small but clean, and there was a love seat in front of Aimee's desk. She suggested they sit there and talk, so Kirk moved to one side as Aimee took the other.\n\n\"I just wanted to say again how much I enjoyed listening to you play, Kirk.\"\n\n\"Thank you. It's been long time, and I'd forgotten how much I enjoy it until tonight.\"\n\n\"May I ask how long?\"\n\nKirk laughed then said, \"Oh, about 20 years. Give or take.\"\n\n\"Oh my. Let's see. I was...seven years old then,\" Aimee said with a laugh of her own.\n\nKirk raised an eyebrow and shook his head.\n\n\"What?\"\n\n\"I don't know. I was just thinking how I was 22 back then, so...\"\n\n\"Hey. That was then and this is now,\" Aimee said as though she were schooling him but not in some kind of patronizing way.\n\nIt was said so pleasantly that Kirk laughed again and told her he agreed.\n\n\"May I ask about your wife?\"\n\nThis question was asked gingerly, and Kirk appreciated that.\n\n\"Sure. Her name was Kellie, and I met her in a place like this. I was a little younger and I dressed a little different back then than I did tonight, but I was playing and she was sitting there listening and...\"\n\nKirk smiled at the memory then looked at Aimee and said, \"Looking at me. And smiling.\"\n\n\"Did you smile back?\"\n\n\"All night long.\"\n\n\"Did you ask her out that first night?\"\n\nKirk told her he did then spoke for maybe five minutes going over how they fell in love, their marriage, the years they had together, the huge change in their lives when he became a CPA, and finally, how he lost her.\"\n\nWhen he finally looked back over at Aimee, she had tears in her eyes again, and Kirk apologized as though it was somehow his fault.\n\n\"No. It's fine. I just feel so bad for you.\"\n\n\"If you've lost someone, too, then you can empathize,\" he replied, sensing she had.\n\n\"I have and I can. Before that I could only sympathize, but after I lost my fianc\u00e9, I can empathize.\"\n\n\"I wish you weren't able to, Aimee,\" Kirk told her sincerely.\n\n\"Me, too,\" she said sweetly with a sense of resignation, knowing the past couldn't be changed or undone.\n\n\"Do you feel like telling me about it?\"\n\nKirk's question was also carefully spoken, and while Aimee agreed to share her story, she warned him she wasn't as strong as him and might cry again.\n\n\"No worries. I lost track of how many times I cried that first year,\" Kirk quietly replied. \"But it was a lot.\"\n\n\"I was only engaged, but you were married for all of those years. I...I really can't imagine.\"\n\nKirk didn't respond, he just turned her way a little, pulled one knee up on the small couch then waited.\n\nAimee essentially recounted the same things from how she met him\u2014with 'him' being named Dennis\u2014until the motorcycle accident. She teared up but didn't cry as she shared her own life's greatest tragedy.\n\n\"I was a little...wilder back then. I knew he rode a motorcycle from the day we met, and while I knew it was dangerous...\"\n\n\"So was he, right?\" Kirk asked with a knowing smile. \"Dangerous, that is.\"\n\n\"Yes. Definitely. And SO handsome!\"\n\n\"He'd have to be to attract someone as beautiful as you,\" Kirk told her with no hint of flirting.\n\n\"Thank you, and I'm guessing your wife was gorgeous for the same reason.\"\n\nKirk had a ton of photos of her on his phone, many of which he'd scanned into his computer after she died. The quality wasn't great, but it was good enough to show Aimee she was right when he handed her his phone after opening up Photos.",
        "\"I was right. She's beautiful, Kirk!\"\n\n\"Believe or not, she was even more beautiful on the inside.\"\n\n\"I believe you,\" Aimee told him immediately. \"Dennis wasn't like that. Not on the inside.\"\n\nAimee thought for a moment then said, \"It's funny looking back now. I've changed so much, and I'm not sure he and I could even make it together now. But back then, he seemed like the be-all, end-all, and I was head over heels in love with him.\"\n\n\"I'm not sure either of us are true dichotomies as far as the people we are compared to who we were, but we've both changed. I loved the wild and free thing but became a buttoned-down CPA. You were a philosophy major and fell for the...leader of the pack.\"\n\nAimee laughed as Kirk added, \"I'm not sure what that even means, but maybe we're each a little of both.\"\n\n\"Yeah. I suppose there's still some of the old me somewhere inside, but I like who I've become and can't ever imagine going back to my old ways.\"\n\nShe smiled at Kirk then said, \"Although nights like tonight allow me visit there without having to actually return.\"\n\nKirk was surprised at the way those words hit him and got serious.\n\n\"I was thinking the same thing. Being back on stage and seeing people react to my music made me feel...22 again.\"\n\nHe chuckled then said, \"But as you can see, I'm not 22.\"\n\nAimee raised an eyebrow, tilted her head slightly then smiled.\n\n\"You look pretty good to me, Kirk.\"\n\nThose words hit him even harder, but he didn't let it show as he laughed a friendly kind of laugh then pointed at Aimee as he said, \"You see. That was the old you coming out for a second there and seeing the musician in me. You know, the old me.\"\n\nHe looked away for a second, laughed again, then said, \"Or would that be the new me? Or the old, new me?\"\n\nShe liked his sense of humor and laughed again while sitting there looking at him for several seconds then said, \"Maybe. But I think the new me, whoever that is, sees more than the talented musician. And you are very talented, by the way.\"\n\nKirk laughed, thanked her for the kind words then said, \"Thank you, too, for the very pleasant conversation. I think I've enjoyed out little chat as much as any I've had in...\"\n\nHe looked up at the window over his shoulder then back at Aimee before finishing his thought.\n\n\"In many years.\"\n\n\"I was going to say that very thing,\" Aimee told him as she smiled again.\n\n\"Just not as many years, right?\" he replied, getting another laugh.\n\n\"I should probably get going. It's going be after 1am before I get home, and as I said, I'm not 22 anymore.\"\n\nAimee gave him a look and said, \"Yeah, right. You keep trying to convince me you're some...ancient relic...but it's not working.\"\n\nKirk stood up then said, \"You are too kind, Aimee,\" as he offered her a hand.\n\nShe smiled at him, took it, then stood up, too.\n\n\"Thank you for trusting me with the memory of your wife,\" she told Kirk with genuine sincerity.\n\n\"It was just such a pleasure to meet someone I could trust to share it with,\" he told her, noticing that her eyes were locked on his. \"And thank you for the same thing with regard to your fianc\u00e9.\"\n\nThere was a fairly long awkward moment when they stood there looking at one another, neither of them speaking or moving.\n\n\"Sorry. You were trying to leave, and I'm blocking the way out,\" Aimee said as she stepped aside.\n\n\"Right. That is why I got up, huh?\" Kirk asked rhetorically and a little nervously he moved around her.\n\n\"Well, goodnight, Aimee.\"\n\n\"Goodnight, Kirk.\"\n\n\"It uh, it was really a pleasure meeting you.\"\n\nAimee smiled happily then said, \"You, too. I'm still a little surprised at how much we have in common when I wasn't expecting to even talk with you outside of the job requirements.\"\n\n\"Hey, it was a surprise to me, too, Aimee. A very pleasant surprise.\"\n\n\"Yes. Yes, it was,\" she agreed.\n\n\"Well, goodnight,\" Kirk said again.\n\n\"Night, Kirk.\"\n\nHe nodded then moved toward the door when Aimee felt like someone else was speaking for her.\n\n\"Kirk?\"\n\n\"Yes?\" he said, stopping and looking over his shoulder.\n\n\"Would you maybe like to, you know, could be maybe talk again sometime? Outside of the job?\"\n\nKirk's brain processed a terabyte or two of information in a fraction of a second as he again noticed how beautiful Aimee was and coupled it with the maturity-beyond-her-years sense she exuded, as well as with her educational background, and perhaps most of all, how easy it was to talk with her.\n\n\"You know, that sounds pretty...wonderful...to me.\"\n\n\"Yeah? Well, okay. Maybe we can figure out when after you wrap things up tomorrow night?\"\n\n\"I'll look forward to it,\" Kirk told her being saying 'goodnight' yet again.\n\n\"G'night, Kirk!\" Aimee said one more time as he walked away, aware that she was feeling other emotions that surprised her; emotions related to this very attractive older man with the incredible voice who could still bend a guitar string in a way that made her feel alive again.\n\nKirk saw Jerry again on the way out and used a different version of his previous line. \n\n\"See you in a few hours, Jerry!\"\n\nThe GM got up and walked over to him and said, \"Hey. I just wanted to let you know that my niece went through some pretty rough times a few years back. She's a really great girl, but she doesn't open up to people, so please understand if she comes across as all business.\"\n\n\"Oh. I...okay. Thanks,\" Kirk replied, not sure what else to say.\n\n\"She's a really good kid, she just needs to meet someone new she can fall in love with.\"\n\nJerry shook his head then apologized.\n\n\"I'm not sure why I brought that up. I know she's way too young for you, or maybe you're way too old for her, so it's not like...\"\n\nHe stopped talking for a moment then said, \"Never mind. I'm just glad to have you here. I haven't seen this kind of money in...since we opened up.\"\n\n\"Same here, and I'm real happy about you doing so well tonight,\" Kirk told him before saying 'goodnight'.\n\nAs he drove home, Kirk's emotional high faded when he thought about what Jerry had just said.\n\n\"You're too old, buddy,\" Kirk told himself. \"You feel 22 again, but you're not. You're not even close. You had a nice time tonight, and Aimee was kind of like icing on the cake with playing for an audience again being the cake. But that's all there is to it. She's a kid, and you're...\"\n\nHe looked in the mirror, squinted, and even in the dark, could see some lines around the corners of his eyes.\n\n\"You're just...old.\"\n\nIt was nearly noon before Kirk woke up, and not having done that in so many years, it freaked him out for a moment when he realized in was already midday.\n\nHe sat up, shook off the cobwebs then laughed as he thought to himself, \"Oh, the life of a carefree musician.\"\n\nHe threw the covers off then made his way to the bathroom to pee and laughed about having had to go so often the night before.\n\n\"You're gonna need some Flomax the way things are going...Grandpa,\" he said to himself as he flushed the toilet before washing his hands and heading to the kitchen for the coffee he so desperately needed.\n\nAs he filled the pot, he thought about the 'grandpa' thing. The truth was he wasn't a grandfather. He wasn't even a father, and that realization made his cute little quip something less than funny. He and Kellie had wanted kids, but they kept putting it off for one reason or another until it was too late. And now, here he was, 42-years old with no kids...and no wife.\n\nThat wasn't a road he went down very often, but as he sipped a first cup of coffee, he couldn't help but feel a little melancholy and perhaps even a little sad. He took a sip then wondered if meeting Aimee might have something to do with the way he was feeling. But he was feeling blue, and that wasn't how he'd felt while sitting in her office where he talked with her about things he'd rarely shared with anyone but his brother. And then he remembered what her uncle told him.\n\n\"It really doesn't matter, though, does it?\" he said out loud when the real reason why he'd stopped feeling good about meeting her hit him. All 42 reasons.\n\nEven though he intuitively knew Aimee was just a warm, friendly person who also happened to be extremely pretty, Kirk still wanted to rehearse a song he'd loved for years. It came out in 1972, and he'd played it back in 1980 as one of the few songs he sang that wasn't classic rock.\n\nIt had a one-word title\u2014\"Amie.\" The spelling was different, but the name was the same, and after finishing a second cup, Kirk grabbed his guitar and sat down. He strummed a few chords that sounded right to him, then went for it. \n\n\"Amie what you want to do? I think I could stay with you for a while, maybe longer if I do...\"\n\nHe had to check the lyrics online at one point to make sure he was correctly remembering them, and once he knew, he played it from beginning to end without a mistake. \n\nIn spite of what he'd just been feeling, he decided he was going to play it that evening and dedicate the song to her no matter what happened. What she did with it was out of his control, but for now, he Kirk was content to play the 'what if' game for a while. And...maybe longer if he did.\n\nHe went over the rest of the second new set he'd rehearsed in case he got hired, and there was no doubt in his mind he could sing and play every one of them. The only question was which song to drop to make room for the new addition. He liked all of them or they wouldn't have been included, but after some thought he made a decision and saved Amie for the last song of the last set.\n\nWhen he arrived to start setting up that evening, Kirk was treated to a very pleasant surprise.\n\n\"Hey, handsome!\" Aimee said the moment he walked in.\n\nKirk smiled and said 'hello' back and asked her how things were going.\n\n\"So far, so good. You?\"\n\n\"Good. Even better now,\" he told her in a way that hinted that she was the reason for the 'better' part.\n\nShe hung out with him as he started setting up and told him again how much she enjoyed his music.\n\n\"Thanks. That means a lot to me.\"\n\n\"In our spirit of honesty, I have to confess I've been looking forward to hearing you sing again all day.\"\n\n\"I hope you won't be disappointed,\" Kirk said with a little laugh as he plugged in the amp.\n\n\"I can assure you that won't happen.\"\n\nWhen Kirk smiled Aimee smiled back.\n\n\"I also have another confession to make,\" she said.\n\n\"Oh?\"\n\n\"Yes. I was kind of...thinking about...you.\"\n\nKirk stopped doing what he was doing and again said, \"Oh?\"\n\n\"Uh-huh. Pretty much all day.\"\n\nHe smiled again then said, \"I had no idea you were a masochist.\"\n\n\"Ha-ha! Make fun if you like, but it's the truth.\"\n\nHe got a little more serious then said, \"Speaking of the truth, I kind of thought about you today, too.\"\n\n\"Really?\"\n\n\"I even have a song I plan to dedicate to you.\"\n\n\"Kirk. That is so...\"\n\n\"Aimee? Where the hell are you?\" Jerry hollered out.\n\n\"On stage!\" she called back.\n\n\"What? What are you doing up there when I need you out on...\"\n\nHe saw her and Kirk then shook his head.\n\n\"Ah. Okay. Now I understand,\" her uncle said as he climbed the stairs and shook Kirk's hand.\n\n\"Well, that makes one of us,\" Kirk said after the handshake.\n\n\"Uncle Jerry? Don't you dare!\" Aimee said as she saw him opening his mouth.\n\n\"Okay, but only if you get back to your job. One for which I am paying you quite well.\"\n\n\"Quite well. Ha!\" she said with a flip of her long hair that made Kirk smile and her uncle shake his head.\n\nAimee turned to leave then smiled at Kirk and told him she was looking forward to hearing the song then walked away.\n\n\"What song?\" Jerry asked.\n\n\"Oh. Just a little something I thought would make your niece smile.\"\n\nKirk smiled when he said that but Jerry didn't.\n\n\"Just be careful, okay?\" Jerry said rather sternly.\n\n\"Um...okay?\" a surprised Kirk replied.\n\n\"Much to my chagrin, Aimee seems to...think very highly of you, Kirk.\"\n\n\"How so?\"\n\n\"She didn't say much last night or when she came in today, but it's what she did say that concerns me.\"\n\nKirk had gone back to setting up and didn't ask what Jerry meant.\n\n\"She...she seems to really like you, Kirk.\"\n\n\"I like her, too.\"\n\n\"No. Not like that. I think Aimee...really likes you. As in...likes you.\"\n\nKirk stopped again and felt his pulse quicken.\n\n\"Really?\"\n\n\"Yes. Really. And I don't want to see her get hurt again. You understand that, right?\"\n\n\"Of course. I wouldn't want that, either.\"\n\n\"Whew! Good. I don't know why I was so worried. I knew you were a decent guy, but I kind of look out for my niece, you know, and in case you hadn't noticed, she's a very pretty girl.\"\n\n\"I noticed,\" Kirk replied in a polite way.\n\n\"It's obvious she's way too young for you, and now that we've talked, I know you don't think of her...like that. But I did want to at least mention it.\"\n\nKirk didn't comment and Jerry added, \"A father figure can't be too careful, right?\"\n\n\"No. I don't suppose he can,\" Kirk replied, a forced smile accompanying his words along with feeling crestfallen. \n\nJerry also walked offstage, and Kirk reminded himself he already knew what his current boss had just said. But after talking to Aimee what her uncle said still hit him hard. For now, though, he needed to finish getting ready, and he had a job to do for the next three hours.\n\nAimee appeared again a couple of minutes before the curtain went up, and when Kirk didn't return her smile she asked if he was okay.\n\n\"Sure. I'm fine. I think I just needed a dose of reality. That's all.\"\n\nAimee gave him a puzzled look then asked if he was ready.\n\n\"Yeah, sure. Let's do this!\" he said as he tried his best to smile with no luck.\n\nAimee's introduction was even better than the previous night as she raved about Kirk's Friday performance. \n\n\"And for anyone who was here last night, you won't be listening to the same songs. Kirk has a whole new playlist for us, and if you're as excited about hearing him sing as I am, give it up for Mr. Kirk Nelson!\"\n\nThe place was nearly packed as word spread quickly about an amazing new singer in town. A 42-year old 'new' singer who'd played all around the city 20 years before and who was as good as ever. \n\nThe applause was just what Kirk needed to fire him up and remember why he'd quit his very lucrative job in order to play again. He thanked Aimee then told the audience he hoped they'd enjoy the show.\n\nHe turned around, and with his back to the room played the opening riff to Magic Carpet Ride and the room went crazy. People were up and dancing in seconds and 'gettin' down' to the kind of music he used to play.\n\nHe turned around, looked at the audience, then roared, \"Why don't you come with me little girl\u2014on a magic carpet ride!\" and got another round of 'woos!' from the women and a couple of 'hell yeahs' from the men.\n\nEnergized, Kirk tore it up for another 40 minutes before taking his first break. He hadn't even set his guitar down when Aimee appeared beside him.\n\n\"Oh, my gosh! You are rockin' it!\" she said, a huge smile on her face.\n\n\"Oh, good. It seemed like they were liking it okay.\n\n\"Okay? They were loving it!\" she told him. \"Me, too!\"\n\n\"I know the place is mostly country, but you really think my stuff is working?\"\n\n\"Oh, it's working. Trust me, okay?\"\n\nKirk's good mood took a hit when he remembered his conversation with Jerry. He looked away to avoid Aimee's stare then said, \"If you'll excuse me.\"\n\n\"Oh. Sure,\" she said as she stepped aside while Kirk passed her without speaking or even looking her way. \n\nIt hurt her for a moment, but she told herself he probably just really needed to use the restroom again.\n\nShe quickly let it go as she recalled the song she'd enjoyed so much. She turned around as though she were facing the audience then played the air guitar as she growled, \"Well, you don't know what we can find. Why don't you come with me little girl, on a magic carpet ride.\" She growled but sang quietly enough that no one would hear her as she lowered her head and let her long hair fall then threw it back like a female rock star. \n\nBut just as suddenly as she began, she quit. And the reason she did was that she remembered the special song Kirk promised he was going to sing for her. That thought made her smile, and she couldn't wait to hear it or see Kirk again.\n\nAimee stayed there and waited for him until he returned. But like before, he seemed brusque and almost terse as he said, \"Excuse me. I need to get ready for the next set.\"\n\n\"Oh. Sure. I'll uh, I've got stuff to do, too,\" Aimee replied, now wondering what was going on.\n\nAimee took care of a couple of things that had to get done, but rather than listen to the second set, she went to her office and closed the door. It was embarrassing to admit that she was hurt by the cold shoulder, but the truth was, it did hurt. She sat there just staring into space when she heard a tap on her door.\n\n\"Aimee? You in there?\"\n\n\"Um, yes. Just a second, Uncle Jerry.\"\n\nShe checked to make sure her teary eyes hadn't bled into her mascara then told him to come in.\n\n\"We've got a packed house tonight. What are you doing in here?\"\n\n\"Oh. Sorry. I just needed a minute.\"\n\n\"For what?\"\n\n\"It's nothing. Just personal stuff,\" Aimee said, trying to sound convincing as she made herself smile\u2014unconvincingly.\n\nHer uncle sized her up then asked, \"Is it Kirk?\"\n\nHis niece looked away so fast that it answered his question.\n\n\"That sonuvabitch! I told him not to try anything with you! I'll fire his ass right now!\"\n\n\"Wait. No. You don't understand!\" Aimee said, pleading as her uncle turned around, his face screwed up in anger.\n\n\"Oh, trust me. I understand. The aging rocker gets a gig and hits on the pretty, younger girl thinking he can still pull that shit. Well, let me tell you, it ain't happening here!\"\n\n\"Uncle Jerry! Stop! Just...stop.\"\n\nHe did stop but he didn't turn around as Aimee walked up behind him.\n\n\"He didn't try...or do...or say...anything.\"\n\n\"Then what's going on, kiddo?\"\n\nJerry turned around and could tell his niece was tearing up and asked her the same question again.\n\n\"It's...nothing. Just a misunderstanding.\"\n\n\"Aimee? You're my niece and I love you. So if this...dirtbag...said something to you, just tell me.\"\n\nShe turned around and grabbed a tissue off her desk then tried to explain.\n\n\"It's not him.\"\n\n\"Then what is it? What's going on?\"\n\n\"I...I kind of...I think I was maybe, you know...flirting with him a little.\"\n\n\"Hold on. Your really do like this guy? I had the impression maybe you did, but I...I didn't really think it could be true.\"\n\nAimee was losing the battle as her mascara began running down her cheek.\n\n\"I don't know. Maybe.\"\n\n\"I don't understand.\"\n\n\"I don't, either. I just know that he and I...we...we connected. We really connected. And I thought maybe there was, you know, something more there. But he was just so...cold when I saw him. I was so happy and couldn't wait to see him and thought he'd feel the same way, but it was like I suddenly had leprosy or something.\"\n\n\"Oh, no,\" Jerry said once he realized what was going on.\n\n\"Oh no what?\" Aimee asked as she finished drying her eyes.\n\n\"I...I may have kind of made a big deal out of him not...hitting on you.\"\n\n\"What? Why would you say that to him?\"\n\nHer uncle stood there just staring at her, not knowing what to say.\n\n\"I got overprotective, okay?\" he finally mumbled.\n\n\"Uncle Jerry. I'm 27 years old! I love you, too, but I am not a child and I don't need to be protected!\"\n\n\"I'm sorry, Aimee. I...I'm just sorry.\"\n\nNow Aimee felt bad for her uncle and hugged him as she told him it was okay.\n\n\"Just don't try and decide how I should live my life, okay?\"\n\n\"I won't. I promise. Do you...forgive me?\"\n\n\"Of course I forgive you.\"\n\n\"I can talk to Kirk if you'd like me to.\"\n\n\"Thank you, but that's okay. Now that I know what's going on, I understand why he reacted the way he did.\"",
        "Still feeling protective, Jerry sighed then said, \"Okay. Just one more concern. I...I don't want to see you fall for the wrong guy.\"\n\n\"And you're saying Kirk is the wrong kind of guy?\"\n\n\"Sweetie. He's...my age.\"\n\n\"He's 53?\" Aimee asked with a look of shock on her face, remembering how Kirk had said he was 42.\n\n\"Okay. I don't know exactly how old he is, but he's...older than you. A lot older.\"\n\n\"I know he's older, but he's really nice. And I enjoy talking to him. Is there anything wrong with that?\"\n\nJerry put his hands on his niece's shoulders, smiled, then told her, \"No. There's nothing wrong with that.\"\n\nAimee smiled back then said, \"Thank you, and for the record? Older or not, if he and I talk some more and if he...asks me out, I might say 'yes'.\"\n\nHer uncle sighed then said, \"I don't have to like it, but I promise I won't stick my nose in your business again.\"\n\nAimee laughed then told her uncle he shouldn't make promises he couldn't keep.\n\n\"Ouch!\" Jerry said before admitting she was right.\n\n\"I'm gonna go touch up my mascara then get back to work. You should probably do that, too.\"\n\nKnowing she meant 'get back to work' but trying to be funny, her uncle said, \"I don't have any mascara, so I may have to borrow yours.\"\n\nAimee gave him a look then said, \"Ha, ha. Very funny.\"\n\n\"It was kinda funny,\" her uncle tried telling her.\n\n\"Stick to running this place. You'd never make it as a comedian.\"\n\nAimee was inundated putting out fires until the second set ended. She wanted to touch base with Kirk and try and smooth things out but problems kept popping up one after the other to include a near fight between two wanna-be cowboys who'd had a few too many.\n\nBut Jerry found a moment to catch his new, hot act during a short break, and asked if they could talk.\n\n\"Yeah. Sure,\" Kirk told him as he sipped some water to cool his throat.\n\n\"Look. I uh, I was out of line about...my niece.\"\n\n\"It's your place, Jerry. If that's a line you don't want me to cross, then I'll honor that.\"\n\nJerry ran a hand through his thinning hair, sighed again, then said, \"If it was up to me, that would be a 'red line in the sand'. But...it's not up to me, and well, I get the feeling Aimee really does like you.\"\n\nKirk did a little head shake then said, \"What was that?\"\n\n\"Just be nice to her, okay? Poor kid has gone through so much, and she may have kind of...I don't know, maybe a...rock-and-roll crush on you or something. If that even makes any sense, you know, considering she's 27 and you're what? About 50?\"\n\nKirk winced then said, \"I'm 42. But...thanks?\"\n\n\"Sorry. Look. I'm terrible with ages, and when it comes to women, I won't even guess.\"\n\nKirk laughed then said, \"Good idea because there's no winning either way.\"\n\n\"I know, right? If you guess too low they're mad. If you guess too high they're...\"\n\nKirk's eyes moved and he started to stand up, indicating someone else was there.\n\n\"Aimee. Hi,\" Kirk said, a warm smile on his face.\n\n\"Hi,\" she said in a sweet kind of way.\n\n\"I uh, I'll talk to you later, Kirk. And I'll have a check for you after the show tonight.\"\n\n\"Oh, right. Yeah, can't forget about that!\" he said, as he recalled the amount he'd be receiving.\n\n\"Hey, it'll cover the cost of dinner.\"\n\nJerry looked at his niece then said to Kirk, \"For two.\"\n\nAs he walked away, Aimee asked Kirk what was going on.\n\n\"Just...clearing things up.\"\n\n\"He told you, didn't he?\" Aimee asked, a look of embarrassment on her face.\n\n\"Told me?\" \n\nKirk didn't want to have to admit that her uncle had 'dimed her out', so he played dumb.\n\n\"He didn't...you didn't talk about...me?\" she asked.\n\nJerry's head popped back in just long enough to say, \"One minute warning!\"\n\n\"I should grab my guitar,\" Kirk told her, happy not to have to get into it.\n\n\"Right.\"\n\nThe way Aimee smiled at him told him everything he needed to know. Jerry was right. Well, she may not be crushing on him, but it was clear that she was at least interested in him. It might be nothing more than a shared love of music, but something told him it might be a little deeper than that.\n\nAimee started to leave when Kirk called her name.\n\n\"Yes?\" she responded, turning around and smiling again.\n\n\"I uh, I was wondering if we might...if you'd like to...do you want to get another drink or something after?\"\n\nThe smile got even bigger as she said, \"I'd like that!\"\n\n\"Yeah? Okay then. I'll look you up when I finish.\"\n\nShe went to leave again when Kirk said, \"Don't forget about the song I mentioned.\"\n\nShe turned back around, tilted her head a bit then said, \"Song. You mentioned a song?\"\n\nHad she not smiled Kirk might have believed she'd forgotten.\n\n\"I did. A song that makes me think of you now.\"\n\n\"K,\" Aimee said very sweetly as the curtain opened just as Kirk was picking up his guitar.\n\nHer string of problems slowed down, but Aimee was still quite busy during the final set. But she wasn't too busy to take note when Kirk finally mentioned he was getting ready to sing the last song of the night; a song he was dedicating to someone he'd recently met and had made quite an impression on him.\n\n\"The spelling isn't the same, but the name is the same nevertheless, so...Aimee...this is for you.\"\n\nAimee's heart was pounding in her chest when she heard her name. It beat even faster once Kirk began singing. She heard every word, but none of them registered except for the chorus:\n\n\"Amie, what you want to do? I think I could stay with you, for a while, maybe longer if I do.\"\n\nIt was one of those songs she'd heard before, mostly because of her name, but one she'd never paid attention to. She had no idea what the song was about other than some guy who liked a girl named Amie and who wanted to stay with her. At least for a while or maybe longer.\n\nWhat also struck her was how romantic she found this. For her, romance had always seemed so complicated and...unnecessary. She'd always assumed it was much ado about nothing without ever realizing the lack of romance was due to the kind of men to whom she was attracted. Now, for the first time, she wondered if romance, and even love, was a lot simpler and easier to understand than she'd led herself to believe.\n\nMaybe it really was boy meets girl, boy treats her nice and makes her feel special, and they fall in love. But without the danger she'd always craved how could it possibly be any fun? If there wasn't anything to make her heart race how would she know it was even love?\n\nBut what really hit her hard was the way her heart was beating, and in a way, answering her own question. A question, which if answered, only raised another one. How could a man that much older than her possibly be right for her no matter how he made her feel?\n\nThe adrenaline mixed with the endorphins or whatever chemicals her brain was dumping into her body made her feel out of control once they were mixed in with the confusion her follow-on question brought.\n\nShe saw Kirk waving to the crowd and thanking them as they cheered wildly, but it as though she were an observer from another world seeing and hearing but not actually there. At least until her Uncle Jerry nudged her back to reality.\n\n\"I think someone may be sweet on my niece,\" he said loudly enough for Aimee to hear but not so loud anyone else might.\n\n\"What?\" she said as she turned his way. \"No. It's not...he doesn't. It was just a coincidence. You know, same name, fun song. That's all.\"\n\nJerry put a hand on her shoulder and said, \"Okay. Keep telling yourself that. But just because I promised not to meddle, that doesn't mean I'm still not concerned. So...be careful, okay, hon?\"\n\n\"Oh. Sure,\" Aimee said as she turned back to find Kirk who was on his way toward her.\n\nJerry shook his hand, congratulated him, then reminded him about the money.\n\nKirk laughed and told him to just open a bar tab for him, and Jerry shot a 'finger gun' at him to indicate he would.\n\n\"So?\" Kirk asked as Aimee looked up at him aware that it hadn't gotten much quieter.\n\n\"I...that was...really amazing.\"\n\nHe smiled then said in a way that made her tremble, \"Well, I think you're amazing.\"\n\nThe emotional knot inside her twisted itself even harder, and just as she got ready to speak, someone called to get her attention.\n\n\"Be right there!\" she told the man who wanted another drink.\n\n\"Sorry,\" she then said to Kirk who told her he understood.\n\n\"Is it okay if I wait for you? In your office?\"\n\n\"Oh. Yes. That's...that's fine,\" she told him as the man said, \"still need a drink over here!\" \n\nAimee nervously turned around to find someone to take care of the man's request, and as childish as it seemed, to get away from Kirk so she could think.\n\nWhile Aimee did her thinking, Kirk was doing some of his own as he sat down in her office and looked around. He knew Judd rarely went to bed before 1am, so he took a chance and gave his brother a call.\n\n\"Good morning,\" his brother said as he answered the call. \"Is everything okay?\"\n\n\"Yeah. Things are actually pretty great.\"\n\nJudd laughed then said, \"What's her name?\"\n\nKirk chuckled then told him.\n\n\"Aimee. Like the song,\" Judd offered.\n\n\"Almost. My Aimee spells her name differently, but other than that, yes.\"\n\n\"Your Aimee. Is this serious?\"\n\n\"No. Not at all. It's just that she's made me think I... No. She's made me believe I really can try and love again.\"\n\n\"You're not saying she's the one. You're saying she's like...a muse?\"\n\n\"Maybe. She does inspire me, so I suppose 'muse' fits.\"\n\n\"Is she the sole source of your newfound happiness?\"\n\n\"No. Just a big part of it.\"\n\n\"What else is going on?\" Judd asked.\n\n\"The music. I just finished my second night and I gotta tell you, this just...feels right.\"\n\n\"Then I'm happy for you.\"\n\n\"Yeah. Thanks. Me, too.\"\n\nKirk thought for a second then asked how things were with Judd and work.\n\n\"Same old thing every day,\" his big brother replied.\n\n\"I could use a drummer.\"\n\nJudd laughed before saying, \"Don't tempt me.\"\n\n\"Just a thought.\"\n\n\"If I didn't have kids to put through college...\"\n\nThe door to the office opened before Judd could finish his thought as Kirk said, \"Speaking of Aimee, I'm in her office, and she just walked in.\"\n\n\"Got it. I'll let you go. But thanks for calling. I've been a little worried about you.\"\n\n\"Nothing to worry about. Things are goin'...\"\n\nKirk looked at Aimee, smiled, then said, \"Great.\"\n\n\"Well then. Have fun,\" Judd said with a chuckle before his brother said goodnight.\n\n\"Little late for a phone call isn't it?\" Aimee asked as she sat down at her desk.\n\n\"My brother. Judd.\"\n\n\"Older or younger?\"\n\n\"Older. By almost three years. I told him I could use a drummer.\"\n\n\"I take it he plays?\"\n\n\"Not since we played together back in...\"\n\nKirk shook his head in disbelief before saying, \"1980.\"\n\n\"Oh, right. Great year as I recall. Second grade was...amazing,\" Aimee told him as she tried not to smile.\n\nKirk smiled and he laughed.\n\n\"I'd be interested in knowing who's hair was longer back then,\" he said as he laughed.\n\n\"I wore mine to about the middle of my back from the time I was five or so until last year when I had cut to shoulder length, but I'd love to see a photo of you with long hair.\"\n\nAimee smiled at him then said, \"You look so...buttoned down.\"\n\nKirk sighed before telling her he agreed.\n\n\"I thought about letting it grow out and trying to wear something trendy, but that's not me anymore.\"\n\nAimee looked right at him and said, \"You don't need trendy. You just need to be yourself.\"\n\nShe hesitated then added, \"I actually like the way you look. All buttoned down.\"\n\nKirk still had his phone out, and although he was paying attention, he was scrolling through his photos. He found what he was looking for then handed the phone to Aimee.\n\n\"What's this?\" she asked before looking at it and gasping.\n\n\"Oh, my...\"\n\nShe looked at Kirk then back at the photo and said, \"That's you, isn't it?\"\n\n\"A hipster before there were hipsters.\"\n\n\"I would have been all over you,\" Aimee informed him as she continued looking.\n\n\"And I'd have called your parents,\" Kirk said with a smile that made Aimee laugh.\n\n\"Oh, right. I kind of forgot about being...very young...back then.\"\n\nShe handed him his phone back and thanked him for sharing that with her.\n\nFeeling confident, Kirk asked, \"How about now?\"\n\nAimee shook her head a little then asked, \"How about now...what?\"\n\nKirk was so sure she knew what he meant that he took her response to mean 'you've gotta be kidding'.\n\n\"Sorry. Nothing. Just a case of...wishful thinking.\"\n\nAimee really hadn't known what he meant, but the 'wishful thinking' comment made the light come on. And with the realization came a feeling; a very strong, very powerful feeling.\n\n\"Yes,\" she said as she looked at him then broke eye contact.\n\n\"Yes?\"\n\n\"I was answering your question. About being all over you. Now.\"\n\nKirk's light also came on, and just as it did, Aimee looked at him again.\n\n\"I didn't mean it like that, Aimee. Not the 'all over me' part. I just meant that I really enjoy talking to you.\"\n\nKirk no sooner finished saying those words than he began beating himself up for saying them.\n\n\"Oh. I...see,\" Aimee replied. \"You and I. We're...we're what? In the Friend Zone?\"\n\n\"What? No. I mean, yes, we are friends. But I don't just want us to be friends.\"\n\nHe lowered his head for a second then looked at Aimee again and smiled.\n\n\"I'm usually pretty good with words, but I'm having a real struggle saying the right thing here.\"\n\n\"That's okay. I'm having a rough go of it over here, too.\"\n\nShe smiled then said, \"Just so you know, I don't want to be in the Friend Zone, Kirk.\"\n\nKirk smiled and Aimee added, \"But I won't be 'all over you', either.\"\n\nKirk stopped smiling and gave her a kind of puzzled look that made her laugh.\n\n\"At least not right now.\"\n\n\"Many things are worth waiting for,\" Kirk told her, a different look on his face than she'd ever seen before.\n\n\"I agree,\" Aimee replied with a sweet smile of her own.\n\n\"I hope you don't mind, but I kind of mentioned you to my brother.\"\n\n\"Oh?\" she responded, one eyebrow raised a bit.\n\nNow Kirk smiled as he said, \"Yes. I told him that you...inspire me.\"\n\n\"Me? I'm an inspiration?\" a very surprised Aimee Arot said, a puzzled look now on her face.\n\nKirk held up his left hand, on which was a gold wedding band he'd never taken off.\n\n\"Uh-huh. I told him that you've given me hope; hope that makes me believe that it's finally okay for me to try and love again.\"\n\nAimee smiled happily then said, \"Like the song? You know, the first cut is the deepest?\"\n\nKirk told her that was exactly what he meant then quietly began singing it.\n\nWhen Aimee joined in and sang harmony, he was so surprised he stopped.\n\n\"You sing?\"\n\n\"No. Not since...junior high. And mostly just harmony. I'm awful when it comes to the melody.\"\n\n\"You have an amazing voice,\" Kirk said, as he sat up straight in the chair.\n\n\"What? No. I'm not very good at all.\"\n\n\"I have a pretty good ear for music, and I can promise you, your harmony is good. Maybe even very good.\"\n\n\"Do you know 'The Sound of Silence'?\" Aimee asked.\n\n\"Of course.\"\n\n\"My mom and dad used to sing it together. He sang the melody and she sang harmony. I joined in one day and after that, I tried to sing harmony on any song that had it.\"\n\nKirk smiled at her then sang, \"Hello darkness my old friend...\"\n\nWhen he got to the place where harmony was needed, Aimee sang along. Her voice was crisp and clear and on key and in tune.\n\n\"Just...wow!\" Kirk said when they finished the song.\n\n\"So I was...okay?\" Aimee asked with a little shrug of her shoulders.\n\n\"Would you sing with me next weekend?\" \n\n\"I...are you...how could I...\"\n\n\"Maybe just a song or two. I'm sure your uncle would approve. And I know the audience would love you.\"\n\n\"I don't know, Kirk. I'm...I have a serious case of stage fright.\"\n\n\"That'll go away the first time you hear a room go crazy after you sing.\"\n\n\"I don't know. I have a job to do, and...\"\n\n\"You could miss 3-4 minutes a time or two.\"\n\nAimee didn't respond so Kirk said, \"And I kind of have an ulterior motive for asking you.\"\n\n\"And what might that be?\" Aimee asked, even though she was pretty sure she knew.\n\n\"I know I'm...older than you. Okay, a lot older. But as I was saying, you...inspire me. You make me feel hopeful. And like I told my brother, I'm not naive enough to think you're the one, but you give me hope that there might be another someone out there somewhere.\"\n\nAimee didn't tell him she'd looked at his personnel file. It wasn't much of a file. It was just half a page, but she only really cared about one thing, and she was able to learn in in a second or two.\n\n\"I know how old you are, Kirk. And...that doesn't matter to me.\"\n\n\"So were I to, you know, ask you to have dinner with me or...whatever...would you...\"\n\n\"I would,\" she told him, a happy smile on her very pretty face.\n\n\"You would?\" he asked just to make sure he heard correctly.\n\n\"Yes. I'd like that.\"\n\n\"And maybe we could rehearse a song or two sometime this week.\"\n\n\"Maybe we could,\" Aimee replied, a little more coy than before.\n\n\"Is it okay if I call you? Later today?\"\n\n\"Yes. I'd like that, too.\"\n\nKirk got her cell number then said, \"I should probably get going.\"\n\n\"Kirk? I'm glad we talked.\"\n\n\"Me, too,\" he told her with a warm smile as he stood up.\n\nAimee also got up and moved to the side of her desk.\n\n\"So no more Friend Zone?\" Kirk asked as he held out his hand.\n\nAimee saw it and realized it wasn't turned to shake hers but to take it. She looked it for a moment then smiled as she took it.\n\n\"No. No more of that.\"\n\n\"So is it okay if I...\"\n\nKirk knew it was okay and didn't bother finishing the question. He just moved a little closer and bent down and softly kissed her for the first time.\n\n\"You were right,\" she told him when the kiss ended.\n\n\"About?\"\n\n\"Some things are worth waiting for.\"\n\nThat made Kirk smile as he said, \"Yes they are.\"\n\nAimee smiled back then asked, \"May I tell you something?\"\n\n\"Sure. Anything.\"\n\n\"You make me want to...try and love again, too, Kirk.\"\n\n\"I can't say I'd given up hope, but I have wondered many times if I ever would. Love again,\" he said as he ran his hands up the back of her arms.\n\n\"I'm a sucker for musicians,\" Aimee said, a bright smile on her face. \"Especially handsome musicians.\"\n\n\"So I'm the exception to the rule then,\" Kirk said very seriously.\n\nAimee laughed in a way that was nearly a giggle before saying, \"Ha, ha! Like you don't know you're very attractive.\"\n\n\"I'll take your word for it,\" he told her. \"All I know is I feel like I'm playing way, way out of my league.\"\n\nAimee smiled then moved closer and put her arms around his neck.\n\n\"I don't see it that way,\" she quietly said as Kirk held her, too.\n\n\"I told my brother you make me happy.\"\n\n\"That's very interesting because I told my Uncle Jerry the very same thing about you.\"\n\nShe looked up at Kirk then said, \"Among other things.\"\n\nKirk was pretty sure he knew that was the reason Jerry had backed off but didn't mention it.\n\n\"I really should go,\" he told her as he brushed her hair back.\n\n\"If you must,\" Aimee replied as she looked up into his eyes.\n\nKirk kissed her again then told her he must and promised to call.\n\nOn the way out he grabbed his guitar and realized he was smiling. He smiled all the way home, and when he got there, he sat down on the edge of his bed and looked at the golden band on his left hand.\n\nHe stared at it for several moments, then said out loud, \"I'll never stop loving you, honey. But I'm not cut out to live the rest of my life alone. So I hope you understand.\"\n\nHe slid the ring off his finger, and as he stood up to put it in her jewelry box, he told her, \"It's time, Kell. It's time for me to try and love again.\"",
        "After closing the lid, he felt something he could only describe as bittersweet. The sweet part was knowing he was finally ready to move on. But moving on was somehow hurtful, as though he was somehow betraying the only woman he'd ever loved.\n\nHe shook off the feeling and thought, \"It really is time. And if I'm honest with myself, it's not a moment too soon.\"\n\n\"Not a moment too soon,\" he said again to himself only this time he said it out loud.\n\nHe went straight to his guitar, sat down, and without the sheet music in front of him, began playing the Tim McGraw song by that name.\n\nBy the second verse, he had it and sang the entire song.\n\n\"I used to think that love would never find me. And the one who cares was lost somewhere in time. But when you found me I knew I'd found forever. You rescued me just before I crossed the line.\"\n\nAs he sang the chorus, he saw Aimee's face and sang a little louder.\n\n\"And not a moment too soon. With not a minute to spare. You touched my heart, when I didn't have a prayer. In my darkest hour, when my world was filled with gloom. Your sweet love saved me, and a not a moment too soon.\"\n\nHe was smiling again when he finished for obvious reasons, but he'd also found his next dedication song and the one he'd sing to close out the last set on Friday.\n\nThe song so energized him that Kirk spent several hours after he got up choosing new songs for both days. When he finished, he got out his phone and realized he was smiling again as he 'dialed' her number.\n\n\"Kirk? Hi!\" she said as soon as she answered.\n\n\"Aimee. Hi. How are you?\"\n\n\"Good. Maybe even...wonderful.\"\n\n\"Then that makes two of us,\" Kirk told her with a little laugh.\n\n\"Last night was very special, Kirk. Thank you again.\"\n\n\"It was special for me, too, and I have another song I want to dedicate to you this weekend.\"\n\n\"Does that mean I have to wait until Friday to find out what it is?\"\n\nAimee wasn't a pouter and couldn't stand women who were. She wasn't passive-aggressive, either, and also didn't care for people who were. So her question was just a question but asked with a hint of excitement.\n\n\"Sorry, but yes, you'll have to wait.\"\n\n\"Okay. As someone once said, some things are worth waiting for.\"\n\nKirk knew she was smiling and now he was, too.\n\n\"Whoever that was, he or she was very smart.\"\n\nAimee told him she agreed then asked when she could see him again.\n\n\"What time do you go to work?\" he asked.\n\n\"I'm off on Mondays all day, and Tuesdays until 5pm. Otherwise I go in at 1 o'clock.\"\n\n\"Then let's take advantage of the time and do something today.\"\n\n\"I like the sound of that.\"\n\n\"Is it too cold for you to be outside?\" he asked.\n\nIt was 40 degrees in Columbus with an expected high of 45.\n\n\"No. I don't think so. What did you have in mind?\"\n\nKirk mentioned the Columbus Zoo and Aquarium, and Aimee told him that sounded wonderful.\n\n\"When may I come get you?\"\n\n\"Now would be fine,\" she told him with a laugh. \"I was kind of hoping you'd call, and I didn't want to have to spend an hour getting ready when you did. Just in case.\"\n\n\"If you'll give me your address, I'll be there as soon as I can.\"\n\nWith the information plugged into his phone's GPS app, Kirk jumped in his car and headed her way.\n\nHe fired up the Mercedes-AMG GT he'd bought the year after his wife died hoping it would help him forget. The $100,000 price tag meant nothing to him, and he'd plunked down the entire amount in the form of a cashier's check and got two-year maintenance package free for doing so.\n\nIt wasn't surprising that the car did nothing to relieve his grief. It was just a toy\u2014a very expensive toy that made him think of her every time he drove it. But as he hummed along in near silence he realized he wasn't thinking of her. He was thinking about a woman, it just wasn't his wife.\n\nAfter stopping to buy some flowers for Aimee, he hopped back in and turned on the radio. He touched one icon on the digital panel and dialed up Sirius XM then set it to the 60s station and sang along to several oldies before pulling up to the apartment building where Aimee lived. \n\nIt wasn't a bad looking complex and reminded him of his own youth when he was first married and saving to buy a home. He now lived in a shamelessly expensive place that was valued at just over two million dollars, and yet he'd have given it away and moved back into a one-bedroom apartment to have another year with Kellie.\n\nBut she was gone, and he was finally interested in someone else; someone younger than him who was also pleasant, sweet, well-educated, and as beautiful as any woman he could ever remember.\n\nKirk hid the bouquet of carnations behind him as he knocked on the door and waited.\n\n\"Kirk! Hi!,\" Aimee said as she opened the door. \"Come in, please.\"\n\nHe stepped inside as she closed the door, and when she looked at him again, he produced the flowers.\n\n\"These are for you.\"\n\nHer reaction really surprised him as she teared up immediately.\n\n\"I had no idea what kind you like, and these seemed...\"\n\nAimee held the bouquet close with one hand and put the other behind his head as she kissed him.\n\n\"These are perfect. Thank you. I love them.\"\n\n\"Oh...good,\" the confused, older man said.\n\n\"No one has ever bought me flowers before. This is so unbelievably sweet.\"\n\n\"Wait. Never?\" Kirk asked as he followed her to the kitchen.\n\nAimee set them down, dried her eyes, then tried to explain her thoughts on romance and why she'd never really experienced it before.\n\n\"Even with your fianc\u00e9?\"\n\n\"No. Not really. He was good to me, he...he just didn't do romance.\"\n\nKirk moved behind, and as she began trimming the stems, put his hands on her shoulders.\n\n\"I'm a diehard romantic,\" he said quietly as he moved his face closer to hers.\n\n\"I believe you,\" she replied very sweetly. \"You made me cry.\"\n\n\"As long as they were tears of happiness, I won't apologize.\"\n\n\"They were, and again, I love the flowers, Kirk.\"\n\n\"You look amazing, by the way,\" he said as he kind of ran his hands up and down her arms.\n\n\"Thank you. You look very nice yourself.\"\n\nHe started to move away when Aimee asked him where he was going.\n\n\"I wasn't sure it was okay to keep standing there.\"\n\n\"I'll let you know if I get tired of it,\" she said, turning around just enough to smile at him.\n\nKirk moved even closer and this time he wrapped his arms around her waist.\n\n\"That's much better,\" she told him as she kept trimming. \"So what did your brother say when you mentioned me?\"\n\n\"He was happy for me.\"\n\n\"Does he know how old I am?\"\n\n\"I didn't mention your exact age, but I don't think he'd care. Why do you ask?\"\n\n\"Well, I was talking with my mom this morning, and I kind of mentioned that I met someone; someone I really like.\"\n\n\"Uh-huh. And?\"\n\n\"And...I also mentioned this...guy...was older than me.\"\n\n\"And?\"\n\n\"My mom asked me how much older and...\"\n\n\"Did she gasp when you told her?\"\n\n\"No, but it got quiet for a couple of seconds.\"\n\n\"So I shouldn't expect to be going there for dinner anytime soon, right?\"\n\nAimee finished the last stem and laughed.\n\n\"No, but you should expect my mom...and my dad...to be in the audience this Friday.\"\n\n\"But no pressure, right?\" Kirk teased.\n\nShe turned around and put arms around his neck and smiled.\n\n\"My parents never approved of anyone I ever dated. Especially not my fianc\u00e9. Don't get me wrong. They were extremely hurt when they found out he'd been killed in the accident, but I think they were also relieved on some level.\"\n\nShe paused then said, \"I can't help but think they believe I'm making another mistake.\"\n\n\"Can you blame them?\" Kirk asked in a pleasant way.\n\n\"I get it. Parents always want the best for their kids, and after my rather...checkered past where men are concerned...I understand.\"\n\nRather thank talk about something out of his control Kirk asked if she was ready to go.\n\n\"Yep. Just let me get my coat and we can get going.\"\n\nWhen Aimee saw his car she just stood there.\n\n\"This...is...really nice,\" she said as she ogled the Mercedes.\n\n\"Thanks. It was my attempt to feel better after losing my wife.\"\n\n\"Did it work?\" she asked as he opened her door.\n\n\"Not a lick,\" he replied, getting a laugh as she thanked him and got in.\n\nWhen Kirk sat down she told him it was as beautiful inside as it was out.\n\nHe laughed then looked at her and said, \"I agree. It really is beautiful inside...now.\"\n\nAimee understood what he meant, and as Kirk leaned her way, she leaned his and they kissed for two or three seconds in a way that sent pleasant chills through both of them.\n\n\"You brought me flowers, you opened my door, and you complimented me. Twice. You are indeed a very romantic man, Kirk Nelson.\"\n\nHe started the car then asked, \"So I'm doing okay?\"\n\nAimee looked over then said, \"Well, so far anyway,\" as though the jury was still out.\n\nKirk laughed then told her she'd better get used to it.\n\nAimee tilted her head as though she were thinking then said, \"I believe I could live with that.\"\n\nIt was more than a little chilly, even with her coat and gloves, but Aimee forgot about the weather once she and Kirk started talking while walking around and holding hands. He didn't know much about philosophy, and she knew virtually nothing about accounting. And yet they talked for nearly four hours straight with an hour slowdown for lunch. Topics ranged from the weather to losing a loved one and neither had ever met someone as easy to talk to as the other person.\n\nFor Aimee, it was something even deeper. The conversation was like...icing on a cake. In this case the 'cake' was the way she found herself truly attracted to someone who wasn't a bad boy. Even when Kirk was in the band and playing local gigs, he was still the same kind, thoughtful person, and for the first time in her life, Aimee didn't need dangerous.\n\nIn fact, the cake might even be layered with Kirk's romantic nature comprising the base and his thoughtful, caring manner the second. The icing was the way they were communicating. As their first date was coming to a close, Aimee realized they hadn't had a single disagreement on anything. It was possible they'd somehow avoided some topic that would later prove to be problematic or even a deal breaker, but so far, it felt like living in a dream.\n\nWhen they got back to the car, Kirk finally let go of her hand and Aimee told him she'd never held hands that long with anyone in her life.\n\n\"Not even with your fianc\u00e9?\"\n\n\"He wasn't the handholding type. He was more the uh...let's get it on...type.\"\n\nKirk laughed then sang the title of that song.\n\n\"Let's get it on! Come on, baby, let's get it on!\"\n\nThere was a part of her that wanted to tear his clothes off and...get it on...even if that meant doing it in the back seat. But another part of her didn't need that anymore. She was getting exactly what she needed, and Aimee felt something she couldn't never remember feeling. It was a kind of contentment, and it was a feeling that seemed superior to lust and hot, steamy sex. The word 'spiritual' came to mind, and if this what spiritual felt like, she wanted to sign up for it as long as she lived.\n\nAs they drove back to her place Kirk asked if he was still doing okay. With her.\n\n\"You are way beyond 'okay',\" she told him with a smile that warmed his heart.\n\n\"In fact, I can't remember ever having a nicer time. With anyone.\"\n\nKirk started to answer, but Aimee had one more thing to say.\n\n\"I know you had many days nicer than this with your wife, so you don't to tell me it was that good for you or even close to it. I just needed you to know how I feel.\"\n\n\"Okay. Fair enough,\" Kirk replied. \"But I will say that this has been the best day I've had since I learned about my wife's diagnosis.\"\n\nAimee reached for his hand and once she had it she told him why the day was so special to her.\n\n\"In the past, I had this...conception...about what it meant to be in love. And while I honestly believe I was in love before, I had no idea this kind of lo...relationship...was even possible.\"\n\nKirk only smiled as he hoped she might continue.\n\n\"I think that maybe somewhere deep down inside I knew that something was missing. But because I'd decided that the only kind of man who could...scratch my itch...was someone who was...\"\n\n\"Dangerous?\"\n\n\"I was going to say...exciting...but...\"\n\nShe looked over at Kirk then said, \"But today was more exciting than anything else I can ever remember doing.\"\n\nHe raised an eyebrow then gave her an 'are you okay' look which made her laugh.\n\n\"I know how that sounds, but I'm beginning to realize that this is what's been missing from my previous relationships.\"\n\n\"What? Walking around in the cold?\" Kirk teased.\n\n\"No, silly. Substance.\"\n\n\"Substance?\"\n\n\"Yes. Substance. Meaning. Um...maybe...solidity. Or...\"\n\nShe looked over at him again then said, \"I'm not sure I can put it into words, but whatever this thing is I've needed but never had, you provided today.\"\n\n\"And you provided me with something just as valuable,\" Kirk told her.\n\n\"Oh? And what might that be?\" she asked, a warm smile on her chilly face.\n\nHe took a quick second to look right at her before saying, \"Hope.\"\n\nShe smiled but didn't ask what he meant, so Kirk explained.\n\n\"I've felt...hopeful...since my decision to start playing again. But being hope...full is just a concept. It's a positive feeling. But since I met you I've had hope again. Real hope.\"\n\nHe looked her way again then said, \"And that feels pretty wonderful.\"\n\n\"I'm glad, Kirk.\"\n\nHe squeezed her hand then told her, \"And I think you're pretty wonderful.\"\n\nAimee then squeezed his and said, \"You see. That's the thing I'm talking about. You have this way of making me feel...\"\n\nShe wanted to say 'loved' but was afraid he would take it the wrong way. But then, she wasn't really sure how she meant it, and as she looked over at him, she knew there was more to how she felt about him than she was ready to admit.\n\nShe settled on 'special' and got a warm smile in return.\n\n\"You are that, Aimee,\" he told her. \"You're very special.\"\n\nAimee felt her pulse race and told Kirk he was, too.\n\nNow it was Kirk's turn to take a risk.\n\n\"Aimee?\"\n\n\"Yes?\"\n\n\"I...I have feelings for you.\"\n\nAimee's heart pounded as she felt happier than she could remember.\n\n\"Like...pity?\" she teased.\n\nKirk laughed then told her how he felt.\n\n\"I haven't had feelings for any woman since, you know.\"\n\nShe moved closer then reached for his hand and said, \"Would these feelings possibly be...romantic?\"\n\nKirk didn't smile when he answered her. He was as serious as she'd ever seen him when he answered her question.\n\n\"Yes.\"\n\n\"Well that's very interesting,\" she told him as she put her arms around him.\n\n\"Oh?\"\n\n\"Uh-huh, because I have the same kind of feelings for you.\"\n\n\"Oh!\" he said, raising his eyebrows high then smiling at her.\n\n\"This is where you're supposed to kiss me,\" Aimee informed him. \"In case you've forgotten how this works.\"\n\n\"Was that an age comment?\" Kirk asked, trying not to smile.\n\n\"Well, you are old, but...\"\n\nBefore she could finish Kirk lowered his head then tilted it slightly before pressing his lips to hers.\n\nAimee stopped talking and kissed him back so passionately it surprised him. The kiss included a little flicker of her tongue, and by the time the kiss ended, Kirk felt himself 'rising to the occasion' and pulled away slightly to avoid any chance she might notice.\n\n\"You are the most amazing man I've ever met, Kirk Nelson.\"\n\n\"I'm tempted to try and be humorous and tell you you need to get out more, but what you said just made me so happy, I'm going to just say 'thank you'.\"\n\nAimee smiled happily, pulled him to her, then said, \"Yeah, you should stick to singing.\"\n\nShe looked up at him, smiled again, then told him, \"You'd never make a living doing standup.\"\n\nHe pretended to be hurt then laughed.\n\n\"You make me so happy.\"\n\n\"You make ME so happy.\"\n\n\"That makes me happy.\"\n\nIt was her turn, but Aimee wasn't sure what to say next so she started laughing.\n\n\"Hey, does that mean I might have a future in comedy?\" Kirk asked.\n\n\"No, but it does mean...\" She got very serious then looked into his eyes and said, \"It means I might be falling in love with you.\" If Aimee's kiss had surprised him, her words just blew his mind. But before he could say anything she said, \"I'm freezing.\" Grateful for the distraction, Kirk replied, \"Then let's go inside somewhere warm and have a cup of coffee or hot chocolate.\"\n\n\"Hot chocolate? Mmmm. Lead on, dear sir!\" Aimee grabbed his hand then hooked his arm, but Kirk pulled it away but only to put it around her and pull her closer. \"Am I gonna have to buy you marshmallows, too?\" he asked. \"Oh, right. You are a starving artist. Well, a starving...singing artist, but still...\"\n\n\"Still?\" Again, Aimee got serious. \"I honestly don't care about money beyond paying my bills. So please don't take my kidding the wrong way, okay?\" She had no idea how much money Kirk had, and the truth was, she really didn't care. Life had taught her that the old saw about money not buying happiness was true. She'd never had much to speak of and didn't need more. In fact, having a lot of money seemed like it would be a burden in some ways. For now she was having too much fun to think deep thoughts, and she was chilled to the bone, making a cup of hot chocolate\u2014and Kirk's company\u2014the only things she needed or wanted. For the next hour or so, Aimee sipped her way through two cups of warmth while Kirk nursed a large cup of black coffee. They talked the entire time with many meaningful looks during the short pauses. By the time they decided to head home, both of them felt like they'd known the other forever. They knew that wasn't true, but it felt so wonderful to have someone to talk to, laugh with, and who shared so many things in common, that they allowed themselves to believe it. During their back and forth the subject of children came up, and Kirk gingerly probed around the issue after explaining how he and Kellie had often discussed having them. \"Until my perspective on men changed, kids were the last thing on my mind. Having one always seemed like some kind of lifetime sentence.\"\n\n\"And now?\" She smiled at him then said, \"Now that seems like the most wonderful thing on earth.\"\n\n\"I couldn't agree more,\" her older date told her. \"But?\" Aimee sensed he wanted to say something, and that she could tell impressed him. \"I uh, I just realized I might be the oldest dad at ball games or piano recitals,\" he said, smiling to hide his own age-related concerns. \"Someone has to be, right?\" Aimee said with a laugh. \"That wouldn't bother you?\" She got a little more serious herself and tried to explain. \"Had I married any of the guys I ever...liked, and that includes my ex-fianc\u00e9, I'd already be divorced. And miserable.\" Kirk had questions but let her talk. \"But with you, it doesn't seem that way,\" she said rather quietly. \"How does it seem?\" he quietly asked. \"It seems...pretty wonderful.\"\n\n\"You're pretty wonderful, Aimee Arot.\" The way she smiled at him caused another stirring, and Kirk realized he might well be falling in love with her, too. As they drove home they held hands but said very little. It was as though they both needed time to 'digest' everything they were feeling before moving on to something else. And as far as Kirk was concerned, the silence, like the song by Simon and Garfunkel, was as golden as anything he'd ever 'heard'. Aimee's parents were in the audience that Friday night, and while they were more than a little leery about the older man their daughter said she was falling in love with, they left with the realization that Kirk was the kind of man they'd always wanted for their only daughter. Just someone maybe ten years younger or so. \n\n****** \n\nSix months later \n\n\"You ready to go?\" Jerry asked. \"We've got chairs in the overflow room, and I'm expecting a packed house again.\"",
        "\"I am,\" Kirk told him as he thought back on the last half year or so. Since his first weekend Patsy's had been packed every time he played. And playing still made him happy. But there was something in his life that made him even happier than playing and singing. It was actually someone, and that someone was a beautiful, younger woman he was so in love with it hurt. \n\n\"Then knock 'em dead!\" the owner said, already counting the dollars he'd be raking in without having to pay the entertainer who was the source of most of that revenue. As always, Aimee was there working and listening, and as time permitted, stealing glances at the handsome, older man she loved. Between sets she tried to find a minute to spend with him even though though she'd moved in with him a month ago and now spent most of her time with him. The home was beautiful, but even more beautiful was the way Kirk made her feel. Only now could she understand what real love was as compared to the thrill seeking she once thought was love. Kirk was kind, gentle, caring, and an amazing lover. He was also generous to a fault, but Aimee insisted on spending only the money she made even though Kirk told her she could have anything she wanted. \n\n\"I already have everything I need,\" she reminded him before pulling him close and kissing him. Those thoughts and more ran through Kirk's mind as he performed the last set of the night. But as he got to the last two songs, his thoughts moved to something he'd managed to mostly block out in order to perform at his best for the very appreciative crowd. \n\n\"Ladies and gentlemen. We have two songs to go,\" Kirk said into the microphone. \"And I'm dedicating them both to the woman I love.\" \n\nAimee was helping someone but stopped to look at Kirk as he searched for her in the audience. \"I love you, too, honey!\" she called out as she waved to him. \"There she is! That's her,\" Kirk said as heads turned to look even though nearly everyone knew Aimee and that they were an item. He looked at the woman he loved then said, \"Aimee? Honey? These are for you.\" \n\nThe mostly over-50 crowd began applauding when they heard the words of an Elvis Presley song most of them knew. \"Wise men say, only fools rush in. But I can't help...falling in love with you.\" Kirk stepped down off the stage and made his way through the crowd until he was standing next to Aimee who's heart was pounding wildly. \"Like a river flows, surely to the sea. Darling so it goes, some things are meant to be. Take my hand, take my whole life, too. For I can't help, falling in love...with...you.\" He sang the final words then kissed her as the room exploded in applause and cheers. As much as they loved the first song, the place went wild when Kirk began singing, \"When a man loves a woman...\"\n\n\"Can't keep his mind of nothin' else. He'll trade the world for the good thing he's found.\" No one took their eyes off of the smiling young woman who managed the place and who hadn't stopped smiling since her boyfriend began singing to her. There was an unspoken tension building in the room, and it hit a fever pitch as Kirk closed out the loved song. \"Yes when a man loves a woman, I know exactly how he feels 'cause baby, baby, baby, you're my world.\"\n\n\"Don't leave folks,\" Kirk quickly said before closing with the refrain. When he finished the final note, no one applauded as Kirk lifted the guitar strap over his head and handed it to someone to hold. When he got down on one knee in front of Aimee it was so quiet everyone there could hear him speak. \"Aimee? I wasn't sure I'd ever love anyone again. But then I...I found you.\" \n\nAimee's hands were already up covering her mouth and trembling as tears began falling and as Kirk opened a small box which contained a huge diamond ring. \"I've had so much fun singing and playing again, but even that would have felt empty had I not met you. Aimee? You are the reason I'm happy again. And nothing would make me happier than for you to spend the rest of your life with me.\" He removed the ring, and when he did, Aimee lowered her trembling left hand and as he asked her to marry him. With tears streaming down her face, Aimee nodded, unable to speak as Kirk told her how much he loved her and slid the ring on finger. He then stood up, kissed her, and stood next to her. The applause was thunderous as tipsy customers banged tables, whistled, and hollered congratulations to the newly-engaged couple. The two of them stood there for a good twenty minutes as people filed by to shake their hands and wish them well. It took another half hour for everyone to leave and another hour to close the place. \n\nBut once they were all alone on the little sofa in her office, Kirk looked at his new fianc\u00e9 and said, \"You really are my world, honey.\" \n\nStill emotional, Aimee put her arms around the man she loved and said, \"And you, Kirk Nelson are mine.\" Kirk held her back then kissed her and told her how happy she made him and how thankful he was that he'd made the decision to try and love again. \n\n\"Me, too, honey,\" she told him before locking the door and giving him the look. \n\n\"Here? In your office?\" he asked even though he was more than ready. \n\n\"Yes. Right here,\" she said as she began unbuttoning her blouse. \"After all, I hear that when a man loves a woman, he can't keep his mind on nothin' else.\" \n\nKirk laughed then began unbuttoning his shirt and said, \"You heard right.\" \n\n***** \n\nSix years later \n\nWhen Mr. and Mrs. Kirk Nelson took their daughter, Olivia Anne, to school for the open house before her first day of Kindergarten, Kirk looked around then whispered to his beautiful, younger wife, \"I do believe I'm the oldest parent here.\" Aimee squeezed his hand and whispered back, \"You're also the most handsome.\" He gave her a look that made her laugh, and that caused their daughter to ask what was so funny. \"Nothing, sweetie. Mommy just made me feel really good. Again.\"\n\n\"Oh,\" the little girl said as her mom laughed, squeezed her husband's hand again and asked their daughter if she was ready to meet her new teacher. Kirk stood there in awe as he listened to his beautiful wife talk to their daughter's first teacher and thought back on the Cheryl Crow song that changed his life. It had been time to try and love again, and somehow he'd gotten luckier than he ever could have imagined."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/try-and-love-again"
}